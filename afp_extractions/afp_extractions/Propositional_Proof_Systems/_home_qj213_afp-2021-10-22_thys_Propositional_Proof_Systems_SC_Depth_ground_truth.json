{"file_name": "/home/qj213/afp-2021-10-22/thys/Propositional_Proof_Systems/SC_Depth.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Propositional_Proof_Systems", "problem_names": ["lemma\n  shows BotL_canonical'[intro!]: \"\\<bottom>,\\<Gamma>\\<Rightarrow>\\<Delta> \\<down> Suc n\"\n    and Ax_canonical'[intro!]: \"Atom k,\\<Gamma> \\<Rightarrow> Atom k,\\<Delta> \\<down> Suc n\"", "lemma deeper: \"\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow> \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n + m\"", "lemma deeper_suc: \"\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow> \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\"", "theorem SC_SCp_eq:\n  fixes \\<Gamma> \\<Delta> :: \"'a formula multiset\"\n  shows \"(\\<exists>n. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n) \\<longleftrightarrow> \\<Gamma> \\<Rightarrow> \\<Delta>\" (is \"?c \\<longleftrightarrow> ?p\")", "lemma no_0_SC[dest!]: \"\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> 0 \\<Longrightarrow> False\"", "lemma inR1': \"\\<Gamma> \\<Rightarrow> G, H, \\<Delta> \\<down> n \\<Longrightarrow> \\<Gamma> \\<Rightarrow> H, G, \\<Delta> \\<down> n\"", "lemma inL1': \"G, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow> H, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\"", "lemma inR2': \"\\<Gamma> \\<Rightarrow> F, G, H, \\<Delta> \\<down> n \\<Longrightarrow> \\<Gamma> \\<Rightarrow> G, H, F, \\<Delta> \\<down> n\"", "lemma inL2': \"F, G, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow> G, H, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\"", "lemma inR3': \"\\<Gamma> \\<Rightarrow> F, G, H, \\<Delta> \\<down> n \\<Longrightarrow> \\<Gamma> \\<Rightarrow> H, F, G, \\<Delta> \\<down> n\"", "lemma inR4': \"\\<Gamma> \\<Rightarrow> F, G, H, I, \\<Delta> \\<down> n \\<Longrightarrow> \\<Gamma> \\<Rightarrow> H, I, F, G, \\<Delta> \\<down> n\"", "lemma inL3': \"F, G, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow> H, F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\"", "lemma inL4': \"F, G, H, I, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow> H, I, F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\"", "lemmas SC_swap_applies[intro,elim!] = inL1' inL2' inL3' inL4' inR1' inR2' inR3' inR4'", "lemma \"Atom C \\<^bold>\\<rightarrow> Atom D \\<^bold>\\<rightarrow> Atom E,\n       Atom k \\<^bold>\\<rightarrow> Atom C \\<^bold>\\<and> Atom D, \n       Atom k, {#} \n\\<Rightarrow> {# Atom E #} \\<down> Suc (Suc (Suc (Suc (Suc 0))))\"", "lemma Bot_delR': \"\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow> \\<Gamma> \\<Rightarrow> \\<Delta>-{#\\<bottom>#} \\<down> n\"", "lemma NotL_inv': \"Not F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F,\\<Delta>  \\<down> n\"", "lemma AndL_inv': \"And F G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow> F,G,\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\"", "lemma OrL_inv': \n  assumes \"Or F G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\"\n  shows \"F,\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<and> G,\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\"", "lemma ImpL_inv': \n  assumes \"Imp F G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\"\n  shows \"\\<Gamma> \\<Rightarrow> F,\\<Delta> \\<down> n \\<and> G,\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\"", "lemma ImpR_inv':\n  assumes \"\\<Gamma> \\<Rightarrow> Imp F G,\\<Delta> \\<down> n\"\n  shows \"F,\\<Gamma> \\<Rightarrow> G,\\<Delta> \\<down> n\"", "lemma AndR_inv':\nshows \"\\<Gamma> \\<Rightarrow> And F G, \\<Delta> \\<down> n \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n \\<and> \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\"", "lemma OrR_inv': \"\\<Gamma> \\<Rightarrow> Or F G, \\<Delta> \\<down> n \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F,G,\\<Delta> \\<down> n\"", "lemma NotR_inv': \"\\<Gamma> \\<Rightarrow> Not F, \\<Delta> \\<down> n \\<Longrightarrow> F,\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\"", "lemma weakenL': \"\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow> F,\\<Gamma> \\<Rightarrow> \\<Delta>  \\<down> n\"", "lemma weakenR': \"\\<Gamma> \\<Rightarrow> \\<Delta>  \\<down> n \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F,\\<Delta>  \\<down> n\"", "lemma contract':\n  \"(F,F,\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<longrightarrow> F,\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n) \\<and> (\\<Gamma> \\<Rightarrow> F,F,\\<Delta> \\<down> n \\<longrightarrow> \\<Gamma> \\<Rightarrow> F,\\<Delta> \\<down> n)\"", "lemma Cut_Atom_depth: \"Atom k,\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow> \\<Gamma> \\<Rightarrow> Atom k,\\<Delta> \\<down> m \\<Longrightarrow> \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n + m\"", "theorem cut_bound: \"\\<Gamma> \\<Rightarrow> F,\\<Delta> \\<down> n \\<Longrightarrow> F,\\<Gamma> \\<Rightarrow> \\<Delta>  \\<down> m \\<Longrightarrow> \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> cut_bound n m F\"", "lemma cut_bound'_mono: \"a \\<le> b \\<Longrightarrow> cut_bound' a F \\<le> cut_bound' b F\"", "lemma cut_bound_mono: \"a \\<le> c \\<Longrightarrow> b \\<le> d \\<Longrightarrow> cut_bound a b F \\<le> cut_bound c d F\"", "lemma cut_bound_max: \"max n (cut_bound' (max n m) F) = cut_bound' (max n m) F\"", "lemma cut_bound_max': \"max n (cut_bound' n F) = cut_bound' n F\"", "lemma cut_bound_': \"cut_bound n m F \\<le> cut_bound' (max n m) F\"", "lemma cbnd_grow: \"(k :: nat) \\<le> cbnd k d\"", "lemma cbnd_mono: assumes \"b \\<le> d\" shows \"cbnd (a::nat) b \\<le> cbnd a d\"", "lemma cut_bound'_cbnd: \"cut_bound' n F \\<le> cbnd n (depth F)\"", "lemma \"n + ((n + m) * 2 ^ (size F - Suc 0) + \n      (n + (n + m + (n + m) * 2 ^ (size F - Suc 0))) * 2 ^ (size G - Suc 0))\n    \\<le> (n + (m :: nat)) * 2 ^ (size F + size G)\"", "lemma \"cut_bound (n :: nat) m F \\<le> (n + m) * (2 ^ (size F - 1) + 1)\"", "lemma cbnd_comm: \"cbnd (l * k::nat) n = l * cbnd (k::nat) n\"", "lemma cbnd_closed: \"cbnd (k::nat) n = k * 2 ^ (2 ^ n)\"", "theorem cut': assumes \"\\<Gamma> \\<Rightarrow> F,\\<Delta> \\<down> n\" \"F,\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\" shows \"\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n * 2 ^ (2 ^ depth F)\""], "translations": [["", "lemma\n  shows BotL_canonical'[intro!]: \"\\<bottom>,\\<Gamma>\\<Rightarrow>\\<Delta> \\<down> Suc n\"\n    and Ax_canonical'[intro!]: \"Atom k,\\<Gamma> \\<Rightarrow> Atom k,\\<Delta> \\<down> Suc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bottom>, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n &&&\n    Atom k, \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> Suc n", "by (meson SCc.intros union_single_eq_member)+"], ["", "lemma deeper: \"\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow> \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n + m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n + m", "by(induction rule: SCc.induct; insert SCc.intros; auto)"], ["", "lemma deeper_suc: \"\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow> \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "(* this version is actually required more often. It can be declared as an elim!, but I want to make its usage explicit *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "thm deeper[unfolded Suc_eq_plus1[symmetric]]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "by(drule deeper[where m=1]) simp"], ["", "text\\<open>The equivalence is obvious.\\<close>"], ["", "theorem SC_SCp_eq:\n  fixes \\<Gamma> \\<Delta> :: \"'a formula multiset\"\n  shows \"(\\<exists>n. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n) \\<longleftrightarrow> \\<Gamma> \\<Rightarrow> \\<Delta>\" (is \"?c \\<longleftrightarrow> ?p\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>n. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n) =\n    \\<Gamma> \\<Rightarrow> \\<Delta>", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>n. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> \\<Delta>\n 2. \\<Gamma> \\<Rightarrow> \\<Delta> \\<Longrightarrow>\n    \\<exists>n. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n", "assume ?c"], ["proof (state)\nthis:\n  \\<exists>n. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (2 subgoals):\n 1. \\<exists>n. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> \\<Delta>\n 2. \\<Gamma> \\<Rightarrow> \\<Delta> \\<Longrightarrow>\n    \\<exists>n. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n", "then"], ["proof (chain)\npicking this:\n  \\<exists>n. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n", "guess n"], ["proof (prove)\nusing this:\n  \\<exists>n. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (2 subgoals):\n 1. \\<exists>n. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> \\<Delta>\n 2. \\<Gamma> \\<Rightarrow> \\<Delta> \\<Longrightarrow>\n    \\<exists>n. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n", "thus ?p"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta>", "by(induction rule: SCc.induct; simp add: SCp.intros)"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> \\<Delta>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<Longrightarrow>\n    \\<exists>n. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<Longrightarrow>\n    \\<exists>n. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n", "have deeper_max: \"\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> max m n\" \"\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> max n m\" if \"\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\" for n m and \\<Gamma> \\<Delta> :: \"'a formula multiset\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> max m n &&&\n    \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> max n m", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> max m n\n 2. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> max n m", "have \"n \\<le> m \\<Longrightarrow> \\<exists>k. m = n + k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> m \\<Longrightarrow> \\<exists>k. m = n + k", "by presburger"], ["proof (state)\nthis:\n  n \\<le> m \\<Longrightarrow> \\<exists>k. m = n + k\n\ngoal (2 subgoals):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> max m n\n 2. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> max n m", "with that[THEN deeper] that"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n + ?m\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n  n \\<le> m \\<Longrightarrow> \\<exists>k. m = n + k", "show \"\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> max n m\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n + ?m\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n  n \\<le> m \\<Longrightarrow> \\<exists>k. m = n + k\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> max n m", "unfolding max_def"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n + ?m\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n  n \\<le> m \\<Longrightarrow> \\<exists>k. m = n + k\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> if n \\<le> m then m else n", "by clarsimp"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> max n m\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> max m n", "thus \"\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> max m n\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> max n m\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> max m n", "by (simp add: max.commute)"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> max m n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> max ?m ?n\n  ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> max ?n ?m\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<Longrightarrow>\n    \\<exists>n. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n", "assume ?p"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> \\<Delta>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<Longrightarrow>\n    \\<exists>n. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n", "thus ?c"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> \\<Delta>\n\ngoal (1 subgoal):\n 1. \\<exists>n. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n", "by(induction rule: SCp.induct)\n    (insert SCc.intros[where 'a='a] deeper_max; metis)+"], ["proof (state)\nthis:\n  \\<exists>n. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal:\nNo subgoals!", "qed"], ["", "(* it makes a difference whether we say Ax is 0 or any: with Ax \\<down> 0 we could not prove the deepening rules.\n   Also, it is important to allow only atoms in Ax, otherwise the inv-rules are not depth preserving.\n  Making Ax/BotL start from \\<ge>1 saves proving the base-cases twice\n *)"], ["", "lemma no_0_SC[dest!]: \"\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> 0 \\<Longrightarrow> False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> 0 \\<Longrightarrow> False", "by(cases rule: SCc.cases[of \\<Gamma> \\<Delta> 0]) assumption"], ["", "lemma inR1': \"\\<Gamma> \\<Rightarrow> G, H, \\<Delta> \\<down> n \\<Longrightarrow> \\<Gamma> \\<Rightarrow> H, G, \\<Delta> \\<down> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> G, H, \\<Delta> \\<down> n \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> H, G, \\<Delta> \\<down> n", "by(simp add: add_mset_commute)"], ["", "lemma inL1': \"G, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow> H, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow>\n    H, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n", "by(simp add: add_mset_commute)"], ["", "lemma inR2': \"\\<Gamma> \\<Rightarrow> F, G, H, \\<Delta> \\<down> n \\<Longrightarrow> \\<Gamma> \\<Rightarrow> G, H, F, \\<Delta> \\<down> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, G, H, \\<Delta> \\<down> n \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> G, H, F, \\<Delta> \\<down> n", "by(simp add: add_mset_commute)"], ["", "lemma inL2': \"F, G, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow> G, H, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F, G, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow>\n    G, H, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n", "by(simp add: add_mset_commute)"], ["", "lemma inR3': \"\\<Gamma> \\<Rightarrow> F, G, H, \\<Delta> \\<down> n \\<Longrightarrow> \\<Gamma> \\<Rightarrow> H, F, G, \\<Delta> \\<down> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, G, H, \\<Delta> \\<down> n \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> H, F, G, \\<Delta> \\<down> n", "by(simp add: add_mset_commute)"], ["", "lemma inR4': \"\\<Gamma> \\<Rightarrow> F, G, H, I, \\<Delta> \\<down> n \\<Longrightarrow> \\<Gamma> \\<Rightarrow> H, I, F, G, \\<Delta> \\<down> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, G, H, I, \\<Delta> \\<down> n \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> H, I, F, G, \\<Delta> \\<down> n", "by(simp add: add_mset_commute)"], ["", "lemma inL3': \"F, G, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow> H, F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F, G, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow>\n    H, F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n", "by(simp add: add_mset_commute)"], ["", "lemma inL4': \"F, G, H, I, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow> H, I, F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F, G, H, I, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow>\n    H, I, F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n", "by(simp add: add_mset_commute)"], ["", "lemmas SC_swap_applies[intro,elim!] = inL1' inL2' inL3' inL4' inR1' inR2' inR3' inR4'"], ["", "(* these are here because they can be used for more careful reasoning with intro *)"], ["", "lemma \"Atom C \\<^bold>\\<rightarrow> Atom D \\<^bold>\\<rightarrow> Atom E,\n       Atom k \\<^bold>\\<rightarrow> Atom C \\<^bold>\\<and> Atom D, \n       Atom k, {#} \n\\<Rightarrow> {# Atom E #} \\<down> Suc (Suc (Suc (Suc (Suc 0))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Atom C \\<^bold>\\<rightarrow>\n    Atom D \\<^bold>\\<rightarrow>\n    Atom\n     E, Atom k \\<^bold>\\<rightarrow>\n        Atom C \\<^bold>\\<and> Atom D, Atom k, {#} \\<Rightarrow>\n    Atom E, {#} \\<down> Suc (Suc (Suc (Suc (Suc 0))))", "by(auto intro!: SCc.intros(3-) intro: SCc.intros(1,2))"], ["", "lemma Bot_delR': \"\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow> \\<Gamma> \\<Rightarrow> \\<Delta>-{#\\<bottom>#} \\<down> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> \\<Delta> - (\\<bottom>, {#}) \\<down> n", "proof(induction rule: SCc.induct)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>\\<Gamma> \\<Delta> n.\n       \\<bottom> \\<in># \\<Gamma> \\<Longrightarrow>\n       \\<Gamma> \\<Rightarrow> \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 2. \\<And>k \\<Gamma> \\<Delta> n.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>; Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 3. \\<And>\\<Gamma> F \\<Delta> n.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 4. \\<And>F \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (\\<^bold>\\<not> F, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 5. \\<And>F G \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 6. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<and> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 7. \\<And>F \\<Gamma> \\<Delta> n G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 8. \\<And>\\<Gamma> F G \\<Delta> n.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (F, G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<or> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 9. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 10. \\<And>F \\<Gamma> G \\<Delta> n.\n        \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n         F, \\<Gamma> \\<Rightarrow>\n         (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                          (F \\<^bold>\\<rightarrow> G, \\<Delta>) -\n                          (\\<bottom>, {#}) \\<down> Suc n", "case BotL"], ["proof (state)\nthis:\n  \\<bottom> \\<in># \\<Gamma>_\n\ngoal (10 subgoals):\n 1. \\<And>\\<Gamma> \\<Delta> n.\n       \\<bottom> \\<in># \\<Gamma> \\<Longrightarrow>\n       \\<Gamma> \\<Rightarrow> \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 2. \\<And>k \\<Gamma> \\<Delta> n.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>; Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 3. \\<And>\\<Gamma> F \\<Delta> n.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 4. \\<And>F \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (\\<^bold>\\<not> F, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 5. \\<And>F G \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 6. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<and> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 7. \\<And>F \\<Gamma> \\<Delta> n G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 8. \\<And>\\<Gamma> F G \\<Delta> n.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (F, G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<or> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 9. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 10. \\<And>F \\<Gamma> G \\<Delta> n.\n        \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n         F, \\<Gamma> \\<Rightarrow>\n         (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                          (F \\<^bold>\\<rightarrow> G, \\<Delta>) -\n                          (\\<bottom>, {#}) \\<down> Suc n", "thus ?case"], ["proof (prove)\nusing this:\n  \\<bottom> \\<in># \\<Gamma>_\n\ngoal (1 subgoal):\n 1. \\<Gamma>_ \\<Rightarrow> \\<Delta>_ - (\\<bottom>, {#}) \\<down> Suc n_", "by(rule SCc.BotL; simp)"], ["proof (state)\nthis:\n  \\<Gamma>_ \\<Rightarrow> \\<Delta>_ - (\\<bottom>, {#}) \\<down> Suc n_\n\ngoal (9 subgoals):\n 1. \\<And>k \\<Gamma> \\<Delta> n.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>; Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 2. \\<And>\\<Gamma> F \\<Delta> n.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 3. \\<And>F \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (\\<^bold>\\<not> F, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 4. \\<And>F G \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 5. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<and> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 6. \\<And>F \\<Gamma> \\<Delta> n G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 7. \\<And>\\<Gamma> F G \\<Delta> n.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (F, G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<or> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 8. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 9. \\<And>F \\<Gamma> G \\<Delta> n.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<rightarrow> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n", "(* SC.BotL refers to SC.SCp.BotL. Even more interestingly, there used to be a SCc.SC.BotL (which was not reffered to). I'll just leave this here and see how long till someone breaks it. *)"], ["proof (state)\nthis:\n  \\<Gamma>_ \\<Rightarrow> \\<Delta>_ - (\\<bottom>, {#}) \\<down> Suc n_\n\ngoal (9 subgoals):\n 1. \\<And>k \\<Gamma> \\<Delta> n.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>; Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 2. \\<And>\\<Gamma> F \\<Delta> n.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 3. \\<And>F \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (\\<^bold>\\<not> F, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 4. \\<And>F G \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 5. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<and> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 6. \\<And>F \\<Gamma> \\<Delta> n G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 7. \\<And>\\<Gamma> F G \\<Delta> n.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (F, G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<or> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 8. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 9. \\<And>F \\<Gamma> G \\<Delta> n.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<rightarrow> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>k \\<Gamma> \\<Delta> n.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>; Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 2. \\<And>\\<Gamma> F \\<Delta> n.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 3. \\<And>F \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (\\<^bold>\\<not> F, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 4. \\<And>F G \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 5. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<and> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 6. \\<And>F \\<Gamma> \\<Delta> n G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 7. \\<And>\\<Gamma> F G \\<Delta> n.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (F, G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<or> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 8. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 9. \\<And>F \\<Gamma> G \\<Delta> n.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<rightarrow> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n", "case (Ax k)"], ["proof (state)\nthis:\n  Atom k \\<in># \\<Gamma>_\n  Atom k \\<in># \\<Delta>_\n\ngoal (9 subgoals):\n 1. \\<And>k \\<Gamma> \\<Delta> n.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>; Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 2. \\<And>\\<Gamma> F \\<Delta> n.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 3. \\<And>F \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (\\<^bold>\\<not> F, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 4. \\<And>F G \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 5. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<and> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 6. \\<And>F \\<Gamma> \\<Delta> n G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 7. \\<And>\\<Gamma> F G \\<Delta> n.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (F, G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<or> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 8. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 9. \\<And>F \\<Gamma> G \\<Delta> n.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<rightarrow> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n", "thus ?case"], ["proof (prove)\nusing this:\n  Atom k \\<in># \\<Gamma>_\n  Atom k \\<in># \\<Delta>_\n\ngoal (1 subgoal):\n 1. \\<Gamma>_ \\<Rightarrow> \\<Delta>_ - (\\<bottom>, {#}) \\<down> Suc n_", "by(intro SCc.Ax[of k]; simp; metis diff_single_trivial formula.distinct(1) insert_DiffM lem1)"], ["proof (state)\nthis:\n  \\<Gamma>_ \\<Rightarrow> \\<Delta>_ - (\\<bottom>, {#}) \\<down> Suc n_\n\ngoal (8 subgoals):\n 1. \\<And>\\<Gamma> F \\<Delta> n.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 2. \\<And>F \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (\\<^bold>\\<not> F, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 3. \\<And>F G \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 4. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<and> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 5. \\<And>F \\<Gamma> \\<Delta> n G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 6. \\<And>\\<Gamma> F G \\<Delta> n.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (F, G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<or> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 7. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 8. \\<And>F \\<Gamma> G \\<Delta> n.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<rightarrow> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>\\<Gamma> F \\<Delta> n.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 2. \\<And>F \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (\\<^bold>\\<not> F, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 3. \\<And>F G \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 4. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<and> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 5. \\<And>F \\<Gamma> \\<Delta> n G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 6. \\<And>\\<Gamma> F G \\<Delta> n.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (F, G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<or> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 7. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 8. \\<And>F \\<Gamma> G \\<Delta> n.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<rightarrow> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n", "case NotL"], ["proof (state)\nthis:\n  \\<Gamma>_ \\<Rightarrow> F_, \\<Delta>_ \\<down> n_\n  \\<Gamma>_ \\<Rightarrow> (F_, \\<Delta>_) - (\\<bottom>, {#}) \\<down> n_\n\ngoal (8 subgoals):\n 1. \\<And>\\<Gamma> F \\<Delta> n.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 2. \\<And>F \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (\\<^bold>\\<not> F, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 3. \\<And>F G \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 4. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<and> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 5. \\<And>F \\<Gamma> \\<Delta> n G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 6. \\<And>\\<Gamma> F G \\<Delta> n.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (F, G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<or> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 7. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 8. \\<And>F \\<Gamma> G \\<Delta> n.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<rightarrow> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>_ \\<Rightarrow> F_, \\<Delta>_ \\<down> n_\n  \\<Gamma>_ \\<Rightarrow> (F_, \\<Delta>_) - (\\<bottom>, {#}) \\<down> n_\n\ngoal (1 subgoal):\n 1. \\<^bold>\\<not> F_, \\<Gamma>_ \\<Rightarrow>\n    \\<Delta>_ - (\\<bottom>, {#}) \\<down> Suc n_", "using SCc.NotL"], ["proof (prove)\nusing this:\n  \\<Gamma>_ \\<Rightarrow> F_, \\<Delta>_ \\<down> n_\n  \\<Gamma>_ \\<Rightarrow> (F_, \\<Delta>_) - (\\<bottom>, {#}) \\<down> n_\n  ?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  \\<^bold>\\<not> ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> Suc ?n\n\ngoal (1 subgoal):\n 1. \\<^bold>\\<not> F_, \\<Gamma>_ \\<Rightarrow>\n    \\<Delta>_ - (\\<bottom>, {#}) \\<down> Suc n_", "by (metis add_mset_remove_trivial diff_single_trivial diff_union_swap insert_DiffM)"], ["proof (state)\nthis:\n  \\<^bold>\\<not> F_, \\<Gamma>_ \\<Rightarrow>\n  \\<Delta>_ - (\\<bottom>, {#}) \\<down> Suc n_\n\ngoal (7 subgoals):\n 1. \\<And>F \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (\\<^bold>\\<not> F, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 2. \\<And>F G \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 3. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<and> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 4. \\<And>F \\<Gamma> \\<Delta> n G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 5. \\<And>\\<Gamma> F G \\<Delta> n.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (F, G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<or> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 6. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 7. \\<And>F \\<Gamma> G \\<Delta> n.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<rightarrow> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>F \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (\\<^bold>\\<not> F, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 2. \\<And>F G \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 3. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<and> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 4. \\<And>F \\<Gamma> \\<Delta> n G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 5. \\<And>\\<Gamma> F G \\<Delta> n.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (F, G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<or> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 6. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 7. \\<And>F \\<Gamma> G \\<Delta> n.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<rightarrow> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n", "case NotR"], ["proof (state)\nthis:\n  F_, \\<Gamma>_ \\<Rightarrow> \\<Delta>_ \\<down> n_\n  F_, \\<Gamma>_ \\<Rightarrow> \\<Delta>_ - (\\<bottom>, {#}) \\<down> n_\n\ngoal (7 subgoals):\n 1. \\<And>F \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (\\<^bold>\\<not> F, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 2. \\<And>F G \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 3. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<and> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 4. \\<And>F \\<Gamma> \\<Delta> n G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 5. \\<And>\\<Gamma> F G \\<Delta> n.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (F, G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<or> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 6. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 7. \\<And>F \\<Gamma> G \\<Delta> n.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<rightarrow> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n", "thus ?case"], ["proof (prove)\nusing this:\n  F_, \\<Gamma>_ \\<Rightarrow> \\<Delta>_ \\<down> n_\n  F_, \\<Gamma>_ \\<Rightarrow> \\<Delta>_ - (\\<bottom>, {#}) \\<down> n_\n\ngoal (1 subgoal):\n 1. \\<Gamma>_ \\<Rightarrow>\n    (\\<^bold>\\<not> F_, \\<Delta>_) - (\\<bottom>, {#}) \\<down> Suc n_", "using SCc.NotR"], ["proof (prove)\nusing this:\n  F_, \\<Gamma>_ \\<Rightarrow> \\<Delta>_ \\<down> n_\n  F_, \\<Gamma>_ \\<Rightarrow> \\<Delta>_ - (\\<bottom>, {#}) \\<down> n_\n  ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> \\<^bold>\\<not> ?F, ?\\<Delta> \\<down> Suc ?n\n\ngoal (1 subgoal):\n 1. \\<Gamma>_ \\<Rightarrow>\n    (\\<^bold>\\<not> F_, \\<Delta>_) - (\\<bottom>, {#}) \\<down> Suc n_", "by (metis diff_union_swap formula.distinct(11))"], ["proof (state)\nthis:\n  \\<Gamma>_ \\<Rightarrow>\n  (\\<^bold>\\<not> F_, \\<Delta>_) - (\\<bottom>, {#}) \\<down> Suc n_\n\ngoal (6 subgoals):\n 1. \\<And>F G \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 2. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<and> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 3. \\<And>F \\<Gamma> \\<Delta> n G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 4. \\<And>\\<Gamma> F G \\<Delta> n.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (F, G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<or> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 5. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 6. \\<And>F \\<Gamma> G \\<Delta> n.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<rightarrow> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>F G \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 2. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<and> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 3. \\<And>F \\<Gamma> \\<Delta> n G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 4. \\<And>\\<Gamma> F G \\<Delta> n.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (F, G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<or> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 5. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 6. \\<And>F \\<Gamma> G \\<Delta> n.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<rightarrow> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n", "case AndR"], ["proof (state)\nthis:\n  \\<Gamma>_ \\<Rightarrow> F_, \\<Delta>_ \\<down> n_\n  \\<Gamma>_ \\<Rightarrow> G_, \\<Delta>_ \\<down> n_\n  \\<Gamma>_ \\<Rightarrow> (F_, \\<Delta>_) - (\\<bottom>, {#}) \\<down> n_\n  \\<Gamma>_ \\<Rightarrow> (G_, \\<Delta>_) - (\\<bottom>, {#}) \\<down> n_\n\ngoal (6 subgoals):\n 1. \\<And>F G \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 2. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<and> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 3. \\<And>F \\<Gamma> \\<Delta> n G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 4. \\<And>\\<Gamma> F G \\<Delta> n.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (F, G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<or> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 5. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 6. \\<And>F \\<Gamma> G \\<Delta> n.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<rightarrow> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>_ \\<Rightarrow> F_, \\<Delta>_ \\<down> n_\n  \\<Gamma>_ \\<Rightarrow> G_, \\<Delta>_ \\<down> n_\n  \\<Gamma>_ \\<Rightarrow> (F_, \\<Delta>_) - (\\<bottom>, {#}) \\<down> n_\n  \\<Gamma>_ \\<Rightarrow> (G_, \\<Delta>_) - (\\<bottom>, {#}) \\<down> n_\n\ngoal (1 subgoal):\n 1. \\<Gamma>_ \\<Rightarrow>\n    (F_ \\<^bold>\\<and> G_, \\<Delta>_) - (\\<bottom>, {#}) \\<down> Suc n_", "using SCc.AndR"], ["proof (prove)\nusing this:\n  \\<Gamma>_ \\<Rightarrow> F_, \\<Delta>_ \\<down> n_\n  \\<Gamma>_ \\<Rightarrow> G_, \\<Delta>_ \\<down> n_\n  \\<Gamma>_ \\<Rightarrow> (F_, \\<Delta>_) - (\\<bottom>, {#}) \\<down> n_\n  \\<Gamma>_ \\<Rightarrow> (G_, \\<Delta>_) - (\\<bottom>, {#}) \\<down> n_\n  \\<lbrakk>?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> ?n;\n   ?\\<Gamma> \\<Rightarrow> ?G, ?\\<Delta> \\<down> ?n\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow>\n                    ?F \\<^bold>\\<and> ?G, ?\\<Delta> \\<down> Suc ?n\n\ngoal (1 subgoal):\n 1. \\<Gamma>_ \\<Rightarrow>\n    (F_ \\<^bold>\\<and> G_, \\<Delta>_) - (\\<bottom>, {#}) \\<down> Suc n_", "by (metis diff_single_trivial diff_union_swap diff_union_swap2 formula.distinct(13))"], ["proof (state)\nthis:\n  \\<Gamma>_ \\<Rightarrow>\n  (F_ \\<^bold>\\<and> G_, \\<Delta>_) - (\\<bottom>, {#}) \\<down> Suc n_\n\ngoal (5 subgoals):\n 1. \\<And>F G \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 2. \\<And>F \\<Gamma> \\<Delta> n G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 3. \\<And>\\<Gamma> F G \\<Delta> n.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (F, G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<or> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 4. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 5. \\<And>F \\<Gamma> G \\<Delta> n.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<rightarrow> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>F G \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 2. \\<And>F \\<Gamma> \\<Delta> n G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 3. \\<And>\\<Gamma> F G \\<Delta> n.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (F, G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<or> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 4. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 5. \\<And>F \\<Gamma> G \\<Delta> n.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<rightarrow> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n", "case OrR"], ["proof (state)\nthis:\n  \\<Gamma>_ \\<Rightarrow> F_, G_, \\<Delta>_ \\<down> n_\n  \\<Gamma>_ \\<Rightarrow> (F_, G_, \\<Delta>_) - (\\<bottom>, {#}) \\<down> n_\n\ngoal (5 subgoals):\n 1. \\<And>F G \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 2. \\<And>F \\<Gamma> \\<Delta> n G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 3. \\<And>\\<Gamma> F G \\<Delta> n.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow>\n        (F, G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<or> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n\n 4. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 5. \\<And>F \\<Gamma> G \\<Delta> n.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<rightarrow> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>_ \\<Rightarrow> F_, G_, \\<Delta>_ \\<down> n_\n  \\<Gamma>_ \\<Rightarrow> (F_, G_, \\<Delta>_) - (\\<bottom>, {#}) \\<down> n_\n\ngoal (1 subgoal):\n 1. \\<Gamma>_ \\<Rightarrow>\n    (F_ \\<^bold>\\<or> G_, \\<Delta>_) - (\\<bottom>, {#}) \\<down> Suc n_", "using SCc.OrR"], ["proof (prove)\nusing this:\n  \\<Gamma>_ \\<Rightarrow> F_, G_, \\<Delta>_ \\<down> n_\n  \\<Gamma>_ \\<Rightarrow> (F_, G_, \\<Delta>_) - (\\<bottom>, {#}) \\<down> n_\n  ?\\<Gamma> \\<Rightarrow> ?F, ?G, ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?F \\<^bold>\\<or> ?G, ?\\<Delta> \\<down> Suc ?n\n\ngoal (1 subgoal):\n 1. \\<Gamma>_ \\<Rightarrow>\n    (F_ \\<^bold>\\<or> G_, \\<Delta>_) - (\\<bottom>, {#}) \\<down> Suc n_", "by (metis diff_single_trivial diff_union_swap2 formula.distinct(15) insert_iff set_mset_add_mset_insert)"], ["proof (state)\nthis:\n  \\<Gamma>_ \\<Rightarrow>\n  (F_ \\<^bold>\\<or> G_, \\<Delta>_) - (\\<bottom>, {#}) \\<down> Suc n_\n\ngoal (4 subgoals):\n 1. \\<And>F G \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 2. \\<And>F \\<Gamma> \\<Delta> n G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 3. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 4. \\<And>F \\<Gamma> G \\<Delta> n.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<rightarrow> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>F G \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 2. \\<And>F \\<Gamma> \\<Delta> n G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 3. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 4. \\<And>F \\<Gamma> G \\<Delta> n.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<rightarrow> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n", "case ImpL"], ["proof (state)\nthis:\n  \\<Gamma>_ \\<Rightarrow> F_, \\<Delta>_ \\<down> n_\n  G_, \\<Gamma>_ \\<Rightarrow> \\<Delta>_ \\<down> n_\n  \\<Gamma>_ \\<Rightarrow> (F_, \\<Delta>_) - (\\<bottom>, {#}) \\<down> n_\n  G_, \\<Gamma>_ \\<Rightarrow> \\<Delta>_ - (\\<bottom>, {#}) \\<down> n_\n\ngoal (4 subgoals):\n 1. \\<And>F G \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 2. \\<And>F \\<Gamma> \\<Delta> n G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 3. \\<And>\\<Gamma> F \\<Delta> n G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> (F, \\<Delta>) - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 4. \\<And>F \\<Gamma> G \\<Delta> n.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<rightarrow> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>_ \\<Rightarrow> F_, \\<Delta>_ \\<down> n_\n  G_, \\<Gamma>_ \\<Rightarrow> \\<Delta>_ \\<down> n_\n  \\<Gamma>_ \\<Rightarrow> (F_, \\<Delta>_) - (\\<bottom>, {#}) \\<down> n_\n  G_, \\<Gamma>_ \\<Rightarrow> \\<Delta>_ - (\\<bottom>, {#}) \\<down> n_\n\ngoal (1 subgoal):\n 1. F_ \\<^bold>\\<rightarrow> G_, \\<Gamma>_ \\<Rightarrow>\n    \\<Delta>_ - (\\<bottom>, {#}) \\<down> Suc n_", "using SCc.ImpL"], ["proof (prove)\nusing this:\n  \\<Gamma>_ \\<Rightarrow> F_, \\<Delta>_ \\<down> n_\n  G_, \\<Gamma>_ \\<Rightarrow> \\<Delta>_ \\<down> n_\n  \\<Gamma>_ \\<Rightarrow> (F_, \\<Delta>_) - (\\<bottom>, {#}) \\<down> n_\n  G_, \\<Gamma>_ \\<Rightarrow> \\<Delta>_ - (\\<bottom>, {#}) \\<down> n_\n  \\<lbrakk>?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> ?n;\n   ?G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n\\<rbrakk>\n  \\<Longrightarrow> ?F \\<^bold>\\<rightarrow> ?G, ?\\<Gamma> \\<Rightarrow>\n                    ?\\<Delta> \\<down> Suc ?n\n\ngoal (1 subgoal):\n 1. F_ \\<^bold>\\<rightarrow> G_, \\<Gamma>_ \\<Rightarrow>\n    \\<Delta>_ - (\\<bottom>, {#}) \\<down> Suc n_", "by (metis diff_single_trivial diff_union_swap2)"], ["proof (state)\nthis:\n  F_ \\<^bold>\\<rightarrow> G_, \\<Gamma>_ \\<Rightarrow>\n  \\<Delta>_ - (\\<bottom>, {#}) \\<down> Suc n_\n\ngoal (3 subgoals):\n 1. \\<And>F G \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 2. \\<And>F \\<Gamma> \\<Delta> n G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 3. \\<And>F \\<Gamma> G \\<Delta> n.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<rightarrow> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>F G \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 2. \\<And>F \\<Gamma> \\<Delta> n G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 3. \\<And>F \\<Gamma> G \\<Delta> n.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<rightarrow> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n", "case ImpR"], ["proof (state)\nthis:\n  F_, \\<Gamma>_ \\<Rightarrow> G_, \\<Delta>_ \\<down> n_\n  F_, \\<Gamma>_ \\<Rightarrow> (G_, \\<Delta>_) - (\\<bottom>, {#}) \\<down> n_\n\ngoal (3 subgoals):\n 1. \\<And>F G \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 2. \\<And>F \\<Gamma> \\<Delta> n G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 3. \\<And>F \\<Gamma> G \\<Delta> n.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow>\n        (G, \\<Delta>) - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         (F \\<^bold>\\<rightarrow> G, \\<Delta>) -\n                         (\\<bottom>, {#}) \\<down> Suc n", "thus ?case"], ["proof (prove)\nusing this:\n  F_, \\<Gamma>_ \\<Rightarrow> G_, \\<Delta>_ \\<down> n_\n  F_, \\<Gamma>_ \\<Rightarrow> (G_, \\<Delta>_) - (\\<bottom>, {#}) \\<down> n_\n\ngoal (1 subgoal):\n 1. \\<Gamma>_ \\<Rightarrow>\n    (F_ \\<^bold>\\<rightarrow> G_, \\<Delta>_) -\n    (\\<bottom>, {#}) \\<down> Suc n_", "using SCc.ImpR"], ["proof (prove)\nusing this:\n  F_, \\<Gamma>_ \\<Rightarrow> G_, \\<Delta>_ \\<down> n_\n  F_, \\<Gamma>_ \\<Rightarrow> (G_, \\<Delta>_) - (\\<bottom>, {#}) \\<down> n_\n  ?F, ?\\<Gamma> \\<Rightarrow> ?G, ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow>\n  ?F \\<^bold>\\<rightarrow> ?G, ?\\<Delta> \\<down> Suc ?n\n\ngoal (1 subgoal):\n 1. \\<Gamma>_ \\<Rightarrow>\n    (F_ \\<^bold>\\<rightarrow> G_, \\<Delta>_) -\n    (\\<bottom>, {#}) \\<down> Suc n_", "by (metis diff_single_trivial diff_union_swap diff_union_swap2 formula.distinct(17))"], ["proof (state)\nthis:\n  \\<Gamma>_ \\<Rightarrow>\n  (F_ \\<^bold>\\<rightarrow> G_, \\<Delta>_) - (\\<bottom>, {#}) \\<down> Suc n_\n\ngoal (2 subgoals):\n 1. \\<And>F G \\<Gamma> \\<Delta> n.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n\n 2. \\<And>F \\<Gamma> \\<Delta> n G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> - (\\<bottom>, {#}) \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow>\n        \\<Delta> - (\\<bottom>, {#}) \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> - (\\<bottom>, {#}) \\<down> Suc n", "qed (simp_all add: SCc.intros)"], ["", "lemma NotL_inv': \"Not F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F,\\<Delta>  \\<down> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\n    \\<Delta> \\<down> n \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n", "proof(induction \"Not F, \\<Gamma>\" \\<Delta> n arbitrary: \\<Gamma> rule: SCc.induct)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>\\<Delta> n \\<Gamma>.\n       \\<bottom> \\<in># \\<^bold>\\<not> F, \\<Gamma> \\<Longrightarrow>\n       \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<And>k \\<Delta> n \\<Gamma>.\n       \\<lbrakk>Atom k \\<in># \\<^bold>\\<not> F, \\<Gamma>;\n        Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> Fa \\<Delta> n \\<Gamma>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           \\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, Fa, \\<Delta> \\<down> n;\n        \\<^bold>\\<not> Fa, \\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 4. \\<And>Fa \\<Delta> n \\<Gamma>.\n       \\<lbrakk>Fa, \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\n                \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, \\<^bold>\\<not> F, \\<Gamma> =\n           \\<^bold>\\<not> F, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, \\<^bold>\\<not> Fa, \\<Delta> \\<down> Suc n\n 5. \\<And>Fa G \\<Gamma> \\<Delta> n \\<Gamma>'.\n       \\<lbrakk>Fa, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, G, \\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> n;\n        Fa \\<^bold>\\<and> G, \\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 6. \\<And>Fa \\<Delta> n G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\n                Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           \\<^bold>\\<not> F, \\<Gamma> =\n           \\<^bold>\\<not> F, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, Fa, \\<Delta> \\<down> n;\n        \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           \\<^bold>\\<not> F, \\<Gamma> =\n           \\<^bold>\\<not> F, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, Fa \\<^bold>\\<and> G, \\<Delta> \\<down> Suc n\n 7. \\<And>Fa \\<Gamma> \\<Delta> n G \\<Gamma>'.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, \\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           G, \\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> n;\n        Fa \\<^bold>\\<or> G, \\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 8. \\<And>Fa G \\<Delta> n \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\n                Fa, G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           \\<^bold>\\<not> F, \\<Gamma> =\n           \\<^bold>\\<not> F, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, Fa, G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, Fa \\<^bold>\\<or> G, \\<Delta> \\<down> Suc n\n 9. \\<And>\\<Gamma> Fa \\<Delta> n G \\<Gamma>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           \\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, Fa, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           G, \\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> n;\n        Fa \\<^bold>\\<rightarrow> G, \\<Gamma> =\n        \\<^bold>\\<not> F, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 10. \\<And>Fa G \\<Delta> n \\<Gamma>.\n        \\<lbrakk>Fa, \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\n                 G, \\<Delta> \\<down> n;\n         \\<And>\\<Gamma>'.\n            Fa, \\<^bold>\\<not> F, \\<Gamma> =\n            \\<^bold>\\<not> F, \\<Gamma>' \\<Longrightarrow>\n            \\<Gamma>' \\<Rightarrow> F, G, \\<Delta> \\<down> n\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                          F, Fa \\<^bold>\\<rightarrow>\n                             G, \\<Delta> \\<down> Suc n", "case (NotL \\<Gamma>' G \\<Delta> n)"], ["proof (state)\nthis:\n  \\<Gamma>' \\<Rightarrow> G, \\<Delta> \\<down> n\n  \\<Gamma>' = \\<^bold>\\<not> F, ?\\<Gamma> \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n\n  \\<^bold>\\<not> G, \\<Gamma>' = \\<^bold>\\<not> F, \\<Gamma>\n\ngoal (10 subgoals):\n 1. \\<And>\\<Delta> n \\<Gamma>.\n       \\<bottom> \\<in># \\<^bold>\\<not> F, \\<Gamma> \\<Longrightarrow>\n       \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<And>k \\<Delta> n \\<Gamma>.\n       \\<lbrakk>Atom k \\<in># \\<^bold>\\<not> F, \\<Gamma>;\n        Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> Fa \\<Delta> n \\<Gamma>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           \\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, Fa, \\<Delta> \\<down> n;\n        \\<^bold>\\<not> Fa, \\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 4. \\<And>Fa \\<Delta> n \\<Gamma>.\n       \\<lbrakk>Fa, \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\n                \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, \\<^bold>\\<not> F, \\<Gamma> =\n           \\<^bold>\\<not> F, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, \\<^bold>\\<not> Fa, \\<Delta> \\<down> Suc n\n 5. \\<And>Fa G \\<Gamma> \\<Delta> n \\<Gamma>'.\n       \\<lbrakk>Fa, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, G, \\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> n;\n        Fa \\<^bold>\\<and> G, \\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 6. \\<And>Fa \\<Delta> n G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\n                Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           \\<^bold>\\<not> F, \\<Gamma> =\n           \\<^bold>\\<not> F, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, Fa, \\<Delta> \\<down> n;\n        \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           \\<^bold>\\<not> F, \\<Gamma> =\n           \\<^bold>\\<not> F, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, Fa \\<^bold>\\<and> G, \\<Delta> \\<down> Suc n\n 7. \\<And>Fa \\<Gamma> \\<Delta> n G \\<Gamma>'.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, \\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           G, \\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> n;\n        Fa \\<^bold>\\<or> G, \\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 8. \\<And>Fa G \\<Delta> n \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\n                Fa, G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           \\<^bold>\\<not> F, \\<Gamma> =\n           \\<^bold>\\<not> F, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, Fa, G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, Fa \\<^bold>\\<or> G, \\<Delta> \\<down> Suc n\n 9. \\<And>\\<Gamma> Fa \\<Delta> n G \\<Gamma>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           \\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, Fa, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           G, \\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> n;\n        Fa \\<^bold>\\<rightarrow> G, \\<Gamma> =\n        \\<^bold>\\<not> F, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 10. \\<And>Fa G \\<Delta> n \\<Gamma>.\n        \\<lbrakk>Fa, \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\n                 G, \\<Delta> \\<down> n;\n         \\<And>\\<Gamma>'.\n            Fa, \\<^bold>\\<not> F, \\<Gamma> =\n            \\<^bold>\\<not> F, \\<Gamma>' \\<Longrightarrow>\n            \\<Gamma>' \\<Rightarrow> F, G, \\<Delta> \\<down> n\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                          F, Fa \\<^bold>\\<rightarrow>\n                             G, \\<Delta> \\<down> Suc n", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>' \\<Rightarrow> G, \\<Delta> \\<down> n\n  \\<Gamma>' = \\<^bold>\\<not> F, ?\\<Gamma> \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n\n  \\<^bold>\\<not> G, \\<Gamma>' = \\<^bold>\\<not> F, \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "by(cases \"Not F = Not G\")\n    (auto intro!: SCc.intros(3-) dest!: multi_member_split simp: lem1 lem2 deeper_suc)"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n\ngoal (9 subgoals):\n 1. \\<And>\\<Delta> n \\<Gamma>.\n       \\<bottom> \\<in># \\<^bold>\\<not> F, \\<Gamma> \\<Longrightarrow>\n       \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<And>k \\<Delta> n \\<Gamma>.\n       \\<lbrakk>Atom k \\<in># \\<^bold>\\<not> F, \\<Gamma>;\n        Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 3. \\<And>Fa \\<Delta> n \\<Gamma>.\n       \\<lbrakk>Fa, \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\n                \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, \\<^bold>\\<not> F, \\<Gamma> =\n           \\<^bold>\\<not> F, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, \\<^bold>\\<not> Fa, \\<Delta> \\<down> Suc n\n 4. \\<And>Fa G \\<Gamma> \\<Delta> n \\<Gamma>'.\n       \\<lbrakk>Fa, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, G, \\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> n;\n        Fa \\<^bold>\\<and> G, \\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 5. \\<And>Fa \\<Delta> n G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\n                Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           \\<^bold>\\<not> F, \\<Gamma> =\n           \\<^bold>\\<not> F, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, Fa, \\<Delta> \\<down> n;\n        \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           \\<^bold>\\<not> F, \\<Gamma> =\n           \\<^bold>\\<not> F, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, Fa \\<^bold>\\<and> G, \\<Delta> \\<down> Suc n\n 6. \\<And>Fa \\<Gamma> \\<Delta> n G \\<Gamma>'.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, \\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           G, \\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> n;\n        Fa \\<^bold>\\<or> G, \\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 7. \\<And>Fa G \\<Delta> n \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\n                Fa, G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           \\<^bold>\\<not> F, \\<Gamma> =\n           \\<^bold>\\<not> F, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, Fa, G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, Fa \\<^bold>\\<or> G, \\<Delta> \\<down> Suc n\n 8. \\<And>\\<Gamma> Fa \\<Delta> n G \\<Gamma>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           \\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, Fa, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           G, \\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> n;\n        Fa \\<^bold>\\<rightarrow> G, \\<Gamma> =\n        \\<^bold>\\<not> F, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 9. \\<And>Fa G \\<Delta> n \\<Gamma>.\n       \\<lbrakk>Fa, \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\n                G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, \\<^bold>\\<not> F, \\<Gamma> =\n           \\<^bold>\\<not> F, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, Fa \\<^bold>\\<rightarrow>\n                            G, \\<Delta> \\<down> Suc n", "qed (auto intro!: SCc.intros(3-) dest!: multi_member_split simp: SCp.intros lem1 lem2)"], ["", "lemma AndL_inv': \"And F G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow> F,G,\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n    \\<Delta> \\<down> n \\<Longrightarrow>\n    F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n", "proof(induction \"And F G, \\<Gamma>\" \\<Delta> n arbitrary: \\<Gamma> rule: SCc.induct)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>\\<Delta> n \\<Gamma>.\n       \\<bottom> \\<in># F \\<^bold>\\<and> G, \\<Gamma> \\<Longrightarrow>\n       F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<And>k \\<Delta> n \\<Gamma>.\n       \\<lbrakk>Atom k \\<in># F \\<^bold>\\<and> G, \\<Gamma>;\n        Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> Fa \\<Delta> n \\<Gamma>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           \\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>' \\<Longrightarrow>\n           F, G, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<^bold>\\<not> Fa, \\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> F, G, \\<Gamma>' \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n\n 4. \\<And>Fa \\<Delta> n \\<Gamma>.\n       \\<lbrakk>Fa, F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, F \\<^bold>\\<and> G, \\<Gamma> =\n           F \\<^bold>\\<and> G, \\<Gamma>' \\<Longrightarrow>\n           F, G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, G, \\<Gamma> \\<Rightarrow>\n                         \\<^bold>\\<not> Fa, \\<Delta> \\<down> Suc n\n 5. \\<And>Fa Ga \\<Gamma> \\<Delta> n \\<Gamma>'.\n       \\<lbrakk>Fa, Ga, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, Ga, \\<Gamma> =\n           F \\<^bold>\\<and> G, \\<Gamma>' \\<Longrightarrow>\n           F, G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n;\n        Fa \\<^bold>\\<and> Ga, \\<Gamma> =\n        F \\<^bold>\\<and> G, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> F, G, \\<Gamma>' \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n\n 6. \\<And>Fa \\<Delta> n Ga \\<Gamma>.\n       \\<lbrakk>F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           F \\<^bold>\\<and> G, \\<Gamma> =\n           F \\<^bold>\\<and> G, \\<Gamma>' \\<Longrightarrow>\n           F, G, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow> Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           F \\<^bold>\\<and> G, \\<Gamma> =\n           F \\<^bold>\\<and> G, \\<Gamma>' \\<Longrightarrow>\n           F, G, \\<Gamma>' \\<Rightarrow> Ga, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, G, \\<Gamma> \\<Rightarrow>\n                         Fa \\<^bold>\\<and> Ga, \\<Delta> \\<down> Suc n\n 7. \\<And>Fa \\<Gamma> \\<Delta> n Ga \\<Gamma>'.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, \\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>' \\<Longrightarrow>\n           F, G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n;\n        Ga, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Ga, \\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>' \\<Longrightarrow>\n           F, G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n;\n        Fa \\<^bold>\\<or> Ga, \\<Gamma> =\n        F \\<^bold>\\<and> G, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> F, G, \\<Gamma>' \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n\n 8. \\<And>Fa Ga \\<Delta> n \\<Gamma>.\n       \\<lbrakk>F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                Fa, Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           F \\<^bold>\\<and> G, \\<Gamma> =\n           F \\<^bold>\\<and> G, \\<Gamma>' \\<Longrightarrow>\n           F, G, \\<Gamma>' \\<Rightarrow> Fa, Ga, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, G, \\<Gamma> \\<Rightarrow>\n                         Fa \\<^bold>\\<or> Ga, \\<Delta> \\<down> Suc n\n 9. \\<And>\\<Gamma> Fa \\<Delta> n Ga \\<Gamma>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           \\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>' \\<Longrightarrow>\n           F, G, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        Ga, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Ga, \\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>' \\<Longrightarrow>\n           F, G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n;\n        Fa \\<^bold>\\<rightarrow> Ga, \\<Gamma> =\n        F \\<^bold>\\<and> G, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> F, G, \\<Gamma>' \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n\n 10. \\<And>Fa Ga \\<Delta> n \\<Gamma>.\n        \\<lbrakk>Fa, F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                 Ga, \\<Delta> \\<down> n;\n         \\<And>\\<Gamma>'.\n            Fa, F \\<^bold>\\<and> G, \\<Gamma> =\n            F \\<^bold>\\<and> G, \\<Gamma>' \\<Longrightarrow>\n            F, G, \\<Gamma>' \\<Rightarrow> Ga, \\<Delta> \\<down> n\\<rbrakk>\n        \\<Longrightarrow> F, G, \\<Gamma> \\<Rightarrow>\n                          Fa \\<^bold>\\<rightarrow>\n                          Ga, \\<Delta> \\<down> Suc n", "case (AndL F' G' \\<Gamma>' \\<Delta>)"], ["proof (state)\nthis:\n  F', G', \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n_\n  F', G', \\<Gamma>' = F \\<^bold>\\<and> G, ?\\<Gamma> \\<Longrightarrow>\n  F, G, ?\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n_\n  F' \\<^bold>\\<and> G', \\<Gamma>' = F \\<^bold>\\<and> G, \\<Gamma>\n\ngoal (10 subgoals):\n 1. \\<And>\\<Delta> n \\<Gamma>.\n       \\<bottom> \\<in># F \\<^bold>\\<and> G, \\<Gamma> \\<Longrightarrow>\n       F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<And>k \\<Delta> n \\<Gamma>.\n       \\<lbrakk>Atom k \\<in># F \\<^bold>\\<and> G, \\<Gamma>;\n        Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> Fa \\<Delta> n \\<Gamma>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           \\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>' \\<Longrightarrow>\n           F, G, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<^bold>\\<not> Fa, \\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> F, G, \\<Gamma>' \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n\n 4. \\<And>Fa \\<Delta> n \\<Gamma>.\n       \\<lbrakk>Fa, F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, F \\<^bold>\\<and> G, \\<Gamma> =\n           F \\<^bold>\\<and> G, \\<Gamma>' \\<Longrightarrow>\n           F, G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, G, \\<Gamma> \\<Rightarrow>\n                         \\<^bold>\\<not> Fa, \\<Delta> \\<down> Suc n\n 5. \\<And>Fa Ga \\<Gamma> \\<Delta> n \\<Gamma>'.\n       \\<lbrakk>Fa, Ga, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, Ga, \\<Gamma> =\n           F \\<^bold>\\<and> G, \\<Gamma>' \\<Longrightarrow>\n           F, G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n;\n        Fa \\<^bold>\\<and> Ga, \\<Gamma> =\n        F \\<^bold>\\<and> G, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> F, G, \\<Gamma>' \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n\n 6. \\<And>Fa \\<Delta> n Ga \\<Gamma>.\n       \\<lbrakk>F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           F \\<^bold>\\<and> G, \\<Gamma> =\n           F \\<^bold>\\<and> G, \\<Gamma>' \\<Longrightarrow>\n           F, G, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow> Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           F \\<^bold>\\<and> G, \\<Gamma> =\n           F \\<^bold>\\<and> G, \\<Gamma>' \\<Longrightarrow>\n           F, G, \\<Gamma>' \\<Rightarrow> Ga, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, G, \\<Gamma> \\<Rightarrow>\n                         Fa \\<^bold>\\<and> Ga, \\<Delta> \\<down> Suc n\n 7. \\<And>Fa \\<Gamma> \\<Delta> n Ga \\<Gamma>'.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, \\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>' \\<Longrightarrow>\n           F, G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n;\n        Ga, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Ga, \\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>' \\<Longrightarrow>\n           F, G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n;\n        Fa \\<^bold>\\<or> Ga, \\<Gamma> =\n        F \\<^bold>\\<and> G, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> F, G, \\<Gamma>' \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n\n 8. \\<And>Fa Ga \\<Delta> n \\<Gamma>.\n       \\<lbrakk>F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                Fa, Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           F \\<^bold>\\<and> G, \\<Gamma> =\n           F \\<^bold>\\<and> G, \\<Gamma>' \\<Longrightarrow>\n           F, G, \\<Gamma>' \\<Rightarrow> Fa, Ga, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, G, \\<Gamma> \\<Rightarrow>\n                         Fa \\<^bold>\\<or> Ga, \\<Delta> \\<down> Suc n\n 9. \\<And>\\<Gamma> Fa \\<Delta> n Ga \\<Gamma>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           \\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>' \\<Longrightarrow>\n           F, G, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        Ga, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Ga, \\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>' \\<Longrightarrow>\n           F, G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n;\n        Fa \\<^bold>\\<rightarrow> Ga, \\<Gamma> =\n        F \\<^bold>\\<and> G, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> F, G, \\<Gamma>' \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n\n 10. \\<And>Fa Ga \\<Delta> n \\<Gamma>.\n        \\<lbrakk>Fa, F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                 Ga, \\<Delta> \\<down> n;\n         \\<And>\\<Gamma>'.\n            Fa, F \\<^bold>\\<and> G, \\<Gamma> =\n            F \\<^bold>\\<and> G, \\<Gamma>' \\<Longrightarrow>\n            F, G, \\<Gamma>' \\<Rightarrow> Ga, \\<Delta> \\<down> n\\<rbrakk>\n        \\<Longrightarrow> F, G, \\<Gamma> \\<Rightarrow>\n                          Fa \\<^bold>\\<rightarrow>\n                          Ga, \\<Delta> \\<down> Suc n", "thus ?case"], ["proof (prove)\nusing this:\n  F', G', \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n_\n  F', G', \\<Gamma>' = F \\<^bold>\\<and> G, ?\\<Gamma> \\<Longrightarrow>\n  F, G, ?\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n_\n  F' \\<^bold>\\<and> G', \\<Gamma>' = F \\<^bold>\\<and> G, \\<Gamma>\n\ngoal (1 subgoal):\n 1. F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n_", "by(cases \"And F G = And F' G'\"; \n       auto intro!: SCc.intros(3-) dest!: multi_member_split simp: lem1 lem2 deeper_suc;\n       metis add_mset_commute)"], ["proof (state)\nthis:\n  F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n_\n\ngoal (9 subgoals):\n 1. \\<And>\\<Delta> n \\<Gamma>.\n       \\<bottom> \\<in># F \\<^bold>\\<and> G, \\<Gamma> \\<Longrightarrow>\n       F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<And>k \\<Delta> n \\<Gamma>.\n       \\<lbrakk>Atom k \\<in># F \\<^bold>\\<and> G, \\<Gamma>;\n        Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> Fa \\<Delta> n \\<Gamma>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           \\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>' \\<Longrightarrow>\n           F, G, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<^bold>\\<not> Fa, \\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> F, G, \\<Gamma>' \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n\n 4. \\<And>Fa \\<Delta> n \\<Gamma>.\n       \\<lbrakk>Fa, F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, F \\<^bold>\\<and> G, \\<Gamma> =\n           F \\<^bold>\\<and> G, \\<Gamma>' \\<Longrightarrow>\n           F, G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, G, \\<Gamma> \\<Rightarrow>\n                         \\<^bold>\\<not> Fa, \\<Delta> \\<down> Suc n\n 5. \\<And>Fa \\<Delta> n Ga \\<Gamma>.\n       \\<lbrakk>F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           F \\<^bold>\\<and> G, \\<Gamma> =\n           F \\<^bold>\\<and> G, \\<Gamma>' \\<Longrightarrow>\n           F, G, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow> Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           F \\<^bold>\\<and> G, \\<Gamma> =\n           F \\<^bold>\\<and> G, \\<Gamma>' \\<Longrightarrow>\n           F, G, \\<Gamma>' \\<Rightarrow> Ga, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, G, \\<Gamma> \\<Rightarrow>\n                         Fa \\<^bold>\\<and> Ga, \\<Delta> \\<down> Suc n\n 6. \\<And>Fa \\<Gamma> \\<Delta> n Ga \\<Gamma>'.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, \\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>' \\<Longrightarrow>\n           F, G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n;\n        Ga, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Ga, \\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>' \\<Longrightarrow>\n           F, G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n;\n        Fa \\<^bold>\\<or> Ga, \\<Gamma> =\n        F \\<^bold>\\<and> G, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> F, G, \\<Gamma>' \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n\n 7. \\<And>Fa Ga \\<Delta> n \\<Gamma>.\n       \\<lbrakk>F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                Fa, Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           F \\<^bold>\\<and> G, \\<Gamma> =\n           F \\<^bold>\\<and> G, \\<Gamma>' \\<Longrightarrow>\n           F, G, \\<Gamma>' \\<Rightarrow> Fa, Ga, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, G, \\<Gamma> \\<Rightarrow>\n                         Fa \\<^bold>\\<or> Ga, \\<Delta> \\<down> Suc n\n 8. \\<And>\\<Gamma> Fa \\<Delta> n Ga \\<Gamma>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           \\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>' \\<Longrightarrow>\n           F, G, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        Ga, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Ga, \\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>' \\<Longrightarrow>\n           F, G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n;\n        Fa \\<^bold>\\<rightarrow> Ga, \\<Gamma> =\n        F \\<^bold>\\<and> G, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> F, G, \\<Gamma>' \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n\n 9. \\<And>Fa Ga \\<Delta> n \\<Gamma>.\n       \\<lbrakk>Fa, F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, F \\<^bold>\\<and> G, \\<Gamma> =\n           F \\<^bold>\\<and> G, \\<Gamma>' \\<Longrightarrow>\n           F, G, \\<Gamma>' \\<Rightarrow> Ga, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, G, \\<Gamma> \\<Rightarrow>\n                         Fa \\<^bold>\\<rightarrow> Ga, \\<Delta> \\<down> Suc n", "qed (auto intro!: SCc.intros(3-) dest!: multi_member_split simp: SCc.intros lem1 lem2 inL2')"], ["", "lemma OrL_inv': \n  assumes \"Or F G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\"\n  shows \"F,\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<and> G,\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<and>\n    G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n", "proof(insert assms, induction \"Or F G, \\<Gamma>\" \\<Delta> n arbitrary: \\<Gamma> rule: SCc.induct)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>\\<Delta> n \\<Gamma>.\n       \\<bottom> \\<in># F \\<^bold>\\<or> G, \\<Gamma> \\<Longrightarrow>\n       F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n \\<and>\n       G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<And>k \\<Delta> n \\<Gamma>.\n       \\<lbrakk>Atom k \\<in># F \\<^bold>\\<or> G, \\<Gamma>;\n        Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> Fa \\<Delta> n \\<Gamma>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           \\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>' \\<Longrightarrow>\n           F, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<^bold>\\<not> Fa, \\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma>' \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n\n 4. \\<And>Fa \\<Delta> n \\<Gamma>.\n       \\<lbrakk>Fa, F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, F \\<^bold>\\<or> G, \\<Gamma> =\n           F \\<^bold>\\<or> G, \\<Gamma>' \\<Longrightarrow>\n           F, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\n                         \\<^bold>\\<not> Fa, \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma> \\<Rightarrow>\n                         \\<^bold>\\<not> Fa, \\<Delta> \\<down> Suc n\n 5. \\<And>Fa Ga \\<Gamma> \\<Delta> n \\<Gamma>'.\n       \\<lbrakk>Fa, Ga, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, Ga, \\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>' \\<Longrightarrow>\n           F, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n;\n        Fa \\<^bold>\\<and> Ga, \\<Gamma> =\n        F \\<^bold>\\<or> G, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma>' \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n\n 6. \\<And>Fa \\<Delta> n Ga \\<Gamma>.\n       \\<lbrakk>F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           F \\<^bold>\\<or> G, \\<Gamma> =\n           F \\<^bold>\\<or> G, \\<Gamma>' \\<Longrightarrow>\n           F, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow> Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           F \\<^bold>\\<or> G, \\<Gamma> =\n           F \\<^bold>\\<or> G, \\<Gamma>' \\<Longrightarrow>\n           F, \\<Gamma>' \\<Rightarrow> Ga, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> Ga, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\n                         Fa \\<^bold>\\<and> Ga, \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma> \\<Rightarrow>\n                         Fa \\<^bold>\\<and> Ga, \\<Delta> \\<down> Suc n\n 7. \\<And>Fa \\<Gamma> \\<Delta> n Ga \\<Gamma>'.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, \\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>' \\<Longrightarrow>\n           F, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n;\n        Ga, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Ga, \\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>' \\<Longrightarrow>\n           F, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n;\n        Fa \\<^bold>\\<or> Ga, \\<Gamma> =\n        F \\<^bold>\\<or> G, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma>' \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n\n 8. \\<And>Fa Ga \\<Delta> n \\<Gamma>.\n       \\<lbrakk>F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                Fa, Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           F \\<^bold>\\<or> G, \\<Gamma> =\n           F \\<^bold>\\<or> G, \\<Gamma>' \\<Longrightarrow>\n           F, \\<Gamma>' \\<Rightarrow> Fa, Ga, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> Fa, Ga, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\n                         Fa \\<^bold>\\<or> Ga, \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma> \\<Rightarrow>\n                         Fa \\<^bold>\\<or> Ga, \\<Delta> \\<down> Suc n\n 9. \\<And>\\<Gamma> Fa \\<Delta> n Ga \\<Gamma>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           \\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>' \\<Longrightarrow>\n           F, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        Ga, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Ga, \\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>' \\<Longrightarrow>\n           F, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n;\n        Fa \\<^bold>\\<rightarrow> Ga, \\<Gamma> =\n        F \\<^bold>\\<or> G, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma>' \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n\n 10. \\<And>Fa Ga \\<Delta> n \\<Gamma>.\n        \\<lbrakk>Fa, F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                 Ga, \\<Delta> \\<down> n;\n         \\<And>\\<Gamma>'.\n            Fa, F \\<^bold>\\<or> G, \\<Gamma> =\n            F \\<^bold>\\<or> G, \\<Gamma>' \\<Longrightarrow>\n            F, \\<Gamma>' \\<Rightarrow> Ga, \\<Delta> \\<down> n \\<and>\n            G, \\<Gamma>' \\<Rightarrow> Ga, \\<Delta> \\<down> n\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\n                          Fa \\<^bold>\\<rightarrow>\n                          Ga, \\<Delta> \\<down> Suc n \\<and>\n                          G, \\<Gamma> \\<Rightarrow>\n                          Fa \\<^bold>\\<rightarrow>\n                          Ga, \\<Delta> \\<down> Suc n", "case (OrL F' \\<Gamma>' \\<Delta> n G')"], ["proof (state)\nthis:\n  F', \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\n  F', \\<Gamma>' = F \\<^bold>\\<or> G, ?\\<Gamma> \\<Longrightarrow>\n  F, ?\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<and>\n  G, ?\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n  G', \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\n  G', \\<Gamma>' = F \\<^bold>\\<or> G, ?\\<Gamma> \\<Longrightarrow>\n  F, ?\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<and>\n  G, ?\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n  F' \\<^bold>\\<or> G', \\<Gamma>' = F \\<^bold>\\<or> G, \\<Gamma>\n\ngoal (10 subgoals):\n 1. \\<And>\\<Delta> n \\<Gamma>.\n       \\<bottom> \\<in># F \\<^bold>\\<or> G, \\<Gamma> \\<Longrightarrow>\n       F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n \\<and>\n       G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<And>k \\<Delta> n \\<Gamma>.\n       \\<lbrakk>Atom k \\<in># F \\<^bold>\\<or> G, \\<Gamma>;\n        Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> Fa \\<Delta> n \\<Gamma>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           \\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>' \\<Longrightarrow>\n           F, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<^bold>\\<not> Fa, \\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma>' \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n\n 4. \\<And>Fa \\<Delta> n \\<Gamma>.\n       \\<lbrakk>Fa, F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, F \\<^bold>\\<or> G, \\<Gamma> =\n           F \\<^bold>\\<or> G, \\<Gamma>' \\<Longrightarrow>\n           F, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\n                         \\<^bold>\\<not> Fa, \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma> \\<Rightarrow>\n                         \\<^bold>\\<not> Fa, \\<Delta> \\<down> Suc n\n 5. \\<And>Fa Ga \\<Gamma> \\<Delta> n \\<Gamma>'.\n       \\<lbrakk>Fa, Ga, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, Ga, \\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>' \\<Longrightarrow>\n           F, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n;\n        Fa \\<^bold>\\<and> Ga, \\<Gamma> =\n        F \\<^bold>\\<or> G, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma>' \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n\n 6. \\<And>Fa \\<Delta> n Ga \\<Gamma>.\n       \\<lbrakk>F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           F \\<^bold>\\<or> G, \\<Gamma> =\n           F \\<^bold>\\<or> G, \\<Gamma>' \\<Longrightarrow>\n           F, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow> Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           F \\<^bold>\\<or> G, \\<Gamma> =\n           F \\<^bold>\\<or> G, \\<Gamma>' \\<Longrightarrow>\n           F, \\<Gamma>' \\<Rightarrow> Ga, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> Ga, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\n                         Fa \\<^bold>\\<and> Ga, \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma> \\<Rightarrow>\n                         Fa \\<^bold>\\<and> Ga, \\<Delta> \\<down> Suc n\n 7. \\<And>Fa \\<Gamma> \\<Delta> n Ga \\<Gamma>'.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, \\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>' \\<Longrightarrow>\n           F, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n;\n        Ga, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Ga, \\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>' \\<Longrightarrow>\n           F, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n;\n        Fa \\<^bold>\\<or> Ga, \\<Gamma> =\n        F \\<^bold>\\<or> G, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma>' \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n\n 8. \\<And>Fa Ga \\<Delta> n \\<Gamma>.\n       \\<lbrakk>F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                Fa, Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           F \\<^bold>\\<or> G, \\<Gamma> =\n           F \\<^bold>\\<or> G, \\<Gamma>' \\<Longrightarrow>\n           F, \\<Gamma>' \\<Rightarrow> Fa, Ga, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> Fa, Ga, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\n                         Fa \\<^bold>\\<or> Ga, \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma> \\<Rightarrow>\n                         Fa \\<^bold>\\<or> Ga, \\<Delta> \\<down> Suc n\n 9. \\<And>\\<Gamma> Fa \\<Delta> n Ga \\<Gamma>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           \\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>' \\<Longrightarrow>\n           F, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        Ga, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Ga, \\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>' \\<Longrightarrow>\n           F, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n;\n        Fa \\<^bold>\\<rightarrow> Ga, \\<Gamma> =\n        F \\<^bold>\\<or> G, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma>' \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n\n 10. \\<And>Fa Ga \\<Delta> n \\<Gamma>.\n        \\<lbrakk>Fa, F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                 Ga, \\<Delta> \\<down> n;\n         \\<And>\\<Gamma>'.\n            Fa, F \\<^bold>\\<or> G, \\<Gamma> =\n            F \\<^bold>\\<or> G, \\<Gamma>' \\<Longrightarrow>\n            F, \\<Gamma>' \\<Rightarrow> Ga, \\<Delta> \\<down> n \\<and>\n            G, \\<Gamma>' \\<Rightarrow> Ga, \\<Delta> \\<down> n\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\n                          Fa \\<^bold>\\<rightarrow>\n                          Ga, \\<Delta> \\<down> Suc n \\<and>\n                          G, \\<Gamma> \\<Rightarrow>\n                          Fa \\<^bold>\\<rightarrow>\n                          Ga, \\<Delta> \\<down> Suc n", "thus ?case"], ["proof (prove)\nusing this:\n  F', \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\n  F', \\<Gamma>' = F \\<^bold>\\<or> G, ?\\<Gamma> \\<Longrightarrow>\n  F, ?\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<and>\n  G, ?\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n  G', \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\n  G', \\<Gamma>' = F \\<^bold>\\<or> G, ?\\<Gamma> \\<Longrightarrow>\n  F, ?\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<and>\n  G, ?\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n  F' \\<^bold>\\<or> G', \\<Gamma>' = F \\<^bold>\\<or> G, \\<Gamma>\n\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n \\<and>\n    G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "by(cases \"Or F G = Or F' G'\"; \n       auto intro!: SCc.intros(3-) dest!: multi_member_split simp: lem1 lem2 deeper_suc;\n       blast)"], ["proof (state)\nthis:\n  F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n \\<and>\n  G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n\ngoal (9 subgoals):\n 1. \\<And>\\<Delta> n \\<Gamma>.\n       \\<bottom> \\<in># F \\<^bold>\\<or> G, \\<Gamma> \\<Longrightarrow>\n       F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n \\<and>\n       G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<And>k \\<Delta> n \\<Gamma>.\n       \\<lbrakk>Atom k \\<in># F \\<^bold>\\<or> G, \\<Gamma>;\n        Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> Fa \\<Delta> n \\<Gamma>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           \\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>' \\<Longrightarrow>\n           F, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<^bold>\\<not> Fa, \\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma>' \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n\n 4. \\<And>Fa \\<Delta> n \\<Gamma>.\n       \\<lbrakk>Fa, F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, F \\<^bold>\\<or> G, \\<Gamma> =\n           F \\<^bold>\\<or> G, \\<Gamma>' \\<Longrightarrow>\n           F, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\n                         \\<^bold>\\<not> Fa, \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma> \\<Rightarrow>\n                         \\<^bold>\\<not> Fa, \\<Delta> \\<down> Suc n\n 5. \\<And>Fa Ga \\<Gamma> \\<Delta> n \\<Gamma>'.\n       \\<lbrakk>Fa, Ga, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, Ga, \\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>' \\<Longrightarrow>\n           F, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n;\n        Fa \\<^bold>\\<and> Ga, \\<Gamma> =\n        F \\<^bold>\\<or> G, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma>' \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n\n 6. \\<And>Fa \\<Delta> n Ga \\<Gamma>.\n       \\<lbrakk>F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           F \\<^bold>\\<or> G, \\<Gamma> =\n           F \\<^bold>\\<or> G, \\<Gamma>' \\<Longrightarrow>\n           F, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow> Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           F \\<^bold>\\<or> G, \\<Gamma> =\n           F \\<^bold>\\<or> G, \\<Gamma>' \\<Longrightarrow>\n           F, \\<Gamma>' \\<Rightarrow> Ga, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> Ga, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\n                         Fa \\<^bold>\\<and> Ga, \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma> \\<Rightarrow>\n                         Fa \\<^bold>\\<and> Ga, \\<Delta> \\<down> Suc n\n 7. \\<And>Fa Ga \\<Delta> n \\<Gamma>.\n       \\<lbrakk>F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                Fa, Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           F \\<^bold>\\<or> G, \\<Gamma> =\n           F \\<^bold>\\<or> G, \\<Gamma>' \\<Longrightarrow>\n           F, \\<Gamma>' \\<Rightarrow> Fa, Ga, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> Fa, Ga, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\n                         Fa \\<^bold>\\<or> Ga, \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma> \\<Rightarrow>\n                         Fa \\<^bold>\\<or> Ga, \\<Delta> \\<down> Suc n\n 8. \\<And>\\<Gamma> Fa \\<Delta> n Ga \\<Gamma>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           \\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>' \\<Longrightarrow>\n           F, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        Ga, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Ga, \\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>' \\<Longrightarrow>\n           F, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n;\n        Fa \\<^bold>\\<rightarrow> Ga, \\<Gamma> =\n        F \\<^bold>\\<or> G, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma>' \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n\n 9. \\<And>Fa Ga \\<Delta> n \\<Gamma>.\n       \\<lbrakk>Fa, F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, F \\<^bold>\\<or> G, \\<Gamma> =\n           F \\<^bold>\\<or> G, \\<Gamma>' \\<Longrightarrow>\n           F, \\<Gamma>' \\<Rightarrow> Ga, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> Ga, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\n                         Fa \\<^bold>\\<rightarrow>\n                         Ga, \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma> \\<Rightarrow>\n                         Fa \\<^bold>\\<rightarrow> Ga, \\<Delta> \\<down> Suc n", "qed (fastforce intro!: SCc.intros(3-) dest!: multi_member_split simp: SCc.intros lem1 lem2)+"], ["", "lemma ImpL_inv': \n  assumes \"Imp F G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\"\n  shows \"\\<Gamma> \\<Rightarrow> F,\\<Delta> \\<down> n \\<and> G,\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n \\<and>\n    G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n", "proof(insert assms, induction \"Imp F G, \\<Gamma>\" \\<Delta> n arbitrary: \\<Gamma> rule: SCc.induct)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>\\<Delta> n \\<Gamma>.\n       \\<bottom>\n       \\<in># F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Longrightarrow>\n       \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n \\<and>\n       G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<And>k \\<Delta> n \\<Gamma>.\n       \\<lbrakk>Atom k \\<in># F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> Fa \\<Delta> n \\<Gamma>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           \\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, Fa, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<^bold>\\<not> Fa, \\<Gamma> =\n        F \\<^bold>\\<rightarrow> G, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                         F, \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n\n 4. \\<And>Fa \\<Delta> n \\<Gamma>.\n       \\<lbrakk>Fa, F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n                \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, F \\<^bold>\\<rightarrow> G, \\<Gamma> =\n           F \\<^bold>\\<rightarrow> G, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, \\<^bold>\\<not> Fa, \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma> \\<Rightarrow>\n                         \\<^bold>\\<not> Fa, \\<Delta> \\<down> Suc n\n 5. \\<And>Fa Ga \\<Gamma> \\<Delta> n \\<Gamma>'.\n       \\<lbrakk>Fa, Ga, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, Ga, \\<Gamma> =\n           F \\<^bold>\\<rightarrow> G, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n;\n        Fa \\<^bold>\\<and> Ga, \\<Gamma> =\n        F \\<^bold>\\<rightarrow> G, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                         F, \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n\n 6. \\<And>Fa \\<Delta> n Ga \\<Gamma>.\n       \\<lbrakk>F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n                Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           F \\<^bold>\\<rightarrow> G, \\<Gamma> =\n           F \\<^bold>\\<rightarrow> G, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, Fa, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n        Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           F \\<^bold>\\<rightarrow> G, \\<Gamma> =\n           F \\<^bold>\\<rightarrow> G, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, Ga, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> Ga, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, Fa \\<^bold>\\<and>\n                            Ga, \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma> \\<Rightarrow>\n                         Fa \\<^bold>\\<and> Ga, \\<Delta> \\<down> Suc n\n 7. \\<And>Fa \\<Gamma> \\<Delta> n Ga \\<Gamma>'.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, \\<Gamma> =\n           F \\<^bold>\\<rightarrow> G, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n;\n        Ga, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Ga, \\<Gamma> =\n           F \\<^bold>\\<rightarrow> G, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n;\n        Fa \\<^bold>\\<or> Ga, \\<Gamma> =\n        F \\<^bold>\\<rightarrow> G, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                         F, \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n\n 8. \\<And>Fa Ga \\<Delta> n \\<Gamma>.\n       \\<lbrakk>F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n                Fa, Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           F \\<^bold>\\<rightarrow> G, \\<Gamma> =\n           F \\<^bold>\\<rightarrow> G, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, Fa, Ga, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> Fa, Ga, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, Fa \\<^bold>\\<or>\n                            Ga, \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma> \\<Rightarrow>\n                         Fa \\<^bold>\\<or> Ga, \\<Delta> \\<down> Suc n\n 9. \\<And>\\<Gamma> Fa \\<Delta> n Ga \\<Gamma>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           \\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, Fa, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        Ga, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Ga, \\<Gamma> =\n           F \\<^bold>\\<rightarrow> G, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n;\n        Fa \\<^bold>\\<rightarrow> Ga, \\<Gamma> =\n        F \\<^bold>\\<rightarrow> G, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                         F, \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n\n 10. \\<And>Fa Ga \\<Delta> n \\<Gamma>.\n        \\<lbrakk>Fa, F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n                 Ga, \\<Delta> \\<down> n;\n         \\<And>\\<Gamma>'.\n            Fa, F \\<^bold>\\<rightarrow> G, \\<Gamma> =\n            F \\<^bold>\\<rightarrow> G, \\<Gamma>' \\<Longrightarrow>\n            \\<Gamma>' \\<Rightarrow> F, Ga, \\<Delta> \\<down> n \\<and>\n            G, \\<Gamma>' \\<Rightarrow> Ga, \\<Delta> \\<down> n\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                          F, Fa \\<^bold>\\<rightarrow>\n                             Ga, \\<Delta> \\<down> Suc n \\<and>\n                          G, \\<Gamma> \\<Rightarrow>\n                          Fa \\<^bold>\\<rightarrow>\n                          Ga, \\<Delta> \\<down> Suc n", "case (ImpL \\<Gamma>' F' \\<Delta> n G')"], ["proof (state)\nthis:\n  \\<Gamma>' \\<Rightarrow> F', \\<Delta> \\<down> n\n  \\<Gamma>' = F \\<^bold>\\<rightarrow> G, ?\\<Gamma> \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> F, F', \\<Delta> \\<down> n \\<and>\n  G, ?\\<Gamma> \\<Rightarrow> F', \\<Delta> \\<down> n\n  G', \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\n  G', \\<Gamma>' = F \\<^bold>\\<rightarrow> G, ?\\<Gamma> \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n \\<and>\n  G, ?\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n  F' \\<^bold>\\<rightarrow> G', \\<Gamma>' =\n  F \\<^bold>\\<rightarrow> G, \\<Gamma>\n\ngoal (10 subgoals):\n 1. \\<And>\\<Delta> n \\<Gamma>.\n       \\<bottom>\n       \\<in># F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Longrightarrow>\n       \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n \\<and>\n       G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<And>k \\<Delta> n \\<Gamma>.\n       \\<lbrakk>Atom k \\<in># F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> Fa \\<Delta> n \\<Gamma>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           \\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, Fa, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<^bold>\\<not> Fa, \\<Gamma> =\n        F \\<^bold>\\<rightarrow> G, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                         F, \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n\n 4. \\<And>Fa \\<Delta> n \\<Gamma>.\n       \\<lbrakk>Fa, F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n                \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, F \\<^bold>\\<rightarrow> G, \\<Gamma> =\n           F \\<^bold>\\<rightarrow> G, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, \\<^bold>\\<not> Fa, \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma> \\<Rightarrow>\n                         \\<^bold>\\<not> Fa, \\<Delta> \\<down> Suc n\n 5. \\<And>Fa Ga \\<Gamma> \\<Delta> n \\<Gamma>'.\n       \\<lbrakk>Fa, Ga, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, Ga, \\<Gamma> =\n           F \\<^bold>\\<rightarrow> G, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n;\n        Fa \\<^bold>\\<and> Ga, \\<Gamma> =\n        F \\<^bold>\\<rightarrow> G, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                         F, \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n\n 6. \\<And>Fa \\<Delta> n Ga \\<Gamma>.\n       \\<lbrakk>F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n                Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           F \\<^bold>\\<rightarrow> G, \\<Gamma> =\n           F \\<^bold>\\<rightarrow> G, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, Fa, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n        Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           F \\<^bold>\\<rightarrow> G, \\<Gamma> =\n           F \\<^bold>\\<rightarrow> G, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, Ga, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> Ga, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, Fa \\<^bold>\\<and>\n                            Ga, \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma> \\<Rightarrow>\n                         Fa \\<^bold>\\<and> Ga, \\<Delta> \\<down> Suc n\n 7. \\<And>Fa \\<Gamma> \\<Delta> n Ga \\<Gamma>'.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, \\<Gamma> =\n           F \\<^bold>\\<rightarrow> G, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n;\n        Ga, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Ga, \\<Gamma> =\n           F \\<^bold>\\<rightarrow> G, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n;\n        Fa \\<^bold>\\<or> Ga, \\<Gamma> =\n        F \\<^bold>\\<rightarrow> G, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                         F, \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n\n 8. \\<And>Fa Ga \\<Delta> n \\<Gamma>.\n       \\<lbrakk>F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n                Fa, Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           F \\<^bold>\\<rightarrow> G, \\<Gamma> =\n           F \\<^bold>\\<rightarrow> G, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, Fa, Ga, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> Fa, Ga, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, Fa \\<^bold>\\<or>\n                            Ga, \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma> \\<Rightarrow>\n                         Fa \\<^bold>\\<or> Ga, \\<Delta> \\<down> Suc n\n 9. \\<And>\\<Gamma> Fa \\<Delta> n Ga \\<Gamma>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           \\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, Fa, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        Ga, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Ga, \\<Gamma> =\n           F \\<^bold>\\<rightarrow> G, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n;\n        Fa \\<^bold>\\<rightarrow> Ga, \\<Gamma> =\n        F \\<^bold>\\<rightarrow> G, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                         F, \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n\n 10. \\<And>Fa Ga \\<Delta> n \\<Gamma>.\n        \\<lbrakk>Fa, F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n                 Ga, \\<Delta> \\<down> n;\n         \\<And>\\<Gamma>'.\n            Fa, F \\<^bold>\\<rightarrow> G, \\<Gamma> =\n            F \\<^bold>\\<rightarrow> G, \\<Gamma>' \\<Longrightarrow>\n            \\<Gamma>' \\<Rightarrow> F, Ga, \\<Delta> \\<down> n \\<and>\n            G, \\<Gamma>' \\<Rightarrow> Ga, \\<Delta> \\<down> n\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                          F, Fa \\<^bold>\\<rightarrow>\n                             Ga, \\<Delta> \\<down> Suc n \\<and>\n                          G, \\<Gamma> \\<Rightarrow>\n                          Fa \\<^bold>\\<rightarrow>\n                          Ga, \\<Delta> \\<down> Suc n", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>' \\<Rightarrow> F', \\<Delta> \\<down> n\n  \\<Gamma>' = F \\<^bold>\\<rightarrow> G, ?\\<Gamma> \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> F, F', \\<Delta> \\<down> n \\<and>\n  G, ?\\<Gamma> \\<Rightarrow> F', \\<Delta> \\<down> n\n  G', \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\n  G', \\<Gamma>' = F \\<^bold>\\<rightarrow> G, ?\\<Gamma> \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n \\<and>\n  G, ?\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n  F' \\<^bold>\\<rightarrow> G', \\<Gamma>' =\n  F \\<^bold>\\<rightarrow> G, \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n \\<and>\n    G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "by(cases \"Or F G = Or F' G'\"; (* oops, I didn't pay attention and used the wrong constructor\\<dots> doesn't matter! *)\n       auto intro!: SCc.intros(3-) dest!: multi_member_split simp: lem1 lem2 deeper_suc;\n       blast)"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n \\<and>\n  G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n\ngoal (9 subgoals):\n 1. \\<And>\\<Delta> n \\<Gamma>.\n       \\<bottom>\n       \\<in># F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Longrightarrow>\n       \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n \\<and>\n       G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<And>k \\<Delta> n \\<Gamma>.\n       \\<lbrakk>Atom k \\<in># F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> Fa \\<Delta> n \\<Gamma>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           \\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, Fa, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<^bold>\\<not> Fa, \\<Gamma> =\n        F \\<^bold>\\<rightarrow> G, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                         F, \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n\n 4. \\<And>Fa \\<Delta> n \\<Gamma>.\n       \\<lbrakk>Fa, F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n                \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, F \\<^bold>\\<rightarrow> G, \\<Gamma> =\n           F \\<^bold>\\<rightarrow> G, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, \\<^bold>\\<not> Fa, \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma> \\<Rightarrow>\n                         \\<^bold>\\<not> Fa, \\<Delta> \\<down> Suc n\n 5. \\<And>Fa Ga \\<Gamma> \\<Delta> n \\<Gamma>'.\n       \\<lbrakk>Fa, Ga, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, Ga, \\<Gamma> =\n           F \\<^bold>\\<rightarrow> G, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n;\n        Fa \\<^bold>\\<and> Ga, \\<Gamma> =\n        F \\<^bold>\\<rightarrow> G, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                         F, \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n\n 6. \\<And>Fa \\<Delta> n Ga \\<Gamma>.\n       \\<lbrakk>F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n                Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           F \\<^bold>\\<rightarrow> G, \\<Gamma> =\n           F \\<^bold>\\<rightarrow> G, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, Fa, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n        Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           F \\<^bold>\\<rightarrow> G, \\<Gamma> =\n           F \\<^bold>\\<rightarrow> G, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, Ga, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> Ga, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, Fa \\<^bold>\\<and>\n                            Ga, \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma> \\<Rightarrow>\n                         Fa \\<^bold>\\<and> Ga, \\<Delta> \\<down> Suc n\n 7. \\<And>Fa \\<Gamma> \\<Delta> n Ga \\<Gamma>'.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, \\<Gamma> =\n           F \\<^bold>\\<rightarrow> G, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n;\n        Ga, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Ga, \\<Gamma> =\n           F \\<^bold>\\<rightarrow> G, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n;\n        Fa \\<^bold>\\<or> Ga, \\<Gamma> =\n        F \\<^bold>\\<rightarrow> G, \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                         F, \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n\n 8. \\<And>Fa Ga \\<Delta> n \\<Gamma>.\n       \\<lbrakk>F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n                Fa, Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           F \\<^bold>\\<rightarrow> G, \\<Gamma> =\n           F \\<^bold>\\<rightarrow> G, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, Fa, Ga, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> Fa, Ga, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, Fa \\<^bold>\\<or>\n                            Ga, \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma> \\<Rightarrow>\n                         Fa \\<^bold>\\<or> Ga, \\<Delta> \\<down> Suc n\n 9. \\<And>Fa Ga \\<Delta> n \\<Gamma>.\n       \\<lbrakk>Fa, F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n                Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>'.\n           Fa, F \\<^bold>\\<rightarrow> G, \\<Gamma> =\n           F \\<^bold>\\<rightarrow> G, \\<Gamma>' \\<Longrightarrow>\n           \\<Gamma>' \\<Rightarrow> F, Ga, \\<Delta> \\<down> n \\<and>\n           G, \\<Gamma>' \\<Rightarrow> Ga, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, Fa \\<^bold>\\<rightarrow>\n                            Ga, \\<Delta> \\<down> Suc n \\<and>\n                         G, \\<Gamma> \\<Rightarrow>\n                         Fa \\<^bold>\\<rightarrow> Ga, \\<Delta> \\<down> Suc n", "qed (fastforce intro!: SCc.intros(3-) dest!: multi_member_split simp: SCc.intros lem1 lem2)+"], ["", "lemma ImpR_inv':\n  assumes \"\\<Gamma> \\<Rightarrow> Imp F G,\\<Delta> \\<down> n\"\n  shows \"F,\\<Gamma> \\<Rightarrow> G,\\<Delta> \\<down> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n", "proof(insert assms, induction \\<Gamma> \"Imp F G, \\<Delta>\" n arbitrary: \\<Delta> rule: SCc.induct)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>\\<Gamma> n \\<Delta>.\n       \\<bottom> \\<in># \\<Gamma> \\<Longrightarrow>\n       F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> Suc n\n 2. \\<And>k \\<Gamma> n \\<Delta>.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>;\n        Atom k \\<in># F \\<^bold>\\<rightarrow> G, \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> Fa n \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow>\n                Fa, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, F \\<^bold>\\<rightarrow> G, \\<Delta> =\n           F \\<^bold>\\<rightarrow> G, \\<Delta>' \\<Longrightarrow>\n           F, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<^bold>\\<not> Fa, \\<Gamma> \\<Rightarrow>\n                         G, \\<Delta> \\<down> Suc n\n 4. \\<And>Fa \\<Gamma> \\<Delta> n \\<Delta>'.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           \\<Delta> = F \\<^bold>\\<rightarrow> G, \\<Delta>' \\<Longrightarrow>\n           F, Fa, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        \\<^bold>\\<not> Fa, \\<Delta> =\n        F \\<^bold>\\<rightarrow> G, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\n                         G, \\<Delta>' \\<down> Suc n\n 5. \\<And>Fa Ga \\<Gamma> n \\<Delta>.\n       \\<lbrakk>Fa, Ga, \\<Gamma> \\<Rightarrow>\n                F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<rightarrow> G, \\<Delta> =\n           F \\<^bold>\\<rightarrow> G, \\<Delta>' \\<Longrightarrow>\n           F, Fa, Ga, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, Fa \\<^bold>\\<and> Ga, \\<Gamma> \\<Rightarrow>\n                         G, \\<Delta> \\<down> Suc n\n 6. \\<And>\\<Gamma> Fa \\<Delta> n Ga \\<Delta>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, \\<Delta> =\n           F \\<^bold>\\<rightarrow> G, \\<Delta>' \\<Longrightarrow>\n           F, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        \\<Gamma> \\<Rightarrow> Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Ga, \\<Delta> =\n           F \\<^bold>\\<rightarrow> G, \\<Delta>' \\<Longrightarrow>\n           F, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        Fa \\<^bold>\\<and> Ga, \\<Delta> =\n        F \\<^bold>\\<rightarrow> G, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\n                         G, \\<Delta>' \\<down> Suc n\n 7. \\<And>Fa \\<Gamma> n Ga \\<Delta>.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow>\n                F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<rightarrow> G, \\<Delta> =\n           F \\<^bold>\\<rightarrow> G, \\<Delta>' \\<Longrightarrow>\n           F, Fa, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        Ga, \\<Gamma> \\<Rightarrow>\n        F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<rightarrow> G, \\<Delta> =\n           F \\<^bold>\\<rightarrow> G, \\<Delta>' \\<Longrightarrow>\n           F, Ga, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, Fa \\<^bold>\\<or> Ga, \\<Gamma> \\<Rightarrow>\n                         G, \\<Delta> \\<down> Suc n\n 8. \\<And>\\<Gamma> Fa Ga \\<Delta> n \\<Delta>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, Ga, \\<Delta> =\n           F \\<^bold>\\<rightarrow> G, \\<Delta>' \\<Longrightarrow>\n           F, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        Fa \\<^bold>\\<or> Ga, \\<Delta> =\n        F \\<^bold>\\<rightarrow> G, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\n                         G, \\<Delta>' \\<down> Suc n\n 9. \\<And>\\<Gamma> Fa n Ga \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow>\n                Fa, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, F \\<^bold>\\<rightarrow> G, \\<Delta> =\n           F \\<^bold>\\<rightarrow> G, \\<Delta>' \\<Longrightarrow>\n           F, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        Ga, \\<Gamma> \\<Rightarrow>\n        F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<rightarrow> G, \\<Delta> =\n           F \\<^bold>\\<rightarrow> G, \\<Delta>' \\<Longrightarrow>\n           F, Ga, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, Fa \\<^bold>\\<rightarrow>\n                            Ga, \\<Gamma> \\<Rightarrow>\n                         G, \\<Delta> \\<down> Suc n\n 10. \\<And>Fa \\<Gamma> Ga \\<Delta> n \\<Delta>'.\n        \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow> Ga, \\<Delta> \\<down> n;\n         \\<And>\\<Delta>'.\n            Ga, \\<Delta> =\n            F \\<^bold>\\<rightarrow> G, \\<Delta>' \\<Longrightarrow>\n            F, Fa, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n         Fa \\<^bold>\\<rightarrow> Ga, \\<Delta> =\n         F \\<^bold>\\<rightarrow> G, \\<Delta>'\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\n                          G, \\<Delta>' \\<down> Suc n", "case (ImpR  F' \\<Gamma> G' \\<Delta>')"], ["proof (state)\nthis:\n  F', \\<Gamma> \\<Rightarrow> G', \\<Delta>' \\<down> n_\n  G', \\<Delta>' = F \\<^bold>\\<rightarrow> G, ?\\<Delta> \\<Longrightarrow>\n  F, F', \\<Gamma> \\<Rightarrow> G, ?\\<Delta> \\<down> n_\n  F' \\<^bold>\\<rightarrow> G', \\<Delta>' =\n  F \\<^bold>\\<rightarrow> G, \\<Delta>\n\ngoal (10 subgoals):\n 1. \\<And>\\<Gamma> n \\<Delta>.\n       \\<bottom> \\<in># \\<Gamma> \\<Longrightarrow>\n       F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> Suc n\n 2. \\<And>k \\<Gamma> n \\<Delta>.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>;\n        Atom k \\<in># F \\<^bold>\\<rightarrow> G, \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> Fa n \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow>\n                Fa, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, F \\<^bold>\\<rightarrow> G, \\<Delta> =\n           F \\<^bold>\\<rightarrow> G, \\<Delta>' \\<Longrightarrow>\n           F, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<^bold>\\<not> Fa, \\<Gamma> \\<Rightarrow>\n                         G, \\<Delta> \\<down> Suc n\n 4. \\<And>Fa \\<Gamma> \\<Delta> n \\<Delta>'.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           \\<Delta> = F \\<^bold>\\<rightarrow> G, \\<Delta>' \\<Longrightarrow>\n           F, Fa, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        \\<^bold>\\<not> Fa, \\<Delta> =\n        F \\<^bold>\\<rightarrow> G, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\n                         G, \\<Delta>' \\<down> Suc n\n 5. \\<And>Fa Ga \\<Gamma> n \\<Delta>.\n       \\<lbrakk>Fa, Ga, \\<Gamma> \\<Rightarrow>\n                F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<rightarrow> G, \\<Delta> =\n           F \\<^bold>\\<rightarrow> G, \\<Delta>' \\<Longrightarrow>\n           F, Fa, Ga, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, Fa \\<^bold>\\<and> Ga, \\<Gamma> \\<Rightarrow>\n                         G, \\<Delta> \\<down> Suc n\n 6. \\<And>\\<Gamma> Fa \\<Delta> n Ga \\<Delta>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, \\<Delta> =\n           F \\<^bold>\\<rightarrow> G, \\<Delta>' \\<Longrightarrow>\n           F, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        \\<Gamma> \\<Rightarrow> Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Ga, \\<Delta> =\n           F \\<^bold>\\<rightarrow> G, \\<Delta>' \\<Longrightarrow>\n           F, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        Fa \\<^bold>\\<and> Ga, \\<Delta> =\n        F \\<^bold>\\<rightarrow> G, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\n                         G, \\<Delta>' \\<down> Suc n\n 7. \\<And>Fa \\<Gamma> n Ga \\<Delta>.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow>\n                F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<rightarrow> G, \\<Delta> =\n           F \\<^bold>\\<rightarrow> G, \\<Delta>' \\<Longrightarrow>\n           F, Fa, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        Ga, \\<Gamma> \\<Rightarrow>\n        F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<rightarrow> G, \\<Delta> =\n           F \\<^bold>\\<rightarrow> G, \\<Delta>' \\<Longrightarrow>\n           F, Ga, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, Fa \\<^bold>\\<or> Ga, \\<Gamma> \\<Rightarrow>\n                         G, \\<Delta> \\<down> Suc n\n 8. \\<And>\\<Gamma> Fa Ga \\<Delta> n \\<Delta>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, Ga, \\<Delta> =\n           F \\<^bold>\\<rightarrow> G, \\<Delta>' \\<Longrightarrow>\n           F, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        Fa \\<^bold>\\<or> Ga, \\<Delta> =\n        F \\<^bold>\\<rightarrow> G, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\n                         G, \\<Delta>' \\<down> Suc n\n 9. \\<And>\\<Gamma> Fa n Ga \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow>\n                Fa, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, F \\<^bold>\\<rightarrow> G, \\<Delta> =\n           F \\<^bold>\\<rightarrow> G, \\<Delta>' \\<Longrightarrow>\n           F, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        Ga, \\<Gamma> \\<Rightarrow>\n        F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<rightarrow> G, \\<Delta> =\n           F \\<^bold>\\<rightarrow> G, \\<Delta>' \\<Longrightarrow>\n           F, Ga, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, Fa \\<^bold>\\<rightarrow>\n                            Ga, \\<Gamma> \\<Rightarrow>\n                         G, \\<Delta> \\<down> Suc n\n 10. \\<And>Fa \\<Gamma> Ga \\<Delta> n \\<Delta>'.\n        \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow> Ga, \\<Delta> \\<down> n;\n         \\<And>\\<Delta>'.\n            Ga, \\<Delta> =\n            F \\<^bold>\\<rightarrow> G, \\<Delta>' \\<Longrightarrow>\n            F, Fa, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n         Fa \\<^bold>\\<rightarrow> Ga, \\<Delta> =\n         F \\<^bold>\\<rightarrow> G, \\<Delta>'\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\n                          G, \\<Delta>' \\<down> Suc n", "thus ?case"], ["proof (prove)\nusing this:\n  F', \\<Gamma> \\<Rightarrow> G', \\<Delta>' \\<down> n_\n  G', \\<Delta>' = F \\<^bold>\\<rightarrow> G, ?\\<Delta> \\<Longrightarrow>\n  F, F', \\<Gamma> \\<Rightarrow> G, ?\\<Delta> \\<down> n_\n  F' \\<^bold>\\<rightarrow> G', \\<Delta>' =\n  F \\<^bold>\\<rightarrow> G, \\<Delta>\n\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> Suc n_", "by(cases \"Or F G = Or F' G'\"; \n       auto intro!: SCc.intros(3-) dest!: multi_member_split simp: lem1 lem2 deeper_suc;\n       blast)"], ["proof (state)\nthis:\n  F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> Suc n_\n\ngoal (9 subgoals):\n 1. \\<And>\\<Gamma> n \\<Delta>.\n       \\<bottom> \\<in># \\<Gamma> \\<Longrightarrow>\n       F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> Suc n\n 2. \\<And>k \\<Gamma> n \\<Delta>.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>;\n        Atom k \\<in># F \\<^bold>\\<rightarrow> G, \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> Fa n \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow>\n                Fa, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, F \\<^bold>\\<rightarrow> G, \\<Delta> =\n           F \\<^bold>\\<rightarrow> G, \\<Delta>' \\<Longrightarrow>\n           F, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<^bold>\\<not> Fa, \\<Gamma> \\<Rightarrow>\n                         G, \\<Delta> \\<down> Suc n\n 4. \\<And>Fa \\<Gamma> \\<Delta> n \\<Delta>'.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           \\<Delta> = F \\<^bold>\\<rightarrow> G, \\<Delta>' \\<Longrightarrow>\n           F, Fa, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        \\<^bold>\\<not> Fa, \\<Delta> =\n        F \\<^bold>\\<rightarrow> G, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\n                         G, \\<Delta>' \\<down> Suc n\n 5. \\<And>Fa Ga \\<Gamma> n \\<Delta>.\n       \\<lbrakk>Fa, Ga, \\<Gamma> \\<Rightarrow>\n                F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<rightarrow> G, \\<Delta> =\n           F \\<^bold>\\<rightarrow> G, \\<Delta>' \\<Longrightarrow>\n           F, Fa, Ga, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, Fa \\<^bold>\\<and> Ga, \\<Gamma> \\<Rightarrow>\n                         G, \\<Delta> \\<down> Suc n\n 6. \\<And>\\<Gamma> Fa \\<Delta> n Ga \\<Delta>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, \\<Delta> =\n           F \\<^bold>\\<rightarrow> G, \\<Delta>' \\<Longrightarrow>\n           F, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        \\<Gamma> \\<Rightarrow> Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Ga, \\<Delta> =\n           F \\<^bold>\\<rightarrow> G, \\<Delta>' \\<Longrightarrow>\n           F, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        Fa \\<^bold>\\<and> Ga, \\<Delta> =\n        F \\<^bold>\\<rightarrow> G, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\n                         G, \\<Delta>' \\<down> Suc n\n 7. \\<And>Fa \\<Gamma> n Ga \\<Delta>.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow>\n                F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<rightarrow> G, \\<Delta> =\n           F \\<^bold>\\<rightarrow> G, \\<Delta>' \\<Longrightarrow>\n           F, Fa, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        Ga, \\<Gamma> \\<Rightarrow>\n        F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<rightarrow> G, \\<Delta> =\n           F \\<^bold>\\<rightarrow> G, \\<Delta>' \\<Longrightarrow>\n           F, Ga, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, Fa \\<^bold>\\<or> Ga, \\<Gamma> \\<Rightarrow>\n                         G, \\<Delta> \\<down> Suc n\n 8. \\<And>\\<Gamma> Fa Ga \\<Delta> n \\<Delta>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, Ga, \\<Delta> =\n           F \\<^bold>\\<rightarrow> G, \\<Delta>' \\<Longrightarrow>\n           F, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        Fa \\<^bold>\\<or> Ga, \\<Delta> =\n        F \\<^bold>\\<rightarrow> G, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\n                         G, \\<Delta>' \\<down> Suc n\n 9. \\<And>\\<Gamma> Fa n Ga \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow>\n                Fa, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, F \\<^bold>\\<rightarrow> G, \\<Delta> =\n           F \\<^bold>\\<rightarrow> G, \\<Delta>' \\<Longrightarrow>\n           F, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        Ga, \\<Gamma> \\<Rightarrow>\n        F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<rightarrow> G, \\<Delta> =\n           F \\<^bold>\\<rightarrow> G, \\<Delta>' \\<Longrightarrow>\n           F, Ga, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, Fa \\<^bold>\\<rightarrow>\n                            Ga, \\<Gamma> \\<Rightarrow>\n                         G, \\<Delta> \\<down> Suc n", "qed (fastforce intro!: SCc.intros(3-) dest!: multi_member_split simp: SCc.intros lem1 lem2)+"], ["", "lemma AndR_inv':\nshows \"\\<Gamma> \\<Rightarrow> And F G, \\<Delta> \\<down> n \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n \\<and> \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow>\n    F \\<^bold>\\<and> G, \\<Delta> \\<down> n \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n \\<and>\n    \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n", "proof(induction \\<Gamma> \"And F G, \\<Delta>\" n arbitrary: \\<Delta> rule: SCc.induct)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>\\<Gamma> n \\<Delta>.\n       \\<bottom> \\<in># \\<Gamma> \\<Longrightarrow>\n       \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n \\<and>\n       \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> Suc n\n 2. \\<And>k \\<Gamma> n \\<Delta>.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>;\n        Atom k \\<in># F \\<^bold>\\<and> G, \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, \\<Delta> \\<down> Suc n \\<and>\n                         \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> Fa n \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow>\n                Fa, F \\<^bold>\\<and> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, F \\<^bold>\\<and> G, \\<Delta> =\n           F \\<^bold>\\<and> G, \\<Delta>' \\<Longrightarrow>\n           \\<Gamma> \\<Rightarrow> F, \\<Delta>' \\<down> n \\<and>\n           \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>\\<not> Fa, \\<Gamma> \\<Rightarrow>\n                         F, \\<Delta> \\<down> Suc n \\<and>\n                         \\<^bold>\\<not> Fa, \\<Gamma> \\<Rightarrow>\n                         G, \\<Delta> \\<down> Suc n\n 4. \\<And>Fa \\<Gamma> \\<Delta> n \\<Delta>'.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>' \\<Longrightarrow>\n           Fa, \\<Gamma> \\<Rightarrow> F, \\<Delta>' \\<down> n \\<and>\n           Fa, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        \\<^bold>\\<not> Fa, \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, \\<Delta>' \\<down> Suc n \\<and>\n                         \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> Suc n\n 5. \\<And>Fa Ga \\<Gamma> n \\<Delta>.\n       \\<lbrakk>Fa, Ga, \\<Gamma> \\<Rightarrow>\n                F \\<^bold>\\<and> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<and> G, \\<Delta> =\n           F \\<^bold>\\<and> G, \\<Delta>' \\<Longrightarrow>\n           Fa, Ga, \\<Gamma> \\<Rightarrow> F, \\<Delta>' \\<down> n \\<and>\n           Fa, Ga, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> Fa \\<^bold>\\<and> Ga, \\<Gamma> \\<Rightarrow>\n                         F, \\<Delta> \\<down> Suc n \\<and>\n                         Fa \\<^bold>\\<and> Ga, \\<Gamma> \\<Rightarrow>\n                         G, \\<Delta> \\<down> Suc n\n 6. \\<And>\\<Gamma> Fa \\<Delta> n Ga \\<Delta>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>' \\<Longrightarrow>\n           \\<Gamma> \\<Rightarrow> F, \\<Delta>' \\<down> n \\<and>\n           \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        \\<Gamma> \\<Rightarrow> Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Ga, \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>' \\<Longrightarrow>\n           \\<Gamma> \\<Rightarrow> F, \\<Delta>' \\<down> n \\<and>\n           \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        Fa \\<^bold>\\<and> Ga, \\<Delta> =\n        F \\<^bold>\\<and> G, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, \\<Delta>' \\<down> Suc n \\<and>\n                         \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> Suc n\n 7. \\<And>Fa \\<Gamma> n Ga \\<Delta>.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow>\n                F \\<^bold>\\<and> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<and> G, \\<Delta> =\n           F \\<^bold>\\<and> G, \\<Delta>' \\<Longrightarrow>\n           Fa, \\<Gamma> \\<Rightarrow> F, \\<Delta>' \\<down> n \\<and>\n           Fa, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        Ga, \\<Gamma> \\<Rightarrow> F \\<^bold>\\<and> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<and> G, \\<Delta> =\n           F \\<^bold>\\<and> G, \\<Delta>' \\<Longrightarrow>\n           Ga, \\<Gamma> \\<Rightarrow> F, \\<Delta>' \\<down> n \\<and>\n           Ga, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> Fa \\<^bold>\\<or> Ga, \\<Gamma> \\<Rightarrow>\n                         F, \\<Delta> \\<down> Suc n \\<and>\n                         Fa \\<^bold>\\<or> Ga, \\<Gamma> \\<Rightarrow>\n                         G, \\<Delta> \\<down> Suc n\n 8. \\<And>\\<Gamma> Fa Ga \\<Delta> n \\<Delta>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, Ga, \\<Delta> =\n           F \\<^bold>\\<and> G, \\<Delta>' \\<Longrightarrow>\n           \\<Gamma> \\<Rightarrow> F, \\<Delta>' \\<down> n \\<and>\n           \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        Fa \\<^bold>\\<or> Ga, \\<Delta> =\n        F \\<^bold>\\<and> G, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, \\<Delta>' \\<down> Suc n \\<and>\n                         \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> Suc n\n 9. \\<And>\\<Gamma> Fa n Ga \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow>\n                Fa, F \\<^bold>\\<and> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, F \\<^bold>\\<and> G, \\<Delta> =\n           F \\<^bold>\\<and> G, \\<Delta>' \\<Longrightarrow>\n           \\<Gamma> \\<Rightarrow> F, \\<Delta>' \\<down> n \\<and>\n           \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        Ga, \\<Gamma> \\<Rightarrow> F \\<^bold>\\<and> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<and> G, \\<Delta> =\n           F \\<^bold>\\<and> G, \\<Delta>' \\<Longrightarrow>\n           Ga, \\<Gamma> \\<Rightarrow> F, \\<Delta>' \\<down> n \\<and>\n           Ga, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> Fa \\<^bold>\\<rightarrow> Ga, \\<Gamma> \\<Rightarrow>\n                         F, \\<Delta> \\<down> Suc n \\<and>\n                         Fa \\<^bold>\\<rightarrow> Ga, \\<Gamma> \\<Rightarrow>\n                         G, \\<Delta> \\<down> Suc n\n 10. \\<And>Fa \\<Gamma> Ga \\<Delta> n \\<Delta>'.\n        \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow> Ga, \\<Delta> \\<down> n;\n         \\<And>\\<Delta>'.\n            Ga, \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>' \\<Longrightarrow>\n            Fa, \\<Gamma> \\<Rightarrow> F, \\<Delta>' \\<down> n \\<and>\n            Fa, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n         Fa \\<^bold>\\<rightarrow> Ga, \\<Delta> =\n         F \\<^bold>\\<and> G, \\<Delta>'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                          F, \\<Delta>' \\<down> Suc n \\<and>\n                          \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> Suc n", "case (AndR  \\<Gamma> F' \\<Delta>' n G')"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> F', \\<Delta>' \\<down> n\n  F', \\<Delta>' = F \\<^bold>\\<and> G, ?\\<Delta> \\<Longrightarrow>\n  \\<Gamma> \\<Rightarrow> F, ?\\<Delta> \\<down> n \\<and>\n  \\<Gamma> \\<Rightarrow> G, ?\\<Delta> \\<down> n\n  \\<Gamma> \\<Rightarrow> G', \\<Delta>' \\<down> n\n  G', \\<Delta>' = F \\<^bold>\\<and> G, ?\\<Delta> \\<Longrightarrow>\n  \\<Gamma> \\<Rightarrow> F, ?\\<Delta> \\<down> n \\<and>\n  \\<Gamma> \\<Rightarrow> G, ?\\<Delta> \\<down> n\n  F' \\<^bold>\\<and> G', \\<Delta>' = F \\<^bold>\\<and> G, \\<Delta>\n\ngoal (10 subgoals):\n 1. \\<And>\\<Gamma> n \\<Delta>.\n       \\<bottom> \\<in># \\<Gamma> \\<Longrightarrow>\n       \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n \\<and>\n       \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> Suc n\n 2. \\<And>k \\<Gamma> n \\<Delta>.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>;\n        Atom k \\<in># F \\<^bold>\\<and> G, \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, \\<Delta> \\<down> Suc n \\<and>\n                         \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> Fa n \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow>\n                Fa, F \\<^bold>\\<and> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, F \\<^bold>\\<and> G, \\<Delta> =\n           F \\<^bold>\\<and> G, \\<Delta>' \\<Longrightarrow>\n           \\<Gamma> \\<Rightarrow> F, \\<Delta>' \\<down> n \\<and>\n           \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>\\<not> Fa, \\<Gamma> \\<Rightarrow>\n                         F, \\<Delta> \\<down> Suc n \\<and>\n                         \\<^bold>\\<not> Fa, \\<Gamma> \\<Rightarrow>\n                         G, \\<Delta> \\<down> Suc n\n 4. \\<And>Fa \\<Gamma> \\<Delta> n \\<Delta>'.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>' \\<Longrightarrow>\n           Fa, \\<Gamma> \\<Rightarrow> F, \\<Delta>' \\<down> n \\<and>\n           Fa, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        \\<^bold>\\<not> Fa, \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, \\<Delta>' \\<down> Suc n \\<and>\n                         \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> Suc n\n 5. \\<And>Fa Ga \\<Gamma> n \\<Delta>.\n       \\<lbrakk>Fa, Ga, \\<Gamma> \\<Rightarrow>\n                F \\<^bold>\\<and> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<and> G, \\<Delta> =\n           F \\<^bold>\\<and> G, \\<Delta>' \\<Longrightarrow>\n           Fa, Ga, \\<Gamma> \\<Rightarrow> F, \\<Delta>' \\<down> n \\<and>\n           Fa, Ga, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> Fa \\<^bold>\\<and> Ga, \\<Gamma> \\<Rightarrow>\n                         F, \\<Delta> \\<down> Suc n \\<and>\n                         Fa \\<^bold>\\<and> Ga, \\<Gamma> \\<Rightarrow>\n                         G, \\<Delta> \\<down> Suc n\n 6. \\<And>\\<Gamma> Fa \\<Delta> n Ga \\<Delta>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>' \\<Longrightarrow>\n           \\<Gamma> \\<Rightarrow> F, \\<Delta>' \\<down> n \\<and>\n           \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        \\<Gamma> \\<Rightarrow> Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Ga, \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>' \\<Longrightarrow>\n           \\<Gamma> \\<Rightarrow> F, \\<Delta>' \\<down> n \\<and>\n           \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        Fa \\<^bold>\\<and> Ga, \\<Delta> =\n        F \\<^bold>\\<and> G, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, \\<Delta>' \\<down> Suc n \\<and>\n                         \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> Suc n\n 7. \\<And>Fa \\<Gamma> n Ga \\<Delta>.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow>\n                F \\<^bold>\\<and> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<and> G, \\<Delta> =\n           F \\<^bold>\\<and> G, \\<Delta>' \\<Longrightarrow>\n           Fa, \\<Gamma> \\<Rightarrow> F, \\<Delta>' \\<down> n \\<and>\n           Fa, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        Ga, \\<Gamma> \\<Rightarrow> F \\<^bold>\\<and> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<and> G, \\<Delta> =\n           F \\<^bold>\\<and> G, \\<Delta>' \\<Longrightarrow>\n           Ga, \\<Gamma> \\<Rightarrow> F, \\<Delta>' \\<down> n \\<and>\n           Ga, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> Fa \\<^bold>\\<or> Ga, \\<Gamma> \\<Rightarrow>\n                         F, \\<Delta> \\<down> Suc n \\<and>\n                         Fa \\<^bold>\\<or> Ga, \\<Gamma> \\<Rightarrow>\n                         G, \\<Delta> \\<down> Suc n\n 8. \\<And>\\<Gamma> Fa Ga \\<Delta> n \\<Delta>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, Ga, \\<Delta> =\n           F \\<^bold>\\<and> G, \\<Delta>' \\<Longrightarrow>\n           \\<Gamma> \\<Rightarrow> F, \\<Delta>' \\<down> n \\<and>\n           \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        Fa \\<^bold>\\<or> Ga, \\<Delta> =\n        F \\<^bold>\\<and> G, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, \\<Delta>' \\<down> Suc n \\<and>\n                         \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> Suc n\n 9. \\<And>\\<Gamma> Fa n Ga \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow>\n                Fa, F \\<^bold>\\<and> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, F \\<^bold>\\<and> G, \\<Delta> =\n           F \\<^bold>\\<and> G, \\<Delta>' \\<Longrightarrow>\n           \\<Gamma> \\<Rightarrow> F, \\<Delta>' \\<down> n \\<and>\n           \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        Ga, \\<Gamma> \\<Rightarrow> F \\<^bold>\\<and> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<and> G, \\<Delta> =\n           F \\<^bold>\\<and> G, \\<Delta>' \\<Longrightarrow>\n           Ga, \\<Gamma> \\<Rightarrow> F, \\<Delta>' \\<down> n \\<and>\n           Ga, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> Fa \\<^bold>\\<rightarrow> Ga, \\<Gamma> \\<Rightarrow>\n                         F, \\<Delta> \\<down> Suc n \\<and>\n                         Fa \\<^bold>\\<rightarrow> Ga, \\<Gamma> \\<Rightarrow>\n                         G, \\<Delta> \\<down> Suc n\n 10. \\<And>Fa \\<Gamma> Ga \\<Delta> n \\<Delta>'.\n        \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow> Ga, \\<Delta> \\<down> n;\n         \\<And>\\<Delta>'.\n            Ga, \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>' \\<Longrightarrow>\n            Fa, \\<Gamma> \\<Rightarrow> F, \\<Delta>' \\<down> n \\<and>\n            Fa, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n         Fa \\<^bold>\\<rightarrow> Ga, \\<Delta> =\n         F \\<^bold>\\<and> G, \\<Delta>'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                          F, \\<Delta>' \\<down> Suc n \\<and>\n                          \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> Suc n", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> F', \\<Delta>' \\<down> n\n  F', \\<Delta>' = F \\<^bold>\\<and> G, ?\\<Delta> \\<Longrightarrow>\n  \\<Gamma> \\<Rightarrow> F, ?\\<Delta> \\<down> n \\<and>\n  \\<Gamma> \\<Rightarrow> G, ?\\<Delta> \\<down> n\n  \\<Gamma> \\<Rightarrow> G', \\<Delta>' \\<down> n\n  G', \\<Delta>' = F \\<^bold>\\<and> G, ?\\<Delta> \\<Longrightarrow>\n  \\<Gamma> \\<Rightarrow> F, ?\\<Delta> \\<down> n \\<and>\n  \\<Gamma> \\<Rightarrow> G, ?\\<Delta> \\<down> n\n  F' \\<^bold>\\<and> G', \\<Delta>' = F \\<^bold>\\<and> G, \\<Delta>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n \\<and>\n    \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> Suc n", "by(cases \"Or F G = Or F' G'\"; \n       auto intro!: SCc.intros(3-) dest!: multi_member_split simp: lem1 lem2 deeper_suc;\n       blast)"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n \\<and>\n  \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> Suc n\n\ngoal (9 subgoals):\n 1. \\<And>\\<Gamma> n \\<Delta>.\n       \\<bottom> \\<in># \\<Gamma> \\<Longrightarrow>\n       \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n \\<and>\n       \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> Suc n\n 2. \\<And>k \\<Gamma> n \\<Delta>.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>;\n        Atom k \\<in># F \\<^bold>\\<and> G, \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, \\<Delta> \\<down> Suc n \\<and>\n                         \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> Fa n \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow>\n                Fa, F \\<^bold>\\<and> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, F \\<^bold>\\<and> G, \\<Delta> =\n           F \\<^bold>\\<and> G, \\<Delta>' \\<Longrightarrow>\n           \\<Gamma> \\<Rightarrow> F, \\<Delta>' \\<down> n \\<and>\n           \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>\\<not> Fa, \\<Gamma> \\<Rightarrow>\n                         F, \\<Delta> \\<down> Suc n \\<and>\n                         \\<^bold>\\<not> Fa, \\<Gamma> \\<Rightarrow>\n                         G, \\<Delta> \\<down> Suc n\n 4. \\<And>Fa \\<Gamma> \\<Delta> n \\<Delta>'.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>' \\<Longrightarrow>\n           Fa, \\<Gamma> \\<Rightarrow> F, \\<Delta>' \\<down> n \\<and>\n           Fa, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        \\<^bold>\\<not> Fa, \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, \\<Delta>' \\<down> Suc n \\<and>\n                         \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> Suc n\n 5. \\<And>Fa Ga \\<Gamma> n \\<Delta>.\n       \\<lbrakk>Fa, Ga, \\<Gamma> \\<Rightarrow>\n                F \\<^bold>\\<and> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<and> G, \\<Delta> =\n           F \\<^bold>\\<and> G, \\<Delta>' \\<Longrightarrow>\n           Fa, Ga, \\<Gamma> \\<Rightarrow> F, \\<Delta>' \\<down> n \\<and>\n           Fa, Ga, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> Fa \\<^bold>\\<and> Ga, \\<Gamma> \\<Rightarrow>\n                         F, \\<Delta> \\<down> Suc n \\<and>\n                         Fa \\<^bold>\\<and> Ga, \\<Gamma> \\<Rightarrow>\n                         G, \\<Delta> \\<down> Suc n\n 6. \\<And>Fa \\<Gamma> n Ga \\<Delta>.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow>\n                F \\<^bold>\\<and> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<and> G, \\<Delta> =\n           F \\<^bold>\\<and> G, \\<Delta>' \\<Longrightarrow>\n           Fa, \\<Gamma> \\<Rightarrow> F, \\<Delta>' \\<down> n \\<and>\n           Fa, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        Ga, \\<Gamma> \\<Rightarrow> F \\<^bold>\\<and> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<and> G, \\<Delta> =\n           F \\<^bold>\\<and> G, \\<Delta>' \\<Longrightarrow>\n           Ga, \\<Gamma> \\<Rightarrow> F, \\<Delta>' \\<down> n \\<and>\n           Ga, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> Fa \\<^bold>\\<or> Ga, \\<Gamma> \\<Rightarrow>\n                         F, \\<Delta> \\<down> Suc n \\<and>\n                         Fa \\<^bold>\\<or> Ga, \\<Gamma> \\<Rightarrow>\n                         G, \\<Delta> \\<down> Suc n\n 7. \\<And>\\<Gamma> Fa Ga \\<Delta> n \\<Delta>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, Ga, \\<Delta> =\n           F \\<^bold>\\<and> G, \\<Delta>' \\<Longrightarrow>\n           \\<Gamma> \\<Rightarrow> F, \\<Delta>' \\<down> n \\<and>\n           \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        Fa \\<^bold>\\<or> Ga, \\<Delta> =\n        F \\<^bold>\\<and> G, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, \\<Delta>' \\<down> Suc n \\<and>\n                         \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> Suc n\n 8. \\<And>\\<Gamma> Fa n Ga \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow>\n                Fa, F \\<^bold>\\<and> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, F \\<^bold>\\<and> G, \\<Delta> =\n           F \\<^bold>\\<and> G, \\<Delta>' \\<Longrightarrow>\n           \\<Gamma> \\<Rightarrow> F, \\<Delta>' \\<down> n \\<and>\n           \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        Ga, \\<Gamma> \\<Rightarrow> F \\<^bold>\\<and> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<and> G, \\<Delta> =\n           F \\<^bold>\\<and> G, \\<Delta>' \\<Longrightarrow>\n           Ga, \\<Gamma> \\<Rightarrow> F, \\<Delta>' \\<down> n \\<and>\n           Ga, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> Fa \\<^bold>\\<rightarrow> Ga, \\<Gamma> \\<Rightarrow>\n                         F, \\<Delta> \\<down> Suc n \\<and>\n                         Fa \\<^bold>\\<rightarrow> Ga, \\<Gamma> \\<Rightarrow>\n                         G, \\<Delta> \\<down> Suc n\n 9. \\<And>Fa \\<Gamma> Ga \\<Delta> n \\<Delta>'.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow> Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Ga, \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>' \\<Longrightarrow>\n           Fa, \\<Gamma> \\<Rightarrow> F, \\<Delta>' \\<down> n \\<and>\n           Fa, \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n        Fa \\<^bold>\\<rightarrow> Ga, \\<Delta> =\n        F \\<^bold>\\<and> G, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, \\<Delta>' \\<down> Suc n \\<and>\n                         \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> Suc n", "qed (fastforce intro!: SCc.intros(3-) dest!: multi_member_split simp: SCc.intros lem1 lem2)+"], ["", "lemma OrR_inv': \"\\<Gamma> \\<Rightarrow> Or F G, \\<Delta> \\<down> n \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F,G,\\<Delta> \\<down> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow>\n    F \\<^bold>\\<or> G, \\<Delta> \\<down> n \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n", "proof(induction \\<Gamma> \"Or F G, \\<Delta>\" n arbitrary: \\<Delta> rule: SCc.induct)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>\\<Gamma> n \\<Delta>.\n       \\<bottom> \\<in># \\<Gamma> \\<Longrightarrow>\n       \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> Suc n\n 2. \\<And>k \\<Gamma> n \\<Delta>.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>;\n        Atom k \\<in># F \\<^bold>\\<or> G, \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> Fa n \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow>\n                Fa, F \\<^bold>\\<or> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, F \\<^bold>\\<or> G, \\<Delta> =\n           F \\<^bold>\\<or> G, \\<Delta>' \\<Longrightarrow>\n           \\<Gamma> \\<Rightarrow> F, G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>\\<not> Fa, \\<Gamma> \\<Rightarrow>\n                         F, G, \\<Delta> \\<down> Suc n\n 4. \\<And>Fa \\<Gamma> \\<Delta> n \\<Delta>'.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>' \\<Longrightarrow>\n           Fa, \\<Gamma> \\<Rightarrow> F, G, \\<Delta>' \\<down> n;\n        \\<^bold>\\<not> Fa, \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, G, \\<Delta>' \\<down> Suc n\n 5. \\<And>Fa Ga \\<Gamma> n \\<Delta>.\n       \\<lbrakk>Fa, Ga, \\<Gamma> \\<Rightarrow>\n                F \\<^bold>\\<or> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<or> G, \\<Delta> =\n           F \\<^bold>\\<or> G, \\<Delta>' \\<Longrightarrow>\n           Fa, Ga, \\<Gamma> \\<Rightarrow> F, G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> Fa \\<^bold>\\<and> Ga, \\<Gamma> \\<Rightarrow>\n                         F, G, \\<Delta> \\<down> Suc n\n 6. \\<And>\\<Gamma> Fa \\<Delta> n Ga \\<Delta>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>' \\<Longrightarrow>\n           \\<Gamma> \\<Rightarrow> F, G, \\<Delta>' \\<down> n;\n        \\<Gamma> \\<Rightarrow> Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Ga, \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>' \\<Longrightarrow>\n           \\<Gamma> \\<Rightarrow> F, G, \\<Delta>' \\<down> n;\n        Fa \\<^bold>\\<and> Ga, \\<Delta> =\n        F \\<^bold>\\<or> G, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, G, \\<Delta>' \\<down> Suc n\n 7. \\<And>Fa \\<Gamma> n Ga \\<Delta>.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow>\n                F \\<^bold>\\<or> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<or> G, \\<Delta> =\n           F \\<^bold>\\<or> G, \\<Delta>' \\<Longrightarrow>\n           Fa, \\<Gamma> \\<Rightarrow> F, G, \\<Delta>' \\<down> n;\n        Ga, \\<Gamma> \\<Rightarrow> F \\<^bold>\\<or> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<or> G, \\<Delta> =\n           F \\<^bold>\\<or> G, \\<Delta>' \\<Longrightarrow>\n           Ga, \\<Gamma> \\<Rightarrow> F, G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> Fa \\<^bold>\\<or> Ga, \\<Gamma> \\<Rightarrow>\n                         F, G, \\<Delta> \\<down> Suc n\n 8. \\<And>\\<Gamma> Fa Ga \\<Delta> n \\<Delta>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, Ga, \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>' \\<Longrightarrow>\n           \\<Gamma> \\<Rightarrow> F, G, \\<Delta>' \\<down> n;\n        Fa \\<^bold>\\<or> Ga, \\<Delta> =\n        F \\<^bold>\\<or> G, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, G, \\<Delta>' \\<down> Suc n\n 9. \\<And>\\<Gamma> Fa n Ga \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow>\n                Fa, F \\<^bold>\\<or> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, F \\<^bold>\\<or> G, \\<Delta> =\n           F \\<^bold>\\<or> G, \\<Delta>' \\<Longrightarrow>\n           \\<Gamma> \\<Rightarrow> F, G, \\<Delta>' \\<down> n;\n        Ga, \\<Gamma> \\<Rightarrow> F \\<^bold>\\<or> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<or> G, \\<Delta> =\n           F \\<^bold>\\<or> G, \\<Delta>' \\<Longrightarrow>\n           Ga, \\<Gamma> \\<Rightarrow> F, G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> Fa \\<^bold>\\<rightarrow> Ga, \\<Gamma> \\<Rightarrow>\n                         F, G, \\<Delta> \\<down> Suc n\n 10. \\<And>Fa \\<Gamma> Ga \\<Delta> n \\<Delta>'.\n        \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow> Ga, \\<Delta> \\<down> n;\n         \\<And>\\<Delta>'.\n            Ga, \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>' \\<Longrightarrow>\n            Fa, \\<Gamma> \\<Rightarrow> F, G, \\<Delta>' \\<down> n;\n         Fa \\<^bold>\\<rightarrow> Ga, \\<Delta> =\n         F \\<^bold>\\<or> G, \\<Delta>'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                          F, G, \\<Delta>' \\<down> Suc n", "case (OrR  \\<Gamma> F' G' \\<Delta>')"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> F', G', \\<Delta>' \\<down> n_\n  F', G', \\<Delta>' = F \\<^bold>\\<or> G, ?\\<Delta> \\<Longrightarrow>\n  \\<Gamma> \\<Rightarrow> F, G, ?\\<Delta> \\<down> n_\n  F' \\<^bold>\\<or> G', \\<Delta>' = F \\<^bold>\\<or> G, \\<Delta>\n\ngoal (10 subgoals):\n 1. \\<And>\\<Gamma> n \\<Delta>.\n       \\<bottom> \\<in># \\<Gamma> \\<Longrightarrow>\n       \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> Suc n\n 2. \\<And>k \\<Gamma> n \\<Delta>.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>;\n        Atom k \\<in># F \\<^bold>\\<or> G, \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> Fa n \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow>\n                Fa, F \\<^bold>\\<or> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, F \\<^bold>\\<or> G, \\<Delta> =\n           F \\<^bold>\\<or> G, \\<Delta>' \\<Longrightarrow>\n           \\<Gamma> \\<Rightarrow> F, G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>\\<not> Fa, \\<Gamma> \\<Rightarrow>\n                         F, G, \\<Delta> \\<down> Suc n\n 4. \\<And>Fa \\<Gamma> \\<Delta> n \\<Delta>'.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>' \\<Longrightarrow>\n           Fa, \\<Gamma> \\<Rightarrow> F, G, \\<Delta>' \\<down> n;\n        \\<^bold>\\<not> Fa, \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, G, \\<Delta>' \\<down> Suc n\n 5. \\<And>Fa Ga \\<Gamma> n \\<Delta>.\n       \\<lbrakk>Fa, Ga, \\<Gamma> \\<Rightarrow>\n                F \\<^bold>\\<or> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<or> G, \\<Delta> =\n           F \\<^bold>\\<or> G, \\<Delta>' \\<Longrightarrow>\n           Fa, Ga, \\<Gamma> \\<Rightarrow> F, G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> Fa \\<^bold>\\<and> Ga, \\<Gamma> \\<Rightarrow>\n                         F, G, \\<Delta> \\<down> Suc n\n 6. \\<And>\\<Gamma> Fa \\<Delta> n Ga \\<Delta>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>' \\<Longrightarrow>\n           \\<Gamma> \\<Rightarrow> F, G, \\<Delta>' \\<down> n;\n        \\<Gamma> \\<Rightarrow> Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Ga, \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>' \\<Longrightarrow>\n           \\<Gamma> \\<Rightarrow> F, G, \\<Delta>' \\<down> n;\n        Fa \\<^bold>\\<and> Ga, \\<Delta> =\n        F \\<^bold>\\<or> G, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, G, \\<Delta>' \\<down> Suc n\n 7. \\<And>Fa \\<Gamma> n Ga \\<Delta>.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow>\n                F \\<^bold>\\<or> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<or> G, \\<Delta> =\n           F \\<^bold>\\<or> G, \\<Delta>' \\<Longrightarrow>\n           Fa, \\<Gamma> \\<Rightarrow> F, G, \\<Delta>' \\<down> n;\n        Ga, \\<Gamma> \\<Rightarrow> F \\<^bold>\\<or> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<or> G, \\<Delta> =\n           F \\<^bold>\\<or> G, \\<Delta>' \\<Longrightarrow>\n           Ga, \\<Gamma> \\<Rightarrow> F, G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> Fa \\<^bold>\\<or> Ga, \\<Gamma> \\<Rightarrow>\n                         F, G, \\<Delta> \\<down> Suc n\n 8. \\<And>\\<Gamma> Fa Ga \\<Delta> n \\<Delta>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, Ga, \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>' \\<Longrightarrow>\n           \\<Gamma> \\<Rightarrow> F, G, \\<Delta>' \\<down> n;\n        Fa \\<^bold>\\<or> Ga, \\<Delta> =\n        F \\<^bold>\\<or> G, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, G, \\<Delta>' \\<down> Suc n\n 9. \\<And>\\<Gamma> Fa n Ga \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow>\n                Fa, F \\<^bold>\\<or> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, F \\<^bold>\\<or> G, \\<Delta> =\n           F \\<^bold>\\<or> G, \\<Delta>' \\<Longrightarrow>\n           \\<Gamma> \\<Rightarrow> F, G, \\<Delta>' \\<down> n;\n        Ga, \\<Gamma> \\<Rightarrow> F \\<^bold>\\<or> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<or> G, \\<Delta> =\n           F \\<^bold>\\<or> G, \\<Delta>' \\<Longrightarrow>\n           Ga, \\<Gamma> \\<Rightarrow> F, G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> Fa \\<^bold>\\<rightarrow> Ga, \\<Gamma> \\<Rightarrow>\n                         F, G, \\<Delta> \\<down> Suc n\n 10. \\<And>Fa \\<Gamma> Ga \\<Delta> n \\<Delta>'.\n        \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow> Ga, \\<Delta> \\<down> n;\n         \\<And>\\<Delta>'.\n            Ga, \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>' \\<Longrightarrow>\n            Fa, \\<Gamma> \\<Rightarrow> F, G, \\<Delta>' \\<down> n;\n         Fa \\<^bold>\\<rightarrow> Ga, \\<Delta> =\n         F \\<^bold>\\<or> G, \\<Delta>'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                          F, G, \\<Delta>' \\<down> Suc n", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> F', G', \\<Delta>' \\<down> n_\n  F', G', \\<Delta>' = F \\<^bold>\\<or> G, ?\\<Delta> \\<Longrightarrow>\n  \\<Gamma> \\<Rightarrow> F, G, ?\\<Delta> \\<down> n_\n  F' \\<^bold>\\<or> G', \\<Delta>' = F \\<^bold>\\<or> G, \\<Delta>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> Suc n_", "by(cases \"Or F G = Or F' G'\"; \n       auto intro!: SCc.intros(3-) dest!: multi_member_split simp: lem1 lem2 deeper_suc;\n       metis add_mset_commute)"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> Suc n_\n\ngoal (9 subgoals):\n 1. \\<And>\\<Gamma> n \\<Delta>.\n       \\<bottom> \\<in># \\<Gamma> \\<Longrightarrow>\n       \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> Suc n\n 2. \\<And>k \\<Gamma> n \\<Delta>.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>;\n        Atom k \\<in># F \\<^bold>\\<or> G, \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> Fa n \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow>\n                Fa, F \\<^bold>\\<or> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, F \\<^bold>\\<or> G, \\<Delta> =\n           F \\<^bold>\\<or> G, \\<Delta>' \\<Longrightarrow>\n           \\<Gamma> \\<Rightarrow> F, G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>\\<not> Fa, \\<Gamma> \\<Rightarrow>\n                         F, G, \\<Delta> \\<down> Suc n\n 4. \\<And>Fa \\<Gamma> \\<Delta> n \\<Delta>'.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>' \\<Longrightarrow>\n           Fa, \\<Gamma> \\<Rightarrow> F, G, \\<Delta>' \\<down> n;\n        \\<^bold>\\<not> Fa, \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, G, \\<Delta>' \\<down> Suc n\n 5. \\<And>Fa Ga \\<Gamma> n \\<Delta>.\n       \\<lbrakk>Fa, Ga, \\<Gamma> \\<Rightarrow>\n                F \\<^bold>\\<or> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<or> G, \\<Delta> =\n           F \\<^bold>\\<or> G, \\<Delta>' \\<Longrightarrow>\n           Fa, Ga, \\<Gamma> \\<Rightarrow> F, G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> Fa \\<^bold>\\<and> Ga, \\<Gamma> \\<Rightarrow>\n                         F, G, \\<Delta> \\<down> Suc n\n 6. \\<And>\\<Gamma> Fa \\<Delta> n Ga \\<Delta>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>' \\<Longrightarrow>\n           \\<Gamma> \\<Rightarrow> F, G, \\<Delta>' \\<down> n;\n        \\<Gamma> \\<Rightarrow> Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Ga, \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>' \\<Longrightarrow>\n           \\<Gamma> \\<Rightarrow> F, G, \\<Delta>' \\<down> n;\n        Fa \\<^bold>\\<and> Ga, \\<Delta> =\n        F \\<^bold>\\<or> G, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, G, \\<Delta>' \\<down> Suc n\n 7. \\<And>Fa \\<Gamma> n Ga \\<Delta>.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow>\n                F \\<^bold>\\<or> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<or> G, \\<Delta> =\n           F \\<^bold>\\<or> G, \\<Delta>' \\<Longrightarrow>\n           Fa, \\<Gamma> \\<Rightarrow> F, G, \\<Delta>' \\<down> n;\n        Ga, \\<Gamma> \\<Rightarrow> F \\<^bold>\\<or> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<or> G, \\<Delta> =\n           F \\<^bold>\\<or> G, \\<Delta>' \\<Longrightarrow>\n           Ga, \\<Gamma> \\<Rightarrow> F, G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> Fa \\<^bold>\\<or> Ga, \\<Gamma> \\<Rightarrow>\n                         F, G, \\<Delta> \\<down> Suc n\n 8. \\<And>\\<Gamma> Fa n Ga \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow>\n                Fa, F \\<^bold>\\<or> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, F \\<^bold>\\<or> G, \\<Delta> =\n           F \\<^bold>\\<or> G, \\<Delta>' \\<Longrightarrow>\n           \\<Gamma> \\<Rightarrow> F, G, \\<Delta>' \\<down> n;\n        Ga, \\<Gamma> \\<Rightarrow> F \\<^bold>\\<or> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           F \\<^bold>\\<or> G, \\<Delta> =\n           F \\<^bold>\\<or> G, \\<Delta>' \\<Longrightarrow>\n           Ga, \\<Gamma> \\<Rightarrow> F, G, \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> Fa \\<^bold>\\<rightarrow> Ga, \\<Gamma> \\<Rightarrow>\n                         F, G, \\<Delta> \\<down> Suc n\n 9. \\<And>Fa \\<Gamma> Ga \\<Delta> n \\<Delta>'.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow> Ga, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Ga, \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>' \\<Longrightarrow>\n           Fa, \\<Gamma> \\<Rightarrow> F, G, \\<Delta>' \\<down> n;\n        Fa \\<^bold>\\<rightarrow> Ga, \\<Delta> =\n        F \\<^bold>\\<or> G, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F, G, \\<Delta>' \\<down> Suc n", "qed (fastforce intro!: SCc.intros(3-) dest!: multi_member_split simp: SCc.intros lem1 lem2)+"], ["", "lemma NotR_inv': \"\\<Gamma> \\<Rightarrow> Not F, \\<Delta> \\<down> n \\<Longrightarrow> F,\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow>\n    \\<^bold>\\<not> F, \\<Delta> \\<down> n \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n", "proof(induction \\<Gamma> \"Not F, \\<Delta>\" n arbitrary: \\<Delta> rule: SCc.induct)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>\\<Gamma> n \\<Delta>.\n       \\<bottom> \\<in># \\<Gamma> \\<Longrightarrow>\n       F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<And>k \\<Gamma> n \\<Delta>.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>;\n        Atom k \\<in># \\<^bold>\\<not> F, \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> Fa n \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow>\n                Fa, \\<^bold>\\<not> F, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, \\<^bold>\\<not> F, \\<Delta> =\n           \\<^bold>\\<not> F, \\<Delta>' \\<Longrightarrow>\n           F, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<^bold>\\<not> Fa, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n\n 4. \\<And>Fa \\<Gamma> \\<Delta> n \\<Delta>'.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           \\<Delta> = \\<^bold>\\<not> F, \\<Delta>' \\<Longrightarrow>\n           F, Fa, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n        \\<^bold>\\<not> Fa, \\<Delta> = \\<^bold>\\<not> F, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> Suc n\n 5. \\<And>Fa G \\<Gamma> n \\<Delta>.\n       \\<lbrakk>Fa, G, \\<Gamma> \\<Rightarrow>\n                \\<^bold>\\<not> F, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           \\<^bold>\\<not> F, \\<Delta> =\n           \\<^bold>\\<not> F, \\<Delta>' \\<Longrightarrow>\n           F, Fa, G, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, Fa \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n\n 6. \\<And>\\<Gamma> Fa \\<Delta> n G \\<Delta>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, \\<Delta> = \\<^bold>\\<not> F, \\<Delta>' \\<Longrightarrow>\n           F, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           G, \\<Delta> = \\<^bold>\\<not> F, \\<Delta>' \\<Longrightarrow>\n           F, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n        Fa \\<^bold>\\<and> G, \\<Delta> = \\<^bold>\\<not> F, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> Suc n\n 7. \\<And>Fa \\<Gamma> n G \\<Delta>.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow>\n                \\<^bold>\\<not> F, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           \\<^bold>\\<not> F, \\<Delta> =\n           \\<^bold>\\<not> F, \\<Delta>' \\<Longrightarrow>\n           F, Fa, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<^bold>\\<not> F, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           \\<^bold>\\<not> F, \\<Delta> =\n           \\<^bold>\\<not> F, \\<Delta>' \\<Longrightarrow>\n           F, G, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, Fa \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n\n 8. \\<And>\\<Gamma> Fa G \\<Delta> n \\<Delta>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, G, \\<Delta> = \\<^bold>\\<not> F, \\<Delta>' \\<Longrightarrow>\n           F, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n        Fa \\<^bold>\\<or> G, \\<Delta> = \\<^bold>\\<not> F, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> Suc n\n 9. \\<And>\\<Gamma> Fa n G \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow>\n                Fa, \\<^bold>\\<not> F, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, \\<^bold>\\<not> F, \\<Delta> =\n           \\<^bold>\\<not> F, \\<Delta>' \\<Longrightarrow>\n           F, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<^bold>\\<not> F, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           \\<^bold>\\<not> F, \\<Delta> =\n           \\<^bold>\\<not> F, \\<Delta>' \\<Longrightarrow>\n           F, G, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, Fa \\<^bold>\\<rightarrow>\n                            G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n\n 10. \\<And>Fa \\<Gamma> G \\<Delta> n \\<Delta>'.\n        \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n         \\<And>\\<Delta>'.\n            G, \\<Delta> = \\<^bold>\\<not> F, \\<Delta>' \\<Longrightarrow>\n            F, Fa, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n         Fa \\<^bold>\\<rightarrow> G, \\<Delta> =\n         \\<^bold>\\<not> F, \\<Delta>'\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> Suc n", "case (NotR  G \\<Gamma> \\<Delta>')"], ["proof (state)\nthis:\n  G, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n_\n  \\<Delta>' = \\<^bold>\\<not> F, ?\\<Delta> \\<Longrightarrow>\n  F, G, \\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n_\n  \\<^bold>\\<not> G, \\<Delta>' = \\<^bold>\\<not> F, \\<Delta>\n\ngoal (10 subgoals):\n 1. \\<And>\\<Gamma> n \\<Delta>.\n       \\<bottom> \\<in># \\<Gamma> \\<Longrightarrow>\n       F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<And>k \\<Gamma> n \\<Delta>.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>;\n        Atom k \\<in># \\<^bold>\\<not> F, \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> Fa n \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow>\n                Fa, \\<^bold>\\<not> F, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, \\<^bold>\\<not> F, \\<Delta> =\n           \\<^bold>\\<not> F, \\<Delta>' \\<Longrightarrow>\n           F, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<^bold>\\<not> Fa, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n\n 4. \\<And>Fa \\<Gamma> \\<Delta> n \\<Delta>'.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           \\<Delta> = \\<^bold>\\<not> F, \\<Delta>' \\<Longrightarrow>\n           F, Fa, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n        \\<^bold>\\<not> Fa, \\<Delta> = \\<^bold>\\<not> F, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> Suc n\n 5. \\<And>Fa G \\<Gamma> n \\<Delta>.\n       \\<lbrakk>Fa, G, \\<Gamma> \\<Rightarrow>\n                \\<^bold>\\<not> F, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           \\<^bold>\\<not> F, \\<Delta> =\n           \\<^bold>\\<not> F, \\<Delta>' \\<Longrightarrow>\n           F, Fa, G, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, Fa \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n\n 6. \\<And>\\<Gamma> Fa \\<Delta> n G \\<Delta>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, \\<Delta> = \\<^bold>\\<not> F, \\<Delta>' \\<Longrightarrow>\n           F, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           G, \\<Delta> = \\<^bold>\\<not> F, \\<Delta>' \\<Longrightarrow>\n           F, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n        Fa \\<^bold>\\<and> G, \\<Delta> = \\<^bold>\\<not> F, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> Suc n\n 7. \\<And>Fa \\<Gamma> n G \\<Delta>.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow>\n                \\<^bold>\\<not> F, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           \\<^bold>\\<not> F, \\<Delta> =\n           \\<^bold>\\<not> F, \\<Delta>' \\<Longrightarrow>\n           F, Fa, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<^bold>\\<not> F, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           \\<^bold>\\<not> F, \\<Delta> =\n           \\<^bold>\\<not> F, \\<Delta>' \\<Longrightarrow>\n           F, G, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, Fa \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n\n 8. \\<And>\\<Gamma> Fa G \\<Delta> n \\<Delta>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, G, \\<Delta> = \\<^bold>\\<not> F, \\<Delta>' \\<Longrightarrow>\n           F, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n        Fa \\<^bold>\\<or> G, \\<Delta> = \\<^bold>\\<not> F, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> Suc n\n 9. \\<And>\\<Gamma> Fa n G \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow>\n                Fa, \\<^bold>\\<not> F, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, \\<^bold>\\<not> F, \\<Delta> =\n           \\<^bold>\\<not> F, \\<Delta>' \\<Longrightarrow>\n           F, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<^bold>\\<not> F, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           \\<^bold>\\<not> F, \\<Delta> =\n           \\<^bold>\\<not> F, \\<Delta>' \\<Longrightarrow>\n           F, G, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, Fa \\<^bold>\\<rightarrow>\n                            G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n\n 10. \\<And>Fa \\<Gamma> G \\<Delta> n \\<Delta>'.\n        \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n         \\<And>\\<Delta>'.\n            G, \\<Delta> = \\<^bold>\\<not> F, \\<Delta>' \\<Longrightarrow>\n            F, Fa, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n         Fa \\<^bold>\\<rightarrow> G, \\<Delta> =\n         \\<^bold>\\<not> F, \\<Delta>'\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> Suc n", "thus ?case"], ["proof (prove)\nusing this:\n  G, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n_\n  \\<Delta>' = \\<^bold>\\<not> F, ?\\<Delta> \\<Longrightarrow>\n  F, G, \\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n_\n  \\<^bold>\\<not> G, \\<Delta>' = \\<^bold>\\<not> F, \\<Delta>\n\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n_", "by(cases \"Not F = Not G\"; \n       auto intro!: SCc.intros(3-) dest!: multi_member_split simp: lem1 lem2 deeper_suc;\n       metis add_mset_commute)"], ["proof (state)\nthis:\n  F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n_\n\ngoal (9 subgoals):\n 1. \\<And>\\<Gamma> n \\<Delta>.\n       \\<bottom> \\<in># \\<Gamma> \\<Longrightarrow>\n       F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<And>k \\<Gamma> n \\<Delta>.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>;\n        Atom k \\<in># \\<^bold>\\<not> F, \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> Fa n \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow>\n                Fa, \\<^bold>\\<not> F, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, \\<^bold>\\<not> F, \\<Delta> =\n           \\<^bold>\\<not> F, \\<Delta>' \\<Longrightarrow>\n           F, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<^bold>\\<not> Fa, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n\n 4. \\<And>Fa G \\<Gamma> n \\<Delta>.\n       \\<lbrakk>Fa, G, \\<Gamma> \\<Rightarrow>\n                \\<^bold>\\<not> F, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           \\<^bold>\\<not> F, \\<Delta> =\n           \\<^bold>\\<not> F, \\<Delta>' \\<Longrightarrow>\n           F, Fa, G, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, Fa \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n\n 5. \\<And>\\<Gamma> Fa \\<Delta> n G \\<Delta>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, \\<Delta> = \\<^bold>\\<not> F, \\<Delta>' \\<Longrightarrow>\n           F, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           G, \\<Delta> = \\<^bold>\\<not> F, \\<Delta>' \\<Longrightarrow>\n           F, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n        Fa \\<^bold>\\<and> G, \\<Delta> = \\<^bold>\\<not> F, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> Suc n\n 6. \\<And>Fa \\<Gamma> n G \\<Delta>.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow>\n                \\<^bold>\\<not> F, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           \\<^bold>\\<not> F, \\<Delta> =\n           \\<^bold>\\<not> F, \\<Delta>' \\<Longrightarrow>\n           F, Fa, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<^bold>\\<not> F, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           \\<^bold>\\<not> F, \\<Delta> =\n           \\<^bold>\\<not> F, \\<Delta>' \\<Longrightarrow>\n           F, G, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, Fa \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n\n 7. \\<And>\\<Gamma> Fa G \\<Delta> n \\<Delta>'.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Fa, G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, G, \\<Delta> = \\<^bold>\\<not> F, \\<Delta>' \\<Longrightarrow>\n           F, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n        Fa \\<^bold>\\<or> G, \\<Delta> = \\<^bold>\\<not> F, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> Suc n\n 8. \\<And>\\<Gamma> Fa n G \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow>\n                Fa, \\<^bold>\\<not> F, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           Fa, \\<^bold>\\<not> F, \\<Delta> =\n           \\<^bold>\\<not> F, \\<Delta>' \\<Longrightarrow>\n           F, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<^bold>\\<not> F, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           \\<^bold>\\<not> F, \\<Delta> =\n           \\<^bold>\\<not> F, \\<Delta>' \\<Longrightarrow>\n           F, G, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, Fa \\<^bold>\\<rightarrow>\n                            G, \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> Suc n\n 9. \\<And>Fa \\<Gamma> G \\<Delta> n \\<Delta>'.\n       \\<lbrakk>Fa, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Delta>'.\n           G, \\<Delta> = \\<^bold>\\<not> F, \\<Delta>' \\<Longrightarrow>\n           F, Fa, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n        Fa \\<^bold>\\<rightarrow> G, \\<Delta> =\n        \\<^bold>\\<not> F, \\<Delta>'\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> Suc n", "qed (fastforce intro!: SCc.intros(3-) dest!: multi_member_split simp: SCc.intros lem1 lem2)+"], ["", "lemma weakenL': \"\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow> F,\\<Gamma> \\<Rightarrow> \\<Delta>  \\<down> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n", "by(induction rule: SCc.induct) \n    (auto intro!: SCc.intros(3-) intro: SCc.intros(1,2))"], ["", "lemma weakenR': \"\\<Gamma> \\<Rightarrow> \\<Delta>  \\<down> n \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F,\\<Delta>  \\<down> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n", "by(induction rule: SCc.induct)\n    (auto intro!: SCc.intros(3-) intro: SCc.intros(1,2))"], ["", "lemma contract':\n  \"(F,F,\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<longrightarrow> F,\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n) \\<and> (\\<Gamma> \\<Rightarrow> F,F,\\<Delta> \\<down> n \\<longrightarrow> \\<Gamma> \\<Rightarrow> F,\\<Delta> \\<down> n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<longrightarrow>\n     F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n) \\<and>\n    (\\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n \\<longrightarrow>\n     \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n)", "proof(induction n arbitrary: F \\<Gamma> \\<Delta>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>F \\<Gamma> \\<Delta>.\n       (F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> 0 \\<longrightarrow>\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> 0) \\<and>\n       (\\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> 0 \\<longrightarrow>\n        \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> 0)\n 2. \\<And>n F \\<Gamma> \\<Delta>.\n       (\\<And>F \\<Gamma> \\<Delta>.\n           (F, F, \\<Gamma> \\<Rightarrow>\n            \\<Delta> \\<down> n \\<longrightarrow>\n            F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n) \\<and>\n           (\\<Gamma> \\<Rightarrow>\n            F, F, \\<Delta> \\<down> n \\<longrightarrow>\n            \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n)) \\<Longrightarrow>\n       (F, F, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> Suc n \\<longrightarrow>\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n) \\<and>\n       (\\<Gamma> \\<Rightarrow>\n        F, F, \\<Delta> \\<down> Suc n \\<longrightarrow>\n        \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n)", "case (Suc n)"], ["proof (state)\nthis:\n  (?F, ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n \\<longrightarrow>\n   ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n) \\<and>\n  (?\\<Gamma> \\<Rightarrow> ?F, ?F, ?\\<Delta> \\<down> n \\<longrightarrow>\n   ?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> n)\n\ngoal (2 subgoals):\n 1. \\<And>F \\<Gamma> \\<Delta>.\n       (F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> 0 \\<longrightarrow>\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> 0) \\<and>\n       (\\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> 0 \\<longrightarrow>\n        \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> 0)\n 2. \\<And>n F \\<Gamma> \\<Delta>.\n       (\\<And>F \\<Gamma> \\<Delta>.\n           (F, F, \\<Gamma> \\<Rightarrow>\n            \\<Delta> \\<down> n \\<longrightarrow>\n            F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n) \\<and>\n           (\\<Gamma> \\<Rightarrow>\n            F, F, \\<Delta> \\<down> n \\<longrightarrow>\n            \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n)) \\<Longrightarrow>\n       (F, F, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> Suc n \\<longrightarrow>\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n) \\<and>\n       (\\<Gamma> \\<Rightarrow>\n        F, F, \\<Delta> \\<down> Suc n \\<longrightarrow>\n        \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n)", "hence IH: \"F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\" \"\\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n\" for F :: \"'a formula\" and \\<Gamma> \\<Delta>"], ["proof (prove)\nusing this:\n  (?F, ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n \\<longrightarrow>\n   ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n) \\<and>\n  (?\\<Gamma> \\<Rightarrow> ?F, ?F, ?\\<Delta> \\<down> n \\<longrightarrow>\n   ?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> n)\n\ngoal (1 subgoal):\n 1. (F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow>\n     F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n) &&&\n    (\\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n \\<Longrightarrow>\n     \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n)", "by blast+"], ["proof (state)\nthis:\n  ?F, ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n \\<Longrightarrow>\n  ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n\n  ?\\<Gamma> \\<Rightarrow> ?F, ?F, ?\\<Delta> \\<down> n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> n\n\ngoal (2 subgoals):\n 1. \\<And>F \\<Gamma> \\<Delta>.\n       (F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> 0 \\<longrightarrow>\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> 0) \\<and>\n       (\\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> 0 \\<longrightarrow>\n        \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> 0)\n 2. \\<And>n F \\<Gamma> \\<Delta>.\n       (\\<And>F \\<Gamma> \\<Delta>.\n           (F, F, \\<Gamma> \\<Rightarrow>\n            \\<Delta> \\<down> n \\<longrightarrow>\n            F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n) \\<and>\n           (\\<Gamma> \\<Rightarrow>\n            F, F, \\<Delta> \\<down> n \\<longrightarrow>\n            \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n)) \\<Longrightarrow>\n       (F, F, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> Suc n \\<longrightarrow>\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n) \\<and>\n       (\\<Gamma> \\<Rightarrow>\n        F, F, \\<Delta> \\<down> Suc n \\<longrightarrow>\n        \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n \\<longrightarrow>\n     F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n) \\<and>\n    (\\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> Suc n \\<longrightarrow>\n     \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n)", "proof(intro conjI allI impI, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> Suc n \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "case 1"], ["proof (state)\nthis:\n  F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n\ngoal (2 subgoals):\n 1. F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> Suc n \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "let ?ffs = \"\\<lambda>\\<Gamma>. \\<Gamma> - {# F #} - {# F #}\""], ["proof (state)\ngoal (2 subgoals):\n 1. F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> Suc n \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "from 1"], ["proof (chain)\npicking this:\n  F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "show ?case"], ["proof (prove)\nusing this:\n  F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "proof(insert 1; cases rule: SCc.cases[of \"F,F,\\<Gamma>\" \\<Delta> \"Suc n\"])"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n     \\<bottom> \\<in># F, F, \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<And>k.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        Atom k \\<in># F, F, \\<Gamma>; Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> F.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        F, F, \\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 4. \\<And>F \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = \\<^bold>\\<not> F, \\<Delta>;\n        F, F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        F, F, \\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>;\n        F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 6. \\<And>F \\<Delta> G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        F, F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 7. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        F, F, \\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 8. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 9. \\<And>\\<Gamma> F G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        F, F, \\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 10. \\<And>F G \\<Delta>.\n        \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n         \\<Delta> = F \\<^bold>\\<rightarrow> G, \\<Delta>;\n         F, F, F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "case (NotL  \\<Gamma>' G)"], ["proof (state)\nthis:\n  F, F, \\<Gamma> = \\<^bold>\\<not> G, \\<Gamma>'\n  \\<Gamma>' \\<Rightarrow> G, \\<Delta> \\<down> n\n\ngoal (10 subgoals):\n 1. \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n     \\<bottom> \\<in># F, F, \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<And>k.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        Atom k \\<in># F, F, \\<Gamma>; Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> F.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        F, F, \\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 4. \\<And>F \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = \\<^bold>\\<not> F, \\<Delta>;\n        F, F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        F, F, \\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>;\n        F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 6. \\<And>F \\<Delta> G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        F, F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 7. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        F, F, \\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 8. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 9. \\<And>\\<Gamma> F G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        F, F, \\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 10. \\<And>F G \\<Delta>.\n        \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n         \\<Delta> = F \\<^bold>\\<rightarrow> G, \\<Delta>;\n         F, F, F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<not> ?P \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "assume e: \"F = \\<^bold>\\<not>G\""], ["proof (state)\nthis:\n  F = \\<^bold>\\<not> G\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<not> ?P \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "with NotL"], ["proof (chain)\npicking this:\n  F, F, \\<Gamma> = \\<^bold>\\<not> G, \\<Gamma>'\n  \\<Gamma>' \\<Rightarrow> G, \\<Delta> \\<down> n\n  F = \\<^bold>\\<not> G", "have \\<Gamma>': \"\\<Gamma>' = \\<^bold>\\<not>G, \\<Gamma>\""], ["proof (prove)\nusing this:\n  F, F, \\<Gamma> = \\<^bold>\\<not> G, \\<Gamma>'\n  \\<Gamma>' \\<Rightarrow> G, \\<Delta> \\<down> n\n  F = \\<^bold>\\<not> G\n\ngoal (1 subgoal):\n 1. \\<Gamma>' = \\<^bold>\\<not> G, \\<Gamma>", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>' = \\<^bold>\\<not> G, \\<Gamma>\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<not> ?P \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "from NotL_inv' NotL(2)"], ["proof (chain)\npicking this:\n  \\<^bold>\\<not> ?F, ?\\<Gamma> \\<Rightarrow>\n  ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> ?n\n  \\<Gamma>' \\<Rightarrow> G, \\<Delta> \\<down> n", "have \"\\<Gamma> \\<Rightarrow> G, G, \\<Delta> \\<down> n\""], ["proof (prove)\nusing this:\n  \\<^bold>\\<not> ?F, ?\\<Gamma> \\<Rightarrow>\n  ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> ?n\n  \\<Gamma>' \\<Rightarrow> G, \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> G, G, \\<Delta> \\<down> n", "unfolding \\<Gamma>'"], ["proof (prove)\nusing this:\n  \\<^bold>\\<not> ?F, ?\\<Gamma> \\<Rightarrow>\n  ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> ?n\n  \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> G, G, \\<Delta> \\<down> n", "."], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> G, G, \\<Delta> \\<down> n\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<not> ?P \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "with IH(2)"], ["proof (chain)\npicking this:\n  ?\\<Gamma> \\<Rightarrow> ?F, ?F, ?\\<Delta> \\<down> n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> n\n  \\<Gamma> \\<Rightarrow> G, G, \\<Delta> \\<down> n", "have \"\\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\""], ["proof (prove)\nusing this:\n  ?\\<Gamma> \\<Rightarrow> ?F, ?F, ?\\<Delta> \\<down> n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> n\n  \\<Gamma> \\<Rightarrow> G, G, \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n", "."], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<not> ?P \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "with SCc.NotL"], ["proof (chain)\npicking this:\n  ?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  \\<^bold>\\<not> ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> Suc ?n\n  \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n", "show ?thesis"], ["proof (prove)\nusing this:\n  ?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  \\<^bold>\\<not> ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> Suc ?n\n  \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "unfolding e"], ["proof (prove)\nusing this:\n  ?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  \\<^bold>\\<not> ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> Suc ?n\n  \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "."], ["proof (state)\nthis:\n  F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n\ngoal (1 subgoal):\n 1. F \\<noteq> \\<^bold>\\<not> G \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. F \\<noteq> \\<^bold>\\<not> G \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "assume e: \"F \\<noteq> \\<^bold>\\<not>G\""], ["proof (state)\nthis:\n  F \\<noteq> \\<^bold>\\<not> G\n\ngoal (1 subgoal):\n 1. F \\<noteq> \\<^bold>\\<not> G \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "have ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "using NotL(2) IH(1)[of F \"?ffs \\<Gamma>'\" \"G, \\<Delta>\"] SCc.NotL[of \"F, \\<Gamma>' - {# F #} - {# F #}\" G \\<Delta> n]"], ["proof (prove)\nusing this:\n  \\<Gamma>' \\<Rightarrow> G, \\<Delta> \\<down> n\n  F, F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow>\n  G, \\<Delta> \\<down> n \\<Longrightarrow>\n  F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow> G, \\<Delta> \\<down> n\n  F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow>\n  G, \\<Delta> \\<down> n \\<Longrightarrow>\n  \\<^bold>\\<not> G, F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow>\n  \\<Delta> \\<down> Suc n\n\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "using e NotL(1)"], ["proof (prove)\nusing this:\n  \\<Gamma>' \\<Rightarrow> G, \\<Delta> \\<down> n\n  F, F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow>\n  G, \\<Delta> \\<down> n \\<Longrightarrow>\n  F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow> G, \\<Delta> \\<down> n\n  F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow>\n  G, \\<Delta> \\<down> n \\<Longrightarrow>\n  \\<^bold>\\<not> G, F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow>\n  \\<Delta> \\<down> Suc n\n  F \\<noteq> \\<^bold>\\<not> G\n  F, F, \\<Gamma> = \\<^bold>\\<not> G, \\<Gamma>'\n\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "by (metis (no_types, lifting) insert_DiffM lem2)"], ["proof (state)\nthis:\n  F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n\ngoal (1 subgoal):\n 1. F \\<noteq> \\<^bold>\\<not> G \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "from e NotL(1)"], ["proof (chain)\npicking this:\n  F \\<noteq> \\<^bold>\\<not> G\n  F, F, \\<Gamma> = \\<^bold>\\<not> G, \\<Gamma>'", "have \\<Gamma>: \"\\<Gamma> = \\<^bold>\\<not> G, ?ffs \\<Gamma>'\""], ["proof (prove)\nusing this:\n  F \\<noteq> \\<^bold>\\<not> G\n  F, F, \\<Gamma> = \\<^bold>\\<not> G, \\<Gamma>'\n\ngoal (1 subgoal):\n 1. \\<Gamma> = \\<^bold>\\<not> G, \\<Gamma>' - (F, {#}) - (F, {#})", "by (meson lem1)"], ["proof (state)\nthis:\n  \\<Gamma> = \\<^bold>\\<not> G, \\<Gamma>' - (F, {#}) - (F, {#})\n\ngoal (1 subgoal):\n 1. F \\<noteq> \\<^bold>\\<not> G \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "with NotL(1)"], ["proof (chain)\npicking this:\n  F, F, \\<Gamma> = \\<^bold>\\<not> G, \\<Gamma>'\n  \\<Gamma> = \\<^bold>\\<not> G, \\<Gamma>' - (F, {#}) - (F, {#})", "have \\<Gamma>': \"F,F,?ffs \\<Gamma>' = \\<Gamma>'\""], ["proof (prove)\nusing this:\n  F, F, \\<Gamma> = \\<^bold>\\<not> G, \\<Gamma>'\n  \\<Gamma> = \\<^bold>\\<not> G, \\<Gamma>' - (F, {#}) - (F, {#})\n\ngoal (1 subgoal):\n 1. F, F, \\<Gamma>' - (F, {#}) - (F, {#}) = \\<Gamma>'", "by simp"], ["proof (state)\nthis:\n  F, F, \\<Gamma>' - (F, {#}) - (F, {#}) = \\<Gamma>'\n\ngoal (1 subgoal):\n 1. F \\<noteq> \\<^bold>\\<not> G \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "using NotL(2) IH(1)[of F \"?ffs \\<Gamma>'\" \"G, \\<Delta>\"] SCc.NotL[of \"F, ?ffs \\<Gamma>'\" G \\<Delta> n] \\<open>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\\<close>"], ["proof (prove)\nusing this:\n  \\<Gamma>' \\<Rightarrow> G, \\<Delta> \\<down> n\n  F, F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow>\n  G, \\<Delta> \\<down> n \\<Longrightarrow>\n  F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow> G, \\<Delta> \\<down> n\n  F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow>\n  G, \\<Delta> \\<down> n \\<Longrightarrow>\n  \\<^bold>\\<not> G, F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow>\n  \\<Delta> \\<down> Suc n\n  F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "by blast"], ["proof (state)\nthis:\n  F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n\ngoal (9 subgoals):\n 1. \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n     \\<bottom> \\<in># F, F, \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<And>k.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        Atom k \\<in># F, F, \\<Gamma>; Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 3. \\<And>F \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = \\<^bold>\\<not> F, \\<Delta>;\n        F, F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 4. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        F, F, \\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>;\n        F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 5. \\<And>F \\<Delta> G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        F, F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        F, F, \\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 7. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 8. \\<And>\\<Gamma> F G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        F, F, \\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 9. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<rightarrow> G, \\<Delta>;\n        F, F, F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n     \\<bottom> \\<in># F, F, \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<And>k.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        Atom k \\<in># F, F, \\<Gamma>; Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 3. \\<And>F \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = \\<^bold>\\<not> F, \\<Delta>;\n        F, F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 4. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        F, F, \\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>;\n        F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 5. \\<And>F \\<Delta> G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        F, F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        F, F, \\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 7. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 8. \\<And>\\<Gamma> F G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        F, F, \\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 9. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<rightarrow> G, \\<Delta>;\n        F, F, F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "case (AndL G H \\<Gamma>')"], ["proof (state)\nthis:\n  F, F, \\<Gamma> = G \\<^bold>\\<and> H, \\<Gamma>'\n  G, H, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (9 subgoals):\n 1. \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n     \\<bottom> \\<in># F, F, \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<And>k.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        Atom k \\<in># F, F, \\<Gamma>; Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 3. \\<And>F \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = \\<^bold>\\<not> F, \\<Delta>;\n        F, F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 4. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        F, F, \\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>;\n        F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 5. \\<And>F \\<Delta> G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        F, F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        F, F, \\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 7. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 8. \\<And>\\<Gamma> F G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        F, F, \\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 9. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<rightarrow> G, \\<Delta>;\n        F, F, F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<not> ?P \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "assume e: \"F = And G H\""], ["proof (state)\nthis:\n  F = G \\<^bold>\\<and> H\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<not> ?P \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "with AndL(1)"], ["proof (chain)\npicking this:\n  F, F, \\<Gamma> = G \\<^bold>\\<and> H, \\<Gamma>'\n  F = G \\<^bold>\\<and> H", "have \\<Gamma>': \"\\<Gamma>' = And G H, \\<Gamma>\""], ["proof (prove)\nusing this:\n  F, F, \\<Gamma> = G \\<^bold>\\<and> H, \\<Gamma>'\n  F = G \\<^bold>\\<and> H\n\ngoal (1 subgoal):\n 1. \\<Gamma>' = G \\<^bold>\\<and> H, \\<Gamma>", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>' = G \\<^bold>\\<and> H, \\<Gamma>\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<not> ?P \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "have \"G \\<^bold>\\<and> H, G, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<^bold>\\<and> H, G, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n", "using AndL(2)"], ["proof (prove)\nusing this:\n  G, H, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. G \\<^bold>\\<and> H, G, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n", "unfolding \\<Gamma>'"], ["proof (prove)\nusing this:\n  G, H, G \\<^bold>\\<and> H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. G \\<^bold>\\<and> H, G, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n", "by auto"], ["proof (state)\nthis:\n  G \\<^bold>\\<and> H, G, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<not> ?P \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "hence \"G, H, G, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\""], ["proof (prove)\nusing this:\n  G \\<^bold>\\<and> H, G, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. G, H, G, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n", "by(rule AndL_inv')"], ["proof (state)\nthis:\n  G, H, G, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<not> ?P \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "hence \"G, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\""], ["proof (prove)\nusing this:\n  G, H, G, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. G, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n", "using IH(1)"], ["proof (prove)\nusing this:\n  G, H, G, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n  ?F, ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n \\<Longrightarrow>\n  ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. G, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n", "by (metis inL1' inL3')"], ["proof (state)\nthis:\n  G, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<not> ?P \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "thus \"F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\""], ["proof (prove)\nusing this:\n  G, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "using e SCc.AndL"], ["proof (prove)\nusing this:\n  G, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n  F = G \\<^bold>\\<and> H\n  ?F, ?G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?F \\<^bold>\\<and> ?G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> Suc ?n\n\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "by simp"], ["proof (state)\nthis:\n  F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n\ngoal (1 subgoal):\n 1. F \\<noteq> G \\<^bold>\\<and> H \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. F \\<noteq> G \\<^bold>\\<and> H \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "assume ne: \"F \\<noteq> And G H\""], ["proof (state)\nthis:\n  F \\<noteq> G \\<^bold>\\<and> H\n\ngoal (1 subgoal):\n 1. F \\<noteq> G \\<^bold>\\<and> H \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "with AndL(1)"], ["proof (chain)\npicking this:\n  F, F, \\<Gamma> = G \\<^bold>\\<and> H, \\<Gamma>'\n  F \\<noteq> G \\<^bold>\\<and> H", "have \\<Gamma>: \"\\<Gamma> = And G H, ?ffs \\<Gamma>'\""], ["proof (prove)\nusing this:\n  F, F, \\<Gamma> = G \\<^bold>\\<and> H, \\<Gamma>'\n  F \\<noteq> G \\<^bold>\\<and> H\n\ngoal (1 subgoal):\n 1. \\<Gamma> = G \\<^bold>\\<and> H, \\<Gamma>' - (F, {#}) - (F, {#})", "by (metis (no_types, lifting) diff_diff_add lem2)"], ["proof (state)\nthis:\n  \\<Gamma> = G \\<^bold>\\<and> H, \\<Gamma>' - (F, {#}) - (F, {#})\n\ngoal (1 subgoal):\n 1. F \\<noteq> G \\<^bold>\\<and> H \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "have \"F, F, G, H, ?ffs \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F, F, G, H, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow>\n    \\<Delta> \\<down> n", "using AndL(2)"], ["proof (prove)\nusing this:\n  G, H, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. F, F, G, H, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow>\n    \\<Delta> \\<down> n", "using \\<Gamma> inL4' local.AndL(1)"], ["proof (prove)\nusing this:\n  G, H, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\n  \\<Gamma> = G \\<^bold>\\<and> H, \\<Gamma>' - (F, {#}) - (F, {#})\n  ?F, ?G, ?H, ?I, ?\\<Gamma> \\<Rightarrow>\n  ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?H, ?I, ?F, ?G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n\n  F, F, \\<Gamma> = G \\<^bold>\\<and> H, \\<Gamma>'\n\ngoal (1 subgoal):\n 1. F, F, G, H, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow>\n    \\<Delta> \\<down> n", "by auto"], ["proof (state)\nthis:\n  F, F, G, H, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow>\n  \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. F \\<noteq> G \\<^bold>\\<and> H \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "hence \"G, H, F, ?ffs \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\""], ["proof (prove)\nusing this:\n  F, F, G, H, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow>\n  \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. G, H, F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow>\n    \\<Delta> \\<down> n", "using IH(1) inL2"], ["proof (prove)\nusing this:\n  F, F, G, H, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow>\n  \\<Delta> \\<down> n\n  ?F, ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n \\<Longrightarrow>\n  ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n\n  ?F, ?G, ?H, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<Longrightarrow>\n  ?G, ?H, ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta>\n\ngoal (1 subgoal):\n 1. G, H, F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow>\n    \\<Delta> \\<down> n", "by blast"], ["proof (state)\nthis:\n  G, H, F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. F \\<noteq> G \\<^bold>\\<and> H \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "thus ?thesis"], ["proof (prove)\nusing this:\n  G, H, F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "using SCc.AndL"], ["proof (prove)\nusing this:\n  G, H, F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow> \\<Delta> \\<down> n\n  ?F, ?G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?F \\<^bold>\\<and> ?G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> Suc ?n\n\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "unfolding \\<Gamma>"], ["proof (prove)\nusing this:\n  G, H, F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow> \\<Delta> \\<down> n\n  ?F, ?G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?F \\<^bold>\\<and> ?G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> Suc ?n\n\ngoal (1 subgoal):\n 1. F, G \\<^bold>\\<and> H, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow>\n    \\<Delta> \\<down> Suc n", "using inL1"], ["proof (prove)\nusing this:\n  G, H, F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow> \\<Delta> \\<down> n\n  ?F, ?G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?F \\<^bold>\\<and> ?G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> Suc ?n\n  ?G, ?H, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<Longrightarrow>\n  ?H, ?G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta>\n\ngoal (1 subgoal):\n 1. F, G \\<^bold>\\<and> H, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow>\n    \\<Delta> \\<down> Suc n", "by blast"], ["proof (state)\nthis:\n  F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n\ngoal (8 subgoals):\n 1. \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n     \\<bottom> \\<in># F, F, \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<And>k.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        Atom k \\<in># F, F, \\<Gamma>; Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 3. \\<And>F \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = \\<^bold>\\<not> F, \\<Delta>;\n        F, F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 4. \\<And>F \\<Delta> G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        F, F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 5. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        F, F, \\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 6. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 7. \\<And>\\<Gamma> F G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        F, F, \\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 8. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<rightarrow> G, \\<Delta>;\n        F, F, F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n     \\<bottom> \\<in># F, F, \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<And>k.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        Atom k \\<in># F, F, \\<Gamma>; Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 3. \\<And>F \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = \\<^bold>\\<not> F, \\<Delta>;\n        F, F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 4. \\<And>F \\<Delta> G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        F, F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 5. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        F, F, \\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 6. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 7. \\<And>\\<Gamma> F G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        F, F, \\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 8. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<rightarrow> G, \\<Delta>;\n        F, F, F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "case (OrL G \\<Gamma>' H)"], ["proof (state)\nthis:\n  F, F, \\<Gamma> = G \\<^bold>\\<or> H, \\<Gamma>'\n  G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\n  H, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (8 subgoals):\n 1. \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n     \\<bottom> \\<in># F, F, \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<And>k.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        Atom k \\<in># F, F, \\<Gamma>; Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 3. \\<And>F \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = \\<^bold>\\<not> F, \\<Delta>;\n        F, F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 4. \\<And>F \\<Delta> G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        F, F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 5. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        F, F, \\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 6. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 7. \\<And>\\<Gamma> F G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        F, F, \\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 8. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<rightarrow> G, \\<Delta>;\n        F, F, F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<not> ?P \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "assume e: \"F = Or G H\""], ["proof (state)\nthis:\n  F = G \\<^bold>\\<or> H\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<not> ?P \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "with OrL(1)"], ["proof (chain)\npicking this:\n  F, F, \\<Gamma> = G \\<^bold>\\<or> H, \\<Gamma>'\n  F = G \\<^bold>\\<or> H", "have \\<Gamma>': \"\\<Gamma>' = Or G H, \\<Gamma>\""], ["proof (prove)\nusing this:\n  F, F, \\<Gamma> = G \\<^bold>\\<or> H, \\<Gamma>'\n  F = G \\<^bold>\\<or> H\n\ngoal (1 subgoal):\n 1. \\<Gamma>' = G \\<^bold>\\<or> H, \\<Gamma>", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>' = G \\<^bold>\\<or> H, \\<Gamma>\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<not> ?P \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "have \"Or G H, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\" \"Or G H, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<^bold>\\<or> H, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n &&&\n    G \\<^bold>\\<or> H, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n", "using OrL(2,3)"], ["proof (prove)\nusing this:\n  G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\n  H, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. G \\<^bold>\\<or> H, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n &&&\n    G \\<^bold>\\<or> H, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n", "unfolding \\<Gamma>'"], ["proof (prove)\nusing this:\n  G, G \\<^bold>\\<or> H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n  H, G \\<^bold>\\<or> H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. G \\<^bold>\\<or> H, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n &&&\n    G \\<^bold>\\<or> H, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n", "by simp_all"], ["proof (state)\nthis:\n  G \\<^bold>\\<or> H, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n  G \\<^bold>\\<or> H, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<not> ?P \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "hence \"G, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\" \"H, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\""], ["proof (prove)\nusing this:\n  G \\<^bold>\\<or> H, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n  G \\<^bold>\\<or> H, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. G, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n &&&\n    H, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n", "using OrL_inv'"], ["proof (prove)\nusing this:\n  G \\<^bold>\\<or> H, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n  G \\<^bold>\\<or> H, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n  ?F \\<^bold>\\<or> ?G, ?\\<Gamma> \\<Rightarrow>\n  ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n \\<and>\n  ?G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n\n\ngoal (1 subgoal):\n 1. G, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n &&&\n    H, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n", "by blast+"], ["proof (state)\nthis:\n  G, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n  H, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<not> ?P \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "hence \"G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\" \"H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\""], ["proof (prove)\nusing this:\n  G, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n  H, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n &&&\n    H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n", "using IH(1)"], ["proof (prove)\nusing this:\n  G, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n  H, H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n  ?F, ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n \\<Longrightarrow>\n  ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n &&&\n    H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n", "by presburger+"], ["proof (state)\nthis:\n  G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n  H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<not> ?P \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "thus \"F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\""], ["proof (prove)\nusing this:\n  G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n  H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "unfolding e"], ["proof (prove)\nusing this:\n  G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n  H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. G \\<^bold>\\<or> H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "using SCc.OrL"], ["proof (prove)\nusing this:\n  G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n  H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n  \\<lbrakk>?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n;\n   ?G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n\\<rbrakk>\n  \\<Longrightarrow> ?F \\<^bold>\\<or> ?G, ?\\<Gamma> \\<Rightarrow>\n                    ?\\<Delta> \\<down> Suc ?n\n\ngoal (1 subgoal):\n 1. G \\<^bold>\\<or> H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "by blast"], ["proof (state)\nthis:\n  F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n\ngoal (1 subgoal):\n 1. F \\<noteq> G \\<^bold>\\<or> H \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. F \\<noteq> G \\<^bold>\\<or> H \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "assume ne: \"F \\<noteq> Or G H\""], ["proof (state)\nthis:\n  F \\<noteq> G \\<^bold>\\<or> H\n\ngoal (1 subgoal):\n 1. F \\<noteq> G \\<^bold>\\<or> H \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "with OrL(1)"], ["proof (chain)\npicking this:\n  F, F, \\<Gamma> = G \\<^bold>\\<or> H, \\<Gamma>'\n  F \\<noteq> G \\<^bold>\\<or> H", "have \\<Gamma>: \"\\<Gamma> = Or G H, ?ffs \\<Gamma>'\""], ["proof (prove)\nusing this:\n  F, F, \\<Gamma> = G \\<^bold>\\<or> H, \\<Gamma>'\n  F \\<noteq> G \\<^bold>\\<or> H\n\ngoal (1 subgoal):\n 1. \\<Gamma> = G \\<^bold>\\<or> H, \\<Gamma>' - (F, {#}) - (F, {#})", "by (metis (no_types, lifting) diff_diff_add lem2)"], ["proof (state)\nthis:\n  \\<Gamma> = G \\<^bold>\\<or> H, \\<Gamma>' - (F, {#}) - (F, {#})\n\ngoal (1 subgoal):\n 1. F \\<noteq> G \\<^bold>\\<or> H \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "have \"F, F, G, ?ffs \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\" \"F, F, H,?ffs \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F, F, G, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow>\n    \\<Delta> \\<down> n &&&\n    F, F, H, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow>\n    \\<Delta> \\<down> n", "using OrL \\<Gamma>"], ["proof (prove)\nusing this:\n  F, F, \\<Gamma> = G \\<^bold>\\<or> H, \\<Gamma>'\n  G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\n  H, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\n  \\<Gamma> = G \\<^bold>\\<or> H, \\<Gamma>' - (F, {#}) - (F, {#})\n\ngoal (1 subgoal):\n 1. F, F, G, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow>\n    \\<Delta> \\<down> n &&&\n    F, F, H, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow>\n    \\<Delta> \\<down> n", "by auto"], ["proof (state)\nthis:\n  F, F, G, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow> \\<Delta> \\<down> n\n  F, F, H, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. F \\<noteq> G \\<^bold>\\<or> H \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "hence \"G, F, ?ffs \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\" \"H, F, ?ffs \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\""], ["proof (prove)\nusing this:\n  F, F, G, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow> \\<Delta> \\<down> n\n  F, F, H, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. G, F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow>\n    \\<Delta> \\<down> n &&&\n    H, F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow> \\<Delta> \\<down> n", "using IH(1)"], ["proof (prove)\nusing this:\n  F, F, G, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow> \\<Delta> \\<down> n\n  F, F, H, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow> \\<Delta> \\<down> n\n  ?F, ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n \\<Longrightarrow>\n  ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. G, F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow>\n    \\<Delta> \\<down> n &&&\n    H, F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow> \\<Delta> \\<down> n", "by(metis add_mset_commute)+"], ["proof (state)\nthis:\n  G, F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow> \\<Delta> \\<down> n\n  H, F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. F \\<noteq> G \\<^bold>\\<or> H \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "thus ?thesis"], ["proof (prove)\nusing this:\n  G, F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow> \\<Delta> \\<down> n\n  H, F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "using SCc.OrL"], ["proof (prove)\nusing this:\n  G, F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow> \\<Delta> \\<down> n\n  H, F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow> \\<Delta> \\<down> n\n  \\<lbrakk>?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n;\n   ?G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n\\<rbrakk>\n  \\<Longrightarrow> ?F \\<^bold>\\<or> ?G, ?\\<Gamma> \\<Rightarrow>\n                    ?\\<Delta> \\<down> Suc ?n\n\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "unfolding \\<Gamma>"], ["proof (prove)\nusing this:\n  G, F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow> \\<Delta> \\<down> n\n  H, F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow> \\<Delta> \\<down> n\n  \\<lbrakk>?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n;\n   ?G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n\\<rbrakk>\n  \\<Longrightarrow> ?F \\<^bold>\\<or> ?G, ?\\<Gamma> \\<Rightarrow>\n                    ?\\<Delta> \\<down> Suc ?n\n\ngoal (1 subgoal):\n 1. F, G \\<^bold>\\<or> H, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow>\n    \\<Delta> \\<down> Suc n", "by auto"], ["proof (state)\nthis:\n  F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n\ngoal (7 subgoals):\n 1. \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n     \\<bottom> \\<in># F, F, \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<And>k.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        Atom k \\<in># F, F, \\<Gamma>; Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 3. \\<And>F \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = \\<^bold>\\<not> F, \\<Delta>;\n        F, F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 4. \\<And>F \\<Delta> G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        F, F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 5. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 6. \\<And>\\<Gamma> F G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        F, F, \\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 7. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<rightarrow> G, \\<Delta>;\n        F, F, F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n     \\<bottom> \\<in># F, F, \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<And>k.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        Atom k \\<in># F, F, \\<Gamma>; Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 3. \\<And>F \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = \\<^bold>\\<not> F, \\<Delta>;\n        F, F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 4. \\<And>F \\<Delta> G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        F, F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 5. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 6. \\<And>\\<Gamma> F G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        F, F, \\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 7. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<rightarrow> G, \\<Delta>;\n        F, F, F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "case (ImpL \\<Gamma>' G H)"], ["proof (state)\nthis:\n  F, F, \\<Gamma> = G \\<^bold>\\<rightarrow> H, \\<Gamma>'\n  \\<Gamma>' \\<Rightarrow> G, \\<Delta> \\<down> n\n  H, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (7 subgoals):\n 1. \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n     \\<bottom> \\<in># F, F, \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<And>k.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        Atom k \\<in># F, F, \\<Gamma>; Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 3. \\<And>F \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = \\<^bold>\\<not> F, \\<Delta>;\n        F, F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 4. \\<And>F \\<Delta> G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        F, F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 5. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 6. \\<And>\\<Gamma> F G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        F, F, \\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 7. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<rightarrow> G, \\<Delta>;\n        F, F, F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<not> ?P \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "assume e: \"F = Imp G H\""], ["proof (state)\nthis:\n  F = G \\<^bold>\\<rightarrow> H\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<not> ?P \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "with ImpL(1)"], ["proof (chain)\npicking this:\n  F, F, \\<Gamma> = G \\<^bold>\\<rightarrow> H, \\<Gamma>'\n  F = G \\<^bold>\\<rightarrow> H", "have \\<Gamma>': \"\\<Gamma>' = Imp G H, \\<Gamma>\""], ["proof (prove)\nusing this:\n  F, F, \\<Gamma> = G \\<^bold>\\<rightarrow> H, \\<Gamma>'\n  F = G \\<^bold>\\<rightarrow> H\n\ngoal (1 subgoal):\n 1. \\<Gamma>' = G \\<^bold>\\<rightarrow> H, \\<Gamma>", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>' = G \\<^bold>\\<rightarrow> H, \\<Gamma>\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<not> ?P \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "have \"H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\" \"\\<Gamma> \\<Rightarrow> G,\\<Delta> \\<down> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n &&&\n    \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n", "using IH ImpL_inv' ImpL(2,3)"], ["proof (prove)\nusing this:\n  ?F, ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n \\<Longrightarrow>\n  ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n\n  ?\\<Gamma> \\<Rightarrow> ?F, ?F, ?\\<Delta> \\<down> n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> n\n  ?F \\<^bold>\\<rightarrow> ?G, ?\\<Gamma> \\<Rightarrow>\n  ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> ?n \\<and>\n  ?G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n\n  \\<Gamma>' \\<Rightarrow> G, \\<Delta> \\<down> n\n  H, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n &&&\n    \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n", "unfolding \\<Gamma>'"], ["proof (prove)\nusing this:\n  ?F, ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n \\<Longrightarrow>\n  ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n\n  ?\\<Gamma> \\<Rightarrow> ?F, ?F, ?\\<Delta> \\<down> n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> n\n  ?F \\<^bold>\\<rightarrow> ?G, ?\\<Gamma> \\<Rightarrow>\n  ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> ?n \\<and>\n  ?G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n\n  G \\<^bold>\\<rightarrow> H, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\n  H, G \\<^bold>\\<rightarrow> H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n &&&\n    \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n", "by (metis add_mset_commute)+"], ["proof (state)\nthis:\n  H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n  \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<not> ?P \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "thus ?thesis"], ["proof (prove)\nusing this:\n  H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n  \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "unfolding e"], ["proof (prove)\nusing this:\n  H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n  \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. G \\<^bold>\\<rightarrow> H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "using SCc.ImpL[where 'a='a]"], ["proof (prove)\nusing this:\n  H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n  \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\n  \\<lbrakk>?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> ?n;\n   ?G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n\\<rbrakk>\n  \\<Longrightarrow> ?F \\<^bold>\\<rightarrow> ?G, ?\\<Gamma> \\<Rightarrow>\n                    ?\\<Delta> \\<down> Suc ?n\n\ngoal (1 subgoal):\n 1. G \\<^bold>\\<rightarrow> H, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "by simp"], ["proof (state)\nthis:\n  F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n\ngoal (1 subgoal):\n 1. F \\<noteq> G \\<^bold>\\<rightarrow> H \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. F \\<noteq> G \\<^bold>\\<rightarrow> H \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "assume ne: \"F \\<noteq> Imp G H\""], ["proof (state)\nthis:\n  F \\<noteq> G \\<^bold>\\<rightarrow> H\n\ngoal (1 subgoal):\n 1. F \\<noteq> G \\<^bold>\\<rightarrow> H \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "with ImpL(1)"], ["proof (chain)\npicking this:\n  F, F, \\<Gamma> = G \\<^bold>\\<rightarrow> H, \\<Gamma>'\n  F \\<noteq> G \\<^bold>\\<rightarrow> H", "have \\<Gamma>: \"\\<Gamma> = Imp G H, ?ffs \\<Gamma>'\""], ["proof (prove)\nusing this:\n  F, F, \\<Gamma> = G \\<^bold>\\<rightarrow> H, \\<Gamma>'\n  F \\<noteq> G \\<^bold>\\<rightarrow> H\n\ngoal (1 subgoal):\n 1. \\<Gamma> = G \\<^bold>\\<rightarrow> H, \\<Gamma>' - (F, {#}) - (F, {#})", "by (metis (no_types, lifting) diff_diff_add lem2)"], ["proof (state)\nthis:\n  \\<Gamma> = G \\<^bold>\\<rightarrow> H, \\<Gamma>' - (F, {#}) - (F, {#})\n\ngoal (1 subgoal):\n 1. F \\<noteq> G \\<^bold>\\<rightarrow> H \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "have \"F, F, ?ffs \\<Gamma>' \\<Rightarrow> G, \\<Delta> \\<down> n\" \"F, F, H, ?ffs \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F, F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow>\n    G, \\<Delta> \\<down> n &&&\n    F, F, H, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow>\n    \\<Delta> \\<down> n", "using ImpL \\<Gamma>"], ["proof (prove)\nusing this:\n  F, F, \\<Gamma> = G \\<^bold>\\<rightarrow> H, \\<Gamma>'\n  \\<Gamma>' \\<Rightarrow> G, \\<Delta> \\<down> n\n  H, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\n  \\<Gamma> = G \\<^bold>\\<rightarrow> H, \\<Gamma>' - (F, {#}) - (F, {#})\n\ngoal (1 subgoal):\n 1. F, F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow>\n    G, \\<Delta> \\<down> n &&&\n    F, F, H, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow>\n    \\<Delta> \\<down> n", "by auto"], ["proof (state)\nthis:\n  F, F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow> G, \\<Delta> \\<down> n\n  F, F, H, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. F \\<noteq> G \\<^bold>\\<rightarrow> H \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "thus ?thesis"], ["proof (prove)\nusing this:\n  F, F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow> G, \\<Delta> \\<down> n\n  F, F, H, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "using SCc.ImpL IH"], ["proof (prove)\nusing this:\n  F, F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow> G, \\<Delta> \\<down> n\n  F, F, H, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow> \\<Delta> \\<down> n\n  \\<lbrakk>?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> ?n;\n   ?G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n\\<rbrakk>\n  \\<Longrightarrow> ?F \\<^bold>\\<rightarrow> ?G, ?\\<Gamma> \\<Rightarrow>\n                    ?\\<Delta> \\<down> Suc ?n\n  ?F, ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n \\<Longrightarrow>\n  ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n\n  ?\\<Gamma> \\<Rightarrow> ?F, ?F, ?\\<Delta> \\<down> n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "unfolding \\<Gamma>"], ["proof (prove)\nusing this:\n  F, F, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow> G, \\<Delta> \\<down> n\n  F, F, H, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow> \\<Delta> \\<down> n\n  \\<lbrakk>?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> ?n;\n   ?G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n\\<rbrakk>\n  \\<Longrightarrow> ?F \\<^bold>\\<rightarrow> ?G, ?\\<Gamma> \\<Rightarrow>\n                    ?\\<Delta> \\<down> Suc ?n\n  ?F, ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n \\<Longrightarrow>\n  ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n\n  ?\\<Gamma> \\<Rightarrow> ?F, ?F, ?\\<Delta> \\<down> n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. F, G \\<^bold>\\<rightarrow>\n       H, \\<Gamma>' - (F, {#}) - (F, {#}) \\<Rightarrow>\n    \\<Delta> \\<down> Suc n", "by (metis inL1')"], ["proof (state)\nthis:\n  F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n\ngoal (6 subgoals):\n 1. \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n     \\<bottom> \\<in># F, F, \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<And>k.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        Atom k \\<in># F, F, \\<Gamma>; Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 3. \\<And>F \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = \\<^bold>\\<not> F, \\<Delta>;\n        F, F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 4. \\<And>F \\<Delta> G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        F, F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 5. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 6. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<rightarrow> G, \\<Delta>;\n        F, F, F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n     \\<bottom> \\<in># F, F, \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<And>k.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        Atom k \\<in># F, F, \\<Gamma>; Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 3. \\<And>F \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = \\<^bold>\\<not> F, \\<Delta>;\n        F, F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 4. \\<And>F \\<Delta> G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        F, F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 5. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 6. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<rightarrow> G, \\<Delta>;\n        F, F, F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "case ImpR"], ["proof (state)\nthis:\n  \\<Delta> = F_ \\<^bold>\\<rightarrow> G_, \\<Delta>_\n  F_, F, F, \\<Gamma> \\<Rightarrow> G_, \\<Delta>_ \\<down> n\n\ngoal (6 subgoals):\n 1. \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n     \\<bottom> \\<in># F, F, \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<And>k.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        Atom k \\<in># F, F, \\<Gamma>; Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 3. \\<And>F \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = \\<^bold>\\<not> F, \\<Delta>;\n        F, F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 4. \\<And>F \\<Delta> G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        F, F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 5. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 6. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<rightarrow> G, \\<Delta>;\n        F, F, F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Delta> = F_ \\<^bold>\\<rightarrow> G_, \\<Delta>_\n  F_, F, F, \\<Gamma> \\<Rightarrow> G_, \\<Delta>_ \\<down> n\n\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "by (simp add: IH(1) SCc.intros(10) add_mset_commute)"], ["proof (state)\nthis:\n  F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n\ngoal (5 subgoals):\n 1. \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n     \\<bottom> \\<in># F, F, \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<And>k.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        Atom k \\<in># F, F, \\<Gamma>; Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 3. \\<And>F \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = \\<^bold>\\<not> F, \\<Delta>;\n        F, F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 4. \\<And>F \\<Delta> G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        F, F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 5. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n     \\<bottom> \\<in># F, F, \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<And>k.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        Atom k \\<in># F, F, \\<Gamma>; Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 3. \\<And>F \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = \\<^bold>\\<not> F, \\<Delta>;\n        F, F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 4. \\<And>F \\<Delta> G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        F, F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 5. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "case (NotR G \\<Delta>')"], ["proof (state)\nthis:\n  \\<Delta> = \\<^bold>\\<not> G, \\<Delta>'\n  G, F, F, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n\n\ngoal (5 subgoals):\n 1. \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n     \\<bottom> \\<in># F, F, \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<And>k.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        Atom k \\<in># F, F, \\<Gamma>; Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 3. \\<And>F \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = \\<^bold>\\<not> F, \\<Delta>;\n        F, F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 4. \\<And>F \\<Delta> G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        F, F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 5. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Delta> = \\<^bold>\\<not> G, \\<Delta>'\n  G, F, F, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n\n\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "using IH(1)"], ["proof (prove)\nusing this:\n  \\<Delta> = \\<^bold>\\<not> G, \\<Delta>'\n  G, F, F, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n\n  ?F, ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n \\<Longrightarrow>\n  ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "by (simp add: SCc.NotR add_mset_commute)"], ["proof (state)\nthis:\n  F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n\ngoal (4 subgoals):\n 1. \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n     \\<bottom> \\<in># F, F, \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 2. \\<And>k.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        Atom k \\<in># F, F, \\<Gamma>; Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 3. \\<And>F \\<Delta> G.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        F, F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n 4. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n;\n        \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>;\n        F, F, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n", "qed (auto intro: IH SCc.intros(1,2) intro!: SCc.intros(3-10))"], ["proof (state)\nthis:\n  F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> Suc n \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> Suc n \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "case 2"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> Suc n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> Suc n \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "let ?ffs = \"\\<lambda>\\<Gamma>. \\<Gamma> - {# F #} - {# F #}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> Suc n \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "have not_principal[dest]:\n      \"\\<lbrakk>F \\<noteq> f G H; F, F, \\<Delta> = f G H, \\<Delta>'\\<rbrakk> \\<Longrightarrow> \\<Delta> = f G H, ?ffs \\<Delta>' \\<and> F, F, ?ffs \\<Delta>' = \\<Delta>'\" for f G H \\<Delta>'"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>F \\<noteq> f G H; F, F, \\<Delta> = f G H, \\<Delta>'\\<rbrakk>\n    \\<Longrightarrow> \\<Delta> =\n                      f G H, \\<Delta>' - (F, {#}) - (F, {#}) \\<and>\n                      F, F, \\<Delta>' - (F, {#}) - (F, {#}) = \\<Delta>'", "proof(intro conjI, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>F \\<noteq> f G H; F, F, \\<Delta> = f G H, \\<Delta>'\\<rbrakk>\n    \\<Longrightarrow> \\<Delta> = f G H, \\<Delta>' - (F, {#}) - (F, {#})\n 2. \\<lbrakk>F \\<noteq> f G H; F, F, \\<Delta> = f G H, \\<Delta>'\\<rbrakk>\n    \\<Longrightarrow> F, F, \\<Delta>' - (F, {#}) - (F, {#}) = \\<Delta>'", "case 2"], ["proof (state)\nthis:\n  F \\<noteq> f G H\n  F, F, \\<Delta> = f G H, \\<Delta>'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>F \\<noteq> f G H; F, F, \\<Delta> = f G H, \\<Delta>'\\<rbrakk>\n    \\<Longrightarrow> \\<Delta> = f G H, \\<Delta>' - (F, {#}) - (F, {#})\n 2. \\<lbrakk>F \\<noteq> f G H; F, F, \\<Delta> = f G H, \\<Delta>'\\<rbrakk>\n    \\<Longrightarrow> F, F, \\<Delta>' - (F, {#}) - (F, {#}) = \\<Delta>'", "from 2"], ["proof (chain)\npicking this:\n  F \\<noteq> f G H\n  F, F, \\<Delta> = f G H, \\<Delta>'", "have \"F \\<in># \\<Delta>'\""], ["proof (prove)\nusing this:\n  F \\<noteq> f G H\n  F, F, \\<Delta> = f G H, \\<Delta>'\n\ngoal (1 subgoal):\n 1. F \\<in># \\<Delta>'", "by(blast dest: lem1[THEN iffD1])"], ["proof (state)\nthis:\n  F \\<in># \\<Delta>'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>F \\<noteq> f G H; F, F, \\<Delta> = f G H, \\<Delta>'\\<rbrakk>\n    \\<Longrightarrow> \\<Delta> = f G H, \\<Delta>' - (F, {#}) - (F, {#})\n 2. \\<lbrakk>F \\<noteq> f G H; F, F, \\<Delta> = f G H, \\<Delta>'\\<rbrakk>\n    \\<Longrightarrow> F, F, \\<Delta>' - (F, {#}) - (F, {#}) = \\<Delta>'", "then"], ["proof (chain)\npicking this:\n  F \\<in># \\<Delta>'", "obtain \\<Delta>'' where \\<Delta>': \"\\<Delta>' = F,\\<Delta>''\""], ["proof (prove)\nusing this:\n  F \\<in># \\<Delta>'\n\ngoal (1 subgoal):\n 1. (\\<And>\\<Delta>'''.\n        \\<Delta>' = F, \\<Delta>''' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis insert_DiffM)"], ["proof (state)\nthis:\n  \\<Delta>' = F, \\<Delta>''\n\ngoal (2 subgoals):\n 1. \\<lbrakk>F \\<noteq> f G H; F, F, \\<Delta> = f G H, \\<Delta>'\\<rbrakk>\n    \\<Longrightarrow> \\<Delta> = f G H, \\<Delta>' - (F, {#}) - (F, {#})\n 2. \\<lbrakk>F \\<noteq> f G H; F, F, \\<Delta> = f G H, \\<Delta>'\\<rbrakk>\n    \\<Longrightarrow> F, F, \\<Delta>' - (F, {#}) - (F, {#}) = \\<Delta>'", "with 2(2)"], ["proof (chain)\npicking this:\n  F, F, \\<Delta> = f G H, \\<Delta>'\n  \\<Delta>' = F, \\<Delta>''", "have \"F, \\<Delta> = f G H, \\<Delta>''\""], ["proof (prove)\nusing this:\n  F, F, \\<Delta> = f G H, \\<Delta>'\n  \\<Delta>' = F, \\<Delta>''\n\ngoal (1 subgoal):\n 1. F, \\<Delta> = f G H, \\<Delta>''", "by(simp add: add_mset_commute)"], ["proof (state)\nthis:\n  F, \\<Delta> = f G H, \\<Delta>''\n\ngoal (2 subgoals):\n 1. \\<lbrakk>F \\<noteq> f G H; F, F, \\<Delta> = f G H, \\<Delta>'\\<rbrakk>\n    \\<Longrightarrow> \\<Delta> = f G H, \\<Delta>' - (F, {#}) - (F, {#})\n 2. \\<lbrakk>F \\<noteq> f G H; F, F, \\<Delta> = f G H, \\<Delta>'\\<rbrakk>\n    \\<Longrightarrow> F, F, \\<Delta>' - (F, {#}) - (F, {#}) = \\<Delta>'", "hence \"F \\<in># \\<Delta>''\""], ["proof (prove)\nusing this:\n  F, \\<Delta> = f G H, \\<Delta>''\n\ngoal (1 subgoal):\n 1. F \\<in># \\<Delta>''", "using 2(1)"], ["proof (prove)\nusing this:\n  F, \\<Delta> = f G H, \\<Delta>''\n  F \\<noteq> f G H\n\ngoal (1 subgoal):\n 1. F \\<in># \\<Delta>''", "by(blast dest: lem1[THEN iffD1])"], ["proof (state)\nthis:\n  F \\<in># \\<Delta>''\n\ngoal (2 subgoals):\n 1. \\<lbrakk>F \\<noteq> f G H; F, F, \\<Delta> = f G H, \\<Delta>'\\<rbrakk>\n    \\<Longrightarrow> \\<Delta> = f G H, \\<Delta>' - (F, {#}) - (F, {#})\n 2. \\<lbrakk>F \\<noteq> f G H; F, F, \\<Delta> = f G H, \\<Delta>'\\<rbrakk>\n    \\<Longrightarrow> F, F, \\<Delta>' - (F, {#}) - (F, {#}) = \\<Delta>'", "then"], ["proof (chain)\npicking this:\n  F \\<in># \\<Delta>''", "obtain \\<Delta>''' where \\<Delta>'': \"\\<Delta>'' = F,\\<Delta>'''\""], ["proof (prove)\nusing this:\n  F \\<in># \\<Delta>''\n\ngoal (1 subgoal):\n 1. (\\<And>\\<Delta>''''.\n        \\<Delta>'' = F, \\<Delta>'''' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis insert_DiffM)"], ["proof (state)\nthis:\n  \\<Delta>'' = F, \\<Delta>'''\n\ngoal (2 subgoals):\n 1. \\<lbrakk>F \\<noteq> f G H; F, F, \\<Delta> = f G H, \\<Delta>'\\<rbrakk>\n    \\<Longrightarrow> \\<Delta> = f G H, \\<Delta>' - (F, {#}) - (F, {#})\n 2. \\<lbrakk>F \\<noteq> f G H; F, F, \\<Delta> = f G H, \\<Delta>'\\<rbrakk>\n    \\<Longrightarrow> F, F, \\<Delta>' - (F, {#}) - (F, {#}) = \\<Delta>'", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. F, F, \\<Delta>' - (F, {#}) - (F, {#}) = \\<Delta>'", "unfolding \\<Delta>' \\<Delta>''"], ["proof (prove)\ngoal (1 subgoal):\n 1. F, F, (F, F, \\<Delta>''') - (F, {#}) - (F, {#}) = F, F, \\<Delta>'''", "by simp"], ["proof (state)\nthis:\n  F, F, \\<Delta>' - (F, {#}) - (F, {#}) = \\<Delta>'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>F \\<noteq> f G H; F, F, \\<Delta> = f G H, \\<Delta>'\\<rbrakk>\n    \\<Longrightarrow> \\<Delta> = f G H, \\<Delta>' - (F, {#}) - (F, {#})", "case 1"], ["proof (state)\nthis:\n  F \\<noteq> f G H\n  F, F, \\<Delta> = f G H, \\<Delta>'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>F \\<noteq> f G H; F, F, \\<Delta> = f G H, \\<Delta>'\\<rbrakk>\n    \\<Longrightarrow> \\<Delta> = f G H, \\<Delta>' - (F, {#}) - (F, {#})", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Delta> = f G H, \\<Delta>' - (F, {#}) - (F, {#})", "using 1(2)"], ["proof (prove)\nusing this:\n  F, F, \\<Delta> = f G H, \\<Delta>'\n\ngoal (1 subgoal):\n 1. \\<Delta> = f G H, \\<Delta>' - (F, {#}) - (F, {#})", "unfolding \\<Delta>' \\<Delta>''"], ["proof (prove)\nusing this:\n  F, F, \\<Delta> = f G H, F, F, \\<Delta>'''\n\ngoal (1 subgoal):\n 1. \\<Delta> = f G H, (F, F, \\<Delta>''') - (F, {#}) - (F, {#})", "by(simp add: add_mset_commute)"], ["proof (state)\nthis:\n  \\<Delta> = f G H, \\<Delta>' - (F, {#}) - (F, {#})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>F \\<noteq> ?f1 ?G1 ?H1;\n   F, F, \\<Delta> = ?f1 ?G1 ?H1, ?\\<Delta>'1\\<rbrakk>\n  \\<Longrightarrow> \\<Delta> =\n                    ?f1 ?G1 ?H1, ?\\<Delta>'1 - (F, {#}) - (F, {#}) \\<and>\n                    F, F, ?\\<Delta>'1 - (F, {#}) - (F, {#}) = ?\\<Delta>'1\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> Suc n \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "have principal[dest]: \"F, F, \\<Delta> = f G H, \\<Delta>' \\<Longrightarrow> F = f G H \\<Longrightarrow> \\<Delta>' = f G H, \\<Delta>\" for f G H \\<Delta>'"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>F, F, \\<Delta> = f G H, \\<Delta>'; F = f G H\\<rbrakk>\n    \\<Longrightarrow> \\<Delta>' = f G H, \\<Delta>", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>F, F, \\<Delta> = ?f2 ?G2 ?H2, ?\\<Delta>'2;\n   F = ?f2 ?G2 ?H2\\<rbrakk>\n  \\<Longrightarrow> ?\\<Delta>'2 = ?f2 ?G2 ?H2, \\<Delta>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> Suc n \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "from 2"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> Suc n", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> Suc n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "proof(cases rule: SCc.cases[of \\<Gamma> \"F,F,\\<Delta>\" \"Suc n\"])"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<bottom> \\<in># \\<Gamma> \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<And>k.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>;\n        Atom k \\<in># F, F, \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 4. \\<And>F \\<Delta>.\n       \\<lbrakk>F, F, \\<Delta> = \\<^bold>\\<not> F, \\<Delta>;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>;\n        F, G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 6. \\<And>F \\<Delta> G.\n       \\<lbrakk>F, F, \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>;\n        \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 7. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 8. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>;\n        \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 9. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 10. \\<And>F G \\<Delta>.\n        \\<lbrakk>F, F, \\<Delta> = F \\<^bold>\\<rightarrow> G, \\<Delta>;\n         F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "case (ImpR G H \\<Delta>')"], ["proof (state)\nthis:\n  F, F, \\<Delta> = G \\<^bold>\\<rightarrow> H, \\<Delta>'\n  G, \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n\n\ngoal (10 subgoals):\n 1. \\<bottom> \\<in># \\<Gamma> \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<And>k.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>;\n        Atom k \\<in># F, F, \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 4. \\<And>F \\<Delta>.\n       \\<lbrakk>F, F, \\<Delta> = \\<^bold>\\<not> F, \\<Delta>;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>;\n        F, G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 6. \\<And>F \\<Delta> G.\n       \\<lbrakk>F, F, \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>;\n        \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 7. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 8. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>;\n        \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 9. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 10. \\<And>F G \\<Delta>.\n        \\<lbrakk>F, F, \\<Delta> = F \\<^bold>\\<rightarrow> G, \\<Delta>;\n         F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "thus ?thesis"], ["proof (prove)\nusing this:\n  F, F, \\<Delta> = G \\<^bold>\\<rightarrow> H, \\<Delta>'\n  G, \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<rightarrow> H, \\<Delta>';\n     G, \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n; ?P2\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<rightarrow> H, \\<Delta>';\n     G, \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n; \\<not> ?P2\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "assume e[simp]: \"F = Imp G H\""], ["proof (state)\nthis:\n  F = G \\<^bold>\\<rightarrow> H\n\ngoal (2 subgoals):\n 1. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<rightarrow> H, \\<Delta>';\n     G, \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n; ?P2\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<rightarrow> H, \\<Delta>';\n     G, \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n; \\<not> ?P2\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "with ImpR(1)"], ["proof (chain)\npicking this:\n  F, F, \\<Delta> = G \\<^bold>\\<rightarrow> H, \\<Delta>'\n  F = G \\<^bold>\\<rightarrow> H", "have \\<Delta>'[simp]: \"\\<Delta>' = Imp G H, \\<Delta>\""], ["proof (prove)\nusing this:\n  F, F, \\<Delta> = G \\<^bold>\\<rightarrow> H, \\<Delta>'\n  F = G \\<^bold>\\<rightarrow> H\n\ngoal (1 subgoal):\n 1. \\<Delta>' = G \\<^bold>\\<rightarrow> H, \\<Delta>", "by simp"], ["proof (state)\nthis:\n  \\<Delta>' = G \\<^bold>\\<rightarrow> H, \\<Delta>\n\ngoal (2 subgoals):\n 1. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<rightarrow> H, \\<Delta>';\n     G, \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n; ?P2\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<rightarrow> H, \\<Delta>';\n     G, \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n; \\<not> ?P2\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "have \"G, \\<Gamma> \\<Rightarrow> Imp G H, H, \\<Delta> \\<down> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G, \\<Gamma> \\<Rightarrow>\n    G \\<^bold>\\<rightarrow> H, H, \\<Delta> \\<down> n", "using ImpR(2)"], ["proof (prove)\nusing this:\n  G, \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n\n\ngoal (1 subgoal):\n 1. G, \\<Gamma> \\<Rightarrow>\n    G \\<^bold>\\<rightarrow> H, H, \\<Delta> \\<down> n", "by simp"], ["proof (state)\nthis:\n  G, \\<Gamma> \\<Rightarrow> G \\<^bold>\\<rightarrow> H, H, \\<Delta> \\<down> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<rightarrow> H, \\<Delta>';\n     G, \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n; ?P2\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<rightarrow> H, \\<Delta>';\n     G, \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n; \\<not> ?P2\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "hence \"G, G, \\<Gamma> \\<Rightarrow> H, H, \\<Delta> \\<down> n\""], ["proof (prove)\nusing this:\n  G, \\<Gamma> \\<Rightarrow> G \\<^bold>\\<rightarrow> H, H, \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. G, G, \\<Gamma> \\<Rightarrow> H, H, \\<Delta> \\<down> n", "by(rule ImpR_inv')"], ["proof (state)\nthis:\n  G, G, \\<Gamma> \\<Rightarrow> H, H, \\<Delta> \\<down> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<rightarrow> H, \\<Delta>';\n     G, \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n; ?P2\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<rightarrow> H, \\<Delta>';\n     G, \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n; \\<not> ?P2\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "hence \"G, \\<Gamma> \\<Rightarrow> H, \\<Delta> \\<down> n\""], ["proof (prove)\nusing this:\n  G, G, \\<Gamma> \\<Rightarrow> H, H, \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. G, \\<Gamma> \\<Rightarrow> H, \\<Delta> \\<down> n", "using IH"], ["proof (prove)\nusing this:\n  G, G, \\<Gamma> \\<Rightarrow> H, H, \\<Delta> \\<down> n\n  ?F, ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n \\<Longrightarrow>\n  ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n\n  ?\\<Gamma> \\<Rightarrow> ?F, ?F, ?\\<Delta> \\<down> n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. G, \\<Gamma> \\<Rightarrow> H, \\<Delta> \\<down> n", "by fast"], ["proof (state)\nthis:\n  G, \\<Gamma> \\<Rightarrow> H, \\<Delta> \\<down> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<rightarrow> H, \\<Delta>';\n     G, \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n; ?P2\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<rightarrow> H, \\<Delta>';\n     G, \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n; \\<not> ?P2\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "thus \"\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\""], ["proof (prove)\nusing this:\n  G, \\<Gamma> \\<Rightarrow> H, \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "using SCc.ImpR"], ["proof (prove)\nusing this:\n  G, \\<Gamma> \\<Rightarrow> H, \\<Delta> \\<down> n\n  ?F, ?\\<Gamma> \\<Rightarrow> ?G, ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow>\n  ?F \\<^bold>\\<rightarrow> ?G, ?\\<Delta> \\<down> Suc ?n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "by simp"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<rightarrow> H, \\<Delta>';\n     G, \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n;\n     F \\<noteq> G \\<^bold>\\<rightarrow> H\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<rightarrow> H, \\<Delta>';\n     G, \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n;\n     F \\<noteq> G \\<^bold>\\<rightarrow> H\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "assume a: \"F \\<noteq> Imp G H\""], ["proof (state)\nthis:\n  F \\<noteq> G \\<^bold>\\<rightarrow> H\n\ngoal (1 subgoal):\n 1. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<rightarrow> H, \\<Delta>';\n     G, \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n;\n     F \\<noteq> G \\<^bold>\\<rightarrow> H\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "with ImpR(1)"], ["proof (chain)\npicking this:\n  F, F, \\<Delta> = G \\<^bold>\\<rightarrow> H, \\<Delta>'\n  F \\<noteq> G \\<^bold>\\<rightarrow> H", "have \\<Delta>: \"\\<Delta> = Imp G H, ?ffs \\<Delta>'\""], ["proof (prove)\nusing this:\n  F, F, \\<Delta> = G \\<^bold>\\<rightarrow> H, \\<Delta>'\n  F \\<noteq> G \\<^bold>\\<rightarrow> H\n\ngoal (1 subgoal):\n 1. \\<Delta> = G \\<^bold>\\<rightarrow> H, \\<Delta>' - (F, {#}) - (F, {#})", "by (metis (no_types, lifting) diff_diff_add lem2)"], ["proof (state)\nthis:\n  \\<Delta> = G \\<^bold>\\<rightarrow> H, \\<Delta>' - (F, {#}) - (F, {#})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<rightarrow> H, \\<Delta>';\n     G, \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n;\n     F \\<noteq> G \\<^bold>\\<rightarrow> H\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "have \"G,\\<Gamma> \\<Rightarrow> F, F, H, ?ffs \\<Delta>' \\<down> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G, \\<Gamma> \\<Rightarrow>\n    F, F, H, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n", "using ImpR \\<Delta>"], ["proof (prove)\nusing this:\n  F, F, \\<Delta> = G \\<^bold>\\<rightarrow> H, \\<Delta>'\n  G, \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n\n  \\<Delta> = G \\<^bold>\\<rightarrow> H, \\<Delta>' - (F, {#}) - (F, {#})\n\ngoal (1 subgoal):\n 1. G, \\<Gamma> \\<Rightarrow>\n    F, F, H, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n", "by fastforce"], ["proof (state)\nthis:\n  G, \\<Gamma> \\<Rightarrow>\n  F, F, H, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<rightarrow> H, \\<Delta>';\n     G, \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n;\n     F \\<noteq> G \\<^bold>\\<rightarrow> H\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "thus ?thesis"], ["proof (prove)\nusing this:\n  G, \\<Gamma> \\<Rightarrow>\n  F, F, H, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "using SCc.ImpR IH"], ["proof (prove)\nusing this:\n  G, \\<Gamma> \\<Rightarrow>\n  F, F, H, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n\n  ?F, ?\\<Gamma> \\<Rightarrow> ?G, ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow>\n  ?F \\<^bold>\\<rightarrow> ?G, ?\\<Delta> \\<down> Suc ?n\n  ?F, ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n \\<Longrightarrow>\n  ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n\n  ?\\<Gamma> \\<Rightarrow> ?F, ?F, ?\\<Delta> \\<down> n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "unfolding \\<Delta>"], ["proof (prove)\nusing this:\n  G, \\<Gamma> \\<Rightarrow>\n  F, F, H, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n\n  ?F, ?\\<Gamma> \\<Rightarrow> ?G, ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow>\n  ?F \\<^bold>\\<rightarrow> ?G, ?\\<Delta> \\<down> Suc ?n\n  ?F, ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n \\<Longrightarrow>\n  ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n\n  ?\\<Gamma> \\<Rightarrow> ?F, ?F, ?\\<Delta> \\<down> n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow>\n    F, G \\<^bold>\\<rightarrow>\n       H, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> Suc n", "by (metis inR1')"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n\ngoal (9 subgoals):\n 1. \\<bottom> \\<in># \\<Gamma> \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<And>k.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>;\n        Atom k \\<in># F, F, \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 4. \\<And>F \\<Delta>.\n       \\<lbrakk>F, F, \\<Delta> = \\<^bold>\\<not> F, \\<Delta>;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>;\n        F, G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 6. \\<And>F \\<Delta> G.\n       \\<lbrakk>F, F, \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>;\n        \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 7. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 8. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>;\n        \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 9. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<bottom> \\<in># \\<Gamma> \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<And>k.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>;\n        Atom k \\<in># F, F, \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 4. \\<And>F \\<Delta>.\n       \\<lbrakk>F, F, \\<Delta> = \\<^bold>\\<not> F, \\<Delta>;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>;\n        F, G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 6. \\<And>F \\<Delta> G.\n       \\<lbrakk>F, F, \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>;\n        \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 7. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 8. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>;\n        \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 9. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "case (AndR G \\<Delta>' H)"], ["proof (state)\nthis:\n  F, F, \\<Delta> = G \\<^bold>\\<and> H, \\<Delta>'\n  \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n\n  \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n\n\ngoal (9 subgoals):\n 1. \\<bottom> \\<in># \\<Gamma> \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<And>k.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>;\n        Atom k \\<in># F, F, \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 4. \\<And>F \\<Delta>.\n       \\<lbrakk>F, F, \\<Delta> = \\<^bold>\\<not> F, \\<Delta>;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>;\n        F, G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 6. \\<And>F \\<Delta> G.\n       \\<lbrakk>F, F, \\<Delta> = F \\<^bold>\\<and> G, \\<Delta>;\n        \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 7. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 8. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>;\n        \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 9. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "thus ?thesis"], ["proof (prove)\nusing this:\n  F, F, \\<Delta> = G \\<^bold>\\<and> H, \\<Delta>'\n  \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n\n  \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "proof(cases \"F = And G H\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<and> H, \\<Delta>';\n     \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n     \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n;\n     F = G \\<^bold>\\<and> H\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<and> H, \\<Delta>';\n     \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n     \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n;\n     F \\<noteq> G \\<^bold>\\<and> H\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "case True"], ["proof (state)\nthis:\n  F = G \\<^bold>\\<and> H\n\ngoal (2 subgoals):\n 1. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<and> H, \\<Delta>';\n     \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n     \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n;\n     F = G \\<^bold>\\<and> H\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<and> H, \\<Delta>';\n     \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n     \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n;\n     F \\<noteq> G \\<^bold>\\<and> H\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "thus ?thesis"], ["proof (prove)\nusing this:\n  F = G \\<^bold>\\<and> H\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "using AndR"], ["proof (prove)\nusing this:\n  F = G \\<^bold>\\<and> H\n  F, F, \\<Delta> = G \\<^bold>\\<and> H, \\<Delta>'\n  \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n\n  \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "by(auto intro!: SCc.intros(3-) dest!: AndR_inv' intro: IH)"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<and> H, \\<Delta>';\n     \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n     \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n;\n     F \\<noteq> G \\<^bold>\\<and> H\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<and> H, \\<Delta>';\n     \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n     \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n;\n     F \\<noteq> G \\<^bold>\\<and> H\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "case False"], ["proof (state)\nthis:\n  F \\<noteq> G \\<^bold>\\<and> H\n\ngoal (1 subgoal):\n 1. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<and> H, \\<Delta>';\n     \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n     \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n;\n     F \\<noteq> G \\<^bold>\\<and> H\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "hence e: \"\\<Delta> = And G H, ?ffs \\<Delta>'\""], ["proof (prove)\nusing this:\n  F \\<noteq> G \\<^bold>\\<and> H\n\ngoal (1 subgoal):\n 1. \\<Delta> = G \\<^bold>\\<and> H, \\<Delta>' - (F, {#}) - (F, {#})", "using AndR(1)"], ["proof (prove)\nusing this:\n  F \\<noteq> G \\<^bold>\\<and> H\n  F, F, \\<Delta> = G \\<^bold>\\<and> H, \\<Delta>'\n\ngoal (1 subgoal):\n 1. \\<Delta> = G \\<^bold>\\<and> H, \\<Delta>' - (F, {#}) - (F, {#})", "using diff_diff_add lem2"], ["proof (prove)\nusing this:\n  F \\<noteq> G \\<^bold>\\<and> H\n  F, F, \\<Delta> = G \\<^bold>\\<and> H, \\<Delta>'\n  ?a - ?b - ?c = ?a - (?b + ?c)\n  ?x \\<noteq> ?y \\<Longrightarrow>\n  (?x, ?M = ?y, ?N) = (?y \\<in># ?M \\<and> ?N = ?x, ?M - (?y, {#}))\n\ngoal (1 subgoal):\n 1. \\<Delta> = G \\<^bold>\\<and> H, \\<Delta>' - (F, {#}) - (F, {#})", "by blast"], ["proof (state)\nthis:\n  \\<Delta> = G \\<^bold>\\<and> H, \\<Delta>' - (F, {#}) - (F, {#})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<and> H, \\<Delta>';\n     \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n     \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n;\n     F \\<noteq> G \\<^bold>\\<and> H\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "hence \"G \\<^bold>\\<and> H, F, F, ?ffs \\<Delta>' = G \\<^bold>\\<and> H, \\<Delta>'\""], ["proof (prove)\nusing this:\n  \\<Delta> = G \\<^bold>\\<and> H, \\<Delta>' - (F, {#}) - (F, {#})\n\ngoal (1 subgoal):\n 1. G \\<^bold>\\<and> H, F, F, \\<Delta>' - (F, {#}) - (F, {#}) =\n    G \\<^bold>\\<and> H, \\<Delta>'", "using AndR(1)"], ["proof (prove)\nusing this:\n  \\<Delta> = G \\<^bold>\\<and> H, \\<Delta>' - (F, {#}) - (F, {#})\n  F, F, \\<Delta> = G \\<^bold>\\<and> H, \\<Delta>'\n\ngoal (1 subgoal):\n 1. G \\<^bold>\\<and> H, F, F, \\<Delta>' - (F, {#}) - (F, {#}) =\n    G \\<^bold>\\<and> H, \\<Delta>'", "by simp"], ["proof (state)\nthis:\n  G \\<^bold>\\<and> H, F, F, \\<Delta>' - (F, {#}) - (F, {#}) =\n  G \\<^bold>\\<and> H, \\<Delta>'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<and> H, \\<Delta>';\n     \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n     \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n;\n     F \\<noteq> G \\<^bold>\\<and> H\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "hence \"\\<Gamma> \\<Rightarrow> F, F, G, ?ffs \\<Delta>' \\<down> n\" \"\\<Gamma> \\<Rightarrow> F, F, H, ?ffs \\<Delta>' \\<down> n\""], ["proof (prove)\nusing this:\n  G \\<^bold>\\<and> H, F, F, \\<Delta>' - (F, {#}) - (F, {#}) =\n  G \\<^bold>\\<and> H, \\<Delta>'\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow>\n    F, F, G, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n &&&\n    \\<Gamma> \\<Rightarrow>\n    F, F, H, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n", "using AndR(2,3)"], ["proof (prove)\nusing this:\n  G \\<^bold>\\<and> H, F, F, \\<Delta>' - (F, {#}) - (F, {#}) =\n  G \\<^bold>\\<and> H, \\<Delta>'\n  \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n\n  \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow>\n    F, F, G, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n &&&\n    \\<Gamma> \\<Rightarrow>\n    F, F, H, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n", "using add_left_imp_eq inR2"], ["proof (prove)\nusing this:\n  G \\<^bold>\\<and> H, F, F, \\<Delta>' - (F, {#}) - (F, {#}) =\n  G \\<^bold>\\<and> H, \\<Delta>'\n  \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n\n  \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n\n  ?a + ?b = ?a + ?c \\<Longrightarrow> ?b = ?c\n  ?\\<Gamma> \\<Rightarrow> ?F, ?G, ?H, ?\\<Delta> \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?G, ?H, ?F, ?\\<Delta>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow>\n    F, F, G, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n &&&\n    \\<Gamma> \\<Rightarrow>\n    F, F, H, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n", "by fastforce+"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> F, F, G, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n\n  \\<Gamma> \\<Rightarrow> F, F, H, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<and> H, \\<Delta>';\n     \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n     \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n;\n     F \\<noteq> G \\<^bold>\\<and> H\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "hence \"\\<Gamma> \\<Rightarrow> G, F, ?ffs \\<Delta>' \\<down> n\" \"\\<Gamma> \\<Rightarrow> H, F, ?ffs \\<Delta>' \\<down> n\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> F, F, G, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n\n  \\<Gamma> \\<Rightarrow> F, F, H, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow>\n    G, F, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n &&&\n    \\<Gamma> \\<Rightarrow> H, F, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n", "using IH(2)"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> F, F, G, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n\n  \\<Gamma> \\<Rightarrow> F, F, H, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n\n  ?\\<Gamma> \\<Rightarrow> ?F, ?F, ?\\<Delta> \\<down> n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow>\n    G, F, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n &&&\n    \\<Gamma> \\<Rightarrow> H, F, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n", "by blast+"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> G, F, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n\n  \\<Gamma> \\<Rightarrow> H, F, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<and> H, \\<Delta>';\n     \\<Gamma> \\<Rightarrow> G, \\<Delta>' \\<down> n;\n     \\<Gamma> \\<Rightarrow> H, \\<Delta>' \\<down> n;\n     F \\<noteq> G \\<^bold>\\<and> H\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> G, F, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n\n  \\<Gamma> \\<Rightarrow> H, F, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "unfolding e"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> G, F, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n\n  \\<Gamma> \\<Rightarrow> H, F, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow>\n    F, G \\<^bold>\\<and> H, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> Suc n", "by(intro SCc.AndR[THEN inR1'])"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n\ngoal (8 subgoals):\n 1. \\<bottom> \\<in># \\<Gamma> \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<And>k.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>;\n        Atom k \\<in># F, F, \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 4. \\<And>F \\<Delta>.\n       \\<lbrakk>F, F, \\<Delta> = \\<^bold>\\<not> F, \\<Delta>;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>;\n        F, G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 7. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>;\n        \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 8. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<bottom> \\<in># \\<Gamma> \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<And>k.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>;\n        Atom k \\<in># F, F, \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 4. \\<And>F \\<Delta>.\n       \\<lbrakk>F, F, \\<Delta> = \\<^bold>\\<not> F, \\<Delta>;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>;\n        F, G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 7. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>;\n        \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 8. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "case (OrR G H \\<Delta>')"], ["proof (state)\nthis:\n  F, F, \\<Delta> = G \\<^bold>\\<or> H, \\<Delta>'\n  \\<Gamma> \\<Rightarrow> G, H, \\<Delta>' \\<down> n\n\ngoal (8 subgoals):\n 1. \\<bottom> \\<in># \\<Gamma> \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<And>k.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>;\n        Atom k \\<in># F, F, \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 4. \\<And>F \\<Delta>.\n       \\<lbrakk>F, F, \\<Delta> = \\<^bold>\\<not> F, \\<Delta>;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>;\n        F, G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 7. \\<And>F G \\<Delta>.\n       \\<lbrakk>F, F, \\<Delta> = F \\<^bold>\\<or> G, \\<Delta>;\n        \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 8. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "thus ?thesis"], ["proof (prove)\nusing this:\n  F, F, \\<Delta> = G \\<^bold>\\<or> H, \\<Delta>'\n  \\<Gamma> \\<Rightarrow> G, H, \\<Delta>' \\<down> n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<or> H, \\<Delta>';\n     \\<Gamma> \\<Rightarrow> G, H, \\<Delta>' \\<down> n; ?P2\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<or> H, \\<Delta>';\n     \\<Gamma> \\<Rightarrow> G, H, \\<Delta>' \\<down> n; \\<not> ?P2\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "assume a: \"F = Or G H\""], ["proof (state)\nthis:\n  F = G \\<^bold>\\<or> H\n\ngoal (2 subgoals):\n 1. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<or> H, \\<Delta>';\n     \\<Gamma> \\<Rightarrow> G, H, \\<Delta>' \\<down> n; ?P2\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<or> H, \\<Delta>';\n     \\<Gamma> \\<Rightarrow> G, H, \\<Delta>' \\<down> n; \\<not> ?P2\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "hence \\<Delta>': \"\\<Delta>' = G \\<^bold>\\<or> H, \\<Delta>\""], ["proof (prove)\nusing this:\n  F = G \\<^bold>\\<or> H\n\ngoal (1 subgoal):\n 1. \\<Delta>' = G \\<^bold>\\<or> H, \\<Delta>", "using OrR(1)"], ["proof (prove)\nusing this:\n  F = G \\<^bold>\\<or> H\n  F, F, \\<Delta> = G \\<^bold>\\<or> H, \\<Delta>'\n\ngoal (1 subgoal):\n 1. \\<Delta>' = G \\<^bold>\\<or> H, \\<Delta>", "by(intro principal)"], ["proof (state)\nthis:\n  \\<Delta>' = G \\<^bold>\\<or> H, \\<Delta>\n\ngoal (2 subgoals):\n 1. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<or> H, \\<Delta>';\n     \\<Gamma> \\<Rightarrow> G, H, \\<Delta>' \\<down> n; ?P2\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<or> H, \\<Delta>';\n     \\<Gamma> \\<Rightarrow> G, H, \\<Delta>' \\<down> n; \\<not> ?P2\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "hence \"\\<Gamma> \\<Rightarrow> G, H, G, H, \\<Delta> \\<down> n\""], ["proof (prove)\nusing this:\n  \\<Delta>' = G \\<^bold>\\<or> H, \\<Delta>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> G, H, G, H, \\<Delta> \\<down> n", "using inR3'[THEN OrR_inv'] OrR(2)"], ["proof (prove)\nusing this:\n  \\<Delta>' = G \\<^bold>\\<or> H, \\<Delta>\n  ?\\<Gamma> \\<Rightarrow>\n  ?F1, ?G1, ?F \\<^bold>\\<or> ?G, ?\\<Delta>1 \\<down> ?n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?F, ?G, ?F1, ?G1, ?\\<Delta>1 \\<down> ?n\n  \\<Gamma> \\<Rightarrow> G, H, \\<Delta>' \\<down> n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> G, H, G, H, \\<Delta> \\<down> n", "by auto"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> G, H, G, H, \\<Delta> \\<down> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<or> H, \\<Delta>';\n     \\<Gamma> \\<Rightarrow> G, H, \\<Delta>' \\<down> n; ?P2\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<or> H, \\<Delta>';\n     \\<Gamma> \\<Rightarrow> G, H, \\<Delta>' \\<down> n; \\<not> ?P2\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "hence \"\\<Gamma> \\<Rightarrow> H, G, \\<Delta> \\<down> n\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> G, H, G, H, \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> H, G, \\<Delta> \\<down> n", "using IH(2)[of \\<Gamma> G \"H,H,\\<Delta>\"] IH(2)[of \\<Gamma> H \"G,\\<Delta>\"]"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> G, H, G, H, \\<Delta> \\<down> n\n  \\<Gamma> \\<Rightarrow> G, G, H, H, \\<Delta> \\<down> n \\<Longrightarrow>\n  \\<Gamma> \\<Rightarrow> G, H, H, \\<Delta> \\<down> n\n  \\<Gamma> \\<Rightarrow> H, H, G, \\<Delta> \\<down> n \\<Longrightarrow>\n  \\<Gamma> \\<Rightarrow> H, G, \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> H, G, \\<Delta> \\<down> n", "unfolding add_ac(3)[of \"{#H#}\" \"{#G#}\"]"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> G, H, G, H, \\<Delta> \\<down> n\n  \\<Gamma> \\<Rightarrow> G, G, H, H, \\<Delta> \\<down> n \\<Longrightarrow>\n  \\<Gamma> \\<Rightarrow> G, H, H, \\<Delta> \\<down> n\n  \\<Gamma> \\<Rightarrow> H, H, G, \\<Delta> \\<down> n \\<Longrightarrow>\n  \\<Gamma> \\<Rightarrow> H, G, \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> H, G, \\<Delta> \\<down> n", "using inR2"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> G, H, G, H, \\<Delta> \\<down> n\n  \\<Gamma> \\<Rightarrow> G, G, H, H, \\<Delta> \\<down> n \\<Longrightarrow>\n  \\<Gamma> \\<Rightarrow> G, H, H, \\<Delta> \\<down> n\n  \\<Gamma> \\<Rightarrow> H, H, G, \\<Delta> \\<down> n \\<Longrightarrow>\n  \\<Gamma> \\<Rightarrow> H, G, \\<Delta> \\<down> n\n  ?\\<Gamma> \\<Rightarrow> ?F, ?G, ?H, ?\\<Delta> \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?G, ?H, ?F, ?\\<Delta>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> H, G, \\<Delta> \\<down> n", "by blast"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> H, G, \\<Delta> \\<down> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<or> H, \\<Delta>';\n     \\<Gamma> \\<Rightarrow> G, H, \\<Delta>' \\<down> n; ?P2\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<or> H, \\<Delta>';\n     \\<Gamma> \\<Rightarrow> G, H, \\<Delta>' \\<down> n; \\<not> ?P2\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "hence \"\\<Gamma> \\<Rightarrow> G, H, \\<Delta> \\<down> n\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> H, G, \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> G, H, \\<Delta> \\<down> n", "by(elim SC_swap_applies)"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> G, H, \\<Delta> \\<down> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<or> H, \\<Delta>';\n     \\<Gamma> \\<Rightarrow> G, H, \\<Delta>' \\<down> n; ?P2\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<or> H, \\<Delta>';\n     \\<Gamma> \\<Rightarrow> G, H, \\<Delta>' \\<down> n; \\<not> ?P2\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> G, H, \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "unfolding a"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> G, H, \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> G \\<^bold>\\<or> H, \\<Delta> \\<down> Suc n", "by (simp add: SCc.OrR)"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<or> H, \\<Delta>';\n     \\<Gamma> \\<Rightarrow> G, H, \\<Delta>' \\<down> n;\n     F \\<noteq> G \\<^bold>\\<or> H\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<or> H, \\<Delta>';\n     \\<Gamma> \\<Rightarrow> G, H, \\<Delta>' \\<down> n;\n     F \\<noteq> G \\<^bold>\\<or> H\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "assume a: \"F \\<noteq> Or G H\""], ["proof (state)\nthis:\n  F \\<noteq> G \\<^bold>\\<or> H\n\ngoal (1 subgoal):\n 1. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<or> H, \\<Delta>';\n     \\<Gamma> \\<Rightarrow> G, H, \\<Delta>' \\<down> n;\n     F \\<noteq> G \\<^bold>\\<or> H\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "with not_principal"], ["proof (chain)\npicking this:\n  \\<lbrakk>F \\<noteq> ?f1 ?G1 ?H1;\n   F, F, \\<Delta> = ?f1 ?G1 ?H1, ?\\<Delta>'1\\<rbrakk>\n  \\<Longrightarrow> \\<Delta> =\n                    ?f1 ?G1 ?H1, ?\\<Delta>'1 - (F, {#}) - (F, {#}) \\<and>\n                    F, F, ?\\<Delta>'1 - (F, {#}) - (F, {#}) = ?\\<Delta>'1\n  F \\<noteq> G \\<^bold>\\<or> H", "have np: \"\\<Delta> = G \\<^bold>\\<or> H, ?ffs \\<Delta>' \\<and> F, F, ?ffs \\<Delta>' = \\<Delta>'\""], ["proof (prove)\nusing this:\n  \\<lbrakk>F \\<noteq> ?f1 ?G1 ?H1;\n   F, F, \\<Delta> = ?f1 ?G1 ?H1, ?\\<Delta>'1\\<rbrakk>\n  \\<Longrightarrow> \\<Delta> =\n                    ?f1 ?G1 ?H1, ?\\<Delta>'1 - (F, {#}) - (F, {#}) \\<and>\n                    F, F, ?\\<Delta>'1 - (F, {#}) - (F, {#}) = ?\\<Delta>'1\n  F \\<noteq> G \\<^bold>\\<or> H\n\ngoal (1 subgoal):\n 1. \\<Delta> = G \\<^bold>\\<or> H, \\<Delta>' - (F, {#}) - (F, {#}) \\<and>\n    F, F, \\<Delta>' - (F, {#}) - (F, {#}) = \\<Delta>'", "using OrR(1)"], ["proof (prove)\nusing this:\n  \\<lbrakk>F \\<noteq> ?f1 ?G1 ?H1;\n   F, F, \\<Delta> = ?f1 ?G1 ?H1, ?\\<Delta>'1\\<rbrakk>\n  \\<Longrightarrow> \\<Delta> =\n                    ?f1 ?G1 ?H1, ?\\<Delta>'1 - (F, {#}) - (F, {#}) \\<and>\n                    F, F, ?\\<Delta>'1 - (F, {#}) - (F, {#}) = ?\\<Delta>'1\n  F \\<noteq> G \\<^bold>\\<or> H\n  F, F, \\<Delta> = G \\<^bold>\\<or> H, \\<Delta>'\n\ngoal (1 subgoal):\n 1. \\<Delta> = G \\<^bold>\\<or> H, \\<Delta>' - (F, {#}) - (F, {#}) \\<and>\n    F, F, \\<Delta>' - (F, {#}) - (F, {#}) = \\<Delta>'", "."], ["proof (state)\nthis:\n  \\<Delta> = G \\<^bold>\\<or> H, \\<Delta>' - (F, {#}) - (F, {#}) \\<and>\n  F, F, \\<Delta>' - (F, {#}) - (F, {#}) = \\<Delta>'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<or> H, \\<Delta>';\n     \\<Gamma> \\<Rightarrow> G, H, \\<Delta>' \\<down> n;\n     F \\<noteq> G \\<^bold>\\<or> H\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "with OrR(2)"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<Rightarrow> G, H, \\<Delta>' \\<down> n\n  \\<Delta> = G \\<^bold>\\<or> H, \\<Delta>' - (F, {#}) - (F, {#}) \\<and>\n  F, F, \\<Delta>' - (F, {#}) - (F, {#}) = \\<Delta>'", "have \"\\<Gamma> \\<Rightarrow> G, H, F, ?ffs \\<Delta>' \\<down> n\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> G, H, \\<Delta>' \\<down> n\n  \\<Delta> = G \\<^bold>\\<or> H, \\<Delta>' - (F, {#}) - (F, {#}) \\<and>\n  F, F, \\<Delta>' - (F, {#}) - (F, {#}) = \\<Delta>'\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow>\n    G, H, F, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n", "using IH(2)"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> G, H, \\<Delta>' \\<down> n\n  \\<Delta> = G \\<^bold>\\<or> H, \\<Delta>' - (F, {#}) - (F, {#}) \\<and>\n  F, F, \\<Delta>' - (F, {#}) - (F, {#}) = \\<Delta>'\n  ?\\<Gamma> \\<Rightarrow> ?F, ?F, ?\\<Delta> \\<down> n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow>\n    G, H, F, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n", "by (metis inR2' inR4')"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> G, H, F, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<or> H, \\<Delta>';\n     \\<Gamma> \\<Rightarrow> G, H, \\<Delta>' \\<down> n;\n     F \\<noteq> G \\<^bold>\\<or> H\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "hence \"\\<Gamma> \\<Rightarrow> F, G \\<^bold>\\<or> H, ?ffs \\<Delta>' \\<down> Suc n\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> G, H, F, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow>\n    F, G \\<^bold>\\<or> H, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> Suc n", "by(intro SCc.OrR[THEN inR1'])"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow>\n  F, G \\<^bold>\\<or> H, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> Suc n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>F, F, \\<Delta> = G \\<^bold>\\<or> H, \\<Delta>';\n     \\<Gamma> \\<Rightarrow> G, H, \\<Delta>' \\<down> n;\n     F \\<noteq> G \\<^bold>\\<or> H\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow>\n  F, G \\<^bold>\\<or> H, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> Suc n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "using np"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow>\n  F, G \\<^bold>\\<or> H, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> Suc n\n  \\<Delta> = G \\<^bold>\\<or> H, \\<Delta>' - (F, {#}) - (F, {#}) \\<and>\n  F, F, \\<Delta>' - (F, {#}) - (F, {#}) = \\<Delta>'\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "by simp"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n\ngoal (7 subgoals):\n 1. \\<bottom> \\<in># \\<Gamma> \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<And>k.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>;\n        Atom k \\<in># F, F, \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 4. \\<And>F \\<Delta>.\n       \\<lbrakk>F, F, \\<Delta> = \\<^bold>\\<not> F, \\<Delta>;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>;\n        F, G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 7. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<bottom> \\<in># \\<Gamma> \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<And>k.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>;\n        Atom k \\<in># F, F, \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 4. \\<And>F \\<Delta>.\n       \\<lbrakk>F, F, \\<Delta> = \\<^bold>\\<not> F, \\<Delta>;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>;\n        F, G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 7. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "case (NotR G \\<Delta>')"], ["proof (state)\nthis:\n  F, F, \\<Delta> = \\<^bold>\\<not> G, \\<Delta>'\n  G, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n\n\ngoal (7 subgoals):\n 1. \\<bottom> \\<in># \\<Gamma> \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<And>k.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>;\n        Atom k \\<in># F, F, \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 4. \\<And>F \\<Delta>.\n       \\<lbrakk>F, F, \\<Delta> = \\<^bold>\\<not> F, \\<Delta>;\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>;\n        F, G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 7. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "thus ?thesis"], ["proof (prove)\nusing this:\n  F, F, \\<Delta> = \\<^bold>\\<not> G, \\<Delta>'\n  G, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "proof(cases \"F = Not G\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>F, F, \\<Delta> = \\<^bold>\\<not> G, \\<Delta>';\n     G, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n     F = \\<^bold>\\<not> G\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<lbrakk>F, F, \\<Delta> = \\<^bold>\\<not> G, \\<Delta>';\n     G, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n     F \\<noteq> \\<^bold>\\<not> G\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "case True"], ["proof (state)\nthis:\n  F = \\<^bold>\\<not> G\n\ngoal (2 subgoals):\n 1. \\<lbrakk>F, F, \\<Delta> = \\<^bold>\\<not> G, \\<Delta>';\n     G, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n     F = \\<^bold>\\<not> G\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<lbrakk>F, F, \\<Delta> = \\<^bold>\\<not> G, \\<Delta>';\n     G, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n     F \\<noteq> \\<^bold>\\<not> G\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "with principal NotR(1)"], ["proof (chain)\npicking this:\n  \\<lbrakk>F, F, \\<Delta> = ?f2 ?G2 ?H2, ?\\<Delta>'2;\n   F = ?f2 ?G2 ?H2\\<rbrakk>\n  \\<Longrightarrow> ?\\<Delta>'2 = ?f2 ?G2 ?H2, \\<Delta>\n  F, F, \\<Delta> = \\<^bold>\\<not> G, \\<Delta>'\n  F = \\<^bold>\\<not> G", "have \"\\<Delta>' = \\<^bold>\\<not> G, \\<Delta>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>F, F, \\<Delta> = ?f2 ?G2 ?H2, ?\\<Delta>'2;\n   F = ?f2 ?G2 ?H2\\<rbrakk>\n  \\<Longrightarrow> ?\\<Delta>'2 = ?f2 ?G2 ?H2, \\<Delta>\n  F, F, \\<Delta> = \\<^bold>\\<not> G, \\<Delta>'\n  F = \\<^bold>\\<not> G\n\ngoal (1 subgoal):\n 1. \\<Delta>' = \\<^bold>\\<not> G, \\<Delta>", "."], ["proof (state)\nthis:\n  \\<Delta>' = \\<^bold>\\<not> G, \\<Delta>\n\ngoal (2 subgoals):\n 1. \\<lbrakk>F, F, \\<Delta> = \\<^bold>\\<not> G, \\<Delta>';\n     G, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n     F = \\<^bold>\\<not> G\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<lbrakk>F, F, \\<Delta> = \\<^bold>\\<not> G, \\<Delta>';\n     G, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n     F \\<noteq> \\<^bold>\\<not> G\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "with NotR_inv' NotR(2)"], ["proof (chain)\npicking this:\n  ?\\<Gamma> \\<Rightarrow>\n  \\<^bold>\\<not> ?F, ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n\n  G, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n\n  \\<Delta>' = \\<^bold>\\<not> G, \\<Delta>", "have \"G, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\""], ["proof (prove)\nusing this:\n  ?\\<Gamma> \\<Rightarrow>\n  \\<^bold>\\<not> ?F, ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n\n  G, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n\n  \\<Delta>' = \\<^bold>\\<not> G, \\<Delta>\n\ngoal (1 subgoal):\n 1. G, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n", "by blast"], ["proof (state)\nthis:\n  G, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>F, F, \\<Delta> = \\<^bold>\\<not> G, \\<Delta>';\n     G, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n     F = \\<^bold>\\<not> G\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<lbrakk>F, F, \\<Delta> = \\<^bold>\\<not> G, \\<Delta>';\n     G, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n     F \\<noteq> \\<^bold>\\<not> G\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "with IH(1)"], ["proof (chain)\npicking this:\n  ?F, ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n \\<Longrightarrow>\n  ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n\n  G, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n", "have \"G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\""], ["proof (prove)\nusing this:\n  ?F, ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n \\<Longrightarrow>\n  ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n\n  G, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n", "."], ["proof (state)\nthis:\n  G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>F, F, \\<Delta> = \\<^bold>\\<not> G, \\<Delta>';\n     G, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n     F = \\<^bold>\\<not> G\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<lbrakk>F, F, \\<Delta> = \\<^bold>\\<not> G, \\<Delta>';\n     G, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n     F \\<noteq> \\<^bold>\\<not> G\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "thus \"\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\""], ["proof (prove)\nusing this:\n  G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "unfolding True"], ["proof (prove)\nusing this:\n  G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<^bold>\\<not> G, \\<Delta> \\<down> Suc n", "by(intro SCc.NotR)"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>F, F, \\<Delta> = \\<^bold>\\<not> G, \\<Delta>';\n     G, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n     F \\<noteq> \\<^bold>\\<not> G\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>F, F, \\<Delta> = \\<^bold>\\<not> G, \\<Delta>';\n     G, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n     F \\<noteq> \\<^bold>\\<not> G\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "case False"], ["proof (state)\nthis:\n  F \\<noteq> \\<^bold>\\<not> G\n\ngoal (1 subgoal):\n 1. \\<lbrakk>F, F, \\<Delta> = \\<^bold>\\<not> G, \\<Delta>';\n     G, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n     F \\<noteq> \\<^bold>\\<not> G\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "with not_principal"], ["proof (chain)\npicking this:\n  \\<lbrakk>F \\<noteq> ?f1 ?G1 ?H1;\n   F, F, \\<Delta> = ?f1 ?G1 ?H1, ?\\<Delta>'1\\<rbrakk>\n  \\<Longrightarrow> \\<Delta> =\n                    ?f1 ?G1 ?H1, ?\\<Delta>'1 - (F, {#}) - (F, {#}) \\<and>\n                    F, F, ?\\<Delta>'1 - (F, {#}) - (F, {#}) = ?\\<Delta>'1\n  F \\<noteq> \\<^bold>\\<not> G", "have np: \"\\<Delta> = \\<^bold>\\<not> G, \\<Delta>' - (F, {#F#}) \\<and> F, F, \\<Delta>' - (F, {#F#}) = \\<Delta>'\""], ["proof (prove)\nusing this:\n  \\<lbrakk>F \\<noteq> ?f1 ?G1 ?H1;\n   F, F, \\<Delta> = ?f1 ?G1 ?H1, ?\\<Delta>'1\\<rbrakk>\n  \\<Longrightarrow> \\<Delta> =\n                    ?f1 ?G1 ?H1, ?\\<Delta>'1 - (F, {#}) - (F, {#}) \\<and>\n                    F, F, ?\\<Delta>'1 - (F, {#}) - (F, {#}) = ?\\<Delta>'1\n  F \\<noteq> \\<^bold>\\<not> G\n\ngoal (1 subgoal):\n 1. \\<Delta> = \\<^bold>\\<not> G, \\<Delta>' - (F, F, {#}) \\<and>\n    F, F, \\<Delta>' - (F, F, {#}) = \\<Delta>'", "using NotR(1)"], ["proof (prove)\nusing this:\n  \\<lbrakk>F \\<noteq> ?f1 ?G1 ?H1;\n   F, F, \\<Delta> = ?f1 ?G1 ?H1, ?\\<Delta>'1\\<rbrakk>\n  \\<Longrightarrow> \\<Delta> =\n                    ?f1 ?G1 ?H1, ?\\<Delta>'1 - (F, {#}) - (F, {#}) \\<and>\n                    F, F, ?\\<Delta>'1 - (F, {#}) - (F, {#}) = ?\\<Delta>'1\n  F \\<noteq> \\<^bold>\\<not> G\n  F, F, \\<Delta> = \\<^bold>\\<not> G, \\<Delta>'\n\ngoal (1 subgoal):\n 1. \\<Delta> = \\<^bold>\\<not> G, \\<Delta>' - (F, F, {#}) \\<and>\n    F, F, \\<Delta>' - (F, F, {#}) = \\<Delta>'", "by auto"], ["proof (state)\nthis:\n  \\<Delta> = \\<^bold>\\<not> G, \\<Delta>' - (F, F, {#}) \\<and>\n  F, F, \\<Delta>' - (F, F, {#}) = \\<Delta>'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>F, F, \\<Delta> = \\<^bold>\\<not> G, \\<Delta>';\n     G, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n     F \\<noteq> \\<^bold>\\<not> G\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "hence \"G, \\<Gamma> \\<Rightarrow> F, F, ?ffs \\<Delta>' \\<down> n\""], ["proof (prove)\nusing this:\n  \\<Delta> = \\<^bold>\\<not> G, \\<Delta>' - (F, F, {#}) \\<and>\n  F, F, \\<Delta>' - (F, F, {#}) = \\<Delta>'\n\ngoal (1 subgoal):\n 1. G, \\<Gamma> \\<Rightarrow>\n    F, F, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n", "using NotR(2)"], ["proof (prove)\nusing this:\n  \\<Delta> = \\<^bold>\\<not> G, \\<Delta>' - (F, F, {#}) \\<and>\n  F, F, \\<Delta>' - (F, F, {#}) = \\<Delta>'\n  G, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n\n\ngoal (1 subgoal):\n 1. G, \\<Gamma> \\<Rightarrow>\n    F, F, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n", "by simp"], ["proof (state)\nthis:\n  G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>F, F, \\<Delta> = \\<^bold>\\<not> G, \\<Delta>';\n     G, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n     F \\<noteq> \\<^bold>\\<not> G\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "hence \"G, \\<Gamma> \\<Rightarrow> F, ?ffs \\<Delta>' \\<down> n\""], ["proof (prove)\nusing this:\n  G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n\n\ngoal (1 subgoal):\n 1. G, \\<Gamma> \\<Rightarrow> F, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n", "by(elim IH(2))"], ["proof (state)\nthis:\n  G, \\<Gamma> \\<Rightarrow> F, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>F, F, \\<Delta> = \\<^bold>\\<not> G, \\<Delta>';\n     G, \\<Gamma> \\<Rightarrow> \\<Delta>' \\<down> n;\n     F \\<noteq> \\<^bold>\\<not> G\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "thus ?thesis"], ["proof (prove)\nusing this:\n  G, \\<Gamma> \\<Rightarrow> F, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "using np SCc.NotR inR1"], ["proof (prove)\nusing this:\n  G, \\<Gamma> \\<Rightarrow> F, \\<Delta>' - (F, {#}) - (F, {#}) \\<down> n\n  \\<Delta> = \\<^bold>\\<not> G, \\<Delta>' - (F, F, {#}) \\<and>\n  F, F, \\<Delta>' - (F, F, {#}) = \\<Delta>'\n  ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> \\<^bold>\\<not> ?F, ?\\<Delta> \\<down> Suc ?n\n  ?\\<Gamma> \\<Rightarrow> ?G, ?H, ?\\<Delta> \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?H, ?G, ?\\<Delta>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "by auto"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n\ngoal (6 subgoals):\n 1. \\<bottom> \\<in># \\<Gamma> \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<And>k.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>;\n        Atom k \\<in># F, F, \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 4. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>;\n        F, G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 5. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 6. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<bottom> \\<in># \\<Gamma> \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<And>k.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>;\n        Atom k \\<in># F, F, \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 4. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>;\n        F, G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 5. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 6. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "case BotL"], ["proof (state)\nthis:\n  \\<bottom> \\<in># \\<Gamma>\n\ngoal (6 subgoals):\n 1. \\<bottom> \\<in># \\<Gamma> \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<And>k.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>;\n        Atom k \\<in># F, F, \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 4. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>;\n        F, G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 5. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 6. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<bottom> \\<in># \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "by(elim SCc.BotL)"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n\ngoal (5 subgoals):\n 1. \\<And>k.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>;\n        Atom k \\<in># F, F, \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>;\n        F, G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 5. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>k.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>;\n        Atom k \\<in># F, F, \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>;\n        F, G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 5. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "case (Ax k)"], ["proof (state)\nthis:\n  Atom k \\<in># \\<Gamma>\n  Atom k \\<in># F, F, \\<Delta>\n\ngoal (5 subgoals):\n 1. \\<And>k.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>;\n        Atom k \\<in># F, F, \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>;\n        F, G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 5. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "thus ?thesis"], ["proof (prove)\nusing this:\n  Atom k \\<in># \\<Gamma>\n  Atom k \\<in># F, F, \\<Delta>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "by(intro SCc.Ax[where k=k]) simp_all"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>;\n        F, G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 3. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 4. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>;\n        F, G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 3. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 4. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "case NotL"], ["proof (state)\nthis:\n  \\<Gamma> = \\<^bold>\\<not> F_, \\<Gamma>_\n  \\<Gamma>_ \\<Rightarrow> F_, F, F, \\<Delta> \\<down> n\n\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>;\n        F, G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 3. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 4. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma> = \\<^bold>\\<not> F_, \\<Gamma>_\n  \\<Gamma>_ \\<Rightarrow> F_, F, F, \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "by (simp add: SCc.NotL Suc.IH add_mset_commute)"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n\ngoal (3 subgoals):\n 1. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>;\n        F, G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>;\n        F, G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "case AndL"], ["proof (state)\nthis:\n  \\<Gamma> = F_ \\<^bold>\\<and> G_, \\<Gamma>_\n  F_, G_, \\<Gamma>_ \\<Rightarrow> F, F, \\<Delta> \\<down> n\n\ngoal (3 subgoals):\n 1. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>;\n        F, G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 3. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma> = F_ \\<^bold>\\<and> G_, \\<Gamma>_\n  F_, G_, \\<Gamma>_ \\<Rightarrow> F, F, \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "using SCc.AndL Suc.IH"], ["proof (prove)\nusing this:\n  \\<Gamma> = F_ \\<^bold>\\<and> G_, \\<Gamma>_\n  F_, G_, \\<Gamma>_ \\<Rightarrow> F, F, \\<Delta> \\<down> n\n  ?F, ?G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?F \\<^bold>\\<and> ?G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> Suc ?n\n  (?F, ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n \\<longrightarrow>\n   ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n) \\<and>\n  (?\\<Gamma> \\<Rightarrow> ?F, ?F, ?\\<Delta> \\<down> n \\<longrightarrow>\n   ?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> n)\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "by blast"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n\ngoal (2 subgoals):\n 1. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "case OrL"], ["proof (state)\nthis:\n  \\<Gamma> = F_ \\<^bold>\\<or> G_, \\<Gamma>_\n  F_, \\<Gamma>_ \\<Rightarrow> F, F, \\<Delta> \\<down> n\n  G_, \\<Gamma>_ \\<Rightarrow> F, F, \\<Delta> \\<down> n\n\ngoal (2 subgoals):\n 1. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n 2. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma> = F_ \\<^bold>\\<or> G_, \\<Gamma>_\n  F_, \\<Gamma>_ \\<Rightarrow> F, F, \\<Delta> \\<down> n\n  G_, \\<Gamma>_ \\<Rightarrow> F, F, \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "using SCc.OrL Suc.IH"], ["proof (prove)\nusing this:\n  \\<Gamma> = F_ \\<^bold>\\<or> G_, \\<Gamma>_\n  F_, \\<Gamma>_ \\<Rightarrow> F, F, \\<Delta> \\<down> n\n  G_, \\<Gamma>_ \\<Rightarrow> F, F, \\<Delta> \\<down> n\n  \\<lbrakk>?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n;\n   ?G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n\\<rbrakk>\n  \\<Longrightarrow> ?F \\<^bold>\\<or> ?G, ?\\<Gamma> \\<Rightarrow>\n                    ?\\<Delta> \\<down> Suc ?n\n  (?F, ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n \\<longrightarrow>\n   ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> n) \\<and>\n  (?\\<Gamma> \\<Rightarrow> ?F, ?F, ?\\<Delta> \\<down> n \\<longrightarrow>\n   ?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> n)\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "by blast"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "case ImpL"], ["proof (state)\nthis:\n  \\<Gamma> = F_ \\<^bold>\\<rightarrow> G_, \\<Gamma>_\n  \\<Gamma>_ \\<Rightarrow> F_, F, F, \\<Delta> \\<down> n\n  G_, \\<Gamma>_ \\<Rightarrow> F, F, \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> F, F, F, \\<Delta> \\<down> n;\n        G, \\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma> = F_ \\<^bold>\\<rightarrow> G_, \\<Gamma>_\n  \\<Gamma>_ \\<Rightarrow> F_, F, F, \\<Delta> \\<down> n\n  G_, \\<Gamma>_ \\<Rightarrow> F, F, \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n", "by (metis SCc.ImpL Suc.IH add_mset_commute)"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n \\<longrightarrow>\n   F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n) \\<and>\n  (\\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> Suc n \\<longrightarrow>\n   \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>F \\<Gamma> \\<Delta>.\n       (F, F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> 0 \\<longrightarrow>\n        F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> 0) \\<and>\n       (\\<Gamma> \\<Rightarrow> F, F, \\<Delta> \\<down> 0 \\<longrightarrow>\n        \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> 0)", "qed blast"], ["", "(* depth for cut? *)"], ["", "lemma Cut_Atom_depth: \"Atom k,\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n \\<Longrightarrow> \\<Gamma> \\<Rightarrow> Atom k,\\<Delta> \\<down> m \\<Longrightarrow> \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n + m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n     \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n + m", "proof(induction \"Atom k,\\<Gamma>\" \"\\<Delta>\" n arbitrary: \\<Gamma> m rule: SCc.induct)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>\\<Delta> n \\<Gamma> m.\n       \\<lbrakk>\\<bottom> \\<in># Atom k, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 2. \\<And>ka \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>Atom ka \\<in># Atom k, \\<Gamma>; Atom ka \\<in># \\<Delta>;\n        \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 3. \\<And>\\<Gamma> F \\<Delta> n \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        \\<^bold>\\<not> F, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 4. \\<And>F \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, \\<^bold>\\<not> F, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<^bold>\\<not> F, \\<Delta> \\<down> Suc n + m\n 5. \\<And>F G \\<Gamma> \\<Delta> n \\<Gamma>' m.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<and> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 6. \\<And>F \\<Delta> n G \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<and> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<and> G, \\<Delta> \\<down> Suc n + m\n 7. \\<And>F \\<Gamma> \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<or> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 8. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow>\n            Atom k, F, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<or> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<or> G, \\<Delta> \\<down> Suc n + m\n 9. \\<And>\\<Gamma> F \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 10. \\<And>F G \\<Delta> n \\<Gamma> m.\n        \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n         \\<And>\\<Gamma>' m.\n            \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n             \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n            \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                              G, \\<Delta> \\<down> n + m;\n         \\<Gamma> \\<Rightarrow>\n         Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                          F \\<^bold>\\<rightarrow>\n                          G, \\<Delta> \\<down> Suc n + m", "case (BotL \\<Delta>)"], ["proof (state)\nthis:\n  \\<bottom> \\<in># Atom k, \\<Gamma>\n  \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> m\n\ngoal (10 subgoals):\n 1. \\<And>\\<Delta> n \\<Gamma> m.\n       \\<lbrakk>\\<bottom> \\<in># Atom k, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 2. \\<And>ka \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>Atom ka \\<in># Atom k, \\<Gamma>; Atom ka \\<in># \\<Delta>;\n        \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 3. \\<And>\\<Gamma> F \\<Delta> n \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        \\<^bold>\\<not> F, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 4. \\<And>F \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, \\<^bold>\\<not> F, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<^bold>\\<not> F, \\<Delta> \\<down> Suc n + m\n 5. \\<And>F G \\<Gamma> \\<Delta> n \\<Gamma>' m.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<and> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 6. \\<And>F \\<Delta> n G \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<and> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<and> G, \\<Delta> \\<down> Suc n + m\n 7. \\<And>F \\<Gamma> \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<or> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 8. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow>\n            Atom k, F, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<or> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<or> G, \\<Delta> \\<down> Suc n + m\n 9. \\<And>\\<Gamma> F \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 10. \\<And>F G \\<Delta> n \\<Gamma> m.\n        \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n         \\<And>\\<Gamma>' m.\n            \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n             \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n            \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                              G, \\<Delta> \\<down> n + m;\n         \\<Gamma> \\<Rightarrow>\n         Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                          F \\<^bold>\\<rightarrow>\n                          G, \\<Delta> \\<down> Suc n + m", "hence \"\\<bottom> \\<in># \\<Gamma>\""], ["proof (prove)\nusing this:\n  \\<bottom> \\<in># Atom k, \\<Gamma>\n  \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> m\n\ngoal (1 subgoal):\n 1. \\<bottom> \\<in># \\<Gamma>", "by simp"], ["proof (state)\nthis:\n  \\<bottom> \\<in># \\<Gamma>\n\ngoal (10 subgoals):\n 1. \\<And>\\<Delta> n \\<Gamma> m.\n       \\<lbrakk>\\<bottom> \\<in># Atom k, \\<Gamma>;\n        \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 2. \\<And>ka \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>Atom ka \\<in># Atom k, \\<Gamma>; Atom ka \\<in># \\<Delta>;\n        \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 3. \\<And>\\<Gamma> F \\<Delta> n \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        \\<^bold>\\<not> F, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 4. \\<And>F \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, \\<^bold>\\<not> F, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<^bold>\\<not> F, \\<Delta> \\<down> Suc n + m\n 5. \\<And>F G \\<Gamma> \\<Delta> n \\<Gamma>' m.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<and> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 6. \\<And>F \\<Delta> n G \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<and> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<and> G, \\<Delta> \\<down> Suc n + m\n 7. \\<And>F \\<Gamma> \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<or> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 8. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow>\n            Atom k, F, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<or> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<or> G, \\<Delta> \\<down> Suc n + m\n 9. \\<And>\\<Gamma> F \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 10. \\<And>F G \\<Delta> n \\<Gamma> m.\n        \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n         \\<And>\\<Gamma>' m.\n            \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n             \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n            \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                              G, \\<Delta> \\<down> n + m;\n         \\<Gamma> \\<Rightarrow>\n         Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                          F \\<^bold>\\<rightarrow>\n                          G, \\<Delta> \\<down> Suc n + m", "thus ?case"], ["proof (prove)\nusing this:\n  \\<bottom> \\<in># \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n_ + m", "using SCc.BotL"], ["proof (prove)\nusing this:\n  \\<bottom> \\<in># \\<Gamma>\n  \\<bottom> \\<in># ?\\<Gamma> \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> Suc ?n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n_ + m", "by auto"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n_ + m\n\ngoal (9 subgoals):\n 1. \\<And>ka \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>Atom ka \\<in># Atom k, \\<Gamma>; Atom ka \\<in># \\<Delta>;\n        \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 2. \\<And>\\<Gamma> F \\<Delta> n \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        \\<^bold>\\<not> F, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 3. \\<And>F \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, \\<^bold>\\<not> F, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<^bold>\\<not> F, \\<Delta> \\<down> Suc n + m\n 4. \\<And>F G \\<Gamma> \\<Delta> n \\<Gamma>' m.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<and> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 5. \\<And>F \\<Delta> n G \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<and> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<and> G, \\<Delta> \\<down> Suc n + m\n 6. \\<And>F \\<Gamma> \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<or> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 7. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow>\n            Atom k, F, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<or> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<or> G, \\<Delta> \\<down> Suc n + m\n 8. \\<And>\\<Gamma> F \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 9. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<rightarrow>\n                         G, \\<Delta> \\<down> Suc n + m", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>ka \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>Atom ka \\<in># Atom k, \\<Gamma>; Atom ka \\<in># \\<Delta>;\n        \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 2. \\<And>\\<Gamma> F \\<Delta> n \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        \\<^bold>\\<not> F, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 3. \\<And>F \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, \\<^bold>\\<not> F, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<^bold>\\<not> F, \\<Delta> \\<down> Suc n + m\n 4. \\<And>F G \\<Gamma> \\<Delta> n \\<Gamma>' m.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<and> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 5. \\<And>F \\<Delta> n G \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<and> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<and> G, \\<Delta> \\<down> Suc n + m\n 6. \\<And>F \\<Gamma> \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<or> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 7. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow>\n            Atom k, F, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<or> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<or> G, \\<Delta> \\<down> Suc n + m\n 8. \\<And>\\<Gamma> F \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 9. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<rightarrow>\n                         G, \\<Delta> \\<down> Suc n + m", "case (Ax l \\<Delta>)"], ["proof (state)\nthis:\n  Atom l \\<in># Atom k, \\<Gamma>\n  Atom l \\<in># \\<Delta>\n  \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> m\n\ngoal (9 subgoals):\n 1. \\<And>ka \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>Atom ka \\<in># Atom k, \\<Gamma>; Atom ka \\<in># \\<Delta>;\n        \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 2. \\<And>\\<Gamma> F \\<Delta> n \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        \\<^bold>\\<not> F, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 3. \\<And>F \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, \\<^bold>\\<not> F, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<^bold>\\<not> F, \\<Delta> \\<down> Suc n + m\n 4. \\<And>F G \\<Gamma> \\<Delta> n \\<Gamma>' m.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<and> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 5. \\<And>F \\<Delta> n G \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<and> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<and> G, \\<Delta> \\<down> Suc n + m\n 6. \\<And>F \\<Gamma> \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<or> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 7. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow>\n            Atom k, F, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<or> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<or> G, \\<Delta> \\<down> Suc n + m\n 8. \\<And>\\<Gamma> F \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 9. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<rightarrow>\n                         G, \\<Delta> \\<down> Suc n + m", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n_ + m", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n_ + m\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n_ + m", "assume \"l = k\""], ["proof (state)\nthis:\n  l = k\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n_ + m\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n_ + m", "with \\<open>Atom l \\<in># \\<Delta>\\<close>"], ["proof (chain)\npicking this:\n  Atom l \\<in># \\<Delta>\n  l = k", "obtain \\<Delta>' where \"\\<Delta> = Atom k, \\<Delta>'\""], ["proof (prove)\nusing this:\n  Atom l \\<in># \\<Delta>\n  l = k\n\ngoal (1 subgoal):\n 1. (\\<And>\\<Delta>''.\n        \\<Delta> = Atom k, \\<Delta>'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (meson multi_member_split)"], ["proof (state)\nthis:\n  \\<Delta> = Atom k, \\<Delta>'\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n_ + m\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n_ + m", "with \\<open>\\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<close>"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> m\n  \\<Delta> = Atom k, \\<Delta>'", "have \"\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> m\n  \\<Delta> = Atom k, \\<Delta>'\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m", "using contract'"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> m\n  \\<Delta> = Atom k, \\<Delta>'\n  (?F, ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n \\<longrightarrow>\n   ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n) \\<and>\n  (?\\<Gamma> \\<Rightarrow> ?F, ?F, ?\\<Delta> \\<down> ?n \\<longrightarrow>\n   ?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> ?n)\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m", "by blast"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n_ + m\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n_ + m", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n_ + m", "by (metis add.commute deeper)"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n_ + m\n\ngoal (1 subgoal):\n 1. l \\<noteq> k \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n_ + m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. l \\<noteq> k \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n_ + m", "assume \"l \\<noteq> k\""], ["proof (state)\nthis:\n  l \\<noteq> k\n\ngoal (1 subgoal):\n 1. l \\<noteq> k \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n_ + m", "with \\<open>Atom l \\<in># Atom k, \\<Gamma>\\<close>"], ["proof (chain)\npicking this:\n  Atom l \\<in># Atom k, \\<Gamma>\n  l \\<noteq> k", "have \"Atom l \\<in># \\<Gamma>\""], ["proof (prove)\nusing this:\n  Atom l \\<in># Atom k, \\<Gamma>\n  l \\<noteq> k\n\ngoal (1 subgoal):\n 1. Atom l \\<in># \\<Gamma>", "by simp"], ["proof (state)\nthis:\n  Atom l \\<in># \\<Gamma>\n\ngoal (1 subgoal):\n 1. l \\<noteq> k \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n_ + m", "with \\<open>Atom l \\<in># \\<Delta>\\<close>"], ["proof (chain)\npicking this:\n  Atom l \\<in># \\<Delta>\n  Atom l \\<in># \\<Gamma>", "show ?thesis"], ["proof (prove)\nusing this:\n  Atom l \\<in># \\<Delta>\n  Atom l \\<in># \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n_ + m", "using SCc.Ax[of l]"], ["proof (prove)\nusing this:\n  Atom l \\<in># \\<Delta>\n  Atom l \\<in># \\<Gamma>\n  \\<lbrakk>Atom l \\<in># ?\\<Gamma>; Atom l \\<in># ?\\<Delta>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> Suc ?n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n_ + m", "by simp"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n_ + m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n_ + m\n\ngoal (8 subgoals):\n 1. \\<And>\\<Gamma> F \\<Delta> n \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        \\<^bold>\\<not> F, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 2. \\<And>F \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, \\<^bold>\\<not> F, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<^bold>\\<not> F, \\<Delta> \\<down> Suc n + m\n 3. \\<And>F G \\<Gamma> \\<Delta> n \\<Gamma>' m.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<and> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 4. \\<And>F \\<Delta> n G \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<and> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<and> G, \\<Delta> \\<down> Suc n + m\n 5. \\<And>F \\<Gamma> \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<or> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 6. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow>\n            Atom k, F, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<or> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<or> G, \\<Delta> \\<down> Suc n + m\n 7. \\<And>\\<Gamma> F \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 8. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<rightarrow>\n                         G, \\<Delta> \\<down> Suc n + m", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>\\<Gamma> F \\<Delta> n \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        \\<^bold>\\<not> F, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 2. \\<And>F \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, \\<^bold>\\<not> F, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<^bold>\\<not> F, \\<Delta> \\<down> Suc n + m\n 3. \\<And>F G \\<Gamma> \\<Delta> n \\<Gamma>' m.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<and> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 4. \\<And>F \\<Delta> n G \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<and> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<and> G, \\<Delta> \\<down> Suc n + m\n 5. \\<And>F \\<Gamma> \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<or> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 6. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow>\n            Atom k, F, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<or> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<or> G, \\<Delta> \\<down> Suc n + m\n 7. \\<And>\\<Gamma> F \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 8. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<rightarrow>\n                         G, \\<Delta> \\<down> Suc n + m", "case (NotL \\<Gamma> F \\<Delta>)"], ["proof (state)\nthis:\n  \\<Gamma>'__ \\<Rightarrow> F, \\<Delta> \\<down> n_\n  \\<lbrakk>\\<Gamma>'__ = Atom k, ?\\<Gamma>;\n   ?\\<Gamma> \\<Rightarrow> Atom k, F, \\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n_ + ?m\n  \\<^bold>\\<not> F, \\<Gamma>'__ = Atom k, \\<Gamma>\n  \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> m\n\ngoal (8 subgoals):\n 1. \\<And>\\<Gamma> F \\<Delta> n \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        \\<^bold>\\<not> F, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 2. \\<And>F \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, \\<^bold>\\<not> F, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<^bold>\\<not> F, \\<Delta> \\<down> Suc n + m\n 3. \\<And>F G \\<Gamma> \\<Delta> n \\<Gamma>' m.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<and> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 4. \\<And>F \\<Delta> n G \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<and> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<and> G, \\<Delta> \\<down> Suc n + m\n 5. \\<And>F \\<Gamma> \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<or> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 6. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow>\n            Atom k, F, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<or> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<or> G, \\<Delta> \\<down> Suc n + m\n 7. \\<And>\\<Gamma> F \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 8. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<rightarrow>\n                         G, \\<Delta> \\<down> Suc n + m", "obtain \\<Gamma>' where \\<Gamma>: \"\\<Gamma> = Not F, \\<Gamma>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<Gamma>'.\n        \\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (meson NotL.hyps(3) add_eq_conv_ex formula.simps(9))"], ["proof (state)\nthis:\n  \\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>'\n\ngoal (8 subgoals):\n 1. \\<And>\\<Gamma> F \\<Delta> n \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        \\<^bold>\\<not> F, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 2. \\<And>F \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, \\<^bold>\\<not> F, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<^bold>\\<not> F, \\<Delta> \\<down> Suc n + m\n 3. \\<And>F G \\<Gamma> \\<Delta> n \\<Gamma>' m.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<and> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 4. \\<And>F \\<Delta> n G \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<and> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<and> G, \\<Delta> \\<down> Suc n + m\n 5. \\<And>F \\<Gamma> \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<or> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 6. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow>\n            Atom k, F, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<or> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<or> G, \\<Delta> \\<down> Suc n + m\n 7. \\<And>\\<Gamma> F \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 8. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<rightarrow>\n                         G, \\<Delta> \\<down> Suc n + m", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n_ + m", "unfolding \\<Gamma>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>\\<not> F, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n_ + m", "apply(unfold plus_nat.add_Suc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>\\<not> F, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc (n_ + m)", "apply(intro SCc.NotL)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> n_ + m", "apply(intro NotL.hyps (* IH *))"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<Gamma>'__ = Atom k, \\<Gamma>'\n 2. \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>'__ = Atom k, \\<Gamma>'", "using NotL \\<Gamma>"], ["proof (prove)\nusing this:\n  \\<Gamma>'__ \\<Rightarrow> F, \\<Delta> \\<down> n_\n  \\<lbrakk>\\<Gamma>'__ = Atom k, ?\\<Gamma>;\n   ?\\<Gamma> \\<Rightarrow> Atom k, F, \\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n_ + ?m\n  \\<^bold>\\<not> F, \\<Gamma>'__ = Atom k, \\<Gamma>\n  \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> m\n  \\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>'\n\ngoal (1 subgoal):\n 1. \\<Gamma>'__ = Atom k, \\<Gamma>'", "by (simp add: lem2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m", "using \\<Gamma> NotL.prems NotL_inv'"], ["proof (prove)\nusing this:\n  \\<Gamma> = \\<^bold>\\<not> F, \\<Gamma>'\n  \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> m\n  \\<^bold>\\<not> ?F, ?\\<Gamma> \\<Rightarrow>\n  ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> ?n\n\ngoal (1 subgoal):\n 1. \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m", "by blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n_ + m\n\ngoal (7 subgoals):\n 1. \\<And>F \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, \\<^bold>\\<not> F, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<^bold>\\<not> F, \\<Delta> \\<down> Suc n + m\n 2. \\<And>F G \\<Gamma> \\<Delta> n \\<Gamma>' m.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<and> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 3. \\<And>F \\<Delta> n G \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<and> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<and> G, \\<Delta> \\<down> Suc n + m\n 4. \\<And>F \\<Gamma> \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<or> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 5. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow>\n            Atom k, F, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<or> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<or> G, \\<Delta> \\<down> Suc n + m\n 6. \\<And>\\<Gamma> F \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 7. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<rightarrow>\n                         G, \\<Delta> \\<down> Suc n + m", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>F \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, \\<^bold>\\<not> F, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<^bold>\\<not> F, \\<Delta> \\<down> Suc n + m\n 2. \\<And>F G \\<Gamma> \\<Delta> n \\<Gamma>' m.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<and> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 3. \\<And>F \\<Delta> n G \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<and> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<and> G, \\<Delta> \\<down> Suc n + m\n 4. \\<And>F \\<Gamma> \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<or> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 5. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow>\n            Atom k, F, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<or> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<or> G, \\<Delta> \\<down> Suc n + m\n 6. \\<And>\\<Gamma> F \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 7. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<rightarrow>\n                         G, \\<Delta> \\<down> Suc n + m", "case (NotR F \\<Delta>)"], ["proof (state)\nthis:\n  F, Atom k, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n_\n  \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, ?\\<Gamma>;\n   ?\\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n_ + ?m\n  \\<Gamma> \\<Rightarrow> Atom k, \\<^bold>\\<not> F, \\<Delta> \\<down> m\n\ngoal (7 subgoals):\n 1. \\<And>F \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, \\<^bold>\\<not> F, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<^bold>\\<not> F, \\<Delta> \\<down> Suc n + m\n 2. \\<And>F G \\<Gamma> \\<Delta> n \\<Gamma>' m.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<and> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 3. \\<And>F \\<Delta> n G \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<and> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<and> G, \\<Delta> \\<down> Suc n + m\n 4. \\<And>F \\<Gamma> \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<or> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 5. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow>\n            Atom k, F, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<or> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<or> G, \\<Delta> \\<down> Suc n + m\n 6. \\<And>\\<Gamma> F \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 7. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<rightarrow>\n                         G, \\<Delta> \\<down> Suc n + m", "then"], ["proof (chain)\npicking this:\n  F, Atom k, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n_\n  \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, ?\\<Gamma>;\n   ?\\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n_ + ?m\n  \\<Gamma> \\<Rightarrow> Atom k, \\<^bold>\\<not> F, \\<Delta> \\<down> m", "show ?case"], ["proof (prove)\nusing this:\n  F, Atom k, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n_\n  \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, ?\\<Gamma>;\n   ?\\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n_ + ?m\n  \\<Gamma> \\<Rightarrow> Atom k, \\<^bold>\\<not> F, \\<Delta> \\<down> m\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<^bold>\\<not> F, \\<Delta> \\<down> Suc n_ + m", "by(auto intro!: SCc.NotR dest!: NotR_inv')"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> \\<^bold>\\<not> F, \\<Delta> \\<down> Suc n_ + m\n\ngoal (6 subgoals):\n 1. \\<And>F G \\<Gamma> \\<Delta> n \\<Gamma>' m.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<and> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 2. \\<And>F \\<Delta> n G \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<and> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<and> G, \\<Delta> \\<down> Suc n + m\n 3. \\<And>F \\<Gamma> \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<or> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 4. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow>\n            Atom k, F, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<or> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<or> G, \\<Delta> \\<down> Suc n + m\n 5. \\<And>\\<Gamma> F \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 6. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<rightarrow>\n                         G, \\<Delta> \\<down> Suc n + m", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>F G \\<Gamma> \\<Delta> n \\<Gamma>' m.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<and> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 2. \\<And>F \\<Delta> n G \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<and> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<and> G, \\<Delta> \\<down> Suc n + m\n 3. \\<And>F \\<Gamma> \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<or> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 4. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow>\n            Atom k, F, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<or> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<or> G, \\<Delta> \\<down> Suc n + m\n 5. \\<And>\\<Gamma> F \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 6. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<rightarrow>\n                         G, \\<Delta> \\<down> Suc n + m", "case (AndL F G \\<Gamma> \\<Delta>)"], ["proof (state)\nthis:\n  F, G, \\<Gamma>'__ \\<Rightarrow> \\<Delta> \\<down> n_\n  \\<lbrakk>F, G, \\<Gamma>'__ = Atom k, ?\\<Gamma>;\n   ?\\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n_ + ?m\n  F \\<^bold>\\<and> G, \\<Gamma>'__ = Atom k, \\<Gamma>\n  \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> m\n\ngoal (6 subgoals):\n 1. \\<And>F G \\<Gamma> \\<Delta> n \\<Gamma>' m.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<and> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 2. \\<And>F \\<Delta> n G \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<and> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<and> G, \\<Delta> \\<down> Suc n + m\n 3. \\<And>F \\<Gamma> \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<or> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 4. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow>\n            Atom k, F, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<or> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<or> G, \\<Delta> \\<down> Suc n + m\n 5. \\<And>\\<Gamma> F \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 6. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<rightarrow>\n                         G, \\<Delta> \\<down> Suc n + m", "obtain \\<Gamma>' where \\<Gamma>: \"\\<Gamma> = And F G, \\<Gamma>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<Gamma>'.\n        \\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis AndL.hyps(3) add_eq_conv_diff formula.distinct(5))"], ["proof (state)\nthis:\n  \\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>'\n\ngoal (6 subgoals):\n 1. \\<And>F G \\<Gamma> \\<Delta> n \\<Gamma>' m.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<and> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 2. \\<And>F \\<Delta> n G \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<and> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<and> G, \\<Delta> \\<down> Suc n + m\n 3. \\<And>F \\<Gamma> \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<or> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 4. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow>\n            Atom k, F, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<or> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<or> G, \\<Delta> \\<down> Suc n + m\n 5. \\<And>\\<Gamma> F \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 6. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<rightarrow>\n                         G, \\<Delta> \\<down> Suc n + m", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n_ + m", "unfolding \\<Gamma>"], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<^bold>\\<and> G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n_ + m", "apply(unfold plus_nat.add_Suc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<^bold>\\<and> G, \\<Gamma>' \\<Rightarrow>\n    \\<Delta> \\<down> Suc (n_ + m)", "apply(intro SCc.AndL)"], ["proof (prove)\ngoal (1 subgoal):\n 1. F, G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n_ + m", "apply(intro AndL.hyps (* IH *))"], ["proof (prove)\ngoal (2 subgoals):\n 1. F, G, \\<Gamma>'__ = Atom k, F, G, \\<Gamma>'\n 2. F, G, \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. F, G, \\<Gamma>'__ = Atom k, F, G, \\<Gamma>'", "using AndL \\<Gamma>"], ["proof (prove)\nusing this:\n  F, G, \\<Gamma>'__ \\<Rightarrow> \\<Delta> \\<down> n_\n  \\<lbrakk>F, G, \\<Gamma>'__ = Atom k, ?\\<Gamma>;\n   ?\\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n_ + ?m\n  F \\<^bold>\\<and> G, \\<Gamma>'__ = Atom k, \\<Gamma>\n  \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> m\n  \\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>'\n\ngoal (1 subgoal):\n 1. F, G, \\<Gamma>'__ = Atom k, F, G, \\<Gamma>'", "by (simp add: lem2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. F, G, \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. F, G, \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m", "using \\<Gamma> AndL.prems AndL_inv'"], ["proof (prove)\nusing this:\n  \\<Gamma> = F \\<^bold>\\<and> G, \\<Gamma>'\n  \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> m\n  ?F \\<^bold>\\<and> ?G, ?\\<Gamma> \\<Rightarrow>\n  ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?F, ?G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n\n\ngoal (1 subgoal):\n 1. F, G, \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m", "by blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n_ + m\n\ngoal (5 subgoals):\n 1. \\<And>F \\<Delta> n G \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<and> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<and> G, \\<Delta> \\<down> Suc n + m\n 2. \\<And>F \\<Gamma> \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<or> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 3. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow>\n            Atom k, F, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<or> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<or> G, \\<Delta> \\<down> Suc n + m\n 4. \\<And>\\<Gamma> F \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 5. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<rightarrow>\n                         G, \\<Delta> \\<down> Suc n + m", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>F \\<Delta> n G \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<and> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<and> G, \\<Delta> \\<down> Suc n + m\n 2. \\<And>F \\<Gamma> \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<or> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 3. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow>\n            Atom k, F, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<or> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<or> G, \\<Delta> \\<down> Suc n + m\n 4. \\<And>\\<Gamma> F \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 5. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<rightarrow>\n                         G, \\<Delta> \\<down> Suc n + m", "case (AndR F \\<Delta> G)"], ["proof (state)\nthis:\n  Atom k, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> G\n  \\<lbrakk>Atom k, \\<Gamma> = Atom k, ?\\<Gamma>;\n   ?\\<Gamma> \\<Rightarrow> Atom k, F, \\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> G + ?m\n  Atom k, \\<Gamma> \\<Rightarrow> G_, \\<Delta> \\<down> G\n  \\<lbrakk>Atom k, \\<Gamma> = Atom k, ?\\<Gamma>;\n   ?\\<Gamma> \\<Rightarrow> Atom k, G_, \\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow> G_, \\<Delta> \\<down> G + ?m\n  \\<Gamma> \\<Rightarrow> Atom k, F \\<^bold>\\<and> G_, \\<Delta> \\<down> m\n\ngoal (5 subgoals):\n 1. \\<And>F \\<Delta> n G \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<and> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<and> G, \\<Delta> \\<down> Suc n + m\n 2. \\<And>F \\<Gamma> \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<or> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 3. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow>\n            Atom k, F, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<or> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<or> G, \\<Delta> \\<down> Suc n + m\n 4. \\<And>\\<Gamma> F \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 5. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<rightarrow>\n                         G, \\<Delta> \\<down> Suc n + m", "then"], ["proof (chain)\npicking this:\n  Atom k, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> G\n  \\<lbrakk>Atom k, \\<Gamma> = Atom k, ?\\<Gamma>;\n   ?\\<Gamma> \\<Rightarrow> Atom k, F, \\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> G + ?m\n  Atom k, \\<Gamma> \\<Rightarrow> G_, \\<Delta> \\<down> G\n  \\<lbrakk>Atom k, \\<Gamma> = Atom k, ?\\<Gamma>;\n   ?\\<Gamma> \\<Rightarrow> Atom k, G_, \\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow> G_, \\<Delta> \\<down> G + ?m\n  \\<Gamma> \\<Rightarrow> Atom k, F \\<^bold>\\<and> G_, \\<Delta> \\<down> m", "show ?case"], ["proof (prove)\nusing this:\n  Atom k, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> G\n  \\<lbrakk>Atom k, \\<Gamma> = Atom k, ?\\<Gamma>;\n   ?\\<Gamma> \\<Rightarrow> Atom k, F, \\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> G + ?m\n  Atom k, \\<Gamma> \\<Rightarrow> G_, \\<Delta> \\<down> G\n  \\<lbrakk>Atom k, \\<Gamma> = Atom k, ?\\<Gamma>;\n   ?\\<Gamma> \\<Rightarrow> Atom k, G_, \\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow> G_, \\<Delta> \\<down> G + ?m\n  \\<Gamma> \\<Rightarrow> Atom k, F \\<^bold>\\<and> G_, \\<Delta> \\<down> m\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F \\<^bold>\\<and> G_, \\<Delta> \\<down> Suc G + m", "using AndR_inv' SCc.AndR"], ["proof (prove)\nusing this:\n  Atom k, \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> G\n  \\<lbrakk>Atom k, \\<Gamma> = Atom k, ?\\<Gamma>;\n   ?\\<Gamma> \\<Rightarrow> Atom k, F, \\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> G + ?m\n  Atom k, \\<Gamma> \\<Rightarrow> G_, \\<Delta> \\<down> G\n  \\<lbrakk>Atom k, \\<Gamma> = Atom k, ?\\<Gamma>;\n   ?\\<Gamma> \\<Rightarrow> Atom k, G_, \\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow> G_, \\<Delta> \\<down> G + ?m\n  \\<Gamma> \\<Rightarrow> Atom k, F \\<^bold>\\<and> G_, \\<Delta> \\<down> m\n  ?\\<Gamma> \\<Rightarrow>\n  ?F \\<^bold>\\<and> ?G, ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> ?n \\<and>\n  ?\\<Gamma> \\<Rightarrow> ?G, ?\\<Delta> \\<down> ?n\n  \\<lbrakk>?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> ?n;\n   ?\\<Gamma> \\<Rightarrow> ?G, ?\\<Delta> \\<down> ?n\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow>\n                    ?F \\<^bold>\\<and> ?G, ?\\<Delta> \\<down> Suc ?n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F \\<^bold>\\<and> G_, \\<Delta> \\<down> Suc G + m", "by (metis add_Suc inR1')"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> F \\<^bold>\\<and> G_, \\<Delta> \\<down> Suc G + m\n\ngoal (4 subgoals):\n 1. \\<And>F \\<Gamma> \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<or> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 2. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow>\n            Atom k, F, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<or> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<or> G, \\<Delta> \\<down> Suc n + m\n 3. \\<And>\\<Gamma> F \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 4. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<rightarrow>\n                         G, \\<Delta> \\<down> Suc n + m", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>F \\<Gamma> \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<or> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 2. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow>\n            Atom k, F, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<or> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<or> G, \\<Delta> \\<down> Suc n + m\n 3. \\<And>\\<Gamma> F \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 4. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<rightarrow>\n                         G, \\<Delta> \\<down> Suc n + m", "case (OrL F \\<Gamma>' \\<Delta> n G)"], ["proof (state)\nthis:\n  F, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\n  \\<lbrakk>F, \\<Gamma>' = Atom k, ?\\<Gamma>;\n   ?\\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n + ?m\n  G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\n  \\<lbrakk>G, \\<Gamma>' = Atom k, ?\\<Gamma>;\n   ?\\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n + ?m\n  F \\<^bold>\\<or> G, \\<Gamma>' = Atom k, \\<Gamma>\n  \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> m\n\ngoal (4 subgoals):\n 1. \\<And>F \\<Gamma> \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<or> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 2. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow>\n            Atom k, F, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<or> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<or> G, \\<Delta> \\<down> Suc n + m\n 3. \\<And>\\<Gamma> F \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 4. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<rightarrow>\n                         G, \\<Delta> \\<down> Suc n + m", "obtain \\<Gamma>'' where \\<Gamma>: \"\\<Gamma> = Or F G, \\<Gamma>''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<Gamma>'''.\n        \\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>''' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (meson OrL.hyps(5) add_eq_conv_ex formula.simps(13))"], ["proof (state)\nthis:\n  \\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>''\n\ngoal (4 subgoals):\n 1. \\<And>F \\<Gamma> \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<or> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 2. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow>\n            Atom k, F, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<or> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<or> G, \\<Delta> \\<down> Suc n + m\n 3. \\<And>\\<Gamma> F \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 4. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<rightarrow>\n                         G, \\<Delta> \\<down> Suc n + m", "have ihm: \"F, \\<Gamma>' = Atom k, F, \\<Gamma>''\" \"G, \\<Gamma>' = Atom k, G, \\<Gamma>''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F, \\<Gamma>' = Atom k, F, \\<Gamma>'' &&&\n    G, \\<Gamma>' = Atom k, G, \\<Gamma>''", "using OrL \\<Gamma>"], ["proof (prove)\nusing this:\n  F, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\n  \\<lbrakk>F, \\<Gamma>' = Atom k, ?\\<Gamma>;\n   ?\\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n + ?m\n  G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\n  \\<lbrakk>G, \\<Gamma>' = Atom k, ?\\<Gamma>;\n   ?\\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n + ?m\n  F \\<^bold>\\<or> G, \\<Gamma>' = Atom k, \\<Gamma>\n  \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> m\n  \\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>''\n\ngoal (1 subgoal):\n 1. F, \\<Gamma>' = Atom k, F, \\<Gamma>'' &&&\n    G, \\<Gamma>' = Atom k, G, \\<Gamma>''", "by (simp_all add: lem2)"], ["proof (state)\nthis:\n  F, \\<Gamma>' = Atom k, F, \\<Gamma>''\n  G, \\<Gamma>' = Atom k, G, \\<Gamma>''\n\ngoal (4 subgoals):\n 1. \\<And>F \\<Gamma> \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<or> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 2. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow>\n            Atom k, F, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<or> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<or> G, \\<Delta> \\<down> Suc n + m\n 3. \\<And>\\<Gamma> F \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 4. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<rightarrow>\n                         G, \\<Delta> \\<down> Suc n + m", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n + m", "unfolding \\<Gamma>"], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<^bold>\\<or> G, \\<Gamma>'' \\<Rightarrow> \\<Delta> \\<down> Suc n + m", "apply(unfold plus_nat.add_Suc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<^bold>\\<or> G, \\<Gamma>'' \\<Rightarrow> \\<Delta> \\<down> Suc (n + m)", "apply(intro SCc.OrL OrL.hyps(2)[OF ihm(1)] OrL.hyps(4)[OF ihm(2)])"], ["proof (prove)\ngoal (2 subgoals):\n 1. F, \\<Gamma>'' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\n 2. G, \\<Gamma>'' \\<Rightarrow> Atom k, \\<Delta> \\<down> m", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. F, \\<Gamma>'' \\<Rightarrow> Atom k, \\<Delta> \\<down> m", "using \\<Gamma> OrL.prems OrL_inv'"], ["proof (prove)\nusing this:\n  \\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>''\n  \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> m\n  ?F \\<^bold>\\<or> ?G, ?\\<Gamma> \\<Rightarrow>\n  ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n \\<and>\n  ?G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n\n\ngoal (1 subgoal):\n 1. F, \\<Gamma>'' \\<Rightarrow> Atom k, \\<Delta> \\<down> m", "by blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. G, \\<Gamma>'' \\<Rightarrow> Atom k, \\<Delta> \\<down> m", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. G, \\<Gamma>'' \\<Rightarrow> Atom k, \\<Delta> \\<down> m", "using \\<Gamma> OrL.prems OrL_inv'"], ["proof (prove)\nusing this:\n  \\<Gamma> = F \\<^bold>\\<or> G, \\<Gamma>''\n  \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> m\n  ?F \\<^bold>\\<or> ?G, ?\\<Gamma> \\<Rightarrow>\n  ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n \\<and>\n  ?G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n\n\ngoal (1 subgoal):\n 1. G, \\<Gamma>'' \\<Rightarrow> Atom k, \\<Delta> \\<down> m", "by blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n\ngoal (3 subgoals):\n 1. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow>\n            Atom k, F, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<or> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<or> G, \\<Delta> \\<down> Suc n + m\n 2. \\<And>\\<Gamma> F \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 3. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<rightarrow>\n                         G, \\<Delta> \\<down> Suc n + m", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow>\n            Atom k, F, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<or> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<or> G, \\<Delta> \\<down> Suc n + m\n 2. \\<And>\\<Gamma> F \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 3. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<rightarrow>\n                         G, \\<Delta> \\<down> Suc n + m", "case (OrR F G \\<Delta>)"], ["proof (state)\nthis:\n  Atom k, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n_\n  \\<lbrakk>Atom k, \\<Gamma> = Atom k, ?\\<Gamma>;\n   ?\\<Gamma> \\<Rightarrow> Atom k, F, G, \\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n_ + ?m\n  \\<Gamma> \\<Rightarrow> Atom k, F \\<^bold>\\<or> G, \\<Delta> \\<down> m\n\ngoal (3 subgoals):\n 1. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>Atom k, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow>\n            Atom k, F, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<or> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<or> G, \\<Delta> \\<down> Suc n + m\n 2. \\<And>\\<Gamma> F \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 3. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<rightarrow>\n                         G, \\<Delta> \\<down> Suc n + m", "then"], ["proof (chain)\npicking this:\n  Atom k, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n_\n  \\<lbrakk>Atom k, \\<Gamma> = Atom k, ?\\<Gamma>;\n   ?\\<Gamma> \\<Rightarrow> Atom k, F, G, \\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n_ + ?m\n  \\<Gamma> \\<Rightarrow> Atom k, F \\<^bold>\\<or> G, \\<Delta> \\<down> m", "show ?case"], ["proof (prove)\nusing this:\n  Atom k, \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n_\n  \\<lbrakk>Atom k, \\<Gamma> = Atom k, ?\\<Gamma>;\n   ?\\<Gamma> \\<Rightarrow> Atom k, F, G, \\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> n_ + ?m\n  \\<Gamma> \\<Rightarrow> Atom k, F \\<^bold>\\<or> G, \\<Delta> \\<down> m\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F \\<^bold>\\<or> G, \\<Delta> \\<down> Suc n_ + m", "by(auto intro!: SCc.intros(3-) dest!: OrR_inv')"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> F \\<^bold>\\<or> G, \\<Delta> \\<down> Suc n_ + m\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> F \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 2. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<rightarrow>\n                         G, \\<Delta> \\<down> Suc n + m", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> F \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 2. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<rightarrow>\n                         G, \\<Delta> \\<down> Suc n + m", "case (ImpL \\<Gamma>' F \\<Delta> n G)"], ["proof (state)\nthis:\n  \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> n\n  \\<lbrakk>\\<Gamma>' = Atom k, ?\\<Gamma>;\n   ?\\<Gamma> \\<Rightarrow> Atom k, F, \\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n + ?m\n  G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\n  \\<lbrakk>G, \\<Gamma>' = Atom k, ?\\<Gamma>;\n   ?\\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n + ?m\n  F \\<^bold>\\<rightarrow> G, \\<Gamma>' = Atom k, \\<Gamma>\n  \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> m\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> F \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 2. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<rightarrow>\n                         G, \\<Delta> \\<down> Suc n + m", "obtain \\<Gamma>'' where \\<Gamma>: \"\\<Gamma> = Imp F G, \\<Gamma>''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<Gamma>'''.\n        \\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>''' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis ImpL.hyps(5) add_eq_conv_ex formula.simps)"], ["proof (state)\nthis:\n  \\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>''\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> F \\<Delta> n G \\<Gamma>' m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             F, \\<Delta> \\<down> n + m;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>G, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n + m;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma> = Atom k, \\<Gamma>';\n        \\<Gamma>' \\<Rightarrow> Atom k, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n 2. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<rightarrow>\n                         G, \\<Delta> \\<down> Suc n + m", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n + m", "unfolding \\<Gamma>"], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<^bold>\\<rightarrow> G, \\<Gamma>'' \\<Rightarrow>\n    \\<Delta> \\<down> Suc n + m", "apply(unfold plus_nat.add_Suc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<^bold>\\<rightarrow> G, \\<Gamma>'' \\<Rightarrow>\n    \\<Delta> \\<down> Suc (n + m)", "apply(intro SCc.ImpL ImpL.hyps(2) ImpL.hyps(4))"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<Gamma>' = Atom k, \\<Gamma>''\n 2. \\<Gamma>'' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\n 3. G, \\<Gamma>' = Atom k, G, \\<Gamma>''\n 4. G, \\<Gamma>'' \\<Rightarrow> Atom k, \\<Delta> \\<down> m", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>' = Atom k, \\<Gamma>''", "using ImpL \\<Gamma>"], ["proof (prove)\nusing this:\n  \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> n\n  \\<lbrakk>\\<Gamma>' = Atom k, ?\\<Gamma>;\n   ?\\<Gamma> \\<Rightarrow> Atom k, F, \\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n + ?m\n  G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\n  \\<lbrakk>G, \\<Gamma>' = Atom k, ?\\<Gamma>;\n   ?\\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n + ?m\n  F \\<^bold>\\<rightarrow> G, \\<Gamma>' = Atom k, \\<Gamma>\n  \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> m\n  \\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>''\n\ngoal (1 subgoal):\n 1. \\<Gamma>' = Atom k, \\<Gamma>''", "by (simp add: lem2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<Gamma>'' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m\n 2. G, \\<Gamma>' = Atom k, G, \\<Gamma>''\n 3. G, \\<Gamma>'' \\<Rightarrow> Atom k, \\<Delta> \\<down> m", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>'' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m", "using \\<Gamma> ImpL.prems"], ["proof (prove)\nusing this:\n  \\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>''\n  \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> m\n\ngoal (1 subgoal):\n 1. \\<Gamma>'' \\<Rightarrow> Atom k, F, \\<Delta> \\<down> m", "by(auto dest!: ImpL_inv')"], ["proof (prove)\ngoal (2 subgoals):\n 1. G, \\<Gamma>' = Atom k, G, \\<Gamma>''\n 2. G, \\<Gamma>'' \\<Rightarrow> Atom k, \\<Delta> \\<down> m", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. G, \\<Gamma>' = Atom k, G, \\<Gamma>''", "using ImpL \\<Gamma>"], ["proof (prove)\nusing this:\n  \\<Gamma>' \\<Rightarrow> F, \\<Delta> \\<down> n\n  \\<lbrakk>\\<Gamma>' = Atom k, ?\\<Gamma>;\n   ?\\<Gamma> \\<Rightarrow> Atom k, F, \\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n + ?m\n  G, \\<Gamma>' \\<Rightarrow> \\<Delta> \\<down> n\n  \\<lbrakk>G, \\<Gamma>' = Atom k, ?\\<Gamma>;\n   ?\\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n + ?m\n  F \\<^bold>\\<rightarrow> G, \\<Gamma>' = Atom k, \\<Gamma>\n  \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> m\n  \\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>''\n\ngoal (1 subgoal):\n 1. G, \\<Gamma>' = Atom k, G, \\<Gamma>''", "by (simp add: lem2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. G, \\<Gamma>'' \\<Rightarrow> Atom k, \\<Delta> \\<down> m", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. G, \\<Gamma>'' \\<Rightarrow> Atom k, \\<Delta> \\<down> m", "using \\<Gamma> ImpL.prems ImpL_inv'"], ["proof (prove)\nusing this:\n  \\<Gamma> = F \\<^bold>\\<rightarrow> G, \\<Gamma>''\n  \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> m\n  ?F \\<^bold>\\<rightarrow> ?G, ?\\<Gamma> \\<Rightarrow>\n  ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> ?n \\<and>\n  ?G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n\n\ngoal (1 subgoal):\n 1. G, \\<Gamma>'' \\<Rightarrow> Atom k, \\<Delta> \\<down> m", "by blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> Suc n + m\n\ngoal (1 subgoal):\n 1. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<rightarrow>\n                         G, \\<Delta> \\<down> Suc n + m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<rightarrow>\n                         G, \\<Delta> \\<down> Suc n + m", "case (ImpR F G \\<Delta>)"], ["proof (state)\nthis:\n  F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n_\n  \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, ?\\<Gamma>;\n   ?\\<Gamma> \\<Rightarrow> Atom k, G, \\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n_ + ?m\n  \\<Gamma> \\<Rightarrow>\n  Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\n\ngoal (1 subgoal):\n 1. \\<And>F G \\<Delta> n \\<Gamma> m.\n       \\<lbrakk>F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n;\n        \\<And>\\<Gamma>' m.\n           \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, \\<Gamma>';\n            \\<Gamma>' \\<Rightarrow> Atom k, G, \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>' \\<Rightarrow>\n                             G, \\<Delta> \\<down> n + m;\n        \\<Gamma> \\<Rightarrow>\n        Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         F \\<^bold>\\<rightarrow>\n                         G, \\<Delta> \\<down> Suc n + m", "then"], ["proof (chain)\npicking this:\n  F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n_\n  \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, ?\\<Gamma>;\n   ?\\<Gamma> \\<Rightarrow> Atom k, G, \\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n_ + ?m\n  \\<Gamma> \\<Rightarrow>\n  Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m", "show ?case"], ["proof (prove)\nusing this:\n  F, Atom k, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n_\n  \\<lbrakk>F, Atom k, \\<Gamma> = Atom k, ?\\<Gamma>;\n   ?\\<Gamma> \\<Rightarrow> Atom k, G, \\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n_ + ?m\n  \\<Gamma> \\<Rightarrow>\n  Atom k, F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> m\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow>\n    F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> Suc n_ + m", "by (auto dest!: ImpR_inv' intro!: SCc.ImpR)"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow>\n  F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> Suc n_ + m\n\ngoal:\nNo subgoals!", "qed"], ["", "primrec cut_bound :: \"nat \\<Rightarrow> nat \\<Rightarrow> 'a formula \\<Rightarrow> nat\" where\n  \"cut_bound n m (Atom _) = m + n\" |\n  \"cut_bound n m Bot = n\" |\n  \"cut_bound n m (Not F) = cut_bound m n F\" |\n  \"cut_bound n m (And F G) = cut_bound n (cut_bound n m F) G\" |\n  \"cut_bound n m (Or F G) = cut_bound (cut_bound n m F) m G\" |\n  \"cut_bound n m (Imp F G) = cut_bound (cut_bound m n F) m G\""], ["", "theorem cut_bound: \"\\<Gamma> \\<Rightarrow> F,\\<Delta> \\<down> n \\<Longrightarrow> F,\\<Gamma> \\<Rightarrow> \\<Delta>  \\<down> m \\<Longrightarrow> \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> cut_bound n m F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n     F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                      \\<Delta> \\<down> cut_bound n m F", "proof(induction F arbitrary: \\<Gamma> \\<Delta> n m)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Atom x, \\<Delta> \\<down> n;\n        Atom x, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m (Atom x)\n 2. \\<And>\\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> \\<bottom>, \\<Delta> \\<down> n;\n        \\<bottom>, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m \\<bottom>\n 3. \\<And>F \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n                    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F;\n        \\<Gamma> \\<Rightarrow> \\<^bold>\\<not> F, \\<Delta> \\<down> n;\n        \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m (\\<^bold>\\<not> F)\n 4. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow> F1 \\<^bold>\\<and> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<and> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<and> F2)\n 5. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow> F1 \\<^bold>\\<or> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<or> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<or> F2)\n 6. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow>\n        F1 \\<^bold>\\<rightarrow> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<rightarrow> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<rightarrow> F2)", "case (Atom k)"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> n\n  Atom k, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\n\ngoal (6 subgoals):\n 1. \\<And>x \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> Atom x, \\<Delta> \\<down> n;\n        Atom x, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m (Atom x)\n 2. \\<And>\\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> \\<bottom>, \\<Delta> \\<down> n;\n        \\<bottom>, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m \\<bottom>\n 3. \\<And>F \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n                    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F;\n        \\<Gamma> \\<Rightarrow> \\<^bold>\\<not> F, \\<Delta> \\<down> n;\n        \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m (\\<^bold>\\<not> F)\n 4. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow> F1 \\<^bold>\\<and> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<and> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<and> F2)\n 5. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow> F1 \\<^bold>\\<or> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<or> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<or> F2)\n 6. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow>\n        F1 \\<^bold>\\<rightarrow> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<rightarrow> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<rightarrow> F2)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> n\n  Atom k, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> cut_bound n m (Atom k)", "using Cut_Atom_depth"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> Atom k, \\<Delta> \\<down> n\n  Atom k, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\n  \\<lbrakk>Atom ?k, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n;\n   ?\\<Gamma> \\<Rightarrow> Atom ?k, ?\\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n + ?m\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> cut_bound n m (Atom k)", "by simp fast"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> cut_bound n m (Atom k)\n\ngoal (5 subgoals):\n 1. \\<And>\\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> \\<bottom>, \\<Delta> \\<down> n;\n        \\<bottom>, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m \\<bottom>\n 2. \\<And>F \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n                    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F;\n        \\<Gamma> \\<Rightarrow> \\<^bold>\\<not> F, \\<Delta> \\<down> n;\n        \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m (\\<^bold>\\<not> F)\n 3. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow> F1 \\<^bold>\\<and> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<and> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<and> F2)\n 4. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow> F1 \\<^bold>\\<or> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<or> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<or> F2)\n 5. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow>\n        F1 \\<^bold>\\<rightarrow> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<rightarrow> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<rightarrow> F2)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>\\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> \\<bottom>, \\<Delta> \\<down> n;\n        \\<bottom>, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m \\<bottom>\n 2. \\<And>F \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n                    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F;\n        \\<Gamma> \\<Rightarrow> \\<^bold>\\<not> F, \\<Delta> \\<down> n;\n        \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m (\\<^bold>\\<not> F)\n 3. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow> F1 \\<^bold>\\<and> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<and> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<and> F2)\n 4. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow> F1 \\<^bold>\\<or> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<or> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<or> F2)\n 5. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow>\n        F1 \\<^bold>\\<rightarrow> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<rightarrow> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<rightarrow> F2)", "case Bot"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> \\<bottom>, \\<Delta> \\<down> n\n  \\<bottom>, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\n\ngoal (5 subgoals):\n 1. \\<And>\\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> \\<bottom>, \\<Delta> \\<down> n;\n        \\<bottom>, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m \\<bottom>\n 2. \\<And>F \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n                    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F;\n        \\<Gamma> \\<Rightarrow> \\<^bold>\\<not> F, \\<Delta> \\<down> n;\n        \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m (\\<^bold>\\<not> F)\n 3. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow> F1 \\<^bold>\\<and> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<and> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<and> F2)\n 4. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow> F1 \\<^bold>\\<or> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<or> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<or> F2)\n 5. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow>\n        F1 \\<^bold>\\<rightarrow> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<rightarrow> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<rightarrow> F2)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> \\<bottom>, \\<Delta> \\<down> n\n  \\<bottom>, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> cut_bound n m \\<bottom>", "using Bot_delR'"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> \\<bottom>, \\<Delta> \\<down> n\n  \\<bottom>, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\n  ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?\\<Delta> - (\\<bottom>, {#}) \\<down> ?n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> cut_bound n m \\<bottom>", "by fastforce"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> cut_bound n m \\<bottom>\n\ngoal (4 subgoals):\n 1. \\<And>F \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n                    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F;\n        \\<Gamma> \\<Rightarrow> \\<^bold>\\<not> F, \\<Delta> \\<down> n;\n        \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m (\\<^bold>\\<not> F)\n 2. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow> F1 \\<^bold>\\<and> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<and> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<and> F2)\n 3. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow> F1 \\<^bold>\\<or> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<or> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<or> F2)\n 4. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow>\n        F1 \\<^bold>\\<rightarrow> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<rightarrow> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<rightarrow> F2)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>F \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n                    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F;\n        \\<Gamma> \\<Rightarrow> \\<^bold>\\<not> F, \\<Delta> \\<down> n;\n        \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m (\\<^bold>\\<not> F)\n 2. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow> F1 \\<^bold>\\<and> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<and> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<and> F2)\n 3. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow> F1 \\<^bold>\\<or> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<or> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<or> F2)\n 4. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow>\n        F1 \\<^bold>\\<rightarrow> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<rightarrow> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<rightarrow> F2)", "case Not"], ["proof (state)\nthis:\n  \\<lbrakk>?\\<Gamma> \\<Rightarrow> F_, ?\\<Delta> \\<down> ?n;\n   F_, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow>\n                    ?\\<Delta> \\<down> cut_bound ?n ?m F_\n  \\<Gamma> \\<Rightarrow> \\<^bold>\\<not> F_, \\<Delta> \\<down> n\n  \\<^bold>\\<not> F_, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\n\ngoal (4 subgoals):\n 1. \\<And>F \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> n;\n                    F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F;\n        \\<Gamma> \\<Rightarrow> \\<^bold>\\<not> F, \\<Delta> \\<down> n;\n        \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m (\\<^bold>\\<not> F)\n 2. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow> F1 \\<^bold>\\<and> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<and> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<and> F2)\n 3. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow> F1 \\<^bold>\\<or> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<or> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<or> F2)\n 4. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow>\n        F1 \\<^bold>\\<rightarrow> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<rightarrow> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<rightarrow> F2)", "from Not.prems"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<Rightarrow> \\<^bold>\\<not> F_, \\<Delta> \\<down> n\n  \\<^bold>\\<not> F_, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> \\<^bold>\\<not> F_, \\<Delta> \\<down> n\n  \\<^bold>\\<not> F_, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow>\n    \\<Delta> \\<down> cut_bound n m (\\<^bold>\\<not> F_)", "by(auto dest!: NotL_inv' NotR_inv' intro!: Not.IH elim!: weakenL)"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> cut_bound n m (\\<^bold>\\<not> F_)\n\ngoal (3 subgoals):\n 1. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow> F1 \\<^bold>\\<and> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<and> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<and> F2)\n 2. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow> F1 \\<^bold>\\<or> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<or> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<or> F2)\n 3. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow>\n        F1 \\<^bold>\\<rightarrow> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<rightarrow> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<rightarrow> F2)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow> F1 \\<^bold>\\<and> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<and> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<and> F2)\n 2. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow> F1 \\<^bold>\\<or> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<or> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<or> F2)\n 3. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow>\n        F1 \\<^bold>\\<rightarrow> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<rightarrow> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<rightarrow> F2)", "case (And F G)"], ["proof (state)\nthis:\n  \\<lbrakk>?\\<Gamma> \\<Rightarrow> F, ?\\<Delta> \\<down> ?n;\n   F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow>\n                    ?\\<Delta> \\<down> cut_bound ?n ?m F\n  \\<lbrakk>?\\<Gamma> \\<Rightarrow> G, ?\\<Delta> \\<down> ?n;\n   G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow>\n                    ?\\<Delta> \\<down> cut_bound ?n ?m G\n  \\<Gamma> \\<Rightarrow> F \\<^bold>\\<and> G, \\<Delta> \\<down> n\n  F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\n\ngoal (3 subgoals):\n 1. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow> F1 \\<^bold>\\<and> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<and> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<and> F2)\n 2. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow> F1 \\<^bold>\\<or> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<or> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<or> F2)\n 3. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow>\n        F1 \\<^bold>\\<rightarrow> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<rightarrow> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<rightarrow> F2)", "from And.prems"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<Rightarrow> F \\<^bold>\\<and> G, \\<Delta> \\<down> n\n  F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> F \\<^bold>\\<and> G, \\<Delta> \\<down> n\n  F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow>\n    \\<Delta> \\<down> cut_bound n m (F \\<^bold>\\<and> G)", "by(auto dest!: AndL_inv' AndR_inv' intro!: And.IH elim!: weakenR' weakenL')"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> cut_bound n m (F \\<^bold>\\<and> G)\n\ngoal (2 subgoals):\n 1. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow> F1 \\<^bold>\\<or> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<or> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<or> F2)\n 2. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow>\n        F1 \\<^bold>\\<rightarrow> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<rightarrow> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<rightarrow> F2)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow> F1 \\<^bold>\\<or> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<or> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<or> F2)\n 2. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow>\n        F1 \\<^bold>\\<rightarrow> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<rightarrow> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<rightarrow> F2)", "case (Or F G)"], ["proof (state)\nthis:\n  \\<lbrakk>?\\<Gamma> \\<Rightarrow> F, ?\\<Delta> \\<down> ?n;\n   F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow>\n                    ?\\<Delta> \\<down> cut_bound ?n ?m F\n  \\<lbrakk>?\\<Gamma> \\<Rightarrow> G, ?\\<Delta> \\<down> ?n;\n   G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow>\n                    ?\\<Delta> \\<down> cut_bound ?n ?m G\n  \\<Gamma> \\<Rightarrow> F \\<^bold>\\<or> G, \\<Delta> \\<down> n\n  F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\n\ngoal (2 subgoals):\n 1. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow> F1 \\<^bold>\\<or> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<or> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<or> F2)\n 2. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow>\n        F1 \\<^bold>\\<rightarrow> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<rightarrow> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<rightarrow> F2)", "from Or.prems"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<Rightarrow> F \\<^bold>\\<or> G, \\<Delta> \\<down> n\n  F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> F \\<^bold>\\<or> G, \\<Delta> \\<down> n\n  F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow>\n    \\<Delta> \\<down> cut_bound n m (F \\<^bold>\\<or> G)", "by(auto dest: OrL_inv' OrR_inv' intro!: Or.IH elim!:  weakenR' weakenL')"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> cut_bound n m (F \\<^bold>\\<or> G)\n\ngoal (1 subgoal):\n 1. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow>\n        F1 \\<^bold>\\<rightarrow> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<rightarrow> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<rightarrow> F2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow>\n        F1 \\<^bold>\\<rightarrow> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<rightarrow> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<rightarrow> F2)", "case (Imp F G)"], ["proof (state)\nthis:\n  \\<lbrakk>?\\<Gamma> \\<Rightarrow> F, ?\\<Delta> \\<down> ?n;\n   F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow>\n                    ?\\<Delta> \\<down> cut_bound ?n ?m F\n  \\<lbrakk>?\\<Gamma> \\<Rightarrow> G, ?\\<Delta> \\<down> ?n;\n   G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?m\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow>\n                    ?\\<Delta> \\<down> cut_bound ?n ?m G\n  \\<Gamma> \\<Rightarrow> F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> n\n  F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\n\ngoal (1 subgoal):\n 1. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow>\n        F1 \\<^bold>\\<rightarrow> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<rightarrow> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<rightarrow> F2)", "from ImpR_inv' \\<open>\\<Gamma> \\<Rightarrow> F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> n\\<close>"], ["proof (chain)\npicking this:\n  ?\\<Gamma> \\<Rightarrow>\n  ?F \\<^bold>\\<rightarrow> ?G, ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?F, ?\\<Gamma> \\<Rightarrow> ?G, ?\\<Delta> \\<down> ?n\n  \\<Gamma> \\<Rightarrow> F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> n", "have R: \"F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\""], ["proof (prove)\nusing this:\n  ?\\<Gamma> \\<Rightarrow>\n  ?F \\<^bold>\\<rightarrow> ?G, ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?F, ?\\<Gamma> \\<Rightarrow> ?G, ?\\<Delta> \\<down> ?n\n  \\<Gamma> \\<Rightarrow> F \\<^bold>\\<rightarrow> G, \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n", "by blast"], ["proof (state)\nthis:\n  F, \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> n\n\ngoal (1 subgoal):\n 1. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow>\n        F1 \\<^bold>\\<rightarrow> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<rightarrow> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<rightarrow> F2)", "from ImpL_inv' \\<open>F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<close>"], ["proof (chain)\npicking this:\n  ?F \\<^bold>\\<rightarrow> ?G, ?\\<Gamma> \\<Rightarrow>\n  ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> ?n \\<and>\n  ?G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n\n  F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m", "have L: \"\\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> m\" \"G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\""], ["proof (prove)\nusing this:\n  ?F \\<^bold>\\<rightarrow> ?G, ?\\<Gamma> \\<Rightarrow>\n  ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> ?n \\<and>\n  ?G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n\n  F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> m &&&\n    G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m", "by blast+"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> m\n  G, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\n\ngoal (1 subgoal):\n 1. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow>\n        F1 \\<^bold>\\<rightarrow> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<rightarrow> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<rightarrow> F2)", "from L(1)"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> m", "have \"\\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> m\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> m\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> m", "using weakenR'"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> F, \\<Delta> \\<down> m\n  ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta> \\<down> ?n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> m", "by blast"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> F, G, \\<Delta> \\<down> m\n\ngoal (1 subgoal):\n 1. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow>\n        F1 \\<^bold>\\<rightarrow> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<rightarrow> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<rightarrow> F2)", "from Imp.IH(1)[OF this R]"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> cut_bound m n F", "have \"\\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> cut_bound m n F\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> cut_bound m n F\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> cut_bound m n F", "."], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> G, \\<Delta> \\<down> cut_bound m n F\n\ngoal (1 subgoal):\n 1. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow>\n        F1 \\<^bold>\\<rightarrow> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<rightarrow> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<rightarrow> F2)", "from Imp.IH(2)[OF this L(2)]"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> cut_bound (cut_bound m n F) m G", "have \"\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> cut_bound (cut_bound m n F) m G\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> cut_bound (cut_bound m n F) m G\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> cut_bound (cut_bound m n F) m G", "."], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> cut_bound (cut_bound m n F) m G\n\ngoal (1 subgoal):\n 1. \\<And>F1 F2 \\<Gamma> \\<Delta> n m.\n       \\<lbrakk>\\<And>\\<Gamma> \\<Delta> n m.\n                   \\<lbrakk>\\<Gamma> \\<Rightarrow> F1, \\<Delta> \\<down> n;\n                    F1, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                                     \\<Delta> \\<down> cut_bound n m F1;\n        \\<And>\\<Gamma> \\<Delta> n m.\n           \\<lbrakk>\\<Gamma> \\<Rightarrow> F2, \\<Delta> \\<down> n;\n            F2, \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> m\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                             \\<Delta> \\<down> cut_bound n m F2;\n        \\<Gamma> \\<Rightarrow>\n        F1 \\<^bold>\\<rightarrow> F2, \\<Delta> \\<down> n;\n        F1 \\<^bold>\\<rightarrow> F2, \\<Gamma> \\<Rightarrow>\n        \\<Delta> \\<down> m\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\n                         \\<Delta> \\<down> cut_bound n m\n     (F1 \\<^bold>\\<rightarrow> F2)", "thus \"\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> cut_bound n m (F \\<^bold>\\<rightarrow> G)\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> cut_bound (cut_bound m n F) m G\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow>\n    \\<Delta> \\<down> cut_bound n m (F \\<^bold>\\<rightarrow> G)", "by simp"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow>\n  \\<Delta> \\<down> cut_bound n m (F \\<^bold>\\<rightarrow> G)\n\ngoal:\nNo subgoals!", "qed"], ["", "context begin"], ["", "private"], ["", "primrec cut_bound' :: \"nat \\<Rightarrow> 'a formula \\<Rightarrow> nat\" where\n  \"cut_bound' n (Atom _) = 2*n\" |\n  \"cut_bound' n Bot = n\" |\n  \"cut_bound' n (Not F) = cut_bound' n F\" |\n  \"cut_bound' n (And F G) = cut_bound' (cut_bound' n F) G\" |\n  \"cut_bound' n (Or F G) = cut_bound' (cut_bound' n F) G\" |\n  \"cut_bound' n (Imp F G) = cut_bound' (cut_bound' n F) G\""], ["", "private"], ["", "lemma cut_bound'_mono: \"a \\<le> b \\<Longrightarrow> cut_bound' a F \\<le> cut_bound' b F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow> cut_bound' a F \\<le> cut_bound' b F", "by(induction F arbitrary: a b; simp)"], ["", "private"], ["", "lemma cut_bound_mono: \"a \\<le> c \\<Longrightarrow> b \\<le> d \\<Longrightarrow> cut_bound a b F \\<le> cut_bound c d F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> c; b \\<le> d\\<rbrakk>\n    \\<Longrightarrow> cut_bound a b F \\<le> cut_bound c d F", "by(induction F arbitrary: a b c d; simp)"], ["", "private"], ["", "lemma cut_bound_max: \"max n (cut_bound' (max n m) F) = cut_bound' (max n m) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max n (cut_bound' (max n m) F) = cut_bound' (max n m) F", "by(induction F arbitrary: n m; simp; metis)"], ["", "private"], ["", "lemma cut_bound_max': \"max n (cut_bound' n F) = cut_bound' n F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max n (cut_bound' n F) = cut_bound' n F", "by(induction F arbitrary: n ; simp; metis max.assoc)"], ["", "private"], ["", "lemma cut_bound_': \"cut_bound n m F \\<le> cut_bound' (max n m) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cut_bound n m F \\<le> cut_bound' (max n m) F", "proof(induction F arbitrary: n m)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x n m. cut_bound n m (Atom x) \\<le> cut_bound' (max n m) (Atom x)\n 2. \\<And>n m. cut_bound n m \\<bottom> \\<le> cut_bound' (max n m) \\<bottom>\n 3. \\<And>F n m.\n       (\\<And>n m.\n           cut_bound n m F \\<le> cut_bound' (max n m) F) \\<Longrightarrow>\n       cut_bound n m (\\<^bold>\\<not> F)\n       \\<le> cut_bound' (max n m) (\\<^bold>\\<not> F)\n 4. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<and> F2)\n                         \\<le> cut_bound' (max n m) (F1 \\<^bold>\\<and> F2)\n 5. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<or> F2)\n                         \\<le> cut_bound' (max n m) (F1 \\<^bold>\\<or> F2)\n 6. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cut_bound' (max n m)\n                                (F1 \\<^bold>\\<rightarrow> F2)", "case (Not F)"], ["proof (state)\nthis:\n  cut_bound ?n ?m F \\<le> cut_bound' (max ?n ?m) F\n\ngoal (6 subgoals):\n 1. \\<And>x n m. cut_bound n m (Atom x) \\<le> cut_bound' (max n m) (Atom x)\n 2. \\<And>n m. cut_bound n m \\<bottom> \\<le> cut_bound' (max n m) \\<bottom>\n 3. \\<And>F n m.\n       (\\<And>n m.\n           cut_bound n m F \\<le> cut_bound' (max n m) F) \\<Longrightarrow>\n       cut_bound n m (\\<^bold>\\<not> F)\n       \\<le> cut_bound' (max n m) (\\<^bold>\\<not> F)\n 4. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<and> F2)\n                         \\<le> cut_bound' (max n m) (F1 \\<^bold>\\<and> F2)\n 5. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<or> F2)\n                         \\<le> cut_bound' (max n m) (F1 \\<^bold>\\<or> F2)\n 6. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cut_bound' (max n m)\n                                (F1 \\<^bold>\\<rightarrow> F2)", "then"], ["proof (chain)\npicking this:\n  cut_bound ?n ?m F \\<le> cut_bound' (max ?n ?m) F", "show ?case"], ["proof (prove)\nusing this:\n  cut_bound ?n ?m F \\<le> cut_bound' (max ?n ?m) F\n\ngoal (1 subgoal):\n 1. cut_bound n m (\\<^bold>\\<not> F)\n    \\<le> cut_bound' (max n m) (\\<^bold>\\<not> F)", "by simp (metis max.commute)"], ["proof (state)\nthis:\n  cut_bound n m (\\<^bold>\\<not> F)\n  \\<le> cut_bound' (max n m) (\\<^bold>\\<not> F)\n\ngoal (5 subgoals):\n 1. \\<And>x n m. cut_bound n m (Atom x) \\<le> cut_bound' (max n m) (Atom x)\n 2. \\<And>n m. cut_bound n m \\<bottom> \\<le> cut_bound' (max n m) \\<bottom>\n 3. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<and> F2)\n                         \\<le> cut_bound' (max n m) (F1 \\<^bold>\\<and> F2)\n 4. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<or> F2)\n                         \\<le> cut_bound' (max n m) (F1 \\<^bold>\\<or> F2)\n 5. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cut_bound' (max n m)\n                                (F1 \\<^bold>\\<rightarrow> F2)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x n m. cut_bound n m (Atom x) \\<le> cut_bound' (max n m) (Atom x)\n 2. \\<And>n m. cut_bound n m \\<bottom> \\<le> cut_bound' (max n m) \\<bottom>\n 3. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<and> F2)\n                         \\<le> cut_bound' (max n m) (F1 \\<^bold>\\<and> F2)\n 4. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<or> F2)\n                         \\<le> cut_bound' (max n m) (F1 \\<^bold>\\<or> F2)\n 5. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cut_bound' (max n m)\n                                (F1 \\<^bold>\\<rightarrow> F2)", "case (And F1 F2)"], ["proof (state)\nthis:\n  cut_bound ?n ?m F1 \\<le> cut_bound' (max ?n ?m) F1\n  cut_bound ?n ?m F2 \\<le> cut_bound' (max ?n ?m) F2\n\ngoal (5 subgoals):\n 1. \\<And>x n m. cut_bound n m (Atom x) \\<le> cut_bound' (max n m) (Atom x)\n 2. \\<And>n m. cut_bound n m \\<bottom> \\<le> cut_bound' (max n m) \\<bottom>\n 3. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<and> F2)\n                         \\<le> cut_bound' (max n m) (F1 \\<^bold>\\<and> F2)\n 4. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<or> F2)\n                         \\<le> cut_bound' (max n m) (F1 \\<^bold>\\<or> F2)\n 5. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cut_bound' (max n m)\n                                (F1 \\<^bold>\\<rightarrow> F2)", "from And.IH(1)"], ["proof (chain)\npicking this:\n  cut_bound ?n ?m F1 \\<le> cut_bound' (max ?n ?m) F1", "have 1: \"cut_bound n (cut_bound n m F1) F2 \\<le> cut_bound n (cut_bound' (max n m) F1) F2\""], ["proof (prove)\nusing this:\n  cut_bound ?n ?m F1 \\<le> cut_bound' (max ?n ?m) F1\n\ngoal (1 subgoal):\n 1. cut_bound n (cut_bound n m F1) F2\n    \\<le> cut_bound n (cut_bound' (max n m) F1) F2", "by(rule cut_bound_mono[OF order.refl])"], ["proof (state)\nthis:\n  cut_bound n (cut_bound n m F1) F2\n  \\<le> cut_bound n (cut_bound' (max n m) F1) F2\n\ngoal (5 subgoals):\n 1. \\<And>x n m. cut_bound n m (Atom x) \\<le> cut_bound' (max n m) (Atom x)\n 2. \\<And>n m. cut_bound n m \\<bottom> \\<le> cut_bound' (max n m) \\<bottom>\n 3. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<and> F2)\n                         \\<le> cut_bound' (max n m) (F1 \\<^bold>\\<and> F2)\n 4. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<or> F2)\n                         \\<le> cut_bound' (max n m) (F1 \\<^bold>\\<or> F2)\n 5. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cut_bound' (max n m)\n                                (F1 \\<^bold>\\<rightarrow> F2)", "also"], ["proof (state)\nthis:\n  cut_bound n (cut_bound n m F1) F2\n  \\<le> cut_bound n (cut_bound' (max n m) F1) F2\n\ngoal (5 subgoals):\n 1. \\<And>x n m. cut_bound n m (Atom x) \\<le> cut_bound' (max n m) (Atom x)\n 2. \\<And>n m. cut_bound n m \\<bottom> \\<le> cut_bound' (max n m) \\<bottom>\n 3. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<and> F2)\n                         \\<le> cut_bound' (max n m) (F1 \\<^bold>\\<and> F2)\n 4. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<or> F2)\n                         \\<le> cut_bound' (max n m) (F1 \\<^bold>\\<or> F2)\n 5. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cut_bound' (max n m)\n                                (F1 \\<^bold>\\<rightarrow> F2)", "from And.IH(2)"], ["proof (chain)\npicking this:\n  cut_bound ?n ?m F2 \\<le> cut_bound' (max ?n ?m) F2", "have \"\\<dots> \\<le> cut_bound' (max n (cut_bound' (max n m) F1)) F2\""], ["proof (prove)\nusing this:\n  cut_bound ?n ?m F2 \\<le> cut_bound' (max ?n ?m) F2\n\ngoal (1 subgoal):\n 1. cut_bound n (cut_bound' (max n m) F1) F2\n    \\<le> cut_bound' (max n (cut_bound' (max n m) F1)) F2", "by simp"], ["proof (state)\nthis:\n  cut_bound n (cut_bound' (max n m) F1) F2\n  \\<le> cut_bound' (max n (cut_bound' (max n m) F1)) F2\n\ngoal (5 subgoals):\n 1. \\<And>x n m. cut_bound n m (Atom x) \\<le> cut_bound' (max n m) (Atom x)\n 2. \\<And>n m. cut_bound n m \\<bottom> \\<le> cut_bound' (max n m) \\<bottom>\n 3. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<and> F2)\n                         \\<le> cut_bound' (max n m) (F1 \\<^bold>\\<and> F2)\n 4. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<or> F2)\n                         \\<le> cut_bound' (max n m) (F1 \\<^bold>\\<or> F2)\n 5. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cut_bound' (max n m)\n                                (F1 \\<^bold>\\<rightarrow> F2)", "also"], ["proof (state)\nthis:\n  cut_bound n (cut_bound' (max n m) F1) F2\n  \\<le> cut_bound' (max n (cut_bound' (max n m) F1)) F2\n\ngoal (5 subgoals):\n 1. \\<And>x n m. cut_bound n m (Atom x) \\<le> cut_bound' (max n m) (Atom x)\n 2. \\<And>n m. cut_bound n m \\<bottom> \\<le> cut_bound' (max n m) \\<bottom>\n 3. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<and> F2)\n                         \\<le> cut_bound' (max n m) (F1 \\<^bold>\\<and> F2)\n 4. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<or> F2)\n                         \\<le> cut_bound' (max n m) (F1 \\<^bold>\\<or> F2)\n 5. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cut_bound' (max n m)\n                                (F1 \\<^bold>\\<rightarrow> F2)", "have \"\\<dots> = cut_bound' (cut_bound' (max n m) F1) F2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cut_bound' (max n (cut_bound' (max n m) F1)) F2 =\n    cut_bound' (cut_bound' (max n m) F1) F2", "by (simp add: cut_bound_max)"], ["proof (state)\nthis:\n  cut_bound' (max n (cut_bound' (max n m) F1)) F2 =\n  cut_bound' (cut_bound' (max n m) F1) F2\n\ngoal (5 subgoals):\n 1. \\<And>x n m. cut_bound n m (Atom x) \\<le> cut_bound' (max n m) (Atom x)\n 2. \\<And>n m. cut_bound n m \\<bottom> \\<le> cut_bound' (max n m) \\<bottom>\n 3. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<and> F2)\n                         \\<le> cut_bound' (max n m) (F1 \\<^bold>\\<and> F2)\n 4. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<or> F2)\n                         \\<le> cut_bound' (max n m) (F1 \\<^bold>\\<or> F2)\n 5. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cut_bound' (max n m)\n                                (F1 \\<^bold>\\<rightarrow> F2)", "finally"], ["proof (chain)\npicking this:\n  cut_bound n (cut_bound n m F1) F2\n  \\<le> cut_bound' (cut_bound' (max n m) F1) F2", "show ?case"], ["proof (prove)\nusing this:\n  cut_bound n (cut_bound n m F1) F2\n  \\<le> cut_bound' (cut_bound' (max n m) F1) F2\n\ngoal (1 subgoal):\n 1. cut_bound n m (F1 \\<^bold>\\<and> F2)\n    \\<le> cut_bound' (max n m) (F1 \\<^bold>\\<and> F2)", "by simp"], ["proof (state)\nthis:\n  cut_bound n m (F1 \\<^bold>\\<and> F2)\n  \\<le> cut_bound' (max n m) (F1 \\<^bold>\\<and> F2)\n\ngoal (4 subgoals):\n 1. \\<And>x n m. cut_bound n m (Atom x) \\<le> cut_bound' (max n m) (Atom x)\n 2. \\<And>n m. cut_bound n m \\<bottom> \\<le> cut_bound' (max n m) \\<bottom>\n 3. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<or> F2)\n                         \\<le> cut_bound' (max n m) (F1 \\<^bold>\\<or> F2)\n 4. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cut_bound' (max n m)\n                                (F1 \\<^bold>\\<rightarrow> F2)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x n m. cut_bound n m (Atom x) \\<le> cut_bound' (max n m) (Atom x)\n 2. \\<And>n m. cut_bound n m \\<bottom> \\<le> cut_bound' (max n m) \\<bottom>\n 3. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<or> F2)\n                         \\<le> cut_bound' (max n m) (F1 \\<^bold>\\<or> F2)\n 4. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cut_bound' (max n m)\n                                (F1 \\<^bold>\\<rightarrow> F2)", "case (Or F1 F2)"], ["proof (state)\nthis:\n  cut_bound ?n ?m F1 \\<le> cut_bound' (max ?n ?m) F1\n  cut_bound ?n ?m F2 \\<le> cut_bound' (max ?n ?m) F2\n\ngoal (4 subgoals):\n 1. \\<And>x n m. cut_bound n m (Atom x) \\<le> cut_bound' (max n m) (Atom x)\n 2. \\<And>n m. cut_bound n m \\<bottom> \\<le> cut_bound' (max n m) \\<bottom>\n 3. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<or> F2)\n                         \\<le> cut_bound' (max n m) (F1 \\<^bold>\\<or> F2)\n 4. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cut_bound' (max n m)\n                                (F1 \\<^bold>\\<rightarrow> F2)", "from Or.IH(1)"], ["proof (chain)\npicking this:\n  cut_bound ?n ?m F1 \\<le> cut_bound' (max ?n ?m) F1", "have 1: \"cut_bound (cut_bound n m F1) m F2 \\<le> cut_bound (cut_bound' (max n m) F1) m F2\""], ["proof (prove)\nusing this:\n  cut_bound ?n ?m F1 \\<le> cut_bound' (max ?n ?m) F1\n\ngoal (1 subgoal):\n 1. cut_bound (cut_bound n m F1) m F2\n    \\<le> cut_bound (cut_bound' (max n m) F1) m F2", "by(rule cut_bound_mono[OF _ order.refl])"], ["proof (state)\nthis:\n  cut_bound (cut_bound n m F1) m F2\n  \\<le> cut_bound (cut_bound' (max n m) F1) m F2\n\ngoal (4 subgoals):\n 1. \\<And>x n m. cut_bound n m (Atom x) \\<le> cut_bound' (max n m) (Atom x)\n 2. \\<And>n m. cut_bound n m \\<bottom> \\<le> cut_bound' (max n m) \\<bottom>\n 3. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<or> F2)\n                         \\<le> cut_bound' (max n m) (F1 \\<^bold>\\<or> F2)\n 4. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cut_bound' (max n m)\n                                (F1 \\<^bold>\\<rightarrow> F2)", "also"], ["proof (state)\nthis:\n  cut_bound (cut_bound n m F1) m F2\n  \\<le> cut_bound (cut_bound' (max n m) F1) m F2\n\ngoal (4 subgoals):\n 1. \\<And>x n m. cut_bound n m (Atom x) \\<le> cut_bound' (max n m) (Atom x)\n 2. \\<And>n m. cut_bound n m \\<bottom> \\<le> cut_bound' (max n m) \\<bottom>\n 3. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<or> F2)\n                         \\<le> cut_bound' (max n m) (F1 \\<^bold>\\<or> F2)\n 4. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cut_bound' (max n m)\n                                (F1 \\<^bold>\\<rightarrow> F2)", "from Or.IH(2)[of \"cut_bound' (max n m) F1\"]"], ["proof (chain)\npicking this:\n  cut_bound (cut_bound' (max n m) F1) ?m F2\n  \\<le> cut_bound' (max (cut_bound' (max n m) F1) ?m) F2", "have \"\\<dots> \\<le> cut_bound' (max (cut_bound' (max n m) F1) m) F2\""], ["proof (prove)\nusing this:\n  cut_bound (cut_bound' (max n m) F1) ?m F2\n  \\<le> cut_bound' (max (cut_bound' (max n m) F1) ?m) F2\n\ngoal (1 subgoal):\n 1. cut_bound (cut_bound' (max n m) F1) m F2\n    \\<le> cut_bound' (max (cut_bound' (max n m) F1) m) F2", "by simp"], ["proof (state)\nthis:\n  cut_bound (cut_bound' (max n m) F1) m F2\n  \\<le> cut_bound' (max (cut_bound' (max n m) F1) m) F2\n\ngoal (4 subgoals):\n 1. \\<And>x n m. cut_bound n m (Atom x) \\<le> cut_bound' (max n m) (Atom x)\n 2. \\<And>n m. cut_bound n m \\<bottom> \\<le> cut_bound' (max n m) \\<bottom>\n 3. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<or> F2)\n                         \\<le> cut_bound' (max n m) (F1 \\<^bold>\\<or> F2)\n 4. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cut_bound' (max n m)\n                                (F1 \\<^bold>\\<rightarrow> F2)", "also"], ["proof (state)\nthis:\n  cut_bound (cut_bound' (max n m) F1) m F2\n  \\<le> cut_bound' (max (cut_bound' (max n m) F1) m) F2\n\ngoal (4 subgoals):\n 1. \\<And>x n m. cut_bound n m (Atom x) \\<le> cut_bound' (max n m) (Atom x)\n 2. \\<And>n m. cut_bound n m \\<bottom> \\<le> cut_bound' (max n m) \\<bottom>\n 3. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<or> F2)\n                         \\<le> cut_bound' (max n m) (F1 \\<^bold>\\<or> F2)\n 4. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cut_bound' (max n m)\n                                (F1 \\<^bold>\\<rightarrow> F2)", "have \"\\<dots> = cut_bound' (cut_bound' (max n m) F1) F2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cut_bound' (max (cut_bound' (max n m) F1) m) F2 =\n    cut_bound' (cut_bound' (max n m) F1) F2", "by (simp add: cut_bound_max max.commute)"], ["proof (state)\nthis:\n  cut_bound' (max (cut_bound' (max n m) F1) m) F2 =\n  cut_bound' (cut_bound' (max n m) F1) F2\n\ngoal (4 subgoals):\n 1. \\<And>x n m. cut_bound n m (Atom x) \\<le> cut_bound' (max n m) (Atom x)\n 2. \\<And>n m. cut_bound n m \\<bottom> \\<le> cut_bound' (max n m) \\<bottom>\n 3. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<or> F2)\n                         \\<le> cut_bound' (max n m) (F1 \\<^bold>\\<or> F2)\n 4. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cut_bound' (max n m)\n                                (F1 \\<^bold>\\<rightarrow> F2)", "finally"], ["proof (chain)\npicking this:\n  cut_bound (cut_bound n m F1) m F2\n  \\<le> cut_bound' (cut_bound' (max n m) F1) F2", "show ?case"], ["proof (prove)\nusing this:\n  cut_bound (cut_bound n m F1) m F2\n  \\<le> cut_bound' (cut_bound' (max n m) F1) F2\n\ngoal (1 subgoal):\n 1. cut_bound n m (F1 \\<^bold>\\<or> F2)\n    \\<le> cut_bound' (max n m) (F1 \\<^bold>\\<or> F2)", "by simp"], ["proof (state)\nthis:\n  cut_bound n m (F1 \\<^bold>\\<or> F2)\n  \\<le> cut_bound' (max n m) (F1 \\<^bold>\\<or> F2)\n\ngoal (3 subgoals):\n 1. \\<And>x n m. cut_bound n m (Atom x) \\<le> cut_bound' (max n m) (Atom x)\n 2. \\<And>n m. cut_bound n m \\<bottom> \\<le> cut_bound' (max n m) \\<bottom>\n 3. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cut_bound' (max n m)\n                                (F1 \\<^bold>\\<rightarrow> F2)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x n m. cut_bound n m (Atom x) \\<le> cut_bound' (max n m) (Atom x)\n 2. \\<And>n m. cut_bound n m \\<bottom> \\<le> cut_bound' (max n m) \\<bottom>\n 3. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cut_bound' (max n m)\n                                (F1 \\<^bold>\\<rightarrow> F2)", "case (Imp F1 F2)"], ["proof (state)\nthis:\n  cut_bound ?n ?m F1 \\<le> cut_bound' (max ?n ?m) F1\n  cut_bound ?n ?m F2 \\<le> cut_bound' (max ?n ?m) F2\n\ngoal (3 subgoals):\n 1. \\<And>x n m. cut_bound n m (Atom x) \\<le> cut_bound' (max n m) (Atom x)\n 2. \\<And>n m. cut_bound n m \\<bottom> \\<le> cut_bound' (max n m) \\<bottom>\n 3. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cut_bound' (max n m)\n                                (F1 \\<^bold>\\<rightarrow> F2)", "from Imp.IH(1)"], ["proof (chain)\npicking this:\n  cut_bound ?n ?m F1 \\<le> cut_bound' (max ?n ?m) F1", "have 1: \"cut_bound (cut_bound m n F1) m F2 \\<le> cut_bound (cut_bound' (max m n) F1) m F2\""], ["proof (prove)\nusing this:\n  cut_bound ?n ?m F1 \\<le> cut_bound' (max ?n ?m) F1\n\ngoal (1 subgoal):\n 1. cut_bound (cut_bound m n F1) m F2\n    \\<le> cut_bound (cut_bound' (max m n) F1) m F2", "by(rule cut_bound_mono[OF _ order.refl])"], ["proof (state)\nthis:\n  cut_bound (cut_bound m n F1) m F2\n  \\<le> cut_bound (cut_bound' (max m n) F1) m F2\n\ngoal (3 subgoals):\n 1. \\<And>x n m. cut_bound n m (Atom x) \\<le> cut_bound' (max n m) (Atom x)\n 2. \\<And>n m. cut_bound n m \\<bottom> \\<le> cut_bound' (max n m) \\<bottom>\n 3. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cut_bound' (max n m)\n                                (F1 \\<^bold>\\<rightarrow> F2)", "also"], ["proof (state)\nthis:\n  cut_bound (cut_bound m n F1) m F2\n  \\<le> cut_bound (cut_bound' (max m n) F1) m F2\n\ngoal (3 subgoals):\n 1. \\<And>x n m. cut_bound n m (Atom x) \\<le> cut_bound' (max n m) (Atom x)\n 2. \\<And>n m. cut_bound n m \\<bottom> \\<le> cut_bound' (max n m) \\<bottom>\n 3. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cut_bound' (max n m)\n                                (F1 \\<^bold>\\<rightarrow> F2)", "from Imp.IH(2)[of \"cut_bound' (max m n) F1\"]"], ["proof (chain)\npicking this:\n  cut_bound (cut_bound' (max m n) F1) ?m F2\n  \\<le> cut_bound' (max (cut_bound' (max m n) F1) ?m) F2", "have \"\\<dots> \\<le> cut_bound' (max (cut_bound' (max m n) F1) m) F2\""], ["proof (prove)\nusing this:\n  cut_bound (cut_bound' (max m n) F1) ?m F2\n  \\<le> cut_bound' (max (cut_bound' (max m n) F1) ?m) F2\n\ngoal (1 subgoal):\n 1. cut_bound (cut_bound' (max m n) F1) m F2\n    \\<le> cut_bound' (max (cut_bound' (max m n) F1) m) F2", "by simp"], ["proof (state)\nthis:\n  cut_bound (cut_bound' (max m n) F1) m F2\n  \\<le> cut_bound' (max (cut_bound' (max m n) F1) m) F2\n\ngoal (3 subgoals):\n 1. \\<And>x n m. cut_bound n m (Atom x) \\<le> cut_bound' (max n m) (Atom x)\n 2. \\<And>n m. cut_bound n m \\<bottom> \\<le> cut_bound' (max n m) \\<bottom>\n 3. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cut_bound' (max n m)\n                                (F1 \\<^bold>\\<rightarrow> F2)", "also"], ["proof (state)\nthis:\n  cut_bound (cut_bound' (max m n) F1) m F2\n  \\<le> cut_bound' (max (cut_bound' (max m n) F1) m) F2\n\ngoal (3 subgoals):\n 1. \\<And>x n m. cut_bound n m (Atom x) \\<le> cut_bound' (max n m) (Atom x)\n 2. \\<And>n m. cut_bound n m \\<bottom> \\<le> cut_bound' (max n m) \\<bottom>\n 3. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cut_bound' (max n m)\n                                (F1 \\<^bold>\\<rightarrow> F2)", "have \"\\<dots> = cut_bound' (cut_bound' (max n m) F1) F2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cut_bound' (max (cut_bound' (max m n) F1) m) F2 =\n    cut_bound' (cut_bound' (max n m) F1) F2", "by (simp add: cut_bound_max max.commute)"], ["proof (state)\nthis:\n  cut_bound' (max (cut_bound' (max m n) F1) m) F2 =\n  cut_bound' (cut_bound' (max n m) F1) F2\n\ngoal (3 subgoals):\n 1. \\<And>x n m. cut_bound n m (Atom x) \\<le> cut_bound' (max n m) (Atom x)\n 2. \\<And>n m. cut_bound n m \\<bottom> \\<le> cut_bound' (max n m) \\<bottom>\n 3. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m. cut_bound n m F1 \\<le> cut_bound' (max n m) F1;\n        \\<And>n m. cut_bound n m F2 \\<le> cut_bound' (max n m) F2\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cut_bound' (max n m)\n                                (F1 \\<^bold>\\<rightarrow> F2)", "finally"], ["proof (chain)\npicking this:\n  cut_bound (cut_bound m n F1) m F2\n  \\<le> cut_bound' (cut_bound' (max n m) F1) F2", "show ?case"], ["proof (prove)\nusing this:\n  cut_bound (cut_bound m n F1) m F2\n  \\<le> cut_bound' (cut_bound' (max n m) F1) F2\n\ngoal (1 subgoal):\n 1. cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n    \\<le> cut_bound' (max n m) (F1 \\<^bold>\\<rightarrow> F2)", "by simp"], ["proof (state)\nthis:\n  cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n  \\<le> cut_bound' (max n m) (F1 \\<^bold>\\<rightarrow> F2)\n\ngoal (2 subgoals):\n 1. \\<And>x n m. cut_bound n m (Atom x) \\<le> cut_bound' (max n m) (Atom x)\n 2. \\<And>n m. cut_bound n m \\<bottom> \\<le> cut_bound' (max n m) \\<bottom>", "qed simp_all"], ["", "primrec depth :: \"'a formula \\<Rightarrow> nat\" where\n  \"depth (Atom _) = 0\" |\n  \"depth Bot = 0\" |\n  \"depth (Not F) = Suc (depth F)\" |\n  \"depth (And F G) = Suc (max (depth F) (depth G))\" |\n  \"depth (Or F G) = Suc (max (depth F) (depth G))\" |\n  \"depth (Imp F G) = Suc (max (depth F) (depth G))\""], ["", "private"], ["", "primrec (* primrec works, but fun would give me a nicer induction rule *) cbnd where\n  \"cbnd k 0 = 2*k\" |\n  \"cbnd k (Suc n) = cbnd (cbnd k n) n\""], ["", "private"], ["", "lemma cbnd_grow: \"(k :: nat) \\<le> cbnd k d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<le> cbnd k d", "by(induction d arbitrary: k; simp) (insert le_trans, blast)"], ["", "private"], ["", "lemma cbnd_mono: assumes \"b \\<le> d\" shows \"cbnd (a::nat) b \\<le> cbnd a d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cbnd a b \\<le> cbnd a d", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cbnd a b \\<le> cbnd a d", "have \"cbnd (a::nat) b \\<le> cbnd a (b + d)\" for b d"], ["proof (prove)\ngoal (1 subgoal):\n 1. cbnd a b \\<le> cbnd a (b + d)", "by(induction d arbitrary: a b; simp) (insert le_trans cbnd_grow, blast)"], ["proof (state)\nthis:\n  cbnd a ?b \\<le> cbnd a (?b + ?d)\n\ngoal (1 subgoal):\n 1. cbnd a b \\<le> cbnd a d", "thus ?thesis"], ["proof (prove)\nusing this:\n  cbnd a ?b \\<le> cbnd a (?b + ?d)\n\ngoal (1 subgoal):\n 1. cbnd a b \\<le> cbnd a d", "using assms"], ["proof (prove)\nusing this:\n  cbnd a ?b \\<le> cbnd a (?b + ?d)\n  b \\<le> d\n\ngoal (1 subgoal):\n 1. cbnd a b \\<le> cbnd a d", "using le_Suc_ex"], ["proof (prove)\nusing this:\n  cbnd a ?b \\<le> cbnd a (?b + ?d)\n  b \\<le> d\n  ?k \\<le> ?l \\<Longrightarrow> \\<exists>n. ?l = ?k + n\n\ngoal (1 subgoal):\n 1. cbnd a b \\<le> cbnd a d", "by blast"], ["proof (state)\nthis:\n  cbnd a b \\<le> cbnd a d\n\ngoal:\nNo subgoals!", "qed"], ["", "private"], ["", "lemma cut_bound'_cbnd: \"cut_bound' n F \\<le> cbnd n (depth F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cut_bound' n F \\<le> cbnd n (depth F)", "proof(induction F arbitrary: n)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F n.\n       (\\<And>n. cut_bound' n F \\<le> cbnd n (depth F)) \\<Longrightarrow>\n       cut_bound' n (\\<^bold>\\<not> F)\n       \\<le> cbnd n (depth (\\<^bold>\\<not> F))\n 4. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<and> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<and> F2))\n 5. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<or> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<or> F2))\n 6. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F n.\n       (\\<And>n. cut_bound' n F \\<le> cbnd n (depth F)) \\<Longrightarrow>\n       cut_bound' n (\\<^bold>\\<not> F)\n       \\<le> cbnd n (depth (\\<^bold>\\<not> F))\n 4. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<and> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<and> F2))\n 5. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<or> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<or> F2))\n 6. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "case (Not F)"], ["proof (state)\nthis:\n  cut_bound' ?n F \\<le> cbnd ?n (depth F)\n\ngoal (6 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F n.\n       (\\<And>n. cut_bound' n F \\<le> cbnd n (depth F)) \\<Longrightarrow>\n       cut_bound' n (\\<^bold>\\<not> F)\n       \\<le> cbnd n (depth (\\<^bold>\\<not> F))\n 4. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<and> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<and> F2))\n 5. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<or> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<or> F2))\n 6. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "then"], ["proof (chain)\npicking this:\n  cut_bound' ?n F \\<le> cbnd ?n (depth F)", "show ?case"], ["proof (prove)\nusing this:\n  cut_bound' ?n F \\<le> cbnd ?n (depth F)\n\ngoal (1 subgoal):\n 1. cut_bound' n (\\<^bold>\\<not> F) \\<le> cbnd n (depth (\\<^bold>\\<not> F))", "using cbnd_grow dual_order.trans"], ["proof (prove)\nusing this:\n  cut_bound' ?n F \\<le> cbnd ?n (depth F)\n  ?k \\<le> cbnd ?k ?d\n  \\<lbrakk>?b \\<le> ?a; ?c \\<le> ?b\\<rbrakk> \\<Longrightarrow> ?c \\<le> ?a\n\ngoal (1 subgoal):\n 1. cut_bound' n (\\<^bold>\\<not> F) \\<le> cbnd n (depth (\\<^bold>\\<not> F))", "by fastforce"], ["proof (state)\nthis:\n  cut_bound' n (\\<^bold>\\<not> F) \\<le> cbnd n (depth (\\<^bold>\\<not> F))\n\ngoal (5 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<and> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<and> F2))\n 4. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<or> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<or> F2))\n 5. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<and> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<and> F2))\n 4. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<or> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<or> F2))\n 5. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "case (And F1 F2)"], ["proof (state)\nthis:\n  cut_bound' ?n F1 \\<le> cbnd ?n (depth F1)\n  cut_bound' ?n F2 \\<le> cbnd ?n (depth F2)\n\ngoal (5 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<and> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<and> F2))\n 4. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<or> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<or> F2))\n 5. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "let ?md = \"max (depth F1) (depth F2)\""], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<and> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<and> F2))\n 4. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<or> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<or> F2))\n 5. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "have \"cut_bound' (cut_bound' n F1) F2 \\<le> cut_bound' (cbnd n (depth F1)) F2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cut_bound' (cut_bound' n F1) F2 \\<le> cut_bound' (cbnd n (depth F1)) F2", "by (simp add: And.IH(1) cut_bound'_mono)"], ["proof (state)\nthis:\n  cut_bound' (cut_bound' n F1) F2 \\<le> cut_bound' (cbnd n (depth F1)) F2\n\ngoal (5 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<and> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<and> F2))\n 4. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<or> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<or> F2))\n 5. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "also"], ["proof (state)\nthis:\n  cut_bound' (cut_bound' n F1) F2 \\<le> cut_bound' (cbnd n (depth F1)) F2\n\ngoal (5 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<and> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<and> F2))\n 4. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<or> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<or> F2))\n 5. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "have \"... \\<le> cut_bound' (cbnd n ?md) F2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cut_bound' (cbnd n (depth F1)) F2\n    \\<le> cut_bound' (cbnd n (max (depth F1) (depth F2))) F2", "by (simp add: cbnd_mono cut_bound'_mono)"], ["proof (state)\nthis:\n  cut_bound' (cbnd n (depth F1)) F2\n  \\<le> cut_bound' (cbnd n (max (depth F1) (depth F2))) F2\n\ngoal (5 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<and> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<and> F2))\n 4. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<or> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<or> F2))\n 5. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "also"], ["proof (state)\nthis:\n  cut_bound' (cbnd n (depth F1)) F2\n  \\<le> cut_bound' (cbnd n (max (depth F1) (depth F2))) F2\n\ngoal (5 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<and> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<and> F2))\n 4. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<or> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<or> F2))\n 5. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "have \"... \\<le> cbnd (cbnd n ?md) (depth F2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cut_bound' (cbnd n (max (depth F1) (depth F2))) F2\n    \\<le> cbnd (cbnd n (max (depth F1) (depth F2))) (depth F2)", "using And.IH(2)"], ["proof (prove)\nusing this:\n  cut_bound' ?n F2 \\<le> cbnd ?n (depth F2)\n\ngoal (1 subgoal):\n 1. cut_bound' (cbnd n (max (depth F1) (depth F2))) F2\n    \\<le> cbnd (cbnd n (max (depth F1) (depth F2))) (depth F2)", "by blast"], ["proof (state)\nthis:\n  cut_bound' (cbnd n (max (depth F1) (depth F2))) F2\n  \\<le> cbnd (cbnd n (max (depth F1) (depth F2))) (depth F2)\n\ngoal (5 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<and> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<and> F2))\n 4. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<or> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<or> F2))\n 5. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "also"], ["proof (state)\nthis:\n  cut_bound' (cbnd n (max (depth F1) (depth F2))) F2\n  \\<le> cbnd (cbnd n (max (depth F1) (depth F2))) (depth F2)\n\ngoal (5 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<and> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<and> F2))\n 4. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<or> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<or> F2))\n 5. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "have \"... \\<le> cbnd (cbnd n ?md) ?md\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cbnd (cbnd n (max (depth F1) (depth F2))) (depth F2)\n    \\<le> cbnd (cbnd n (max (depth F1) (depth F2)))\n           (max (depth F1) (depth F2))", "by (simp add: cbnd_mono)"], ["proof (state)\nthis:\n  cbnd (cbnd n (max (depth F1) (depth F2))) (depth F2)\n  \\<le> cbnd (cbnd n (max (depth F1) (depth F2)))\n         (max (depth F1) (depth F2))\n\ngoal (5 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<and> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<and> F2))\n 4. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<or> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<or> F2))\n 5. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "finally"], ["proof (chain)\npicking this:\n  cut_bound' (cut_bound' n F1) F2\n  \\<le> cbnd (cbnd n (max (depth F1) (depth F2)))\n         (max (depth F1) (depth F2))", "show ?case"], ["proof (prove)\nusing this:\n  cut_bound' (cut_bound' n F1) F2\n  \\<le> cbnd (cbnd n (max (depth F1) (depth F2)))\n         (max (depth F1) (depth F2))\n\ngoal (1 subgoal):\n 1. cut_bound' n (F1 \\<^bold>\\<and> F2)\n    \\<le> cbnd n (depth (F1 \\<^bold>\\<and> F2))", "by simp"], ["proof (state)\nthis:\n  cut_bound' n (F1 \\<^bold>\\<and> F2)\n  \\<le> cbnd n (depth (F1 \\<^bold>\\<and> F2))\n\ngoal (4 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<or> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<or> F2))\n 4. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<or> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<or> F2))\n 4. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "case (Imp F1 F2)"], ["proof (state)\nthis:\n  cut_bound' ?n F1 \\<le> cbnd ?n (depth F1)\n  cut_bound' ?n F2 \\<le> cbnd ?n (depth F2)\n\ngoal (4 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<or> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<or> F2))\n 4. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "case (Or F1 F2)"], ["proof (state)\nthis:\n  cut_bound' ?n F1 \\<le> cbnd ?n (depth F1)\n  cut_bound' ?n F2 \\<le> cbnd ?n (depth F2)\n\ngoal (4 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<or> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<or> F2))\n 4. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "text\\<open>analogous\\<close>"], ["proof (state)\nthis:\n  cut_bound' ?n F1 \\<le> cbnd ?n (depth F1)\n  cut_bound' ?n F2 \\<le> cbnd ?n (depth F2)\n\ngoal (4 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<or> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<or> F2))\n 4. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "(*<*)"], ["proof (state)\nthis:\n  cut_bound' ?n F1 \\<le> cbnd ?n (depth F1)\n  cut_bound' ?n F2 \\<le> cbnd ?n (depth F2)\n\ngoal (4 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<or> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<or> F2))\n 4. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "let ?md = \"max (depth F1) (depth F2)\""], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<or> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<or> F2))\n 4. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "have \"cut_bound' (cut_bound' n F1) F2 \\<le> cut_bound' (cbnd n (depth F1)) F2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cut_bound' (cut_bound' n F1) F2 \\<le> cut_bound' (cbnd n (depth F1)) F2", "by (simp add: Or.IH(1) cut_bound'_mono)"], ["proof (state)\nthis:\n  cut_bound' (cut_bound' n F1) F2 \\<le> cut_bound' (cbnd n (depth F1)) F2\n\ngoal (4 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<or> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<or> F2))\n 4. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "also"], ["proof (state)\nthis:\n  cut_bound' (cut_bound' n F1) F2 \\<le> cut_bound' (cbnd n (depth F1)) F2\n\ngoal (4 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<or> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<or> F2))\n 4. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "have \"... \\<le> cut_bound' (cbnd n ?md) F2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cut_bound' (cbnd n (depth F1)) F2\n    \\<le> cut_bound' (cbnd n (max (depth F1) (depth F2))) F2", "by (simp add: cbnd_mono cut_bound'_mono)"], ["proof (state)\nthis:\n  cut_bound' (cbnd n (depth F1)) F2\n  \\<le> cut_bound' (cbnd n (max (depth F1) (depth F2))) F2\n\ngoal (4 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<or> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<or> F2))\n 4. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "also"], ["proof (state)\nthis:\n  cut_bound' (cbnd n (depth F1)) F2\n  \\<le> cut_bound' (cbnd n (max (depth F1) (depth F2))) F2\n\ngoal (4 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<or> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<or> F2))\n 4. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "have \"... \\<le> cbnd (cbnd n ?md) (depth F2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cut_bound' (cbnd n (max (depth F1) (depth F2))) F2\n    \\<le> cbnd (cbnd n (max (depth F1) (depth F2))) (depth F2)", "using Or.IH(2)"], ["proof (prove)\nusing this:\n  cut_bound' ?n F2 \\<le> cbnd ?n (depth F2)\n\ngoal (1 subgoal):\n 1. cut_bound' (cbnd n (max (depth F1) (depth F2))) F2\n    \\<le> cbnd (cbnd n (max (depth F1) (depth F2))) (depth F2)", "by blast"], ["proof (state)\nthis:\n  cut_bound' (cbnd n (max (depth F1) (depth F2))) F2\n  \\<le> cbnd (cbnd n (max (depth F1) (depth F2))) (depth F2)\n\ngoal (4 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<or> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<or> F2))\n 4. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "also"], ["proof (state)\nthis:\n  cut_bound' (cbnd n (max (depth F1) (depth F2))) F2\n  \\<le> cbnd (cbnd n (max (depth F1) (depth F2))) (depth F2)\n\ngoal (4 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<or> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<or> F2))\n 4. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "have \"... \\<le> cbnd (cbnd n ?md) ?md\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cbnd (cbnd n (max (depth F1) (depth F2))) (depth F2)\n    \\<le> cbnd (cbnd n (max (depth F1) (depth F2)))\n           (max (depth F1) (depth F2))", "by (simp add: cbnd_mono)"], ["proof (state)\nthis:\n  cbnd (cbnd n (max (depth F1) (depth F2))) (depth F2)\n  \\<le> cbnd (cbnd n (max (depth F1) (depth F2)))\n         (max (depth F1) (depth F2))\n\ngoal (4 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<or> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<or> F2))\n 4. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "finally"], ["proof (chain)\npicking this:\n  cut_bound' (cut_bound' n F1) F2\n  \\<le> cbnd (cbnd n (max (depth F1) (depth F2)))\n         (max (depth F1) (depth F2))", "show ?case"], ["proof (prove)\nusing this:\n  cut_bound' (cut_bound' n F1) F2\n  \\<le> cbnd (cbnd n (max (depth F1) (depth F2)))\n         (max (depth F1) (depth F2))\n\ngoal (1 subgoal):\n 1. cut_bound' n (F1 \\<^bold>\\<or> F2)\n    \\<le> cbnd n (depth (F1 \\<^bold>\\<or> F2))", "by simp"], ["proof (state)\nthis:\n  cut_bound' n (F1 \\<^bold>\\<or> F2)\n  \\<le> cbnd n (depth (F1 \\<^bold>\\<or> F2))\n\ngoal (3 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "case (Imp F1 F2)"], ["proof (state)\nthis:\n  cut_bound' ?n F1 \\<le> cbnd ?n (depth F1)\n  cut_bound' ?n F2 \\<le> cbnd ?n (depth F2)\n\ngoal (3 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "let ?md = \"max (depth F1) (depth F2)\""], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "have \"cut_bound' (cut_bound' n F1) F2 \\<le> cut_bound' (cbnd n (depth F1)) F2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cut_bound' (cut_bound' n F1) F2 \\<le> cut_bound' (cbnd n (depth F1)) F2", "by (simp add: Imp.IH(1) cut_bound'_mono)"], ["proof (state)\nthis:\n  cut_bound' (cut_bound' n F1) F2 \\<le> cut_bound' (cbnd n (depth F1)) F2\n\ngoal (3 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "also"], ["proof (state)\nthis:\n  cut_bound' (cut_bound' n F1) F2 \\<le> cut_bound' (cbnd n (depth F1)) F2\n\ngoal (3 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "have \"... \\<le> cut_bound' (cbnd n ?md) F2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cut_bound' (cbnd n (depth F1)) F2\n    \\<le> cut_bound' (cbnd n (max (depth F1) (depth F2))) F2", "by (simp add: cbnd_mono cut_bound'_mono)"], ["proof (state)\nthis:\n  cut_bound' (cbnd n (depth F1)) F2\n  \\<le> cut_bound' (cbnd n (max (depth F1) (depth F2))) F2\n\ngoal (3 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "also"], ["proof (state)\nthis:\n  cut_bound' (cbnd n (depth F1)) F2\n  \\<le> cut_bound' (cbnd n (max (depth F1) (depth F2))) F2\n\ngoal (3 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "have \"... \\<le> cbnd (cbnd n ?md) (depth F2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cut_bound' (cbnd n (max (depth F1) (depth F2))) F2\n    \\<le> cbnd (cbnd n (max (depth F1) (depth F2))) (depth F2)", "using Imp.IH(2)"], ["proof (prove)\nusing this:\n  cut_bound' ?n F2 \\<le> cbnd ?n (depth F2)\n\ngoal (1 subgoal):\n 1. cut_bound' (cbnd n (max (depth F1) (depth F2))) F2\n    \\<le> cbnd (cbnd n (max (depth F1) (depth F2))) (depth F2)", "by blast"], ["proof (state)\nthis:\n  cut_bound' (cbnd n (max (depth F1) (depth F2))) F2\n  \\<le> cbnd (cbnd n (max (depth F1) (depth F2))) (depth F2)\n\ngoal (3 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "also"], ["proof (state)\nthis:\n  cut_bound' (cbnd n (max (depth F1) (depth F2))) F2\n  \\<le> cbnd (cbnd n (max (depth F1) (depth F2))) (depth F2)\n\ngoal (3 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "have \"... \\<le> cbnd (cbnd n ?md) ?md\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cbnd (cbnd n (max (depth F1) (depth F2))) (depth F2)\n    \\<le> cbnd (cbnd n (max (depth F1) (depth F2)))\n           (max (depth F1) (depth F2))", "by (simp add: cbnd_mono)"], ["proof (state)\nthis:\n  cbnd (cbnd n (max (depth F1) (depth F2))) (depth F2)\n  \\<le> cbnd (cbnd n (max (depth F1) (depth F2)))\n         (max (depth F1) (depth F2))\n\ngoal (3 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)\n 3. \\<And>F1 F2 n.\n       \\<lbrakk>\\<And>n. cut_bound' n F1 \\<le> cbnd n (depth F1);\n        \\<And>n. cut_bound' n F2 \\<le> cbnd n (depth F2)\\<rbrakk>\n       \\<Longrightarrow> cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "finally"], ["proof (chain)\npicking this:\n  cut_bound' (cut_bound' n F1) F2\n  \\<le> cbnd (cbnd n (max (depth F1) (depth F2)))\n         (max (depth F1) (depth F2))", "show ?case"], ["proof (prove)\nusing this:\n  cut_bound' (cut_bound' n F1) F2\n  \\<le> cbnd (cbnd n (max (depth F1) (depth F2)))\n         (max (depth F1) (depth F2))\n\ngoal (1 subgoal):\n 1. cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n    \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))", "by simp"], ["proof (state)\nthis:\n  cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n  \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))\n\ngoal (2 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)", "(*>*)"], ["proof (state)\nthis:\n  cut_bound' n (F1 \\<^bold>\\<rightarrow> F2)\n  \\<le> cbnd n (depth (F1 \\<^bold>\\<rightarrow> F2))\n\ngoal (2 subgoals):\n 1. \\<And>x n. cut_bound' n (Atom x) \\<le> cbnd n (depth (Atom x))\n 2. \\<And>n. cut_bound' n \\<bottom> \\<le> cbnd n (depth \\<bottom>)", "qed simp_all"], ["", "value \"map (cbnd (0::int)) [0,1,2,3,4]\""], ["", "value \"map (cbnd (1::int)) [0,1,2,3,4]\""], ["", "(* int, because that's easier to read\\<dots> *)"], ["", "value \"map (cbnd (2::int)) [0,1,2,3,4]\""], ["", "value \"map (cbnd (3::int)) [0,1,2,3,4]\""], ["", "value [nbe] \"map (int \\<circ> (\\<lambda>n. n div 3) \\<circ> cut_bound 3 3 \\<circ> (\\<lambda>n. ((\\<lambda>F. And F F) ^^ n) (Atom 0))) [0,1,2,3,4,5,6,7]\""], ["", "value [nbe] \"map (int \\<circ> (\\<lambda>n. n div 3) \\<circ> cut_bound' 3 \\<circ> (\\<lambda>n. ((\\<lambda>F. And F F) ^^ n) (Atom 0))) [0,1,2,3,4]\""], ["", "(* TODO: hm *)"], ["", "value [nbe] \"map (int \\<circ> (\\<lambda>n. n div 3) \\<circ> cut_bound 3 3 \\<circ> (\\<lambda>n. ((\\<lambda>F. Imp (Or F F) (And F F)) ^^ n) (Atom 0))) [0,1,2]\""], ["", "value [nbe] \"map (int \\<circ> (\\<lambda>n. n div 3) \\<circ> cut_bound' 3 \\<circ> (\\<lambda>n. ((\\<lambda>F. Imp (Or F F) (And F F)) ^^ n) (Atom 0))) [0,1,2]\""], ["", "(* Hmhm *)"], ["", "value [nbe] \"(\\<lambda>F. And (Or F F) (Or F F)) ^^ 2\""], ["", "lemma \"n + ((n + m) * 2 ^ (size F - Suc 0) + \n      (n + (n + m + (n + m) * 2 ^ (size F - Suc 0))) * 2 ^ (size G - Suc 0))\n    \\<le> (n + (m :: nat)) * 2 ^ (size F + size G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n +\n    ((n + m) * 2 ^ (size F - Suc 0) +\n     (n + (n + m + (n + m) * 2 ^ (size F - Suc 0))) * 2 ^ (size G - Suc 0))\n    \\<le> (n + m) * 2 ^ (size F + size G)", "oops"], ["", "(* so the proof below won't work. *)"], ["", "lemma \"cut_bound (n :: nat) m F \\<le> (n + m) * (2 ^ (size F - 1) + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cut_bound n m F \\<le> (n + m) * (2 ^ (size F - 1) + 1)", "proof(induction F arbitrary: n m)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x n m.\n       cut_bound n m (Atom x) \\<le> (n + m) * (2 ^ (size (Atom x) - 1) + 1)\n 2. \\<And>n m.\n       cut_bound n m \\<bottom>\n       \\<le> (n + m) * (2 ^ (size \\<bottom> - 1) + 1)\n 3. \\<And>F n m.\n       (\\<And>n m.\n           cut_bound n m F\n           \\<le> (n + m) * (2 ^ (size F - 1) + 1)) \\<Longrightarrow>\n       cut_bound n m (\\<^bold>\\<not> F)\n       \\<le> (n + m) * (2 ^ (size (\\<^bold>\\<not> F) - 1) + 1)\n 4. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m.\n                   cut_bound n m F1 \\<le> (n + m) * (2 ^ (size F1 - 1) + 1);\n        \\<And>n m.\n           cut_bound n m F2 \\<le> (n + m) * (2 ^ (size F2 - 1) + 1)\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<and> F2)\n                         \\<le> (n + m) *\n                               (2 ^ (size (F1 \\<^bold>\\<and> F2) - 1) + 1)\n 5. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m.\n                   cut_bound n m F1 \\<le> (n + m) * (2 ^ (size F1 - 1) + 1);\n        \\<And>n m.\n           cut_bound n m F2 \\<le> (n + m) * (2 ^ (size F2 - 1) + 1)\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<or> F2)\n                         \\<le> (n + m) *\n                               (2 ^ (size (F1 \\<^bold>\\<or> F2) - 1) + 1)\n 6. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m.\n                   cut_bound n m F1 \\<le> (n + m) * (2 ^ (size F1 - 1) + 1);\n        \\<And>n m.\n           cut_bound n m F2 \\<le> (n + m) * (2 ^ (size F2 - 1) + 1)\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> (n + m) *\n                               (2 ^\n                                (size (F1 \\<^bold>\\<rightarrow> F2) - 1) +\n                                1)", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x n m.\n       cut_bound n m (Atom x) \\<le> (n + m) * (2 ^ (size (Atom x) - 1) + 1)\n 2. \\<And>n m.\n       cut_bound n m \\<bottom>\n       \\<le> (n + m) * (2 ^ (size \\<bottom> - 1) + 1)\n 3. \\<And>F n m.\n       (\\<And>n m.\n           cut_bound n m F\n           \\<le> (n + m) * (2 ^ (size F - 1) + 1)) \\<Longrightarrow>\n       cut_bound n m (\\<^bold>\\<not> F)\n       \\<le> (n + m) * (2 ^ (size (\\<^bold>\\<not> F) - 1) + 1)\n 4. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m.\n                   cut_bound n m F1 \\<le> (n + m) * (2 ^ (size F1 - 1) + 1);\n        \\<And>n m.\n           cut_bound n m F2 \\<le> (n + m) * (2 ^ (size F2 - 1) + 1)\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<and> F2)\n                         \\<le> (n + m) *\n                               (2 ^ (size (F1 \\<^bold>\\<and> F2) - 1) + 1)\n 5. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m.\n                   cut_bound n m F1 \\<le> (n + m) * (2 ^ (size F1 - 1) + 1);\n        \\<And>n m.\n           cut_bound n m F2 \\<le> (n + m) * (2 ^ (size F2 - 1) + 1)\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<or> F2)\n                         \\<le> (n + m) *\n                               (2 ^ (size (F1 \\<^bold>\\<or> F2) - 1) + 1)\n 6. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m.\n                   cut_bound n m F1 \\<le> (n + m) * (2 ^ (size F1 - 1) + 1);\n        \\<And>n m.\n           cut_bound n m F2 \\<le> (n + m) * (2 ^ (size F2 - 1) + 1)\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> (n + m) *\n                               (2 ^\n                                (size (F1 \\<^bold>\\<rightarrow> F2) - 1) +\n                                1)", "case (Not F)"], ["proof (state)\nthis:\n  cut_bound ?n ?m F \\<le> (?n + ?m) * (2 ^ (size F - 1) + 1)\n\ngoal (6 subgoals):\n 1. \\<And>x n m.\n       cut_bound n m (Atom x) \\<le> (n + m) * (2 ^ (size (Atom x) - 1) + 1)\n 2. \\<And>n m.\n       cut_bound n m \\<bottom>\n       \\<le> (n + m) * (2 ^ (size \\<bottom> - 1) + 1)\n 3. \\<And>F n m.\n       (\\<And>n m.\n           cut_bound n m F\n           \\<le> (n + m) * (2 ^ (size F - 1) + 1)) \\<Longrightarrow>\n       cut_bound n m (\\<^bold>\\<not> F)\n       \\<le> (n + m) * (2 ^ (size (\\<^bold>\\<not> F) - 1) + 1)\n 4. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m.\n                   cut_bound n m F1 \\<le> (n + m) * (2 ^ (size F1 - 1) + 1);\n        \\<And>n m.\n           cut_bound n m F2 \\<le> (n + m) * (2 ^ (size F2 - 1) + 1)\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<and> F2)\n                         \\<le> (n + m) *\n                               (2 ^ (size (F1 \\<^bold>\\<and> F2) - 1) + 1)\n 5. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m.\n                   cut_bound n m F1 \\<le> (n + m) * (2 ^ (size F1 - 1) + 1);\n        \\<And>n m.\n           cut_bound n m F2 \\<le> (n + m) * (2 ^ (size F2 - 1) + 1)\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<or> F2)\n                         \\<le> (n + m) *\n                               (2 ^ (size (F1 \\<^bold>\\<or> F2) - 1) + 1)\n 6. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m.\n                   cut_bound n m F1 \\<le> (n + m) * (2 ^ (size F1 - 1) + 1);\n        \\<And>n m.\n           cut_bound n m F2 \\<le> (n + m) * (2 ^ (size F2 - 1) + 1)\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> (n + m) *\n                               (2 ^\n                                (size (F1 \\<^bold>\\<rightarrow> F2) - 1) +\n                                1)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. cut_bound n m (\\<^bold>\\<not> F)\n    \\<le> (n + m) * (2 ^ (size (\\<^bold>\\<not> F) - 1) + 1)", "unfolding cut_bound.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. cut_bound m n F \\<le> (n + m) * (2 ^ (size (\\<^bold>\\<not> F) - 1) + 1)", "by(rule le_trans[OF Not]) (simp add: add.commute)"], ["proof (state)\nthis:\n  cut_bound n m (\\<^bold>\\<not> F)\n  \\<le> (n + m) * (2 ^ (size (\\<^bold>\\<not> F) - 1) + 1)\n\ngoal (5 subgoals):\n 1. \\<And>x n m.\n       cut_bound n m (Atom x) \\<le> (n + m) * (2 ^ (size (Atom x) - 1) + 1)\n 2. \\<And>n m.\n       cut_bound n m \\<bottom>\n       \\<le> (n + m) * (2 ^ (size \\<bottom> - 1) + 1)\n 3. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m.\n                   cut_bound n m F1 \\<le> (n + m) * (2 ^ (size F1 - 1) + 1);\n        \\<And>n m.\n           cut_bound n m F2 \\<le> (n + m) * (2 ^ (size F2 - 1) + 1)\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<and> F2)\n                         \\<le> (n + m) *\n                               (2 ^ (size (F1 \\<^bold>\\<and> F2) - 1) + 1)\n 4. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m.\n                   cut_bound n m F1 \\<le> (n + m) * (2 ^ (size F1 - 1) + 1);\n        \\<And>n m.\n           cut_bound n m F2 \\<le> (n + m) * (2 ^ (size F2 - 1) + 1)\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<or> F2)\n                         \\<le> (n + m) *\n                               (2 ^ (size (F1 \\<^bold>\\<or> F2) - 1) + 1)\n 5. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m.\n                   cut_bound n m F1 \\<le> (n + m) * (2 ^ (size F1 - 1) + 1);\n        \\<And>n m.\n           cut_bound n m F2 \\<le> (n + m) * (2 ^ (size F2 - 1) + 1)\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> (n + m) *\n                               (2 ^\n                                (size (F1 \\<^bold>\\<rightarrow> F2) - 1) +\n                                1)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x n m.\n       cut_bound n m (Atom x) \\<le> (n + m) * (2 ^ (size (Atom x) - 1) + 1)\n 2. \\<And>n m.\n       cut_bound n m \\<bottom>\n       \\<le> (n + m) * (2 ^ (size \\<bottom> - 1) + 1)\n 3. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m.\n                   cut_bound n m F1 \\<le> (n + m) * (2 ^ (size F1 - 1) + 1);\n        \\<And>n m.\n           cut_bound n m F2 \\<le> (n + m) * (2 ^ (size F2 - 1) + 1)\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<and> F2)\n                         \\<le> (n + m) *\n                               (2 ^ (size (F1 \\<^bold>\\<and> F2) - 1) + 1)\n 4. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m.\n                   cut_bound n m F1 \\<le> (n + m) * (2 ^ (size F1 - 1) + 1);\n        \\<And>n m.\n           cut_bound n m F2 \\<le> (n + m) * (2 ^ (size F2 - 1) + 1)\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<or> F2)\n                         \\<le> (n + m) *\n                               (2 ^ (size (F1 \\<^bold>\\<or> F2) - 1) + 1)\n 5. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m.\n                   cut_bound n m F1 \\<le> (n + m) * (2 ^ (size F1 - 1) + 1);\n        \\<And>n m.\n           cut_bound n m F2 \\<le> (n + m) * (2 ^ (size F2 - 1) + 1)\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> (n + m) *\n                               (2 ^\n                                (size (F1 \\<^bold>\\<rightarrow> F2) - 1) +\n                                1)", "have \"1 \\<le> size F\" for F :: \"'a formula\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> size F", "by(cases F; simp)"], ["proof (state)\nthis:\n  1 \\<le> size ?F\n\ngoal (5 subgoals):\n 1. \\<And>x n m.\n       cut_bound n m (Atom x) \\<le> (n + m) * (2 ^ (size (Atom x) - 1) + 1)\n 2. \\<And>n m.\n       cut_bound n m \\<bottom>\n       \\<le> (n + m) * (2 ^ (size \\<bottom> - 1) + 1)\n 3. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m.\n                   cut_bound n m F1 \\<le> (n + m) * (2 ^ (size F1 - 1) + 1);\n        \\<And>n m.\n           cut_bound n m F2 \\<le> (n + m) * (2 ^ (size F2 - 1) + 1)\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<and> F2)\n                         \\<le> (n + m) *\n                               (2 ^ (size (F1 \\<^bold>\\<and> F2) - 1) + 1)\n 4. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m.\n                   cut_bound n m F1 \\<le> (n + m) * (2 ^ (size F1 - 1) + 1);\n        \\<And>n m.\n           cut_bound n m F2 \\<le> (n + m) * (2 ^ (size F2 - 1) + 1)\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<or> F2)\n                         \\<le> (n + m) *\n                               (2 ^ (size (F1 \\<^bold>\\<or> F2) - 1) + 1)\n 5. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m.\n                   cut_bound n m F1 \\<le> (n + m) * (2 ^ (size F1 - 1) + 1);\n        \\<And>n m.\n           cut_bound n m F2 \\<le> (n + m) * (2 ^ (size F2 - 1) + 1)\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> (n + m) *\n                               (2 ^\n                                (size (F1 \\<^bold>\\<rightarrow> F2) - 1) +\n                                1)", "case (And F G)"], ["proof (state)\nthis:\n  cut_bound ?n ?m F \\<le> (?n + ?m) * (2 ^ (size F - 1) + 1)\n  cut_bound ?n ?m G \\<le> (?n + ?m) * (2 ^ (size G - 1) + 1)\n\ngoal (5 subgoals):\n 1. \\<And>x n m.\n       cut_bound n m (Atom x) \\<le> (n + m) * (2 ^ (size (Atom x) - 1) + 1)\n 2. \\<And>n m.\n       cut_bound n m \\<bottom>\n       \\<le> (n + m) * (2 ^ (size \\<bottom> - 1) + 1)\n 3. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m.\n                   cut_bound n m F1 \\<le> (n + m) * (2 ^ (size F1 - 1) + 1);\n        \\<And>n m.\n           cut_bound n m F2 \\<le> (n + m) * (2 ^ (size F2 - 1) + 1)\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<and> F2)\n                         \\<le> (n + m) *\n                               (2 ^ (size (F1 \\<^bold>\\<and> F2) - 1) + 1)\n 4. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m.\n                   cut_bound n m F1 \\<le> (n + m) * (2 ^ (size F1 - 1) + 1);\n        \\<And>n m.\n           cut_bound n m F2 \\<le> (n + m) * (2 ^ (size F2 - 1) + 1)\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<or> F2)\n                         \\<le> (n + m) *\n                               (2 ^ (size (F1 \\<^bold>\\<or> F2) - 1) + 1)\n 5. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m.\n                   cut_bound n m F1 \\<le> (n + m) * (2 ^ (size F1 - 1) + 1);\n        \\<And>n m.\n           cut_bound n m F2 \\<le> (n + m) * (2 ^ (size F2 - 1) + 1)\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> (n + m) *\n                               (2 ^\n                                (size (F1 \\<^bold>\\<rightarrow> F2) - 1) +\n                                1)", "from And(2)"], ["proof (chain)\npicking this:\n  cut_bound ?n ?m G \\<le> (?n + ?m) * (2 ^ (size G - 1) + 1)", "have \"cut_bound n (cut_bound n m F) G \\<le> (n + (cut_bound n m F)) * (2 ^ (size G - 1) + 1)\""], ["proof (prove)\nusing this:\n  cut_bound ?n ?m G \\<le> (?n + ?m) * (2 ^ (size G - 1) + 1)\n\ngoal (1 subgoal):\n 1. cut_bound n (cut_bound n m F) G\n    \\<le> (n + cut_bound n m F) * (2 ^ (size G - 1) + 1)", "by simp"], ["proof (state)\nthis:\n  cut_bound n (cut_bound n m F) G\n  \\<le> (n + cut_bound n m F) * (2 ^ (size G - 1) + 1)\n\ngoal (5 subgoals):\n 1. \\<And>x n m.\n       cut_bound n m (Atom x) \\<le> (n + m) * (2 ^ (size (Atom x) - 1) + 1)\n 2. \\<And>n m.\n       cut_bound n m \\<bottom>\n       \\<le> (n + m) * (2 ^ (size \\<bottom> - 1) + 1)\n 3. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m.\n                   cut_bound n m F1 \\<le> (n + m) * (2 ^ (size F1 - 1) + 1);\n        \\<And>n m.\n           cut_bound n m F2 \\<le> (n + m) * (2 ^ (size F2 - 1) + 1)\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<and> F2)\n                         \\<le> (n + m) *\n                               (2 ^ (size (F1 \\<^bold>\\<and> F2) - 1) + 1)\n 4. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m.\n                   cut_bound n m F1 \\<le> (n + m) * (2 ^ (size F1 - 1) + 1);\n        \\<And>n m.\n           cut_bound n m F2 \\<le> (n + m) * (2 ^ (size F2 - 1) + 1)\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<or> F2)\n                         \\<le> (n + m) *\n                               (2 ^ (size (F1 \\<^bold>\\<or> F2) - 1) + 1)\n 5. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m.\n                   cut_bound n m F1 \\<le> (n + m) * (2 ^ (size F1 - 1) + 1);\n        \\<And>n m.\n           cut_bound n m F2 \\<le> (n + m) * (2 ^ (size F2 - 1) + 1)\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> (n + m) *\n                               (2 ^\n                                (size (F1 \\<^bold>\\<rightarrow> F2) - 1) +\n                                1)", "also"], ["proof (state)\nthis:\n  cut_bound n (cut_bound n m F) G\n  \\<le> (n + cut_bound n m F) * (2 ^ (size G - 1) + 1)\n\ngoal (5 subgoals):\n 1. \\<And>x n m.\n       cut_bound n m (Atom x) \\<le> (n + m) * (2 ^ (size (Atom x) - 1) + 1)\n 2. \\<And>n m.\n       cut_bound n m \\<bottom>\n       \\<le> (n + m) * (2 ^ (size \\<bottom> - 1) + 1)\n 3. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m.\n                   cut_bound n m F1 \\<le> (n + m) * (2 ^ (size F1 - 1) + 1);\n        \\<And>n m.\n           cut_bound n m F2 \\<le> (n + m) * (2 ^ (size F2 - 1) + 1)\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<and> F2)\n                         \\<le> (n + m) *\n                               (2 ^ (size (F1 \\<^bold>\\<and> F2) - 1) + 1)\n 4. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m.\n                   cut_bound n m F1 \\<le> (n + m) * (2 ^ (size F1 - 1) + 1);\n        \\<And>n m.\n           cut_bound n m F2 \\<le> (n + m) * (2 ^ (size F2 - 1) + 1)\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<or> F2)\n                         \\<le> (n + m) *\n                               (2 ^ (size (F1 \\<^bold>\\<or> F2) - 1) + 1)\n 5. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m.\n                   cut_bound n m F1 \\<le> (n + m) * (2 ^ (size F1 - 1) + 1);\n        \\<And>n m.\n           cut_bound n m F2 \\<le> (n + m) * (2 ^ (size F2 - 1) + 1)\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> (n + m) *\n                               (2 ^\n                                (size (F1 \\<^bold>\\<rightarrow> F2) - 1) +\n                                1)", "from And(1)"], ["proof (chain)\npicking this:\n  cut_bound ?n ?m F \\<le> (?n + ?m) * (2 ^ (size F - 1) + 1)", "have \"\\<dots> \\<le> (n + (n + m) * (2 ^ (size F - 1) + 1)) * (2 ^ (size G - 1) + 1)\""], ["proof (prove)\nusing this:\n  cut_bound ?n ?m F \\<le> (?n + ?m) * (2 ^ (size F - 1) + 1)\n\ngoal (1 subgoal):\n 1. (n + cut_bound n m F) * (2 ^ (size G - 1) + 1)\n    \\<le> (n + (n + m) * (2 ^ (size F - 1) + 1)) * (2 ^ (size G - 1) + 1)", "by (meson add_le_cancel_left mult_le_mono1)"], ["proof (state)\nthis:\n  (n + cut_bound n m F) * (2 ^ (size G - 1) + 1)\n  \\<le> (n + (n + m) * (2 ^ (size F - 1) + 1)) * (2 ^ (size G - 1) + 1)\n\ngoal (5 subgoals):\n 1. \\<And>x n m.\n       cut_bound n m (Atom x) \\<le> (n + m) * (2 ^ (size (Atom x) - 1) + 1)\n 2. \\<And>n m.\n       cut_bound n m \\<bottom>\n       \\<le> (n + m) * (2 ^ (size \\<bottom> - 1) + 1)\n 3. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m.\n                   cut_bound n m F1 \\<le> (n + m) * (2 ^ (size F1 - 1) + 1);\n        \\<And>n m.\n           cut_bound n m F2 \\<le> (n + m) * (2 ^ (size F2 - 1) + 1)\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<and> F2)\n                         \\<le> (n + m) *\n                               (2 ^ (size (F1 \\<^bold>\\<and> F2) - 1) + 1)\n 4. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m.\n                   cut_bound n m F1 \\<le> (n + m) * (2 ^ (size F1 - 1) + 1);\n        \\<And>n m.\n           cut_bound n m F2 \\<le> (n + m) * (2 ^ (size F2 - 1) + 1)\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<or> F2)\n                         \\<le> (n + m) *\n                               (2 ^ (size (F1 \\<^bold>\\<or> F2) - 1) + 1)\n 5. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m.\n                   cut_bound n m F1 \\<le> (n + m) * (2 ^ (size F1 - 1) + 1);\n        \\<And>n m.\n           cut_bound n m F2 \\<le> (n + m) * (2 ^ (size F2 - 1) + 1)\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> (n + m) *\n                               (2 ^\n                                (size (F1 \\<^bold>\\<rightarrow> F2) - 1) +\n                                1)", "also"], ["proof (state)\nthis:\n  (n + cut_bound n m F) * (2 ^ (size G - 1) + 1)\n  \\<le> (n + (n + m) * (2 ^ (size F - 1) + 1)) * (2 ^ (size G - 1) + 1)\n\ngoal (5 subgoals):\n 1. \\<And>x n m.\n       cut_bound n m (Atom x) \\<le> (n + m) * (2 ^ (size (Atom x) - 1) + 1)\n 2. \\<And>n m.\n       cut_bound n m \\<bottom>\n       \\<le> (n + m) * (2 ^ (size \\<bottom> - 1) + 1)\n 3. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m.\n                   cut_bound n m F1 \\<le> (n + m) * (2 ^ (size F1 - 1) + 1);\n        \\<And>n m.\n           cut_bound n m F2 \\<le> (n + m) * (2 ^ (size F2 - 1) + 1)\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<and> F2)\n                         \\<le> (n + m) *\n                               (2 ^ (size (F1 \\<^bold>\\<and> F2) - 1) + 1)\n 4. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m.\n                   cut_bound n m F1 \\<le> (n + m) * (2 ^ (size F1 - 1) + 1);\n        \\<And>n m.\n           cut_bound n m F2 \\<le> (n + m) * (2 ^ (size F2 - 1) + 1)\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<or> F2)\n                         \\<le> (n + m) *\n                               (2 ^ (size (F1 \\<^bold>\\<or> F2) - 1) + 1)\n 5. \\<And>F1 F2 n m.\n       \\<lbrakk>\\<And>n m.\n                   cut_bound n m F1 \\<le> (n + m) * (2 ^ (size F1 - 1) + 1);\n        \\<And>n m.\n           cut_bound n m F2 \\<le> (n + m) * (2 ^ (size F2 - 1) + 1)\\<rbrakk>\n       \\<Longrightarrow> cut_bound n m (F1 \\<^bold>\\<rightarrow> F2)\n                         \\<le> (n + m) *\n                               (2 ^\n                                (size (F1 \\<^bold>\\<rightarrow> F2) - 1) +\n                                1)", "have \"\\<dots> \\<le> (n + m) * (2 ^ (size (F \\<^bold>\\<and> G) - 1) + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n + (n + m) * (2 ^ (size F - 1) + 1)) * (2 ^ (size G - 1) + 1)\n    \\<le> (n + m) * (2 ^ (size (F \\<^bold>\\<and> G) - 1) + 1)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. n +\n    ((n + m) * 2 ^ (size F - Suc 0) +\n     (n + (n + m + (n + m) * 2 ^ (size F - Suc 0))) * 2 ^ (size G - Suc 0))\n    \\<le> (n + m) * 2 ^ (size F + size G)", "oops"], ["", "(* Oh! Look: *)\nprivate"], ["", "lemma cbnd_comm: \"cbnd (l * k::nat) n = l * cbnd (k::nat) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cbnd (l * k) n = l * cbnd k n", "by(induction n arbitrary: k; simp)"], ["", "private"], ["", "lemma cbnd_closed: \"cbnd (k::nat) n = k * 2 ^ (2 ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cbnd k n = k * 2 ^ 2 ^ n", "by(induction n arbitrary: k;simp add: semiring_normalization_rules(26))"], ["", "theorem cut': assumes \"\\<Gamma> \\<Rightarrow> F,\\<Delta> \\<down> n\" \"F,\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n\" shows \"\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n * 2 ^ (2 ^ depth F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n * 2 ^ 2 ^ depth F", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n * 2 ^ 2 ^ depth F", "from cut_bound[OF assms]"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> cut_bound n n F", "have c: \"\\<Gamma> \\<Rightarrow> \\<Delta> \\<down> cut_bound n n F\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> cut_bound n n F\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> cut_bound n n F", "."], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> cut_bound n n F\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n * 2 ^ 2 ^ depth F", "have d: \"cut_bound n n F \\<le> max n n * 2 ^ (2 ^ depth F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cut_bound n n F \\<le> max n n * 2 ^ 2 ^ depth F", "using cut_bound_' cut_bound'_cbnd cbnd_closed"], ["proof (prove)\nusing this:\n  cut_bound ?n ?m ?F \\<le> cut_bound' (max ?n ?m) ?F\n  cut_bound' ?n ?F \\<le> cbnd ?n (depth ?F)\n  cbnd ?k ?n = ?k * 2 ^ 2 ^ ?n\n\ngoal (1 subgoal):\n 1. cut_bound n n F \\<le> max n n * 2 ^ 2 ^ depth F", "by (metis order_trans)"], ["proof (state)\nthis:\n  cut_bound n n F \\<le> max n n * 2 ^ 2 ^ depth F\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n * 2 ^ 2 ^ depth F", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n * 2 ^ 2 ^ depth F", "using c d le_Suc_ex deeper"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> cut_bound n n F\n  cut_bound n n F \\<le> max n n * 2 ^ 2 ^ depth F\n  ?k \\<le> ?l \\<Longrightarrow> \\<exists>n. ?l = ?k + n\n  ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n + ?m\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n * 2 ^ 2 ^ depth F", "unfolding max.idem"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> cut_bound n n F\n  cut_bound n n F \\<le> n * 2 ^ 2 ^ depth F\n  ?k \\<le> ?l \\<Longrightarrow> \\<exists>n. ?l = ?k + n\n  ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<down> ?n + ?m\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n * 2 ^ 2 ^ depth F", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow> \\<Delta> \\<down> n * 2 ^ 2 ^ depth F\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}