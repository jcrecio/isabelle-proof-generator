{"file_name": "/home/qj213/afp-2021-10-22/thys/Propositional_Proof_Systems/LSC.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Propositional_Proof_Systems", "problem_names": ["lemmas LSC.intros[intro!]", "lemma \"\\<Gamma> \\<Rightarrow> {#} \\<Longrightarrow> is_nnf_mset \\<Gamma> \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\"", "lemma LSC_to_SC:\n  shows \"\\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow> \\<Gamma> \\<Rightarrow> {#}\"", "lemma SC_to_LSC:\n  assumes \"\\<Gamma> \\<Rightarrow> \\<Delta>\"\n  shows \"\\<Gamma> + (image_mset Not \\<Delta>) \\<Rightarrow>\\<^sub>n\"", "lemma LSC_NNF: \"\\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow> image_mset nnf \\<Gamma> \\<Rightarrow>\\<^sub>n\"", "lemma LSC_NNF_back: \"image_mset nnf \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\"", "lemma LHCut:\n  assumes \"F,\\<Gamma> \\<Rightarrow>\\<^sub>n\" \"\\<^bold>\\<not>F, \\<Gamma> \\<Rightarrow>\\<^sub>n\"\n  shows \"\\<Gamma> \\<Rightarrow>\\<^sub>n\"", "lemma \n shows LSC_AndL_inv: \"F\\<^bold>\\<and>G,\\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow> F,G,\\<Gamma> \\<Rightarrow>\\<^sub>n\"\n and   LSC_OrL_inv: \"F\\<^bold>\\<or>G,\\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow> F,\\<Gamma> \\<Rightarrow>\\<^sub>n \\<and> G,\\<Gamma> \\<Rightarrow>\\<^sub>n\"", "lemmas LSC_invs = LSC_AndL_inv LSC_OrL_inv", "lemma LSC_weaken_set: \"\\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow> \\<Gamma> + \\<Theta> \\<Rightarrow>\\<^sub>n\"", "lemma LSC_weaken: \"\\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow> F,\\<Gamma> \\<Rightarrow>\\<^sub>n\"", "lemma LSC_Contract:\n  assumes sfp: \"F, F, \\<Gamma> \\<Rightarrow>\\<^sub>n\"\n  shows \"F, \\<Gamma> \\<Rightarrow>\\<^sub>n\"", "lemma cnf:\n  shows \n    \"F \\<^bold>\\<or> (G \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n \\<longleftrightarrow> (F \\<^bold>\\<or> G) \\<^bold>\\<and> (F \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n\" (is \"?l1 \\<longleftrightarrow> ?r1\")\n    \"(G \\<^bold>\\<and> H) \\<^bold>\\<or> F, \\<Gamma> \\<Rightarrow>\\<^sub>n \\<longleftrightarrow> (G \\<^bold>\\<or> F) \\<^bold>\\<and> (H \\<^bold>\\<or> F), \\<Gamma> \\<Rightarrow>\\<^sub>n\" (is \"?l2 \\<longleftrightarrow> ?r2\")", "lemma dnf:\n  shows \n    \"F \\<^bold>\\<and> (G \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n \\<longleftrightarrow> (F \\<^bold>\\<and> G) \\<^bold>\\<or> (F \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n\" (is \"?t1\")\n    \"(G \\<^bold>\\<or> H) \\<^bold>\\<and> F, \\<Gamma> \\<Rightarrow>\\<^sub>n \\<longleftrightarrow> (G \\<^bold>\\<and> F) \\<^bold>\\<or> (H \\<^bold>\\<and> F), \\<Gamma> \\<Rightarrow>\\<^sub>n\" (is \"?t2\")", "lemma LSC_sim_Resolution1:\n  assumes R: \"S \\<^bold>\\<or> T, \\<Gamma> \\<Rightarrow>\\<^sub>n\"\n  shows \"Atom k \\<^bold>\\<or> S, (\\<^bold>\\<not>(Atom k)) \\<^bold>\\<or> T, \\<Gamma> \\<Rightarrow>\\<^sub>n\"", "lemma\n  LSC_need_it_once_have_many:\n  assumes el: \"A \\<in> set F\"\n  assumes once: \"form_of_lit A \\<^bold>\\<or> disj_of_clause (removeAll A F),\\<Gamma> \\<Rightarrow>\\<^sub>n\"\n  shows \"disj_of_clause F,\\<Gamma> \\<Rightarrow>\\<^sub>n\"", "lemma LSC_Sim_resolution_la:\n  fixes k :: 'a\n  assumes R: \"disj_of_clause (removeAll (k\\<^sup>+) F @ removeAll (k\\<inverse>) G), \\<Gamma> \\<Rightarrow>\\<^sub>n\"\n  assumes el: \"k\\<^sup>+ \\<in> set F\" \"k\\<inverse> \\<in> set G\"\n  shows \"disj_of_clause F, disj_of_clause G, \\<Gamma> \\<Rightarrow>\\<^sub>n\"", "lemma two_list_induct[case_names Nil Cons]: \"P [] [] \\<Longrightarrow> (\\<And>a S T. P S T \\<Longrightarrow> P (a # S) T &&& P S (a # T)) \\<Longrightarrow> P S T\"", "lemma distrib1: \"\\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n; image_mset disj_of_clause (mset G) + \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> mset (map (\\<lambda>d. F \\<^bold>\\<or> disj_of_clause d) G) + \\<Gamma> \\<Rightarrow>\\<^sub>n\"", "lemma mset_concat_map_cons:\n  \"mset (concat (map (\\<lambda>c. F c # G c) S)) = mset (map F S) + mset (concat (map G S))\"", "lemma distrib: \"\n  image_mset disj_of_clause (mset F) + \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow> \n  image_mset disj_of_clause (mset G) + \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  mset [disj_of_clause c \\<^bold>\\<or> disj_of_clause d. c \\<leftarrow> F, d \\<leftarrow> G] + \\<Gamma> \\<Rightarrow>\\<^sub>n\"", "lemma LSC_BigAndL: \"mset F + \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow> \\<^bold>\\<And>F, \\<Gamma> \\<Rightarrow>\\<^sub>n\"", "lemma LSC_Top_unused: \"\\<lbrakk>\\<Gamma> \\<Rightarrow>\\<^sub>n; is_nnf_mset \\<Gamma>\\<rbrakk> \\<Longrightarrow> \\<Gamma> - {#\\<^bold>\\<not> \\<bottom>#} \\<Rightarrow>\\<^sub>n\"", "lemma LSC_BigAndL_inv: \"\\<^bold>\\<And>F, \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow> \\<forall>f \\<in> set F. is_nnf f \\<Longrightarrow> is_nnf_mset \\<Gamma> \\<Longrightarrow> mset F + \\<Gamma> \\<Rightarrow>\\<^sub>n\"", "lemma LSC_reassociate_Ands: \"{#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c, d) \\<in># C#} + \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n   is_nnf_mset \\<Gamma> \\<Longrightarrow>\n  {#disj_of_clause (c @ d). (c, d) \\<in># C#} + \\<Gamma> \\<Rightarrow>\\<^sub>n\"", "lemma LSC_cnf: \"\\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow> is_nnf_mset \\<Gamma> \\<Longrightarrow> image_mset cnf_form_of \\<Gamma> \\<Rightarrow>\\<^sub>n\""], "translations": [["", "lemmas LSC.intros[intro!]"], ["", "text\\<open>You can prove that derivability in @{const SCp} is invariant to @{const nnf},\nand then transform @{const SCp} to @{const LSC} while assuming NNF.\nHowever, the transformation introduces the trouble of handling the right side of @{const SCp}.\nThe idea behind this is that handling the transformation is easier when not requiring NNF.\\<close>"], ["", "text\\<open>One downside of the whole approach is that we often need everything to be in NNF. To shorten:\\<close>"], ["", "abbreviation \"is_nnf_mset \\<Gamma> \\<equiv> \\<forall>x \\<in> set_mset \\<Gamma>. is_nnf x\""], ["", "lemma \"\\<Gamma> \\<Rightarrow> {#} \\<Longrightarrow> is_nnf_mset \\<Gamma> \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma> \\<Rightarrow> {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n", "proof(induction \\<Gamma> \"{#}::'a formula multiset \" rule: SCp.induct)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>\\<bottom> \\<in># \\<Gamma>; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>k \\<Gamma>.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>; Atom k \\<in># {#};\n        is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 3. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, {#};\n        \\<lbrakk>F, {#} = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        \\<lbrakk>\\<Delta> = {#}; is_nnf_mset (F, \\<Gamma>)\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> F, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n        F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 6. \\<And>\\<Gamma> F \\<Delta> G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<lbrakk>F, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<lbrakk>G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<and> G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 7. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 8. \\<And>\\<Gamma> F G \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta>;\n        \\<lbrakk>F, G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<or> G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 9. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, {#};\n        \\<lbrakk>F, {#} = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow>\n                         G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 10. \\<And>F \\<Gamma> G \\<Delta>.\n        \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n         \\<lbrakk>G, \\<Delta> = {#}; is_nnf_mset (F, \\<Gamma>)\\<rbrakk>\n         \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n         F \\<^bold>\\<rightarrow> G, \\<Delta> = {#};\n         is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n", "case (BotL \\<Gamma>)"], ["proof (state)\nthis:\n  \\<bottom> \\<in># \\<Gamma>\n  is_nnf_mset \\<Gamma>\n\ngoal (10 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>\\<bottom> \\<in># \\<Gamma>; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>k \\<Gamma>.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>; Atom k \\<in># {#};\n        is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 3. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, {#};\n        \\<lbrakk>F, {#} = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        \\<lbrakk>\\<Delta> = {#}; is_nnf_mset (F, \\<Gamma>)\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> F, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n        F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 6. \\<And>\\<Gamma> F \\<Delta> G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<lbrakk>F, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<lbrakk>G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<and> G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 7. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 8. \\<And>\\<Gamma> F G \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta>;\n        \\<lbrakk>F, G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<or> G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 9. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, {#};\n        \\<lbrakk>F, {#} = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow>\n                         G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 10. \\<And>F \\<Gamma> G \\<Delta>.\n        \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n         \\<lbrakk>G, \\<Delta> = {#}; is_nnf_mset (F, \\<Gamma>)\\<rbrakk>\n         \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n         F \\<^bold>\\<rightarrow> G, \\<Delta> = {#};\n         is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n", "then"], ["proof (chain)\npicking this:\n  \\<bottom> \\<in># \\<Gamma>\n  is_nnf_mset \\<Gamma>", "obtain \\<Gamma>' where \"\\<Gamma> = \\<bottom>,\\<Gamma>'\""], ["proof (prove)\nusing this:\n  \\<bottom> \\<in># \\<Gamma>\n  is_nnf_mset \\<Gamma>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<Gamma>''.\n        \\<Gamma> = \\<bottom>, \\<Gamma>'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(meson multi_member_split)"], ["proof (state)\nthis:\n  \\<Gamma> = \\<bottom>, \\<Gamma>'\n\ngoal (10 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>\\<bottom> \\<in># \\<Gamma>; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>k \\<Gamma>.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>; Atom k \\<in># {#};\n        is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 3. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, {#};\n        \\<lbrakk>F, {#} = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        \\<lbrakk>\\<Delta> = {#}; is_nnf_mset (F, \\<Gamma>)\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> F, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n        F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 6. \\<And>\\<Gamma> F \\<Delta> G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<lbrakk>F, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<lbrakk>G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<and> G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 7. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 8. \\<And>\\<Gamma> F G \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta>;\n        \\<lbrakk>F, G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<or> G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 9. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, {#};\n        \\<lbrakk>F, {#} = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow>\n                         G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 10. \\<And>F \\<Gamma> G \\<Delta>.\n        \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n         \\<lbrakk>G, \\<Delta> = {#}; is_nnf_mset (F, \\<Gamma>)\\<rbrakk>\n         \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n         F \\<^bold>\\<rightarrow> G, \\<Delta> = {#};\n         is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> = \\<bottom>, \\<Gamma>'\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow>\\<^sub>n", "by auto"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (9 subgoals):\n 1. \\<And>k \\<Gamma>.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>; Atom k \\<in># {#};\n        is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, {#};\n        \\<lbrakk>F, {#} = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 3. \\<And>F \\<Gamma> \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        \\<lbrakk>\\<Delta> = {#}; is_nnf_mset (F, \\<Gamma>)\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> F, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 4. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n        F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 5. \\<And>\\<Gamma> F \\<Delta> G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<lbrakk>F, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<lbrakk>G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<and> G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 7. \\<And>\\<Gamma> F G \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta>;\n        \\<lbrakk>F, G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<or> G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 8. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, {#};\n        \\<lbrakk>F, {#} = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow>\n                         G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 9. \\<And>F \\<Gamma> G \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<lbrakk>G, \\<Delta> = {#}; is_nnf_mset (F, \\<Gamma>)\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<rightarrow> G, \\<Delta> = {#};\n        is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>k \\<Gamma>.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>; Atom k \\<in># {#};\n        is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, {#};\n        \\<lbrakk>F, {#} = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 3. \\<And>F \\<Gamma> \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        \\<lbrakk>\\<Delta> = {#}; is_nnf_mset (F, \\<Gamma>)\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> F, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 4. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n        F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 5. \\<And>\\<Gamma> F \\<Delta> G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<lbrakk>F, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<lbrakk>G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<and> G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 7. \\<And>\\<Gamma> F G \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta>;\n        \\<lbrakk>F, G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<or> G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 8. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, {#};\n        \\<lbrakk>F, {#} = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow>\n                         G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 9. \\<And>F \\<Gamma> G \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<lbrakk>G, \\<Delta> = {#}; is_nnf_mset (F, \\<Gamma>)\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<rightarrow> G, \\<Delta> = {#};\n        is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n", "case (Ax A \\<Gamma>)"], ["proof (state)\nthis:\n  Atom A \\<in># \\<Gamma>\n  Atom A \\<in># {#}\n  is_nnf_mset \\<Gamma>\n\ngoal (9 subgoals):\n 1. \\<And>k \\<Gamma>.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>; Atom k \\<in># {#};\n        is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, {#};\n        \\<lbrakk>F, {#} = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 3. \\<And>F \\<Gamma> \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        \\<lbrakk>\\<Delta> = {#}; is_nnf_mset (F, \\<Gamma>)\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> F, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 4. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n        F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 5. \\<And>\\<Gamma> F \\<Delta> G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<lbrakk>F, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<lbrakk>G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<and> G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 7. \\<And>\\<Gamma> F G \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta>;\n        \\<lbrakk>F, G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<or> G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 8. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, {#};\n        \\<lbrakk>F, {#} = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow>\n                         G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 9. \\<And>F \\<Gamma> G \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<lbrakk>G, \\<Delta> = {#}; is_nnf_mset (F, \\<Gamma>)\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<rightarrow> G, \\<Delta> = {#};\n        is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n", "hence False"], ["proof (prove)\nusing this:\n  Atom A \\<in># \\<Gamma>\n  Atom A \\<in># {#}\n  is_nnf_mset \\<Gamma>\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (9 subgoals):\n 1. \\<And>k \\<Gamma>.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>; Atom k \\<in># {#};\n        is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, {#};\n        \\<lbrakk>F, {#} = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 3. \\<And>F \\<Gamma> \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        \\<lbrakk>\\<Delta> = {#}; is_nnf_mset (F, \\<Gamma>)\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> F, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 4. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n        F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 5. \\<And>\\<Gamma> F \\<Delta> G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<lbrakk>F, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<lbrakk>G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<and> G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 7. \\<And>\\<Gamma> F G \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta>;\n        \\<lbrakk>F, G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<or> G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 8. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, {#};\n        \\<lbrakk>F, {#} = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow>\n                         G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 9. \\<And>F \\<Gamma> G \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<lbrakk>G, \\<Delta> = {#}; is_nnf_mset (F, \\<Gamma>)\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<rightarrow> G, \\<Delta> = {#};\n        is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow>\\<^sub>n", ".."], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (8 subgoals):\n 1. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, {#};\n        \\<lbrakk>F, {#} = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>F \\<Gamma> \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        \\<lbrakk>\\<Delta> = {#}; is_nnf_mset (F, \\<Gamma>)\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> F, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n        F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 4. \\<And>\\<Gamma> F \\<Delta> G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<lbrakk>F, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<lbrakk>G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<and> G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 5. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 6. \\<And>\\<Gamma> F G \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta>;\n        \\<lbrakk>F, G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<or> G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 7. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, {#};\n        \\<lbrakk>F, {#} = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow>\n                         G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 8. \\<And>F \\<Gamma> G \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<lbrakk>G, \\<Delta> = {#}; is_nnf_mset (F, \\<Gamma>)\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<rightarrow> G, \\<Delta> = {#};\n        is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n", "(* this case makes you think that there's something wrong with this proof *)"], ["proof (state)\nthis:\n  \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (8 subgoals):\n 1. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, {#};\n        \\<lbrakk>F, {#} = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>F \\<Gamma> \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        \\<lbrakk>\\<Delta> = {#}; is_nnf_mset (F, \\<Gamma>)\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> F, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n        F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 4. \\<And>\\<Gamma> F \\<Delta> G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<lbrakk>F, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<lbrakk>G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<and> G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 5. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 6. \\<And>\\<Gamma> F G \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta>;\n        \\<lbrakk>F, G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<or> G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 7. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, {#};\n        \\<lbrakk>F, {#} = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow>\n                         G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 8. \\<And>F \\<Gamma> G \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<lbrakk>G, \\<Delta> = {#}; is_nnf_mset (F, \\<Gamma>)\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<rightarrow> G, \\<Delta> = {#};\n        is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, {#};\n        \\<lbrakk>F, {#} = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>F \\<Gamma> \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        \\<lbrakk>\\<Delta> = {#}; is_nnf_mset (F, \\<Gamma>)\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> F, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n        F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 4. \\<And>\\<Gamma> F \\<Delta> G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<lbrakk>F, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<lbrakk>G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<and> G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 5. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 6. \\<And>\\<Gamma> F G \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta>;\n        \\<lbrakk>F, G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<or> G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 7. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, {#};\n        \\<lbrakk>F, {#} = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow>\n                         G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 8. \\<And>F \\<Gamma> G \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<lbrakk>G, \\<Delta> = {#}; is_nnf_mset (F, \\<Gamma>)\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<rightarrow> G, \\<Delta> = {#};\n        is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n", "case (AndL \\<Gamma> F G)"], ["proof (state)\nthis:\n  \\<Gamma>, F, G \\<Rightarrow> {#}\n  is_nnf_mset (\\<Gamma>, F, G) \\<Longrightarrow>\n  \\<Gamma>, F, G \\<Rightarrow>\\<^sub>n\n  is_nnf_mset (\\<Gamma> \\<^bold>\\<and> F, G)\n\ngoal (8 subgoals):\n 1. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, {#};\n        \\<lbrakk>F, {#} = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>F \\<Gamma> \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        \\<lbrakk>\\<Delta> = {#}; is_nnf_mset (F, \\<Gamma>)\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> F, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n        F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 4. \\<And>\\<Gamma> F \\<Delta> G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<lbrakk>F, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<lbrakk>G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<and> G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 5. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 6. \\<And>\\<Gamma> F G \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta>;\n        \\<lbrakk>F, G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<or> G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 7. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, {#};\n        \\<lbrakk>F, {#} = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow>\n                         G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 8. \\<And>F \\<Gamma> G \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<lbrakk>G, \\<Delta> = {#}; is_nnf_mset (F, \\<Gamma>)\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<rightarrow> G, \\<Delta> = {#};\n        is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n", "hence IH: \"\\<Gamma>, F, G \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  \\<Gamma>, F, G \\<Rightarrow> {#}\n  is_nnf_mset (\\<Gamma>, F, G) \\<Longrightarrow>\n  \\<Gamma>, F, G \\<Rightarrow>\\<^sub>n\n  is_nnf_mset (\\<Gamma> \\<^bold>\\<and> F, G)\n\ngoal (1 subgoal):\n 1. \\<Gamma>, F, G \\<Rightarrow>\\<^sub>n", "by force"], ["proof (state)\nthis:\n  \\<Gamma>, F, G \\<Rightarrow>\\<^sub>n\n\ngoal (8 subgoals):\n 1. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, {#};\n        \\<lbrakk>F, {#} = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>F \\<Gamma> \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        \\<lbrakk>\\<Delta> = {#}; is_nnf_mset (F, \\<Gamma>)\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> F, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n        F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 4. \\<And>\\<Gamma> F \\<Delta> G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<lbrakk>F, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<lbrakk>G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<and> G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 5. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 6. \\<And>\\<Gamma> F G \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta>;\n        \\<lbrakk>F, G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<or> G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 7. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, {#};\n        \\<lbrakk>F, {#} = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow>\n                         G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 8. \\<And>F \\<Gamma> G \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<lbrakk>G, \\<Delta> = {#}; is_nnf_mset (F, \\<Gamma>)\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<rightarrow> G, \\<Delta> = {#};\n        is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>, F, G \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<^bold>\\<and> F, G \\<Rightarrow>\\<^sub>n", "by auto"], ["proof (state)\nthis:\n  \\<Gamma> \\<^bold>\\<and> F, G \\<Rightarrow>\\<^sub>n\n\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, {#};\n        \\<lbrakk>F, {#} = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>F \\<Gamma> \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        \\<lbrakk>\\<Delta> = {#}; is_nnf_mset (F, \\<Gamma>)\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> F, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 3. \\<And>\\<Gamma> F \\<Delta> G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<lbrakk>F, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<lbrakk>G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<and> G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 5. \\<And>\\<Gamma> F G \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta>;\n        \\<lbrakk>F, G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<or> G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 6. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, {#};\n        \\<lbrakk>F, {#} = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow>\n                         G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 7. \\<And>F \\<Gamma> G \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<lbrakk>G, \\<Delta> = {#}; is_nnf_mset (F, \\<Gamma>)\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<rightarrow> G, \\<Delta> = {#};\n        is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, {#};\n        \\<lbrakk>F, {#} = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>F \\<Gamma> \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        \\<lbrakk>\\<Delta> = {#}; is_nnf_mset (F, \\<Gamma>)\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> F, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 3. \\<And>\\<Gamma> F \\<Delta> G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<lbrakk>F, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<lbrakk>G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<and> G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 5. \\<And>\\<Gamma> F G \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta>;\n        \\<lbrakk>F, G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<or> G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 6. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, {#};\n        \\<lbrakk>F, {#} = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow>\n                         G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 7. \\<And>F \\<Gamma> G \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<lbrakk>G, \\<Delta> = {#}; is_nnf_mset (F, \\<Gamma>)\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<rightarrow> G, \\<Delta> = {#};\n        is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n", "case (NotL)"], ["proof (state)\nthis:\n  \\<Gamma>_ \\<Rightarrow> F_, {#}\n  \\<lbrakk>F_, {#} = {#}; is_nnf_mset \\<Gamma>_\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>_ \\<Rightarrow>\\<^sub>n\n  is_nnf_mset (\\<^bold>\\<not> F_, \\<Gamma>_)\n\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> F.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, {#};\n        \\<lbrakk>F, {#} = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>F \\<Gamma> \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        \\<lbrakk>\\<Delta> = {#}; is_nnf_mset (F, \\<Gamma>)\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> F, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 3. \\<And>\\<Gamma> F \\<Delta> G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<lbrakk>F, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<lbrakk>G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<and> G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 5. \\<And>\\<Gamma> F G \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta>;\n        \\<lbrakk>F, G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<or> G, \\<Delta> = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 6. \\<And>\\<Gamma> F G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, {#};\n        \\<lbrakk>F, {#} = {#}; is_nnf_mset \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> {#};\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow>\n                         G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 7. \\<And>F \\<Gamma> G \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<lbrakk>G, \\<Delta> = {#}; is_nnf_mset (F, \\<Gamma>)\\<rbrakk>\n        \\<Longrightarrow> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<rightarrow> G, \\<Delta> = {#};\n        is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>_ \\<Rightarrow> F_, {#}\n  \\<lbrakk>F_, {#} = {#}; is_nnf_mset \\<Gamma>_\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>_ \\<Rightarrow>\\<^sub>n\n  is_nnf_mset (\\<^bold>\\<not> F_, \\<Gamma>_)\n\ngoal (1 subgoal):\n 1. \\<^bold>\\<not> F_, \\<Gamma>_ \\<Rightarrow>\\<^sub>n", "(* this demonstrates it *)"], ["proof (prove)\nusing this:\n  \\<Gamma>_ \\<Rightarrow> F_, {#}\n  \\<lbrakk>F_, {#} = {#}; is_nnf_mset \\<Gamma>_\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>_ \\<Rightarrow>\\<^sub>n\n  is_nnf_mset (\\<^bold>\\<not> F_, \\<Gamma>_)\n\ngoal (1 subgoal):\n 1. \\<^bold>\\<not> F_, \\<Gamma>_ \\<Rightarrow>\\<^sub>n", "oops"], ["", "lemma LSC_to_SC:\n  shows \"\\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow> \\<Gamma> \\<Rightarrow> {#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> {#}", "proof(induction rule: LSC.induct)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>k \\<Gamma>.\n       \\<^bold>\\<not> (Atom k), Atom k, \\<Gamma> \\<Rightarrow> {#}\n 2. \\<And>\\<Gamma>. \\<bottom>, \\<Gamma> \\<Rightarrow> {#}\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F, G, \\<Gamma> \\<Rightarrow> {#}\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow> {#}\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F, \\<Gamma> \\<Rightarrow> {#}; G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> {#}\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow> {#}\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\n        {#}\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>\\<not>\n                          (F \\<^bold>\\<or> G), \\<Gamma> \\<Rightarrow>\n                         {#}\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow> {#};\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow> {#}\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>\\<not>\n                          (F \\<^bold>\\<and> G), \\<Gamma> \\<Rightarrow>\n                         {#}\n 7. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow> {#};\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> {#}\\<rbrakk>\n       \\<Longrightarrow> F \\<^bold>\\<rightarrow> G, \\<Gamma> \\<Rightarrow>\n                         {#}\n 8. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow> {#}\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>\\<not>\n                          (F \\<^bold>\\<rightarrow>\n                           G), \\<Gamma> \\<Rightarrow>\n                         {#}\n 9. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F, \\<Gamma> \\<Rightarrow> {#}\\<rbrakk>\n       \\<Longrightarrow> \\<^bold>\\<not>\n                          (\\<^bold>\\<not> F), \\<Gamma> \\<Rightarrow>\n                         {#}", "qed (auto dest!: NotL_inv intro!: SCp.intros(3-) intro: extended_Ax)"], ["", "lemma SC_to_LSC:\n  assumes \"\\<Gamma> \\<Rightarrow> \\<Delta>\"\n  shows \"\\<Gamma> + (image_mset Not \\<Delta>) \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> + image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma> + image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n", "have GO[simp]: \n    \"NO_MATCH {# B #} F \\<Longrightarrow> (F,S) + T = F, (S+T)\" \n    \"NO_MATCH {# B #} S \\<Longrightarrow> S + (F,T) = F, (S+T)\"\n    \"NO_MATCH (\\<^bold>\\<not>H) F \\<Longrightarrow> F,\\<^bold>\\<not>G,S = \\<^bold>\\<not>G,F,S\"\n    for B S F G H T"], ["proof (prove)\ngoal (1 subgoal):\n 1. (NO_MATCH (B, {#}) F \\<Longrightarrow> (F, S) + T = F, S + T) &&&\n    (NO_MATCH (B, {#}) S \\<Longrightarrow> S + (F, T) = F, S + T) &&&\n    (NO_MATCH (\\<^bold>\\<not> H) F \\<Longrightarrow>\n     F, \\<^bold>\\<not> G, S = \\<^bold>\\<not> G, F, S)", "by simp_all"], ["proof (state)\nthis:\n  NO_MATCH (?B1, {#}) ?F1 \\<Longrightarrow>\n  (?F1, ?S1) + ?T1 = ?F1, ?S1 + ?T1\n  NO_MATCH (?B1, {#}) ?S1 \\<Longrightarrow>\n  ?S1 + (?F1, ?T1) = ?F1, ?S1 + ?T1\n  NO_MATCH (\\<^bold>\\<not> ?H1) ?F1 \\<Longrightarrow>\n  ?F1, \\<^bold>\\<not> ?G1, ?S1 = \\<^bold>\\<not> ?G1, ?F1, ?S1\n\ngoal (1 subgoal):\n 1. \\<Gamma> + image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n", "from assms"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<Rightarrow> \\<Delta>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<Rightarrow> \\<Delta>\n\ngoal (1 subgoal):\n 1. \\<Gamma> + image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n", "proof(induction rule: SCp.induct)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>\\<Gamma> \\<Delta>.\n       \\<bottom> \\<in># \\<Gamma> \\<Longrightarrow>\n       \\<Gamma> + image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\n 2. \\<And>k \\<Gamma> \\<Delta>.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>; Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 3. \\<And>\\<Gamma> F \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not>\n         (F, \\<Delta>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> F, \\<Gamma>) +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (F, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          (\\<^bold>\\<not> F, \\<Delta>) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F G \\<Gamma> \\<Delta>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (F, G, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<and> G, \\<Gamma>) +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 6. \\<And>\\<Gamma> F \\<Delta> G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not> (F, \\<Delta>) \\<Rightarrow>\\<^sub>n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not>\n         (G, \\<Delta>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          (F \\<^bold>\\<and>\n                           G, \\<Delta>) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F \\<Gamma> \\<Delta> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (F, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (G, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<or> G, \\<Gamma>) +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 8. \\<And>\\<Gamma> F G \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not>\n         (F, G, \\<Delta>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          (F \\<^bold>\\<or>\n                           G, \\<Delta>) \\<Rightarrow>\\<^sub>n\n 9. \\<And>\\<Gamma> F \\<Delta> G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not> (F, \\<Delta>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (G, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<rightarrow> G, \\<Gamma>) +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 10. \\<And>F \\<Gamma> G \\<Delta>.\n        \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n         (F, \\<Gamma>) +\n         image_mset \\<^bold>\\<not>\n          (G, \\<Delta>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> +\n                          image_mset \\<^bold>\\<not>\n                           (F \\<^bold>\\<rightarrow>\n                            G, \\<Delta>) \\<Rightarrow>\\<^sub>n", "case (BotL \\<Gamma>)"], ["proof (state)\nthis:\n  \\<bottom> \\<in># \\<Gamma>\n\ngoal (10 subgoals):\n 1. \\<And>\\<Gamma> \\<Delta>.\n       \\<bottom> \\<in># \\<Gamma> \\<Longrightarrow>\n       \\<Gamma> + image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\n 2. \\<And>k \\<Gamma> \\<Delta>.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>; Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 3. \\<And>\\<Gamma> F \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not>\n         (F, \\<Delta>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> F, \\<Gamma>) +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (F, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          (\\<^bold>\\<not> F, \\<Delta>) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F G \\<Gamma> \\<Delta>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (F, G, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<and> G, \\<Gamma>) +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 6. \\<And>\\<Gamma> F \\<Delta> G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not> (F, \\<Delta>) \\<Rightarrow>\\<^sub>n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not>\n         (G, \\<Delta>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          (F \\<^bold>\\<and>\n                           G, \\<Delta>) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F \\<Gamma> \\<Delta> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (F, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (G, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<or> G, \\<Gamma>) +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 8. \\<And>\\<Gamma> F G \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not>\n         (F, G, \\<Delta>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          (F \\<^bold>\\<or>\n                           G, \\<Delta>) \\<Rightarrow>\\<^sub>n\n 9. \\<And>\\<Gamma> F \\<Delta> G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not> (F, \\<Delta>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (G, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<rightarrow> G, \\<Gamma>) +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 10. \\<And>F \\<Gamma> G \\<Delta>.\n        \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n         (F, \\<Gamma>) +\n         image_mset \\<^bold>\\<not>\n          (G, \\<Delta>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> +\n                          image_mset \\<^bold>\\<not>\n                           (F \\<^bold>\\<rightarrow>\n                            G, \\<Delta>) \\<Rightarrow>\\<^sub>n", "then"], ["proof (chain)\npicking this:\n  \\<bottom> \\<in># \\<Gamma>", "obtain \\<Gamma>' where \"\\<Gamma> = \\<bottom>,\\<Gamma>'\""], ["proof (prove)\nusing this:\n  \\<bottom> \\<in># \\<Gamma>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<Gamma>''.\n        \\<Gamma> = \\<bottom>, \\<Gamma>'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(meson multi_member_split)"], ["proof (state)\nthis:\n  \\<Gamma> = \\<bottom>, \\<Gamma>'\n\ngoal (10 subgoals):\n 1. \\<And>\\<Gamma> \\<Delta>.\n       \\<bottom> \\<in># \\<Gamma> \\<Longrightarrow>\n       \\<Gamma> + image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\n 2. \\<And>k \\<Gamma> \\<Delta>.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>; Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 3. \\<And>\\<Gamma> F \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not>\n         (F, \\<Delta>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> F, \\<Gamma>) +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (F, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          (\\<^bold>\\<not> F, \\<Delta>) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F G \\<Gamma> \\<Delta>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (F, G, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<and> G, \\<Gamma>) +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 6. \\<And>\\<Gamma> F \\<Delta> G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not> (F, \\<Delta>) \\<Rightarrow>\\<^sub>n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not>\n         (G, \\<Delta>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          (F \\<^bold>\\<and>\n                           G, \\<Delta>) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F \\<Gamma> \\<Delta> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (F, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (G, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<or> G, \\<Gamma>) +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 8. \\<And>\\<Gamma> F G \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not>\n         (F, G, \\<Delta>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          (F \\<^bold>\\<or>\n                           G, \\<Delta>) \\<Rightarrow>\\<^sub>n\n 9. \\<And>\\<Gamma> F \\<Delta> G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not> (F, \\<Delta>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (G, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<rightarrow> G, \\<Gamma>) +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 10. \\<And>F \\<Gamma> G \\<Delta>.\n        \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n         (F, \\<Gamma>) +\n         image_mset \\<^bold>\\<not>\n          (G, \\<Delta>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma> +\n                          image_mset \\<^bold>\\<not>\n                           (F \\<^bold>\\<rightarrow>\n                            G, \\<Delta>) \\<Rightarrow>\\<^sub>n", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> = \\<bottom>, \\<Gamma>'\n\ngoal (1 subgoal):\n 1. \\<Gamma> + image_mset \\<^bold>\\<not> \\<Delta>_ \\<Rightarrow>\\<^sub>n", "by auto"], ["proof (state)\nthis:\n  \\<Gamma> + image_mset \\<^bold>\\<not> \\<Delta>_ \\<Rightarrow>\\<^sub>n\n\ngoal (9 subgoals):\n 1. \\<And>k \\<Gamma> \\<Delta>.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>; Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 2. \\<And>\\<Gamma> F \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not>\n         (F, \\<Delta>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> F, \\<Gamma>) +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 3. \\<And>F \\<Gamma> \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (F, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          (\\<^bold>\\<not> F, \\<Delta>) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F G \\<Gamma> \\<Delta>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (F, G, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<and> G, \\<Gamma>) +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 5. \\<And>\\<Gamma> F \\<Delta> G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not> (F, \\<Delta>) \\<Rightarrow>\\<^sub>n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not>\n         (G, \\<Delta>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          (F \\<^bold>\\<and>\n                           G, \\<Delta>) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma> \\<Delta> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (F, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (G, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<or> G, \\<Gamma>) +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 7. \\<And>\\<Gamma> F G \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not>\n         (F, G, \\<Delta>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          (F \\<^bold>\\<or>\n                           G, \\<Delta>) \\<Rightarrow>\\<^sub>n\n 8. \\<And>\\<Gamma> F \\<Delta> G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not> (F, \\<Delta>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (G, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<rightarrow> G, \\<Gamma>) +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 9. \\<And>F \\<Gamma> G \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        (F, \\<Gamma>) +\n        image_mset \\<^bold>\\<not>\n         (G, \\<Delta>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          (F \\<^bold>\\<rightarrow>\n                           G, \\<Delta>) \\<Rightarrow>\\<^sub>n", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>k \\<Gamma> \\<Delta>.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>; Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 2. \\<And>\\<Gamma> F \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not>\n         (F, \\<Delta>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> F, \\<Gamma>) +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 3. \\<And>F \\<Gamma> \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (F, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          (\\<^bold>\\<not> F, \\<Delta>) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F G \\<Gamma> \\<Delta>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (F, G, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<and> G, \\<Gamma>) +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 5. \\<And>\\<Gamma> F \\<Delta> G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not> (F, \\<Delta>) \\<Rightarrow>\\<^sub>n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not>\n         (G, \\<Delta>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          (F \\<^bold>\\<and>\n                           G, \\<Delta>) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma> \\<Delta> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (F, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (G, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<or> G, \\<Gamma>) +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 7. \\<And>\\<Gamma> F G \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not>\n         (F, G, \\<Delta>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          (F \\<^bold>\\<or>\n                           G, \\<Delta>) \\<Rightarrow>\\<^sub>n\n 8. \\<And>\\<Gamma> F \\<Delta> G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not> (F, \\<Delta>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (G, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<rightarrow> G, \\<Gamma>) +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 9. \\<And>F \\<Gamma> G \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        (F, \\<Gamma>) +\n        image_mset \\<^bold>\\<not>\n         (G, \\<Delta>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          (F \\<^bold>\\<rightarrow>\n                           G, \\<Delta>) \\<Rightarrow>\\<^sub>n", "case (Ax k \\<Gamma> \\<Delta>)"], ["proof (state)\nthis:\n  Atom k \\<in># \\<Gamma>\n  Atom k \\<in># \\<Delta>\n\ngoal (9 subgoals):\n 1. \\<And>k \\<Gamma> \\<Delta>.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>; Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 2. \\<And>\\<Gamma> F \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not>\n         (F, \\<Delta>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> F, \\<Gamma>) +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 3. \\<And>F \\<Gamma> \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (F, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          (\\<^bold>\\<not> F, \\<Delta>) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F G \\<Gamma> \\<Delta>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (F, G, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<and> G, \\<Gamma>) +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 5. \\<And>\\<Gamma> F \\<Delta> G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not> (F, \\<Delta>) \\<Rightarrow>\\<^sub>n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not>\n         (G, \\<Delta>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          (F \\<^bold>\\<and>\n                           G, \\<Delta>) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma> \\<Delta> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (F, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (G, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<or> G, \\<Gamma>) +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 7. \\<And>\\<Gamma> F G \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not>\n         (F, G, \\<Delta>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          (F \\<^bold>\\<or>\n                           G, \\<Delta>) \\<Rightarrow>\\<^sub>n\n 8. \\<And>\\<Gamma> F \\<Delta> G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not> (F, \\<Delta>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (G, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<rightarrow> G, \\<Gamma>) +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 9. \\<And>F \\<Gamma> G \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        (F, \\<Gamma>) +\n        image_mset \\<^bold>\\<not>\n         (G, \\<Delta>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          (F \\<^bold>\\<rightarrow>\n                           G, \\<Delta>) \\<Rightarrow>\\<^sub>n", "then"], ["proof (chain)\npicking this:\n  Atom k \\<in># \\<Gamma>\n  Atom k \\<in># \\<Delta>", "obtain \\<Gamma>' \\<Delta>' where \"\\<Gamma> = Atom k, \\<Gamma>'\" \"\\<Delta> = Atom k, \\<Delta>'\""], ["proof (prove)\nusing this:\n  Atom k \\<in># \\<Gamma>\n  Atom k \\<in># \\<Delta>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<Gamma>'' \\<Delta>''.\n        \\<lbrakk>\\<Gamma> = Atom k, \\<Gamma>'';\n         \\<Delta> = Atom k, \\<Delta>''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(meson multi_member_split)"], ["proof (state)\nthis:\n  \\<Gamma> = Atom k, \\<Gamma>'\n  \\<Delta> = Atom k, \\<Delta>'\n\ngoal (9 subgoals):\n 1. \\<And>k \\<Gamma> \\<Delta>.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>; Atom k \\<in># \\<Delta>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 2. \\<And>\\<Gamma> F \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not>\n         (F, \\<Delta>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> F, \\<Gamma>) +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 3. \\<And>F \\<Gamma> \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (F, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          (\\<^bold>\\<not> F, \\<Delta>) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F G \\<Gamma> \\<Delta>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (F, G, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<and> G, \\<Gamma>) +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 5. \\<And>\\<Gamma> F \\<Delta> G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not> (F, \\<Delta>) \\<Rightarrow>\\<^sub>n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not>\n         (G, \\<Delta>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          (F \\<^bold>\\<and>\n                           G, \\<Delta>) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma> \\<Delta> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (F, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (G, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<or> G, \\<Gamma>) +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 7. \\<And>\\<Gamma> F G \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not>\n         (F, G, \\<Delta>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          (F \\<^bold>\\<or>\n                           G, \\<Delta>) \\<Rightarrow>\\<^sub>n\n 8. \\<And>\\<Gamma> F \\<Delta> G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not> (F, \\<Delta>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (G, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<rightarrow> G, \\<Gamma>) +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 9. \\<And>F \\<Gamma> G \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        (F, \\<Gamma>) +\n        image_mset \\<^bold>\\<not>\n         (G, \\<Delta>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          (F \\<^bold>\\<rightarrow>\n                           G, \\<Delta>) \\<Rightarrow>\\<^sub>n", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> = Atom k, \\<Gamma>'\n  \\<Delta> = Atom k, \\<Delta>'\n\ngoal (1 subgoal):\n 1. \\<Gamma> + image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n", "using LSC.Ax"], ["proof (prove)\nusing this:\n  \\<Gamma> = Atom k, \\<Gamma>'\n  \\<Delta> = Atom k, \\<Delta>'\n  \\<^bold>\\<not> (Atom ?k), Atom ?k, ?\\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<Gamma> + image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n", "by simp"], ["proof (state)\nthis:\n  \\<Gamma> + image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\n\ngoal (8 subgoals):\n 1. \\<And>\\<Gamma> F \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not>\n         (F, \\<Delta>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> F, \\<Gamma>) +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 2. \\<And>F \\<Gamma> \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (F, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          (\\<^bold>\\<not> F, \\<Delta>) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F G \\<Gamma> \\<Delta>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (F, G, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<and> G, \\<Gamma>) +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 4. \\<And>\\<Gamma> F \\<Delta> G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not> (F, \\<Delta>) \\<Rightarrow>\\<^sub>n;\n        \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not>\n         (G, \\<Delta>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          (F \\<^bold>\\<and>\n                           G, \\<Delta>) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F \\<Gamma> \\<Delta> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (F, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (G, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<or> G, \\<Gamma>) +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 6. \\<And>\\<Gamma> F G \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, G, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not>\n         (F, G, \\<Delta>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          (F \\<^bold>\\<or>\n                           G, \\<Delta>) \\<Rightarrow>\\<^sub>n\n 7. \\<And>\\<Gamma> F \\<Delta> G.\n       \\<lbrakk>\\<Gamma> \\<Rightarrow> F, \\<Delta>;\n        \\<Gamma> +\n        image_mset \\<^bold>\\<not> (F, \\<Delta>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow> \\<Delta>;\n        (G, \\<Gamma>) +\n        image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<rightarrow> G, \\<Gamma>) +\n                         image_mset \\<^bold>\\<not>\n                          \\<Delta> \\<Rightarrow>\\<^sub>n\n 8. \\<And>F \\<Gamma> G \\<Delta>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow> G, \\<Delta>;\n        (F, \\<Gamma>) +\n        image_mset \\<^bold>\\<not>\n         (G, \\<Delta>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> +\n                         image_mset \\<^bold>\\<not>\n                          (F \\<^bold>\\<rightarrow>\n                           G, \\<Delta>) \\<Rightarrow>\\<^sub>n", "qed auto"], ["proof (state)\nthis:\n  \\<Gamma> + image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\\<^sub>n\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary SC_LSC: \"\\<Gamma> \\<Rightarrow> {#} \\<longleftrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> {#} = \\<Gamma> \\<Rightarrow>\\<^sub>n", "using SC_to_LSC LSC_to_SC"], ["proof (prove)\nusing this:\n  ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<Longrightarrow>\n  ?\\<Gamma> + image_mset \\<^bold>\\<not> ?\\<Delta> \\<Rightarrow>\\<^sub>n\n  ?\\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> {#}\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> {#} = \\<Gamma> \\<Rightarrow>\\<^sub>n", "by fastforce"], ["", "text\\<open>The nice thing: The NNF-Transformation is even easier to show on the one-sided variant.\\<close>"], ["", "(* part of that is because it is written down in a way that is easier to tackle for the solvers *)"], ["", "lemma LSC_NNF: \"\\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow> image_mset nnf \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n    image_mset nnf \\<Gamma> \\<Rightarrow>\\<^sub>n", "proof(induction rule: LSC.induct)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>k \\<Gamma>.\n       image_mset nnf\n        (\\<^bold>\\<not> (Atom k), Atom k, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 2. \\<And>\\<Gamma>.\n       image_mset nnf (\\<bottom>, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (F, G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (F \\<^bold>\\<and>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (F \\<^bold>\\<or>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf\n         (\\<^bold>\\<not>\n           F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<or>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf\n         (\\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<and>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (F \\<^bold>\\<rightarrow>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 8. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf\n         (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<rightarrow>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 9. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (\\<^bold>\\<not>\n                              F), \\<Gamma>) \\<Rightarrow>\\<^sub>n", "(* auto solved all, but I want to know what's going on. *)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>k \\<Gamma>.\n       image_mset nnf\n        (\\<^bold>\\<not> (Atom k), Atom k, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 2. \\<And>\\<Gamma>.\n       image_mset nnf (\\<bottom>, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (F, G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (F \\<^bold>\\<and>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (F \\<^bold>\\<or>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf\n         (\\<^bold>\\<not>\n           F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<or>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf\n         (\\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<and>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (F \\<^bold>\\<rightarrow>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 8. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf\n         (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<rightarrow>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 9. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (\\<^bold>\\<not>\n                              F), \\<Gamma>) \\<Rightarrow>\\<^sub>n", "case (NotOrNNF F G \\<Gamma>)"], ["proof (state)\nthis:\n  \\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  image_mset nnf\n   (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n\ngoal (9 subgoals):\n 1. \\<And>k \\<Gamma>.\n       image_mset nnf\n        (\\<^bold>\\<not> (Atom k), Atom k, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 2. \\<And>\\<Gamma>.\n       image_mset nnf (\\<bottom>, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (F, G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (F \\<^bold>\\<and>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (F \\<^bold>\\<or>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf\n         (\\<^bold>\\<not>\n           F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<or>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf\n         (\\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<and>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (F \\<^bold>\\<rightarrow>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 8. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf\n         (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<rightarrow>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 9. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (\\<^bold>\\<not>\n                              F), \\<Gamma>) \\<Rightarrow>\\<^sub>n", "from NotOrNNF.IH"], ["proof (chain)\npicking this:\n  image_mset nnf\n   (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n", "have \"nnf (\\<^bold>\\<not> F), nnf (\\<^bold>\\<not> G), image_mset nnf \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  image_mset nnf\n   (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. nnf (\\<^bold>\\<not>\n          F), nnf (\\<^bold>\\<not>\n                    G), image_mset nnf \\<Gamma> \\<Rightarrow>\\<^sub>n", "by simp"], ["proof (state)\nthis:\n  nnf (\\<^bold>\\<not>\n        F), nnf (\\<^bold>\\<not>\n                  G), image_mset nnf \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (9 subgoals):\n 1. \\<And>k \\<Gamma>.\n       image_mset nnf\n        (\\<^bold>\\<not> (Atom k), Atom k, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 2. \\<And>\\<Gamma>.\n       image_mset nnf (\\<bottom>, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (F, G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (F \\<^bold>\\<and>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (F \\<^bold>\\<or>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf\n         (\\<^bold>\\<not>\n           F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<or>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf\n         (\\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<and>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (F \\<^bold>\\<rightarrow>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 8. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf\n         (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<rightarrow>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 9. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (\\<^bold>\\<not>\n                              F), \\<Gamma>) \\<Rightarrow>\\<^sub>n", "with LSC.AndL"], ["proof (chain)\npicking this:\n  ?F, ?G, ?\\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  ?F \\<^bold>\\<and> ?G, ?\\<Gamma> \\<Rightarrow>\\<^sub>n\n  nnf (\\<^bold>\\<not>\n        F), nnf (\\<^bold>\\<not>\n                  G), image_mset nnf \\<Gamma> \\<Rightarrow>\\<^sub>n", "have \"nnf (\\<^bold>\\<not> F) \\<^bold>\\<and> nnf (\\<^bold>\\<not> G), image_mset nnf \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  ?F, ?G, ?\\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  ?F \\<^bold>\\<and> ?G, ?\\<Gamma> \\<Rightarrow>\\<^sub>n\n  nnf (\\<^bold>\\<not>\n        F), nnf (\\<^bold>\\<not>\n                  G), image_mset nnf \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. nnf (\\<^bold>\\<not> F) \\<^bold>\\<and>\n    nnf (\\<^bold>\\<not> G), image_mset nnf \\<Gamma> \\<Rightarrow>\\<^sub>n", "."], ["proof (state)\nthis:\n  nnf (\\<^bold>\\<not> F) \\<^bold>\\<and>\n  nnf (\\<^bold>\\<not> G), image_mset nnf \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (9 subgoals):\n 1. \\<And>k \\<Gamma>.\n       image_mset nnf\n        (\\<^bold>\\<not> (Atom k), Atom k, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 2. \\<And>\\<Gamma>.\n       image_mset nnf (\\<bottom>, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (F, G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (F \\<^bold>\\<and>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (F \\<^bold>\\<or>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf\n         (\\<^bold>\\<not>\n           F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<or>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf\n         (\\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<and>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (F \\<^bold>\\<rightarrow>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 8. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf\n         (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<rightarrow>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 9. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (\\<^bold>\\<not>\n                              F), \\<Gamma>) \\<Rightarrow>\\<^sub>n", "thus ?case"], ["proof (prove)\nusing this:\n  nnf (\\<^bold>\\<not> F) \\<^bold>\\<and>\n  nnf (\\<^bold>\\<not> G), image_mset nnf \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. image_mset nnf\n     (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>) \\<Rightarrow>\\<^sub>n", "by simp"], ["proof (state)\nthis:\n  image_mset nnf\n   (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n\ngoal (8 subgoals):\n 1. \\<And>k \\<Gamma>.\n       image_mset nnf\n        (\\<^bold>\\<not> (Atom k), Atom k, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 2. \\<And>\\<Gamma>.\n       image_mset nnf (\\<bottom>, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (F, G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (F \\<^bold>\\<and>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (F \\<^bold>\\<or>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf\n         (\\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<and>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (F \\<^bold>\\<rightarrow>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf\n         (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<rightarrow>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 8. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (\\<^bold>\\<not>\n                              F), \\<Gamma>) \\<Rightarrow>\\<^sub>n", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>k \\<Gamma>.\n       image_mset nnf\n        (\\<^bold>\\<not> (Atom k), Atom k, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 2. \\<And>\\<Gamma>.\n       image_mset nnf (\\<bottom>, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (F, G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (F \\<^bold>\\<and>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (F \\<^bold>\\<or>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf\n         (\\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<and>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (F \\<^bold>\\<rightarrow>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf\n         (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<rightarrow>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 8. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (\\<^bold>\\<not>\n                              F), \\<Gamma>) \\<Rightarrow>\\<^sub>n", "case (AndL F G \\<Gamma>)"], ["proof (state)\nthis:\n  F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  image_mset nnf (F, G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n\ngoal (8 subgoals):\n 1. \\<And>k \\<Gamma>.\n       image_mset nnf\n        (\\<^bold>\\<not> (Atom k), Atom k, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 2. \\<And>\\<Gamma>.\n       image_mset nnf (\\<bottom>, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (F, G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (F \\<^bold>\\<and>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (F \\<^bold>\\<or>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf\n         (\\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<and>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (F \\<^bold>\\<rightarrow>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf\n         (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<rightarrow>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 8. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (\\<^bold>\\<not>\n                              F), \\<Gamma>) \\<Rightarrow>\\<^sub>n", "from AndL.IH"], ["proof (chain)\npicking this:\n  image_mset nnf (F, G, \\<Gamma>) \\<Rightarrow>\\<^sub>n", "have \"nnf F, nnf G, image_mset nnf \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  image_mset nnf (F, G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. nnf F, nnf G, image_mset nnf \\<Gamma> \\<Rightarrow>\\<^sub>n", "by simp"], ["proof (state)\nthis:\n  nnf F, nnf G, image_mset nnf \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (8 subgoals):\n 1. \\<And>k \\<Gamma>.\n       image_mset nnf\n        (\\<^bold>\\<not> (Atom k), Atom k, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 2. \\<And>\\<Gamma>.\n       image_mset nnf (\\<bottom>, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (F, G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (F \\<^bold>\\<and>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (F \\<^bold>\\<or>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf\n         (\\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<and>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (F \\<^bold>\\<rightarrow>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf\n         (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<rightarrow>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 8. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (\\<^bold>\\<not>\n                              F), \\<Gamma>) \\<Rightarrow>\\<^sub>n", "with LSC.AndL[where 'a='a]"], ["proof (chain)\npicking this:\n  ?F, ?G, ?\\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  ?F \\<^bold>\\<and> ?G, ?\\<Gamma> \\<Rightarrow>\\<^sub>n\n  nnf F, nnf G, image_mset nnf \\<Gamma> \\<Rightarrow>\\<^sub>n", "have \"nnf F \\<^bold>\\<and> nnf G, image_mset nnf \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  ?F, ?G, ?\\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  ?F \\<^bold>\\<and> ?G, ?\\<Gamma> \\<Rightarrow>\\<^sub>n\n  nnf F, nnf G, image_mset nnf \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. nnf F \\<^bold>\\<and>\n    nnf G, image_mset nnf \\<Gamma> \\<Rightarrow>\\<^sub>n", "by simp"], ["proof (state)\nthis:\n  nnf F \\<^bold>\\<and> nnf G, image_mset nnf \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (8 subgoals):\n 1. \\<And>k \\<Gamma>.\n       image_mset nnf\n        (\\<^bold>\\<not> (Atom k), Atom k, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 2. \\<And>\\<Gamma>.\n       image_mset nnf (\\<bottom>, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (F, G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (F \\<^bold>\\<and>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (F \\<^bold>\\<or>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf\n         (\\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<and>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (F \\<^bold>\\<rightarrow>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf\n         (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<rightarrow>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 8. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (\\<^bold>\\<not>\n                              F), \\<Gamma>) \\<Rightarrow>\\<^sub>n", "thus ?case"], ["proof (prove)\nusing this:\n  nnf F \\<^bold>\\<and> nnf G, image_mset nnf \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. image_mset nnf (F \\<^bold>\\<and> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n", "by simp"], ["proof (state)\nthis:\n  image_mset nnf (F \\<^bold>\\<and> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n\ngoal (7 subgoals):\n 1. \\<And>k \\<Gamma>.\n       image_mset nnf\n        (\\<^bold>\\<not> (Atom k), Atom k, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 2. \\<And>\\<Gamma>.\n       image_mset nnf (\\<bottom>, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (F \\<^bold>\\<or>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf\n         (\\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<and>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (F \\<^bold>\\<rightarrow>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf\n         (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<rightarrow>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (\\<^bold>\\<not>\n                              F), \\<Gamma>) \\<Rightarrow>\\<^sub>n", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>k \\<Gamma>.\n       image_mset nnf\n        (\\<^bold>\\<not> (Atom k), Atom k, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 2. \\<And>\\<Gamma>.\n       image_mset nnf (\\<bottom>, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (F \\<^bold>\\<or>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf\n         (\\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<and>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (F \\<^bold>\\<rightarrow>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf\n         (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<rightarrow>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset nnf (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> image_mset nnf\n                          (\\<^bold>\\<not>\n                            (\\<^bold>\\<not>\n                              F), \\<Gamma>) \\<Rightarrow>\\<^sub>n", "qed (auto, metis add_mset_commute)"], ["", "lemma LSC_NNF_back: \"image_mset nnf \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. image_mset nnf \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow>\\<^sub>n", "proof(induction \"image_mset nnf \\<Gamma>\" rule: LSC.induct)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>k \\<Gamma>'.\n       \\<^bold>\\<not> (Atom k), Atom k, \\<Gamma>' =\n       image_mset nnf \\<Gamma> \\<Longrightarrow>\n       \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>\\<Gamma>'.\n       \\<bottom>, \\<Gamma>' = image_mset nnf \\<Gamma> \\<Longrightarrow>\n       \\<Gamma> \\<Rightarrow>\\<^sub>n\n 3. \\<And>F G \\<Gamma>'.\n       \\<lbrakk>F, G, \\<Gamma>' \\<Rightarrow>\\<^sub>n;\n        F, G, \\<Gamma>' = image_mset nnf \\<Gamma> \\<Longrightarrow>\n        \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<and> G, \\<Gamma>' = image_mset nnf \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma>' G.\n       \\<lbrakk>F, \\<Gamma>' \\<Rightarrow>\\<^sub>n;\n        F, \\<Gamma>' = image_mset nnf \\<Gamma> \\<Longrightarrow>\n        \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma>' \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma>' = image_mset nnf \\<Gamma> \\<Longrightarrow>\n        \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<or> G, \\<Gamma>' = image_mset nnf \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 5. \\<And>F G \\<Gamma>'.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma>' \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>' =\n        image_mset nnf \\<Gamma> \\<Longrightarrow>\n        \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>' =\n        image_mset nnf \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma>' G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma>' \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> F, \\<Gamma>' =\n        image_mset nnf \\<Gamma> \\<Longrightarrow>\n        \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma>' \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma>' =\n        image_mset nnf \\<Gamma> \\<Longrightarrow>\n        \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>' =\n        image_mset nnf \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 7. \\<And>F \\<Gamma>' G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma>' \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> F, \\<Gamma>' =\n        image_mset nnf \\<Gamma> \\<Longrightarrow>\n        \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma>' \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma>' = image_mset nnf \\<Gamma> \\<Longrightarrow>\n        \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F \\<^bold>\\<rightarrow> G, \\<Gamma>' =\n        image_mset nnf \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 8. \\<And>F G \\<Gamma>'.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma>' \\<Rightarrow>\\<^sub>n;\n        F, \\<^bold>\\<not> G, \\<Gamma>' =\n        image_mset nnf \\<Gamma> \\<Longrightarrow>\n        \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G), \\<Gamma>' =\n        image_mset nnf \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n\n 9. \\<And>F \\<Gamma>'.\n       \\<lbrakk>F, \\<Gamma>' \\<Rightarrow>\\<^sub>n;\n        F, \\<Gamma>' = image_mset nnf \\<Gamma> \\<Longrightarrow>\n        \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>' =\n        image_mset nnf \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow>\\<^sub>n", "oops"], ["", "(* should be possible, but I don't need it. *)"], ["", "text\\<open>If we got rid of the rules for NNF, we could call it Gentzen-Sch?tte-calculus. But it turned out that not doing that works quite fine.\\<close>"], ["", "text\\<open>If you stare at left-handed Sequent calcului for too long, and they start staring back:\nTry imagining that there is a @{term \\<bottom>} on the right hand side.\nAlso, bear in mind that provability of @{term \"\\<Gamma> \\<Rightarrow>\\<^sub>n\"} and satisfiability of @{term \"\\<Gamma>\"} are opposites here.\\<close>"], ["", "lemma LHCut:\n  assumes \"F,\\<Gamma> \\<Rightarrow>\\<^sub>n\" \"\\<^bold>\\<not>F, \\<Gamma> \\<Rightarrow>\\<^sub>n\"\n  shows \"\\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow>\\<^sub>n", "using assms"], ["proof (prove)\nusing this:\n  F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow>\\<^sub>n", "unfolding SC_LSC[symmetric]"], ["proof (prove)\nusing this:\n  F, \\<Gamma> \\<Rightarrow> {#}\n  \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow> {#}\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> {#}", "using NotL_inv cut"], ["proof (prove)\nusing this:\n  F, \\<Gamma> \\<Rightarrow> {#}\n  \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow> {#}\n  \\<^bold>\\<not> ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<Longrightarrow>\n  ?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta>\n  \\<lbrakk>?\\<Gamma> \\<Rightarrow> ?F, ?\\<Delta>;\n   ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<Rightarrow> ?\\<Delta>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow> {#}", "by blast"], ["", "lemma \n shows LSC_AndL_inv: \"F\\<^bold>\\<and>G,\\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow> F,G,\\<Gamma> \\<Rightarrow>\\<^sub>n\"\n and   LSC_OrL_inv: \"F\\<^bold>\\<or>G,\\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow> F,\\<Gamma> \\<Rightarrow>\\<^sub>n \\<and> G,\\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n     F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n) &&&\n    (F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n     F, \\<Gamma> \\<Rightarrow>\\<^sub>n \\<and>\n     G, \\<Gamma> \\<Rightarrow>\\<^sub>n)", "using SC_LSC AndL_inv OrL_inv"], ["proof (prove)\nusing this:\n  ?\\<Gamma> \\<Rightarrow> {#} = ?\\<Gamma> \\<Rightarrow>\\<^sub>n\n  ?F \\<^bold>\\<and> ?G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<Longrightarrow>\n  ?F, ?G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta>\n  ?F \\<^bold>\\<or> ?G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<Longrightarrow>\n  ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<and>\n  ?G, ?\\<Gamma> \\<Rightarrow> ?\\<Delta>\n\ngoal (1 subgoal):\n 1. (F \\<^bold>\\<and> G, \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n     F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n) &&&\n    (F \\<^bold>\\<or> G, \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n     F, \\<Gamma> \\<Rightarrow>\\<^sub>n \\<and>\n     G, \\<Gamma> \\<Rightarrow>\\<^sub>n)", "by blast+"], ["", "lemmas LSC_invs = LSC_AndL_inv LSC_OrL_inv"], ["", "(* these are actually suitable as dest rules. But the proofs are usually slow, so I'd rather not. *)\n\n(* direct proof is easy here and it saves us the hassle of the nnf-assumption *)"], ["", "lemma LSC_weaken_set: \"\\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow> \\<Gamma> + \\<Theta> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n    \\<Gamma> + \\<Theta> \\<Rightarrow>\\<^sub>n", "by(induction rule: LSC.induct) (auto simp: add.assoc)"], ["", "lemma LSC_weaken: \"\\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow> F,\\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow>\\<^sub>n", "using LSC_weaken_set"], ["proof (prove)\nusing this:\n  ?\\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  ?\\<Gamma> + ?\\<Theta> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n    F, \\<Gamma> \\<Rightarrow>\\<^sub>n", "by (metis add_mset_add_single)"], ["", "lemma LSC_Contract:\n  assumes sfp: \"F, F, \\<Gamma> \\<Rightarrow>\\<^sub>n\"\n  shows \"F, \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow>\\<^sub>n", "using SC_LSC contractL sfp"], ["proof (prove)\nusing this:\n  ?\\<Gamma> \\<Rightarrow> {#} = ?\\<Gamma> \\<Rightarrow>\\<^sub>n\n  ?F, ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta> \\<Longrightarrow>\n  ?F, ?\\<Gamma> \\<Rightarrow> ?\\<Delta>\n  F, F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow>\\<^sub>n", "by blast"], ["", "lemma cnf:\n  shows \n    \"F \\<^bold>\\<or> (G \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n \\<longleftrightarrow> (F \\<^bold>\\<or> G) \\<^bold>\\<and> (F \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n\" (is \"?l1 \\<longleftrightarrow> ?r1\")\n    \"(G \\<^bold>\\<and> H) \\<^bold>\\<or> F, \\<Gamma> \\<Rightarrow>\\<^sub>n \\<longleftrightarrow> (G \\<^bold>\\<or> F) \\<^bold>\\<and> (H \\<^bold>\\<or> F), \\<Gamma> \\<Rightarrow>\\<^sub>n\" (is \"?l2 \\<longleftrightarrow> ?r2\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<^bold>\\<or> (G \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    (F \\<^bold>\\<or> G) \\<^bold>\\<and>\n    (F \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n &&&\n    (G \\<^bold>\\<and> H) \\<^bold>\\<or> F, \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    (G \\<^bold>\\<or> F) \\<^bold>\\<and>\n    (H \\<^bold>\\<or> F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. F \\<^bold>\\<or> (G \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    (F \\<^bold>\\<or> G) \\<^bold>\\<and>\n    (F \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. (G \\<^bold>\\<and> H) \\<^bold>\\<or> F, \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    (G \\<^bold>\\<or> F) \\<^bold>\\<and>\n    (H \\<^bold>\\<or> F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "have GO(* get out *)[simp]:   \n    \"F,G,S \\<Rightarrow>\\<^sub>n \\<Longrightarrow> G,F,S \\<Rightarrow>\\<^sub>n\"\n    for F G :: \"'a formula\" and S"], ["proof (prove)\ngoal (1 subgoal):\n 1. F, G, S \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n    G, F, S \\<Rightarrow>\\<^sub>n", "by (simp add: add_mset_commute)"], ["proof (state)\nthis:\n  ?F, ?G, ?S \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  ?G, ?F, ?S \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. F \\<^bold>\\<or> (G \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    (F \\<^bold>\\<or> G) \\<^bold>\\<and>\n    (F \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. (G \\<^bold>\\<and> H) \\<^bold>\\<or> F, \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    (G \\<^bold>\\<or> F) \\<^bold>\\<and>\n    (H \\<^bold>\\<or> F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "have ?r1 if ?l1"], ["proof (prove)\ngoal (1 subgoal):\n 1. (F \\<^bold>\\<or> G) \\<^bold>\\<and>\n    (F \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (F \\<^bold>\\<or> G) \\<^bold>\\<and>\n    (F \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n", "from \\<open>?l1\\<close>[THEN LSC_invs(2)]"], ["proof (chain)\npicking this:\n  F, \\<Gamma> \\<Rightarrow>\\<^sub>n \\<and>\n  G \\<^bold>\\<and> H, \\<Gamma> \\<Rightarrow>\\<^sub>n", "have f: \"F, \\<Gamma> \\<Rightarrow>\\<^sub>n\" \"G \\<^bold>\\<and> H, \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  F, \\<Gamma> \\<Rightarrow>\\<^sub>n \\<and>\n  G \\<^bold>\\<and> H, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow>\\<^sub>n &&&\n    G \\<^bold>\\<and> H, \\<Gamma> \\<Rightarrow>\\<^sub>n", "by simp_all"], ["proof (state)\nthis:\n  F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  G \\<^bold>\\<and> H, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. (F \\<^bold>\\<or> G) \\<^bold>\\<and>\n    (F \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n", "from this(2)[THEN LSC_invs(1)]"], ["proof (chain)\npicking this:\n  G, H, \\<Gamma> \\<Rightarrow>\\<^sub>n", "have gh: \"G, H, \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  G, H, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. G, H, \\<Gamma> \\<Rightarrow>\\<^sub>n", "by simp"], ["proof (state)\nthis:\n  G, H, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. (F \\<^bold>\\<or> G) \\<^bold>\\<and>\n    (F \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n", "show ?r1"], ["proof (prove)\ngoal (1 subgoal):\n 1. (F \\<^bold>\\<or> G) \\<^bold>\\<and>\n    (F \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n", "using f gh"], ["proof (prove)\nusing this:\n  F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  G \\<^bold>\\<and> H, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  G, H, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. (F \\<^bold>\\<or> G) \\<^bold>\\<and>\n    (F \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n", "by(auto dest!: LSC_invs simp: LSC_weaken)"], ["proof (state)\nthis:\n  (F \\<^bold>\\<or> G) \\<^bold>\\<and>\n  (F \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  F \\<^bold>\\<or>\n  (G \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  (F \\<^bold>\\<or> G) \\<^bold>\\<and>\n  (F \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. F \\<^bold>\\<or> (G \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    (F \\<^bold>\\<or> G) \\<^bold>\\<and>\n    (F \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. (G \\<^bold>\\<and> H) \\<^bold>\\<or> F, \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    (G \\<^bold>\\<or> F) \\<^bold>\\<and>\n    (H \\<^bold>\\<or> F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "moreover"], ["proof (state)\nthis:\n  F \\<^bold>\\<or>\n  (G \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  (F \\<^bold>\\<or> G) \\<^bold>\\<and>\n  (F \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. F \\<^bold>\\<or> (G \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    (F \\<^bold>\\<or> G) \\<^bold>\\<and>\n    (F \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. (G \\<^bold>\\<and> H) \\<^bold>\\<or> F, \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    (G \\<^bold>\\<or> F) \\<^bold>\\<and>\n    (H \\<^bold>\\<or> F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "have ?r2 if ?l2"], ["proof (prove)\ngoal (1 subgoal):\n 1. (G \\<^bold>\\<or> F) \\<^bold>\\<and>\n    (H \\<^bold>\\<or> F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (G \\<^bold>\\<or> F) \\<^bold>\\<and>\n    (H \\<^bold>\\<or> F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "from \\<open>?l2\\<close>"], ["proof (chain)\npicking this:\n  (G \\<^bold>\\<and> H) \\<^bold>\\<or> F, \\<Gamma> \\<Rightarrow>\\<^sub>n", "have f: \"F, \\<Gamma> \\<Rightarrow>\\<^sub>n\" \"G, H, \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  (G \\<^bold>\\<and> H) \\<^bold>\\<or> F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow>\\<^sub>n &&&\n    G, H, \\<Gamma> \\<Rightarrow>\\<^sub>n", "by(auto dest!: LSC_invs)"], ["proof (state)\nthis:\n  F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  G, H, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. (G \\<^bold>\\<or> F) \\<^bold>\\<and>\n    (H \\<^bold>\\<or> F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "thus ?r2"], ["proof (prove)\nusing this:\n  F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  G, H, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. (G \\<^bold>\\<or> F) \\<^bold>\\<and>\n    (H \\<^bold>\\<or> F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "by(auto dest!: LSC_invs simp: LSC_weaken)"], ["proof (state)\nthis:\n  (G \\<^bold>\\<or> F) \\<^bold>\\<and>\n  (H \\<^bold>\\<or> F), \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (G \\<^bold>\\<and> H) \\<^bold>\\<or>\n  F, \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  (G \\<^bold>\\<or> F) \\<^bold>\\<and>\n  (H \\<^bold>\\<or> F), \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. F \\<^bold>\\<or> (G \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    (F \\<^bold>\\<or> G) \\<^bold>\\<and>\n    (F \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. (G \\<^bold>\\<and> H) \\<^bold>\\<or> F, \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    (G \\<^bold>\\<or> F) \\<^bold>\\<and>\n    (H \\<^bold>\\<or> F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "moreover"], ["proof (state)\nthis:\n  (G \\<^bold>\\<and> H) \\<^bold>\\<or>\n  F, \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  (G \\<^bold>\\<or> F) \\<^bold>\\<and>\n  (H \\<^bold>\\<or> F), \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. F \\<^bold>\\<or> (G \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    (F \\<^bold>\\<or> G) \\<^bold>\\<and>\n    (F \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. (G \\<^bold>\\<and> H) \\<^bold>\\<or> F, \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    (G \\<^bold>\\<or> F) \\<^bold>\\<and>\n    (H \\<^bold>\\<or> F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "have ?l1 if ?r1"], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<^bold>\\<or> (G \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. F \\<^bold>\\<or> (G \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n", "from \\<open>?r1\\<close>[THEN LSC_invs(1)]"], ["proof (chain)\npicking this:\n  F \\<^bold>\\<or> G, F \\<^bold>\\<or> H, \\<Gamma> \\<Rightarrow>\\<^sub>n", "have *: \"F \\<^bold>\\<or> G, F \\<^bold>\\<or> H, \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  F \\<^bold>\\<or> G, F \\<^bold>\\<or> H, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. F \\<^bold>\\<or> G, F \\<^bold>\\<or> H, \\<Gamma> \\<Rightarrow>\\<^sub>n", "by simp"], ["proof (state)\nthis:\n  F \\<^bold>\\<or> G, F \\<^bold>\\<or> H, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. F \\<^bold>\\<or> (G \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n", "hence \"F, \\<Gamma> \\<Rightarrow>\\<^sub>n\" \"G, H, \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  F \\<^bold>\\<or> G, F \\<^bold>\\<or> H, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow>\\<^sub>n &&&\n    G, H, \\<Gamma> \\<Rightarrow>\\<^sub>n", "by (auto elim!: LSC_Contract dest!: LSC_invs)"], ["proof (state)\nthis:\n  F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  G, H, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. F \\<^bold>\\<or> (G \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n", "thus ?l1"], ["proof (prove)\nusing this:\n  F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  G, H, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. F \\<^bold>\\<or> (G \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n", "by(intro LSC.intros)"], ["proof (state)\nthis:\n  F \\<^bold>\\<or> (G \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (F \\<^bold>\\<or> G) \\<^bold>\\<and>\n  (F \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  F \\<^bold>\\<or> (G \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. F \\<^bold>\\<or> (G \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    (F \\<^bold>\\<or> G) \\<^bold>\\<and>\n    (F \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. (G \\<^bold>\\<and> H) \\<^bold>\\<or> F, \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    (G \\<^bold>\\<or> F) \\<^bold>\\<and>\n    (H \\<^bold>\\<or> F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "moreover"], ["proof (state)\nthis:\n  (F \\<^bold>\\<or> G) \\<^bold>\\<and>\n  (F \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  F \\<^bold>\\<or> (G \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. F \\<^bold>\\<or> (G \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    (F \\<^bold>\\<or> G) \\<^bold>\\<and>\n    (F \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. (G \\<^bold>\\<and> H) \\<^bold>\\<or> F, \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    (G \\<^bold>\\<or> F) \\<^bold>\\<and>\n    (H \\<^bold>\\<or> F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "have ?l2 if ?r2"], ["proof (prove)\ngoal (1 subgoal):\n 1. (G \\<^bold>\\<and> H) \\<^bold>\\<or> F, \\<Gamma> \\<Rightarrow>\\<^sub>n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (G \\<^bold>\\<and> H) \\<^bold>\\<or> F, \\<Gamma> \\<Rightarrow>\\<^sub>n", "from \\<open>?r2\\<close>[THEN LSC_invs(1)]"], ["proof (chain)\npicking this:\n  G \\<^bold>\\<or> F, H \\<^bold>\\<or> F, \\<Gamma> \\<Rightarrow>\\<^sub>n", "have *: \"G \\<^bold>\\<or> F, H \\<^bold>\\<or> F, \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  G \\<^bold>\\<or> F, H \\<^bold>\\<or> F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. G \\<^bold>\\<or> F, H \\<^bold>\\<or> F, \\<Gamma> \\<Rightarrow>\\<^sub>n", "by simp"], ["proof (state)\nthis:\n  G \\<^bold>\\<or> F, H \\<^bold>\\<or> F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. (G \\<^bold>\\<and> H) \\<^bold>\\<or> F, \\<Gamma> \\<Rightarrow>\\<^sub>n", "hence \"F, \\<Gamma> \\<Rightarrow>\\<^sub>n\" \"G, H, \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  G \\<^bold>\\<or> F, H \\<^bold>\\<or> F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. F, \\<Gamma> \\<Rightarrow>\\<^sub>n &&&\n    G, H, \\<Gamma> \\<Rightarrow>\\<^sub>n", "by(auto elim!: LSC_Contract dest!: LSC_invs)"], ["proof (state)\nthis:\n  F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  G, H, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. (G \\<^bold>\\<and> H) \\<^bold>\\<or> F, \\<Gamma> \\<Rightarrow>\\<^sub>n", "thus ?l2"], ["proof (prove)\nusing this:\n  F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  G, H, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. (G \\<^bold>\\<and> H) \\<^bold>\\<or> F, \\<Gamma> \\<Rightarrow>\\<^sub>n", "by(intro LSC.intros)"], ["proof (state)\nthis:\n  (G \\<^bold>\\<and> H) \\<^bold>\\<or> F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (G \\<^bold>\\<or> F) \\<^bold>\\<and>\n  (H \\<^bold>\\<or> F), \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  (G \\<^bold>\\<and> H) \\<^bold>\\<or> F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. F \\<^bold>\\<or> (G \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    (F \\<^bold>\\<or> G) \\<^bold>\\<and>\n    (F \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. (G \\<^bold>\\<and> H) \\<^bold>\\<or> F, \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    (G \\<^bold>\\<or> F) \\<^bold>\\<and>\n    (H \\<^bold>\\<or> F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "ultimately"], ["proof (chain)\npicking this:\n  F \\<^bold>\\<or>\n  (G \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  (F \\<^bold>\\<or> G) \\<^bold>\\<and>\n  (F \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n\n  (G \\<^bold>\\<and> H) \\<^bold>\\<or>\n  F, \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  (G \\<^bold>\\<or> F) \\<^bold>\\<and>\n  (H \\<^bold>\\<or> F), \\<Gamma> \\<Rightarrow>\\<^sub>n\n  (F \\<^bold>\\<or> G) \\<^bold>\\<and>\n  (F \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  F \\<^bold>\\<or> (G \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n\n  (G \\<^bold>\\<or> F) \\<^bold>\\<and>\n  (H \\<^bold>\\<or> F), \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  (G \\<^bold>\\<and> H) \\<^bold>\\<or> F, \\<Gamma> \\<Rightarrow>\\<^sub>n", "show \"?l1 \\<longleftrightarrow> ?r1\" \"?l2 \\<longleftrightarrow> ?r2\""], ["proof (prove)\nusing this:\n  F \\<^bold>\\<or>\n  (G \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  (F \\<^bold>\\<or> G) \\<^bold>\\<and>\n  (F \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n\n  (G \\<^bold>\\<and> H) \\<^bold>\\<or>\n  F, \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  (G \\<^bold>\\<or> F) \\<^bold>\\<and>\n  (H \\<^bold>\\<or> F), \\<Gamma> \\<Rightarrow>\\<^sub>n\n  (F \\<^bold>\\<or> G) \\<^bold>\\<and>\n  (F \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  F \\<^bold>\\<or> (G \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n\n  (G \\<^bold>\\<or> F) \\<^bold>\\<and>\n  (H \\<^bold>\\<or> F), \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  (G \\<^bold>\\<and> H) \\<^bold>\\<or> F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. F \\<^bold>\\<or> (G \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    (F \\<^bold>\\<or> G) \\<^bold>\\<and>\n    (F \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n &&&\n    (G \\<^bold>\\<and> H) \\<^bold>\\<or> F, \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    (G \\<^bold>\\<or> F) \\<^bold>\\<and>\n    (H \\<^bold>\\<or> F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "by argo+"], ["proof (state)\nthis:\n  F \\<^bold>\\<or> (G \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n =\n  (F \\<^bold>\\<or> G) \\<^bold>\\<and>\n  (F \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n\n  (G \\<^bold>\\<and> H) \\<^bold>\\<or> F, \\<Gamma> \\<Rightarrow>\\<^sub>n =\n  (G \\<^bold>\\<or> F) \\<^bold>\\<and>\n  (H \\<^bold>\\<or> F), \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>\n  Interestingly, the DNF congruences are a lot easier to show, requiring neither weakening nor contraction.\n  The reasons are to be sought in the asymmetries between the rules for @{const And} and @{const Or}.\n\\<close>"], ["", "lemma dnf:\n  shows \n    \"F \\<^bold>\\<and> (G \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n \\<longleftrightarrow> (F \\<^bold>\\<and> G) \\<^bold>\\<or> (F \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n\" (is \"?t1\")\n    \"(G \\<^bold>\\<or> H) \\<^bold>\\<and> F, \\<Gamma> \\<Rightarrow>\\<^sub>n \\<longleftrightarrow> (G \\<^bold>\\<and> F) \\<^bold>\\<or> (H \\<^bold>\\<and> F), \\<Gamma> \\<Rightarrow>\\<^sub>n\" (is \"?t2\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<^bold>\\<and> (G \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    (F \\<^bold>\\<and> G) \\<^bold>\\<or>\n    (F \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n &&&\n    (G \\<^bold>\\<or> H) \\<^bold>\\<and> F, \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    (G \\<^bold>\\<and> F) \\<^bold>\\<or>\n    (H \\<^bold>\\<and> F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. F \\<^bold>\\<and> (G \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    (F \\<^bold>\\<and> G) \\<^bold>\\<or>\n    (F \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. (G \\<^bold>\\<or> H) \\<^bold>\\<and> F, \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    (G \\<^bold>\\<and> F) \\<^bold>\\<or>\n    (H \\<^bold>\\<and> F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "have GO(* get out *)[simp]:\n    \"F,G,S \\<Rightarrow>\\<^sub>n \\<Longrightarrow> G,F,S \\<Rightarrow>\\<^sub>n\"\n    for F G H I J S"], ["proof (prove)\ngoal (1 subgoal):\n 1. F, G, S \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n    G, F, S \\<Rightarrow>\\<^sub>n", "by(simp_all add: add_mset_commute)"], ["proof (state)\nthis:\n  ?F1, ?G1, ?S1 \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  ?G1, ?F1, ?S1 \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. F \\<^bold>\\<and> (G \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    (F \\<^bold>\\<and> G) \\<^bold>\\<or>\n    (F \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. (G \\<^bold>\\<or> H) \\<^bold>\\<and> F, \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    (G \\<^bold>\\<and> F) \\<^bold>\\<or>\n    (H \\<^bold>\\<and> F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "show ?t1 ?t2"], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<^bold>\\<and> (G \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    (F \\<^bold>\\<and> G) \\<^bold>\\<or>\n    (F \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n &&&\n    (G \\<^bold>\\<or> H) \\<^bold>\\<and> F, \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    (G \\<^bold>\\<and> F) \\<^bold>\\<or>\n    (H \\<^bold>\\<and> F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "by(auto dest!: LSC_invs)"], ["proof (state)\nthis:\n  F \\<^bold>\\<and> (G \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n =\n  (F \\<^bold>\\<and> G) \\<^bold>\\<or>\n  (F \\<^bold>\\<and> H), \\<Gamma> \\<Rightarrow>\\<^sub>n\n  (G \\<^bold>\\<or> H) \\<^bold>\\<and> F, \\<Gamma> \\<Rightarrow>\\<^sub>n =\n  (G \\<^bold>\\<and> F) \\<^bold>\\<or>\n  (H \\<^bold>\\<and> F), \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma LSC_sim_Resolution1:\n  assumes R: \"S \\<^bold>\\<or> T, \\<Gamma> \\<Rightarrow>\\<^sub>n\"\n  shows \"Atom k \\<^bold>\\<or> S, (\\<^bold>\\<not>(Atom k)) \\<^bold>\\<or> T, \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Atom k \\<^bold>\\<or>\n    S, \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n       T, \\<Gamma> \\<Rightarrow>\\<^sub>n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Atom k \\<^bold>\\<or>\n    S, \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n       T, \\<Gamma> \\<Rightarrow>\\<^sub>n", "from R"], ["proof (chain)\npicking this:\n  S \\<^bold>\\<or> T, \\<Gamma> \\<Rightarrow>\\<^sub>n", "have r: \"T, \\<Gamma> \\<Rightarrow>\\<^sub>n\" \"S, \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  S \\<^bold>\\<or> T, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. T, \\<Gamma> \\<Rightarrow>\\<^sub>n &&& S, \\<Gamma> \\<Rightarrow>\\<^sub>n", "by(auto dest: LSC_invs)"], ["proof (state)\nthis:\n  T, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  S, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. Atom k \\<^bold>\\<or>\n    S, \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n       T, \\<Gamma> \\<Rightarrow>\\<^sub>n", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Atom k \\<^bold>\\<or>\n    S, \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n       T, \\<Gamma> \\<Rightarrow>\\<^sub>n", "proof(rule LHCut[where F=\"Atom k\"])"], ["proof (state)\ngoal (2 subgoals):\n 1. Atom\n     k, Atom k \\<^bold>\\<or>\n        S, \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n           T, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<^bold>\\<not>\n     (Atom\n       k), Atom k \\<^bold>\\<or>\n           S, \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n              T, \\<Gamma> \\<Rightarrow>\\<^sub>n", "have 2: \"T, Atom k, Atom k \\<^bold>\\<or> S, \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T, Atom k, Atom k \\<^bold>\\<or> S, \\<Gamma> \\<Rightarrow>\\<^sub>n", "using LSC_weaken r(1)"], ["proof (prove)\nusing this:\n  ?\\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  ?F, ?\\<Gamma> \\<Rightarrow>\\<^sub>n\n  T, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. T, Atom k, Atom k \\<^bold>\\<or> S, \\<Gamma> \\<Rightarrow>\\<^sub>n", "by auto"], ["proof (state)\nthis:\n  T, Atom k, Atom k \\<^bold>\\<or> S, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. Atom\n     k, Atom k \\<^bold>\\<or>\n        S, \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n           T, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<^bold>\\<not>\n     (Atom\n       k), Atom k \\<^bold>\\<or>\n           S, \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n              T, \\<Gamma> \\<Rightarrow>\\<^sub>n", "hence \" \\<^bold>\\<not> (Atom k) \\<^bold>\\<or> T, Atom k, Atom k \\<^bold>\\<or> S, \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  T, Atom k, Atom k \\<^bold>\\<or> S, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n    T, Atom k, Atom k \\<^bold>\\<or> S, \\<Gamma> \\<Rightarrow>\\<^sub>n", "by auto"], ["proof (state)\nthis:\n  \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n  T, Atom k, Atom k \\<^bold>\\<or> S, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. Atom\n     k, Atom k \\<^bold>\\<or>\n        S, \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n           T, \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<^bold>\\<not>\n     (Atom\n       k), Atom k \\<^bold>\\<or>\n           S, \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n              T, \\<Gamma> \\<Rightarrow>\\<^sub>n", "thus \"Atom k, Atom k \\<^bold>\\<or> S, \\<^bold>\\<not> (Atom k) \\<^bold>\\<or> T, \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n  T, Atom k, Atom k \\<^bold>\\<or> S, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. Atom\n     k, Atom k \\<^bold>\\<or>\n        S, \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n           T, \\<Gamma> \\<Rightarrow>\\<^sub>n", "by(auto dest!: LSC_invs) (metis add_mset_commute)"], ["proof (state)\nthis:\n  Atom\n   k, Atom k \\<^bold>\\<or>\n      S, \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n         T, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<^bold>\\<not>\n     (Atom\n       k), Atom k \\<^bold>\\<or>\n           S, \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n              T, \\<Gamma> \\<Rightarrow>\\<^sub>n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<^bold>\\<not>\n     (Atom\n       k), Atom k \\<^bold>\\<or>\n           S, \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n              T, \\<Gamma> \\<Rightarrow>\\<^sub>n", "text\\<open>analogously\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<^bold>\\<not>\n     (Atom\n       k), Atom k \\<^bold>\\<or>\n           S, \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n              T, \\<Gamma> \\<Rightarrow>\\<^sub>n", "(*<*)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<^bold>\\<not>\n     (Atom\n       k), Atom k \\<^bold>\\<or>\n           S, \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n              T, \\<Gamma> \\<Rightarrow>\\<^sub>n", "have 2: \"S, \\<^bold>\\<not>(Atom k), \\<^bold>\\<not>(Atom k) \\<^bold>\\<or> T, \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S, \\<^bold>\\<not>\n        (Atom\n          k), \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n              T, \\<Gamma> \\<Rightarrow>\\<^sub>n", "using LSC_weaken r(2)"], ["proof (prove)\nusing this:\n  ?\\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  ?F, ?\\<Gamma> \\<Rightarrow>\\<^sub>n\n  S, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. S, \\<^bold>\\<not>\n        (Atom\n          k), \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n              T, \\<Gamma> \\<Rightarrow>\\<^sub>n", "by auto"], ["proof (state)\nthis:\n  S, \\<^bold>\\<not>\n      (Atom\n        k), \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n            T, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<^bold>\\<not>\n     (Atom\n       k), Atom k \\<^bold>\\<or>\n           S, \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n              T, \\<Gamma> \\<Rightarrow>\\<^sub>n", "hence \"Atom k \\<^bold>\\<or> S, \\<^bold>\\<not> (Atom k), \\<^bold>\\<not> (Atom k) \\<^bold>\\<or> T, \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  S, \\<^bold>\\<not>\n      (Atom\n        k), \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n            T, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. Atom k \\<^bold>\\<or>\n    S, \\<^bold>\\<not>\n        (Atom\n          k), \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n              T, \\<Gamma> \\<Rightarrow>\\<^sub>n", "using LSC_weaken"], ["proof (prove)\nusing this:\n  S, \\<^bold>\\<not>\n      (Atom\n        k), \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n            T, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  ?\\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  ?F, ?\\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. Atom k \\<^bold>\\<or>\n    S, \\<^bold>\\<not>\n        (Atom\n          k), \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n              T, \\<Gamma> \\<Rightarrow>\\<^sub>n", "by(auto dest!: LSC_invs) blast"], ["proof (state)\nthis:\n  Atom k \\<^bold>\\<or>\n  S, \\<^bold>\\<not>\n      (Atom\n        k), \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n            T, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<^bold>\\<not>\n     (Atom\n       k), Atom k \\<^bold>\\<or>\n           S, \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n              T, \\<Gamma> \\<Rightarrow>\\<^sub>n", "from this"], ["proof (chain)\npicking this:\n  Atom k \\<^bold>\\<or>\n  S, \\<^bold>\\<not>\n      (Atom\n        k), \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n            T, \\<Gamma> \\<Rightarrow>\\<^sub>n", "(*>*)"], ["proof (chain)\npicking this:\n  Atom k \\<^bold>\\<or>\n  S, \\<^bold>\\<not>\n      (Atom\n        k), \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n            T, \\<Gamma> \\<Rightarrow>\\<^sub>n", "show \"\\<^bold>\\<not> (Atom k), Atom k \\<^bold>\\<or> S, \\<^bold>\\<not> (Atom k) \\<^bold>\\<or> T, \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  Atom k \\<^bold>\\<or>\n  S, \\<^bold>\\<not>\n      (Atom\n        k), \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n            T, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<^bold>\\<not>\n     (Atom\n       k), Atom k \\<^bold>\\<or>\n           S, \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n              T, \\<Gamma> \\<Rightarrow>\\<^sub>n", "by simp"], ["proof (state)\nthis:\n  \\<^bold>\\<not>\n   (Atom\n     k), Atom k \\<^bold>\\<or>\n         S, \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n            T, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Atom k \\<^bold>\\<or>\n  S, \\<^bold>\\<not> (Atom k) \\<^bold>\\<or> T, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma\n  LSC_need_it_once_have_many:\n  assumes el: \"A \\<in> set F\"\n  assumes once: \"form_of_lit A \\<^bold>\\<or> disj_of_clause (removeAll A F),\\<Gamma> \\<Rightarrow>\\<^sub>n\"\n  shows \"disj_of_clause F,\\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disj_of_clause F, \\<Gamma> \\<Rightarrow>\\<^sub>n", "using assms"], ["proof (prove)\nusing this:\n  A \\<in> set F\n  form_of_lit A \\<^bold>\\<or>\n  disj_of_clause (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. disj_of_clause F, \\<Gamma> \\<Rightarrow>\\<^sub>n", "proof(induction F)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>A \\<in> set [];\n     form_of_lit A \\<^bold>\\<or>\n     disj_of_clause\n      (removeAll A []), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> disj_of_clause [], \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>a F.\n       \\<lbrakk>\\<lbrakk>A \\<in> set F;\n                 form_of_lit A \\<^bold>\\<or>\n                 disj_of_clause\n                  (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                \\<Longrightarrow> disj_of_clause\n                                   F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        A \\<in> set (a # F);\n        form_of_lit A \\<^bold>\\<or>\n        disj_of_clause\n         (removeAll A (a # F)), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> disj_of_clause\n                          (a # F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "case Nil"], ["proof (state)\nthis:\n  A \\<in> set []\n  form_of_lit A \\<^bold>\\<or>\n  disj_of_clause (removeAll A []), \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>A \\<in> set [];\n     form_of_lit A \\<^bold>\\<or>\n     disj_of_clause\n      (removeAll A []), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> disj_of_clause [], \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>a F.\n       \\<lbrakk>\\<lbrakk>A \\<in> set F;\n                 form_of_lit A \\<^bold>\\<or>\n                 disj_of_clause\n                  (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                \\<Longrightarrow> disj_of_clause\n                                   F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        A \\<in> set (a # F);\n        form_of_lit A \\<^bold>\\<or>\n        disj_of_clause\n         (removeAll A (a # F)), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> disj_of_clause\n                          (a # F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "hence False"], ["proof (prove)\nusing this:\n  A \\<in> set []\n  form_of_lit A \\<^bold>\\<or>\n  disj_of_clause (removeAll A []), \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. \\<lbrakk>A \\<in> set [];\n     form_of_lit A \\<^bold>\\<or>\n     disj_of_clause\n      (removeAll A []), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> disj_of_clause [], \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>a F.\n       \\<lbrakk>\\<lbrakk>A \\<in> set F;\n                 form_of_lit A \\<^bold>\\<or>\n                 disj_of_clause\n                  (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                \\<Longrightarrow> disj_of_clause\n                                   F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        A \\<in> set (a # F);\n        form_of_lit A \\<^bold>\\<or>\n        disj_of_clause\n         (removeAll A (a # F)), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> disj_of_clause\n                          (a # F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. disj_of_clause [], \\<Gamma> \\<Rightarrow>\\<^sub>n", ".."], ["proof (state)\nthis:\n  disj_of_clause [], \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<And>a F.\n       \\<lbrakk>\\<lbrakk>A \\<in> set F;\n                 form_of_lit A \\<^bold>\\<or>\n                 disj_of_clause\n                  (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                \\<Longrightarrow> disj_of_clause\n                                   F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        A \\<in> set (a # F);\n        form_of_lit A \\<^bold>\\<or>\n        disj_of_clause\n         (removeAll A (a # F)), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> disj_of_clause\n                          (a # F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a F.\n       \\<lbrakk>\\<lbrakk>A \\<in> set F;\n                 form_of_lit A \\<^bold>\\<or>\n                 disj_of_clause\n                  (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                \\<Longrightarrow> disj_of_clause\n                                   F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        A \\<in> set (a # F);\n        form_of_lit A \\<^bold>\\<or>\n        disj_of_clause\n         (removeAll A (a # F)), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> disj_of_clause\n                          (a # F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "(* there might be a smarter way to prove this by splitting F into two lists\\<dots> but nah. *)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a F.\n       \\<lbrakk>\\<lbrakk>A \\<in> set F;\n                 form_of_lit A \\<^bold>\\<or>\n                 disj_of_clause\n                  (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                \\<Longrightarrow> disj_of_clause\n                                   F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        A \\<in> set (a # F);\n        form_of_lit A \\<^bold>\\<or>\n        disj_of_clause\n         (removeAll A (a # F)), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> disj_of_clause\n                          (a # F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "case (Cons f F)"], ["proof (state)\nthis:\n  \\<lbrakk>A \\<in> set F;\n   form_of_lit A \\<^bold>\\<or>\n   disj_of_clause (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n  \\<Longrightarrow> disj_of_clause F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  A \\<in> set (f # F)\n  form_of_lit A \\<^bold>\\<or>\n  disj_of_clause (removeAll A (f # F)), \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<And>a F.\n       \\<lbrakk>\\<lbrakk>A \\<in> set F;\n                 form_of_lit A \\<^bold>\\<or>\n                 disj_of_clause\n                  (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                \\<Longrightarrow> disj_of_clause\n                                   F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        A \\<in> set (a # F);\n        form_of_lit A \\<^bold>\\<or>\n        disj_of_clause\n         (removeAll A (a # F)), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> disj_of_clause\n                          (a # F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>A \\<in> set F;\n   form_of_lit A \\<^bold>\\<or>\n   disj_of_clause (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n  \\<Longrightarrow> disj_of_clause F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  A \\<in> set (f # F)\n  form_of_lit A \\<^bold>\\<or>\n  disj_of_clause (removeAll A (f # F)), \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. disj_of_clause (f # F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "proof(cases \"A = f\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>A \\<in> set F;\n              form_of_lit A \\<^bold>\\<or>\n              disj_of_clause\n               (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n             \\<Longrightarrow> disj_of_clause\n                                F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A \\<in> set (f # F);\n     form_of_lit A \\<^bold>\\<or>\n     disj_of_clause (removeAll A (f # F)), \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A = f\\<rbrakk>\n    \\<Longrightarrow> disj_of_clause (f # F), \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<lbrakk>\\<lbrakk>A \\<in> set F;\n              form_of_lit A \\<^bold>\\<or>\n              disj_of_clause\n               (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n             \\<Longrightarrow> disj_of_clause\n                                F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A \\<in> set (f # F);\n     form_of_lit A \\<^bold>\\<or>\n     disj_of_clause (removeAll A (f # F)), \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A \\<noteq> f\\<rbrakk>\n    \\<Longrightarrow> disj_of_clause (f # F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "case True"], ["proof (state)\nthis:\n  A = f\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>A \\<in> set F;\n              form_of_lit A \\<^bold>\\<or>\n              disj_of_clause\n               (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n             \\<Longrightarrow> disj_of_clause\n                                F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A \\<in> set (f # F);\n     form_of_lit A \\<^bold>\\<or>\n     disj_of_clause (removeAll A (f # F)), \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A = f\\<rbrakk>\n    \\<Longrightarrow> disj_of_clause (f # F), \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<lbrakk>\\<lbrakk>A \\<in> set F;\n              form_of_lit A \\<^bold>\\<or>\n              disj_of_clause\n               (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n             \\<Longrightarrow> disj_of_clause\n                                F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A \\<in> set (f # F);\n     form_of_lit A \\<^bold>\\<or>\n     disj_of_clause (removeAll A (f # F)), \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A \\<noteq> f\\<rbrakk>\n    \\<Longrightarrow> disj_of_clause (f # F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "with Cons.prems"], ["proof (chain)\npicking this:\n  A \\<in> set (f # F)\n  form_of_lit A \\<^bold>\\<or>\n  disj_of_clause (removeAll A (f # F)), \\<Gamma> \\<Rightarrow>\\<^sub>n\n  A = f", "have ihm: \"form_of_lit A \\<^bold>\\<or> disj_of_clause (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  A \\<in> set (f # F)\n  form_of_lit A \\<^bold>\\<or>\n  disj_of_clause (removeAll A (f # F)), \\<Gamma> \\<Rightarrow>\\<^sub>n\n  A = f\n\ngoal (1 subgoal):\n 1. form_of_lit A \\<^bold>\\<or>\n    disj_of_clause (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "by simp"], ["proof (state)\nthis:\n  form_of_lit A \\<^bold>\\<or>\n  disj_of_clause (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>A \\<in> set F;\n              form_of_lit A \\<^bold>\\<or>\n              disj_of_clause\n               (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n             \\<Longrightarrow> disj_of_clause\n                                F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A \\<in> set (f # F);\n     form_of_lit A \\<^bold>\\<or>\n     disj_of_clause (removeAll A (f # F)), \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A = f\\<rbrakk>\n    \\<Longrightarrow> disj_of_clause (f # F), \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<lbrakk>\\<lbrakk>A \\<in> set F;\n              form_of_lit A \\<^bold>\\<or>\n              disj_of_clause\n               (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n             \\<Longrightarrow> disj_of_clause\n                                F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A \\<in> set (f # F);\n     form_of_lit A \\<^bold>\\<or>\n     disj_of_clause (removeAll A (f # F)), \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A \\<noteq> f\\<rbrakk>\n    \\<Longrightarrow> disj_of_clause (f # F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "with True"], ["proof (chain)\npicking this:\n  A = f\n  form_of_lit A \\<^bold>\\<or>\n  disj_of_clause (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "have split: \"form_of_lit f, \\<Gamma> \\<Rightarrow>\\<^sub>n\" \"disj_of_clause (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  A = f\n  form_of_lit A \\<^bold>\\<or>\n  disj_of_clause (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. form_of_lit f, \\<Gamma> \\<Rightarrow>\\<^sub>n &&&\n    disj_of_clause (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "by (auto dest!: LSC_invs(2))"], ["proof (state)\nthis:\n  form_of_lit f, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  disj_of_clause (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>A \\<in> set F;\n              form_of_lit A \\<^bold>\\<or>\n              disj_of_clause\n               (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n             \\<Longrightarrow> disj_of_clause\n                                F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A \\<in> set (f # F);\n     form_of_lit A \\<^bold>\\<or>\n     disj_of_clause (removeAll A (f # F)), \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A = f\\<rbrakk>\n    \\<Longrightarrow> disj_of_clause (f # F), \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<lbrakk>\\<lbrakk>A \\<in> set F;\n              form_of_lit A \\<^bold>\\<or>\n              disj_of_clause\n               (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n             \\<Longrightarrow> disj_of_clause\n                                F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A \\<in> set (f # F);\n     form_of_lit A \\<^bold>\\<or>\n     disj_of_clause (removeAll A (f # F)), \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A \\<noteq> f\\<rbrakk>\n    \\<Longrightarrow> disj_of_clause (f # F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "from Cons.IH[OF _ ihm]"], ["proof (chain)\npicking this:\n  A \\<in> set F \\<Longrightarrow>\n  disj_of_clause F, \\<Gamma> \\<Rightarrow>\\<^sub>n", "have \"A \\<in> set F \\<Longrightarrow> disj_of_clause F, \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  A \\<in> set F \\<Longrightarrow>\n  disj_of_clause F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. A \\<in> set F \\<Longrightarrow>\n    disj_of_clause F, \\<Gamma> \\<Rightarrow>\\<^sub>n", "."], ["proof (state)\nthis:\n  A \\<in> set F \\<Longrightarrow>\n  disj_of_clause F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>A \\<in> set F;\n              form_of_lit A \\<^bold>\\<or>\n              disj_of_clause\n               (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n             \\<Longrightarrow> disj_of_clause\n                                F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A \\<in> set (f # F);\n     form_of_lit A \\<^bold>\\<or>\n     disj_of_clause (removeAll A (f # F)), \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A = f\\<rbrakk>\n    \\<Longrightarrow> disj_of_clause (f # F), \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<lbrakk>\\<lbrakk>A \\<in> set F;\n              form_of_lit A \\<^bold>\\<or>\n              disj_of_clause\n               (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n             \\<Longrightarrow> disj_of_clause\n                                F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A \\<in> set (f # F);\n     form_of_lit A \\<^bold>\\<or>\n     disj_of_clause (removeAll A (f # F)), \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A \\<noteq> f\\<rbrakk>\n    \\<Longrightarrow> disj_of_clause (f # F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "with split(2)"], ["proof (chain)\npicking this:\n  disj_of_clause (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\n  A \\<in> set F \\<Longrightarrow>\n  disj_of_clause F, \\<Gamma> \\<Rightarrow>\\<^sub>n", "have \"disj_of_clause F, \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  disj_of_clause (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\n  A \\<in> set F \\<Longrightarrow>\n  disj_of_clause F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. disj_of_clause F, \\<Gamma> \\<Rightarrow>\\<^sub>n", "by(cases \"A \\<in> set F\") simp_all"], ["proof (state)\nthis:\n  disj_of_clause F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>A \\<in> set F;\n              form_of_lit A \\<^bold>\\<or>\n              disj_of_clause\n               (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n             \\<Longrightarrow> disj_of_clause\n                                F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A \\<in> set (f # F);\n     form_of_lit A \\<^bold>\\<or>\n     disj_of_clause (removeAll A (f # F)), \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A = f\\<rbrakk>\n    \\<Longrightarrow> disj_of_clause (f # F), \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<lbrakk>\\<lbrakk>A \\<in> set F;\n              form_of_lit A \\<^bold>\\<or>\n              disj_of_clause\n               (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n             \\<Longrightarrow> disj_of_clause\n                                F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A \\<in> set (f # F);\n     form_of_lit A \\<^bold>\\<or>\n     disj_of_clause (removeAll A (f # F)), \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A \\<noteq> f\\<rbrakk>\n    \\<Longrightarrow> disj_of_clause (f # F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "with split(1)"], ["proof (chain)\npicking this:\n  form_of_lit f, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  disj_of_clause F, \\<Gamma> \\<Rightarrow>\\<^sub>n", "show ?thesis"], ["proof (prove)\nusing this:\n  form_of_lit f, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  disj_of_clause F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. disj_of_clause (f # F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "by auto"], ["proof (state)\nthis:\n  disj_of_clause (f # F), \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>A \\<in> set F;\n              form_of_lit A \\<^bold>\\<or>\n              disj_of_clause\n               (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n             \\<Longrightarrow> disj_of_clause\n                                F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A \\<in> set (f # F);\n     form_of_lit A \\<^bold>\\<or>\n     disj_of_clause (removeAll A (f # F)), \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A \\<noteq> f\\<rbrakk>\n    \\<Longrightarrow> disj_of_clause (f # F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>A \\<in> set F;\n              form_of_lit A \\<^bold>\\<or>\n              disj_of_clause\n               (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n             \\<Longrightarrow> disj_of_clause\n                                F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A \\<in> set (f # F);\n     form_of_lit A \\<^bold>\\<or>\n     disj_of_clause (removeAll A (f # F)), \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A \\<noteq> f\\<rbrakk>\n    \\<Longrightarrow> disj_of_clause (f # F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "case False"], ["proof (state)\nthis:\n  A \\<noteq> f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>A \\<in> set F;\n              form_of_lit A \\<^bold>\\<or>\n              disj_of_clause\n               (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n             \\<Longrightarrow> disj_of_clause\n                                F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A \\<in> set (f # F);\n     form_of_lit A \\<^bold>\\<or>\n     disj_of_clause (removeAll A (f # F)), \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A \\<noteq> f\\<rbrakk>\n    \\<Longrightarrow> disj_of_clause (f # F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "with Cons.prems(2)"], ["proof (chain)\npicking this:\n  form_of_lit A \\<^bold>\\<or>\n  disj_of_clause (removeAll A (f # F)), \\<Gamma> \\<Rightarrow>\\<^sub>n\n  A \\<noteq> f", "have prem: \"form_of_lit A, \\<Gamma> \\<Rightarrow>\\<^sub>n\" \"form_of_lit f, \\<Gamma> \\<Rightarrow>\\<^sub>n\" \"disj_of_clause (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  form_of_lit A \\<^bold>\\<or>\n  disj_of_clause (removeAll A (f # F)), \\<Gamma> \\<Rightarrow>\\<^sub>n\n  A \\<noteq> f\n\ngoal (1 subgoal):\n 1. form_of_lit A, \\<Gamma> \\<Rightarrow>\\<^sub>n &&&\n    form_of_lit f, \\<Gamma> \\<Rightarrow>\\<^sub>n &&&\n    disj_of_clause (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "by (auto dest!: LSC_invs(2))"], ["proof (state)\nthis:\n  form_of_lit A, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  form_of_lit f, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  disj_of_clause (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>A \\<in> set F;\n              form_of_lit A \\<^bold>\\<or>\n              disj_of_clause\n               (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n             \\<Longrightarrow> disj_of_clause\n                                F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A \\<in> set (f # F);\n     form_of_lit A \\<^bold>\\<or>\n     disj_of_clause (removeAll A (f # F)), \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A \\<noteq> f\\<rbrakk>\n    \\<Longrightarrow> disj_of_clause (f # F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "hence d: \"form_of_lit A \\<^bold>\\<or> disj_of_clause (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  form_of_lit A, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  form_of_lit f, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  disj_of_clause (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. form_of_lit A \\<^bold>\\<or>\n    disj_of_clause (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "by blast"], ["proof (state)\nthis:\n  form_of_lit A \\<^bold>\\<or>\n  disj_of_clause (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>A \\<in> set F;\n              form_of_lit A \\<^bold>\\<or>\n              disj_of_clause\n               (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n             \\<Longrightarrow> disj_of_clause\n                                F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A \\<in> set (f # F);\n     form_of_lit A \\<^bold>\\<or>\n     disj_of_clause (removeAll A (f # F)), \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A \\<noteq> f\\<rbrakk>\n    \\<Longrightarrow> disj_of_clause (f # F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "from False Cons.prems"], ["proof (chain)\npicking this:\n  A \\<noteq> f\n  A \\<in> set (f # F)\n  form_of_lit A \\<^bold>\\<or>\n  disj_of_clause (removeAll A (f # F)), \\<Gamma> \\<Rightarrow>\\<^sub>n", "have el: \"A \\<in> set F\""], ["proof (prove)\nusing this:\n  A \\<noteq> f\n  A \\<in> set (f # F)\n  form_of_lit A \\<^bold>\\<or>\n  disj_of_clause (removeAll A (f # F)), \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. A \\<in> set F", "by simp"], ["proof (state)\nthis:\n  A \\<in> set F\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>A \\<in> set F;\n              form_of_lit A \\<^bold>\\<or>\n              disj_of_clause\n               (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n             \\<Longrightarrow> disj_of_clause\n                                F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A \\<in> set (f # F);\n     form_of_lit A \\<^bold>\\<or>\n     disj_of_clause (removeAll A (f # F)), \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A \\<noteq> f\\<rbrakk>\n    \\<Longrightarrow> disj_of_clause (f # F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "from Cons.IH[OF el d]"], ["proof (chain)\npicking this:\n  disj_of_clause F, \\<Gamma> \\<Rightarrow>\\<^sub>n", "have \"disj_of_clause F, \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  disj_of_clause F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. disj_of_clause F, \\<Gamma> \\<Rightarrow>\\<^sub>n", "."], ["proof (state)\nthis:\n  disj_of_clause F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>A \\<in> set F;\n              form_of_lit A \\<^bold>\\<or>\n              disj_of_clause\n               (removeAll A F), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n             \\<Longrightarrow> disj_of_clause\n                                F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A \\<in> set (f # F);\n     form_of_lit A \\<^bold>\\<or>\n     disj_of_clause (removeAll A (f # F)), \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     A \\<noteq> f\\<rbrakk>\n    \\<Longrightarrow> disj_of_clause (f # F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "with prem(2)"], ["proof (chain)\npicking this:\n  form_of_lit f, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  disj_of_clause F, \\<Gamma> \\<Rightarrow>\\<^sub>n", "show ?thesis"], ["proof (prove)\nusing this:\n  form_of_lit f, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  disj_of_clause F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. disj_of_clause (f # F), \\<Gamma> \\<Rightarrow>\\<^sub>n", "by auto"], ["proof (state)\nthis:\n  disj_of_clause (f # F), \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  disj_of_clause (f # F), \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal:\nNo subgoals!", "qed"], ["", "(* LSC_sim_Resolution1 is the naive summer child that requires everything to be in the right order. Here comes the real fun *)"], ["", "lemma LSC_Sim_resolution_la:\n  fixes k :: 'a\n  assumes R: \"disj_of_clause (removeAll (k\\<^sup>+) F @ removeAll (k\\<inverse>) G), \\<Gamma> \\<Rightarrow>\\<^sub>n\"\n  assumes el: \"k\\<^sup>+ \\<in> set F\" \"k\\<inverse> \\<in> set G\"\n  shows \"disj_of_clause F, disj_of_clause G, \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disj_of_clause F, disj_of_clause G, \\<Gamma> \\<Rightarrow>\\<^sub>n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. disj_of_clause F, disj_of_clause G, \\<Gamma> \\<Rightarrow>\\<^sub>n", "have LSC_or_assoc: \"(F \\<^bold>\\<or> G) \\<^bold>\\<or> H, \\<Gamma> \\<Rightarrow>\\<^sub>n \\<longleftrightarrow> F \\<^bold>\\<or> (G \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n\" if \"is_nnf F\" \"is_nnf G\" \"is_nnf H\" for F G H"], ["proof (prove)\ngoal (1 subgoal):\n 1. (F \\<^bold>\\<or> G) \\<^bold>\\<or> H, \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    F \\<^bold>\\<or> (G \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n", "using that"], ["proof (prove)\nusing this:\n  is_nnf F\n  is_nnf G\n  is_nnf H\n\ngoal (1 subgoal):\n 1. (F \\<^bold>\\<or> G) \\<^bold>\\<or> H, \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    F \\<^bold>\\<or> (G \\<^bold>\\<or> H), \\<Gamma> \\<Rightarrow>\\<^sub>n", "by(auto dest!: LSC_invs(2))"], ["proof (state)\nthis:\n  \\<lbrakk>is_nnf ?F; is_nnf ?G; is_nnf ?H\\<rbrakk>\n  \\<Longrightarrow> (?F \\<^bold>\\<or> ?G) \\<^bold>\\<or>\n                    ?H, \\<Gamma> \\<Rightarrow>\\<^sub>n =\n                    ?F \\<^bold>\\<or>\n                    (?G \\<^bold>\\<or> ?H), \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. disj_of_clause F, disj_of_clause G, \\<Gamma> \\<Rightarrow>\\<^sub>n", "have dd: \"disj_of_clause (F @ G), \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow> disj_of_clause F \\<^bold>\\<or> disj_of_clause G, \\<Gamma> \\<Rightarrow>\\<^sub>n\" for F G"], ["proof (prove)\ngoal (1 subgoal):\n 1. disj_of_clause (F @ G), \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n    disj_of_clause F \\<^bold>\\<or>\n    disj_of_clause G, \\<Gamma> \\<Rightarrow>\\<^sub>n", "by(induction F) (auto dest!: LSC_invs(2) simp add: LSC_or_assoc)"], ["proof (state)\nthis:\n  disj_of_clause (?F @ ?G), \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  disj_of_clause ?F \\<^bold>\\<or>\n  disj_of_clause ?G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. disj_of_clause F, disj_of_clause G, \\<Gamma> \\<Rightarrow>\\<^sub>n", "from LSC_sim_Resolution1[OF dd[OF R]]"], ["proof (chain)\npicking this:\n  Atom ?k \\<^bold>\\<or>\n  disj_of_clause\n   (removeAll (k\\<^sup>+)\n     F), \\<^bold>\\<not> (Atom ?k) \\<^bold>\\<or>\n         disj_of_clause\n          (removeAll (k\\<inverse>) G), \\<Gamma> \\<Rightarrow>\\<^sub>n", "have unord: \"Atom k \\<^bold>\\<or> disj_of_clause (removeAll (k\\<^sup>+) F), \\<^bold>\\<not> (Atom k) \\<^bold>\\<or> disj_of_clause (removeAll (k\\<inverse>) G), \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  Atom ?k \\<^bold>\\<or>\n  disj_of_clause\n   (removeAll (k\\<^sup>+)\n     F), \\<^bold>\\<not> (Atom ?k) \\<^bold>\\<or>\n         disj_of_clause\n          (removeAll (k\\<inverse>) G), \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. Atom k \\<^bold>\\<or>\n    disj_of_clause\n     (removeAll (k\\<^sup>+)\n       F), \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n           disj_of_clause\n            (removeAll (k\\<inverse>) G), \\<Gamma> \\<Rightarrow>\\<^sub>n", "."], ["proof (state)\nthis:\n  Atom k \\<^bold>\\<or>\n  disj_of_clause\n   (removeAll (k\\<^sup>+)\n     F), \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n         disj_of_clause\n          (removeAll (k\\<inverse>) G), \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. disj_of_clause F, disj_of_clause G, \\<Gamma> \\<Rightarrow>\\<^sub>n", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. disj_of_clause F, disj_of_clause G, \\<Gamma> \\<Rightarrow>\\<^sub>n", "using LSC_need_it_once_have_many[OF el(1)] LSC_need_it_once_have_many[OF el(2)] unord"], ["proof (prove)\nusing this:\n  form_of_lit (k\\<^sup>+) \\<^bold>\\<or>\n  disj_of_clause\n   (removeAll (k\\<^sup>+)\n     F), ?\\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  disj_of_clause F, ?\\<Gamma> \\<Rightarrow>\\<^sub>n\n  form_of_lit (k\\<inverse>) \\<^bold>\\<or>\n  disj_of_clause\n   (removeAll (k\\<inverse>)\n     G), ?\\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  disj_of_clause G, ?\\<Gamma> \\<Rightarrow>\\<^sub>n\n  Atom k \\<^bold>\\<or>\n  disj_of_clause\n   (removeAll (k\\<^sup>+)\n     F), \\<^bold>\\<not> (Atom k) \\<^bold>\\<or>\n         disj_of_clause\n          (removeAll (k\\<inverse>) G), \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. disj_of_clause F, disj_of_clause G, \\<Gamma> \\<Rightarrow>\\<^sub>n", "by(simp add: add_mset_commute del: sc_insertion_ordering)"], ["proof (state)\nthis:\n  disj_of_clause F, disj_of_clause G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma two_list_induct[case_names Nil Cons]: \"P [] [] \\<Longrightarrow> (\\<And>a S T. P S T \\<Longrightarrow> P (a # S) T &&& P S (a # T)) \\<Longrightarrow> P S T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P [] [];\n     \\<And>a S T.\n        P S T \\<Longrightarrow> P (a # S) T &&& P S (a # T)\\<rbrakk>\n    \\<Longrightarrow> P S T", "apply(induction S)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>P [] []; \\<And>a S T. P S T \\<Longrightarrow> P (a # S) T;\n     \\<And>a S T. P S T \\<Longrightarrow> P S (a # T)\\<rbrakk>\n    \\<Longrightarrow> P [] T\n 2. \\<And>a S.\n       \\<lbrakk>\\<lbrakk>P [] [];\n                 \\<And>a S T. P S T \\<Longrightarrow> P (a # S) T;\n                 \\<And>a S T. P S T \\<Longrightarrow> P S (a # T)\\<rbrakk>\n                \\<Longrightarrow> P S T;\n        P [] []; \\<And>a S T. P S T \\<Longrightarrow> P (a # S) T;\n        \\<And>a S T. P S T \\<Longrightarrow> P S (a # T)\\<rbrakk>\n       \\<Longrightarrow> P (a # S) T", "apply(induction T)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>P [] []; \\<And>a S T. P S T \\<Longrightarrow> P (a # S) T;\n     \\<And>a S T. P S T \\<Longrightarrow> P S (a # T)\\<rbrakk>\n    \\<Longrightarrow> P [] []\n 2. \\<And>a T.\n       \\<lbrakk>\\<lbrakk>P [] [];\n                 \\<And>a S T. P S T \\<Longrightarrow> P (a # S) T;\n                 \\<And>a S T. P S T \\<Longrightarrow> P S (a # T)\\<rbrakk>\n                \\<Longrightarrow> P [] T;\n        P [] []; \\<And>a S T. P S T \\<Longrightarrow> P (a # S) T;\n        \\<And>a S T. P S T \\<Longrightarrow> P S (a # T)\\<rbrakk>\n       \\<Longrightarrow> P [] (a # T)\n 3. \\<And>a S.\n       \\<lbrakk>\\<lbrakk>P [] [];\n                 \\<And>a S T. P S T \\<Longrightarrow> P (a # S) T;\n                 \\<And>a S T. P S T \\<Longrightarrow> P S (a # T)\\<rbrakk>\n                \\<Longrightarrow> P S T;\n        P [] []; \\<And>a S T. P S T \\<Longrightarrow> P (a # S) T;\n        \\<And>a S T. P S T \\<Longrightarrow> P S (a # T)\\<rbrakk>\n       \\<Longrightarrow> P (a # S) T", "apply(simp_all)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma distrib1: \"\\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n; image_mset disj_of_clause (mset G) + \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> mset (map (\\<lambda>d. F \\<^bold>\\<or> disj_of_clause d) G) + \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     image_mset disj_of_clause (mset G) +\n     \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> mset\n                       (map (\\<lambda>d. F \\<^bold>\\<or> disj_of_clause d)\n                         G) +\n                      \\<Gamma> \\<Rightarrow>\\<^sub>n", "(* surprisingly, the proof having a \\<^bold>\\<and> instead of the \\<^bold>\\<or> looks very similar. Yes, I mistook the two at some point\\<dots> and downstream, where this is used, I only had to do a few text replacements. makes you really wonder whether what you're proving is meaningful. *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     image_mset disj_of_clause (mset G) +\n     \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> mset\n                       (map (\\<lambda>d. F \\<^bold>\\<or> disj_of_clause d)\n                         G) +\n                      \\<Gamma> \\<Rightarrow>\\<^sub>n", "proof(induction G arbitrary: \\<Gamma>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset []) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (map (\\<lambda>d.\n                                   F \\<^bold>\\<or> disj_of_clause d)\n                            []) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>a G \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    image_mset disj_of_clause (mset G) +\n                    \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                   \\<Longrightarrow> mset\n(map (\\<lambda>d. F \\<^bold>\\<or> disj_of_clause d) G) +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset (a # G)) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (map (\\<lambda>d.\n                                   F \\<^bold>\\<or> disj_of_clause d)\n                            (a # G)) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n", "have GO(* get out *)[simp]:\n   \"NO_MATCH ({#I\\<^bold>\\<or>J#}) H \\<Longrightarrow> H+{#F\\<^bold>\\<or>G#}+S = F\\<^bold>\\<or>G,H+S\"\n   for F G H S I J"], ["proof (prove)\ngoal (1 subgoal):\n 1. NO_MATCH (I \\<^bold>\\<or> J, {#}) H \\<Longrightarrow>\n    H + (F \\<^bold>\\<or> G, {#}) + S = F \\<^bold>\\<or> G, H + S", "by(simp_all add: add_mset_commute)"], ["proof (state)\nthis:\n  NO_MATCH (?I1 \\<^bold>\\<or> ?J1, {#}) ?H1 \\<Longrightarrow>\n  ?H1 + (?F1 \\<^bold>\\<or> ?G1, {#}) + ?S1 =\n  ?F1 \\<^bold>\\<or> ?G1, ?H1 + ?S1\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset []) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (map (\\<lambda>d.\n                                   F \\<^bold>\\<or> disj_of_clause d)\n                            []) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>a G \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    image_mset disj_of_clause (mset G) +\n                    \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                   \\<Longrightarrow> mset\n(map (\\<lambda>d. F \\<^bold>\\<or> disj_of_clause d) G) +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset (a # G)) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (map (\\<lambda>d.\n                                   F \\<^bold>\\<or> disj_of_clause d)\n                            (a # G)) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n", "case (Cons g G)"], ["proof (state)\nthis:\n  \\<lbrakk>F, ?\\<Gamma>1 \\<Rightarrow>\\<^sub>n;\n   image_mset disj_of_clause (mset G) +\n   ?\\<Gamma>1 \\<Rightarrow>\\<^sub>n\\<rbrakk>\n  \\<Longrightarrow> mset\n                     (map (\\<lambda>d. F \\<^bold>\\<or> disj_of_clause d)\n                       G) +\n                    ?\\<Gamma>1 \\<Rightarrow>\\<^sub>n\n  F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  image_mset disj_of_clause (mset (g # G)) + \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset []) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (map (\\<lambda>d.\n                                   F \\<^bold>\\<or> disj_of_clause d)\n                            []) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>a G \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    image_mset disj_of_clause (mset G) +\n                    \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                   \\<Longrightarrow> mset\n(map (\\<lambda>d. F \\<^bold>\\<or> disj_of_clause d) G) +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset (a # G)) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (map (\\<lambda>d.\n                                   F \\<^bold>\\<or> disj_of_clause d)\n                            (a # G)) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n", "from \\<open>F, \\<Gamma> \\<Rightarrow>\\<^sub>n\\<close>"], ["proof (chain)\npicking this:\n  F, \\<Gamma> \\<Rightarrow>\\<^sub>n", "have 1: \"F, disj_of_clause g, \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. F, disj_of_clause g, \\<Gamma> \\<Rightarrow>\\<^sub>n", "by (metis LSC_weaken add_mset_commute)"], ["proof (state)\nthis:\n  F, disj_of_clause g, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset []) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (map (\\<lambda>d.\n                                   F \\<^bold>\\<or> disj_of_clause d)\n                            []) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>a G \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    image_mset disj_of_clause (mset G) +\n                    \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                   \\<Longrightarrow> mset\n(map (\\<lambda>d. F \\<^bold>\\<or> disj_of_clause d) G) +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset (a # G)) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (map (\\<lambda>d.\n                                   F \\<^bold>\\<or> disj_of_clause d)\n                            (a # G)) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n", "from \\<open>image_mset disj_of_clause (mset (g # G)) + \\<Gamma> \\<Rightarrow>\\<^sub>n\\<close>"], ["proof (chain)\npicking this:\n  image_mset disj_of_clause (mset (g # G)) + \\<Gamma> \\<Rightarrow>\\<^sub>n", "have 2: \"image_mset disj_of_clause (mset G) + (disj_of_clause g, \\<Gamma>) \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  image_mset disj_of_clause (mset (g # G)) + \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. image_mset disj_of_clause (mset G) +\n    (disj_of_clause g, \\<Gamma>) \\<Rightarrow>\\<^sub>n", "by(simp add: add_mset_commute)"], ["proof (state)\nthis:\n  image_mset disj_of_clause (mset G) +\n  (disj_of_clause g, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset []) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (map (\\<lambda>d.\n                                   F \\<^bold>\\<or> disj_of_clause d)\n                            []) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>a G \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    image_mset disj_of_clause (mset G) +\n                    \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                   \\<Longrightarrow> mset\n(map (\\<lambda>d. F \\<^bold>\\<or> disj_of_clause d) G) +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset (a # G)) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (map (\\<lambda>d.\n                                   F \\<^bold>\\<or> disj_of_clause d)\n                            (a # G)) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n", "from Cons.IH[OF 1 2]"], ["proof (chain)\npicking this:\n  mset (map (\\<lambda>d. F \\<^bold>\\<or> disj_of_clause d) G) +\n  (disj_of_clause g, \\<Gamma>) \\<Rightarrow>\\<^sub>n", "have IH: \"disj_of_clause g, mset (map (\\<lambda>d. F \\<^bold>\\<or> disj_of_clause d) G) + \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  mset (map (\\<lambda>d. F \\<^bold>\\<or> disj_of_clause d) G) +\n  (disj_of_clause g, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. disj_of_clause\n     g, mset (map (\\<lambda>d. F \\<^bold>\\<or> disj_of_clause d) G) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n", "by(simp add: add_mset_commute)"], ["proof (state)\nthis:\n  disj_of_clause\n   g, mset (map (\\<lambda>d. F \\<^bold>\\<or> disj_of_clause d) G) +\n      \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset []) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (map (\\<lambda>d.\n                                   F \\<^bold>\\<or> disj_of_clause d)\n                            []) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>a G \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    image_mset disj_of_clause (mset G) +\n                    \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                   \\<Longrightarrow> mset\n(map (\\<lambda>d. F \\<^bold>\\<or> disj_of_clause d) G) +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset (a # G)) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (map (\\<lambda>d.\n                                   F \\<^bold>\\<or> disj_of_clause d)\n                            (a # G)) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n", "from \\<open>F, \\<Gamma> \\<Rightarrow>\\<^sub>n\\<close>"], ["proof (chain)\npicking this:\n  F, \\<Gamma> \\<Rightarrow>\\<^sub>n", "have 3: \"F, mset (map (\\<lambda>d. F \\<^bold>\\<or> disj_of_clause d) G) + \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. F, mset (map (\\<lambda>d. F \\<^bold>\\<or> disj_of_clause d) G) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n", "using LSC_weaken_set"], ["proof (prove)\nusing this:\n  F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  ?\\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  ?\\<Gamma> + ?\\<Theta> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. F, mset (map (\\<lambda>d. F \\<^bold>\\<or> disj_of_clause d) G) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n", "by (metis add.assoc add.commute add_mset_add_single)"], ["proof (state)\nthis:\n  F, mset (map (\\<lambda>d. F \\<^bold>\\<or> disj_of_clause d) G) +\n     \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset []) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (map (\\<lambda>d.\n                                   F \\<^bold>\\<or> disj_of_clause d)\n                            []) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>a G \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    image_mset disj_of_clause (mset G) +\n                    \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                   \\<Longrightarrow> mset\n(map (\\<lambda>d. F \\<^bold>\\<or> disj_of_clause d) G) +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset (a # G)) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (map (\\<lambda>d.\n                                   F \\<^bold>\\<or> disj_of_clause d)\n                            (a # G)) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n", "from IH 3"], ["proof (chain)\npicking this:\n  disj_of_clause\n   g, mset (map (\\<lambda>d. F \\<^bold>\\<or> disj_of_clause d) G) +\n      \\<Gamma> \\<Rightarrow>\\<^sub>n\n  F, mset (map (\\<lambda>d. F \\<^bold>\\<or> disj_of_clause d) G) +\n     \\<Gamma> \\<Rightarrow>\\<^sub>n", "show ?case"], ["proof (prove)\nusing this:\n  disj_of_clause\n   g, mset (map (\\<lambda>d. F \\<^bold>\\<or> disj_of_clause d) G) +\n      \\<Gamma> \\<Rightarrow>\\<^sub>n\n  F, mset (map (\\<lambda>d. F \\<^bold>\\<or> disj_of_clause d) G) +\n     \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. mset (map (\\<lambda>d. F \\<^bold>\\<or> disj_of_clause d) (g # G)) +\n    \\<Gamma> \\<Rightarrow>\\<^sub>n", "by auto"], ["proof (state)\nthis:\n  mset (map (\\<lambda>d. F \\<^bold>\\<or> disj_of_clause d) (g # G)) +\n  \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset []) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (map (\\<lambda>d.\n                                   F \\<^bold>\\<or> disj_of_clause d)\n                            []) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n", "qed simp"], ["", "lemma mset_concat_map_cons:\n  \"mset (concat (map (\\<lambda>c. F c # G c) S)) = mset (map F S) + mset (concat (map G S))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mset (concat (map (\\<lambda>c. F c # G c) S)) =\n    mset (map F S) + mset (concat (map G S))", "by(induction S; simp add: add_mset_commute)"], ["", "lemma distrib: \"\n  image_mset disj_of_clause (mset F) + \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow> \n  image_mset disj_of_clause (mset G) + \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  mset [disj_of_clause c \\<^bold>\\<or> disj_of_clause d. c \\<leftarrow> F, d \\<leftarrow> G] + \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>image_mset disj_of_clause (mset F) +\n             \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     image_mset disj_of_clause (mset G) +\n     \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> mset\n                       (concat\n                         (map (\\<lambda>c.\n                                  map (\\<lambda>d.\n    disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n                                   G)\n                           F)) +\n                      \\<Gamma> \\<Rightarrow>\\<^sub>n", "proof(induction F G arbitrary: \\<Gamma> rule: two_list_induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>image_mset disj_of_clause (mset []) +\n                \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset []) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) [])\n                              [])) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>a S T \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>image_mset disj_of_clause (mset S) +\n                            \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    image_mset disj_of_clause (mset T) +\n                    \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                   \\<Longrightarrow> mset\n(concat\n  (map (\\<lambda>c.\n           map (\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n            T)\n    S)) +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset (a # S)) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset T) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) T)\n                              (a # S))) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 3. \\<And>a S T \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>image_mset disj_of_clause (mset S) +\n                            \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    image_mset disj_of_clause (mset T) +\n                    \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                   \\<Longrightarrow> mset\n(concat\n  (map (\\<lambda>c.\n           map (\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n            T)\n    S)) +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset S) + \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset (a # T)) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) (a # T))\n                              S)) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n", "case (Cons a F G)"], ["proof (state)\nthis:\n  \\<lbrakk>image_mset disj_of_clause (mset F) +\n           ?\\<Gamma> \\<Rightarrow>\\<^sub>n;\n   image_mset disj_of_clause (mset G) +\n   ?\\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n  \\<Longrightarrow> mset\n                     (concat\n                       (map (\\<lambda>c.\n                                map (\\<lambda>d.\n  disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n                                 G)\n                         F)) +\n                    ?\\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>image_mset disj_of_clause (mset []) +\n                \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset []) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) [])\n                              [])) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>a S T \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>image_mset disj_of_clause (mset S) +\n                            \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    image_mset disj_of_clause (mset T) +\n                    \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                   \\<Longrightarrow> mset\n(concat\n  (map (\\<lambda>c.\n           map (\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n            T)\n    S)) +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset (a # S)) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset T) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) T)\n                              (a # S))) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 3. \\<And>a S T \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>image_mset disj_of_clause (mset S) +\n                            \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    image_mset disj_of_clause (mset T) +\n                    \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                   \\<Longrightarrow> mset\n(concat\n  (map (\\<lambda>c.\n           map (\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n            T)\n    S)) +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset S) + \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset (a # T)) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) (a # T))\n                              S)) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n", "case 1"], ["proof (state)\nthis:\n  image_mset disj_of_clause (mset (a # F)) + \\<Gamma> \\<Rightarrow>\\<^sub>n\n  image_mset disj_of_clause (mset G) + \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>image_mset disj_of_clause (mset []) +\n                \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset []) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) [])\n                              [])) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>a S T \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>image_mset disj_of_clause (mset S) +\n                            \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    image_mset disj_of_clause (mset T) +\n                    \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                   \\<Longrightarrow> mset\n(concat\n  (map (\\<lambda>c.\n           map (\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n            T)\n    S)) +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset (a # S)) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset T) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) T)\n                              (a # S))) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 3. \\<And>a S T \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>image_mset disj_of_clause (mset S) +\n                            \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    image_mset disj_of_clause (mset T) +\n                    \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                   \\<Longrightarrow> mset\n(concat\n  (map (\\<lambda>c.\n           map (\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n            T)\n    S)) +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset S) + \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset (a # T)) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) (a # T))\n                              S)) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n", "from \\<open>image_mset disj_of_clause (mset (a # F)) + \\<Gamma> \\<Rightarrow>\\<^sub>n\\<close>"], ["proof (chain)\npicking this:\n  image_mset disj_of_clause (mset (a # F)) + \\<Gamma> \\<Rightarrow>\\<^sub>n", "have a: \"disj_of_clause a, image_mset disj_of_clause (mset F) + \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  image_mset disj_of_clause (mset (a # F)) + \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. disj_of_clause\n     a, image_mset disj_of_clause (mset F) + \\<Gamma> \\<Rightarrow>\\<^sub>n", "by(simp add: add_mset_commute)"], ["proof (state)\nthis:\n  disj_of_clause\n   a, image_mset disj_of_clause (mset F) + \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>image_mset disj_of_clause (mset []) +\n                \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset []) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) [])\n                              [])) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>a S T \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>image_mset disj_of_clause (mset S) +\n                            \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    image_mset disj_of_clause (mset T) +\n                    \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                   \\<Longrightarrow> mset\n(concat\n  (map (\\<lambda>c.\n           map (\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n            T)\n    S)) +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset (a # S)) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset T) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) T)\n                              (a # S))) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 3. \\<And>a S T \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>image_mset disj_of_clause (mset S) +\n                            \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    image_mset disj_of_clause (mset T) +\n                    \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                   \\<Longrightarrow> mset\n(concat\n  (map (\\<lambda>c.\n           map (\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n            T)\n    S)) +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset S) + \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset (a # T)) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) (a # T))\n                              S)) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n", "from \\<open>image_mset disj_of_clause (mset G) + \\<Gamma> \\<Rightarrow>\\<^sub>n\\<close>"], ["proof (chain)\npicking this:\n  image_mset disj_of_clause (mset G) + \\<Gamma> \\<Rightarrow>\\<^sub>n", "have b: \"image_mset disj_of_clause (mset G) + (image_mset disj_of_clause (mset F) + \\<Gamma>) \\<Rightarrow>\\<^sub>n\"\n   and c: \"image_mset disj_of_clause (mset G) + (mset (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) G) + \\<Gamma>) \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  image_mset disj_of_clause (mset G) + \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. image_mset disj_of_clause (mset G) +\n    (image_mset disj_of_clause (mset F) +\n     \\<Gamma>) \\<Rightarrow>\\<^sub>n &&&\n    image_mset disj_of_clause (mset G) +\n    (mset\n      (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n        G) +\n     \\<Gamma>) \\<Rightarrow>\\<^sub>n", "using LSC_weaken_set"], ["proof (prove)\nusing this:\n  image_mset disj_of_clause (mset G) + \\<Gamma> \\<Rightarrow>\\<^sub>n\n  ?\\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  ?\\<Gamma> + ?\\<Theta> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. image_mset disj_of_clause (mset G) +\n    (image_mset disj_of_clause (mset F) +\n     \\<Gamma>) \\<Rightarrow>\\<^sub>n &&&\n    image_mset disj_of_clause (mset G) +\n    (mset\n      (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n        G) +\n     \\<Gamma>) \\<Rightarrow>\\<^sub>n", "by (metis add.commute union_assoc)+"], ["proof (state)\nthis:\n  image_mset disj_of_clause (mset G) +\n  (image_mset disj_of_clause (mset F) + \\<Gamma>) \\<Rightarrow>\\<^sub>n\n  image_mset disj_of_clause (mset G) +\n  (mset\n    (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) G) +\n   \\<Gamma>) \\<Rightarrow>\\<^sub>n\n\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>image_mset disj_of_clause (mset []) +\n                \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset []) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) [])\n                              [])) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>a S T \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>image_mset disj_of_clause (mset S) +\n                            \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    image_mset disj_of_clause (mset T) +\n                    \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                   \\<Longrightarrow> mset\n(concat\n  (map (\\<lambda>c.\n           map (\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n            T)\n    S)) +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset (a # S)) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset T) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) T)\n                              (a # S))) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 3. \\<And>a S T \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>image_mset disj_of_clause (mset S) +\n                            \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    image_mset disj_of_clause (mset T) +\n                    \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                   \\<Longrightarrow> mset\n(concat\n  (map (\\<lambda>c.\n           map (\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n            T)\n    S)) +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset S) + \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset (a # T)) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) (a # T))\n                              S)) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n", "from distrib1[OF a b]"], ["proof (chain)\npicking this:\n  mset\n   (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) G) +\n  (image_mset disj_of_clause (mset F) + \\<Gamma>) \\<Rightarrow>\\<^sub>n", "have \"image_mset disj_of_clause (mset F) + (mset (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) G) + \\<Gamma>) \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  mset\n   (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) G) +\n  (image_mset disj_of_clause (mset F) + \\<Gamma>) \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. image_mset disj_of_clause (mset F) +\n    (mset\n      (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n        G) +\n     \\<Gamma>) \\<Rightarrow>\\<^sub>n", "by (simp add: union_lcomm)"], ["proof (state)\nthis:\n  image_mset disj_of_clause (mset F) +\n  (mset\n    (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) G) +\n   \\<Gamma>) \\<Rightarrow>\\<^sub>n\n\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>image_mset disj_of_clause (mset []) +\n                \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset []) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) [])\n                              [])) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>a S T \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>image_mset disj_of_clause (mset S) +\n                            \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    image_mset disj_of_clause (mset T) +\n                    \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                   \\<Longrightarrow> mset\n(concat\n  (map (\\<lambda>c.\n           map (\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n            T)\n    S)) +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset (a # S)) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset T) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) T)\n                              (a # S))) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 3. \\<And>a S T \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>image_mset disj_of_clause (mset S) +\n                            \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    image_mset disj_of_clause (mset T) +\n                    \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                   \\<Longrightarrow> mset\n(concat\n  (map (\\<lambda>c.\n           map (\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n            T)\n    S)) +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset S) + \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset (a # T)) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) (a # T))\n                              S)) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n", "from Cons[OF this c]"], ["proof (chain)\npicking this:\n  mset\n   (concat\n     (map (\\<lambda>c.\n              map (\\<lambda>d.\n                      disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n               G)\n       F)) +\n  (mset\n    (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) G) +\n   \\<Gamma>) \\<Rightarrow>\\<^sub>n", "have \"mset (concat (map (\\<lambda>c. map (\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) G) F)) +\n  (mset (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) G) + \\<Gamma>) \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  mset\n   (concat\n     (map (\\<lambda>c.\n              map (\\<lambda>d.\n                      disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n               G)\n       F)) +\n  (mset\n    (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) G) +\n   \\<Gamma>) \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. mset\n     (concat\n       (map (\\<lambda>c.\n                map (\\<lambda>d.\n                        disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n                 G)\n         F)) +\n    (mset\n      (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n        G) +\n     \\<Gamma>) \\<Rightarrow>\\<^sub>n", "."], ["proof (state)\nthis:\n  mset\n   (concat\n     (map (\\<lambda>c.\n              map (\\<lambda>d.\n                      disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n               G)\n       F)) +\n  (mset\n    (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) G) +\n   \\<Gamma>) \\<Rightarrow>\\<^sub>n\n\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>image_mset disj_of_clause (mset []) +\n                \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset []) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) [])\n                              [])) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>a S T \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>image_mset disj_of_clause (mset S) +\n                            \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    image_mset disj_of_clause (mset T) +\n                    \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                   \\<Longrightarrow> mset\n(concat\n  (map (\\<lambda>c.\n           map (\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n            T)\n    S)) +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset (a # S)) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset T) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) T)\n                              (a # S))) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 3. \\<And>a S T \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>image_mset disj_of_clause (mset S) +\n                            \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    image_mset disj_of_clause (mset T) +\n                    \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                   \\<Longrightarrow> mset\n(concat\n  (map (\\<lambda>c.\n           map (\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n            T)\n    S)) +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset S) + \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset (a # T)) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) (a # T))\n                              S)) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n", "thus ?case"], ["proof (prove)\nusing this:\n  mset\n   (concat\n     (map (\\<lambda>c.\n              map (\\<lambda>d.\n                      disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n               G)\n       F)) +\n  (mset\n    (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) G) +\n   \\<Gamma>) \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. mset\n     (concat\n       (map (\\<lambda>c.\n                map (\\<lambda>d.\n                        disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n                 G)\n         (a # F))) +\n    \\<Gamma> \\<Rightarrow>\\<^sub>n", "by(simp add: add.commute union_assoc)"], ["proof (state)\nthis:\n  mset\n   (concat\n     (map (\\<lambda>c.\n              map (\\<lambda>d.\n                      disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n               G)\n       (a # F))) +\n  \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>image_mset disj_of_clause (mset []) +\n                \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset []) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) [])\n                              [])) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>a S T \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>image_mset disj_of_clause (mset S) +\n                            \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    image_mset disj_of_clause (mset T) +\n                    \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                   \\<Longrightarrow> mset\n(concat\n  (map (\\<lambda>c.\n           map (\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n            T)\n    S)) +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset S) + \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset (a # T)) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) (a # T))\n                              S)) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>image_mset disj_of_clause (mset []) +\n                \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset []) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) [])\n                              [])) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>a S T \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>image_mset disj_of_clause (mset S) +\n                            \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    image_mset disj_of_clause (mset T) +\n                    \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                   \\<Longrightarrow> mset\n(concat\n  (map (\\<lambda>c.\n           map (\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n            T)\n    S)) +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset S) + \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset (a # T)) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) (a # T))\n                              S)) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n", "case (Cons a F G)"], ["proof (state)\nthis:\n  \\<lbrakk>image_mset disj_of_clause (mset F) +\n           ?\\<Gamma> \\<Rightarrow>\\<^sub>n;\n   image_mset disj_of_clause (mset G) +\n   ?\\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n  \\<Longrightarrow> mset\n                     (concat\n                       (map (\\<lambda>c.\n                                map (\\<lambda>d.\n  disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n                                 G)\n                         F)) +\n                    ?\\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>image_mset disj_of_clause (mset []) +\n                \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset []) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) [])\n                              [])) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>a S T \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>image_mset disj_of_clause (mset S) +\n                            \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    image_mset disj_of_clause (mset T) +\n                    \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                   \\<Longrightarrow> mset\n(concat\n  (map (\\<lambda>c.\n           map (\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n            T)\n    S)) +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset S) + \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset (a # T)) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) (a # T))\n                              S)) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n", "case 2"], ["proof (state)\nthis:\n  image_mset disj_of_clause (mset F) + \\<Gamma> \\<Rightarrow>\\<^sub>n\n  image_mset disj_of_clause (mset (a # G)) + \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>image_mset disj_of_clause (mset []) +\n                \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset []) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) [])\n                              [])) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>a S T \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>image_mset disj_of_clause (mset S) +\n                            \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    image_mset disj_of_clause (mset T) +\n                    \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                   \\<Longrightarrow> mset\n(concat\n  (map (\\<lambda>c.\n           map (\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n            T)\n    S)) +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset S) + \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset (a # T)) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) (a # T))\n                              S)) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n", "text\\<open>Just the whole thing again, with slightly more mset magic and swapping things around.\\<close>"], ["proof (state)\nthis:\n  image_mset disj_of_clause (mset F) + \\<Gamma> \\<Rightarrow>\\<^sub>n\n  image_mset disj_of_clause (mset (a # G)) + \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>image_mset disj_of_clause (mset []) +\n                \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset []) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) [])\n                              [])) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>a S T \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>image_mset disj_of_clause (mset S) +\n                            \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    image_mset disj_of_clause (mset T) +\n                    \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                   \\<Longrightarrow> mset\n(concat\n  (map (\\<lambda>c.\n           map (\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n            T)\n    S)) +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset S) + \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset (a # T)) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) (a # T))\n                              S)) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n", "from \\<open>image_mset disj_of_clause (mset (a # G)) + \\<Gamma> \\<Rightarrow>\\<^sub>n\\<close>"], ["proof (chain)\npicking this:\n  image_mset disj_of_clause (mset (a # G)) + \\<Gamma> \\<Rightarrow>\\<^sub>n", "have a: \"disj_of_clause a, image_mset disj_of_clause (mset G) + \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  image_mset disj_of_clause (mset (a # G)) + \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. disj_of_clause\n     a, image_mset disj_of_clause (mset G) + \\<Gamma> \\<Rightarrow>\\<^sub>n", "by(simp add: add_mset_commute)"], ["proof (state)\nthis:\n  disj_of_clause\n   a, image_mset disj_of_clause (mset G) + \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>image_mset disj_of_clause (mset []) +\n                \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset []) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) [])\n                              [])) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>a S T \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>image_mset disj_of_clause (mset S) +\n                            \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    image_mset disj_of_clause (mset T) +\n                    \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                   \\<Longrightarrow> mset\n(concat\n  (map (\\<lambda>c.\n           map (\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n            T)\n    S)) +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset S) + \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset (a # T)) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) (a # T))\n                              S)) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n", "from \\<open>image_mset disj_of_clause (mset F) + \\<Gamma> \\<Rightarrow>\\<^sub>n\\<close>"], ["proof (chain)\npicking this:\n  image_mset disj_of_clause (mset F) + \\<Gamma> \\<Rightarrow>\\<^sub>n", "have b: \"image_mset disj_of_clause (mset F) + (image_mset disj_of_clause (mset G) + \\<Gamma>) \\<Rightarrow>\\<^sub>n\"\n   and c: \"image_mset disj_of_clause (mset F) + (mset (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) F) + \\<Gamma>) \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  image_mset disj_of_clause (mset F) + \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. image_mset disj_of_clause (mset F) +\n    (image_mset disj_of_clause (mset G) +\n     \\<Gamma>) \\<Rightarrow>\\<^sub>n &&&\n    image_mset disj_of_clause (mset F) +\n    (mset\n      (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n        F) +\n     \\<Gamma>) \\<Rightarrow>\\<^sub>n", "using LSC_weaken_set"], ["proof (prove)\nusing this:\n  image_mset disj_of_clause (mset F) + \\<Gamma> \\<Rightarrow>\\<^sub>n\n  ?\\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  ?\\<Gamma> + ?\\<Theta> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. image_mset disj_of_clause (mset F) +\n    (image_mset disj_of_clause (mset G) +\n     \\<Gamma>) \\<Rightarrow>\\<^sub>n &&&\n    image_mset disj_of_clause (mset F) +\n    (mset\n      (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n        F) +\n     \\<Gamma>) \\<Rightarrow>\\<^sub>n", "by (metis add.commute union_assoc)+"], ["proof (state)\nthis:\n  image_mset disj_of_clause (mset F) +\n  (image_mset disj_of_clause (mset G) + \\<Gamma>) \\<Rightarrow>\\<^sub>n\n  image_mset disj_of_clause (mset F) +\n  (mset\n    (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) F) +\n   \\<Gamma>) \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>image_mset disj_of_clause (mset []) +\n                \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset []) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) [])\n                              [])) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>a S T \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>image_mset disj_of_clause (mset S) +\n                            \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    image_mset disj_of_clause (mset T) +\n                    \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                   \\<Longrightarrow> mset\n(concat\n  (map (\\<lambda>c.\n           map (\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n            T)\n    S)) +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset S) + \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset (a # T)) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) (a # T))\n                              S)) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n", "have list_commute: \"(mset (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) F) + \\<Gamma>) \\<Rightarrow>\\<^sub>n =\n  (mset (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a) F) + \\<Gamma>) \\<Rightarrow>\\<^sub>n\" for \\<Gamma>"], ["proof (prove)\ngoal (1 subgoal):\n 1. mset\n     (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) F) +\n    \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    mset\n     (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a) F) +\n    \\<Gamma> \\<Rightarrow>\\<^sub>n", "proof(induction F arbitrary: \\<Gamma>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       mset\n        (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n          []) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n =\n       mset\n        (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n          []) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>aa F \\<Gamma>.\n       (\\<And>\\<Gamma>.\n           mset\n            (map (\\<lambda>d.\n                     disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n              F) +\n           \\<Gamma> \\<Rightarrow>\\<^sub>n =\n           mset\n            (map (\\<lambda>d.\n                     disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n              F) +\n           \\<Gamma> \\<Rightarrow>\\<^sub>n) \\<Longrightarrow>\n       mset\n        (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n          (aa # F)) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n =\n       mset\n        (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n          (aa # F)) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n", "(* meh, I should have only prooved one direction, would have been easier *)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       mset\n        (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n          []) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n =\n       mset\n        (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n          []) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>aa F \\<Gamma>.\n       (\\<And>\\<Gamma>.\n           mset\n            (map (\\<lambda>d.\n                     disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n              F) +\n           \\<Gamma> \\<Rightarrow>\\<^sub>n =\n           mset\n            (map (\\<lambda>d.\n                     disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n              F) +\n           \\<Gamma> \\<Rightarrow>\\<^sub>n) \\<Longrightarrow>\n       mset\n        (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n          (aa # F)) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n =\n       mset\n        (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n          (aa # F)) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n", "case (Cons f F)"], ["proof (state)\nthis:\n  mset\n   (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) F) +\n  ?\\<Gamma> \\<Rightarrow>\\<^sub>n =\n  mset\n   (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a) F) +\n  ?\\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       mset\n        (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n          []) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n =\n       mset\n        (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n          []) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>aa F \\<Gamma>.\n       (\\<And>\\<Gamma>.\n           mset\n            (map (\\<lambda>d.\n                     disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n              F) +\n           \\<Gamma> \\<Rightarrow>\\<^sub>n =\n           mset\n            (map (\\<lambda>d.\n                     disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n              F) +\n           \\<Gamma> \\<Rightarrow>\\<^sub>n) \\<Longrightarrow>\n       mset\n        (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n          (aa # F)) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n =\n       mset\n        (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n          (aa # F)) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n", "have \"mset (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) (f # F)) + \\<Gamma> \\<Rightarrow>\\<^sub>n =\n      disj_of_clause a \\<^bold>\\<or> disj_of_clause f, mset (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) F) + \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mset\n     (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n       (f # F)) +\n    \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    disj_of_clause a \\<^bold>\\<or>\n    disj_of_clause\n     f, mset\n         (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n           F) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n", "by(simp add: add_mset_commute)"], ["proof (state)\nthis:\n  mset\n   (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n     (f # F)) +\n  \\<Gamma> \\<Rightarrow>\\<^sub>n =\n  disj_of_clause a \\<^bold>\\<or>\n  disj_of_clause\n   f, mset\n       (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n         F) +\n      \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       mset\n        (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n          []) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n =\n       mset\n        (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n          []) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>aa F \\<Gamma>.\n       (\\<And>\\<Gamma>.\n           mset\n            (map (\\<lambda>d.\n                     disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n              F) +\n           \\<Gamma> \\<Rightarrow>\\<^sub>n =\n           mset\n            (map (\\<lambda>d.\n                     disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n              F) +\n           \\<Gamma> \\<Rightarrow>\\<^sub>n) \\<Longrightarrow>\n       mset\n        (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n          (aa # F)) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n =\n       mset\n        (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n          (aa # F)) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n", "also"], ["proof (state)\nthis:\n  mset\n   (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n     (f # F)) +\n  \\<Gamma> \\<Rightarrow>\\<^sub>n =\n  disj_of_clause a \\<^bold>\\<or>\n  disj_of_clause\n   f, mset\n       (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n         F) +\n      \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       mset\n        (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n          []) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n =\n       mset\n        (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n          []) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>aa F \\<Gamma>.\n       (\\<And>\\<Gamma>.\n           mset\n            (map (\\<lambda>d.\n                     disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n              F) +\n           \\<Gamma> \\<Rightarrow>\\<^sub>n =\n           mset\n            (map (\\<lambda>d.\n                     disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n              F) +\n           \\<Gamma> \\<Rightarrow>\\<^sub>n) \\<Longrightarrow>\n       mset\n        (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n          (aa # F)) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n =\n       mset\n        (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n          (aa # F)) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n", "have \"\\<dots> = disj_of_clause f \\<^bold>\\<or> disj_of_clause a, mset (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) F) + \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disj_of_clause a \\<^bold>\\<or>\n    disj_of_clause\n     f, mset\n         (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n           F) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    disj_of_clause f \\<^bold>\\<or>\n    disj_of_clause\n     a, mset\n         (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n           F) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n", "by(auto dest!: LSC_invs)"], ["proof (state)\nthis:\n  disj_of_clause a \\<^bold>\\<or>\n  disj_of_clause\n   f, mset\n       (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n         F) +\n      \\<Gamma> \\<Rightarrow>\\<^sub>n =\n  disj_of_clause f \\<^bold>\\<or>\n  disj_of_clause\n   a, mset\n       (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n         F) +\n      \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       mset\n        (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n          []) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n =\n       mset\n        (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n          []) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>aa F \\<Gamma>.\n       (\\<And>\\<Gamma>.\n           mset\n            (map (\\<lambda>d.\n                     disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n              F) +\n           \\<Gamma> \\<Rightarrow>\\<^sub>n =\n           mset\n            (map (\\<lambda>d.\n                     disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n              F) +\n           \\<Gamma> \\<Rightarrow>\\<^sub>n) \\<Longrightarrow>\n       mset\n        (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n          (aa # F)) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n =\n       mset\n        (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n          (aa # F)) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n", "also"], ["proof (state)\nthis:\n  disj_of_clause a \\<^bold>\\<or>\n  disj_of_clause\n   f, mset\n       (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n         F) +\n      \\<Gamma> \\<Rightarrow>\\<^sub>n =\n  disj_of_clause f \\<^bold>\\<or>\n  disj_of_clause\n   a, mset\n       (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n         F) +\n      \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       mset\n        (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n          []) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n =\n       mset\n        (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n          []) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>aa F \\<Gamma>.\n       (\\<And>\\<Gamma>.\n           mset\n            (map (\\<lambda>d.\n                     disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n              F) +\n           \\<Gamma> \\<Rightarrow>\\<^sub>n =\n           mset\n            (map (\\<lambda>d.\n                     disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n              F) +\n           \\<Gamma> \\<Rightarrow>\\<^sub>n) \\<Longrightarrow>\n       mset\n        (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n          (aa # F)) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n =\n       mset\n        (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n          (aa # F)) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n", "have \"\\<dots> = mset (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) F) + (disj_of_clause f \\<^bold>\\<or> disj_of_clause a, \\<Gamma>) \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disj_of_clause f \\<^bold>\\<or>\n    disj_of_clause\n     a, mset\n         (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n           F) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    mset\n     (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) F) +\n    (disj_of_clause f \\<^bold>\\<or>\n     disj_of_clause a, \\<Gamma>) \\<Rightarrow>\\<^sub>n", "by (simp add: add_mset_commute)"], ["proof (state)\nthis:\n  disj_of_clause f \\<^bold>\\<or>\n  disj_of_clause\n   a, mset\n       (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n         F) +\n      \\<Gamma> \\<Rightarrow>\\<^sub>n =\n  mset\n   (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) F) +\n  (disj_of_clause f \\<^bold>\\<or>\n   disj_of_clause a, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       mset\n        (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n          []) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n =\n       mset\n        (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n          []) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>aa F \\<Gamma>.\n       (\\<And>\\<Gamma>.\n           mset\n            (map (\\<lambda>d.\n                     disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n              F) +\n           \\<Gamma> \\<Rightarrow>\\<^sub>n =\n           mset\n            (map (\\<lambda>d.\n                     disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n              F) +\n           \\<Gamma> \\<Rightarrow>\\<^sub>n) \\<Longrightarrow>\n       mset\n        (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n          (aa # F)) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n =\n       mset\n        (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n          (aa # F)) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n", "also"], ["proof (state)\nthis:\n  disj_of_clause f \\<^bold>\\<or>\n  disj_of_clause\n   a, mset\n       (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n         F) +\n      \\<Gamma> \\<Rightarrow>\\<^sub>n =\n  mset\n   (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) F) +\n  (disj_of_clause f \\<^bold>\\<or>\n   disj_of_clause a, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       mset\n        (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n          []) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n =\n       mset\n        (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n          []) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>aa F \\<Gamma>.\n       (\\<And>\\<Gamma>.\n           mset\n            (map (\\<lambda>d.\n                     disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n              F) +\n           \\<Gamma> \\<Rightarrow>\\<^sub>n =\n           mset\n            (map (\\<lambda>d.\n                     disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n              F) +\n           \\<Gamma> \\<Rightarrow>\\<^sub>n) \\<Longrightarrow>\n       mset\n        (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n          (aa # F)) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n =\n       mset\n        (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n          (aa # F)) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n", "have \"\\<dots> = mset (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a) F) + (disj_of_clause f \\<^bold>\\<or> disj_of_clause a, \\<Gamma>) \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mset\n     (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) F) +\n    (disj_of_clause f \\<^bold>\\<or>\n     disj_of_clause a, \\<Gamma>) \\<Rightarrow>\\<^sub>n =\n    mset\n     (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a) F) +\n    (disj_of_clause f \\<^bold>\\<or>\n     disj_of_clause a, \\<Gamma>) \\<Rightarrow>\\<^sub>n", "using Cons.IH"], ["proof (prove)\nusing this:\n  mset\n   (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) F) +\n  ?\\<Gamma> \\<Rightarrow>\\<^sub>n =\n  mset\n   (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a) F) +\n  ?\\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. mset\n     (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) F) +\n    (disj_of_clause f \\<^bold>\\<or>\n     disj_of_clause a, \\<Gamma>) \\<Rightarrow>\\<^sub>n =\n    mset\n     (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a) F) +\n    (disj_of_clause f \\<^bold>\\<or>\n     disj_of_clause a, \\<Gamma>) \\<Rightarrow>\\<^sub>n", "by (metis disj_of_clause_is_nnf insert_iff is_nnf.simps(3) set_mset_add_mset_insert)"], ["proof (state)\nthis:\n  mset\n   (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) F) +\n  (disj_of_clause f \\<^bold>\\<or>\n   disj_of_clause a, \\<Gamma>) \\<Rightarrow>\\<^sub>n =\n  mset\n   (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a) F) +\n  (disj_of_clause f \\<^bold>\\<or>\n   disj_of_clause a, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       mset\n        (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n          []) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n =\n       mset\n        (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n          []) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>aa F \\<Gamma>.\n       (\\<And>\\<Gamma>.\n           mset\n            (map (\\<lambda>d.\n                     disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n              F) +\n           \\<Gamma> \\<Rightarrow>\\<^sub>n =\n           mset\n            (map (\\<lambda>d.\n                     disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n              F) +\n           \\<Gamma> \\<Rightarrow>\\<^sub>n) \\<Longrightarrow>\n       mset\n        (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n          (aa # F)) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n =\n       mset\n        (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n          (aa # F)) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n", "(* this was the step that shows why I'm doing this *)"], ["proof (state)\nthis:\n  mset\n   (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) F) +\n  (disj_of_clause f \\<^bold>\\<or>\n   disj_of_clause a, \\<Gamma>) \\<Rightarrow>\\<^sub>n =\n  mset\n   (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a) F) +\n  (disj_of_clause f \\<^bold>\\<or>\n   disj_of_clause a, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       mset\n        (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n          []) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n =\n       mset\n        (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n          []) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>aa F \\<Gamma>.\n       (\\<And>\\<Gamma>.\n           mset\n            (map (\\<lambda>d.\n                     disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n              F) +\n           \\<Gamma> \\<Rightarrow>\\<^sub>n =\n           mset\n            (map (\\<lambda>d.\n                     disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n              F) +\n           \\<Gamma> \\<Rightarrow>\\<^sub>n) \\<Longrightarrow>\n       mset\n        (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n          (aa # F)) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n =\n       mset\n        (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n          (aa # F)) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n", "finally"], ["proof (chain)\npicking this:\n  mset\n   (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n     (f # F)) +\n  \\<Gamma> \\<Rightarrow>\\<^sub>n =\n  mset\n   (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a) F) +\n  (disj_of_clause f \\<^bold>\\<or>\n   disj_of_clause a, \\<Gamma>) \\<Rightarrow>\\<^sub>n", "show ?case"], ["proof (prove)\nusing this:\n  mset\n   (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n     (f # F)) +\n  \\<Gamma> \\<Rightarrow>\\<^sub>n =\n  mset\n   (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a) F) +\n  (disj_of_clause f \\<^bold>\\<or>\n   disj_of_clause a, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. mset\n     (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n       (f # F)) +\n    \\<Gamma> \\<Rightarrow>\\<^sub>n =\n    mset\n     (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n       (f # F)) +\n    \\<Gamma> \\<Rightarrow>\\<^sub>n", "by simp"], ["proof (state)\nthis:\n  mset\n   (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n     (f # F)) +\n  \\<Gamma> \\<Rightarrow>\\<^sub>n =\n  mset\n   (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n     (f # F)) +\n  \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma>.\n       mset\n        (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n          []) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n =\n       mset\n        (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a)\n          []) +\n       \\<Gamma> \\<Rightarrow>\\<^sub>n", "qed simp"], ["proof (state)\nthis:\n  mset\n   (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) F) +\n  ?\\<Gamma> \\<Rightarrow>\\<^sub>n =\n  mset\n   (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a) F) +\n  ?\\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>image_mset disj_of_clause (mset []) +\n                \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset []) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) [])\n                              [])) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>a S T \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>image_mset disj_of_clause (mset S) +\n                            \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    image_mset disj_of_clause (mset T) +\n                    \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                   \\<Longrightarrow> mset\n(concat\n  (map (\\<lambda>c.\n           map (\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n            T)\n    S)) +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset S) + \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset (a # T)) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) (a # T))\n                              S)) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n", "from distrib1[OF a b]"], ["proof (chain)\npicking this:\n  mset\n   (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) F) +\n  (image_mset disj_of_clause (mset G) + \\<Gamma>) \\<Rightarrow>\\<^sub>n", "have \"image_mset disj_of_clause (mset G) + (mset (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) F) + \\<Gamma>) \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  mset\n   (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) F) +\n  (image_mset disj_of_clause (mset G) + \\<Gamma>) \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. image_mset disj_of_clause (mset G) +\n    (mset\n      (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n        F) +\n     \\<Gamma>) \\<Rightarrow>\\<^sub>n", "by(auto simp add: add.left_commute)"], ["proof (state)\nthis:\n  image_mset disj_of_clause (mset G) +\n  (mset\n    (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) F) +\n   \\<Gamma>) \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>image_mset disj_of_clause (mset []) +\n                \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset []) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) [])\n                              [])) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>a S T \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>image_mset disj_of_clause (mset S) +\n                            \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    image_mset disj_of_clause (mset T) +\n                    \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                   \\<Longrightarrow> mset\n(concat\n  (map (\\<lambda>c.\n           map (\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n            T)\n    S)) +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset S) + \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset (a # T)) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) (a # T))\n                              S)) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n", "from Cons[OF c this ]"], ["proof (chain)\npicking this:\n  mset\n   (concat\n     (map (\\<lambda>c.\n              map (\\<lambda>d.\n                      disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n               G)\n       F)) +\n  (mset\n    (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) F) +\n   \\<Gamma>) \\<Rightarrow>\\<^sub>n", "have \"mset (concat (map (\\<lambda>c. map (\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) G) F)) +\n  (mset (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) F) + \\<Gamma>) \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  mset\n   (concat\n     (map (\\<lambda>c.\n              map (\\<lambda>d.\n                      disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n               G)\n       F)) +\n  (mset\n    (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) F) +\n   \\<Gamma>) \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. mset\n     (concat\n       (map (\\<lambda>c.\n                map (\\<lambda>d.\n                        disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n                 G)\n         F)) +\n    (mset\n      (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d)\n        F) +\n     \\<Gamma>) \\<Rightarrow>\\<^sub>n", "."], ["proof (state)\nthis:\n  mset\n   (concat\n     (map (\\<lambda>c.\n              map (\\<lambda>d.\n                      disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n               G)\n       F)) +\n  (mset\n    (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) F) +\n   \\<Gamma>) \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>image_mset disj_of_clause (mset []) +\n                \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset []) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) [])\n                              [])) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>a S T \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>image_mset disj_of_clause (mset S) +\n                            \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    image_mset disj_of_clause (mset T) +\n                    \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n                   \\<Longrightarrow> mset\n(concat\n  (map (\\<lambda>c.\n           map (\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n            T)\n    S)) +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset S) + \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset (a # T)) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) (a # T))\n                              S)) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n", "thus ?case"], ["proof (prove)\nusing this:\n  mset\n   (concat\n     (map (\\<lambda>c.\n              map (\\<lambda>d.\n                      disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n               G)\n       F)) +\n  (mset\n    (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) F) +\n   \\<Gamma>) \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. mset\n     (concat\n       (map (\\<lambda>c.\n                map (\\<lambda>d.\n                        disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n                 (a # G))\n         F)) +\n    \\<Gamma> \\<Rightarrow>\\<^sub>n", "using list_commute"], ["proof (prove)\nusing this:\n  mset\n   (concat\n     (map (\\<lambda>c.\n              map (\\<lambda>d.\n                      disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n               G)\n       F)) +\n  (mset\n    (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) F) +\n   \\<Gamma>) \\<Rightarrow>\\<^sub>n\n  mset\n   (map (\\<lambda>d. disj_of_clause a \\<^bold>\\<or> disj_of_clause d) F) +\n  ?\\<Gamma> \\<Rightarrow>\\<^sub>n =\n  mset\n   (map (\\<lambda>d. disj_of_clause d \\<^bold>\\<or> disj_of_clause a) F) +\n  ?\\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. mset\n     (concat\n       (map (\\<lambda>c.\n                map (\\<lambda>d.\n                        disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n                 (a # G))\n         F)) +\n    \\<Gamma> \\<Rightarrow>\\<^sub>n", "by (simp add: mset_concat_map_cons add.assoc add.left_commute)"], ["proof (state)\nthis:\n  mset\n   (concat\n     (map (\\<lambda>c.\n              map (\\<lambda>d.\n                      disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n               (a # G))\n       F)) +\n  \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>image_mset disj_of_clause (mset []) +\n                \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        image_mset disj_of_clause (mset []) +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n       \\<Longrightarrow> mset\n                          (concat\n                            (map (\\<lambda>c.\n                                     map\n(\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) [])\n                              [])) +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n", "qed simp"], ["", "lemma LSC_BigAndL: \"mset F + \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow> \\<^bold>\\<And>F, \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mset F + \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n    \\<^bold>\\<And>F, \\<Gamma> \\<Rightarrow>\\<^sub>n", "by(induction F arbitrary: \\<Gamma>; simp add: LSC_weaken) (metis LSC.AndL add_mset_commute union_mset_add_mset_right)"], ["", "lemma LSC_Top_unused: \"\\<lbrakk>\\<Gamma> \\<Rightarrow>\\<^sub>n; is_nnf_mset \\<Gamma>\\<rbrakk> \\<Longrightarrow> \\<Gamma> - {#\\<^bold>\\<not> \\<bottom>#} \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma> \\<Rightarrow>\\<^sub>n; is_nnf_mset \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> -\n                      (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n", "proof(induction rule: LSC.induct)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>k \\<Gamma>.\n       is_nnf_mset\n        (\\<^bold>\\<not> (Atom k), Atom k, \\<Gamma>) \\<Longrightarrow>\n       (\\<^bold>\\<not> (Atom k), Atom k, \\<Gamma>) -\n       (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 2. \\<And>\\<Gamma>.\n       is_nnf_mset (\\<bottom>, \\<Gamma>) \\<Longrightarrow>\n       (\\<bottom>, \\<Gamma>) -\n       (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n        (F, G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<and> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        (G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<or> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        (G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<rightarrow> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 8. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not>\n                           (F \\<^bold>\\<rightarrow> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 9. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n", "case Ax"], ["proof (state)\nthis:\n  is_nnf_mset (\\<^bold>\\<not> (Atom k_), Atom k_, \\<Gamma>_)\n\ngoal (9 subgoals):\n 1. \\<And>k \\<Gamma>.\n       is_nnf_mset\n        (\\<^bold>\\<not> (Atom k), Atom k, \\<Gamma>) \\<Longrightarrow>\n       (\\<^bold>\\<not> (Atom k), Atom k, \\<Gamma>) -\n       (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 2. \\<And>\\<Gamma>.\n       is_nnf_mset (\\<bottom>, \\<Gamma>) \\<Longrightarrow>\n       (\\<bottom>, \\<Gamma>) -\n       (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n        (F, G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<and> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        (G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<or> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        (G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<rightarrow> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 8. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not>\n                           (F \\<^bold>\\<rightarrow> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 9. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n", "thus ?case"], ["proof (prove)\nusing this:\n  is_nnf_mset (\\<^bold>\\<not> (Atom k_), Atom k_, \\<Gamma>_)\n\ngoal (1 subgoal):\n 1. (\\<^bold>\\<not> (Atom k_), Atom k_, \\<Gamma>_) -\n    (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n", "by (metis LSC.Ax add.commute diff_union_swap formula.distinct(1,3) formula.inject(2))"], ["proof (state)\nthis:\n  (\\<^bold>\\<not> (Atom k_), Atom k_, \\<Gamma>_) -\n  (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n\ngoal (8 subgoals):\n 1. \\<And>\\<Gamma>.\n       is_nnf_mset (\\<bottom>, \\<Gamma>) \\<Longrightarrow>\n       (\\<bottom>, \\<Gamma>) -\n       (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 2. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n        (F, G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<and> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        (G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<or> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        (G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<rightarrow> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not>\n                           (F \\<^bold>\\<rightarrow> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 8. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>\\<Gamma>.\n       is_nnf_mset (\\<bottom>, \\<Gamma>) \\<Longrightarrow>\n       (\\<bottom>, \\<Gamma>) -\n       (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 2. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n        (F, G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<and> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        (G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<or> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        (G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<rightarrow> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not>\n                           (F \\<^bold>\\<rightarrow> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 8. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n", "case BotL"], ["proof (state)\nthis:\n  is_nnf_mset (\\<bottom>, \\<Gamma>_)\n\ngoal (8 subgoals):\n 1. \\<And>\\<Gamma>.\n       is_nnf_mset (\\<bottom>, \\<Gamma>) \\<Longrightarrow>\n       (\\<bottom>, \\<Gamma>) -\n       (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 2. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n        (F, G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<and> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        (G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<or> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        (G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<rightarrow> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not>\n                           (F \\<^bold>\\<rightarrow> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 8. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n", "thus ?case"], ["proof (prove)\nusing this:\n  is_nnf_mset (\\<bottom>, \\<Gamma>_)\n\ngoal (1 subgoal):\n 1. (\\<bottom>, \\<Gamma>_) -\n    (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n", "by (metis LSC.BotL add.commute diff_union_swap formula.distinct(11))"], ["proof (state)\nthis:\n  (\\<bottom>, \\<Gamma>_) -\n  (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n\ngoal (7 subgoals):\n 1. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n        (F, G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<and> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 2. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        (G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<or> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        (G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<rightarrow> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not>\n                           (F \\<^bold>\\<rightarrow> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n        (F, G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<and> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 2. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        (G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<or> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        (G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<rightarrow> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not>\n                           (F \\<^bold>\\<rightarrow> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n", "case (AndL F G \\<Gamma>)"], ["proof (state)\nthis:\n  F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n  (F, G, \\<Gamma>) - (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n  is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\n\ngoal (7 subgoals):\n 1. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n        (F, G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<and> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 2. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        (G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<or> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        (G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<rightarrow> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not>\n                           (F \\<^bold>\\<rightarrow> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n", "hence \"(F, G, \\<Gamma>) - {#\\<^bold>\\<not> \\<bottom>#} \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n  (F, G, \\<Gamma>) - (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n  is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\n\ngoal (1 subgoal):\n 1. (F, G, \\<Gamma>) - (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n", "by simp_all"], ["proof (state)\nthis:\n  (F, G, \\<Gamma>) - (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n\ngoal (7 subgoals):\n 1. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n        (F, G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<and> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 2. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        (G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<or> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        (G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<rightarrow> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not>\n                           (F \\<^bold>\\<rightarrow> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n", "hence \"F \\<^bold>\\<and> G, \\<Gamma> - {#\\<^bold>\\<not> \\<bottom>#} \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  (F, G, \\<Gamma>) - (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. F \\<^bold>\\<and>\n    G, \\<Gamma> - (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n", "by (metis AndL.hyps LSC.AndL diff_single_trivial diff_union_swap2)"], ["proof (state)\nthis:\n  F \\<^bold>\\<and>\n  G, \\<Gamma> - (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n\ngoal (7 subgoals):\n 1. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n        (F, G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<and> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 2. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        (G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<or> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        (G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<rightarrow> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not>\n                           (F \\<^bold>\\<rightarrow> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n", "thus ?case"], ["proof (prove)\nusing this:\n  F \\<^bold>\\<and>\n  G, \\<Gamma> - (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. (F \\<^bold>\\<and> G, \\<Gamma>) -\n    (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n", "by (metis add.commute diff_union_swap formula.distinct(19))"], ["proof (state)\nthis:\n  (F \\<^bold>\\<and> G, \\<Gamma>) -\n  (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n\ngoal (6 subgoals):\n 1. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        (G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<or> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 2. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        (G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<rightarrow> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not>\n                           (F \\<^bold>\\<rightarrow> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        (G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<or> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 2. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        (G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<rightarrow> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not>\n                           (F \\<^bold>\\<rightarrow> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n", "case (OrL F \\<Gamma> G)"], ["proof (state)\nthis:\n  F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n  (F, \\<Gamma>) - (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n  is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n  (G, \\<Gamma>) - (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n  is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\n\ngoal (6 subgoals):\n 1. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        (G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<or> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 2. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        (G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<rightarrow> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not>\n                           (F \\<^bold>\\<rightarrow> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n", "hence \"(F, \\<Gamma>) - {#\\<^bold>\\<not> \\<bottom>#} \\<Rightarrow>\\<^sub>n\" \"(G, \\<Gamma>) - {#\\<^bold>\\<not> \\<bottom>#} \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n  (F, \\<Gamma>) - (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n  is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n  (G, \\<Gamma>) - (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n  is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\n\ngoal (1 subgoal):\n 1. (F, \\<Gamma>) -\n    (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n &&&\n    (G, \\<Gamma>) - (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n", "by simp_all"], ["proof (state)\nthis:\n  (F, \\<Gamma>) - (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n  (G, \\<Gamma>) - (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n\ngoal (6 subgoals):\n 1. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        (G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<or> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 2. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        (G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<rightarrow> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not>\n                           (F \\<^bold>\\<rightarrow> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n", "hence \"F \\<^bold>\\<or> G, \\<Gamma> - {#\\<^bold>\\<not> \\<bottom>#} \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  (F, \\<Gamma>) - (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n  (G, \\<Gamma>) - (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. F \\<^bold>\\<or>\n    G, \\<Gamma> - (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n", "by (metis LSC.OrL OrL.hyps(1) OrL.hyps(2) diff_single_trivial diff_union_swap2)"], ["proof (state)\nthis:\n  F \\<^bold>\\<or>\n  G, \\<Gamma> - (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n\ngoal (6 subgoals):\n 1. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        (G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<or> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 2. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        (G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<rightarrow> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not>\n                           (F \\<^bold>\\<rightarrow> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n", "thus ?case"], ["proof (prove)\nusing this:\n  F \\<^bold>\\<or>\n  G, \\<Gamma> - (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. (F \\<^bold>\\<or> G, \\<Gamma>) -\n    (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n", "by (metis diff_union_swap formula.distinct(21))"], ["proof (state)\nthis:\n  (F \\<^bold>\\<or> G, \\<Gamma>) -\n  (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n\ngoal (5 subgoals):\n 1. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 2. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        (\\<^bold>\\<not> F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        (G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (F \\<^bold>\\<rightarrow> G, \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<^bold>\\<not> G, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not>\n                           (F \\<^bold>\\<rightarrow> G), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        (F, \\<Gamma>) -\n        (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>) -\n                         (\\<^bold>\\<not>\n                           \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n", "qed auto"], ["", "lemma LSC_BigAndL_inv: \"\\<^bold>\\<And>F, \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow> \\<forall>f \\<in> set F. is_nnf f \\<Longrightarrow> is_nnf_mset \\<Gamma> \\<Longrightarrow> mset F + \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>\\<And>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     \\<forall>f\\<in>set F. is_nnf f; is_nnf_mset \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> mset F + \\<Gamma> \\<Rightarrow>\\<^sub>n", "proof(induction F arbitrary: \\<Gamma>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<And>[], \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        Ball (set []) is_nnf; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> mset [] + \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>a F \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>\\<^bold>\\<And>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    Ball (set F) is_nnf; is_nnf_mset \\<Gamma>\\<rbrakk>\n                   \\<Longrightarrow> mset F +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<And>a # F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        Ball (set (a # F)) is_nnf; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> mset (a # F) + \\<Gamma> \\<Rightarrow>\\<^sub>n", "case Nil"], ["proof (state)\nthis:\n  \\<^bold>\\<And>[], \\<Gamma> \\<Rightarrow>\\<^sub>n\n  \\<forall>a\\<in>set []. is_nnf a\n  is_nnf_mset \\<Gamma>\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<And>[], \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        Ball (set []) is_nnf; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> mset [] + \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>a F \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>\\<^bold>\\<And>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    Ball (set F) is_nnf; is_nnf_mset \\<Gamma>\\<rbrakk>\n                   \\<Longrightarrow> mset F +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<And>a # F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        Ball (set (a # F)) is_nnf; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> mset (a # F) + \\<Gamma> \\<Rightarrow>\\<^sub>n", "then"], ["proof (chain)\npicking this:\n  \\<^bold>\\<And>[], \\<Gamma> \\<Rightarrow>\\<^sub>n\n  \\<forall>a\\<in>set []. is_nnf a\n  is_nnf_mset \\<Gamma>", "show ?case"], ["proof (prove)\nusing this:\n  \\<^bold>\\<And>[], \\<Gamma> \\<Rightarrow>\\<^sub>n\n  \\<forall>a\\<in>set []. is_nnf a\n  is_nnf_mset \\<Gamma>\n\ngoal (1 subgoal):\n 1. mset [] + \\<Gamma> \\<Rightarrow>\\<^sub>n", "using LSC_Top_unused"], ["proof (prove)\nusing this:\n  \\<^bold>\\<And>[], \\<Gamma> \\<Rightarrow>\\<^sub>n\n  \\<forall>a\\<in>set []. is_nnf a\n  is_nnf_mset \\<Gamma>\n  \\<lbrakk>?\\<Gamma> \\<Rightarrow>\\<^sub>n; is_nnf_mset ?\\<Gamma>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> -\n                    (\\<^bold>\\<not> \\<bottom>, {#}) \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. mset [] + \\<Gamma> \\<Rightarrow>\\<^sub>n", "by fastforce"], ["proof (state)\nthis:\n  mset [] + \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<And>a F \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>\\<^bold>\\<And>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    Ball (set F) is_nnf; is_nnf_mset \\<Gamma>\\<rbrakk>\n                   \\<Longrightarrow> mset F +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<And>a # F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        Ball (set (a # F)) is_nnf; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> mset (a # F) + \\<Gamma> \\<Rightarrow>\\<^sub>n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a F \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>\\<^bold>\\<And>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    Ball (set F) is_nnf; is_nnf_mset \\<Gamma>\\<rbrakk>\n                   \\<Longrightarrow> mset F +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<And>a # F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        Ball (set (a # F)) is_nnf; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> mset (a # F) + \\<Gamma> \\<Rightarrow>\\<^sub>n", "case (Cons a F)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<^bold>\\<And>F, ?\\<Gamma> \\<Rightarrow>\\<^sub>n;\n   \\<forall>a\\<in>set F. is_nnf a; is_nnf_mset ?\\<Gamma>\\<rbrakk>\n  \\<Longrightarrow> mset F + ?\\<Gamma> \\<Rightarrow>\\<^sub>n\n  \\<^bold>\\<And>a # F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  \\<forall>a\\<in>set (a # F). is_nnf a\n  is_nnf_mset \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>a F \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>\\<^bold>\\<And>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    Ball (set F) is_nnf; is_nnf_mset \\<Gamma>\\<rbrakk>\n                   \\<Longrightarrow> mset F +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<And>a # F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        Ball (set (a # F)) is_nnf; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> mset (a # F) + \\<Gamma> \\<Rightarrow>\\<^sub>n", "hence \"\\<^bold>\\<And>F, a, \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<^bold>\\<And>F, ?\\<Gamma> \\<Rightarrow>\\<^sub>n;\n   \\<forall>a\\<in>set F. is_nnf a; is_nnf_mset ?\\<Gamma>\\<rbrakk>\n  \\<Longrightarrow> mset F + ?\\<Gamma> \\<Rightarrow>\\<^sub>n\n  \\<^bold>\\<And>a # F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  \\<forall>a\\<in>set (a # F). is_nnf a\n  is_nnf_mset \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<^bold>\\<And>F, a, \\<Gamma> \\<Rightarrow>\\<^sub>n", "by(auto dest: LSC_invs simp: add_mset_commute)"], ["proof (state)\nthis:\n  \\<^bold>\\<And>F, a, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<And>a F \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>\\<^bold>\\<And>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    Ball (set F) is_nnf; is_nnf_mset \\<Gamma>\\<rbrakk>\n                   \\<Longrightarrow> mset F +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<And>a # F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        Ball (set (a # F)) is_nnf; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> mset (a # F) + \\<Gamma> \\<Rightarrow>\\<^sub>n", "with Cons"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<^bold>\\<And>F, ?\\<Gamma> \\<Rightarrow>\\<^sub>n;\n   \\<forall>a\\<in>set F. is_nnf a; is_nnf_mset ?\\<Gamma>\\<rbrakk>\n  \\<Longrightarrow> mset F + ?\\<Gamma> \\<Rightarrow>\\<^sub>n\n  \\<^bold>\\<And>a # F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  \\<forall>a\\<in>set (a # F). is_nnf a\n  is_nnf_mset \\<Gamma>\n  \\<^bold>\\<And>F, a, \\<Gamma> \\<Rightarrow>\\<^sub>n", "have \"mset F + (a, \\<Gamma>) \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<^bold>\\<And>F, ?\\<Gamma> \\<Rightarrow>\\<^sub>n;\n   \\<forall>a\\<in>set F. is_nnf a; is_nnf_mset ?\\<Gamma>\\<rbrakk>\n  \\<Longrightarrow> mset F + ?\\<Gamma> \\<Rightarrow>\\<^sub>n\n  \\<^bold>\\<And>a # F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  \\<forall>a\\<in>set (a # F). is_nnf a\n  is_nnf_mset \\<Gamma>\n  \\<^bold>\\<And>F, a, \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. mset F + (a, \\<Gamma>) \\<Rightarrow>\\<^sub>n", "by fastforce"], ["proof (state)\nthis:\n  mset F + (a, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<And>a F \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>\\<^bold>\\<And>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    Ball (set F) is_nnf; is_nnf_mset \\<Gamma>\\<rbrakk>\n                   \\<Longrightarrow> mset F +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<And>a # F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        Ball (set (a # F)) is_nnf; is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> mset (a # F) + \\<Gamma> \\<Rightarrow>\\<^sub>n", "then"], ["proof (chain)\npicking this:\n  mset F + (a, \\<Gamma>) \\<Rightarrow>\\<^sub>n", "show ?case"], ["proof (prove)\nusing this:\n  mset F + (a, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. mset (a # F) + \\<Gamma> \\<Rightarrow>\\<^sub>n", "by simp"], ["proof (state)\nthis:\n  mset (a # F) + \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma LSC_reassociate_Ands: \"{#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c, d) \\<in># C#} + \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n   is_nnf_mset \\<Gamma> \\<Longrightarrow>\n  {#disj_of_clause (c @ d). (c, d) \\<in># C#} + \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>{#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n             d) \\<in># C#} +\n             \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     is_nnf_mset \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> {#disj_of_clause (c @ d). (c, d) \\<in># C#} +\n                      \\<Gamma> \\<Rightarrow>\\<^sub>n", "proof(induction C arbitrary: \\<Gamma>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>{#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n                d) \\<in># {#}#} +\n                \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> {#disj_of_clause (c @ d). (c, d) \\<in># {#}#} +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>x C \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>{#disj_of_clause c \\<^bold>\\<or>\n                              disj_of_clause d\n                            . (c, d) \\<in># C#} +\n                            \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    is_nnf_mset \\<Gamma>\\<rbrakk>\n                   \\<Longrightarrow> {#disj_of_clause (c @ d). (c,\n                                     d) \\<in># C#} +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n        d) \\<in># x, C#} +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> {#disj_of_clause (c @ d). (c, d) \\<in># x, C#} +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n", "case (add x C)"], ["proof (state)\nthis:\n  \\<lbrakk>{#case a of\n             (c, d) \\<Rightarrow>\n               disj_of_clause c \\<^bold>\\<or> disj_of_clause d\n           . a \\<in># C#} +\n           ?\\<Gamma> \\<Rightarrow>\\<^sub>n;\n   is_nnf_mset ?\\<Gamma>\\<rbrakk>\n  \\<Longrightarrow> {#case a of (c, d) \\<Rightarrow> disj_of_clause (c @ d)\n                    . a \\<in># C#} +\n                    ?\\<Gamma> \\<Rightarrow>\\<^sub>n\n  {#case a of\n    (c, d) \\<Rightarrow> disj_of_clause c \\<^bold>\\<or> disj_of_clause d\n  . a \\<in># x, C#} +\n  \\<Gamma> \\<Rightarrow>\\<^sub>n\n  is_nnf_mset \\<Gamma>\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>{#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n                d) \\<in># {#}#} +\n                \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> {#disj_of_clause (c @ d). (c, d) \\<in># {#}#} +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>x C \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>{#disj_of_clause c \\<^bold>\\<or>\n                              disj_of_clause d\n                            . (c, d) \\<in># C#} +\n                            \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    is_nnf_mset \\<Gamma>\\<rbrakk>\n                   \\<Longrightarrow> {#disj_of_clause (c @ d). (c,\n                                     d) \\<in># C#} +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n        d) \\<in># x, C#} +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> {#disj_of_clause (c @ d). (c, d) \\<in># x, C#} +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n", "obtain a b where [simp]: \"x = (a, b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a b. x = (a, b) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(cases x)"], ["proof (state)\nthis:\n  x = (a, b)\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>{#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n                d) \\<in># {#}#} +\n                \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> {#disj_of_clause (c @ d). (c, d) \\<in># {#}#} +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>x C \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>{#disj_of_clause c \\<^bold>\\<or>\n                              disj_of_clause d\n                            . (c, d) \\<in># C#} +\n                            \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    is_nnf_mset \\<Gamma>\\<rbrakk>\n                   \\<Longrightarrow> {#disj_of_clause (c @ d). (c,\n                                     d) \\<in># C#} +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n        d) \\<in># x, C#} +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> {#disj_of_clause (c @ d). (c, d) \\<in># x, C#} +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n", "from add.prems"], ["proof (chain)\npicking this:\n  {#case a of\n    (c, d) \\<Rightarrow> disj_of_clause c \\<^bold>\\<or> disj_of_clause d\n  . a \\<in># x, C#} +\n  \\<Gamma> \\<Rightarrow>\\<^sub>n\n  is_nnf_mset \\<Gamma>", "have a: \"(disj_of_clause a \\<^bold>\\<or> disj_of_clause b), {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c, d) \\<in># C#} + \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  {#case a of\n    (c, d) \\<Rightarrow> disj_of_clause c \\<^bold>\\<or> disj_of_clause d\n  . a \\<in># x, C#} +\n  \\<Gamma> \\<Rightarrow>\\<^sub>n\n  is_nnf_mset \\<Gamma>\n\ngoal (1 subgoal):\n 1. disj_of_clause a \\<^bold>\\<or>\n    disj_of_clause\n     b, {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n        d) \\<in># C#} +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n", "by(simp add: add_mset_commute)"], ["proof (state)\nthis:\n  disj_of_clause a \\<^bold>\\<or>\n  disj_of_clause\n   b, {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c, d) \\<in># C#} +\n      \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>{#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n                d) \\<in># {#}#} +\n                \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> {#disj_of_clause (c @ d). (c, d) \\<in># {#}#} +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>x C \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>{#disj_of_clause c \\<^bold>\\<or>\n                              disj_of_clause d\n                            . (c, d) \\<in># C#} +\n                            \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    is_nnf_mset \\<Gamma>\\<rbrakk>\n                   \\<Longrightarrow> {#disj_of_clause (c @ d). (c,\n                                     d) \\<in># C#} +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n        d) \\<in># x, C#} +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> {#disj_of_clause (c @ d). (c, d) \\<in># x, C#} +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n", "hence \"(disj_of_clause (a@b)), {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c, d) \\<in># C#} + \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  disj_of_clause a \\<^bold>\\<or>\n  disj_of_clause\n   b, {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c, d) \\<in># C#} +\n      \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. disj_of_clause\n     (a @\n      b), {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n          d) \\<in># C#} +\n          \\<Gamma> \\<Rightarrow>\\<^sub>n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. disj_of_clause a \\<^bold>\\<or>\n    disj_of_clause\n     b, {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n        d) \\<in># C#} +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n    disj_of_clause\n     (a @\n      b), {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n          d) \\<in># C#} +\n          \\<Gamma> \\<Rightarrow>\\<^sub>n", "have pn: \"is_nnf_mset ({#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c, d) \\<in># C#} + \\<Gamma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_nnf_mset\n     ({#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c, d) \\<in># C#} +\n      \\<Gamma>)", "using \\<open>is_nnf_mset \\<Gamma>\\<close>"], ["proof (prove)\nusing this:\n  is_nnf_mset \\<Gamma>\n\ngoal (1 subgoal):\n 1. is_nnf_mset\n     ({#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c, d) \\<in># C#} +\n      \\<Gamma>)", "by auto"], ["proof (state)\nthis:\n  is_nnf_mset\n   ({#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c, d) \\<in># C#} +\n    \\<Gamma>)\n\ngoal (1 subgoal):\n 1. disj_of_clause a \\<^bold>\\<or>\n    disj_of_clause\n     b, {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n        d) \\<in># C#} +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n    disj_of_clause\n     (a @\n      b), {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n          d) \\<in># C#} +\n          \\<Gamma> \\<Rightarrow>\\<^sub>n", "have \"disj_of_clause a \\<^bold>\\<or> disj_of_clause b, \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow> is_nnf_mset \\<Gamma> \\<Longrightarrow> disj_of_clause (a @ b), \\<Gamma> \\<Rightarrow>\\<^sub>n\" for \\<Gamma>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>disj_of_clause a \\<^bold>\\<or>\n             disj_of_clause b, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     is_nnf_mset \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> disj_of_clause (a @ b), \\<Gamma> \\<Rightarrow>\\<^sub>n", "by(induction a) (auto dest!: LSC_invs)"], ["proof (state)\nthis:\n  \\<lbrakk>disj_of_clause a \\<^bold>\\<or>\n           disj_of_clause b, ?\\<Gamma> \\<Rightarrow>\\<^sub>n;\n   is_nnf_mset ?\\<Gamma>\\<rbrakk>\n  \\<Longrightarrow> disj_of_clause (a @ b), ?\\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. disj_of_clause a \\<^bold>\\<or>\n    disj_of_clause\n     b, {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n        d) \\<in># C#} +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n    disj_of_clause\n     (a @\n      b), {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n          d) \\<in># C#} +\n          \\<Gamma> \\<Rightarrow>\\<^sub>n", "from this[OF _ pn] a"], ["proof (chain)\npicking this:\n  disj_of_clause a \\<^bold>\\<or>\n  disj_of_clause\n   b, {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c, d) \\<in># C#} +\n      \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  disj_of_clause\n   (a @\n    b), {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n        d) \\<in># C#} +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\n  disj_of_clause a \\<^bold>\\<or>\n  disj_of_clause\n   b, {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c, d) \\<in># C#} +\n      \\<Gamma> \\<Rightarrow>\\<^sub>n", "show ?thesis"], ["proof (prove)\nusing this:\n  disj_of_clause a \\<^bold>\\<or>\n  disj_of_clause\n   b, {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c, d) \\<in># C#} +\n      \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  disj_of_clause\n   (a @\n    b), {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n        d) \\<in># C#} +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\n  disj_of_clause a \\<^bold>\\<or>\n  disj_of_clause\n   b, {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c, d) \\<in># C#} +\n      \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. disj_of_clause\n     (a @\n      b), {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n          d) \\<in># C#} +\n          \\<Gamma> \\<Rightarrow>\\<^sub>n", "."], ["proof (state)\nthis:\n  disj_of_clause\n   (a @\n    b), {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n        d) \\<in># C#} +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  disj_of_clause\n   (a @\n    b), {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n        d) \\<in># C#} +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>{#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n                d) \\<in># {#}#} +\n                \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> {#disj_of_clause (c @ d). (c, d) \\<in># {#}#} +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>x C \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>{#disj_of_clause c \\<^bold>\\<or>\n                              disj_of_clause d\n                            . (c, d) \\<in># C#} +\n                            \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    is_nnf_mset \\<Gamma>\\<rbrakk>\n                   \\<Longrightarrow> {#disj_of_clause (c @ d). (c,\n                                     d) \\<in># C#} +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n        d) \\<in># x, C#} +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> {#disj_of_clause (c @ d). (c, d) \\<in># x, C#} +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n", "hence \"{#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c, d) \\<in># C#} + ((disj_of_clause (a@b)),\\<Gamma>) \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  disj_of_clause\n   (a @\n    b), {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n        d) \\<in># C#} +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c, d) \\<in># C#} +\n    (disj_of_clause (a @ b), \\<Gamma>) \\<Rightarrow>\\<^sub>n", "by(simp add: add_mset_commute)"], ["proof (state)\nthis:\n  {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c, d) \\<in># C#} +\n  (disj_of_clause (a @ b), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>{#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n                d) \\<in># {#}#} +\n                \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> {#disj_of_clause (c @ d). (c, d) \\<in># {#}#} +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>x C \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>{#disj_of_clause c \\<^bold>\\<or>\n                              disj_of_clause d\n                            . (c, d) \\<in># C#} +\n                            \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    is_nnf_mset \\<Gamma>\\<rbrakk>\n                   \\<Longrightarrow> {#disj_of_clause (c @ d). (c,\n                                     d) \\<in># C#} +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n        d) \\<in># x, C#} +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> {#disj_of_clause (c @ d). (c, d) \\<in># x, C#} +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n", "with add.IH"], ["proof (chain)\npicking this:\n  \\<lbrakk>{#case a of\n             (c, d) \\<Rightarrow>\n               disj_of_clause c \\<^bold>\\<or> disj_of_clause d\n           . a \\<in># C#} +\n           ?\\<Gamma> \\<Rightarrow>\\<^sub>n;\n   is_nnf_mset ?\\<Gamma>\\<rbrakk>\n  \\<Longrightarrow> {#case a of (c, d) \\<Rightarrow> disj_of_clause (c @ d)\n                    . a \\<in># C#} +\n                    ?\\<Gamma> \\<Rightarrow>\\<^sub>n\n  {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c, d) \\<in># C#} +\n  (disj_of_clause (a @ b), \\<Gamma>) \\<Rightarrow>\\<^sub>n", "have \"{#disj_of_clause (c @ d). (c, d) \\<in># C#} + (disj_of_clause (a @ b), \\<Gamma>) \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  \\<lbrakk>{#case a of\n             (c, d) \\<Rightarrow>\n               disj_of_clause c \\<^bold>\\<or> disj_of_clause d\n           . a \\<in># C#} +\n           ?\\<Gamma> \\<Rightarrow>\\<^sub>n;\n   is_nnf_mset ?\\<Gamma>\\<rbrakk>\n  \\<Longrightarrow> {#case a of (c, d) \\<Rightarrow> disj_of_clause (c @ d)\n                    . a \\<in># C#} +\n                    ?\\<Gamma> \\<Rightarrow>\\<^sub>n\n  {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c, d) \\<in># C#} +\n  (disj_of_clause (a @ b), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. {#disj_of_clause (c @ d). (c, d) \\<in># C#} +\n    (disj_of_clause (a @ b), \\<Gamma>) \\<Rightarrow>\\<^sub>n", "using \\<open>is_nnf_mset \\<Gamma>\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>{#case a of\n             (c, d) \\<Rightarrow>\n               disj_of_clause c \\<^bold>\\<or> disj_of_clause d\n           . a \\<in># C#} +\n           ?\\<Gamma> \\<Rightarrow>\\<^sub>n;\n   is_nnf_mset ?\\<Gamma>\\<rbrakk>\n  \\<Longrightarrow> {#case a of (c, d) \\<Rightarrow> disj_of_clause (c @ d)\n                    . a \\<in># C#} +\n                    ?\\<Gamma> \\<Rightarrow>\\<^sub>n\n  {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c, d) \\<in># C#} +\n  (disj_of_clause (a @ b), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n  is_nnf_mset \\<Gamma>\n\ngoal (1 subgoal):\n 1. {#disj_of_clause (c @ d). (c, d) \\<in># C#} +\n    (disj_of_clause (a @ b), \\<Gamma>) \\<Rightarrow>\\<^sub>n", "by fastforce"], ["proof (state)\nthis:\n  {#disj_of_clause (c @ d). (c, d) \\<in># C#} +\n  (disj_of_clause (a @ b), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>{#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n                d) \\<in># {#}#} +\n                \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> {#disj_of_clause (c @ d). (c, d) \\<in># {#}#} +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n\n 2. \\<And>x C \\<Gamma>.\n       \\<lbrakk>\\<And>\\<Gamma>.\n                   \\<lbrakk>{#disj_of_clause c \\<^bold>\\<or>\n                              disj_of_clause d\n                            . (c, d) \\<in># C#} +\n                            \\<Gamma> \\<Rightarrow>\\<^sub>n;\n                    is_nnf_mset \\<Gamma>\\<rbrakk>\n                   \\<Longrightarrow> {#disj_of_clause (c @ d). (c,\n                                     d) \\<in># C#} +\n                                     \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n        d) \\<in># x, C#} +\n        \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> {#disj_of_clause (c @ d). (c, d) \\<in># x, C#} +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n", "thus ?case"], ["proof (prove)\nusing this:\n  {#disj_of_clause (c @ d). (c, d) \\<in># C#} +\n  (disj_of_clause (a @ b), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. {#case a of (c, d) \\<Rightarrow> disj_of_clause (c @ d)\n    . a \\<in># x, C#} +\n    \\<Gamma> \\<Rightarrow>\\<^sub>n", "by(simp add: add_mset_commute)"], ["proof (state)\nthis:\n  {#case a of (c, d) \\<Rightarrow> disj_of_clause (c @ d). a \\<in># x, C#} +\n  \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>{#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n                d) \\<in># {#}#} +\n                \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> {#disj_of_clause (c @ d). (c, d) \\<in># {#}#} +\n                         \\<Gamma> \\<Rightarrow>\\<^sub>n", "qed simp"], ["", "lemma LSC_cnf: \"\\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow> is_nnf_mset \\<Gamma> \\<Longrightarrow> image_mset cnf_form_of \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma> \\<Rightarrow>\\<^sub>n; is_nnf_mset \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> image_mset cnf_form_of \\<Gamma> \\<Rightarrow>\\<^sub>n", "proof(induction \"\\<Gamma>\" rule: LSC.induct)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>k \\<Gamma>.\n       is_nnf_mset\n        (\\<^bold>\\<not> (Atom k), Atom k, \\<Gamma>) \\<Longrightarrow>\n       image_mset cnf_form_of\n        (\\<^bold>\\<not> (Atom k), Atom k, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 2. \\<And>\\<Gamma>.\n       is_nnf_mset (\\<bottom>, \\<Gamma>) \\<Longrightarrow>\n       image_mset cnf_form_of (\\<bottom>, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<and>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<or>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not>\n           F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<or>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<and>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<rightarrow>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 8. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<rightarrow>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 9. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (\\<^bold>\\<not>\n                              F), \\<Gamma>) \\<Rightarrow>\\<^sub>n", "have [simp]: \"NO_MATCH (And I J) F \\<Longrightarrow> NO_MATCH (\\<^bold>\\<not>\\<bottom>) F \\<Longrightarrow> F,\\<^bold>\\<not>\\<bottom>,\\<Gamma> = \\<^bold>\\<not>\\<bottom>,F,\\<Gamma>\" for F I J \\<Gamma>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>NO_MATCH (I \\<^bold>\\<and> J) F;\n     NO_MATCH (\\<^bold>\\<not> \\<bottom>) F\\<rbrakk>\n    \\<Longrightarrow> F, \\<^bold>\\<not> \\<bottom>, \\<Gamma> =\n                      \\<^bold>\\<not> \\<bottom>, F, \\<Gamma>", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>NO_MATCH (?I1 \\<^bold>\\<and> ?J1) ?F1;\n   NO_MATCH (\\<^bold>\\<not> \\<bottom>) ?F1\\<rbrakk>\n  \\<Longrightarrow> ?F1, \\<^bold>\\<not> \\<bottom>, ?\\<Gamma>1 =\n                    \\<^bold>\\<not> \\<bottom>, ?F1, ?\\<Gamma>1\n\ngoal (9 subgoals):\n 1. \\<And>k \\<Gamma>.\n       is_nnf_mset\n        (\\<^bold>\\<not> (Atom k), Atom k, \\<Gamma>) \\<Longrightarrow>\n       image_mset cnf_form_of\n        (\\<^bold>\\<not> (Atom k), Atom k, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 2. \\<And>\\<Gamma>.\n       is_nnf_mset (\\<bottom>, \\<Gamma>) \\<Longrightarrow>\n       image_mset cnf_form_of (\\<bottom>, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<and>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<or>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not>\n           F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<or>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<and>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<rightarrow>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 8. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<rightarrow>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 9. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (\\<^bold>\\<not>\n                              F), \\<Gamma>) \\<Rightarrow>\\<^sub>n", "have [intro!]: \"\\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow> \\<^bold>\\<not>\\<bottom>, \\<Gamma> \\<Rightarrow>\\<^sub>n\" for \\<Gamma>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n    \\<^bold>\\<not> \\<bottom>, \\<Gamma> \\<Rightarrow>\\<^sub>n", "by (simp add: LSC_weaken)"], ["proof (state)\nthis:\n  ?\\<Gamma>2 \\<Rightarrow>\\<^sub>n \\<Longrightarrow>\n  \\<^bold>\\<not> \\<bottom>, ?\\<Gamma>2 \\<Rightarrow>\\<^sub>n\n\ngoal (9 subgoals):\n 1. \\<And>k \\<Gamma>.\n       is_nnf_mset\n        (\\<^bold>\\<not> (Atom k), Atom k, \\<Gamma>) \\<Longrightarrow>\n       image_mset cnf_form_of\n        (\\<^bold>\\<not> (Atom k), Atom k, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 2. \\<And>\\<Gamma>.\n       is_nnf_mset (\\<bottom>, \\<Gamma>) \\<Longrightarrow>\n       image_mset cnf_form_of (\\<bottom>, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<and>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<or>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not>\n           F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<or>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<and>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<rightarrow>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 8. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<rightarrow>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 9. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (\\<^bold>\\<not>\n                              F), \\<Gamma>) \\<Rightarrow>\\<^sub>n", "case Ax"], ["proof (state)\nthis:\n  is_nnf_mset (\\<^bold>\\<not> (Atom k_), Atom k_, \\<Gamma>_)\n\ngoal (9 subgoals):\n 1. \\<And>k \\<Gamma>.\n       is_nnf_mset\n        (\\<^bold>\\<not> (Atom k), Atom k, \\<Gamma>) \\<Longrightarrow>\n       image_mset cnf_form_of\n        (\\<^bold>\\<not> (Atom k), Atom k, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 2. \\<And>\\<Gamma>.\n       is_nnf_mset (\\<bottom>, \\<Gamma>) \\<Longrightarrow>\n       image_mset cnf_form_of (\\<bottom>, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<and>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<or>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not>\n           F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<or>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<and>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<rightarrow>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 8. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<rightarrow>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 9. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (\\<^bold>\\<not>\n                              F), \\<Gamma>) \\<Rightarrow>\\<^sub>n", "thus ?case"], ["proof (prove)\nusing this:\n  is_nnf_mset (\\<^bold>\\<not> (Atom k_), Atom k_, \\<Gamma>_)\n\ngoal (1 subgoal):\n 1. image_mset cnf_form_of\n     (\\<^bold>\\<not> (Atom k_), Atom k_, \\<Gamma>_) \\<Rightarrow>\\<^sub>n", "by(auto simp: cnf_form_of_defs)"], ["proof (state)\nthis:\n  image_mset cnf_form_of\n   (\\<^bold>\\<not> (Atom k_), Atom k_, \\<Gamma>_) \\<Rightarrow>\\<^sub>n\n\ngoal (8 subgoals):\n 1. \\<And>\\<Gamma>.\n       is_nnf_mset (\\<bottom>, \\<Gamma>) \\<Longrightarrow>\n       image_mset cnf_form_of (\\<bottom>, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 2. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<and>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<or>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not>\n           F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<or>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<and>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<rightarrow>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<rightarrow>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 8. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (\\<^bold>\\<not>\n                              F), \\<Gamma>) \\<Rightarrow>\\<^sub>n", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>\\<Gamma>.\n       is_nnf_mset (\\<bottom>, \\<Gamma>) \\<Longrightarrow>\n       image_mset cnf_form_of (\\<bottom>, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 2. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<and>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<or>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not>\n           F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<or>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<and>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<rightarrow>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<rightarrow>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 8. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (\\<^bold>\\<not>\n                              F), \\<Gamma>) \\<Rightarrow>\\<^sub>n", "case BotL"], ["proof (state)\nthis:\n  is_nnf_mset (\\<bottom>, \\<Gamma>_)\n\ngoal (8 subgoals):\n 1. \\<And>\\<Gamma>.\n       is_nnf_mset (\\<bottom>, \\<Gamma>) \\<Longrightarrow>\n       image_mset cnf_form_of (\\<bottom>, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 2. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<and>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<or>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not>\n           F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<or>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<and>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<rightarrow>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<rightarrow>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 8. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (\\<^bold>\\<not>\n                              F), \\<Gamma>) \\<Rightarrow>\\<^sub>n", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. image_mset cnf_form_of (\\<bottom>, \\<Gamma>_) \\<Rightarrow>\\<^sub>n", "by(auto simp: cnf_form_of_defs)"], ["proof (state)\nthis:\n  image_mset cnf_form_of (\\<bottom>, \\<Gamma>_) \\<Rightarrow>\\<^sub>n\n\ngoal (7 subgoals):\n 1. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<and>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 2. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<or>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not>\n           F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<or>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<and>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<rightarrow>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<rightarrow>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (\\<^bold>\\<not>\n                              F), \\<Gamma>) \\<Rightarrow>\\<^sub>n", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<and>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 2. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<or>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not>\n           F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<or>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<and>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<rightarrow>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<rightarrow>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (\\<^bold>\\<not>\n                              F), \\<Gamma>) \\<Rightarrow>\\<^sub>n", "have GO[simp]:\n    \"NO_MATCH ({#\\<^bold>\\<And>I#}) F \\<Longrightarrow> F + (\\<^bold>\\<And>G, S) = \\<^bold>\\<And>G, (F + S)\" \n    for F G H S I J a b"], ["proof (prove)\ngoal (1 subgoal):\n 1. NO_MATCH (\\<^bold>\\<And>I, {#}) F \\<Longrightarrow>\n    F + (\\<^bold>\\<And>G, S) = \\<^bold>\\<And>G, F + S", "by(simp_all add: add_mset_commute)"], ["proof (state)\nthis:\n  NO_MATCH (\\<^bold>\\<And>?I1, {#}) ?F1 \\<Longrightarrow>\n  ?F1 + (\\<^bold>\\<And>?G1, ?S1) = \\<^bold>\\<And>?G1, ?F1 + ?S1\n\ngoal (7 subgoals):\n 1. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<and>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 2. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<or>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not>\n           F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<or>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<and>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<rightarrow>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<rightarrow>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (\\<^bold>\\<not>\n                              F), \\<Gamma>) \\<Rightarrow>\\<^sub>n", "case (AndL F G \\<Gamma>)"], ["proof (state)\nthis:\n  F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n  image_mset cnf_form_of (F, G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n  is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\n\ngoal (7 subgoals):\n 1. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<and>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 2. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<or>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not>\n           F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<or>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<and>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<rightarrow>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<rightarrow>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 7. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (\\<^bold>\\<not>\n                              F), \\<Gamma>) \\<Rightarrow>\\<^sub>n", "thus ?case"], ["proof (prove)\nusing this:\n  F, G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  is_nnf_mset (F, G, \\<Gamma>) \\<Longrightarrow>\n  image_mset cnf_form_of (F, G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n  is_nnf_mset (F \\<^bold>\\<and> G, \\<Gamma>)\n\ngoal (1 subgoal):\n 1. image_mset cnf_form_of\n     (F \\<^bold>\\<and> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n", "by(auto dest!: LSC_BigAndL_inv intro!: LSC_BigAndL simp add: cnf_form_of_defs) (simp add: add_ac)"], ["proof (state)\nthis:\n  image_mset cnf_form_of\n   (F \\<^bold>\\<and> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n\ngoal (6 subgoals):\n 1. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<or>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 2. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not>\n           F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<or>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<and>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<rightarrow>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<rightarrow>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (\\<^bold>\\<not>\n                              F), \\<Gamma>) \\<Rightarrow>\\<^sub>n", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<or>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 2. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not>\n           F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<or>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<and>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<rightarrow>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<rightarrow>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (\\<^bold>\\<not>\n                              F), \\<Gamma>) \\<Rightarrow>\\<^sub>n", "case (OrL F \\<Gamma> G)"], ["proof (state)\nthis:\n  F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n  image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n  is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n  image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n  is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\n\ngoal (6 subgoals):\n 1. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<or>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 2. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not>\n           F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<or>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<and>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<rightarrow>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<rightarrow>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (\\<^bold>\\<not>\n                              F), \\<Gamma>) \\<Rightarrow>\\<^sub>n", "have 2: \"image_mset disj_of_clause (mset (concat (map (\\<lambda>f. map ((@) f) (cnf_lists G)) (cnf_lists F)))) + \\<Gamma> \\<Rightarrow>\\<^sub>n\"\n    if pig: \"is_nnf_mset \\<Gamma>\" and a:\n      \"mset (concat (map (\\<lambda>c. map (\\<lambda>d. disj_of_clause c \\<^bold>\\<or> disj_of_clause d) (cnf_lists G)) (cnf_lists F))) + \\<Gamma> \\<Rightarrow>\\<^sub>n\"\n    (* just some nasty modification of the conjunction *) for \\<Gamma>"], ["proof (prove)\ngoal (1 subgoal):\n 1. image_mset disj_of_clause\n     (mset\n       (concat\n         (map (\\<lambda>f. map ((@) f) (cnf_lists G)) (cnf_lists F)))) +\n    \\<Gamma> \\<Rightarrow>\\<^sub>n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. image_mset disj_of_clause\n     (mset\n       (concat\n         (map (\\<lambda>f. map ((@) f) (cnf_lists G)) (cnf_lists F)))) +\n    \\<Gamma> \\<Rightarrow>\\<^sub>n", "note cms[simp] = mset_map[symmetric] map_concat comp_def"], ["proof (state)\nthis:\n  image_mset ?f (mset ?xs) = mset (map ?f ?xs)\n  map ?f (concat ?xs) = concat (map (map ?f) ?xs)\n  ?f \\<circ> ?g = (\\<lambda>x. ?f (?g x))\n\ngoal (1 subgoal):\n 1. image_mset disj_of_clause\n     (mset\n       (concat\n         (map (\\<lambda>f. map ((@) f) (cnf_lists G)) (cnf_lists F)))) +\n    \\<Gamma> \\<Rightarrow>\\<^sub>n", "from a"], ["proof (chain)\npicking this:\n  mset\n   (concat\n     (map (\\<lambda>c.\n              map (\\<lambda>d.\n                      disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n               (cnf_lists G))\n       (cnf_lists F))) +\n  \\<Gamma> \\<Rightarrow>\\<^sub>n", "have \"image_mset (\\<lambda>(c,d). disj_of_clause c \\<^bold>\\<or> disj_of_clause d) (\n      mset (concat (map (\\<lambda>c. map (\\<lambda>d. (c,d)) (cnf_lists G)) (cnf_lists F)))) + \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  mset\n   (concat\n     (map (\\<lambda>c.\n              map (\\<lambda>d.\n                      disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n               (cnf_lists G))\n       (cnf_lists F))) +\n  \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n    d) \\<in># mset\n               (concat\n                 (map (\\<lambda>c. map (Pair c) (cnf_lists G))\n                   (cnf_lists F)))#} +\n    \\<Gamma> \\<Rightarrow>\\<^sub>n", "by simp"], ["proof (state)\nthis:\n  {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n  d) \\<in># mset\n             (concat\n               (map (\\<lambda>c. map (Pair c) (cnf_lists G))\n                 (cnf_lists F)))#} +\n  \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. image_mset disj_of_clause\n     (mset\n       (concat\n         (map (\\<lambda>f. map ((@) f) (cnf_lists G)) (cnf_lists F)))) +\n    \\<Gamma> \\<Rightarrow>\\<^sub>n", "hence \"image_mset (\\<lambda>(c,d). disj_of_clause (c@d)) (\n      mset (concat (map (\\<lambda>c. map (\\<lambda>d. (c,d)) (cnf_lists G)) (cnf_lists F)))) + \\<Gamma> \\<Rightarrow>\\<^sub>n\""], ["proof (prove)\nusing this:\n  {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n  d) \\<in># mset\n             (concat\n               (map (\\<lambda>c. map (Pair c) (cnf_lists G))\n                 (cnf_lists F)))#} +\n  \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. {#disj_of_clause (c @ d). (c,\n    d) \\<in># mset\n               (concat\n                 (map (\\<lambda>c. map (Pair c) (cnf_lists G))\n                   (cnf_lists F)))#} +\n    \\<Gamma> \\<Rightarrow>\\<^sub>n", "using LSC_reassociate_Ands pig"], ["proof (prove)\nusing this:\n  {#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n  d) \\<in># mset\n             (concat\n               (map (\\<lambda>c. map (Pair c) (cnf_lists G))\n                 (cnf_lists F)))#} +\n  \\<Gamma> \\<Rightarrow>\\<^sub>n\n  \\<lbrakk>{#disj_of_clause c \\<^bold>\\<or> disj_of_clause d. (c,\n           d) \\<in># ?C#} +\n           ?\\<Gamma> \\<Rightarrow>\\<^sub>n;\n   is_nnf_mset ?\\<Gamma>\\<rbrakk>\n  \\<Longrightarrow> {#disj_of_clause (c @ d). (c, d) \\<in># ?C#} +\n                    ?\\<Gamma> \\<Rightarrow>\\<^sub>n\n  is_nnf_mset \\<Gamma>\n\ngoal (1 subgoal):\n 1. {#disj_of_clause (c @ d). (c,\n    d) \\<in># mset\n               (concat\n                 (map (\\<lambda>c. map (Pair c) (cnf_lists G))\n                   (cnf_lists F)))#} +\n    \\<Gamma> \\<Rightarrow>\\<^sub>n", "by blast"], ["proof (state)\nthis:\n  {#disj_of_clause (c @ d). (c,\n  d) \\<in># mset\n             (concat\n               (map (\\<lambda>c. map (Pair c) (cnf_lists G))\n                 (cnf_lists F)))#} +\n  \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. image_mset disj_of_clause\n     (mset\n       (concat\n         (map (\\<lambda>f. map ((@) f) (cnf_lists G)) (cnf_lists F)))) +\n    \\<Gamma> \\<Rightarrow>\\<^sub>n", "thus ?thesis"], ["proof (prove)\nusing this:\n  {#disj_of_clause (c @ d). (c,\n  d) \\<in># mset\n             (concat\n               (map (\\<lambda>c. map (Pair c) (cnf_lists G))\n                 (cnf_lists F)))#} +\n  \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. image_mset disj_of_clause\n     (mset\n       (concat\n         (map (\\<lambda>f. map ((@) f) (cnf_lists G)) (cnf_lists F)))) +\n    \\<Gamma> \\<Rightarrow>\\<^sub>n", "by simp"], ["proof (state)\nthis:\n  image_mset disj_of_clause\n   (mset\n     (concat (map (\\<lambda>f. map ((@) f) (cnf_lists G)) (cnf_lists F)))) +\n  \\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>is_nnf_mset ?\\<Gamma>;\n   mset\n    (concat\n      (map (\\<lambda>c.\n               map (\\<lambda>d.\n                       disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n                (cnf_lists G))\n        (cnf_lists F))) +\n   ?\\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n  \\<Longrightarrow> image_mset disj_of_clause\n                     (mset\n                       (concat\n                         (map (\\<lambda>f. map ((@) f) (cnf_lists G))\n                           (cnf_lists F)))) +\n                    ?\\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (6 subgoals):\n 1. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<or>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 2. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not>\n           F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<or>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<and>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<rightarrow>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<rightarrow>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (\\<^bold>\\<not>\n                              F), \\<Gamma>) \\<Rightarrow>\\<^sub>n", "have 1: \"\\<lbrakk>\\<^bold>\\<And> (map disj_of_clause (cnf_lists F)), \\<Gamma> \\<Rightarrow>\\<^sub>n; \\<^bold>\\<And> (map disj_of_clause (cnf_lists G)), \\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> is_nnf_mset \\<Gamma>\n    \\<Longrightarrow> \\<^bold>\\<And> (map disj_of_clause (concat (map (\\<lambda>f. map ((@) f) (cnf_lists G)) (cnf_lists F)))), \\<Gamma> \\<Rightarrow>\\<^sub>n\" \n    (* the actual disjunction is happening here *)\n      for \\<Gamma>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>\\<And>map disj_of_clause\n                            (cnf_lists F), \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     \\<^bold>\\<And>map disj_of_clause\n                    (cnf_lists G), \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     is_nnf_mset \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>\\<And>map disj_of_clause\n                                     (concat\n (map (\\<lambda>f. map ((@) f) (cnf_lists G))\n   (cnf_lists F))), \\<Gamma> \\<Rightarrow>\\<^sub>n", "using distrib[where 'a='a] 2"], ["proof (prove)\nusing this:\n  \\<lbrakk>image_mset disj_of_clause (mset ?F) +\n           ?\\<Gamma> \\<Rightarrow>\\<^sub>n;\n   image_mset disj_of_clause (mset ?G) +\n   ?\\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n  \\<Longrightarrow> mset\n                     (concat\n                       (map (\\<lambda>c.\n                                map (\\<lambda>d.\n  disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n                                 ?G)\n                         ?F)) +\n                    ?\\<Gamma> \\<Rightarrow>\\<^sub>n\n  \\<lbrakk>is_nnf_mset ?\\<Gamma>;\n   mset\n    (concat\n      (map (\\<lambda>c.\n               map (\\<lambda>d.\n                       disj_of_clause c \\<^bold>\\<or> disj_of_clause d)\n                (cnf_lists G))\n        (cnf_lists F))) +\n   ?\\<Gamma> \\<Rightarrow>\\<^sub>n\\<rbrakk>\n  \\<Longrightarrow> image_mset disj_of_clause\n                     (mset\n                       (concat\n                         (map (\\<lambda>f. map ((@) f) (cnf_lists G))\n                           (cnf_lists F)))) +\n                    ?\\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<^bold>\\<And>map disj_of_clause\n                            (cnf_lists F), \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     \\<^bold>\\<And>map disj_of_clause\n                    (cnf_lists G), \\<Gamma> \\<Rightarrow>\\<^sub>n;\n     is_nnf_mset \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> \\<^bold>\\<And>map disj_of_clause\n                                     (concat\n (map (\\<lambda>f. map ((@) f) (cnf_lists G))\n   (cnf_lists F))), \\<Gamma> \\<Rightarrow>\\<^sub>n", "by(auto dest!: LSC_BigAndL_inv intro!: LSC_BigAndL)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<^bold>\\<And>map disj_of_clause\n                          (cnf_lists F), ?\\<Gamma> \\<Rightarrow>\\<^sub>n;\n   \\<^bold>\\<And>map disj_of_clause\n                  (cnf_lists G), ?\\<Gamma> \\<Rightarrow>\\<^sub>n;\n   is_nnf_mset ?\\<Gamma>\\<rbrakk>\n  \\<Longrightarrow> \\<^bold>\\<And>map disj_of_clause\n                                   (concat\n                                     (map\n (\\<lambda>f. map ((@) f) (cnf_lists G))\n (cnf_lists F))), ?\\<Gamma> \\<Rightarrow>\\<^sub>n\n\ngoal (6 subgoals):\n 1. \\<And>F \\<Gamma> G.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<or>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 2. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not>\n           F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<or>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<and>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<rightarrow>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<rightarrow>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 6. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (\\<^bold>\\<not>\n                              F), \\<Gamma>) \\<Rightarrow>\\<^sub>n", "from OrL"], ["proof (chain)\npicking this:\n  F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n  image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n  is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n  image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n  is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)", "show ?case"], ["proof (prove)\nusing this:\n  F, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  G, \\<Gamma> \\<Rightarrow>\\<^sub>n\n  is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n  image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n  is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n  image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n  is_nnf_mset (F \\<^bold>\\<or> G, \\<Gamma>)\n\ngoal (1 subgoal):\n 1. image_mset cnf_form_of\n     (F \\<^bold>\\<or> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n", "by(auto elim!: 1 simp add: cnf_form_of_def form_of_cnf_def)"], ["proof (state)\nthis:\n  image_mset cnf_form_of (F \\<^bold>\\<or> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n\ngoal (5 subgoals):\n 1. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not>\n                 F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not>\n           F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<or> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<or>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 2. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (F \\<^bold>\\<and> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<and>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 3. \\<And>F \\<Gamma> G.\n       \\<lbrakk>\\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (\\<^bold>\\<not> F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F \\<^bold>\\<rightarrow> G, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (F \\<^bold>\\<rightarrow>\n                           G, \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 4. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of\n         (F, \\<^bold>\\<not> G, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset\n         (\\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (F \\<^bold>\\<rightarrow>\n                             G), \\<Gamma>) \\<Rightarrow>\\<^sub>n\n 5. \\<And>F \\<Gamma>.\n       \\<lbrakk>F, \\<Gamma> \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (F, \\<Gamma>) \\<Longrightarrow>\n        image_mset cnf_form_of (F, \\<Gamma>) \\<Rightarrow>\\<^sub>n;\n        is_nnf_mset (\\<^bold>\\<not> (\\<^bold>\\<not> F), \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> image_mset cnf_form_of\n                          (\\<^bold>\\<not>\n                            (\\<^bold>\\<not>\n                              F), \\<Gamma>) \\<Rightarrow>\\<^sub>n", "qed auto"], ["", "end"]]}