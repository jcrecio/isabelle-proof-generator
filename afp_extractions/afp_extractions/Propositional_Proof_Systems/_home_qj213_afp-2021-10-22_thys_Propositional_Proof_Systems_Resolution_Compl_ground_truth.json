{"file_name": "/home/qj213/afp-2021-10-22/thys/Propositional_Proof_Systems/Resolution_Compl.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Propositional_Proof_Systems", "problem_names": ["lemma restrict_cnf_remove: \"atoms_of_cnf (restrict_cnf_atom a v c) \\<subseteq>\n  atoms_of_cnf c - {a}\"", "lemma cnf_substitution_lemma:\n  \"cnf_semantics A (restrict_cnf_atom a v S) = cnf_semantics (A(a := v)) S\"", "lemma finite_restrict: \"finite S \\<Longrightarrow> finite (restrict_cnf_atom a v S)\"", "lemma unrestrict_effects:\n  \"(\\<lambda>c. if {make_lit (\\<not>v) a} \\<union> c \\<in> S then {make_lit (\\<not>v) a} \\<union> c else c) ` restrict_cnf_atom a v S \\<subseteq> S\"", "lemma can_cope_with_unrestrict_effects:\n  assumes pr: \"S \\<turnstile> \\<box>\"\n  assumes su: \"S \\<subseteq> T\"\n  shows \"\\<exists>R \\<subseteq> {make_lit v a}. (\\<lambda>c. if c \\<in> n then {make_lit v a} \\<union> c else c) ` T \\<turnstile> R\"", "lemma unrestrict': \n  fixes R :: \"'a clause\"\n  assumes rp: \"restrict_cnf_atom a v S \\<turnstile> \\<box>\"\n  shows \"\\<exists>R \\<subseteq> {make_lit (\\<not>v) a}. S \\<turnstile> R\"", "lemma Resolution_complete_standalone_finite:\n  assumes ns: \"\\<forall>\\<A>. \\<not>cnf_semantics \\<A> S\"\n  assumes fin: \"finite (atoms_of_cnf S)\"\n  shows \"S \\<turnstile> \\<box>\""], "translations": [["", "lemma restrict_cnf_remove: \"atoms_of_cnf (restrict_cnf_atom a v c) \\<subseteq>\n  atoms_of_cnf c - {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atoms_of_cnf (restrict_cnf_atom a v c) \\<subseteq> atoms_of_cnf c - {a}", "unfolding  restrict_cnf_atom_def atoms_of_cnf_alt lit_atoms_cases make_lit_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union>\n     ((`) (\\<lambda>xa.\n              case xa of xda\\<^sup>+ \\<Rightarrow> xda\n              | xea\\<inverse> \\<Rightarrow> xea) `\n      {ca -\n       {case \\<not> v of True \\<Rightarrow> a\\<^sup>+\n        | False \\<Rightarrow> a\\<inverse>} |\n       ca.\n       ca \\<in> c \\<and>\n       (case v of True \\<Rightarrow> a\\<^sup>+\n        | False \\<Rightarrow> a\\<inverse>)\n       \\<notin> ca})\n    \\<subseteq> \\<Union>\n                 ((`) (\\<lambda>xa.\n                          case xa of xda\\<^sup>+ \\<Rightarrow> xda\n                          | xea\\<inverse> \\<Rightarrow> xea) `\n                  c) -\n                {a}", "by (force split: literal.splits bool.splits)"], ["", "lemma cnf_substitution_lemma:\n  \"cnf_semantics A (restrict_cnf_atom a v S) = cnf_semantics (A(a := v)) S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnf_semantics A (restrict_cnf_atom a v S) = cnf_semantics (A(a := v)) S", "unfolding restrict_cnf_atom_def cnf_semantics_def clause_semantics_def lit_semantics_cases make_lit_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>C\\<in>{c -\n                     {case \\<not> v of True \\<Rightarrow> a\\<^sup>+\n                      | False \\<Rightarrow> a\\<inverse>} |\n                     c. c \\<in> S \\<and>\n                        (case v of True \\<Rightarrow> a\\<^sup>+\n                         | False \\<Rightarrow> a\\<inverse>)\n                        \\<notin> c}.\n        \\<exists>L\\<in>C.\n           case L of x\\<^sup>+ \\<Rightarrow> A x\n           | x2ca\\<inverse> \\<Rightarrow> \\<not> A x2ca) =\n    (\\<forall>C\\<in>S.\n        \\<exists>L\\<in>C.\n           case L of x\\<^sup>+ \\<Rightarrow> (A(a := v)) x\n           | x2ca\\<inverse> \\<Rightarrow> \\<not> (A(a := v)) x2ca)", "apply (clarsimp split: bool.splits literal.splits)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (v \\<longrightarrow>\n     (\\<forall>C.\n         (\\<exists>c.\n             C = c - {a\\<inverse>} \\<and>\n             c \\<in> S \\<and> a\\<^sup>+ \\<notin> c) \\<longrightarrow>\n         (\\<exists>x\\<in>C.\n             (\\<forall>x1. x = x1\\<^sup>+ \\<longrightarrow> A x1) \\<and>\n             (\\<forall>x2.\n                 x = x2\\<inverse> \\<longrightarrow> \\<not> A x2))) =\n     (\\<forall>C\\<in>S.\n         \\<exists>L\\<in>C.\n            (\\<forall>x1.\n                x1 \\<noteq> a \\<longrightarrow>\n                L = x1\\<^sup>+ \\<longrightarrow> A x1) \\<and>\n            (\\<forall>x2.\n                (x2 = a \\<longrightarrow> L \\<noteq> a\\<inverse>) \\<and>\n                (x2 \\<noteq> a \\<longrightarrow>\n                 L = x2\\<inverse> \\<longrightarrow> \\<not> A x2)))) \\<and>\n    (\\<not> v \\<longrightarrow>\n     (\\<forall>C.\n         (\\<exists>c.\n             C = c - {a\\<^sup>+} \\<and>\n             c \\<in> S \\<and> a\\<inverse> \\<notin> c) \\<longrightarrow>\n         (\\<exists>x\\<in>C.\n             (\\<forall>x1. x = x1\\<^sup>+ \\<longrightarrow> A x1) \\<and>\n             (\\<forall>x2.\n                 x = x2\\<inverse> \\<longrightarrow> \\<not> A x2))) =\n     (\\<forall>C\\<in>S.\n         \\<exists>L\\<in>C.\n            (\\<forall>x1.\n                (x1 = a \\<longrightarrow> L \\<noteq> a\\<^sup>+) \\<and>\n                (x1 \\<noteq> a \\<longrightarrow>\n                 L = x1\\<^sup>+ \\<longrightarrow> A x1)) \\<and>\n            (\\<forall>x2.\n                x2 \\<noteq> a \\<longrightarrow>\n                L = x2\\<inverse> \\<longrightarrow> \\<not> A x2)))", "apply safe"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>C.\n       \\<lbrakk>v;\n        \\<forall>C.\n           (\\<exists>c.\n               C = c - {a\\<inverse>} \\<and>\n               c \\<in> S \\<and> a\\<^sup>+ \\<notin> c) \\<longrightarrow>\n           (\\<exists>x\\<in>C.\n               (\\<forall>x1. x = x1\\<^sup>+ \\<longrightarrow> A x1) \\<and>\n               (\\<forall>x2.\n                   x = x2\\<inverse> \\<longrightarrow> \\<not> A x2));\n        C \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>L\\<in>C.\n                            (\\<forall>x1.\n                                x1 \\<noteq> a \\<longrightarrow>\n                                L = x1\\<^sup>+ \\<longrightarrow>\n                                A x1) \\<and>\n                            (\\<forall>x2.\n                                (x2 = a \\<longrightarrow>\n                                 L \\<noteq> a\\<inverse>) \\<and>\n                                (x2 \\<noteq> a \\<longrightarrow>\n                                 L = x2\\<inverse> \\<longrightarrow>\n                                 \\<not> A x2))\n 2. \\<And>C c.\n       \\<lbrakk>v;\n        \\<forall>C\\<in>S.\n           \\<exists>L\\<in>C.\n              (\\<forall>x1.\n                  x1 \\<noteq> a \\<longrightarrow>\n                  L = x1\\<^sup>+ \\<longrightarrow> A x1) \\<and>\n              (\\<forall>x2.\n                  (x2 = a \\<longrightarrow> L \\<noteq> a\\<inverse>) \\<and>\n                  (x2 \\<noteq> a \\<longrightarrow>\n                   L = x2\\<inverse> \\<longrightarrow> \\<not> A x2));\n        c \\<in> S; a\\<^sup>+ \\<notin> c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>c - {a\\<inverse>}.\n                            (\\<forall>x1.\n                                x = x1\\<^sup>+ \\<longrightarrow>\n                                A x1) \\<and>\n                            (\\<forall>x2.\n                                x = x2\\<inverse> \\<longrightarrow>\n                                \\<not> A x2)\n 3. \\<And>C.\n       \\<lbrakk>\\<not> v;\n        \\<forall>C.\n           (\\<exists>c.\n               C = c - {a\\<^sup>+} \\<and>\n               c \\<in> S \\<and> a\\<inverse> \\<notin> c) \\<longrightarrow>\n           (\\<exists>x\\<in>C.\n               (\\<forall>x1. x = x1\\<^sup>+ \\<longrightarrow> A x1) \\<and>\n               (\\<forall>x2.\n                   x = x2\\<inverse> \\<longrightarrow> \\<not> A x2));\n        C \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>L\\<in>C.\n                            (\\<forall>x1.\n                                (x1 = a \\<longrightarrow>\n                                 L \\<noteq> a\\<^sup>+) \\<and>\n                                (x1 \\<noteq> a \\<longrightarrow>\n                                 L = x1\\<^sup>+ \\<longrightarrow>\n                                 A x1)) \\<and>\n                            (\\<forall>x2.\n                                x2 \\<noteq> a \\<longrightarrow>\n                                L = x2\\<inverse> \\<longrightarrow>\n                                \\<not> A x2)\n 4. \\<And>C c.\n       \\<lbrakk>\\<not> v;\n        \\<forall>C\\<in>S.\n           \\<exists>L\\<in>C.\n              (\\<forall>x1.\n                  (x1 = a \\<longrightarrow> L \\<noteq> a\\<^sup>+) \\<and>\n                  (x1 \\<noteq> a \\<longrightarrow>\n                   L = x1\\<^sup>+ \\<longrightarrow> A x1)) \\<and>\n              (\\<forall>x2.\n                  x2 \\<noteq> a \\<longrightarrow>\n                  L = x2\\<inverse> \\<longrightarrow> \\<not> A x2);\n        c \\<in> S; a\\<inverse> \\<notin> c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>c - {a\\<^sup>+}.\n                            (\\<forall>x1.\n                                x = x1\\<^sup>+ \\<longrightarrow>\n                                A x1) \\<and>\n                            (\\<forall>x2.\n                                x = x2\\<inverse> \\<longrightarrow>\n                                \\<not> A x2)", "subgoal for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>v;\n     \\<forall>C.\n        (\\<exists>c.\n            C = c - {a\\<inverse>} \\<and>\n            c \\<in> S \\<and> a\\<^sup>+ \\<notin> c) \\<longrightarrow>\n        (\\<exists>x\\<in>C.\n            (\\<forall>x1. x = x1\\<^sup>+ \\<longrightarrow> A x1) \\<and>\n            (\\<forall>x2. x = x2\\<inverse> \\<longrightarrow> \\<not> A x2));\n     s \\<in> S\\<rbrakk>\n    \\<Longrightarrow> \\<exists>L\\<in>s.\n                         (\\<forall>x1.\n                             x1 \\<noteq> a \\<longrightarrow>\n                             L = x1\\<^sup>+ \\<longrightarrow> A x1) \\<and>\n                         (\\<forall>x2.\n                             (x2 = a \\<longrightarrow>\n                              L \\<noteq> a\\<inverse>) \\<and>\n                             (x2 \\<noteq> a \\<longrightarrow>\n                              L = x2\\<inverse> \\<longrightarrow>\n                              \\<not> A x2))", "by(fastforce elim!: allE[of _ \"s - {Neg a}\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>C c.\n       \\<lbrakk>v;\n        \\<forall>C\\<in>S.\n           \\<exists>L\\<in>C.\n              (\\<forall>x1.\n                  x1 \\<noteq> a \\<longrightarrow>\n                  L = x1\\<^sup>+ \\<longrightarrow> A x1) \\<and>\n              (\\<forall>x2.\n                  (x2 = a \\<longrightarrow> L \\<noteq> a\\<inverse>) \\<and>\n                  (x2 \\<noteq> a \\<longrightarrow>\n                   L = x2\\<inverse> \\<longrightarrow> \\<not> A x2));\n        c \\<in> S; a\\<^sup>+ \\<notin> c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>c - {a\\<inverse>}.\n                            (\\<forall>x1.\n                                x = x1\\<^sup>+ \\<longrightarrow>\n                                A x1) \\<and>\n                            (\\<forall>x2.\n                                x = x2\\<inverse> \\<longrightarrow>\n                                \\<not> A x2)\n 2. \\<And>C.\n       \\<lbrakk>\\<not> v;\n        \\<forall>C.\n           (\\<exists>c.\n               C = c - {a\\<^sup>+} \\<and>\n               c \\<in> S \\<and> a\\<inverse> \\<notin> c) \\<longrightarrow>\n           (\\<exists>x\\<in>C.\n               (\\<forall>x1. x = x1\\<^sup>+ \\<longrightarrow> A x1) \\<and>\n               (\\<forall>x2.\n                   x = x2\\<inverse> \\<longrightarrow> \\<not> A x2));\n        C \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>L\\<in>C.\n                            (\\<forall>x1.\n                                (x1 = a \\<longrightarrow>\n                                 L \\<noteq> a\\<^sup>+) \\<and>\n                                (x1 \\<noteq> a \\<longrightarrow>\n                                 L = x1\\<^sup>+ \\<longrightarrow>\n                                 A x1)) \\<and>\n                            (\\<forall>x2.\n                                x2 \\<noteq> a \\<longrightarrow>\n                                L = x2\\<inverse> \\<longrightarrow>\n                                \\<not> A x2)\n 3. \\<And>C c.\n       \\<lbrakk>\\<not> v;\n        \\<forall>C\\<in>S.\n           \\<exists>L\\<in>C.\n              (\\<forall>x1.\n                  (x1 = a \\<longrightarrow> L \\<noteq> a\\<^sup>+) \\<and>\n                  (x1 \\<noteq> a \\<longrightarrow>\n                   L = x1\\<^sup>+ \\<longrightarrow> A x1)) \\<and>\n              (\\<forall>x2.\n                  x2 \\<noteq> a \\<longrightarrow>\n                  L = x2\\<inverse> \\<longrightarrow> \\<not> A x2);\n        c \\<in> S; a\\<inverse> \\<notin> c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>c - {a\\<^sup>+}.\n                            (\\<forall>x1.\n                                x = x1\\<^sup>+ \\<longrightarrow>\n                                A x1) \\<and>\n                            (\\<forall>x2.\n                                x = x2\\<inverse> \\<longrightarrow>\n                                \\<not> A x2)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>v;\n     \\<forall>C\\<in>S.\n        \\<exists>L\\<in>C.\n           (\\<forall>x1.\n               x1 \\<noteq> a \\<longrightarrow>\n               L = x1\\<^sup>+ \\<longrightarrow> A x1) \\<and>\n           (\\<forall>x2.\n               (x2 = a \\<longrightarrow> L \\<noteq> a\\<inverse>) \\<and>\n               (x2 \\<noteq> a \\<longrightarrow>\n                L = x2\\<inverse> \\<longrightarrow> \\<not> A x2));\n     c_ \\<in> S; a\\<^sup>+ \\<notin> c_\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x\\<in>c_ - {a\\<inverse>}.\n                         (\\<forall>x1.\n                             x = x1\\<^sup>+ \\<longrightarrow> A x1) \\<and>\n                         (\\<forall>x2.\n                             x = x2\\<inverse> \\<longrightarrow> \\<not> A x2)", "by (metis DiffI singletonD)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>C.\n       \\<lbrakk>\\<not> v;\n        \\<forall>C.\n           (\\<exists>c.\n               C = c - {a\\<^sup>+} \\<and>\n               c \\<in> S \\<and> a\\<inverse> \\<notin> c) \\<longrightarrow>\n           (\\<exists>x\\<in>C.\n               (\\<forall>x1. x = x1\\<^sup>+ \\<longrightarrow> A x1) \\<and>\n               (\\<forall>x2.\n                   x = x2\\<inverse> \\<longrightarrow> \\<not> A x2));\n        C \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>L\\<in>C.\n                            (\\<forall>x1.\n                                (x1 = a \\<longrightarrow>\n                                 L \\<noteq> a\\<^sup>+) \\<and>\n                                (x1 \\<noteq> a \\<longrightarrow>\n                                 L = x1\\<^sup>+ \\<longrightarrow>\n                                 A x1)) \\<and>\n                            (\\<forall>x2.\n                                x2 \\<noteq> a \\<longrightarrow>\n                                L = x2\\<inverse> \\<longrightarrow>\n                                \\<not> A x2)\n 2. \\<And>C c.\n       \\<lbrakk>\\<not> v;\n        \\<forall>C\\<in>S.\n           \\<exists>L\\<in>C.\n              (\\<forall>x1.\n                  (x1 = a \\<longrightarrow> L \\<noteq> a\\<^sup>+) \\<and>\n                  (x1 \\<noteq> a \\<longrightarrow>\n                   L = x1\\<^sup>+ \\<longrightarrow> A x1)) \\<and>\n              (\\<forall>x2.\n                  x2 \\<noteq> a \\<longrightarrow>\n                  L = x2\\<inverse> \\<longrightarrow> \\<not> A x2);\n        c \\<in> S; a\\<inverse> \\<notin> c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>c - {a\\<^sup>+}.\n                            (\\<forall>x1.\n                                x = x1\\<^sup>+ \\<longrightarrow>\n                                A x1) \\<and>\n                            (\\<forall>x2.\n                                x = x2\\<inverse> \\<longrightarrow>\n                                \\<not> A x2)", "subgoal for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> v;\n     \\<forall>C.\n        (\\<exists>c.\n            C = c - {a\\<^sup>+} \\<and>\n            c \\<in> S \\<and> a\\<inverse> \\<notin> c) \\<longrightarrow>\n        (\\<exists>x\\<in>C.\n            (\\<forall>x1. x = x1\\<^sup>+ \\<longrightarrow> A x1) \\<and>\n            (\\<forall>x2. x = x2\\<inverse> \\<longrightarrow> \\<not> A x2));\n     s \\<in> S\\<rbrakk>\n    \\<Longrightarrow> \\<exists>L\\<in>s.\n                         (\\<forall>x1.\n                             (x1 = a \\<longrightarrow>\n                              L \\<noteq> a\\<^sup>+) \\<and>\n                             (x1 \\<noteq> a \\<longrightarrow>\n                              L = x1\\<^sup>+ \\<longrightarrow> A x1)) \\<and>\n                         (\\<forall>x2.\n                             x2 \\<noteq> a \\<longrightarrow>\n                             L = x2\\<inverse> \\<longrightarrow> \\<not> A x2)", "by(fastforce elim!: allE[of _ \"s - {Pos a}\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>C c.\n       \\<lbrakk>\\<not> v;\n        \\<forall>C\\<in>S.\n           \\<exists>L\\<in>C.\n              (\\<forall>x1.\n                  (x1 = a \\<longrightarrow> L \\<noteq> a\\<^sup>+) \\<and>\n                  (x1 \\<noteq> a \\<longrightarrow>\n                   L = x1\\<^sup>+ \\<longrightarrow> A x1)) \\<and>\n              (\\<forall>x2.\n                  x2 \\<noteq> a \\<longrightarrow>\n                  L = x2\\<inverse> \\<longrightarrow> \\<not> A x2);\n        c \\<in> S; a\\<inverse> \\<notin> c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>c - {a\\<^sup>+}.\n                            (\\<forall>x1.\n                                x = x1\\<^sup>+ \\<longrightarrow>\n                                A x1) \\<and>\n                            (\\<forall>x2.\n                                x = x2\\<inverse> \\<longrightarrow>\n                                \\<not> A x2)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> v;\n     \\<forall>C\\<in>S.\n        \\<exists>L\\<in>C.\n           (\\<forall>x1.\n               (x1 = a \\<longrightarrow> L \\<noteq> a\\<^sup>+) \\<and>\n               (x1 \\<noteq> a \\<longrightarrow>\n                L = x1\\<^sup>+ \\<longrightarrow> A x1)) \\<and>\n           (\\<forall>x2.\n               x2 \\<noteq> a \\<longrightarrow>\n               L = x2\\<inverse> \\<longrightarrow> \\<not> A x2);\n     c_ \\<in> S; a\\<inverse> \\<notin> c_\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x\\<in>c_ - {a\\<^sup>+}.\n                         (\\<forall>x1.\n                             x = x1\\<^sup>+ \\<longrightarrow> A x1) \\<and>\n                         (\\<forall>x2.\n                             x = x2\\<inverse> \\<longrightarrow> \\<not> A x2)", "by (metis DiffI singletonD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma finite_restrict: \"finite S \\<Longrightarrow> finite (restrict_cnf_atom a v S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite S \\<Longrightarrow> finite (restrict_cnf_atom a v S)", "unfolding restrict_cnf_atom_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite S \\<Longrightarrow>\n    finite\n     {c - {make_lit (\\<not> v) a} |c.\n      c \\<in> S \\<and> make_lit v a \\<notin> c}", "by(simp add: image_iff)"], ["", "text\\<open>The next lemma describes what we have to (or can) do to a CNF after it has been mangled by @{const restrict_cnf_atom} to get back to\n(a subset of) the original CNF.\nThe idea behind this will be clearer upon usage.\\<close>"], ["", "lemma unrestrict_effects:\n  \"(\\<lambda>c. if {make_lit (\\<not>v) a} \\<union> c \\<in> S then {make_lit (\\<not>v) a} \\<union> c else c) ` restrict_cnf_atom a v S \\<subseteq> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>c.\n        if {make_lit (\\<not> v) a} \\<union> c \\<in> S\n        then {make_lit (\\<not> v) a} \\<union> c else c) `\n    restrict_cnf_atom a v S\n    \\<subseteq> S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>c.\n        if {make_lit (\\<not> v) a} \\<union> c \\<in> S\n        then {make_lit (\\<not> v) a} \\<union> c else c) `\n    restrict_cnf_atom a v S\n    \\<subseteq> S", "have \"\\<lbrakk>xa \\<in> restrict_cnf_atom a v S; {make_lit (\\<not> v) a} \\<union> xa \\<notin> S; x = xa\\<rbrakk> \\<Longrightarrow> xa \\<in> S\" for x xa"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>xa \\<in> restrict_cnf_atom a v S;\n     {make_lit (\\<not> v) a} \\<union> xa \\<notin> S; x = xa\\<rbrakk>\n    \\<Longrightarrow> xa \\<in> S", "unfolding restrict_cnf_atom_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>xa \\<in> {c - {make_lit (\\<not> v) a} |c.\n                       c \\<in> S \\<and> make_lit v a \\<notin> c};\n     {make_lit (\\<not> v) a} \\<union> xa \\<notin> S; x = xa\\<rbrakk>\n    \\<Longrightarrow> xa \\<in> S", "using insert_Diff"], ["proof (prove)\nusing this:\n  ?a \\<in> ?A \\<Longrightarrow> insert ?a (?A - {?a}) = ?A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xa \\<in> {c - {make_lit (\\<not> v) a} |c.\n                       c \\<in> S \\<and> make_lit v a \\<notin> c};\n     {make_lit (\\<not> v) a} \\<union> xa \\<notin> S; x = xa\\<rbrakk>\n    \\<Longrightarrow> xa \\<in> S", "by fastforce"], ["proof (state)\nthis:\n  \\<lbrakk>?xa \\<in> restrict_cnf_atom a v S;\n   {make_lit (\\<not> v) a} \\<union> ?xa \\<notin> S; ?x = ?xa\\<rbrakk>\n  \\<Longrightarrow> ?xa \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<lambda>c.\n        if {make_lit (\\<not> v) a} \\<union> c \\<in> S\n        then {make_lit (\\<not> v) a} \\<union> c else c) `\n    restrict_cnf_atom a v S\n    \\<subseteq> S", "hence \"x \\<in> (\\<lambda>c. if {make_lit (\\<not> v) a} \\<union> c \\<in> S then {make_lit (\\<not> v) a} \\<union> c else c) ` restrict_cnf_atom a v S \\<Longrightarrow> x \\<in> S\" for x"], ["proof (prove)\nusing this:\n  \\<lbrakk>?xa \\<in> restrict_cnf_atom a v S;\n   {make_lit (\\<not> v) a} \\<union> ?xa \\<notin> S; ?x = ?xa\\<rbrakk>\n  \\<Longrightarrow> ?xa \\<in> S\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>c.\n                if {make_lit (\\<not> v) a} \\<union> c \\<in> S\n                then {make_lit (\\<not> v) a} \\<union> c else c) `\n            restrict_cnf_atom a v S \\<Longrightarrow>\n    x \\<in> S", "unfolding image_iff"], ["proof (prove)\nusing this:\n  \\<lbrakk>?xa \\<in> restrict_cnf_atom a v S;\n   {make_lit (\\<not> v) a} \\<union> ?xa \\<notin> S; ?x = ?xa\\<rbrakk>\n  \\<Longrightarrow> ?xa \\<in> S\n\ngoal (1 subgoal):\n 1. \\<exists>xa\\<in>restrict_cnf_atom a v S.\n       x =\n       (if {make_lit (\\<not> v) a} \\<union> xa \\<in> S\n        then {make_lit (\\<not> v) a} \\<union> xa else xa) \\<Longrightarrow>\n    x \\<in> S", "by(elim bexE) simp"], ["proof (state)\nthis:\n  ?x \\<in> (\\<lambda>c.\n               if {make_lit (\\<not> v) a} \\<union> c \\<in> S\n               then {make_lit (\\<not> v) a} \\<union> c else c) `\n           restrict_cnf_atom a v S \\<Longrightarrow>\n  ?x \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<lambda>c.\n        if {make_lit (\\<not> v) a} \\<union> c \\<in> S\n        then {make_lit (\\<not> v) a} \\<union> c else c) `\n    restrict_cnf_atom a v S\n    \\<subseteq> S", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?x \\<in> (\\<lambda>c.\n               if {make_lit (\\<not> v) a} \\<union> c \\<in> S\n               then {make_lit (\\<not> v) a} \\<union> c else c) `\n           restrict_cnf_atom a v S \\<Longrightarrow>\n  ?x \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<lambda>c.\n        if {make_lit (\\<not> v) a} \\<union> c \\<in> S\n        then {make_lit (\\<not> v) a} \\<union> c else c) `\n    restrict_cnf_atom a v S\n    \\<subseteq> S", ".."], ["proof (state)\nthis:\n  (\\<lambda>c.\n      if {make_lit (\\<not> v) a} \\<union> c \\<in> S\n      then {make_lit (\\<not> v) a} \\<union> c else c) `\n  restrict_cnf_atom a v S\n  \\<subseteq> S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma can_cope_with_unrestrict_effects:\n  assumes pr: \"S \\<turnstile> \\<box>\"\n  assumes su: \"S \\<subseteq> T\"\n  shows \"\\<exists>R \\<subseteq> {make_lit v a}. (\\<lambda>c. if c \\<in> n then {make_lit v a} \\<union> c else c) ` T \\<turnstile> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>R\\<subseteq>{make_lit v a}.\n       (\\<lambda>c. if c \\<in> n then {make_lit v a} \\<union> c else c) `\n       T \\<turnstile> R", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>R\\<subseteq>{make_lit v a}.\n       (\\<lambda>c. if c \\<in> n then {make_lit v a} \\<union> c else c) `\n       T \\<turnstile> R", "from Resolution_taint_assumptions[where D=\"{make_lit v a}\"]"], ["proof (chain)\npicking this:\n  ?S \\<union> ?T \\<turnstile> ?C \\<Longrightarrow>\n  \\<exists>R\\<subseteq>{make_lit v a}.\n     (\\<union>) {make_lit v a} ` ?S \\<union> ?T \\<turnstile> R \\<union> ?C", "have taint: \"\\<Gamma> \\<union> \\<Lambda> \\<turnstile> \\<box> \\<Longrightarrow> \\<exists>R\\<subseteq>{make_lit v a}. insert (make_lit v a) ` \\<Gamma> \\<union> \\<Lambda> \\<turnstile> R\"\n    for \\<Gamma> \\<Lambda>"], ["proof (prove)\nusing this:\n  ?S \\<union> ?T \\<turnstile> ?C \\<Longrightarrow>\n  \\<exists>R\\<subseteq>{make_lit v a}.\n     (\\<union>) {make_lit v a} ` ?S \\<union> ?T \\<turnstile> R \\<union> ?C\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<union> \\<Lambda> \\<turnstile> \\<box> \\<Longrightarrow>\n    \\<exists>R\\<subseteq>{make_lit v a}.\n       insert (make_lit v a) ` \\<Gamma> \\<union> \\<Lambda> \\<turnstile> R", "by (metis image_cong insert_def sup_bot.right_neutral)"], ["proof (state)\nthis:\n  ?\\<Gamma> \\<union> ?\\<Lambda> \\<turnstile> \\<box> \\<Longrightarrow>\n  \\<exists>R\\<subseteq>{make_lit v a}.\n     insert (make_lit v a) ` ?\\<Gamma> \\<union> ?\\<Lambda> \\<turnstile> R\n\ngoal (1 subgoal):\n 1. \\<exists>R\\<subseteq>{make_lit v a}.\n       (\\<lambda>c. if c \\<in> n then {make_lit v a} \\<union> c else c) `\n       T \\<turnstile> R", "have S: \"S = {c \\<in> S. c \\<in> n} \\<union> {c \\<in> S. c \\<notin> n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S = {c \\<in> S. c \\<in> n} \\<union> {c \\<in> S. c \\<notin> n}", "by blast"], ["proof (state)\nthis:\n  S = {c \\<in> S. c \\<in> n} \\<union> {c \\<in> S. c \\<notin> n}\n\ngoal (1 subgoal):\n 1. \\<exists>R\\<subseteq>{make_lit v a}.\n       (\\<lambda>c. if c \\<in> n then {make_lit v a} \\<union> c else c) `\n       T \\<turnstile> R", "hence SI: \"(\\<lambda>c. if c \\<in> n then {make_lit v a} \\<union> c else c) ` S =\n    (insert (make_lit v a) ` {c \\<in> S. c \\<in> n}) \\<union> {c \\<in> S. c \\<notin> n}\n  \""], ["proof (prove)\nusing this:\n  S = {c \\<in> S. c \\<in> n} \\<union> {c \\<in> S. c \\<notin> n}\n\ngoal (1 subgoal):\n 1. (\\<lambda>c. if c \\<in> n then {make_lit v a} \\<union> c else c) ` S =\n    insert (make_lit v a) ` {c \\<in> S. c \\<in> n} \\<union>\n    {c \\<in> S. c \\<notin> n}", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>c. if c \\<in> n then {make_lit v a} \\<union> c else c) ` S =\n  insert (make_lit v a) ` {c \\<in> S. c \\<in> n} \\<union>\n  {c \\<in> S. c \\<notin> n}\n\ngoal (1 subgoal):\n 1. \\<exists>R\\<subseteq>{make_lit v a}.\n       (\\<lambda>c. if c \\<in> n then {make_lit v a} \\<union> c else c) `\n       T \\<turnstile> R", "from pr"], ["proof (chain)\npicking this:\n  S \\<turnstile> \\<box>", "have \"\\<exists>R \\<subseteq> {make_lit v a}.\n  (\\<lambda>c. if c \\<in> n then {make_lit v a} \\<union> c else c) ` S \\<turnstile> R\""], ["proof (prove)\nusing this:\n  S \\<turnstile> \\<box>\n\ngoal (1 subgoal):\n 1. \\<exists>R\\<subseteq>{make_lit v a}.\n       (\\<lambda>c. if c \\<in> n then {make_lit v a} \\<union> c else c) `\n       S \\<turnstile> R", "apply(subst SI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<turnstile> \\<box> \\<Longrightarrow>\n    \\<exists>R\\<subseteq>{make_lit v a}.\n       insert (make_lit v a) ` {c \\<in> S. c \\<in> n} \\<union>\n       {c \\<in> S. c \\<notin> n} \\<turnstile> R", "apply(subst(asm) S)"], ["proof (prove)\ngoal (1 subgoal):\n 1. {c \\<in> S. c \\<in> n} \\<union>\n    {c \\<in> S. c \\<notin> n} \\<turnstile> \\<box> \\<Longrightarrow>\n    \\<exists>R\\<subseteq>{make_lit v a}.\n       insert (make_lit v a) ` {c \\<in> S. c \\<in> n} \\<union>\n       {c \\<in> S. c \\<notin> n} \\<turnstile> R", "apply(elim taint)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>R\\<subseteq>{make_lit v a}.\n     (\\<lambda>c. if c \\<in> n then {make_lit v a} \\<union> c else c) `\n     S \\<turnstile> R\n\ngoal (1 subgoal):\n 1. \\<exists>R\\<subseteq>{make_lit v a}.\n       (\\<lambda>c. if c \\<in> n then {make_lit v a} \\<union> c else c) `\n       T \\<turnstile> R", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>R\\<subseteq>{make_lit v a}.\n     (\\<lambda>c. if c \\<in> n then {make_lit v a} \\<union> c else c) `\n     S \\<turnstile> R\n\ngoal (1 subgoal):\n 1. \\<exists>R\\<subseteq>{make_lit v a}.\n       (\\<lambda>c. if c \\<in> n then {make_lit v a} \\<union> c else c) `\n       T \\<turnstile> R", "using Resolution_weaken su"], ["proof (prove)\nusing this:\n  \\<exists>R\\<subseteq>{make_lit v a}.\n     (\\<lambda>c. if c \\<in> n then {make_lit v a} \\<union> c else c) `\n     S \\<turnstile> R\n  ?S \\<turnstile> ?D \\<Longrightarrow> ?T \\<union> ?S \\<turnstile> ?D\n  S \\<subseteq> T\n\ngoal (1 subgoal):\n 1. \\<exists>R\\<subseteq>{make_lit v a}.\n       (\\<lambda>c. if c \\<in> n then {make_lit v a} \\<union> c else c) `\n       T \\<turnstile> R", "by (metis (no_types, lifting) image_Un sup.order_iff)"], ["proof (state)\nthis:\n  \\<exists>R\\<subseteq>{make_lit v a}.\n     (\\<lambda>c. if c \\<in> n then {make_lit v a} \\<union> c else c) `\n     T \\<turnstile> R\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma unrestrict': \n  fixes R :: \"'a clause\"\n  assumes rp: \"restrict_cnf_atom a v S \\<turnstile> \\<box>\"\n  shows \"\\<exists>R \\<subseteq> {make_lit (\\<not>v) a}. S \\<turnstile> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>R\\<subseteq>{make_lit (\\<not> v) a}. S \\<turnstile> R", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>R\\<subseteq>{make_lit (\\<not> v) a}. S \\<turnstile> R", "fix C :: \"'a clause\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>R\\<subseteq>{make_lit (\\<not> v) a}. S \\<turnstile> R", "fix k :: 'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>R\\<subseteq>{make_lit (\\<not> v) a}. S \\<turnstile> R", "from unrestrict_effects[of v a S]"], ["proof (chain)\npicking this:\n  (\\<lambda>c.\n      if {make_lit (\\<not> v) a} \\<union> c \\<in> S\n      then {make_lit (\\<not> v) a} \\<union> c else c) `\n  restrict_cnf_atom a v S\n  \\<subseteq> S", "text\\<open>The idea is that the restricted set lost some clauses, and that some others were crippled.\n    So, there must be a set of clauses to heal and a set of clauses to reinsert to get the original.\n    (Mind you, this is not exactly what is happening, because e.g. both\n   @{term C} and @{term \"{k\\<inverse>} \\<union> C\"} might be in there and get reduced to one @{term C}.\n    You then heal that @{term C} to @{term \"{k\\<inverse>} \\<union> C\"} and insert the shadowed @{term C}\\<open>\\<dots>\\<close> Details.)\n \\<close>"], ["proof (chain)\npicking this:\n  (\\<lambda>c.\n      if {make_lit (\\<not> v) a} \\<union> c \\<in> S\n      then {make_lit (\\<not> v) a} \\<union> c else c) `\n  restrict_cnf_atom a v S\n  \\<subseteq> S", "obtain n where S:\n    \"(\\<lambda>c. if c \\<in> n then {make_lit (\\<not> v) a} \\<union> c else c) ` restrict_cnf_atom a v S \\<subseteq> S\""], ["proof (prove)\nusing this:\n  (\\<lambda>c.\n      if {make_lit (\\<not> v) a} \\<union> c \\<in> S\n      then {make_lit (\\<not> v) a} \\<union> c else c) `\n  restrict_cnf_atom a v S\n  \\<subseteq> S\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        (\\<lambda>c.\n            if c \\<in> n then {make_lit (\\<not> v) a} \\<union> c else c) `\n        restrict_cnf_atom a v S\n        \\<subseteq> S \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using exI[where x=\"{c. {make_lit (\\<not>v) a} \\<union> c \\<in> S}\"]"], ["proof (prove)\nusing this:\n  (\\<lambda>c.\n      if {make_lit (\\<not> v) a} \\<union> c \\<in> S\n      then {make_lit (\\<not> v) a} \\<union> c else c) `\n  restrict_cnf_atom a v S\n  \\<subseteq> S\n  ?P {c. {make_lit (\\<not> v) a} \\<union> c \\<in> S} \\<Longrightarrow>\n  \\<exists>x. ?P x\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        (\\<lambda>c.\n            if c \\<in> n then {make_lit (\\<not> v) a} \\<union> c else c) `\n        restrict_cnf_atom a v S\n        \\<subseteq> S \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  (\\<lambda>c.\n      if c \\<in> n then {make_lit (\\<not> v) a} \\<union> c else c) `\n  restrict_cnf_atom a v S\n  \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<exists>R\\<subseteq>{make_lit (\\<not> v) a}. S \\<turnstile> R", "note  finite_restrict S"], ["proof (state)\nthis:\n  finite ?S \\<Longrightarrow> finite (restrict_cnf_atom ?a ?v ?S)\n  (\\<lambda>c.\n      if c \\<in> n then {make_lit (\\<not> v) a} \\<union> c else c) `\n  restrict_cnf_atom a v S\n  \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<exists>R\\<subseteq>{make_lit (\\<not> v) a}. S \\<turnstile> R", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>R\\<subseteq>{make_lit (\\<not> v) a}. S \\<turnstile> R", "using can_cope_with_unrestrict_effects[OF rp]"], ["proof (prove)\nusing this:\n  restrict_cnf_atom a v S \\<subseteq> ?T \\<Longrightarrow>\n  \\<exists>R\\<subseteq>{make_lit ?v ?a}.\n     (\\<lambda>c. if c \\<in> ?n then {make_lit ?v ?a} \\<union> c else c) `\n     ?T \\<turnstile> R\n\ngoal (1 subgoal):\n 1. \\<exists>R\\<subseteq>{make_lit (\\<not> v) a}. S \\<turnstile> R", "by (metis (no_types) S Resolution_weaken subset_refl sup.order_iff)"], ["proof (state)\nthis:\n  \\<exists>R\\<subseteq>{make_lit (\\<not> v) a}. S \\<turnstile> R\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Resolution_complete_standalone_finite:\n  assumes ns: \"\\<forall>\\<A>. \\<not>cnf_semantics \\<A> S\"\n  assumes fin: \"finite (atoms_of_cnf S)\"\n  shows \"S \\<turnstile> \\<box>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<turnstile> \\<box>", "using fin ns"], ["proof (prove)\nusing this:\n  finite (atoms_of_cnf S)\n  \\<forall>\\<A>. \\<not> cnf_semantics \\<A> S\n\ngoal (1 subgoal):\n 1. S \\<turnstile> \\<box>", "proof(induction \"atoms_of_cnf S\" arbitrary: S rule: finite_psubset_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>finite (atoms_of_cnf S);\n        \\<And>Sa.\n           \\<lbrakk>atoms_of_cnf Sa \\<subset> atoms_of_cnf S;\n            \\<forall>\\<A>. \\<not> cnf_semantics \\<A> Sa\\<rbrakk>\n           \\<Longrightarrow> Sa \\<turnstile> \\<box>;\n        \\<forall>\\<A>. \\<not> cnf_semantics \\<A> S\\<rbrakk>\n       \\<Longrightarrow> S \\<turnstile> \\<box>", "case psubset"], ["proof (state)\nthis:\n  finite (atoms_of_cnf S)\n  \\<lbrakk>atoms_of_cnf ?S \\<subset> atoms_of_cnf S;\n   \\<forall>\\<A>. \\<not> cnf_semantics \\<A> ?S\\<rbrakk>\n  \\<Longrightarrow> ?S \\<turnstile> \\<box>\n  \\<forall>\\<A>. \\<not> cnf_semantics \\<A> S\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>finite (atoms_of_cnf S);\n        \\<And>Sa.\n           \\<lbrakk>atoms_of_cnf Sa \\<subset> atoms_of_cnf S;\n            \\<forall>\\<A>. \\<not> cnf_semantics \\<A> Sa\\<rbrakk>\n           \\<Longrightarrow> Sa \\<turnstile> \\<box>;\n        \\<forall>\\<A>. \\<not> cnf_semantics \\<A> S\\<rbrakk>\n       \\<Longrightarrow> S \\<turnstile> \\<box>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<turnstile> \\<box>", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> S \\<turnstile> \\<box>\n 2. \\<not> ?P \\<Longrightarrow> S \\<turnstile> \\<box>", "assume e: \"atoms_of_cnf S = {}\""], ["proof (state)\nthis:\n  atoms_of_cnf S = {}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> S \\<turnstile> \\<box>\n 2. \\<not> ?P \\<Longrightarrow> S \\<turnstile> \\<box>", "from \\<open>\\<forall>\\<A>. \\<not> cnf_semantics \\<A> S\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>\\<A>. \\<not> cnf_semantics \\<A> S", "have \"S \\<noteq> {}\""], ["proof (prove)\nusing this:\n  \\<forall>\\<A>. \\<not> cnf_semantics \\<A> S\n\ngoal (1 subgoal):\n 1. S \\<noteq> {}", "unfolding cnf_semantics_def"], ["proof (prove)\nusing this:\n  \\<forall>\\<A>. \\<not> (\\<forall>C\\<in>S. clause_semantics \\<A> C)\n\ngoal (1 subgoal):\n 1. S \\<noteq> {}", "by blast"], ["proof (state)\nthis:\n  S \\<noteq> {}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> S \\<turnstile> \\<box>\n 2. \\<not> ?P \\<Longrightarrow> S \\<turnstile> \\<box>", "with e"], ["proof (chain)\npicking this:\n  atoms_of_cnf S = {}\n  S \\<noteq> {}", "have \"S = {\\<box>}\""], ["proof (prove)\nusing this:\n  atoms_of_cnf S = {}\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. S = {\\<box>}", "unfolding atoms_of_cnf_def"], ["proof (prove)\nusing this:\n  atoms_of_lit ` \\<Union> S = {}\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. S = {\\<box>}", "by simp fast"], ["proof (state)\nthis:\n  S = {\\<box>}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> S \\<turnstile> \\<box>\n 2. \\<not> ?P \\<Longrightarrow> S \\<turnstile> \\<box>", "thus ?case"], ["proof (prove)\nusing this:\n  S = {\\<box>}\n\ngoal (1 subgoal):\n 1. S \\<turnstile> \\<box>", "using Resolution.Ass"], ["proof (prove)\nusing this:\n  S = {\\<box>}\n  ?C \\<in> ?S \\<Longrightarrow> ?S \\<turnstile> ?C\n\ngoal (1 subgoal):\n 1. S \\<turnstile> \\<box>", "by blast"], ["proof (state)\nthis:\n  S \\<turnstile> \\<box>\n\ngoal (1 subgoal):\n 1. atoms_of_cnf S \\<noteq> {} \\<Longrightarrow> S \\<turnstile> \\<box>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. atoms_of_cnf S \\<noteq> {} \\<Longrightarrow> S \\<turnstile> \\<box>", "have unsat_restrict: \"\\<forall>\\<A>. \\<not> cnf_semantics \\<A> (restrict_cnf_atom a v S)\" for a v"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<A>. \\<not> cnf_semantics \\<A> (restrict_cnf_atom a v S)", "using \\<open>\\<forall>\\<A>. \\<not> cnf_semantics \\<A> S\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>\\<A>. \\<not> cnf_semantics \\<A> S\n\ngoal (1 subgoal):\n 1. \\<forall>\\<A>. \\<not> cnf_semantics \\<A> (restrict_cnf_atom a v S)", "by(simp add: cnf_substitution_lemma)"], ["proof (state)\nthis:\n  \\<forall>\\<A>. \\<not> cnf_semantics \\<A> (restrict_cnf_atom ?a ?v S)\n\ngoal (1 subgoal):\n 1. atoms_of_cnf S \\<noteq> {} \\<Longrightarrow> S \\<turnstile> \\<box>", "assume ne: \"atoms_of_cnf S \\<noteq> {}\""], ["proof (state)\nthis:\n  atoms_of_cnf S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. atoms_of_cnf S \\<noteq> {} \\<Longrightarrow> S \\<turnstile> \\<box>", "then"], ["proof (chain)\npicking this:\n  atoms_of_cnf S \\<noteq> {}", "obtain a where \"a \\<in> atoms_of_cnf S\""], ["proof (prove)\nusing this:\n  atoms_of_cnf S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        a \\<in> atoms_of_cnf S \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  a \\<in> atoms_of_cnf S\n\ngoal (1 subgoal):\n 1. atoms_of_cnf S \\<noteq> {} \\<Longrightarrow> S \\<turnstile> \\<box>", "hence \"atoms_of_cnf (restrict_cnf_atom a v S) \\<subset> atoms_of_cnf S\" for v"], ["proof (prove)\nusing this:\n  a \\<in> atoms_of_cnf S\n\ngoal (1 subgoal):\n 1. atoms_of_cnf (restrict_cnf_atom a v S) \\<subset> atoms_of_cnf S", "using restrict_cnf_remove[where 'a='a]"], ["proof (prove)\nusing this:\n  a \\<in> atoms_of_cnf S\n  atoms_of_cnf (restrict_cnf_atom ?a ?v ?c)\n  \\<subseteq> atoms_of_cnf ?c - {?a}\n\ngoal (1 subgoal):\n 1. atoms_of_cnf (restrict_cnf_atom a v S) \\<subset> atoms_of_cnf S", "by blast"], ["proof (state)\nthis:\n  atoms_of_cnf (restrict_cnf_atom a ?v S) \\<subset> atoms_of_cnf S\n\ngoal (1 subgoal):\n 1. atoms_of_cnf S \\<noteq> {} \\<Longrightarrow> S \\<turnstile> \\<box>", "from psubset(2)[OF this unsat_restrict]"], ["proof (chain)\npicking this:\n  restrict_cnf_atom a ?v3 S \\<turnstile> \\<box>", "have IH: \"restrict_cnf_atom a v S \\<turnstile> \\<box>\" for v"], ["proof (prove)\nusing this:\n  restrict_cnf_atom a ?v3 S \\<turnstile> \\<box>\n\ngoal (1 subgoal):\n 1. restrict_cnf_atom a v S \\<turnstile> \\<box>", "."], ["proof (state)\nthis:\n  restrict_cnf_atom a ?v S \\<turnstile> \\<box>\n\ngoal (1 subgoal):\n 1. atoms_of_cnf S \\<noteq> {} \\<Longrightarrow> S \\<turnstile> \\<box>", "from unrestrict'[OF IH, of \"\\<not> _\"]"], ["proof (chain)\npicking this:\n  \\<exists>R\\<subseteq>{make_lit (\\<not> \\<not> ?uu3) a}. S \\<turnstile> R", "have unr_IH: \"\\<exists>R\\<subseteq>{make_lit v a}. S \\<turnstile> R\"\n        for v"], ["proof (prove)\nusing this:\n  \\<exists>R\\<subseteq>{make_lit (\\<not> \\<not> ?uu3) a}. S \\<turnstile> R\n\ngoal (1 subgoal):\n 1. \\<exists>R\\<subseteq>{make_lit v a}. S \\<turnstile> R", "by simp"], ["proof (state)\nthis:\n  \\<exists>R\\<subseteq>{make_lit ?v a}. S \\<turnstile> R\n\ngoal (1 subgoal):\n 1. atoms_of_cnf S \\<noteq> {} \\<Longrightarrow> S \\<turnstile> \\<box>", "(* unbelievable, how much worry finding that \"\\<not> _\" cost\\<dots> otherwise, you get weird sledgehammer results. *)"], ["proof (state)\nthis:\n  \\<exists>R\\<subseteq>{make_lit ?v a}. S \\<turnstile> R\n\ngoal (1 subgoal):\n 1. atoms_of_cnf S \\<noteq> {} \\<Longrightarrow> S \\<turnstile> \\<box>", "from this[of False] this[of True]"], ["proof (chain)\npicking this:\n  \\<exists>R\\<subseteq>{make_lit False a}. S \\<turnstile> R\n  \\<exists>R\\<subseteq>{make_lit True a}. S \\<turnstile> R", "show ?case"], ["proof (prove)\nusing this:\n  \\<exists>R\\<subseteq>{make_lit False a}. S \\<turnstile> R\n  \\<exists>R\\<subseteq>{make_lit True a}. S \\<turnstile> R\n\ngoal (1 subgoal):\n 1. S \\<turnstile> \\<box>", "using Resolution.R[OF _ _ singletonI singletonI]"], ["proof (prove)\nusing this:\n  \\<exists>R\\<subseteq>{make_lit False a}. S \\<turnstile> R\n  \\<exists>R\\<subseteq>{make_lit True a}. S \\<turnstile> R\n  \\<lbrakk>?S \\<turnstile> {?k\\<^sup>+};\n   ?S \\<turnstile> {?k\\<inverse>}\\<rbrakk>\n  \\<Longrightarrow> ?S \\<turnstile> {?k\\<^sup>+} - {?k\\<^sup>+} \\<union>\n                                    ({?k\\<inverse>} - {?k\\<inverse>})\n\ngoal (1 subgoal):\n 1. S \\<turnstile> \\<box>", "by (simp add: make_lit_def) (fast dest: subset_singletonD)"], ["proof (state)\nthis:\n  S \\<turnstile> \\<box>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  S \\<turnstile> \\<box>\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>What you might actually want is  @{term \"\\<forall>\\<A>. \\<not>cnf_semantics \\<A> S \\<Longrightarrow> S \\<turnstile> \\<box>\"}.\n  Unfortunately, applying compactness (to get a finite set with a finite number of atoms) here is problematic:\n  You would need to convert all clauses to disjunction-formulas, but there might be clauses with an infinite number of atoms. \n  Removing those has to be done before applying compactness, we would possibly have to remove an infinite number of infinite clauses.\n  Since the notion of a formula with an infinite number of atoms is not exactly standard, it is probably better to just skip this.\n \\<close>"], ["", "end"]]}