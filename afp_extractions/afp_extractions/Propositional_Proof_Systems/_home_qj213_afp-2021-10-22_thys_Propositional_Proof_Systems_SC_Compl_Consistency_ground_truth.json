{"file_name": "/home/qj213/afp-2021-10-22/thys/Propositional_Proof_Systems/SC_Compl_Consistency.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Propositional_Proof_Systems", "problem_names": ["lemma reasonable: \n  \"\\<forall>\\<Gamma>'. F    \\<triangleright> set_mset \\<Gamma> = set_mset \\<Gamma>' \\<longrightarrow> P \\<Gamma>' \\<Longrightarrow> P (F, \\<Gamma>)\" \n  \"\\<forall>\\<Gamma>'. F \\<triangleright> G \\<triangleright> set_mset \\<Gamma> = set_mset \\<Gamma>' \\<longrightarrow> P \\<Gamma>' \\<Longrightarrow> P (F, G, \\<Gamma>)\"", "lemma SC_consistent:  \"pcp {set_mset \\<Gamma>| \\<Gamma>. \\<not>(\\<Gamma> \\<Rightarrow> {#})}\"", "lemma \n  fixes \\<Gamma> \\<Delta> :: \"'a :: countable formula multiset\"\n  shows \"\\<Turnstile> \\<Gamma> \\<Rightarrow> \\<Delta> \\<Longrightarrow> \\<Gamma> \\<Rightarrow> \\<Delta>\""], "translations": [["", "lemma reasonable: \n  \"\\<forall>\\<Gamma>'. F    \\<triangleright> set_mset \\<Gamma> = set_mset \\<Gamma>' \\<longrightarrow> P \\<Gamma>' \\<Longrightarrow> P (F, \\<Gamma>)\" \n  \"\\<forall>\\<Gamma>'. F \\<triangleright> G \\<triangleright> set_mset \\<Gamma> = set_mset \\<Gamma>' \\<longrightarrow> P \\<Gamma>' \\<Longrightarrow> P (F, G, \\<Gamma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>\\<Gamma>'.\n        F \\<triangleright> set_mset \\<Gamma> =\n        set_mset \\<Gamma>' \\<longrightarrow>\n        P \\<Gamma>' \\<Longrightarrow>\n     P (F, \\<Gamma>)) &&&\n    (\\<forall>\\<Gamma>'.\n        F \\<triangleright> G \\<triangleright> set_mset \\<Gamma> =\n        set_mset \\<Gamma>' \\<longrightarrow>\n        P \\<Gamma>' \\<Longrightarrow>\n     P (F, G, \\<Gamma>))", "by simp_all"], ["", "lemma SC_consistent:  \"pcp {set_mset \\<Gamma>| \\<Gamma>. \\<not>(\\<Gamma> \\<Rightarrow> {#})}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pcp {set_mset \\<Gamma> |\\<Gamma>. \\<not> \\<Gamma> \\<Rightarrow> {#}}", "unfolding pcp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>S\\<in>{set_mset \\<Gamma> |\\<Gamma>.\n                    \\<not> \\<Gamma> \\<Rightarrow> {#}}.\n       \\<bottom> \\<notin> S \\<and>\n       (\\<forall>k.\n           Atom k \\<in> S \\<longrightarrow>\n           \\<^bold>\\<not> (Atom k) \\<in> S \\<longrightarrow> False) \\<and>\n       (\\<forall>F G.\n           F \\<^bold>\\<and> G \\<in> S \\<longrightarrow>\n           F \\<triangleright> G \\<triangleright> S\n           \\<in> {set_mset \\<Gamma> |\\<Gamma>.\n                  \\<not> \\<Gamma> \\<Rightarrow> {#}}) \\<and>\n       (\\<forall>F G.\n           F \\<^bold>\\<or> G \\<in> S \\<longrightarrow>\n           F \\<triangleright> S\n           \\<in> {set_mset \\<Gamma> |\\<Gamma>.\n                  \\<not> \\<Gamma> \\<Rightarrow> {#}} \\<or>\n           G \\<triangleright> S\n           \\<in> {set_mset \\<Gamma> |\\<Gamma>.\n                  \\<not> \\<Gamma> \\<Rightarrow> {#}}) \\<and>\n       (\\<forall>F G.\n           F \\<^bold>\\<rightarrow> G \\<in> S \\<longrightarrow>\n           \\<^bold>\\<not> F \\<triangleright> S\n           \\<in> {set_mset \\<Gamma> |\\<Gamma>.\n                  \\<not> \\<Gamma> \\<Rightarrow> {#}} \\<or>\n           G \\<triangleright> S\n           \\<in> {set_mset \\<Gamma> |\\<Gamma>.\n                  \\<not> \\<Gamma> \\<Rightarrow> {#}}) \\<and>\n       (\\<forall>F.\n           \\<^bold>\\<not> (\\<^bold>\\<not> F) \\<in> S \\<longrightarrow>\n           F \\<triangleright> S\n           \\<in> {set_mset \\<Gamma> |\\<Gamma>.\n                  \\<not> \\<Gamma> \\<Rightarrow> {#}}) \\<and>\n       (\\<forall>F G.\n           \\<^bold>\\<not> (F \\<^bold>\\<and> G) \\<in> S \\<longrightarrow>\n           \\<^bold>\\<not> F \\<triangleright> S\n           \\<in> {set_mset \\<Gamma> |\\<Gamma>.\n                  \\<not> \\<Gamma> \\<Rightarrow> {#}} \\<or>\n           \\<^bold>\\<not> G \\<triangleright> S\n           \\<in> {set_mset \\<Gamma> |\\<Gamma>.\n                  \\<not> \\<Gamma> \\<Rightarrow> {#}}) \\<and>\n       (\\<forall>F G.\n           \\<^bold>\\<not> (F \\<^bold>\\<or> G) \\<in> S \\<longrightarrow>\n           \\<^bold>\\<not>\n            F \\<triangleright> \\<^bold>\\<not> G \\<triangleright> S\n           \\<in> {set_mset \\<Gamma> |\\<Gamma>.\n                  \\<not> \\<Gamma> \\<Rightarrow> {#}}) \\<and>\n       (\\<forall>F G.\n           \\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G)\n           \\<in> S \\<longrightarrow>\n           F \\<triangleright> \\<^bold>\\<not> G \\<triangleright> S\n           \\<in> {set_mset \\<Gamma> |\\<Gamma>.\n                  \\<not> \\<Gamma> \\<Rightarrow> {#}})", "apply(intro ballI conjI; erule contrapos_pp; clarsimp; ((drule reasonable)+)?)"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>\\<Gamma>.\n       \\<bottom> \\<in># \\<Gamma> \\<Longrightarrow>\n       \\<Gamma> \\<Rightarrow> {#}\n 2. \\<And>k \\<Gamma>.\n       \\<lbrakk>Atom k \\<in># \\<Gamma>;\n        \\<^bold>\\<not> (Atom k) \\<in># \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> {#}\n 3. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F \\<^bold>\\<and> G \\<in># \\<Gamma>;\n        F, G, \\<Gamma> \\<Rightarrow> {#}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> {#}\n 4. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F \\<^bold>\\<or> G \\<in># \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> {#};\n        G, \\<Gamma> \\<Rightarrow> {#}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> {#}\n 5. \\<And>F G \\<Gamma>.\n       \\<lbrakk>F \\<^bold>\\<rightarrow> G \\<in># \\<Gamma>;\n        \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow> {#};\n        G, \\<Gamma> \\<Rightarrow> {#}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> {#}\n 6. \\<And>F \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not> (\\<^bold>\\<not> F) \\<in># \\<Gamma>;\n        F, \\<Gamma> \\<Rightarrow> {#}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> {#}\n 7. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not> (F \\<^bold>\\<and> G) \\<in># \\<Gamma>;\n        \\<^bold>\\<not> F, \\<Gamma> \\<Rightarrow> {#};\n        \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow> {#}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> {#}\n 8. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not> (F \\<^bold>\\<or> G) \\<in># \\<Gamma>;\n        \\<^bold>\\<not> F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow>\n        {#}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> {#}\n 9. \\<And>F G \\<Gamma>.\n       \\<lbrakk>\\<^bold>\\<not> (F \\<^bold>\\<rightarrow> G) \\<in># \\<Gamma>;\n        F, \\<^bold>\\<not> G, \\<Gamma> \\<Rightarrow> {#}\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<Rightarrow> {#}", "apply(auto dest!: NotL_inv AndL_inv OrL_inv ImpL_inv NotR_inv AndR_inv OrR_inv ImpR_inv multi_member_split contractL contractR intro!: SCp.intros(3-) intro: contractR contractL)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>F G A.\n       F, G, F, G, A \\<Rightarrow> {#} \\<Longrightarrow>\n       F, G, A \\<Rightarrow> {#}", "apply (metis add_mset_commute contract)"], ["proof (prove)\ngoal:\nNo subgoals!", "(* Alternatively, sledgehammer also finds slick proofs for the individual subgoals after the initial apply of the \"reasonable\"  lemmas\n  subgoal by (simp add: SCp.BotL)\n  subgoal by (metis Ax_canonical SCp.NotL contractL mset_add)\n  subgoal by (metis SCp.AndL contractL insert_DiffM)\n  subgoal by (metis SCp.OrL contractL insert_DiffM)\n  subgoal by (metis NotL_inv SCp.ImpL contractL insert_DiffM)\n  subgoal by (metis SCp.NotL SCp.NotR contractL insert_DiffM)\n  subgoal by (metis NotL_inv SCp.AndR SCp.NotL contractL insert_DiffM)\n  subgoal by (metis NotL_inv SCp.NotL SCp.OrR contractL inR1' insert_DiffM)\n  subgoal by (metis NotL_inv SCp.ImpR SCp.NotL contractL inL1' insert_DiffM) *)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"], ["", "lemma \n  fixes \\<Gamma> \\<Delta> :: \"'a :: countable formula multiset\"\n  shows \"\\<Turnstile> \\<Gamma> \\<Rightarrow> \\<Delta> \\<Longrightarrow> \\<Gamma> \\<Rightarrow> \\<Delta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Turnstile> \\<Gamma> \\<Rightarrow> \\<Delta> \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> \\<Delta>", "proof(erule contrapos_pp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<Gamma> \\<Rightarrow> \\<Delta> \\<Longrightarrow>\n    \\<not> \\<Turnstile> \\<Gamma> \\<Rightarrow> \\<Delta>", "have NotInv: \"\\<Gamma> + image_mset Not \\<Delta> \\<Rightarrow> {#} \\<Longrightarrow> \\<Gamma> \\<Rightarrow> \\<Delta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> + image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\n    {#} \\<Longrightarrow>\n    \\<Gamma> \\<Rightarrow> \\<Delta>", "by (induction \\<Delta> arbitrary: \\<Gamma>; simp add: NotL_inv)"], ["proof (state)\nthis:\n  \\<Gamma> + image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\n  {#} \\<Longrightarrow>\n  \\<Gamma> \\<Rightarrow> \\<Delta>\n\ngoal (1 subgoal):\n 1. \\<not> \\<Gamma> \\<Rightarrow> \\<Delta> \\<Longrightarrow>\n    \\<not> \\<Turnstile> \\<Gamma> \\<Rightarrow> \\<Delta>", "assume \\<open>\\<not> \\<Gamma> \\<Rightarrow> \\<Delta>\\<close>"], ["proof (state)\nthis:\n  \\<not> \\<Gamma> \\<Rightarrow> \\<Delta>\n\ngoal (1 subgoal):\n 1. \\<not> \\<Gamma> \\<Rightarrow> \\<Delta> \\<Longrightarrow>\n    \\<not> \\<Turnstile> \\<Gamma> \\<Rightarrow> \\<Delta>", "hence \\<open>\\<not> \\<Gamma> + image_mset Not \\<Delta> \\<Rightarrow> {#}\\<close>"], ["proof (prove)\nusing this:\n  \\<not> \\<Gamma> \\<Rightarrow> \\<Delta>\n\ngoal (1 subgoal):\n 1. \\<not> \\<Gamma> + image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow> {#}", "using NotInv"], ["proof (prove)\nusing this:\n  \\<not> \\<Gamma> \\<Rightarrow> \\<Delta>\n  \\<Gamma> + image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow>\n  {#} \\<Longrightarrow>\n  \\<Gamma> \\<Rightarrow> \\<Delta>\n\ngoal (1 subgoal):\n 1. \\<not> \\<Gamma> + image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow> {#}", "by blast"], ["proof (state)\nthis:\n  \\<not> \\<Gamma> + image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow> {#}\n\ngoal (1 subgoal):\n 1. \\<not> \\<Gamma> \\<Rightarrow> \\<Delta> \\<Longrightarrow>\n    \\<not> \\<Turnstile> \\<Gamma> \\<Rightarrow> \\<Delta>", "with pcp_sat[OF SC_consistent]"], ["proof (chain)\npicking this:\n  ?S \\<in> {set_mset \\<Gamma> |\\<Gamma>.\n            \\<not> \\<Gamma> \\<Rightarrow> {#}} \\<Longrightarrow>\n  sat ?S\n  \\<not> \\<Gamma> + image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow> {#}", "have \"sat (set_mset (\\<Gamma> + image_mset \\<^bold>\\<not> \\<Delta>))\""], ["proof (prove)\nusing this:\n  ?S \\<in> {set_mset \\<Gamma> |\\<Gamma>.\n            \\<not> \\<Gamma> \\<Rightarrow> {#}} \\<Longrightarrow>\n  sat ?S\n  \\<not> \\<Gamma> + image_mset \\<^bold>\\<not> \\<Delta> \\<Rightarrow> {#}\n\ngoal (1 subgoal):\n 1. sat (set_mset (\\<Gamma> + image_mset \\<^bold>\\<not> \\<Delta>))", "by blast"], ["proof (state)\nthis:\n  sat (set_mset (\\<Gamma> + image_mset \\<^bold>\\<not> \\<Delta>))\n\ngoal (1 subgoal):\n 1. \\<not> \\<Gamma> \\<Rightarrow> \\<Delta> \\<Longrightarrow>\n    \\<not> \\<Turnstile> \\<Gamma> \\<Rightarrow> \\<Delta>", "thus \\<open>\\<not> (\\<Turnstile> \\<Gamma> \\<Rightarrow> \\<Delta>)\\<close>"], ["proof (prove)\nusing this:\n  sat (set_mset (\\<Gamma> + image_mset \\<^bold>\\<not> \\<Delta>))\n\ngoal (1 subgoal):\n 1. \\<not> \\<Turnstile> \\<Gamma> \\<Rightarrow> \\<Delta>", "unfolding sat_def sequent_semantics_def not_all"], ["proof (prove)\nusing this:\n  \\<exists>\\<A>.\n     \\<forall>F\\<in>#\\<Gamma> + image_mset \\<^bold>\\<not> \\<Delta>.\n        \\<A> \\<Turnstile> F\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<not> (Multiset.Ball \\<Gamma> ((\\<Turnstile>) x) \\<longrightarrow>\n               Multiset.Bex \\<Delta> ((\\<Turnstile>) x))", "by (force elim!: ex_forward)"], ["proof (state)\nthis:\n  \\<not> \\<Turnstile> \\<Gamma> \\<Rightarrow> \\<Delta>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}