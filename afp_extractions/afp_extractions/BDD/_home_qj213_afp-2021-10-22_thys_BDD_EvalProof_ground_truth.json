{"file_name": "/home/qj213/afp-2021-10-22/thys/BDD/EvalProof.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/BDD", "problem_names": ["lemma (in Eval_impl) Eval_modifies:\n  shows \"\\<forall>\\<sigma>. \\<Gamma>\\<turnstile>{\\<sigma>}  PROC Eval (\\<acute>p, \\<acute>varval, \\<acute>R) \n                {t. t may_not_modify_globals \\<sigma>}\"", "lemma (in Eval_impl) Eval_spec:\n  shows \"\\<forall>\\<sigma> t bdt1. \\<Gamma>\\<turnstile>\n  \\<lbrace>\\<sigma>. Dag \\<acute>p \\<acute>low \\<acute>high t \\<and> bdt t \\<acute>var = Some bdt1\\<rbrace> \n   \\<acute>R :== PROC Eval(\\<acute>p, \\<acute>varval) \n  \\<lbrace>\\<acute>R = eval bdt1 \\<^bsup>\\<sigma>\\<^esup>varval \\<rbrace>\""], "translations": [["", "lemma (in Eval_impl) Eval_modifies:\n  shows \"\\<forall>\\<sigma>. \\<Gamma>\\<turnstile>{\\<sigma>}  PROC Eval (\\<acute>p, \\<acute>varval, \\<acute>R) \n                {t. t may_not_modify_globals \\<sigma>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<sigma>.\n       \\<Gamma>\n          \\<turnstile> {\\<sigma>}\n                       \\<acute>R :== PROC Eval(\\<acute>p,\\<acute>varval)\n                       {t. t may_not_modify_globals \\<sigma>}", "apply (hoare_rule HoarePartial.ProcRec1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<sigma>.\n       \\<Gamma>,(\\<Union>\\<sigma>.\n                    {({\\<sigma>}, Eval_'proc,\n                      {t. t may_not_modify_globals \\<sigma>}, {})})\n          \\<turnstile> {\\<sigma>}\n                       IF \\<acute>p\\<rightarrow>\\<acute>var = 0\n                       THEN \\<acute>R :== False\n                       ELSE IF \\<acute>p\\<rightarrow>\\<acute>var = 1\n                            THEN \\<acute>R :== True\n                            ELSE IF \\<acute>varval !\n                                    (\\<acute>p\\<rightarrow>\\<acute>var)\n                                 THEN \\<acute>R :== CALL Eval(\\<acute>p\\<rightarrow>\\<acute>high,\n                                   \\<acute>varval)\n                                 ELSE \\<acute>R :== CALL Eval(\\<acute>p\\<rightarrow>\\<acute>low,\n                                   \\<acute>varval)\n                                 FI\n                            FI\n                       FI\n                       {t. t may_not_modify_globals \\<sigma>}", "apply (vcg spec=modifies)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in Eval_impl) Eval_spec:\n  shows \"\\<forall>\\<sigma> t bdt1. \\<Gamma>\\<turnstile>\n  \\<lbrace>\\<sigma>. Dag \\<acute>p \\<acute>low \\<acute>high t \\<and> bdt t \\<acute>var = Some bdt1\\<rbrace> \n   \\<acute>R :== PROC Eval(\\<acute>p, \\<acute>varval) \n  \\<lbrace>\\<acute>R = eval bdt1 \\<^bsup>\\<sigma>\\<^esup>varval \\<rbrace>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<sigma> t bdt1.\n       \\<Gamma>\n          \\<turnstile> \\<lbrace>\\<sigma>. Dag \\<acute>p \\<acute>low\n     \\<acute>high t \\<and>\n    bdt t \\<acute>var = Some bdt1\\<rbrace>\n                       \\<acute>R :== PROC Eval(\\<acute>p,\\<acute>varval)\n                       \\<lbrace>\\<acute>R =\n                                eval bdt1\n                                 \\<^bsup>\\<sigma>\\<^esup>varval\\<rbrace>", "apply (hoare_rule HoarePartial.ProcRec1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<sigma> t bdt1.\n       \\<Gamma>,(\\<Union>\\<sigma> t bdt1.\n                    {(\\<lbrace>\\<sigma>. Dag \\<acute>p \\<acute>low\n    \\<acute>high t \\<and>\n   bdt t \\<acute>var = Some bdt1\\<rbrace>,\n                      Eval_'proc,\n                      \\<lbrace>\\<acute>R =\n                               eval bdt1\n                                \\<^bsup>\\<sigma>\\<^esup>varval\\<rbrace>,\n                      {})})\n          \\<turnstile> \\<lbrace>\\<sigma>. Dag \\<acute>p \\<acute>low\n     \\<acute>high t \\<and>\n    bdt t \\<acute>var = Some bdt1\\<rbrace>\n                       IF \\<acute>p\\<rightarrow>\\<acute>var = 0\n                       THEN \\<acute>R :== False\n                       ELSE IF \\<acute>p\\<rightarrow>\\<acute>var = 1\n                            THEN \\<acute>R :== True\n                            ELSE IF \\<acute>varval !\n                                    (\\<acute>p\\<rightarrow>\\<acute>var)\n                                 THEN \\<acute>R :== CALL Eval(\\<acute>p\\<rightarrow>\\<acute>high,\n                                   \\<acute>varval)\n                                 ELSE \\<acute>R :== CALL Eval(\\<acute>p\\<rightarrow>\\<acute>low,\n                                   \\<acute>varval)\n                                 FI\n                            FI\n                       FI\n                       \\<lbrace>\\<acute>R =\n                                eval bdt1\n                                 \\<^bsup>\\<sigma>\\<^esup>varval\\<rbrace>", "apply vcg"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1\\<rbrakk>\n       \\<Longrightarrow> (var p = 0 \\<longrightarrow>\n                          False = eval bdt1 varval) \\<and>\n                         (var p \\<noteq> 0 \\<longrightarrow>\n                          (var p = 1 \\<longrightarrow>\n                           True = eval bdt1 varval) \\<and>\n                          (var p \\<noteq> 1 \\<longrightarrow>\n                           (varval ! var p \\<longrightarrow>\n                            (\\<exists>t.\n                                Dag (high p) low high t \\<and>\n                                (\\<exists>bdt1a.\n                                    bdt t var = Some bdt1a \\<and>\n                                    (\\<forall>R.\n  R = eval bdt1a varval \\<longrightarrow>\n  eval bdt1a varval = eval bdt1 varval)))) \\<and>\n                           (\\<not> varval ! var p \\<longrightarrow>\n                            (\\<exists>t.\n                                Dag (low p) low high t \\<and>\n                                (\\<exists>bdt1a.\n                                    bdt t var = Some bdt1a \\<and>\n                                    (\\<forall>R.\n  R = eval bdt1a varval \\<longrightarrow>\n  eval bdt1a varval = eval bdt1 varval))))))", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1\\<rbrakk>\n       \\<Longrightarrow> (var p = 0 \\<longrightarrow>\n                          \\<not> eval bdt1 varval) \\<and>\n                         (0 < var p \\<longrightarrow>\n                          (var p = Suc 0 \\<longrightarrow>\n                           eval bdt1 varval) \\<and>\n                          (var p \\<noteq> Suc 0 \\<longrightarrow>\n                           (varval ! var p \\<longrightarrow>\n                            (\\<exists>t.\n                                Dag (high p) low high t \\<and>\n                                (\\<exists>bdt1a.\n                                    bdt t var = Some bdt1a \\<and>\n                                    eval bdt1a varval =\n                                    eval bdt1 varval))) \\<and>\n                           (\\<not> varval ! var p \\<longrightarrow>\n                            (\\<exists>t.\n                                Dag (low p) low high t \\<and>\n                                (\\<exists>bdt1a.\n                                    bdt t var = Some bdt1a \\<and>\n                                    eval bdt1a varval =\n                                    eval bdt1 varval)))))", "apply safe"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; var p = 0;\n        eval bdt1 varval\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p = Suc 0\\<rbrakk>\n       \\<Longrightarrow> eval bdt1 varval\n 3. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; varval ! var p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (high p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)\n 4. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; \\<not> varval ! var p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (low p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)", "apply    (case_tac bdt1)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; var p = 0;\n        eval bdt1 varval; bdt1 = Zero\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; var p = 0;\n        eval bdt1 varval; bdt1 = One\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>t bdt1 var low high varval p x31 x32 x33.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; var p = 0;\n        eval bdt1 varval; bdt1 = Bdt_Node x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p = Suc 0\\<rbrakk>\n       \\<Longrightarrow> eval bdt1 varval\n 5. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; varval ! var p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (high p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)\n 6. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; \\<not> varval ! var p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (low p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)", "apply      simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; var p = 0;\n        eval bdt1 varval; bdt1 = One\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>t bdt1 var low high varval p x31 x32 x33.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; var p = 0;\n        eval bdt1 varval; bdt1 = Bdt_Node x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p = Suc 0\\<rbrakk>\n       \\<Longrightarrow> eval bdt1 varval\n 4. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; varval ! var p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (high p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)\n 5. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; \\<not> varval ! var p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (low p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)", "apply     fastforce"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t bdt1 var low high varval p x31 x32 x33.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; var p = 0;\n        eval bdt1 varval; bdt1 = Bdt_Node x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p = Suc 0\\<rbrakk>\n       \\<Longrightarrow> eval bdt1 varval\n 3. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; varval ! var p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (high p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)\n 4. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; \\<not> varval ! var p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (low p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)", "apply    fastforce"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p = Suc 0\\<rbrakk>\n       \\<Longrightarrow> eval bdt1 varval\n 2. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; varval ! var p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (high p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)\n 3. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; \\<not> varval ! var p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (low p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)", "apply   simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1;\n        var p = Suc 0\\<rbrakk>\n       \\<Longrightarrow> eval bdt1 varval\n 2. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; varval ! var p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (high p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)\n 3. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; \\<not> varval ! var p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (low p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)", "apply   (case_tac bdt1)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; var p = Suc 0;\n        bdt1 = Zero\\<rbrakk>\n       \\<Longrightarrow> eval bdt1 varval\n 2. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; var p = Suc 0;\n        bdt1 = One\\<rbrakk>\n       \\<Longrightarrow> eval bdt1 varval\n 3. \\<And>t bdt1 var low high varval p x31 x32 x33.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; var p = Suc 0;\n        bdt1 = Bdt_Node x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> eval bdt1 varval\n 4. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; varval ! var p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (high p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)\n 5. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; \\<not> varval ! var p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (low p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)", "apply     fastforce"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; var p = Suc 0;\n        bdt1 = One\\<rbrakk>\n       \\<Longrightarrow> eval bdt1 varval\n 2. \\<And>t bdt1 var low high varval p x31 x32 x33.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; var p = Suc 0;\n        bdt1 = Bdt_Node x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> eval bdt1 varval\n 3. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; varval ! var p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (high p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)\n 4. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; \\<not> varval ! var p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (low p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)", "apply    fastforce"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t bdt1 var low high varval p x31 x32 x33.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; var p = Suc 0;\n        bdt1 = Bdt_Node x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> eval bdt1 varval\n 2. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; varval ! var p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (high p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)\n 3. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; \\<not> varval ! var p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (low p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)", "apply   fastforce"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; varval ! var p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (high p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)\n 2. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; \\<not> varval ! var p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (low p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)", "apply  (case_tac bdt1)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; varval ! var p; bdt1 = Zero\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (high p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)\n 2. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; varval ! var p; bdt1 = One\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (high p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)\n 3. \\<And>t bdt1 var low high varval p x31 x32 x33.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; varval ! var p;\n        bdt1 = Bdt_Node x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (high p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)\n 4. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; \\<not> varval ! var p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (low p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)", "apply    fastforce"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; varval ! var p; bdt1 = One\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (high p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)\n 2. \\<And>t bdt1 var low high varval p x31 x32 x33.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; varval ! var p;\n        bdt1 = Bdt_Node x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (high p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)\n 3. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; \\<not> varval ! var p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (low p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)", "apply   fastforce"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t bdt1 var low high varval p x31 x32 x33.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; varval ! var p;\n        bdt1 = Bdt_Node x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (high p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)\n 2. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; \\<not> varval ! var p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (low p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)", "apply  fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; \\<not> varval ! var p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (low p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)", "apply (case_tac bdt1)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; \\<not> varval ! var p; bdt1 = Zero\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (low p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)\n 2. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; \\<not> varval ! var p; bdt1 = One\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (low p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)\n 3. \\<And>t bdt1 var low high varval p x31 x32 x33.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; \\<not> varval ! var p;\n        bdt1 = Bdt_Node x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (low p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)", "apply   fastforce"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t bdt1 var low high varval p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; \\<not> varval ! var p; bdt1 = One\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (low p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)\n 2. \\<And>t bdt1 var low high varval p x31 x32 x33.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; \\<not> varval ! var p;\n        bdt1 = Bdt_Node x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (low p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)", "apply  fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t bdt1 var low high varval p x31 x32 x33.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; 0 < var p;\n        var p \\<noteq> Suc 0; \\<not> varval ! var p;\n        bdt1 = Bdt_Node x31 x32 x33\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            Dag (low p) low high t \\<and>\n                            (\\<exists>bdt1a.\n                                bdt t var = Some bdt1a \\<and>\n                                eval bdt1a varval = eval bdt1 varval)", "apply fastforce"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"]]}