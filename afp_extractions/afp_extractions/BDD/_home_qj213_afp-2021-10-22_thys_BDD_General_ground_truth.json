{"file_name": "/home/qj213/afp-2021-10-22/thys/BDD/General.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/BDD", "problem_names": ["lemma eval_zero: \"\\<lbrakk>bdt (Node l v r) var = Some x; \nvar (root (Node l v r)) = (0::nat)\\<rbrakk> \\<Longrightarrow> x = Zero\"", "lemma bdt_Some_One_iff [simp]: \n  \"(bdt t var = Some One) = (\\<exists> p. t = Node Tip p Tip \\<and> var p = 1)\"", "lemma bdt_Some_Zero_iff [simp]: \n  \"(bdt t var = Some Zero) = (\\<exists> p. t = Node Tip p Tip \\<and> var p = 0)\"", "lemma bdt_Some_Node_iff [simp]: \n \"(bdt t var = Some (Bdt_Node bdt1 v bdt2)) = \n    (\\<exists> p l r. t = Node l p r \\<and> bdt l var = Some bdt1 \\<and> bdt r var = Some bdt2 \\<and> \n               1 < v \\<and> var p = v )\"", "lemma balanced_bdt: \n\"\\<And> p bdt1. \\<lbrakk> Dag p low high t; bdt t var = Some bdt1; no \\<in> set_of t\\<rbrakk> \n \\<Longrightarrow> (low no = Null) = (high no = Null)\"", "lemma set_of_nn: \"\\<lbrakk> Dag p low high t; n \\<in> set_of t\\<rbrakk> \\<Longrightarrow> n \\<noteq> Null\"", "lemma subnodes_ordered [rule_format]: \n\"\\<forall>p. n \\<in> set_of t \\<longrightarrow> Dag p low high t \\<longrightarrow> ordered t var \\<longrightarrow> var n <= var p\"", "lemma ordered_set_of: \n\"\\<And> x. \\<lbrakk>ordered t var; x \\<in> set_of t\\<rbrakk> \\<Longrightarrow> var x <= var (root t)\"", "lemma dag_setofD: \"\\<And> p low high n. \\<lbrakk> Dag p low high t; n \\<in> set_of t \\<rbrakk> \\<Longrightarrow> \n  (\\<exists> nt. Dag n low high nt) \\<and> (\\<forall> nt. Dag n low high nt \\<longrightarrow> set_of nt \\<subseteq> set_of t)\"", "lemma dag_setof_exD: \"\\<lbrakk>Dag p low high t; n \\<in> set_of t\\<rbrakk> \\<Longrightarrow> \\<exists> nt. Dag n low high nt\"", "lemma dag_setof_subsetD: \"\\<lbrakk>Dag p low high t; n \\<in> set_of t; Dag n low high nt\\<rbrakk> \\<Longrightarrow> set_of nt \\<subseteq> set_of t\"", "lemma subdag_parentdag_low: \"not <= lt \\<Longrightarrow> not <= (Node lt p rt)\"", "lemma subdag_parentdag_high: \"not <= rt \\<Longrightarrow> not <= (Node lt p rt)\"", "lemma set_of_subdag: \"\\<And> p not no. \n\\<lbrakk>Dag p low high t; Dag no low high not; no \\<in> set_of t\\<rbrakk> \\<Longrightarrow> not <= t\"", "lemma children_ordered: \"\\<lbrakk>ordered (Node lt p rt) var\\<rbrakk> \\<Longrightarrow> \nordered lt var \\<and> ordered rt var\"", "lemma ordered_subdag: \"\\<lbrakk>ordered t var; not <= t\\<rbrakk> \\<Longrightarrow> ordered not var\"", "lemma subdag_ordered: \n\"\\<And> not no p. \\<lbrakk>ordered t var; Dag p low high t; Dag no low high not; \n              no \\<in> set_of t\\<rbrakk> \\<Longrightarrow> ordered not var\"", "lemma elem_set_of: \"\\<And> x st. \\<lbrakk>x \\<in> set_of st; set_of st \\<subseteq> set_of t\\<rbrakk> \\<Longrightarrow> x \\<in> set_of t\"", "lemma cong_eval_sym: \"l \\<sim> r = r \\<sim> l\"", "lemma cong_eval_trans: \"\\<lbrakk> l \\<sim> r; r \\<sim> t\\<rbrakk> \\<Longrightarrow> l \\<sim> t\"", "lemma cong_eval_child_high: \" l \\<sim> r \\<Longrightarrow> r \\<sim> (Bdt_Node l v r)\"", "lemma cong_eval_child_low: \" l \\<sim> r \\<Longrightarrow> l \\<sim> (Bdt_Node l v r)\"", "lemma null_comp_not_Null [simp]: \"h q \\<noteq> Null \\<Longrightarrow> (g \\<propto> h) q = g (h q)\"", "lemma id_trans: \"(a \\<propto> id) (b (c p)) = (a \\<propto> b) (c p)\"", "lemma empty_Dags [simp]: \"Dags {} low high = {}\"", "lemma isomorphic_dags_eq_sym: \"isomorphic_dags_eq st\\<^sub>1 st\\<^sub>2 var = isomorphic_dags_eq st\\<^sub>2 st\\<^sub>1  var\"", "lemma replicate_elem: \"i < n ==>  (replicate n x !i) = x\"", "lemma no_in_one_ll: \n \"\\<lbrakk>wf_ll pret levellista var; i<length levellista; j < length levellista; \n   no \\<in> set (levellista ! i); i\\<noteq>j\\<rbrakk> \n  \\<Longrightarrow> no \\<notin> set (levellista ! j) \"", "lemma nodes_in_wf_ll: \n\"\\<lbrakk>wf_ll pret levellista var; i < length levellista;  no \\<in> set (levellista ! i)\\<rbrakk> \n \\<Longrightarrow> var no = i \\<and> no \\<in> set_of pret\"", "lemma subelem_set_of_low: \n\"\\<And> p. \\<lbrakk> x \\<in> set_of t; x \\<noteq> Null; low x \\<noteq> Null; Dag p low high t \\<rbrakk> \n \\<Longrightarrow> (low x) \\<in> set_of t\"", "lemma subelem_set_of_high: \n\"\\<And> p. \\<lbrakk> x \\<in> set_of t; x \\<noteq> Null; high x \\<noteq> Null; Dag p low high t \\<rbrakk> \n \\<Longrightarrow> (high x) \\<in> set_of t\"", "lemma set_split: \"{k. k<(Suc n)} = {k. k<n} \\<union> {n}\"", "lemma Nodes_levellist_subset_t: \n\"\\<lbrakk>wf_ll t levellist var; i<= length levellist\\<rbrakk> \\<Longrightarrow> Nodes i levellist \\<subseteq> set_of t\"", "lemma bdt_child: \n\"\\<lbrakk> bdt (Node (Node llt l rlt) p (Node lrt r rrt)) var = Some bdt1\\<rbrakk> \n \\<Longrightarrow> \\<exists> lbdt rbdt.  bdt (Node llt l rlt) var = Some lbdt \\<and> \n                   bdt (Node lrt r rrt) var = Some rbdt\"", "lemma subbdt_ex_dag_def: \n\"\\<And> bdt1 p. \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; Dag no low high not; \nno \\<in> set_of t\\<rbrakk> \\<Longrightarrow> \\<exists> bdt2.  bdt not var = Some bdt2\"", "lemma subbdt_ex: \n\"\\<And> bdt1. \\<lbrakk> (Node lst stp rst) <= t; bdt t var = Some bdt1\\<rbrakk> \n \\<Longrightarrow> \\<exists> bdt2.  bdt (Node lst stp rst) var = Some bdt2\"", "lemma var_ordered_children: \n\"\\<And> p. \\<lbrakk> Dag p low high t; ordered t var; no \\<in> set_of t; \n        low no \\<noteq> Null; high no \\<noteq> Null\\<rbrakk> \n       \\<Longrightarrow> var (low no) < var no \\<and> var (high no) < var no\"", "lemma nort_null_comp:\nassumes pret_dag: \"Dag p low high pret\" and\n        prebdt_pret: \"bdt pret var = Some prebdt\" and\n        nort_dag: \"Dag (repc no) (repb \\<propto> low) (repb \\<propto> high) nort\" and\n        ord_pret: \"ordered pret var\" and\n        wf_llb: \"wf_ll pret levellistb var\" and\n        nbsll: \"nb < length levellistb\" and\n        repbc_nc: \"\\<forall> nt. nt \\<notin> set (levellistb ! nb) \\<longrightarrow> repb nt = repc nt\" and\n        xsnb_in_pret: \"\\<forall> x \\<in> set_of nort. var x < nb \\<and> x \\<in> set_of pret\"\nshows \"\\<forall> x \\<in> set_of nort. ((repc \\<propto> low) x = (repb \\<propto> low) x \\<and> \n                           (repc \\<propto> high) x = (repb \\<propto> high) x)\"", "lemma wf_ll_Nodes_pret: \n\"\\<lbrakk>wf_ll pret levellista var; nb < length levellista; x \\<in> Nodes nb levellista\\<rbrakk> \n \\<Longrightarrow> x \\<in> set_of pret \\<and> var x < nb\"", "lemma bdt_Some_var1_One: \n\"\\<And> x. \\<lbrakk> bdt t var = Some x; var (root t) = 1\\<rbrakk> \n \\<Longrightarrow> x = One \\<and> t = (Node Tip (root t) Tip)\"", "lemma bdt_Some_var0_Zero: \n\"\\<And> x. \\<lbrakk> bdt t var = Some x; var (root t) = 0\\<rbrakk> \n\\<Longrightarrow> x = Zero \\<and> t = (Node Tip (root t) Tip)\"", "lemma reduced_children_parent: \n\"\\<lbrakk> reduced l; l= (Node llt lp rlt); reduced r; r=(Node lrt rp rrt); \n  lp \\<noteq> rp \\<rbrakk> \n \\<Longrightarrow> reduced (Node l p r)\"", "lemma Nodes_subset: \"Nodes i levellista \\<subseteq> Nodes (Suc i) levellista\"", "lemma Nodes_levellist: \n\"\\<lbrakk> wf_ll pret levellista var; nb < length levellista; p \\<in> Nodes nb levellista\\<rbrakk> \n \\<Longrightarrow> p \\<notin> set (levellista ! nb)\"", "lemma Nodes_var_pret: \n \"\\<lbrakk>wf_ll pret levellista var; nb < length levellista; p \\<in> Nodes nb levellista\\<rbrakk> \n  \\<Longrightarrow> var p < nb \\<and> p \\<in> set_of pret\"", "lemma Dags_root_in_Nodes:\nassumes t_in_DagsSucnb: \"t \\<in> Dags (Nodes (Suc nb) levellista) low high\" \nshows \"\\<exists> p . Dag p low high t  \\<and> p \\<in> Nodes (Suc nb) levellista\"", "lemma subdag_dag: \n\"\\<And> p. \\<lbrakk>Dag p low high t; st <= t\\<rbrakk> \\<Longrightarrow> \\<exists> stp. Dag stp low high st\"", "lemma Dags_subdags: \nassumes t_in_Dags: \"t \\<in> Dags nodes low high\" and\n  st_t: \"st <= t\" and \n  st_nTip: \"st \\<noteq> Tip\"\nshows \"st \\<in> Dags nodes low high\"", "lemma Dags_Nodes_cases: \nassumes P_sym: \"\\<And> t1 t2. P t1 t2 var = P t2 t1 var\" and\n  dags_in_lower_levels: \n  \"\\<And> t1 t2. \\<lbrakk>t1 \\<in> Dags (fnct `(Nodes n levellista)) low high; \n              t2  \\<in> Dags (fnct `(Nodes n levellista)) low high\\<rbrakk> \n             \\<Longrightarrow> P t1 t2 var\" and\n  dags_in_mixed_levels: \n  \"\\<And> t1 t2. \\<lbrakk>t1 \\<in> Dags (fnct `(Nodes n levellista)) low high; \n              t2  \\<in> Dags (fnct `(Nodes (Suc n) levellista)) low high; \n              t2 \\<notin>  Dags (fnct `(Nodes n levellista)) low high\\<rbrakk> \n             \\<Longrightarrow> P t1 t2 var\" and\n  dags_in_high_level: \n   \"\\<And> t1 t2. \\<lbrakk>t1 \\<in> Dags (fnct `(Nodes (Suc n) levellista)) low high; \n               t1 \\<notin>  Dags (fnct `(Nodes n levellista)) low high; \n               t2 \\<in> Dags (fnct `(Nodes (Suc n) levellista)) low high; \n               t2 \\<notin>  Dags (fnct `(Nodes n levellista)) low high\\<rbrakk> \n              \\<Longrightarrow> P t1 t2 var\"\nshows \"\\<forall> t1 t2.  t1 \\<in> Dags (fnct `(Nodes (Suc n) levellista)) low high \\<and> \n                 t2 \\<in> Dags (fnct `(Nodes (Suc n) levellista)) low high \n                 \\<longrightarrow> P t1 t2 var\"", "lemma Null_notin_Nodes: \"\\<lbrakk>Dag p low high t; nb <= length levellista; wf_ll t levellista var\\<rbrakk> \\<Longrightarrow> Null \\<notin> Nodes nb levellista\"", "lemma Nodes_in_pret: \"\\<lbrakk>wf_ll t levellista var; nb <= length levellista\\<rbrakk> \\<Longrightarrow> Nodes nb levellista \\<subseteq> set_of t\"", "lemma restrict_root_Node: \n  \"\\<lbrakk>t \\<in> Dags (repc `Nodes (Suc nb) levellista) (repc \\<propto> low) (repc \\<propto> high); t \\<notin>  Dags (repc `Nodes nb levellista) (repc \\<propto> low) (repc \\<propto> high); \n  ordered t var; \\<forall> no \\<in> Nodes (Suc nb) levellista. var (repc no) <= var no \\<and> repc (repc no) = repc no; wf_ll pret levellista var; nb < length levellista;repc `Nodes (Suc nb) levellista \\<subseteq> Nodes (Suc nb) levellista\\<rbrakk>\n  \\<Longrightarrow> \\<exists> q. Dag (repc q) (repc \\<propto> low) (repc \\<propto> high) t \\<and> q \\<in> set (levellista ! nb)\"", "lemma same_bdt_var: \"\\<lbrakk>bdt (Node lt1 p1 rt1) var = Some bdt1; bdt (Node lt2 p2 rt2) var = Some bdt1\\<rbrakk>\n  \\<Longrightarrow> var p1 = var p2\"", "lemma bdt_Some_Leaf_var_le_1: \n\"\\<lbrakk>Dag p low high t; bdt t var = Some x; isLeaf_pt p low high\\<rbrakk> \n  \\<Longrightarrow> var p <= 1\"", "lemma subnode_dag_cons: \n\"\\<And> p. \\<lbrakk>Dag p low high t; no \\<in> set_of t\\<rbrakk> \\<Longrightarrow> \\<exists> not. Dag no low high not\"", "lemma nodes_in_taken_in_takeSucn: \"no \\<in> set (take n nodeslist) \\<Longrightarrow> no \\<in> set (take (Suc n) nodeslist) \"", "lemma ind_in_higher_take: \"\\<And>n k. \\<lbrakk>n < k;  n < length xs\\<rbrakk> \n  \\<Longrightarrow> xs ! n \\<in> set (take k xs)\"", "lemma take_length_set: \"\\<And>n. n=length xs \\<Longrightarrow> set (take n xs) = set xs\"", "lemma repNodes_eq_ext_rep: \"\\<lbrakk>low no \\<noteq> nodeslist! n; high no \\<noteq> nodeslist ! n; \n  low sn \\<noteq> nodeslist ! n; high sn \\<noteq> nodeslist ! n\\<rbrakk>\n  \\<Longrightarrow> repNodes_eq sn no low high repa = repNodes_eq sn no low high (repa(nodeslist ! n := repa (low (nodeslist ! n))))\"", "lemma filter_not_empty: \"\\<lbrakk>x \\<in> set xs; P x\\<rbrakk> \\<Longrightarrow> filter P xs \\<noteq> []\"", "lemma \"x \\<in> set (filter P xs) \\<Longrightarrow> P x\"", "lemma hd_filter_in_list: \"filter P xs \\<noteq> [] \\<Longrightarrow> hd (filter P xs) \\<in> set xs\"", "lemma hd_filter_in_filter: \"filter P xs \\<noteq> [] \\<Longrightarrow> hd (filter P xs) \\<in> set (filter P xs)\"", "lemma hd_filter_prop: \n  assumes non_empty: \"filter P xs \\<noteq> []\" \n  shows \"P (hd (filter P xs))\"", "lemma index_elem: \"x \\<in> set xs \\<Longrightarrow> \\<exists>i<length xs. x = xs ! i\"", "lemma filter_hd_P_rep_indep:     \n\"\\<lbrakk>\\<forall>x. P x x; \\<forall>a b. P x a \\<longrightarrow> P a b \\<longrightarrow> P x b; filter (P x) xs \\<noteq> []\\<rbrakk>  \\<Longrightarrow> \n  hd (filter (P (hd (filter (P x) xs))) xs) =  hd (filter (P x) xs)\"", "lemma take_Suc_not_last:\n\"\\<And>n. \\<lbrakk>x \\<in> set (take (Suc n) xs); x\\<noteq>xs!n; n < length xs\\<rbrakk> \\<Longrightarrow> x \\<in> set (take n xs)\"", "lemma P_eq_list_filter: \"\\<forall>x \\<in> set xs. P x = Q x \\<Longrightarrow> filter P xs = filter Q xs\"", "lemma hd_filter_take_more: \"\\<And>n m.\\<lbrakk>filter P (take n xs) \\<noteq> []; n \\<le> m\\<rbrakk> \\<Longrightarrow> \n       hd (filter P (take n xs)) =  hd (filter P (take m xs))\""], "translations": [["", "lemma eval_zero: \"\\<lbrakk>bdt (Node l v r) var = Some x; \nvar (root (Node l v r)) = (0::nat)\\<rbrakk> \\<Longrightarrow> x = Zero\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>bdt (Node l v r) var = Some x;\n     var (root (Node l v r)) = 0\\<rbrakk>\n    \\<Longrightarrow> x = Zero", "apply (cases l)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>bdt (Node l v r) var = Some x; var (root (Node l v r)) = 0;\n     l = Tip\\<rbrakk>\n    \\<Longrightarrow> x = Zero\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>bdt (Node l v r) var = Some x; var (root (Node l v r)) = 0;\n        l = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> x = Zero", "apply (cases r)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>bdt (Node l v r) var = Some x; var (root (Node l v r)) = 0;\n     l = Tip; r = Tip\\<rbrakk>\n    \\<Longrightarrow> x = Zero\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>bdt (Node l v r) var = Some x; var (root (Node l v r)) = 0;\n        l = Tip; r = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> x = Zero\n 3. \\<And>x21 x22 x23.\n       \\<lbrakk>bdt (Node l v r) var = Some x; var (root (Node l v r)) = 0;\n        l = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> x = Zero", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>bdt (Node l v r) var = Some x; var (root (Node l v r)) = 0;\n        l = Tip; r = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> x = Zero\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>bdt (Node l v r) var = Some x; var (root (Node l v r)) = 0;\n        l = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> x = Zero", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>bdt (Node l v r) var = Some x; var (root (Node l v r)) = 0;\n        l = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> x = Zero", "apply (cases r)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>bdt (Node l v r) var = Some x; var (root (Node l v r)) = 0;\n        l = Node x21 x22 x23; r = Tip\\<rbrakk>\n       \\<Longrightarrow> x = Zero\n 2. \\<And>x21 x22 x23 x21a x22a x23a.\n       \\<lbrakk>bdt (Node l v r) var = Some x; var (root (Node l v r)) = 0;\n        l = Node x21 x22 x23; r = Node x21a x22a x23a\\<rbrakk>\n       \\<Longrightarrow> x = Zero", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23 x21a x22a x23a.\n       \\<lbrakk>bdt (Node l v r) var = Some x; var (root (Node l v r)) = 0;\n        l = Node x21 x22 x23; r = Node x21a x22a x23a\\<rbrakk>\n       \\<Longrightarrow> x = Zero", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma bdt_Some_One_iff [simp]: \n  \"(bdt t var = Some One) = (\\<exists> p. t = Node Tip p Tip \\<and> var p = 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (bdt t var = Some One) =\n    (\\<exists>p. t = Node Tip p Tip \\<and> var p = 1)", "apply (induct t rule: bdt_fn.induct)"], ["proof (prove)\ngoal (5 subgoals):\n 1. (bdt Tip var = Some One) =\n    (\\<exists>p. Tip = Node Tip p Tip \\<and> var p = 1)\n 2. \\<And>vref.\n       (bdt (Node Tip vref Tip) var = Some One) =\n       (\\<exists>p. Node Tip vref Tip = Node Tip p Tip \\<and> var p = 1)\n 3. \\<And>vref l vref1 r.\n       (bdt (Node Tip vref (Node l vref1 r)) var = Some One) =\n       (\\<exists>p.\n           Node Tip vref (Node l vref1 r) = Node Tip p Tip \\<and> var p = 1)\n 4. \\<And>l vref1 r vref.\n       (bdt (Node (Node l vref1 r) vref Tip) var = Some One) =\n       (\\<exists>p.\n           Node (Node l vref1 r) vref Tip = Node Tip p Tip \\<and> var p = 1)\n 5. \\<And>l1 vref1 r1 vref l2 vref2 r2.\n       \\<lbrakk>\\<And>x.\n                   \\<not> (x vref = 0 \\<or> x vref = 1) \\<Longrightarrow>\n                   (bdt (Node l1 vref1 r1) var = Some One) =\n                   (\\<exists>p.\n                       Node l1 vref1 r1 = Node Tip p Tip \\<and> var p = 1);\n        \\<And>x x2.\n           \\<lbrakk>\\<not> (x vref = 0 \\<or> x vref = 1);\n            bdt (Node l1 vref1 r1) x = Some x2\\<rbrakk>\n           \\<Longrightarrow> (bdt (Node l2 vref2 r2) var = Some One) =\n                             (\\<exists>p.\n                                 Node l2 vref2 r2 = Node Tip p Tip \\<and>\n                                 var p = 1)\\<rbrakk>\n       \\<Longrightarrow> (bdt (Node (Node l1 vref1 r1) vref\n                                (Node l2 vref2 r2))\n                           var =\n                          Some One) =\n                         (\\<exists>p.\n                             Node (Node l1 vref1 r1) vref\n                              (Node l2 vref2 r2) =\n                             Node Tip p Tip \\<and>\n                             var p = 1)", "apply (auto split: option.splits)"], ["proof (prove)\ngoal:\nNo subgoals!", "(*in order to split the cases Zero and One*)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma bdt_Some_Zero_iff [simp]: \n  \"(bdt t var = Some Zero) = (\\<exists> p. t = Node Tip p Tip \\<and> var p = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (bdt t var = Some Zero) =\n    (\\<exists>p. t = Node Tip p Tip \\<and> var p = 0)", "apply (induct t rule: bdt_fn.induct)"], ["proof (prove)\ngoal (5 subgoals):\n 1. (bdt Tip var = Some Zero) =\n    (\\<exists>p. Tip = Node Tip p Tip \\<and> var p = 0)\n 2. \\<And>vref.\n       (bdt (Node Tip vref Tip) var = Some Zero) =\n       (\\<exists>p. Node Tip vref Tip = Node Tip p Tip \\<and> var p = 0)\n 3. \\<And>vref l vref1 r.\n       (bdt (Node Tip vref (Node l vref1 r)) var = Some Zero) =\n       (\\<exists>p.\n           Node Tip vref (Node l vref1 r) = Node Tip p Tip \\<and> var p = 0)\n 4. \\<And>l vref1 r vref.\n       (bdt (Node (Node l vref1 r) vref Tip) var = Some Zero) =\n       (\\<exists>p.\n           Node (Node l vref1 r) vref Tip = Node Tip p Tip \\<and> var p = 0)\n 5. \\<And>l1 vref1 r1 vref l2 vref2 r2.\n       \\<lbrakk>\\<And>x.\n                   \\<not> (x vref = 0 \\<or> x vref = 1) \\<Longrightarrow>\n                   (bdt (Node l1 vref1 r1) var = Some Zero) =\n                   (\\<exists>p.\n                       Node l1 vref1 r1 = Node Tip p Tip \\<and> var p = 0);\n        \\<And>x x2.\n           \\<lbrakk>\\<not> (x vref = 0 \\<or> x vref = 1);\n            bdt (Node l1 vref1 r1) x = Some x2\\<rbrakk>\n           \\<Longrightarrow> (bdt (Node l2 vref2 r2) var = Some Zero) =\n                             (\\<exists>p.\n                                 Node l2 vref2 r2 = Node Tip p Tip \\<and>\n                                 var p = 0)\\<rbrakk>\n       \\<Longrightarrow> (bdt (Node (Node l1 vref1 r1) vref\n                                (Node l2 vref2 r2))\n                           var =\n                          Some Zero) =\n                         (\\<exists>p.\n                             Node (Node l1 vref1 r1) vref\n                              (Node l2 vref2 r2) =\n                             Node Tip p Tip \\<and>\n                             var p = 0)", "apply (auto split: option.splits)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma bdt_Some_Node_iff [simp]: \n \"(bdt t var = Some (Bdt_Node bdt1 v bdt2)) = \n    (\\<exists> p l r. t = Node l p r \\<and> bdt l var = Some bdt1 \\<and> bdt r var = Some bdt2 \\<and> \n               1 < v \\<and> var p = v )\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (bdt t var = Some (Bdt_Node bdt1 v bdt2)) =\n    (\\<exists>p l r.\n        t = Node l p r \\<and>\n        bdt l var = Some bdt1 \\<and>\n        bdt r var = Some bdt2 \\<and> 1 < v \\<and> var p = v)", "apply (induct t rule: bdt_fn.induct)"], ["proof (prove)\ngoal (5 subgoals):\n 1. (bdt Tip var = Some (Bdt_Node bdt1 v bdt2)) =\n    (\\<exists>p l r.\n        Tip = Node l p r \\<and>\n        bdt l var = Some bdt1 \\<and>\n        bdt r var = Some bdt2 \\<and> 1 < v \\<and> var p = v)\n 2. \\<And>vref.\n       (bdt (Node Tip vref Tip) var = Some (Bdt_Node bdt1 v bdt2)) =\n       (\\<exists>p l r.\n           Node Tip vref Tip = Node l p r \\<and>\n           bdt l var = Some bdt1 \\<and>\n           bdt r var = Some bdt2 \\<and> 1 < v \\<and> var p = v)\n 3. \\<And>vref l vref1 r.\n       (bdt (Node Tip vref (Node l vref1 r)) var =\n        Some (Bdt_Node bdt1 v bdt2)) =\n       (\\<exists>p la ra.\n           Node Tip vref (Node l vref1 r) = Node la p ra \\<and>\n           bdt la var = Some bdt1 \\<and>\n           bdt ra var = Some bdt2 \\<and> 1 < v \\<and> var p = v)\n 4. \\<And>l vref1 r vref.\n       (bdt (Node (Node l vref1 r) vref Tip) var =\n        Some (Bdt_Node bdt1 v bdt2)) =\n       (\\<exists>p la ra.\n           Node (Node l vref1 r) vref Tip = Node la p ra \\<and>\n           bdt la var = Some bdt1 \\<and>\n           bdt ra var = Some bdt2 \\<and> 1 < v \\<and> var p = v)\n 5. \\<And>l1 vref1 r1 vref l2 vref2 r2.\n       \\<lbrakk>\\<And>x.\n                   \\<not> (x vref = 0 \\<or> x vref = 1) \\<Longrightarrow>\n                   (bdt (Node l1 vref1 r1) var =\n                    Some (Bdt_Node bdt1 v bdt2)) =\n                   (\\<exists>p l r.\n                       Node l1 vref1 r1 = Node l p r \\<and>\n                       bdt l var = Some bdt1 \\<and>\n                       bdt r var = Some bdt2 \\<and> 1 < v \\<and> var p = v);\n        \\<And>x x2.\n           \\<lbrakk>\\<not> (x vref = 0 \\<or> x vref = 1);\n            bdt (Node l1 vref1 r1) x = Some x2\\<rbrakk>\n           \\<Longrightarrow> (bdt (Node l2 vref2 r2) var =\n                              Some (Bdt_Node bdt1 v bdt2)) =\n                             (\\<exists>p l r.\n                                 Node l2 vref2 r2 = Node l p r \\<and>\n                                 bdt l var = Some bdt1 \\<and>\n                                 bdt r var = Some bdt2 \\<and>\n                                 1 < v \\<and> var p = v)\\<rbrakk>\n       \\<Longrightarrow> (bdt (Node (Node l1 vref1 r1) vref\n                                (Node l2 vref2 r2))\n                           var =\n                          Some (Bdt_Node bdt1 v bdt2)) =\n                         (\\<exists>p l r.\n                             Node (Node l1 vref1 r1) vref\n                              (Node l2 vref2 r2) =\n                             Node l p r \\<and>\n                             bdt l var = Some bdt1 \\<and>\n                             bdt r var = Some bdt2 \\<and>\n                             1 < v \\<and> var p = v)", "prefer 5"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>l1 vref1 r1 vref l2 vref2 r2.\n       \\<lbrakk>\\<And>x.\n                   \\<not> (x vref = 0 \\<or> x vref = 1) \\<Longrightarrow>\n                   (bdt (Node l1 vref1 r1) var =\n                    Some (Bdt_Node bdt1 v bdt2)) =\n                   (\\<exists>p l r.\n                       Node l1 vref1 r1 = Node l p r \\<and>\n                       bdt l var = Some bdt1 \\<and>\n                       bdt r var = Some bdt2 \\<and> 1 < v \\<and> var p = v);\n        \\<And>x x2.\n           \\<lbrakk>\\<not> (x vref = 0 \\<or> x vref = 1);\n            bdt (Node l1 vref1 r1) x = Some x2\\<rbrakk>\n           \\<Longrightarrow> (bdt (Node l2 vref2 r2) var =\n                              Some (Bdt_Node bdt1 v bdt2)) =\n                             (\\<exists>p l r.\n                                 Node l2 vref2 r2 = Node l p r \\<and>\n                                 bdt l var = Some bdt1 \\<and>\n                                 bdt r var = Some bdt2 \\<and>\n                                 1 < v \\<and> var p = v)\\<rbrakk>\n       \\<Longrightarrow> (bdt (Node (Node l1 vref1 r1) vref\n                                (Node l2 vref2 r2))\n                           var =\n                          Some (Bdt_Node bdt1 v bdt2)) =\n                         (\\<exists>p l r.\n                             Node (Node l1 vref1 r1) vref\n                              (Node l2 vref2 r2) =\n                             Node l p r \\<and>\n                             bdt l var = Some bdt1 \\<and>\n                             bdt r var = Some bdt2 \\<and>\n                             1 < v \\<and> var p = v)\n 2. (bdt Tip var = Some (Bdt_Node bdt1 v bdt2)) =\n    (\\<exists>p l r.\n        Tip = Node l p r \\<and>\n        bdt l var = Some bdt1 \\<and>\n        bdt r var = Some bdt2 \\<and> 1 < v \\<and> var p = v)\n 3. \\<And>vref.\n       (bdt (Node Tip vref Tip) var = Some (Bdt_Node bdt1 v bdt2)) =\n       (\\<exists>p l r.\n           Node Tip vref Tip = Node l p r \\<and>\n           bdt l var = Some bdt1 \\<and>\n           bdt r var = Some bdt2 \\<and> 1 < v \\<and> var p = v)\n 4. \\<And>vref l vref1 r.\n       (bdt (Node Tip vref (Node l vref1 r)) var =\n        Some (Bdt_Node bdt1 v bdt2)) =\n       (\\<exists>p la ra.\n           Node Tip vref (Node l vref1 r) = Node la p ra \\<and>\n           bdt la var = Some bdt1 \\<and>\n           bdt ra var = Some bdt2 \\<and> 1 < v \\<and> var p = v)\n 5. \\<And>l vref1 r vref.\n       (bdt (Node (Node l vref1 r) vref Tip) var =\n        Some (Bdt_Node bdt1 v bdt2)) =\n       (\\<exists>p la ra.\n           Node (Node l vref1 r) vref Tip = Node la p ra \\<and>\n           bdt la var = Some bdt1 \\<and>\n           bdt ra var = Some bdt2 \\<and> 1 < v \\<and> var p = v)", "apply (fastforce split: if_splits option.splits)"], ["proof (prove)\ngoal (4 subgoals):\n 1. (bdt Tip var = Some (Bdt_Node bdt1 v bdt2)) =\n    (\\<exists>p l r.\n        Tip = Node l p r \\<and>\n        bdt l var = Some bdt1 \\<and>\n        bdt r var = Some bdt2 \\<and> 1 < v \\<and> var p = v)\n 2. \\<And>vref.\n       (bdt (Node Tip vref Tip) var = Some (Bdt_Node bdt1 v bdt2)) =\n       (\\<exists>p l r.\n           Node Tip vref Tip = Node l p r \\<and>\n           bdt l var = Some bdt1 \\<and>\n           bdt r var = Some bdt2 \\<and> 1 < v \\<and> var p = v)\n 3. \\<And>vref l vref1 r.\n       (bdt (Node Tip vref (Node l vref1 r)) var =\n        Some (Bdt_Node bdt1 v bdt2)) =\n       (\\<exists>p la ra.\n           Node Tip vref (Node l vref1 r) = Node la p ra \\<and>\n           bdt la var = Some bdt1 \\<and>\n           bdt ra var = Some bdt2 \\<and> 1 < v \\<and> var p = v)\n 4. \\<And>l vref1 r vref.\n       (bdt (Node (Node l vref1 r) vref Tip) var =\n        Some (Bdt_Node bdt1 v bdt2)) =\n       (\\<exists>p la ra.\n           Node (Node l vref1 r) vref Tip = Node la p ra \\<and>\n           bdt la var = Some bdt1 \\<and>\n           bdt ra var = Some bdt2 \\<and> 1 < v \\<and> var p = v)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma balanced_bdt: \n\"\\<And> p bdt1. \\<lbrakk> Dag p low high t; bdt t var = Some bdt1; no \\<in> set_of t\\<rbrakk> \n \\<Longrightarrow> (low no = Null) = (high no = Null)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p bdt1.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1;\n        no \\<in> set_of t\\<rbrakk>\n       \\<Longrightarrow> (low no = Null) = (high no = Null)", "proof (induct t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p bdt1.\n       \\<lbrakk>Dag p low high Tip; bdt Tip var = Some bdt1;\n        no \\<in> set_of Tip\\<rbrakk>\n       \\<Longrightarrow> (low no = Null) = (high no = Null)\n 2. \\<And>t1 x2 t2 p bdt1.\n       \\<lbrakk>\\<And>p bdt1.\n                   \\<lbrakk>Dag p low high t1; bdt t1 var = Some bdt1;\n                    no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> (low no = Null) = (high no = Null);\n        \\<And>p bdt1.\n           \\<lbrakk>Dag p low high t2; bdt t2 var = Some bdt1;\n            no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> (low no = Null) = (high no = Null);\n        Dag p low high (Node t1 x2 t2); bdt (Node t1 x2 t2) var = Some bdt1;\n        no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> (low no = Null) = (high no = Null)", "case Tip"], ["proof (state)\nthis:\n  Dag p low high Tip\n  bdt Tip var = Some bdt1\n  no \\<in> set_of Tip\n\ngoal (2 subgoals):\n 1. \\<And>p bdt1.\n       \\<lbrakk>Dag p low high Tip; bdt Tip var = Some bdt1;\n        no \\<in> set_of Tip\\<rbrakk>\n       \\<Longrightarrow> (low no = Null) = (high no = Null)\n 2. \\<And>t1 x2 t2 p bdt1.\n       \\<lbrakk>\\<And>p bdt1.\n                   \\<lbrakk>Dag p low high t1; bdt t1 var = Some bdt1;\n                    no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> (low no = Null) = (high no = Null);\n        \\<And>p bdt1.\n           \\<lbrakk>Dag p low high t2; bdt t2 var = Some bdt1;\n            no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> (low no = Null) = (high no = Null);\n        Dag p low high (Node t1 x2 t2); bdt (Node t1 x2 t2) var = Some bdt1;\n        no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> (low no = Null) = (high no = Null)", "then"], ["proof (chain)\npicking this:\n  Dag p low high Tip\n  bdt Tip var = Some bdt1\n  no \\<in> set_of Tip", "show ?case"], ["proof (prove)\nusing this:\n  Dag p low high Tip\n  bdt Tip var = Some bdt1\n  no \\<in> set_of Tip\n\ngoal (1 subgoal):\n 1. (low no = Null) = (high no = Null)", "by simp"], ["proof (state)\nthis:\n  (low no = Null) = (high no = Null)\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p bdt1.\n       \\<lbrakk>\\<And>p bdt1.\n                   \\<lbrakk>Dag p low high t1; bdt t1 var = Some bdt1;\n                    no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> (low no = Null) = (high no = Null);\n        \\<And>p bdt1.\n           \\<lbrakk>Dag p low high t2; bdt t2 var = Some bdt1;\n            no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> (low no = Null) = (high no = Null);\n        Dag p low high (Node t1 x2 t2); bdt (Node t1 x2 t2) var = Some bdt1;\n        no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> (low no = Null) = (high no = Null)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p bdt1.\n       \\<lbrakk>\\<And>p bdt1.\n                   \\<lbrakk>Dag p low high t1; bdt t1 var = Some bdt1;\n                    no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> (low no = Null) = (high no = Null);\n        \\<And>p bdt1.\n           \\<lbrakk>Dag p low high t2; bdt t2 var = Some bdt1;\n            no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> (low no = Null) = (high no = Null);\n        Dag p low high (Node t1 x2 t2); bdt (Node t1 x2 t2) var = Some bdt1;\n        no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> (low no = Null) = (high no = Null)", "case (Node lt a rt)"], ["proof (state)\nthis:\n  \\<lbrakk>Dag ?p low high lt; bdt lt var = Some ?bdt1.0;\n   no \\<in> set_of lt\\<rbrakk>\n  \\<Longrightarrow> (low no = Null) = (high no = Null)\n  \\<lbrakk>Dag ?p low high rt; bdt rt var = Some ?bdt1.0;\n   no \\<in> set_of rt\\<rbrakk>\n  \\<Longrightarrow> (low no = Null) = (high no = Null)\n  Dag p low high (Node lt a rt)\n  bdt (Node lt a rt) var = Some bdt1\n  no \\<in> set_of (Node lt a rt)\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p bdt1.\n       \\<lbrakk>\\<And>p bdt1.\n                   \\<lbrakk>Dag p low high t1; bdt t1 var = Some bdt1;\n                    no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> (low no = Null) = (high no = Null);\n        \\<And>p bdt1.\n           \\<lbrakk>Dag p low high t2; bdt t2 var = Some bdt1;\n            no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> (low no = Null) = (high no = Null);\n        Dag p low high (Node t1 x2 t2); bdt (Node t1 x2 t2) var = Some bdt1;\n        no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> (low no = Null) = (high no = Null)", "note NN= this"], ["proof (state)\nthis:\n  \\<lbrakk>Dag ?p low high lt; bdt lt var = Some ?bdt1.0;\n   no \\<in> set_of lt\\<rbrakk>\n  \\<Longrightarrow> (low no = Null) = (high no = Null)\n  \\<lbrakk>Dag ?p low high rt; bdt rt var = Some ?bdt1.0;\n   no \\<in> set_of rt\\<rbrakk>\n  \\<Longrightarrow> (low no = Null) = (high no = Null)\n  Dag p low high (Node lt a rt)\n  bdt (Node lt a rt) var = Some bdt1\n  no \\<in> set_of (Node lt a rt)\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p bdt1.\n       \\<lbrakk>\\<And>p bdt1.\n                   \\<lbrakk>Dag p low high t1; bdt t1 var = Some bdt1;\n                    no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> (low no = Null) = (high no = Null);\n        \\<And>p bdt1.\n           \\<lbrakk>Dag p low high t2; bdt t2 var = Some bdt1;\n            no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> (low no = Null) = (high no = Null);\n        Dag p low high (Node t1 x2 t2); bdt (Node t1 x2 t2) var = Some bdt1;\n        no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> (low no = Null) = (high no = Null)", "have bdt1: \"bdt (Node lt a rt) var = Some bdt1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bdt (Node lt a rt) var = Some bdt1", "by fact"], ["proof (state)\nthis:\n  bdt (Node lt a rt) var = Some bdt1\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p bdt1.\n       \\<lbrakk>\\<And>p bdt1.\n                   \\<lbrakk>Dag p low high t1; bdt t1 var = Some bdt1;\n                    no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> (low no = Null) = (high no = Null);\n        \\<And>p bdt1.\n           \\<lbrakk>Dag p low high t2; bdt t2 var = Some bdt1;\n            no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> (low no = Null) = (high no = Null);\n        Dag p low high (Node t1 x2 t2); bdt (Node t1 x2 t2) var = Some bdt1;\n        no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> (low no = Null) = (high no = Null)", "have no_in_t: \" no \\<in> set_of (Node lt a rt)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. no \\<in> set_of (Node lt a rt)", "by fact"], ["proof (state)\nthis:\n  no \\<in> set_of (Node lt a rt)\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p bdt1.\n       \\<lbrakk>\\<And>p bdt1.\n                   \\<lbrakk>Dag p low high t1; bdt t1 var = Some bdt1;\n                    no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> (low no = Null) = (high no = Null);\n        \\<And>p bdt1.\n           \\<lbrakk>Dag p low high t2; bdt t2 var = Some bdt1;\n            no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> (low no = Null) = (high no = Null);\n        Dag p low high (Node t1 x2 t2); bdt (Node t1 x2 t2) var = Some bdt1;\n        no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> (low no = Null) = (high no = Null)", "have p_tree: \"Dag p low high (Node lt a rt)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dag p low high (Node lt a rt)", "by fact"], ["proof (state)\nthis:\n  Dag p low high (Node lt a rt)\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p bdt1.\n       \\<lbrakk>\\<And>p bdt1.\n                   \\<lbrakk>Dag p low high t1; bdt t1 var = Some bdt1;\n                    no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> (low no = Null) = (high no = Null);\n        \\<And>p bdt1.\n           \\<lbrakk>Dag p low high t2; bdt t2 var = Some bdt1;\n            no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> (low no = Null) = (high no = Null);\n        Dag p low high (Node t1 x2 t2); bdt (Node t1 x2 t2) var = Some bdt1;\n        no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> (low no = Null) = (high no = Null)", "from Node.prems"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt a rt)\n  bdt (Node lt a rt) var = Some bdt1\n  no \\<in> set_of (Node lt a rt)", "obtain \n    lt: \"Dag (low p) low high lt\" and \n    rt: \"Dag (high p) low high rt\""], ["proof (prove)\nusing this:\n  Dag p low high (Node lt a rt)\n  bdt (Node lt a rt) var = Some bdt1\n  no \\<in> set_of (Node lt a rt)\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>Dag (low p) low high lt; Dag (high p) low high rt\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  Dag (low p) low high lt\n  Dag (high p) low high rt\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p bdt1.\n       \\<lbrakk>\\<And>p bdt1.\n                   \\<lbrakk>Dag p low high t1; bdt t1 var = Some bdt1;\n                    no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> (low no = Null) = (high no = Null);\n        \\<And>p bdt1.\n           \\<lbrakk>Dag p low high t2; bdt t2 var = Some bdt1;\n            no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> (low no = Null) = (high no = Null);\n        Dag p low high (Node t1 x2 t2); bdt (Node t1 x2 t2) var = Some bdt1;\n        no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> (low no = Null) = (high no = Null)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (low no = Null) = (high no = Null)", "proof (cases lt)"], ["proof (state)\ngoal (2 subgoals):\n 1. lt = Tip \\<Longrightarrow> (low no = Null) = (high no = Null)\n 2. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow>\n       (low no = Null) = (high no = Null)", "case (Node llt l rlt)"], ["proof (state)\nthis:\n  lt = Node llt l rlt\n\ngoal (2 subgoals):\n 1. lt = Tip \\<Longrightarrow> (low no = Null) = (high no = Null)\n 2. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow>\n       (low no = Null) = (high no = Null)", "note Nlt=this"], ["proof (state)\nthis:\n  lt = Node llt l rlt\n\ngoal (2 subgoals):\n 1. lt = Tip \\<Longrightarrow> (low no = Null) = (high no = Null)\n 2. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow>\n       (low no = Null) = (high no = Null)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (low no = Null) = (high no = Null)", "proof (cases rt)"], ["proof (state)\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow> (low no = Null) = (high no = Null)\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       (low no = Null) = (high no = Null)", "case (Node lrt r rrt)"], ["proof (state)\nthis:\n  rt = Node lrt r rrt\n\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow> (low no = Null) = (high no = Null)\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       (low no = Null) = (high no = Null)", "note Nrt=this"], ["proof (state)\nthis:\n  rt = Node lrt r rrt\n\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow> (low no = Null) = (high no = Null)\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       (low no = Null) = (high no = Null)", "from Nlt Nrt bdt1"], ["proof (chain)\npicking this:\n  lt = Node llt l rlt\n  rt = Node lrt r rrt\n  bdt (Node lt a rt) var = Some bdt1", "obtain lbdt rbdt where \n        lbdt_def: \"bdt lt var = Some lbdt\" and \n        rbdt_def: \"bdt rt var = Some rbdt\" and \n        bdt1_def: \"bdt1 = Bdt_Node lbdt (var a) rbdt\""], ["proof (prove)\nusing this:\n  lt = Node llt l rlt\n  rt = Node lrt r rrt\n  bdt (Node lt a rt) var = Some bdt1\n\ngoal (1 subgoal):\n 1. (\\<And>lbdt rbdt.\n        \\<lbrakk>bdt lt var = Some lbdt; bdt rt var = Some rbdt;\n         bdt1 = Bdt_Node lbdt (var a) rbdt\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto split: if_split_asm option.splits)"], ["proof (state)\nthis:\n  bdt lt var = Some lbdt\n  bdt rt var = Some rbdt\n  bdt1 = Bdt_Node lbdt (var a) rbdt\n\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow> (low no = Null) = (high no = Null)\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       (low no = Null) = (high no = Null)", "from no_in_t"], ["proof (chain)\npicking this:\n  no \\<in> set_of (Node lt a rt)", "show ?thesis"], ["proof (prove)\nusing this:\n  no \\<in> set_of (Node lt a rt)\n\ngoal (1 subgoal):\n 1. (low no = Null) = (high no = Null)", "proof (simp, elim disjE)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>no \\<in> set_of (Node lt a rt); no = a\\<rbrakk>\n    \\<Longrightarrow> (low no = Null) = (high no = Null)\n 2. \\<lbrakk>no \\<in> set_of (Node lt a rt); no \\<in> set_of lt\\<rbrakk>\n    \\<Longrightarrow> (low no = Null) = (high no = Null)\n 3. \\<lbrakk>no \\<in> set_of (Node lt a rt); no \\<in> set_of rt\\<rbrakk>\n    \\<Longrightarrow> (low no = Null) = (high no = Null)", "assume \" no = a\""], ["proof (state)\nthis:\n  no = a\n\ngoal (3 subgoals):\n 1. \\<lbrakk>no \\<in> set_of (Node lt a rt); no = a\\<rbrakk>\n    \\<Longrightarrow> (low no = Null) = (high no = Null)\n 2. \\<lbrakk>no \\<in> set_of (Node lt a rt); no \\<in> set_of lt\\<rbrakk>\n    \\<Longrightarrow> (low no = Null) = (high no = Null)\n 3. \\<lbrakk>no \\<in> set_of (Node lt a rt); no \\<in> set_of rt\\<rbrakk>\n    \\<Longrightarrow> (low no = Null) = (high no = Null)", "with p_tree Nlt Nrt"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt a rt)\n  lt = Node llt l rlt\n  rt = Node lrt r rrt\n  no = a", "show ?thesis"], ["proof (prove)\nusing this:\n  Dag p low high (Node lt a rt)\n  lt = Node llt l rlt\n  rt = Node lrt r rrt\n  no = a\n\ngoal (1 subgoal):\n 1. (low no = Null) = (high no = Null)", "by auto"], ["proof (state)\nthis:\n  (low no = Null) = (high no = Null)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>no \\<in> set_of (Node lt a rt); no \\<in> set_of lt\\<rbrakk>\n    \\<Longrightarrow> (low no = Null) = (high no = Null)\n 2. \\<lbrakk>no \\<in> set_of (Node lt a rt); no \\<in> set_of rt\\<rbrakk>\n    \\<Longrightarrow> (low no = Null) = (high no = Null)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>no \\<in> set_of (Node lt a rt); no \\<in> set_of lt\\<rbrakk>\n    \\<Longrightarrow> (low no = Null) = (high no = Null)\n 2. \\<lbrakk>no \\<in> set_of (Node lt a rt); no \\<in> set_of rt\\<rbrakk>\n    \\<Longrightarrow> (low no = Null) = (high no = Null)", "assume \"no \\<in> set_of lt\""], ["proof (state)\nthis:\n  no \\<in> set_of lt\n\ngoal (2 subgoals):\n 1. \\<lbrakk>no \\<in> set_of (Node lt a rt); no \\<in> set_of lt\\<rbrakk>\n    \\<Longrightarrow> (low no = Null) = (high no = Null)\n 2. \\<lbrakk>no \\<in> set_of (Node lt a rt); no \\<in> set_of rt\\<rbrakk>\n    \\<Longrightarrow> (low no = Null) = (high no = Null)", "with Node.hyps lbdt_def lt"], ["proof (chain)\npicking this:\n  \\<lbrakk>Dag ?p low high lt; bdt lt var = Some ?bdt1.0;\n   no \\<in> set_of lt\\<rbrakk>\n  \\<Longrightarrow> (low no = Null) = (high no = Null)\n  \\<lbrakk>Dag ?p low high rt; bdt rt var = Some ?bdt1.0;\n   no \\<in> set_of rt\\<rbrakk>\n  \\<Longrightarrow> (low no = Null) = (high no = Null)\n  bdt lt var = Some lbdt\n  Dag (low p) low high lt\n  no \\<in> set_of lt", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>Dag ?p low high lt; bdt lt var = Some ?bdt1.0;\n   no \\<in> set_of lt\\<rbrakk>\n  \\<Longrightarrow> (low no = Null) = (high no = Null)\n  \\<lbrakk>Dag ?p low high rt; bdt rt var = Some ?bdt1.0;\n   no \\<in> set_of rt\\<rbrakk>\n  \\<Longrightarrow> (low no = Null) = (high no = Null)\n  bdt lt var = Some lbdt\n  Dag (low p) low high lt\n  no \\<in> set_of lt\n\ngoal (1 subgoal):\n 1. (low no = Null) = (high no = Null)", "by simp"], ["proof (state)\nthis:\n  (low no = Null) = (high no = Null)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>no \\<in> set_of (Node lt a rt); no \\<in> set_of rt\\<rbrakk>\n    \\<Longrightarrow> (low no = Null) = (high no = Null)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>no \\<in> set_of (Node lt a rt); no \\<in> set_of rt\\<rbrakk>\n    \\<Longrightarrow> (low no = Null) = (high no = Null)", "assume \"no \\<in> set_of rt\""], ["proof (state)\nthis:\n  no \\<in> set_of rt\n\ngoal (1 subgoal):\n 1. \\<lbrakk>no \\<in> set_of (Node lt a rt); no \\<in> set_of rt\\<rbrakk>\n    \\<Longrightarrow> (low no = Null) = (high no = Null)", "with Node.hyps rbdt_def rt"], ["proof (chain)\npicking this:\n  \\<lbrakk>Dag ?p low high lt; bdt lt var = Some ?bdt1.0;\n   no \\<in> set_of lt\\<rbrakk>\n  \\<Longrightarrow> (low no = Null) = (high no = Null)\n  \\<lbrakk>Dag ?p low high rt; bdt rt var = Some ?bdt1.0;\n   no \\<in> set_of rt\\<rbrakk>\n  \\<Longrightarrow> (low no = Null) = (high no = Null)\n  bdt rt var = Some rbdt\n  Dag (high p) low high rt\n  no \\<in> set_of rt", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>Dag ?p low high lt; bdt lt var = Some ?bdt1.0;\n   no \\<in> set_of lt\\<rbrakk>\n  \\<Longrightarrow> (low no = Null) = (high no = Null)\n  \\<lbrakk>Dag ?p low high rt; bdt rt var = Some ?bdt1.0;\n   no \\<in> set_of rt\\<rbrakk>\n  \\<Longrightarrow> (low no = Null) = (high no = Null)\n  bdt rt var = Some rbdt\n  Dag (high p) low high rt\n  no \\<in> set_of rt\n\ngoal (1 subgoal):\n 1. (low no = Null) = (high no = Null)", "by simp"], ["proof (state)\nthis:\n  (low no = Null) = (high no = Null)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (low no = Null) = (high no = Null)\n\ngoal (1 subgoal):\n 1. rt = Tip \\<Longrightarrow> (low no = Null) = (high no = Null)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. rt = Tip \\<Longrightarrow> (low no = Null) = (high no = Null)", "case Tip"], ["proof (state)\nthis:\n  rt = Tip\n\ngoal (1 subgoal):\n 1. rt = Tip \\<Longrightarrow> (low no = Null) = (high no = Null)", "with Nlt bdt1"], ["proof (chain)\npicking this:\n  lt = Node llt l rlt\n  bdt (Node lt a rt) var = Some bdt1\n  rt = Tip", "show ?thesis"], ["proof (prove)\nusing this:\n  lt = Node llt l rlt\n  bdt (Node lt a rt) var = Some bdt1\n  rt = Tip\n\ngoal (1 subgoal):\n 1. (low no = Null) = (high no = Null)", "by simp"], ["proof (state)\nthis:\n  (low no = Null) = (high no = Null)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (low no = Null) = (high no = Null)\n\ngoal (1 subgoal):\n 1. lt = Tip \\<Longrightarrow> (low no = Null) = (high no = Null)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. lt = Tip \\<Longrightarrow> (low no = Null) = (high no = Null)", "case Tip"], ["proof (state)\nthis:\n  lt = Tip\n\ngoal (1 subgoal):\n 1. lt = Tip \\<Longrightarrow> (low no = Null) = (high no = Null)", "note ltTip=this"], ["proof (state)\nthis:\n  lt = Tip\n\ngoal (1 subgoal):\n 1. lt = Tip \\<Longrightarrow> (low no = Null) = (high no = Null)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (low no = Null) = (high no = Null)", "proof (cases rt)"], ["proof (state)\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow> (low no = Null) = (high no = Null)\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       (low no = Null) = (high no = Null)", "case Tip"], ["proof (state)\nthis:\n  rt = Tip\n\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow> (low no = Null) = (high no = Null)\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       (low no = Null) = (high no = Null)", "with ltTip bdt1 no_in_t p_tree"], ["proof (chain)\npicking this:\n  lt = Tip\n  bdt (Node lt a rt) var = Some bdt1\n  no \\<in> set_of (Node lt a rt)\n  Dag p low high (Node lt a rt)\n  rt = Tip", "show ?thesis"], ["proof (prove)\nusing this:\n  lt = Tip\n  bdt (Node lt a rt) var = Some bdt1\n  no \\<in> set_of (Node lt a rt)\n  Dag p low high (Node lt a rt)\n  rt = Tip\n\ngoal (1 subgoal):\n 1. (low no = Null) = (high no = Null)", "by auto"], ["proof (state)\nthis:\n  (low no = Null) = (high no = Null)\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       (low no = Null) = (high no = Null)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       (low no = Null) = (high no = Null)", "case (Node rlt r rrt)"], ["proof (state)\nthis:\n  rt = Node rlt r rrt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       (low no = Null) = (high no = Null)", "with bdt1 ltTip"], ["proof (chain)\npicking this:\n  bdt (Node lt a rt) var = Some bdt1\n  lt = Tip\n  rt = Node rlt r rrt", "show ?thesis"], ["proof (prove)\nusing this:\n  bdt (Node lt a rt) var = Some bdt1\n  lt = Tip\n  rt = Node rlt r rrt\n\ngoal (1 subgoal):\n 1. (low no = Null) = (high no = Null)", "by simp"], ["proof (state)\nthis:\n  (low no = Null) = (high no = Null)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (low no = Null) = (high no = Null)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (low no = Null) = (high no = Null)\n\ngoal:\nNo subgoals!", "qed"], ["", "primrec dag_map :: \"(ref \\<Rightarrow> ref) \\<Rightarrow> dag \\<Rightarrow> dag\"\nwhere\n\"dag_map f Tip = Tip\" |\n\"dag_map f (Node l a r) = (Node (dag_map f l) (f a) (dag_map f r))\""], ["", "definition wf_marking :: \"dag \\<Rightarrow> (ref \\<Rightarrow> bool) \\<Rightarrow> (ref \\<Rightarrow> bool) \\<Rightarrow> bool \\<Rightarrow> bool\"\nwhere\n\"wf_marking t mark_old mark_new marked =\n(case t of Tip \\<Rightarrow> mark_new = mark_old\n| (Node lt p rt) \\<Rightarrow>\n  (\\<forall> n. n \\<notin> set_of t \\<longrightarrow> mark_new n = mark_old n) \\<and>\n  (\\<forall> n. n \\<in> set_of t \\<longrightarrow> mark_new n = marked))\""], ["", "definition dag_in_levellist:: \"dag \\<Rightarrow> (ref list list) \\<Rightarrow> (ref \\<Rightarrow> nat) \\<Rightarrow> bool\"\nwhere \"dag_in_levellist t levellist var = (t \\<noteq> Tip \\<longrightarrow>\n       (\\<forall> st. subdag_eq t st \\<longrightarrow> root st \\<in> set (levellist ! (var (root st)))))\""], ["", "lemma set_of_nn: \"\\<lbrakk> Dag p low high t; n \\<in> set_of t\\<rbrakk> \\<Longrightarrow> n \\<noteq> Null\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag p low high t; n \\<in> set_of t\\<rbrakk>\n    \\<Longrightarrow> n \\<noteq> Null", "apply (induct t)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Dag p low high Tip; n \\<in> set_of Tip\\<rbrakk>\n    \\<Longrightarrow> n \\<noteq> Null\n 2. \\<And>t1 x2 t2.\n       \\<lbrakk>\\<lbrakk>Dag p low high t1; n \\<in> set_of t1\\<rbrakk>\n                \\<Longrightarrow> n \\<noteq> Null;\n        \\<lbrakk>Dag p low high t2; n \\<in> set_of t2\\<rbrakk>\n        \\<Longrightarrow> n \\<noteq> Null;\n        Dag p low high (Node t1 x2 t2);\n        n \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> n \\<noteq> Null", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>\\<lbrakk>Dag p low high t1; n \\<in> set_of t1\\<rbrakk>\n                \\<Longrightarrow> n \\<noteq> Null;\n        \\<lbrakk>Dag p low high t2; n \\<in> set_of t2\\<rbrakk>\n        \\<Longrightarrow> n \\<noteq> Null;\n        Dag p low high (Node t1 x2 t2);\n        n \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> n \\<noteq> Null", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma subnodes_ordered [rule_format]: \n\"\\<forall>p. n \\<in> set_of t \\<longrightarrow> Dag p low high t \\<longrightarrow> ordered t var \\<longrightarrow> var n <= var p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>p.\n       n \\<in> set_of t \\<longrightarrow>\n       Dag p low high t \\<longrightarrow>\n       ordered t var \\<longrightarrow> var n \\<le> var p", "apply (induct t)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>p.\n       n \\<in> set_of Tip \\<longrightarrow>\n       Dag p low high Tip \\<longrightarrow>\n       ordered Tip var \\<longrightarrow> var n \\<le> var p\n 2. \\<And>t1 x2 t2.\n       \\<lbrakk>\\<forall>p.\n                   n \\<in> set_of t1 \\<longrightarrow>\n                   Dag p low high t1 \\<longrightarrow>\n                   ordered t1 var \\<longrightarrow> var n \\<le> var p;\n        \\<forall>p.\n           n \\<in> set_of t2 \\<longrightarrow>\n           Dag p low high t2 \\<longrightarrow>\n           ordered t2 var \\<longrightarrow> var n \\<le> var p\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p.\n                            n \\<in> set_of (Node t1 x2 t2) \\<longrightarrow>\n                            Dag p low high (Node t1 x2 t2) \\<longrightarrow>\n                            ordered (Node t1 x2 t2) var \\<longrightarrow>\n                            var n \\<le> var p", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>\\<forall>p.\n                   n \\<in> set_of t1 \\<longrightarrow>\n                   Dag p low high t1 \\<longrightarrow>\n                   ordered t1 var \\<longrightarrow> var n \\<le> var p;\n        \\<forall>p.\n           n \\<in> set_of t2 \\<longrightarrow>\n           Dag p low high t2 \\<longrightarrow>\n           ordered t2 var \\<longrightarrow> var n \\<le> var p\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p.\n                            n \\<in> set_of (Node t1 x2 t2) \\<longrightarrow>\n                            Dag p low high (Node t1 x2 t2) \\<longrightarrow>\n                            ordered (Node t1 x2 t2) var \\<longrightarrow>\n                            var n \\<le> var p", "apply (intro allI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<forall>p.\n                   n \\<in> set_of t1 \\<longrightarrow>\n                   Dag p low high t1 \\<longrightarrow>\n                   ordered t1 var \\<longrightarrow> var n \\<le> var p;\n        \\<forall>p.\n           n \\<in> set_of t2 \\<longrightarrow>\n           Dag p low high t2 \\<longrightarrow>\n           ordered t2 var \\<longrightarrow> var n \\<le> var p\\<rbrakk>\n       \\<Longrightarrow> n \\<in> set_of (Node t1 x2 t2) \\<longrightarrow>\n                         Dag p low high (Node t1 x2 t2) \\<longrightarrow>\n                         ordered (Node t1 x2 t2) var \\<longrightarrow>\n                         var n \\<le> var p", "apply (erule_tac x=\"low p\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<forall>p.\n                   n \\<in> set_of t2 \\<longrightarrow>\n                   Dag p low high t2 \\<longrightarrow>\n                   ordered t2 var \\<longrightarrow> var n \\<le> var p;\n        n \\<in> set_of t1 \\<longrightarrow>\n        Dag (low p) low high t1 \\<longrightarrow>\n        ordered t1 var \\<longrightarrow> var n \\<le> var (low p)\\<rbrakk>\n       \\<Longrightarrow> n \\<in> set_of (Node t1 x2 t2) \\<longrightarrow>\n                         Dag p low high (Node t1 x2 t2) \\<longrightarrow>\n                         ordered (Node t1 x2 t2) var \\<longrightarrow>\n                         var n \\<le> var p", "apply (erule_tac x=\"high p\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p.\n       \\<lbrakk>n \\<in> set_of t1 \\<longrightarrow>\n                Dag (low p) low high t1 \\<longrightarrow>\n                ordered t1 var \\<longrightarrow> var n \\<le> var (low p);\n        n \\<in> set_of t2 \\<longrightarrow>\n        Dag (high p) low high t2 \\<longrightarrow>\n        ordered t2 var \\<longrightarrow> var n \\<le> var (high p)\\<rbrakk>\n       \\<Longrightarrow> n \\<in> set_of (Node t1 x2 t2) \\<longrightarrow>\n                         Dag p low high (Node t1 x2 t2) \\<longrightarrow>\n                         ordered (Node t1 x2 t2) var \\<longrightarrow>\n                         var n \\<le> var p", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p.\n       \\<lbrakk>n \\<in> set_of t1 \\<longrightarrow>\n                Dag (low p) low high t1 \\<longrightarrow>\n                ordered t1 var \\<longrightarrow> var n \\<le> var (low p);\n        n \\<in> set_of t2 \\<longrightarrow>\n        Dag (high p) low high t2 \\<longrightarrow>\n        ordered t2 var \\<longrightarrow> var n \\<le> var (high p)\\<rbrakk>\n       \\<Longrightarrow> (n \\<in> set_of t1 \\<longrightarrow>\n                          p = x2 \\<and>\n                          p \\<noteq> Null \\<and>\n                          Dag (low p) low high t1 \\<and>\n                          Dag (high p) low high t2 \\<longrightarrow>\n                          ordered (Node t1 x2 t2) var \\<longrightarrow>\n                          var n \\<le> var x2) \\<and>\n                         (n \\<in> set_of t2 \\<longrightarrow>\n                          p = x2 \\<and>\n                          p \\<noteq> Null \\<and>\n                          Dag (low p) low high t1 \\<and>\n                          Dag (high p) low high t2 \\<longrightarrow>\n                          ordered (Node t1 x2 t2) var \\<longrightarrow>\n                          var n \\<le> var x2)", "apply (case_tac t1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t1 x2 t2 p.\n       \\<lbrakk>n \\<in> set_of t1 \\<longrightarrow>\n                Dag (low p) low high t1 \\<longrightarrow>\n                ordered t1 var \\<longrightarrow> var n \\<le> var (low p);\n        n \\<in> set_of t2 \\<longrightarrow>\n        Dag (high p) low high t2 \\<longrightarrow>\n        ordered t2 var \\<longrightarrow> var n \\<le> var (high p);\n        t1 = Tip\\<rbrakk>\n       \\<Longrightarrow> (n \\<in> set_of t1 \\<longrightarrow>\n                          p = x2 \\<and>\n                          p \\<noteq> Null \\<and>\n                          Dag (low p) low high t1 \\<and>\n                          Dag (high p) low high t2 \\<longrightarrow>\n                          ordered (Node t1 x2 t2) var \\<longrightarrow>\n                          var n \\<le> var x2) \\<and>\n                         (n \\<in> set_of t2 \\<longrightarrow>\n                          p = x2 \\<and>\n                          p \\<noteq> Null \\<and>\n                          Dag (low p) low high t1 \\<and>\n                          Dag (high p) low high t2 \\<longrightarrow>\n                          ordered (Node t1 x2 t2) var \\<longrightarrow>\n                          var n \\<le> var x2)\n 2. \\<And>t1 x2 t2 p x21 x22 x23.\n       \\<lbrakk>n \\<in> set_of t1 \\<longrightarrow>\n                Dag (low p) low high t1 \\<longrightarrow>\n                ordered t1 var \\<longrightarrow> var n \\<le> var (low p);\n        n \\<in> set_of t2 \\<longrightarrow>\n        Dag (high p) low high t2 \\<longrightarrow>\n        ordered t2 var \\<longrightarrow> var n \\<le> var (high p);\n        t1 = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> (n \\<in> set_of t1 \\<longrightarrow>\n                          p = x2 \\<and>\n                          p \\<noteq> Null \\<and>\n                          Dag (low p) low high t1 \\<and>\n                          Dag (high p) low high t2 \\<longrightarrow>\n                          ordered (Node t1 x2 t2) var \\<longrightarrow>\n                          var n \\<le> var x2) \\<and>\n                         (n \\<in> set_of t2 \\<longrightarrow>\n                          p = x2 \\<and>\n                          p \\<noteq> Null \\<and>\n                          Dag (low p) low high t1 \\<and>\n                          Dag (high p) low high t2 \\<longrightarrow>\n                          ordered (Node t1 x2 t2) var \\<longrightarrow>\n                          var n \\<le> var x2)", "apply (case_tac t2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t1 x2 t2 p.\n       \\<lbrakk>n \\<in> set_of t1 \\<longrightarrow>\n                Dag (low p) low high t1 \\<longrightarrow>\n                ordered t1 var \\<longrightarrow> var n \\<le> var (low p);\n        n \\<in> set_of t2 \\<longrightarrow>\n        Dag (high p) low high t2 \\<longrightarrow>\n        ordered t2 var \\<longrightarrow> var n \\<le> var (high p);\n        t1 = Tip; t2 = Tip\\<rbrakk>\n       \\<Longrightarrow> (n \\<in> set_of t1 \\<longrightarrow>\n                          p = x2 \\<and>\n                          p \\<noteq> Null \\<and>\n                          Dag (low p) low high t1 \\<and>\n                          Dag (high p) low high t2 \\<longrightarrow>\n                          ordered (Node t1 x2 t2) var \\<longrightarrow>\n                          var n \\<le> var x2) \\<and>\n                         (n \\<in> set_of t2 \\<longrightarrow>\n                          p = x2 \\<and>\n                          p \\<noteq> Null \\<and>\n                          Dag (low p) low high t1 \\<and>\n                          Dag (high p) low high t2 \\<longrightarrow>\n                          ordered (Node t1 x2 t2) var \\<longrightarrow>\n                          var n \\<le> var x2)\n 2. \\<And>t1 x2 t2 p x21 x22 x23.\n       \\<lbrakk>n \\<in> set_of t1 \\<longrightarrow>\n                Dag (low p) low high t1 \\<longrightarrow>\n                ordered t1 var \\<longrightarrow> var n \\<le> var (low p);\n        n \\<in> set_of t2 \\<longrightarrow>\n        Dag (high p) low high t2 \\<longrightarrow>\n        ordered t2 var \\<longrightarrow> var n \\<le> var (high p);\n        t1 = Tip; t2 = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> (n \\<in> set_of t1 \\<longrightarrow>\n                          p = x2 \\<and>\n                          p \\<noteq> Null \\<and>\n                          Dag (low p) low high t1 \\<and>\n                          Dag (high p) low high t2 \\<longrightarrow>\n                          ordered (Node t1 x2 t2) var \\<longrightarrow>\n                          var n \\<le> var x2) \\<and>\n                         (n \\<in> set_of t2 \\<longrightarrow>\n                          p = x2 \\<and>\n                          p \\<noteq> Null \\<and>\n                          Dag (low p) low high t1 \\<and>\n                          Dag (high p) low high t2 \\<longrightarrow>\n                          ordered (Node t1 x2 t2) var \\<longrightarrow>\n                          var n \\<le> var x2)\n 3. \\<And>t1 x2 t2 p x21 x22 x23.\n       \\<lbrakk>n \\<in> set_of t1 \\<longrightarrow>\n                Dag (low p) low high t1 \\<longrightarrow>\n                ordered t1 var \\<longrightarrow> var n \\<le> var (low p);\n        n \\<in> set_of t2 \\<longrightarrow>\n        Dag (high p) low high t2 \\<longrightarrow>\n        ordered t2 var \\<longrightarrow> var n \\<le> var (high p);\n        t1 = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> (n \\<in> set_of t1 \\<longrightarrow>\n                          p = x2 \\<and>\n                          p \\<noteq> Null \\<and>\n                          Dag (low p) low high t1 \\<and>\n                          Dag (high p) low high t2 \\<longrightarrow>\n                          ordered (Node t1 x2 t2) var \\<longrightarrow>\n                          var n \\<le> var x2) \\<and>\n                         (n \\<in> set_of t2 \\<longrightarrow>\n                          p = x2 \\<and>\n                          p \\<noteq> Null \\<and>\n                          Dag (low p) low high t1 \\<and>\n                          Dag (high p) low high t2 \\<longrightarrow>\n                          ordered (Node t1 x2 t2) var \\<longrightarrow>\n                          var n \\<le> var x2)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t1 x2 t2 p x21 x22 x23.\n       \\<lbrakk>n \\<in> set_of t1 \\<longrightarrow>\n                Dag (low p) low high t1 \\<longrightarrow>\n                ordered t1 var \\<longrightarrow> var n \\<le> var (low p);\n        n \\<in> set_of t2 \\<longrightarrow>\n        Dag (high p) low high t2 \\<longrightarrow>\n        ordered t2 var \\<longrightarrow> var n \\<le> var (high p);\n        t1 = Tip; t2 = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> (n \\<in> set_of t1 \\<longrightarrow>\n                          p = x2 \\<and>\n                          p \\<noteq> Null \\<and>\n                          Dag (low p) low high t1 \\<and>\n                          Dag (high p) low high t2 \\<longrightarrow>\n                          ordered (Node t1 x2 t2) var \\<longrightarrow>\n                          var n \\<le> var x2) \\<and>\n                         (n \\<in> set_of t2 \\<longrightarrow>\n                          p = x2 \\<and>\n                          p \\<noteq> Null \\<and>\n                          Dag (low p) low high t1 \\<and>\n                          Dag (high p) low high t2 \\<longrightarrow>\n                          ordered (Node t1 x2 t2) var \\<longrightarrow>\n                          var n \\<le> var x2)\n 2. \\<And>t1 x2 t2 p x21 x22 x23.\n       \\<lbrakk>n \\<in> set_of t1 \\<longrightarrow>\n                Dag (low p) low high t1 \\<longrightarrow>\n                ordered t1 var \\<longrightarrow> var n \\<le> var (low p);\n        n \\<in> set_of t2 \\<longrightarrow>\n        Dag (high p) low high t2 \\<longrightarrow>\n        ordered t2 var \\<longrightarrow> var n \\<le> var (high p);\n        t1 = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> (n \\<in> set_of t1 \\<longrightarrow>\n                          p = x2 \\<and>\n                          p \\<noteq> Null \\<and>\n                          Dag (low p) low high t1 \\<and>\n                          Dag (high p) low high t2 \\<longrightarrow>\n                          ordered (Node t1 x2 t2) var \\<longrightarrow>\n                          var n \\<le> var x2) \\<and>\n                         (n \\<in> set_of t2 \\<longrightarrow>\n                          p = x2 \\<and>\n                          p \\<noteq> Null \\<and>\n                          Dag (low p) low high t1 \\<and>\n                          Dag (high p) low high t2 \\<longrightarrow>\n                          ordered (Node t1 x2 t2) var \\<longrightarrow>\n                          var n \\<le> var x2)", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p x21 x22 x23.\n       \\<lbrakk>n \\<in> set_of t1 \\<longrightarrow>\n                Dag (low p) low high t1 \\<longrightarrow>\n                ordered t1 var \\<longrightarrow> var n \\<le> var (low p);\n        n \\<in> set_of t2 \\<longrightarrow>\n        Dag (high p) low high t2 \\<longrightarrow>\n        ordered t2 var \\<longrightarrow> var n \\<le> var (high p);\n        t1 = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> (n \\<in> set_of t1 \\<longrightarrow>\n                          p = x2 \\<and>\n                          p \\<noteq> Null \\<and>\n                          Dag (low p) low high t1 \\<and>\n                          Dag (high p) low high t2 \\<longrightarrow>\n                          ordered (Node t1 x2 t2) var \\<longrightarrow>\n                          var n \\<le> var x2) \\<and>\n                         (n \\<in> set_of t2 \\<longrightarrow>\n                          p = x2 \\<and>\n                          p \\<noteq> Null \\<and>\n                          Dag (low p) low high t1 \\<and>\n                          Dag (high p) low high t2 \\<longrightarrow>\n                          ordered (Node t1 x2 t2) var \\<longrightarrow>\n                          var n \\<le> var x2)", "apply (case_tac t2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t1 x2 t2 p x21 x22 x23.\n       \\<lbrakk>n \\<in> set_of t1 \\<longrightarrow>\n                Dag (low p) low high t1 \\<longrightarrow>\n                ordered t1 var \\<longrightarrow> var n \\<le> var (low p);\n        n \\<in> set_of t2 \\<longrightarrow>\n        Dag (high p) low high t2 \\<longrightarrow>\n        ordered t2 var \\<longrightarrow> var n \\<le> var (high p);\n        t1 = Node x21 x22 x23; t2 = Tip\\<rbrakk>\n       \\<Longrightarrow> (n \\<in> set_of t1 \\<longrightarrow>\n                          p = x2 \\<and>\n                          p \\<noteq> Null \\<and>\n                          Dag (low p) low high t1 \\<and>\n                          Dag (high p) low high t2 \\<longrightarrow>\n                          ordered (Node t1 x2 t2) var \\<longrightarrow>\n                          var n \\<le> var x2) \\<and>\n                         (n \\<in> set_of t2 \\<longrightarrow>\n                          p = x2 \\<and>\n                          p \\<noteq> Null \\<and>\n                          Dag (low p) low high t1 \\<and>\n                          Dag (high p) low high t2 \\<longrightarrow>\n                          ordered (Node t1 x2 t2) var \\<longrightarrow>\n                          var n \\<le> var x2)\n 2. \\<And>t1 x2 t2 p x21 x22 x23 x21a x22a x23a.\n       \\<lbrakk>n \\<in> set_of t1 \\<longrightarrow>\n                Dag (low p) low high t1 \\<longrightarrow>\n                ordered t1 var \\<longrightarrow> var n \\<le> var (low p);\n        n \\<in> set_of t2 \\<longrightarrow>\n        Dag (high p) low high t2 \\<longrightarrow>\n        ordered t2 var \\<longrightarrow> var n \\<le> var (high p);\n        t1 = Node x21 x22 x23; t2 = Node x21a x22a x23a\\<rbrakk>\n       \\<Longrightarrow> (n \\<in> set_of t1 \\<longrightarrow>\n                          p = x2 \\<and>\n                          p \\<noteq> Null \\<and>\n                          Dag (low p) low high t1 \\<and>\n                          Dag (high p) low high t2 \\<longrightarrow>\n                          ordered (Node t1 x2 t2) var \\<longrightarrow>\n                          var n \\<le> var x2) \\<and>\n                         (n \\<in> set_of t2 \\<longrightarrow>\n                          p = x2 \\<and>\n                          p \\<noteq> Null \\<and>\n                          Dag (low p) low high t1 \\<and>\n                          Dag (high p) low high t2 \\<longrightarrow>\n                          ordered (Node t1 x2 t2) var \\<longrightarrow>\n                          var n \\<le> var x2)", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p x21 x22 x23 x21a x22a x23a.\n       \\<lbrakk>n \\<in> set_of t1 \\<longrightarrow>\n                Dag (low p) low high t1 \\<longrightarrow>\n                ordered t1 var \\<longrightarrow> var n \\<le> var (low p);\n        n \\<in> set_of t2 \\<longrightarrow>\n        Dag (high p) low high t2 \\<longrightarrow>\n        ordered t2 var \\<longrightarrow> var n \\<le> var (high p);\n        t1 = Node x21 x22 x23; t2 = Node x21a x22a x23a\\<rbrakk>\n       \\<Longrightarrow> (n \\<in> set_of t1 \\<longrightarrow>\n                          p = x2 \\<and>\n                          p \\<noteq> Null \\<and>\n                          Dag (low p) low high t1 \\<and>\n                          Dag (high p) low high t2 \\<longrightarrow>\n                          ordered (Node t1 x2 t2) var \\<longrightarrow>\n                          var n \\<le> var x2) \\<and>\n                         (n \\<in> set_of t2 \\<longrightarrow>\n                          p = x2 \\<and>\n                          p \\<noteq> Null \\<and>\n                          Dag (low p) low high t1 \\<and>\n                          Dag (high p) low high t2 \\<longrightarrow>\n                          ordered (Node t1 x2 t2) var \\<longrightarrow>\n                          var n \\<le> var x2)", "apply fastforce"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ordered_set_of: \n\"\\<And> x. \\<lbrakk>ordered t var; x \\<in> set_of t\\<rbrakk> \\<Longrightarrow> var x <= var (root t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>ordered t var; x \\<in> set_of t\\<rbrakk>\n       \\<Longrightarrow> var x \\<le> var (root t)", "apply (induct t)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>ordered Tip var; x \\<in> set_of Tip\\<rbrakk>\n       \\<Longrightarrow> var x \\<le> var (root Tip)\n 2. \\<And>t1 x2 t2 x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>ordered t1 var; x \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> var x \\<le> var (root t1);\n        \\<And>x.\n           \\<lbrakk>ordered t2 var; x \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> var x \\<le> var (root t2);\n        ordered (Node t1 x2 t2) var; x \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> var x \\<le> var (root (Node t1 x2 t2))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>ordered t1 var; x \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> var x \\<le> var (root t1);\n        \\<And>x.\n           \\<lbrakk>ordered t2 var; x \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> var x \\<le> var (root t2);\n        ordered (Node t1 x2 t2) var; x \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> var x \\<le> var (root (Node t1 x2 t2))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>ordered t1 var; x \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> var x \\<le> var (root t1);\n        \\<And>x.\n           \\<lbrakk>ordered t2 var; x \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> var x \\<le> var (root t2);\n        ordered (Node t1 x2 t2) var;\n        x = x2 \\<or> x \\<in> set_of t1 \\<or> x \\<in> set_of t2\\<rbrakk>\n       \\<Longrightarrow> var x \\<le> var x2", "apply (elim disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t1 x2 t2 x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>ordered t1 var; x \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> var x \\<le> var (root t1);\n        \\<And>x.\n           \\<lbrakk>ordered t2 var; x \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> var x \\<le> var (root t2);\n        ordered (Node t1 x2 t2) var; x = x2\\<rbrakk>\n       \\<Longrightarrow> var x \\<le> var x2\n 2. \\<And>t1 x2 t2 x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>ordered t1 var; x \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> var x \\<le> var (root t1);\n        \\<And>x.\n           \\<lbrakk>ordered t2 var; x \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> var x \\<le> var (root t2);\n        ordered (Node t1 x2 t2) var; x \\<in> set_of t1\\<rbrakk>\n       \\<Longrightarrow> var x \\<le> var x2\n 3. \\<And>t1 x2 t2 x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>ordered t1 var; x \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> var x \\<le> var (root t1);\n        \\<And>x.\n           \\<lbrakk>ordered t2 var; x \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> var x \\<le> var (root t2);\n        ordered (Node t1 x2 t2) var; x \\<in> set_of t2\\<rbrakk>\n       \\<Longrightarrow> var x \\<le> var x2", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t1 x2 t2 x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>ordered t1 var; x \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> var x \\<le> var (root t1);\n        \\<And>x.\n           \\<lbrakk>ordered t2 var; x \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> var x \\<le> var (root t2);\n        ordered (Node t1 x2 t2) var; x \\<in> set_of t1\\<rbrakk>\n       \\<Longrightarrow> var x \\<le> var x2\n 2. \\<And>t1 x2 t2 x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>ordered t1 var; x \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> var x \\<le> var (root t1);\n        \\<And>x.\n           \\<lbrakk>ordered t2 var; x \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> var x \\<le> var (root t2);\n        ordered (Node t1 x2 t2) var; x \\<in> set_of t2\\<rbrakk>\n       \\<Longrightarrow> var x \\<le> var x2", "apply (case_tac t1)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t1 x2 t2 x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>ordered t1 var; x \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> var x \\<le> var (root t1);\n        \\<And>x.\n           \\<lbrakk>ordered t2 var; x \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> var x \\<le> var (root t2);\n        ordered (Node t1 x2 t2) var; x \\<in> set_of t1; t1 = Tip\\<rbrakk>\n       \\<Longrightarrow> var x \\<le> var x2\n 2. \\<And>t1 x2 t2 x x21 x22 x23.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>ordered t1 var; x \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> var x \\<le> var (root t1);\n        \\<And>x.\n           \\<lbrakk>ordered t2 var; x \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> var x \\<le> var (root t2);\n        ordered (Node t1 x2 t2) var; x \\<in> set_of t1;\n        t1 = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> var x \\<le> var x2\n 3. \\<And>t1 x2 t2 x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>ordered t1 var; x \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> var x \\<le> var (root t1);\n        \\<And>x.\n           \\<lbrakk>ordered t2 var; x \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> var x \\<le> var (root t2);\n        ordered (Node t1 x2 t2) var; x \\<in> set_of t2\\<rbrakk>\n       \\<Longrightarrow> var x \\<le> var x2", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t1 x2 t2 x x21 x22 x23.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>ordered t1 var; x \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> var x \\<le> var (root t1);\n        \\<And>x.\n           \\<lbrakk>ordered t2 var; x \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> var x \\<le> var (root t2);\n        ordered (Node t1 x2 t2) var; x \\<in> set_of t1;\n        t1 = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> var x \\<le> var x2\n 2. \\<And>t1 x2 t2 x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>ordered t1 var; x \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> var x \\<le> var (root t1);\n        \\<And>x.\n           \\<lbrakk>ordered t2 var; x \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> var x \\<le> var (root t2);\n        ordered (Node t1 x2 t2) var; x \\<in> set_of t2\\<rbrakk>\n       \\<Longrightarrow> var x \\<le> var x2", "apply (case_tac t2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t1 x2 t2 x x21 x22 x23.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>ordered t1 var; x \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> var x \\<le> var (root t1);\n        \\<And>x.\n           \\<lbrakk>ordered t2 var; x \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> var x \\<le> var (root t2);\n        ordered (Node t1 x2 t2) var; x \\<in> set_of t1;\n        t1 = Node x21 x22 x23; t2 = Tip\\<rbrakk>\n       \\<Longrightarrow> var x \\<le> var x2\n 2. \\<And>t1 x2 t2 x x21 x22 x23 x21a x22a x23a.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>ordered t1 var; x \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> var x \\<le> var (root t1);\n        \\<And>x.\n           \\<lbrakk>ordered t2 var; x \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> var x \\<le> var (root t2);\n        ordered (Node t1 x2 t2) var; x \\<in> set_of t1;\n        t1 = Node x21 x22 x23; t2 = Node x21a x22a x23a\\<rbrakk>\n       \\<Longrightarrow> var x \\<le> var x2\n 3. \\<And>t1 x2 t2 x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>ordered t1 var; x \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> var x \\<le> var (root t1);\n        \\<And>x.\n           \\<lbrakk>ordered t2 var; x \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> var x \\<le> var (root t2);\n        ordered (Node t1 x2 t2) var; x \\<in> set_of t2\\<rbrakk>\n       \\<Longrightarrow> var x \\<le> var x2", "apply fastforce"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t1 x2 t2 x x21 x22 x23 x21a x22a x23a.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>ordered t1 var; x \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> var x \\<le> var (root t1);\n        \\<And>x.\n           \\<lbrakk>ordered t2 var; x \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> var x \\<le> var (root t2);\n        ordered (Node t1 x2 t2) var; x \\<in> set_of t1;\n        t1 = Node x21 x22 x23; t2 = Node x21a x22a x23a\\<rbrakk>\n       \\<Longrightarrow> var x \\<le> var x2\n 2. \\<And>t1 x2 t2 x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>ordered t1 var; x \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> var x \\<le> var (root t1);\n        \\<And>x.\n           \\<lbrakk>ordered t2 var; x \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> var x \\<le> var (root t2);\n        ordered (Node t1 x2 t2) var; x \\<in> set_of t2\\<rbrakk>\n       \\<Longrightarrow> var x \\<le> var x2", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>ordered t1 var; x \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> var x \\<le> var (root t1);\n        \\<And>x.\n           \\<lbrakk>ordered t2 var; x \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> var x \\<le> var (root t2);\n        ordered (Node t1 x2 t2) var; x \\<in> set_of t2\\<rbrakk>\n       \\<Longrightarrow> var x \\<le> var x2", "apply (case_tac t2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t1 x2 t2 x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>ordered t1 var; x \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> var x \\<le> var (root t1);\n        \\<And>x.\n           \\<lbrakk>ordered t2 var; x \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> var x \\<le> var (root t2);\n        ordered (Node t1 x2 t2) var; x \\<in> set_of t2; t2 = Tip\\<rbrakk>\n       \\<Longrightarrow> var x \\<le> var x2\n 2. \\<And>t1 x2 t2 x x21 x22 x23.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>ordered t1 var; x \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> var x \\<le> var (root t1);\n        \\<And>x.\n           \\<lbrakk>ordered t2 var; x \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> var x \\<le> var (root t2);\n        ordered (Node t1 x2 t2) var; x \\<in> set_of t2;\n        t2 = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> var x \\<le> var x2", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 x x21 x22 x23.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>ordered t1 var; x \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> var x \\<le> var (root t1);\n        \\<And>x.\n           \\<lbrakk>ordered t2 var; x \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> var x \\<le> var (root t2);\n        ordered (Node t1 x2 t2) var; x \\<in> set_of t2;\n        t2 = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> var x \\<le> var x2", "apply (case_tac t1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t1 x2 t2 x x21 x22 x23.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>ordered t1 var; x \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> var x \\<le> var (root t1);\n        \\<And>x.\n           \\<lbrakk>ordered t2 var; x \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> var x \\<le> var (root t2);\n        ordered (Node t1 x2 t2) var; x \\<in> set_of t2;\n        t2 = Node x21 x22 x23; t1 = Tip\\<rbrakk>\n       \\<Longrightarrow> var x \\<le> var x2\n 2. \\<And>t1 x2 t2 x x21 x22 x23 x21a x22a x23a.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>ordered t1 var; x \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> var x \\<le> var (root t1);\n        \\<And>x.\n           \\<lbrakk>ordered t2 var; x \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> var x \\<le> var (root t2);\n        ordered (Node t1 x2 t2) var; x \\<in> set_of t2;\n        t2 = Node x21 x22 x23; t1 = Node x21a x22a x23a\\<rbrakk>\n       \\<Longrightarrow> var x \\<le> var x2", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 x x21 x22 x23 x21a x22a x23a.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>ordered t1 var; x \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> var x \\<le> var (root t1);\n        \\<And>x.\n           \\<lbrakk>ordered t2 var; x \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> var x \\<le> var (root t2);\n        ordered (Node t1 x2 t2) var; x \\<in> set_of t2;\n        t2 = Node x21 x22 x23; t1 = Node x21a x22a x23a\\<rbrakk>\n       \\<Longrightarrow> var x \\<le> var x2", "apply fastforce"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma dag_setofD: \"\\<And> p low high n. \\<lbrakk> Dag p low high t; n \\<in> set_of t \\<rbrakk> \\<Longrightarrow> \n  (\\<exists> nt. Dag n low high nt) \\<and> (\\<forall> nt. Dag n low high nt \\<longrightarrow> set_of nt \\<subseteq> set_of t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p low high n.\n       \\<lbrakk>Dag p low high t; n \\<in> set_of t\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>nt. Dag n low high nt) \\<and>\n                         (\\<forall>nt.\n                             Dag n low high nt \\<longrightarrow>\n                             set_of nt \\<subseteq> set_of t)", "apply (induct t)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p low high n.\n       \\<lbrakk>Dag p low high Tip; n \\<in> set_of Tip\\<rbrakk>\n       \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                         (\\<forall>nt.\n                             Dag n low high nt \\<longrightarrow>\n                             set_of nt \\<subseteq> set_of Tip)\n 2. \\<And>t1 x2 t2 p low high n.\n       \\<lbrakk>\\<And>p low high n.\n                   \\<lbrakk>Dag p low high t1; n \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                                     (\\<forall>nt.\n   Dag n low high nt \\<longrightarrow> set_of nt \\<subseteq> set_of t1);\n        \\<And>p low high n.\n           \\<lbrakk>Dag p low high t2; n \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                             (\\<forall>nt.\n                                 Dag n low high nt \\<longrightarrow>\n                                 set_of nt \\<subseteq> set_of t2);\n        Dag p low high (Node t1 x2 t2);\n        n \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                         (\\<forall>nt.\n                             Dag n low high nt \\<longrightarrow>\n                             set_of nt \\<subseteq> set_of (Node t1 x2 t2))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p low high n.\n       \\<lbrakk>\\<And>p low high n.\n                   \\<lbrakk>Dag p low high t1; n \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                                     (\\<forall>nt.\n   Dag n low high nt \\<longrightarrow> set_of nt \\<subseteq> set_of t1);\n        \\<And>p low high n.\n           \\<lbrakk>Dag p low high t2; n \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                             (\\<forall>nt.\n                                 Dag n low high nt \\<longrightarrow>\n                                 set_of nt \\<subseteq> set_of t2);\n        Dag p low high (Node t1 x2 t2);\n        n \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                         (\\<forall>nt.\n                             Dag n low high nt \\<longrightarrow>\n                             set_of nt \\<subseteq> set_of (Node t1 x2 t2))", "apply auto"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>t1 x2 t2 low high.\n       \\<lbrakk>\\<And>p low high n.\n                   \\<lbrakk>Dag p low high t1; n \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                                     (\\<forall>nt.\n   Dag n low high nt \\<longrightarrow> set_of nt \\<subseteq> set_of t1);\n        \\<And>p low high n.\n           \\<lbrakk>Dag p low high t2; n \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                             (\\<forall>nt.\n                                 Dag n low high nt \\<longrightarrow>\n                                 set_of nt \\<subseteq> set_of t2);\n        x2 \\<noteq> Null; Dag (low x2) low high t1;\n        Dag (high x2) low high t2\\<rbrakk>\n       \\<Longrightarrow> Ex (Dag x2 low high)\n 2. \\<And>t1 x2 t2 low high x lt rt.\n       \\<lbrakk>\\<And>p low high n.\n                   \\<lbrakk>Dag p low high t1; n \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                                     (\\<forall>nt.\n   Dag n low high nt \\<longrightarrow> set_of nt \\<subseteq> set_of t1);\n        \\<And>p low high n.\n           \\<lbrakk>Dag p low high t2; n \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                             (\\<forall>nt.\n                                 Dag n low high nt \\<longrightarrow>\n                                 set_of nt \\<subseteq> set_of t2);\n        x2 \\<noteq> Null; Dag (low x2) low high t1;\n        Dag (high x2) low high t2; x \\<noteq> x2; x \\<notin> set_of t2;\n        Dag (low x2) low high lt; Dag (high x2) low high rt;\n        x \\<in> set_of lt\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of t1\n 3. \\<And>t1 x2 t2 low high x lt rt.\n       \\<lbrakk>\\<And>p low high n.\n                   \\<lbrakk>Dag p low high t1; n \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                                     (\\<forall>nt.\n   Dag n low high nt \\<longrightarrow> set_of nt \\<subseteq> set_of t1);\n        \\<And>p low high n.\n           \\<lbrakk>Dag p low high t2; n \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                             (\\<forall>nt.\n                                 Dag n low high nt \\<longrightarrow>\n                                 set_of nt \\<subseteq> set_of t2);\n        x2 \\<noteq> Null; Dag (low x2) low high t1;\n        Dag (high x2) low high t2; x \\<noteq> x2; x \\<notin> set_of t2;\n        Dag (low x2) low high lt; Dag (high x2) low high rt;\n        x \\<in> set_of rt\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of t1\n 4. \\<And>t1 x2 t2 low high n nt x.\n       \\<lbrakk>\\<And>p low high n.\n                   \\<lbrakk>Dag p low high t1; n \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                                     (\\<forall>nt.\n   Dag n low high nt \\<longrightarrow> set_of nt \\<subseteq> set_of t1);\n        \\<And>p low high n.\n           \\<lbrakk>Dag p low high t2; n \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                             (\\<forall>nt.\n                                 Dag n low high nt \\<longrightarrow>\n                                 set_of nt \\<subseteq> set_of t2);\n        x2 \\<noteq> Null; Dag (low x2) low high t1;\n        Dag (high x2) low high t2; n \\<in> set_of t1; Dag n low high nt;\n        x \\<in> set_of nt; x \\<noteq> x2; x \\<notin> set_of t2\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of t1\n 5. \\<And>t1 x2 t2 low high n nt x.\n       \\<lbrakk>\\<And>p low high n.\n                   \\<lbrakk>Dag p low high t1; n \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                                     (\\<forall>nt.\n   Dag n low high nt \\<longrightarrow> set_of nt \\<subseteq> set_of t1);\n        \\<And>p low high n.\n           \\<lbrakk>Dag p low high t2; n \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                             (\\<forall>nt.\n                                 Dag n low high nt \\<longrightarrow>\n                                 set_of nt \\<subseteq> set_of t2);\n        x2 \\<noteq> Null; Dag (low x2) low high t1;\n        Dag (high x2) low high t2; n \\<in> set_of t2; Dag n low high nt;\n        x \\<in> set_of nt; x \\<noteq> x2; x \\<notin> set_of t2\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of t1", "apply fastforce"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t1 x2 t2 low high x lt rt.\n       \\<lbrakk>\\<And>p low high n.\n                   \\<lbrakk>Dag p low high t1; n \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                                     (\\<forall>nt.\n   Dag n low high nt \\<longrightarrow> set_of nt \\<subseteq> set_of t1);\n        \\<And>p low high n.\n           \\<lbrakk>Dag p low high t2; n \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                             (\\<forall>nt.\n                                 Dag n low high nt \\<longrightarrow>\n                                 set_of nt \\<subseteq> set_of t2);\n        x2 \\<noteq> Null; Dag (low x2) low high t1;\n        Dag (high x2) low high t2; x \\<noteq> x2; x \\<notin> set_of t2;\n        Dag (low x2) low high lt; Dag (high x2) low high rt;\n        x \\<in> set_of lt\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of t1\n 2. \\<And>t1 x2 t2 low high x lt rt.\n       \\<lbrakk>\\<And>p low high n.\n                   \\<lbrakk>Dag p low high t1; n \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                                     (\\<forall>nt.\n   Dag n low high nt \\<longrightarrow> set_of nt \\<subseteq> set_of t1);\n        \\<And>p low high n.\n           \\<lbrakk>Dag p low high t2; n \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                             (\\<forall>nt.\n                                 Dag n low high nt \\<longrightarrow>\n                                 set_of nt \\<subseteq> set_of t2);\n        x2 \\<noteq> Null; Dag (low x2) low high t1;\n        Dag (high x2) low high t2; x \\<noteq> x2; x \\<notin> set_of t2;\n        Dag (low x2) low high lt; Dag (high x2) low high rt;\n        x \\<in> set_of rt\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of t1\n 3. \\<And>t1 x2 t2 low high n nt x.\n       \\<lbrakk>\\<And>p low high n.\n                   \\<lbrakk>Dag p low high t1; n \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                                     (\\<forall>nt.\n   Dag n low high nt \\<longrightarrow> set_of nt \\<subseteq> set_of t1);\n        \\<And>p low high n.\n           \\<lbrakk>Dag p low high t2; n \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                             (\\<forall>nt.\n                                 Dag n low high nt \\<longrightarrow>\n                                 set_of nt \\<subseteq> set_of t2);\n        x2 \\<noteq> Null; Dag (low x2) low high t1;\n        Dag (high x2) low high t2; n \\<in> set_of t1; Dag n low high nt;\n        x \\<in> set_of nt; x \\<noteq> x2; x \\<notin> set_of t2\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of t1\n 4. \\<And>t1 x2 t2 low high n nt x.\n       \\<lbrakk>\\<And>p low high n.\n                   \\<lbrakk>Dag p low high t1; n \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                                     (\\<forall>nt.\n   Dag n low high nt \\<longrightarrow> set_of nt \\<subseteq> set_of t1);\n        \\<And>p low high n.\n           \\<lbrakk>Dag p low high t2; n \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                             (\\<forall>nt.\n                                 Dag n low high nt \\<longrightarrow>\n                                 set_of nt \\<subseteq> set_of t2);\n        x2 \\<noteq> Null; Dag (low x2) low high t1;\n        Dag (high x2) low high t2; n \\<in> set_of t2; Dag n low high nt;\n        x \\<in> set_of nt; x \\<noteq> x2; x \\<notin> set_of t2\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of t1", "apply (fastforce dest: Dag_unique)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t1 x2 t2 low high x lt rt.\n       \\<lbrakk>\\<And>p low high n.\n                   \\<lbrakk>Dag p low high t1; n \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                                     (\\<forall>nt.\n   Dag n low high nt \\<longrightarrow> set_of nt \\<subseteq> set_of t1);\n        \\<And>p low high n.\n           \\<lbrakk>Dag p low high t2; n \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                             (\\<forall>nt.\n                                 Dag n low high nt \\<longrightarrow>\n                                 set_of nt \\<subseteq> set_of t2);\n        x2 \\<noteq> Null; Dag (low x2) low high t1;\n        Dag (high x2) low high t2; x \\<noteq> x2; x \\<notin> set_of t2;\n        Dag (low x2) low high lt; Dag (high x2) low high rt;\n        x \\<in> set_of rt\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of t1\n 2. \\<And>t1 x2 t2 low high n nt x.\n       \\<lbrakk>\\<And>p low high n.\n                   \\<lbrakk>Dag p low high t1; n \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                                     (\\<forall>nt.\n   Dag n low high nt \\<longrightarrow> set_of nt \\<subseteq> set_of t1);\n        \\<And>p low high n.\n           \\<lbrakk>Dag p low high t2; n \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                             (\\<forall>nt.\n                                 Dag n low high nt \\<longrightarrow>\n                                 set_of nt \\<subseteq> set_of t2);\n        x2 \\<noteq> Null; Dag (low x2) low high t1;\n        Dag (high x2) low high t2; n \\<in> set_of t1; Dag n low high nt;\n        x \\<in> set_of nt; x \\<noteq> x2; x \\<notin> set_of t2\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of t1\n 3. \\<And>t1 x2 t2 low high n nt x.\n       \\<lbrakk>\\<And>p low high n.\n                   \\<lbrakk>Dag p low high t1; n \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                                     (\\<forall>nt.\n   Dag n low high nt \\<longrightarrow> set_of nt \\<subseteq> set_of t1);\n        \\<And>p low high n.\n           \\<lbrakk>Dag p low high t2; n \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                             (\\<forall>nt.\n                                 Dag n low high nt \\<longrightarrow>\n                                 set_of nt \\<subseteq> set_of t2);\n        x2 \\<noteq> Null; Dag (low x2) low high t1;\n        Dag (high x2) low high t2; n \\<in> set_of t2; Dag n low high nt;\n        x \\<in> set_of nt; x \\<noteq> x2; x \\<notin> set_of t2\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of t1", "apply (fastforce dest: Dag_unique)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t1 x2 t2 low high n nt x.\n       \\<lbrakk>\\<And>p low high n.\n                   \\<lbrakk>Dag p low high t1; n \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                                     (\\<forall>nt.\n   Dag n low high nt \\<longrightarrow> set_of nt \\<subseteq> set_of t1);\n        \\<And>p low high n.\n           \\<lbrakk>Dag p low high t2; n \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                             (\\<forall>nt.\n                                 Dag n low high nt \\<longrightarrow>\n                                 set_of nt \\<subseteq> set_of t2);\n        x2 \\<noteq> Null; Dag (low x2) low high t1;\n        Dag (high x2) low high t2; n \\<in> set_of t1; Dag n low high nt;\n        x \\<in> set_of nt; x \\<noteq> x2; x \\<notin> set_of t2\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of t1\n 2. \\<And>t1 x2 t2 low high n nt x.\n       \\<lbrakk>\\<And>p low high n.\n                   \\<lbrakk>Dag p low high t1; n \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                                     (\\<forall>nt.\n   Dag n low high nt \\<longrightarrow> set_of nt \\<subseteq> set_of t1);\n        \\<And>p low high n.\n           \\<lbrakk>Dag p low high t2; n \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                             (\\<forall>nt.\n                                 Dag n low high nt \\<longrightarrow>\n                                 set_of nt \\<subseteq> set_of t2);\n        x2 \\<noteq> Null; Dag (low x2) low high t1;\n        Dag (high x2) low high t2; n \\<in> set_of t2; Dag n low high nt;\n        x \\<in> set_of nt; x \\<noteq> x2; x \\<notin> set_of t2\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of t1", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 low high n nt x.\n       \\<lbrakk>\\<And>p low high n.\n                   \\<lbrakk>Dag p low high t1; n \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                                     (\\<forall>nt.\n   Dag n low high nt \\<longrightarrow> set_of nt \\<subseteq> set_of t1);\n        \\<And>p low high n.\n           \\<lbrakk>Dag p low high t2; n \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> Ex (Dag n low high) \\<and>\n                             (\\<forall>nt.\n                                 Dag n low high nt \\<longrightarrow>\n                                 set_of nt \\<subseteq> set_of t2);\n        x2 \\<noteq> Null; Dag (low x2) low high t1;\n        Dag (high x2) low high t2; n \\<in> set_of t2; Dag n low high nt;\n        x \\<in> set_of nt; x \\<noteq> x2; x \\<notin> set_of t2\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of t1", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma dag_setof_exD: \"\\<lbrakk>Dag p low high t; n \\<in> set_of t\\<rbrakk> \\<Longrightarrow> \\<exists> nt. Dag n low high nt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag p low high t; n \\<in> set_of t\\<rbrakk>\n    \\<Longrightarrow> \\<exists>nt. Dag n low high nt", "apply (simp add: dag_setofD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma dag_setof_subsetD: \"\\<lbrakk>Dag p low high t; n \\<in> set_of t; Dag n low high nt\\<rbrakk> \\<Longrightarrow> set_of nt \\<subseteq> set_of t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag p low high t; n \\<in> set_of t; Dag n low high nt\\<rbrakk>\n    \\<Longrightarrow> set_of nt \\<subseteq> set_of t", "apply (simp add: dag_setofD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma subdag_parentdag_low: \"not <= lt \\<Longrightarrow> not <= (Node lt p rt)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. not \\<le> lt \\<Longrightarrow> not \\<le> Node lt p rt", "apply (cases \"not = lt\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>not \\<le> lt; not = lt\\<rbrakk>\n    \\<Longrightarrow> not \\<le> Node lt p rt\n 2. \\<lbrakk>not \\<le> lt; not \\<noteq> lt\\<rbrakk>\n    \\<Longrightarrow> not \\<le> Node lt p rt", "apply (cases lt)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>not \\<le> lt; not = lt; lt = Tip\\<rbrakk>\n    \\<Longrightarrow> not \\<le> Node lt p rt\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>not \\<le> lt; not = lt; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> not \\<le> Node lt p rt\n 3. \\<lbrakk>not \\<le> lt; not \\<noteq> lt\\<rbrakk>\n    \\<Longrightarrow> not \\<le> Node lt p rt", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>not = Tip; lt = Tip\\<rbrakk>\n    \\<Longrightarrow> Tip \\<le> Node Tip p rt\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>not \\<le> lt; not = lt; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> not \\<le> Node lt p rt\n 3. \\<lbrakk>not \\<le> lt; not \\<noteq> lt\\<rbrakk>\n    \\<Longrightarrow> not \\<le> Node lt p rt", "apply (cases rt)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>not = Tip; lt = Tip; rt = Tip\\<rbrakk>\n    \\<Longrightarrow> Tip \\<le> Node Tip p rt\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>not = Tip; lt = Tip; rt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> Tip \\<le> Node Tip p rt\n 3. \\<And>x21 x22 x23.\n       \\<lbrakk>not \\<le> lt; not = lt; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> not \\<le> Node lt p rt\n 4. \\<lbrakk>not \\<le> lt; not \\<noteq> lt\\<rbrakk>\n    \\<Longrightarrow> not \\<le> Node lt p rt", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>not = Tip; lt = Tip; rt = Tip\\<rbrakk>\n    \\<Longrightarrow> Tip \\<le> Node Tip p Tip\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>not = Tip; lt = Tip; rt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> Tip \\<le> Node Tip p rt\n 3. \\<And>x21 x22 x23.\n       \\<lbrakk>not \\<le> lt; not = lt; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> not \\<le> Node lt p rt\n 4. \\<lbrakk>not \\<le> lt; not \\<noteq> lt\\<rbrakk>\n    \\<Longrightarrow> not \\<le> Node lt p rt", "apply (simp add: le_dag_def less_dag_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>not = Tip; lt = Tip; rt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> Tip \\<le> Node Tip p rt\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>not \\<le> lt; not = lt; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> not \\<le> Node lt p rt\n 3. \\<lbrakk>not \\<le> lt; not \\<noteq> lt\\<rbrakk>\n    \\<Longrightarrow> not \\<le> Node lt p rt", "apply (simp add: le_dag_def less_dag_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>not \\<le> lt; not = lt; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> not \\<le> Node lt p rt\n 2. \\<lbrakk>not \\<le> lt; not \\<noteq> lt\\<rbrakk>\n    \\<Longrightarrow> not \\<le> Node lt p rt", "apply (simp add: le_dag_def less_dag_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>not \\<le> lt; not \\<noteq> lt\\<rbrakk>\n    \\<Longrightarrow> not \\<le> Node lt p rt", "apply (simp add: le_dag_def less_dag_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma subdag_parentdag_high: \"not <= rt \\<Longrightarrow> not <= (Node lt p rt)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. not \\<le> rt \\<Longrightarrow> not \\<le> Node lt p rt", "apply (cases \"not = rt\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>not \\<le> rt; not = rt\\<rbrakk>\n    \\<Longrightarrow> not \\<le> Node lt p rt\n 2. \\<lbrakk>not \\<le> rt; not \\<noteq> rt\\<rbrakk>\n    \\<Longrightarrow> not \\<le> Node lt p rt", "apply (cases lt)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>not \\<le> rt; not = rt; lt = Tip\\<rbrakk>\n    \\<Longrightarrow> not \\<le> Node lt p rt\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>not \\<le> rt; not = rt; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> not \\<le> Node lt p rt\n 3. \\<lbrakk>not \\<le> rt; not \\<noteq> rt\\<rbrakk>\n    \\<Longrightarrow> not \\<le> Node lt p rt", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>not = rt; lt = Tip\\<rbrakk>\n    \\<Longrightarrow> rt \\<le> Node Tip p rt\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>not \\<le> rt; not = rt; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> not \\<le> Node lt p rt\n 3. \\<lbrakk>not \\<le> rt; not \\<noteq> rt\\<rbrakk>\n    \\<Longrightarrow> not \\<le> Node lt p rt", "apply (cases rt)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>not = rt; lt = Tip; rt = Tip\\<rbrakk>\n    \\<Longrightarrow> rt \\<le> Node Tip p rt\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>not = rt; lt = Tip; rt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> rt \\<le> Node Tip p rt\n 3. \\<And>x21 x22 x23.\n       \\<lbrakk>not \\<le> rt; not = rt; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> not \\<le> Node lt p rt\n 4. \\<lbrakk>not \\<le> rt; not \\<noteq> rt\\<rbrakk>\n    \\<Longrightarrow> not \\<le> Node lt p rt", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>not = Tip; lt = Tip; rt = Tip\\<rbrakk>\n    \\<Longrightarrow> Tip \\<le> Node Tip p Tip\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>not = rt; lt = Tip; rt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> rt \\<le> Node Tip p rt\n 3. \\<And>x21 x22 x23.\n       \\<lbrakk>not \\<le> rt; not = rt; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> not \\<le> Node lt p rt\n 4. \\<lbrakk>not \\<le> rt; not \\<noteq> rt\\<rbrakk>\n    \\<Longrightarrow> not \\<le> Node lt p rt", "apply (simp add: le_dag_def less_dag_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>not = rt; lt = Tip; rt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> rt \\<le> Node Tip p rt\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>not \\<le> rt; not = rt; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> not \\<le> Node lt p rt\n 3. \\<lbrakk>not \\<le> rt; not \\<noteq> rt\\<rbrakk>\n    \\<Longrightarrow> not \\<le> Node lt p rt", "apply (simp add: le_dag_def less_dag_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>not \\<le> rt; not = rt; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> not \\<le> Node lt p rt\n 2. \\<lbrakk>not \\<le> rt; not \\<noteq> rt\\<rbrakk>\n    \\<Longrightarrow> not \\<le> Node lt p rt", "apply (simp add: le_dag_def less_dag_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>not \\<le> rt; not \\<noteq> rt\\<rbrakk>\n    \\<Longrightarrow> not \\<le> Node lt p rt", "apply (simp add: le_dag_def less_dag_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma set_of_subdag: \"\\<And> p not no. \n\\<lbrakk>Dag p low high t; Dag no low high not; no \\<in> set_of t\\<rbrakk> \\<Longrightarrow> not <= t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p not no.\n       \\<lbrakk>Dag p low high t; Dag no low high not;\n        no \\<in> set_of t\\<rbrakk>\n       \\<Longrightarrow> not \\<le> t", "proof (induct t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p not no.\n       \\<lbrakk>Dag p low high Tip; Dag no low high not;\n        no \\<in> set_of Tip\\<rbrakk>\n       \\<Longrightarrow> not \\<le> Tip\n 2. \\<And>t1 x2 t2 p not no.\n       \\<lbrakk>\\<And>p not no.\n                   \\<lbrakk>Dag p low high t1; Dag no low high not;\n                    no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> not \\<le> t1;\n        \\<And>p not no.\n           \\<lbrakk>Dag p low high t2; Dag no low high not;\n            no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> not \\<le> t2;\n        Dag p low high (Node t1 x2 t2); Dag no low high not;\n        no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> not \\<le> Node t1 x2 t2", "case Tip"], ["proof (state)\nthis:\n  Dag p low high Tip\n  Dag no low high not\n  no \\<in> set_of Tip\n\ngoal (2 subgoals):\n 1. \\<And>p not no.\n       \\<lbrakk>Dag p low high Tip; Dag no low high not;\n        no \\<in> set_of Tip\\<rbrakk>\n       \\<Longrightarrow> not \\<le> Tip\n 2. \\<And>t1 x2 t2 p not no.\n       \\<lbrakk>\\<And>p not no.\n                   \\<lbrakk>Dag p low high t1; Dag no low high not;\n                    no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> not \\<le> t1;\n        \\<And>p not no.\n           \\<lbrakk>Dag p low high t2; Dag no low high not;\n            no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> not \\<le> t2;\n        Dag p low high (Node t1 x2 t2); Dag no low high not;\n        no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> not \\<le> Node t1 x2 t2", "then"], ["proof (chain)\npicking this:\n  Dag p low high Tip\n  Dag no low high not\n  no \\<in> set_of Tip", "show ?case"], ["proof (prove)\nusing this:\n  Dag p low high Tip\n  Dag no low high not\n  no \\<in> set_of Tip\n\ngoal (1 subgoal):\n 1. not \\<le> Tip", "by simp"], ["proof (state)\nthis:\n  not \\<le> Tip\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p not no.\n       \\<lbrakk>\\<And>p not no.\n                   \\<lbrakk>Dag p low high t1; Dag no low high not;\n                    no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> not \\<le> t1;\n        \\<And>p not no.\n           \\<lbrakk>Dag p low high t2; Dag no low high not;\n            no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> not \\<le> t2;\n        Dag p low high (Node t1 x2 t2); Dag no low high not;\n        no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> not \\<le> Node t1 x2 t2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p not no.\n       \\<lbrakk>\\<And>p not no.\n                   \\<lbrakk>Dag p low high t1; Dag no low high not;\n                    no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> not \\<le> t1;\n        \\<And>p not no.\n           \\<lbrakk>Dag p low high t2; Dag no low high not;\n            no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> not \\<le> t2;\n        Dag p low high (Node t1 x2 t2); Dag no low high not;\n        no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> not \\<le> Node t1 x2 t2", "case (Node lt po rt)"], ["proof (state)\nthis:\n  \\<lbrakk>Dag ?p low high lt; Dag ?no low high ?not;\n   ?no \\<in> set_of lt\\<rbrakk>\n  \\<Longrightarrow> ?not \\<le> lt\n  \\<lbrakk>Dag ?p low high rt; Dag ?no low high ?not;\n   ?no \\<in> set_of rt\\<rbrakk>\n  \\<Longrightarrow> ?not \\<le> rt\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p not no.\n       \\<lbrakk>\\<And>p not no.\n                   \\<lbrakk>Dag p low high t1; Dag no low high not;\n                    no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> not \\<le> t1;\n        \\<And>p not no.\n           \\<lbrakk>Dag p low high t2; Dag no low high not;\n            no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> not \\<le> t2;\n        Dag p low high (Node t1 x2 t2); Dag no low high not;\n        no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> not \\<le> Node t1 x2 t2", "note rtNode=this"], ["proof (state)\nthis:\n  \\<lbrakk>Dag ?p low high lt; Dag ?no low high ?not;\n   ?no \\<in> set_of lt\\<rbrakk>\n  \\<Longrightarrow> ?not \\<le> lt\n  \\<lbrakk>Dag ?p low high rt; Dag ?no low high ?not;\n   ?no \\<in> set_of rt\\<rbrakk>\n  \\<Longrightarrow> ?not \\<le> rt\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p not no.\n       \\<lbrakk>\\<And>p not no.\n                   \\<lbrakk>Dag p low high t1; Dag no low high not;\n                    no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> not \\<le> t1;\n        \\<And>p not no.\n           \\<lbrakk>Dag p low high t2; Dag no low high not;\n            no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> not \\<le> t2;\n        Dag p low high (Node t1 x2 t2); Dag no low high not;\n        no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> not \\<le> Node t1 x2 t2", "from Node.prems"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)", "have ppo: \"p=po\""], ["proof (prove)\nusing this:\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n\ngoal (1 subgoal):\n 1. p = po", "by simp"], ["proof (state)\nthis:\n  p = po\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p not no.\n       \\<lbrakk>\\<And>p not no.\n                   \\<lbrakk>Dag p low high t1; Dag no low high not;\n                    no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> not \\<le> t1;\n        \\<And>p not no.\n           \\<lbrakk>Dag p low high t2; Dag no low high not;\n            no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> not \\<le> t2;\n        Dag p low high (Node t1 x2 t2); Dag no low high not;\n        no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> not \\<le> Node t1 x2 t2", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. not \\<le> Node lt po rt", "proof (cases \"no = p\")"], ["proof (state)\ngoal (2 subgoals):\n 1. no = p \\<Longrightarrow> not \\<le> Node lt po rt\n 2. no \\<noteq> p \\<Longrightarrow> not \\<le> Node lt po rt", "case True"], ["proof (state)\nthis:\n  no = p\n\ngoal (2 subgoals):\n 1. no = p \\<Longrightarrow> not \\<le> Node lt po rt\n 2. no \\<noteq> p \\<Longrightarrow> not \\<le> Node lt po rt", "with ppo Node.prems"], ["proof (chain)\npicking this:\n  p = po\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  no = p", "have \"not = (Node lt po rt)\""], ["proof (prove)\nusing this:\n  p = po\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  no = p\n\ngoal (1 subgoal):\n 1. not = Node lt po rt", "by (simp add: Dag_unique del: Dag_Ref)"], ["proof (state)\nthis:\n  not = Node lt po rt\n\ngoal (2 subgoals):\n 1. no = p \\<Longrightarrow> not \\<le> Node lt po rt\n 2. no \\<noteq> p \\<Longrightarrow> not \\<le> Node lt po rt", "with Node.prems ppo"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  p = po\n  not = Node lt po rt", "show ?thesis"], ["proof (prove)\nusing this:\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  p = po\n  not = Node lt po rt\n\ngoal (1 subgoal):\n 1. not \\<le> Node lt po rt", "by (simp add: subdag_eq_def)"], ["proof (state)\nthis:\n  not \\<le> Node lt po rt\n\ngoal (1 subgoal):\n 1. no \\<noteq> p \\<Longrightarrow> not \\<le> Node lt po rt", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. no \\<noteq> p \\<Longrightarrow> not \\<le> Node lt po rt", "assume \" no \\<noteq> p\""], ["proof (state)\nthis:\n  no \\<noteq> p\n\ngoal (1 subgoal):\n 1. no \\<noteq> p \\<Longrightarrow> not \\<le> Node lt po rt", "with Node.prems"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  no \\<noteq> p", "have no_in_ltorrt: \"no \\<in> set_of lt \\<or> no \\<in> set_of rt\""], ["proof (prove)\nusing this:\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  no \\<noteq> p\n\ngoal (1 subgoal):\n 1. no \\<in> set_of lt \\<or> no \\<in> set_of rt", "by simp"], ["proof (state)\nthis:\n  no \\<in> set_of lt \\<or> no \\<in> set_of rt\n\ngoal (1 subgoal):\n 1. no \\<noteq> p \\<Longrightarrow> not \\<le> Node lt po rt", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. not \\<le> Node lt po rt", "proof (cases \"no \\<in> set_of lt\")"], ["proof (state)\ngoal (2 subgoals):\n 1. no \\<in> set_of lt \\<Longrightarrow> not \\<le> Node lt po rt\n 2. no \\<notin> set_of lt \\<Longrightarrow> not \\<le> Node lt po rt", "case True"], ["proof (state)\nthis:\n  no \\<in> set_of lt\n\ngoal (2 subgoals):\n 1. no \\<in> set_of lt \\<Longrightarrow> not \\<le> Node lt po rt\n 2. no \\<notin> set_of lt \\<Longrightarrow> not \\<le> Node lt po rt", "from Node.prems ppo"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  p = po", "have \"Dag (low po) low high lt\""], ["proof (prove)\nusing this:\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  p = po\n\ngoal (1 subgoal):\n 1. Dag (low po) low high lt", "by simp"], ["proof (state)\nthis:\n  Dag (low po) low high lt\n\ngoal (2 subgoals):\n 1. no \\<in> set_of lt \\<Longrightarrow> not \\<le> Node lt po rt\n 2. no \\<notin> set_of lt \\<Longrightarrow> not \\<le> Node lt po rt", "with Node.prems ppo True"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  p = po\n  no \\<in> set_of lt\n  Dag (low po) low high lt", "have \"not <= lt\""], ["proof (prove)\nusing this:\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  p = po\n  no \\<in> set_of lt\n  Dag (low po) low high lt\n\ngoal (1 subgoal):\n 1. not \\<le> lt", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag p low high (Node lt po rt); Dag no low high not;\n     no \\<in> set_of (Node lt po rt); p = po; no \\<in> set_of lt;\n     Dag (low po) low high lt\\<rbrakk>\n    \\<Longrightarrow> not \\<le> lt", "apply (rule Node.hyps)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Dag p low high (Node lt po rt); Dag no low high not;\n     no \\<in> set_of (Node lt po rt); p = po; no \\<in> set_of lt;\n     Dag (low po) low high lt\\<rbrakk>\n    \\<Longrightarrow> Dag ?p6 low high lt\n 2. \\<lbrakk>Dag p low high (Node lt po rt); Dag no low high not;\n     no \\<in> set_of (Node lt po rt); p = po; no \\<in> set_of lt;\n     Dag (low po) low high lt\\<rbrakk>\n    \\<Longrightarrow> Dag ?no6 low high not\n 3. \\<lbrakk>Dag p low high (Node lt po rt); Dag no low high not;\n     no \\<in> set_of (Node lt po rt); p = po; no \\<in> set_of lt;\n     Dag (low po) low high lt\\<rbrakk>\n    \\<Longrightarrow> ?no6 \\<in> set_of lt", "apply assumption+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  not \\<le> lt\n\ngoal (2 subgoals):\n 1. no \\<in> set_of lt \\<Longrightarrow> not \\<le> Node lt po rt\n 2. no \\<notin> set_of lt \\<Longrightarrow> not \\<le> Node lt po rt", "with Node.prems no_in_ltorrt"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  no \\<in> set_of lt \\<or> no \\<in> set_of rt\n  not \\<le> lt", "show ?thesis"], ["proof (prove)\nusing this:\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  no \\<in> set_of lt \\<or> no \\<in> set_of rt\n  not \\<le> lt\n\ngoal (1 subgoal):\n 1. not \\<le> Node lt po rt", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag p low high (Node lt po rt); Dag no low high not;\n     no \\<in> set_of (Node lt po rt);\n     no \\<in> set_of lt \\<or> no \\<in> set_of rt; not \\<le> lt\\<rbrakk>\n    \\<Longrightarrow> not \\<le> Node lt po rt", "apply (rule subdag_parentdag_low)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag p low high (Node lt po rt); Dag no low high not;\n     no \\<in> set_of (Node lt po rt);\n     no \\<in> set_of lt \\<or> no \\<in> set_of rt; not \\<le> lt\\<rbrakk>\n    \\<Longrightarrow> not \\<le> lt", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  not \\<le> Node lt po rt\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lt \\<Longrightarrow> not \\<le> Node lt po rt", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. no \\<notin> set_of lt \\<Longrightarrow> not \\<le> Node lt po rt", "assume \"no \\<notin> set_of lt\""], ["proof (state)\nthis:\n  no \\<notin> set_of lt\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lt \\<Longrightarrow> not \\<le> Node lt po rt", "with no_in_ltorrt"], ["proof (chain)\npicking this:\n  no \\<in> set_of lt \\<or> no \\<in> set_of rt\n  no \\<notin> set_of lt", "have no_in_rt: \"no \\<in> set_of rt\""], ["proof (prove)\nusing this:\n  no \\<in> set_of lt \\<or> no \\<in> set_of rt\n  no \\<notin> set_of lt\n\ngoal (1 subgoal):\n 1. no \\<in> set_of rt", "by simp"], ["proof (state)\nthis:\n  no \\<in> set_of rt\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lt \\<Longrightarrow> not \\<le> Node lt po rt", "from Node.prems ppo"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  p = po", "have \"Dag (high po) low high rt\""], ["proof (prove)\nusing this:\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  p = po\n\ngoal (1 subgoal):\n 1. Dag (high po) low high rt", "by simp"], ["proof (state)\nthis:\n  Dag (high po) low high rt\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lt \\<Longrightarrow> not \\<le> Node lt po rt", "with Node.prems ppo no_in_rt"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  p = po\n  no \\<in> set_of rt\n  Dag (high po) low high rt", "have \"not <= rt\""], ["proof (prove)\nusing this:\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  p = po\n  no \\<in> set_of rt\n  Dag (high po) low high rt\n\ngoal (1 subgoal):\n 1. not \\<le> rt", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag p low high (Node lt po rt); Dag no low high not;\n     no \\<in> set_of (Node lt po rt); p = po; no \\<in> set_of rt;\n     Dag (high po) low high rt\\<rbrakk>\n    \\<Longrightarrow> not \\<le> rt", "apply (rule Node.hyps)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>Dag p low high (Node lt po rt); Dag no low high not;\n     no \\<in> set_of (Node lt po rt); p = po; no \\<in> set_of rt;\n     Dag (high po) low high rt\\<rbrakk>\n    \\<Longrightarrow> Dag ?p6 low high rt\n 2. \\<lbrakk>Dag p low high (Node lt po rt); Dag no low high not;\n     no \\<in> set_of (Node lt po rt); p = po; no \\<in> set_of rt;\n     Dag (high po) low high rt\\<rbrakk>\n    \\<Longrightarrow> Dag ?no6 low high not\n 3. \\<lbrakk>Dag p low high (Node lt po rt); Dag no low high not;\n     no \\<in> set_of (Node lt po rt); p = po; no \\<in> set_of rt;\n     Dag (high po) low high rt\\<rbrakk>\n    \\<Longrightarrow> ?no6 \\<in> set_of rt", "apply assumption+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  not \\<le> rt\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lt \\<Longrightarrow> not \\<le> Node lt po rt", "with Node.prems no_in_rt"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  no \\<in> set_of rt\n  not \\<le> rt", "show ?thesis"], ["proof (prove)\nusing this:\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  no \\<in> set_of rt\n  not \\<le> rt\n\ngoal (1 subgoal):\n 1. not \\<le> Node lt po rt", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag p low high (Node lt po rt); Dag no low high not;\n     no \\<in> set_of (Node lt po rt); no \\<in> set_of rt;\n     not \\<le> rt\\<rbrakk>\n    \\<Longrightarrow> not \\<le> Node lt po rt", "apply (rule subdag_parentdag_high)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag p low high (Node lt po rt); Dag no low high not;\n     no \\<in> set_of (Node lt po rt); no \\<in> set_of rt;\n     not \\<le> rt\\<rbrakk>\n    \\<Longrightarrow> not \\<le> rt", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  not \\<le> Node lt po rt\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  not \\<le> Node lt po rt\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  not \\<le> Node lt po rt\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma children_ordered: \"\\<lbrakk>ordered (Node lt p rt) var\\<rbrakk> \\<Longrightarrow> \nordered lt var \\<and> ordered rt var\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ordered (Node lt p rt) var \\<Longrightarrow>\n    ordered lt var \\<and> ordered rt var", "proof (cases lt)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>ordered (Node lt p rt) var; lt = Tip\\<rbrakk>\n    \\<Longrightarrow> ordered lt var \\<and> ordered rt var\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>ordered (Node lt p rt) var; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> ordered lt var \\<and> ordered rt var", "case Tip"], ["proof (state)\nthis:\n  lt = Tip\n\ngoal (2 subgoals):\n 1. \\<lbrakk>ordered (Node lt p rt) var; lt = Tip\\<rbrakk>\n    \\<Longrightarrow> ordered lt var \\<and> ordered rt var\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>ordered (Node lt p rt) var; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> ordered lt var \\<and> ordered rt var", "note ltTip=this"], ["proof (state)\nthis:\n  lt = Tip\n\ngoal (2 subgoals):\n 1. \\<lbrakk>ordered (Node lt p rt) var; lt = Tip\\<rbrakk>\n    \\<Longrightarrow> ordered lt var \\<and> ordered rt var\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>ordered (Node lt p rt) var; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> ordered lt var \\<and> ordered rt var", "assume  orderedNode: \"ordered (Node lt p rt) var\""], ["proof (state)\nthis:\n  ordered (Node lt p rt) var\n\ngoal (2 subgoals):\n 1. \\<lbrakk>ordered (Node lt p rt) var; lt = Tip\\<rbrakk>\n    \\<Longrightarrow> ordered lt var \\<and> ordered rt var\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>ordered (Node lt p rt) var; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> ordered lt var \\<and> ordered rt var", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. ordered lt var \\<and> ordered rt var", "proof (cases rt)"], ["proof (state)\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow> ordered lt var \\<and> ordered rt var\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       ordered lt var \\<and> ordered rt var", "case Tip"], ["proof (state)\nthis:\n  rt = Tip\n\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow> ordered lt var \\<and> ordered rt var\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       ordered lt var \\<and> ordered rt var", "note rtTip = this"], ["proof (state)\nthis:\n  rt = Tip\n\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow> ordered lt var \\<and> ordered rt var\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       ordered lt var \\<and> ordered rt var", "with ltTip"], ["proof (chain)\npicking this:\n  lt = Tip\n  rt = Tip", "show ?thesis"], ["proof (prove)\nusing this:\n  lt = Tip\n  rt = Tip\n\ngoal (1 subgoal):\n 1. ordered lt var \\<and> ordered rt var", "by simp"], ["proof (state)\nthis:\n  ordered lt var \\<and> ordered rt var\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       ordered lt var \\<and> ordered rt var", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       ordered lt var \\<and> ordered rt var", "case (Node lrt r rrt)"], ["proof (state)\nthis:\n  rt = Node lrt r rrt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       ordered lt var \\<and> ordered rt var", "with orderedNode ltTip"], ["proof (chain)\npicking this:\n  ordered (Node lt p rt) var\n  lt = Tip\n  rt = Node lrt r rrt", "show ?thesis"], ["proof (prove)\nusing this:\n  ordered (Node lt p rt) var\n  lt = Tip\n  rt = Node lrt r rrt\n\ngoal (1 subgoal):\n 1. ordered lt var \\<and> ordered rt var", "by simp"], ["proof (state)\nthis:\n  ordered lt var \\<and> ordered rt var\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ordered lt var \\<and> ordered rt var\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>ordered (Node lt p rt) var; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> ordered lt var \\<and> ordered rt var", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>ordered (Node lt p rt) var; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> ordered lt var \\<and> ordered rt var", "case (Node llt l rlt)"], ["proof (state)\nthis:\n  lt = Node llt l rlt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>ordered (Node lt p rt) var; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> ordered lt var \\<and> ordered rt var", "note ltNode=this"], ["proof (state)\nthis:\n  lt = Node llt l rlt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>ordered (Node lt p rt) var; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> ordered lt var \\<and> ordered rt var", "assume orderedNode: \"ordered (Node lt p rt) var\""], ["proof (state)\nthis:\n  ordered (Node lt p rt) var\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>ordered (Node lt p rt) var; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> ordered lt var \\<and> ordered rt var", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. ordered lt var \\<and> ordered rt var", "proof (cases rt)"], ["proof (state)\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow> ordered lt var \\<and> ordered rt var\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       ordered lt var \\<and> ordered rt var", "case Tip"], ["proof (state)\nthis:\n  rt = Tip\n\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow> ordered lt var \\<and> ordered rt var\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       ordered lt var \\<and> ordered rt var", "note rtTip = this"], ["proof (state)\nthis:\n  rt = Tip\n\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow> ordered lt var \\<and> ordered rt var\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       ordered lt var \\<and> ordered rt var", "with orderedNode ltNode"], ["proof (chain)\npicking this:\n  ordered (Node lt p rt) var\n  lt = Node llt l rlt\n  rt = Tip", "show ?thesis"], ["proof (prove)\nusing this:\n  ordered (Node lt p rt) var\n  lt = Node llt l rlt\n  rt = Tip\n\ngoal (1 subgoal):\n 1. ordered lt var \\<and> ordered rt var", "by simp"], ["proof (state)\nthis:\n  ordered lt var \\<and> ordered rt var\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       ordered lt var \\<and> ordered rt var", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       ordered lt var \\<and> ordered rt var", "case (Node lrt r rrt)"], ["proof (state)\nthis:\n  rt = Node lrt r rrt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       ordered lt var \\<and> ordered rt var", "note rtNode = this"], ["proof (state)\nthis:\n  rt = Node lrt r rrt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       ordered lt var \\<and> ordered rt var", "with orderedNode ltNode"], ["proof (chain)\npicking this:\n  ordered (Node lt p rt) var\n  lt = Node llt l rlt\n  rt = Node lrt r rrt", "show ?thesis"], ["proof (prove)\nusing this:\n  ordered (Node lt p rt) var\n  lt = Node llt l rlt\n  rt = Node lrt r rrt\n\ngoal (1 subgoal):\n 1. ordered lt var \\<and> ordered rt var", "by simp"], ["proof (state)\nthis:\n  ordered lt var \\<and> ordered rt var\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ordered lt var \\<and> ordered rt var\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ordered_subdag: \"\\<lbrakk>ordered t var; not <= t\\<rbrakk> \\<Longrightarrow> ordered not var\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ordered t var; not \\<le> t\\<rbrakk>\n    \\<Longrightarrow> ordered not var", "proof (induct t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>ordered Tip var; not \\<le> Tip\\<rbrakk>\n    \\<Longrightarrow> ordered not var\n 2. \\<And>t1 x2 t2.\n       \\<lbrakk>\\<lbrakk>ordered t1 var; not \\<le> t1\\<rbrakk>\n                \\<Longrightarrow> ordered not var;\n        \\<lbrakk>ordered t2 var; not \\<le> t2\\<rbrakk>\n        \\<Longrightarrow> ordered not var;\n        ordered (Node t1 x2 t2) var; not \\<le> Node t1 x2 t2\\<rbrakk>\n       \\<Longrightarrow> ordered not var", "case Tip"], ["proof (state)\nthis:\n  ordered Tip var\n  not \\<le> Tip\n\ngoal (2 subgoals):\n 1. \\<lbrakk>ordered Tip var; not \\<le> Tip\\<rbrakk>\n    \\<Longrightarrow> ordered not var\n 2. \\<And>t1 x2 t2.\n       \\<lbrakk>\\<lbrakk>ordered t1 var; not \\<le> t1\\<rbrakk>\n                \\<Longrightarrow> ordered not var;\n        \\<lbrakk>ordered t2 var; not \\<le> t2\\<rbrakk>\n        \\<Longrightarrow> ordered not var;\n        ordered (Node t1 x2 t2) var; not \\<le> Node t1 x2 t2\\<rbrakk>\n       \\<Longrightarrow> ordered not var", "then"], ["proof (chain)\npicking this:\n  ordered Tip var\n  not \\<le> Tip", "show ?thesis"], ["proof (prove)\nusing this:\n  ordered Tip var\n  not \\<le> Tip\n\ngoal (1 subgoal):\n 1. ordered not var", "by (simp add: less_dag_def le_dag_def)"], ["proof (state)\nthis:\n  ordered not var\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>\\<lbrakk>ordered t1 var; not \\<le> t1\\<rbrakk>\n                \\<Longrightarrow> ordered not var;\n        \\<lbrakk>ordered t2 var; not \\<le> t2\\<rbrakk>\n        \\<Longrightarrow> ordered not var;\n        ordered (Node t1 x2 t2) var; not \\<le> Node t1 x2 t2\\<rbrakk>\n       \\<Longrightarrow> ordered not var", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>\\<lbrakk>ordered t1 var; not \\<le> t1\\<rbrakk>\n                \\<Longrightarrow> ordered not var;\n        \\<lbrakk>ordered t2 var; not \\<le> t2\\<rbrakk>\n        \\<Longrightarrow> ordered not var;\n        ordered (Node t1 x2 t2) var; not \\<le> Node t1 x2 t2\\<rbrakk>\n       \\<Longrightarrow> ordered not var", "case (Node lt p rt)"], ["proof (state)\nthis:\n  \\<lbrakk>ordered lt var; not \\<le> lt\\<rbrakk>\n  \\<Longrightarrow> ordered not var\n  \\<lbrakk>ordered rt var; not \\<le> rt\\<rbrakk>\n  \\<Longrightarrow> ordered not var\n  ordered (Node lt p rt) var\n  not \\<le> Node lt p rt\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>\\<lbrakk>ordered t1 var; not \\<le> t1\\<rbrakk>\n                \\<Longrightarrow> ordered not var;\n        \\<lbrakk>ordered t2 var; not \\<le> t2\\<rbrakk>\n        \\<Longrightarrow> ordered not var;\n        ordered (Node t1 x2 t2) var; not \\<le> Node t1 x2 t2\\<rbrakk>\n       \\<Longrightarrow> ordered not var", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. ordered not var", "proof (cases \"not = Node lt p rt\")"], ["proof (state)\ngoal (2 subgoals):\n 1. not = Node lt p rt \\<Longrightarrow> ordered not var\n 2. not \\<noteq> Node lt p rt \\<Longrightarrow> ordered not var", "case True"], ["proof (state)\nthis:\n  not = Node lt p rt\n\ngoal (2 subgoals):\n 1. not = Node lt p rt \\<Longrightarrow> ordered not var\n 2. not \\<noteq> Node lt p rt \\<Longrightarrow> ordered not var", "with Node.prems"], ["proof (chain)\npicking this:\n  ordered (Node lt p rt) var\n  not \\<le> Node lt p rt\n  not = Node lt p rt", "show ?thesis"], ["proof (prove)\nusing this:\n  ordered (Node lt p rt) var\n  not \\<le> Node lt p rt\n  not = Node lt p rt\n\ngoal (1 subgoal):\n 1. ordered not var", "by simp"], ["proof (state)\nthis:\n  ordered not var\n\ngoal (1 subgoal):\n 1. not \\<noteq> Node lt p rt \\<Longrightarrow> ordered not var", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. not \\<noteq> Node lt p rt \\<Longrightarrow> ordered not var", "assume notnt: \"not \\<noteq> Node lt p rt\""], ["proof (state)\nthis:\n  not \\<noteq> Node lt p rt\n\ngoal (1 subgoal):\n 1. not \\<noteq> Node lt p rt \\<Longrightarrow> ordered not var", "with Node.prems"], ["proof (chain)\npicking this:\n  ordered (Node lt p rt) var\n  not \\<le> Node lt p rt\n  not \\<noteq> Node lt p rt", "have notstltorrt: \"not <= lt \\<or> not <= rt\""], ["proof (prove)\nusing this:\n  ordered (Node lt p rt) var\n  not \\<le> Node lt p rt\n  not \\<noteq> Node lt p rt\n\ngoal (1 subgoal):\n 1. not \\<le> lt \\<or> not \\<le> rt", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ordered (Node lt p rt) var; not \\<le> Node lt p rt;\n     not \\<noteq> Node lt p rt\\<rbrakk>\n    \\<Longrightarrow> not \\<le> lt \\<or> not \\<le> rt", "apply (simp add: less_dag_def le_dag_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ordered (Node lt p rt) var;\n     not = lt \\<or> not = rt \\<or> subdag lt not \\<or> subdag rt not;\n     not \\<noteq> Node lt p rt\\<rbrakk>\n    \\<Longrightarrow> not = lt \\<or>\n                      subdag lt not \\<or> not = rt \\<or> subdag rt not", "apply fastforce"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  not \\<le> lt \\<or> not \\<le> rt\n\ngoal (1 subgoal):\n 1. not \\<noteq> Node lt p rt \\<Longrightarrow> ordered not var", "from Node.prems"], ["proof (chain)\npicking this:\n  ordered (Node lt p rt) var\n  not \\<le> Node lt p rt", "have ord_lt: \"ordered lt var\""], ["proof (prove)\nusing this:\n  ordered (Node lt p rt) var\n  not \\<le> Node lt p rt\n\ngoal (1 subgoal):\n 1. ordered lt var", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ordered (Node lt p rt) var; not \\<le> Node lt p rt\\<rbrakk>\n    \\<Longrightarrow> ordered lt var", "apply (drule children_ordered)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>not \\<le> Node lt p rt;\n     ordered lt var \\<and> ordered rt var\\<rbrakk>\n    \\<Longrightarrow> ordered lt var", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ordered lt var\n\ngoal (1 subgoal):\n 1. not \\<noteq> Node lt p rt \\<Longrightarrow> ordered not var", "from Node.prems"], ["proof (chain)\npicking this:\n  ordered (Node lt p rt) var\n  not \\<le> Node lt p rt", "have ord_rt: \"ordered rt var\""], ["proof (prove)\nusing this:\n  ordered (Node lt p rt) var\n  not \\<le> Node lt p rt\n\ngoal (1 subgoal):\n 1. ordered rt var", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ordered (Node lt p rt) var; not \\<le> Node lt p rt\\<rbrakk>\n    \\<Longrightarrow> ordered rt var", "apply (drule children_ordered)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>not \\<le> Node lt p rt;\n     ordered lt var \\<and> ordered rt var\\<rbrakk>\n    \\<Longrightarrow> ordered rt var", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ordered rt var\n\ngoal (1 subgoal):\n 1. not \\<noteq> Node lt p rt \\<Longrightarrow> ordered not var", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. ordered not var", "proof (cases \"not <= lt\")"], ["proof (state)\ngoal (2 subgoals):\n 1. not \\<le> lt \\<Longrightarrow> ordered not var\n 2. \\<not> not \\<le> lt \\<Longrightarrow> ordered not var", "case True"], ["proof (state)\nthis:\n  not \\<le> lt\n\ngoal (2 subgoals):\n 1. not \\<le> lt \\<Longrightarrow> ordered not var\n 2. \\<not> not \\<le> lt \\<Longrightarrow> ordered not var", "with ord_lt"], ["proof (chain)\npicking this:\n  ordered lt var\n  not \\<le> lt", "show ?thesis"], ["proof (prove)\nusing this:\n  ordered lt var\n  not \\<le> lt\n\ngoal (1 subgoal):\n 1. ordered not var", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ordered lt var; not \\<le> lt\\<rbrakk>\n    \\<Longrightarrow> ordered not var", "apply (rule Node.hyps)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>ordered lt var; not \\<le> lt\\<rbrakk>\n    \\<Longrightarrow> ordered lt var\n 2. \\<lbrakk>ordered lt var; not \\<le> lt\\<rbrakk>\n    \\<Longrightarrow> not \\<le> lt", "apply assumption+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ordered not var\n\ngoal (1 subgoal):\n 1. \\<not> not \\<le> lt \\<Longrightarrow> ordered not var", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> not \\<le> lt \\<Longrightarrow> ordered not var", "assume \"\\<not> not \\<le> lt\""], ["proof (state)\nthis:\n  \\<not> not \\<le> lt\n\ngoal (1 subgoal):\n 1. \\<not> not \\<le> lt \\<Longrightarrow> ordered not var", "with notstltorrt"], ["proof (chain)\npicking this:\n  not \\<le> lt \\<or> not \\<le> rt\n  \\<not> not \\<le> lt", "have notinrt: \"not <= rt\""], ["proof (prove)\nusing this:\n  not \\<le> lt \\<or> not \\<le> rt\n  \\<not> not \\<le> lt\n\ngoal (1 subgoal):\n 1. not \\<le> rt", "by simp"], ["proof (state)\nthis:\n  not \\<le> rt\n\ngoal (1 subgoal):\n 1. \\<not> not \\<le> lt \\<Longrightarrow> ordered not var", "from Node.hyps"], ["proof (chain)\npicking this:\n  \\<lbrakk>ordered lt var; not \\<le> lt\\<rbrakk>\n  \\<Longrightarrow> ordered not var\n  \\<lbrakk>ordered rt var; not \\<le> rt\\<rbrakk>\n  \\<Longrightarrow> ordered not var", "have hyprt: \"\\<lbrakk>ordered rt var; not \\<le> rt\\<rbrakk> \\<Longrightarrow> ordered not var\""], ["proof (prove)\nusing this:\n  \\<lbrakk>ordered lt var; not \\<le> lt\\<rbrakk>\n  \\<Longrightarrow> ordered not var\n  \\<lbrakk>ordered rt var; not \\<le> rt\\<rbrakk>\n  \\<Longrightarrow> ordered not var\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ordered rt var; not \\<le> rt\\<rbrakk>\n    \\<Longrightarrow> ordered not var", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>ordered rt var; not \\<le> rt\\<rbrakk>\n  \\<Longrightarrow> ordered not var\n\ngoal (1 subgoal):\n 1. \\<not> not \\<le> lt \\<Longrightarrow> ordered not var", "from notinrt ord_rt"], ["proof (chain)\npicking this:\n  not \\<le> rt\n  ordered rt var", "show ?thesis"], ["proof (prove)\nusing this:\n  not \\<le> rt\n  ordered rt var\n\ngoal (1 subgoal):\n 1. ordered not var", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>not \\<le> rt; ordered rt var\\<rbrakk>\n    \\<Longrightarrow> ordered not var", "apply (rule hyprt)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>not \\<le> rt; ordered rt var\\<rbrakk>\n    \\<Longrightarrow> ordered rt var\n 2. \\<lbrakk>not \\<le> rt; ordered rt var\\<rbrakk>\n    \\<Longrightarrow> not \\<le> rt", "apply assumption+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ordered not var\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ordered not var\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ordered not var\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subdag_ordered: \n\"\\<And> not no p. \\<lbrakk>ordered t var; Dag p low high t; Dag no low high not; \n              no \\<in> set_of t\\<rbrakk> \\<Longrightarrow> ordered not var\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>not no p.\n       \\<lbrakk>ordered t var; Dag p low high t; Dag no low high not;\n        no \\<in> set_of t\\<rbrakk>\n       \\<Longrightarrow> ordered not var", "proof (induct t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>not no p.\n       \\<lbrakk>ordered Tip var; Dag p low high Tip; Dag no low high not;\n        no \\<in> set_of Tip\\<rbrakk>\n       \\<Longrightarrow> ordered not var\n 2. \\<And>t1 x2 t2 not no p.\n       \\<lbrakk>\\<And>not no p.\n                   \\<lbrakk>ordered t1 var; Dag p low high t1;\n                    Dag no low high not; no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> ordered not var;\n        \\<And>not no p.\n           \\<lbrakk>ordered t2 var; Dag p low high t2; Dag no low high not;\n            no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> ordered not var;\n        ordered (Node t1 x2 t2) var; Dag p low high (Node t1 x2 t2);\n        Dag no low high not; no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> ordered not var", "case Tip"], ["proof (state)\nthis:\n  ordered Tip var\n  Dag p low high Tip\n  Dag no low high not\n  no \\<in> set_of Tip\n\ngoal (2 subgoals):\n 1. \\<And>not no p.\n       \\<lbrakk>ordered Tip var; Dag p low high Tip; Dag no low high not;\n        no \\<in> set_of Tip\\<rbrakk>\n       \\<Longrightarrow> ordered not var\n 2. \\<And>t1 x2 t2 not no p.\n       \\<lbrakk>\\<And>not no p.\n                   \\<lbrakk>ordered t1 var; Dag p low high t1;\n                    Dag no low high not; no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> ordered not var;\n        \\<And>not no p.\n           \\<lbrakk>ordered t2 var; Dag p low high t2; Dag no low high not;\n            no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> ordered not var;\n        ordered (Node t1 x2 t2) var; Dag p low high (Node t1 x2 t2);\n        Dag no low high not; no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> ordered not var", "from Tip.prems"], ["proof (chain)\npicking this:\n  ordered Tip var\n  Dag p low high Tip\n  Dag no low high not\n  no \\<in> set_of Tip", "show ?case"], ["proof (prove)\nusing this:\n  ordered Tip var\n  Dag p low high Tip\n  Dag no low high not\n  no \\<in> set_of Tip\n\ngoal (1 subgoal):\n 1. ordered not var", "by simp"], ["proof (state)\nthis:\n  ordered not var\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 not no p.\n       \\<lbrakk>\\<And>not no p.\n                   \\<lbrakk>ordered t1 var; Dag p low high t1;\n                    Dag no low high not; no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> ordered not var;\n        \\<And>not no p.\n           \\<lbrakk>ordered t2 var; Dag p low high t2; Dag no low high not;\n            no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> ordered not var;\n        ordered (Node t1 x2 t2) var; Dag p low high (Node t1 x2 t2);\n        Dag no low high not; no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> ordered not var", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 not no p.\n       \\<lbrakk>\\<And>not no p.\n                   \\<lbrakk>ordered t1 var; Dag p low high t1;\n                    Dag no low high not; no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> ordered not var;\n        \\<And>not no p.\n           \\<lbrakk>ordered t2 var; Dag p low high t2; Dag no low high not;\n            no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> ordered not var;\n        ordered (Node t1 x2 t2) var; Dag p low high (Node t1 x2 t2);\n        Dag no low high not; no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> ordered not var", "case (Node lt po rt)"], ["proof (state)\nthis:\n  \\<lbrakk>ordered lt var; Dag ?p low high lt; Dag ?no low high ?not;\n   ?no \\<in> set_of lt\\<rbrakk>\n  \\<Longrightarrow> ordered ?not var\n  \\<lbrakk>ordered rt var; Dag ?p low high rt; Dag ?no low high ?not;\n   ?no \\<in> set_of rt\\<rbrakk>\n  \\<Longrightarrow> ordered ?not var\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 not no p.\n       \\<lbrakk>\\<And>not no p.\n                   \\<lbrakk>ordered t1 var; Dag p low high t1;\n                    Dag no low high not; no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> ordered not var;\n        \\<And>not no p.\n           \\<lbrakk>ordered t2 var; Dag p low high t2; Dag no low high not;\n            no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> ordered not var;\n        ordered (Node t1 x2 t2) var; Dag p low high (Node t1 x2 t2);\n        Dag no low high not; no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> ordered not var", "note nN=this"], ["proof (state)\nthis:\n  \\<lbrakk>ordered lt var; Dag ?p low high lt; Dag ?no low high ?not;\n   ?no \\<in> set_of lt\\<rbrakk>\n  \\<Longrightarrow> ordered ?not var\n  \\<lbrakk>ordered rt var; Dag ?p low high rt; Dag ?no low high ?not;\n   ?no \\<in> set_of rt\\<rbrakk>\n  \\<Longrightarrow> ordered ?not var\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 not no p.\n       \\<lbrakk>\\<And>not no p.\n                   \\<lbrakk>ordered t1 var; Dag p low high t1;\n                    Dag no low high not; no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> ordered not var;\n        \\<And>not no p.\n           \\<lbrakk>ordered t2 var; Dag p low high t2; Dag no low high not;\n            no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> ordered not var;\n        ordered (Node t1 x2 t2) var; Dag p low high (Node t1 x2 t2);\n        Dag no low high not; no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> ordered not var", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. ordered not var", "proof (cases lt)"], ["proof (state)\ngoal (2 subgoals):\n 1. lt = Tip \\<Longrightarrow> ordered not var\n 2. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow> ordered not var", "case Tip"], ["proof (state)\nthis:\n  lt = Tip\n\ngoal (2 subgoals):\n 1. lt = Tip \\<Longrightarrow> ordered not var\n 2. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow> ordered not var", "note ltTip=this"], ["proof (state)\nthis:\n  lt = Tip\n\ngoal (2 subgoals):\n 1. lt = Tip \\<Longrightarrow> ordered not var\n 2. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow> ordered not var", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. ordered not var", "proof (cases rt)"], ["proof (state)\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow> ordered not var\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow> ordered not var", "case Tip"], ["proof (state)\nthis:\n  rt = Tip\n\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow> ordered not var\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow> ordered not var", "from Node.prems"], ["proof (chain)\npicking this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)", "have ppo: \"p=po\""], ["proof (prove)\nusing this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n\ngoal (1 subgoal):\n 1. p = po", "by simp"], ["proof (state)\nthis:\n  p = po\n\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow> ordered not var\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow> ordered not var", "from Tip ltTip Node.prems"], ["proof (chain)\npicking this:\n  rt = Tip\n  lt = Tip\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)", "have \"no=p\""], ["proof (prove)\nusing this:\n  rt = Tip\n  lt = Tip\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n\ngoal (1 subgoal):\n 1. no = p", "by simp"], ["proof (state)\nthis:\n  no = p\n\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow> ordered not var\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow> ordered not var", "with ppo Node.prems"], ["proof (chain)\npicking this:\n  p = po\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  no = p", "have \"not=(Node lt po rt)\""], ["proof (prove)\nusing this:\n  p = po\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  no = p\n\ngoal (1 subgoal):\n 1. not = Node lt po rt", "by (simp del: Dag_Ref add: Dag_unique)"], ["proof (state)\nthis:\n  not = Node lt po rt\n\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow> ordered not var\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow> ordered not var", "with Node.prems"], ["proof (chain)\npicking this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  not = Node lt po rt", "show ?thesis"], ["proof (prove)\nusing this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  not = Node lt po rt\n\ngoal (1 subgoal):\n 1. ordered not var", "by simp"], ["proof (state)\nthis:\n  ordered not var\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow> ordered not var", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow> ordered not var", "case (Node lrnot rn rrnot)"], ["proof (state)\nthis:\n  rt = Node lrnot rn rrnot\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow> ordered not var", "from Node.prems ltTip Node"], ["proof (chain)\npicking this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  lt = Tip\n  rt = Node lrnot rn rrnot", "have ord_rt: \"ordered rt var\""], ["proof (prove)\nusing this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  lt = Tip\n  rt = Node lrnot rn rrnot\n\ngoal (1 subgoal):\n 1. ordered rt var", "by simp"], ["proof (state)\nthis:\n  ordered rt var\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow> ordered not var", "from Node.prems"], ["proof (chain)\npicking this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)", "have ppo: \"p=po\""], ["proof (prove)\nusing this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n\ngoal (1 subgoal):\n 1. p = po", "by simp"], ["proof (state)\nthis:\n  p = po\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow> ordered not var", "from Node.prems"], ["proof (chain)\npicking this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)", "have ponN: \"po \\<noteq> Null\""], ["proof (prove)\nusing this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n\ngoal (1 subgoal):\n 1. po \\<noteq> Null", "by auto"], ["proof (state)\nthis:\n  po \\<noteq> Null\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow> ordered not var", "with ppo ponN ltTip Node.prems"], ["proof (chain)\npicking this:\n  p = po\n  po \\<noteq> Null\n  lt = Tip\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  po \\<noteq> Null", "have *: \"Dag (high po) low high rt\""], ["proof (prove)\nusing this:\n  p = po\n  po \\<noteq> Null\n  lt = Tip\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  po \\<noteq> Null\n\ngoal (1 subgoal):\n 1. Dag (high po) low high rt", "by auto"], ["proof (state)\nthis:\n  Dag (high po) low high rt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow> ordered not var", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. ordered not var", "proof (cases \"no=po\")"], ["proof (state)\ngoal (2 subgoals):\n 1. no = po \\<Longrightarrow> ordered not var\n 2. no \\<noteq> po \\<Longrightarrow> ordered not var", "case True"], ["proof (state)\nthis:\n  no = po\n\ngoal (2 subgoals):\n 1. no = po \\<Longrightarrow> ordered not var\n 2. no \\<noteq> po \\<Longrightarrow> ordered not var", "with ppo Node.prems"], ["proof (chain)\npicking this:\n  p = po\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  no = po", "have \"not = Node lt po rt\""], ["proof (prove)\nusing this:\n  p = po\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  no = po\n\ngoal (1 subgoal):\n 1. not = Node lt po rt", "by (simp del: Dag_Ref add: Dag_unique)"], ["proof (state)\nthis:\n  not = Node lt po rt\n\ngoal (2 subgoals):\n 1. no = po \\<Longrightarrow> ordered not var\n 2. no \\<noteq> po \\<Longrightarrow> ordered not var", "with Node.prems"], ["proof (chain)\npicking this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  not = Node lt po rt", "show ?thesis"], ["proof (prove)\nusing this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  not = Node lt po rt\n\ngoal (1 subgoal):\n 1. ordered not var", "by simp"], ["proof (state)\nthis:\n  ordered not var\n\ngoal (1 subgoal):\n 1. no \\<noteq> po \\<Longrightarrow> ordered not var", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. no \\<noteq> po \\<Longrightarrow> ordered not var", "case False"], ["proof (state)\nthis:\n  no \\<noteq> po\n\ngoal (1 subgoal):\n 1. no \\<noteq> po \\<Longrightarrow> ordered not var", "with Node.prems ltTip"], ["proof (chain)\npicking this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  lt = Tip\n  no \\<noteq> po", "have \"no \\<in> set_of rt\""], ["proof (prove)\nusing this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  lt = Tip\n  no \\<noteq> po\n\ngoal (1 subgoal):\n 1. no \\<in> set_of rt", "by simp"], ["proof (state)\nthis:\n  no \\<in> set_of rt\n\ngoal (1 subgoal):\n 1. no \\<noteq> po \\<Longrightarrow> ordered not var", "with ord_rt * \\<open>Dag no low high not\\<close>"], ["proof (chain)\npicking this:\n  ordered rt var\n  Dag (high po) low high rt\n  Dag no low high not\n  no \\<in> set_of rt", "show ?thesis"], ["proof (prove)\nusing this:\n  ordered rt var\n  Dag (high po) low high rt\n  Dag no low high not\n  no \\<in> set_of rt\n\ngoal (1 subgoal):\n 1. ordered not var", "by (rule Node.hyps)"], ["proof (state)\nthis:\n  ordered not var\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ordered not var\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ordered not var\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow> ordered not var", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow> ordered not var", "case (Node llt l rlt)"], ["proof (state)\nthis:\n  lt = Node llt l rlt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow> ordered not var", "note ltNode=this"], ["proof (state)\nthis:\n  lt = Node llt l rlt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow> ordered not var", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. ordered not var", "proof (cases rt)"], ["proof (state)\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow> ordered not var\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow> ordered not var", "case Tip"], ["proof (state)\nthis:\n  rt = Tip\n\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow> ordered not var\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow> ordered not var", "from Node.prems Tip ltNode"], ["proof (chain)\npicking this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  rt = Tip\n  lt = Node llt l rlt", "have ord_lt: \"ordered lt var\""], ["proof (prove)\nusing this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  rt = Tip\n  lt = Node llt l rlt\n\ngoal (1 subgoal):\n 1. ordered lt var", "by simp"], ["proof (state)\nthis:\n  ordered lt var\n\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow> ordered not var\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow> ordered not var", "from Node.prems"], ["proof (chain)\npicking this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)", "have ppo: \"p=po\""], ["proof (prove)\nusing this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n\ngoal (1 subgoal):\n 1. p = po", "by simp"], ["proof (state)\nthis:\n  p = po\n\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow> ordered not var\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow> ordered not var", "from Node.prems"], ["proof (chain)\npicking this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)", "have ponN: \"po \\<noteq> Null\""], ["proof (prove)\nusing this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n\ngoal (1 subgoal):\n 1. po \\<noteq> Null", "by auto"], ["proof (state)\nthis:\n  po \\<noteq> Null\n\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow> ordered not var\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow> ordered not var", "with ppo ponN Tip Node.prems ltNode"], ["proof (chain)\npicking this:\n  p = po\n  po \\<noteq> Null\n  rt = Tip\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  lt = Node llt l rlt\n  po \\<noteq> Null", "have *: \"Dag (low po) low high lt\""], ["proof (prove)\nusing this:\n  p = po\n  po \\<noteq> Null\n  rt = Tip\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  lt = Node llt l rlt\n  po \\<noteq> Null\n\ngoal (1 subgoal):\n 1. Dag (low po) low high lt", "by auto"], ["proof (state)\nthis:\n  Dag (low po) low high lt\n\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow> ordered not var\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow> ordered not var", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. ordered not var", "proof (cases \"no=po\")"], ["proof (state)\ngoal (2 subgoals):\n 1. no = po \\<Longrightarrow> ordered not var\n 2. no \\<noteq> po \\<Longrightarrow> ordered not var", "case True"], ["proof (state)\nthis:\n  no = po\n\ngoal (2 subgoals):\n 1. no = po \\<Longrightarrow> ordered not var\n 2. no \\<noteq> po \\<Longrightarrow> ordered not var", "with ppo Node.prems"], ["proof (chain)\npicking this:\n  p = po\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  no = po", "have \"not = (Node lt po rt)\""], ["proof (prove)\nusing this:\n  p = po\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  no = po\n\ngoal (1 subgoal):\n 1. not = Node lt po rt", "by (simp del: Dag_Ref add: Dag_unique)"], ["proof (state)\nthis:\n  not = Node lt po rt\n\ngoal (2 subgoals):\n 1. no = po \\<Longrightarrow> ordered not var\n 2. no \\<noteq> po \\<Longrightarrow> ordered not var", "with Node.prems"], ["proof (chain)\npicking this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  not = Node lt po rt", "show ?thesis"], ["proof (prove)\nusing this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  not = Node lt po rt\n\ngoal (1 subgoal):\n 1. ordered not var", "by simp"], ["proof (state)\nthis:\n  ordered not var\n\ngoal (1 subgoal):\n 1. no \\<noteq> po \\<Longrightarrow> ordered not var", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. no \\<noteq> po \\<Longrightarrow> ordered not var", "case False"], ["proof (state)\nthis:\n  no \\<noteq> po\n\ngoal (1 subgoal):\n 1. no \\<noteq> po \\<Longrightarrow> ordered not var", "with Node.prems Tip"], ["proof (chain)\npicking this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  rt = Tip\n  no \\<noteq> po", "have \"no \\<in> set_of lt\""], ["proof (prove)\nusing this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  rt = Tip\n  no \\<noteq> po\n\ngoal (1 subgoal):\n 1. no \\<in> set_of lt", "by simp"], ["proof (state)\nthis:\n  no \\<in> set_of lt\n\ngoal (1 subgoal):\n 1. no \\<noteq> po \\<Longrightarrow> ordered not var", "with ord_lt * \\<open>Dag no low high not\\<close>"], ["proof (chain)\npicking this:\n  ordered lt var\n  Dag (low po) low high lt\n  Dag no low high not\n  no \\<in> set_of lt", "show ?thesis"], ["proof (prove)\nusing this:\n  ordered lt var\n  Dag (low po) low high lt\n  Dag no low high not\n  no \\<in> set_of lt\n\ngoal (1 subgoal):\n 1. ordered not var", "by (rule Node.hyps)"], ["proof (state)\nthis:\n  ordered not var\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ordered not var\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow> ordered not var", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow> ordered not var", "case (Node lrt r rrt)"], ["proof (state)\nthis:\n  rt = Node lrt r rrt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow> ordered not var", "from Node.prems"], ["proof (chain)\npicking this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)", "have ppo: \"p=po\""], ["proof (prove)\nusing this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n\ngoal (1 subgoal):\n 1. p = po", "by simp"], ["proof (state)\nthis:\n  p = po\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow> ordered not var", "from Node.prems Node ltNode"], ["proof (chain)\npicking this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  rt = Node lrt r rrt\n  lt = Node llt l rlt", "have ord_lt: \"ordered lt var\""], ["proof (prove)\nusing this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  rt = Node lrt r rrt\n  lt = Node llt l rlt\n\ngoal (1 subgoal):\n 1. ordered lt var", "by simp"], ["proof (state)\nthis:\n  ordered lt var\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow> ordered not var", "from Node.prems Node ltNode"], ["proof (chain)\npicking this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  rt = Node lrt r rrt\n  lt = Node llt l rlt", "have ord_rt: \"ordered rt var\""], ["proof (prove)\nusing this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  rt = Node lrt r rrt\n  lt = Node llt l rlt\n\ngoal (1 subgoal):\n 1. ordered rt var", "by simp"], ["proof (state)\nthis:\n  ordered rt var\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow> ordered not var", "from Node.prems"], ["proof (chain)\npicking this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)", "have ponN: \"po \\<noteq> Null\""], ["proof (prove)\nusing this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n\ngoal (1 subgoal):\n 1. po \\<noteq> Null", "by auto"], ["proof (state)\nthis:\n  po \\<noteq> Null\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow> ordered not var", "with ppo ponN Node Node.prems ltNode"], ["proof (chain)\npicking this:\n  p = po\n  po \\<noteq> Null\n  rt = Node lrt r rrt\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  lt = Node llt l rlt\n  po \\<noteq> Null", "have lt_Dag: \"Dag (low po) low high lt\""], ["proof (prove)\nusing this:\n  p = po\n  po \\<noteq> Null\n  rt = Node lrt r rrt\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  lt = Node llt l rlt\n  po \\<noteq> Null\n\ngoal (1 subgoal):\n 1. Dag (low po) low high lt", "by auto"], ["proof (state)\nthis:\n  Dag (low po) low high lt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow> ordered not var", "with ppo ponN Node Node.prems ltNode"], ["proof (chain)\npicking this:\n  p = po\n  po \\<noteq> Null\n  rt = Node lrt r rrt\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  lt = Node llt l rlt\n  Dag (low po) low high lt", "have rt_Dag: \"Dag (high po) low high rt\""], ["proof (prove)\nusing this:\n  p = po\n  po \\<noteq> Null\n  rt = Node lrt r rrt\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  lt = Node llt l rlt\n  Dag (low po) low high lt\n\ngoal (1 subgoal):\n 1. Dag (high po) low high rt", "by auto"], ["proof (state)\nthis:\n  Dag (high po) low high rt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow> ordered not var", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. ordered not var", "proof (cases \"no = po\")"], ["proof (state)\ngoal (2 subgoals):\n 1. no = po \\<Longrightarrow> ordered not var\n 2. no \\<noteq> po \\<Longrightarrow> ordered not var", "case True"], ["proof (state)\nthis:\n  no = po\n\ngoal (2 subgoals):\n 1. no = po \\<Longrightarrow> ordered not var\n 2. no \\<noteq> po \\<Longrightarrow> ordered not var", "with ppo Node.prems"], ["proof (chain)\npicking this:\n  p = po\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  no = po", "have \"not = (Node lt po rt)\""], ["proof (prove)\nusing this:\n  p = po\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  no = po\n\ngoal (1 subgoal):\n 1. not = Node lt po rt", "by (simp del: Dag_Ref add: Dag_unique)"], ["proof (state)\nthis:\n  not = Node lt po rt\n\ngoal (2 subgoals):\n 1. no = po \\<Longrightarrow> ordered not var\n 2. no \\<noteq> po \\<Longrightarrow> ordered not var", "with Node.prems"], ["proof (chain)\npicking this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  not = Node lt po rt", "show ?thesis"], ["proof (prove)\nusing this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  not = Node lt po rt\n\ngoal (1 subgoal):\n 1. ordered not var", "by simp"], ["proof (state)\nthis:\n  ordered not var\n\ngoal (1 subgoal):\n 1. no \\<noteq> po \\<Longrightarrow> ordered not var", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. no \\<noteq> po \\<Longrightarrow> ordered not var", "assume \"no \\<noteq> po\""], ["proof (state)\nthis:\n  no \\<noteq> po\n\ngoal (1 subgoal):\n 1. no \\<noteq> po \\<Longrightarrow> ordered not var", "with Node.prems"], ["proof (chain)\npicking this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  no \\<noteq> po", "have no_in_lt_or_rt: \"no \\<in> set_of lt \\<or> no \\<in> set_of rt\""], ["proof (prove)\nusing this:\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  no \\<noteq> po\n\ngoal (1 subgoal):\n 1. no \\<in> set_of lt \\<or> no \\<in> set_of rt", "by simp"], ["proof (state)\nthis:\n  no \\<in> set_of lt \\<or> no \\<in> set_of rt\n\ngoal (1 subgoal):\n 1. no \\<noteq> po \\<Longrightarrow> ordered not var", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. ordered not var", "proof (cases \"no \\<in> set_of lt\")"], ["proof (state)\ngoal (2 subgoals):\n 1. no \\<in> set_of lt \\<Longrightarrow> ordered not var\n 2. no \\<notin> set_of lt \\<Longrightarrow> ordered not var", "case True"], ["proof (state)\nthis:\n  no \\<in> set_of lt\n\ngoal (2 subgoals):\n 1. no \\<in> set_of lt \\<Longrightarrow> ordered not var\n 2. no \\<notin> set_of lt \\<Longrightarrow> ordered not var", "with ord_lt lt_Dag Node.prems"], ["proof (chain)\npicking this:\n  ordered lt var\n  Dag (low po) low high lt\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  no \\<in> set_of lt", "show ?thesis"], ["proof (prove)\nusing this:\n  ordered lt var\n  Dag (low po) low high lt\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  no \\<in> set_of lt\n\ngoal (1 subgoal):\n 1. ordered not var", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ordered lt var; Dag (low po) low high lt;\n     ordered (Node lt po rt) var; Dag p low high (Node lt po rt);\n     Dag no low high not; no \\<in> set_of (Node lt po rt);\n     no \\<in> set_of lt\\<rbrakk>\n    \\<Longrightarrow> ordered not var", "apply (rule Node.hyps)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>ordered lt var; Dag (low po) low high lt;\n     ordered (Node lt po rt) var; Dag p low high (Node lt po rt);\n     Dag no low high not; no \\<in> set_of (Node lt po rt);\n     no \\<in> set_of lt\\<rbrakk>\n    \\<Longrightarrow> ordered lt var\n 2. \\<lbrakk>ordered lt var; Dag (low po) low high lt;\n     ordered (Node lt po rt) var; Dag p low high (Node lt po rt);\n     Dag no low high not; no \\<in> set_of (Node lt po rt);\n     no \\<in> set_of lt\\<rbrakk>\n    \\<Longrightarrow> Dag ?p7 low high lt\n 3. \\<lbrakk>ordered lt var; Dag (low po) low high lt;\n     ordered (Node lt po rt) var; Dag p low high (Node lt po rt);\n     Dag no low high not; no \\<in> set_of (Node lt po rt);\n     no \\<in> set_of lt\\<rbrakk>\n    \\<Longrightarrow> Dag ?no7 low high not\n 4. \\<lbrakk>ordered lt var; Dag (low po) low high lt;\n     ordered (Node lt po rt) var; Dag p low high (Node lt po rt);\n     Dag no low high not; no \\<in> set_of (Node lt po rt);\n     no \\<in> set_of lt\\<rbrakk>\n    \\<Longrightarrow> ?no7 \\<in> set_of lt", "apply assumption+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ordered not var\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lt \\<Longrightarrow> ordered not var", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. no \\<notin> set_of lt \\<Longrightarrow> ordered not var", "assume \" no \\<notin> set_of lt\""], ["proof (state)\nthis:\n  no \\<notin> set_of lt\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lt \\<Longrightarrow> ordered not var", "with no_in_lt_or_rt"], ["proof (chain)\npicking this:\n  no \\<in> set_of lt \\<or> no \\<in> set_of rt\n  no \\<notin> set_of lt", "have no_in_rt: \"no \\<in> set_of rt\""], ["proof (prove)\nusing this:\n  no \\<in> set_of lt \\<or> no \\<in> set_of rt\n  no \\<notin> set_of lt\n\ngoal (1 subgoal):\n 1. no \\<in> set_of rt", "by simp"], ["proof (state)\nthis:\n  no \\<in> set_of rt\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lt \\<Longrightarrow> ordered not var", "from Node.hyps"], ["proof (chain)\npicking this:\n  \\<lbrakk>ordered lt var; Dag ?p low high lt; Dag ?no low high ?not;\n   ?no \\<in> set_of lt\\<rbrakk>\n  \\<Longrightarrow> ordered ?not var\n  \\<lbrakk>ordered rt var; Dag ?p low high rt; Dag ?no low high ?not;\n   ?no \\<in> set_of rt\\<rbrakk>\n  \\<Longrightarrow> ordered ?not var", "have hyp2: \n            \"\\<And>p no not. \\<lbrakk>ordered rt var; Dag p low high rt; Dag no low high not; no \\<in> set_of rt\\<rbrakk> \n            \\<Longrightarrow> ordered not var\""], ["proof (prove)\nusing this:\n  \\<lbrakk>ordered lt var; Dag ?p low high lt; Dag ?no low high ?not;\n   ?no \\<in> set_of lt\\<rbrakk>\n  \\<Longrightarrow> ordered ?not var\n  \\<lbrakk>ordered rt var; Dag ?p low high rt; Dag ?no low high ?not;\n   ?no \\<in> set_of rt\\<rbrakk>\n  \\<Longrightarrow> ordered ?not var\n\ngoal (1 subgoal):\n 1. \\<And>p no not.\n       \\<lbrakk>ordered rt var; Dag p low high rt; Dag no low high not;\n        no \\<in> set_of rt\\<rbrakk>\n       \\<Longrightarrow> ordered not var", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p no not.\n       \\<lbrakk>ordered rt var; Dag p low high rt; Dag no low high not;\n        no \\<in> set_of rt;\n        \\<And>p no not.\n           \\<lbrakk>ordered lt var; Dag p low high lt; Dag no low high not;\n            no \\<in> set_of lt\\<rbrakk>\n           \\<Longrightarrow> ordered not var;\n        \\<And>p no not.\n           \\<lbrakk>ordered rt var; Dag p low high rt; Dag no low high not;\n            no \\<in> set_of rt\\<rbrakk>\n           \\<Longrightarrow> ordered not var\\<rbrakk>\n       \\<Longrightarrow> ordered not var", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<lbrakk>ordered rt var; Dag ?p low high rt; Dag ?no low high ?not;\n   ?no \\<in> set_of rt\\<rbrakk>\n  \\<Longrightarrow> ordered ?not var\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lt \\<Longrightarrow> ordered not var", "from no_in_rt ord_rt rt_Dag Node.prems"], ["proof (chain)\npicking this:\n  no \\<in> set_of rt\n  ordered rt var\n  Dag (high po) low high rt\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)", "show ?thesis"], ["proof (prove)\nusing this:\n  no \\<in> set_of rt\n  ordered rt var\n  Dag (high po) low high rt\n  ordered (Node lt po rt) var\n  Dag p low high (Node lt po rt)\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n\ngoal (1 subgoal):\n 1. ordered not var", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>no \\<in> set_of rt; ordered rt var; Dag (high po) low high rt;\n     ordered (Node lt po rt) var; Dag p low high (Node lt po rt);\n     Dag no low high not; no \\<in> set_of (Node lt po rt)\\<rbrakk>\n    \\<Longrightarrow> ordered not var", "apply (rule hyp2)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>no \\<in> set_of rt; ordered rt var; Dag (high po) low high rt;\n     ordered (Node lt po rt) var; Dag p low high (Node lt po rt);\n     Dag no low high not; no \\<in> set_of (Node lt po rt)\\<rbrakk>\n    \\<Longrightarrow> ordered rt var\n 2. \\<lbrakk>no \\<in> set_of rt; ordered rt var; Dag (high po) low high rt;\n     ordered (Node lt po rt) var; Dag p low high (Node lt po rt);\n     Dag no low high not; no \\<in> set_of (Node lt po rt)\\<rbrakk>\n    \\<Longrightarrow> Dag ?p7 low high rt\n 3. \\<lbrakk>no \\<in> set_of rt; ordered rt var; Dag (high po) low high rt;\n     ordered (Node lt po rt) var; Dag p low high (Node lt po rt);\n     Dag no low high not; no \\<in> set_of (Node lt po rt)\\<rbrakk>\n    \\<Longrightarrow> Dag ?no7 low high not\n 4. \\<lbrakk>no \\<in> set_of rt; ordered rt var; Dag (high po) low high rt;\n     ordered (Node lt po rt) var; Dag p low high (Node lt po rt);\n     Dag no low high not; no \\<in> set_of (Node lt po rt)\\<rbrakk>\n    \\<Longrightarrow> ?no7 \\<in> set_of rt", "apply assumption+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ordered not var\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ordered not var\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ordered not var\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ordered not var\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ordered not var\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma elem_set_of: \"\\<And> x st. \\<lbrakk>x \\<in> set_of st; set_of st \\<subseteq> set_of t\\<rbrakk> \\<Longrightarrow> x \\<in> set_of t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x st.\n       \\<lbrakk>x \\<in> set_of st; set_of st \\<subseteq> set_of t\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of t", "by blast"], ["", "(*procedure Levellist converts a dag with root p in a ref list list (levellist) with nodes of var = i in \nlevellist ! i. \nIn order to convert the two datastructures a dag traversal is required using a mark on nodes. m indicates\nthe value which is assumed for a node to be marked. \n(\\<exists> nt. Dag n \\<^bsup>\\<sigma>\\<^esup>low \\<^bsup>\\<sigma>\\<^esup>high nt \\<and> \n                        {\\<^bsup>\\<sigma>\\<^esup>m} = set_of (dag_map \\<^bsup>\\<sigma>\\<^esup>mark nt))*)"], ["", "definition wf_ll :: \"dag \\<Rightarrow> ref list list \\<Rightarrow> (ref \\<Rightarrow> nat) \\<Rightarrow> bool\"\nwhere\n\"wf_ll t levellist var =\n  ((\\<forall>p. p \\<in> set_of t \\<longrightarrow> p \\<in> set (levellist ! var p)) \\<and>\n   (\\<forall>k < length levellist. \\<forall>p \\<in> set (levellist ! k). p \\<in> set_of t \\<and> var p = k))\""], ["", "definition cong_eval :: \"bdt \\<Rightarrow> bdt \\<Rightarrow> bool\" (infix \"\\<sim>\" 60)\n  where \"cong_eval bdt\\<^sub>1 bdt\\<^sub>2 = (eval bdt\\<^sub>1 = eval bdt\\<^sub>2)\""], ["", "lemma cong_eval_sym: \"l \\<sim> r = r \\<sim> l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l \\<sim> r = r \\<sim> l", "by (auto simp add: cong_eval_def)"], ["", "lemma cong_eval_trans: \"\\<lbrakk> l \\<sim> r; r \\<sim> t\\<rbrakk> \\<Longrightarrow> l \\<sim> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>l \\<sim> r; r \\<sim> t\\<rbrakk> \\<Longrightarrow> l \\<sim> t", "by (simp add: cong_eval_def)"], ["", "lemma cong_eval_child_high: \" l \\<sim> r \\<Longrightarrow> r \\<sim> (Bdt_Node l v r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l \\<sim> r \\<Longrightarrow> r \\<sim> Bdt_Node l v r", "apply (simp add: cong_eval_def )"], ["proof (prove)\ngoal (1 subgoal):\n 1. eval l = eval r \\<Longrightarrow> eval r = eval (Bdt_Node l v r)", "apply (rule ext)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       eval l = eval r \\<Longrightarrow> eval r x = eval (Bdt_Node l v r) x", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma cong_eval_child_low: \" l \\<sim> r \\<Longrightarrow> l \\<sim> (Bdt_Node l v r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l \\<sim> r \\<Longrightarrow> l \\<sim> Bdt_Node l v r", "apply (simp add: cong_eval_def )"], ["proof (prove)\ngoal (1 subgoal):\n 1. eval l = eval r \\<Longrightarrow> eval r = eval (Bdt_Node l v r)", "apply (rule ext)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       eval l = eval r \\<Longrightarrow> eval r x = eval (Bdt_Node l v r) x", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition null_comp :: \"(ref \\<Rightarrow> ref) \\<Rightarrow> (ref \\<Rightarrow> ref) \\<Rightarrow> (ref \\<Rightarrow> ref)\" (infix \"\\<propto>\" 60)\n  where \"null_comp a b = (\\<lambda> p. (if (b p) = Null then Null else ((a \\<circ> b) p)))\""], ["", "lemma null_comp_not_Null [simp]: \"h q \\<noteq> Null \\<Longrightarrow> (g \\<propto> h) q = g (h q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h q \\<noteq> Null \\<Longrightarrow> (g \\<propto> h) q = g (h q)", "by (simp add: null_comp_def)"], ["", "lemma id_trans: \"(a \\<propto> id) (b (c p)) = (a \\<propto> b) (c p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<propto> id) (b (c p)) = (a \\<propto> b) (c p)", "by (simp add: null_comp_def)"], ["", "definition Nodes :: \"nat \\<Rightarrow> ref list list \\<Rightarrow> ref set\"\n  where \"Nodes i levellist = (\\<Union>k\\<in>{k. k < i} . set (levellist ! k))\""], ["", "inductive_set Dags :: \"ref set \\<Rightarrow> (ref \\<Rightarrow> ref) \\<Rightarrow> (ref \\<Rightarrow> ref) \\<Rightarrow> dag set\"\n  for \"nodes\" \"low\" \"high\"\nwhere\n  DagsI: \"\\<lbrakk> set_of t \\<subseteq>  nodes; Dag p low high t; t \\<noteq> Tip\\<rbrakk> \n           \\<Longrightarrow> t \\<in> Dags nodes low high\""], ["", "lemma empty_Dags [simp]: \"Dags {} low high = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dags {} low high = {}", "apply rule"], ["proof (prove)\ngoal (2 subgoals):\n 1. Dags {} low high \\<subseteq> {}\n 2. {} \\<subseteq> Dags {} low high", "apply rule"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> Dags {} low high \\<Longrightarrow> x \\<in> {}\n 2. {} \\<subseteq> Dags {} low high", "apply (erule Dags.cases)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x t p.\n       \\<lbrakk>x = t; set_of t \\<subseteq> {}; Dag p low high t;\n        t \\<noteq> Tip\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}\n 2. {} \\<subseteq> Dags {} low high", "apply (case_tac t)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x t p.\n       \\<lbrakk>x = t; set_of t \\<subseteq> {}; Dag p low high t;\n        t \\<noteq> Tip; t = Tip\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}\n 2. \\<And>x t p x21 x22 x23.\n       \\<lbrakk>x = t; set_of t \\<subseteq> {}; Dag p low high t;\n        t \\<noteq> Tip; t = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}\n 3. {} \\<subseteq> Dags {} low high", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x t p x21 x22 x23.\n       \\<lbrakk>x = t; set_of t \\<subseteq> {}; Dag p low high t;\n        t \\<noteq> Tip; t = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}\n 2. {} \\<subseteq> Dags {} low high", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<subseteq> Dags {} low high", "apply rule"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition isLeaf_pt :: \"ref \\<Rightarrow> (ref \\<Rightarrow> ref) \\<Rightarrow> (ref \\<Rightarrow> ref) \\<Rightarrow> bool\"\n  where \"isLeaf_pt p low high = (low p = Null \\<and> high p = Null)\""], ["", "definition repNodes_eq :: \"ref \\<Rightarrow> ref \\<Rightarrow> (ref \\<Rightarrow> ref) \\<Rightarrow> (ref \\<Rightarrow> ref) \\<Rightarrow> (ref \\<Rightarrow> ref) \\<Rightarrow> bool\"\nwhere\n \"repNodes_eq p q low high rep == \n      (rep \\<propto> high) p = (rep \\<propto> high) q \\<and> (rep \\<propto> low) p = (rep \\<propto> low) q\""], ["", "definition isomorphic_dags_eq :: \"dag \\<Rightarrow> dag \\<Rightarrow> (ref \\<Rightarrow> nat) \\<Rightarrow> bool\"\nwhere\n\"isomorphic_dags_eq st\\<^sub>1 st\\<^sub>2 var =\n    (\\<forall>bdt\\<^sub>1 bdt\\<^sub>2. (bdt st\\<^sub>1 var = Some bdt\\<^sub>1 \\<and> bdt st\\<^sub>2 var = Some bdt\\<^sub>2 \\<and> (bdt\\<^sub>1 = bdt\\<^sub>2))\n                 \\<longrightarrow> st\\<^sub>1 = st\\<^sub>2)\""], ["", "lemma isomorphic_dags_eq_sym: \"isomorphic_dags_eq st\\<^sub>1 st\\<^sub>2 var = isomorphic_dags_eq st\\<^sub>2 st\\<^sub>1  var\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isomorphic_dags_eq st\\<^sub>1 st\\<^sub>2 var =\n    isomorphic_dags_eq st\\<^sub>2 st\\<^sub>1 var", "by (auto simp add: isomorphic_dags_eq_def)"], ["", "(*consts subdags_shared :: \"dag \\<Rightarrow> dag \\<Rightarrow> (ref \\<Rightarrow> nat) \\<Rightarrow> bool\"\ndefs subdags_shared_def : \"subdags_shared t1 t2 var == \\<forall> st1 st2. (st1 <= t1 \\<and> st2 <= t2) \\<longrightarrow> shared_prop st1 st2 var\"\n\nconsts shared :: \" dag \\<Rightarrow> dag \\<Rightarrow> (ref \\<Rightarrow> nat) \\<Rightarrow> bool\"\ndefs shared_def: \"shared t1 t2 var == subdags_shared t1 t1 var \\<and> subdags_shared t2 t2 var \\<and> subdags_shared t1 t2 var\"*)"], ["", "definition shared :: \"dag \\<Rightarrow> (ref \\<Rightarrow> nat) \\<Rightarrow> bool\"\n  where \"shared t var = (\\<forall>st\\<^sub>1 st\\<^sub>2. (st\\<^sub>1 <= t \\<and> st\\<^sub>2 <= t) \\<longrightarrow> isomorphic_dags_eq st\\<^sub>1 st\\<^sub>2 var)\""], ["", "(* shared returns True if the Dag has no different subdags which represent the same \nbdts. \nNote: The two subdags can have different references and code the same bdt nevertheless!\nconsts shared :: \"dag \\<Rightarrow> (ref \\<Rightarrow> nat) \\<Rightarrow> bool\"\ndefs shared_def: \"shared t bdtvar \\<equiv> \\<forall> st1 st2. (subdag t st1 \\<and> subdag t st2 \\<and> \n                       (bdt st1 bdtvar = bdt st2 bdtvar \\<longrightarrow> st1 = st2))\"\n\nconsts shared_lower_levels :: \"dag \\<Rightarrow> nat \\<Rightarrow> (ref \\<Rightarrow> nat) \\<Rightarrow> bool\"\ndefs shared_lower_levels_def : \"shared_lower_levels t i bdtvar == \\<forall> st1 st2. (st1 < t \\<and> st2 < t \\<and> bdtvar (root st1) < i \\<and> bdtvar (root st2) < i \\<and>\n                                    (bdt st1 bdtvar = bdt st2 bdtvar \\<longrightarrow> st1 = st2))\"\n*)"], ["", "fun reduced :: \"dag \\<Rightarrow> bool\" where\n  \"reduced Tip = True\"\n| \"reduced (Node Tip v Tip) = True\"\n| \"reduced (Node l v r) = (l \\<noteq> r \\<and> reduced l \\<and> reduced r)\""], ["", "primrec reduced_bdt :: \"bdt \\<Rightarrow> bool\"\nwhere\n  \"reduced_bdt Zero = True\"\n| \"reduced_bdt One = True\"\n| \"reduced_bdt (Bdt_Node lbdt v rbdt) =\n    (if lbdt = rbdt then False \n     else (reduced_bdt lbdt \\<and> reduced_bdt rbdt))\""], ["", "lemma replicate_elem: \"i < n ==>  (replicate n x !i) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < n \\<Longrightarrow> replicate n x ! i = x", "apply (induct n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. i < 0 \\<Longrightarrow> replicate 0 x ! i = x\n 2. \\<And>n.\n       \\<lbrakk>i < n \\<Longrightarrow> replicate n x ! i = x;\n        i < Suc n\\<rbrakk>\n       \\<Longrightarrow> replicate (Suc n) x ! i = x", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>i < n \\<Longrightarrow> replicate n x ! i = x;\n        i < Suc n\\<rbrakk>\n       \\<Longrightarrow> replicate (Suc n) x ! i = x", "apply (cases i)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>i < n \\<Longrightarrow> replicate n x ! i = x; i < Suc n;\n        i = 0\\<rbrakk>\n       \\<Longrightarrow> replicate (Suc n) x ! i = x\n 2. \\<And>n nat.\n       \\<lbrakk>i < n \\<Longrightarrow> replicate n x ! i = x; i < Suc n;\n        i = Suc nat\\<rbrakk>\n       \\<Longrightarrow> replicate (Suc n) x ! i = x", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma no_in_one_ll: \n \"\\<lbrakk>wf_ll pret levellista var; i<length levellista; j < length levellista; \n   no \\<in> set (levellista ! i); i\\<noteq>j\\<rbrakk> \n  \\<Longrightarrow> no \\<notin> set (levellista ! j) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_ll pret levellista var; i < length levellista;\n     j < length levellista; no \\<in> set (levellista ! i);\n     i \\<noteq> j\\<rbrakk>\n    \\<Longrightarrow> no \\<notin> set (levellista ! j)", "apply (unfold wf_ll_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<forall>p.\n                 p \\<in> set_of pret \\<longrightarrow>\n                 p \\<in> set (levellista ! var p)) \\<and>\n             (\\<forall>k<length levellista.\n                 \\<forall>p\\<in>set (levellista ! k).\n                    p \\<in> set_of pret \\<and> var p = k);\n     i < length levellista; j < length levellista;\n     no \\<in> set (levellista ! i); i \\<noteq> j\\<rbrakk>\n    \\<Longrightarrow> no \\<notin> set (levellista ! j)", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i < length levellista; j < length levellista;\n     no \\<in> set (levellista ! i); i \\<noteq> j;\n     \\<forall>p.\n        p \\<in> set_of pret \\<longrightarrow>\n        p \\<in> set (levellista ! var p);\n     \\<forall>k<length levellista.\n        \\<forall>p\\<in>set (levellista ! k).\n           p \\<in> set_of pret \\<and> var p = k\\<rbrakk>\n    \\<Longrightarrow> no \\<notin> set (levellista ! j)", "apply (rotate_tac 5)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>k<length levellista.\n                \\<forall>p\\<in>set (levellista ! k).\n                   p \\<in> set_of pret \\<and> var p = k;\n     i < length levellista; j < length levellista;\n     no \\<in> set (levellista ! i); i \\<noteq> j;\n     \\<forall>p.\n        p \\<in> set_of pret \\<longrightarrow>\n        p \\<in> set (levellista ! var p)\\<rbrakk>\n    \\<Longrightarrow> no \\<notin> set (levellista ! j)", "apply (frule_tac x = i and ?R= \"no \\<in> set_of pret \\<and> var no = i\" in allE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>k<length levellista.\n                \\<forall>p\\<in>set (levellista ! k).\n                   p \\<in> set_of pret \\<and> var p = k;\n     i < length levellista; j < length levellista;\n     no \\<in> set (levellista ! i); i \\<noteq> j;\n     \\<forall>p.\n        p \\<in> set_of pret \\<longrightarrow>\n        p \\<in> set (levellista ! var p);\n     i < length levellista \\<longrightarrow>\n     (\\<forall>p\\<in>set (levellista ! i).\n         p \\<in> set_of pret \\<and> var p = i)\\<rbrakk>\n    \\<Longrightarrow> no \\<in> set_of pret \\<and> var no = i\n 2. \\<lbrakk>\\<forall>k<length levellista.\n                \\<forall>p\\<in>set (levellista ! k).\n                   p \\<in> set_of pret \\<and> var p = k;\n     i < length levellista; j < length levellista;\n     no \\<in> set (levellista ! i); i \\<noteq> j;\n     \\<forall>p.\n        p \\<in> set_of pret \\<longrightarrow>\n        p \\<in> set (levellista ! var p);\n     no \\<in> set_of pret \\<and> var no = i\\<rbrakk>\n    \\<Longrightarrow> no \\<notin> set (levellista ! j)", "apply (erule impE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<forall>k<length levellista.\n                \\<forall>p\\<in>set (levellista ! k).\n                   p \\<in> set_of pret \\<and> var p = k;\n     i < length levellista; j < length levellista;\n     no \\<in> set (levellista ! i); i \\<noteq> j;\n     \\<forall>p.\n        p \\<in> set_of pret \\<longrightarrow>\n        p \\<in> set (levellista ! var p)\\<rbrakk>\n    \\<Longrightarrow> i < length levellista\n 2. \\<lbrakk>\\<forall>k<length levellista.\n                \\<forall>p\\<in>set (levellista ! k).\n                   p \\<in> set_of pret \\<and> var p = k;\n     i < length levellista; j < length levellista;\n     no \\<in> set (levellista ! i); i \\<noteq> j;\n     \\<forall>p.\n        p \\<in> set_of pret \\<longrightarrow>\n        p \\<in> set (levellista ! var p);\n     \\<forall>p\\<in>set (levellista ! i).\n        p \\<in> set_of pret \\<and> var p = i\\<rbrakk>\n    \\<Longrightarrow> no \\<in> set_of pret \\<and> var no = i\n 3. \\<lbrakk>\\<forall>k<length levellista.\n                \\<forall>p\\<in>set (levellista ! k).\n                   p \\<in> set_of pret \\<and> var p = k;\n     i < length levellista; j < length levellista;\n     no \\<in> set (levellista ! i); i \\<noteq> j;\n     \\<forall>p.\n        p \\<in> set_of pret \\<longrightarrow>\n        p \\<in> set (levellista ! var p);\n     no \\<in> set_of pret \\<and> var no = i\\<rbrakk>\n    \\<Longrightarrow> no \\<notin> set (levellista ! j)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>k<length levellista.\n                \\<forall>p\\<in>set (levellista ! k).\n                   p \\<in> set_of pret \\<and> var p = k;\n     i < length levellista; j < length levellista;\n     no \\<in> set (levellista ! i); i \\<noteq> j;\n     \\<forall>p.\n        p \\<in> set_of pret \\<longrightarrow>\n        p \\<in> set (levellista ! var p);\n     \\<forall>p\\<in>set (levellista ! i).\n        p \\<in> set_of pret \\<and> var p = i\\<rbrakk>\n    \\<Longrightarrow> no \\<in> set_of pret \\<and> var no = i\n 2. \\<lbrakk>\\<forall>k<length levellista.\n                \\<forall>p\\<in>set (levellista ! k).\n                   p \\<in> set_of pret \\<and> var p = k;\n     i < length levellista; j < length levellista;\n     no \\<in> set (levellista ! i); i \\<noteq> j;\n     \\<forall>p.\n        p \\<in> set_of pret \\<longrightarrow>\n        p \\<in> set (levellista ! var p);\n     no \\<in> set_of pret \\<and> var no = i\\<rbrakk>\n    \\<Longrightarrow> no \\<notin> set (levellista ! j)", "apply (rotate_tac 6)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>p\\<in>set (levellista ! i).\n                p \\<in> set_of pret \\<and> var p = i;\n     \\<forall>k<length levellista.\n        \\<forall>p\\<in>set (levellista ! k).\n           p \\<in> set_of pret \\<and> var p = k;\n     i < length levellista; j < length levellista;\n     no \\<in> set (levellista ! i); i \\<noteq> j;\n     \\<forall>p.\n        p \\<in> set_of pret \\<longrightarrow>\n        p \\<in> set (levellista ! var p)\\<rbrakk>\n    \\<Longrightarrow> no \\<in> set_of pret \\<and> var no = i\n 2. \\<lbrakk>\\<forall>k<length levellista.\n                \\<forall>p\\<in>set (levellista ! k).\n                   p \\<in> set_of pret \\<and> var p = k;\n     i < length levellista; j < length levellista;\n     no \\<in> set (levellista ! i); i \\<noteq> j;\n     \\<forall>p.\n        p \\<in> set_of pret \\<longrightarrow>\n        p \\<in> set (levellista ! var p);\n     no \\<in> set_of pret \\<and> var no = i\\<rbrakk>\n    \\<Longrightarrow> no \\<notin> set (levellista ! j)", "apply (erule_tac x=no in ballE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<forall>k<length levellista.\n                \\<forall>p\\<in>set (levellista ! k).\n                   p \\<in> set_of pret \\<and> var p = k;\n     i < length levellista; j < length levellista;\n     no \\<in> set (levellista ! i); i \\<noteq> j;\n     \\<forall>p.\n        p \\<in> set_of pret \\<longrightarrow>\n        p \\<in> set (levellista ! var p);\n     no \\<in> set_of pret \\<and> var no = i\\<rbrakk>\n    \\<Longrightarrow> no \\<in> set_of pret \\<and> var no = i\n 2. \\<lbrakk>\\<forall>k<length levellista.\n                \\<forall>p\\<in>set (levellista ! k).\n                   p \\<in> set_of pret \\<and> var p = k;\n     i < length levellista; j < length levellista;\n     no \\<in> set (levellista ! i); i \\<noteq> j;\n     \\<forall>p.\n        p \\<in> set_of pret \\<longrightarrow>\n        p \\<in> set (levellista ! var p);\n     no \\<notin> set (levellista ! i)\\<rbrakk>\n    \\<Longrightarrow> no \\<in> set_of pret \\<and> var no = i\n 3. \\<lbrakk>\\<forall>k<length levellista.\n                \\<forall>p\\<in>set (levellista ! k).\n                   p \\<in> set_of pret \\<and> var p = k;\n     i < length levellista; j < length levellista;\n     no \\<in> set (levellista ! i); i \\<noteq> j;\n     \\<forall>p.\n        p \\<in> set_of pret \\<longrightarrow>\n        p \\<in> set (levellista ! var p);\n     no \\<in> set_of pret \\<and> var no = i\\<rbrakk>\n    \\<Longrightarrow> no \\<notin> set (levellista ! j)", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>k<length levellista.\n                \\<forall>p\\<in>set (levellista ! k).\n                   p \\<in> set_of pret \\<and> var p = k;\n     i < length levellista; j < length levellista;\n     no \\<in> set (levellista ! i); i \\<noteq> j;\n     \\<forall>p.\n        p \\<in> set_of pret \\<longrightarrow>\n        p \\<in> set (levellista ! var p);\n     no \\<notin> set (levellista ! i)\\<rbrakk>\n    \\<Longrightarrow> no \\<in> set_of pret \\<and> var no = i\n 2. \\<lbrakk>\\<forall>k<length levellista.\n                \\<forall>p\\<in>set (levellista ! k).\n                   p \\<in> set_of pret \\<and> var p = k;\n     i < length levellista; j < length levellista;\n     no \\<in> set (levellista ! i); i \\<noteq> j;\n     \\<forall>p.\n        p \\<in> set_of pret \\<longrightarrow>\n        p \\<in> set (levellista ! var p);\n     no \\<in> set_of pret \\<and> var no = i\\<rbrakk>\n    \\<Longrightarrow> no \\<notin> set (levellista ! j)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>k<length levellista.\n                \\<forall>p\\<in>set (levellista ! k).\n                   p \\<in> set_of pret \\<and> var p = k;\n     i < length levellista; j < length levellista;\n     no \\<in> set (levellista ! i); i \\<noteq> j;\n     \\<forall>p.\n        p \\<in> set_of pret \\<longrightarrow>\n        p \\<in> set (levellista ! var p);\n     no \\<in> set_of pret \\<and> var no = i\\<rbrakk>\n    \\<Longrightarrow> no \\<notin> set (levellista ! j)", "apply (cases \"no \\<notin> set (levellista ! j)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>k<length levellista.\n                \\<forall>p\\<in>set (levellista ! k).\n                   p \\<in> set_of pret \\<and> var p = k;\n     i < length levellista; j < length levellista;\n     no \\<in> set (levellista ! i); i \\<noteq> j;\n     \\<forall>p.\n        p \\<in> set_of pret \\<longrightarrow>\n        p \\<in> set (levellista ! var p);\n     no \\<in> set_of pret \\<and> var no = i;\n     no \\<notin> set (levellista ! j)\\<rbrakk>\n    \\<Longrightarrow> no \\<notin> set (levellista ! j)\n 2. \\<lbrakk>\\<forall>k<length levellista.\n                \\<forall>p\\<in>set (levellista ! k).\n                   p \\<in> set_of pret \\<and> var p = k;\n     i < length levellista; j < length levellista;\n     no \\<in> set (levellista ! i); i \\<noteq> j;\n     \\<forall>p.\n        p \\<in> set_of pret \\<longrightarrow>\n        p \\<in> set (levellista ! var p);\n     no \\<in> set_of pret \\<and> var no = i;\n     \\<not> no \\<notin> set (levellista ! j)\\<rbrakk>\n    \\<Longrightarrow> no \\<notin> set (levellista ! j)", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>k<length levellista.\n                \\<forall>p\\<in>set (levellista ! k).\n                   p \\<in> set_of pret \\<and> var p = k;\n     i < length levellista; j < length levellista;\n     no \\<in> set (levellista ! i); i \\<noteq> j;\n     \\<forall>p.\n        p \\<in> set_of pret \\<longrightarrow>\n        p \\<in> set (levellista ! var p);\n     no \\<in> set_of pret \\<and> var no = i;\n     \\<not> no \\<notin> set (levellista ! j)\\<rbrakk>\n    \\<Longrightarrow> no \\<notin> set (levellista ! j)", "apply (erule_tac x=j in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i < length levellista; j < length levellista;\n     no \\<in> set (levellista ! i); i \\<noteq> j;\n     \\<forall>p.\n        p \\<in> set_of pret \\<longrightarrow>\n        p \\<in> set (levellista ! var p);\n     no \\<in> set_of pret \\<and> var no = i;\n     \\<not> no \\<notin> set (levellista ! j);\n     j < length levellista \\<longrightarrow>\n     (\\<forall>p\\<in>set (levellista ! j).\n         p \\<in> set_of pret \\<and> var p = j)\\<rbrakk>\n    \\<Longrightarrow> no \\<notin> set (levellista ! j)", "apply (erule impE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>i < length levellista; j < length levellista;\n     no \\<in> set (levellista ! i); i \\<noteq> j;\n     \\<forall>p.\n        p \\<in> set_of pret \\<longrightarrow>\n        p \\<in> set (levellista ! var p);\n     no \\<in> set_of pret \\<and> var no = i;\n     \\<not> no \\<notin> set (levellista ! j)\\<rbrakk>\n    \\<Longrightarrow> j < length levellista\n 2. \\<lbrakk>i < length levellista; j < length levellista;\n     no \\<in> set (levellista ! i); i \\<noteq> j;\n     \\<forall>p.\n        p \\<in> set_of pret \\<longrightarrow>\n        p \\<in> set (levellista ! var p);\n     no \\<in> set_of pret \\<and> var no = i;\n     \\<not> no \\<notin> set (levellista ! j);\n     \\<forall>p\\<in>set (levellista ! j).\n        p \\<in> set_of pret \\<and> var p = j\\<rbrakk>\n    \\<Longrightarrow> no \\<notin> set (levellista ! j)", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i < length levellista; j < length levellista;\n     no \\<in> set (levellista ! i); i \\<noteq> j;\n     \\<forall>p.\n        p \\<in> set_of pret \\<longrightarrow>\n        p \\<in> set (levellista ! var p);\n     no \\<in> set_of pret \\<and> var no = i;\n     \\<not> no \\<notin> set (levellista ! j);\n     \\<forall>p\\<in>set (levellista ! j).\n        p \\<in> set_of pret \\<and> var p = j\\<rbrakk>\n    \\<Longrightarrow> no \\<notin> set (levellista ! j)", "apply (rotate_tac 7)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>p\\<in>set (levellista ! j).\n                p \\<in> set_of pret \\<and> var p = j;\n     i < length levellista; j < length levellista;\n     no \\<in> set (levellista ! i); i \\<noteq> j;\n     \\<forall>p.\n        p \\<in> set_of pret \\<longrightarrow>\n        p \\<in> set (levellista ! var p);\n     no \\<in> set_of pret \\<and> var no = i;\n     \\<not> no \\<notin> set (levellista ! j)\\<rbrakk>\n    \\<Longrightarrow> no \\<notin> set (levellista ! j)", "apply (erule_tac x=no in ballE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>i < length levellista; j < length levellista;\n     no \\<in> set (levellista ! i); i \\<noteq> j;\n     \\<forall>p.\n        p \\<in> set_of pret \\<longrightarrow>\n        p \\<in> set (levellista ! var p);\n     no \\<in> set_of pret \\<and> var no = i;\n     \\<not> no \\<notin> set (levellista ! j);\n     no \\<in> set_of pret \\<and> var no = j\\<rbrakk>\n    \\<Longrightarrow> no \\<notin> set (levellista ! j)\n 2. \\<lbrakk>i < length levellista; j < length levellista;\n     no \\<in> set (levellista ! i); i \\<noteq> j;\n     \\<forall>p.\n        p \\<in> set_of pret \\<longrightarrow>\n        p \\<in> set (levellista ! var p);\n     no \\<in> set_of pret \\<and> var no = i;\n     \\<not> no \\<notin> set (levellista ! j);\n     no \\<notin> set (levellista ! j)\\<rbrakk>\n    \\<Longrightarrow> no \\<notin> set (levellista ! j)", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>i < length levellista; j < length levellista;\n     no \\<in> set (levellista ! i); i \\<noteq> j;\n     \\<forall>p.\n        p \\<in> set_of pret \\<longrightarrow>\n        p \\<in> set (levellista ! var p);\n     no \\<in> set_of pret \\<and> var no = i;\n     \\<not> no \\<notin> set (levellista ! j);\n     no \\<notin> set (levellista ! j)\\<rbrakk>\n    \\<Longrightarrow> no \\<notin> set (levellista ! j)\n 2. \\<lbrakk>i < length levellista; j < length levellista;\n     no \\<in> set (levellista ! i); i \\<noteq> j;\n     \\<forall>p.\n        p \\<in> set_of pret \\<longrightarrow>\n        p \\<in> set (levellista ! var p);\n     no \\<in> set_of pret \\<and> var no = i;\n     \\<not> no \\<notin> set (levellista ! j);\n     no \\<in> set_of pret \\<and> var no = j\\<rbrakk>\n    \\<Longrightarrow> no \\<notin> set (levellista ! j)", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i < length levellista; j < length levellista;\n     no \\<in> set (levellista ! i); i \\<noteq> j;\n     \\<forall>p.\n        p \\<in> set_of pret \\<longrightarrow>\n        p \\<in> set (levellista ! var p);\n     no \\<in> set_of pret \\<and> var no = i;\n     \\<not> no \\<notin> set (levellista ! j);\n     no \\<in> set_of pret \\<and> var no = j\\<rbrakk>\n    \\<Longrightarrow> no \\<notin> set (levellista ! j)", "apply (elim conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i < length levellista; j < length levellista;\n     no \\<in> set (levellista ! i); i \\<noteq> j;\n     \\<forall>p.\n        p \\<in> set_of pret \\<longrightarrow>\n        p \\<in> set (levellista ! var p);\n     \\<not> no \\<notin> set (levellista ! j); no \\<in> set_of pret;\n     var no = i; no \\<in> set_of pret; var no = j\\<rbrakk>\n    \\<Longrightarrow> no \\<notin> set (levellista ! j)", "apply (thin_tac \"\\<forall>q. q \\<in> set_of pret \\<longrightarrow> q \\<in> set (levellista ! var q)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i < length levellista; j < length levellista;\n     no \\<in> set (levellista ! i); i \\<noteq> j;\n     \\<not> no \\<notin> set (levellista ! j); no \\<in> set_of pret;\n     var no = i; no \\<in> set_of pret; var no = j\\<rbrakk>\n    \\<Longrightarrow> no \\<notin> set (levellista ! j)", "apply fastforce"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma nodes_in_wf_ll: \n\"\\<lbrakk>wf_ll pret levellista var; i < length levellista;  no \\<in> set (levellista ! i)\\<rbrakk> \n \\<Longrightarrow> var no = i \\<and> no \\<in> set_of pret\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_ll pret levellista var; i < length levellista;\n     no \\<in> set (levellista ! i)\\<rbrakk>\n    \\<Longrightarrow> var no = i \\<and> no \\<in> set_of pret", "apply (simp add: wf_ll_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma subelem_set_of_low: \n\"\\<And> p. \\<lbrakk> x \\<in> set_of t; x \\<noteq> Null; low x \\<noteq> Null; Dag p low high t \\<rbrakk> \n \\<Longrightarrow> (low x) \\<in> set_of t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>x \\<in> set_of t; x \\<noteq> Null; low x \\<noteq> Null;\n        Dag p low high t\\<rbrakk>\n       \\<Longrightarrow> low x \\<in> set_of t", "proof (induct t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>x \\<in> set_of Tip; x \\<noteq> Null; low x \\<noteq> Null;\n        Dag p low high Tip\\<rbrakk>\n       \\<Longrightarrow> low x \\<in> set_of Tip\n 2. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>x \\<in> set_of t1; x \\<noteq> Null;\n                    low x \\<noteq> Null; Dag p low high t1\\<rbrakk>\n                   \\<Longrightarrow> low x \\<in> set_of t1;\n        \\<And>p.\n           \\<lbrakk>x \\<in> set_of t2; x \\<noteq> Null; low x \\<noteq> Null;\n            Dag p low high t2\\<rbrakk>\n           \\<Longrightarrow> low x \\<in> set_of t2;\n        x \\<in> set_of (Node t1 x2 t2); x \\<noteq> Null;\n        low x \\<noteq> Null; Dag p low high (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> low x \\<in> set_of (Node t1 x2 t2)", "case Tip"], ["proof (state)\nthis:\n  x \\<in> set_of Tip\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high Tip\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>x \\<in> set_of Tip; x \\<noteq> Null; low x \\<noteq> Null;\n        Dag p low high Tip\\<rbrakk>\n       \\<Longrightarrow> low x \\<in> set_of Tip\n 2. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>x \\<in> set_of t1; x \\<noteq> Null;\n                    low x \\<noteq> Null; Dag p low high t1\\<rbrakk>\n                   \\<Longrightarrow> low x \\<in> set_of t1;\n        \\<And>p.\n           \\<lbrakk>x \\<in> set_of t2; x \\<noteq> Null; low x \\<noteq> Null;\n            Dag p low high t2\\<rbrakk>\n           \\<Longrightarrow> low x \\<in> set_of t2;\n        x \\<in> set_of (Node t1 x2 t2); x \\<noteq> Null;\n        low x \\<noteq> Null; Dag p low high (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> low x \\<in> set_of (Node t1 x2 t2)", "then"], ["proof (chain)\npicking this:\n  x \\<in> set_of Tip\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high Tip", "show ?case"], ["proof (prove)\nusing this:\n  x \\<in> set_of Tip\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high Tip\n\ngoal (1 subgoal):\n 1. low x \\<in> set_of Tip", "by simp"], ["proof (state)\nthis:\n  low x \\<in> set_of Tip\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>x \\<in> set_of t1; x \\<noteq> Null;\n                    low x \\<noteq> Null; Dag p low high t1\\<rbrakk>\n                   \\<Longrightarrow> low x \\<in> set_of t1;\n        \\<And>p.\n           \\<lbrakk>x \\<in> set_of t2; x \\<noteq> Null; low x \\<noteq> Null;\n            Dag p low high t2\\<rbrakk>\n           \\<Longrightarrow> low x \\<in> set_of t2;\n        x \\<in> set_of (Node t1 x2 t2); x \\<noteq> Null;\n        low x \\<noteq> Null; Dag p low high (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> low x \\<in> set_of (Node t1 x2 t2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>x \\<in> set_of t1; x \\<noteq> Null;\n                    low x \\<noteq> Null; Dag p low high t1\\<rbrakk>\n                   \\<Longrightarrow> low x \\<in> set_of t1;\n        \\<And>p.\n           \\<lbrakk>x \\<in> set_of t2; x \\<noteq> Null; low x \\<noteq> Null;\n            Dag p low high t2\\<rbrakk>\n           \\<Longrightarrow> low x \\<in> set_of t2;\n        x \\<in> set_of (Node t1 x2 t2); x \\<noteq> Null;\n        low x \\<noteq> Null; Dag p low high (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> low x \\<in> set_of (Node t1 x2 t2)", "case (Node lt po rt)"], ["proof (state)\nthis:\n  \\<lbrakk>x \\<in> set_of lt; x \\<noteq> Null; low x \\<noteq> Null;\n   Dag ?p low high lt\\<rbrakk>\n  \\<Longrightarrow> low x \\<in> set_of lt\n  \\<lbrakk>x \\<in> set_of rt; x \\<noteq> Null; low x \\<noteq> Null;\n   Dag ?p low high rt\\<rbrakk>\n  \\<Longrightarrow> low x \\<in> set_of rt\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>x \\<in> set_of t1; x \\<noteq> Null;\n                    low x \\<noteq> Null; Dag p low high t1\\<rbrakk>\n                   \\<Longrightarrow> low x \\<in> set_of t1;\n        \\<And>p.\n           \\<lbrakk>x \\<in> set_of t2; x \\<noteq> Null; low x \\<noteq> Null;\n            Dag p low high t2\\<rbrakk>\n           \\<Longrightarrow> low x \\<in> set_of t2;\n        x \\<in> set_of (Node t1 x2 t2); x \\<noteq> Null;\n        low x \\<noteq> Null; Dag p low high (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> low x \\<in> set_of (Node t1 x2 t2)", "note tNode=this"], ["proof (state)\nthis:\n  \\<lbrakk>x \\<in> set_of lt; x \\<noteq> Null; low x \\<noteq> Null;\n   Dag ?p low high lt\\<rbrakk>\n  \\<Longrightarrow> low x \\<in> set_of lt\n  \\<lbrakk>x \\<in> set_of rt; x \\<noteq> Null; low x \\<noteq> Null;\n   Dag ?p low high rt\\<rbrakk>\n  \\<Longrightarrow> low x \\<in> set_of rt\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>x \\<in> set_of t1; x \\<noteq> Null;\n                    low x \\<noteq> Null; Dag p low high t1\\<rbrakk>\n                   \\<Longrightarrow> low x \\<in> set_of t1;\n        \\<And>p.\n           \\<lbrakk>x \\<in> set_of t2; x \\<noteq> Null; low x \\<noteq> Null;\n            Dag p low high t2\\<rbrakk>\n           \\<Longrightarrow> low x \\<in> set_of t2;\n        x \\<in> set_of (Node t1 x2 t2); x \\<noteq> Null;\n        low x \\<noteq> Null; Dag p low high (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> low x \\<in> set_of (Node t1 x2 t2)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>x \\<in> set_of lt; x \\<noteq> Null; low x \\<noteq> Null;\n   Dag ?p low high lt\\<rbrakk>\n  \\<Longrightarrow> low x \\<in> set_of lt\n  \\<lbrakk>x \\<in> set_of rt; x \\<noteq> Null; low x \\<noteq> Null;\n   Dag ?p low high rt\\<rbrakk>\n  \\<Longrightarrow> low x \\<in> set_of rt\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high (Node lt po rt)", "have ppo: \"p=po\""], ["proof (prove)\nusing this:\n  \\<lbrakk>x \\<in> set_of lt; x \\<noteq> Null; low x \\<noteq> Null;\n   Dag ?p low high lt\\<rbrakk>\n  \\<Longrightarrow> low x \\<in> set_of lt\n  \\<lbrakk>x \\<in> set_of rt; x \\<noteq> Null; low x \\<noteq> Null;\n   Dag ?p low high rt\\<rbrakk>\n  \\<Longrightarrow> low x \\<in> set_of rt\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n\ngoal (1 subgoal):\n 1. p = po", "by simp"], ["proof (state)\nthis:\n  p = po\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>x \\<in> set_of t1; x \\<noteq> Null;\n                    low x \\<noteq> Null; Dag p low high t1\\<rbrakk>\n                   \\<Longrightarrow> low x \\<in> set_of t1;\n        \\<And>p.\n           \\<lbrakk>x \\<in> set_of t2; x \\<noteq> Null; low x \\<noteq> Null;\n            Dag p low high t2\\<rbrakk>\n           \\<Longrightarrow> low x \\<in> set_of t2;\n        x \\<in> set_of (Node t1 x2 t2); x \\<noteq> Null;\n        low x \\<noteq> Null; Dag p low high (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> low x \\<in> set_of (Node t1 x2 t2)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. low x \\<in> set_of (Node lt po rt)", "proof (cases \"x=p\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = p \\<Longrightarrow> low x \\<in> set_of (Node lt po rt)\n 2. x \\<noteq> p \\<Longrightarrow> low x \\<in> set_of (Node lt po rt)", "case True"], ["proof (state)\nthis:\n  x = p\n\ngoal (2 subgoals):\n 1. x = p \\<Longrightarrow> low x \\<in> set_of (Node lt po rt)\n 2. x \\<noteq> p \\<Longrightarrow> low x \\<in> set_of (Node lt po rt)", "with Node.prems"], ["proof (chain)\npicking this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  x = p", "have lxrootlt: \"low x = root lt\""], ["proof (prove)\nusing this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  x = p\n\ngoal (1 subgoal):\n 1. low x = root lt", "proof (cases lt)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n     low x \\<noteq> Null; Dag p low high (Node lt po rt); x = p;\n     lt = Tip\\<rbrakk>\n    \\<Longrightarrow> low x = root lt\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n        low x \\<noteq> Null; Dag p low high (Node lt po rt); x = p;\n        lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> low x = root lt", "case Tip"], ["proof (state)\nthis:\n  lt = Tip\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n     low x \\<noteq> Null; Dag p low high (Node lt po rt); x = p;\n     lt = Tip\\<rbrakk>\n    \\<Longrightarrow> low x = root lt\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n        low x \\<noteq> Null; Dag p low high (Node lt po rt); x = p;\n        lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> low x = root lt", "with True Node.prems"], ["proof (chain)\npicking this:\n  x = p\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  lt = Tip", "show ?thesis"], ["proof (prove)\nusing this:\n  x = p\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  lt = Tip\n\ngoal (1 subgoal):\n 1. low x = root lt", "by auto"], ["proof (state)\nthis:\n  low x = root lt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n        low x \\<noteq> Null; Dag p low high (Node lt po rt); x = p;\n        lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> low x = root lt", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n        low x \\<noteq> Null; Dag p low high (Node lt po rt); x = p;\n        lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> low x = root lt", "case (Node llt l rlt)"], ["proof (state)\nthis:\n  lt = Node llt l rlt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n        low x \\<noteq> Null; Dag p low high (Node lt po rt); x = p;\n        lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> low x = root lt", "with Node.prems True"], ["proof (chain)\npicking this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  x = p\n  lt = Node llt l rlt", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  x = p\n  lt = Node llt l rlt\n\ngoal (1 subgoal):\n 1. low x = root lt", "by auto"], ["proof (state)\nthis:\n  low x = root lt\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  low x = root lt\n\ngoal (2 subgoals):\n 1. x = p \\<Longrightarrow> low x \\<in> set_of (Node lt po rt)\n 2. x \\<noteq> p \\<Longrightarrow> low x \\<in> set_of (Node lt po rt)", "with True Node.prems"], ["proof (chain)\npicking this:\n  x = p\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  low x = root lt", "have \"low x \\<in> set_of (Node lt p rt)\""], ["proof (prove)\nusing this:\n  x = p\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  low x = root lt\n\ngoal (1 subgoal):\n 1. low x \\<in> set_of (Node lt p rt)", "proof (cases lt)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>x = p; x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n     low x \\<noteq> Null; Dag p low high (Node lt po rt); low x = root lt;\n     lt = Tip\\<rbrakk>\n    \\<Longrightarrow> low x \\<in> set_of (Node lt p rt)\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>x = p; x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n        low x \\<noteq> Null; Dag p low high (Node lt po rt);\n        low x = root lt; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> low x \\<in> set_of (Node lt p rt)", "case Tip"], ["proof (state)\nthis:\n  lt = Tip\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x = p; x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n     low x \\<noteq> Null; Dag p low high (Node lt po rt); low x = root lt;\n     lt = Tip\\<rbrakk>\n    \\<Longrightarrow> low x \\<in> set_of (Node lt p rt)\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>x = p; x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n        low x \\<noteq> Null; Dag p low high (Node lt po rt);\n        low x = root lt; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> low x \\<in> set_of (Node lt p rt)", "with lxrootlt Node.prems"], ["proof (chain)\npicking this:\n  low x = root lt\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  lt = Tip", "show ?thesis"], ["proof (prove)\nusing this:\n  low x = root lt\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  lt = Tip\n\ngoal (1 subgoal):\n 1. low x \\<in> set_of (Node lt p rt)", "by simp"], ["proof (state)\nthis:\n  low x \\<in> set_of (Node lt p rt)\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>x = p; x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n        low x \\<noteq> Null; Dag p low high (Node lt po rt);\n        low x = root lt; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> low x \\<in> set_of (Node lt p rt)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>x = p; x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n        low x \\<noteq> Null; Dag p low high (Node lt po rt);\n        low x = root lt; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> low x \\<in> set_of (Node lt p rt)", "case (Node llt l rlt)"], ["proof (state)\nthis:\n  lt = Node llt l rlt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>x = p; x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n        low x \\<noteq> Null; Dag p low high (Node lt po rt);\n        low x = root lt; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> low x \\<in> set_of (Node lt p rt)", "with lxrootlt Node.prems"], ["proof (chain)\npicking this:\n  low x = root lt\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  lt = Node llt l rlt", "show ?thesis"], ["proof (prove)\nusing this:\n  low x = root lt\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  lt = Node llt l rlt\n\ngoal (1 subgoal):\n 1. low x \\<in> set_of (Node lt p rt)", "by simp"], ["proof (state)\nthis:\n  low x \\<in> set_of (Node lt p rt)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  low x \\<in> set_of (Node lt p rt)\n\ngoal (2 subgoals):\n 1. x = p \\<Longrightarrow> low x \\<in> set_of (Node lt po rt)\n 2. x \\<noteq> p \\<Longrightarrow> low x \\<in> set_of (Node lt po rt)", "with ppo"], ["proof (chain)\npicking this:\n  p = po\n  low x \\<in> set_of (Node lt p rt)", "show ?thesis"], ["proof (prove)\nusing this:\n  p = po\n  low x \\<in> set_of (Node lt p rt)\n\ngoal (1 subgoal):\n 1. low x \\<in> set_of (Node lt po rt)", "by simp"], ["proof (state)\nthis:\n  low x \\<in> set_of (Node lt po rt)\n\ngoal (1 subgoal):\n 1. x \\<noteq> p \\<Longrightarrow> low x \\<in> set_of (Node lt po rt)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> p \\<Longrightarrow> low x \\<in> set_of (Node lt po rt)", "assume xnp: \" x \\<noteq> p\""], ["proof (state)\nthis:\n  x \\<noteq> p\n\ngoal (1 subgoal):\n 1. x \\<noteq> p \\<Longrightarrow> low x \\<in> set_of (Node lt po rt)", "with Node.prems"], ["proof (chain)\npicking this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  x \\<noteq> p", "have \"x \\<in> set_of lt \\<or> x \\<in> set_of rt\""], ["proof (prove)\nusing this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  x \\<noteq> p\n\ngoal (1 subgoal):\n 1. x \\<in> set_of lt \\<or> x \\<in> set_of rt", "by simp"], ["proof (state)\nthis:\n  x \\<in> set_of lt \\<or> x \\<in> set_of rt\n\ngoal (1 subgoal):\n 1. x \\<noteq> p \\<Longrightarrow> low x \\<in> set_of (Node lt po rt)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. low x \\<in> set_of (Node lt po rt)", "proof (cases \"x \\<in> set_of lt\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> set_of lt \\<Longrightarrow> low x \\<in> set_of (Node lt po rt)\n 2. x \\<notin> set_of lt \\<Longrightarrow>\n    low x \\<in> set_of (Node lt po rt)", "case True"], ["proof (state)\nthis:\n  x \\<in> set_of lt\n\ngoal (2 subgoals):\n 1. x \\<in> set_of lt \\<Longrightarrow> low x \\<in> set_of (Node lt po rt)\n 2. x \\<notin> set_of lt \\<Longrightarrow>\n    low x \\<in> set_of (Node lt po rt)", "note xinlt=this"], ["proof (state)\nthis:\n  x \\<in> set_of lt\n\ngoal (2 subgoals):\n 1. x \\<in> set_of lt \\<Longrightarrow> low x \\<in> set_of (Node lt po rt)\n 2. x \\<notin> set_of lt \\<Longrightarrow>\n    low x \\<in> set_of (Node lt po rt)", "from Node.prems"], ["proof (chain)\npicking this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high (Node lt po rt)", "have \"Dag (low p) low high lt\""], ["proof (prove)\nusing this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n\ngoal (1 subgoal):\n 1. Dag (low p) low high lt", "by fastforce"], ["proof (state)\nthis:\n  Dag (low p) low high lt\n\ngoal (2 subgoals):\n 1. x \\<in> set_of lt \\<Longrightarrow> low x \\<in> set_of (Node lt po rt)\n 2. x \\<notin> set_of lt \\<Longrightarrow>\n    low x \\<in> set_of (Node lt po rt)", "with Node.prems True"], ["proof (chain)\npicking this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  x \\<in> set_of lt\n  Dag (low p) low high lt", "have \"low x \\<in> set_of lt\""], ["proof (prove)\nusing this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  x \\<in> set_of lt\n  Dag (low p) low high lt\n\ngoal (1 subgoal):\n 1. low x \\<in> set_of lt", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n     low x \\<noteq> Null; Dag p low high (Node lt po rt); x \\<in> set_of lt;\n     Dag (low p) low high lt\\<rbrakk>\n    \\<Longrightarrow> low x \\<in> set_of lt", "apply (rule Node.hyps)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n     low x \\<noteq> Null; Dag p low high (Node lt po rt); x \\<in> set_of lt;\n     Dag (low p) low high lt\\<rbrakk>\n    \\<Longrightarrow> x \\<in> set_of lt\n 2. \\<lbrakk>x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n     low x \\<noteq> Null; Dag p low high (Node lt po rt); x \\<in> set_of lt;\n     Dag (low p) low high lt\\<rbrakk>\n    \\<Longrightarrow> x \\<noteq> Null\n 3. \\<lbrakk>x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n     low x \\<noteq> Null; Dag p low high (Node lt po rt); x \\<in> set_of lt;\n     Dag (low p) low high lt\\<rbrakk>\n    \\<Longrightarrow> low x \\<noteq> Null\n 4. \\<lbrakk>x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n     low x \\<noteq> Null; Dag p low high (Node lt po rt); x \\<in> set_of lt;\n     Dag (low p) low high lt\\<rbrakk>\n    \\<Longrightarrow> Dag ?p6 low high lt", "apply assumption+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  low x \\<in> set_of lt\n\ngoal (2 subgoals):\n 1. x \\<in> set_of lt \\<Longrightarrow> low x \\<in> set_of (Node lt po rt)\n 2. x \\<notin> set_of lt \\<Longrightarrow>\n    low x \\<in> set_of (Node lt po rt)", "with Node.prems"], ["proof (chain)\npicking this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  low x \\<in> set_of lt", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  low x \\<in> set_of lt\n\ngoal (1 subgoal):\n 1. low x \\<in> set_of (Node lt po rt)", "by auto"], ["proof (state)\nthis:\n  low x \\<in> set_of (Node lt po rt)\n\ngoal (1 subgoal):\n 1. x \\<notin> set_of lt \\<Longrightarrow>\n    low x \\<in> set_of (Node lt po rt)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> set_of lt \\<Longrightarrow>\n    low x \\<in> set_of (Node lt po rt)", "assume xnotinlt: \" x \\<notin> set_of lt\""], ["proof (state)\nthis:\n  x \\<notin> set_of lt\n\ngoal (1 subgoal):\n 1. x \\<notin> set_of lt \\<Longrightarrow>\n    low x \\<in> set_of (Node lt po rt)", "with xnp Node.prems"], ["proof (chain)\npicking this:\n  x \\<noteq> p\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  x \\<notin> set_of lt", "have xinrt: \"x \\<in> set_of rt\""], ["proof (prove)\nusing this:\n  x \\<noteq> p\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  x \\<notin> set_of lt\n\ngoal (1 subgoal):\n 1. x \\<in> set_of rt", "by simp"], ["proof (state)\nthis:\n  x \\<in> set_of rt\n\ngoal (1 subgoal):\n 1. x \\<notin> set_of lt \\<Longrightarrow>\n    low x \\<in> set_of (Node lt po rt)", "from Node.prems"], ["proof (chain)\npicking this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high (Node lt po rt)", "have \"Dag (high p) low high rt\""], ["proof (prove)\nusing this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n\ngoal (1 subgoal):\n 1. Dag (high p) low high rt", "by fastforce"], ["proof (state)\nthis:\n  Dag (high p) low high rt\n\ngoal (1 subgoal):\n 1. x \\<notin> set_of lt \\<Longrightarrow>\n    low x \\<in> set_of (Node lt po rt)", "with Node.prems xinrt"], ["proof (chain)\npicking this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  x \\<in> set_of rt\n  Dag (high p) low high rt", "have \"low x \\<in> set_of rt\""], ["proof (prove)\nusing this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  x \\<in> set_of rt\n  Dag (high p) low high rt\n\ngoal (1 subgoal):\n 1. low x \\<in> set_of rt", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n     low x \\<noteq> Null; Dag p low high (Node lt po rt); x \\<in> set_of rt;\n     Dag (high p) low high rt\\<rbrakk>\n    \\<Longrightarrow> low x \\<in> set_of rt", "apply (rule Node.hyps)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n     low x \\<noteq> Null; Dag p low high (Node lt po rt); x \\<in> set_of rt;\n     Dag (high p) low high rt\\<rbrakk>\n    \\<Longrightarrow> x \\<in> set_of rt\n 2. \\<lbrakk>x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n     low x \\<noteq> Null; Dag p low high (Node lt po rt); x \\<in> set_of rt;\n     Dag (high p) low high rt\\<rbrakk>\n    \\<Longrightarrow> x \\<noteq> Null\n 3. \\<lbrakk>x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n     low x \\<noteq> Null; Dag p low high (Node lt po rt); x \\<in> set_of rt;\n     Dag (high p) low high rt\\<rbrakk>\n    \\<Longrightarrow> low x \\<noteq> Null\n 4. \\<lbrakk>x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n     low x \\<noteq> Null; Dag p low high (Node lt po rt); x \\<in> set_of rt;\n     Dag (high p) low high rt\\<rbrakk>\n    \\<Longrightarrow> Dag ?p6 low high rt", "apply assumption+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  low x \\<in> set_of rt\n\ngoal (1 subgoal):\n 1. x \\<notin> set_of lt \\<Longrightarrow>\n    low x \\<in> set_of (Node lt po rt)", "with Node.prems"], ["proof (chain)\npicking this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  low x \\<in> set_of rt", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  low x \\<in> set_of rt\n\ngoal (1 subgoal):\n 1. low x \\<in> set_of (Node lt po rt)", "by auto"], ["proof (state)\nthis:\n  low x \\<in> set_of (Node lt po rt)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  low x \\<in> set_of (Node lt po rt)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  low x \\<in> set_of (Node lt po rt)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subelem_set_of_high: \n\"\\<And> p. \\<lbrakk> x \\<in> set_of t; x \\<noteq> Null; high x \\<noteq> Null; Dag p low high t \\<rbrakk> \n \\<Longrightarrow> (high x) \\<in> set_of t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>x \\<in> set_of t; x \\<noteq> Null; high x \\<noteq> Null;\n        Dag p low high t\\<rbrakk>\n       \\<Longrightarrow> high x \\<in> set_of t", "proof (induct t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>x \\<in> set_of Tip; x \\<noteq> Null; high x \\<noteq> Null;\n        Dag p low high Tip\\<rbrakk>\n       \\<Longrightarrow> high x \\<in> set_of Tip\n 2. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>x \\<in> set_of t1; x \\<noteq> Null;\n                    high x \\<noteq> Null; Dag p low high t1\\<rbrakk>\n                   \\<Longrightarrow> high x \\<in> set_of t1;\n        \\<And>p.\n           \\<lbrakk>x \\<in> set_of t2; x \\<noteq> Null;\n            high x \\<noteq> Null; Dag p low high t2\\<rbrakk>\n           \\<Longrightarrow> high x \\<in> set_of t2;\n        x \\<in> set_of (Node t1 x2 t2); x \\<noteq> Null;\n        high x \\<noteq> Null; Dag p low high (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> high x \\<in> set_of (Node t1 x2 t2)", "case Tip"], ["proof (state)\nthis:\n  x \\<in> set_of Tip\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high Tip\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>x \\<in> set_of Tip; x \\<noteq> Null; high x \\<noteq> Null;\n        Dag p low high Tip\\<rbrakk>\n       \\<Longrightarrow> high x \\<in> set_of Tip\n 2. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>x \\<in> set_of t1; x \\<noteq> Null;\n                    high x \\<noteq> Null; Dag p low high t1\\<rbrakk>\n                   \\<Longrightarrow> high x \\<in> set_of t1;\n        \\<And>p.\n           \\<lbrakk>x \\<in> set_of t2; x \\<noteq> Null;\n            high x \\<noteq> Null; Dag p low high t2\\<rbrakk>\n           \\<Longrightarrow> high x \\<in> set_of t2;\n        x \\<in> set_of (Node t1 x2 t2); x \\<noteq> Null;\n        high x \\<noteq> Null; Dag p low high (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> high x \\<in> set_of (Node t1 x2 t2)", "then"], ["proof (chain)\npicking this:\n  x \\<in> set_of Tip\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high Tip", "show ?case"], ["proof (prove)\nusing this:\n  x \\<in> set_of Tip\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high Tip\n\ngoal (1 subgoal):\n 1. high x \\<in> set_of Tip", "by simp"], ["proof (state)\nthis:\n  high x \\<in> set_of Tip\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>x \\<in> set_of t1; x \\<noteq> Null;\n                    high x \\<noteq> Null; Dag p low high t1\\<rbrakk>\n                   \\<Longrightarrow> high x \\<in> set_of t1;\n        \\<And>p.\n           \\<lbrakk>x \\<in> set_of t2; x \\<noteq> Null;\n            high x \\<noteq> Null; Dag p low high t2\\<rbrakk>\n           \\<Longrightarrow> high x \\<in> set_of t2;\n        x \\<in> set_of (Node t1 x2 t2); x \\<noteq> Null;\n        high x \\<noteq> Null; Dag p low high (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> high x \\<in> set_of (Node t1 x2 t2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>x \\<in> set_of t1; x \\<noteq> Null;\n                    high x \\<noteq> Null; Dag p low high t1\\<rbrakk>\n                   \\<Longrightarrow> high x \\<in> set_of t1;\n        \\<And>p.\n           \\<lbrakk>x \\<in> set_of t2; x \\<noteq> Null;\n            high x \\<noteq> Null; Dag p low high t2\\<rbrakk>\n           \\<Longrightarrow> high x \\<in> set_of t2;\n        x \\<in> set_of (Node t1 x2 t2); x \\<noteq> Null;\n        high x \\<noteq> Null; Dag p low high (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> high x \\<in> set_of (Node t1 x2 t2)", "case (Node lt po rt)"], ["proof (state)\nthis:\n  \\<lbrakk>x \\<in> set_of lt; x \\<noteq> Null; high x \\<noteq> Null;\n   Dag ?p low high lt\\<rbrakk>\n  \\<Longrightarrow> high x \\<in> set_of lt\n  \\<lbrakk>x \\<in> set_of rt; x \\<noteq> Null; high x \\<noteq> Null;\n   Dag ?p low high rt\\<rbrakk>\n  \\<Longrightarrow> high x \\<in> set_of rt\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>x \\<in> set_of t1; x \\<noteq> Null;\n                    high x \\<noteq> Null; Dag p low high t1\\<rbrakk>\n                   \\<Longrightarrow> high x \\<in> set_of t1;\n        \\<And>p.\n           \\<lbrakk>x \\<in> set_of t2; x \\<noteq> Null;\n            high x \\<noteq> Null; Dag p low high t2\\<rbrakk>\n           \\<Longrightarrow> high x \\<in> set_of t2;\n        x \\<in> set_of (Node t1 x2 t2); x \\<noteq> Null;\n        high x \\<noteq> Null; Dag p low high (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> high x \\<in> set_of (Node t1 x2 t2)", "note tNode=this"], ["proof (state)\nthis:\n  \\<lbrakk>x \\<in> set_of lt; x \\<noteq> Null; high x \\<noteq> Null;\n   Dag ?p low high lt\\<rbrakk>\n  \\<Longrightarrow> high x \\<in> set_of lt\n  \\<lbrakk>x \\<in> set_of rt; x \\<noteq> Null; high x \\<noteq> Null;\n   Dag ?p low high rt\\<rbrakk>\n  \\<Longrightarrow> high x \\<in> set_of rt\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>x \\<in> set_of t1; x \\<noteq> Null;\n                    high x \\<noteq> Null; Dag p low high t1\\<rbrakk>\n                   \\<Longrightarrow> high x \\<in> set_of t1;\n        \\<And>p.\n           \\<lbrakk>x \\<in> set_of t2; x \\<noteq> Null;\n            high x \\<noteq> Null; Dag p low high t2\\<rbrakk>\n           \\<Longrightarrow> high x \\<in> set_of t2;\n        x \\<in> set_of (Node t1 x2 t2); x \\<noteq> Null;\n        high x \\<noteq> Null; Dag p low high (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> high x \\<in> set_of (Node t1 x2 t2)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>x \\<in> set_of lt; x \\<noteq> Null; high x \\<noteq> Null;\n   Dag ?p low high lt\\<rbrakk>\n  \\<Longrightarrow> high x \\<in> set_of lt\n  \\<lbrakk>x \\<in> set_of rt; x \\<noteq> Null; high x \\<noteq> Null;\n   Dag ?p low high rt\\<rbrakk>\n  \\<Longrightarrow> high x \\<in> set_of rt\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high (Node lt po rt)", "have ppo: \"p=po\""], ["proof (prove)\nusing this:\n  \\<lbrakk>x \\<in> set_of lt; x \\<noteq> Null; high x \\<noteq> Null;\n   Dag ?p low high lt\\<rbrakk>\n  \\<Longrightarrow> high x \\<in> set_of lt\n  \\<lbrakk>x \\<in> set_of rt; x \\<noteq> Null; high x \\<noteq> Null;\n   Dag ?p low high rt\\<rbrakk>\n  \\<Longrightarrow> high x \\<in> set_of rt\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n\ngoal (1 subgoal):\n 1. p = po", "by simp"], ["proof (state)\nthis:\n  p = po\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>x \\<in> set_of t1; x \\<noteq> Null;\n                    high x \\<noteq> Null; Dag p low high t1\\<rbrakk>\n                   \\<Longrightarrow> high x \\<in> set_of t1;\n        \\<And>p.\n           \\<lbrakk>x \\<in> set_of t2; x \\<noteq> Null;\n            high x \\<noteq> Null; Dag p low high t2\\<rbrakk>\n           \\<Longrightarrow> high x \\<in> set_of t2;\n        x \\<in> set_of (Node t1 x2 t2); x \\<noteq> Null;\n        high x \\<noteq> Null; Dag p low high (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> high x \\<in> set_of (Node t1 x2 t2)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. high x \\<in> set_of (Node lt po rt)", "proof (cases \"x=p\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = p \\<Longrightarrow> high x \\<in> set_of (Node lt po rt)\n 2. x \\<noteq> p \\<Longrightarrow> high x \\<in> set_of (Node lt po rt)", "case True"], ["proof (state)\nthis:\n  x = p\n\ngoal (2 subgoals):\n 1. x = p \\<Longrightarrow> high x \\<in> set_of (Node lt po rt)\n 2. x \\<noteq> p \\<Longrightarrow> high x \\<in> set_of (Node lt po rt)", "with Node.prems"], ["proof (chain)\npicking this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  x = p", "have lxrootlt: \"high x = root rt\""], ["proof (prove)\nusing this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  x = p\n\ngoal (1 subgoal):\n 1. high x = root rt", "proof (cases rt)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n     high x \\<noteq> Null; Dag p low high (Node lt po rt); x = p;\n     rt = Tip\\<rbrakk>\n    \\<Longrightarrow> high x = root rt\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n        high x \\<noteq> Null; Dag p low high (Node lt po rt); x = p;\n        rt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> high x = root rt", "case Tip"], ["proof (state)\nthis:\n  rt = Tip\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n     high x \\<noteq> Null; Dag p low high (Node lt po rt); x = p;\n     rt = Tip\\<rbrakk>\n    \\<Longrightarrow> high x = root rt\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n        high x \\<noteq> Null; Dag p low high (Node lt po rt); x = p;\n        rt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> high x = root rt", "with True Node.prems"], ["proof (chain)\npicking this:\n  x = p\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  rt = Tip", "show ?thesis"], ["proof (prove)\nusing this:\n  x = p\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  rt = Tip\n\ngoal (1 subgoal):\n 1. high x = root rt", "by auto"], ["proof (state)\nthis:\n  high x = root rt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n        high x \\<noteq> Null; Dag p low high (Node lt po rt); x = p;\n        rt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> high x = root rt", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n        high x \\<noteq> Null; Dag p low high (Node lt po rt); x = p;\n        rt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> high x = root rt", "case (Node lrt l rrt)"], ["proof (state)\nthis:\n  rt = Node lrt l rrt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n        high x \\<noteq> Null; Dag p low high (Node lt po rt); x = p;\n        rt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> high x = root rt", "with Node.prems True"], ["proof (chain)\npicking this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  x = p\n  rt = Node lrt l rrt", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  x = p\n  rt = Node lrt l rrt\n\ngoal (1 subgoal):\n 1. high x = root rt", "by auto"], ["proof (state)\nthis:\n  high x = root rt\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  high x = root rt\n\ngoal (2 subgoals):\n 1. x = p \\<Longrightarrow> high x \\<in> set_of (Node lt po rt)\n 2. x \\<noteq> p \\<Longrightarrow> high x \\<in> set_of (Node lt po rt)", "with True Node.prems"], ["proof (chain)\npicking this:\n  x = p\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  high x = root rt", "have \"high x \\<in> set_of (Node lt p rt)\""], ["proof (prove)\nusing this:\n  x = p\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  high x = root rt\n\ngoal (1 subgoal):\n 1. high x \\<in> set_of (Node lt p rt)", "proof (cases rt)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>x = p; x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n     high x \\<noteq> Null; Dag p low high (Node lt po rt); high x = root rt;\n     rt = Tip\\<rbrakk>\n    \\<Longrightarrow> high x \\<in> set_of (Node lt p rt)\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>x = p; x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n        high x \\<noteq> Null; Dag p low high (Node lt po rt);\n        high x = root rt; rt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> high x \\<in> set_of (Node lt p rt)", "case Tip"], ["proof (state)\nthis:\n  rt = Tip\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x = p; x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n     high x \\<noteq> Null; Dag p low high (Node lt po rt); high x = root rt;\n     rt = Tip\\<rbrakk>\n    \\<Longrightarrow> high x \\<in> set_of (Node lt p rt)\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>x = p; x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n        high x \\<noteq> Null; Dag p low high (Node lt po rt);\n        high x = root rt; rt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> high x \\<in> set_of (Node lt p rt)", "with lxrootlt Node.prems"], ["proof (chain)\npicking this:\n  high x = root rt\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  rt = Tip", "show ?thesis"], ["proof (prove)\nusing this:\n  high x = root rt\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  rt = Tip\n\ngoal (1 subgoal):\n 1. high x \\<in> set_of (Node lt p rt)", "by simp"], ["proof (state)\nthis:\n  high x \\<in> set_of (Node lt p rt)\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>x = p; x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n        high x \\<noteq> Null; Dag p low high (Node lt po rt);\n        high x = root rt; rt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> high x \\<in> set_of (Node lt p rt)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>x = p; x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n        high x \\<noteq> Null; Dag p low high (Node lt po rt);\n        high x = root rt; rt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> high x \\<in> set_of (Node lt p rt)", "case (Node lrt l rrt)"], ["proof (state)\nthis:\n  rt = Node lrt l rrt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>x = p; x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n        high x \\<noteq> Null; Dag p low high (Node lt po rt);\n        high x = root rt; rt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> high x \\<in> set_of (Node lt p rt)", "with lxrootlt Node.prems"], ["proof (chain)\npicking this:\n  high x = root rt\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  rt = Node lrt l rrt", "show ?thesis"], ["proof (prove)\nusing this:\n  high x = root rt\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  rt = Node lrt l rrt\n\ngoal (1 subgoal):\n 1. high x \\<in> set_of (Node lt p rt)", "by simp"], ["proof (state)\nthis:\n  high x \\<in> set_of (Node lt p rt)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  high x \\<in> set_of (Node lt p rt)\n\ngoal (2 subgoals):\n 1. x = p \\<Longrightarrow> high x \\<in> set_of (Node lt po rt)\n 2. x \\<noteq> p \\<Longrightarrow> high x \\<in> set_of (Node lt po rt)", "with ppo"], ["proof (chain)\npicking this:\n  p = po\n  high x \\<in> set_of (Node lt p rt)", "show ?thesis"], ["proof (prove)\nusing this:\n  p = po\n  high x \\<in> set_of (Node lt p rt)\n\ngoal (1 subgoal):\n 1. high x \\<in> set_of (Node lt po rt)", "by simp"], ["proof (state)\nthis:\n  high x \\<in> set_of (Node lt po rt)\n\ngoal (1 subgoal):\n 1. x \\<noteq> p \\<Longrightarrow> high x \\<in> set_of (Node lt po rt)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> p \\<Longrightarrow> high x \\<in> set_of (Node lt po rt)", "assume xnp: \" x \\<noteq> p\""], ["proof (state)\nthis:\n  x \\<noteq> p\n\ngoal (1 subgoal):\n 1. x \\<noteq> p \\<Longrightarrow> high x \\<in> set_of (Node lt po rt)", "with Node.prems"], ["proof (chain)\npicking this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  x \\<noteq> p", "have \"x \\<in> set_of lt \\<or> x \\<in> set_of rt\""], ["proof (prove)\nusing this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  x \\<noteq> p\n\ngoal (1 subgoal):\n 1. x \\<in> set_of lt \\<or> x \\<in> set_of rt", "by simp"], ["proof (state)\nthis:\n  x \\<in> set_of lt \\<or> x \\<in> set_of rt\n\ngoal (1 subgoal):\n 1. x \\<noteq> p \\<Longrightarrow> high x \\<in> set_of (Node lt po rt)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. high x \\<in> set_of (Node lt po rt)", "proof (cases \"x \\<in> set_of lt\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> set_of lt \\<Longrightarrow> high x \\<in> set_of (Node lt po rt)\n 2. x \\<notin> set_of lt \\<Longrightarrow>\n    high x \\<in> set_of (Node lt po rt)", "case True"], ["proof (state)\nthis:\n  x \\<in> set_of lt\n\ngoal (2 subgoals):\n 1. x \\<in> set_of lt \\<Longrightarrow> high x \\<in> set_of (Node lt po rt)\n 2. x \\<notin> set_of lt \\<Longrightarrow>\n    high x \\<in> set_of (Node lt po rt)", "note xinlt=this"], ["proof (state)\nthis:\n  x \\<in> set_of lt\n\ngoal (2 subgoals):\n 1. x \\<in> set_of lt \\<Longrightarrow> high x \\<in> set_of (Node lt po rt)\n 2. x \\<notin> set_of lt \\<Longrightarrow>\n    high x \\<in> set_of (Node lt po rt)", "from Node.prems"], ["proof (chain)\npicking this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high (Node lt po rt)", "have \"Dag (low p) low high lt\""], ["proof (prove)\nusing this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n\ngoal (1 subgoal):\n 1. Dag (low p) low high lt", "by fastforce"], ["proof (state)\nthis:\n  Dag (low p) low high lt\n\ngoal (2 subgoals):\n 1. x \\<in> set_of lt \\<Longrightarrow> high x \\<in> set_of (Node lt po rt)\n 2. x \\<notin> set_of lt \\<Longrightarrow>\n    high x \\<in> set_of (Node lt po rt)", "with Node.prems True"], ["proof (chain)\npicking this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  x \\<in> set_of lt\n  Dag (low p) low high lt", "have \"high x \\<in> set_of lt\""], ["proof (prove)\nusing this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  x \\<in> set_of lt\n  Dag (low p) low high lt\n\ngoal (1 subgoal):\n 1. high x \\<in> set_of lt", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n     high x \\<noteq> Null; Dag p low high (Node lt po rt);\n     x \\<in> set_of lt; Dag (low p) low high lt\\<rbrakk>\n    \\<Longrightarrow> high x \\<in> set_of lt", "apply (rule Node.hyps)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n     high x \\<noteq> Null; Dag p low high (Node lt po rt);\n     x \\<in> set_of lt; Dag (low p) low high lt\\<rbrakk>\n    \\<Longrightarrow> x \\<in> set_of lt\n 2. \\<lbrakk>x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n     high x \\<noteq> Null; Dag p low high (Node lt po rt);\n     x \\<in> set_of lt; Dag (low p) low high lt\\<rbrakk>\n    \\<Longrightarrow> x \\<noteq> Null\n 3. \\<lbrakk>x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n     high x \\<noteq> Null; Dag p low high (Node lt po rt);\n     x \\<in> set_of lt; Dag (low p) low high lt\\<rbrakk>\n    \\<Longrightarrow> high x \\<noteq> Null\n 4. \\<lbrakk>x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n     high x \\<noteq> Null; Dag p low high (Node lt po rt);\n     x \\<in> set_of lt; Dag (low p) low high lt\\<rbrakk>\n    \\<Longrightarrow> Dag ?p6 low high lt", "apply assumption+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  high x \\<in> set_of lt\n\ngoal (2 subgoals):\n 1. x \\<in> set_of lt \\<Longrightarrow> high x \\<in> set_of (Node lt po rt)\n 2. x \\<notin> set_of lt \\<Longrightarrow>\n    high x \\<in> set_of (Node lt po rt)", "with Node.prems"], ["proof (chain)\npicking this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  high x \\<in> set_of lt", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  high x \\<in> set_of lt\n\ngoal (1 subgoal):\n 1. high x \\<in> set_of (Node lt po rt)", "by auto"], ["proof (state)\nthis:\n  high x \\<in> set_of (Node lt po rt)\n\ngoal (1 subgoal):\n 1. x \\<notin> set_of lt \\<Longrightarrow>\n    high x \\<in> set_of (Node lt po rt)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> set_of lt \\<Longrightarrow>\n    high x \\<in> set_of (Node lt po rt)", "assume xnotinlt: \" x \\<notin> set_of lt\""], ["proof (state)\nthis:\n  x \\<notin> set_of lt\n\ngoal (1 subgoal):\n 1. x \\<notin> set_of lt \\<Longrightarrow>\n    high x \\<in> set_of (Node lt po rt)", "with xnp Node.prems"], ["proof (chain)\npicking this:\n  x \\<noteq> p\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  x \\<notin> set_of lt", "have xinrt: \"x \\<in> set_of rt\""], ["proof (prove)\nusing this:\n  x \\<noteq> p\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  x \\<notin> set_of lt\n\ngoal (1 subgoal):\n 1. x \\<in> set_of rt", "by simp"], ["proof (state)\nthis:\n  x \\<in> set_of rt\n\ngoal (1 subgoal):\n 1. x \\<notin> set_of lt \\<Longrightarrow>\n    high x \\<in> set_of (Node lt po rt)", "from Node.prems"], ["proof (chain)\npicking this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high (Node lt po rt)", "have \"Dag (high p) low high rt\""], ["proof (prove)\nusing this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n\ngoal (1 subgoal):\n 1. Dag (high p) low high rt", "by fastforce"], ["proof (state)\nthis:\n  Dag (high p) low high rt\n\ngoal (1 subgoal):\n 1. x \\<notin> set_of lt \\<Longrightarrow>\n    high x \\<in> set_of (Node lt po rt)", "with Node.prems xinrt"], ["proof (chain)\npicking this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  x \\<in> set_of rt\n  Dag (high p) low high rt", "have \"high x \\<in> set_of rt\""], ["proof (prove)\nusing this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  x \\<in> set_of rt\n  Dag (high p) low high rt\n\ngoal (1 subgoal):\n 1. high x \\<in> set_of rt", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n     high x \\<noteq> Null; Dag p low high (Node lt po rt);\n     x \\<in> set_of rt; Dag (high p) low high rt\\<rbrakk>\n    \\<Longrightarrow> high x \\<in> set_of rt", "apply (rule Node.hyps)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n     high x \\<noteq> Null; Dag p low high (Node lt po rt);\n     x \\<in> set_of rt; Dag (high p) low high rt\\<rbrakk>\n    \\<Longrightarrow> x \\<in> set_of rt\n 2. \\<lbrakk>x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n     high x \\<noteq> Null; Dag p low high (Node lt po rt);\n     x \\<in> set_of rt; Dag (high p) low high rt\\<rbrakk>\n    \\<Longrightarrow> x \\<noteq> Null\n 3. \\<lbrakk>x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n     high x \\<noteq> Null; Dag p low high (Node lt po rt);\n     x \\<in> set_of rt; Dag (high p) low high rt\\<rbrakk>\n    \\<Longrightarrow> high x \\<noteq> Null\n 4. \\<lbrakk>x \\<in> set_of (Node lt po rt); x \\<noteq> Null;\n     high x \\<noteq> Null; Dag p low high (Node lt po rt);\n     x \\<in> set_of rt; Dag (high p) low high rt\\<rbrakk>\n    \\<Longrightarrow> Dag ?p6 low high rt", "apply assumption+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  high x \\<in> set_of rt\n\ngoal (1 subgoal):\n 1. x \\<notin> set_of lt \\<Longrightarrow>\n    high x \\<in> set_of (Node lt po rt)", "with Node.prems"], ["proof (chain)\npicking this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  high x \\<in> set_of rt", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> set_of (Node lt po rt)\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high (Node lt po rt)\n  high x \\<in> set_of rt\n\ngoal (1 subgoal):\n 1. high x \\<in> set_of (Node lt po rt)", "by auto"], ["proof (state)\nthis:\n  high x \\<in> set_of (Node lt po rt)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  high x \\<in> set_of (Node lt po rt)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  high x \\<in> set_of (Node lt po rt)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma set_split: \"{k. k<(Suc n)} = {k. k<n} \\<union> {n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {k. k < Suc n} = {k. k < n} \\<union> {n}", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Nodes_levellist_subset_t: \n\"\\<lbrakk>wf_ll t levellist var; i<= length levellist\\<rbrakk> \\<Longrightarrow> Nodes i levellist \\<subseteq> set_of t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_ll t levellist var; i \\<le> length levellist\\<rbrakk>\n    \\<Longrightarrow> Nodes i levellist \\<subseteq> set_of t", "proof (induct i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>wf_ll t levellist var; 0 \\<le> length levellist\\<rbrakk>\n    \\<Longrightarrow> Nodes 0 levellist \\<subseteq> set_of t\n 2. \\<And>i.\n       \\<lbrakk>\\<lbrakk>wf_ll t levellist var;\n                 i \\<le> length levellist\\<rbrakk>\n                \\<Longrightarrow> Nodes i levellist \\<subseteq> set_of t;\n        wf_ll t levellist var; Suc i \\<le> length levellist\\<rbrakk>\n       \\<Longrightarrow> Nodes (Suc i) levellist \\<subseteq> set_of t", "case 0"], ["proof (state)\nthis:\n  wf_ll t levellist var\n  0 \\<le> length levellist\n\ngoal (2 subgoals):\n 1. \\<lbrakk>wf_ll t levellist var; 0 \\<le> length levellist\\<rbrakk>\n    \\<Longrightarrow> Nodes 0 levellist \\<subseteq> set_of t\n 2. \\<And>i.\n       \\<lbrakk>\\<lbrakk>wf_ll t levellist var;\n                 i \\<le> length levellist\\<rbrakk>\n                \\<Longrightarrow> Nodes i levellist \\<subseteq> set_of t;\n        wf_ll t levellist var; Suc i \\<le> length levellist\\<rbrakk>\n       \\<Longrightarrow> Nodes (Suc i) levellist \\<subseteq> set_of t", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. Nodes 0 levellist \\<subseteq> set_of t", "by (simp add: Nodes_def)"], ["proof (state)\nthis:\n  Nodes 0 levellist \\<subseteq> set_of t\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>wf_ll t levellist var;\n                 i \\<le> length levellist\\<rbrakk>\n                \\<Longrightarrow> Nodes i levellist \\<subseteq> set_of t;\n        wf_ll t levellist var; Suc i \\<le> length levellist\\<rbrakk>\n       \\<Longrightarrow> Nodes (Suc i) levellist \\<subseteq> set_of t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>wf_ll t levellist var;\n                 i \\<le> length levellist\\<rbrakk>\n                \\<Longrightarrow> Nodes i levellist \\<subseteq> set_of t;\n        wf_ll t levellist var; Suc i \\<le> length levellist\\<rbrakk>\n       \\<Longrightarrow> Nodes (Suc i) levellist \\<subseteq> set_of t", "case (Suc n)"], ["proof (state)\nthis:\n  \\<lbrakk>wf_ll t levellist var; n \\<le> length levellist\\<rbrakk>\n  \\<Longrightarrow> Nodes n levellist \\<subseteq> set_of t\n  wf_ll t levellist var\n  Suc n \\<le> length levellist\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>wf_ll t levellist var;\n                 i \\<le> length levellist\\<rbrakk>\n                \\<Longrightarrow> Nodes i levellist \\<subseteq> set_of t;\n        wf_ll t levellist var; Suc i \\<le> length levellist\\<rbrakk>\n       \\<Longrightarrow> Nodes (Suc i) levellist \\<subseteq> set_of t", "from Suc.prems Suc.hyps"], ["proof (chain)\npicking this:\n  wf_ll t levellist var\n  Suc n \\<le> length levellist\n  \\<lbrakk>wf_ll t levellist var; n \\<le> length levellist\\<rbrakk>\n  \\<Longrightarrow> Nodes n levellist \\<subseteq> set_of t", "have Nodesn_in_t: \"Nodes n levellist \\<subseteq> set_of t\""], ["proof (prove)\nusing this:\n  wf_ll t levellist var\n  Suc n \\<le> length levellist\n  \\<lbrakk>wf_ll t levellist var; n \\<le> length levellist\\<rbrakk>\n  \\<Longrightarrow> Nodes n levellist \\<subseteq> set_of t\n\ngoal (1 subgoal):\n 1. Nodes n levellist \\<subseteq> set_of t", "by simp"], ["proof (state)\nthis:\n  Nodes n levellist \\<subseteq> set_of t\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>wf_ll t levellist var;\n                 i \\<le> length levellist\\<rbrakk>\n                \\<Longrightarrow> Nodes i levellist \\<subseteq> set_of t;\n        wf_ll t levellist var; Suc i \\<le> length levellist\\<rbrakk>\n       \\<Longrightarrow> Nodes (Suc i) levellist \\<subseteq> set_of t", "from Suc.prems"], ["proof (chain)\npicking this:\n  wf_ll t levellist var\n  Suc n \\<le> length levellist", "have \"\\<forall> x \\<in> set (levellist ! n). x \\<in> set_of t\""], ["proof (prove)\nusing this:\n  wf_ll t levellist var\n  Suc n \\<le> length levellist\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set (levellist ! n). x \\<in> set_of t", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_ll t levellist var; Suc n \\<le> length levellist\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>set (levellist ! n). x \\<in> set_of t", "apply (rule ballI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>wf_ll t levellist var; Suc n \\<le> length levellist;\n        x \\<in> set (levellist ! n)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of t", "apply (simp add: wf_ll_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>(\\<forall>p.\n                    p \\<in> set_of t \\<longrightarrow>\n                    p \\<in> set (levellist ! var p)) \\<and>\n                (\\<forall>k<length levellist.\n                    \\<forall>p\\<in>set (levellist ! k).\n                       p \\<in> set_of t \\<and> var p = k);\n        Suc n \\<le> length levellist; x \\<in> set (levellist ! n)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of t", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Suc n \\<le> length levellist; x \\<in> set (levellist ! n);\n        \\<forall>p.\n           p \\<in> set_of t \\<longrightarrow>\n           p \\<in> set (levellist ! var p);\n        \\<forall>k<length levellist.\n           \\<forall>p\\<in>set (levellist ! k).\n              p \\<in> set_of t \\<and> var p = k\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of t", "apply (thin_tac \" \\<forall>q. q \\<in> set_of t \\<longrightarrow> q \\<in> set (levellist ! var q)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Suc n \\<le> length levellist; x \\<in> set (levellist ! n);\n        \\<forall>k<length levellist.\n           \\<forall>p\\<in>set (levellist ! k).\n              p \\<in> set_of t \\<and> var p = k\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of t", "apply (erule_tac x=n in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Suc n \\<le> length levellist; x \\<in> set (levellist ! n);\n        n < length levellist \\<longrightarrow>\n        (\\<forall>p\\<in>set (levellist ! n).\n            p \\<in> set_of t \\<and> var p = n)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of t", "apply (erule impE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Suc n \\<le> length levellist;\n        x \\<in> set (levellist ! n)\\<rbrakk>\n       \\<Longrightarrow> n < length levellist\n 2. \\<And>x.\n       \\<lbrakk>Suc n \\<le> length levellist; x \\<in> set (levellist ! n);\n        \\<forall>p\\<in>set (levellist ! n).\n           p \\<in> set_of t \\<and> var p = n\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of t", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Suc n \\<le> length levellist; x \\<in> set (levellist ! n);\n        \\<forall>p\\<in>set (levellist ! n).\n           p \\<in> set_of t \\<and> var p = n\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of t", "apply fastforce"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<forall>x\\<in>set (levellist ! n). x \\<in> set_of t\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>wf_ll t levellist var;\n                 i \\<le> length levellist\\<rbrakk>\n                \\<Longrightarrow> Nodes i levellist \\<subseteq> set_of t;\n        wf_ll t levellist var; Suc i \\<le> length levellist\\<rbrakk>\n       \\<Longrightarrow> Nodes (Suc i) levellist \\<subseteq> set_of t", "with Suc.prems"], ["proof (chain)\npicking this:\n  wf_ll t levellist var\n  Suc n \\<le> length levellist\n  \\<forall>x\\<in>set (levellist ! n). x \\<in> set_of t", "have \"set (levellist ! n) \\<subseteq> set_of t\""], ["proof (prove)\nusing this:\n  wf_ll t levellist var\n  Suc n \\<le> length levellist\n  \\<forall>x\\<in>set (levellist ! n). x \\<in> set_of t\n\ngoal (1 subgoal):\n 1. set (levellist ! n) \\<subseteq> set_of t", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  set (levellist ! n) \\<subseteq> set_of t\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>wf_ll t levellist var;\n                 i \\<le> length levellist\\<rbrakk>\n                \\<Longrightarrow> Nodes i levellist \\<subseteq> set_of t;\n        wf_ll t levellist var; Suc i \\<le> length levellist\\<rbrakk>\n       \\<Longrightarrow> Nodes (Suc i) levellist \\<subseteq> set_of t", "with Suc.prems Nodesn_in_t"], ["proof (chain)\npicking this:\n  wf_ll t levellist var\n  Suc n \\<le> length levellist\n  Nodes n levellist \\<subseteq> set_of t\n  set (levellist ! n) \\<subseteq> set_of t", "show ?case"], ["proof (prove)\nusing this:\n  wf_ll t levellist var\n  Suc n \\<le> length levellist\n  Nodes n levellist \\<subseteq> set_of t\n  set (levellist ! n) \\<subseteq> set_of t\n\ngoal (1 subgoal):\n 1. Nodes (Suc n) levellist \\<subseteq> set_of t", "apply (simp add: Nodes_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_ll t levellist var; Suc n \\<le> length levellist;\n     (\\<Union>k\\<in>{k. k < n}. set (levellist ! k)) \\<subseteq> set_of t;\n     set (levellist ! n) \\<subseteq> set_of t\\<rbrakk>\n    \\<Longrightarrow> (\\<Union>k\\<in>{k. k < Suc n}. set (levellist ! k))\n                      \\<subseteq> set_of t", "apply (simp add: set_split)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  Nodes (Suc n) levellist \\<subseteq> set_of t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bdt_child: \n\"\\<lbrakk> bdt (Node (Node llt l rlt) p (Node lrt r rrt)) var = Some bdt1\\<rbrakk> \n \\<Longrightarrow> \\<exists> lbdt rbdt.  bdt (Node llt l rlt) var = Some lbdt \\<and> \n                   bdt (Node lrt r rrt) var = Some rbdt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bdt (Node (Node llt l rlt) p (Node lrt r rrt)) var =\n    Some bdt1 \\<Longrightarrow>\n    \\<exists>lbdt rbdt.\n       bdt (Node llt l rlt) var = Some lbdt \\<and>\n       bdt (Node lrt r rrt) var = Some rbdt", "by (simp split: option.splits)"], ["", "lemma subbdt_ex_dag_def: \n\"\\<And> bdt1 p. \\<lbrakk>Dag p low high t; bdt t var = Some bdt1; Dag no low high not; \nno \\<in> set_of t\\<rbrakk> \\<Longrightarrow> \\<exists> bdt2.  bdt not var = Some bdt2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>bdt1 p.\n       \\<lbrakk>Dag p low high t; bdt t var = Some bdt1;\n        Dag no low high not; no \\<in> set_of t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2", "proof (induct t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>bdt1 p.\n       \\<lbrakk>Dag p low high Tip; bdt Tip var = Some bdt1;\n        Dag no low high not; no \\<in> set_of Tip\\<rbrakk>\n       \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2\n 2. \\<And>t1 x2 t2 bdt1 p.\n       \\<lbrakk>\\<And>bdt1 p.\n                   \\<lbrakk>Dag p low high t1; bdt t1 var = Some bdt1;\n                    Dag no low high not; no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2;\n        \\<And>bdt1 p.\n           \\<lbrakk>Dag p low high t2; bdt t2 var = Some bdt1;\n            Dag no low high not; no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2;\n        Dag p low high (Node t1 x2 t2); bdt (Node t1 x2 t2) var = Some bdt1;\n        Dag no low high not; no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2", "case Tip"], ["proof (state)\nthis:\n  Dag p low high Tip\n  bdt Tip var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of Tip\n\ngoal (2 subgoals):\n 1. \\<And>bdt1 p.\n       \\<lbrakk>Dag p low high Tip; bdt Tip var = Some bdt1;\n        Dag no low high not; no \\<in> set_of Tip\\<rbrakk>\n       \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2\n 2. \\<And>t1 x2 t2 bdt1 p.\n       \\<lbrakk>\\<And>bdt1 p.\n                   \\<lbrakk>Dag p low high t1; bdt t1 var = Some bdt1;\n                    Dag no low high not; no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2;\n        \\<And>bdt1 p.\n           \\<lbrakk>Dag p low high t2; bdt t2 var = Some bdt1;\n            Dag no low high not; no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2;\n        Dag p low high (Node t1 x2 t2); bdt (Node t1 x2 t2) var = Some bdt1;\n        Dag no low high not; no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2", "then"], ["proof (chain)\npicking this:\n  Dag p low high Tip\n  bdt Tip var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of Tip", "show ?case"], ["proof (prove)\nusing this:\n  Dag p low high Tip\n  bdt Tip var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of Tip\n\ngoal (1 subgoal):\n 1. \\<exists>bdt2. bdt not var = Some bdt2", "by simp"], ["proof (state)\nthis:\n  \\<exists>bdt2. bdt not var = Some bdt2\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 bdt1 p.\n       \\<lbrakk>\\<And>bdt1 p.\n                   \\<lbrakk>Dag p low high t1; bdt t1 var = Some bdt1;\n                    Dag no low high not; no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2;\n        \\<And>bdt1 p.\n           \\<lbrakk>Dag p low high t2; bdt t2 var = Some bdt1;\n            Dag no low high not; no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2;\n        Dag p low high (Node t1 x2 t2); bdt (Node t1 x2 t2) var = Some bdt1;\n        Dag no low high not; no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 bdt1 p.\n       \\<lbrakk>\\<And>bdt1 p.\n                   \\<lbrakk>Dag p low high t1; bdt t1 var = Some bdt1;\n                    Dag no low high not; no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2;\n        \\<And>bdt1 p.\n           \\<lbrakk>Dag p low high t2; bdt t2 var = Some bdt1;\n            Dag no low high not; no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2;\n        Dag p low high (Node t1 x2 t2); bdt (Node t1 x2 t2) var = Some bdt1;\n        Dag no low high not; no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2", "case (Node lt po rt)"], ["proof (state)\nthis:\n  \\<lbrakk>Dag ?p low high lt; bdt lt var = Some ?bdt1.0;\n   Dag no low high not; no \\<in> set_of lt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2\n  \\<lbrakk>Dag ?p low high rt; bdt rt var = Some ?bdt1.0;\n   Dag no low high not; no \\<in> set_of rt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 bdt1 p.\n       \\<lbrakk>\\<And>bdt1 p.\n                   \\<lbrakk>Dag p low high t1; bdt t1 var = Some bdt1;\n                    Dag no low high not; no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2;\n        \\<And>bdt1 p.\n           \\<lbrakk>Dag p low high t2; bdt t2 var = Some bdt1;\n            Dag no low high not; no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2;\n        Dag p low high (Node t1 x2 t2); bdt (Node t1 x2 t2) var = Some bdt1;\n        Dag no low high not; no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2", "note pNode=this"], ["proof (state)\nthis:\n  \\<lbrakk>Dag ?p low high lt; bdt lt var = Some ?bdt1.0;\n   Dag no low high not; no \\<in> set_of lt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2\n  \\<lbrakk>Dag ?p low high rt; bdt rt var = Some ?bdt1.0;\n   Dag no low high not; no \\<in> set_of rt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 bdt1 p.\n       \\<lbrakk>\\<And>bdt1 p.\n                   \\<lbrakk>Dag p low high t1; bdt t1 var = Some bdt1;\n                    Dag no low high not; no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2;\n        \\<And>bdt1 p.\n           \\<lbrakk>Dag p low high t2; bdt t2 var = Some bdt1;\n            Dag no low high not; no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2;\n        Dag p low high (Node t1 x2 t2); bdt (Node t1 x2 t2) var = Some bdt1;\n        Dag no low high not; no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2", "with Node.prems"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  \\<lbrakk>Dag ?p low high lt; bdt lt var = Some ?bdt1.0;\n   Dag no low high not; no \\<in> set_of lt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2\n  \\<lbrakk>Dag ?p low high rt; bdt rt var = Some ?bdt1.0;\n   Dag no low high not; no \\<in> set_of rt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)", "have p_po: \"p=po\""], ["proof (prove)\nusing this:\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  \\<lbrakk>Dag ?p low high lt; bdt lt var = Some ?bdt1.0;\n   Dag no low high not; no \\<in> set_of lt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2\n  \\<lbrakk>Dag ?p low high rt; bdt rt var = Some ?bdt1.0;\n   Dag no low high not; no \\<in> set_of rt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n\ngoal (1 subgoal):\n 1. p = po", "by simp"], ["proof (state)\nthis:\n  p = po\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 bdt1 p.\n       \\<lbrakk>\\<And>bdt1 p.\n                   \\<lbrakk>Dag p low high t1; bdt t1 var = Some bdt1;\n                    Dag no low high not; no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2;\n        \\<And>bdt1 p.\n           \\<lbrakk>Dag p low high t2; bdt t2 var = Some bdt1;\n            Dag no low high not; no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2;\n        Dag p low high (Node t1 x2 t2); bdt (Node t1 x2 t2) var = Some bdt1;\n        Dag no low high not; no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>bdt2. bdt not var = Some bdt2", "proof (cases \"no = po\")"], ["proof (state)\ngoal (2 subgoals):\n 1. no = po \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2\n 2. no \\<noteq> po \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2", "case True"], ["proof (state)\nthis:\n  no = po\n\ngoal (2 subgoals):\n 1. no = po \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2\n 2. no \\<noteq> po \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2", "note no_eq_po=this"], ["proof (state)\nthis:\n  no = po\n\ngoal (2 subgoals):\n 1. no = po \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2\n 2. no \\<noteq> po \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2", "from p_po Node.prems no_eq_po"], ["proof (chain)\npicking this:\n  p = po\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  no = po", "have \"not = (Node lt po rt)\""], ["proof (prove)\nusing this:\n  p = po\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  no = po\n\ngoal (1 subgoal):\n 1. not = Node lt po rt", "by (simp add: Dag_unique del: Dag_Ref)"], ["proof (state)\nthis:\n  not = Node lt po rt\n\ngoal (2 subgoals):\n 1. no = po \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2\n 2. no \\<noteq> po \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2", "with Node.prems"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  not = Node lt po rt", "have \"bdt not var = Some bdt1\""], ["proof (prove)\nusing this:\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  not = Node lt po rt\n\ngoal (1 subgoal):\n 1. bdt not var = Some bdt1", "by (simp add: le_dag_def)"], ["proof (state)\nthis:\n  bdt not var = Some bdt1\n\ngoal (2 subgoals):\n 1. no = po \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2\n 2. no \\<noteq> po \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2", "then"], ["proof (chain)\npicking this:\n  bdt not var = Some bdt1", "show ?thesis"], ["proof (prove)\nusing this:\n  bdt not var = Some bdt1\n\ngoal (1 subgoal):\n 1. \\<exists>bdt2. bdt not var = Some bdt2", "by simp"], ["proof (state)\nthis:\n  \\<exists>bdt2. bdt not var = Some bdt2\n\ngoal (1 subgoal):\n 1. no \\<noteq> po \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. no \\<noteq> po \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2", "assume \"no \\<noteq> po\""], ["proof (state)\nthis:\n  no \\<noteq> po\n\ngoal (1 subgoal):\n 1. no \\<noteq> po \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2", "with Node.prems"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  no \\<noteq> po", "have no_in_lt_or_rt: \"no \\<in> set_of lt \\<or> no \\<in> set_of rt\""], ["proof (prove)\nusing this:\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  no \\<noteq> po\n\ngoal (1 subgoal):\n 1. no \\<in> set_of lt \\<or> no \\<in> set_of rt", "by simp"], ["proof (state)\nthis:\n  no \\<in> set_of lt \\<or> no \\<in> set_of rt\n\ngoal (1 subgoal):\n 1. no \\<noteq> po \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>bdt2. bdt not var = Some bdt2", "proof (cases \"no \\<in> set_of lt\")"], ["proof (state)\ngoal (2 subgoals):\n 1. no \\<in> set_of lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt not var = Some bdt2\n 2. no \\<notin> set_of lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt not var = Some bdt2", "case True"], ["proof (state)\nthis:\n  no \\<in> set_of lt\n\ngoal (2 subgoals):\n 1. no \\<in> set_of lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt not var = Some bdt2\n 2. no \\<notin> set_of lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt not var = Some bdt2", "note no_in_lt=this"], ["proof (state)\nthis:\n  no \\<in> set_of lt\n\ngoal (2 subgoals):\n 1. no \\<in> set_of lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt not var = Some bdt2\n 2. no \\<notin> set_of lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt not var = Some bdt2", "from Node.prems p_po"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  p = po", "have lt_dag: \"Dag (low po) low high lt\""], ["proof (prove)\nusing this:\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  p = po\n\ngoal (1 subgoal):\n 1. Dag (low po) low high lt", "by simp"], ["proof (state)\nthis:\n  Dag (low po) low high lt\n\ngoal (2 subgoals):\n 1. no \\<in> set_of lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt not var = Some bdt2\n 2. no \\<notin> set_of lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt not var = Some bdt2", "from Node.prems"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)", "have lbdt_def: \"\\<exists> lbdt. bdt lt var = Some lbdt\""], ["proof (prove)\nusing this:\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n\ngoal (1 subgoal):\n 1. \\<exists>lbdt. bdt lt var = Some lbdt", "proof (cases lt)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>Dag p low high (Node lt po rt);\n     bdt (Node lt po rt) var = Some bdt1; Dag no low high not;\n     no \\<in> set_of (Node lt po rt); lt = Tip\\<rbrakk>\n    \\<Longrightarrow> \\<exists>lbdt. bdt lt var = Some lbdt\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>Dag p low high (Node lt po rt);\n        bdt (Node lt po rt) var = Some bdt1; Dag no low high not;\n        no \\<in> set_of (Node lt po rt); lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> \\<exists>lbdt. bdt lt var = Some lbdt", "case Tip"], ["proof (state)\nthis:\n  lt = Tip\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Dag p low high (Node lt po rt);\n     bdt (Node lt po rt) var = Some bdt1; Dag no low high not;\n     no \\<in> set_of (Node lt po rt); lt = Tip\\<rbrakk>\n    \\<Longrightarrow> \\<exists>lbdt. bdt lt var = Some lbdt\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>Dag p low high (Node lt po rt);\n        bdt (Node lt po rt) var = Some bdt1; Dag no low high not;\n        no \\<in> set_of (Node lt po rt); lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> \\<exists>lbdt. bdt lt var = Some lbdt", "with Node.prems no_in_lt"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  no \\<in> set_of lt\n  lt = Tip", "show ?thesis"], ["proof (prove)\nusing this:\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  no \\<in> set_of lt\n  lt = Tip\n\ngoal (1 subgoal):\n 1. \\<exists>lbdt. bdt lt var = Some lbdt", "by (simp add: le_dag_def)"], ["proof (state)\nthis:\n  \\<exists>lbdt. bdt lt var = Some lbdt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>Dag p low high (Node lt po rt);\n        bdt (Node lt po rt) var = Some bdt1; Dag no low high not;\n        no \\<in> set_of (Node lt po rt); lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> \\<exists>lbdt. bdt lt var = Some lbdt", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>Dag p low high (Node lt po rt);\n        bdt (Node lt po rt) var = Some bdt1; Dag no low high not;\n        no \\<in> set_of (Node lt po rt); lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> \\<exists>lbdt. bdt lt var = Some lbdt", "case (Node llt l rlt)"], ["proof (state)\nthis:\n  lt = Node llt l rlt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>Dag p low high (Node lt po rt);\n        bdt (Node lt po rt) var = Some bdt1; Dag no low high not;\n        no \\<in> set_of (Node lt po rt); lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> \\<exists>lbdt. bdt lt var = Some lbdt", "note lNode=this"], ["proof (state)\nthis:\n  lt = Node llt l rlt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>Dag p low high (Node lt po rt);\n        bdt (Node lt po rt) var = Some bdt1; Dag no low high not;\n        no \\<in> set_of (Node lt po rt); lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> \\<exists>lbdt. bdt lt var = Some lbdt", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>lbdt. bdt lt var = Some lbdt", "proof (cases rt)"], ["proof (state)\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow> \\<exists>lbdt. bdt lt var = Some lbdt\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       \\<exists>lbdt. bdt lt var = Some lbdt", "case Tip"], ["proof (state)\nthis:\n  rt = Tip\n\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow> \\<exists>lbdt. bdt lt var = Some lbdt\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       \\<exists>lbdt. bdt lt var = Some lbdt", "note rNode=this"], ["proof (state)\nthis:\n  rt = Tip\n\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow> \\<exists>lbdt. bdt lt var = Some lbdt\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       \\<exists>lbdt. bdt lt var = Some lbdt", "with lNode Node.prems"], ["proof (chain)\npicking this:\n  lt = Node llt l rlt\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  rt = Tip", "show ?thesis"], ["proof (prove)\nusing this:\n  lt = Node llt l rlt\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  rt = Tip\n\ngoal (1 subgoal):\n 1. \\<exists>lbdt. bdt lt var = Some lbdt", "by simp"], ["proof (state)\nthis:\n  \\<exists>lbdt. bdt lt var = Some lbdt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       \\<exists>lbdt. bdt lt var = Some lbdt", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       \\<exists>lbdt. bdt lt var = Some lbdt", "case (Node lrt r rrt)"], ["proof (state)\nthis:\n  rt = Node lrt r rrt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       \\<exists>lbdt. bdt lt var = Some lbdt", "note rNode=this"], ["proof (state)\nthis:\n  rt = Node lrt r rrt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       \\<exists>lbdt. bdt lt var = Some lbdt", "with lNode Node.prems"], ["proof (chain)\npicking this:\n  lt = Node llt l rlt\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  rt = Node lrt r rrt", "show ?thesis"], ["proof (prove)\nusing this:\n  lt = Node llt l rlt\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  rt = Node lrt r rrt\n\ngoal (1 subgoal):\n 1. \\<exists>lbdt. bdt lt var = Some lbdt", "by (simp split: option.splits)"], ["proof (state)\nthis:\n  \\<exists>lbdt. bdt lt var = Some lbdt\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>lbdt. bdt lt var = Some lbdt\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>lbdt. bdt lt var = Some lbdt\n\ngoal (2 subgoals):\n 1. no \\<in> set_of lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt not var = Some bdt2\n 2. no \\<notin> set_of lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt not var = Some bdt2", "then"], ["proof (chain)\npicking this:\n  \\<exists>lbdt. bdt lt var = Some lbdt", "obtain lbdt where \"bdt lt var = Some lbdt\""], ["proof (prove)\nusing this:\n  \\<exists>lbdt. bdt lt var = Some lbdt\n\ngoal (1 subgoal):\n 1. (\\<And>lbdt.\n        bdt lt var = Some lbdt \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  bdt lt var = Some lbdt\n\ngoal (2 subgoals):\n 1. no \\<in> set_of lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt not var = Some bdt2\n 2. no \\<notin> set_of lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt not var = Some bdt2", "with Node.prems lt_dag no_in_lt"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  Dag (low po) low high lt\n  no \\<in> set_of lt\n  bdt lt var = Some lbdt", "show ?thesis"], ["proof (prove)\nusing this:\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  Dag (low po) low high lt\n  no \\<in> set_of lt\n  bdt lt var = Some lbdt\n\ngoal (1 subgoal):\n 1. \\<exists>bdt2. bdt not var = Some bdt2", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag p low high (Node lt po rt);\n     bdt (Node lt po rt) var = Some bdt1; Dag no low high not;\n     no \\<in> set_of (Node lt po rt); Dag (low po) low high lt;\n     no \\<in> set_of lt; bdt lt var = Some lbdt\\<rbrakk>\n    \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2", "apply (rule Node.hyps)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Dag p low high (Node lt po rt);\n     bdt (Node lt po rt) var = Some bdt1; Dag no low high not;\n     no \\<in> set_of (Node lt po rt); Dag (low po) low high lt;\n     no \\<in> set_of lt; bdt lt var = Some lbdt\\<rbrakk>\n    \\<Longrightarrow> Dag ?p7 low high lt\n 2. \\<lbrakk>Dag p low high (Node lt po rt);\n     bdt (Node lt po rt) var = Some bdt1; Dag no low high not;\n     no \\<in> set_of (Node lt po rt); Dag (low po) low high lt;\n     no \\<in> set_of lt; bdt lt var = Some lbdt\\<rbrakk>\n    \\<Longrightarrow> bdt lt var = Some ?bdt1.7\n 3. \\<lbrakk>Dag p low high (Node lt po rt);\n     bdt (Node lt po rt) var = Some bdt1; Dag no low high not;\n     no \\<in> set_of (Node lt po rt); Dag (low po) low high lt;\n     no \\<in> set_of lt; bdt lt var = Some lbdt\\<rbrakk>\n    \\<Longrightarrow> Dag no low high not\n 4. \\<lbrakk>Dag p low high (Node lt po rt);\n     bdt (Node lt po rt) var = Some bdt1; Dag no low high not;\n     no \\<in> set_of (Node lt po rt); Dag (low po) low high lt;\n     no \\<in> set_of lt; bdt lt var = Some lbdt\\<rbrakk>\n    \\<Longrightarrow> no \\<in> set_of lt", "apply assumption+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>bdt2. bdt not var = Some bdt2\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt not var = Some bdt2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. no \\<notin> set_of lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt not var = Some bdt2", "assume \"no \\<notin> set_of lt\""], ["proof (state)\nthis:\n  no \\<notin> set_of lt\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt not var = Some bdt2", "with no_in_lt_or_rt"], ["proof (chain)\npicking this:\n  no \\<in> set_of lt \\<or> no \\<in> set_of rt\n  no \\<notin> set_of lt", "have no_in_rt: \"no \\<in> set_of rt\""], ["proof (prove)\nusing this:\n  no \\<in> set_of lt \\<or> no \\<in> set_of rt\n  no \\<notin> set_of lt\n\ngoal (1 subgoal):\n 1. no \\<in> set_of rt", "by simp"], ["proof (state)\nthis:\n  no \\<in> set_of rt\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt not var = Some bdt2", "from Node.prems p_po"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  p = po", "have rt_dag: \"Dag (high po) low high rt\""], ["proof (prove)\nusing this:\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  p = po\n\ngoal (1 subgoal):\n 1. Dag (high po) low high rt", "by simp"], ["proof (state)\nthis:\n  Dag (high po) low high rt\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt not var = Some bdt2", "from Node.hyps"], ["proof (chain)\npicking this:\n  \\<lbrakk>Dag ?p low high lt; bdt lt var = Some ?bdt1.0;\n   Dag no low high not; no \\<in> set_of lt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2\n  \\<lbrakk>Dag ?p low high rt; bdt rt var = Some ?bdt1.0;\n   Dag no low high not; no \\<in> set_of rt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2", "have hyp2: \"\\<And> rbdt. \\<lbrakk>Dag (high po) low high rt; bdt rt var = Some rbdt; Dag no low high not; no \\<in> set_of rt\\<rbrakk> \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2\""], ["proof (prove)\nusing this:\n  \\<lbrakk>Dag ?p low high lt; bdt lt var = Some ?bdt1.0;\n   Dag no low high not; no \\<in> set_of lt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2\n  \\<lbrakk>Dag ?p low high rt; bdt rt var = Some ?bdt1.0;\n   Dag no low high not; no \\<in> set_of rt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2\n\ngoal (1 subgoal):\n 1. \\<And>rbdt.\n       \\<lbrakk>Dag (high po) low high rt; bdt rt var = Some rbdt;\n        Dag no low high not; no \\<in> set_of rt\\<rbrakk>\n       \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>Dag (high po) low high rt; bdt rt var = Some ?rbdt;\n   Dag no low high not; no \\<in> set_of rt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt not var = Some bdt2", "from Node.prems"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)", "have lbdt_def: \"\\<exists> rbdt. bdt rt var = Some rbdt\""], ["proof (prove)\nusing this:\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n\ngoal (1 subgoal):\n 1. \\<exists>rbdt. bdt rt var = Some rbdt", "proof (cases rt)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>Dag p low high (Node lt po rt);\n     bdt (Node lt po rt) var = Some bdt1; Dag no low high not;\n     no \\<in> set_of (Node lt po rt); rt = Tip\\<rbrakk>\n    \\<Longrightarrow> \\<exists>rbdt. bdt rt var = Some rbdt\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>Dag p low high (Node lt po rt);\n        bdt (Node lt po rt) var = Some bdt1; Dag no low high not;\n        no \\<in> set_of (Node lt po rt); rt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rbdt. bdt rt var = Some rbdt", "case Tip"], ["proof (state)\nthis:\n  rt = Tip\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Dag p low high (Node lt po rt);\n     bdt (Node lt po rt) var = Some bdt1; Dag no low high not;\n     no \\<in> set_of (Node lt po rt); rt = Tip\\<rbrakk>\n    \\<Longrightarrow> \\<exists>rbdt. bdt rt var = Some rbdt\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>Dag p low high (Node lt po rt);\n        bdt (Node lt po rt) var = Some bdt1; Dag no low high not;\n        no \\<in> set_of (Node lt po rt); rt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rbdt. bdt rt var = Some rbdt", "with Node.prems no_in_rt"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  no \\<in> set_of rt\n  rt = Tip", "show ?thesis"], ["proof (prove)\nusing this:\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  no \\<in> set_of rt\n  rt = Tip\n\ngoal (1 subgoal):\n 1. \\<exists>rbdt. bdt rt var = Some rbdt", "by (simp add: le_dag_def)"], ["proof (state)\nthis:\n  \\<exists>rbdt. bdt rt var = Some rbdt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>Dag p low high (Node lt po rt);\n        bdt (Node lt po rt) var = Some bdt1; Dag no low high not;\n        no \\<in> set_of (Node lt po rt); rt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rbdt. bdt rt var = Some rbdt", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>Dag p low high (Node lt po rt);\n        bdt (Node lt po rt) var = Some bdt1; Dag no low high not;\n        no \\<in> set_of (Node lt po rt); rt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rbdt. bdt rt var = Some rbdt", "case (Node lrt l rrt)"], ["proof (state)\nthis:\n  rt = Node lrt l rrt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>Dag p low high (Node lt po rt);\n        bdt (Node lt po rt) var = Some bdt1; Dag no low high not;\n        no \\<in> set_of (Node lt po rt); rt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rbdt. bdt rt var = Some rbdt", "note rNode=this"], ["proof (state)\nthis:\n  rt = Node lrt l rrt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>Dag p low high (Node lt po rt);\n        bdt (Node lt po rt) var = Some bdt1; Dag no low high not;\n        no \\<in> set_of (Node lt po rt); rt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rbdt. bdt rt var = Some rbdt", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>rbdt. bdt rt var = Some rbdt", "proof (cases lt)"], ["proof (state)\ngoal (2 subgoals):\n 1. lt = Tip \\<Longrightarrow> \\<exists>rbdt. bdt rt var = Some rbdt\n 2. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow>\n       \\<exists>rbdt. bdt rt var = Some rbdt", "case Tip"], ["proof (state)\nthis:\n  lt = Tip\n\ngoal (2 subgoals):\n 1. lt = Tip \\<Longrightarrow> \\<exists>rbdt. bdt rt var = Some rbdt\n 2. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow>\n       \\<exists>rbdt. bdt rt var = Some rbdt", "note lTip=this"], ["proof (state)\nthis:\n  lt = Tip\n\ngoal (2 subgoals):\n 1. lt = Tip \\<Longrightarrow> \\<exists>rbdt. bdt rt var = Some rbdt\n 2. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow>\n       \\<exists>rbdt. bdt rt var = Some rbdt", "with rNode Node.prems"], ["proof (chain)\npicking this:\n  rt = Node lrt l rrt\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  lt = Tip", "show ?thesis"], ["proof (prove)\nusing this:\n  rt = Node lrt l rrt\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  lt = Tip\n\ngoal (1 subgoal):\n 1. \\<exists>rbdt. bdt rt var = Some rbdt", "by simp"], ["proof (state)\nthis:\n  \\<exists>rbdt. bdt rt var = Some rbdt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow>\n       \\<exists>rbdt. bdt rt var = Some rbdt", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow>\n       \\<exists>rbdt. bdt rt var = Some rbdt", "case (Node llt r rlt)"], ["proof (state)\nthis:\n  lt = Node llt r rlt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow>\n       \\<exists>rbdt. bdt rt var = Some rbdt", "note lNode=this"], ["proof (state)\nthis:\n  lt = Node llt r rlt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow>\n       \\<exists>rbdt. bdt rt var = Some rbdt", "with rNode Node.prems"], ["proof (chain)\npicking this:\n  rt = Node lrt l rrt\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  lt = Node llt r rlt", "show ?thesis"], ["proof (prove)\nusing this:\n  rt = Node lrt l rrt\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  lt = Node llt r rlt\n\ngoal (1 subgoal):\n 1. \\<exists>rbdt. bdt rt var = Some rbdt", "by (simp split: option.splits)"], ["proof (state)\nthis:\n  \\<exists>rbdt. bdt rt var = Some rbdt\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>rbdt. bdt rt var = Some rbdt\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>rbdt. bdt rt var = Some rbdt\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt not var = Some bdt2", "then"], ["proof (chain)\npicking this:\n  \\<exists>rbdt. bdt rt var = Some rbdt", "obtain rbdt where \"bdt rt var = Some rbdt\""], ["proof (prove)\nusing this:\n  \\<exists>rbdt. bdt rt var = Some rbdt\n\ngoal (1 subgoal):\n 1. (\\<And>rbdt.\n        bdt rt var = Some rbdt \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  bdt rt var = Some rbdt\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt not var = Some bdt2", "with Node.prems rt_dag no_in_rt"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  Dag (high po) low high rt\n  no \\<in> set_of rt\n  bdt rt var = Some rbdt", "show ?thesis"], ["proof (prove)\nusing this:\n  Dag p low high (Node lt po rt)\n  bdt (Node lt po rt) var = Some bdt1\n  Dag no low high not\n  no \\<in> set_of (Node lt po rt)\n  Dag (high po) low high rt\n  no \\<in> set_of rt\n  bdt rt var = Some rbdt\n\ngoal (1 subgoal):\n 1. \\<exists>bdt2. bdt not var = Some bdt2", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag p low high (Node lt po rt);\n     bdt (Node lt po rt) var = Some bdt1; Dag no low high not;\n     no \\<in> set_of (Node lt po rt); Dag (high po) low high rt;\n     no \\<in> set_of rt; bdt rt var = Some rbdt\\<rbrakk>\n    \\<Longrightarrow> \\<exists>bdt2. bdt not var = Some bdt2", "apply (rule hyp2)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>Dag p low high (Node lt po rt);\n     bdt (Node lt po rt) var = Some bdt1; Dag no low high not;\n     no \\<in> set_of (Node lt po rt); Dag (high po) low high rt;\n     no \\<in> set_of rt; bdt rt var = Some rbdt\\<rbrakk>\n    \\<Longrightarrow> Dag (high po) low high rt\n 2. \\<lbrakk>Dag p low high (Node lt po rt);\n     bdt (Node lt po rt) var = Some bdt1; Dag no low high not;\n     no \\<in> set_of (Node lt po rt); Dag (high po) low high rt;\n     no \\<in> set_of rt; bdt rt var = Some rbdt\\<rbrakk>\n    \\<Longrightarrow> bdt rt var = Some ?rbdt7\n 3. \\<lbrakk>Dag p low high (Node lt po rt);\n     bdt (Node lt po rt) var = Some bdt1; Dag no low high not;\n     no \\<in> set_of (Node lt po rt); Dag (high po) low high rt;\n     no \\<in> set_of rt; bdt rt var = Some rbdt\\<rbrakk>\n    \\<Longrightarrow> Dag no low high not\n 4. \\<lbrakk>Dag p low high (Node lt po rt);\n     bdt (Node lt po rt) var = Some bdt1; Dag no low high not;\n     no \\<in> set_of (Node lt po rt); Dag (high po) low high rt;\n     no \\<in> set_of rt; bdt rt var = Some rbdt\\<rbrakk>\n    \\<Longrightarrow> no \\<in> set_of rt", "apply assumption+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>bdt2. bdt not var = Some bdt2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>bdt2. bdt not var = Some bdt2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>bdt2. bdt not var = Some bdt2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subbdt_ex: \n\"\\<And> bdt1. \\<lbrakk> (Node lst stp rst) <= t; bdt t var = Some bdt1\\<rbrakk> \n \\<Longrightarrow> \\<exists> bdt2.  bdt (Node lst stp rst) var = Some bdt2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>bdt1.\n       \\<lbrakk>Node lst stp rst \\<le> t; bdt t var = Some bdt1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>bdt2.\n                            bdt (Node lst stp rst) var = Some bdt2", "proof (induct t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>bdt1.\n       \\<lbrakk>Node lst stp rst \\<le> Tip; bdt Tip var = Some bdt1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>bdt2.\n                            bdt (Node lst stp rst) var = Some bdt2\n 2. \\<And>t1 x2 t2 bdt1.\n       \\<lbrakk>\\<And>bdt1.\n                   \\<lbrakk>Node lst stp rst \\<le> t1;\n                    bdt t1 var = Some bdt1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>bdt2.\n  bdt (Node lst stp rst) var = Some bdt2;\n        \\<And>bdt1.\n           \\<lbrakk>Node lst stp rst \\<le> t2;\n            bdt t2 var = Some bdt1\\<rbrakk>\n           \\<Longrightarrow> \\<exists>bdt2.\n                                bdt (Node lst stp rst) var = Some bdt2;\n        Node lst stp rst \\<le> Node t1 x2 t2;\n        bdt (Node t1 x2 t2) var = Some bdt1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>bdt2.\n                            bdt (Node lst stp rst) var = Some bdt2", "case Tip"], ["proof (state)\nthis:\n  Node lst stp rst \\<le> Tip\n  bdt Tip var = Some bdt1\n\ngoal (2 subgoals):\n 1. \\<And>bdt1.\n       \\<lbrakk>Node lst stp rst \\<le> Tip; bdt Tip var = Some bdt1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>bdt2.\n                            bdt (Node lst stp rst) var = Some bdt2\n 2. \\<And>t1 x2 t2 bdt1.\n       \\<lbrakk>\\<And>bdt1.\n                   \\<lbrakk>Node lst stp rst \\<le> t1;\n                    bdt t1 var = Some bdt1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>bdt2.\n  bdt (Node lst stp rst) var = Some bdt2;\n        \\<And>bdt1.\n           \\<lbrakk>Node lst stp rst \\<le> t2;\n            bdt t2 var = Some bdt1\\<rbrakk>\n           \\<Longrightarrow> \\<exists>bdt2.\n                                bdt (Node lst stp rst) var = Some bdt2;\n        Node lst stp rst \\<le> Node t1 x2 t2;\n        bdt (Node t1 x2 t2) var = Some bdt1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>bdt2.\n                            bdt (Node lst stp rst) var = Some bdt2", "then"], ["proof (chain)\npicking this:\n  Node lst stp rst \\<le> Tip\n  bdt Tip var = Some bdt1", "show ?case"], ["proof (prove)\nusing this:\n  Node lst stp rst \\<le> Tip\n  bdt Tip var = Some bdt1\n\ngoal (1 subgoal):\n 1. \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2", "by (simp add: le_dag_def)"], ["proof (state)\nthis:\n  \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 bdt1.\n       \\<lbrakk>\\<And>bdt1.\n                   \\<lbrakk>Node lst stp rst \\<le> t1;\n                    bdt t1 var = Some bdt1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>bdt2.\n  bdt (Node lst stp rst) var = Some bdt2;\n        \\<And>bdt1.\n           \\<lbrakk>Node lst stp rst \\<le> t2;\n            bdt t2 var = Some bdt1\\<rbrakk>\n           \\<Longrightarrow> \\<exists>bdt2.\n                                bdt (Node lst stp rst) var = Some bdt2;\n        Node lst stp rst \\<le> Node t1 x2 t2;\n        bdt (Node t1 x2 t2) var = Some bdt1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>bdt2.\n                            bdt (Node lst stp rst) var = Some bdt2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 bdt1.\n       \\<lbrakk>\\<And>bdt1.\n                   \\<lbrakk>Node lst stp rst \\<le> t1;\n                    bdt t1 var = Some bdt1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>bdt2.\n  bdt (Node lst stp rst) var = Some bdt2;\n        \\<And>bdt1.\n           \\<lbrakk>Node lst stp rst \\<le> t2;\n            bdt t2 var = Some bdt1\\<rbrakk>\n           \\<Longrightarrow> \\<exists>bdt2.\n                                bdt (Node lst stp rst) var = Some bdt2;\n        Node lst stp rst \\<le> Node t1 x2 t2;\n        bdt (Node t1 x2 t2) var = Some bdt1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>bdt2.\n                            bdt (Node lst stp rst) var = Some bdt2", "case (Node lt p rt)"], ["proof (state)\nthis:\n  \\<lbrakk>Node lst stp rst \\<le> lt; bdt lt var = Some ?bdt1.0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2\n  \\<lbrakk>Node lst stp rst \\<le> rt; bdt rt var = Some ?bdt1.0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2\n  Node lst stp rst \\<le> Node lt p rt\n  bdt (Node lt p rt) var = Some bdt1\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 bdt1.\n       \\<lbrakk>\\<And>bdt1.\n                   \\<lbrakk>Node lst stp rst \\<le> t1;\n                    bdt t1 var = Some bdt1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>bdt2.\n  bdt (Node lst stp rst) var = Some bdt2;\n        \\<And>bdt1.\n           \\<lbrakk>Node lst stp rst \\<le> t2;\n            bdt t2 var = Some bdt1\\<rbrakk>\n           \\<Longrightarrow> \\<exists>bdt2.\n                                bdt (Node lst stp rst) var = Some bdt2;\n        Node lst stp rst \\<le> Node t1 x2 t2;\n        bdt (Node t1 x2 t2) var = Some bdt1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>bdt2.\n                            bdt (Node lst stp rst) var = Some bdt2", "note pNode=this"], ["proof (state)\nthis:\n  \\<lbrakk>Node lst stp rst \\<le> lt; bdt lt var = Some ?bdt1.0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2\n  \\<lbrakk>Node lst stp rst \\<le> rt; bdt rt var = Some ?bdt1.0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2\n  Node lst stp rst \\<le> Node lt p rt\n  bdt (Node lt p rt) var = Some bdt1\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 bdt1.\n       \\<lbrakk>\\<And>bdt1.\n                   \\<lbrakk>Node lst stp rst \\<le> t1;\n                    bdt t1 var = Some bdt1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>bdt2.\n  bdt (Node lst stp rst) var = Some bdt2;\n        \\<And>bdt1.\n           \\<lbrakk>Node lst stp rst \\<le> t2;\n            bdt t2 var = Some bdt1\\<rbrakk>\n           \\<Longrightarrow> \\<exists>bdt2.\n                                bdt (Node lst stp rst) var = Some bdt2;\n        Node lst stp rst \\<le> Node t1 x2 t2;\n        bdt (Node t1 x2 t2) var = Some bdt1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>bdt2.\n                            bdt (Node lst stp rst) var = Some bdt2", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2", "proof (cases \"Node lst stp rst = Node lt p rt\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Node lst stp rst = Node lt p rt \\<Longrightarrow>\n    \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2\n 2. Node lst stp rst \\<noteq> Node lt p rt \\<Longrightarrow>\n    \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2", "case True"], ["proof (state)\nthis:\n  Node lst stp rst = Node lt p rt\n\ngoal (2 subgoals):\n 1. Node lst stp rst = Node lt p rt \\<Longrightarrow>\n    \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2\n 2. Node lst stp rst \\<noteq> Node lt p rt \\<Longrightarrow>\n    \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2", "with Node.prems"], ["proof (chain)\npicking this:\n  Node lst stp rst \\<le> Node lt p rt\n  bdt (Node lt p rt) var = Some bdt1\n  Node lst stp rst = Node lt p rt", "show ?thesis"], ["proof (prove)\nusing this:\n  Node lst stp rst \\<le> Node lt p rt\n  bdt (Node lt p rt) var = Some bdt1\n  Node lst stp rst = Node lt p rt\n\ngoal (1 subgoal):\n 1. \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2", "by simp"], ["proof (state)\nthis:\n  \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2\n\ngoal (1 subgoal):\n 1. Node lst stp rst \\<noteq> Node lt p rt \\<Longrightarrow>\n    \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Node lst stp rst \\<noteq> Node lt p rt \\<Longrightarrow>\n    \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2", "assume \" Node lst stp rst \\<noteq> Node lt p rt\""], ["proof (state)\nthis:\n  Node lst stp rst \\<noteq> Node lt p rt\n\ngoal (1 subgoal):\n 1. Node lst stp rst \\<noteq> Node lt p rt \\<Longrightarrow>\n    \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2", "with Node.prems"], ["proof (chain)\npicking this:\n  Node lst stp rst \\<le> Node lt p rt\n  bdt (Node lt p rt) var = Some bdt1\n  Node lst stp rst \\<noteq> Node lt p rt", "have \"Node lst stp rst < Node lt p rt\""], ["proof (prove)\nusing this:\n  Node lst stp rst \\<le> Node lt p rt\n  bdt (Node lt p rt) var = Some bdt1\n  Node lst stp rst \\<noteq> Node lt p rt\n\ngoal (1 subgoal):\n 1. Node lst stp rst < Node lt p rt", "apply (simp add: le_dag_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>lst = lt \\<and> stp = p \\<and> rst = rt \\<or>\n             Node lst stp rst < Node lt p rt;\n     bdt (Node lt p rt) var = Some bdt1;\n     stp = p \\<longrightarrow>\n     lst = lt \\<longrightarrow> rst \\<noteq> rt\\<rbrakk>\n    \\<Longrightarrow> Node lst stp rst < Node lt p rt", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  Node lst stp rst < Node lt p rt\n\ngoal (1 subgoal):\n 1. Node lst stp rst \\<noteq> Node lt p rt \\<Longrightarrow>\n    \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2", "then"], ["proof (chain)\npicking this:\n  Node lst stp rst < Node lt p rt", "have in_ltrt: \"Node lst stp rst <= lt \\<or> Node lst stp rst <= rt\""], ["proof (prove)\nusing this:\n  Node lst stp rst < Node lt p rt\n\ngoal (1 subgoal):\n 1. Node lst stp rst \\<le> lt \\<or> Node lst stp rst \\<le> rt", "by (simp add: less_dag_Node)"], ["proof (state)\nthis:\n  Node lst stp rst \\<le> lt \\<or> Node lst stp rst \\<le> rt\n\ngoal (1 subgoal):\n 1. Node lst stp rst \\<noteq> Node lt p rt \\<Longrightarrow>\n    \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2", "proof (cases \"Node lst stp rst <= lt\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Node lst stp rst \\<le> lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2\n 2. \\<not> Node lst stp rst \\<le> lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2", "case True"], ["proof (state)\nthis:\n  Node lst stp rst \\<le> lt\n\ngoal (2 subgoals):\n 1. Node lst stp rst \\<le> lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2\n 2. \\<not> Node lst stp rst \\<le> lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2", "note in_lt=this"], ["proof (state)\nthis:\n  Node lst stp rst \\<le> lt\n\ngoal (2 subgoals):\n 1. Node lst stp rst \\<le> lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2\n 2. \\<not> Node lst stp rst \\<le> lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2", "from Node.prems"], ["proof (chain)\npicking this:\n  Node lst stp rst \\<le> Node lt p rt\n  bdt (Node lt p rt) var = Some bdt1", "have lbdt_def: \"\\<exists> lbdt. bdt lt var = Some lbdt\""], ["proof (prove)\nusing this:\n  Node lst stp rst \\<le> Node lt p rt\n  bdt (Node lt p rt) var = Some bdt1\n\ngoal (1 subgoal):\n 1. \\<exists>lbdt. bdt lt var = Some lbdt", "proof (cases lt)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>Node lst stp rst \\<le> Node lt p rt;\n     bdt (Node lt p rt) var = Some bdt1; lt = Tip\\<rbrakk>\n    \\<Longrightarrow> \\<exists>lbdt. bdt lt var = Some lbdt\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>Node lst stp rst \\<le> Node lt p rt;\n        bdt (Node lt p rt) var = Some bdt1; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> \\<exists>lbdt. bdt lt var = Some lbdt", "case Tip"], ["proof (state)\nthis:\n  lt = Tip\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Node lst stp rst \\<le> Node lt p rt;\n     bdt (Node lt p rt) var = Some bdt1; lt = Tip\\<rbrakk>\n    \\<Longrightarrow> \\<exists>lbdt. bdt lt var = Some lbdt\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>Node lst stp rst \\<le> Node lt p rt;\n        bdt (Node lt p rt) var = Some bdt1; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> \\<exists>lbdt. bdt lt var = Some lbdt", "with Node.prems in_lt"], ["proof (chain)\npicking this:\n  Node lst stp rst \\<le> Node lt p rt\n  bdt (Node lt p rt) var = Some bdt1\n  Node lst stp rst \\<le> lt\n  lt = Tip", "show ?thesis"], ["proof (prove)\nusing this:\n  Node lst stp rst \\<le> Node lt p rt\n  bdt (Node lt p rt) var = Some bdt1\n  Node lst stp rst \\<le> lt\n  lt = Tip\n\ngoal (1 subgoal):\n 1. \\<exists>lbdt. bdt lt var = Some lbdt", "by (simp add: le_dag_def)"], ["proof (state)\nthis:\n  \\<exists>lbdt. bdt lt var = Some lbdt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>Node lst stp rst \\<le> Node lt p rt;\n        bdt (Node lt p rt) var = Some bdt1; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> \\<exists>lbdt. bdt lt var = Some lbdt", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>Node lst stp rst \\<le> Node lt p rt;\n        bdt (Node lt p rt) var = Some bdt1; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> \\<exists>lbdt. bdt lt var = Some lbdt", "case (Node llt l rlt)"], ["proof (state)\nthis:\n  lt = Node llt l rlt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>Node lst stp rst \\<le> Node lt p rt;\n        bdt (Node lt p rt) var = Some bdt1; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> \\<exists>lbdt. bdt lt var = Some lbdt", "note lNode=this"], ["proof (state)\nthis:\n  lt = Node llt l rlt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>Node lst stp rst \\<le> Node lt p rt;\n        bdt (Node lt p rt) var = Some bdt1; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> \\<exists>lbdt. bdt lt var = Some lbdt", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>lbdt. bdt lt var = Some lbdt", "proof (cases rt)"], ["proof (state)\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow> \\<exists>lbdt. bdt lt var = Some lbdt\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       \\<exists>lbdt. bdt lt var = Some lbdt", "case Tip"], ["proof (state)\nthis:\n  rt = Tip\n\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow> \\<exists>lbdt. bdt lt var = Some lbdt\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       \\<exists>lbdt. bdt lt var = Some lbdt", "note rNode=this"], ["proof (state)\nthis:\n  rt = Tip\n\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow> \\<exists>lbdt. bdt lt var = Some lbdt\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       \\<exists>lbdt. bdt lt var = Some lbdt", "with lNode Node.prems"], ["proof (chain)\npicking this:\n  lt = Node llt l rlt\n  Node lst stp rst \\<le> Node lt p rt\n  bdt (Node lt p rt) var = Some bdt1\n  rt = Tip", "show ?thesis"], ["proof (prove)\nusing this:\n  lt = Node llt l rlt\n  Node lst stp rst \\<le> Node lt p rt\n  bdt (Node lt p rt) var = Some bdt1\n  rt = Tip\n\ngoal (1 subgoal):\n 1. \\<exists>lbdt. bdt lt var = Some lbdt", "by simp"], ["proof (state)\nthis:\n  \\<exists>lbdt. bdt lt var = Some lbdt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       \\<exists>lbdt. bdt lt var = Some lbdt", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       \\<exists>lbdt. bdt lt var = Some lbdt", "case (Node lrt r rrt)"], ["proof (state)\nthis:\n  rt = Node lrt r rrt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       \\<exists>lbdt. bdt lt var = Some lbdt", "note rNode=this"], ["proof (state)\nthis:\n  rt = Node lrt r rrt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       \\<exists>lbdt. bdt lt var = Some lbdt", "with lNode Node.prems"], ["proof (chain)\npicking this:\n  lt = Node llt l rlt\n  Node lst stp rst \\<le> Node lt p rt\n  bdt (Node lt p rt) var = Some bdt1\n  rt = Node lrt r rrt", "show ?thesis"], ["proof (prove)\nusing this:\n  lt = Node llt l rlt\n  Node lst stp rst \\<le> Node lt p rt\n  bdt (Node lt p rt) var = Some bdt1\n  rt = Node lrt r rrt\n\ngoal (1 subgoal):\n 1. \\<exists>lbdt. bdt lt var = Some lbdt", "by (simp split: option.splits)"], ["proof (state)\nthis:\n  \\<exists>lbdt. bdt lt var = Some lbdt\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>lbdt. bdt lt var = Some lbdt\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>lbdt. bdt lt var = Some lbdt\n\ngoal (2 subgoals):\n 1. Node lst stp rst \\<le> lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2\n 2. \\<not> Node lst stp rst \\<le> lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2", "then"], ["proof (chain)\npicking this:\n  \\<exists>lbdt. bdt lt var = Some lbdt", "obtain lbdt where \"bdt lt var = Some lbdt\""], ["proof (prove)\nusing this:\n  \\<exists>lbdt. bdt lt var = Some lbdt\n\ngoal (1 subgoal):\n 1. (\\<And>lbdt.\n        bdt lt var = Some lbdt \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  bdt lt var = Some lbdt\n\ngoal (2 subgoals):\n 1. Node lst stp rst \\<le> lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2\n 2. \\<not> Node lst stp rst \\<le> lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2", "with Node.prems in_lt"], ["proof (chain)\npicking this:\n  Node lst stp rst \\<le> Node lt p rt\n  bdt (Node lt p rt) var = Some bdt1\n  Node lst stp rst \\<le> lt\n  bdt lt var = Some lbdt", "show ?thesis"], ["proof (prove)\nusing this:\n  Node lst stp rst \\<le> Node lt p rt\n  bdt (Node lt p rt) var = Some bdt1\n  Node lst stp rst \\<le> lt\n  bdt lt var = Some lbdt\n\ngoal (1 subgoal):\n 1. \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Node lst stp rst \\<le> Node lt p rt;\n     bdt (Node lt p rt) var = Some bdt1; Node lst stp rst \\<le> lt;\n     bdt lt var = Some lbdt\\<rbrakk>\n    \\<Longrightarrow> \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2", "apply (rule Node.hyps)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Node lst stp rst \\<le> Node lt p rt;\n     bdt (Node lt p rt) var = Some bdt1; Node lst stp rst \\<le> lt;\n     bdt lt var = Some lbdt\\<rbrakk>\n    \\<Longrightarrow> Node lst stp rst \\<le> lt\n 2. \\<lbrakk>Node lst stp rst \\<le> Node lt p rt;\n     bdt (Node lt p rt) var = Some bdt1; Node lst stp rst \\<le> lt;\n     bdt lt var = Some lbdt\\<rbrakk>\n    \\<Longrightarrow> bdt lt var = Some ?bdt1.4", "apply assumption+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2\n\ngoal (1 subgoal):\n 1. \\<not> Node lst stp rst \\<le> lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> Node lst stp rst \\<le> lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2", "assume \" \\<not> Node lst stp rst \\<le> lt\""], ["proof (state)\nthis:\n  \\<not> Node lst stp rst \\<le> lt\n\ngoal (1 subgoal):\n 1. \\<not> Node lst stp rst \\<le> lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2", "with in_ltrt"], ["proof (chain)\npicking this:\n  Node lst stp rst \\<le> lt \\<or> Node lst stp rst \\<le> rt\n  \\<not> Node lst stp rst \\<le> lt", "have in_rt: \"Node lst stp rst <= rt\""], ["proof (prove)\nusing this:\n  Node lst stp rst \\<le> lt \\<or> Node lst stp rst \\<le> rt\n  \\<not> Node lst stp rst \\<le> lt\n\ngoal (1 subgoal):\n 1. Node lst stp rst \\<le> rt", "by simp"], ["proof (state)\nthis:\n  Node lst stp rst \\<le> rt\n\ngoal (1 subgoal):\n 1. \\<not> Node lst stp rst \\<le> lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2", "from Node.hyps"], ["proof (chain)\npicking this:\n  \\<lbrakk>Node lst stp rst \\<le> lt; bdt lt var = Some ?bdt1.0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2\n  \\<lbrakk>Node lst stp rst \\<le> rt; bdt rt var = Some ?bdt1.0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2", "have hyp2: \"\\<And> rbdt. \\<lbrakk>Node lst stp rst <= rt; bdt rt var = Some rbdt\\<rbrakk> \\<Longrightarrow> \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2\""], ["proof (prove)\nusing this:\n  \\<lbrakk>Node lst stp rst \\<le> lt; bdt lt var = Some ?bdt1.0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2\n  \\<lbrakk>Node lst stp rst \\<le> rt; bdt rt var = Some ?bdt1.0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2\n\ngoal (1 subgoal):\n 1. \\<And>rbdt.\n       \\<lbrakk>Node lst stp rst \\<le> rt; bdt rt var = Some rbdt\\<rbrakk>\n       \\<Longrightarrow> \\<exists>bdt2.\n                            bdt (Node lst stp rst) var = Some bdt2", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>Node lst stp rst \\<le> rt; bdt rt var = Some ?rbdt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2\n\ngoal (1 subgoal):\n 1. \\<not> Node lst stp rst \\<le> lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2", "from Node.prems"], ["proof (chain)\npicking this:\n  Node lst stp rst \\<le> Node lt p rt\n  bdt (Node lt p rt) var = Some bdt1", "have rbdt_def: \"\\<exists> rbdt. bdt rt var = Some rbdt\""], ["proof (prove)\nusing this:\n  Node lst stp rst \\<le> Node lt p rt\n  bdt (Node lt p rt) var = Some bdt1\n\ngoal (1 subgoal):\n 1. \\<exists>rbdt. bdt rt var = Some rbdt", "proof (cases rt)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>Node lst stp rst \\<le> Node lt p rt;\n     bdt (Node lt p rt) var = Some bdt1; rt = Tip\\<rbrakk>\n    \\<Longrightarrow> \\<exists>rbdt. bdt rt var = Some rbdt\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>Node lst stp rst \\<le> Node lt p rt;\n        bdt (Node lt p rt) var = Some bdt1; rt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rbdt. bdt rt var = Some rbdt", "case Tip"], ["proof (state)\nthis:\n  rt = Tip\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Node lst stp rst \\<le> Node lt p rt;\n     bdt (Node lt p rt) var = Some bdt1; rt = Tip\\<rbrakk>\n    \\<Longrightarrow> \\<exists>rbdt. bdt rt var = Some rbdt\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>Node lst stp rst \\<le> Node lt p rt;\n        bdt (Node lt p rt) var = Some bdt1; rt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rbdt. bdt rt var = Some rbdt", "with Node.prems in_rt"], ["proof (chain)\npicking this:\n  Node lst stp rst \\<le> Node lt p rt\n  bdt (Node lt p rt) var = Some bdt1\n  Node lst stp rst \\<le> rt\n  rt = Tip", "show ?thesis"], ["proof (prove)\nusing this:\n  Node lst stp rst \\<le> Node lt p rt\n  bdt (Node lt p rt) var = Some bdt1\n  Node lst stp rst \\<le> rt\n  rt = Tip\n\ngoal (1 subgoal):\n 1. \\<exists>rbdt. bdt rt var = Some rbdt", "by (simp add: le_dag_def)"], ["proof (state)\nthis:\n  \\<exists>rbdt. bdt rt var = Some rbdt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>Node lst stp rst \\<le> Node lt p rt;\n        bdt (Node lt p rt) var = Some bdt1; rt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rbdt. bdt rt var = Some rbdt", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>Node lst stp rst \\<le> Node lt p rt;\n        bdt (Node lt p rt) var = Some bdt1; rt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rbdt. bdt rt var = Some rbdt", "case (Node lrt l rrt)"], ["proof (state)\nthis:\n  rt = Node lrt l rrt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>Node lst stp rst \\<le> Node lt p rt;\n        bdt (Node lt p rt) var = Some bdt1; rt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rbdt. bdt rt var = Some rbdt", "note rNode=this"], ["proof (state)\nthis:\n  rt = Node lrt l rrt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>Node lst stp rst \\<le> Node lt p rt;\n        bdt (Node lt p rt) var = Some bdt1; rt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rbdt. bdt rt var = Some rbdt", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>rbdt. bdt rt var = Some rbdt", "proof (cases lt)"], ["proof (state)\ngoal (2 subgoals):\n 1. lt = Tip \\<Longrightarrow> \\<exists>rbdt. bdt rt var = Some rbdt\n 2. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow>\n       \\<exists>rbdt. bdt rt var = Some rbdt", "case Tip"], ["proof (state)\nthis:\n  lt = Tip\n\ngoal (2 subgoals):\n 1. lt = Tip \\<Longrightarrow> \\<exists>rbdt. bdt rt var = Some rbdt\n 2. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow>\n       \\<exists>rbdt. bdt rt var = Some rbdt", "note lNode=this"], ["proof (state)\nthis:\n  lt = Tip\n\ngoal (2 subgoals):\n 1. lt = Tip \\<Longrightarrow> \\<exists>rbdt. bdt rt var = Some rbdt\n 2. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow>\n       \\<exists>rbdt. bdt rt var = Some rbdt", "with rNode Node.prems"], ["proof (chain)\npicking this:\n  rt = Node lrt l rrt\n  Node lst stp rst \\<le> Node lt p rt\n  bdt (Node lt p rt) var = Some bdt1\n  lt = Tip", "show ?thesis"], ["proof (prove)\nusing this:\n  rt = Node lrt l rrt\n  Node lst stp rst \\<le> Node lt p rt\n  bdt (Node lt p rt) var = Some bdt1\n  lt = Tip\n\ngoal (1 subgoal):\n 1. \\<exists>rbdt. bdt rt var = Some rbdt", "by simp"], ["proof (state)\nthis:\n  \\<exists>rbdt. bdt rt var = Some rbdt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow>\n       \\<exists>rbdt. bdt rt var = Some rbdt", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow>\n       \\<exists>rbdt. bdt rt var = Some rbdt", "case (Node lrt r rrt)"], ["proof (state)\nthis:\n  lt = Node lrt r rrt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow>\n       \\<exists>rbdt. bdt rt var = Some rbdt", "note lNode=this"], ["proof (state)\nthis:\n  lt = Node lrt r rrt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow>\n       \\<exists>rbdt. bdt rt var = Some rbdt", "with rNode Node.prems"], ["proof (chain)\npicking this:\n  rt = Node lrt__ l rrt__\n  Node lst stp rst \\<le> Node lt p rt\n  bdt (Node lt p rt) var = Some bdt1\n  lt = Node lrt r rrt", "show ?thesis"], ["proof (prove)\nusing this:\n  rt = Node lrt__ l rrt__\n  Node lst stp rst \\<le> Node lt p rt\n  bdt (Node lt p rt) var = Some bdt1\n  lt = Node lrt r rrt\n\ngoal (1 subgoal):\n 1. \\<exists>rbdt. bdt rt var = Some rbdt", "by (simp split: option.splits)"], ["proof (state)\nthis:\n  \\<exists>rbdt. bdt rt var = Some rbdt\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>rbdt. bdt rt var = Some rbdt\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>rbdt. bdt rt var = Some rbdt\n\ngoal (1 subgoal):\n 1. \\<not> Node lst stp rst \\<le> lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2", "then"], ["proof (chain)\npicking this:\n  \\<exists>rbdt. bdt rt var = Some rbdt", "obtain rbdt where \"bdt rt var = Some rbdt\""], ["proof (prove)\nusing this:\n  \\<exists>rbdt. bdt rt var = Some rbdt\n\ngoal (1 subgoal):\n 1. (\\<And>rbdt.\n        bdt rt var = Some rbdt \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  bdt rt var = Some rbdt\n\ngoal (1 subgoal):\n 1. \\<not> Node lst stp rst \\<le> lt \\<Longrightarrow>\n    \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2", "with Node.prems in_rt"], ["proof (chain)\npicking this:\n  Node lst stp rst \\<le> Node lt p rt\n  bdt (Node lt p rt) var = Some bdt1\n  Node lst stp rst \\<le> rt\n  bdt rt var = Some rbdt", "show ?thesis"], ["proof (prove)\nusing this:\n  Node lst stp rst \\<le> Node lt p rt\n  bdt (Node lt p rt) var = Some bdt1\n  Node lst stp rst \\<le> rt\n  bdt rt var = Some rbdt\n\ngoal (1 subgoal):\n 1. \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Node lst stp rst \\<le> Node lt p rt;\n     bdt (Node lt p rt) var = Some bdt1; Node lst stp rst \\<le> rt;\n     bdt rt var = Some rbdt\\<rbrakk>\n    \\<Longrightarrow> \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2", "apply (rule hyp2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Node lst stp rst \\<le> Node lt p rt;\n     bdt (Node lt p rt) var = Some bdt1; Node lst stp rst \\<le> rt;\n     bdt rt var = Some rbdt\\<rbrakk>\n    \\<Longrightarrow> Node lst stp rst \\<le> rt\n 2. \\<lbrakk>Node lst stp rst \\<le> Node lt p rt;\n     bdt (Node lt p rt) var = Some bdt1; Node lst stp rst \\<le> rt;\n     bdt rt var = Some rbdt\\<rbrakk>\n    \\<Longrightarrow> bdt rt var = Some ?rbdt4", "apply assumption+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>bdt2. bdt (Node lst stp rst) var = Some bdt2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma var_ordered_children: \n\"\\<And> p. \\<lbrakk> Dag p low high t; ordered t var; no \\<in> set_of t; \n        low no \\<noteq> Null; high no \\<noteq> Null\\<rbrakk> \n       \\<Longrightarrow> var (low no) < var no \\<and> var (high no) < var no\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>Dag p low high t; ordered t var; no \\<in> set_of t;\n        low no \\<noteq> Null; high no \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> var (low no) < var no \\<and> var (high no) < var no", "proof (induct t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>Dag p low high Tip; ordered Tip var; no \\<in> set_of Tip;\n        low no \\<noteq> Null; high no \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> var (low no) < var no \\<and> var (high no) < var no\n 2. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>Dag p low high t1; ordered t1 var;\n                    no \\<in> set_of t1; low no \\<noteq> Null;\n                    high no \\<noteq> Null\\<rbrakk>\n                   \\<Longrightarrow> var (low no) < var no \\<and>\n                                     var (high no) < var no;\n        \\<And>p.\n           \\<lbrakk>Dag p low high t2; ordered t2 var; no \\<in> set_of t2;\n            low no \\<noteq> Null; high no \\<noteq> Null\\<rbrakk>\n           \\<Longrightarrow> var (low no) < var no \\<and>\n                             var (high no) < var no;\n        Dag p low high (Node t1 x2 t2); ordered (Node t1 x2 t2) var;\n        no \\<in> set_of (Node t1 x2 t2); low no \\<noteq> Null;\n        high no \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> var (low no) < var no \\<and> var (high no) < var no", "case Tip"], ["proof (state)\nthis:\n  Dag p low high Tip\n  ordered Tip var\n  no \\<in> set_of Tip\n  low no \\<noteq> Null\n  high no \\<noteq> Null\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>Dag p low high Tip; ordered Tip var; no \\<in> set_of Tip;\n        low no \\<noteq> Null; high no \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> var (low no) < var no \\<and> var (high no) < var no\n 2. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>Dag p low high t1; ordered t1 var;\n                    no \\<in> set_of t1; low no \\<noteq> Null;\n                    high no \\<noteq> Null\\<rbrakk>\n                   \\<Longrightarrow> var (low no) < var no \\<and>\n                                     var (high no) < var no;\n        \\<And>p.\n           \\<lbrakk>Dag p low high t2; ordered t2 var; no \\<in> set_of t2;\n            low no \\<noteq> Null; high no \\<noteq> Null\\<rbrakk>\n           \\<Longrightarrow> var (low no) < var no \\<and>\n                             var (high no) < var no;\n        Dag p low high (Node t1 x2 t2); ordered (Node t1 x2 t2) var;\n        no \\<in> set_of (Node t1 x2 t2); low no \\<noteq> Null;\n        high no \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> var (low no) < var no \\<and> var (high no) < var no", "then"], ["proof (chain)\npicking this:\n  Dag p low high Tip\n  ordered Tip var\n  no \\<in> set_of Tip\n  low no \\<noteq> Null\n  high no \\<noteq> Null", "show ?case"], ["proof (prove)\nusing this:\n  Dag p low high Tip\n  ordered Tip var\n  no \\<in> set_of Tip\n  low no \\<noteq> Null\n  high no \\<noteq> Null\n\ngoal (1 subgoal):\n 1. var (low no) < var no \\<and> var (high no) < var no", "by simp"], ["proof (state)\nthis:\n  var (low no) < var no \\<and> var (high no) < var no\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>Dag p low high t1; ordered t1 var;\n                    no \\<in> set_of t1; low no \\<noteq> Null;\n                    high no \\<noteq> Null\\<rbrakk>\n                   \\<Longrightarrow> var (low no) < var no \\<and>\n                                     var (high no) < var no;\n        \\<And>p.\n           \\<lbrakk>Dag p low high t2; ordered t2 var; no \\<in> set_of t2;\n            low no \\<noteq> Null; high no \\<noteq> Null\\<rbrakk>\n           \\<Longrightarrow> var (low no) < var no \\<and>\n                             var (high no) < var no;\n        Dag p low high (Node t1 x2 t2); ordered (Node t1 x2 t2) var;\n        no \\<in> set_of (Node t1 x2 t2); low no \\<noteq> Null;\n        high no \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> var (low no) < var no \\<and> var (high no) < var no", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>Dag p low high t1; ordered t1 var;\n                    no \\<in> set_of t1; low no \\<noteq> Null;\n                    high no \\<noteq> Null\\<rbrakk>\n                   \\<Longrightarrow> var (low no) < var no \\<and>\n                                     var (high no) < var no;\n        \\<And>p.\n           \\<lbrakk>Dag p low high t2; ordered t2 var; no \\<in> set_of t2;\n            low no \\<noteq> Null; high no \\<noteq> Null\\<rbrakk>\n           \\<Longrightarrow> var (low no) < var no \\<and>\n                             var (high no) < var no;\n        Dag p low high (Node t1 x2 t2); ordered (Node t1 x2 t2) var;\n        no \\<in> set_of (Node t1 x2 t2); low no \\<noteq> Null;\n        high no \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> var (low no) < var no \\<and> var (high no) < var no", "case (Node lt po rt)"], ["proof (state)\nthis:\n  \\<lbrakk>Dag ?p low high lt; ordered lt var; no \\<in> set_of lt;\n   low no \\<noteq> Null; high no \\<noteq> Null\\<rbrakk>\n  \\<Longrightarrow> var (low no) < var no \\<and> var (high no) < var no\n  \\<lbrakk>Dag ?p low high rt; ordered rt var; no \\<in> set_of rt;\n   low no \\<noteq> Null; high no \\<noteq> Null\\<rbrakk>\n  \\<Longrightarrow> var (low no) < var no \\<and> var (high no) < var no\n  Dag p low high (Node lt po rt)\n  ordered (Node lt po rt) var\n  no \\<in> set_of (Node lt po rt)\n  low no \\<noteq> Null\n  high no \\<noteq> Null\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>Dag p low high t1; ordered t1 var;\n                    no \\<in> set_of t1; low no \\<noteq> Null;\n                    high no \\<noteq> Null\\<rbrakk>\n                   \\<Longrightarrow> var (low no) < var no \\<and>\n                                     var (high no) < var no;\n        \\<And>p.\n           \\<lbrakk>Dag p low high t2; ordered t2 var; no \\<in> set_of t2;\n            low no \\<noteq> Null; high no \\<noteq> Null\\<rbrakk>\n           \\<Longrightarrow> var (low no) < var no \\<and>\n                             var (high no) < var no;\n        Dag p low high (Node t1 x2 t2); ordered (Node t1 x2 t2) var;\n        no \\<in> set_of (Node t1 x2 t2); low no \\<noteq> Null;\n        high no \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> var (low no) < var no \\<and> var (high no) < var no", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>Dag ?p low high lt; ordered lt var; no \\<in> set_of lt;\n   low no \\<noteq> Null; high no \\<noteq> Null\\<rbrakk>\n  \\<Longrightarrow> var (low no) < var no \\<and> var (high no) < var no\n  \\<lbrakk>Dag ?p low high rt; ordered rt var; no \\<in> set_of rt;\n   low no \\<noteq> Null; high no \\<noteq> Null\\<rbrakk>\n  \\<Longrightarrow> var (low no) < var no \\<and> var (high no) < var no\n  Dag p low high (Node lt po rt)\n  ordered (Node lt po rt) var\n  no \\<in> set_of (Node lt po rt)\n  low no \\<noteq> Null\n  high no \\<noteq> Null", "have ppo: \"p=po\""], ["proof (prove)\nusing this:\n  \\<lbrakk>Dag ?p low high lt; ordered lt var; no \\<in> set_of lt;\n   low no \\<noteq> Null; high no \\<noteq> Null\\<rbrakk>\n  \\<Longrightarrow> var (low no) < var no \\<and> var (high no) < var no\n  \\<lbrakk>Dag ?p low high rt; ordered rt var; no \\<in> set_of rt;\n   low no \\<noteq> Null; high no \\<noteq> Null\\<rbrakk>\n  \\<Longrightarrow> var (low no) < var no \\<and> var (high no) < var no\n  Dag p low high (Node lt po rt)\n  ordered (Node lt po rt) var\n  no \\<in> set_of (Node lt po rt)\n  low no \\<noteq> Null\n  high no \\<noteq> Null\n\ngoal (1 subgoal):\n 1. p = po", "by simp"], ["proof (state)\nthis:\n  p = po\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>Dag p low high t1; ordered t1 var;\n                    no \\<in> set_of t1; low no \\<noteq> Null;\n                    high no \\<noteq> Null\\<rbrakk>\n                   \\<Longrightarrow> var (low no) < var no \\<and>\n                                     var (high no) < var no;\n        \\<And>p.\n           \\<lbrakk>Dag p low high t2; ordered t2 var; no \\<in> set_of t2;\n            low no \\<noteq> Null; high no \\<noteq> Null\\<rbrakk>\n           \\<Longrightarrow> var (low no) < var no \\<and>\n                             var (high no) < var no;\n        Dag p low high (Node t1 x2 t2); ordered (Node t1 x2 t2) var;\n        no \\<in> set_of (Node t1 x2 t2); low no \\<noteq> Null;\n        high no \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> var (low no) < var no \\<and> var (high no) < var no", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. var (low no) < var no \\<and> var (high no) < var no", "proof (cases \"no = po\")"], ["proof (state)\ngoal (2 subgoals):\n 1. no = po \\<Longrightarrow>\n    var (low no) < var no \\<and> var (high no) < var no\n 2. no \\<noteq> po \\<Longrightarrow>\n    var (low no) < var no \\<and> var (high no) < var no", "case True"], ["proof (state)\nthis:\n  no = po\n\ngoal (2 subgoals):\n 1. no = po \\<Longrightarrow>\n    var (low no) < var no \\<and> var (high no) < var no\n 2. no \\<noteq> po \\<Longrightarrow>\n    var (low no) < var no \\<and> var (high no) < var no", "note no_po=this"], ["proof (state)\nthis:\n  no = po\n\ngoal (2 subgoals):\n 1. no = po \\<Longrightarrow>\n    var (low no) < var no \\<and> var (high no) < var no\n 2. no \\<noteq> po \\<Longrightarrow>\n    var (low no) < var no \\<and> var (high no) < var no", "from Node.prems"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt po rt)\n  ordered (Node lt po rt) var\n  no \\<in> set_of (Node lt po rt)\n  low no \\<noteq> Null\n  high no \\<noteq> Null", "have \"var (low po) < var po \\<and> var (high po) < var po\""], ["proof (prove)\nusing this:\n  Dag p low high (Node lt po rt)\n  ordered (Node lt po rt) var\n  no \\<in> set_of (Node lt po rt)\n  low no \\<noteq> Null\n  high no \\<noteq> Null\n\ngoal (1 subgoal):\n 1. var (low po) < var po \\<and> var (high po) < var po", "proof (cases lt)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>Dag p low high (Node lt po rt); ordered (Node lt po rt) var;\n     no \\<in> set_of (Node lt po rt); low no \\<noteq> Null;\n     high no \\<noteq> Null; lt = Tip\\<rbrakk>\n    \\<Longrightarrow> var (low po) < var po \\<and> var (high po) < var po\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>Dag p low high (Node lt po rt); ordered (Node lt po rt) var;\n        no \\<in> set_of (Node lt po rt); low no \\<noteq> Null;\n        high no \\<noteq> Null; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> var (low po) < var po \\<and> var (high po) < var po", "case Tip"], ["proof (state)\nthis:\n  lt = Tip\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Dag p low high (Node lt po rt); ordered (Node lt po rt) var;\n     no \\<in> set_of (Node lt po rt); low no \\<noteq> Null;\n     high no \\<noteq> Null; lt = Tip\\<rbrakk>\n    \\<Longrightarrow> var (low po) < var po \\<and> var (high po) < var po\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>Dag p low high (Node lt po rt); ordered (Node lt po rt) var;\n        no \\<in> set_of (Node lt po rt); low no \\<noteq> Null;\n        high no \\<noteq> Null; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> var (low po) < var po \\<and> var (high po) < var po", "note ltTip=this"], ["proof (state)\nthis:\n  lt = Tip\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Dag p low high (Node lt po rt); ordered (Node lt po rt) var;\n     no \\<in> set_of (Node lt po rt); low no \\<noteq> Null;\n     high no \\<noteq> Null; lt = Tip\\<rbrakk>\n    \\<Longrightarrow> var (low po) < var po \\<and> var (high po) < var po\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>Dag p low high (Node lt po rt); ordered (Node lt po rt) var;\n        no \\<in> set_of (Node lt po rt); low no \\<noteq> Null;\n        high no \\<noteq> Null; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> var (low po) < var po \\<and> var (high po) < var po", "with Node.prems no_po ppo"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt po rt)\n  ordered (Node lt po rt) var\n  no \\<in> set_of (Node lt po rt)\n  low no \\<noteq> Null\n  high no \\<noteq> Null\n  no = po\n  p = po\n  lt = Tip", "show ?thesis"], ["proof (prove)\nusing this:\n  Dag p low high (Node lt po rt)\n  ordered (Node lt po rt) var\n  no \\<in> set_of (Node lt po rt)\n  low no \\<noteq> Null\n  high no \\<noteq> Null\n  no = po\n  p = po\n  lt = Tip\n\ngoal (1 subgoal):\n 1. var (low po) < var po \\<and> var (high po) < var po", "by simp"], ["proof (state)\nthis:\n  var (low po) < var po \\<and> var (high po) < var po\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>Dag p low high (Node lt po rt); ordered (Node lt po rt) var;\n        no \\<in> set_of (Node lt po rt); low no \\<noteq> Null;\n        high no \\<noteq> Null; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> var (low po) < var po \\<and> var (high po) < var po", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>Dag p low high (Node lt po rt); ordered (Node lt po rt) var;\n        no \\<in> set_of (Node lt po rt); low no \\<noteq> Null;\n        high no \\<noteq> Null; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> var (low po) < var po \\<and> var (high po) < var po", "case (Node llt l rlt)"], ["proof (state)\nthis:\n  lt = Node llt l rlt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>Dag p low high (Node lt po rt); ordered (Node lt po rt) var;\n        no \\<in> set_of (Node lt po rt); low no \\<noteq> Null;\n        high no \\<noteq> Null; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> var (low po) < var po \\<and> var (high po) < var po", "note lNode=this"], ["proof (state)\nthis:\n  lt = Node llt l rlt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>Dag p low high (Node lt po rt); ordered (Node lt po rt) var;\n        no \\<in> set_of (Node lt po rt); low no \\<noteq> Null;\n        high no \\<noteq> Null; lt = Node x21 x22 x23\\<rbrakk>\n       \\<Longrightarrow> var (low po) < var po \\<and> var (high po) < var po", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. var (low po) < var po \\<and> var (high po) < var po", "proof (cases rt)"], ["proof (state)\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow>\n    var (low po) < var po \\<and> var (high po) < var po\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       var (low po) < var po \\<and> var (high po) < var po", "case Tip"], ["proof (state)\nthis:\n  rt = Tip\n\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow>\n    var (low po) < var po \\<and> var (high po) < var po\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       var (low po) < var po \\<and> var (high po) < var po", "note rTip=this"], ["proof (state)\nthis:\n  rt = Tip\n\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow>\n    var (low po) < var po \\<and> var (high po) < var po\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       var (low po) < var po \\<and> var (high po) < var po", "with Node.prems no_po ppo"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt po rt)\n  ordered (Node lt po rt) var\n  no \\<in> set_of (Node lt po rt)\n  low no \\<noteq> Null\n  high no \\<noteq> Null\n  no = po\n  p = po\n  rt = Tip", "show ?thesis"], ["proof (prove)\nusing this:\n  Dag p low high (Node lt po rt)\n  ordered (Node lt po rt) var\n  no \\<in> set_of (Node lt po rt)\n  low no \\<noteq> Null\n  high no \\<noteq> Null\n  no = po\n  p = po\n  rt = Tip\n\ngoal (1 subgoal):\n 1. var (low po) < var po \\<and> var (high po) < var po", "by simp"], ["proof (state)\nthis:\n  var (low po) < var po \\<and> var (high po) < var po\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       var (low po) < var po \\<and> var (high po) < var po", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       var (low po) < var po \\<and> var (high po) < var po", "case (Node lrt r rrt)"], ["proof (state)\nthis:\n  rt = Node lrt r rrt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       var (low po) < var po \\<and> var (high po) < var po", "note rNode=this"], ["proof (state)\nthis:\n  rt = Node lrt r rrt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       var (low po) < var po \\<and> var (high po) < var po", "with Node.prems ppo no_po lNode"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt po rt)\n  ordered (Node lt po rt) var\n  no \\<in> set_of (Node lt po rt)\n  low no \\<noteq> Null\n  high no \\<noteq> Null\n  p = po\n  no = po\n  lt = Node llt l rlt\n  rt = Node lrt r rrt", "show ?thesis"], ["proof (prove)\nusing this:\n  Dag p low high (Node lt po rt)\n  ordered (Node lt po rt) var\n  no \\<in> set_of (Node lt po rt)\n  low no \\<noteq> Null\n  high no \\<noteq> Null\n  p = po\n  no = po\n  lt = Node llt l rlt\n  rt = Node lrt r rrt\n\ngoal (1 subgoal):\n 1. var (low po) < var po \\<and> var (high po) < var po", "by (simp del: Dag_Ref)"], ["proof (state)\nthis:\n  var (low po) < var po \\<and> var (high po) < var po\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  var (low po) < var po \\<and> var (high po) < var po\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  var (low po) < var po \\<and> var (high po) < var po\n\ngoal (2 subgoals):\n 1. no = po \\<Longrightarrow>\n    var (low no) < var no \\<and> var (high no) < var no\n 2. no \\<noteq> po \\<Longrightarrow>\n    var (low no) < var no \\<and> var (high no) < var no", "with no_po"], ["proof (chain)\npicking this:\n  no = po\n  var (low po) < var po \\<and> var (high po) < var po", "show ?thesis"], ["proof (prove)\nusing this:\n  no = po\n  var (low po) < var po \\<and> var (high po) < var po\n\ngoal (1 subgoal):\n 1. var (low no) < var no \\<and> var (high no) < var no", "by simp"], ["proof (state)\nthis:\n  var (low no) < var no \\<and> var (high no) < var no\n\ngoal (1 subgoal):\n 1. no \\<noteq> po \\<Longrightarrow>\n    var (low no) < var no \\<and> var (high no) < var no", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. no \\<noteq> po \\<Longrightarrow>\n    var (low no) < var no \\<and> var (high no) < var no", "assume \" no \\<noteq> po\""], ["proof (state)\nthis:\n  no \\<noteq> po\n\ngoal (1 subgoal):\n 1. no \\<noteq> po \\<Longrightarrow>\n    var (low no) < var no \\<and> var (high no) < var no", "with Node.prems"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt po rt)\n  ordered (Node lt po rt) var\n  no \\<in> set_of (Node lt po rt)\n  low no \\<noteq> Null\n  high no \\<noteq> Null\n  no \\<noteq> po", "have no_in_ltrt: \"no \\<in> set_of lt \\<or> no \\<in> set_of rt\""], ["proof (prove)\nusing this:\n  Dag p low high (Node lt po rt)\n  ordered (Node lt po rt) var\n  no \\<in> set_of (Node lt po rt)\n  low no \\<noteq> Null\n  high no \\<noteq> Null\n  no \\<noteq> po\n\ngoal (1 subgoal):\n 1. no \\<in> set_of lt \\<or> no \\<in> set_of rt", "by simp"], ["proof (state)\nthis:\n  no \\<in> set_of lt \\<or> no \\<in> set_of rt\n\ngoal (1 subgoal):\n 1. no \\<noteq> po \\<Longrightarrow>\n    var (low no) < var no \\<and> var (high no) < var no", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. var (low no) < var no \\<and> var (high no) < var no", "proof (cases \"no \\<in> set_of lt\")"], ["proof (state)\ngoal (2 subgoals):\n 1. no \\<in> set_of lt \\<Longrightarrow>\n    var (low no) < var no \\<and> var (high no) < var no\n 2. no \\<notin> set_of lt \\<Longrightarrow>\n    var (low no) < var no \\<and> var (high no) < var no", "case True"], ["proof (state)\nthis:\n  no \\<in> set_of lt\n\ngoal (2 subgoals):\n 1. no \\<in> set_of lt \\<Longrightarrow>\n    var (low no) < var no \\<and> var (high no) < var no\n 2. no \\<notin> set_of lt \\<Longrightarrow>\n    var (low no) < var no \\<and> var (high no) < var no", "note no_in_lt=this"], ["proof (state)\nthis:\n  no \\<in> set_of lt\n\ngoal (2 subgoals):\n 1. no \\<in> set_of lt \\<Longrightarrow>\n    var (low no) < var no \\<and> var (high no) < var no\n 2. no \\<notin> set_of lt \\<Longrightarrow>\n    var (low no) < var no \\<and> var (high no) < var no", "from Node.prems ppo"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt po rt)\n  ordered (Node lt po rt) var\n  no \\<in> set_of (Node lt po rt)\n  low no \\<noteq> Null\n  high no \\<noteq> Null\n  p = po", "have lt_dag: \"Dag (low po) low high lt\""], ["proof (prove)\nusing this:\n  Dag p low high (Node lt po rt)\n  ordered (Node lt po rt) var\n  no \\<in> set_of (Node lt po rt)\n  low no \\<noteq> Null\n  high no \\<noteq> Null\n  p = po\n\ngoal (1 subgoal):\n 1. Dag (low po) low high lt", "by simp"], ["proof (state)\nthis:\n  Dag (low po) low high lt\n\ngoal (2 subgoals):\n 1. no \\<in> set_of lt \\<Longrightarrow>\n    var (low no) < var no \\<and> var (high no) < var no\n 2. no \\<notin> set_of lt \\<Longrightarrow>\n    var (low no) < var no \\<and> var (high no) < var no", "from Node.prems"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt po rt)\n  ordered (Node lt po rt) var\n  no \\<in> set_of (Node lt po rt)\n  low no \\<noteq> Null\n  high no \\<noteq> Null", "have ord_lt: \"ordered lt var\""], ["proof (prove)\nusing this:\n  Dag p low high (Node lt po rt)\n  ordered (Node lt po rt) var\n  no \\<in> set_of (Node lt po rt)\n  low no \\<noteq> Null\n  high no \\<noteq> Null\n\ngoal (1 subgoal):\n 1. ordered lt var", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag p low high (Node lt po rt); ordered (Node lt po rt) var;\n     no \\<in> set_of (Node lt po rt); low no \\<noteq> Null;\n     high no \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> ordered lt var", "apply (drule children_ordered)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag p low high (Node lt po rt);\n     no \\<in> set_of (Node lt po rt); low no \\<noteq> Null;\n     high no \\<noteq> Null; ordered lt var \\<and> ordered rt var\\<rbrakk>\n    \\<Longrightarrow> ordered lt var", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ordered lt var\n\ngoal (2 subgoals):\n 1. no \\<in> set_of lt \\<Longrightarrow>\n    var (low no) < var no \\<and> var (high no) < var no\n 2. no \\<notin> set_of lt \\<Longrightarrow>\n    var (low no) < var no \\<and> var (high no) < var no", "from no_in_lt lt_dag ord_lt Node.prems"], ["proof (chain)\npicking this:\n  no \\<in> set_of lt\n  Dag (low po) low high lt\n  ordered lt var\n  Dag p low high (Node lt po rt)\n  ordered (Node lt po rt) var\n  no \\<in> set_of (Node lt po rt)\n  low no \\<noteq> Null\n  high no \\<noteq> Null", "show ?thesis"], ["proof (prove)\nusing this:\n  no \\<in> set_of lt\n  Dag (low po) low high lt\n  ordered lt var\n  Dag p low high (Node lt po rt)\n  ordered (Node lt po rt) var\n  no \\<in> set_of (Node lt po rt)\n  low no \\<noteq> Null\n  high no \\<noteq> Null\n\ngoal (1 subgoal):\n 1. var (low no) < var no \\<and> var (high no) < var no", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>no \\<in> set_of lt; Dag (low po) low high lt; ordered lt var;\n     Dag p low high (Node lt po rt); ordered (Node lt po rt) var;\n     no \\<in> set_of (Node lt po rt); low no \\<noteq> Null;\n     high no \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> var (low no) < var no \\<and> var (high no) < var no", "apply (rule Node.hyps)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>no \\<in> set_of lt; Dag (low po) low high lt; ordered lt var;\n     Dag p low high (Node lt po rt); ordered (Node lt po rt) var;\n     no \\<in> set_of (Node lt po rt); low no \\<noteq> Null;\n     high no \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> Dag ?p8 low high lt\n 2. \\<lbrakk>no \\<in> set_of lt; Dag (low po) low high lt; ordered lt var;\n     Dag p low high (Node lt po rt); ordered (Node lt po rt) var;\n     no \\<in> set_of (Node lt po rt); low no \\<noteq> Null;\n     high no \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> ordered lt var\n 3. \\<lbrakk>no \\<in> set_of lt; Dag (low po) low high lt; ordered lt var;\n     Dag p low high (Node lt po rt); ordered (Node lt po rt) var;\n     no \\<in> set_of (Node lt po rt); low no \\<noteq> Null;\n     high no \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> no \\<in> set_of lt\n 4. \\<lbrakk>no \\<in> set_of lt; Dag (low po) low high lt; ordered lt var;\n     Dag p low high (Node lt po rt); ordered (Node lt po rt) var;\n     no \\<in> set_of (Node lt po rt); low no \\<noteq> Null;\n     high no \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> low no \\<noteq> Null\n 5. \\<lbrakk>no \\<in> set_of lt; Dag (low po) low high lt; ordered lt var;\n     Dag p low high (Node lt po rt); ordered (Node lt po rt) var;\n     no \\<in> set_of (Node lt po rt); low no \\<noteq> Null;\n     high no \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> high no \\<noteq> Null", "apply assumption+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  var (low no) < var no \\<and> var (high no) < var no\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lt \\<Longrightarrow>\n    var (low no) < var no \\<and> var (high no) < var no", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. no \\<notin> set_of lt \\<Longrightarrow>\n    var (low no) < var no \\<and> var (high no) < var no", "assume \" no \\<notin> set_of lt\""], ["proof (state)\nthis:\n  no \\<notin> set_of lt\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lt \\<Longrightarrow>\n    var (low no) < var no \\<and> var (high no) < var no", "with no_in_ltrt"], ["proof (chain)\npicking this:\n  no \\<in> set_of lt \\<or> no \\<in> set_of rt\n  no \\<notin> set_of lt", "have no_in_rt: \"no \\<in> set_of rt\""], ["proof (prove)\nusing this:\n  no \\<in> set_of lt \\<or> no \\<in> set_of rt\n  no \\<notin> set_of lt\n\ngoal (1 subgoal):\n 1. no \\<in> set_of rt", "by simp"], ["proof (state)\nthis:\n  no \\<in> set_of rt\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lt \\<Longrightarrow>\n    var (low no) < var no \\<and> var (high no) < var no", "from Node.prems ppo"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt po rt)\n  ordered (Node lt po rt) var\n  no \\<in> set_of (Node lt po rt)\n  low no \\<noteq> Null\n  high no \\<noteq> Null\n  p = po", "have rt_dag: \"Dag (high po) low high rt\""], ["proof (prove)\nusing this:\n  Dag p low high (Node lt po rt)\n  ordered (Node lt po rt) var\n  no \\<in> set_of (Node lt po rt)\n  low no \\<noteq> Null\n  high no \\<noteq> Null\n  p = po\n\ngoal (1 subgoal):\n 1. Dag (high po) low high rt", "by simp"], ["proof (state)\nthis:\n  Dag (high po) low high rt\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lt \\<Longrightarrow>\n    var (low no) < var no \\<and> var (high no) < var no", "from Node.hyps"], ["proof (chain)\npicking this:\n  \\<lbrakk>Dag ?p low high lt; ordered lt var; no \\<in> set_of lt;\n   low no \\<noteq> Null; high no \\<noteq> Null\\<rbrakk>\n  \\<Longrightarrow> var (low no) < var no \\<and> var (high no) < var no\n  \\<lbrakk>Dag ?p low high rt; ordered rt var; no \\<in> set_of rt;\n   low no \\<noteq> Null; high no \\<noteq> Null\\<rbrakk>\n  \\<Longrightarrow> var (low no) < var no \\<and> var (high no) < var no", "have hyp2: \" \\<lbrakk>Dag (high po) low high rt; ordered rt var; no \\<in> set_of rt; low no \\<noteq> Null; high no \\<noteq> Null\\<rbrakk>\n                                  \\<Longrightarrow> var (low no) < var no \\<and> var (high no) < var no\""], ["proof (prove)\nusing this:\n  \\<lbrakk>Dag ?p low high lt; ordered lt var; no \\<in> set_of lt;\n   low no \\<noteq> Null; high no \\<noteq> Null\\<rbrakk>\n  \\<Longrightarrow> var (low no) < var no \\<and> var (high no) < var no\n  \\<lbrakk>Dag ?p low high rt; ordered rt var; no \\<in> set_of rt;\n   low no \\<noteq> Null; high no \\<noteq> Null\\<rbrakk>\n  \\<Longrightarrow> var (low no) < var no \\<and> var (high no) < var no\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag (high po) low high rt; ordered rt var; no \\<in> set_of rt;\n     low no \\<noteq> Null; high no \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> var (low no) < var no \\<and> var (high no) < var no", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>Dag (high po) low high rt; ordered rt var; no \\<in> set_of rt;\n   low no \\<noteq> Null; high no \\<noteq> Null\\<rbrakk>\n  \\<Longrightarrow> var (low no) < var no \\<and> var (high no) < var no\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lt \\<Longrightarrow>\n    var (low no) < var no \\<and> var (high no) < var no", "from Node.prems"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt po rt)\n  ordered (Node lt po rt) var\n  no \\<in> set_of (Node lt po rt)\n  low no \\<noteq> Null\n  high no \\<noteq> Null", "have ord_rt: \"ordered rt var\""], ["proof (prove)\nusing this:\n  Dag p low high (Node lt po rt)\n  ordered (Node lt po rt) var\n  no \\<in> set_of (Node lt po rt)\n  low no \\<noteq> Null\n  high no \\<noteq> Null\n\ngoal (1 subgoal):\n 1. ordered rt var", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag p low high (Node lt po rt); ordered (Node lt po rt) var;\n     no \\<in> set_of (Node lt po rt); low no \\<noteq> Null;\n     high no \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> ordered rt var", "apply (drule children_ordered)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag p low high (Node lt po rt);\n     no \\<in> set_of (Node lt po rt); low no \\<noteq> Null;\n     high no \\<noteq> Null; ordered lt var \\<and> ordered rt var\\<rbrakk>\n    \\<Longrightarrow> ordered rt var", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ordered rt var\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lt \\<Longrightarrow>\n    var (low no) < var no \\<and> var (high no) < var no", "from rt_dag ord_rt no_in_rt Node.prems"], ["proof (chain)\npicking this:\n  Dag (high po) low high rt\n  ordered rt var\n  no \\<in> set_of rt\n  Dag p low high (Node lt po rt)\n  ordered (Node lt po rt) var\n  no \\<in> set_of (Node lt po rt)\n  low no \\<noteq> Null\n  high no \\<noteq> Null", "show ?thesis"], ["proof (prove)\nusing this:\n  Dag (high po) low high rt\n  ordered rt var\n  no \\<in> set_of rt\n  Dag p low high (Node lt po rt)\n  ordered (Node lt po rt) var\n  no \\<in> set_of (Node lt po rt)\n  low no \\<noteq> Null\n  high no \\<noteq> Null\n\ngoal (1 subgoal):\n 1. var (low no) < var no \\<and> var (high no) < var no", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag (high po) low high rt; ordered rt var; no \\<in> set_of rt;\n     Dag p low high (Node lt po rt); ordered (Node lt po rt) var;\n     no \\<in> set_of (Node lt po rt); low no \\<noteq> Null;\n     high no \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> var (low no) < var no \\<and> var (high no) < var no", "apply (rule hyp2)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>Dag (high po) low high rt; ordered rt var; no \\<in> set_of rt;\n     Dag p low high (Node lt po rt); ordered (Node lt po rt) var;\n     no \\<in> set_of (Node lt po rt); low no \\<noteq> Null;\n     high no \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> Dag (high po) low high rt\n 2. \\<lbrakk>Dag (high po) low high rt; ordered rt var; no \\<in> set_of rt;\n     Dag p low high (Node lt po rt); ordered (Node lt po rt) var;\n     no \\<in> set_of (Node lt po rt); low no \\<noteq> Null;\n     high no \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> ordered rt var\n 3. \\<lbrakk>Dag (high po) low high rt; ordered rt var; no \\<in> set_of rt;\n     Dag p low high (Node lt po rt); ordered (Node lt po rt) var;\n     no \\<in> set_of (Node lt po rt); low no \\<noteq> Null;\n     high no \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> no \\<in> set_of rt\n 4. \\<lbrakk>Dag (high po) low high rt; ordered rt var; no \\<in> set_of rt;\n     Dag p low high (Node lt po rt); ordered (Node lt po rt) var;\n     no \\<in> set_of (Node lt po rt); low no \\<noteq> Null;\n     high no \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> low no \\<noteq> Null\n 5. \\<lbrakk>Dag (high po) low high rt; ordered rt var; no \\<in> set_of rt;\n     Dag p low high (Node lt po rt); ordered (Node lt po rt) var;\n     no \\<in> set_of (Node lt po rt); low no \\<noteq> Null;\n     high no \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> high no \\<noteq> Null", "apply assumption+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  var (low no) < var no \\<and> var (high no) < var no\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  var (low no) < var no \\<and> var (high no) < var no\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  var (low no) < var no \\<and> var (high no) < var no\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nort_null_comp:\nassumes pret_dag: \"Dag p low high pret\" and\n        prebdt_pret: \"bdt pret var = Some prebdt\" and\n        nort_dag: \"Dag (repc no) (repb \\<propto> low) (repb \\<propto> high) nort\" and\n        ord_pret: \"ordered pret var\" and\n        wf_llb: \"wf_ll pret levellistb var\" and\n        nbsll: \"nb < length levellistb\" and\n        repbc_nc: \"\\<forall> nt. nt \\<notin> set (levellistb ! nb) \\<longrightarrow> repb nt = repc nt\" and\n        xsnb_in_pret: \"\\<forall> x \\<in> set_of nort. var x < nb \\<and> x \\<in> set_of pret\"\nshows \"\\<forall> x \\<in> set_of nort. ((repc \\<propto> low) x = (repb \\<propto> low) x \\<and> \n                           (repc \\<propto> high) x = (repb \\<propto> high) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set_of nort.\n       (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n       (repc \\<propto> high) x = (repb \\<propto> high) x", "proof (rule ballI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set_of nort \\<Longrightarrow>\n       (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n       (repc \\<propto> high) x = (repb \\<propto> high) x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set_of nort \\<Longrightarrow>\n       (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n       (repc \\<propto> high) x = (repb \\<propto> high) x", "assume x_in_nort: \"x \\<in> set_of nort\""], ["proof (state)\nthis:\n  x \\<in> set_of nort\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set_of nort \\<Longrightarrow>\n       (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n       (repc \\<propto> high) x = (repb \\<propto> high) x", "with nort_dag"], ["proof (chain)\npicking this:\n  Dag (repc no) (repb \\<propto> low) (repb \\<propto> high) nort\n  x \\<in> set_of nort", "have xnN: \"x \\<noteq> Null\""], ["proof (prove)\nusing this:\n  Dag (repc no) (repb \\<propto> low) (repb \\<propto> high) nort\n  x \\<in> set_of nort\n\ngoal (1 subgoal):\n 1. x \\<noteq> Null", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag (repc no) (repb \\<propto> low) (repb \\<propto> high) nort;\n     x \\<in> set_of nort\\<rbrakk>\n    \\<Longrightarrow> x \\<noteq> Null", "apply (rule set_of_nn [rule_format])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Dag (repc no) (repb \\<propto> low) (repb \\<propto> high) nort;\n     x \\<in> set_of nort\\<rbrakk>\n    \\<Longrightarrow> Dag ?p2 ?low2 ?high2 ?t2\n 2. \\<lbrakk>Dag (repc no) (repb \\<propto> low) (repb \\<propto> high) nort;\n     x \\<in> set_of nort\\<rbrakk>\n    \\<Longrightarrow> x \\<in> set_of ?t2", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  x \\<noteq> Null\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set_of nort \\<Longrightarrow>\n       (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n       (repc \\<propto> high) x = (repb \\<propto> high) x", "from x_in_nort xsnb_in_pret"], ["proof (chain)\npicking this:\n  x \\<in> set_of nort\n  \\<forall>x\\<in>set_of nort. var x < nb \\<and> x \\<in> set_of pret", "have xsnb: \"var x <nb\""], ["proof (prove)\nusing this:\n  x \\<in> set_of nort\n  \\<forall>x\\<in>set_of nort. var x < nb \\<and> x \\<in> set_of pret\n\ngoal (1 subgoal):\n 1. var x < nb", "by simp"], ["proof (state)\nthis:\n  var x < nb\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set_of nort \\<Longrightarrow>\n       (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n       (repc \\<propto> high) x = (repb \\<propto> high) x", "from x_in_nort xsnb_in_pret"], ["proof (chain)\npicking this:\n  x \\<in> set_of nort\n  \\<forall>x\\<in>set_of nort. var x < nb \\<and> x \\<in> set_of pret", "have x_in_pret: \"x \\<in> set_of pret\""], ["proof (prove)\nusing this:\n  x \\<in> set_of nort\n  \\<forall>x\\<in>set_of nort. var x < nb \\<and> x \\<in> set_of pret\n\ngoal (1 subgoal):\n 1. x \\<in> set_of pret", "by blast"], ["proof (state)\nthis:\n  x \\<in> set_of pret\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set_of nort \\<Longrightarrow>\n       (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n       (repc \\<propto> high) x = (repb \\<propto> high) x", "show \" (repc \\<propto> low) x = (repb \\<propto> low) x \\<and> (repc \\<propto> high) x = (repb \\<propto> high) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x", "proof (cases \"(low x) \\<noteq> Null\")"], ["proof (state)\ngoal (2 subgoals):\n 1. low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x\n 2. \\<not> low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x", "case True"], ["proof (state)\nthis:\n  low x \\<noteq> Null\n\ngoal (2 subgoals):\n 1. low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x\n 2. \\<not> low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x", "with pret_dag prebdt_pret x_in_pret"], ["proof (chain)\npicking this:\n  Dag p low high pret\n  bdt pret var = Some prebdt\n  x \\<in> set_of pret\n  low x \\<noteq> Null", "have highnN: \"(high x) \\<noteq> Null\""], ["proof (prove)\nusing this:\n  Dag p low high pret\n  bdt pret var = Some prebdt\n  x \\<in> set_of pret\n  low x \\<noteq> Null\n\ngoal (1 subgoal):\n 1. high x \\<noteq> Null", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag p low high pret; bdt pret var = Some prebdt;\n     x \\<in> set_of pret; low x \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> high x \\<noteq> Null", "apply (drule balanced_bdt)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>bdt pret var = Some prebdt; x \\<in> set_of pret;\n     low x \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> bdt pret ?var4 = Some ?bdt1.4\n 2. \\<lbrakk>bdt pret var = Some prebdt; x \\<in> set_of pret;\n     low x \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> ?no4 \\<in> set_of pret\n 3. \\<lbrakk>bdt pret var = Some prebdt; x \\<in> set_of pret;\n     low x \\<noteq> Null; (low ?no4 = Null) = (high ?no4 = Null)\\<rbrakk>\n    \\<Longrightarrow> high x \\<noteq> Null", "apply assumption+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>bdt pret var = Some prebdt; x \\<in> set_of pret;\n     low x \\<noteq> Null; (low x = Null) = (high x = Null)\\<rbrakk>\n    \\<Longrightarrow> high x \\<noteq> Null", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  high x \\<noteq> Null\n\ngoal (2 subgoals):\n 1. low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x\n 2. \\<not> low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x", "from x_in_pret ord_pret highnN True"], ["proof (chain)\npicking this:\n  x \\<in> set_of pret\n  ordered pret var\n  high x \\<noteq> Null\n  low x \\<noteq> Null", "have children_var_smaller: \"var (low x) < var x \\<and> var (high x) < var x\""], ["proof (prove)\nusing this:\n  x \\<in> set_of pret\n  ordered pret var\n  high x \\<noteq> Null\n  low x \\<noteq> Null\n\ngoal (1 subgoal):\n 1. var (low x) < var x \\<and> var (high x) < var x", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> set_of pret; ordered pret var; high x \\<noteq> Null;\n     low x \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> var (low x) < var x \\<and> var (high x) < var x", "apply (rule var_ordered_children)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>x \\<in> set_of pret; ordered pret var; high x \\<noteq> Null;\n     low x \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> Dag ?p4 low high ?t4\n 2. \\<lbrakk>x \\<in> set_of pret; ordered pret var; high x \\<noteq> Null;\n     low x \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> ordered ?t4 var\n 3. \\<lbrakk>x \\<in> set_of pret; ordered pret var; high x \\<noteq> Null;\n     low x \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> x \\<in> set_of ?t4\n 4. \\<lbrakk>x \\<in> set_of pret; ordered pret var; high x \\<noteq> Null;\n     low x \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> low x \\<noteq> Null\n 5. \\<lbrakk>x \\<in> set_of pret; ordered pret var; high x \\<noteq> Null;\n     low x \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> high x \\<noteq> Null", "apply (rule pret_dag)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>x \\<in> set_of pret; ordered pret var; high x \\<noteq> Null;\n     low x \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> ordered pret var\n 2. \\<lbrakk>x \\<in> set_of pret; ordered pret var; high x \\<noteq> Null;\n     low x \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> x \\<in> set_of pret\n 3. \\<lbrakk>x \\<in> set_of pret; ordered pret var; high x \\<noteq> Null;\n     low x \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> low x \\<noteq> Null\n 4. \\<lbrakk>x \\<in> set_of pret; ordered pret var; high x \\<noteq> Null;\n     low x \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> high x \\<noteq> Null", "apply (rule ord_pret)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>x \\<in> set_of pret; ordered pret var; high x \\<noteq> Null;\n     low x \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> x \\<in> set_of pret\n 2. \\<lbrakk>x \\<in> set_of pret; ordered pret var; high x \\<noteq> Null;\n     low x \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> low x \\<noteq> Null\n 3. \\<lbrakk>x \\<in> set_of pret; ordered pret var; high x \\<noteq> Null;\n     low x \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> high x \\<noteq> Null", "apply (rule x_in_pret)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<in> set_of pret; ordered pret var; high x \\<noteq> Null;\n     low x \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> low x \\<noteq> Null\n 2. \\<lbrakk>x \\<in> set_of pret; ordered pret var; high x \\<noteq> Null;\n     low x \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> high x \\<noteq> Null", "apply (rule True)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> set_of pret; ordered pret var; high x \\<noteq> Null;\n     low x \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> high x \\<noteq> Null", "apply (rule highnN)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  var (low x) < var x \\<and> var (high x) < var x\n\ngoal (2 subgoals):\n 1. low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x\n 2. \\<not> low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x", "with xsnb"], ["proof (chain)\npicking this:\n  var x < nb\n  var (low x) < var x \\<and> var (high x) < var x", "have lowxsnb: \"var (low x) < nb\""], ["proof (prove)\nusing this:\n  var x < nb\n  var (low x) < var x \\<and> var (high x) < var x\n\ngoal (1 subgoal):\n 1. var (low x) < nb", "by arith"], ["proof (state)\nthis:\n  var (low x) < nb\n\ngoal (2 subgoals):\n 1. low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x\n 2. \\<not> low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x", "from children_var_smaller xsnb"], ["proof (chain)\npicking this:\n  var (low x) < var x \\<and> var (high x) < var x\n  var x < nb", "have highxsnb: \"var (high x) < nb\""], ["proof (prove)\nusing this:\n  var (low x) < var x \\<and> var (high x) < var x\n  var x < nb\n\ngoal (1 subgoal):\n 1. var (high x) < nb", "by arith"], ["proof (state)\nthis:\n  var (high x) < nb\n\ngoal (2 subgoals):\n 1. low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x\n 2. \\<not> low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x", "from x_in_pret xnN True pret_dag"], ["proof (chain)\npicking this:\n  x \\<in> set_of pret\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high pret", "have lowxinpret: \"(low x) \\<in> set_of pret\""], ["proof (prove)\nusing this:\n  x \\<in> set_of pret\n  x \\<noteq> Null\n  low x \\<noteq> Null\n  Dag p low high pret\n\ngoal (1 subgoal):\n 1. low x \\<in> set_of pret", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> set_of pret; x \\<noteq> Null; low x \\<noteq> Null;\n     Dag p low high pret\\<rbrakk>\n    \\<Longrightarrow> low x \\<in> set_of pret", "apply (drule subelem_set_of_low)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>x \\<noteq> Null; low x \\<noteq> Null;\n     Dag p low high pret\\<rbrakk>\n    \\<Longrightarrow> x \\<noteq> Null\n 2. \\<lbrakk>x \\<noteq> Null; low x \\<noteq> Null;\n     Dag p low high pret\\<rbrakk>\n    \\<Longrightarrow> ?low4 x \\<noteq> Null\n 3. \\<lbrakk>x \\<noteq> Null; low x \\<noteq> Null;\n     Dag p low high pret\\<rbrakk>\n    \\<Longrightarrow> Dag ?p4 ?low4 ?high4 pret\n 4. \\<lbrakk>x \\<noteq> Null; low x \\<noteq> Null; Dag p low high pret;\n     ?low4 x \\<in> set_of pret\\<rbrakk>\n    \\<Longrightarrow> low x \\<in> set_of pret", "apply assumption"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>x \\<noteq> Null; low x \\<noteq> Null;\n     Dag p low high pret\\<rbrakk>\n    \\<Longrightarrow> ?low4 x \\<noteq> Null\n 2. \\<lbrakk>x \\<noteq> Null; low x \\<noteq> Null;\n     Dag p low high pret\\<rbrakk>\n    \\<Longrightarrow> Dag ?p4 ?low4 ?high4 pret\n 3. \\<lbrakk>x \\<noteq> Null; low x \\<noteq> Null; Dag p low high pret;\n     ?low4 x \\<in> set_of pret\\<rbrakk>\n    \\<Longrightarrow> low x \\<in> set_of pret", "apply (thin_tac \"x \\<noteq> Null\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>low x \\<noteq> Null; Dag p low high pret\\<rbrakk>\n    \\<Longrightarrow> ?low4 x \\<noteq> Null\n 2. \\<lbrakk>x \\<noteq> Null; low x \\<noteq> Null;\n     Dag p low high pret\\<rbrakk>\n    \\<Longrightarrow> Dag ?p4 ?low4 ?high4 pret\n 3. \\<lbrakk>x \\<noteq> Null; low x \\<noteq> Null; Dag p low high pret;\n     ?low4 x \\<in> set_of pret\\<rbrakk>\n    \\<Longrightarrow> low x \\<in> set_of pret", "apply assumption+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  low x \\<in> set_of pret\n\ngoal (2 subgoals):\n 1. low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x\n 2. \\<not> low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x", "with wf_llb"], ["proof (chain)\npicking this:\n  wf_ll pret levellistb var\n  low x \\<in> set_of pret", "have \"low x \\<in> set (levellistb ! (var (low x)))\""], ["proof (prove)\nusing this:\n  wf_ll pret levellistb var\n  low x \\<in> set_of pret\n\ngoal (1 subgoal):\n 1. low x \\<in> set (levellistb ! var (low x))", "by (simp add: wf_ll_def)"], ["proof (state)\nthis:\n  low x \\<in> set (levellistb ! var (low x))\n\ngoal (2 subgoals):\n 1. low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x\n 2. \\<not> low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x", "with wf_llb nbsll lowxsnb"], ["proof (chain)\npicking this:\n  wf_ll pret levellistb var\n  nb < length levellistb\n  var (low x) < nb\n  low x \\<in> set (levellistb ! var (low x))", "have \"low x \\<notin> set (levellistb ! nb)\""], ["proof (prove)\nusing this:\n  wf_ll pret levellistb var\n  nb < length levellistb\n  var (low x) < nb\n  low x \\<in> set (levellistb ! var (low x))\n\ngoal (1 subgoal):\n 1. low x \\<notin> set (levellistb ! nb)", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_ll pret levellistb var; nb < length levellistb;\n     var (low x) < nb; low x \\<in> set (levellistb ! var (low x))\\<rbrakk>\n    \\<Longrightarrow> low x \\<notin> set (levellistb ! nb)", "apply (rule_tac ?i=\"(var (low x))\" and ?j=nb in no_in_one_ll)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>wf_ll pret levellistb var; nb < length levellistb;\n     var (low x) < nb; low x \\<in> set (levellistb ! var (low x))\\<rbrakk>\n    \\<Longrightarrow> wf_ll ?pret4 levellistb ?var4\n 2. \\<lbrakk>wf_ll pret levellistb var; nb < length levellistb;\n     var (low x) < nb; low x \\<in> set (levellistb ! var (low x))\\<rbrakk>\n    \\<Longrightarrow> var (low x) < length levellistb\n 3. \\<lbrakk>wf_ll pret levellistb var; nb < length levellistb;\n     var (low x) < nb; low x \\<in> set (levellistb ! var (low x))\\<rbrakk>\n    \\<Longrightarrow> nb < length levellistb\n 4. \\<lbrakk>wf_ll pret levellistb var; nb < length levellistb;\n     var (low x) < nb; low x \\<in> set (levellistb ! var (low x))\\<rbrakk>\n    \\<Longrightarrow> low x \\<in> set (levellistb ! var (low x))\n 5. \\<lbrakk>wf_ll pret levellistb var; nb < length levellistb;\n     var (low x) < nb; low x \\<in> set (levellistb ! var (low x))\\<rbrakk>\n    \\<Longrightarrow> var (low x) \\<noteq> nb", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  low x \\<notin> set (levellistb ! nb)\n\ngoal (2 subgoals):\n 1. low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x\n 2. \\<not> low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x", "with repbc_nc"], ["proof (chain)\npicking this:\n  \\<forall>nt.\n     nt \\<notin> set (levellistb ! nb) \\<longrightarrow> repb nt = repc nt\n  low x \\<notin> set (levellistb ! nb)", "have repclow: \"repc (low x) = repb (low x)\""], ["proof (prove)\nusing this:\n  \\<forall>nt.\n     nt \\<notin> set (levellistb ! nb) \\<longrightarrow> repb nt = repc nt\n  low x \\<notin> set (levellistb ! nb)\n\ngoal (1 subgoal):\n 1. repc (low x) = repb (low x)", "by auto"], ["proof (state)\nthis:\n  repc (low x) = repb (low x)\n\ngoal (2 subgoals):\n 1. low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x\n 2. \\<not> low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x", "from x_in_pret xnN highnN pret_dag"], ["proof (chain)\npicking this:\n  x \\<in> set_of pret\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high pret", "have highxinpret: \"(high x) \\<in> set_of pret\""], ["proof (prove)\nusing this:\n  x \\<in> set_of pret\n  x \\<noteq> Null\n  high x \\<noteq> Null\n  Dag p low high pret\n\ngoal (1 subgoal):\n 1. high x \\<in> set_of pret", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> set_of pret; x \\<noteq> Null; high x \\<noteq> Null;\n     Dag p low high pret\\<rbrakk>\n    \\<Longrightarrow> high x \\<in> set_of pret", "apply (drule subelem_set_of_high)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>x \\<noteq> Null; high x \\<noteq> Null;\n     Dag p low high pret\\<rbrakk>\n    \\<Longrightarrow> x \\<noteq> Null\n 2. \\<lbrakk>x \\<noteq> Null; high x \\<noteq> Null;\n     Dag p low high pret\\<rbrakk>\n    \\<Longrightarrow> ?high4 x \\<noteq> Null\n 3. \\<lbrakk>x \\<noteq> Null; high x \\<noteq> Null;\n     Dag p low high pret\\<rbrakk>\n    \\<Longrightarrow> Dag ?p4 ?low4 ?high4 pret\n 4. \\<lbrakk>x \\<noteq> Null; high x \\<noteq> Null; Dag p low high pret;\n     ?high4 x \\<in> set_of pret\\<rbrakk>\n    \\<Longrightarrow> high x \\<in> set_of pret", "apply assumption"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>x \\<noteq> Null; high x \\<noteq> Null;\n     Dag p low high pret\\<rbrakk>\n    \\<Longrightarrow> ?high4 x \\<noteq> Null\n 2. \\<lbrakk>x \\<noteq> Null; high x \\<noteq> Null;\n     Dag p low high pret\\<rbrakk>\n    \\<Longrightarrow> Dag ?p4 ?low4 ?high4 pret\n 3. \\<lbrakk>x \\<noteq> Null; high x \\<noteq> Null; Dag p low high pret;\n     ?high4 x \\<in> set_of pret\\<rbrakk>\n    \\<Longrightarrow> high x \\<in> set_of pret", "apply (thin_tac \"x \\<noteq> Null\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>high x \\<noteq> Null; Dag p low high pret\\<rbrakk>\n    \\<Longrightarrow> ?high4 x \\<noteq> Null\n 2. \\<lbrakk>x \\<noteq> Null; high x \\<noteq> Null;\n     Dag p low high pret\\<rbrakk>\n    \\<Longrightarrow> Dag ?p4 ?low4 ?high4 pret\n 3. \\<lbrakk>x \\<noteq> Null; high x \\<noteq> Null; Dag p low high pret;\n     ?high4 x \\<in> set_of pret\\<rbrakk>\n    \\<Longrightarrow> high x \\<in> set_of pret", "apply assumption+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  high x \\<in> set_of pret\n\ngoal (2 subgoals):\n 1. low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x\n 2. \\<not> low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x", "with wf_llb"], ["proof (chain)\npicking this:\n  wf_ll pret levellistb var\n  high x \\<in> set_of pret", "have \"high x \\<in> set (levellistb ! (var (high x)))\""], ["proof (prove)\nusing this:\n  wf_ll pret levellistb var\n  high x \\<in> set_of pret\n\ngoal (1 subgoal):\n 1. high x \\<in> set (levellistb ! var (high x))", "by (simp add: wf_ll_def)"], ["proof (state)\nthis:\n  high x \\<in> set (levellistb ! var (high x))\n\ngoal (2 subgoals):\n 1. low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x\n 2. \\<not> low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x", "with wf_llb nbsll highxsnb"], ["proof (chain)\npicking this:\n  wf_ll pret levellistb var\n  nb < length levellistb\n  var (high x) < nb\n  high x \\<in> set (levellistb ! var (high x))", "have \"high x \\<notin> set (levellistb ! nb)\""], ["proof (prove)\nusing this:\n  wf_ll pret levellistb var\n  nb < length levellistb\n  var (high x) < nb\n  high x \\<in> set (levellistb ! var (high x))\n\ngoal (1 subgoal):\n 1. high x \\<notin> set (levellistb ! nb)", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_ll pret levellistb var; nb < length levellistb;\n     var (high x) < nb;\n     high x \\<in> set (levellistb ! var (high x))\\<rbrakk>\n    \\<Longrightarrow> high x \\<notin> set (levellistb ! nb)", "apply (rule_tac ?i=\"(var (high x))\" and ?j=nb in no_in_one_ll)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>wf_ll pret levellistb var; nb < length levellistb;\n     var (high x) < nb;\n     high x \\<in> set (levellistb ! var (high x))\\<rbrakk>\n    \\<Longrightarrow> wf_ll ?pret4 levellistb ?var4\n 2. \\<lbrakk>wf_ll pret levellistb var; nb < length levellistb;\n     var (high x) < nb;\n     high x \\<in> set (levellistb ! var (high x))\\<rbrakk>\n    \\<Longrightarrow> var (high x) < length levellistb\n 3. \\<lbrakk>wf_ll pret levellistb var; nb < length levellistb;\n     var (high x) < nb;\n     high x \\<in> set (levellistb ! var (high x))\\<rbrakk>\n    \\<Longrightarrow> nb < length levellistb\n 4. \\<lbrakk>wf_ll pret levellistb var; nb < length levellistb;\n     var (high x) < nb;\n     high x \\<in> set (levellistb ! var (high x))\\<rbrakk>\n    \\<Longrightarrow> high x \\<in> set (levellistb ! var (high x))\n 5. \\<lbrakk>wf_ll pret levellistb var; nb < length levellistb;\n     var (high x) < nb;\n     high x \\<in> set (levellistb ! var (high x))\\<rbrakk>\n    \\<Longrightarrow> var (high x) \\<noteq> nb", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  high x \\<notin> set (levellistb ! nb)\n\ngoal (2 subgoals):\n 1. low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x\n 2. \\<not> low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x", "with repbc_nc"], ["proof (chain)\npicking this:\n  \\<forall>nt.\n     nt \\<notin> set (levellistb ! nb) \\<longrightarrow> repb nt = repc nt\n  high x \\<notin> set (levellistb ! nb)", "have repchigh: \"repc (high x) = repb (high x)\""], ["proof (prove)\nusing this:\n  \\<forall>nt.\n     nt \\<notin> set (levellistb ! nb) \\<longrightarrow> repb nt = repc nt\n  high x \\<notin> set (levellistb ! nb)\n\ngoal (1 subgoal):\n 1. repc (high x) = repb (high x)", "by auto"], ["proof (state)\nthis:\n  repc (high x) = repb (high x)\n\ngoal (2 subgoals):\n 1. low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x\n 2. \\<not> low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x", "with repclow"], ["proof (chain)\npicking this:\n  repc (low x) = repb (low x)\n  repc (high x) = repb (high x)", "show ?thesis"], ["proof (prove)\nusing this:\n  repc (low x) = repb (low x)\n  repc (high x) = repb (high x)\n\ngoal (1 subgoal):\n 1. (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x", "by (simp add: null_comp_def)"], ["proof (state)\nthis:\n  (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n  (repc \\<propto> high) x = (repb \\<propto> high) x\n\ngoal (1 subgoal):\n 1. \\<not> low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x", "assume \" \\<not> low x \\<noteq> Null\""], ["proof (state)\nthis:\n  \\<not> low x \\<noteq> Null\n\ngoal (1 subgoal):\n 1. \\<not> low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x", "then"], ["proof (chain)\npicking this:\n  \\<not> low x \\<noteq> Null", "have lowxNull: \"low x = Null\""], ["proof (prove)\nusing this:\n  \\<not> low x \\<noteq> Null\n\ngoal (1 subgoal):\n 1. low x = Null", "by simp"], ["proof (state)\nthis:\n  low x = Null\n\ngoal (1 subgoal):\n 1. \\<not> low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x", "with pret_dag x_in_pret prebdt_pret"], ["proof (chain)\npicking this:\n  Dag p low high pret\n  x \\<in> set_of pret\n  bdt pret var = Some prebdt\n  low x = Null", "have highxNull: \"high x =Null\""], ["proof (prove)\nusing this:\n  Dag p low high pret\n  x \\<in> set_of pret\n  bdt pret var = Some prebdt\n  low x = Null\n\ngoal (1 subgoal):\n 1. high x = Null", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag p low high pret; x \\<in> set_of pret;\n     bdt pret var = Some prebdt; low x = Null\\<rbrakk>\n    \\<Longrightarrow> high x = Null", "apply (drule balanced_bdt)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>x \\<in> set_of pret; bdt pret var = Some prebdt;\n     low x = Null\\<rbrakk>\n    \\<Longrightarrow> bdt pret ?var4 = Some ?bdt1.4\n 2. \\<lbrakk>x \\<in> set_of pret; bdt pret var = Some prebdt;\n     low x = Null\\<rbrakk>\n    \\<Longrightarrow> ?no4 \\<in> set_of pret\n 3. \\<lbrakk>x \\<in> set_of pret; bdt pret var = Some prebdt; low x = Null;\n     (low ?no4 = Null) = (high ?no4 = Null)\\<rbrakk>\n    \\<Longrightarrow> high x = Null", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<in> set_of pret; bdt pret var = Some prebdt;\n     low x = Null\\<rbrakk>\n    \\<Longrightarrow> ?no4 \\<in> set_of pret\n 2. \\<lbrakk>x \\<in> set_of pret; bdt pret var = Some prebdt; low x = Null;\n     (low ?no4 = Null) = (high ?no4 = Null)\\<rbrakk>\n    \\<Longrightarrow> high x = Null", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> set_of pret; bdt pret var = Some prebdt; low x = Null;\n     (low x = Null) = (high x = Null)\\<rbrakk>\n    \\<Longrightarrow> high x = Null", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  high x = Null\n\ngoal (1 subgoal):\n 1. \\<not> low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x", "from lowxNull"], ["proof (chain)\npicking this:\n  low x = Null", "have repclowNull: \"(repc \\<propto> low) x = Null\""], ["proof (prove)\nusing this:\n  low x = Null\n\ngoal (1 subgoal):\n 1. (repc \\<propto> low) x = Null", "by (simp add: null_comp_def)"], ["proof (state)\nthis:\n  (repc \\<propto> low) x = Null\n\ngoal (1 subgoal):\n 1. \\<not> low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x", "from lowxNull"], ["proof (chain)\npicking this:\n  low x = Null", "have repblowNull: \"(repb \\<propto> low) x = Null\""], ["proof (prove)\nusing this:\n  low x = Null\n\ngoal (1 subgoal):\n 1. (repb \\<propto> low) x = Null", "by (simp add: null_comp_def)"], ["proof (state)\nthis:\n  (repb \\<propto> low) x = Null\n\ngoal (1 subgoal):\n 1. \\<not> low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x", "with repclowNull"], ["proof (chain)\npicking this:\n  (repc \\<propto> low) x = Null\n  (repb \\<propto> low) x = Null", "have lowxrepbc: \"(repc \\<propto> low) x = (repb \\<propto> low) x\""], ["proof (prove)\nusing this:\n  (repc \\<propto> low) x = Null\n  (repb \\<propto> low) x = Null\n\ngoal (1 subgoal):\n 1. (repc \\<propto> low) x = (repb \\<propto> low) x", "by simp"], ["proof (state)\nthis:\n  (repc \\<propto> low) x = (repb \\<propto> low) x\n\ngoal (1 subgoal):\n 1. \\<not> low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x", "from highxNull"], ["proof (chain)\npicking this:\n  high x = Null", "have repchighNull: \"(repc \\<propto> high) x = Null\""], ["proof (prove)\nusing this:\n  high x = Null\n\ngoal (1 subgoal):\n 1. (repc \\<propto> high) x = Null", "by (simp add: null_comp_def)"], ["proof (state)\nthis:\n  (repc \\<propto> high) x = Null\n\ngoal (1 subgoal):\n 1. \\<not> low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x", "from highxNull"], ["proof (chain)\npicking this:\n  high x = Null", "have \"(repb \\<propto> high) x = Null\""], ["proof (prove)\nusing this:\n  high x = Null\n\ngoal (1 subgoal):\n 1. (repb \\<propto> high) x = Null", "by (simp add: null_comp_def)"], ["proof (state)\nthis:\n  (repb \\<propto> high) x = Null\n\ngoal (1 subgoal):\n 1. \\<not> low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x", "with repchighNull"], ["proof (chain)\npicking this:\n  (repc \\<propto> high) x = Null\n  (repb \\<propto> high) x = Null", "have highxrepbc: \"(repc \\<propto> high) x = (repb \\<propto> high) x\""], ["proof (prove)\nusing this:\n  (repc \\<propto> high) x = Null\n  (repb \\<propto> high) x = Null\n\ngoal (1 subgoal):\n 1. (repc \\<propto> high) x = (repb \\<propto> high) x", "by simp"], ["proof (state)\nthis:\n  (repc \\<propto> high) x = (repb \\<propto> high) x\n\ngoal (1 subgoal):\n 1. \\<not> low x \\<noteq> Null \\<Longrightarrow>\n    (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x", "with lowxrepbc"], ["proof (chain)\npicking this:\n  (repc \\<propto> low) x = (repb \\<propto> low) x\n  (repc \\<propto> high) x = (repb \\<propto> high) x", "show ?thesis"], ["proof (prove)\nusing this:\n  (repc \\<propto> low) x = (repb \\<propto> low) x\n  (repc \\<propto> high) x = (repb \\<propto> high) x\n\ngoal (1 subgoal):\n 1. (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n    (repc \\<propto> high) x = (repb \\<propto> high) x", "by simp"], ["proof (state)\nthis:\n  (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n  (repc \\<propto> high) x = (repb \\<propto> high) x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (repc \\<propto> low) x = (repb \\<propto> low) x \\<and>\n  (repc \\<propto> high) x = (repb \\<propto> high) x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wf_ll_Nodes_pret: \n\"\\<lbrakk>wf_ll pret levellista var; nb < length levellista; x \\<in> Nodes nb levellista\\<rbrakk> \n \\<Longrightarrow> x \\<in> set_of pret \\<and> var x < nb\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_ll pret levellista var; nb < length levellista;\n     x \\<in> Nodes nb levellista\\<rbrakk>\n    \\<Longrightarrow> x \\<in> set_of pret \\<and> var x < nb", "apply (simp add: wf_ll_def Nodes_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<forall>p.\n                 p \\<in> set_of pret \\<longrightarrow>\n                 p \\<in> set (levellista ! var p)) \\<and>\n             (\\<forall>k<length levellista.\n                 \\<forall>p\\<in>set (levellista ! k).\n                    p \\<in> set_of pret \\<and> var p = k);\n     nb < length levellista;\n     \\<exists>xa<nb. x \\<in> set (levellista ! xa)\\<rbrakk>\n    \\<Longrightarrow> x \\<in> set_of pret \\<and> var x < nb", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>nb < length levellista;\n     \\<exists>xa<nb. x \\<in> set (levellista ! xa);\n     \\<forall>p.\n        p \\<in> set_of pret \\<longrightarrow>\n        p \\<in> set (levellista ! var p);\n     \\<forall>k<length levellista.\n        \\<forall>p\\<in>set (levellista ! k).\n           p \\<in> set_of pret \\<and> var p = k\\<rbrakk>\n    \\<Longrightarrow> x \\<in> set_of pret \\<and> var x < nb", "apply (thin_tac \" \\<forall>q. q \\<in> set_of pret \\<longrightarrow> q \\<in> set (levellista ! var q)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>nb < length levellista;\n     \\<exists>xa<nb. x \\<in> set (levellista ! xa);\n     \\<forall>k<length levellista.\n        \\<forall>p\\<in>set (levellista ! k).\n           p \\<in> set_of pret \\<and> var p = k\\<rbrakk>\n    \\<Longrightarrow> x \\<in> set_of pret \\<and> var x < nb", "apply (erule exE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>nb < length levellista;\n        \\<forall>k<length levellista.\n           \\<forall>p\\<in>set (levellista ! k).\n              p \\<in> set_of pret \\<and> var p = k;\n        xa < nb \\<and> x \\<in> set (levellista ! xa)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of pret \\<and> var x < nb", "apply (elim conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>nb < length levellista;\n        \\<forall>k<length levellista.\n           \\<forall>p\\<in>set (levellista ! k).\n              p \\<in> set_of pret \\<and> var p = k;\n        xa < nb; x \\<in> set (levellista ! xa)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of pret \\<and> var x < nb", "apply (erule_tac x=xa in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>nb < length levellista; xa < nb;\n        x \\<in> set (levellista ! xa);\n        xa < length levellista \\<longrightarrow>\n        (\\<forall>p\\<in>set (levellista ! xa).\n            p \\<in> set_of pret \\<and> var p = xa)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of pret \\<and> var x < nb", "apply (erule impE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>nb < length levellista; xa < nb;\n        x \\<in> set (levellista ! xa)\\<rbrakk>\n       \\<Longrightarrow> xa < length levellista\n 2. \\<And>xa.\n       \\<lbrakk>nb < length levellista; xa < nb;\n        x \\<in> set (levellista ! xa);\n        \\<forall>p\\<in>set (levellista ! xa).\n           p \\<in> set_of pret \\<and> var p = xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of pret \\<and> var x < nb", "apply arith"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>nb < length levellista; xa < nb;\n        x \\<in> set (levellista ! xa);\n        \\<forall>p\\<in>set (levellista ! xa).\n           p \\<in> set_of pret \\<and> var p = xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of pret \\<and> var x < nb", "apply (erule_tac x=x in ballE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>nb < length levellista; xa < nb;\n        x \\<in> set (levellista ! xa);\n        x \\<in> set_of pret \\<and> var x = xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of pret \\<and> var x < nb\n 2. \\<And>xa.\n       \\<lbrakk>nb < length levellista; xa < nb;\n        x \\<in> set (levellista ! xa);\n        x \\<notin> set (levellista ! xa)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of pret \\<and> var x < nb", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma bdt_Some_var1_One: \n\"\\<And> x. \\<lbrakk> bdt t var = Some x; var (root t) = 1\\<rbrakk> \n \\<Longrightarrow> x = One \\<and> t = (Node Tip (root t) Tip)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>bdt t var = Some x; var (root t) = 1\\<rbrakk>\n       \\<Longrightarrow> x = One \\<and> t = Node Tip (root t) Tip", "proof (induct t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>bdt Tip var = Some x; var (root Tip) = 1\\<rbrakk>\n       \\<Longrightarrow> x = One \\<and> Tip = Node Tip (root Tip) Tip\n 2. \\<And>t1 x2 t2 x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>bdt t1 var = Some x; var (root t1) = 1\\<rbrakk>\n                   \\<Longrightarrow> x = One \\<and>\n                                     t1 = Node Tip (root t1) Tip;\n        \\<And>x.\n           \\<lbrakk>bdt t2 var = Some x; var (root t2) = 1\\<rbrakk>\n           \\<Longrightarrow> x = One \\<and> t2 = Node Tip (root t2) Tip;\n        bdt (Node t1 x2 t2) var = Some x;\n        var (root (Node t1 x2 t2)) = 1\\<rbrakk>\n       \\<Longrightarrow> x = One \\<and>\n                         Node t1 x2 t2 = Node Tip (root (Node t1 x2 t2)) Tip", "case Tip"], ["proof (state)\nthis:\n  bdt Tip var = Some x\n  var (root Tip) = 1\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>bdt Tip var = Some x; var (root Tip) = 1\\<rbrakk>\n       \\<Longrightarrow> x = One \\<and> Tip = Node Tip (root Tip) Tip\n 2. \\<And>t1 x2 t2 x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>bdt t1 var = Some x; var (root t1) = 1\\<rbrakk>\n                   \\<Longrightarrow> x = One \\<and>\n                                     t1 = Node Tip (root t1) Tip;\n        \\<And>x.\n           \\<lbrakk>bdt t2 var = Some x; var (root t2) = 1\\<rbrakk>\n           \\<Longrightarrow> x = One \\<and> t2 = Node Tip (root t2) Tip;\n        bdt (Node t1 x2 t2) var = Some x;\n        var (root (Node t1 x2 t2)) = 1\\<rbrakk>\n       \\<Longrightarrow> x = One \\<and>\n                         Node t1 x2 t2 = Node Tip (root (Node t1 x2 t2)) Tip", "then"], ["proof (chain)\npicking this:\n  bdt Tip var = Some x\n  var (root Tip) = 1", "show  ?case"], ["proof (prove)\nusing this:\n  bdt Tip var = Some x\n  var (root Tip) = 1\n\ngoal (1 subgoal):\n 1. x = One \\<and> Tip = Node Tip (root Tip) Tip", "by simp"], ["proof (state)\nthis:\n  x = One \\<and> Tip = Node Tip (root Tip) Tip\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>bdt t1 var = Some x; var (root t1) = 1\\<rbrakk>\n                   \\<Longrightarrow> x = One \\<and>\n                                     t1 = Node Tip (root t1) Tip;\n        \\<And>x.\n           \\<lbrakk>bdt t2 var = Some x; var (root t2) = 1\\<rbrakk>\n           \\<Longrightarrow> x = One \\<and> t2 = Node Tip (root t2) Tip;\n        bdt (Node t1 x2 t2) var = Some x;\n        var (root (Node t1 x2 t2)) = 1\\<rbrakk>\n       \\<Longrightarrow> x = One \\<and>\n                         Node t1 x2 t2 = Node Tip (root (Node t1 x2 t2)) Tip", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>bdt t1 var = Some x; var (root t1) = 1\\<rbrakk>\n                   \\<Longrightarrow> x = One \\<and>\n                                     t1 = Node Tip (root t1) Tip;\n        \\<And>x.\n           \\<lbrakk>bdt t2 var = Some x; var (root t2) = 1\\<rbrakk>\n           \\<Longrightarrow> x = One \\<and> t2 = Node Tip (root t2) Tip;\n        bdt (Node t1 x2 t2) var = Some x;\n        var (root (Node t1 x2 t2)) = 1\\<rbrakk>\n       \\<Longrightarrow> x = One \\<and>\n                         Node t1 x2 t2 = Node Tip (root (Node t1 x2 t2)) Tip", "case (Node lt p rt)"], ["proof (state)\nthis:\n  \\<lbrakk>bdt lt var = Some ?x; var (root lt) = 1\\<rbrakk>\n  \\<Longrightarrow> ?x = One \\<and> lt = Node Tip (root lt) Tip\n  \\<lbrakk>bdt rt var = Some ?x; var (root rt) = 1\\<rbrakk>\n  \\<Longrightarrow> ?x = One \\<and> rt = Node Tip (root rt) Tip\n  bdt (Node lt p rt) var = Some x\n  var (root (Node lt p rt)) = 1\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>bdt t1 var = Some x; var (root t1) = 1\\<rbrakk>\n                   \\<Longrightarrow> x = One \\<and>\n                                     t1 = Node Tip (root t1) Tip;\n        \\<And>x.\n           \\<lbrakk>bdt t2 var = Some x; var (root t2) = 1\\<rbrakk>\n           \\<Longrightarrow> x = One \\<and> t2 = Node Tip (root t2) Tip;\n        bdt (Node t1 x2 t2) var = Some x;\n        var (root (Node t1 x2 t2)) = 1\\<rbrakk>\n       \\<Longrightarrow> x = One \\<and>\n                         Node t1 x2 t2 = Node Tip (root (Node t1 x2 t2)) Tip", "note tNode = this"], ["proof (state)\nthis:\n  \\<lbrakk>bdt lt var = Some ?x; var (root lt) = 1\\<rbrakk>\n  \\<Longrightarrow> ?x = One \\<and> lt = Node Tip (root lt) Tip\n  \\<lbrakk>bdt rt var = Some ?x; var (root rt) = 1\\<rbrakk>\n  \\<Longrightarrow> ?x = One \\<and> rt = Node Tip (root rt) Tip\n  bdt (Node lt p rt) var = Some x\n  var (root (Node lt p rt)) = 1\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>bdt t1 var = Some x; var (root t1) = 1\\<rbrakk>\n                   \\<Longrightarrow> x = One \\<and>\n                                     t1 = Node Tip (root t1) Tip;\n        \\<And>x.\n           \\<lbrakk>bdt t2 var = Some x; var (root t2) = 1\\<rbrakk>\n           \\<Longrightarrow> x = One \\<and> t2 = Node Tip (root t2) Tip;\n        bdt (Node t1 x2 t2) var = Some x;\n        var (root (Node t1 x2 t2)) = 1\\<rbrakk>\n       \\<Longrightarrow> x = One \\<and>\n                         Node t1 x2 t2 = Node Tip (root (Node t1 x2 t2)) Tip", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "proof (cases lt)"], ["proof (state)\ngoal (2 subgoals):\n 1. lt = Tip \\<Longrightarrow>\n    x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip\n 2. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow>\n       x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "case Tip"], ["proof (state)\nthis:\n  lt = Tip\n\ngoal (2 subgoals):\n 1. lt = Tip \\<Longrightarrow>\n    x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip\n 2. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow>\n       x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "note ltTip=this"], ["proof (state)\nthis:\n  lt = Tip\n\ngoal (2 subgoals):\n 1. lt = Tip \\<Longrightarrow>\n    x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip\n 2. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow>\n       x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "proof (cases rt)"], ["proof (state)\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow>\n    x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "case Tip"], ["proof (state)\nthis:\n  rt = Tip\n\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow>\n    x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "note rtTip = this"], ["proof (state)\nthis:\n  rt = Tip\n\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow>\n    x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "with ltTip Node.prems"], ["proof (chain)\npicking this:\n  lt = Tip\n  bdt (Node lt p rt) var = Some x\n  var (root (Node lt p rt)) = 1\n  rt = Tip", "show ?thesis"], ["proof (prove)\nusing this:\n  lt = Tip\n  bdt (Node lt p rt) var = Some x\n  var (root (Node lt p rt)) = 1\n  rt = Tip\n\ngoal (1 subgoal):\n 1. x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "by auto"], ["proof (state)\nthis:\n  x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "case (Node lrt r rrt)"], ["proof (state)\nthis:\n  rt = Node lrt r rrt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "note rtNode=this"], ["proof (state)\nthis:\n  rt = Node lrt r rrt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "with Node.prems ltTip"], ["proof (chain)\npicking this:\n  bdt (Node lt p rt) var = Some x\n  var (root (Node lt p rt)) = 1\n  lt = Tip\n  rt = Node lrt r rrt", "show ?thesis"], ["proof (prove)\nusing this:\n  bdt (Node lt p rt) var = Some x\n  var (root (Node lt p rt)) = 1\n  lt = Tip\n  rt = Node lrt r rrt\n\ngoal (1 subgoal):\n 1. x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "by auto"], ["proof (state)\nthis:\n  x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow>\n       x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow>\n       x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "case (Node llt l rlt)"], ["proof (state)\nthis:\n  lt = Node llt l rlt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow>\n       x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "note ltNode=this"], ["proof (state)\nthis:\n  lt = Node llt l rlt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow>\n       x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "proof (cases rt)"], ["proof (state)\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow>\n    x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "case Tip"], ["proof (state)\nthis:\n  rt = Tip\n\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow>\n    x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "with ltNode Node.prems"], ["proof (chain)\npicking this:\n  lt = Node llt l rlt\n  bdt (Node lt p rt) var = Some x\n  var (root (Node lt p rt)) = 1\n  rt = Tip", "show ?thesis"], ["proof (prove)\nusing this:\n  lt = Node llt l rlt\n  bdt (Node lt p rt) var = Some x\n  var (root (Node lt p rt)) = 1\n  rt = Tip\n\ngoal (1 subgoal):\n 1. x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "by auto"], ["proof (state)\nthis:\n  x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "case (Node lrt r rrt)"], ["proof (state)\nthis:\n  rt = Node lrt r rrt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "note rtNode=this"], ["proof (state)\nthis:\n  rt = Node lrt r rrt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "with ltNode Node.prems"], ["proof (chain)\npicking this:\n  lt = Node llt l rlt\n  bdt (Node lt p rt) var = Some x\n  var (root (Node lt p rt)) = 1\n  rt = Node lrt r rrt", "show ?thesis"], ["proof (prove)\nusing this:\n  lt = Node llt l rlt\n  bdt (Node lt p rt) var = Some x\n  var (root (Node lt p rt)) = 1\n  rt = Node lrt r rrt\n\ngoal (1 subgoal):\n 1. x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "by auto"], ["proof (state)\nthis:\n  x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x = One \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bdt_Some_var0_Zero: \n\"\\<And> x. \\<lbrakk> bdt t var = Some x; var (root t) = 0\\<rbrakk> \n\\<Longrightarrow> x = Zero \\<and> t = (Node Tip (root t) Tip)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>bdt t var = Some x; var (root t) = 0\\<rbrakk>\n       \\<Longrightarrow> x = Zero \\<and> t = Node Tip (root t) Tip", "proof (induct t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>bdt Tip var = Some x; var (root Tip) = 0\\<rbrakk>\n       \\<Longrightarrow> x = Zero \\<and> Tip = Node Tip (root Tip) Tip\n 2. \\<And>t1 x2 t2 x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>bdt t1 var = Some x; var (root t1) = 0\\<rbrakk>\n                   \\<Longrightarrow> x = Zero \\<and>\n                                     t1 = Node Tip (root t1) Tip;\n        \\<And>x.\n           \\<lbrakk>bdt t2 var = Some x; var (root t2) = 0\\<rbrakk>\n           \\<Longrightarrow> x = Zero \\<and> t2 = Node Tip (root t2) Tip;\n        bdt (Node t1 x2 t2) var = Some x;\n        var (root (Node t1 x2 t2)) = 0\\<rbrakk>\n       \\<Longrightarrow> x = Zero \\<and>\n                         Node t1 x2 t2 = Node Tip (root (Node t1 x2 t2)) Tip", "case Tip"], ["proof (state)\nthis:\n  bdt Tip var = Some x\n  var (root Tip) = 0\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>bdt Tip var = Some x; var (root Tip) = 0\\<rbrakk>\n       \\<Longrightarrow> x = Zero \\<and> Tip = Node Tip (root Tip) Tip\n 2. \\<And>t1 x2 t2 x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>bdt t1 var = Some x; var (root t1) = 0\\<rbrakk>\n                   \\<Longrightarrow> x = Zero \\<and>\n                                     t1 = Node Tip (root t1) Tip;\n        \\<And>x.\n           \\<lbrakk>bdt t2 var = Some x; var (root t2) = 0\\<rbrakk>\n           \\<Longrightarrow> x = Zero \\<and> t2 = Node Tip (root t2) Tip;\n        bdt (Node t1 x2 t2) var = Some x;\n        var (root (Node t1 x2 t2)) = 0\\<rbrakk>\n       \\<Longrightarrow> x = Zero \\<and>\n                         Node t1 x2 t2 = Node Tip (root (Node t1 x2 t2)) Tip", "then"], ["proof (chain)\npicking this:\n  bdt Tip var = Some x\n  var (root Tip) = 0", "show  ?case"], ["proof (prove)\nusing this:\n  bdt Tip var = Some x\n  var (root Tip) = 0\n\ngoal (1 subgoal):\n 1. x = Zero \\<and> Tip = Node Tip (root Tip) Tip", "by simp"], ["proof (state)\nthis:\n  x = Zero \\<and> Tip = Node Tip (root Tip) Tip\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>bdt t1 var = Some x; var (root t1) = 0\\<rbrakk>\n                   \\<Longrightarrow> x = Zero \\<and>\n                                     t1 = Node Tip (root t1) Tip;\n        \\<And>x.\n           \\<lbrakk>bdt t2 var = Some x; var (root t2) = 0\\<rbrakk>\n           \\<Longrightarrow> x = Zero \\<and> t2 = Node Tip (root t2) Tip;\n        bdt (Node t1 x2 t2) var = Some x;\n        var (root (Node t1 x2 t2)) = 0\\<rbrakk>\n       \\<Longrightarrow> x = Zero \\<and>\n                         Node t1 x2 t2 = Node Tip (root (Node t1 x2 t2)) Tip", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>bdt t1 var = Some x; var (root t1) = 0\\<rbrakk>\n                   \\<Longrightarrow> x = Zero \\<and>\n                                     t1 = Node Tip (root t1) Tip;\n        \\<And>x.\n           \\<lbrakk>bdt t2 var = Some x; var (root t2) = 0\\<rbrakk>\n           \\<Longrightarrow> x = Zero \\<and> t2 = Node Tip (root t2) Tip;\n        bdt (Node t1 x2 t2) var = Some x;\n        var (root (Node t1 x2 t2)) = 0\\<rbrakk>\n       \\<Longrightarrow> x = Zero \\<and>\n                         Node t1 x2 t2 = Node Tip (root (Node t1 x2 t2)) Tip", "case (Node lt p rt)"], ["proof (state)\nthis:\n  \\<lbrakk>bdt lt var = Some ?x; var (root lt) = 0\\<rbrakk>\n  \\<Longrightarrow> ?x = Zero \\<and> lt = Node Tip (root lt) Tip\n  \\<lbrakk>bdt rt var = Some ?x; var (root rt) = 0\\<rbrakk>\n  \\<Longrightarrow> ?x = Zero \\<and> rt = Node Tip (root rt) Tip\n  bdt (Node lt p rt) var = Some x\n  var (root (Node lt p rt)) = 0\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>bdt t1 var = Some x; var (root t1) = 0\\<rbrakk>\n                   \\<Longrightarrow> x = Zero \\<and>\n                                     t1 = Node Tip (root t1) Tip;\n        \\<And>x.\n           \\<lbrakk>bdt t2 var = Some x; var (root t2) = 0\\<rbrakk>\n           \\<Longrightarrow> x = Zero \\<and> t2 = Node Tip (root t2) Tip;\n        bdt (Node t1 x2 t2) var = Some x;\n        var (root (Node t1 x2 t2)) = 0\\<rbrakk>\n       \\<Longrightarrow> x = Zero \\<and>\n                         Node t1 x2 t2 = Node Tip (root (Node t1 x2 t2)) Tip", "note tNode = this"], ["proof (state)\nthis:\n  \\<lbrakk>bdt lt var = Some ?x; var (root lt) = 0\\<rbrakk>\n  \\<Longrightarrow> ?x = Zero \\<and> lt = Node Tip (root lt) Tip\n  \\<lbrakk>bdt rt var = Some ?x; var (root rt) = 0\\<rbrakk>\n  \\<Longrightarrow> ?x = Zero \\<and> rt = Node Tip (root rt) Tip\n  bdt (Node lt p rt) var = Some x\n  var (root (Node lt p rt)) = 0\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>bdt t1 var = Some x; var (root t1) = 0\\<rbrakk>\n                   \\<Longrightarrow> x = Zero \\<and>\n                                     t1 = Node Tip (root t1) Tip;\n        \\<And>x.\n           \\<lbrakk>bdt t2 var = Some x; var (root t2) = 0\\<rbrakk>\n           \\<Longrightarrow> x = Zero \\<and> t2 = Node Tip (root t2) Tip;\n        bdt (Node t1 x2 t2) var = Some x;\n        var (root (Node t1 x2 t2)) = 0\\<rbrakk>\n       \\<Longrightarrow> x = Zero \\<and>\n                         Node t1 x2 t2 = Node Tip (root (Node t1 x2 t2)) Tip", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "proof (cases lt)"], ["proof (state)\ngoal (2 subgoals):\n 1. lt = Tip \\<Longrightarrow>\n    x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip\n 2. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow>\n       x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "case Tip"], ["proof (state)\nthis:\n  lt = Tip\n\ngoal (2 subgoals):\n 1. lt = Tip \\<Longrightarrow>\n    x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip\n 2. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow>\n       x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "note ltTip=this"], ["proof (state)\nthis:\n  lt = Tip\n\ngoal (2 subgoals):\n 1. lt = Tip \\<Longrightarrow>\n    x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip\n 2. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow>\n       x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "proof (cases rt)"], ["proof (state)\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow>\n    x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "case Tip"], ["proof (state)\nthis:\n  rt = Tip\n\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow>\n    x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "note rtTip = this"], ["proof (state)\nthis:\n  rt = Tip\n\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow>\n    x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "with ltTip Node.prems"], ["proof (chain)\npicking this:\n  lt = Tip\n  bdt (Node lt p rt) var = Some x\n  var (root (Node lt p rt)) = 0\n  rt = Tip", "show ?thesis"], ["proof (prove)\nusing this:\n  lt = Tip\n  bdt (Node lt p rt) var = Some x\n  var (root (Node lt p rt)) = 0\n  rt = Tip\n\ngoal (1 subgoal):\n 1. x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "by auto"], ["proof (state)\nthis:\n  x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "case (Node lrt r rrt)"], ["proof (state)\nthis:\n  rt = Node lrt r rrt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "note rtNode=this"], ["proof (state)\nthis:\n  rt = Node lrt r rrt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "with Node.prems ltTip"], ["proof (chain)\npicking this:\n  bdt (Node lt p rt) var = Some x\n  var (root (Node lt p rt)) = 0\n  lt = Tip\n  rt = Node lrt r rrt", "show ?thesis"], ["proof (prove)\nusing this:\n  bdt (Node lt p rt) var = Some x\n  var (root (Node lt p rt)) = 0\n  lt = Tip\n  rt = Node lrt r rrt\n\ngoal (1 subgoal):\n 1. x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "by auto"], ["proof (state)\nthis:\n  x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow>\n       x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow>\n       x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "case (Node llt l rlt)"], ["proof (state)\nthis:\n  lt = Node llt l rlt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow>\n       x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "note ltNode=this"], ["proof (state)\nthis:\n  lt = Node llt l rlt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       lt = Node x21 x22 x23 \\<Longrightarrow>\n       x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "proof (cases rt)"], ["proof (state)\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow>\n    x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "case Tip"], ["proof (state)\nthis:\n  rt = Tip\n\ngoal (2 subgoals):\n 1. rt = Tip \\<Longrightarrow>\n    x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip\n 2. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "with ltNode Node.prems"], ["proof (chain)\npicking this:\n  lt = Node llt l rlt\n  bdt (Node lt p rt) var = Some x\n  var (root (Node lt p rt)) = 0\n  rt = Tip", "show ?thesis"], ["proof (prove)\nusing this:\n  lt = Node llt l rlt\n  bdt (Node lt p rt) var = Some x\n  var (root (Node lt p rt)) = 0\n  rt = Tip\n\ngoal (1 subgoal):\n 1. x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "by auto"], ["proof (state)\nthis:\n  x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "case (Node lrt r rrt)"], ["proof (state)\nthis:\n  rt = Node lrt r rrt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "note rtNode=this"], ["proof (state)\nthis:\n  rt = Node lrt r rrt\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       rt = Node x21 x22 x23 \\<Longrightarrow>\n       x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "with ltNode Node.prems"], ["proof (chain)\npicking this:\n  lt = Node llt l rlt\n  bdt (Node lt p rt) var = Some x\n  var (root (Node lt p rt)) = 0\n  rt = Node lrt r rrt", "show ?thesis"], ["proof (prove)\nusing this:\n  lt = Node llt l rlt\n  bdt (Node lt p rt) var = Some x\n  var (root (Node lt p rt)) = 0\n  rt = Node lrt r rrt\n\ngoal (1 subgoal):\n 1. x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip", "by auto"], ["proof (state)\nthis:\n  x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x = Zero \\<and> Node lt p rt = Node Tip (root (Node lt p rt)) Tip\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma reduced_children_parent: \n\"\\<lbrakk> reduced l; l= (Node llt lp rlt); reduced r; r=(Node lrt rp rrt); \n  lp \\<noteq> rp \\<rbrakk> \n \\<Longrightarrow> reduced (Node l p r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>reduced l; l = Node llt lp rlt; reduced r; r = Node lrt rp rrt;\n     lp \\<noteq> rp\\<rbrakk>\n    \\<Longrightarrow> reduced (Node l p r)", "by simp"], ["", "(*Die allgemeine Form mit i <=j \\<Longrightarrow> Nodes i levellista \\<subseteq> Nodes j levellista w?re sch?ner, aber wie beweist man das? *)"], ["", "lemma Nodes_subset: \"Nodes i levellista \\<subseteq> Nodes (Suc i) levellista\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Nodes i levellista \\<subseteq> Nodes (Suc i) levellista", "apply (simp add: Nodes_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>k\\<in>{k. k < i}. set (levellista ! k))\n    \\<subseteq> (\\<Union>k\\<in>{k. k < Suc i}. set (levellista ! k))", "apply (simp add: set_split)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Nodes_levellist: \n\"\\<lbrakk> wf_ll pret levellista var; nb < length levellista; p \\<in> Nodes nb levellista\\<rbrakk> \n \\<Longrightarrow> p \\<notin> set (levellista ! nb)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_ll pret levellista var; nb < length levellista;\n     p \\<in> Nodes nb levellista\\<rbrakk>\n    \\<Longrightarrow> p \\<notin> set (levellista ! nb)", "apply (simp add: Nodes_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_ll pret levellista var; nb < length levellista;\n     \\<exists>x<nb. p \\<in> set (levellista ! x)\\<rbrakk>\n    \\<Longrightarrow> p \\<notin> set (levellista ! nb)", "apply (erule exE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>wf_ll pret levellista var; nb < length levellista;\n        x < nb \\<and> p \\<in> set (levellista ! x)\\<rbrakk>\n       \\<Longrightarrow> p \\<notin> set (levellista ! nb)", "apply (rule_tac i=x and j=nb in no_in_one_ll)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>wf_ll pret levellista var; nb < length levellista;\n        x < nb \\<and> p \\<in> set (levellista ! x)\\<rbrakk>\n       \\<Longrightarrow> wf_ll (?pret8 x) levellista (?var8 x)\n 2. \\<And>x.\n       \\<lbrakk>wf_ll pret levellista var; nb < length levellista;\n        x < nb \\<and> p \\<in> set (levellista ! x)\\<rbrakk>\n       \\<Longrightarrow> x < length levellista\n 3. \\<And>x.\n       \\<lbrakk>wf_ll pret levellista var; nb < length levellista;\n        x < nb \\<and> p \\<in> set (levellista ! x)\\<rbrakk>\n       \\<Longrightarrow> nb < length levellista\n 4. \\<And>x.\n       \\<lbrakk>wf_ll pret levellista var; nb < length levellista;\n        x < nb \\<and> p \\<in> set (levellista ! x)\\<rbrakk>\n       \\<Longrightarrow> p \\<in> set (levellista ! x)\n 5. \\<And>x.\n       \\<lbrakk>wf_ll pret levellista var; nb < length levellista;\n        x < nb \\<and> p \\<in> set (levellista ! x)\\<rbrakk>\n       \\<Longrightarrow> x \\<noteq> nb", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Nodes_var_pret: \n \"\\<lbrakk>wf_ll pret levellista var; nb < length levellista; p \\<in> Nodes nb levellista\\<rbrakk> \n  \\<Longrightarrow> var p < nb \\<and> p \\<in> set_of pret\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_ll pret levellista var; nb < length levellista;\n     p \\<in> Nodes nb levellista\\<rbrakk>\n    \\<Longrightarrow> var p < nb \\<and> p \\<in> set_of pret", "apply (simp add: Nodes_def wf_ll_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<forall>p.\n                 p \\<in> set_of pret \\<longrightarrow>\n                 p \\<in> set (levellista ! var p)) \\<and>\n             (\\<forall>k<length levellista.\n                 \\<forall>p\\<in>set (levellista ! k).\n                    p \\<in> set_of pret \\<and> var p = k);\n     nb < length levellista;\n     \\<exists>x<nb. p \\<in> set (levellista ! x)\\<rbrakk>\n    \\<Longrightarrow> var p < nb \\<and> p \\<in> set_of pret", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>nb < length levellista;\n     \\<exists>x<nb. p \\<in> set (levellista ! x);\n     \\<forall>p.\n        p \\<in> set_of pret \\<longrightarrow>\n        p \\<in> set (levellista ! var p);\n     \\<forall>k<length levellista.\n        \\<forall>p\\<in>set (levellista ! k).\n           p \\<in> set_of pret \\<and> var p = k\\<rbrakk>\n    \\<Longrightarrow> var p < nb \\<and> p \\<in> set_of pret", "apply (thin_tac \"\\<forall>q. q \\<in> set_of pret \\<longrightarrow> q \\<in> set (levellista ! var q)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>nb < length levellista;\n     \\<exists>x<nb. p \\<in> set (levellista ! x);\n     \\<forall>k<length levellista.\n        \\<forall>p\\<in>set (levellista ! k).\n           p \\<in> set_of pret \\<and> var p = k\\<rbrakk>\n    \\<Longrightarrow> var p < nb \\<and> p \\<in> set_of pret", "apply (erule exE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>nb < length levellista;\n        \\<forall>k<length levellista.\n           \\<forall>p\\<in>set (levellista ! k).\n              p \\<in> set_of pret \\<and> var p = k;\n        x < nb \\<and> p \\<in> set (levellista ! x)\\<rbrakk>\n       \\<Longrightarrow> var p < nb \\<and> p \\<in> set_of pret", "apply (erule_tac x=x in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>nb < length levellista;\n        x < nb \\<and> p \\<in> set (levellista ! x);\n        x < length levellista \\<longrightarrow>\n        (\\<forall>p\\<in>set (levellista ! x).\n            p \\<in> set_of pret \\<and> var p = x)\\<rbrakk>\n       \\<Longrightarrow> var p < nb \\<and> p \\<in> set_of pret", "apply (erule impE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>nb < length levellista;\n        x < nb \\<and> p \\<in> set (levellista ! x)\\<rbrakk>\n       \\<Longrightarrow> x < length levellista\n 2. \\<And>x.\n       \\<lbrakk>nb < length levellista;\n        x < nb \\<and> p \\<in> set (levellista ! x);\n        \\<forall>p\\<in>set (levellista ! x).\n           p \\<in> set_of pret \\<and> var p = x\\<rbrakk>\n       \\<Longrightarrow> var p < nb \\<and> p \\<in> set_of pret", "apply arith"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>nb < length levellista;\n        x < nb \\<and> p \\<in> set (levellista ! x);\n        \\<forall>p\\<in>set (levellista ! x).\n           p \\<in> set_of pret \\<and> var p = x\\<rbrakk>\n       \\<Longrightarrow> var p < nb \\<and> p \\<in> set_of pret", "apply (erule_tac x=p in ballE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>nb < length levellista;\n        x < nb \\<and> p \\<in> set (levellista ! x);\n        p \\<in> set_of pret \\<and> var p = x\\<rbrakk>\n       \\<Longrightarrow> var p < nb \\<and> p \\<in> set_of pret\n 2. \\<And>x.\n       \\<lbrakk>nb < length levellista;\n        x < nb \\<and> p \\<in> set (levellista ! x);\n        p \\<notin> set (levellista ! x)\\<rbrakk>\n       \\<Longrightarrow> var p < nb \\<and> p \\<in> set_of pret", "apply arith"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>nb < length levellista;\n        x < nb \\<and> p \\<in> set (levellista ! x);\n        p \\<notin> set (levellista ! x)\\<rbrakk>\n       \\<Longrightarrow> var p < nb \\<and> p \\<in> set_of pret", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Dags_root_in_Nodes:\nassumes t_in_DagsSucnb: \"t \\<in> Dags (Nodes (Suc nb) levellista) low high\" \nshows \"\\<exists> p . Dag p low high t  \\<and> p \\<in> Nodes (Suc nb) levellista\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p. Dag p low high t \\<and> p \\<in> Nodes (Suc nb) levellista", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>p. Dag p low high t \\<and> p \\<in> Nodes (Suc nb) levellista", "from t_in_DagsSucnb"], ["proof (chain)\npicking this:\n  t \\<in> Dags (Nodes (Suc nb) levellista) low high", "obtain p where t_dag: \"Dag p low high t\" and t_subset_Nodes: \"set_of t \\<subseteq> Nodes (Suc nb) levellista\" and t_nTip: \"t\\<noteq> Tip\""], ["proof (prove)\nusing this:\n  t \\<in> Dags (Nodes (Suc nb) levellista) low high\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>Dag p low high t;\n         set_of t \\<subseteq> Nodes (Suc nb) levellista;\n         t \\<noteq> Tip\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (fastforce elim: Dags.cases)"], ["proof (state)\nthis:\n  Dag p low high t\n  set_of t \\<subseteq> Nodes (Suc nb) levellista\n  t \\<noteq> Tip\n\ngoal (1 subgoal):\n 1. \\<exists>p. Dag p low high t \\<and> p \\<in> Nodes (Suc nb) levellista", "from t_dag t_nTip"], ["proof (chain)\npicking this:\n  Dag p low high t\n  t \\<noteq> Tip", "have \"p\\<noteq>Null\""], ["proof (prove)\nusing this:\n  Dag p low high t\n  t \\<noteq> Tip\n\ngoal (1 subgoal):\n 1. p \\<noteq> Null", "by (cases t) auto"], ["proof (state)\nthis:\n  p \\<noteq> Null\n\ngoal (1 subgoal):\n 1. \\<exists>p. Dag p low high t \\<and> p \\<in> Nodes (Suc nb) levellista", "with t_subset_Nodes t_dag"], ["proof (chain)\npicking this:\n  set_of t \\<subseteq> Nodes (Suc nb) levellista\n  Dag p low high t\n  p \\<noteq> Null", "have \"p \\<in> Nodes (Suc nb) levellista\""], ["proof (prove)\nusing this:\n  set_of t \\<subseteq> Nodes (Suc nb) levellista\n  Dag p low high t\n  p \\<noteq> Null\n\ngoal (1 subgoal):\n 1. p \\<in> Nodes (Suc nb) levellista", "by (cases t) auto"], ["proof (state)\nthis:\n  p \\<in> Nodes (Suc nb) levellista\n\ngoal (1 subgoal):\n 1. \\<exists>p. Dag p low high t \\<and> p \\<in> Nodes (Suc nb) levellista", "with t_dag"], ["proof (chain)\npicking this:\n  Dag p low high t\n  p \\<in> Nodes (Suc nb) levellista", "show ?thesis"], ["proof (prove)\nusing this:\n  Dag p low high t\n  p \\<in> Nodes (Suc nb) levellista\n\ngoal (1 subgoal):\n 1. \\<exists>p. Dag p low high t \\<and> p \\<in> Nodes (Suc nb) levellista", "by auto"], ["proof (state)\nthis:\n  \\<exists>p. Dag p low high t \\<and> p \\<in> Nodes (Suc nb) levellista\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subdag_dag: \n\"\\<And> p. \\<lbrakk>Dag p low high t; st <= t\\<rbrakk> \\<Longrightarrow> \\<exists> stp. Dag stp low high st\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>Dag p low high t; st \\<le> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>stp. Dag stp low high st", "proof (induct t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>Dag p low high Tip; st \\<le> Tip\\<rbrakk>\n       \\<Longrightarrow> \\<exists>stp. Dag stp low high st\n 2. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>Dag p low high t1; st \\<le> t1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>stp. Dag stp low high st;\n        \\<And>p.\n           \\<lbrakk>Dag p low high t2; st \\<le> t2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>stp. Dag stp low high st;\n        Dag p low high (Node t1 x2 t2); st \\<le> Node t1 x2 t2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>stp. Dag stp low high st", "case Tip"], ["proof (state)\nthis:\n  Dag p low high Tip\n  st \\<le> Tip\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>Dag p low high Tip; st \\<le> Tip\\<rbrakk>\n       \\<Longrightarrow> \\<exists>stp. Dag stp low high st\n 2. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>Dag p low high t1; st \\<le> t1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>stp. Dag stp low high st;\n        \\<And>p.\n           \\<lbrakk>Dag p low high t2; st \\<le> t2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>stp. Dag stp low high st;\n        Dag p low high (Node t1 x2 t2); st \\<le> Node t1 x2 t2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>stp. Dag stp low high st", "then"], ["proof (chain)\npicking this:\n  Dag p low high Tip\n  st \\<le> Tip", "show ?case"], ["proof (prove)\nusing this:\n  Dag p low high Tip\n  st \\<le> Tip\n\ngoal (1 subgoal):\n 1. \\<exists>stp. Dag stp low high st", "by (simp add: less_dag_def le_dag_def)"], ["proof (state)\nthis:\n  \\<exists>stp. Dag stp low high st\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>Dag p low high t1; st \\<le> t1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>stp. Dag stp low high st;\n        \\<And>p.\n           \\<lbrakk>Dag p low high t2; st \\<le> t2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>stp. Dag stp low high st;\n        Dag p low high (Node t1 x2 t2); st \\<le> Node t1 x2 t2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>stp. Dag stp low high st", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>Dag p low high t1; st \\<le> t1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>stp. Dag stp low high st;\n        \\<And>p.\n           \\<lbrakk>Dag p low high t2; st \\<le> t2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>stp. Dag stp low high st;\n        Dag p low high (Node t1 x2 t2); st \\<le> Node t1 x2 t2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>stp. Dag stp low high st", "case (Node lt po rt)"], ["proof (state)\nthis:\n  \\<lbrakk>Dag ?p low high lt; st \\<le> lt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>stp. Dag stp low high st\n  \\<lbrakk>Dag ?p low high rt; st \\<le> rt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>stp. Dag stp low high st\n  Dag p low high (Node lt po rt)\n  st \\<le> Node lt po rt\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>Dag p low high t1; st \\<le> t1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>stp. Dag stp low high st;\n        \\<And>p.\n           \\<lbrakk>Dag p low high t2; st \\<le> t2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>stp. Dag stp low high st;\n        Dag p low high (Node t1 x2 t2); st \\<le> Node t1 x2 t2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>stp. Dag stp low high st", "note t_Node=this"], ["proof (state)\nthis:\n  \\<lbrakk>Dag ?p low high lt; st \\<le> lt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>stp. Dag stp low high st\n  \\<lbrakk>Dag ?p low high rt; st \\<le> rt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>stp. Dag stp low high st\n  Dag p low high (Node lt po rt)\n  st \\<le> Node lt po rt\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>Dag p low high t1; st \\<le> t1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>stp. Dag stp low high st;\n        \\<And>p.\n           \\<lbrakk>Dag p low high t2; st \\<le> t2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>stp. Dag stp low high st;\n        Dag p low high (Node t1 x2 t2); st \\<le> Node t1 x2 t2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>stp. Dag stp low high st", "with Node.prems"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt po rt)\n  st \\<le> Node lt po rt\n  \\<lbrakk>Dag ?p low high lt; st \\<le> lt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>stp. Dag stp low high st\n  \\<lbrakk>Dag ?p low high rt; st \\<le> rt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>stp. Dag stp low high st\n  Dag p low high (Node lt po rt)\n  st \\<le> Node lt po rt", "have p_po: \"p=po\""], ["proof (prove)\nusing this:\n  Dag p low high (Node lt po rt)\n  st \\<le> Node lt po rt\n  \\<lbrakk>Dag ?p low high lt; st \\<le> lt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>stp. Dag stp low high st\n  \\<lbrakk>Dag ?p low high rt; st \\<le> rt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>stp. Dag stp low high st\n  Dag p low high (Node lt po rt)\n  st \\<le> Node lt po rt\n\ngoal (1 subgoal):\n 1. p = po", "by simp"], ["proof (state)\nthis:\n  p = po\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>Dag p low high t1; st \\<le> t1\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>stp. Dag stp low high st;\n        \\<And>p.\n           \\<lbrakk>Dag p low high t2; st \\<le> t2\\<rbrakk>\n           \\<Longrightarrow> \\<exists>stp. Dag stp low high st;\n        Dag p low high (Node t1 x2 t2); st \\<le> Node t1 x2 t2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>stp. Dag stp low high st", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>stp. Dag stp low high st", "proof (cases \"st = Node lt po rt\")"], ["proof (state)\ngoal (2 subgoals):\n 1. st = Node lt po rt \\<Longrightarrow> \\<exists>stp. Dag stp low high st\n 2. st \\<noteq> Node lt po rt \\<Longrightarrow>\n    \\<exists>stp. Dag stp low high st", "case True"], ["proof (state)\nthis:\n  st = Node lt po rt\n\ngoal (2 subgoals):\n 1. st = Node lt po rt \\<Longrightarrow> \\<exists>stp. Dag stp low high st\n 2. st \\<noteq> Node lt po rt \\<Longrightarrow>\n    \\<exists>stp. Dag stp low high st", "note st_t=this"], ["proof (state)\nthis:\n  st = Node lt po rt\n\ngoal (2 subgoals):\n 1. st = Node lt po rt \\<Longrightarrow> \\<exists>stp. Dag stp low high st\n 2. st \\<noteq> Node lt po rt \\<Longrightarrow>\n    \\<exists>stp. Dag stp low high st", "with Node.prems"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt po rt)\n  st \\<le> Node lt po rt\n  st = Node lt po rt", "show ?thesis"], ["proof (prove)\nusing this:\n  Dag p low high (Node lt po rt)\n  st \\<le> Node lt po rt\n  st = Node lt po rt\n\ngoal (1 subgoal):\n 1. \\<exists>stp. Dag stp low high st", "by auto"], ["proof (state)\nthis:\n  \\<exists>stp. Dag stp low high st\n\ngoal (1 subgoal):\n 1. st \\<noteq> Node lt po rt \\<Longrightarrow>\n    \\<exists>stp. Dag stp low high st", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. st \\<noteq> Node lt po rt \\<Longrightarrow>\n    \\<exists>stp. Dag stp low high st", "assume st_nt: \"st \\<noteq> Node lt po rt\""], ["proof (state)\nthis:\n  st \\<noteq> Node lt po rt\n\ngoal (1 subgoal):\n 1. st \\<noteq> Node lt po rt \\<Longrightarrow>\n    \\<exists>stp. Dag stp low high st", "with Node.prems p_po"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt po rt)\n  st \\<le> Node lt po rt\n  p = po\n  st \\<noteq> Node lt po rt", "have st_subdag_lt_rt: \"st<=lt \\<or> st <=rt\""], ["proof (prove)\nusing this:\n  Dag p low high (Node lt po rt)\n  st \\<le> Node lt po rt\n  p = po\n  st \\<noteq> Node lt po rt\n\ngoal (1 subgoal):\n 1. st \\<le> lt \\<or> st \\<le> rt", "by (auto simp add:le_dag_def less_dag_def)"], ["proof (state)\nthis:\n  st \\<le> lt \\<or> st \\<le> rt\n\ngoal (1 subgoal):\n 1. st \\<noteq> Node lt po rt \\<Longrightarrow>\n    \\<exists>stp. Dag stp low high st", "from Node.prems p_po"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt po rt)\n  st \\<le> Node lt po rt\n  p = po", "obtain lp rp where lt_dag: \"Dag lp low high lt\" and rt_dag: \"Dag rp low high rt\""], ["proof (prove)\nusing this:\n  Dag p low high (Node lt po rt)\n  st \\<le> Node lt po rt\n  p = po\n\ngoal (1 subgoal):\n 1. (\\<And>lp rp.\n        \\<lbrakk>Dag lp low high lt; Dag rp low high rt\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  Dag lp low high lt\n  Dag rp low high rt\n\ngoal (1 subgoal):\n 1. st \\<noteq> Node lt po rt \\<Longrightarrow>\n    \\<exists>stp. Dag stp low high st", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>stp. Dag stp low high st", "proof (cases \"st<=lt\")"], ["proof (state)\ngoal (2 subgoals):\n 1. st \\<le> lt \\<Longrightarrow> \\<exists>stp. Dag stp low high st\n 2. \\<not> st \\<le> lt \\<Longrightarrow> \\<exists>stp. Dag stp low high st", "case True"], ["proof (state)\nthis:\n  st \\<le> lt\n\ngoal (2 subgoals):\n 1. st \\<le> lt \\<Longrightarrow> \\<exists>stp. Dag stp low high st\n 2. \\<not> st \\<le> lt \\<Longrightarrow> \\<exists>stp. Dag stp low high st", "note st_lt=this"], ["proof (state)\nthis:\n  st \\<le> lt\n\ngoal (2 subgoals):\n 1. st \\<le> lt \\<Longrightarrow> \\<exists>stp. Dag stp low high st\n 2. \\<not> st \\<le> lt \\<Longrightarrow> \\<exists>stp. Dag stp low high st", "with lt_dag"], ["proof (chain)\npicking this:\n  Dag lp low high lt\n  st \\<le> lt", "show ?thesis"], ["proof (prove)\nusing this:\n  Dag lp low high lt\n  st \\<le> lt\n\ngoal (1 subgoal):\n 1. \\<exists>stp. Dag stp low high st", "apply-"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag lp low high lt; st \\<le> lt\\<rbrakk>\n    \\<Longrightarrow> \\<exists>stp. Dag stp low high st", "apply (rule Node.hyps)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Dag lp low high lt; st \\<le> lt\\<rbrakk>\n    \\<Longrightarrow> Dag ?p2 low high lt\n 2. \\<lbrakk>Dag lp low high lt; st \\<le> lt\\<rbrakk>\n    \\<Longrightarrow> st \\<le> lt", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>stp. Dag stp low high st\n\ngoal (1 subgoal):\n 1. \\<not> st \\<le> lt \\<Longrightarrow> \\<exists>stp. Dag stp low high st", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> st \\<le> lt \\<Longrightarrow> \\<exists>stp. Dag stp low high st", "assume \"\\<not> st \\<le> lt\""], ["proof (state)\nthis:\n  \\<not> st \\<le> lt\n\ngoal (1 subgoal):\n 1. \\<not> st \\<le> lt \\<Longrightarrow> \\<exists>stp. Dag stp low high st", "with st_subdag_lt_rt"], ["proof (chain)\npicking this:\n  st \\<le> lt \\<or> st \\<le> rt\n  \\<not> st \\<le> lt", "have st_rt: \"st <= rt\""], ["proof (prove)\nusing this:\n  st \\<le> lt \\<or> st \\<le> rt\n  \\<not> st \\<le> lt\n\ngoal (1 subgoal):\n 1. st \\<le> rt", "by simp"], ["proof (state)\nthis:\n  st \\<le> rt\n\ngoal (1 subgoal):\n 1. \\<not> st \\<le> lt \\<Longrightarrow> \\<exists>stp. Dag stp low high st", "from Node.hyps"], ["proof (chain)\npicking this:\n  \\<lbrakk>Dag ?p low high lt; st \\<le> lt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>stp. Dag stp low high st\n  \\<lbrakk>Dag ?p low high rt; st \\<le> rt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>stp. Dag stp low high st", "have rhyp: \"\\<lbrakk>Dag rp low high rt; st \\<le> rt\\<rbrakk> \\<Longrightarrow> \\<exists>stp. Dag stp low high st\""], ["proof (prove)\nusing this:\n  \\<lbrakk>Dag ?p low high lt; st \\<le> lt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>stp. Dag stp low high st\n  \\<lbrakk>Dag ?p low high rt; st \\<le> rt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>stp. Dag stp low high st\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag rp low high rt; st \\<le> rt\\<rbrakk>\n    \\<Longrightarrow> \\<exists>stp. Dag stp low high st", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>Dag rp low high rt; st \\<le> rt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>stp. Dag stp low high st\n\ngoal (1 subgoal):\n 1. \\<not> st \\<le> lt \\<Longrightarrow> \\<exists>stp. Dag stp low high st", "from st_rt rt_dag"], ["proof (chain)\npicking this:\n  st \\<le> rt\n  Dag rp low high rt", "show ?thesis"], ["proof (prove)\nusing this:\n  st \\<le> rt\n  Dag rp low high rt\n\ngoal (1 subgoal):\n 1. \\<exists>stp. Dag stp low high st", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>st \\<le> rt; Dag rp low high rt\\<rbrakk>\n    \\<Longrightarrow> \\<exists>stp. Dag stp low high st", "apply (rule rhyp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>st \\<le> rt; Dag rp low high rt\\<rbrakk>\n    \\<Longrightarrow> Dag rp low high rt\n 2. \\<lbrakk>st \\<le> rt; Dag rp low high rt\\<rbrakk>\n    \\<Longrightarrow> st \\<le> rt", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>stp. Dag stp low high st\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>stp. Dag stp low high st\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>stp. Dag stp low high st\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Dags_subdags: \nassumes t_in_Dags: \"t \\<in> Dags nodes low high\" and\n  st_t: \"st <= t\" and \n  st_nTip: \"st \\<noteq> Tip\"\nshows \"st \\<in> Dags nodes low high\""], ["proof (prove)\ngoal (1 subgoal):\n 1. st \\<in> Dags nodes low high", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. st \\<in> Dags nodes low high", "from t_in_Dags"], ["proof (chain)\npicking this:\n  t \\<in> Dags nodes low high", "obtain p where t_dag: \"Dag p low high t\" and t_subset_Nodes: \"set_of t \\<subseteq> nodes\" and t_nTip: \"t\\<noteq> Tip\""], ["proof (prove)\nusing this:\n  t \\<in> Dags nodes low high\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>Dag p low high t; set_of t \\<subseteq> nodes;\n         t \\<noteq> Tip\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (fastforce elim: Dags.cases)"], ["proof (state)\nthis:\n  Dag p low high t\n  set_of t \\<subseteq> nodes\n  t \\<noteq> Tip\n\ngoal (1 subgoal):\n 1. st \\<in> Dags nodes low high", "from st_t"], ["proof (chain)\npicking this:\n  st \\<le> t", "have \"set_of st \\<subseteq> set_of t\""], ["proof (prove)\nusing this:\n  st \\<le> t\n\ngoal (1 subgoal):\n 1. set_of st \\<subseteq> set_of t", "by (simp add: le_dag_set_of)"], ["proof (state)\nthis:\n  set_of st \\<subseteq> set_of t\n\ngoal (1 subgoal):\n 1. st \\<in> Dags nodes low high", "with t_subset_Nodes"], ["proof (chain)\npicking this:\n  set_of t \\<subseteq> nodes\n  set_of st \\<subseteq> set_of t", "have st_subset_fnctNodes: \"set_of st \\<subseteq> nodes\""], ["proof (prove)\nusing this:\n  set_of t \\<subseteq> nodes\n  set_of st \\<subseteq> set_of t\n\ngoal (1 subgoal):\n 1. set_of st \\<subseteq> nodes", "by blast"], ["proof (state)\nthis:\n  set_of st \\<subseteq> nodes\n\ngoal (1 subgoal):\n 1. st \\<in> Dags nodes low high", "from st_t t_dag"], ["proof (chain)\npicking this:\n  st \\<le> t\n  Dag p low high t", "obtain stp where \"Dag stp low high st\""], ["proof (prove)\nusing this:\n  st \\<le> t\n  Dag p low high t\n\ngoal (1 subgoal):\n 1. (\\<And>stp.\n        Dag stp low high st \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>stp. Dag stp low high st \\<Longrightarrow> thesis;\n     st \\<le> t; Dag p low high t\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply (drule subdag_dag)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>stp. Dag stp low high st \\<Longrightarrow> thesis;\n     st \\<le> t\\<rbrakk>\n    \\<Longrightarrow> ?st4 \\<le> t\n 2. \\<lbrakk>\\<And>stp. Dag stp low high st \\<Longrightarrow> thesis;\n     st \\<le> t; \\<exists>stp. Dag stp low high ?st4\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  Dag stp low high st\n\ngoal (1 subgoal):\n 1. st \\<in> Dags nodes low high", "with st_subset_fnctNodes st_nTip"], ["proof (chain)\npicking this:\n  set_of st \\<subseteq> nodes\n  st \\<noteq> Tip\n  Dag stp low high st", "show ?thesis"], ["proof (prove)\nusing this:\n  set_of st \\<subseteq> nodes\n  st \\<noteq> Tip\n  Dag stp low high st\n\ngoal (1 subgoal):\n 1. st \\<in> Dags nodes low high", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set_of st \\<subseteq> nodes; st \\<noteq> Tip;\n     Dag stp low high st\\<rbrakk>\n    \\<Longrightarrow> st \\<in> Dags nodes low high", "apply (rule DagsI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>set_of st \\<subseteq> nodes; st \\<noteq> Tip;\n     Dag stp low high st\\<rbrakk>\n    \\<Longrightarrow> set_of st \\<subseteq> nodes\n 2. \\<lbrakk>set_of st \\<subseteq> nodes; st \\<noteq> Tip;\n     Dag stp low high st\\<rbrakk>\n    \\<Longrightarrow> Dag ?p3 low high st\n 3. \\<lbrakk>set_of st \\<subseteq> nodes; st \\<noteq> Tip;\n     Dag stp low high st\\<rbrakk>\n    \\<Longrightarrow> st \\<noteq> Tip", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  st \\<in> Dags nodes low high\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Dags_Nodes_cases: \nassumes P_sym: \"\\<And> t1 t2. P t1 t2 var = P t2 t1 var\" and\n  dags_in_lower_levels: \n  \"\\<And> t1 t2. \\<lbrakk>t1 \\<in> Dags (fnct `(Nodes n levellista)) low high; \n              t2  \\<in> Dags (fnct `(Nodes n levellista)) low high\\<rbrakk> \n             \\<Longrightarrow> P t1 t2 var\" and\n  dags_in_mixed_levels: \n  \"\\<And> t1 t2. \\<lbrakk>t1 \\<in> Dags (fnct `(Nodes n levellista)) low high; \n              t2  \\<in> Dags (fnct `(Nodes (Suc n) levellista)) low high; \n              t2 \\<notin>  Dags (fnct `(Nodes n levellista)) low high\\<rbrakk> \n             \\<Longrightarrow> P t1 t2 var\" and\n  dags_in_high_level: \n   \"\\<And> t1 t2. \\<lbrakk>t1 \\<in> Dags (fnct `(Nodes (Suc n) levellista)) low high; \n               t1 \\<notin>  Dags (fnct `(Nodes n levellista)) low high; \n               t2 \\<in> Dags (fnct `(Nodes (Suc n) levellista)) low high; \n               t2 \\<notin>  Dags (fnct `(Nodes n levellista)) low high\\<rbrakk> \n              \\<Longrightarrow> P t1 t2 var\"\nshows \"\\<forall> t1 t2.  t1 \\<in> Dags (fnct `(Nodes (Suc n) levellista)) low high \\<and> \n                 t2 \\<in> Dags (fnct `(Nodes (Suc n) levellista)) low high \n                 \\<longrightarrow> P t1 t2 var\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t1 t2.\n       t1 \\<in> Dags (fnct ` Nodes (Suc n) levellista) low high \\<and>\n       t2 \\<in> Dags (fnct ` Nodes (Suc n) levellista) low\n                 high \\<longrightarrow>\n       P t1 t2 var", "proof (intro allI impI , elim conjE)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       \\<lbrakk>t1 \\<in> Dags (fnct ` Nodes (Suc n) levellista) low high;\n        t2 \\<in> Dags (fnct ` Nodes (Suc n) levellista) low high\\<rbrakk>\n       \\<Longrightarrow> P t1 t2 var", "fix t1 t2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       \\<lbrakk>t1 \\<in> Dags (fnct ` Nodes (Suc n) levellista) low high;\n        t2 \\<in> Dags (fnct ` Nodes (Suc n) levellista) low high\\<rbrakk>\n       \\<Longrightarrow> P t1 t2 var", "assume t1_in_higher_levels: \"t1 \\<in> Dags (fnct ` Nodes (Suc n) levellista) low high\""], ["proof (state)\nthis:\n  t1 \\<in> Dags (fnct ` Nodes (Suc n) levellista) low high\n\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       \\<lbrakk>t1 \\<in> Dags (fnct ` Nodes (Suc n) levellista) low high;\n        t2 \\<in> Dags (fnct ` Nodes (Suc n) levellista) low high\\<rbrakk>\n       \\<Longrightarrow> P t1 t2 var", "assume t2_in_higher_levels: \"t2 \\<in> Dags (fnct ` Nodes (Suc n) levellista) low high\""], ["proof (state)\nthis:\n  t2 \\<in> Dags (fnct ` Nodes (Suc n) levellista) low high\n\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       \\<lbrakk>t1 \\<in> Dags (fnct ` Nodes (Suc n) levellista) low high;\n        t2 \\<in> Dags (fnct ` Nodes (Suc n) levellista) low high\\<rbrakk>\n       \\<Longrightarrow> P t1 t2 var", "show  \"P t1 t2 var\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P t1 t2 var", "proof (cases \"t1 \\<in> Dags (fnct ` Nodes n levellista) low high\")"], ["proof (state)\ngoal (2 subgoals):\n 1. t1 \\<in> Dags (fnct ` Nodes n levellista) low high \\<Longrightarrow>\n    P t1 t2 var\n 2. t1 \\<notin> Dags (fnct ` Nodes n levellista) low high \\<Longrightarrow>\n    P t1 t2 var", "case True"], ["proof (state)\nthis:\n  t1 \\<in> Dags (fnct ` Nodes n levellista) low high\n\ngoal (2 subgoals):\n 1. t1 \\<in> Dags (fnct ` Nodes n levellista) low high \\<Longrightarrow>\n    P t1 t2 var\n 2. t1 \\<notin> Dags (fnct ` Nodes n levellista) low high \\<Longrightarrow>\n    P t1 t2 var", "note t1_in_ll = this"], ["proof (state)\nthis:\n  t1 \\<in> Dags (fnct ` Nodes n levellista) low high\n\ngoal (2 subgoals):\n 1. t1 \\<in> Dags (fnct ` Nodes n levellista) low high \\<Longrightarrow>\n    P t1 t2 var\n 2. t1 \\<notin> Dags (fnct ` Nodes n levellista) low high \\<Longrightarrow>\n    P t1 t2 var", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. P t1 t2 var", "proof (cases \"t2 \\<in> Dags (fnct ` Nodes n levellista) low high\")"], ["proof (state)\ngoal (2 subgoals):\n 1. t2 \\<in> Dags (fnct ` Nodes n levellista) low high \\<Longrightarrow>\n    P t1 t2 var\n 2. t2 \\<notin> Dags (fnct ` Nodes n levellista) low high \\<Longrightarrow>\n    P t1 t2 var", "case True"], ["proof (state)\nthis:\n  t2 \\<in> Dags (fnct ` Nodes n levellista) low high\n\ngoal (2 subgoals):\n 1. t2 \\<in> Dags (fnct ` Nodes n levellista) low high \\<Longrightarrow>\n    P t1 t2 var\n 2. t2 \\<notin> Dags (fnct ` Nodes n levellista) low high \\<Longrightarrow>\n    P t1 t2 var", "note t2_in_ll=this"], ["proof (state)\nthis:\n  t2 \\<in> Dags (fnct ` Nodes n levellista) low high\n\ngoal (2 subgoals):\n 1. t2 \\<in> Dags (fnct ` Nodes n levellista) low high \\<Longrightarrow>\n    P t1 t2 var\n 2. t2 \\<notin> Dags (fnct ` Nodes n levellista) low high \\<Longrightarrow>\n    P t1 t2 var", "with t1_in_ll dags_in_lower_levels"], ["proof (chain)\npicking this:\n  t1 \\<in> Dags (fnct ` Nodes n levellista) low high\n  \\<lbrakk>?t1.0 \\<in> Dags (fnct ` Nodes n levellista) low high;\n   ?t2.0 \\<in> Dags (fnct ` Nodes n levellista) low high\\<rbrakk>\n  \\<Longrightarrow> P ?t1.0 ?t2.0 var\n  t2 \\<in> Dags (fnct ` Nodes n levellista) low high", "show ?thesis"], ["proof (prove)\nusing this:\n  t1 \\<in> Dags (fnct ` Nodes n levellista) low high\n  \\<lbrakk>?t1.0 \\<in> Dags (fnct ` Nodes n levellista) low high;\n   ?t2.0 \\<in> Dags (fnct ` Nodes n levellista) low high\\<rbrakk>\n  \\<Longrightarrow> P ?t1.0 ?t2.0 var\n  t2 \\<in> Dags (fnct ` Nodes n levellista) low high\n\ngoal (1 subgoal):\n 1. P t1 t2 var", "by simp"], ["proof (state)\nthis:\n  P t1 t2 var\n\ngoal (1 subgoal):\n 1. t2 \\<notin> Dags (fnct ` Nodes n levellista) low high \\<Longrightarrow>\n    P t1 t2 var", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t2 \\<notin> Dags (fnct ` Nodes n levellista) low high \\<Longrightarrow>\n    P t1 t2 var", "assume t2_notin_ll: \"t2 \\<notin> Dags (fnct ` Nodes n levellista) low high\""], ["proof (state)\nthis:\n  t2 \\<notin> Dags (fnct ` Nodes n levellista) low high\n\ngoal (1 subgoal):\n 1. t2 \\<notin> Dags (fnct ` Nodes n levellista) low high \\<Longrightarrow>\n    P t1 t2 var", "with t1_in_ll t2_in_higher_levels dags_in_mixed_levels"], ["proof (chain)\npicking this:\n  t1 \\<in> Dags (fnct ` Nodes n levellista) low high\n  t2 \\<in> Dags (fnct ` Nodes (Suc n) levellista) low high\n  \\<lbrakk>?t1.0 \\<in> Dags (fnct ` Nodes n levellista) low high;\n   ?t2.0 \\<in> Dags (fnct ` Nodes (Suc n) levellista) low high;\n   ?t2.0 \\<notin> Dags (fnct ` Nodes n levellista) low high\\<rbrakk>\n  \\<Longrightarrow> P ?t1.0 ?t2.0 var\n  t2 \\<notin> Dags (fnct ` Nodes n levellista) low high", "show ?thesis"], ["proof (prove)\nusing this:\n  t1 \\<in> Dags (fnct ` Nodes n levellista) low high\n  t2 \\<in> Dags (fnct ` Nodes (Suc n) levellista) low high\n  \\<lbrakk>?t1.0 \\<in> Dags (fnct ` Nodes n levellista) low high;\n   ?t2.0 \\<in> Dags (fnct ` Nodes (Suc n) levellista) low high;\n   ?t2.0 \\<notin> Dags (fnct ` Nodes n levellista) low high\\<rbrakk>\n  \\<Longrightarrow> P ?t1.0 ?t2.0 var\n  t2 \\<notin> Dags (fnct ` Nodes n levellista) low high\n\ngoal (1 subgoal):\n 1. P t1 t2 var", "by simp"], ["proof (state)\nthis:\n  P t1 t2 var\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P t1 t2 var\n\ngoal (1 subgoal):\n 1. t1 \\<notin> Dags (fnct ` Nodes n levellista) low high \\<Longrightarrow>\n    P t1 t2 var", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t1 \\<notin> Dags (fnct ` Nodes n levellista) low high \\<Longrightarrow>\n    P t1 t2 var", "assume t1_notin_ll: \"t1 \\<notin> Dags (fnct ` Nodes n levellista) low high\""], ["proof (state)\nthis:\n  t1 \\<notin> Dags (fnct ` Nodes n levellista) low high\n\ngoal (1 subgoal):\n 1. t1 \\<notin> Dags (fnct ` Nodes n levellista) low high \\<Longrightarrow>\n    P t1 t2 var", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. P t1 t2 var", "proof (cases \"t2 \\<in> Dags (fnct ` Nodes n levellista) low high\")"], ["proof (state)\ngoal (2 subgoals):\n 1. t2 \\<in> Dags (fnct ` Nodes n levellista) low high \\<Longrightarrow>\n    P t1 t2 var\n 2. t2 \\<notin> Dags (fnct ` Nodes n levellista) low high \\<Longrightarrow>\n    P t1 t2 var", "case True"], ["proof (state)\nthis:\n  t2 \\<in> Dags (fnct ` Nodes n levellista) low high\n\ngoal (2 subgoals):\n 1. t2 \\<in> Dags (fnct ` Nodes n levellista) low high \\<Longrightarrow>\n    P t1 t2 var\n 2. t2 \\<notin> Dags (fnct ` Nodes n levellista) low high \\<Longrightarrow>\n    P t1 t2 var", "note t2_in_ll=this"], ["proof (state)\nthis:\n  t2 \\<in> Dags (fnct ` Nodes n levellista) low high\n\ngoal (2 subgoals):\n 1. t2 \\<in> Dags (fnct ` Nodes n levellista) low high \\<Longrightarrow>\n    P t1 t2 var\n 2. t2 \\<notin> Dags (fnct ` Nodes n levellista) low high \\<Longrightarrow>\n    P t1 t2 var", "with dags_in_mixed_levels t1_in_higher_levels t1_notin_ll P_sym"], ["proof (chain)\npicking this:\n  \\<lbrakk>?t1.0 \\<in> Dags (fnct ` Nodes n levellista) low high;\n   ?t2.0 \\<in> Dags (fnct ` Nodes (Suc n) levellista) low high;\n   ?t2.0 \\<notin> Dags (fnct ` Nodes n levellista) low high\\<rbrakk>\n  \\<Longrightarrow> P ?t1.0 ?t2.0 var\n  t1 \\<in> Dags (fnct ` Nodes (Suc n) levellista) low high\n  t1 \\<notin> Dags (fnct ` Nodes n levellista) low high\n  P ?t1.0 ?t2.0 var = P ?t2.0 ?t1.0 var\n  t2 \\<in> Dags (fnct ` Nodes n levellista) low high", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?t1.0 \\<in> Dags (fnct ` Nodes n levellista) low high;\n   ?t2.0 \\<in> Dags (fnct ` Nodes (Suc n) levellista) low high;\n   ?t2.0 \\<notin> Dags (fnct ` Nodes n levellista) low high\\<rbrakk>\n  \\<Longrightarrow> P ?t1.0 ?t2.0 var\n  t1 \\<in> Dags (fnct ` Nodes (Suc n) levellista) low high\n  t1 \\<notin> Dags (fnct ` Nodes n levellista) low high\n  P ?t1.0 ?t2.0 var = P ?t2.0 ?t1.0 var\n  t2 \\<in> Dags (fnct ` Nodes n levellista) low high\n\ngoal (1 subgoal):\n 1. P t1 t2 var", "by auto"], ["proof (state)\nthis:\n  P t1 t2 var\n\ngoal (1 subgoal):\n 1. t2 \\<notin> Dags (fnct ` Nodes n levellista) low high \\<Longrightarrow>\n    P t1 t2 var", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t2 \\<notin> Dags (fnct ` Nodes n levellista) low high \\<Longrightarrow>\n    P t1 t2 var", "assume t2_notin_ll: \"t2 \\<notin> Dags (fnct ` Nodes n levellista) low high\""], ["proof (state)\nthis:\n  t2 \\<notin> Dags (fnct ` Nodes n levellista) low high\n\ngoal (1 subgoal):\n 1. t2 \\<notin> Dags (fnct ` Nodes n levellista) low high \\<Longrightarrow>\n    P t1 t2 var", "with t1_notin_ll t1_in_higher_levels t2_in_higher_levels dags_in_high_level"], ["proof (chain)\npicking this:\n  t1 \\<notin> Dags (fnct ` Nodes n levellista) low high\n  t1 \\<in> Dags (fnct ` Nodes (Suc n) levellista) low high\n  t2 \\<in> Dags (fnct ` Nodes (Suc n) levellista) low high\n  \\<lbrakk>?t1.0 \\<in> Dags (fnct ` Nodes (Suc n) levellista) low high;\n   ?t1.0 \\<notin> Dags (fnct ` Nodes n levellista) low high;\n   ?t2.0 \\<in> Dags (fnct ` Nodes (Suc n) levellista) low high;\n   ?t2.0 \\<notin> Dags (fnct ` Nodes n levellista) low high\\<rbrakk>\n  \\<Longrightarrow> P ?t1.0 ?t2.0 var\n  t2 \\<notin> Dags (fnct ` Nodes n levellista) low high", "show ?thesis"], ["proof (prove)\nusing this:\n  t1 \\<notin> Dags (fnct ` Nodes n levellista) low high\n  t1 \\<in> Dags (fnct ` Nodes (Suc n) levellista) low high\n  t2 \\<in> Dags (fnct ` Nodes (Suc n) levellista) low high\n  \\<lbrakk>?t1.0 \\<in> Dags (fnct ` Nodes (Suc n) levellista) low high;\n   ?t1.0 \\<notin> Dags (fnct ` Nodes n levellista) low high;\n   ?t2.0 \\<in> Dags (fnct ` Nodes (Suc n) levellista) low high;\n   ?t2.0 \\<notin> Dags (fnct ` Nodes n levellista) low high\\<rbrakk>\n  \\<Longrightarrow> P ?t1.0 ?t2.0 var\n  t2 \\<notin> Dags (fnct ` Nodes n levellista) low high\n\ngoal (1 subgoal):\n 1. P t1 t2 var", "by simp"], ["proof (state)\nthis:\n  P t1 t2 var\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P t1 t2 var\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P t1 t2 var\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Null_notin_Nodes: \"\\<lbrakk>Dag p low high t; nb <= length levellista; wf_ll t levellista var\\<rbrakk> \\<Longrightarrow> Null \\<notin> Nodes nb levellista\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag p low high t; nb \\<le> length levellista;\n     wf_ll t levellista var\\<rbrakk>\n    \\<Longrightarrow> Null \\<notin> Nodes nb levellista", "apply (simp add: Nodes_def wf_ll_def del: Dag_Ref)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag p low high t; nb \\<le> length levellista;\n     (\\<forall>p.\n         p \\<in> set_of t \\<longrightarrow>\n         p \\<in> set (levellista ! var p)) \\<and>\n     (\\<forall>k<length levellista.\n         \\<forall>p\\<in>set (levellista ! k).\n            p \\<in> set_of t \\<and> var p = k)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x<nb. Null \\<notin> set (levellista ! x)", "apply (rule allI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Dag p low high t; nb \\<le> length levellista;\n        (\\<forall>p.\n            p \\<in> set_of t \\<longrightarrow>\n            p \\<in> set (levellista ! var p)) \\<and>\n        (\\<forall>k<length levellista.\n            \\<forall>p\\<in>set (levellista ! k).\n               p \\<in> set_of t \\<and> var p = k)\\<rbrakk>\n       \\<Longrightarrow> x < nb \\<longrightarrow>\n                         Null \\<notin> set (levellista ! x)", "apply (rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Dag p low high t; nb \\<le> length levellista;\n        (\\<forall>p.\n            p \\<in> set_of t \\<longrightarrow>\n            p \\<in> set (levellista ! var p)) \\<and>\n        (\\<forall>k<length levellista.\n            \\<forall>p\\<in>set (levellista ! k).\n               p \\<in> set_of t \\<and> var p = k);\n        x < nb\\<rbrakk>\n       \\<Longrightarrow> Null \\<notin> set (levellista ! x)", "apply (elim conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Dag p low high t; nb \\<le> length levellista; x < nb;\n        \\<forall>p.\n           p \\<in> set_of t \\<longrightarrow>\n           p \\<in> set (levellista ! var p);\n        \\<forall>k<length levellista.\n           \\<forall>p\\<in>set (levellista ! k).\n              p \\<in> set_of t \\<and> var p = k\\<rbrakk>\n       \\<Longrightarrow> Null \\<notin> set (levellista ! x)", "apply (thin_tac \"\\<forall>q. P q\" for P)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Dag p low high t; nb \\<le> length levellista; x < nb;\n        \\<forall>k<length levellista.\n           \\<forall>p\\<in>set (levellista ! k).\n              p \\<in> set_of t \\<and> var p = k\\<rbrakk>\n       \\<Longrightarrow> Null \\<notin> set (levellista ! x)", "apply (erule_tac x=x in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Dag p low high t; nb \\<le> length levellista; x < nb;\n        x < length levellista \\<longrightarrow>\n        (\\<forall>p\\<in>set (levellista ! x).\n            p \\<in> set_of t \\<and> var p = x)\\<rbrakk>\n       \\<Longrightarrow> Null \\<notin> set (levellista ! x)", "apply (erule impE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Dag p low high t; nb \\<le> length levellista;\n        x < nb\\<rbrakk>\n       \\<Longrightarrow> x < length levellista\n 2. \\<And>x.\n       \\<lbrakk>Dag p low high t; nb \\<le> length levellista; x < nb;\n        \\<forall>p\\<in>set (levellista ! x).\n           p \\<in> set_of t \\<and> var p = x\\<rbrakk>\n       \\<Longrightarrow> Null \\<notin> set (levellista ! x)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Dag p low high t; nb \\<le> length levellista; x < nb;\n        \\<forall>p\\<in>set (levellista ! x).\n           p \\<in> set_of t \\<and> var p = x\\<rbrakk>\n       \\<Longrightarrow> Null \\<notin> set (levellista ! x)", "apply (erule_tac x=Null in ballE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Dag p low high t; nb \\<le> length levellista; x < nb;\n        Null \\<in> set_of t \\<and> var Null = x\\<rbrakk>\n       \\<Longrightarrow> Null \\<notin> set (levellista ! x)\n 2. \\<And>x.\n       \\<lbrakk>Dag p low high t; nb \\<le> length levellista; x < nb;\n        Null \\<notin> set (levellista ! x)\\<rbrakk>\n       \\<Longrightarrow> Null \\<notin> set (levellista ! x)", "apply (erule conjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Dag p low high t; nb \\<le> length levellista; x < nb;\n        Null \\<in> set_of t; var Null = x\\<rbrakk>\n       \\<Longrightarrow> Null \\<notin> set (levellista ! x)\n 2. \\<And>x.\n       \\<lbrakk>Dag p low high t; nb \\<le> length levellista; x < nb;\n        Null \\<notin> set (levellista ! x)\\<rbrakk>\n       \\<Longrightarrow> Null \\<notin> set (levellista ! x)", "apply (drule set_of_nn [rule_format])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>nb \\<le> length levellista; x < nb; Null \\<in> set_of t;\n        var Null = x\\<rbrakk>\n       \\<Longrightarrow> ?n23 x \\<in> set_of t\n 2. \\<And>x.\n       \\<lbrakk>nb \\<le> length levellista; x < nb; Null \\<in> set_of t;\n        var Null = x; ?n23 x \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> Null \\<notin> set (levellista ! x)\n 3. \\<And>x.\n       \\<lbrakk>Dag p low high t; nb \\<le> length levellista; x < nb;\n        Null \\<notin> set (levellista ! x)\\<rbrakk>\n       \\<Longrightarrow> Null \\<notin> set (levellista ! x)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Nodes_in_pret: \"\\<lbrakk>wf_ll t levellista var; nb <= length levellista\\<rbrakk> \\<Longrightarrow> Nodes nb levellista \\<subseteq> set_of t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_ll t levellista var; nb \\<le> length levellista\\<rbrakk>\n    \\<Longrightarrow> Nodes nb levellista \\<subseteq> set_of t", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_ll t levellista var; nb \\<le> length levellista\\<rbrakk>\n    \\<Longrightarrow> Nodes nb levellista \\<subseteq> set_of t", "apply rule"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>wf_ll t levellista var; nb \\<le> length levellista;\n        x \\<in> Nodes nb levellista\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of t", "apply (simp add: wf_ll_def Nodes_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>(\\<forall>p.\n                    p \\<in> set_of t \\<longrightarrow>\n                    p \\<in> set (levellista ! var p)) \\<and>\n                (\\<forall>k<length levellista.\n                    \\<forall>p\\<in>set (levellista ! k).\n                       p \\<in> set_of t \\<and> var p = k);\n        nb \\<le> length levellista;\n        \\<exists>xa<nb. x \\<in> set (levellista ! xa)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of t", "apply (erule exE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>(\\<forall>p.\n                    p \\<in> set_of t \\<longrightarrow>\n                    p \\<in> set (levellista ! var p)) \\<and>\n                (\\<forall>k<length levellista.\n                    \\<forall>p\\<in>set (levellista ! k).\n                       p \\<in> set_of t \\<and> var p = k);\n        nb \\<le> length levellista;\n        xa < nb \\<and> x \\<in> set (levellista ! xa)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of t", "apply (elim conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>nb \\<le> length levellista;\n        \\<forall>p.\n           p \\<in> set_of t \\<longrightarrow>\n           p \\<in> set (levellista ! var p);\n        \\<forall>k<length levellista.\n           \\<forall>p\\<in>set (levellista ! k).\n              p \\<in> set_of t \\<and> var p = k;\n        xa < nb; x \\<in> set (levellista ! xa)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of t", "apply (thin_tac \"\\<forall>q. q \\<in> set_of t \\<longrightarrow> q \\<in> set (levellista ! var q)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>nb \\<le> length levellista;\n        \\<forall>k<length levellista.\n           \\<forall>p\\<in>set (levellista ! k).\n              p \\<in> set_of t \\<and> var p = k;\n        xa < nb; x \\<in> set (levellista ! xa)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of t", "apply (erule_tac x=xa in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>nb \\<le> length levellista; xa < nb;\n        x \\<in> set (levellista ! xa);\n        xa < length levellista \\<longrightarrow>\n        (\\<forall>p\\<in>set (levellista ! xa).\n            p \\<in> set_of t \\<and> var p = xa)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of t", "apply (erule impE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>nb \\<le> length levellista; xa < nb;\n        x \\<in> set (levellista ! xa)\\<rbrakk>\n       \\<Longrightarrow> xa < length levellista\n 2. \\<And>x xa.\n       \\<lbrakk>nb \\<le> length levellista; xa < nb;\n        x \\<in> set (levellista ! xa);\n        \\<forall>p\\<in>set (levellista ! xa).\n           p \\<in> set_of t \\<and> var p = xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of t", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>nb \\<le> length levellista; xa < nb;\n        x \\<in> set (levellista ! xa);\n        \\<forall>p\\<in>set (levellista ! xa).\n           p \\<in> set_of t \\<and> var p = xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of t", "apply (erule_tac x=x in ballE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>nb \\<le> length levellista; xa < nb;\n        x \\<in> set (levellista ! xa);\n        x \\<in> set_of t \\<and> var x = xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of t\n 2. \\<And>x xa.\n       \\<lbrakk>nb \\<le> length levellista; xa < nb;\n        x \\<in> set (levellista ! xa);\n        x \\<notin> set (levellista ! xa)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set_of t", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma restrict_root_Node: \n  \"\\<lbrakk>t \\<in> Dags (repc `Nodes (Suc nb) levellista) (repc \\<propto> low) (repc \\<propto> high); t \\<notin>  Dags (repc `Nodes nb levellista) (repc \\<propto> low) (repc \\<propto> high); \n  ordered t var; \\<forall> no \\<in> Nodes (Suc nb) levellista. var (repc no) <= var no \\<and> repc (repc no) = repc no; wf_ll pret levellista var; nb < length levellista;repc `Nodes (Suc nb) levellista \\<subseteq> Nodes (Suc nb) levellista\\<rbrakk>\n  \\<Longrightarrow> \\<exists> q. Dag (repc q) (repc \\<propto> low) (repc \\<propto> high) t \\<and> q \\<in> set (levellista ! nb)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t \\<in> Dags (repc ` Nodes (Suc nb) levellista)\n                      (repc \\<propto> low) (repc \\<propto> high);\n     t \\<notin> Dags (repc ` Nodes nb levellista) (repc \\<propto> low)\n                 (repc \\<propto> high);\n     ordered t var;\n     \\<forall>no\\<in>Nodes (Suc nb) levellista.\n        var (repc no) \\<le> var no \\<and> repc (repc no) = repc no;\n     wf_ll pret levellista var; nb < length levellista;\n     repc ` Nodes (Suc nb) levellista\n     \\<subseteq> Nodes (Suc nb) levellista\\<rbrakk>\n    \\<Longrightarrow> \\<exists>q.\n                         Dag (repc q) (repc \\<propto> low)\n                          (repc \\<propto> high) t \\<and>\n                         q \\<in> set (levellista ! nb)", "proof (elim Dags.cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ta p.\n       \\<lbrakk>t \\<notin> Dags (repc ` Nodes nb levellista)\n                            (repc \\<propto> low) (repc \\<propto> high);\n        ordered t var;\n        \\<forall>no\\<in>Nodes (Suc nb) levellista.\n           var (repc no) \\<le> var no \\<and> repc (repc no) = repc no;\n        wf_ll pret levellista var; nb < length levellista;\n        repc ` Nodes (Suc nb) levellista\n        \\<subseteq> Nodes (Suc nb) levellista;\n        t = ta; set_of ta \\<subseteq> repc ` Nodes (Suc nb) levellista;\n        Dag p (repc \\<propto> low) (repc \\<propto> high) ta;\n        ta \\<noteq> Tip\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            Dag (repc q) (repc \\<propto> low)\n                             (repc \\<propto> high) t \\<and>\n                            q \\<in> set (levellista ! nb)", "fix p and ta :: \"dag\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ta p.\n       \\<lbrakk>t \\<notin> Dags (repc ` Nodes nb levellista)\n                            (repc \\<propto> low) (repc \\<propto> high);\n        ordered t var;\n        \\<forall>no\\<in>Nodes (Suc nb) levellista.\n           var (repc no) \\<le> var no \\<and> repc (repc no) = repc no;\n        wf_ll pret levellista var; nb < length levellista;\n        repc ` Nodes (Suc nb) levellista\n        \\<subseteq> Nodes (Suc nb) levellista;\n        t = ta; set_of ta \\<subseteq> repc ` Nodes (Suc nb) levellista;\n        Dag p (repc \\<propto> low) (repc \\<propto> high) ta;\n        ta \\<noteq> Tip\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            Dag (repc q) (repc \\<propto> low)\n                             (repc \\<propto> high) t \\<and>\n                            q \\<in> set (levellista ! nb)", "assume t_notin_DagsNodesnb: \"t \\<notin> Dags (repc ` Nodes nb levellista) (repc \\<propto> low) (repc \\<propto> high)\""], ["proof (state)\nthis:\n  t \\<notin> Dags (repc ` Nodes nb levellista) (repc \\<propto> low)\n              (repc \\<propto> high)\n\ngoal (1 subgoal):\n 1. \\<And>ta p.\n       \\<lbrakk>t \\<notin> Dags (repc ` Nodes nb levellista)\n                            (repc \\<propto> low) (repc \\<propto> high);\n        ordered t var;\n        \\<forall>no\\<in>Nodes (Suc nb) levellista.\n           var (repc no) \\<le> var no \\<and> repc (repc no) = repc no;\n        wf_ll pret levellista var; nb < length levellista;\n        repc ` Nodes (Suc nb) levellista\n        \\<subseteq> Nodes (Suc nb) levellista;\n        t = ta; set_of ta \\<subseteq> repc ` Nodes (Suc nb) levellista;\n        Dag p (repc \\<propto> low) (repc \\<propto> high) ta;\n        ta \\<noteq> Tip\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            Dag (repc q) (repc \\<propto> low)\n                             (repc \\<propto> high) t \\<and>\n                            q \\<in> set (levellista ! nb)", "assume t_ta: \"t = ta\""], ["proof (state)\nthis:\n  t = ta\n\ngoal (1 subgoal):\n 1. \\<And>ta p.\n       \\<lbrakk>t \\<notin> Dags (repc ` Nodes nb levellista)\n                            (repc \\<propto> low) (repc \\<propto> high);\n        ordered t var;\n        \\<forall>no\\<in>Nodes (Suc nb) levellista.\n           var (repc no) \\<le> var no \\<and> repc (repc no) = repc no;\n        wf_ll pret levellista var; nb < length levellista;\n        repc ` Nodes (Suc nb) levellista\n        \\<subseteq> Nodes (Suc nb) levellista;\n        t = ta; set_of ta \\<subseteq> repc ` Nodes (Suc nb) levellista;\n        Dag p (repc \\<propto> low) (repc \\<propto> high) ta;\n        ta \\<noteq> Tip\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            Dag (repc q) (repc \\<propto> low)\n                             (repc \\<propto> high) t \\<and>\n                            q \\<in> set (levellista ! nb)", "assume ta_in_repc_NodesSucnb: \"set_of ta \\<subseteq> repc ` Nodes (Suc nb) levellista\""], ["proof (state)\nthis:\n  set_of ta \\<subseteq> repc ` Nodes (Suc nb) levellista\n\ngoal (1 subgoal):\n 1. \\<And>ta p.\n       \\<lbrakk>t \\<notin> Dags (repc ` Nodes nb levellista)\n                            (repc \\<propto> low) (repc \\<propto> high);\n        ordered t var;\n        \\<forall>no\\<in>Nodes (Suc nb) levellista.\n           var (repc no) \\<le> var no \\<and> repc (repc no) = repc no;\n        wf_ll pret levellista var; nb < length levellista;\n        repc ` Nodes (Suc nb) levellista\n        \\<subseteq> Nodes (Suc nb) levellista;\n        t = ta; set_of ta \\<subseteq> repc ` Nodes (Suc nb) levellista;\n        Dag p (repc \\<propto> low) (repc \\<propto> high) ta;\n        ta \\<noteq> Tip\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            Dag (repc q) (repc \\<propto> low)\n                             (repc \\<propto> high) t \\<and>\n                            q \\<in> set (levellista ! nb)", "assume ta_dag: \"Dag p (repc \\<propto> low) (repc \\<propto> high) ta\""], ["proof (state)\nthis:\n  Dag p (repc \\<propto> low) (repc \\<propto> high) ta\n\ngoal (1 subgoal):\n 1. \\<And>ta p.\n       \\<lbrakk>t \\<notin> Dags (repc ` Nodes nb levellista)\n                            (repc \\<propto> low) (repc \\<propto> high);\n        ordered t var;\n        \\<forall>no\\<in>Nodes (Suc nb) levellista.\n           var (repc no) \\<le> var no \\<and> repc (repc no) = repc no;\n        wf_ll pret levellista var; nb < length levellista;\n        repc ` Nodes (Suc nb) levellista\n        \\<subseteq> Nodes (Suc nb) levellista;\n        t = ta; set_of ta \\<subseteq> repc ` Nodes (Suc nb) levellista;\n        Dag p (repc \\<propto> low) (repc \\<propto> high) ta;\n        ta \\<noteq> Tip\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            Dag (repc q) (repc \\<propto> low)\n                             (repc \\<propto> high) t \\<and>\n                            q \\<in> set (levellista ! nb)", "assume ta_nTip: \"ta \\<noteq> Tip\""], ["proof (state)\nthis:\n  ta \\<noteq> Tip\n\ngoal (1 subgoal):\n 1. \\<And>ta p.\n       \\<lbrakk>t \\<notin> Dags (repc ` Nodes nb levellista)\n                            (repc \\<propto> low) (repc \\<propto> high);\n        ordered t var;\n        \\<forall>no\\<in>Nodes (Suc nb) levellista.\n           var (repc no) \\<le> var no \\<and> repc (repc no) = repc no;\n        wf_ll pret levellista var; nb < length levellista;\n        repc ` Nodes (Suc nb) levellista\n        \\<subseteq> Nodes (Suc nb) levellista;\n        t = ta; set_of ta \\<subseteq> repc ` Nodes (Suc nb) levellista;\n        Dag p (repc \\<propto> low) (repc \\<propto> high) ta;\n        ta \\<noteq> Tip\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            Dag (repc q) (repc \\<propto> low)\n                             (repc \\<propto> high) t \\<and>\n                            q \\<in> set (levellista ! nb)", "assume ord_t: \"ordered t var\""], ["proof (state)\nthis:\n  ordered t var\n\ngoal (1 subgoal):\n 1. \\<And>ta p.\n       \\<lbrakk>t \\<notin> Dags (repc ` Nodes nb levellista)\n                            (repc \\<propto> low) (repc \\<propto> high);\n        ordered t var;\n        \\<forall>no\\<in>Nodes (Suc nb) levellista.\n           var (repc no) \\<le> var no \\<and> repc (repc no) = repc no;\n        wf_ll pret levellista var; nb < length levellista;\n        repc ` Nodes (Suc nb) levellista\n        \\<subseteq> Nodes (Suc nb) levellista;\n        t = ta; set_of ta \\<subseteq> repc ` Nodes (Suc nb) levellista;\n        Dag p (repc \\<propto> low) (repc \\<propto> high) ta;\n        ta \\<noteq> Tip\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            Dag (repc q) (repc \\<propto> low)\n                             (repc \\<propto> high) t \\<and>\n                            q \\<in> set (levellista ! nb)", "assume varrep_prop: \"\\<forall> no \\<in> Nodes (Suc nb) levellista. var (repc no) <= var no \\<and> repc (repc no) = repc no\""], ["proof (state)\nthis:\n  \\<forall>no\\<in>Nodes (Suc nb) levellista.\n     var (repc no) \\<le> var no \\<and> repc (repc no) = repc no\n\ngoal (1 subgoal):\n 1. \\<And>ta p.\n       \\<lbrakk>t \\<notin> Dags (repc ` Nodes nb levellista)\n                            (repc \\<propto> low) (repc \\<propto> high);\n        ordered t var;\n        \\<forall>no\\<in>Nodes (Suc nb) levellista.\n           var (repc no) \\<le> var no \\<and> repc (repc no) = repc no;\n        wf_ll pret levellista var; nb < length levellista;\n        repc ` Nodes (Suc nb) levellista\n        \\<subseteq> Nodes (Suc nb) levellista;\n        t = ta; set_of ta \\<subseteq> repc ` Nodes (Suc nb) levellista;\n        Dag p (repc \\<propto> low) (repc \\<propto> high) ta;\n        ta \\<noteq> Tip\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            Dag (repc q) (repc \\<propto> low)\n                             (repc \\<propto> high) t \\<and>\n                            q \\<in> set (levellista ! nb)", "assume wf_lla: \"wf_ll pret levellista var\""], ["proof (state)\nthis:\n  wf_ll pret levellista var\n\ngoal (1 subgoal):\n 1. \\<And>ta p.\n       \\<lbrakk>t \\<notin> Dags (repc ` Nodes nb levellista)\n                            (repc \\<propto> low) (repc \\<propto> high);\n        ordered t var;\n        \\<forall>no\\<in>Nodes (Suc nb) levellista.\n           var (repc no) \\<le> var no \\<and> repc (repc no) = repc no;\n        wf_ll pret levellista var; nb < length levellista;\n        repc ` Nodes (Suc nb) levellista\n        \\<subseteq> Nodes (Suc nb) levellista;\n        t = ta; set_of ta \\<subseteq> repc ` Nodes (Suc nb) levellista;\n        Dag p (repc \\<propto> low) (repc \\<propto> high) ta;\n        ta \\<noteq> Tip\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            Dag (repc q) (repc \\<propto> low)\n                             (repc \\<propto> high) t \\<and>\n                            q \\<in> set (levellista ! nb)", "assume nbslla: \"nb < length levellista\""], ["proof (state)\nthis:\n  nb < length levellista\n\ngoal (1 subgoal):\n 1. \\<And>ta p.\n       \\<lbrakk>t \\<notin> Dags (repc ` Nodes nb levellista)\n                            (repc \\<propto> low) (repc \\<propto> high);\n        ordered t var;\n        \\<forall>no\\<in>Nodes (Suc nb) levellista.\n           var (repc no) \\<le> var no \\<and> repc (repc no) = repc no;\n        wf_ll pret levellista var; nb < length levellista;\n        repc ` Nodes (Suc nb) levellista\n        \\<subseteq> Nodes (Suc nb) levellista;\n        t = ta; set_of ta \\<subseteq> repc ` Nodes (Suc nb) levellista;\n        Dag p (repc \\<propto> low) (repc \\<propto> high) ta;\n        ta \\<noteq> Tip\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            Dag (repc q) (repc \\<propto> low)\n                             (repc \\<propto> high) t \\<and>\n                            q \\<in> set (levellista ! nb)", "assume repcNodes_in_Nodes: \"repc `Nodes (Suc nb) levellista \\<subseteq> Nodes (Suc nb) levellista\""], ["proof (state)\nthis:\n  repc ` Nodes (Suc nb) levellista \\<subseteq> Nodes (Suc nb) levellista\n\ngoal (1 subgoal):\n 1. \\<And>ta p.\n       \\<lbrakk>t \\<notin> Dags (repc ` Nodes nb levellista)\n                            (repc \\<propto> low) (repc \\<propto> high);\n        ordered t var;\n        \\<forall>no\\<in>Nodes (Suc nb) levellista.\n           var (repc no) \\<le> var no \\<and> repc (repc no) = repc no;\n        wf_ll pret levellista var; nb < length levellista;\n        repc ` Nodes (Suc nb) levellista\n        \\<subseteq> Nodes (Suc nb) levellista;\n        t = ta; set_of ta \\<subseteq> repc ` Nodes (Suc nb) levellista;\n        Dag p (repc \\<propto> low) (repc \\<propto> high) ta;\n        ta \\<noteq> Tip\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            Dag (repc q) (repc \\<propto> low)\n                             (repc \\<propto> high) t \\<and>\n                            q \\<in> set (levellista ! nb)", "from ta_nTip ta_dag"], ["proof (chain)\npicking this:\n  ta \\<noteq> Tip\n  Dag p (repc \\<propto> low) (repc \\<propto> high) ta", "have p_nNull: \"p\\<noteq> Null\""], ["proof (prove)\nusing this:\n  ta \\<noteq> Tip\n  Dag p (repc \\<propto> low) (repc \\<propto> high) ta\n\ngoal (1 subgoal):\n 1. p \\<noteq> Null", "by auto"], ["proof (state)\nthis:\n  p \\<noteq> Null\n\ngoal (1 subgoal):\n 1. \\<And>ta p.\n       \\<lbrakk>t \\<notin> Dags (repc ` Nodes nb levellista)\n                            (repc \\<propto> low) (repc \\<propto> high);\n        ordered t var;\n        \\<forall>no\\<in>Nodes (Suc nb) levellista.\n           var (repc no) \\<le> var no \\<and> repc (repc no) = repc no;\n        wf_ll pret levellista var; nb < length levellista;\n        repc ` Nodes (Suc nb) levellista\n        \\<subseteq> Nodes (Suc nb) levellista;\n        t = ta; set_of ta \\<subseteq> repc ` Nodes (Suc nb) levellista;\n        Dag p (repc \\<propto> low) (repc \\<propto> high) ta;\n        ta \\<noteq> Tip\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            Dag (repc q) (repc \\<propto> low)\n                             (repc \\<propto> high) t \\<and>\n                            q \\<in> set (levellista ! nb)", "with ta_nTip ta_dag"], ["proof (chain)\npicking this:\n  ta \\<noteq> Tip\n  Dag p (repc \\<propto> low) (repc \\<propto> high) ta\n  p \\<noteq> Null", "obtain lt rt where ta_Node: \" ta = Node lt p rt\""], ["proof (prove)\nusing this:\n  ta \\<noteq> Tip\n  Dag p (repc \\<propto> low) (repc \\<propto> high) ta\n  p \\<noteq> Null\n\ngoal (1 subgoal):\n 1. (\\<And>lt rt.\n        ta = Node lt p rt \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ta = Node lt p rt\n\ngoal (1 subgoal):\n 1. \\<And>ta p.\n       \\<lbrakk>t \\<notin> Dags (repc ` Nodes nb levellista)\n                            (repc \\<propto> low) (repc \\<propto> high);\n        ordered t var;\n        \\<forall>no\\<in>Nodes (Suc nb) levellista.\n           var (repc no) \\<le> var no \\<and> repc (repc no) = repc no;\n        wf_ll pret levellista var; nb < length levellista;\n        repc ` Nodes (Suc nb) levellista\n        \\<subseteq> Nodes (Suc nb) levellista;\n        t = ta; set_of ta \\<subseteq> repc ` Nodes (Suc nb) levellista;\n        Dag p (repc \\<propto> low) (repc \\<propto> high) ta;\n        ta \\<noteq> Tip\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            Dag (repc q) (repc \\<propto> low)\n                             (repc \\<propto> high) t \\<and>\n                            q \\<in> set (levellista ! nb)", "with ta_nTip ta_dag"], ["proof (chain)\npicking this:\n  ta \\<noteq> Tip\n  Dag p (repc \\<propto> low) (repc \\<propto> high) ta\n  ta = Node lt p rt", "have p_in_ta: \"p \\<in> set_of ta\""], ["proof (prove)\nusing this:\n  ta \\<noteq> Tip\n  Dag p (repc \\<propto> low) (repc \\<propto> high) ta\n  ta = Node lt p rt\n\ngoal (1 subgoal):\n 1. p \\<in> set_of ta", "by auto"], ["proof (state)\nthis:\n  p \\<in> set_of ta\n\ngoal (1 subgoal):\n 1. \\<And>ta p.\n       \\<lbrakk>t \\<notin> Dags (repc ` Nodes nb levellista)\n                            (repc \\<propto> low) (repc \\<propto> high);\n        ordered t var;\n        \\<forall>no\\<in>Nodes (Suc nb) levellista.\n           var (repc no) \\<le> var no \\<and> repc (repc no) = repc no;\n        wf_ll pret levellista var; nb < length levellista;\n        repc ` Nodes (Suc nb) levellista\n        \\<subseteq> Nodes (Suc nb) levellista;\n        t = ta; set_of ta \\<subseteq> repc ` Nodes (Suc nb) levellista;\n        Dag p (repc \\<propto> low) (repc \\<propto> high) ta;\n        ta \\<noteq> Tip\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            Dag (repc q) (repc \\<propto> low)\n                             (repc \\<propto> high) t \\<and>\n                            q \\<in> set (levellista ! nb)", "with ta_in_repc_NodesSucnb"], ["proof (chain)\npicking this:\n  set_of ta \\<subseteq> repc ` Nodes (Suc nb) levellista\n  p \\<in> set_of ta", "have p_in_repcNodes_Sucnb: \"p \\<in> repc `Nodes (Suc nb) levellista\""], ["proof (prove)\nusing this:\n  set_of ta \\<subseteq> repc ` Nodes (Suc nb) levellista\n  p \\<in> set_of ta\n\ngoal (1 subgoal):\n 1. p \\<in> repc ` Nodes (Suc nb) levellista", "by auto"], ["proof (state)\nthis:\n  p \\<in> repc ` Nodes (Suc nb) levellista\n\ngoal (1 subgoal):\n 1. \\<And>ta p.\n       \\<lbrakk>t \\<notin> Dags (repc ` Nodes nb levellista)\n                            (repc \\<propto> low) (repc \\<propto> high);\n        ordered t var;\n        \\<forall>no\\<in>Nodes (Suc nb) levellista.\n           var (repc no) \\<le> var no \\<and> repc (repc no) = repc no;\n        wf_ll pret levellista var; nb < length levellista;\n        repc ` Nodes (Suc nb) levellista\n        \\<subseteq> Nodes (Suc nb) levellista;\n        t = ta; set_of ta \\<subseteq> repc ` Nodes (Suc nb) levellista;\n        Dag p (repc \\<propto> low) (repc \\<propto> high) ta;\n        ta \\<noteq> Tip\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            Dag (repc q) (repc \\<propto> low)\n                             (repc \\<propto> high) t \\<and>\n                            q \\<in> set (levellista ! nb)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>q.\n       Dag (repc q) (repc \\<propto> low) (repc \\<propto> high) t \\<and>\n       q \\<in> set (levellista ! nb)", "proof (cases \"p \\<in> repc `(set (levellista ! nb))\")"], ["proof (state)\ngoal (2 subgoals):\n 1. p \\<in> repc ` set (levellista ! nb) \\<Longrightarrow>\n    \\<exists>q.\n       Dag (repc q) (repc \\<propto> low) (repc \\<propto> high) t \\<and>\n       q \\<in> set (levellista ! nb)\n 2. p \\<notin> repc ` set (levellista ! nb) \\<Longrightarrow>\n    \\<exists>q.\n       Dag (repc q) (repc \\<propto> low) (repc \\<propto> high) t \\<and>\n       q \\<in> set (levellista ! nb)", "case True"], ["proof (state)\nthis:\n  p \\<in> repc ` set (levellista ! nb)\n\ngoal (2 subgoals):\n 1. p \\<in> repc ` set (levellista ! nb) \\<Longrightarrow>\n    \\<exists>q.\n       Dag (repc q) (repc \\<propto> low) (repc \\<propto> high) t \\<and>\n       q \\<in> set (levellista ! nb)\n 2. p \\<notin> repc ` set (levellista ! nb) \\<Longrightarrow>\n    \\<exists>q.\n       Dag (repc q) (repc \\<propto> low) (repc \\<propto> high) t \\<and>\n       q \\<in> set (levellista ! nb)", "then"], ["proof (chain)\npicking this:\n  p \\<in> repc ` set (levellista ! nb)", "obtain q where \n        p_repca: \"p=repc q\" and\n        a_in_llanb: \"q \\<in> set (levellista ! nb)\""], ["proof (prove)\nusing this:\n  p \\<in> repc ` set (levellista ! nb)\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>p = repc q; q \\<in> set (levellista ! nb)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p = repc q\n  q \\<in> set (levellista ! nb)\n\ngoal (2 subgoals):\n 1. p \\<in> repc ` set (levellista ! nb) \\<Longrightarrow>\n    \\<exists>q.\n       Dag (repc q) (repc \\<propto> low) (repc \\<propto> high) t \\<and>\n       q \\<in> set (levellista ! nb)\n 2. p \\<notin> repc ` set (levellista ! nb) \\<Longrightarrow>\n    \\<exists>q.\n       Dag (repc q) (repc \\<propto> low) (repc \\<propto> high) t \\<and>\n       q \\<in> set (levellista ! nb)", "with ta_dag t_ta"], ["proof (chain)\npicking this:\n  Dag p (repc \\<propto> low) (repc \\<propto> high) ta\n  t = ta\n  p = repc q\n  q \\<in> set (levellista ! nb)", "show ?thesis"], ["proof (prove)\nusing this:\n  Dag p (repc \\<propto> low) (repc \\<propto> high) ta\n  t = ta\n  p = repc q\n  q \\<in> set (levellista ! nb)\n\ngoal (1 subgoal):\n 1. \\<exists>q.\n       Dag (repc q) (repc \\<propto> low) (repc \\<propto> high) t \\<and>\n       q \\<in> set (levellista ! nb)", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag p (repc \\<propto> low) (repc \\<propto> high) ta; t = ta;\n     p = repc q; q \\<in> set (levellista ! nb)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>q.\n                         Dag (repc q) (repc \\<propto> low)\n                          (repc \\<propto> high) t \\<and>\n                         q \\<in> set (levellista ! nb)", "apply (rule_tac x=q in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag p (repc \\<propto> low) (repc \\<propto> high) ta; t = ta;\n     p = repc q; q \\<in> set (levellista ! nb)\\<rbrakk>\n    \\<Longrightarrow> Dag (repc q) (repc \\<propto> low)\n                       (repc \\<propto> high) t \\<and>\n                      q \\<in> set (levellista ! nb)", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>q.\n     Dag (repc q) (repc \\<propto> low) (repc \\<propto> high) t \\<and>\n     q \\<in> set (levellista ! nb)\n\ngoal (1 subgoal):\n 1. p \\<notin> repc ` set (levellista ! nb) \\<Longrightarrow>\n    \\<exists>q.\n       Dag (repc q) (repc \\<propto> low) (repc \\<propto> high) t \\<and>\n       q \\<in> set (levellista ! nb)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<notin> repc ` set (levellista ! nb) \\<Longrightarrow>\n    \\<exists>q.\n       Dag (repc q) (repc \\<propto> low) (repc \\<propto> high) t \\<and>\n       q \\<in> set (levellista ! nb)", "assume p_notin_repc_llanb: \"p \\<notin> repc ` set (levellista ! nb)\""], ["proof (state)\nthis:\n  p \\<notin> repc ` set (levellista ! nb)\n\ngoal (1 subgoal):\n 1. p \\<notin> repc ` set (levellista ! nb) \\<Longrightarrow>\n    \\<exists>q.\n       Dag (repc q) (repc \\<propto> low) (repc \\<propto> high) t \\<and>\n       q \\<in> set (levellista ! nb)", "with p_in_repcNodes_Sucnb"], ["proof (chain)\npicking this:\n  p \\<in> repc ` Nodes (Suc nb) levellista\n  p \\<notin> repc ` set (levellista ! nb)", "have p_in_repc_Nodesnb: \"p \\<in> repc `Nodes nb levellista\""], ["proof (prove)\nusing this:\n  p \\<in> repc ` Nodes (Suc nb) levellista\n  p \\<notin> repc ` set (levellista ! nb)\n\ngoal (1 subgoal):\n 1. p \\<in> repc ` Nodes nb levellista", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>p \\<in> repc ` Nodes (Suc nb) levellista;\n     p \\<notin> repc ` set (levellista ! nb)\\<rbrakk>\n    \\<Longrightarrow> p \\<in> repc ` Nodes nb levellista", "apply (erule imageE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>p \\<notin> repc ` set (levellista ! nb); p = repc x;\n        x \\<in> Nodes (Suc nb) levellista\\<rbrakk>\n       \\<Longrightarrow> p \\<in> repc ` Nodes nb levellista", "apply rule"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>p \\<notin> repc ` set (levellista ! nb); p = repc x;\n        x \\<in> Nodes (Suc nb) levellista\\<rbrakk>\n       \\<Longrightarrow> p = repc (?x4 x)\n 2. \\<And>x.\n       \\<lbrakk>p \\<notin> repc ` set (levellista ! nb); p = repc x;\n        x \\<in> Nodes (Suc nb) levellista\\<rbrakk>\n       \\<Longrightarrow> ?x4 x \\<in> Nodes nb levellista", "apply (simp add: Nodes_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>p \\<notin> repc ` set (levellista ! nb); p = repc x;\n        x \\<in> Nodes (Suc nb) levellista\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Nodes nb levellista", "apply (simp add: Nodes_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>repc x \\<notin> repc ` set (levellista ! nb); p = repc x;\n        \\<exists>xa<Suc nb. x \\<in> set (levellista ! xa)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa<nb. x \\<in> set (levellista ! xa)", "apply (erule exE conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>repc x \\<notin> repc ` set (levellista ! nb); p = repc x;\n        xa < Suc nb \\<and> x \\<in> set (levellista ! xa)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa<nb. x \\<in> set (levellista ! xa)", "apply (case_tac \"xa=nb\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>repc x \\<notin> repc ` set (levellista ! nb); p = repc x;\n        xa < Suc nb \\<and> x \\<in> set (levellista ! xa); xa = nb\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa<nb. x \\<in> set (levellista ! xa)\n 2. \\<And>x xa.\n       \\<lbrakk>repc x \\<notin> repc ` set (levellista ! nb); p = repc x;\n        xa < Suc nb \\<and> x \\<in> set (levellista ! xa);\n        xa \\<noteq> nb\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa<nb. x \\<in> set (levellista ! xa)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>repc x \\<notin> repc ` set (levellista ! nb); p = repc x;\n        xa < Suc nb \\<and> x \\<in> set (levellista ! xa);\n        xa \\<noteq> nb\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa<nb. x \\<in> set (levellista ! xa)", "apply (rule_tac x=xa in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>repc x \\<notin> repc ` set (levellista ! nb); p = repc x;\n        xa < Suc nb \\<and> x \\<in> set (levellista ! xa);\n        xa \\<noteq> nb\\<rbrakk>\n       \\<Longrightarrow> xa < nb \\<and> x \\<in> set (levellista ! xa)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  p \\<in> repc ` Nodes nb levellista\n\ngoal (1 subgoal):\n 1. p \\<notin> repc ` set (levellista ! nb) \\<Longrightarrow>\n    \\<exists>q.\n       Dag (repc q) (repc \\<propto> low) (repc \\<propto> high) t \\<and>\n       q \\<in> set (levellista ! nb)", "have \"t \\<in> Dags (repc `Nodes nb levellista) (repc \\<propto> low) (repc \\<propto> high)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> Dags (repc ` Nodes nb levellista) (repc \\<propto> low)\n             (repc \\<propto> high)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. t \\<in> Dags (repc ` Nodes nb levellista) (repc \\<propto> low)\n             (repc \\<propto> high)", "have \"set_of t \\<subseteq> repc `Nodes nb levellista\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of t \\<subseteq> repc ` Nodes nb levellista", "proof (rule)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set_of t \\<Longrightarrow> x \\<in> repc ` Nodes nb levellista", "fix x :: ref"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set_of t \\<Longrightarrow> x \\<in> repc ` Nodes nb levellista", "assume x_in_t: \"x \\<in> set_of t\""], ["proof (state)\nthis:\n  x \\<in> set_of t\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set_of t \\<Longrightarrow> x \\<in> repc ` Nodes nb levellista", "with ord_t"], ["proof (chain)\npicking this:\n  ordered t var\n  x \\<in> set_of t", "have \"var x <= var (root t)\""], ["proof (prove)\nusing this:\n  ordered t var\n  x \\<in> set_of t\n\ngoal (1 subgoal):\n 1. var x \\<le> var (root t)", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ordered t var; x \\<in> set_of t\\<rbrakk>\n    \\<Longrightarrow> var x \\<le> var (root t)", "apply (rule ordered_set_of)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>ordered t var; x \\<in> set_of t\\<rbrakk>\n    \\<Longrightarrow> ordered t var\n 2. \\<lbrakk>ordered t var; x \\<in> set_of t\\<rbrakk>\n    \\<Longrightarrow> x \\<in> set_of t", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  var x \\<le> var (root t)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set_of t \\<Longrightarrow> x \\<in> repc ` Nodes nb levellista", "with t_ta ta_Node"], ["proof (chain)\npicking this:\n  t = ta\n  ta = Node lt p rt\n  var x \\<le> var (root t)", "have varx_varp: \"var x <= var p\""], ["proof (prove)\nusing this:\n  t = ta\n  ta = Node lt p rt\n  var x \\<le> var (root t)\n\ngoal (1 subgoal):\n 1. var x \\<le> var p", "by auto"], ["proof (state)\nthis:\n  var x \\<le> var p\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set_of t \\<Longrightarrow> x \\<in> repc ` Nodes nb levellista", "from p_in_repc_Nodesnb"], ["proof (chain)\npicking this:\n  p \\<in> repc ` Nodes nb levellista", "obtain k where ksnb: \"k < nb\" and p_in_repc_llak:  \"p \\<in> repc `(set (levellista ! k))\""], ["proof (prove)\nusing this:\n  p \\<in> repc ` Nodes nb levellista\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k < nb; p \\<in> repc ` set (levellista ! k)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: Nodes_def ImageE)"], ["proof (state)\nthis:\n  k < nb\n  p \\<in> repc ` set (levellista ! k)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set_of t \\<Longrightarrow> x \\<in> repc ` Nodes nb levellista", "then"], ["proof (chain)\npicking this:\n  k < nb\n  p \\<in> repc ` set (levellista ! k)", "obtain q where p_repcq: \"p=repc q\" and q_in_llak: \"q \\<in> set (levellista ! k)\""], ["proof (prove)\nusing this:\n  k < nb\n  p \\<in> repc ` set (levellista ! k)\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>p = repc q; q \\<in> set (levellista ! k)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p = repc q\n  q \\<in> set (levellista ! k)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set_of t \\<Longrightarrow> x \\<in> repc ` Nodes nb levellista", "from q_in_llak wf_lla nbslla ksnb"], ["proof (chain)\npicking this:\n  q \\<in> set (levellista ! k)\n  wf_ll pret levellista var\n  nb < length levellista\n  k < nb", "have varqk: \"var q = k\""], ["proof (prove)\nusing this:\n  q \\<in> set (levellista ! k)\n  wf_ll pret levellista var\n  nb < length levellista\n  k < nb\n\ngoal (1 subgoal):\n 1. var q = k", "by (simp add: wf_ll_def)"], ["proof (state)\nthis:\n  var q = k\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set_of t \\<Longrightarrow> x \\<in> repc ` Nodes nb levellista", "have Nodesnb_in_NodesSucnb: \"Nodes nb levellista \\<subseteq> Nodes (Suc nb) levellista\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Nodes nb levellista \\<subseteq> Nodes (Suc nb) levellista", "by (rule Nodes_subset)"], ["proof (state)\nthis:\n  Nodes nb levellista \\<subseteq> Nodes (Suc nb) levellista\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set_of t \\<Longrightarrow> x \\<in> repc ` Nodes nb levellista", "from q_in_llak ksnb"], ["proof (chain)\npicking this:\n  q \\<in> set (levellista ! k)\n  k < nb", "have \"q \\<in> Nodes nb levellista\""], ["proof (prove)\nusing this:\n  q \\<in> set (levellista ! k)\n  k < nb\n\ngoal (1 subgoal):\n 1. q \\<in> Nodes nb levellista", "by (auto simp add: Nodes_def)"], ["proof (state)\nthis:\n  q \\<in> Nodes nb levellista\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set_of t \\<Longrightarrow> x \\<in> repc ` Nodes nb levellista", "with varrep_prop Nodesnb_in_NodesSucnb"], ["proof (chain)\npicking this:\n  \\<forall>no\\<in>Nodes (Suc nb) levellista.\n     var (repc no) \\<le> var no \\<and> repc (repc no) = repc no\n  Nodes nb levellista \\<subseteq> Nodes (Suc nb) levellista\n  q \\<in> Nodes nb levellista", "have \"var (repc q) <= var q\""], ["proof (prove)\nusing this:\n  \\<forall>no\\<in>Nodes (Suc nb) levellista.\n     var (repc no) \\<le> var no \\<and> repc (repc no) = repc no\n  Nodes nb levellista \\<subseteq> Nodes (Suc nb) levellista\n  q \\<in> Nodes nb levellista\n\ngoal (1 subgoal):\n 1. var (repc q) \\<le> var q", "by auto"], ["proof (state)\nthis:\n  var (repc q) \\<le> var q\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set_of t \\<Longrightarrow> x \\<in> repc ` Nodes nb levellista", "with varqk ksnb p_repcq"], ["proof (chain)\npicking this:\n  var q = k\n  k < nb\n  p = repc q\n  var (repc q) \\<le> var q", "have \"var p < nb\""], ["proof (prove)\nusing this:\n  var q = k\n  k < nb\n  p = repc q\n  var (repc q) \\<le> var q\n\ngoal (1 subgoal):\n 1. var p < nb", "by auto"], ["proof (state)\nthis:\n  var p < nb\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set_of t \\<Longrightarrow> x \\<in> repc ` Nodes nb levellista", "with varx_varp"], ["proof (chain)\npicking this:\n  var x \\<le> var p\n  var p < nb", "have varx_snb: \"var x < nb\""], ["proof (prove)\nusing this:\n  var x \\<le> var p\n  var p < nb\n\ngoal (1 subgoal):\n 1. var x < nb", "by auto"], ["proof (state)\nthis:\n  var x < nb\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set_of t \\<Longrightarrow> x \\<in> repc ` Nodes nb levellista", "from x_in_t t_ta ta_in_repc_NodesSucnb"], ["proof (chain)\npicking this:\n  x \\<in> set_of t\n  t = ta\n  set_of ta \\<subseteq> repc ` Nodes (Suc nb) levellista", "obtain a where \n            x_repca: \"x= repc a\" and\n            a_in_NodesSucnb: \"a \\<in> Nodes (Suc nb) levellista\""], ["proof (prove)\nusing this:\n  x \\<in> set_of t\n  t = ta\n  set_of ta \\<subseteq> repc ` Nodes (Suc nb) levellista\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>x = repc a; a \\<in> Nodes (Suc nb) levellista\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x = repc a\n  a \\<in> Nodes (Suc nb) levellista\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set_of t \\<Longrightarrow> x \\<in> repc ` Nodes nb levellista", "with varrep_prop"], ["proof (chain)\npicking this:\n  \\<forall>no\\<in>Nodes (Suc nb) levellista.\n     var (repc no) \\<le> var no \\<and> repc (repc no) = repc no\n  x = repc a\n  a \\<in> Nodes (Suc nb) levellista", "have rx_x: \"repc x = x\""], ["proof (prove)\nusing this:\n  \\<forall>no\\<in>Nodes (Suc nb) levellista.\n     var (repc no) \\<le> var no \\<and> repc (repc no) = repc no\n  x = repc a\n  a \\<in> Nodes (Suc nb) levellista\n\ngoal (1 subgoal):\n 1. repc x = x", "by auto"], ["proof (state)\nthis:\n  repc x = x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set_of t \\<Longrightarrow> x \\<in> repc ` Nodes nb levellista", "have \"x \\<in> set_of pret\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> set_of pret", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> set_of pret", "from wf_lla nbslla"], ["proof (chain)\npicking this:\n  wf_ll pret levellista var\n  nb < length levellista", "have \"Nodes (Suc nb) levellista \\<subseteq> set_of pret\""], ["proof (prove)\nusing this:\n  wf_ll pret levellista var\n  nb < length levellista\n\ngoal (1 subgoal):\n 1. Nodes (Suc nb) levellista \\<subseteq> set_of pret", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_ll pret levellista var; nb < length levellista\\<rbrakk>\n    \\<Longrightarrow> Nodes (Suc nb) levellista \\<subseteq> set_of pret", "apply (rule Nodes_in_pret)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>wf_ll pret levellista var; nb < length levellista\\<rbrakk>\n    \\<Longrightarrow> wf_ll pret levellista ?var2\n 2. \\<lbrakk>wf_ll pret levellista var; nb < length levellista\\<rbrakk>\n    \\<Longrightarrow> Suc nb \\<le> length levellista", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  Nodes (Suc nb) levellista \\<subseteq> set_of pret\n\ngoal (1 subgoal):\n 1. x \\<in> set_of pret", "with x_in_t t_ta ta_in_repc_NodesSucnb repcNodes_in_Nodes"], ["proof (chain)\npicking this:\n  x \\<in> set_of t\n  t = ta\n  set_of ta \\<subseteq> repc ` Nodes (Suc nb) levellista\n  repc ` Nodes (Suc nb) levellista \\<subseteq> Nodes (Suc nb) levellista\n  Nodes (Suc nb) levellista \\<subseteq> set_of pret", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> set_of t\n  t = ta\n  set_of ta \\<subseteq> repc ` Nodes (Suc nb) levellista\n  repc ` Nodes (Suc nb) levellista \\<subseteq> Nodes (Suc nb) levellista\n  Nodes (Suc nb) levellista \\<subseteq> set_of pret\n\ngoal (1 subgoal):\n 1. x \\<in> set_of pret", "by auto"], ["proof (state)\nthis:\n  x \\<in> set_of pret\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> set_of pret\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set_of t \\<Longrightarrow> x \\<in> repc ` Nodes nb levellista", "with wf_lla"], ["proof (chain)\npicking this:\n  wf_ll pret levellista var\n  x \\<in> set_of pret", "have \"x \\<in> set (levellista ! (var x))\""], ["proof (prove)\nusing this:\n  wf_ll pret levellista var\n  x \\<in> set_of pret\n\ngoal (1 subgoal):\n 1. x \\<in> set (levellista ! var x)", "by (auto simp add: wf_ll_def)"], ["proof (state)\nthis:\n  x \\<in> set (levellista ! var x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set_of t \\<Longrightarrow> x \\<in> repc ` Nodes nb levellista", "with varx_snb"], ["proof (chain)\npicking this:\n  var x < nb\n  x \\<in> set (levellista ! var x)", "have \"x \\<in> Nodes nb levellista\""], ["proof (prove)\nusing this:\n  var x < nb\n  x \\<in> set (levellista ! var x)\n\ngoal (1 subgoal):\n 1. x \\<in> Nodes nb levellista", "by (auto simp add: Nodes_def)"], ["proof (state)\nthis:\n  x \\<in> Nodes nb levellista\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set_of t \\<Longrightarrow> x \\<in> repc ` Nodes nb levellista", "with rx_x"], ["proof (chain)\npicking this:\n  repc x = x\n  x \\<in> Nodes nb levellista", "show \"x \\<in> repc `Nodes nb levellista\""], ["proof (prove)\nusing this:\n  repc x = x\n  x \\<in> Nodes nb levellista\n\ngoal (1 subgoal):\n 1. x \\<in> repc ` Nodes nb levellista", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>repc x = x; x \\<in> Nodes nb levellista\\<rbrakk>\n    \\<Longrightarrow> x \\<in> repc ` Nodes nb levellista", "apply rule"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>repc x = x; x \\<in> Nodes nb levellista\\<rbrakk>\n    \\<Longrightarrow> x = repc ?x2\n 2. \\<lbrakk>repc x = x; x \\<in> Nodes nb levellista\\<rbrakk>\n    \\<Longrightarrow> ?x2 \\<in> Nodes nb levellista", "apply (subgoal_tac \"x=repc x\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>repc x = x; x \\<in> Nodes nb levellista; x = repc x\\<rbrakk>\n    \\<Longrightarrow> x = repc ?x2\n 2. \\<lbrakk>repc x = x; x \\<in> Nodes nb levellista\\<rbrakk>\n    \\<Longrightarrow> x = repc x\n 3. \\<lbrakk>repc x = x; x \\<in> Nodes nb levellista\\<rbrakk>\n    \\<Longrightarrow> ?x2 \\<in> Nodes nb levellista", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  x \\<in> repc ` Nodes nb levellista\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  set_of t \\<subseteq> repc ` Nodes nb levellista\n\ngoal (1 subgoal):\n 1. t \\<in> Dags (repc ` Nodes nb levellista) (repc \\<propto> low)\n             (repc \\<propto> high)", "with ta_nTip ta_dag t_ta"], ["proof (chain)\npicking this:\n  ta \\<noteq> Tip\n  Dag p (repc \\<propto> low) (repc \\<propto> high) ta\n  t = ta\n  set_of t \\<subseteq> repc ` Nodes nb levellista", "show ?thesis"], ["proof (prove)\nusing this:\n  ta \\<noteq> Tip\n  Dag p (repc \\<propto> low) (repc \\<propto> high) ta\n  t = ta\n  set_of t \\<subseteq> repc ` Nodes nb levellista\n\ngoal (1 subgoal):\n 1. t \\<in> Dags (repc ` Nodes nb levellista) (repc \\<propto> low)\n             (repc \\<propto> high)", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ta \\<noteq> Tip;\n     Dag p (repc \\<propto> low) (repc \\<propto> high) ta; t = ta;\n     set_of t \\<subseteq> repc ` Nodes nb levellista\\<rbrakk>\n    \\<Longrightarrow> t \\<in> Dags (repc ` Nodes nb levellista)\n                               (repc \\<propto> low) (repc \\<propto> high)", "apply (rule DagsI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>ta \\<noteq> Tip;\n     Dag p (repc \\<propto> low) (repc \\<propto> high) ta; t = ta;\n     set_of t \\<subseteq> repc ` Nodes nb levellista\\<rbrakk>\n    \\<Longrightarrow> set_of t \\<subseteq> repc ` Nodes nb levellista\n 2. \\<lbrakk>ta \\<noteq> Tip;\n     Dag p (repc \\<propto> low) (repc \\<propto> high) ta; t = ta;\n     set_of t \\<subseteq> repc ` Nodes nb levellista\\<rbrakk>\n    \\<Longrightarrow> Dag ?p4 (repc \\<propto> low) (repc \\<propto> high) t\n 3. \\<lbrakk>ta \\<noteq> Tip;\n     Dag p (repc \\<propto> low) (repc \\<propto> high) ta; t = ta;\n     set_of t \\<subseteq> repc ` Nodes nb levellista\\<rbrakk>\n    \\<Longrightarrow> t \\<noteq> Tip", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  t \\<in> Dags (repc ` Nodes nb levellista) (repc \\<propto> low)\n           (repc \\<propto> high)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  t \\<in> Dags (repc ` Nodes nb levellista) (repc \\<propto> low)\n           (repc \\<propto> high)\n\ngoal (1 subgoal):\n 1. p \\<notin> repc ` set (levellista ! nb) \\<Longrightarrow>\n    \\<exists>q.\n       Dag (repc q) (repc \\<propto> low) (repc \\<propto> high) t \\<and>\n       q \\<in> set (levellista ! nb)", "with t_notin_DagsNodesnb"], ["proof (chain)\npicking this:\n  t \\<notin> Dags (repc ` Nodes nb levellista) (repc \\<propto> low)\n              (repc \\<propto> high)\n  t \\<in> Dags (repc ` Nodes nb levellista) (repc \\<propto> low)\n           (repc \\<propto> high)", "show ?thesis"], ["proof (prove)\nusing this:\n  t \\<notin> Dags (repc ` Nodes nb levellista) (repc \\<propto> low)\n              (repc \\<propto> high)\n  t \\<in> Dags (repc ` Nodes nb levellista) (repc \\<propto> low)\n           (repc \\<propto> high)\n\ngoal (1 subgoal):\n 1. \\<exists>q.\n       Dag (repc q) (repc \\<propto> low) (repc \\<propto> high) t \\<and>\n       q \\<in> set (levellista ! nb)", "by auto"], ["proof (state)\nthis:\n  \\<exists>q.\n     Dag (repc q) (repc \\<propto> low) (repc \\<propto> high) t \\<and>\n     q \\<in> set (levellista ! nb)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>q.\n     Dag (repc q) (repc \\<propto> low) (repc \\<propto> high) t \\<and>\n     q \\<in> set (levellista ! nb)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma same_bdt_var: \"\\<lbrakk>bdt (Node lt1 p1 rt1) var = Some bdt1; bdt (Node lt2 p2 rt2) var = Some bdt1\\<rbrakk>\n  \\<Longrightarrow> var p1 = var p2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>bdt (Node lt1 p1 rt1) var = Some bdt1;\n     bdt (Node lt2 p2 rt2) var = Some bdt1\\<rbrakk>\n    \\<Longrightarrow> var p1 = var p2", "proof (induct bdt1)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>bdt (Node lt1 p1 rt1) var = Some Zero;\n     bdt (Node lt2 p2 rt2) var = Some Zero\\<rbrakk>\n    \\<Longrightarrow> var p1 = var p2\n 2. \\<lbrakk>bdt (Node lt1 p1 rt1) var = Some One;\n     bdt (Node lt2 p2 rt2) var = Some One\\<rbrakk>\n    \\<Longrightarrow> var p1 = var p2\n 3. \\<And>bdt11 x2 bdt12.\n       \\<lbrakk>\\<lbrakk>bdt (Node lt1 p1 rt1) var = Some bdt11;\n                 bdt (Node lt2 p2 rt2) var = Some bdt11\\<rbrakk>\n                \\<Longrightarrow> var p1 = var p2;\n        \\<lbrakk>bdt (Node lt1 p1 rt1) var = Some bdt12;\n         bdt (Node lt2 p2 rt2) var = Some bdt12\\<rbrakk>\n        \\<Longrightarrow> var p1 = var p2;\n        bdt (Node lt1 p1 rt1) var = Some (Bdt_Node bdt11 x2 bdt12);\n        bdt (Node lt2 p2 rt2) var = Some (Bdt_Node bdt11 x2 bdt12)\\<rbrakk>\n       \\<Longrightarrow> var p1 = var p2", "case Zero"], ["proof (state)\nthis:\n  bdt (Node lt1 p1 rt1) var = Some Zero\n  bdt (Node lt2 p2 rt2) var = Some Zero\n\ngoal (3 subgoals):\n 1. \\<lbrakk>bdt (Node lt1 p1 rt1) var = Some Zero;\n     bdt (Node lt2 p2 rt2) var = Some Zero\\<rbrakk>\n    \\<Longrightarrow> var p1 = var p2\n 2. \\<lbrakk>bdt (Node lt1 p1 rt1) var = Some One;\n     bdt (Node lt2 p2 rt2) var = Some One\\<rbrakk>\n    \\<Longrightarrow> var p1 = var p2\n 3. \\<And>bdt11 x2 bdt12.\n       \\<lbrakk>\\<lbrakk>bdt (Node lt1 p1 rt1) var = Some bdt11;\n                 bdt (Node lt2 p2 rt2) var = Some bdt11\\<rbrakk>\n                \\<Longrightarrow> var p1 = var p2;\n        \\<lbrakk>bdt (Node lt1 p1 rt1) var = Some bdt12;\n         bdt (Node lt2 p2 rt2) var = Some bdt12\\<rbrakk>\n        \\<Longrightarrow> var p1 = var p2;\n        bdt (Node lt1 p1 rt1) var = Some (Bdt_Node bdt11 x2 bdt12);\n        bdt (Node lt2 p2 rt2) var = Some (Bdt_Node bdt11 x2 bdt12)\\<rbrakk>\n       \\<Longrightarrow> var p1 = var p2", "then"], ["proof (chain)\npicking this:\n  bdt (Node lt1 p1 rt1) var = Some Zero\n  bdt (Node lt2 p2 rt2) var = Some Zero", "obtain var_p1: \"var p1 = 0\" and var_p2: \"var p2 = 0\""], ["proof (prove)\nusing this:\n  bdt (Node lt1 p1 rt1) var = Some Zero\n  bdt (Node lt2 p2 rt2) var = Some Zero\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>var p1 = 0; var p2 = 0\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by simp"], ["proof (state)\nthis:\n  var p1 = 0\n  var p2 = 0\n\ngoal (3 subgoals):\n 1. \\<lbrakk>bdt (Node lt1 p1 rt1) var = Some Zero;\n     bdt (Node lt2 p2 rt2) var = Some Zero\\<rbrakk>\n    \\<Longrightarrow> var p1 = var p2\n 2. \\<lbrakk>bdt (Node lt1 p1 rt1) var = Some One;\n     bdt (Node lt2 p2 rt2) var = Some One\\<rbrakk>\n    \\<Longrightarrow> var p1 = var p2\n 3. \\<And>bdt11 x2 bdt12.\n       \\<lbrakk>\\<lbrakk>bdt (Node lt1 p1 rt1) var = Some bdt11;\n                 bdt (Node lt2 p2 rt2) var = Some bdt11\\<rbrakk>\n                \\<Longrightarrow> var p1 = var p2;\n        \\<lbrakk>bdt (Node lt1 p1 rt1) var = Some bdt12;\n         bdt (Node lt2 p2 rt2) var = Some bdt12\\<rbrakk>\n        \\<Longrightarrow> var p1 = var p2;\n        bdt (Node lt1 p1 rt1) var = Some (Bdt_Node bdt11 x2 bdt12);\n        bdt (Node lt2 p2 rt2) var = Some (Bdt_Node bdt11 x2 bdt12)\\<rbrakk>\n       \\<Longrightarrow> var p1 = var p2", "then"], ["proof (chain)\npicking this:\n  var p1 = 0\n  var p2 = 0", "show ?case"], ["proof (prove)\nusing this:\n  var p1 = 0\n  var p2 = 0\n\ngoal (1 subgoal):\n 1. var p1 = var p2", "by simp"], ["proof (state)\nthis:\n  var p1 = var p2\n\ngoal (2 subgoals):\n 1. \\<lbrakk>bdt (Node lt1 p1 rt1) var = Some One;\n     bdt (Node lt2 p2 rt2) var = Some One\\<rbrakk>\n    \\<Longrightarrow> var p1 = var p2\n 2. \\<And>bdt11 x2 bdt12.\n       \\<lbrakk>\\<lbrakk>bdt (Node lt1 p1 rt1) var = Some bdt11;\n                 bdt (Node lt2 p2 rt2) var = Some bdt11\\<rbrakk>\n                \\<Longrightarrow> var p1 = var p2;\n        \\<lbrakk>bdt (Node lt1 p1 rt1) var = Some bdt12;\n         bdt (Node lt2 p2 rt2) var = Some bdt12\\<rbrakk>\n        \\<Longrightarrow> var p1 = var p2;\n        bdt (Node lt1 p1 rt1) var = Some (Bdt_Node bdt11 x2 bdt12);\n        bdt (Node lt2 p2 rt2) var = Some (Bdt_Node bdt11 x2 bdt12)\\<rbrakk>\n       \\<Longrightarrow> var p1 = var p2", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>bdt (Node lt1 p1 rt1) var = Some One;\n     bdt (Node lt2 p2 rt2) var = Some One\\<rbrakk>\n    \\<Longrightarrow> var p1 = var p2\n 2. \\<And>bdt11 x2 bdt12.\n       \\<lbrakk>\\<lbrakk>bdt (Node lt1 p1 rt1) var = Some bdt11;\n                 bdt (Node lt2 p2 rt2) var = Some bdt11\\<rbrakk>\n                \\<Longrightarrow> var p1 = var p2;\n        \\<lbrakk>bdt (Node lt1 p1 rt1) var = Some bdt12;\n         bdt (Node lt2 p2 rt2) var = Some bdt12\\<rbrakk>\n        \\<Longrightarrow> var p1 = var p2;\n        bdt (Node lt1 p1 rt1) var = Some (Bdt_Node bdt11 x2 bdt12);\n        bdt (Node lt2 p2 rt2) var = Some (Bdt_Node bdt11 x2 bdt12)\\<rbrakk>\n       \\<Longrightarrow> var p1 = var p2", "case One"], ["proof (state)\nthis:\n  bdt (Node lt1 p1 rt1) var = Some One\n  bdt (Node lt2 p2 rt2) var = Some One\n\ngoal (2 subgoals):\n 1. \\<lbrakk>bdt (Node lt1 p1 rt1) var = Some One;\n     bdt (Node lt2 p2 rt2) var = Some One\\<rbrakk>\n    \\<Longrightarrow> var p1 = var p2\n 2. \\<And>bdt11 x2 bdt12.\n       \\<lbrakk>\\<lbrakk>bdt (Node lt1 p1 rt1) var = Some bdt11;\n                 bdt (Node lt2 p2 rt2) var = Some bdt11\\<rbrakk>\n                \\<Longrightarrow> var p1 = var p2;\n        \\<lbrakk>bdt (Node lt1 p1 rt1) var = Some bdt12;\n         bdt (Node lt2 p2 rt2) var = Some bdt12\\<rbrakk>\n        \\<Longrightarrow> var p1 = var p2;\n        bdt (Node lt1 p1 rt1) var = Some (Bdt_Node bdt11 x2 bdt12);\n        bdt (Node lt2 p2 rt2) var = Some (Bdt_Node bdt11 x2 bdt12)\\<rbrakk>\n       \\<Longrightarrow> var p1 = var p2", "then"], ["proof (chain)\npicking this:\n  bdt (Node lt1 p1 rt1) var = Some One\n  bdt (Node lt2 p2 rt2) var = Some One", "obtain var_p1: \"var p1 = 1\" and var_p2: \"var p2 = 1\""], ["proof (prove)\nusing this:\n  bdt (Node lt1 p1 rt1) var = Some One\n  bdt (Node lt2 p2 rt2) var = Some One\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>var p1 = 1; var p2 = 1\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by simp"], ["proof (state)\nthis:\n  var p1 = 1\n  var p2 = 1\n\ngoal (2 subgoals):\n 1. \\<lbrakk>bdt (Node lt1 p1 rt1) var = Some One;\n     bdt (Node lt2 p2 rt2) var = Some One\\<rbrakk>\n    \\<Longrightarrow> var p1 = var p2\n 2. \\<And>bdt11 x2 bdt12.\n       \\<lbrakk>\\<lbrakk>bdt (Node lt1 p1 rt1) var = Some bdt11;\n                 bdt (Node lt2 p2 rt2) var = Some bdt11\\<rbrakk>\n                \\<Longrightarrow> var p1 = var p2;\n        \\<lbrakk>bdt (Node lt1 p1 rt1) var = Some bdt12;\n         bdt (Node lt2 p2 rt2) var = Some bdt12\\<rbrakk>\n        \\<Longrightarrow> var p1 = var p2;\n        bdt (Node lt1 p1 rt1) var = Some (Bdt_Node bdt11 x2 bdt12);\n        bdt (Node lt2 p2 rt2) var = Some (Bdt_Node bdt11 x2 bdt12)\\<rbrakk>\n       \\<Longrightarrow> var p1 = var p2", "then"], ["proof (chain)\npicking this:\n  var p1 = 1\n  var p2 = 1", "show ?case"], ["proof (prove)\nusing this:\n  var p1 = 1\n  var p2 = 1\n\ngoal (1 subgoal):\n 1. var p1 = var p2", "by simp"], ["proof (state)\nthis:\n  var p1 = var p2\n\ngoal (1 subgoal):\n 1. \\<And>bdt11 x2 bdt12.\n       \\<lbrakk>\\<lbrakk>bdt (Node lt1 p1 rt1) var = Some bdt11;\n                 bdt (Node lt2 p2 rt2) var = Some bdt11\\<rbrakk>\n                \\<Longrightarrow> var p1 = var p2;\n        \\<lbrakk>bdt (Node lt1 p1 rt1) var = Some bdt12;\n         bdt (Node lt2 p2 rt2) var = Some bdt12\\<rbrakk>\n        \\<Longrightarrow> var p1 = var p2;\n        bdt (Node lt1 p1 rt1) var = Some (Bdt_Node bdt11 x2 bdt12);\n        bdt (Node lt2 p2 rt2) var = Some (Bdt_Node bdt11 x2 bdt12)\\<rbrakk>\n       \\<Longrightarrow> var p1 = var p2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>bdt11 x2 bdt12.\n       \\<lbrakk>\\<lbrakk>bdt (Node lt1 p1 rt1) var = Some bdt11;\n                 bdt (Node lt2 p2 rt2) var = Some bdt11\\<rbrakk>\n                \\<Longrightarrow> var p1 = var p2;\n        \\<lbrakk>bdt (Node lt1 p1 rt1) var = Some bdt12;\n         bdt (Node lt2 p2 rt2) var = Some bdt12\\<rbrakk>\n        \\<Longrightarrow> var p1 = var p2;\n        bdt (Node lt1 p1 rt1) var = Some (Bdt_Node bdt11 x2 bdt12);\n        bdt (Node lt2 p2 rt2) var = Some (Bdt_Node bdt11 x2 bdt12)\\<rbrakk>\n       \\<Longrightarrow> var p1 = var p2", "case (Bdt_Node lbdt v rbdt)"], ["proof (state)\nthis:\n  \\<lbrakk>bdt (Node lt1 p1 rt1) var = Some lbdt;\n   bdt (Node lt2 p2 rt2) var = Some lbdt\\<rbrakk>\n  \\<Longrightarrow> var p1 = var p2\n  \\<lbrakk>bdt (Node lt1 p1 rt1) var = Some rbdt;\n   bdt (Node lt2 p2 rt2) var = Some rbdt\\<rbrakk>\n  \\<Longrightarrow> var p1 = var p2\n  bdt (Node lt1 p1 rt1) var = Some (Bdt_Node lbdt v rbdt)\n  bdt (Node lt2 p2 rt2) var = Some (Bdt_Node lbdt v rbdt)\n\ngoal (1 subgoal):\n 1. \\<And>bdt11 x2 bdt12.\n       \\<lbrakk>\\<lbrakk>bdt (Node lt1 p1 rt1) var = Some bdt11;\n                 bdt (Node lt2 p2 rt2) var = Some bdt11\\<rbrakk>\n                \\<Longrightarrow> var p1 = var p2;\n        \\<lbrakk>bdt (Node lt1 p1 rt1) var = Some bdt12;\n         bdt (Node lt2 p2 rt2) var = Some bdt12\\<rbrakk>\n        \\<Longrightarrow> var p1 = var p2;\n        bdt (Node lt1 p1 rt1) var = Some (Bdt_Node bdt11 x2 bdt12);\n        bdt (Node lt2 p2 rt2) var = Some (Bdt_Node bdt11 x2 bdt12)\\<rbrakk>\n       \\<Longrightarrow> var p1 = var p2", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>bdt (Node lt1 p1 rt1) var = Some lbdt;\n   bdt (Node lt2 p2 rt2) var = Some lbdt\\<rbrakk>\n  \\<Longrightarrow> var p1 = var p2\n  \\<lbrakk>bdt (Node lt1 p1 rt1) var = Some rbdt;\n   bdt (Node lt2 p2 rt2) var = Some rbdt\\<rbrakk>\n  \\<Longrightarrow> var p1 = var p2\n  bdt (Node lt1 p1 rt1) var = Some (Bdt_Node lbdt v rbdt)\n  bdt (Node lt2 p2 rt2) var = Some (Bdt_Node lbdt v rbdt)", "obtain var_p1: \"var p1 = v\" and var_p2: \"var p2 = v\""], ["proof (prove)\nusing this:\n  \\<lbrakk>bdt (Node lt1 p1 rt1) var = Some lbdt;\n   bdt (Node lt2 p2 rt2) var = Some lbdt\\<rbrakk>\n  \\<Longrightarrow> var p1 = var p2\n  \\<lbrakk>bdt (Node lt1 p1 rt1) var = Some rbdt;\n   bdt (Node lt2 p2 rt2) var = Some rbdt\\<rbrakk>\n  \\<Longrightarrow> var p1 = var p2\n  bdt (Node lt1 p1 rt1) var = Some (Bdt_Node lbdt v rbdt)\n  bdt (Node lt2 p2 rt2) var = Some (Bdt_Node lbdt v rbdt)\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>var p1 = v; var p2 = v\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by simp"], ["proof (state)\nthis:\n  var p1 = v\n  var p2 = v\n\ngoal (1 subgoal):\n 1. \\<And>bdt11 x2 bdt12.\n       \\<lbrakk>\\<lbrakk>bdt (Node lt1 p1 rt1) var = Some bdt11;\n                 bdt (Node lt2 p2 rt2) var = Some bdt11\\<rbrakk>\n                \\<Longrightarrow> var p1 = var p2;\n        \\<lbrakk>bdt (Node lt1 p1 rt1) var = Some bdt12;\n         bdt (Node lt2 p2 rt2) var = Some bdt12\\<rbrakk>\n        \\<Longrightarrow> var p1 = var p2;\n        bdt (Node lt1 p1 rt1) var = Some (Bdt_Node bdt11 x2 bdt12);\n        bdt (Node lt2 p2 rt2) var = Some (Bdt_Node bdt11 x2 bdt12)\\<rbrakk>\n       \\<Longrightarrow> var p1 = var p2", "then"], ["proof (chain)\npicking this:\n  var p1 = v\n  var p2 = v", "show ?case"], ["proof (prove)\nusing this:\n  var p1 = v\n  var p2 = v\n\ngoal (1 subgoal):\n 1. var p1 = var p2", "by simp"], ["proof (state)\nthis:\n  var p1 = var p2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bdt_Some_Leaf_var_le_1: \n\"\\<lbrakk>Dag p low high t; bdt t var = Some x; isLeaf_pt p low high\\<rbrakk> \n  \\<Longrightarrow> var p <= 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag p low high t; bdt t var = Some x;\n     isLeaf_pt p low high\\<rbrakk>\n    \\<Longrightarrow> var p \\<le> 1", "proof (induct t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>Dag p low high Tip; bdt Tip var = Some x;\n     isLeaf_pt p low high\\<rbrakk>\n    \\<Longrightarrow> var p \\<le> 1\n 2. \\<And>t1 x2 t2.\n       \\<lbrakk>\\<lbrakk>Dag p low high t1; bdt t1 var = Some x;\n                 isLeaf_pt p low high\\<rbrakk>\n                \\<Longrightarrow> var p \\<le> 1;\n        \\<lbrakk>Dag p low high t2; bdt t2 var = Some x;\n         isLeaf_pt p low high\\<rbrakk>\n        \\<Longrightarrow> var p \\<le> 1;\n        Dag p low high (Node t1 x2 t2); bdt (Node t1 x2 t2) var = Some x;\n        isLeaf_pt p low high\\<rbrakk>\n       \\<Longrightarrow> var p \\<le> 1", "case Tip"], ["proof (state)\nthis:\n  Dag p low high Tip\n  bdt Tip var = Some x\n  isLeaf_pt p low high\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Dag p low high Tip; bdt Tip var = Some x;\n     isLeaf_pt p low high\\<rbrakk>\n    \\<Longrightarrow> var p \\<le> 1\n 2. \\<And>t1 x2 t2.\n       \\<lbrakk>\\<lbrakk>Dag p low high t1; bdt t1 var = Some x;\n                 isLeaf_pt p low high\\<rbrakk>\n                \\<Longrightarrow> var p \\<le> 1;\n        \\<lbrakk>Dag p low high t2; bdt t2 var = Some x;\n         isLeaf_pt p low high\\<rbrakk>\n        \\<Longrightarrow> var p \\<le> 1;\n        Dag p low high (Node t1 x2 t2); bdt (Node t1 x2 t2) var = Some x;\n        isLeaf_pt p low high\\<rbrakk>\n       \\<Longrightarrow> var p \\<le> 1", "thus ?case"], ["proof (prove)\nusing this:\n  Dag p low high Tip\n  bdt Tip var = Some x\n  isLeaf_pt p low high\n\ngoal (1 subgoal):\n 1. var p \\<le> 1", "by simp"], ["proof (state)\nthis:\n  var p \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>\\<lbrakk>Dag p low high t1; bdt t1 var = Some x;\n                 isLeaf_pt p low high\\<rbrakk>\n                \\<Longrightarrow> var p \\<le> 1;\n        \\<lbrakk>Dag p low high t2; bdt t2 var = Some x;\n         isLeaf_pt p low high\\<rbrakk>\n        \\<Longrightarrow> var p \\<le> 1;\n        Dag p low high (Node t1 x2 t2); bdt (Node t1 x2 t2) var = Some x;\n        isLeaf_pt p low high\\<rbrakk>\n       \\<Longrightarrow> var p \\<le> 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>\\<lbrakk>Dag p low high t1; bdt t1 var = Some x;\n                 isLeaf_pt p low high\\<rbrakk>\n                \\<Longrightarrow> var p \\<le> 1;\n        \\<lbrakk>Dag p low high t2; bdt t2 var = Some x;\n         isLeaf_pt p low high\\<rbrakk>\n        \\<Longrightarrow> var p \\<le> 1;\n        Dag p low high (Node t1 x2 t2); bdt (Node t1 x2 t2) var = Some x;\n        isLeaf_pt p low high\\<rbrakk>\n       \\<Longrightarrow> var p \\<le> 1", "case (Node lt p rt)"], ["proof (state)\nthis:\n  \\<lbrakk>Dag p low high lt; bdt lt var = Some x;\n   isLeaf_pt p low high\\<rbrakk>\n  \\<Longrightarrow> var p \\<le> 1\n  \\<lbrakk>Dag p low high rt; bdt rt var = Some x;\n   isLeaf_pt p low high\\<rbrakk>\n  \\<Longrightarrow> var p \\<le> 1\n  Dag p low high (Node lt p rt)\n  bdt (Node lt p rt) var = Some x\n  isLeaf_pt p low high\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>\\<lbrakk>Dag p low high t1; bdt t1 var = Some x;\n                 isLeaf_pt p low high\\<rbrakk>\n                \\<Longrightarrow> var p \\<le> 1;\n        \\<lbrakk>Dag p low high t2; bdt t2 var = Some x;\n         isLeaf_pt p low high\\<rbrakk>\n        \\<Longrightarrow> var p \\<le> 1;\n        Dag p low high (Node t1 x2 t2); bdt (Node t1 x2 t2) var = Some x;\n        isLeaf_pt p low high\\<rbrakk>\n       \\<Longrightarrow> var p \\<le> 1", "note tNode=this"], ["proof (state)\nthis:\n  \\<lbrakk>Dag p low high lt; bdt lt var = Some x;\n   isLeaf_pt p low high\\<rbrakk>\n  \\<Longrightarrow> var p \\<le> 1\n  \\<lbrakk>Dag p low high rt; bdt rt var = Some x;\n   isLeaf_pt p low high\\<rbrakk>\n  \\<Longrightarrow> var p \\<le> 1\n  Dag p low high (Node lt p rt)\n  bdt (Node lt p rt) var = Some x\n  isLeaf_pt p low high\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>\\<lbrakk>Dag p low high t1; bdt t1 var = Some x;\n                 isLeaf_pt p low high\\<rbrakk>\n                \\<Longrightarrow> var p \\<le> 1;\n        \\<lbrakk>Dag p low high t2; bdt t2 var = Some x;\n         isLeaf_pt p low high\\<rbrakk>\n        \\<Longrightarrow> var p \\<le> 1;\n        Dag p low high (Node t1 x2 t2); bdt (Node t1 x2 t2) var = Some x;\n        isLeaf_pt p low high\\<rbrakk>\n       \\<Longrightarrow> var p \\<le> 1", "from Node.prems tNode"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt p rt)\n  bdt (Node lt p rt) var = Some x\n  isLeaf_pt p low high\n  \\<lbrakk>Dag p low high lt; bdt lt var = Some x;\n   isLeaf_pt p low high\\<rbrakk>\n  \\<Longrightarrow> var p \\<le> 1\n  \\<lbrakk>Dag p low high rt; bdt rt var = Some x;\n   isLeaf_pt p low high\\<rbrakk>\n  \\<Longrightarrow> var p \\<le> 1\n  Dag p low high (Node lt p rt)\n  bdt (Node lt p rt) var = Some x\n  isLeaf_pt p low high", "show ?case"], ["proof (prove)\nusing this:\n  Dag p low high (Node lt p rt)\n  bdt (Node lt p rt) var = Some x\n  isLeaf_pt p low high\n  \\<lbrakk>Dag p low high lt; bdt lt var = Some x;\n   isLeaf_pt p low high\\<rbrakk>\n  \\<Longrightarrow> var p \\<le> 1\n  \\<lbrakk>Dag p low high rt; bdt rt var = Some x;\n   isLeaf_pt p low high\\<rbrakk>\n  \\<Longrightarrow> var p \\<le> 1\n  Dag p low high (Node lt p rt)\n  bdt (Node lt p rt) var = Some x\n  isLeaf_pt p low high\n\ngoal (1 subgoal):\n 1. var p \\<le> 1", "apply (simp add: isLeaf_pt_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>p = p \\<and>\n             p \\<noteq> Null \\<and> low p = Null \\<and> high p = Null;\n     low p = Null \\<and> high p = Null;\n     p \\<noteq> Null \\<and> lt = Tip \\<and> rt = Tip;\n     (if var p = 0 then Some Zero\n      else if var p = 1 then Some One else None) =\n     Some x\\<rbrakk>\n    \\<Longrightarrow> var p \\<le> Suc 0", "apply (case_tac \"var p = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>p = p \\<and>\n             p \\<noteq> Null \\<and> low p = Null \\<and> high p = Null;\n     low p = Null \\<and> high p = Null;\n     p \\<noteq> Null \\<and> lt = Tip \\<and> rt = Tip;\n     (if var p = 0 then Some Zero\n      else if var p = 1 then Some One else None) =\n     Some x;\n     var p = 0\\<rbrakk>\n    \\<Longrightarrow> var p \\<le> Suc 0\n 2. \\<lbrakk>p = p \\<and>\n             p \\<noteq> Null \\<and> low p = Null \\<and> high p = Null;\n     low p = Null \\<and> high p = Null;\n     p \\<noteq> Null \\<and> lt = Tip \\<and> rt = Tip;\n     (if var p = 0 then Some Zero\n      else if var p = 1 then Some One else None) =\n     Some x;\n     var p \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> var p \\<le> Suc 0", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>p = p \\<and>\n             p \\<noteq> Null \\<and> low p = Null \\<and> high p = Null;\n     low p = Null \\<and> high p = Null;\n     p \\<noteq> Null \\<and> lt = Tip \\<and> rt = Tip;\n     (if var p = 0 then Some Zero\n      else if var p = 1 then Some One else None) =\n     Some x;\n     var p \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> var p \\<le> Suc 0", "apply (case_tac \"var p = Suc 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>p = p \\<and>\n             p \\<noteq> Null \\<and> low p = Null \\<and> high p = Null;\n     low p = Null \\<and> high p = Null;\n     p \\<noteq> Null \\<and> lt = Tip \\<and> rt = Tip;\n     (if var p = 0 then Some Zero\n      else if var p = 1 then Some One else None) =\n     Some x;\n     var p \\<noteq> 0; var p = Suc 0\\<rbrakk>\n    \\<Longrightarrow> var p \\<le> Suc 0\n 2. \\<lbrakk>p = p \\<and>\n             p \\<noteq> Null \\<and> low p = Null \\<and> high p = Null;\n     low p = Null \\<and> high p = Null;\n     p \\<noteq> Null \\<and> lt = Tip \\<and> rt = Tip;\n     (if var p = 0 then Some Zero\n      else if var p = 1 then Some One else None) =\n     Some x;\n     var p \\<noteq> 0; var p \\<noteq> Suc 0\\<rbrakk>\n    \\<Longrightarrow> var p \\<le> Suc 0", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>p = p \\<and>\n             p \\<noteq> Null \\<and> low p = Null \\<and> high p = Null;\n     low p = Null \\<and> high p = Null;\n     p \\<noteq> Null \\<and> lt = Tip \\<and> rt = Tip;\n     (if var p = 0 then Some Zero\n      else if var p = 1 then Some One else None) =\n     Some x;\n     var p \\<noteq> 0; var p \\<noteq> Suc 0\\<rbrakk>\n    \\<Longrightarrow> var p \\<le> Suc 0", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  var p \\<le> 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subnode_dag_cons: \n\"\\<And> p. \\<lbrakk>Dag p low high t; no \\<in> set_of t\\<rbrakk> \\<Longrightarrow> \\<exists> not. Dag no low high not\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>Dag p low high t; no \\<in> set_of t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>not. Dag no low high not", "proof (induct t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>Dag p low high Tip; no \\<in> set_of Tip\\<rbrakk>\n       \\<Longrightarrow> Ex (Dag no low high)\n 2. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>Dag p low high t1; no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> Ex (Dag no low high);\n        \\<And>p.\n           \\<lbrakk>Dag p low high t2; no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> Ex (Dag no low high);\n        Dag p low high (Node t1 x2 t2);\n        no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> Ex (Dag no low high)", "case Tip"], ["proof (state)\nthis:\n  Dag p low high Tip\n  no \\<in> set_of Tip\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>Dag p low high Tip; no \\<in> set_of Tip\\<rbrakk>\n       \\<Longrightarrow> Ex (Dag no low high)\n 2. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>Dag p low high t1; no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> Ex (Dag no low high);\n        \\<And>p.\n           \\<lbrakk>Dag p low high t2; no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> Ex (Dag no low high);\n        Dag p low high (Node t1 x2 t2);\n        no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> Ex (Dag no low high)", "thus ?case"], ["proof (prove)\nusing this:\n  Dag p low high Tip\n  no \\<in> set_of Tip\n\ngoal (1 subgoal):\n 1. \\<exists>a. Dag no low high a", "by simp"], ["proof (state)\nthis:\n  \\<exists>a. Dag no low high a\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>Dag p low high t1; no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> Ex (Dag no low high);\n        \\<And>p.\n           \\<lbrakk>Dag p low high t2; no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> Ex (Dag no low high);\n        Dag p low high (Node t1 x2 t2);\n        no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> Ex (Dag no low high)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>Dag p low high t1; no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> Ex (Dag no low high);\n        \\<And>p.\n           \\<lbrakk>Dag p low high t2; no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> Ex (Dag no low high);\n        Dag p low high (Node t1 x2 t2);\n        no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> Ex (Dag no low high)", "case (Node lt q rt)"], ["proof (state)\nthis:\n  \\<lbrakk>Dag ?p low high lt; no \\<in> set_of lt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a. Dag no low high a\n  \\<lbrakk>Dag ?p low high rt; no \\<in> set_of rt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a. Dag no low high a\n  Dag p low high (Node lt q rt)\n  no \\<in> set_of (Node lt q rt)\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>Dag p low high t1; no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> Ex (Dag no low high);\n        \\<And>p.\n           \\<lbrakk>Dag p low high t2; no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> Ex (Dag no low high);\n        Dag p low high (Node t1 x2 t2);\n        no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> Ex (Dag no low high)", "with Node.prems"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt q rt)\n  no \\<in> set_of (Node lt q rt)\n  \\<lbrakk>Dag ?p low high lt; no \\<in> set_of lt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a. Dag no low high a\n  \\<lbrakk>Dag ?p low high rt; no \\<in> set_of rt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a. Dag no low high a\n  Dag p low high (Node lt q rt)\n  no \\<in> set_of (Node lt q rt)", "have q_p: \"p = q\""], ["proof (prove)\nusing this:\n  Dag p low high (Node lt q rt)\n  no \\<in> set_of (Node lt q rt)\n  \\<lbrakk>Dag ?p low high lt; no \\<in> set_of lt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a. Dag no low high a\n  \\<lbrakk>Dag ?p low high rt; no \\<in> set_of rt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a. Dag no low high a\n  Dag p low high (Node lt q rt)\n  no \\<in> set_of (Node lt q rt)\n\ngoal (1 subgoal):\n 1. p = q", "by simp"], ["proof (state)\nthis:\n  p = q\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>Dag p low high t1; no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> Ex (Dag no low high);\n        \\<And>p.\n           \\<lbrakk>Dag p low high t2; no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> Ex (Dag no low high);\n        Dag p low high (Node t1 x2 t2);\n        no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> Ex (Dag no low high)", "from Node.prems"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt q rt)\n  no \\<in> set_of (Node lt q rt)", "have lt_dag: \"Dag (low p) low high lt\""], ["proof (prove)\nusing this:\n  Dag p low high (Node lt q rt)\n  no \\<in> set_of (Node lt q rt)\n\ngoal (1 subgoal):\n 1. Dag (low p) low high lt", "by auto"], ["proof (state)\nthis:\n  Dag (low p) low high lt\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>Dag p low high t1; no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> Ex (Dag no low high);\n        \\<And>p.\n           \\<lbrakk>Dag p low high t2; no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> Ex (Dag no low high);\n        Dag p low high (Node t1 x2 t2);\n        no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> Ex (Dag no low high)", "from Node.prems"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt q rt)\n  no \\<in> set_of (Node lt q rt)", "have rt_dag: \"Dag (high p) low high rt\""], ["proof (prove)\nusing this:\n  Dag p low high (Node lt q rt)\n  no \\<in> set_of (Node lt q rt)\n\ngoal (1 subgoal):\n 1. Dag (high p) low high rt", "by auto"], ["proof (state)\nthis:\n  Dag (high p) low high rt\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 p.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>Dag p low high t1; no \\<in> set_of t1\\<rbrakk>\n                   \\<Longrightarrow> Ex (Dag no low high);\n        \\<And>p.\n           \\<lbrakk>Dag p low high t2; no \\<in> set_of t2\\<rbrakk>\n           \\<Longrightarrow> Ex (Dag no low high);\n        Dag p low high (Node t1 x2 t2);\n        no \\<in> set_of (Node t1 x2 t2)\\<rbrakk>\n       \\<Longrightarrow> Ex (Dag no low high)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a. Dag no low high a", "proof (cases \"no \\<in> set_of lt\")"], ["proof (state)\ngoal (2 subgoals):\n 1. no \\<in> set_of lt \\<Longrightarrow> \\<exists>a. Dag no low high a\n 2. no \\<notin> set_of lt \\<Longrightarrow> \\<exists>a. Dag no low high a", "case True"], ["proof (state)\nthis:\n  no \\<in> set_of lt\n\ngoal (2 subgoals):\n 1. no \\<in> set_of lt \\<Longrightarrow> \\<exists>a. Dag no low high a\n 2. no \\<notin> set_of lt \\<Longrightarrow> \\<exists>a. Dag no low high a", "with Node.hyps lt_dag"], ["proof (chain)\npicking this:\n  \\<lbrakk>Dag ?p low high lt; no \\<in> set_of lt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a. Dag no low high a\n  \\<lbrakk>Dag ?p low high rt; no \\<in> set_of rt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a. Dag no low high a\n  Dag (low p) low high lt\n  no \\<in> set_of lt", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>Dag ?p low high lt; no \\<in> set_of lt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a. Dag no low high a\n  \\<lbrakk>Dag ?p low high rt; no \\<in> set_of rt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a. Dag no low high a\n  Dag (low p) low high lt\n  no \\<in> set_of lt\n\ngoal (1 subgoal):\n 1. \\<exists>a. Dag no low high a", "by simp"], ["proof (state)\nthis:\n  \\<exists>a. Dag no low high a\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lt \\<Longrightarrow> \\<exists>a. Dag no low high a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. no \\<notin> set_of lt \\<Longrightarrow> \\<exists>a. Dag no low high a", "assume no_notin_lt: \"no \\<notin> set_of lt\""], ["proof (state)\nthis:\n  no \\<notin> set_of lt\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lt \\<Longrightarrow> \\<exists>a. Dag no low high a", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a. Dag no low high a", "proof (cases \"no=p\")"], ["proof (state)\ngoal (2 subgoals):\n 1. no = p \\<Longrightarrow> \\<exists>a. Dag no low high a\n 2. no \\<noteq> p \\<Longrightarrow> \\<exists>a. Dag no low high a", "case True"], ["proof (state)\nthis:\n  no = p\n\ngoal (2 subgoals):\n 1. no = p \\<Longrightarrow> \\<exists>a. Dag no low high a\n 2. no \\<noteq> p \\<Longrightarrow> \\<exists>a. Dag no low high a", "with Node.prems q_p"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt q rt)\n  no \\<in> set_of (Node lt q rt)\n  p = q\n  no = p", "show ?thesis"], ["proof (prove)\nusing this:\n  Dag p low high (Node lt q rt)\n  no \\<in> set_of (Node lt q rt)\n  p = q\n  no = p\n\ngoal (1 subgoal):\n 1. \\<exists>a. Dag no low high a", "by auto"], ["proof (state)\nthis:\n  \\<exists>a. Dag no low high a\n\ngoal (1 subgoal):\n 1. no \\<noteq> p \\<Longrightarrow> \\<exists>a. Dag no low high a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. no \\<noteq> p \\<Longrightarrow> \\<exists>a. Dag no low high a", "assume no_neq_p: \"no \\<noteq> p\""], ["proof (state)\nthis:\n  no \\<noteq> p\n\ngoal (1 subgoal):\n 1. no \\<noteq> p \\<Longrightarrow> \\<exists>a. Dag no low high a", "with Node.prems no_notin_lt"], ["proof (chain)\npicking this:\n  Dag p low high (Node lt q rt)\n  no \\<in> set_of (Node lt q rt)\n  no \\<notin> set_of lt\n  no \\<noteq> p", "have no_in_rt: \"no \\<in> set_of rt\""], ["proof (prove)\nusing this:\n  Dag p low high (Node lt q rt)\n  no \\<in> set_of (Node lt q rt)\n  no \\<notin> set_of lt\n  no \\<noteq> p\n\ngoal (1 subgoal):\n 1. no \\<in> set_of rt", "by simp"], ["proof (state)\nthis:\n  no \\<in> set_of rt\n\ngoal (1 subgoal):\n 1. no \\<noteq> p \\<Longrightarrow> \\<exists>a. Dag no low high a", "with rt_dag Node.hyps"], ["proof (chain)\npicking this:\n  Dag (high p) low high rt\n  \\<lbrakk>Dag ?p low high lt; no \\<in> set_of lt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a. Dag no low high a\n  \\<lbrakk>Dag ?p low high rt; no \\<in> set_of rt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a. Dag no low high a\n  no \\<in> set_of rt", "show ?thesis"], ["proof (prove)\nusing this:\n  Dag (high p) low high rt\n  \\<lbrakk>Dag ?p low high lt; no \\<in> set_of lt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a. Dag no low high a\n  \\<lbrakk>Dag ?p low high rt; no \\<in> set_of rt\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a. Dag no low high a\n  no \\<in> set_of rt\n\ngoal (1 subgoal):\n 1. \\<exists>a. Dag no low high a", "by auto"], ["proof (state)\nthis:\n  \\<exists>a. Dag no low high a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>a. Dag no low high a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>a. Dag no low high a\n\ngoal:\nNo subgoals!", "qed"], ["", "(*theorems for the proof of share_reduce_rep_list*)"], ["", "lemma nodes_in_taken_in_takeSucn: \"no \\<in> set (take n nodeslist) \\<Longrightarrow> no \\<in> set (take (Suc n) nodeslist) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. no \\<in> set (take n nodeslist) \\<Longrightarrow>\n    no \\<in> set (take (Suc n) nodeslist)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. no \\<in> set (take n nodeslist) \\<Longrightarrow>\n    no \\<in> set (take (Suc n) nodeslist)", "assume no_in_taken: \"no \\<in> set (take n nodeslist)\""], ["proof (state)\nthis:\n  no \\<in> set (take n nodeslist)\n\ngoal (1 subgoal):\n 1. no \\<in> set (take n nodeslist) \\<Longrightarrow>\n    no \\<in> set (take (Suc n) nodeslist)", "have \"set (take n nodeslist) \\<subseteq> set (take (Suc n) nodeslist)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (take n nodeslist) \\<subseteq> set (take (Suc n) nodeslist)", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. set (take n nodeslist) \\<subseteq> set (take (Suc n) nodeslist)", "apply (rule set_take_subset_set_take)"], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> Suc n", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  set (take n nodeslist) \\<subseteq> set (take (Suc n) nodeslist)\n\ngoal (1 subgoal):\n 1. no \\<in> set (take n nodeslist) \\<Longrightarrow>\n    no \\<in> set (take (Suc n) nodeslist)", "with no_in_taken"], ["proof (chain)\npicking this:\n  no \\<in> set (take n nodeslist)\n  set (take n nodeslist) \\<subseteq> set (take (Suc n) nodeslist)", "show ?thesis"], ["proof (prove)\nusing this:\n  no \\<in> set (take n nodeslist)\n  set (take n nodeslist) \\<subseteq> set (take (Suc n) nodeslist)\n\ngoal (1 subgoal):\n 1. no \\<in> set (take (Suc n) nodeslist)", "by blast"], ["proof (state)\nthis:\n  no \\<in> set (take (Suc n) nodeslist)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ind_in_higher_take: \"\\<And>n k. \\<lbrakk>n < k;  n < length xs\\<rbrakk> \n  \\<Longrightarrow> xs ! n \\<in> set (take k xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n k.\n       \\<lbrakk>n < k; n < length xs\\<rbrakk>\n       \\<Longrightarrow> xs ! n \\<in> set (take k xs)", "apply (induct xs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n k.\n       \\<lbrakk>n < k; n < length []\\<rbrakk>\n       \\<Longrightarrow> [] ! n \\<in> set (take k [])\n 2. \\<And>a xs n k.\n       \\<lbrakk>\\<And>n k.\n                   \\<lbrakk>n < k; n < length xs\\<rbrakk>\n                   \\<Longrightarrow> xs ! n \\<in> set (take k xs);\n        n < k; n < length (a # xs)\\<rbrakk>\n       \\<Longrightarrow> (a # xs) ! n \\<in> set (take k (a # xs))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a xs n k.\n       \\<lbrakk>\\<And>n k.\n                   \\<lbrakk>n < k; n < length xs\\<rbrakk>\n                   \\<Longrightarrow> xs ! n \\<in> set (take k xs);\n        n < k; n < length (a # xs)\\<rbrakk>\n       \\<Longrightarrow> (a # xs) ! n \\<in> set (take k (a # xs))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a xs n k.\n       \\<lbrakk>\\<And>n k.\n                   \\<lbrakk>n < k; n < length xs\\<rbrakk>\n                   \\<Longrightarrow> xs ! n \\<in> set (take k xs);\n        n < k; n < Suc (length xs)\\<rbrakk>\n       \\<Longrightarrow> (a # xs) ! n \\<in> set (take k (a # xs))", "apply (case_tac n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a xs n k.\n       \\<lbrakk>\\<And>n k.\n                   \\<lbrakk>n < k; n < length xs\\<rbrakk>\n                   \\<Longrightarrow> xs ! n \\<in> set (take k xs);\n        n < k; n < Suc (length xs); n = 0\\<rbrakk>\n       \\<Longrightarrow> (a # xs) ! n \\<in> set (take k (a # xs))\n 2. \\<And>a xs n k nat.\n       \\<lbrakk>\\<And>n k.\n                   \\<lbrakk>n < k; n < length xs\\<rbrakk>\n                   \\<Longrightarrow> xs ! n \\<in> set (take k xs);\n        n < k; n < Suc (length xs); n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> (a # xs) ! n \\<in> set (take k (a # xs))", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a xs n k.\n       \\<lbrakk>\\<And>n k.\n                   \\<lbrakk>n < k; n < length xs\\<rbrakk>\n                   \\<Longrightarrow> xs ! n \\<in> set (take k xs);\n        0 < k; n = 0\\<rbrakk>\n       \\<Longrightarrow> a \\<in> set (take k (a # xs))\n 2. \\<And>a xs n k nat.\n       \\<lbrakk>\\<And>n k.\n                   \\<lbrakk>n < k; n < length xs\\<rbrakk>\n                   \\<Longrightarrow> xs ! n \\<in> set (take k xs);\n        n < k; n < Suc (length xs); n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> (a # xs) ! n \\<in> set (take k (a # xs))", "apply (case_tac k)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a xs n k.\n       \\<lbrakk>\\<And>n k.\n                   \\<lbrakk>n < k; n < length xs\\<rbrakk>\n                   \\<Longrightarrow> xs ! n \\<in> set (take k xs);\n        0 < k; n = 0; k = 0\\<rbrakk>\n       \\<Longrightarrow> a \\<in> set (take k (a # xs))\n 2. \\<And>a xs n k nat.\n       \\<lbrakk>\\<And>n k.\n                   \\<lbrakk>n < k; n < length xs\\<rbrakk>\n                   \\<Longrightarrow> xs ! n \\<in> set (take k xs);\n        0 < k; n = 0; k = Suc nat\\<rbrakk>\n       \\<Longrightarrow> a \\<in> set (take k (a # xs))\n 3. \\<And>a xs n k nat.\n       \\<lbrakk>\\<And>n k.\n                   \\<lbrakk>n < k; n < length xs\\<rbrakk>\n                   \\<Longrightarrow> xs ! n \\<in> set (take k xs);\n        n < k; n < Suc (length xs); n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> (a # xs) ! n \\<in> set (take k (a # xs))", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a xs n k nat.\n       \\<lbrakk>\\<And>n k.\n                   \\<lbrakk>n < k; n < length xs\\<rbrakk>\n                   \\<Longrightarrow> xs ! n \\<in> set (take k xs);\n        0 < k; n = 0; k = Suc nat\\<rbrakk>\n       \\<Longrightarrow> a \\<in> set (take k (a # xs))\n 2. \\<And>a xs n k nat.\n       \\<lbrakk>\\<And>n k.\n                   \\<lbrakk>n < k; n < length xs\\<rbrakk>\n                   \\<Longrightarrow> xs ! n \\<in> set (take k xs);\n        n < k; n < Suc (length xs); n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> (a # xs) ! n \\<in> set (take k (a # xs))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a xs n k nat.\n       \\<lbrakk>\\<And>n k.\n                   \\<lbrakk>n < k; n < length xs\\<rbrakk>\n                   \\<Longrightarrow> xs ! n \\<in> set (take k xs);\n        n < k; n < Suc (length xs); n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> (a # xs) ! n \\<in> set (take k (a # xs))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a xs n k nat.\n       \\<lbrakk>\\<And>n k.\n                   \\<lbrakk>n < k; n < length xs\\<rbrakk>\n                   \\<Longrightarrow> xs ! n \\<in> set (take k xs);\n        Suc nat < k; nat < length xs; n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> xs ! nat \\<in> set (take k (a # xs))", "apply (case_tac k)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a xs n k nat.\n       \\<lbrakk>\\<And>n k.\n                   \\<lbrakk>n < k; n < length xs\\<rbrakk>\n                   \\<Longrightarrow> xs ! n \\<in> set (take k xs);\n        Suc nat < k; nat < length xs; n = Suc nat; k = 0\\<rbrakk>\n       \\<Longrightarrow> xs ! nat \\<in> set (take k (a # xs))\n 2. \\<And>a xs n k nat nata.\n       \\<lbrakk>\\<And>n k.\n                   \\<lbrakk>n < k; n < length xs\\<rbrakk>\n                   \\<Longrightarrow> xs ! n \\<in> set (take k xs);\n        Suc nat < k; nat < length xs; n = Suc nat; k = Suc nata\\<rbrakk>\n       \\<Longrightarrow> xs ! nat \\<in> set (take k (a # xs))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a xs n k nat nata.\n       \\<lbrakk>\\<And>n k.\n                   \\<lbrakk>n < k; n < length xs\\<rbrakk>\n                   \\<Longrightarrow> xs ! n \\<in> set (take k xs);\n        Suc nat < k; nat < length xs; n = Suc nat; k = Suc nata\\<rbrakk>\n       \\<Longrightarrow> xs ! nat \\<in> set (take k (a # xs))", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma take_length_set: \"\\<And>n. n=length xs \\<Longrightarrow> set (take n xs) = set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n. n = length xs \\<Longrightarrow> set (take n xs) = set xs", "apply (induct xs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n. n = length [] \\<Longrightarrow> set (take n []) = set []\n 2. \\<And>a xs n.\n       \\<lbrakk>\\<And>n.\n                   n = length xs \\<Longrightarrow> set (take n xs) = set xs;\n        n = length (a # xs)\\<rbrakk>\n       \\<Longrightarrow> set (take n (a # xs)) = set (a # xs)", "apply (auto simp add: take_Cons split: nat.splits)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma repNodes_eq_ext_rep: \"\\<lbrakk>low no \\<noteq> nodeslist! n; high no \\<noteq> nodeslist ! n; \n  low sn \\<noteq> nodeslist ! n; high sn \\<noteq> nodeslist ! n\\<rbrakk>\n  \\<Longrightarrow> repNodes_eq sn no low high repa = repNodes_eq sn no low high (repa(nodeslist ! n := repa (low (nodeslist ! n))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>low no \\<noteq> nodeslist ! n; high no \\<noteq> nodeslist ! n;\n     low sn \\<noteq> nodeslist ! n; high sn \\<noteq> nodeslist ! n\\<rbrakk>\n    \\<Longrightarrow> repNodes_eq sn no low high repa =\n                      repNodes_eq sn no low high\n                       (repa(nodeslist ! n := repa (low (nodeslist ! n))))", "by (simp add: repNodes_eq_def null_comp_def)"], ["", "lemma filter_not_empty: \"\\<lbrakk>x \\<in> set xs; P x\\<rbrakk> \\<Longrightarrow> filter P xs \\<noteq> []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> set xs; P x\\<rbrakk>\n    \\<Longrightarrow> filter P xs \\<noteq> []", "by (induct xs) auto"], ["", "lemma \"x \\<in> set (filter P xs) \\<Longrightarrow> P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> set (filter P xs) \\<Longrightarrow> P x", "by auto"], ["", "lemma hd_filter_in_list: \"filter P xs \\<noteq> [] \\<Longrightarrow> hd (filter P xs) \\<in> set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filter P xs \\<noteq> [] \\<Longrightarrow> hd (filter P xs) \\<in> set xs", "by (induct xs) auto"], ["", "lemma hd_filter_in_filter: \"filter P xs \\<noteq> [] \\<Longrightarrow> hd (filter P xs) \\<in> set (filter P xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filter P xs \\<noteq> [] \\<Longrightarrow>\n    hd (filter P xs) \\<in> set (filter P xs)", "by (induct xs) auto"], ["", "lemma hd_filter_prop: \n  assumes non_empty: \"filter P xs \\<noteq> []\" \n  shows \"P (hd (filter P xs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (hd (filter P xs))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P (hd (filter P xs))", "from non_empty"], ["proof (chain)\npicking this:\n  filter P xs \\<noteq> []", "have \"hd (filter P xs) \\<in> set (filter P xs)\""], ["proof (prove)\nusing this:\n  filter P xs \\<noteq> []\n\ngoal (1 subgoal):\n 1. hd (filter P xs) \\<in> set (filter P xs)", "by (rule hd_filter_in_filter)"], ["proof (state)\nthis:\n  hd (filter P xs) \\<in> set (filter P xs)\n\ngoal (1 subgoal):\n 1. P (hd (filter P xs))", "thus ?thesis"], ["proof (prove)\nusing this:\n  hd (filter P xs) \\<in> set (filter P xs)\n\ngoal (1 subgoal):\n 1. P (hd (filter P xs))", "by auto"], ["proof (state)\nthis:\n  P (hd (filter P xs))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma index_elem: \"x \\<in> set xs \\<Longrightarrow> \\<exists>i<length xs. x = xs ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> set xs \\<Longrightarrow> \\<exists>i<length xs. x = xs ! i", "apply (induct xs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. x \\<in> set [] \\<Longrightarrow> \\<exists>i<length []. x = [] ! i\n 2. \\<And>a xs.\n       \\<lbrakk>x \\<in> set xs \\<Longrightarrow>\n                \\<exists>i<length xs. x = xs ! i;\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i<length (a # xs). x = (a # xs) ! i", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>x \\<in> set xs \\<Longrightarrow>\n                \\<exists>i<length xs. x = xs ! i;\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i<length (a # xs). x = (a # xs) ! i", "apply (case_tac \"x=a\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a xs.\n       \\<lbrakk>x \\<in> set xs \\<Longrightarrow>\n                \\<exists>i<length xs. x = xs ! i;\n        x \\<in> set (a # xs); x = a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i<length (a # xs). x = (a # xs) ! i\n 2. \\<And>a xs.\n       \\<lbrakk>x \\<in> set xs \\<Longrightarrow>\n                \\<exists>i<length xs. x = xs ! i;\n        x \\<in> set (a # xs); x \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i<length (a # xs). x = (a # xs) ! i", "apply  auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma filter_hd_P_rep_indep:     \n\"\\<lbrakk>\\<forall>x. P x x; \\<forall>a b. P x a \\<longrightarrow> P a b \\<longrightarrow> P x b; filter (P x) xs \\<noteq> []\\<rbrakk>  \\<Longrightarrow> \n  hd (filter (P (hd (filter (P x) xs))) xs) =  hd (filter (P x) xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x. P x x;\n     \\<forall>a b. P x a \\<longrightarrow> P a b \\<longrightarrow> P x b;\n     filter (P x) xs \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> hd (filter (P (hd (filter (P x) xs))) xs) =\n                      hd (filter (P x) xs)", "apply (induct xs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>x. P x x;\n     \\<forall>a b. P x a \\<longrightarrow> P a b \\<longrightarrow> P x b;\n     filter (P x) [] \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> hd (filter (P (hd (filter (P x) []))) []) =\n                      hd (filter (P x) [])\n 2. \\<And>a xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>x. P x x;\n                 \\<forall>a b.\n                    P x a \\<longrightarrow> P a b \\<longrightarrow> P x b;\n                 filter (P x) xs \\<noteq> []\\<rbrakk>\n                \\<Longrightarrow> hd (filter (P (hd (filter (P x) xs)))\n xs) =\n                                  hd (filter (P x) xs);\n        \\<forall>x. P x x;\n        \\<forall>a b. P x a \\<longrightarrow> P a b \\<longrightarrow> P x b;\n        filter (P x) (a # xs) \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> hd (filter (P (hd (filter (P x) (a # xs))))\n                              (a # xs)) =\n                         hd (filter (P x) (a # xs))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>x. P x x;\n                 \\<forall>a b.\n                    P x a \\<longrightarrow> P a b \\<longrightarrow> P x b;\n                 filter (P x) xs \\<noteq> []\\<rbrakk>\n                \\<Longrightarrow> hd (filter (P (hd (filter (P x) xs)))\n xs) =\n                                  hd (filter (P x) xs);\n        \\<forall>x. P x x;\n        \\<forall>a b. P x a \\<longrightarrow> P a b \\<longrightarrow> P x b;\n        filter (P x) (a # xs) \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> hd (filter (P (hd (filter (P x) (a # xs))))\n                              (a # xs)) =\n                         hd (filter (P x) (a # xs))", "apply (case_tac \"P x a\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>x. P x x;\n                 \\<forall>a b.\n                    P x a \\<longrightarrow> P a b \\<longrightarrow> P x b;\n                 filter (P x) xs \\<noteq> []\\<rbrakk>\n                \\<Longrightarrow> hd (filter (P (hd (filter (P x) xs)))\n xs) =\n                                  hd (filter (P x) xs);\n        \\<forall>x. P x x;\n        \\<forall>a b. P x a \\<longrightarrow> P a b \\<longrightarrow> P x b;\n        filter (P x) (a # xs) \\<noteq> []; P x a\\<rbrakk>\n       \\<Longrightarrow> hd (filter (P (hd (filter (P x) (a # xs))))\n                              (a # xs)) =\n                         hd (filter (P x) (a # xs))\n 2. \\<And>a xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>x. P x x;\n                 \\<forall>a b.\n                    P x a \\<longrightarrow> P a b \\<longrightarrow> P x b;\n                 filter (P x) xs \\<noteq> []\\<rbrakk>\n                \\<Longrightarrow> hd (filter (P (hd (filter (P x) xs)))\n xs) =\n                                  hd (filter (P x) xs);\n        \\<forall>x. P x x;\n        \\<forall>a b. P x a \\<longrightarrow> P a b \\<longrightarrow> P x b;\n        filter (P x) (a # xs) \\<noteq> []; \\<not> P x a\\<rbrakk>\n       \\<Longrightarrow> hd (filter (P (hd (filter (P x) (a # xs))))\n                              (a # xs)) =\n                         hd (filter (P x) (a # xs))", "using [[simp_depth_limit=2]]"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>x. P x x;\n                 \\<forall>a b.\n                    P x a \\<longrightarrow> P a b \\<longrightarrow> P x b;\n                 filter (P x) xs \\<noteq> []\\<rbrakk>\n                \\<Longrightarrow> hd (filter (P (hd (filter (P x) xs)))\n xs) =\n                                  hd (filter (P x) xs);\n        \\<forall>x. P x x;\n        \\<forall>a b. P x a \\<longrightarrow> P a b \\<longrightarrow> P x b;\n        filter (P x) (a # xs) \\<noteq> []; P x a\\<rbrakk>\n       \\<Longrightarrow> hd (filter (P (hd (filter (P x) (a # xs))))\n                              (a # xs)) =\n                         hd (filter (P x) (a # xs))\n 2. \\<And>a xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>x. P x x;\n                 \\<forall>a b.\n                    P x a \\<longrightarrow> P a b \\<longrightarrow> P x b;\n                 filter (P x) xs \\<noteq> []\\<rbrakk>\n                \\<Longrightarrow> hd (filter (P (hd (filter (P x) xs)))\n xs) =\n                                  hd (filter (P x) xs);\n        \\<forall>x. P x x;\n        \\<forall>a b. P x a \\<longrightarrow> P a b \\<longrightarrow> P x b;\n        filter (P x) (a # xs) \\<noteq> []; \\<not> P x a\\<rbrakk>\n       \\<Longrightarrow> hd (filter (P (hd (filter (P x) (a # xs))))\n                              (a # xs)) =\n                         hd (filter (P x) (a # xs))", "apply  (simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>x. P x x;\n                 \\<forall>a b.\n                    P x a \\<longrightarrow> P a b \\<longrightarrow> P x b;\n                 filter (P x) xs \\<noteq> []\\<rbrakk>\n                \\<Longrightarrow> hd (filter (P (hd (filter (P x) xs)))\n xs) =\n                                  hd (filter (P x) xs);\n        \\<forall>x. P x x;\n        \\<forall>a b. P x a \\<longrightarrow> P a b \\<longrightarrow> P x b;\n        filter (P x) (a # xs) \\<noteq> []; \\<not> P x a\\<rbrakk>\n       \\<Longrightarrow> hd (filter (P (hd (filter (P x) (a # xs))))\n                              (a # xs)) =\n                         hd (filter (P x) (a # xs))", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<forall>a.\n                   P x a \\<longrightarrow>\n                   (\\<forall>b.\n                       P a b \\<longrightarrow> P x b) \\<Longrightarrow>\n                hd (filter (P (hd (filter (P x) xs))) xs) =\n                hd (filter (P x) xs);\n        \\<forall>x. P x x;\n        \\<forall>a.\n           P x a \\<longrightarrow>\n           (\\<forall>b. P a b \\<longrightarrow> P x b);\n        filter (P x) xs \\<noteq> []; \\<not> P x a;\n        P (hd (filter (P x) xs)) a\\<rbrakk>\n       \\<Longrightarrow> a = hd (filter (P x) xs)", "apply (fastforce dest: hd_filter_prop)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma take_Suc_not_last:\n\"\\<And>n. \\<lbrakk>x \\<in> set (take (Suc n) xs); x\\<noteq>xs!n; n < length xs\\<rbrakk> \\<Longrightarrow> x \\<in> set (take n xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>x \\<in> set (take (Suc n) xs); x \\<noteq> xs ! n;\n        n < length xs\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set (take n xs)", "apply (induct xs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>x \\<in> set (take (Suc n) []); x \\<noteq> [] ! n;\n        n < length []\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set (take n [])\n 2. \\<And>a xs n.\n       \\<lbrakk>\\<And>n.\n                   \\<lbrakk>x \\<in> set (take (Suc n) xs);\n                    x \\<noteq> xs ! n; n < length xs\\<rbrakk>\n                   \\<Longrightarrow> x \\<in> set (take n xs);\n        x \\<in> set (take (Suc n) (a # xs)); x \\<noteq> (a # xs) ! n;\n        n < length (a # xs)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set (take n (a # xs))", "apply  simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a xs n.\n       \\<lbrakk>\\<And>n.\n                   \\<lbrakk>x \\<in> set (take (Suc n) xs);\n                    x \\<noteq> xs ! n; n < length xs\\<rbrakk>\n                   \\<Longrightarrow> x \\<in> set (take n xs);\n        x \\<in> set (take (Suc n) (a # xs)); x \\<noteq> (a # xs) ! n;\n        n < length (a # xs)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set (take n (a # xs))", "apply (case_tac n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a xs n.\n       \\<lbrakk>\\<And>n.\n                   \\<lbrakk>x \\<in> set (take (Suc n) xs);\n                    x \\<noteq> xs ! n; n < length xs\\<rbrakk>\n                   \\<Longrightarrow> x \\<in> set (take n xs);\n        x \\<in> set (take (Suc n) (a # xs)); x \\<noteq> (a # xs) ! n;\n        n < length (a # xs); n = 0\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set (take n (a # xs))\n 2. \\<And>a xs n nat.\n       \\<lbrakk>\\<And>n.\n                   \\<lbrakk>x \\<in> set (take (Suc n) xs);\n                    x \\<noteq> xs ! n; n < length xs\\<rbrakk>\n                   \\<Longrightarrow> x \\<in> set (take n xs);\n        x \\<in> set (take (Suc n) (a # xs)); x \\<noteq> (a # xs) ! n;\n        n < length (a # xs); n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set (take n (a # xs))", "apply  simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a xs n nat.\n       \\<lbrakk>\\<And>n.\n                   \\<lbrakk>x \\<in> set (take (Suc n) xs);\n                    x \\<noteq> xs ! n; n < length xs\\<rbrakk>\n                   \\<Longrightarrow> x \\<in> set (take n xs);\n        x \\<in> set (take (Suc n) (a # xs)); x \\<noteq> (a # xs) ! n;\n        n < length (a # xs); n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set (take n (a # xs))", "using [[simp_depth_limit=2]]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a xs n nat.\n       \\<lbrakk>\\<And>n.\n                   \\<lbrakk>x \\<in> set (take (Suc n) xs);\n                    x \\<noteq> xs ! n; n < length xs\\<rbrakk>\n                   \\<Longrightarrow> x \\<in> set (take n xs);\n        x \\<in> set (take (Suc n) (a # xs)); x \\<noteq> (a # xs) ! n;\n        n < length (a # xs); n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> x \\<in> set (take n (a # xs))", "apply fastforce"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma P_eq_list_filter: \"\\<forall>x \\<in> set xs. P x = Q x \\<Longrightarrow> filter P xs = filter Q xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set xs. P x = Q x \\<Longrightarrow>\n    filter P xs = filter Q xs", "apply (induct xs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>x\\<in>set []. P x = Q x \\<Longrightarrow>\n    filter P [] = filter Q []\n 2. \\<And>a xs.\n       \\<lbrakk>\\<forall>x\\<in>set xs. P x = Q x \\<Longrightarrow>\n                filter P xs = filter Q xs;\n        \\<forall>x\\<in>set (a # xs). P x = Q x\\<rbrakk>\n       \\<Longrightarrow> filter P (a # xs) = filter Q (a # xs)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma hd_filter_take_more: \"\\<And>n m.\\<lbrakk>filter P (take n xs) \\<noteq> []; n \\<le> m\\<rbrakk> \\<Longrightarrow> \n       hd (filter P (take n xs)) =  hd (filter P (take m xs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n m.\n       \\<lbrakk>filter P (take n xs) \\<noteq> []; n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> hd (filter P (take n xs)) =\n                         hd (filter P (take m xs))", "apply (induct xs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n m.\n       \\<lbrakk>filter P (take n []) \\<noteq> []; n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> hd (filter P (take n [])) =\n                         hd (filter P (take m []))\n 2. \\<And>a xs n m.\n       \\<lbrakk>\\<And>n m.\n                   \\<lbrakk>filter P (take n xs) \\<noteq> [];\n                    n \\<le> m\\<rbrakk>\n                   \\<Longrightarrow> hd (filter P (take n xs)) =\n                                     hd (filter P (take m xs));\n        filter P (take n (a # xs)) \\<noteq> []; n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> hd (filter P (take n (a # xs))) =\n                         hd (filter P (take m (a # xs)))", "apply  simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a xs n m.\n       \\<lbrakk>\\<And>n m.\n                   \\<lbrakk>filter P (take n xs) \\<noteq> [];\n                    n \\<le> m\\<rbrakk>\n                   \\<Longrightarrow> hd (filter P (take n xs)) =\n                                     hd (filter P (take m xs));\n        filter P (take n (a # xs)) \\<noteq> []; n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> hd (filter P (take n (a # xs))) =\n                         hd (filter P (take m (a # xs)))", "apply (case_tac n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a xs n m.\n       \\<lbrakk>\\<And>n m.\n                   \\<lbrakk>filter P (take n xs) \\<noteq> [];\n                    n \\<le> m\\<rbrakk>\n                   \\<Longrightarrow> hd (filter P (take n xs)) =\n                                     hd (filter P (take m xs));\n        filter P (take n (a # xs)) \\<noteq> []; n \\<le> m; n = 0\\<rbrakk>\n       \\<Longrightarrow> hd (filter P (take n (a # xs))) =\n                         hd (filter P (take m (a # xs)))\n 2. \\<And>a xs n m nat.\n       \\<lbrakk>\\<And>n m.\n                   \\<lbrakk>filter P (take n xs) \\<noteq> [];\n                    n \\<le> m\\<rbrakk>\n                   \\<Longrightarrow> hd (filter P (take n xs)) =\n                                     hd (filter P (take m xs));\n        filter P (take n (a # xs)) \\<noteq> []; n \\<le> m;\n        n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> hd (filter P (take n (a # xs))) =\n                         hd (filter P (take m (a # xs)))", "apply  simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a xs n m nat.\n       \\<lbrakk>\\<And>n m.\n                   \\<lbrakk>filter P (take n xs) \\<noteq> [];\n                    n \\<le> m\\<rbrakk>\n                   \\<Longrightarrow> hd (filter P (take n xs)) =\n                                     hd (filter P (take m xs));\n        filter P (take n (a # xs)) \\<noteq> []; n \\<le> m;\n        n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> hd (filter P (take n (a # xs))) =\n                         hd (filter P (take m (a # xs)))", "apply (case_tac m)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a xs n m nat.\n       \\<lbrakk>\\<And>n m.\n                   \\<lbrakk>filter P (take n xs) \\<noteq> [];\n                    n \\<le> m\\<rbrakk>\n                   \\<Longrightarrow> hd (filter P (take n xs)) =\n                                     hd (filter P (take m xs));\n        filter P (take n (a # xs)) \\<noteq> []; n \\<le> m; n = Suc nat;\n        m = 0\\<rbrakk>\n       \\<Longrightarrow> hd (filter P (take n (a # xs))) =\n                         hd (filter P (take m (a # xs)))\n 2. \\<And>a xs n m nat nata.\n       \\<lbrakk>\\<And>n m.\n                   \\<lbrakk>filter P (take n xs) \\<noteq> [];\n                    n \\<le> m\\<rbrakk>\n                   \\<Longrightarrow> hd (filter P (take n xs)) =\n                                     hd (filter P (take m xs));\n        filter P (take n (a # xs)) \\<noteq> []; n \\<le> m; n = Suc nat;\n        m = Suc nata\\<rbrakk>\n       \\<Longrightarrow> hd (filter P (take n (a # xs))) =\n                         hd (filter P (take m (a # xs)))", "apply  simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a xs n m nat nata.\n       \\<lbrakk>\\<And>n m.\n                   \\<lbrakk>filter P (take n xs) \\<noteq> [];\n                    n \\<le> m\\<rbrakk>\n                   \\<Longrightarrow> hd (filter P (take n xs)) =\n                                     hd (filter P (take m xs));\n        filter P (take n (a # xs)) \\<noteq> []; n \\<le> m; n = Suc nat;\n        m = Suc nata\\<rbrakk>\n       \\<Longrightarrow> hd (filter P (take n (a # xs))) =\n                         hd (filter P (take m (a # xs)))", "apply clarsimp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*\nconsts wf_levellist :: \"dag \\<Rightarrow> ref list list \\<Rightarrow> ref list list \\<Rightarrow>\n                       (ref \\<Rightarrow> nat) \\<Rightarrow> bool\"\ndefs wf_levellist_def: \"wf_levellist t levellist_old levellist_new var  \\<equiv> \ncase t of Tip \\<Rightarrow> levellist_old = levellist_new\n| (Node lt p rt) \\<Rightarrow>\n  (\\<forall> q. q \\<in> set_of t \\<longrightarrow> q \\<in> set (levellist_new ! (var q))) \\<and>\n  (\\<forall> i \\<le> var p. (\\<exists> prx. (levellist_new ! i) = prx@(levellist_old ! i) \n                       \\<and> (\\<forall> pt \\<in> set prx. pt \\<in> set_of t \\<and> var pt = i))) \\<and>\n  (\\<forall> i. (var p) < i \\<longrightarrow> (levellist_new ! i) = (levellist_old ! i)) \\<and>\n  (length levellist_new = length levellist_old)\" \n*)"], ["", "end"]]}