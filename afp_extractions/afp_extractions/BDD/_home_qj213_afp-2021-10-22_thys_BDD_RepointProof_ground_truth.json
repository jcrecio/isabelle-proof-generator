{"file_name": "/home/qj213/afp-2021-10-22/thys/BDD/RepointProof.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/BDD", "problem_names": ["lemma (in Repoint_impl) Repoint_modifies:\n  shows \"\\<forall>\\<sigma>. \\<Gamma>\\<turnstile>{\\<sigma>} \\<acute>p :==  PROC Repoint (\\<acute>p)\n        {t. t may_only_modify_globals \\<sigma> in [low,high]}\"", "lemma low_high_exchange_dag: \nassumes pt_same: \"\\<forall>pt. pt \\<notin> set_of lt \\<longrightarrow> low pt = lowa pt \\<and> high pt = higha pt\"\nassumes pt_changed: \"\\<forall>pt \\<in> set_of lt. lowa pt = (rep \\<propto> low) pt \\<and> \n                            higha pt = (rep \\<propto> high) pt\"\nassumes rep_pt: \"\\<forall>pt \\<in> set_of rt. rep pt = pt\"\nshows \"\\<And>q.  Dag q (rep \\<propto> low) (rep \\<propto> high) rt \\<Longrightarrow> \n            Dag q (rep \\<propto> lowa) (rep \\<propto> higha) rt\"", "lemma (in Repoint_impl) Repoint_spec':\nshows \n  \"\\<forall>\\<sigma>. \\<Gamma>\\<turnstile> {\\<sigma>}\n  \\<acute>p :== PROC Repoint (\\<acute>p)\n  \\<lbrace>\\<forall> rept. ((Dag ((\\<^bsup>\\<sigma>\\<^esup>rep \\<propto> id) \\<^bsup>\\<sigma>\\<^esup>p) (\\<^bsup>\\<sigma>\\<^esup>rep \\<propto> \\<^bsup>\\<sigma>\\<^esup>low) (\\<^bsup>\\<sigma>\\<^esup>rep \\<propto> \\<^bsup>\\<sigma>\\<^esup>high) rept) \n  \\<and> (\\<forall> no \\<in> set_of rept. \\<^bsup>\\<sigma>\\<^esup>rep no = no))\n  \\<longrightarrow> Dag \\<acute>p \\<acute>low \\<acute>high rept \\<and>\n  (\\<forall>pt. pt \\<notin> set_of rept \\<longrightarrow> \\<^bsup>\\<sigma>\\<^esup>low pt = \\<acute>low pt \\<and> \\<^bsup>\\<sigma>\\<^esup>high pt = \\<acute>high pt)\\<rbrace>\"", "lemma (in Repoint_impl) Repoint_spec:\nshows \n  \"\\<forall>\\<sigma> rept. \\<Gamma>\\<turnstile> \\<lbrace>\\<sigma>. Dag ((\\<acute>rep \\<propto> id) \\<acute>p) (\\<acute>rep \\<propto> \\<acute>low) (\\<acute>rep \\<propto> \\<acute>high) rept \n  \\<and> (\\<forall> no \\<in> set_of rept. \\<acute>rep no = no) \\<rbrace> \n  \\<acute>p :== PROC Repoint (\\<acute>p)\n  \\<lbrace>Dag \\<acute>p \\<acute>low \\<acute>high rept \\<and>\n  (\\<forall>pt. pt \\<notin> set_of rept \\<longrightarrow> \\<^bsup>\\<sigma>\\<^esup>low pt = \\<acute>low pt \\<and> \\<^bsup>\\<sigma>\\<^esup>high pt = \\<acute>high pt)\\<rbrace>\"", "lemma (in Repoint_impl) Repoint_spec_total:\nshows \n  \"\\<forall>\\<sigma> rept. \\<Gamma>\\<turnstile>\\<^sub>t \\<lbrace>\\<sigma>. Dag ((\\<acute>rep \\<propto> id) \\<acute>p) (\\<acute>rep \\<propto> \\<acute>low) (\\<acute>rep \\<propto> \\<acute>high) rept \n  \\<and> (\\<forall> no \\<in> set_of rept. \\<acute>rep no = no) \\<rbrace> \n  \\<acute>p :== PROC Repoint (\\<acute>p)\n  \\<lbrace>Dag \\<acute>p \\<acute>low \\<acute>high rept \\<and>\n  (\\<forall>pt. pt \\<notin> set_of rept \\<longrightarrow> \\<^bsup>\\<sigma>\\<^esup>low pt = \\<acute>low pt \\<and> \\<^bsup>\\<sigma>\\<^esup>high pt = \\<acute>high pt)\\<rbrace>\""], "translations": [["", "lemma (in Repoint_impl) Repoint_modifies:\n  shows \"\\<forall>\\<sigma>. \\<Gamma>\\<turnstile>{\\<sigma>} \\<acute>p :==  PROC Repoint (\\<acute>p)\n        {t. t may_only_modify_globals \\<sigma> in [low,high]}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<sigma>.\n       \\<Gamma>\n          \\<turnstile> {\\<sigma>} \\<acute>p :== PROC Repoint(\\<acute>p)\n                       {t. t may_only_modify_globals \\<sigma> in [high,\n                        low]}", "apply (hoare_rule HoarePartial.ProcRec1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<sigma>.\n       \\<Gamma>,(\\<Union>\\<sigma>.\n                    {({\\<sigma>}, Repoint_'proc,\n                      {t. t may_only_modify_globals \\<sigma> in [high,\n                       low]},\n                      {})})\n          \\<turnstile> {\\<sigma>}\n                       IF \\<acute>p \\<noteq> Null\n                       THEN \\<acute>p :==\n                            \\<acute>p\\<rightarrow>\\<acute>rep;;\n                         IF \\<acute>p \\<noteq> Null\n                         THEN \\<acute>p\\<rightarrow>\\<acute>low :== CALL Repoint(\\<acute>p\\<rightarrow>\\<acute>low);;\n                           \\<acute>p\\<rightarrow>\\<acute>high :== CALL Repoint(\\<acute>p\\<rightarrow>\\<acute>high)\n                         FI\n                       FI\n                       {t. t may_only_modify_globals \\<sigma> in [high,\n                        low]}", "apply (vcg spec=modifies)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma low_high_exchange_dag: \nassumes pt_same: \"\\<forall>pt. pt \\<notin> set_of lt \\<longrightarrow> low pt = lowa pt \\<and> high pt = higha pt\"\nassumes pt_changed: \"\\<forall>pt \\<in> set_of lt. lowa pt = (rep \\<propto> low) pt \\<and> \n                            higha pt = (rep \\<propto> high) pt\"\nassumes rep_pt: \"\\<forall>pt \\<in> set_of rt. rep pt = pt\"\nshows \"\\<And>q.  Dag q (rep \\<propto> low) (rep \\<propto> high) rt \\<Longrightarrow> \n            Dag q (rep \\<propto> lowa) (rep \\<propto> higha) rt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>q.\n       Dag q (rep \\<propto> low) (rep \\<propto> high) rt \\<Longrightarrow>\n       Dag q (rep \\<propto> lowa) (rep \\<propto> higha) rt", "using rep_pt"], ["proof (prove)\nusing this:\n  \\<forall>pt\\<in>set_of rt. rep pt = pt\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       Dag q (rep \\<propto> low) (rep \\<propto> high) rt \\<Longrightarrow>\n       Dag q (rep \\<propto> lowa) (rep \\<propto> higha) rt", "proof (induct rt)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>q.\n       \\<lbrakk>Dag q (rep \\<propto> low) (rep \\<propto> high) Tip;\n        \\<forall>pt\\<in>set_of Tip. rep pt = pt\\<rbrakk>\n       \\<Longrightarrow> Dag q (rep \\<propto> lowa) (rep \\<propto> higha)\n                          Tip\n 2. \\<And>rt1 x2 rt2 q.\n       \\<lbrakk>\\<And>q.\n                   \\<lbrakk>Dag q (rep \\<propto> low) (rep \\<propto> high)\n                             rt1;\n                    \\<forall>pt\\<in>set_of rt1. rep pt = pt\\<rbrakk>\n                   \\<Longrightarrow> Dag q (rep \\<propto> lowa)\n(rep \\<propto> higha) rt1;\n        \\<And>q.\n           \\<lbrakk>Dag q (rep \\<propto> low) (rep \\<propto> high) rt2;\n            \\<forall>pt\\<in>set_of rt2. rep pt = pt\\<rbrakk>\n           \\<Longrightarrow> Dag q (rep \\<propto> lowa)\n                              (rep \\<propto> higha) rt2;\n        Dag q (rep \\<propto> low) (rep \\<propto> high) (Node rt1 x2 rt2);\n        \\<forall>pt\\<in>set_of (Node rt1 x2 rt2). rep pt = pt\\<rbrakk>\n       \\<Longrightarrow> Dag q (rep \\<propto> lowa) (rep \\<propto> higha)\n                          (Node rt1 x2 rt2)", "case Tip"], ["proof (state)\nthis:\n  Dag q (rep \\<propto> low) (rep \\<propto> high) Tip\n  \\<forall>pt\\<in>set_of Tip. rep pt = pt\n\ngoal (2 subgoals):\n 1. \\<And>q.\n       \\<lbrakk>Dag q (rep \\<propto> low) (rep \\<propto> high) Tip;\n        \\<forall>pt\\<in>set_of Tip. rep pt = pt\\<rbrakk>\n       \\<Longrightarrow> Dag q (rep \\<propto> lowa) (rep \\<propto> higha)\n                          Tip\n 2. \\<And>rt1 x2 rt2 q.\n       \\<lbrakk>\\<And>q.\n                   \\<lbrakk>Dag q (rep \\<propto> low) (rep \\<propto> high)\n                             rt1;\n                    \\<forall>pt\\<in>set_of rt1. rep pt = pt\\<rbrakk>\n                   \\<Longrightarrow> Dag q (rep \\<propto> lowa)\n(rep \\<propto> higha) rt1;\n        \\<And>q.\n           \\<lbrakk>Dag q (rep \\<propto> low) (rep \\<propto> high) rt2;\n            \\<forall>pt\\<in>set_of rt2. rep pt = pt\\<rbrakk>\n           \\<Longrightarrow> Dag q (rep \\<propto> lowa)\n                              (rep \\<propto> higha) rt2;\n        Dag q (rep \\<propto> low) (rep \\<propto> high) (Node rt1 x2 rt2);\n        \\<forall>pt\\<in>set_of (Node rt1 x2 rt2). rep pt = pt\\<rbrakk>\n       \\<Longrightarrow> Dag q (rep \\<propto> lowa) (rep \\<propto> higha)\n                          (Node rt1 x2 rt2)", "thus ?case"], ["proof (prove)\nusing this:\n  Dag q (rep \\<propto> low) (rep \\<propto> high) Tip\n  \\<forall>pt\\<in>set_of Tip. rep pt = pt\n\ngoal (1 subgoal):\n 1. Dag q (rep \\<propto> lowa) (rep \\<propto> higha) Tip", "by simp"], ["proof (state)\nthis:\n  Dag q (rep \\<propto> lowa) (rep \\<propto> higha) Tip\n\ngoal (1 subgoal):\n 1. \\<And>rt1 x2 rt2 q.\n       \\<lbrakk>\\<And>q.\n                   \\<lbrakk>Dag q (rep \\<propto> low) (rep \\<propto> high)\n                             rt1;\n                    \\<forall>pt\\<in>set_of rt1. rep pt = pt\\<rbrakk>\n                   \\<Longrightarrow> Dag q (rep \\<propto> lowa)\n(rep \\<propto> higha) rt1;\n        \\<And>q.\n           \\<lbrakk>Dag q (rep \\<propto> low) (rep \\<propto> high) rt2;\n            \\<forall>pt\\<in>set_of rt2. rep pt = pt\\<rbrakk>\n           \\<Longrightarrow> Dag q (rep \\<propto> lowa)\n                              (rep \\<propto> higha) rt2;\n        Dag q (rep \\<propto> low) (rep \\<propto> high) (Node rt1 x2 rt2);\n        \\<forall>pt\\<in>set_of (Node rt1 x2 rt2). rep pt = pt\\<rbrakk>\n       \\<Longrightarrow> Dag q (rep \\<propto> lowa) (rep \\<propto> higha)\n                          (Node rt1 x2 rt2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>rt1 x2 rt2 q.\n       \\<lbrakk>\\<And>q.\n                   \\<lbrakk>Dag q (rep \\<propto> low) (rep \\<propto> high)\n                             rt1;\n                    \\<forall>pt\\<in>set_of rt1. rep pt = pt\\<rbrakk>\n                   \\<Longrightarrow> Dag q (rep \\<propto> lowa)\n(rep \\<propto> higha) rt1;\n        \\<And>q.\n           \\<lbrakk>Dag q (rep \\<propto> low) (rep \\<propto> high) rt2;\n            \\<forall>pt\\<in>set_of rt2. rep pt = pt\\<rbrakk>\n           \\<Longrightarrow> Dag q (rep \\<propto> lowa)\n                              (rep \\<propto> higha) rt2;\n        Dag q (rep \\<propto> low) (rep \\<propto> high) (Node rt1 x2 rt2);\n        \\<forall>pt\\<in>set_of (Node rt1 x2 rt2). rep pt = pt\\<rbrakk>\n       \\<Longrightarrow> Dag q (rep \\<propto> lowa) (rep \\<propto> higha)\n                          (Node rt1 x2 rt2)", "case (Node lrt q' rrt)"], ["proof (state)\nthis:\n  \\<lbrakk>Dag ?q (rep \\<propto> low) (rep \\<propto> high) lrt;\n   \\<forall>pt\\<in>set_of lrt. rep pt = pt\\<rbrakk>\n  \\<Longrightarrow> Dag ?q (rep \\<propto> lowa) (rep \\<propto> higha) lrt\n  \\<lbrakk>Dag ?q (rep \\<propto> low) (rep \\<propto> high) rrt;\n   \\<forall>pt\\<in>set_of rrt. rep pt = pt\\<rbrakk>\n  \\<Longrightarrow> Dag ?q (rep \\<propto> lowa) (rep \\<propto> higha) rrt\n  Dag q (rep \\<propto> low) (rep \\<propto> high) (Node lrt q' rrt)\n  \\<forall>pt\\<in>set_of (Node lrt q' rrt). rep pt = pt\n\ngoal (1 subgoal):\n 1. \\<And>rt1 x2 rt2 q.\n       \\<lbrakk>\\<And>q.\n                   \\<lbrakk>Dag q (rep \\<propto> low) (rep \\<propto> high)\n                             rt1;\n                    \\<forall>pt\\<in>set_of rt1. rep pt = pt\\<rbrakk>\n                   \\<Longrightarrow> Dag q (rep \\<propto> lowa)\n(rep \\<propto> higha) rt1;\n        \\<And>q.\n           \\<lbrakk>Dag q (rep \\<propto> low) (rep \\<propto> high) rt2;\n            \\<forall>pt\\<in>set_of rt2. rep pt = pt\\<rbrakk>\n           \\<Longrightarrow> Dag q (rep \\<propto> lowa)\n                              (rep \\<propto> higha) rt2;\n        Dag q (rep \\<propto> low) (rep \\<propto> high) (Node rt1 x2 rt2);\n        \\<forall>pt\\<in>set_of (Node rt1 x2 rt2). rep pt = pt\\<rbrakk>\n       \\<Longrightarrow> Dag q (rep \\<propto> lowa) (rep \\<propto> higha)\n                          (Node rt1 x2 rt2)", "have \"Dag q (rep \\<propto> low) (rep \\<propto> high) (Node lrt q' rrt)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dag q (rep \\<propto> low) (rep \\<propto> high) (Node lrt q' rrt)", "by fact"], ["proof (state)\nthis:\n  Dag q (rep \\<propto> low) (rep \\<propto> high) (Node lrt q' rrt)\n\ngoal (1 subgoal):\n 1. \\<And>rt1 x2 rt2 q.\n       \\<lbrakk>\\<And>q.\n                   \\<lbrakk>Dag q (rep \\<propto> low) (rep \\<propto> high)\n                             rt1;\n                    \\<forall>pt\\<in>set_of rt1. rep pt = pt\\<rbrakk>\n                   \\<Longrightarrow> Dag q (rep \\<propto> lowa)\n(rep \\<propto> higha) rt1;\n        \\<And>q.\n           \\<lbrakk>Dag q (rep \\<propto> low) (rep \\<propto> high) rt2;\n            \\<forall>pt\\<in>set_of rt2. rep pt = pt\\<rbrakk>\n           \\<Longrightarrow> Dag q (rep \\<propto> lowa)\n                              (rep \\<propto> higha) rt2;\n        Dag q (rep \\<propto> low) (rep \\<propto> high) (Node rt1 x2 rt2);\n        \\<forall>pt\\<in>set_of (Node rt1 x2 rt2). rep pt = pt\\<rbrakk>\n       \\<Longrightarrow> Dag q (rep \\<propto> lowa) (rep \\<propto> higha)\n                          (Node rt1 x2 rt2)", "then"], ["proof (chain)\npicking this:\n  Dag q (rep \\<propto> low) (rep \\<propto> high) (Node lrt q' rrt)", "obtain \n    q': \"q = q'\"  and\n    q_notNull: \"q \\<noteq> Null\" and \n    lrt: \"Dag ((rep \\<propto> low) q) (rep \\<propto> low) (rep \\<propto> high) lrt\" and\n    rrt: \"Dag ((rep \\<propto> high) q) (rep \\<propto> low) (rep \\<propto> high) rrt\""], ["proof (prove)\nusing this:\n  Dag q (rep \\<propto> low) (rep \\<propto> high) (Node lrt q' rrt)\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>q = q'; q \\<noteq> Null;\n      Dag ((rep \\<propto> low) q) (rep \\<propto> low) (rep \\<propto> high)\n       lrt;\n      Dag ((rep \\<propto> high) q) (rep \\<propto> low) (rep \\<propto> high)\n       rrt\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  q = q'\n  q \\<noteq> Null\n  Dag ((rep \\<propto> low) q) (rep \\<propto> low) (rep \\<propto> high) lrt\n  Dag ((rep \\<propto> high) q) (rep \\<propto> low) (rep \\<propto> high) rrt\n\ngoal (1 subgoal):\n 1. \\<And>rt1 x2 rt2 q.\n       \\<lbrakk>\\<And>q.\n                   \\<lbrakk>Dag q (rep \\<propto> low) (rep \\<propto> high)\n                             rt1;\n                    \\<forall>pt\\<in>set_of rt1. rep pt = pt\\<rbrakk>\n                   \\<Longrightarrow> Dag q (rep \\<propto> lowa)\n(rep \\<propto> higha) rt1;\n        \\<And>q.\n           \\<lbrakk>Dag q (rep \\<propto> low) (rep \\<propto> high) rt2;\n            \\<forall>pt\\<in>set_of rt2. rep pt = pt\\<rbrakk>\n           \\<Longrightarrow> Dag q (rep \\<propto> lowa)\n                              (rep \\<propto> higha) rt2;\n        Dag q (rep \\<propto> low) (rep \\<propto> high) (Node rt1 x2 rt2);\n        \\<forall>pt\\<in>set_of (Node rt1 x2 rt2). rep pt = pt\\<rbrakk>\n       \\<Longrightarrow> Dag q (rep \\<propto> lowa) (rep \\<propto> higha)\n                          (Node rt1 x2 rt2)", "have rlowa_rlow: \"((rep \\<propto> lowa) q) = ((rep \\<propto> low) q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rep \\<propto> lowa) q = (rep \\<propto> low) q", "proof (cases \"q \\<in> set_of lt\")"], ["proof (state)\ngoal (2 subgoals):\n 1. q \\<in> set_of lt \\<Longrightarrow>\n    (rep \\<propto> lowa) q = (rep \\<propto> low) q\n 2. q \\<notin> set_of lt \\<Longrightarrow>\n    (rep \\<propto> lowa) q = (rep \\<propto> low) q", "case True"], ["proof (state)\nthis:\n  q \\<in> set_of lt\n\ngoal (2 subgoals):\n 1. q \\<in> set_of lt \\<Longrightarrow>\n    (rep \\<propto> lowa) q = (rep \\<propto> low) q\n 2. q \\<notin> set_of lt \\<Longrightarrow>\n    (rep \\<propto> lowa) q = (rep \\<propto> low) q", "note q_in_lt=this"], ["proof (state)\nthis:\n  q \\<in> set_of lt\n\ngoal (2 subgoals):\n 1. q \\<in> set_of lt \\<Longrightarrow>\n    (rep \\<propto> lowa) q = (rep \\<propto> low) q\n 2. q \\<notin> set_of lt \\<Longrightarrow>\n    (rep \\<propto> lowa) q = (rep \\<propto> low) q", "with pt_changed"], ["proof (chain)\npicking this:\n  \\<forall>pt\\<in>set_of lt.\n     lowa pt = (rep \\<propto> low) pt \\<and>\n     higha pt = (rep \\<propto> high) pt\n  q \\<in> set_of lt", "have lowa_q: \"lowa q = (rep \\<propto> low) q\""], ["proof (prove)\nusing this:\n  \\<forall>pt\\<in>set_of lt.\n     lowa pt = (rep \\<propto> low) pt \\<and>\n     higha pt = (rep \\<propto> high) pt\n  q \\<in> set_of lt\n\ngoal (1 subgoal):\n 1. lowa q = (rep \\<propto> low) q", "by simp"], ["proof (state)\nthis:\n  lowa q = (rep \\<propto> low) q\n\ngoal (2 subgoals):\n 1. q \\<in> set_of lt \\<Longrightarrow>\n    (rep \\<propto> lowa) q = (rep \\<propto> low) q\n 2. q \\<notin> set_of lt \\<Longrightarrow>\n    (rep \\<propto> lowa) q = (rep \\<propto> low) q", "thus \"(rep \\<propto> lowa) q = (rep \\<propto> low) q\""], ["proof (prove)\nusing this:\n  lowa q = (rep \\<propto> low) q\n\ngoal (1 subgoal):\n 1. (rep \\<propto> lowa) q = (rep \\<propto> low) q", "proof (cases \"low q = Null\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>lowa q = (rep \\<propto> low) q; low q = Null\\<rbrakk>\n    \\<Longrightarrow> (rep \\<propto> lowa) q = (rep \\<propto> low) q\n 2. \\<lbrakk>lowa q = (rep \\<propto> low) q; low q \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> (rep \\<propto> lowa) q = (rep \\<propto> low) q", "case True"], ["proof (state)\nthis:\n  low q = Null\n\ngoal (2 subgoals):\n 1. \\<lbrakk>lowa q = (rep \\<propto> low) q; low q = Null\\<rbrakk>\n    \\<Longrightarrow> (rep \\<propto> lowa) q = (rep \\<propto> low) q\n 2. \\<lbrakk>lowa q = (rep \\<propto> low) q; low q \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> (rep \\<propto> lowa) q = (rep \\<propto> low) q", "with lowa_q"], ["proof (chain)\npicking this:\n  lowa q = (rep \\<propto> low) q\n  low q = Null", "have \"lowa q = Null\""], ["proof (prove)\nusing this:\n  lowa q = (rep \\<propto> low) q\n  low q = Null\n\ngoal (1 subgoal):\n 1. lowa q = Null", "by (simp add: null_comp_def)"], ["proof (state)\nthis:\n  lowa q = Null\n\ngoal (2 subgoals):\n 1. \\<lbrakk>lowa q = (rep \\<propto> low) q; low q = Null\\<rbrakk>\n    \\<Longrightarrow> (rep \\<propto> lowa) q = (rep \\<propto> low) q\n 2. \\<lbrakk>lowa q = (rep \\<propto> low) q; low q \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> (rep \\<propto> lowa) q = (rep \\<propto> low) q", "with True"], ["proof (chain)\npicking this:\n  low q = Null\n  lowa q = Null", "show ?thesis"], ["proof (prove)\nusing this:\n  low q = Null\n  lowa q = Null\n\ngoal (1 subgoal):\n 1. (rep \\<propto> lowa) q = (rep \\<propto> low) q", "by (simp add: null_comp_def)"], ["proof (state)\nthis:\n  (rep \\<propto> lowa) q = (rep \\<propto> low) q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lowa q = (rep \\<propto> low) q; low q \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> (rep \\<propto> lowa) q = (rep \\<propto> low) q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>lowa q = (rep \\<propto> low) q; low q \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> (rep \\<propto> lowa) q = (rep \\<propto> low) q", "assume lq_nNull: \"low q \\<noteq> Null\""], ["proof (state)\nthis:\n  low q \\<noteq> Null\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lowa q = (rep \\<propto> low) q; low q \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> (rep \\<propto> lowa) q = (rep \\<propto> low) q", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (rep \\<propto> lowa) q = (rep \\<propto> low) q", "proof (cases \"(rep \\<propto> low) q = Null\")"], ["proof (state)\ngoal (2 subgoals):\n 1. (rep \\<propto> low) q = Null \\<Longrightarrow>\n    (rep \\<propto> lowa) q = (rep \\<propto> low) q\n 2. (rep \\<propto> low) q \\<noteq> Null \\<Longrightarrow>\n    (rep \\<propto> lowa) q = (rep \\<propto> low) q", "case True"], ["proof (state)\nthis:\n  (rep \\<propto> low) q = Null\n\ngoal (2 subgoals):\n 1. (rep \\<propto> low) q = Null \\<Longrightarrow>\n    (rep \\<propto> lowa) q = (rep \\<propto> low) q\n 2. (rep \\<propto> low) q \\<noteq> Null \\<Longrightarrow>\n    (rep \\<propto> lowa) q = (rep \\<propto> low) q", "with lowa_q"], ["proof (chain)\npicking this:\n  lowa q = (rep \\<propto> low) q\n  (rep \\<propto> low) q = Null", "have \"lowa q = Null\""], ["proof (prove)\nusing this:\n  lowa q = (rep \\<propto> low) q\n  (rep \\<propto> low) q = Null\n\ngoal (1 subgoal):\n 1. lowa q = Null", "by simp"], ["proof (state)\nthis:\n  lowa q = Null\n\ngoal (2 subgoals):\n 1. (rep \\<propto> low) q = Null \\<Longrightarrow>\n    (rep \\<propto> lowa) q = (rep \\<propto> low) q\n 2. (rep \\<propto> low) q \\<noteq> Null \\<Longrightarrow>\n    (rep \\<propto> lowa) q = (rep \\<propto> low) q", "with True"], ["proof (chain)\npicking this:\n  (rep \\<propto> low) q = Null\n  lowa q = Null", "show ?thesis"], ["proof (prove)\nusing this:\n  (rep \\<propto> low) q = Null\n  lowa q = Null\n\ngoal (1 subgoal):\n 1. (rep \\<propto> lowa) q = (rep \\<propto> low) q", "by (simp add: null_comp_def)"], ["proof (state)\nthis:\n  (rep \\<propto> lowa) q = (rep \\<propto> low) q\n\ngoal (1 subgoal):\n 1. (rep \\<propto> low) q \\<noteq> Null \\<Longrightarrow>\n    (rep \\<propto> lowa) q = (rep \\<propto> low) q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (rep \\<propto> low) q \\<noteq> Null \\<Longrightarrow>\n    (rep \\<propto> lowa) q = (rep \\<propto> low) q", "assume rlq_nNull: \"(rep \\<propto> low) q \\<noteq> Null\""], ["proof (state)\nthis:\n  (rep \\<propto> low) q \\<noteq> Null\n\ngoal (1 subgoal):\n 1. (rep \\<propto> low) q \\<noteq> Null \\<Longrightarrow>\n    (rep \\<propto> lowa) q = (rep \\<propto> low) q", "with lrt lowa_q"], ["proof (chain)\npicking this:\n  Dag ((rep \\<propto> low) q) (rep \\<propto> low) (rep \\<propto> high) lrt\n  lowa q = (rep \\<propto> low) q\n  (rep \\<propto> low) q \\<noteq> Null", "have \"lowa q \\<in> set_of lrt\""], ["proof (prove)\nusing this:\n  Dag ((rep \\<propto> low) q) (rep \\<propto> low) (rep \\<propto> high) lrt\n  lowa q = (rep \\<propto> low) q\n  (rep \\<propto> low) q \\<noteq> Null\n\ngoal (1 subgoal):\n 1. lowa q \\<in> set_of lrt", "by auto"], ["proof (state)\nthis:\n  lowa q \\<in> set_of lrt\n\ngoal (1 subgoal):\n 1. (rep \\<propto> low) q \\<noteq> Null \\<Longrightarrow>\n    (rep \\<propto> lowa) q = (rep \\<propto> low) q", "with Node.prems Node"], ["proof (chain)\npicking this:\n  Dag q (rep \\<propto> low) (rep \\<propto> high) (Node lrt q' rrt)\n  \\<forall>pt\\<in>set_of (Node lrt q' rrt). rep pt = pt\n  \\<lbrakk>Dag ?q (rep \\<propto> low) (rep \\<propto> high) lrt;\n   \\<forall>pt\\<in>set_of lrt. rep pt = pt\\<rbrakk>\n  \\<Longrightarrow> Dag ?q (rep \\<propto> lowa) (rep \\<propto> higha) lrt\n  \\<lbrakk>Dag ?q (rep \\<propto> low) (rep \\<propto> high) rrt;\n   \\<forall>pt\\<in>set_of rrt. rep pt = pt\\<rbrakk>\n  \\<Longrightarrow> Dag ?q (rep \\<propto> lowa) (rep \\<propto> higha) rrt\n  Dag q (rep \\<propto> low) (rep \\<propto> high) (Node lrt q' rrt)\n  \\<forall>pt\\<in>set_of (Node lrt q' rrt). rep pt = pt\n  lowa q \\<in> set_of lrt", "have \"lowa q \\<in> set_of (Node lrt q' rrt)\""], ["proof (prove)\nusing this:\n  Dag q (rep \\<propto> low) (rep \\<propto> high) (Node lrt q' rrt)\n  \\<forall>pt\\<in>set_of (Node lrt q' rrt). rep pt = pt\n  \\<lbrakk>Dag ?q (rep \\<propto> low) (rep \\<propto> high) lrt;\n   \\<forall>pt\\<in>set_of lrt. rep pt = pt\\<rbrakk>\n  \\<Longrightarrow> Dag ?q (rep \\<propto> lowa) (rep \\<propto> higha) lrt\n  \\<lbrakk>Dag ?q (rep \\<propto> low) (rep \\<propto> high) rrt;\n   \\<forall>pt\\<in>set_of rrt. rep pt = pt\\<rbrakk>\n  \\<Longrightarrow> Dag ?q (rep \\<propto> lowa) (rep \\<propto> higha) rrt\n  Dag q (rep \\<propto> low) (rep \\<propto> high) (Node lrt q' rrt)\n  \\<forall>pt\\<in>set_of (Node lrt q' rrt). rep pt = pt\n  lowa q \\<in> set_of lrt\n\ngoal (1 subgoal):\n 1. lowa q \\<in> set_of (Node lrt q' rrt)", "by simp"], ["proof (state)\nthis:\n  lowa q \\<in> set_of (Node lrt q' rrt)\n\ngoal (1 subgoal):\n 1. (rep \\<propto> low) q \\<noteq> Null \\<Longrightarrow>\n    (rep \\<propto> lowa) q = (rep \\<propto> low) q", "with Node.prems"], ["proof (chain)\npicking this:\n  Dag q (rep \\<propto> low) (rep \\<propto> high) (Node lrt q' rrt)\n  \\<forall>pt\\<in>set_of (Node lrt q' rrt). rep pt = pt\n  lowa q \\<in> set_of (Node lrt q' rrt)", "have \"rep (lowa q) = lowa q\""], ["proof (prove)\nusing this:\n  Dag q (rep \\<propto> low) (rep \\<propto> high) (Node lrt q' rrt)\n  \\<forall>pt\\<in>set_of (Node lrt q' rrt). rep pt = pt\n  lowa q \\<in> set_of (Node lrt q' rrt)\n\ngoal (1 subgoal):\n 1. rep (lowa q) = lowa q", "by auto"], ["proof (state)\nthis:\n  rep (lowa q) = lowa q\n\ngoal (1 subgoal):\n 1. (rep \\<propto> low) q \\<noteq> Null \\<Longrightarrow>\n    (rep \\<propto> lowa) q = (rep \\<propto> low) q", "with lowa_q rlq_nNull"], ["proof (chain)\npicking this:\n  lowa q = (rep \\<propto> low) q\n  (rep \\<propto> low) q \\<noteq> Null\n  rep (lowa q) = lowa q", "show ?thesis"], ["proof (prove)\nusing this:\n  lowa q = (rep \\<propto> low) q\n  (rep \\<propto> low) q \\<noteq> Null\n  rep (lowa q) = lowa q\n\ngoal (1 subgoal):\n 1. (rep \\<propto> lowa) q = (rep \\<propto> low) q", "by (simp add: null_comp_def)"], ["proof (state)\nthis:\n  (rep \\<propto> lowa) q = (rep \\<propto> low) q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (rep \\<propto> lowa) q = (rep \\<propto> low) q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (rep \\<propto> lowa) q = (rep \\<propto> low) q\n\ngoal (1 subgoal):\n 1. q \\<notin> set_of lt \\<Longrightarrow>\n    (rep \\<propto> lowa) q = (rep \\<propto> low) q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. q \\<notin> set_of lt \\<Longrightarrow>\n    (rep \\<propto> lowa) q = (rep \\<propto> low) q", "assume q_notin_lt: \" q \\<notin> set_of lt\""], ["proof (state)\nthis:\n  q \\<notin> set_of lt\n\ngoal (1 subgoal):\n 1. q \\<notin> set_of lt \\<Longrightarrow>\n    (rep \\<propto> lowa) q = (rep \\<propto> low) q", "with pt_same"], ["proof (chain)\npicking this:\n  \\<forall>pt.\n     pt \\<notin> set_of lt \\<longrightarrow>\n     low pt = lowa pt \\<and> high pt = higha pt\n  q \\<notin> set_of lt", "have \"low q = lowa q\""], ["proof (prove)\nusing this:\n  \\<forall>pt.\n     pt \\<notin> set_of lt \\<longrightarrow>\n     low pt = lowa pt \\<and> high pt = higha pt\n  q \\<notin> set_of lt\n\ngoal (1 subgoal):\n 1. low q = lowa q", "by auto"], ["proof (state)\nthis:\n  low q = lowa q\n\ngoal (1 subgoal):\n 1. q \\<notin> set_of lt \\<Longrightarrow>\n    (rep \\<propto> lowa) q = (rep \\<propto> low) q", "thus ?thesis"], ["proof (prove)\nusing this:\n  low q = lowa q\n\ngoal (1 subgoal):\n 1. (rep \\<propto> lowa) q = (rep \\<propto> low) q", "by (simp add: null_comp_def)"], ["proof (state)\nthis:\n  (rep \\<propto> lowa) q = (rep \\<propto> low) q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (rep \\<propto> lowa) q = (rep \\<propto> low) q\n\ngoal (1 subgoal):\n 1. \\<And>rt1 x2 rt2 q.\n       \\<lbrakk>\\<And>q.\n                   \\<lbrakk>Dag q (rep \\<propto> low) (rep \\<propto> high)\n                             rt1;\n                    \\<forall>pt\\<in>set_of rt1. rep pt = pt\\<rbrakk>\n                   \\<Longrightarrow> Dag q (rep \\<propto> lowa)\n(rep \\<propto> higha) rt1;\n        \\<And>q.\n           \\<lbrakk>Dag q (rep \\<propto> low) (rep \\<propto> high) rt2;\n            \\<forall>pt\\<in>set_of rt2. rep pt = pt\\<rbrakk>\n           \\<Longrightarrow> Dag q (rep \\<propto> lowa)\n                              (rep \\<propto> higha) rt2;\n        Dag q (rep \\<propto> low) (rep \\<propto> high) (Node rt1 x2 rt2);\n        \\<forall>pt\\<in>set_of (Node rt1 x2 rt2). rep pt = pt\\<rbrakk>\n       \\<Longrightarrow> Dag q (rep \\<propto> lowa) (rep \\<propto> higha)\n                          (Node rt1 x2 rt2)", "have rhigha_rhigh: \"((rep \\<propto> higha) q) = ((rep \\<propto> high) q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rep \\<propto> higha) q = (rep \\<propto> high) q", "proof (cases \"q \\<in> set_of lt\")"], ["proof (state)\ngoal (2 subgoals):\n 1. q \\<in> set_of lt \\<Longrightarrow>\n    (rep \\<propto> higha) q = (rep \\<propto> high) q\n 2. q \\<notin> set_of lt \\<Longrightarrow>\n    (rep \\<propto> higha) q = (rep \\<propto> high) q", "case True"], ["proof (state)\nthis:\n  q \\<in> set_of lt\n\ngoal (2 subgoals):\n 1. q \\<in> set_of lt \\<Longrightarrow>\n    (rep \\<propto> higha) q = (rep \\<propto> high) q\n 2. q \\<notin> set_of lt \\<Longrightarrow>\n    (rep \\<propto> higha) q = (rep \\<propto> high) q", "note q_in_lt=this"], ["proof (state)\nthis:\n  q \\<in> set_of lt\n\ngoal (2 subgoals):\n 1. q \\<in> set_of lt \\<Longrightarrow>\n    (rep \\<propto> higha) q = (rep \\<propto> high) q\n 2. q \\<notin> set_of lt \\<Longrightarrow>\n    (rep \\<propto> higha) q = (rep \\<propto> high) q", "with pt_changed"], ["proof (chain)\npicking this:\n  \\<forall>pt\\<in>set_of lt.\n     lowa pt = (rep \\<propto> low) pt \\<and>\n     higha pt = (rep \\<propto> high) pt\n  q \\<in> set_of lt", "have higha_q: \"higha q = (rep \\<propto> high) q\""], ["proof (prove)\nusing this:\n  \\<forall>pt\\<in>set_of lt.\n     lowa pt = (rep \\<propto> low) pt \\<and>\n     higha pt = (rep \\<propto> high) pt\n  q \\<in> set_of lt\n\ngoal (1 subgoal):\n 1. higha q = (rep \\<propto> high) q", "by simp"], ["proof (state)\nthis:\n  higha q = (rep \\<propto> high) q\n\ngoal (2 subgoals):\n 1. q \\<in> set_of lt \\<Longrightarrow>\n    (rep \\<propto> higha) q = (rep \\<propto> high) q\n 2. q \\<notin> set_of lt \\<Longrightarrow>\n    (rep \\<propto> higha) q = (rep \\<propto> high) q", "thus ?thesis"], ["proof (prove)\nusing this:\n  higha q = (rep \\<propto> high) q\n\ngoal (1 subgoal):\n 1. (rep \\<propto> higha) q = (rep \\<propto> high) q", "proof (cases \"high q = Null\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>higha q = (rep \\<propto> high) q; high q = Null\\<rbrakk>\n    \\<Longrightarrow> (rep \\<propto> higha) q = (rep \\<propto> high) q\n 2. \\<lbrakk>higha q = (rep \\<propto> high) q; high q \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> (rep \\<propto> higha) q = (rep \\<propto> high) q", "case True"], ["proof (state)\nthis:\n  high q = Null\n\ngoal (2 subgoals):\n 1. \\<lbrakk>higha q = (rep \\<propto> high) q; high q = Null\\<rbrakk>\n    \\<Longrightarrow> (rep \\<propto> higha) q = (rep \\<propto> high) q\n 2. \\<lbrakk>higha q = (rep \\<propto> high) q; high q \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> (rep \\<propto> higha) q = (rep \\<propto> high) q", "with higha_q"], ["proof (chain)\npicking this:\n  higha q = (rep \\<propto> high) q\n  high q = Null", "have \"higha q = Null\""], ["proof (prove)\nusing this:\n  higha q = (rep \\<propto> high) q\n  high q = Null\n\ngoal (1 subgoal):\n 1. higha q = Null", "by (simp add: null_comp_def)"], ["proof (state)\nthis:\n  higha q = Null\n\ngoal (2 subgoals):\n 1. \\<lbrakk>higha q = (rep \\<propto> high) q; high q = Null\\<rbrakk>\n    \\<Longrightarrow> (rep \\<propto> higha) q = (rep \\<propto> high) q\n 2. \\<lbrakk>higha q = (rep \\<propto> high) q; high q \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> (rep \\<propto> higha) q = (rep \\<propto> high) q", "with True"], ["proof (chain)\npicking this:\n  high q = Null\n  higha q = Null", "show ?thesis"], ["proof (prove)\nusing this:\n  high q = Null\n  higha q = Null\n\ngoal (1 subgoal):\n 1. (rep \\<propto> higha) q = (rep \\<propto> high) q", "by (simp add: null_comp_def)"], ["proof (state)\nthis:\n  (rep \\<propto> higha) q = (rep \\<propto> high) q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>higha q = (rep \\<propto> high) q; high q \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> (rep \\<propto> higha) q = (rep \\<propto> high) q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>higha q = (rep \\<propto> high) q; high q \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> (rep \\<propto> higha) q = (rep \\<propto> high) q", "assume hq_nNull: \"high q \\<noteq> Null\""], ["proof (state)\nthis:\n  high q \\<noteq> Null\n\ngoal (1 subgoal):\n 1. \\<lbrakk>higha q = (rep \\<propto> high) q; high q \\<noteq> Null\\<rbrakk>\n    \\<Longrightarrow> (rep \\<propto> higha) q = (rep \\<propto> high) q", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (rep \\<propto> higha) q = (rep \\<propto> high) q", "proof (cases \"(rep \\<propto> high) q = Null\")"], ["proof (state)\ngoal (2 subgoals):\n 1. (rep \\<propto> high) q = Null \\<Longrightarrow>\n    (rep \\<propto> higha) q = (rep \\<propto> high) q\n 2. (rep \\<propto> high) q \\<noteq> Null \\<Longrightarrow>\n    (rep \\<propto> higha) q = (rep \\<propto> high) q", "case True"], ["proof (state)\nthis:\n  (rep \\<propto> high) q = Null\n\ngoal (2 subgoals):\n 1. (rep \\<propto> high) q = Null \\<Longrightarrow>\n    (rep \\<propto> higha) q = (rep \\<propto> high) q\n 2. (rep \\<propto> high) q \\<noteq> Null \\<Longrightarrow>\n    (rep \\<propto> higha) q = (rep \\<propto> high) q", "with higha_q"], ["proof (chain)\npicking this:\n  higha q = (rep \\<propto> high) q\n  (rep \\<propto> high) q = Null", "have \"higha q = Null\""], ["proof (prove)\nusing this:\n  higha q = (rep \\<propto> high) q\n  (rep \\<propto> high) q = Null\n\ngoal (1 subgoal):\n 1. higha q = Null", "by simp"], ["proof (state)\nthis:\n  higha q = Null\n\ngoal (2 subgoals):\n 1. (rep \\<propto> high) q = Null \\<Longrightarrow>\n    (rep \\<propto> higha) q = (rep \\<propto> high) q\n 2. (rep \\<propto> high) q \\<noteq> Null \\<Longrightarrow>\n    (rep \\<propto> higha) q = (rep \\<propto> high) q", "with True"], ["proof (chain)\npicking this:\n  (rep \\<propto> high) q = Null\n  higha q = Null", "show ?thesis"], ["proof (prove)\nusing this:\n  (rep \\<propto> high) q = Null\n  higha q = Null\n\ngoal (1 subgoal):\n 1. (rep \\<propto> higha) q = (rep \\<propto> high) q", "by (simp add: null_comp_def)"], ["proof (state)\nthis:\n  (rep \\<propto> higha) q = (rep \\<propto> high) q\n\ngoal (1 subgoal):\n 1. (rep \\<propto> high) q \\<noteq> Null \\<Longrightarrow>\n    (rep \\<propto> higha) q = (rep \\<propto> high) q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (rep \\<propto> high) q \\<noteq> Null \\<Longrightarrow>\n    (rep \\<propto> higha) q = (rep \\<propto> high) q", "assume rhq_nNull: \"(rep \\<propto> high) q \\<noteq> Null\""], ["proof (state)\nthis:\n  (rep \\<propto> high) q \\<noteq> Null\n\ngoal (1 subgoal):\n 1. (rep \\<propto> high) q \\<noteq> Null \\<Longrightarrow>\n    (rep \\<propto> higha) q = (rep \\<propto> high) q", "with rrt higha_q"], ["proof (chain)\npicking this:\n  Dag ((rep \\<propto> high) q) (rep \\<propto> low) (rep \\<propto> high) rrt\n  higha q = (rep \\<propto> high) q\n  (rep \\<propto> high) q \\<noteq> Null", "have \"higha q \\<in> set_of rrt\""], ["proof (prove)\nusing this:\n  Dag ((rep \\<propto> high) q) (rep \\<propto> low) (rep \\<propto> high) rrt\n  higha q = (rep \\<propto> high) q\n  (rep \\<propto> high) q \\<noteq> Null\n\ngoal (1 subgoal):\n 1. higha q \\<in> set_of rrt", "by auto"], ["proof (state)\nthis:\n  higha q \\<in> set_of rrt\n\ngoal (1 subgoal):\n 1. (rep \\<propto> high) q \\<noteq> Null \\<Longrightarrow>\n    (rep \\<propto> higha) q = (rep \\<propto> high) q", "with Node.prems Node"], ["proof (chain)\npicking this:\n  Dag q (rep \\<propto> low) (rep \\<propto> high) (Node lrt q' rrt)\n  \\<forall>pt\\<in>set_of (Node lrt q' rrt). rep pt = pt\n  \\<lbrakk>Dag ?q (rep \\<propto> low) (rep \\<propto> high) lrt;\n   \\<forall>pt\\<in>set_of lrt. rep pt = pt\\<rbrakk>\n  \\<Longrightarrow> Dag ?q (rep \\<propto> lowa) (rep \\<propto> higha) lrt\n  \\<lbrakk>Dag ?q (rep \\<propto> low) (rep \\<propto> high) rrt;\n   \\<forall>pt\\<in>set_of rrt. rep pt = pt\\<rbrakk>\n  \\<Longrightarrow> Dag ?q (rep \\<propto> lowa) (rep \\<propto> higha) rrt\n  Dag q (rep \\<propto> low) (rep \\<propto> high) (Node lrt q' rrt)\n  \\<forall>pt\\<in>set_of (Node lrt q' rrt). rep pt = pt\n  higha q \\<in> set_of rrt", "have \"higha q \\<in> set_of (Node lrt q' rrt)\""], ["proof (prove)\nusing this:\n  Dag q (rep \\<propto> low) (rep \\<propto> high) (Node lrt q' rrt)\n  \\<forall>pt\\<in>set_of (Node lrt q' rrt). rep pt = pt\n  \\<lbrakk>Dag ?q (rep \\<propto> low) (rep \\<propto> high) lrt;\n   \\<forall>pt\\<in>set_of lrt. rep pt = pt\\<rbrakk>\n  \\<Longrightarrow> Dag ?q (rep \\<propto> lowa) (rep \\<propto> higha) lrt\n  \\<lbrakk>Dag ?q (rep \\<propto> low) (rep \\<propto> high) rrt;\n   \\<forall>pt\\<in>set_of rrt. rep pt = pt\\<rbrakk>\n  \\<Longrightarrow> Dag ?q (rep \\<propto> lowa) (rep \\<propto> higha) rrt\n  Dag q (rep \\<propto> low) (rep \\<propto> high) (Node lrt q' rrt)\n  \\<forall>pt\\<in>set_of (Node lrt q' rrt). rep pt = pt\n  higha q \\<in> set_of rrt\n\ngoal (1 subgoal):\n 1. higha q \\<in> set_of (Node lrt q' rrt)", "by simp"], ["proof (state)\nthis:\n  higha q \\<in> set_of (Node lrt q' rrt)\n\ngoal (1 subgoal):\n 1. (rep \\<propto> high) q \\<noteq> Null \\<Longrightarrow>\n    (rep \\<propto> higha) q = (rep \\<propto> high) q", "with Node.prems"], ["proof (chain)\npicking this:\n  Dag q (rep \\<propto> low) (rep \\<propto> high) (Node lrt q' rrt)\n  \\<forall>pt\\<in>set_of (Node lrt q' rrt). rep pt = pt\n  higha q \\<in> set_of (Node lrt q' rrt)", "have \"rep (higha q) = higha q\""], ["proof (prove)\nusing this:\n  Dag q (rep \\<propto> low) (rep \\<propto> high) (Node lrt q' rrt)\n  \\<forall>pt\\<in>set_of (Node lrt q' rrt). rep pt = pt\n  higha q \\<in> set_of (Node lrt q' rrt)\n\ngoal (1 subgoal):\n 1. rep (higha q) = higha q", "by auto"], ["proof (state)\nthis:\n  rep (higha q) = higha q\n\ngoal (1 subgoal):\n 1. (rep \\<propto> high) q \\<noteq> Null \\<Longrightarrow>\n    (rep \\<propto> higha) q = (rep \\<propto> high) q", "with higha_q rhq_nNull"], ["proof (chain)\npicking this:\n  higha q = (rep \\<propto> high) q\n  (rep \\<propto> high) q \\<noteq> Null\n  rep (higha q) = higha q", "show ?thesis"], ["proof (prove)\nusing this:\n  higha q = (rep \\<propto> high) q\n  (rep \\<propto> high) q \\<noteq> Null\n  rep (higha q) = higha q\n\ngoal (1 subgoal):\n 1. (rep \\<propto> higha) q = (rep \\<propto> high) q", "by (simp add: null_comp_def)"], ["proof (state)\nthis:\n  (rep \\<propto> higha) q = (rep \\<propto> high) q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (rep \\<propto> higha) q = (rep \\<propto> high) q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (rep \\<propto> higha) q = (rep \\<propto> high) q\n\ngoal (1 subgoal):\n 1. q \\<notin> set_of lt \\<Longrightarrow>\n    (rep \\<propto> higha) q = (rep \\<propto> high) q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. q \\<notin> set_of lt \\<Longrightarrow>\n    (rep \\<propto> higha) q = (rep \\<propto> high) q", "assume q_notin_lt: \" q \\<notin> set_of lt\""], ["proof (state)\nthis:\n  q \\<notin> set_of lt\n\ngoal (1 subgoal):\n 1. q \\<notin> set_of lt \\<Longrightarrow>\n    (rep \\<propto> higha) q = (rep \\<propto> high) q", "with pt_same"], ["proof (chain)\npicking this:\n  \\<forall>pt.\n     pt \\<notin> set_of lt \\<longrightarrow>\n     low pt = lowa pt \\<and> high pt = higha pt\n  q \\<notin> set_of lt", "have \"high q = higha q\""], ["proof (prove)\nusing this:\n  \\<forall>pt.\n     pt \\<notin> set_of lt \\<longrightarrow>\n     low pt = lowa pt \\<and> high pt = higha pt\n  q \\<notin> set_of lt\n\ngoal (1 subgoal):\n 1. high q = higha q", "by auto"], ["proof (state)\nthis:\n  high q = higha q\n\ngoal (1 subgoal):\n 1. q \\<notin> set_of lt \\<Longrightarrow>\n    (rep \\<propto> higha) q = (rep \\<propto> high) q", "thus ?thesis"], ["proof (prove)\nusing this:\n  high q = higha q\n\ngoal (1 subgoal):\n 1. (rep \\<propto> higha) q = (rep \\<propto> high) q", "by (simp add: null_comp_def)"], ["proof (state)\nthis:\n  (rep \\<propto> higha) q = (rep \\<propto> high) q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (rep \\<propto> higha) q = (rep \\<propto> high) q\n\ngoal (1 subgoal):\n 1. \\<And>rt1 x2 rt2 q.\n       \\<lbrakk>\\<And>q.\n                   \\<lbrakk>Dag q (rep \\<propto> low) (rep \\<propto> high)\n                             rt1;\n                    \\<forall>pt\\<in>set_of rt1. rep pt = pt\\<rbrakk>\n                   \\<Longrightarrow> Dag q (rep \\<propto> lowa)\n(rep \\<propto> higha) rt1;\n        \\<And>q.\n           \\<lbrakk>Dag q (rep \\<propto> low) (rep \\<propto> high) rt2;\n            \\<forall>pt\\<in>set_of rt2. rep pt = pt\\<rbrakk>\n           \\<Longrightarrow> Dag q (rep \\<propto> lowa)\n                              (rep \\<propto> higha) rt2;\n        Dag q (rep \\<propto> low) (rep \\<propto> high) (Node rt1 x2 rt2);\n        \\<forall>pt\\<in>set_of (Node rt1 x2 rt2). rep pt = pt\\<rbrakk>\n       \\<Longrightarrow> Dag q (rep \\<propto> lowa) (rep \\<propto> higha)\n                          (Node rt1 x2 rt2)", "with rrt"], ["proof (chain)\npicking this:\n  Dag ((rep \\<propto> high) q) (rep \\<propto> low) (rep \\<propto> high) rrt\n  (rep \\<propto> higha) q = (rep \\<propto> high) q", "have rhigha_mixed_dag: \n    \"Dag ((rep \\<propto> higha) q) (rep \\<propto> low) (rep \\<propto> high) rrt\""], ["proof (prove)\nusing this:\n  Dag ((rep \\<propto> high) q) (rep \\<propto> low) (rep \\<propto> high) rrt\n  (rep \\<propto> higha) q = (rep \\<propto> high) q\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> higha) q) (rep \\<propto> low) (rep \\<propto> high)\n     rrt", "by simp"], ["proof (state)\nthis:\n  Dag ((rep \\<propto> higha) q) (rep \\<propto> low) (rep \\<propto> high) rrt\n\ngoal (1 subgoal):\n 1. \\<And>rt1 x2 rt2 q.\n       \\<lbrakk>\\<And>q.\n                   \\<lbrakk>Dag q (rep \\<propto> low) (rep \\<propto> high)\n                             rt1;\n                    \\<forall>pt\\<in>set_of rt1. rep pt = pt\\<rbrakk>\n                   \\<Longrightarrow> Dag q (rep \\<propto> lowa)\n(rep \\<propto> higha) rt1;\n        \\<And>q.\n           \\<lbrakk>Dag q (rep \\<propto> low) (rep \\<propto> high) rt2;\n            \\<forall>pt\\<in>set_of rt2. rep pt = pt\\<rbrakk>\n           \\<Longrightarrow> Dag q (rep \\<propto> lowa)\n                              (rep \\<propto> higha) rt2;\n        Dag q (rep \\<propto> low) (rep \\<propto> high) (Node rt1 x2 rt2);\n        \\<forall>pt\\<in>set_of (Node rt1 x2 rt2). rep pt = pt\\<rbrakk>\n       \\<Longrightarrow> Dag q (rep \\<propto> lowa) (rep \\<propto> higha)\n                          (Node rt1 x2 rt2)", "from lrt rlowa_rlow"], ["proof (chain)\npicking this:\n  Dag ((rep \\<propto> low) q) (rep \\<propto> low) (rep \\<propto> high) lrt\n  (rep \\<propto> lowa) q = (rep \\<propto> low) q", "have rlowa_mixed_dag: \n    \" Dag ((rep \\<propto> lowa) q) (rep \\<propto> low) (rep \\<propto> high) lrt\""], ["proof (prove)\nusing this:\n  Dag ((rep \\<propto> low) q) (rep \\<propto> low) (rep \\<propto> high) lrt\n  (rep \\<propto> lowa) q = (rep \\<propto> low) q\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> lowa) q) (rep \\<propto> low) (rep \\<propto> high)\n     lrt", "by simp"], ["proof (state)\nthis:\n  Dag ((rep \\<propto> lowa) q) (rep \\<propto> low) (rep \\<propto> high) lrt\n\ngoal (1 subgoal):\n 1. \\<And>rt1 x2 rt2 q.\n       \\<lbrakk>\\<And>q.\n                   \\<lbrakk>Dag q (rep \\<propto> low) (rep \\<propto> high)\n                             rt1;\n                    \\<forall>pt\\<in>set_of rt1. rep pt = pt\\<rbrakk>\n                   \\<Longrightarrow> Dag q (rep \\<propto> lowa)\n(rep \\<propto> higha) rt1;\n        \\<And>q.\n           \\<lbrakk>Dag q (rep \\<propto> low) (rep \\<propto> high) rt2;\n            \\<forall>pt\\<in>set_of rt2. rep pt = pt\\<rbrakk>\n           \\<Longrightarrow> Dag q (rep \\<propto> lowa)\n                              (rep \\<propto> higha) rt2;\n        Dag q (rep \\<propto> low) (rep \\<propto> high) (Node rt1 x2 rt2);\n        \\<forall>pt\\<in>set_of (Node rt1 x2 rt2). rep pt = pt\\<rbrakk>\n       \\<Longrightarrow> Dag q (rep \\<propto> lowa) (rep \\<propto> higha)\n                          (Node rt1 x2 rt2)", "from Node.prems"], ["proof (chain)\npicking this:\n  Dag q (rep \\<propto> low) (rep \\<propto> high) (Node lrt q' rrt)\n  \\<forall>pt\\<in>set_of (Node lrt q' rrt). rep pt = pt", "have lrt_rep_eq: \" \\<forall>pt\\<in>set_of lrt. rep pt = pt\""], ["proof (prove)\nusing this:\n  Dag q (rep \\<propto> low) (rep \\<propto> high) (Node lrt q' rrt)\n  \\<forall>pt\\<in>set_of (Node lrt q' rrt). rep pt = pt\n\ngoal (1 subgoal):\n 1. \\<forall>pt\\<in>set_of lrt. rep pt = pt", "by simp"], ["proof (state)\nthis:\n  \\<forall>pt\\<in>set_of lrt. rep pt = pt\n\ngoal (1 subgoal):\n 1. \\<And>rt1 x2 rt2 q.\n       \\<lbrakk>\\<And>q.\n                   \\<lbrakk>Dag q (rep \\<propto> low) (rep \\<propto> high)\n                             rt1;\n                    \\<forall>pt\\<in>set_of rt1. rep pt = pt\\<rbrakk>\n                   \\<Longrightarrow> Dag q (rep \\<propto> lowa)\n(rep \\<propto> higha) rt1;\n        \\<And>q.\n           \\<lbrakk>Dag q (rep \\<propto> low) (rep \\<propto> high) rt2;\n            \\<forall>pt\\<in>set_of rt2. rep pt = pt\\<rbrakk>\n           \\<Longrightarrow> Dag q (rep \\<propto> lowa)\n                              (rep \\<propto> higha) rt2;\n        Dag q (rep \\<propto> low) (rep \\<propto> high) (Node rt1 x2 rt2);\n        \\<forall>pt\\<in>set_of (Node rt1 x2 rt2). rep pt = pt\\<rbrakk>\n       \\<Longrightarrow> Dag q (rep \\<propto> lowa) (rep \\<propto> higha)\n                          (Node rt1 x2 rt2)", "from Node.prems"], ["proof (chain)\npicking this:\n  Dag q (rep \\<propto> low) (rep \\<propto> high) (Node lrt q' rrt)\n  \\<forall>pt\\<in>set_of (Node lrt q' rrt). rep pt = pt", "have rrt_rep_eq: \"\\<forall>pt\\<in>set_of rrt. rep pt = pt\""], ["proof (prove)\nusing this:\n  Dag q (rep \\<propto> low) (rep \\<propto> high) (Node lrt q' rrt)\n  \\<forall>pt\\<in>set_of (Node lrt q' rrt). rep pt = pt\n\ngoal (1 subgoal):\n 1. \\<forall>pt\\<in>set_of rrt. rep pt = pt", "by simp"], ["proof (state)\nthis:\n  \\<forall>pt\\<in>set_of rrt. rep pt = pt\n\ngoal (1 subgoal):\n 1. \\<And>rt1 x2 rt2 q.\n       \\<lbrakk>\\<And>q.\n                   \\<lbrakk>Dag q (rep \\<propto> low) (rep \\<propto> high)\n                             rt1;\n                    \\<forall>pt\\<in>set_of rt1. rep pt = pt\\<rbrakk>\n                   \\<Longrightarrow> Dag q (rep \\<propto> lowa)\n(rep \\<propto> higha) rt1;\n        \\<And>q.\n           \\<lbrakk>Dag q (rep \\<propto> low) (rep \\<propto> high) rt2;\n            \\<forall>pt\\<in>set_of rt2. rep pt = pt\\<rbrakk>\n           \\<Longrightarrow> Dag q (rep \\<propto> lowa)\n                              (rep \\<propto> higha) rt2;\n        Dag q (rep \\<propto> low) (rep \\<propto> high) (Node rt1 x2 rt2);\n        \\<forall>pt\\<in>set_of (Node rt1 x2 rt2). rep pt = pt\\<rbrakk>\n       \\<Longrightarrow> Dag q (rep \\<propto> lowa) (rep \\<propto> higha)\n                          (Node rt1 x2 rt2)", "from rlowa_mixed_dag lrt_rep_eq"], ["proof (chain)\npicking this:\n  Dag ((rep \\<propto> lowa) q) (rep \\<propto> low) (rep \\<propto> high) lrt\n  \\<forall>pt\\<in>set_of lrt. rep pt = pt", "have lowa_lrt: \n    \" Dag ((rep \\<propto> lowa) q) (rep \\<propto> lowa) (rep \\<propto> higha) lrt\""], ["proof (prove)\nusing this:\n  Dag ((rep \\<propto> lowa) q) (rep \\<propto> low) (rep \\<propto> high) lrt\n  \\<forall>pt\\<in>set_of lrt. rep pt = pt\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> lowa) q) (rep \\<propto> lowa) (rep \\<propto> higha)\n     lrt", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag ((rep \\<propto> lowa) q) (rep \\<propto> low)\n              (rep \\<propto> high) lrt;\n     \\<forall>pt\\<in>set_of lrt. rep pt = pt\\<rbrakk>\n    \\<Longrightarrow> Dag ((rep \\<propto> lowa) q) (rep \\<propto> lowa)\n                       (rep \\<propto> higha) lrt", "apply (rule Node.hyps)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Dag ((rep \\<propto> lowa) q) (rep \\<propto> low)\n              (rep \\<propto> high) lrt;\n     \\<forall>pt\\<in>set_of lrt. rep pt = pt\\<rbrakk>\n    \\<Longrightarrow> Dag ((rep \\<propto> lowa) q) (rep \\<propto> low)\n                       (rep \\<propto> high) lrt\n 2. \\<lbrakk>Dag ((rep \\<propto> lowa) q) (rep \\<propto> low)\n              (rep \\<propto> high) lrt;\n     \\<forall>pt\\<in>set_of lrt. rep pt = pt\\<rbrakk>\n    \\<Longrightarrow> \\<forall>pt\\<in>set_of lrt. rep pt = pt", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  Dag ((rep \\<propto> lowa) q) (rep \\<propto> lowa) (rep \\<propto> higha)\n   lrt\n\ngoal (1 subgoal):\n 1. \\<And>rt1 x2 rt2 q.\n       \\<lbrakk>\\<And>q.\n                   \\<lbrakk>Dag q (rep \\<propto> low) (rep \\<propto> high)\n                             rt1;\n                    \\<forall>pt\\<in>set_of rt1. rep pt = pt\\<rbrakk>\n                   \\<Longrightarrow> Dag q (rep \\<propto> lowa)\n(rep \\<propto> higha) rt1;\n        \\<And>q.\n           \\<lbrakk>Dag q (rep \\<propto> low) (rep \\<propto> high) rt2;\n            \\<forall>pt\\<in>set_of rt2. rep pt = pt\\<rbrakk>\n           \\<Longrightarrow> Dag q (rep \\<propto> lowa)\n                              (rep \\<propto> higha) rt2;\n        Dag q (rep \\<propto> low) (rep \\<propto> high) (Node rt1 x2 rt2);\n        \\<forall>pt\\<in>set_of (Node rt1 x2 rt2). rep pt = pt\\<rbrakk>\n       \\<Longrightarrow> Dag q (rep \\<propto> lowa) (rep \\<propto> higha)\n                          (Node rt1 x2 rt2)", "from rhigha_mixed_dag rrt_rep_eq"], ["proof (chain)\npicking this:\n  Dag ((rep \\<propto> higha) q) (rep \\<propto> low) (rep \\<propto> high) rrt\n  \\<forall>pt\\<in>set_of rrt. rep pt = pt", "have higha_rrt: \n    \" Dag ((rep \\<propto> higha) q) (rep \\<propto> lowa) (rep \\<propto> higha) rrt\""], ["proof (prove)\nusing this:\n  Dag ((rep \\<propto> higha) q) (rep \\<propto> low) (rep \\<propto> high) rrt\n  \\<forall>pt\\<in>set_of rrt. rep pt = pt\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> higha) q) (rep \\<propto> lowa) (rep \\<propto> higha)\n     rrt", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag ((rep \\<propto> higha) q) (rep \\<propto> low)\n              (rep \\<propto> high) rrt;\n     \\<forall>pt\\<in>set_of rrt. rep pt = pt\\<rbrakk>\n    \\<Longrightarrow> Dag ((rep \\<propto> higha) q) (rep \\<propto> lowa)\n                       (rep \\<propto> higha) rrt", "apply (rule Node.hyps)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Dag ((rep \\<propto> higha) q) (rep \\<propto> low)\n              (rep \\<propto> high) rrt;\n     \\<forall>pt\\<in>set_of rrt. rep pt = pt\\<rbrakk>\n    \\<Longrightarrow> Dag ((rep \\<propto> higha) q) (rep \\<propto> low)\n                       (rep \\<propto> high) rrt\n 2. \\<lbrakk>Dag ((rep \\<propto> higha) q) (rep \\<propto> low)\n              (rep \\<propto> high) rrt;\n     \\<forall>pt\\<in>set_of rrt. rep pt = pt\\<rbrakk>\n    \\<Longrightarrow> \\<forall>pt\\<in>set_of rrt. rep pt = pt", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  Dag ((rep \\<propto> higha) q) (rep \\<propto> lowa) (rep \\<propto> higha)\n   rrt\n\ngoal (1 subgoal):\n 1. \\<And>rt1 x2 rt2 q.\n       \\<lbrakk>\\<And>q.\n                   \\<lbrakk>Dag q (rep \\<propto> low) (rep \\<propto> high)\n                             rt1;\n                    \\<forall>pt\\<in>set_of rt1. rep pt = pt\\<rbrakk>\n                   \\<Longrightarrow> Dag q (rep \\<propto> lowa)\n(rep \\<propto> higha) rt1;\n        \\<And>q.\n           \\<lbrakk>Dag q (rep \\<propto> low) (rep \\<propto> high) rt2;\n            \\<forall>pt\\<in>set_of rt2. rep pt = pt\\<rbrakk>\n           \\<Longrightarrow> Dag q (rep \\<propto> lowa)\n                              (rep \\<propto> higha) rt2;\n        Dag q (rep \\<propto> low) (rep \\<propto> high) (Node rt1 x2 rt2);\n        \\<forall>pt\\<in>set_of (Node rt1 x2 rt2). rep pt = pt\\<rbrakk>\n       \\<Longrightarrow> Dag q (rep \\<propto> lowa) (rep \\<propto> higha)\n                          (Node rt1 x2 rt2)", "with lowa_lrt q' q_notNull"], ["proof (chain)\npicking this:\n  Dag ((rep \\<propto> lowa) q) (rep \\<propto> lowa) (rep \\<propto> higha)\n   lrt\n  q = q'\n  q \\<noteq> Null\n  Dag ((rep \\<propto> higha) q) (rep \\<propto> lowa) (rep \\<propto> higha)\n   rrt", "show \" Dag q (rep \\<propto> lowa) (rep \\<propto> higha) (Node lrt q' rrt)\""], ["proof (prove)\nusing this:\n  Dag ((rep \\<propto> lowa) q) (rep \\<propto> lowa) (rep \\<propto> higha)\n   lrt\n  q = q'\n  q \\<noteq> Null\n  Dag ((rep \\<propto> higha) q) (rep \\<propto> lowa) (rep \\<propto> higha)\n   rrt\n\ngoal (1 subgoal):\n 1. Dag q (rep \\<propto> lowa) (rep \\<propto> higha) (Node lrt q' rrt)", "by simp"], ["proof (state)\nthis:\n  Dag q (rep \\<propto> lowa) (rep \\<propto> higha) (Node lrt q' rrt)\n\ngoal:\nNo subgoals!", "qed"], ["", "(*lemma Repoint_spec :\nincludes Repoint_impl \nshows  \n  \"\\<forall>\\<sigma> rept. \\<Gamma>\\<turnstile> \\<lbrace>\\<sigma>. (Dag ((\\<^bsup>\\<sigma>\\<^esup>rep \\<propto> id) \\<^bsup>\\<sigma>\\<^esup>p) (\\<^bsup>\\<sigma>\\<^esup>rep \\<propto> \\<^bsup>\\<sigma>\\<^esup>low) (\\<^bsup>\\<sigma>\\<^esup>rep \\<propto> \\<^bsup>\\<sigma>\\<^esup>high) rept) \n  \\<and> (\\<forall> no \\<in> set_of rept. \\<^bsup>\\<sigma>\\<^esup>rep no = no) \\<rbrace>\n  \\<acute>p :== CALL Repoint (\\<acute>p)\n  \\<lbrace>Dag \\<acute>p \\<acute>low \\<acute>high rept \\<and>\n  (\\<forall>pt. pt \\<notin> set_of rept \\<longrightarrow> \\<^bsup>\\<sigma>\\<^esup>low pt = \\<acute>low pt \\<and> \\<^bsup>\\<sigma>\\<^esup>high pt = \\<acute>high pt)\\<rbrace>\"\napply (hoare_rule CallRec1_SamePost)\napply (vcg)\napply  (rule conjI)\napply  clarify\nprefer 2\napply (intro impI allI )\napply (simp add: null_comp_def)\napply (rule conjI)\nprefer 2\napply (clarsimp)\napply clarify\n*)"], ["", "lemma (in Repoint_impl) Repoint_spec':\nshows \n  \"\\<forall>\\<sigma>. \\<Gamma>\\<turnstile> {\\<sigma>}\n  \\<acute>p :== PROC Repoint (\\<acute>p)\n  \\<lbrace>\\<forall> rept. ((Dag ((\\<^bsup>\\<sigma>\\<^esup>rep \\<propto> id) \\<^bsup>\\<sigma>\\<^esup>p) (\\<^bsup>\\<sigma>\\<^esup>rep \\<propto> \\<^bsup>\\<sigma>\\<^esup>low) (\\<^bsup>\\<sigma>\\<^esup>rep \\<propto> \\<^bsup>\\<sigma>\\<^esup>high) rept) \n  \\<and> (\\<forall> no \\<in> set_of rept. \\<^bsup>\\<sigma>\\<^esup>rep no = no))\n  \\<longrightarrow> Dag \\<acute>p \\<acute>low \\<acute>high rept \\<and>\n  (\\<forall>pt. pt \\<notin> set_of rept \\<longrightarrow> \\<^bsup>\\<sigma>\\<^esup>low pt = \\<acute>low pt \\<and> \\<^bsup>\\<sigma>\\<^esup>high pt = \\<acute>high pt)\\<rbrace>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<sigma>.\n       \\<Gamma>\n          \\<turnstile> {\\<sigma>} \\<acute>p :== PROC Repoint(\\<acute>p)\n                       \\<lbrace>\\<forall>rept.\n                                   Dag ((\\<^bsup>\\<sigma>\\<^esup>rep \\<propto>\n   id)\n   \\<^bsup>\\<sigma>\\<^esup>p)\n                                    (\\<^bsup>\\<sigma>\\<^esup>rep \\<propto>\n                                     \\<^bsup>\\<sigma>\\<^esup>low)\n                                    (\\<^bsup>\\<sigma>\\<^esup>rep \\<propto>\n                                     \\<^bsup>\\<sigma>\\<^esup>high)\n                                    rept \\<and>\n                                   (\\<forall>no\\<in>set_of rept.\n \\<^bsup>\\<sigma>\\<^esup>rep no = no) \\<longrightarrow>\n                                   Dag \\<acute>p \\<acute>low \\<acute>high\n                                    rept \\<and>\n                                   (\\<forall>pt.\n pt \\<notin> set_of rept \\<longrightarrow>\n \\<^bsup>\\<sigma>\\<^esup>low pt = pt\\<rightarrow>\\<acute>low \\<and>\n \\<^bsup>\\<sigma>\\<^esup>high pt = pt\\<rightarrow>\\<acute>high)\\<rbrace>", "apply (hoare_rule HoarePartial.ProcRec1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<sigma>.\n       \\<Gamma>,(\\<Union>\\<sigma>.\n                    {({\\<sigma>}, Repoint_'proc,\n                      \\<lbrace>\\<forall>rept.\n                                  Dag ((\\<^bsup>\\<sigma>\\<^esup>rep \\<propto>\n  id)\n  \\<^bsup>\\<sigma>\\<^esup>p)\n                                   (\\<^bsup>\\<sigma>\\<^esup>rep \\<propto>\n                                    \\<^bsup>\\<sigma>\\<^esup>low)\n                                   (\\<^bsup>\\<sigma>\\<^esup>rep \\<propto>\n                                    \\<^bsup>\\<sigma>\\<^esup>high)\n                                   rept \\<and>\n                                  (\\<forall>no\\<in>set_of rept.\n\\<^bsup>\\<sigma>\\<^esup>rep no = no) \\<longrightarrow>\n                                  Dag \\<acute>p \\<acute>low \\<acute>high\n                                   rept \\<and>\n                                  (\\<forall>pt.\npt \\<notin> set_of rept \\<longrightarrow>\n\\<^bsup>\\<sigma>\\<^esup>low pt = pt\\<rightarrow>\\<acute>low \\<and>\n\\<^bsup>\\<sigma>\\<^esup>high pt = pt\\<rightarrow>\\<acute>high)\\<rbrace>,\n                      {})})\n          \\<turnstile> {\\<sigma>}\n                       IF \\<acute>p \\<noteq> Null\n                       THEN \\<acute>p :==\n                            \\<acute>p\\<rightarrow>\\<acute>rep;;\n                         IF \\<acute>p \\<noteq> Null\n                         THEN \\<acute>p\\<rightarrow>\\<acute>low :== CALL Repoint(\\<acute>p\\<rightarrow>\\<acute>low);;\n                           \\<acute>p\\<rightarrow>\\<acute>high :== CALL Repoint(\\<acute>p\\<rightarrow>\\<acute>high)\n                         FI\n                       FI\n                       \\<lbrace>\\<forall>rept.\n                                   Dag ((\\<^bsup>\\<sigma>\\<^esup>rep \\<propto>\n   id)\n   \\<^bsup>\\<sigma>\\<^esup>p)\n                                    (\\<^bsup>\\<sigma>\\<^esup>rep \\<propto>\n                                     \\<^bsup>\\<sigma>\\<^esup>low)\n                                    (\\<^bsup>\\<sigma>\\<^esup>rep \\<propto>\n                                     \\<^bsup>\\<sigma>\\<^esup>high)\n                                    rept \\<and>\n                                   (\\<forall>no\\<in>set_of rept.\n \\<^bsup>\\<sigma>\\<^esup>rep no = no) \\<longrightarrow>\n                                   Dag \\<acute>p \\<acute>low \\<acute>high\n                                    rept \\<and>\n                                   (\\<forall>pt.\n pt \\<notin> set_of rept \\<longrightarrow>\n \\<^bsup>\\<sigma>\\<^esup>low pt = pt\\<rightarrow>\\<acute>low \\<and>\n \\<^bsup>\\<sigma>\\<^esup>high pt = pt\\<rightarrow>\\<acute>high)\\<rbrace>", "apply vcg"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>low high rep p.\n       (p \\<noteq> Null \\<longrightarrow>\n        (rep p \\<noteq> Null \\<longrightarrow>\n         (\\<forall>lowa higha pa.\n             (\\<forall>rept.\n                 Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n                  (rep \\<propto> high) rept \\<and>\n                 (\\<forall>no\\<in>set_of rept.\n                     rep no = no) \\<longrightarrow>\n                 Dag pa lowa higha rept \\<and>\n                 (\\<forall>pt.\n                     pt \\<notin> set_of rept \\<longrightarrow>\n                     low pt = lowa pt \\<and>\n                     high pt = higha pt)) \\<longrightarrow>\n             (\\<forall>lowb highb pb.\n                 (\\<forall>rept.\n                     Dag ((rep \\<propto> id) (higha (rep p)))\n                      (rep \\<propto> lowa(rep p := pa))\n                      (rep \\<propto> higha) rept \\<and>\n                     (\\<forall>no\\<in>set_of rept.\n                         rep no = no) \\<longrightarrow>\n                     Dag pb lowb highb rept \\<and>\n                     (\\<forall>pt.\n                         pt \\<notin> set_of rept \\<longrightarrow>\n                         (lowa(rep p := pa)) pt = lowb pt \\<and>\n                         higha pt = highb pt)) \\<longrightarrow>\n                 (\\<forall>rept.\n                     Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                      (rep \\<propto> high) rept \\<and>\n                     (\\<forall>no\\<in>set_of rept.\n                         rep no = no) \\<longrightarrow>\n                     Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                     (\\<forall>pt.\n                         pt \\<notin> set_of rept \\<longrightarrow>\n                         low pt = lowb pt \\<and>\n                         high pt = (highb(rep p := pb)) pt))))) \\<and>\n        (\\<not> rep p \\<noteq> Null \\<longrightarrow>\n         (\\<forall>rept.\n             Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n              (rep \\<propto> high) rept \\<and>\n             (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n             Dag (rep p) low high rept \\<and>\n             (\\<forall>pt.\n                 pt \\<notin> set_of rept \\<longrightarrow>\n                 low pt = low pt \\<and> high pt = high pt)))) \\<and>\n       (\\<not> p \\<noteq> Null \\<longrightarrow>\n        (\\<forall>rept.\n            Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n             (rep \\<propto> high) rept \\<and>\n            (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n            Dag p low high rept \\<and>\n            (\\<forall>pt.\n                pt \\<notin> set_of rept \\<longrightarrow>\n                low pt = low pt \\<and> high pt = high pt)))", "apply  (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>low high rep p.\n       p \\<noteq> Null \\<longrightarrow>\n       (rep p \\<noteq> Null \\<longrightarrow>\n        (\\<forall>lowa higha pa.\n            (\\<forall>rept.\n                Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n                 (rep \\<propto> high) rept \\<and>\n                (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n                Dag pa lowa higha rept \\<and>\n                (\\<forall>pt.\n                    pt \\<notin> set_of rept \\<longrightarrow>\n                    low pt = lowa pt \\<and>\n                    high pt = higha pt)) \\<longrightarrow>\n            (\\<forall>lowb highb pb.\n                (\\<forall>rept.\n                    Dag ((rep \\<propto> id) (higha (rep p)))\n                     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n                     rept \\<and>\n                    (\\<forall>no\\<in>set_of rept.\n                        rep no = no) \\<longrightarrow>\n                    Dag pb lowb highb rept \\<and>\n                    (\\<forall>pt.\n                        pt \\<notin> set_of rept \\<longrightarrow>\n                        (lowa(rep p := pa)) pt = lowb pt \\<and>\n                        higha pt = highb pt)) \\<longrightarrow>\n                (\\<forall>rept.\n                    Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                     (rep \\<propto> high) rept \\<and>\n                    (\\<forall>no\\<in>set_of rept.\n                        rep no = no) \\<longrightarrow>\n                    Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                    (\\<forall>pt.\n                        pt \\<notin> set_of rept \\<longrightarrow>\n                        low pt = lowb pt \\<and>\n                        high pt = (highb(rep p := pb)) pt))))) \\<and>\n       (\\<not> rep p \\<noteq> Null \\<longrightarrow>\n        (\\<forall>rept.\n            Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n             (rep \\<propto> high) rept \\<and>\n            (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n            Dag (rep p) low high rept \\<and>\n            (\\<forall>pt.\n                pt \\<notin> set_of rept \\<longrightarrow>\n                low pt = low pt \\<and> high pt = high pt)))\n 2. \\<And>low high rep p.\n       \\<not> p \\<noteq> Null \\<longrightarrow>\n       (\\<forall>rept.\n           Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n            (rep \\<propto> high) rept \\<and>\n           (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n           Dag p low high rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               low pt = low pt \\<and> high pt = high pt))", "apply  clarify"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>low high rep p.\n       p \\<noteq> Null \\<Longrightarrow>\n       (rep p \\<noteq> Null \\<longrightarrow>\n        (\\<forall>lowa higha pa.\n            (\\<forall>rept.\n                Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n                 (rep \\<propto> high) rept \\<and>\n                (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n                Dag pa lowa higha rept \\<and>\n                (\\<forall>pt.\n                    pt \\<notin> set_of rept \\<longrightarrow>\n                    low pt = lowa pt \\<and>\n                    high pt = higha pt)) \\<longrightarrow>\n            (\\<forall>lowb highb pb.\n                (\\<forall>rept.\n                    Dag ((rep \\<propto> id) (higha (rep p)))\n                     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n                     rept \\<and>\n                    (\\<forall>no\\<in>set_of rept.\n                        rep no = no) \\<longrightarrow>\n                    Dag pb lowb highb rept \\<and>\n                    (\\<forall>pt.\n                        pt \\<notin> set_of rept \\<longrightarrow>\n                        (lowa(rep p := pa)) pt = lowb pt \\<and>\n                        higha pt = highb pt)) \\<longrightarrow>\n                (\\<forall>rept.\n                    Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                     (rep \\<propto> high) rept \\<and>\n                    (\\<forall>no\\<in>set_of rept.\n                        rep no = no) \\<longrightarrow>\n                    Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                    (\\<forall>pt.\n                        pt \\<notin> set_of rept \\<longrightarrow>\n                        low pt = lowb pt \\<and>\n                        high pt = (highb(rep p := pb)) pt))))) \\<and>\n       (\\<not> rep p \\<noteq> Null \\<longrightarrow>\n        (\\<forall>rept.\n            Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n             (rep \\<propto> high) rept \\<and>\n            (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n            Dag (rep p) low high rept \\<and>\n            (\\<forall>pt.\n                pt \\<notin> set_of rept \\<longrightarrow>\n                low pt = low pt \\<and> high pt = high pt)))\n 2. \\<And>low high rep p.\n       \\<not> p \\<noteq> Null \\<longrightarrow>\n       (\\<forall>rept.\n           Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n            (rep \\<propto> high) rept \\<and>\n           (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n           Dag p low high rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               low pt = low pt \\<and> high pt = high pt))", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>low high rep p.\n       \\<not> p \\<noteq> Null \\<longrightarrow>\n       (\\<forall>rept.\n           Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n            (rep \\<propto> high) rept \\<and>\n           (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n           Dag p low high rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               low pt = low pt \\<and> high pt = high pt))\n 2. \\<And>low high rep p.\n       p \\<noteq> Null \\<Longrightarrow>\n       (rep p \\<noteq> Null \\<longrightarrow>\n        (\\<forall>lowa higha pa.\n            (\\<forall>rept.\n                Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n                 (rep \\<propto> high) rept \\<and>\n                (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n                Dag pa lowa higha rept \\<and>\n                (\\<forall>pt.\n                    pt \\<notin> set_of rept \\<longrightarrow>\n                    low pt = lowa pt \\<and>\n                    high pt = higha pt)) \\<longrightarrow>\n            (\\<forall>lowb highb pb.\n                (\\<forall>rept.\n                    Dag ((rep \\<propto> id) (higha (rep p)))\n                     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n                     rept \\<and>\n                    (\\<forall>no\\<in>set_of rept.\n                        rep no = no) \\<longrightarrow>\n                    Dag pb lowb highb rept \\<and>\n                    (\\<forall>pt.\n                        pt \\<notin> set_of rept \\<longrightarrow>\n                        (lowa(rep p := pa)) pt = lowb pt \\<and>\n                        higha pt = highb pt)) \\<longrightarrow>\n                (\\<forall>rept.\n                    Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                     (rep \\<propto> high) rept \\<and>\n                    (\\<forall>no\\<in>set_of rept.\n                        rep no = no) \\<longrightarrow>\n                    Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                    (\\<forall>pt.\n                        pt \\<notin> set_of rept \\<longrightarrow>\n                        low pt = lowb pt \\<and>\n                        high pt = (highb(rep p := pb)) pt))))) \\<and>\n       (\\<not> rep p \\<noteq> Null \\<longrightarrow>\n        (\\<forall>rept.\n            Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n             (rep \\<propto> high) rept \\<and>\n            (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n            Dag (rep p) low high rept \\<and>\n            (\\<forall>pt.\n                pt \\<notin> set_of rept \\<longrightarrow>\n                low pt = low pt \\<and> high pt = high pt)))", "apply (intro impI allI )"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>low high rep p rept.\n       \\<lbrakk>\\<not> p \\<noteq> Null;\n        Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high)\n         rept \\<and>\n        (\\<forall>no\\<in>set_of rept. rep no = no)\\<rbrakk>\n       \\<Longrightarrow> Dag p low high rept \\<and>\n                         (\\<forall>pt.\n                             pt \\<notin> set_of rept \\<longrightarrow>\n                             low pt = low pt \\<and> high pt = high pt)\n 2. \\<And>low high rep p.\n       p \\<noteq> Null \\<Longrightarrow>\n       (rep p \\<noteq> Null \\<longrightarrow>\n        (\\<forall>lowa higha pa.\n            (\\<forall>rept.\n                Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n                 (rep \\<propto> high) rept \\<and>\n                (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n                Dag pa lowa higha rept \\<and>\n                (\\<forall>pt.\n                    pt \\<notin> set_of rept \\<longrightarrow>\n                    low pt = lowa pt \\<and>\n                    high pt = higha pt)) \\<longrightarrow>\n            (\\<forall>lowb highb pb.\n                (\\<forall>rept.\n                    Dag ((rep \\<propto> id) (higha (rep p)))\n                     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n                     rept \\<and>\n                    (\\<forall>no\\<in>set_of rept.\n                        rep no = no) \\<longrightarrow>\n                    Dag pb lowb highb rept \\<and>\n                    (\\<forall>pt.\n                        pt \\<notin> set_of rept \\<longrightarrow>\n                        (lowa(rep p := pa)) pt = lowb pt \\<and>\n                        higha pt = highb pt)) \\<longrightarrow>\n                (\\<forall>rept.\n                    Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                     (rep \\<propto> high) rept \\<and>\n                    (\\<forall>no\\<in>set_of rept.\n                        rep no = no) \\<longrightarrow>\n                    Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                    (\\<forall>pt.\n                        pt \\<notin> set_of rept \\<longrightarrow>\n                        low pt = lowb pt \\<and>\n                        high pt = (highb(rep p := pb)) pt))))) \\<and>\n       (\\<not> rep p \\<noteq> Null \\<longrightarrow>\n        (\\<forall>rept.\n            Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n             (rep \\<propto> high) rept \\<and>\n            (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n            Dag (rep p) low high rept \\<and>\n            (\\<forall>pt.\n                pt \\<notin> set_of rept \\<longrightarrow>\n                low pt = low pt \\<and> high pt = high pt)))", "apply (simp add: null_comp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>low high rep p.\n       p \\<noteq> Null \\<Longrightarrow>\n       (rep p \\<noteq> Null \\<longrightarrow>\n        (\\<forall>lowa higha pa.\n            (\\<forall>rept.\n                Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n                 (rep \\<propto> high) rept \\<and>\n                (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n                Dag pa lowa higha rept \\<and>\n                (\\<forall>pt.\n                    pt \\<notin> set_of rept \\<longrightarrow>\n                    low pt = lowa pt \\<and>\n                    high pt = higha pt)) \\<longrightarrow>\n            (\\<forall>lowb highb pb.\n                (\\<forall>rept.\n                    Dag ((rep \\<propto> id) (higha (rep p)))\n                     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n                     rept \\<and>\n                    (\\<forall>no\\<in>set_of rept.\n                        rep no = no) \\<longrightarrow>\n                    Dag pb lowb highb rept \\<and>\n                    (\\<forall>pt.\n                        pt \\<notin> set_of rept \\<longrightarrow>\n                        (lowa(rep p := pa)) pt = lowb pt \\<and>\n                        higha pt = highb pt)) \\<longrightarrow>\n                (\\<forall>rept.\n                    Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                     (rep \\<propto> high) rept \\<and>\n                    (\\<forall>no\\<in>set_of rept.\n                        rep no = no) \\<longrightarrow>\n                    Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                    (\\<forall>pt.\n                        pt \\<notin> set_of rept \\<longrightarrow>\n                        low pt = lowb pt \\<and>\n                        high pt = (highb(rep p := pb)) pt))))) \\<and>\n       (\\<not> rep p \\<noteq> Null \\<longrightarrow>\n        (\\<forall>rept.\n            Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n             (rep \\<propto> high) rept \\<and>\n            (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n            Dag (rep p) low high rept \\<and>\n            (\\<forall>pt.\n                pt \\<notin> set_of rept \\<longrightarrow>\n                low pt = low pt \\<and> high pt = high pt)))", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>low high rep p.\n       p \\<noteq> Null \\<Longrightarrow>\n       rep p \\<noteq> Null \\<longrightarrow>\n       (\\<forall>lowa higha pa.\n           (\\<forall>rept.\n               Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n                (rep \\<propto> high) rept \\<and>\n               (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n               Dag pa lowa higha rept \\<and>\n               (\\<forall>pt.\n                   pt \\<notin> set_of rept \\<longrightarrow>\n                   low pt = lowa pt \\<and>\n                   high pt = higha pt)) \\<longrightarrow>\n           (\\<forall>lowb highb pb.\n               (\\<forall>rept.\n                   Dag ((rep \\<propto> id) (higha (rep p)))\n                    (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n                    rept \\<and>\n                   (\\<forall>no\\<in>set_of rept.\n                       rep no = no) \\<longrightarrow>\n                   Dag pb lowb highb rept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rept \\<longrightarrow>\n                       (lowa(rep p := pa)) pt = lowb pt \\<and>\n                       higha pt = highb pt)) \\<longrightarrow>\n               (\\<forall>rept.\n                   Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                    (rep \\<propto> high) rept \\<and>\n                   (\\<forall>no\\<in>set_of rept.\n                       rep no = no) \\<longrightarrow>\n                   Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rept \\<longrightarrow>\n                       low pt = lowb pt \\<and>\n                       high pt = (highb(rep p := pb)) pt))))\n 2. \\<And>low high rep p.\n       p \\<noteq> Null \\<Longrightarrow>\n       \\<not> rep p \\<noteq> Null \\<longrightarrow>\n       (\\<forall>rept.\n           Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n            (rep \\<propto> high) rept \\<and>\n           (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n           Dag (rep p) low high rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               low pt = low pt \\<and> high pt = high pt))", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>low high rep p.\n       p \\<noteq> Null \\<Longrightarrow>\n       \\<not> rep p \\<noteq> Null \\<longrightarrow>\n       (\\<forall>rept.\n           Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n            (rep \\<propto> high) rept \\<and>\n           (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n           Dag (rep p) low high rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               low pt = low pt \\<and> high pt = high pt))\n 2. \\<And>low high rep p.\n       p \\<noteq> Null \\<Longrightarrow>\n       rep p \\<noteq> Null \\<longrightarrow>\n       (\\<forall>lowa higha pa.\n           (\\<forall>rept.\n               Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n                (rep \\<propto> high) rept \\<and>\n               (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n               Dag pa lowa higha rept \\<and>\n               (\\<forall>pt.\n                   pt \\<notin> set_of rept \\<longrightarrow>\n                   low pt = lowa pt \\<and>\n                   high pt = higha pt)) \\<longrightarrow>\n           (\\<forall>lowb highb pb.\n               (\\<forall>rept.\n                   Dag ((rep \\<propto> id) (higha (rep p)))\n                    (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n                    rept \\<and>\n                   (\\<forall>no\\<in>set_of rept.\n                       rep no = no) \\<longrightarrow>\n                   Dag pb lowb highb rept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rept \\<longrightarrow>\n                       (lowa(rep p := pa)) pt = lowb pt \\<and>\n                       higha pt = highb pt)) \\<longrightarrow>\n               (\\<forall>rept.\n                   Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                    (rep \\<propto> high) rept \\<and>\n                   (\\<forall>no\\<in>set_of rept.\n                       rep no = no) \\<longrightarrow>\n                   Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rept \\<longrightarrow>\n                       low pt = lowb pt \\<and>\n                       high pt = (highb(rep p := pb)) pt))))", "apply (clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>low high rep p.\n       p \\<noteq> Null \\<Longrightarrow>\n       rep p \\<noteq> Null \\<longrightarrow>\n       (\\<forall>lowa higha pa.\n           (\\<forall>rept.\n               Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n                (rep \\<propto> high) rept \\<and>\n               (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n               Dag pa lowa higha rept \\<and>\n               (\\<forall>pt.\n                   pt \\<notin> set_of rept \\<longrightarrow>\n                   low pt = lowa pt \\<and>\n                   high pt = higha pt)) \\<longrightarrow>\n           (\\<forall>lowb highb pb.\n               (\\<forall>rept.\n                   Dag ((rep \\<propto> id) (higha (rep p)))\n                    (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n                    rept \\<and>\n                   (\\<forall>no\\<in>set_of rept.\n                       rep no = no) \\<longrightarrow>\n                   Dag pb lowb highb rept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rept \\<longrightarrow>\n                       (lowa(rep p := pa)) pt = lowb pt \\<and>\n                       higha pt = highb pt)) \\<longrightarrow>\n               (\\<forall>rept.\n                   Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                    (rep \\<propto> high) rept \\<and>\n                   (\\<forall>no\\<in>set_of rept.\n                       rep no = no) \\<longrightarrow>\n                   Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rept \\<longrightarrow>\n                       low pt = lowb pt \\<and>\n                       high pt = (highb(rep p := pb)) pt))))", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>low high rep p lowa higha pa lowb highb pb rept.\n       \\<lbrakk>p \\<noteq> Null; rep p \\<noteq> Null;\n        \\<forall>rept.\n           Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n            (rep \\<propto> high) rept \\<and>\n           (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n           Dag pa lowa higha rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               low pt = lowa pt \\<and> high pt = higha pt);\n        \\<forall>rept.\n           Dag ((rep \\<propto> id) (higha (rep p)))\n            (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n            rept \\<and>\n           (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n           Dag pb lowb highb rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt);\n        Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high)\n         rept;\n        \\<forall>no\\<in>set_of rept. rep no = no\\<rbrakk>\n       \\<Longrightarrow> Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                         (\\<forall>pt.\n                             pt \\<notin> set_of rept \\<longrightarrow>\n                             low pt = lowb pt \\<and>\n                             high pt = (highb(rep p := pb)) pt)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>low high rep p lowa higha pa lowb highb pb rept.\n       \\<lbrakk>p \\<noteq> Null; rep p \\<noteq> Null;\n        \\<forall>rept.\n           Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n            (rep \\<propto> high) rept \\<and>\n           (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n           Dag pa lowa higha rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               low pt = lowa pt \\<and> high pt = higha pt);\n        \\<forall>rept.\n           Dag ((rep \\<propto> id) (higha (rep p)))\n            (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n            rept \\<and>\n           (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n           Dag pb lowb highb rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt);\n        Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high)\n         rept;\n        \\<forall>no\\<in>set_of rept. rep no = no\\<rbrakk>\n       \\<Longrightarrow> Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                         (\\<forall>pt.\n                             pt \\<notin> set_of rept \\<longrightarrow>\n                             low pt = lowb pt \\<and>\n                             high pt = (highb(rep p := pb)) pt)", "fix low high p rep lowa higha pa lowb highb pb rept"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>low high rep p lowa higha pa lowb highb pb rept.\n       \\<lbrakk>p \\<noteq> Null; rep p \\<noteq> Null;\n        \\<forall>rept.\n           Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n            (rep \\<propto> high) rept \\<and>\n           (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n           Dag pa lowa higha rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               low pt = lowa pt \\<and> high pt = higha pt);\n        \\<forall>rept.\n           Dag ((rep \\<propto> id) (higha (rep p)))\n            (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n            rept \\<and>\n           (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n           Dag pb lowb highb rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt);\n        Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high)\n         rept;\n        \\<forall>no\\<in>set_of rept. rep no = no\\<rbrakk>\n       \\<Longrightarrow> Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                         (\\<forall>pt.\n                             pt \\<notin> set_of rept \\<longrightarrow>\n                             low pt = lowb pt \\<and>\n                             high pt = (highb(rep p := pb)) pt)", "assume p_nNull: \"p \\<noteq> Null\""], ["proof (state)\nthis:\n  p \\<noteq> Null\n\ngoal (1 subgoal):\n 1. \\<And>low high rep p lowa higha pa lowb highb pb rept.\n       \\<lbrakk>p \\<noteq> Null; rep p \\<noteq> Null;\n        \\<forall>rept.\n           Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n            (rep \\<propto> high) rept \\<and>\n           (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n           Dag pa lowa higha rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               low pt = lowa pt \\<and> high pt = higha pt);\n        \\<forall>rept.\n           Dag ((rep \\<propto> id) (higha (rep p)))\n            (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n            rept \\<and>\n           (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n           Dag pb lowb highb rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt);\n        Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high)\n         rept;\n        \\<forall>no\\<in>set_of rept. rep no = no\\<rbrakk>\n       \\<Longrightarrow> Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                         (\\<forall>pt.\n                             pt \\<notin> set_of rept \\<longrightarrow>\n                             low pt = lowb pt \\<and>\n                             high pt = (highb(rep p := pb)) pt)", "assume rp_nNull: \" rep p \\<noteq> Null\""], ["proof (state)\nthis:\n  rep p \\<noteq> Null\n\ngoal (1 subgoal):\n 1. \\<And>low high rep p lowa higha pa lowb highb pb rept.\n       \\<lbrakk>p \\<noteq> Null; rep p \\<noteq> Null;\n        \\<forall>rept.\n           Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n            (rep \\<propto> high) rept \\<and>\n           (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n           Dag pa lowa higha rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               low pt = lowa pt \\<and> high pt = higha pt);\n        \\<forall>rept.\n           Dag ((rep \\<propto> id) (higha (rep p)))\n            (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n            rept \\<and>\n           (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n           Dag pb lowb highb rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt);\n        Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high)\n         rept;\n        \\<forall>no\\<in>set_of rept. rep no = no\\<rbrakk>\n       \\<Longrightarrow> Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                         (\\<forall>pt.\n                             pt \\<notin> set_of rept \\<longrightarrow>\n                             low pt = lowb pt \\<and>\n                             high pt = (highb(rep p := pb)) pt)", "assume rec_spec_lrept: \n    \"\\<forall>rept. Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low) (rep \\<propto> high) rept\n    \\<and> (\\<forall>no\\<in>set_of rept. rep no = no)\n    \\<longrightarrow> Dag pa lowa higha rept \\<and> \n        (\\<forall>pt. pt \\<notin> set_of rept \\<longrightarrow> low pt = lowa pt \\<and> high pt = higha pt)\""], ["proof (state)\nthis:\n  \\<forall>rept.\n     Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n      (rep \\<propto> high) rept \\<and>\n     (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n     Dag pa lowa higha rept \\<and>\n     (\\<forall>pt.\n         pt \\<notin> set_of rept \\<longrightarrow>\n         low pt = lowa pt \\<and> high pt = higha pt)\n\ngoal (1 subgoal):\n 1. \\<And>low high rep p lowa higha pa lowb highb pb rept.\n       \\<lbrakk>p \\<noteq> Null; rep p \\<noteq> Null;\n        \\<forall>rept.\n           Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n            (rep \\<propto> high) rept \\<and>\n           (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n           Dag pa lowa higha rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               low pt = lowa pt \\<and> high pt = higha pt);\n        \\<forall>rept.\n           Dag ((rep \\<propto> id) (higha (rep p)))\n            (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n            rept \\<and>\n           (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n           Dag pb lowb highb rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt);\n        Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high)\n         rept;\n        \\<forall>no\\<in>set_of rept. rep no = no\\<rbrakk>\n       \\<Longrightarrow> Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                         (\\<forall>pt.\n                             pt \\<notin> set_of rept \\<longrightarrow>\n                             low pt = lowb pt \\<and>\n                             high pt = (highb(rep p := pb)) pt)", "assume rec_spec_rrept: \n    \"\\<forall>rept. Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rept\n    \\<and> (\\<forall>no\\<in>set_of rept. rep no = no)\n    \\<longrightarrow> Dag pb lowb highb rept \\<and> \n        (\\<forall>pt. pt \\<notin> set_of rept \\<longrightarrow> (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt)\""], ["proof (state)\nthis:\n  \\<forall>rept.\n     Dag ((rep \\<propto> id) (higha (rep p)))\n      (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rept \\<and>\n     (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n     Dag pb lowb highb rept \\<and>\n     (\\<forall>pt.\n         pt \\<notin> set_of rept \\<longrightarrow>\n         (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt)\n\ngoal (1 subgoal):\n 1. \\<And>low high rep p lowa higha pa lowb highb pb rept.\n       \\<lbrakk>p \\<noteq> Null; rep p \\<noteq> Null;\n        \\<forall>rept.\n           Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n            (rep \\<propto> high) rept \\<and>\n           (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n           Dag pa lowa higha rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               low pt = lowa pt \\<and> high pt = higha pt);\n        \\<forall>rept.\n           Dag ((rep \\<propto> id) (higha (rep p)))\n            (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n            rept \\<and>\n           (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n           Dag pb lowb highb rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt);\n        Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high)\n         rept;\n        \\<forall>no\\<in>set_of rept. rep no = no\\<rbrakk>\n       \\<Longrightarrow> Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                         (\\<forall>pt.\n                             pt \\<notin> set_of rept \\<longrightarrow>\n                             low pt = lowb pt \\<and>\n                             high pt = (highb(rep p := pb)) pt)", "assume rept_dag: \"Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\""], ["proof (state)\nthis:\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n\ngoal (1 subgoal):\n 1. \\<And>low high rep p lowa higha pa lowb highb pb rept.\n       \\<lbrakk>p \\<noteq> Null; rep p \\<noteq> Null;\n        \\<forall>rept.\n           Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n            (rep \\<propto> high) rept \\<and>\n           (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n           Dag pa lowa higha rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               low pt = lowa pt \\<and> high pt = higha pt);\n        \\<forall>rept.\n           Dag ((rep \\<propto> id) (higha (rep p)))\n            (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n            rept \\<and>\n           (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n           Dag pb lowb highb rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt);\n        Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high)\n         rept;\n        \\<forall>no\\<in>set_of rept. rep no = no\\<rbrakk>\n       \\<Longrightarrow> Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                         (\\<forall>pt.\n                             pt \\<notin> set_of rept \\<longrightarrow>\n                             low pt = lowb pt \\<and>\n                             high pt = (highb(rep p := pb)) pt)", "assume rno_rept: \"\\<forall>no\\<in>set_of rept. rep no = no\""], ["proof (state)\nthis:\n  \\<forall>no\\<in>set_of rept. rep no = no\n\ngoal (1 subgoal):\n 1. \\<And>low high rep p lowa higha pa lowb highb pb rept.\n       \\<lbrakk>p \\<noteq> Null; rep p \\<noteq> Null;\n        \\<forall>rept.\n           Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n            (rep \\<propto> high) rept \\<and>\n           (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n           Dag pa lowa higha rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               low pt = lowa pt \\<and> high pt = higha pt);\n        \\<forall>rept.\n           Dag ((rep \\<propto> id) (higha (rep p)))\n            (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n            rept \\<and>\n           (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n           Dag pb lowb highb rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt);\n        Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high)\n         rept;\n        \\<forall>no\\<in>set_of rept. rep no = no\\<rbrakk>\n       \\<Longrightarrow> Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                         (\\<forall>pt.\n                             pt \\<notin> set_of rept \\<longrightarrow>\n                             low pt = lowb pt \\<and>\n                             high pt = (highb(rep p := pb)) pt)", "show \" Dag (rep p) lowb (highb(rep p := pb)) rept \\<and> \n    (\\<forall>pt. pt \\<notin> set_of rept \\<longrightarrow> low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "from rp_nNull rept_dag p_nNull"], ["proof (chain)\npicking this:\n  rep p \\<noteq> Null\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n  p \\<noteq> Null", "obtain lrept rrept where\n      rept_def: \"rept = Node lrept (rep p) rrept\""], ["proof (prove)\nusing this:\n  rep p \\<noteq> Null\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n  p \\<noteq> Null\n\ngoal (1 subgoal):\n 1. (\\<And>lrept rrept.\n        rept = Node lrept (rep p) rrept \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  rept = Node lrept (rep p) rrept\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "with rept_dag p_nNull"], ["proof (chain)\npicking this:\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n  p \\<noteq> Null\n  rept = Node lrept (rep p) rrept", "have lrept_dag: \n      \"Dag ((rep \\<propto> low) (rep p)) (rep \\<propto> low) (rep \\<propto> high) lrept\""], ["proof (prove)\nusing this:\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n  p \\<noteq> Null\n  rept = Node lrept (rep p) rrept\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> low) (rep p)) (rep \\<propto> low)\n     (rep \\<propto> high) lrept", "by simp"], ["proof (state)\nthis:\n  Dag ((rep \\<propto> low) (rep p)) (rep \\<propto> low) (rep \\<propto> high)\n   lrept\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "from rept_def rept_dag p_nNull"], ["proof (chain)\npicking this:\n  rept = Node lrept (rep p) rrept\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n  p \\<noteq> Null", "have rrept_dag: \n      \"Dag ((rep \\<propto> high) (rep p)) (rep \\<propto> low) (rep \\<propto> high) rrept\""], ["proof (prove)\nusing this:\n  rept = Node lrept (rep p) rrept\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n  p \\<noteq> Null\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> high) (rep p)) (rep \\<propto> low)\n     (rep \\<propto> high) rrept", "by simp"], ["proof (state)\nthis:\n  Dag ((rep \\<propto> high) (rep p)) (rep \\<propto> low)\n   (rep \\<propto> high) rrept\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "from rno_rept rept_def"], ["proof (chain)\npicking this:\n  \\<forall>no\\<in>set_of rept. rep no = no\n  rept = Node lrept (rep p) rrept", "have rno_lrept: \"\\<forall> no \\<in> set_of lrept. rep no = no\""], ["proof (prove)\nusing this:\n  \\<forall>no\\<in>set_of rept. rep no = no\n  rept = Node lrept (rep p) rrept\n\ngoal (1 subgoal):\n 1. \\<forall>no\\<in>set_of lrept. rep no = no", "by auto"], ["proof (state)\nthis:\n  \\<forall>no\\<in>set_of lrept. rep no = no\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "from rno_rept rept_def"], ["proof (chain)\npicking this:\n  \\<forall>no\\<in>set_of rept. rep no = no\n  rept = Node lrept (rep p) rrept", "have rno_rrept: \"\\<forall> no \\<in> set_of rrept. rep no = no\""], ["proof (prove)\nusing this:\n  \\<forall>no\\<in>set_of rept. rep no = no\n  rept = Node lrept (rep p) rrept\n\ngoal (1 subgoal):\n 1. \\<forall>no\\<in>set_of rrept. rep no = no", "by auto"], ["proof (state)\nthis:\n  \\<forall>no\\<in>set_of rrept. rep no = no\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "have repoint_post_low: \n      \" Dag pa lowa higha lrept \\<and> \n      (\\<forall>pt. pt \\<notin> set_of lrept \\<longrightarrow> low pt = lowa pt \\<and> high pt = higha pt)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dag pa lowa higha lrept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of lrept \\<longrightarrow>\n        low pt = lowa pt \\<and> high pt = higha pt)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Dag pa lowa higha lrept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of lrept \\<longrightarrow>\n        low pt = lowa pt \\<and> high pt = higha pt)", "from lrept_dag"], ["proof (chain)\npicking this:\n  Dag ((rep \\<propto> low) (rep p)) (rep \\<propto> low) (rep \\<propto> high)\n   lrept", "have \" Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low) (rep \\<propto> high) lrept\""], ["proof (prove)\nusing this:\n  Dag ((rep \\<propto> low) (rep p)) (rep \\<propto> low) (rep \\<propto> high)\n   lrept\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n     (rep \\<propto> high) lrept", "by (simp add: id_trans)"], ["proof (state)\nthis:\n  Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n   (rep \\<propto> high) lrept\n\ngoal (1 subgoal):\n 1. Dag pa lowa higha lrept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of lrept \\<longrightarrow>\n        low pt = lowa pt \\<and> high pt = higha pt)", "with  rec_spec_lrept rno_lrept"], ["proof (chain)\npicking this:\n  \\<forall>rept.\n     Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n      (rep \\<propto> high) rept \\<and>\n     (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n     Dag pa lowa higha rept \\<and>\n     (\\<forall>pt.\n         pt \\<notin> set_of rept \\<longrightarrow>\n         low pt = lowa pt \\<and> high pt = higha pt)\n  \\<forall>no\\<in>set_of lrept. rep no = no\n  Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n   (rep \\<propto> high) lrept", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>rept.\n     Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n      (rep \\<propto> high) rept \\<and>\n     (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n     Dag pa lowa higha rept \\<and>\n     (\\<forall>pt.\n         pt \\<notin> set_of rept \\<longrightarrow>\n         low pt = lowa pt \\<and> high pt = higha pt)\n  \\<forall>no\\<in>set_of lrept. rep no = no\n  Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n   (rep \\<propto> high) lrept\n\ngoal (1 subgoal):\n 1. Dag pa lowa higha lrept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of lrept \\<longrightarrow>\n        low pt = lowa pt \\<and> high pt = higha pt)", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>rept.\n                Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n                 (rep \\<propto> high) rept \\<and>\n                (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n                Dag pa lowa higha rept \\<and>\n                (\\<forall>pt.\n                    pt \\<notin> set_of rept \\<longrightarrow>\n                    low pt = lowa pt \\<and> high pt = higha pt);\n     \\<forall>no\\<in>set_of lrept. rep no = no;\n     Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n      (rep \\<propto> high) lrept\\<rbrakk>\n    \\<Longrightarrow> Dag pa lowa higha lrept \\<and>\n                      (\\<forall>pt.\n                          pt \\<notin> set_of lrept \\<longrightarrow>\n                          low pt = lowa pt \\<and> high pt = higha pt)", "apply (erule_tac x=lrept in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>no\\<in>set_of lrept. rep no = no;\n     Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n      (rep \\<propto> high) lrept;\n     Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n      (rep \\<propto> high) lrept \\<and>\n     (\\<forall>no\\<in>set_of lrept. rep no = no) \\<longrightarrow>\n     Dag pa lowa higha lrept \\<and>\n     (\\<forall>pt.\n         pt \\<notin> set_of lrept \\<longrightarrow>\n         low pt = lowa pt \\<and> high pt = higha pt)\\<rbrakk>\n    \\<Longrightarrow> Dag pa lowa higha lrept \\<and>\n                      (\\<forall>pt.\n                          pt \\<notin> set_of lrept \\<longrightarrow>\n                          low pt = lowa pt \\<and> high pt = higha pt)", "apply (erule impE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>no\\<in>set_of lrept. rep no = no;\n     Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n      (rep \\<propto> high) lrept\\<rbrakk>\n    \\<Longrightarrow> Dag ((rep \\<propto> id) (low (rep p)))\n                       (rep \\<propto> low) (rep \\<propto> high) lrept \\<and>\n                      (\\<forall>no\\<in>set_of lrept. rep no = no)\n 2. \\<lbrakk>\\<forall>no\\<in>set_of lrept. rep no = no;\n     Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n      (rep \\<propto> high) lrept;\n     Dag pa lowa higha lrept \\<and>\n     (\\<forall>pt.\n         pt \\<notin> set_of lrept \\<longrightarrow>\n         low pt = lowa pt \\<and> high pt = higha pt)\\<rbrakk>\n    \\<Longrightarrow> Dag pa lowa higha lrept \\<and>\n                      (\\<forall>pt.\n                          pt \\<notin> set_of lrept \\<longrightarrow>\n                          low pt = lowa pt \\<and> high pt = higha pt)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>no\\<in>set_of lrept. rep no = no;\n     Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n      (rep \\<propto> high) lrept;\n     Dag pa lowa higha lrept \\<and>\n     (\\<forall>pt.\n         pt \\<notin> set_of lrept \\<longrightarrow>\n         low pt = lowa pt \\<and> high pt = higha pt)\\<rbrakk>\n    \\<Longrightarrow> Dag pa lowa higha lrept \\<and>\n                      (\\<forall>pt.\n                          pt \\<notin> set_of lrept \\<longrightarrow>\n                          low pt = lowa pt \\<and> high pt = higha pt)", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  Dag pa lowa higha lrept \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of lrept \\<longrightarrow>\n      low pt = lowa pt \\<and> high pt = higha pt)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Dag pa lowa higha lrept \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of lrept \\<longrightarrow>\n      low pt = lowa pt \\<and> high pt = higha pt)\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "hence low_lowa_nc: \"(\\<forall>pt. pt \\<notin> set_of lrept \\<longrightarrow> low pt = lowa pt \\<and> high pt = higha pt)\""], ["proof (prove)\nusing this:\n  Dag pa lowa higha lrept \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of lrept \\<longrightarrow>\n      low pt = lowa pt \\<and> high pt = higha pt)\n\ngoal (1 subgoal):\n 1. \\<forall>pt.\n       pt \\<notin> set_of lrept \\<longrightarrow>\n       low pt = lowa pt \\<and> high pt = higha pt", "by simp"], ["proof (state)\nthis:\n  \\<forall>pt.\n     pt \\<notin> set_of lrept \\<longrightarrow>\n     low pt = lowa pt \\<and> high pt = higha pt\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "from lrept_dag  repoint_post_low"], ["proof (chain)\npicking this:\n  Dag ((rep \\<propto> low) (rep p)) (rep \\<propto> low) (rep \\<propto> high)\n   lrept\n  Dag pa lowa higha lrept \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of lrept \\<longrightarrow>\n      low pt = lowa pt \\<and> high pt = higha pt)", "obtain \n      pa_def: \"pa = (rep \\<propto> low) (rep p)\" and\n      lowa_higha_def: \"(\\<forall> no \\<in> set_of lrept. lowa no = (rep \\<propto> low) no \\<and> higha no = (rep \\<propto> high) no)\""], ["proof (prove)\nusing this:\n  Dag ((rep \\<propto> low) (rep p)) (rep \\<propto> low) (rep \\<propto> high)\n   lrept\n  Dag pa lowa higha lrept \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of lrept \\<longrightarrow>\n      low pt = lowa pt \\<and> high pt = higha pt)\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>pa = (rep \\<propto> low) (rep p);\n      \\<forall>no\\<in>set_of lrept.\n         lowa no = (rep \\<propto> low) no \\<and>\n         higha no = (rep \\<propto> high) no\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>pa = (rep \\<propto> low) (rep p);\n              \\<forall>no\\<in>set_of lrept.\n                 lowa no = (rep \\<propto> low) no \\<and>\n                 higha no = (rep \\<propto> high) no\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     Dag ((rep \\<propto> low) (rep p)) (rep \\<propto> low)\n      (rep \\<propto> high) lrept;\n     Dag pa lowa higha lrept \\<and>\n     (\\<forall>pt.\n         pt \\<notin> set_of lrept \\<longrightarrow>\n         low pt = lowa pt \\<and> high pt = higha pt)\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply (drule Dags_eq_hp_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>pa = (rep \\<propto> low) (rep p);\n              \\<forall>no\\<in>set_of lrept.\n                 lowa no = (rep \\<propto> low) no \\<and>\n                 higha no = (rep \\<propto> high) no\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     Dag pa lowa higha lrept \\<and>\n     (\\<forall>pt.\n         pt \\<notin> set_of lrept \\<longrightarrow>\n         low pt = lowa pt \\<and> high pt = higha pt)\\<rbrakk>\n    \\<Longrightarrow> Dag ?p'3 ?l'3 ?r'3 lrept\n 2. \\<lbrakk>\\<lbrakk>pa = (rep \\<propto> low) (rep p);\n              \\<forall>no\\<in>set_of lrept.\n                 lowa no = (rep \\<propto> low) no \\<and>\n                 higha no = (rep \\<propto> high) no\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     Dag pa lowa higha lrept \\<and>\n     (\\<forall>pt.\n         pt \\<notin> set_of lrept \\<longrightarrow>\n         low pt = lowa pt \\<and> high pt = higha pt);\n     ?p'3 = (rep \\<propto> low) (rep p) \\<and>\n     (\\<forall>no\\<in>set_of lrept.\n         ?l'3 no = (rep \\<propto> low) no \\<and>\n         ?r'3 no = (rep \\<propto> high) no)\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  pa = (rep \\<propto> low) (rep p)\n  \\<forall>no\\<in>set_of lrept.\n     lowa no = (rep \\<propto> low) no \\<and>\n     higha no = (rep \\<propto> high) no\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "from rept_dag"], ["proof (chain)\npicking this:\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept", "have rept_DAG: \"DAG rept\""], ["proof (prove)\nusing this:\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n\ngoal (1 subgoal):\n 1. DAG rept", "by (rule Dag_is_DAG)"], ["proof (state)\nthis:\n  DAG rept\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "with rept_def"], ["proof (chain)\npicking this:\n  rept = Node lrept (rep p) rrept\n  DAG rept", "have rp_notin_lrept: \"rep p \\<notin> set_of lrept\""], ["proof (prove)\nusing this:\n  rept = Node lrept (rep p) rrept\n  DAG rept\n\ngoal (1 subgoal):\n 1. rep p \\<notin> set_of lrept", "by simp"], ["proof (state)\nthis:\n  rep p \\<notin> set_of lrept\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "from rept_DAG rept_def"], ["proof (chain)\npicking this:\n  DAG rept\n  rept = Node lrept (rep p) rrept", "have rp_notin_rrept: \"rep p \\<notin> set_of rrept\""], ["proof (prove)\nusing this:\n  DAG rept\n  rept = Node lrept (rep p) rrept\n\ngoal (1 subgoal):\n 1. rep p \\<notin> set_of rrept", "by simp"], ["proof (state)\nthis:\n  rep p \\<notin> set_of rrept\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "have \"Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "from low_lowa_nc rp_notin_lrept"], ["proof (chain)\npicking this:\n  \\<forall>pt.\n     pt \\<notin> set_of lrept \\<longrightarrow>\n     low pt = lowa pt \\<and> high pt = higha pt\n  rep p \\<notin> set_of lrept", "have \"(rep \\<propto> high) (rep p) = (rep \\<propto> higha) (rep p)\""], ["proof (prove)\nusing this:\n  \\<forall>pt.\n     pt \\<notin> set_of lrept \\<longrightarrow>\n     low pt = lowa pt \\<and> high pt = higha pt\n  rep p \\<notin> set_of lrept\n\ngoal (1 subgoal):\n 1. (rep \\<propto> high) (rep p) = (rep \\<propto> higha) (rep p)", "by (auto simp add: null_comp_def)"], ["proof (state)\nthis:\n  (rep \\<propto> high) (rep p) = (rep \\<propto> higha) (rep p)\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "with rrept_dag"], ["proof (chain)\npicking this:\n  Dag ((rep \\<propto> high) (rep p)) (rep \\<propto> low)\n   (rep \\<propto> high) rrept\n  (rep \\<propto> high) (rep p) = (rep \\<propto> higha) (rep p)", "have higha_mixed_rrept: \n        \"Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> low) (rep \\<propto> high) rrept\""], ["proof (prove)\nusing this:\n  Dag ((rep \\<propto> high) (rep p)) (rep \\<propto> low)\n   (rep \\<propto> high) rrept\n  (rep \\<propto> high) (rep p) = (rep \\<propto> higha) (rep p)\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> low)\n     (rep \\<propto> high) rrept", "by (simp add: id_trans)"], ["proof (state)\nthis:\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> low)\n   (rep \\<propto> high) rrept\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "thm low_high_exchange_dag"], ["proof (state)\nthis:\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> low)\n   (rep \\<propto> high) rrept\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "with low_lowa_nc lowa_higha_def rno_rrept"], ["proof (chain)\npicking this:\n  \\<forall>pt.\n     pt \\<notin> set_of lrept \\<longrightarrow>\n     low pt = lowa pt \\<and> high pt = higha pt\n  \\<forall>no\\<in>set_of lrept.\n     lowa no = (rep \\<propto> low) no \\<and>\n     higha no = (rep \\<propto> high) no\n  \\<forall>no\\<in>set_of rrept. rep no = no\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> low)\n   (rep \\<propto> high) rrept", "have lowa_higha_rrept:\n        \"Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa) (rep \\<propto> higha) rrept\""], ["proof (prove)\nusing this:\n  \\<forall>pt.\n     pt \\<notin> set_of lrept \\<longrightarrow>\n     low pt = lowa pt \\<and> high pt = higha pt\n  \\<forall>no\\<in>set_of lrept.\n     lowa no = (rep \\<propto> low) no \\<and>\n     higha no = (rep \\<propto> high) no\n  \\<forall>no\\<in>set_of rrept. rep no = no\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> low)\n   (rep \\<propto> high) rrept\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n     (rep \\<propto> higha) rrept", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>pt.\n                pt \\<notin> set_of lrept \\<longrightarrow>\n                low pt = lowa pt \\<and> high pt = higha pt;\n     \\<forall>no\\<in>set_of lrept.\n        lowa no = (rep \\<propto> low) no \\<and>\n        higha no = (rep \\<propto> high) no;\n     \\<forall>no\\<in>set_of rrept. rep no = no;\n     Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> low)\n      (rep \\<propto> high) rrept\\<rbrakk>\n    \\<Longrightarrow> Dag ((rep \\<propto> id) (higha (rep p)))\n                       (rep \\<propto> lowa) (rep \\<propto> higha) rrept", "apply (rule low_high_exchange_dag)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<forall>pt.\n                pt \\<notin> set_of lrept \\<longrightarrow>\n                low pt = lowa pt \\<and> high pt = higha pt;\n     \\<forall>no\\<in>set_of lrept.\n        lowa no = (rep \\<propto> low) no \\<and>\n        higha no = (rep \\<propto> high) no;\n     \\<forall>no\\<in>set_of rrept. rep no = no;\n     Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> low)\n      (rep \\<propto> high) rrept\\<rbrakk>\n    \\<Longrightarrow> \\<forall>pt.\n                         pt \\<notin> set_of ?lt4 \\<longrightarrow>\n                         ?low4 pt = lowa pt \\<and> ?high4 pt = higha pt\n 2. \\<lbrakk>\\<forall>pt.\n                pt \\<notin> set_of lrept \\<longrightarrow>\n                low pt = lowa pt \\<and> high pt = higha pt;\n     \\<forall>no\\<in>set_of lrept.\n        lowa no = (rep \\<propto> low) no \\<and>\n        higha no = (rep \\<propto> high) no;\n     \\<forall>no\\<in>set_of rrept. rep no = no;\n     Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> low)\n      (rep \\<propto> high) rrept\\<rbrakk>\n    \\<Longrightarrow> \\<forall>pt\\<in>set_of ?lt4.\n                         lowa pt = (rep \\<propto> ?low4) pt \\<and>\n                         higha pt = (rep \\<propto> ?high4) pt\n 3. \\<lbrakk>\\<forall>pt.\n                pt \\<notin> set_of lrept \\<longrightarrow>\n                low pt = lowa pt \\<and> high pt = higha pt;\n     \\<forall>no\\<in>set_of lrept.\n        lowa no = (rep \\<propto> low) no \\<and>\n        higha no = (rep \\<propto> high) no;\n     \\<forall>no\\<in>set_of rrept. rep no = no;\n     Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> low)\n      (rep \\<propto> high) rrept\\<rbrakk>\n    \\<Longrightarrow> \\<forall>pt\\<in>set_of rrept. rep pt = pt\n 4. \\<lbrakk>\\<forall>pt.\n                pt \\<notin> set_of lrept \\<longrightarrow>\n                low pt = lowa pt \\<and> high pt = higha pt;\n     \\<forall>no\\<in>set_of lrept.\n        lowa no = (rep \\<propto> low) no \\<and>\n        higha no = (rep \\<propto> high) no;\n     \\<forall>no\\<in>set_of rrept. rep no = no;\n     Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> low)\n      (rep \\<propto> high) rrept\\<rbrakk>\n    \\<Longrightarrow> Dag ((rep \\<propto> id) (higha (rep p)))\n                       (rep \\<propto> ?low4) (rep \\<propto> ?high4) rrept", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n   (rep \\<propto> higha) rrept\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "have \"Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa) (rep \\<propto> higha) rrept = \n        Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n     (rep \\<propto> higha) rrept =\n    Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n     (rep \\<propto> higha) rrept =\n    Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "have \"\\<forall> no \\<in> set_of rrept. (rep \\<propto> lowa) no = (rep \\<propto> lowa(rep p := pa)) no \\<and>\n          (rep \\<propto> higha) no = (rep \\<propto> higha) no\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>no\\<in>set_of rrept.\n       (rep \\<propto> lowa) no = (rep \\<propto> lowa(rep p := pa)) no \\<and>\n       (rep \\<propto> higha) no = (rep \\<propto> higha) no", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>no.\n       no \\<in> set_of rrept \\<Longrightarrow>\n       (rep \\<propto> lowa) no = (rep \\<propto> lowa(rep p := pa)) no \\<and>\n       (rep \\<propto> higha) no = (rep \\<propto> higha) no", "fix no"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>no.\n       no \\<in> set_of rrept \\<Longrightarrow>\n       (rep \\<propto> lowa) no = (rep \\<propto> lowa(rep p := pa)) no \\<and>\n       (rep \\<propto> higha) no = (rep \\<propto> higha) no", "assume no_in_rrept: \"no \\<in> set_of rrept\""], ["proof (state)\nthis:\n  no \\<in> set_of rrept\n\ngoal (1 subgoal):\n 1. \\<And>no.\n       no \\<in> set_of rrept \\<Longrightarrow>\n       (rep \\<propto> lowa) no = (rep \\<propto> lowa(rep p := pa)) no \\<and>\n       (rep \\<propto> higha) no = (rep \\<propto> higha) no", "with rp_notin_rrept"], ["proof (chain)\npicking this:\n  rep p \\<notin> set_of rrept\n  no \\<in> set_of rrept", "have \"no \\<noteq> rep p\""], ["proof (prove)\nusing this:\n  rep p \\<notin> set_of rrept\n  no \\<in> set_of rrept\n\ngoal (1 subgoal):\n 1. no \\<noteq> rep p", "by blast"], ["proof (state)\nthis:\n  no \\<noteq> rep p\n\ngoal (1 subgoal):\n 1. \\<And>no.\n       no \\<in> set_of rrept \\<Longrightarrow>\n       (rep \\<propto> lowa) no = (rep \\<propto> lowa(rep p := pa)) no \\<and>\n       (rep \\<propto> higha) no = (rep \\<propto> higha) no", "thus \"(rep \\<propto> lowa) no = (rep \\<propto> lowa(rep p := pa)) no \\<and> \n            (rep \\<propto> higha) no = (rep \\<propto> higha) no\""], ["proof (prove)\nusing this:\n  no \\<noteq> rep p\n\ngoal (1 subgoal):\n 1. (rep \\<propto> lowa) no = (rep \\<propto> lowa(rep p := pa)) no \\<and>\n    (rep \\<propto> higha) no = (rep \\<propto> higha) no", "by (simp add: null_comp_def)"], ["proof (state)\nthis:\n  (rep \\<propto> lowa) no = (rep \\<propto> lowa(rep p := pa)) no \\<and>\n  (rep \\<propto> higha) no = (rep \\<propto> higha) no\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>no\\<in>set_of rrept.\n     (rep \\<propto> lowa) no = (rep \\<propto> lowa(rep p := pa)) no \\<and>\n     (rep \\<propto> higha) no = (rep \\<propto> higha) no\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n     (rep \\<propto> higha) rrept =\n    Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>no\\<in>set_of rrept.\n     (rep \\<propto> lowa) no = (rep \\<propto> lowa(rep p := pa)) no \\<and>\n     (rep \\<propto> higha) no = (rep \\<propto> higha) no\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n     (rep \\<propto> higha) rrept =\n    Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "by (rule heaps_eq_Dag_eq)"], ["proof (state)\nthis:\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n   (rep \\<propto> higha) rrept =\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n   (rep \\<propto> higha) rrept\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n   (rep \\<propto> higha) rrept =\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n   (rep \\<propto> higha) rrept\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "with lowa_higha_rrept"], ["proof (chain)\npicking this:\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n   (rep \\<propto> higha) rrept\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n   (rep \\<propto> higha) rrept =\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n   (rep \\<propto> higha) rrept", "show ?thesis"], ["proof (prove)\nusing this:\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n   (rep \\<propto> higha) rrept\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n   (rep \\<propto> higha) rrept =\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n   (rep \\<propto> higha) rrept\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "by simp"], ["proof (state)\nthis:\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n   (rep \\<propto> higha) rrept\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n   (rep \\<propto> higha) rrept\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "with rec_spec_rrept rno_rrept"], ["proof (chain)\npicking this:\n  \\<forall>rept.\n     Dag ((rep \\<propto> id) (higha (rep p)))\n      (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rept \\<and>\n     (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n     Dag pb lowb highb rept \\<and>\n     (\\<forall>pt.\n         pt \\<notin> set_of rept \\<longrightarrow>\n         (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt)\n  \\<forall>no\\<in>set_of rrept. rep no = no\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n   (rep \\<propto> higha) rrept", "have repoint_rrept: \"Dag pb lowb highb rrept \\<and> \n      (\\<forall>pt. pt \\<notin> set_of rrept \\<longrightarrow> \n      (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt)\""], ["proof (prove)\nusing this:\n  \\<forall>rept.\n     Dag ((rep \\<propto> id) (higha (rep p)))\n      (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rept \\<and>\n     (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n     Dag pb lowb highb rept \\<and>\n     (\\<forall>pt.\n         pt \\<notin> set_of rept \\<longrightarrow>\n         (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt)\n  \\<forall>no\\<in>set_of rrept. rep no = no\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n   (rep \\<propto> higha) rrept\n\ngoal (1 subgoal):\n 1. Dag pb lowb highb rrept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rrept \\<longrightarrow>\n        (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt)", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>rept.\n                Dag ((rep \\<propto> id) (higha (rep p)))\n                 (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n                 rept \\<and>\n                (\\<forall>no\\<in>set_of rept. rep no = no) \\<longrightarrow>\n                Dag pb lowb highb rept \\<and>\n                (\\<forall>pt.\n                    pt \\<notin> set_of rept \\<longrightarrow>\n                    (lowa(rep p := pa)) pt = lowb pt \\<and>\n                    higha pt = highb pt);\n     \\<forall>no\\<in>set_of rrept. rep no = no;\n     Dag ((rep \\<propto> id) (higha (rep p)))\n      (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept\\<rbrakk>\n    \\<Longrightarrow> Dag pb lowb highb rrept \\<and>\n                      (\\<forall>pt.\n                          pt \\<notin> set_of rrept \\<longrightarrow>\n                          (lowa(rep p := pa)) pt = lowb pt \\<and>\n                          higha pt = highb pt)", "apply (erule_tac x=rrept in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>no\\<in>set_of rrept. rep no = no;\n     Dag ((rep \\<propto> id) (higha (rep p)))\n      (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept;\n     Dag ((rep \\<propto> id) (higha (rep p)))\n      (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept \\<and>\n     (\\<forall>no\\<in>set_of rrept. rep no = no) \\<longrightarrow>\n     Dag pb lowb highb rrept \\<and>\n     (\\<forall>pt.\n         pt \\<notin> set_of rrept \\<longrightarrow>\n         (lowa(rep p := pa)) pt = lowb pt \\<and>\n         higha pt = highb pt)\\<rbrakk>\n    \\<Longrightarrow> Dag pb lowb highb rrept \\<and>\n                      (\\<forall>pt.\n                          pt \\<notin> set_of rrept \\<longrightarrow>\n                          (lowa(rep p := pa)) pt = lowb pt \\<and>\n                          higha pt = highb pt)", "apply (erule impE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>no\\<in>set_of rrept. rep no = no;\n     Dag ((rep \\<propto> id) (higha (rep p)))\n      (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept\\<rbrakk>\n    \\<Longrightarrow> Dag ((rep \\<propto> id) (higha (rep p)))\n                       (rep \\<propto> lowa(rep p := pa))\n                       (rep \\<propto> higha) rrept \\<and>\n                      (\\<forall>no\\<in>set_of rrept. rep no = no)\n 2. \\<lbrakk>\\<forall>no\\<in>set_of rrept. rep no = no;\n     Dag ((rep \\<propto> id) (higha (rep p)))\n      (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept;\n     Dag pb lowb highb rrept \\<and>\n     (\\<forall>pt.\n         pt \\<notin> set_of rrept \\<longrightarrow>\n         (lowa(rep p := pa)) pt = lowb pt \\<and>\n         higha pt = highb pt)\\<rbrakk>\n    \\<Longrightarrow> Dag pb lowb highb rrept \\<and>\n                      (\\<forall>pt.\n                          pt \\<notin> set_of rrept \\<longrightarrow>\n                          (lowa(rep p := pa)) pt = lowb pt \\<and>\n                          higha pt = highb pt)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>no\\<in>set_of rrept. rep no = no;\n     Dag ((rep \\<propto> id) (higha (rep p)))\n      (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept;\n     Dag pb lowb highb rrept \\<and>\n     (\\<forall>pt.\n         pt \\<notin> set_of rrept \\<longrightarrow>\n         (lowa(rep p := pa)) pt = lowb pt \\<and>\n         higha pt = highb pt)\\<rbrakk>\n    \\<Longrightarrow> Dag pb lowb highb rrept \\<and>\n                      (\\<forall>pt.\n                          pt \\<notin> set_of rrept \\<longrightarrow>\n                          (lowa(rep p := pa)) pt = lowb pt \\<and>\n                          higha pt = highb pt)", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  Dag pb lowb highb rrept \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of rrept \\<longrightarrow>\n      (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt)\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "then"], ["proof (chain)\npicking this:\n  Dag pb lowb highb rrept \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of rrept \\<longrightarrow>\n      (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt)", "have ab_nc: \"(\\<forall>pt. pt \\<notin> set_of rrept \\<longrightarrow> \n      (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt)\""], ["proof (prove)\nusing this:\n  Dag pb lowb highb rrept \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of rrept \\<longrightarrow>\n      (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt)\n\ngoal (1 subgoal):\n 1. \\<forall>pt.\n       pt \\<notin> set_of rrept \\<longrightarrow>\n       (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt", "by simp"], ["proof (state)\nthis:\n  \\<forall>pt.\n     pt \\<notin> set_of rrept \\<longrightarrow>\n     (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "from repoint_rrept rrept_dag"], ["proof (chain)\npicking this:\n  Dag pb lowb highb rrept \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of rrept \\<longrightarrow>\n      (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt)\n  Dag ((rep \\<propto> high) (rep p)) (rep \\<propto> low)\n   (rep \\<propto> high) rrept", "obtain\n      pb_def: \"pb = ((rep \\<propto> high) (rep p))\" and\n      lowb_highb_def: \"(\\<forall> no \\<in> set_of rrept. lowb no = (rep \\<propto> low) no \\<and> highb no = (rep \\<propto> high) no)\""], ["proof (prove)\nusing this:\n  Dag pb lowb highb rrept \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of rrept \\<longrightarrow>\n      (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt)\n  Dag ((rep \\<propto> high) (rep p)) (rep \\<propto> low)\n   (rep \\<propto> high) rrept\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>pb = (rep \\<propto> high) (rep p);\n      \\<forall>no\\<in>set_of rrept.\n         lowb no = (rep \\<propto> low) no \\<and>\n         highb no = (rep \\<propto> high) no\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>pb = (rep \\<propto> high) (rep p);\n              \\<forall>no\\<in>set_of rrept.\n                 lowb no = (rep \\<propto> low) no \\<and>\n                 highb no = (rep \\<propto> high) no\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     Dag pb lowb highb rrept \\<and>\n     (\\<forall>pt.\n         pt \\<notin> set_of rrept \\<longrightarrow>\n         (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt);\n     Dag ((rep \\<propto> high) (rep p)) (rep \\<propto> low)\n      (rep \\<propto> high) rrept\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply (drule Dags_eq_hp_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>pb = (rep \\<propto> high) (rep p);\n              \\<forall>no\\<in>set_of rrept.\n                 lowb no = (rep \\<propto> low) no \\<and>\n                 highb no = (rep \\<propto> high) no\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     Dag pb lowb highb rrept \\<and>\n     (\\<forall>pt.\n         pt \\<notin> set_of rrept \\<longrightarrow>\n         (lowa(rep p := pa)) pt = lowb pt \\<and>\n         higha pt = highb pt)\\<rbrakk>\n    \\<Longrightarrow> Dag ?p'3 ?l'3 ?r'3 rrept\n 2. \\<lbrakk>\\<lbrakk>pb = (rep \\<propto> high) (rep p);\n              \\<forall>no\\<in>set_of rrept.\n                 lowb no = (rep \\<propto> low) no \\<and>\n                 highb no = (rep \\<propto> high) no\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     Dag pb lowb highb rrept \\<and>\n     (\\<forall>pt.\n         pt \\<notin> set_of rrept \\<longrightarrow>\n         (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt);\n     ?p'3 = (rep \\<propto> high) (rep p) \\<and>\n     (\\<forall>no\\<in>set_of rrept.\n         ?l'3 no = (rep \\<propto> low) no \\<and>\n         ?r'3 no = (rep \\<propto> high) no)\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  pb = (rep \\<propto> high) (rep p)\n  \\<forall>no\\<in>set_of rrept.\n     lowb no = (rep \\<propto> low) no \\<and>\n     highb no = (rep \\<propto> high) no\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "have rept_end_dag: \" Dag (rep p) lowb (highb(rep p := pb)) rept\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept", "have \"\\<forall> no \\<in> set_of rept. lowb no = (rep \\<propto> low) no \\<and> (highb(rep p := pb)) no = (rep \\<propto> high) no\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>no\\<in>set_of rept.\n       lowb no = (rep \\<propto> low) no \\<and>\n       (highb(rep p := pb)) no = (rep \\<propto> high) no", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>no.\n       no \\<in> set_of rept \\<Longrightarrow>\n       lowb no = (rep \\<propto> low) no \\<and>\n       (highb(rep p := pb)) no = (rep \\<propto> high) no", "fix no"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>no.\n       no \\<in> set_of rept \\<Longrightarrow>\n       lowb no = (rep \\<propto> low) no \\<and>\n       (highb(rep p := pb)) no = (rep \\<propto> high) no", "assume no_in_rept: \" no \\<in> set_of rept\""], ["proof (state)\nthis:\n  no \\<in> set_of rept\n\ngoal (1 subgoal):\n 1. \\<And>no.\n       no \\<in> set_of rept \\<Longrightarrow>\n       lowb no = (rep \\<propto> low) no \\<and>\n       (highb(rep p := pb)) no = (rep \\<propto> high) no", "show \"lowb no = (rep \\<propto> low) no \\<and> (highb(rep p := pb)) no = (rep \\<propto> high) no\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "proof (cases \"no \\<in> set_of rrept\")"], ["proof (state)\ngoal (2 subgoals):\n 1. no \\<in> set_of rrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no\n 2. no \\<notin> set_of rrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "case True"], ["proof (state)\nthis:\n  no \\<in> set_of rrept\n\ngoal (2 subgoals):\n 1. no \\<in> set_of rrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no\n 2. no \\<notin> set_of rrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "with lowb_highb_def pb_def"], ["proof (chain)\npicking this:\n  \\<forall>no\\<in>set_of rrept.\n     lowb no = (rep \\<propto> low) no \\<and>\n     highb no = (rep \\<propto> high) no\n  pb = (rep \\<propto> high) (rep p)\n  no \\<in> set_of rrept", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>no\\<in>set_of rrept.\n     lowb no = (rep \\<propto> low) no \\<and>\n     highb no = (rep \\<propto> high) no\n  pb = (rep \\<propto> high) (rep p)\n  no \\<in> set_of rrept\n\ngoal (1 subgoal):\n 1. lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "by simp"], ["proof (state)\nthis:\n  lowb no = (rep \\<propto> low) no \\<and>\n  (highb(rep p := pb)) no = (rep \\<propto> high) no\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of rrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. no \\<notin> set_of rrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "assume no_notin_rrept: \" no \\<notin> set_of rrept\""], ["proof (state)\nthis:\n  no \\<notin> set_of rrept\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of rrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "proof (cases \"no \\<in> set_of lrept\")"], ["proof (state)\ngoal (2 subgoals):\n 1. no \\<in> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no\n 2. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "case True"], ["proof (state)\nthis:\n  no \\<in> set_of lrept\n\ngoal (2 subgoals):\n 1. no \\<in> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no\n 2. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "with no_notin_rrept rp_notin_lrept ab_nc"], ["proof (chain)\npicking this:\n  no \\<notin> set_of rrept\n  rep p \\<notin> set_of lrept\n  \\<forall>pt.\n     pt \\<notin> set_of rrept \\<longrightarrow>\n     (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt\n  no \\<in> set_of lrept", "have ab_nc_no: \"lowa no = lowb no \\<and> higha no = highb no\""], ["proof (prove)\nusing this:\n  no \\<notin> set_of rrept\n  rep p \\<notin> set_of lrept\n  \\<forall>pt.\n     pt \\<notin> set_of rrept \\<longrightarrow>\n     (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt\n  no \\<in> set_of lrept\n\ngoal (1 subgoal):\n 1. lowa no = lowb no \\<and> higha no = highb no", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>no \\<notin> set_of rrept; rep p \\<notin> set_of lrept;\n     \\<forall>pt.\n        pt \\<notin> set_of rrept \\<longrightarrow>\n        (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt;\n     no \\<in> set_of lrept\\<rbrakk>\n    \\<Longrightarrow> lowa no = lowb no \\<and> higha no = highb no", "apply (erule_tac x=no in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>no \\<notin> set_of rrept; rep p \\<notin> set_of lrept;\n     no \\<in> set_of lrept;\n     no \\<notin> set_of rrept \\<longrightarrow>\n     (lowa(rep p := pa)) no = lowb no \\<and> higha no = highb no\\<rbrakk>\n    \\<Longrightarrow> lowa no = lowb no \\<and> higha no = highb no", "apply (erule impE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>no \\<notin> set_of rrept; rep p \\<notin> set_of lrept;\n     no \\<in> set_of lrept\\<rbrakk>\n    \\<Longrightarrow> no \\<notin> set_of rrept\n 2. \\<lbrakk>no \\<notin> set_of rrept; rep p \\<notin> set_of lrept;\n     no \\<in> set_of lrept;\n     (lowa(rep p := pa)) no = lowb no \\<and> higha no = highb no\\<rbrakk>\n    \\<Longrightarrow> lowa no = lowb no \\<and> higha no = highb no", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>no \\<notin> set_of rrept; rep p \\<notin> set_of lrept;\n     no \\<in> set_of lrept;\n     (lowa(rep p := pa)) no = lowb no \\<and> higha no = highb no\\<rbrakk>\n    \\<Longrightarrow> lowa no = lowb no \\<and> higha no = highb no", "apply (subgoal_tac \"no \\<noteq> rep p\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>no \\<notin> set_of rrept; rep p \\<notin> set_of lrept;\n     no \\<in> set_of lrept;\n     (lowa(rep p := pa)) no = lowb no \\<and> higha no = highb no;\n     no \\<noteq> rep p\\<rbrakk>\n    \\<Longrightarrow> lowa no = lowb no \\<and> higha no = highb no\n 2. \\<lbrakk>no \\<notin> set_of rrept; rep p \\<notin> set_of lrept;\n     no \\<in> set_of lrept;\n     (lowa(rep p := pa)) no = lowb no \\<and> higha no = highb no\\<rbrakk>\n    \\<Longrightarrow> no \\<noteq> rep p", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>no \\<notin> set_of rrept; rep p \\<notin> set_of lrept;\n     no \\<in> set_of lrept;\n     (lowa(rep p := pa)) no = lowb no \\<and> higha no = highb no\\<rbrakk>\n    \\<Longrightarrow> no \\<noteq> rep p", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  lowa no = lowb no \\<and> higha no = highb no\n\ngoal (2 subgoals):\n 1. no \\<in> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no\n 2. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "from lowa_higha_def True"], ["proof (chain)\npicking this:\n  \\<forall>no\\<in>set_of lrept.\n     lowa no = (rep \\<propto> low) no \\<and>\n     higha no = (rep \\<propto> high) no\n  no \\<in> set_of lrept", "have \n              \"lowa no = (rep \\<propto> low) no \\<and> higha no = (rep \\<propto> high) no\""], ["proof (prove)\nusing this:\n  \\<forall>no\\<in>set_of lrept.\n     lowa no = (rep \\<propto> low) no \\<and>\n     higha no = (rep \\<propto> high) no\n  no \\<in> set_of lrept\n\ngoal (1 subgoal):\n 1. lowa no = (rep \\<propto> low) no \\<and>\n    higha no = (rep \\<propto> high) no", "by auto"], ["proof (state)\nthis:\n  lowa no = (rep \\<propto> low) no \\<and> higha no = (rep \\<propto> high) no\n\ngoal (2 subgoals):\n 1. no \\<in> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no\n 2. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "with ab_nc_no"], ["proof (chain)\npicking this:\n  lowa no = lowb no \\<and> higha no = highb no\n  lowa no = (rep \\<propto> low) no \\<and> higha no = (rep \\<propto> high) no", "have \"lowb no = (rep \\<propto> low) no \\<and> highb no =(rep \\<propto> high) no\""], ["proof (prove)\nusing this:\n  lowa no = lowb no \\<and> higha no = highb no\n  lowa no = (rep \\<propto> low) no \\<and> higha no = (rep \\<propto> high) no\n\ngoal (1 subgoal):\n 1. lowb no = (rep \\<propto> low) no \\<and>\n    highb no = (rep \\<propto> high) no", "by simp"], ["proof (state)\nthis:\n  lowb no = (rep \\<propto> low) no \\<and> highb no = (rep \\<propto> high) no\n\ngoal (2 subgoals):\n 1. no \\<in> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no\n 2. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "with rp_notin_lrept True"], ["proof (chain)\npicking this:\n  rep p \\<notin> set_of lrept\n  no \\<in> set_of lrept\n  lowb no = (rep \\<propto> low) no \\<and> highb no = (rep \\<propto> high) no", "show ?thesis"], ["proof (prove)\nusing this:\n  rep p \\<notin> set_of lrept\n  no \\<in> set_of lrept\n  lowb no = (rep \\<propto> low) no \\<and> highb no = (rep \\<propto> high) no\n\ngoal (1 subgoal):\n 1. lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "apply (subgoal_tac \"no \\<noteq> rep p\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>rep p \\<notin> set_of lrept; no \\<in> set_of lrept;\n     lowb no = (rep \\<propto> low) no \\<and>\n     highb no = (rep \\<propto> high) no;\n     no \\<noteq> rep p\\<rbrakk>\n    \\<Longrightarrow> lowb no = (rep \\<propto> low) no \\<and>\n                      (highb(rep p := pb)) no = (rep \\<propto> high) no\n 2. \\<lbrakk>rep p \\<notin> set_of lrept; no \\<in> set_of lrept;\n     lowb no = (rep \\<propto> low) no \\<and>\n     highb no = (rep \\<propto> high) no\\<rbrakk>\n    \\<Longrightarrow> no \\<noteq> rep p", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>rep p \\<notin> set_of lrept; no \\<in> set_of lrept;\n     lowb no = (rep \\<propto> low) no \\<and>\n     highb no = (rep \\<propto> high) no\\<rbrakk>\n    \\<Longrightarrow> no \\<noteq> rep p", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  lowb no = (rep \\<propto> low) no \\<and>\n  (highb(rep p := pb)) no = (rep \\<propto> high) no\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "assume no_notin_lrept: \" no \\<notin> set_of lrept\""], ["proof (state)\nthis:\n  no \\<notin> set_of lrept\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "with no_in_rept rept_def no_notin_rrept"], ["proof (chain)\npicking this:\n  no \\<in> set_of rept\n  rept = Node lrept (rep p) rrept\n  no \\<notin> set_of rrept\n  no \\<notin> set_of lrept", "have no_rp: \"no = rep p\""], ["proof (prove)\nusing this:\n  no \\<in> set_of rept\n  rept = Node lrept (rep p) rrept\n  no \\<notin> set_of rrept\n  no \\<notin> set_of lrept\n\ngoal (1 subgoal):\n 1. no = rep p", "by simp"], ["proof (state)\nthis:\n  no = rep p\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "with rp_notin_lrept low_lowa_nc"], ["proof (chain)\npicking this:\n  rep p \\<notin> set_of lrept\n  \\<forall>pt.\n     pt \\<notin> set_of lrept \\<longrightarrow>\n     low pt = lowa pt \\<and> high pt = higha pt\n  no = rep p", "have a_nc:  \n              \"low no = lowa no \\<and> high no = higha no\""], ["proof (prove)\nusing this:\n  rep p \\<notin> set_of lrept\n  \\<forall>pt.\n     pt \\<notin> set_of lrept \\<longrightarrow>\n     low pt = lowa pt \\<and> high pt = higha pt\n  no = rep p\n\ngoal (1 subgoal):\n 1. low no = lowa no \\<and> high no = higha no", "by auto"], ["proof (state)\nthis:\n  low no = lowa no \\<and> high no = higha no\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "from rp_notin_rrept no_rp ab_nc"], ["proof (chain)\npicking this:\n  rep p \\<notin> set_of rrept\n  no = rep p\n  \\<forall>pt.\n     pt \\<notin> set_of rrept \\<longrightarrow>\n     (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt", "have \n              \"(lowa(rep p := pa)) no = lowb no \\<and> higha no = highb no\""], ["proof (prove)\nusing this:\n  rep p \\<notin> set_of rrept\n  no = rep p\n  \\<forall>pt.\n     pt \\<notin> set_of rrept \\<longrightarrow>\n     (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt\n\ngoal (1 subgoal):\n 1. (lowa(rep p := pa)) no = lowb no \\<and> higha no = highb no", "by auto"], ["proof (state)\nthis:\n  (lowa(rep p := pa)) no = lowb no \\<and> higha no = highb no\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "with a_nc pa_def no_rp"], ["proof (chain)\npicking this:\n  low no = lowa no \\<and> high no = higha no\n  pa = (rep \\<propto> low) (rep p)\n  no = rep p\n  (lowa(rep p := pa)) no = lowb no \\<and> higha no = highb no", "have \"(rep \\<propto> low) no = lowb no \\<and> high no = highb no\""], ["proof (prove)\nusing this:\n  low no = lowa no \\<and> high no = higha no\n  pa = (rep \\<propto> low) (rep p)\n  no = rep p\n  (lowa(rep p := pa)) no = lowb no \\<and> higha no = highb no\n\ngoal (1 subgoal):\n 1. (rep \\<propto> low) no = lowb no \\<and> high no = highb no", "by auto"], ["proof (state)\nthis:\n  (rep \\<propto> low) no = lowb no \\<and> high no = highb no\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "with pb_def no_rp"], ["proof (chain)\npicking this:\n  pb = (rep \\<propto> high) (rep p)\n  no = rep p\n  (rep \\<propto> low) no = lowb no \\<and> high no = highb no", "show ?thesis"], ["proof (prove)\nusing this:\n  pb = (rep \\<propto> high) (rep p)\n  no = rep p\n  (rep \\<propto> low) no = lowb no \\<and> high no = highb no\n\ngoal (1 subgoal):\n 1. lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "by simp"], ["proof (state)\nthis:\n  lowb no = (rep \\<propto> low) no \\<and>\n  (highb(rep p := pb)) no = (rep \\<propto> high) no\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lowb no = (rep \\<propto> low) no \\<and>\n  (highb(rep p := pb)) no = (rep \\<propto> high) no\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lowb no = (rep \\<propto> low) no \\<and>\n  (highb(rep p := pb)) no = (rep \\<propto> high) no\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>no\\<in>set_of rept.\n     lowb no = (rep \\<propto> low) no \\<and>\n     (highb(rep p := pb)) no = (rep \\<propto> high) no\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept", "with rept_dag"], ["proof (chain)\npicking this:\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n  \\<forall>no\\<in>set_of rept.\n     lowb no = (rep \\<propto> low) no \\<and>\n     (highb(rep p := pb)) no = (rep \\<propto> high) no", "have \" Dag (rep p) lowb (highb(rep p := pb)) rept = \n        Dag (rep p) (rep \\<propto> low) (rep \\<propto> high) rept\""], ["proof (prove)\nusing this:\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n  \\<forall>no\\<in>set_of rept.\n     lowb no = (rep \\<propto> low) no \\<and>\n     (highb(rep p := pb)) no = (rep \\<propto> high) no\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept =\n    Dag (rep p) (rep \\<propto> low) (rep \\<propto> high) rept", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n              (rep \\<propto> high) rept;\n     \\<forall>no\\<in>set_of rept.\n        lowb no = (rep \\<propto> low) no \\<and>\n        (highb(rep p := pb)) no = (rep \\<propto> high) no\\<rbrakk>\n    \\<Longrightarrow> Dag (rep p) lowb (highb(rep p := pb)) rept =\n                      Dag (rep p) (rep \\<propto> low) (rep \\<propto> high)\n                       rept", "thm heaps_eq_Dag_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n              (rep \\<propto> high) rept;\n     \\<forall>no\\<in>set_of rept.\n        lowb no = (rep \\<propto> low) no \\<and>\n        (highb(rep p := pb)) no = (rep \\<propto> high) no\\<rbrakk>\n    \\<Longrightarrow> Dag (rep p) lowb (highb(rep p := pb)) rept =\n                      Dag (rep p) (rep \\<propto> low) (rep \\<propto> high)\n                       rept", "apply (rule heaps_eq_Dag_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n              (rep \\<propto> high) rept;\n     \\<forall>no\\<in>set_of rept.\n        lowb no = (rep \\<propto> low) no \\<and>\n        (highb(rep p := pb)) no = (rep \\<propto> high) no\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>set_of rept.\n                         lowb x = (rep \\<propto> low) x \\<and>\n                         (highb(rep p := pb)) x = (rep \\<propto> high) x", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  Dag (rep p) lowb (highb(rep p := pb)) rept =\n  Dag (rep p) (rep \\<propto> low) (rep \\<propto> high) rept\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept", "with rept_dag p_nNull"], ["proof (chain)\npicking this:\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n  p \\<noteq> Null\n  Dag (rep p) lowb (highb(rep p := pb)) rept =\n  Dag (rep p) (rep \\<propto> low) (rep \\<propto> high) rept", "show ?thesis"], ["proof (prove)\nusing this:\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n  p \\<noteq> Null\n  Dag (rep p) lowb (highb(rep p := pb)) rept =\n  Dag (rep p) (rep \\<propto> low) (rep \\<propto> high) rept\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept", "by simp"], ["proof (state)\nthis:\n  Dag (rep p) lowb (highb(rep p := pb)) rept\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Dag (rep p) lowb (highb(rep p := pb)) rept\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "have \"(\\<forall>pt. pt \\<notin> set_of rept \\<longrightarrow> low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>pt.\n       pt \\<notin> set_of rept \\<longrightarrow>\n       low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt", "proof (intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>pt.\n       pt \\<notin> set_of rept \\<Longrightarrow>\n       low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt", "fix pt"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>pt.\n       pt \\<notin> set_of rept \\<Longrightarrow>\n       low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt", "assume pt_notin_rept: \"pt \\<notin> set_of rept\""], ["proof (state)\nthis:\n  pt \\<notin> set_of rept\n\ngoal (1 subgoal):\n 1. \\<And>pt.\n       pt \\<notin> set_of rept \\<Longrightarrow>\n       low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt", "with rept_def"], ["proof (chain)\npicking this:\n  rept = Node lrept (rep p) rrept\n  pt \\<notin> set_of rept", "obtain\n        pt_notin_lrept: \"pt \\<notin> set_of lrept\" and\n        pt_notin_rrept: \"pt \\<notin> set_of rrept\" and\n        pt_neq_rp: \"pt \\<noteq> rep p\""], ["proof (prove)\nusing this:\n  rept = Node lrept (rep p) rrept\n  pt \\<notin> set_of rept\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>pt \\<notin> set_of lrept; pt \\<notin> set_of rrept;\n      pt \\<noteq> rep p\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by simp"], ["proof (state)\nthis:\n  pt \\<notin> set_of lrept\n  pt \\<notin> set_of rrept\n  pt \\<noteq> rep p\n\ngoal (1 subgoal):\n 1. \\<And>pt.\n       pt \\<notin> set_of rept \\<Longrightarrow>\n       low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt", "with low_lowa_nc ab_nc"], ["proof (chain)\npicking this:\n  \\<forall>pt.\n     pt \\<notin> set_of lrept \\<longrightarrow>\n     low pt = lowa pt \\<and> high pt = higha pt\n  \\<forall>pt.\n     pt \\<notin> set_of rrept \\<longrightarrow>\n     (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt\n  pt \\<notin> set_of lrept\n  pt \\<notin> set_of rrept\n  pt \\<noteq> rep p", "show \"low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt\""], ["proof (prove)\nusing this:\n  \\<forall>pt.\n     pt \\<notin> set_of lrept \\<longrightarrow>\n     low pt = lowa pt \\<and> high pt = higha pt\n  \\<forall>pt.\n     pt \\<notin> set_of rrept \\<longrightarrow>\n     (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt\n  pt \\<notin> set_of lrept\n  pt \\<notin> set_of rrept\n  pt \\<noteq> rep p\n\ngoal (1 subgoal):\n 1. low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt", "by auto"], ["proof (state)\nthis:\n  low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>pt.\n     pt \\<notin> set_of rept \\<longrightarrow>\n     low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "with rept_end_dag"], ["proof (chain)\npicking this:\n  Dag (rep p) lowb (highb(rep p := pb)) rept\n  \\<forall>pt.\n     pt \\<notin> set_of rept \\<longrightarrow>\n     low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt", "show ?thesis"], ["proof (prove)\nusing this:\n  Dag (rep p) lowb (highb(rep p := pb)) rept\n  \\<forall>pt.\n     pt \\<notin> set_of rept \\<longrightarrow>\n     low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "by simp"], ["proof (state)\nthis:\n  Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of rept \\<longrightarrow>\n      low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of rept \\<longrightarrow>\n      low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in Repoint_impl) Repoint_spec:\nshows \n  \"\\<forall>\\<sigma> rept. \\<Gamma>\\<turnstile> \\<lbrace>\\<sigma>. Dag ((\\<acute>rep \\<propto> id) \\<acute>p) (\\<acute>rep \\<propto> \\<acute>low) (\\<acute>rep \\<propto> \\<acute>high) rept \n  \\<and> (\\<forall> no \\<in> set_of rept. \\<acute>rep no = no) \\<rbrace> \n  \\<acute>p :== PROC Repoint (\\<acute>p)\n  \\<lbrace>Dag \\<acute>p \\<acute>low \\<acute>high rept \\<and>\n  (\\<forall>pt. pt \\<notin> set_of rept \\<longrightarrow> \\<^bsup>\\<sigma>\\<^esup>low pt = \\<acute>low pt \\<and> \\<^bsup>\\<sigma>\\<^esup>high pt = \\<acute>high pt)\\<rbrace>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<sigma> rept.\n       \\<Gamma>\n          \\<turnstile> \\<lbrace>\\<sigma>. Dag\n     ((\\<acute>rep \\<propto> id) \\<acute>p)\n     (\\<acute>rep \\<propto> \\<acute>low)\n     (\\<acute>rep \\<propto> \\<acute>high) rept \\<and>\n    (\\<forall>no\\<in>set_of rept. no\\<rightarrow>\\<acute>rep = no)\\<rbrace>\n                       \\<acute>p :== PROC Repoint(\\<acute>p)\n                       \\<lbrace>Dag \\<acute>p \\<acute>low \\<acute>high\n                                 rept \\<and>\n                                (\\<forall>pt.\n                                    pt \\<notin> set_of\n           rept \\<longrightarrow>\n                                    \\<^bsup>\\<sigma>\\<^esup>low pt =\n                                    pt\\<rightarrow>\\<acute>low \\<and>\n                                    \\<^bsup>\\<sigma>\\<^esup>high pt =\n                                    pt\\<rightarrow>\\<acute>high)\\<rbrace>", "apply (hoare_rule HoarePartial.ProcRec1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<sigma> rept.\n       \\<Gamma>,(\\<Union>\\<sigma> rept.\n                    {(\\<lbrace>\\<sigma>. Dag\n    ((\\<acute>rep \\<propto> id) \\<acute>p)\n    (\\<acute>rep \\<propto> \\<acute>low) (\\<acute>rep \\<propto> \\<acute>high)\n    rept \\<and>\n   (\\<forall>no\\<in>set_of rept. no\\<rightarrow>\\<acute>rep = no)\\<rbrace>,\n                      Repoint_'proc,\n                      \\<lbrace>Dag \\<acute>p \\<acute>low \\<acute>high\n                                rept \\<and>\n                               (\\<forall>pt.\n                                   pt \\<notin> set_of rept \\<longrightarrow>\n                                   \\<^bsup>\\<sigma>\\<^esup>low pt =\n                                   pt\\<rightarrow>\\<acute>low \\<and>\n                                   \\<^bsup>\\<sigma>\\<^esup>high pt =\n                                   pt\\<rightarrow>\\<acute>high)\\<rbrace>,\n                      {})})\n          \\<turnstile> \\<lbrace>\\<sigma>. Dag\n     ((\\<acute>rep \\<propto> id) \\<acute>p)\n     (\\<acute>rep \\<propto> \\<acute>low)\n     (\\<acute>rep \\<propto> \\<acute>high) rept \\<and>\n    (\\<forall>no\\<in>set_of rept. no\\<rightarrow>\\<acute>rep = no)\\<rbrace>\n                       IF \\<acute>p \\<noteq> Null\n                       THEN \\<acute>p :==\n                            \\<acute>p\\<rightarrow>\\<acute>rep;;\n                         IF \\<acute>p \\<noteq> Null\n                         THEN \\<acute>p\\<rightarrow>\\<acute>low :== CALL Repoint(\\<acute>p\\<rightarrow>\\<acute>low);;\n                           \\<acute>p\\<rightarrow>\\<acute>high :== CALL Repoint(\\<acute>p\\<rightarrow>\\<acute>high)\n                         FI\n                       FI\n                       \\<lbrace>Dag \\<acute>p \\<acute>low \\<acute>high\n                                 rept \\<and>\n                                (\\<forall>pt.\n                                    pt \\<notin> set_of\n           rept \\<longrightarrow>\n                                    \\<^bsup>\\<sigma>\\<^esup>low pt =\n                                    pt\\<rightarrow>\\<acute>low \\<and>\n                                    \\<^bsup>\\<sigma>\\<^esup>high pt =\n                                    pt\\<rightarrow>\\<acute>high)\\<rbrace>", "apply vcg"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no\\<rbrakk>\n       \\<Longrightarrow> (p \\<noteq> Null \\<longrightarrow>\n                          (rep p \\<noteq> Null \\<longrightarrow>\n                           (\\<exists>repta.\n                               Dag ((rep \\<propto> id) (low (rep p)))\n                                (rep \\<propto> low) (rep \\<propto> high)\n                                repta \\<and>\n                               (\\<forall>no\\<in>set_of repta.\n                                   rep no = no) \\<and>\n                               (\\<forall>lowa higha pa.\n                                   Dag pa lowa higha repta \\<and>\n                                   (\\<forall>pt.\n pt \\<notin> set_of repta \\<longrightarrow>\n low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n                                   (\\<exists>repta.\n Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n  (rep \\<propto> higha) repta \\<and>\n (\\<forall>no\\<in>set_of repta. rep no = no) \\<and>\n (\\<forall>lowb highb pb.\n     Dag pb lowb highb repta \\<and>\n     (\\<forall>pt.\n         pt \\<notin> set_of repta \\<longrightarrow>\n         (lowa(rep p := pa)) pt = lowb pt \\<and>\n         higha pt = highb pt) \\<longrightarrow>\n     Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n     (\\<forall>pt.\n         pt \\<notin> set_of rept \\<longrightarrow>\n         low pt = lowb pt \\<and>\n         high pt = (highb(rep p := pb)) pt)))))) \\<and>\n                          (\\<not> rep p \\<noteq> Null \\<longrightarrow>\n                           Dag (rep p) low high rept \\<and>\n                           (\\<forall>pt.\n                               pt \\<notin> set_of rept \\<longrightarrow>\n                               low pt = low pt \\<and>\n                               high pt = high pt))) \\<and>\n                         (\\<not> p \\<noteq> Null \\<longrightarrow>\n                          Dag p low high rept \\<and>\n                          (\\<forall>pt.\n                              pt \\<notin> set_of rept \\<longrightarrow>\n                              low pt = low pt \\<and> high pt = high pt))", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no\\<rbrakk>\n       \\<Longrightarrow> p \\<noteq> Null \\<longrightarrow>\n                         (rep p \\<noteq> Null \\<longrightarrow>\n                          (\\<exists>repta.\n                              Dag ((rep \\<propto> id) (low (rep p)))\n                               (rep \\<propto> low) (rep \\<propto> high)\n                               repta \\<and>\n                              (\\<forall>no\\<in>set_of repta.\n                                  rep no = no) \\<and>\n                              (\\<forall>lowa higha pa.\n                                  Dag pa lowa higha repta \\<and>\n                                  (\\<forall>pt.\npt \\<notin> set_of repta \\<longrightarrow>\nlow pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n                                  (\\<exists>repta.\nDag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n (rep \\<propto> higha) repta \\<and>\n(\\<forall>no\\<in>set_of repta. rep no = no) \\<and>\n(\\<forall>lowb highb pb.\n    Dag pb lowb highb repta \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of repta \\<longrightarrow>\n        (lowa(rep p := pa)) pt = lowb pt \\<and>\n        higha pt = highb pt) \\<longrightarrow>\n    Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and>\n        high pt = (highb(rep p := pb)) pt)))))) \\<and>\n                         (\\<not> rep p \\<noteq> Null \\<longrightarrow>\n                          Dag (rep p) low high rept \\<and>\n                          (\\<forall>pt.\n                              pt \\<notin> set_of rept \\<longrightarrow>\n                              low pt = low pt \\<and> high pt = high pt))\n 2. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no\\<rbrakk>\n       \\<Longrightarrow> \\<not> p \\<noteq> Null \\<longrightarrow>\n                         Dag p low high rept \\<and>\n                         (\\<forall>pt.\n                             pt \\<notin> set_of rept \\<longrightarrow>\n                             low pt = low pt \\<and> high pt = high pt)", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no\\<rbrakk>\n       \\<Longrightarrow> \\<not> p \\<noteq> Null \\<longrightarrow>\n                         Dag p low high rept \\<and>\n                         (\\<forall>pt.\n                             pt \\<notin> set_of rept \\<longrightarrow>\n                             low pt = low pt \\<and> high pt = high pt)\n 2. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no\\<rbrakk>\n       \\<Longrightarrow> p \\<noteq> Null \\<longrightarrow>\n                         (rep p \\<noteq> Null \\<longrightarrow>\n                          (\\<exists>repta.\n                              Dag ((rep \\<propto> id) (low (rep p)))\n                               (rep \\<propto> low) (rep \\<propto> high)\n                               repta \\<and>\n                              (\\<forall>no\\<in>set_of repta.\n                                  rep no = no) \\<and>\n                              (\\<forall>lowa higha pa.\n                                  Dag pa lowa higha repta \\<and>\n                                  (\\<forall>pt.\npt \\<notin> set_of repta \\<longrightarrow>\nlow pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n                                  (\\<exists>repta.\nDag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n (rep \\<propto> higha) repta \\<and>\n(\\<forall>no\\<in>set_of repta. rep no = no) \\<and>\n(\\<forall>lowb highb pb.\n    Dag pb lowb highb repta \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of repta \\<longrightarrow>\n        (lowa(rep p := pa)) pt = lowb pt \\<and>\n        higha pt = highb pt) \\<longrightarrow>\n    Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and>\n        high pt = (highb(rep p := pb)) pt)))))) \\<and>\n                         (\\<not> rep p \\<noteq> Null \\<longrightarrow>\n                          Dag (rep p) low high rept \\<and>\n                          (\\<forall>pt.\n                              pt \\<notin> set_of rept \\<longrightarrow>\n                              low pt = low pt \\<and> high pt = high pt))", "apply  (clarsimp simp add: null_comp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no\\<rbrakk>\n       \\<Longrightarrow> p \\<noteq> Null \\<longrightarrow>\n                         (rep p \\<noteq> Null \\<longrightarrow>\n                          (\\<exists>repta.\n                              Dag ((rep \\<propto> id) (low (rep p)))\n                               (rep \\<propto> low) (rep \\<propto> high)\n                               repta \\<and>\n                              (\\<forall>no\\<in>set_of repta.\n                                  rep no = no) \\<and>\n                              (\\<forall>lowa higha pa.\n                                  Dag pa lowa higha repta \\<and>\n                                  (\\<forall>pt.\npt \\<notin> set_of repta \\<longrightarrow>\nlow pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n                                  (\\<exists>repta.\nDag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n (rep \\<propto> higha) repta \\<and>\n(\\<forall>no\\<in>set_of repta. rep no = no) \\<and>\n(\\<forall>lowb highb pb.\n    Dag pb lowb highb repta \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of repta \\<longrightarrow>\n        (lowa(rep p := pa)) pt = lowb pt \\<and>\n        higha pt = highb pt) \\<longrightarrow>\n    Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and>\n        high pt = (highb(rep p := pb)) pt)))))) \\<and>\n                         (\\<not> rep p \\<noteq> Null \\<longrightarrow>\n                          Dag (rep p) low high rept \\<and>\n                          (\\<forall>pt.\n                              pt \\<notin> set_of rept \\<longrightarrow>\n                              low pt = low pt \\<and> high pt = high pt))", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no; p \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> (rep p \\<noteq> Null \\<longrightarrow>\n                          (\\<exists>repta.\n                              Dag ((rep \\<propto> id) (low (rep p)))\n                               (rep \\<propto> low) (rep \\<propto> high)\n                               repta \\<and>\n                              (\\<forall>no\\<in>set_of repta.\n                                  rep no = no) \\<and>\n                              (\\<forall>lowa higha pa.\n                                  Dag pa lowa higha repta \\<and>\n                                  (\\<forall>pt.\npt \\<notin> set_of repta \\<longrightarrow>\nlow pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n                                  (\\<exists>repta.\nDag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n (rep \\<propto> higha) repta \\<and>\n(\\<forall>no\\<in>set_of repta. rep no = no) \\<and>\n(\\<forall>lowb highb pb.\n    Dag pb lowb highb repta \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of repta \\<longrightarrow>\n        (lowa(rep p := pa)) pt = lowb pt \\<and>\n        higha pt = highb pt) \\<longrightarrow>\n    Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and>\n        high pt = (highb(rep p := pb)) pt)))))) \\<and>\n                         (\\<not> rep p \\<noteq> Null \\<longrightarrow>\n                          Dag (rep p) low high rept \\<and>\n                          (\\<forall>pt.\n                              pt \\<notin> set_of rept \\<longrightarrow>\n                              low pt = low pt \\<and> high pt = high pt))", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no; p \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> rep p \\<noteq> Null \\<longrightarrow>\n                         (\\<exists>repta.\n                             Dag ((rep \\<propto> id) (low (rep p)))\n                              (rep \\<propto> low) (rep \\<propto> high)\n                              repta \\<and>\n                             (\\<forall>no\\<in>set_of repta.\n                                 rep no = no) \\<and>\n                             (\\<forall>lowa higha pa.\n                                 Dag pa lowa higha repta \\<and>\n                                 (\\<forall>pt.\n                                     pt \\<notin> set_of\n            repta \\<longrightarrow>\n                                     low pt = lowa pt \\<and>\n                                     high pt = higha pt) \\<longrightarrow>\n                                 (\\<exists>repta.\n                                     Dag\n((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n(rep \\<propto> higha) repta \\<and>\n                                     (\\<forall>no\\<in>set_of repta.\n   rep no = no) \\<and>\n                                     (\\<forall>lowb highb pb.\n   Dag pb lowb highb repta \\<and>\n   (\\<forall>pt.\n       pt \\<notin> set_of repta \\<longrightarrow>\n       (lowa(rep p := pa)) pt = lowb pt \\<and>\n       higha pt = highb pt) \\<longrightarrow>\n   Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n   (\\<forall>pt.\n       pt \\<notin> set_of rept \\<longrightarrow>\n       low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)))))\n 2. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no; p \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> \\<not> rep p \\<noteq> Null \\<longrightarrow>\n                         Dag (rep p) low high rept \\<and>\n                         (\\<forall>pt.\n                             pt \\<notin> set_of rept \\<longrightarrow>\n                             low pt = low pt \\<and> high pt = high pt)", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no; p \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> \\<not> rep p \\<noteq> Null \\<longrightarrow>\n                         Dag (rep p) low high rept \\<and>\n                         (\\<forall>pt.\n                             pt \\<notin> set_of rept \\<longrightarrow>\n                             low pt = low pt \\<and> high pt = high pt)\n 2. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no; p \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> rep p \\<noteq> Null \\<longrightarrow>\n                         (\\<exists>repta.\n                             Dag ((rep \\<propto> id) (low (rep p)))\n                              (rep \\<propto> low) (rep \\<propto> high)\n                              repta \\<and>\n                             (\\<forall>no\\<in>set_of repta.\n                                 rep no = no) \\<and>\n                             (\\<forall>lowa higha pa.\n                                 Dag pa lowa higha repta \\<and>\n                                 (\\<forall>pt.\n                                     pt \\<notin> set_of\n            repta \\<longrightarrow>\n                                     low pt = lowa pt \\<and>\n                                     high pt = higha pt) \\<longrightarrow>\n                                 (\\<exists>repta.\n                                     Dag\n((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n(rep \\<propto> higha) repta \\<and>\n                                     (\\<forall>no\\<in>set_of repta.\n   rep no = no) \\<and>\n                                     (\\<forall>lowb highb pb.\n   Dag pb lowb highb repta \\<and>\n   (\\<forall>pt.\n       pt \\<notin> set_of repta \\<longrightarrow>\n       (lowa(rep p := pa)) pt = lowb pt \\<and>\n       higha pt = highb pt) \\<longrightarrow>\n   Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n   (\\<forall>pt.\n       pt \\<notin> set_of rept \\<longrightarrow>\n       low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)))))", "apply  clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no; p \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> rep p \\<noteq> Null \\<longrightarrow>\n                         (\\<exists>repta.\n                             Dag ((rep \\<propto> id) (low (rep p)))\n                              (rep \\<propto> low) (rep \\<propto> high)\n                              repta \\<and>\n                             (\\<forall>no\\<in>set_of repta.\n                                 rep no = no) \\<and>\n                             (\\<forall>lowa higha pa.\n                                 Dag pa lowa higha repta \\<and>\n                                 (\\<forall>pt.\n                                     pt \\<notin> set_of\n            repta \\<longrightarrow>\n                                     low pt = lowa pt \\<and>\n                                     high pt = higha pt) \\<longrightarrow>\n                                 (\\<exists>repta.\n                                     Dag\n((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n(rep \\<propto> higha) repta \\<and>\n                                     (\\<forall>no\\<in>set_of repta.\n   rep no = no) \\<and>\n                                     (\\<forall>lowb highb pb.\n   Dag pb lowb highb repta \\<and>\n   (\\<forall>pt.\n       pt \\<notin> set_of repta \\<longrightarrow>\n       (lowa(rep p := pa)) pt = lowb pt \\<and>\n       higha pt = highb pt) \\<longrightarrow>\n   Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n   (\\<forall>pt.\n       pt \\<notin> set_of rept \\<longrightarrow>\n       low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)))))", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no; p \\<noteq> Null;\n        rep p \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> \\<exists>repta.\n                            Dag ((rep \\<propto> id) (low (rep p)))\n                             (rep \\<propto> low) (rep \\<propto> high)\n                             repta \\<and>\n                            (\\<forall>no\\<in>set_of repta.\n                                rep no = no) \\<and>\n                            (\\<forall>lowa higha pa.\n                                Dag pa lowa higha repta \\<and>\n                                (\\<forall>pt.\n                                    pt \\<notin> set_of\n           repta \\<longrightarrow>\n                                    low pt = lowa pt \\<and>\n                                    high pt = higha pt) \\<longrightarrow>\n                                (\\<exists>repta.\n                                    Dag ((rep \\<propto> id) (higha (rep p)))\n                                     (rep \\<propto> lowa(rep p := pa))\n                                     (rep \\<propto> higha) repta \\<and>\n                                    (\\<forall>no\\<in>set_of repta.\n  rep no = no) \\<and>\n                                    (\\<forall>lowb highb pb.\n  Dag pb lowb highb repta \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of repta \\<longrightarrow>\n      (lowa(rep p := pa)) pt = lowb pt \\<and>\n      higha pt = highb pt) \\<longrightarrow>\n  Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of rept \\<longrightarrow>\n      low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no; p \\<noteq> Null;\n        rep p \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> \\<exists>repta.\n                            Dag ((rep \\<propto> id) (low (rep p)))\n                             (rep \\<propto> low) (rep \\<propto> high)\n                             repta \\<and>\n                            (\\<forall>no\\<in>set_of repta.\n                                rep no = no) \\<and>\n                            (\\<forall>lowa higha pa.\n                                Dag pa lowa higha repta \\<and>\n                                (\\<forall>pt.\n                                    pt \\<notin> set_of\n           repta \\<longrightarrow>\n                                    low pt = lowa pt \\<and>\n                                    high pt = higha pt) \\<longrightarrow>\n                                (\\<exists>repta.\n                                    Dag ((rep \\<propto> id) (higha (rep p)))\n                                     (rep \\<propto> lowa(rep p := pa))\n                                     (rep \\<propto> higha) repta \\<and>\n                                    (\\<forall>no\\<in>set_of repta.\n  rep no = no) \\<and>\n                                    (\\<forall>lowb highb pb.\n  Dag pb lowb highb repta \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of repta \\<longrightarrow>\n      (lowa(rep p := pa)) pt = lowb pt \\<and>\n      higha pt = highb pt) \\<longrightarrow>\n  Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of rept \\<longrightarrow>\n      low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))))", "fix rept low high rep p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no; p \\<noteq> Null;\n        rep p \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> \\<exists>repta.\n                            Dag ((rep \\<propto> id) (low (rep p)))\n                             (rep \\<propto> low) (rep \\<propto> high)\n                             repta \\<and>\n                            (\\<forall>no\\<in>set_of repta.\n                                rep no = no) \\<and>\n                            (\\<forall>lowa higha pa.\n                                Dag pa lowa higha repta \\<and>\n                                (\\<forall>pt.\n                                    pt \\<notin> set_of\n           repta \\<longrightarrow>\n                                    low pt = lowa pt \\<and>\n                                    high pt = higha pt) \\<longrightarrow>\n                                (\\<exists>repta.\n                                    Dag ((rep \\<propto> id) (higha (rep p)))\n                                     (rep \\<propto> lowa(rep p := pa))\n                                     (rep \\<propto> higha) repta \\<and>\n                                    (\\<forall>no\\<in>set_of repta.\n  rep no = no) \\<and>\n                                    (\\<forall>lowb highb pb.\n  Dag pb lowb highb repta \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of repta \\<longrightarrow>\n      (lowa(rep p := pa)) pt = lowb pt \\<and>\n      higha pt = highb pt) \\<longrightarrow>\n  Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of rept \\<longrightarrow>\n      low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))))", "assume rept_dag: \"Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\""], ["proof (state)\nthis:\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n\ngoal (1 subgoal):\n 1. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no; p \\<noteq> Null;\n        rep p \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> \\<exists>repta.\n                            Dag ((rep \\<propto> id) (low (rep p)))\n                             (rep \\<propto> low) (rep \\<propto> high)\n                             repta \\<and>\n                            (\\<forall>no\\<in>set_of repta.\n                                rep no = no) \\<and>\n                            (\\<forall>lowa higha pa.\n                                Dag pa lowa higha repta \\<and>\n                                (\\<forall>pt.\n                                    pt \\<notin> set_of\n           repta \\<longrightarrow>\n                                    low pt = lowa pt \\<and>\n                                    high pt = higha pt) \\<longrightarrow>\n                                (\\<exists>repta.\n                                    Dag ((rep \\<propto> id) (higha (rep p)))\n                                     (rep \\<propto> lowa(rep p := pa))\n                                     (rep \\<propto> higha) repta \\<and>\n                                    (\\<forall>no\\<in>set_of repta.\n  rep no = no) \\<and>\n                                    (\\<forall>lowb highb pb.\n  Dag pb lowb highb repta \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of repta \\<longrightarrow>\n      (lowa(rep p := pa)) pt = lowb pt \\<and>\n      higha pt = highb pt) \\<longrightarrow>\n  Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of rept \\<longrightarrow>\n      low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))))", "assume rno_rept: \"\\<forall>no\\<in>set_of rept. rep no = no\""], ["proof (state)\nthis:\n  \\<forall>no\\<in>set_of rept. rep no = no\n\ngoal (1 subgoal):\n 1. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no; p \\<noteq> Null;\n        rep p \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> \\<exists>repta.\n                            Dag ((rep \\<propto> id) (low (rep p)))\n                             (rep \\<propto> low) (rep \\<propto> high)\n                             repta \\<and>\n                            (\\<forall>no\\<in>set_of repta.\n                                rep no = no) \\<and>\n                            (\\<forall>lowa higha pa.\n                                Dag pa lowa higha repta \\<and>\n                                (\\<forall>pt.\n                                    pt \\<notin> set_of\n           repta \\<longrightarrow>\n                                    low pt = lowa pt \\<and>\n                                    high pt = higha pt) \\<longrightarrow>\n                                (\\<exists>repta.\n                                    Dag ((rep \\<propto> id) (higha (rep p)))\n                                     (rep \\<propto> lowa(rep p := pa))\n                                     (rep \\<propto> higha) repta \\<and>\n                                    (\\<forall>no\\<in>set_of repta.\n  rep no = no) \\<and>\n                                    (\\<forall>lowb highb pb.\n  Dag pb lowb highb repta \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of repta \\<longrightarrow>\n      (lowa(rep p := pa)) pt = lowb pt \\<and>\n      higha pt = highb pt) \\<longrightarrow>\n  Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of rept \\<longrightarrow>\n      low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))))", "assume p_nNull: \"p \\<noteq> Null\""], ["proof (state)\nthis:\n  p \\<noteq> Null\n\ngoal (1 subgoal):\n 1. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no; p \\<noteq> Null;\n        rep p \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> \\<exists>repta.\n                            Dag ((rep \\<propto> id) (low (rep p)))\n                             (rep \\<propto> low) (rep \\<propto> high)\n                             repta \\<and>\n                            (\\<forall>no\\<in>set_of repta.\n                                rep no = no) \\<and>\n                            (\\<forall>lowa higha pa.\n                                Dag pa lowa higha repta \\<and>\n                                (\\<forall>pt.\n                                    pt \\<notin> set_of\n           repta \\<longrightarrow>\n                                    low pt = lowa pt \\<and>\n                                    high pt = higha pt) \\<longrightarrow>\n                                (\\<exists>repta.\n                                    Dag ((rep \\<propto> id) (higha (rep p)))\n                                     (rep \\<propto> lowa(rep p := pa))\n                                     (rep \\<propto> higha) repta \\<and>\n                                    (\\<forall>no\\<in>set_of repta.\n  rep no = no) \\<and>\n                                    (\\<forall>lowb highb pb.\n  Dag pb lowb highb repta \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of repta \\<longrightarrow>\n      (lowa(rep p := pa)) pt = lowb pt \\<and>\n      higha pt = highb pt) \\<longrightarrow>\n  Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of rept \\<longrightarrow>\n      low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))))", "assume rp_nNull: \" rep p \\<noteq> Null\""], ["proof (state)\nthis:\n  rep p \\<noteq> Null\n\ngoal (1 subgoal):\n 1. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no; p \\<noteq> Null;\n        rep p \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> \\<exists>repta.\n                            Dag ((rep \\<propto> id) (low (rep p)))\n                             (rep \\<propto> low) (rep \\<propto> high)\n                             repta \\<and>\n                            (\\<forall>no\\<in>set_of repta.\n                                rep no = no) \\<and>\n                            (\\<forall>lowa higha pa.\n                                Dag pa lowa higha repta \\<and>\n                                (\\<forall>pt.\n                                    pt \\<notin> set_of\n           repta \\<longrightarrow>\n                                    low pt = lowa pt \\<and>\n                                    high pt = higha pt) \\<longrightarrow>\n                                (\\<exists>repta.\n                                    Dag ((rep \\<propto> id) (higha (rep p)))\n                                     (rep \\<propto> lowa(rep p := pa))\n                                     (rep \\<propto> higha) repta \\<and>\n                                    (\\<forall>no\\<in>set_of repta.\n  rep no = no) \\<and>\n                                    (\\<forall>lowb highb pb.\n  Dag pb lowb highb repta \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of repta \\<longrightarrow>\n      (lowa(rep p := pa)) pt = lowb pt \\<and>\n      higha pt = highb pt) \\<longrightarrow>\n  Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of rept \\<longrightarrow>\n      low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))))", "show \"\\<exists>lrept.\n             Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low) (rep \\<propto> high) lrept \\<and>\n             (\\<forall>no\\<in>set_of lrept. rep no = no) \\<and>\n             (\\<forall>lowa higha pa.\n                 Dag pa lowa higha lrept \\<and>\n                 (\\<forall>pt. pt \\<notin> set_of lrept \\<longrightarrow>\n                       low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n                 (\\<exists>rrept.\n                     Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n                      (rep \\<propto> higha) rrept \\<and>\n                     (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n                     (\\<forall>lowb highb pb.\n                         Dag pb lowb highb rrept \\<and>\n                         (\\<forall>pt. pt \\<notin> set_of rrept \\<longrightarrow>\n                               (lowa(rep p := pa)) pt = lowb pt \\<and>\n                               higha pt = highb pt) \\<longrightarrow>\n                         Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                         (\\<forall>pt. pt \\<notin> set_of rept \\<longrightarrow>\n                               low pt = lowb pt \\<and>\n                               high pt = (highb(rep p := pb)) pt))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>lrept.\n       Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n        (rep \\<propto> high) lrept \\<and>\n       (\\<forall>no\\<in>set_of lrept. rep no = no) \\<and>\n       (\\<forall>lowa higha pa.\n           Dag pa lowa higha lrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of lrept \\<longrightarrow>\n               low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n           (\\<exists>rrept.\n               Dag ((rep \\<propto> id) (higha (rep p)))\n                (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n                rrept \\<and>\n               (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n               (\\<forall>lowb highb pb.\n                   Dag pb lowb highb rrept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rrept \\<longrightarrow>\n                       (lowa(rep p := pa)) pt = lowb pt \\<and>\n                       higha pt = highb pt) \\<longrightarrow>\n                   Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rept \\<longrightarrow>\n                       low pt = lowb pt \\<and>\n                       high pt = (highb(rep p := pb)) pt))))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>lrept.\n       Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n        (rep \\<propto> high) lrept \\<and>\n       (\\<forall>no\\<in>set_of lrept. rep no = no) \\<and>\n       (\\<forall>lowa higha pa.\n           Dag pa lowa higha lrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of lrept \\<longrightarrow>\n               low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n           (\\<exists>rrept.\n               Dag ((rep \\<propto> id) (higha (rep p)))\n                (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n                rrept \\<and>\n               (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n               (\\<forall>lowb highb pb.\n                   Dag pb lowb highb rrept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rrept \\<longrightarrow>\n                       (lowa(rep p := pa)) pt = lowb pt \\<and>\n                       higha pt = highb pt) \\<longrightarrow>\n                   Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rept \\<longrightarrow>\n                       low pt = lowb pt \\<and>\n                       high pt = (highb(rep p := pb)) pt))))", "from rp_nNull rept_dag p_nNull"], ["proof (chain)\npicking this:\n  rep p \\<noteq> Null\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n  p \\<noteq> Null", "obtain lrept rrept where\n      rept_def: \"rept = Node lrept (rep p) rrept\""], ["proof (prove)\nusing this:\n  rep p \\<noteq> Null\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n  p \\<noteq> Null\n\ngoal (1 subgoal):\n 1. (\\<And>lrept rrept.\n        rept = Node lrept (rep p) rrept \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  rept = Node lrept (rep p) rrept\n\ngoal (1 subgoal):\n 1. \\<exists>lrept.\n       Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n        (rep \\<propto> high) lrept \\<and>\n       (\\<forall>no\\<in>set_of lrept. rep no = no) \\<and>\n       (\\<forall>lowa higha pa.\n           Dag pa lowa higha lrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of lrept \\<longrightarrow>\n               low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n           (\\<exists>rrept.\n               Dag ((rep \\<propto> id) (higha (rep p)))\n                (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n                rrept \\<and>\n               (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n               (\\<forall>lowb highb pb.\n                   Dag pb lowb highb rrept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rrept \\<longrightarrow>\n                       (lowa(rep p := pa)) pt = lowb pt \\<and>\n                       higha pt = highb pt) \\<longrightarrow>\n                   Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rept \\<longrightarrow>\n                       low pt = lowb pt \\<and>\n                       high pt = (highb(rep p := pb)) pt))))", "with rept_dag p_nNull"], ["proof (chain)\npicking this:\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n  p \\<noteq> Null\n  rept = Node lrept (rep p) rrept", "have lrept_dag: \n      \"Dag ((rep \\<propto> low) (rep p)) (rep \\<propto> low) (rep \\<propto> high) lrept\""], ["proof (prove)\nusing this:\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n  p \\<noteq> Null\n  rept = Node lrept (rep p) rrept\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> low) (rep p)) (rep \\<propto> low)\n     (rep \\<propto> high) lrept", "by simp"], ["proof (state)\nthis:\n  Dag ((rep \\<propto> low) (rep p)) (rep \\<propto> low) (rep \\<propto> high)\n   lrept\n\ngoal (1 subgoal):\n 1. \\<exists>lrept.\n       Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n        (rep \\<propto> high) lrept \\<and>\n       (\\<forall>no\\<in>set_of lrept. rep no = no) \\<and>\n       (\\<forall>lowa higha pa.\n           Dag pa lowa higha lrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of lrept \\<longrightarrow>\n               low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n           (\\<exists>rrept.\n               Dag ((rep \\<propto> id) (higha (rep p)))\n                (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n                rrept \\<and>\n               (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n               (\\<forall>lowb highb pb.\n                   Dag pb lowb highb rrept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rrept \\<longrightarrow>\n                       (lowa(rep p := pa)) pt = lowb pt \\<and>\n                       higha pt = highb pt) \\<longrightarrow>\n                   Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rept \\<longrightarrow>\n                       low pt = lowb pt \\<and>\n                       high pt = (highb(rep p := pb)) pt))))", "from rept_def rept_dag p_nNull"], ["proof (chain)\npicking this:\n  rept = Node lrept (rep p) rrept\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n  p \\<noteq> Null", "have rrept_dag: \n      \"Dag ((rep \\<propto> high) (rep p)) (rep \\<propto> low) (rep \\<propto> high) rrept\""], ["proof (prove)\nusing this:\n  rept = Node lrept (rep p) rrept\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n  p \\<noteq> Null\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> high) (rep p)) (rep \\<propto> low)\n     (rep \\<propto> high) rrept", "by simp"], ["proof (state)\nthis:\n  Dag ((rep \\<propto> high) (rep p)) (rep \\<propto> low)\n   (rep \\<propto> high) rrept\n\ngoal (1 subgoal):\n 1. \\<exists>lrept.\n       Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n        (rep \\<propto> high) lrept \\<and>\n       (\\<forall>no\\<in>set_of lrept. rep no = no) \\<and>\n       (\\<forall>lowa higha pa.\n           Dag pa lowa higha lrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of lrept \\<longrightarrow>\n               low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n           (\\<exists>rrept.\n               Dag ((rep \\<propto> id) (higha (rep p)))\n                (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n                rrept \\<and>\n               (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n               (\\<forall>lowb highb pb.\n                   Dag pb lowb highb rrept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rrept \\<longrightarrow>\n                       (lowa(rep p := pa)) pt = lowb pt \\<and>\n                       higha pt = highb pt) \\<longrightarrow>\n                   Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rept \\<longrightarrow>\n                       low pt = lowb pt \\<and>\n                       high pt = (highb(rep p := pb)) pt))))", "from rno_rept rept_def"], ["proof (chain)\npicking this:\n  \\<forall>no\\<in>set_of rept. rep no = no\n  rept = Node lrept (rep p) rrept", "have rno_lrept: \"\\<forall> no \\<in> set_of lrept. rep no = no\""], ["proof (prove)\nusing this:\n  \\<forall>no\\<in>set_of rept. rep no = no\n  rept = Node lrept (rep p) rrept\n\ngoal (1 subgoal):\n 1. \\<forall>no\\<in>set_of lrept. rep no = no", "by auto"], ["proof (state)\nthis:\n  \\<forall>no\\<in>set_of lrept. rep no = no\n\ngoal (1 subgoal):\n 1. \\<exists>lrept.\n       Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n        (rep \\<propto> high) lrept \\<and>\n       (\\<forall>no\\<in>set_of lrept. rep no = no) \\<and>\n       (\\<forall>lowa higha pa.\n           Dag pa lowa higha lrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of lrept \\<longrightarrow>\n               low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n           (\\<exists>rrept.\n               Dag ((rep \\<propto> id) (higha (rep p)))\n                (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n                rrept \\<and>\n               (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n               (\\<forall>lowb highb pb.\n                   Dag pb lowb highb rrept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rrept \\<longrightarrow>\n                       (lowa(rep p := pa)) pt = lowb pt \\<and>\n                       higha pt = highb pt) \\<longrightarrow>\n                   Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rept \\<longrightarrow>\n                       low pt = lowb pt \\<and>\n                       high pt = (highb(rep p := pb)) pt))))", "from rno_rept rept_def"], ["proof (chain)\npicking this:\n  \\<forall>no\\<in>set_of rept. rep no = no\n  rept = Node lrept (rep p) rrept", "have rno_rrept: \"\\<forall> no \\<in> set_of rrept. rep no = no\""], ["proof (prove)\nusing this:\n  \\<forall>no\\<in>set_of rept. rep no = no\n  rept = Node lrept (rep p) rrept\n\ngoal (1 subgoal):\n 1. \\<forall>no\\<in>set_of rrept. rep no = no", "by auto"], ["proof (state)\nthis:\n  \\<forall>no\\<in>set_of rrept. rep no = no\n\ngoal (1 subgoal):\n 1. \\<exists>lrept.\n       Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n        (rep \\<propto> high) lrept \\<and>\n       (\\<forall>no\\<in>set_of lrept. rep no = no) \\<and>\n       (\\<forall>lowa higha pa.\n           Dag pa lowa higha lrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of lrept \\<longrightarrow>\n               low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n           (\\<exists>rrept.\n               Dag ((rep \\<propto> id) (higha (rep p)))\n                (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n                rrept \\<and>\n               (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n               (\\<forall>lowb highb pb.\n                   Dag pb lowb highb rrept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rrept \\<longrightarrow>\n                       (lowa(rep p := pa)) pt = lowb pt \\<and>\n                       higha pt = highb pt) \\<longrightarrow>\n                   Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rept \\<longrightarrow>\n                       low pt = lowb pt \\<and>\n                       high pt = (highb(rep p := pb)) pt))))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>lrept.\n       Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n        (rep \\<propto> high) lrept \\<and>\n       (\\<forall>no\\<in>set_of lrept. rep no = no) \\<and>\n       (\\<forall>lowa higha pa.\n           Dag pa lowa higha lrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of lrept \\<longrightarrow>\n               low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n           (\\<exists>rrept.\n               Dag ((rep \\<propto> id) (higha (rep p)))\n                (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n                rrept \\<and>\n               (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n               (\\<forall>lowb highb pb.\n                   Dag pb lowb highb rrept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rrept \\<longrightarrow>\n                       (lowa(rep p := pa)) pt = lowb pt \\<and>\n                       higha pt = highb pt) \\<longrightarrow>\n                   Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rept \\<longrightarrow>\n                       low pt = lowb pt \\<and>\n                       high pt = (highb(rep p := pb)) pt))))", "apply (rule_tac x=lrept in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n     (rep \\<propto> high) lrept \\<and>\n    (\\<forall>no\\<in>set_of lrept. rep no = no) \\<and>\n    (\\<forall>lowa higha pa.\n        Dag pa lowa higha lrept \\<and>\n        (\\<forall>pt.\n            pt \\<notin> set_of lrept \\<longrightarrow>\n            low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n        (\\<exists>rrept.\n            Dag ((rep \\<propto> id) (higha (rep p)))\n             (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n             rrept \\<and>\n            (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n            (\\<forall>lowb highb pb.\n                Dag pb lowb highb rrept \\<and>\n                (\\<forall>pt.\n                    pt \\<notin> set_of rrept \\<longrightarrow>\n                    (lowa(rep p := pa)) pt = lowb pt \\<and>\n                    higha pt = highb pt) \\<longrightarrow>\n                Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                (\\<forall>pt.\n                    pt \\<notin> set_of rept \\<longrightarrow>\n                    low pt = lowb pt \\<and>\n                    high pt = (highb(rep p := pb)) pt))))", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n     (rep \\<propto> high) lrept\n 2. (\\<forall>no\\<in>set_of lrept. rep no = no) \\<and>\n    (\\<forall>lowa higha pa.\n        Dag pa lowa higha lrept \\<and>\n        (\\<forall>pt.\n            pt \\<notin> set_of lrept \\<longrightarrow>\n            low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n        (\\<exists>rrept.\n            Dag ((rep \\<propto> id) (higha (rep p)))\n             (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n             rrept \\<and>\n            (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n            (\\<forall>lowb highb pb.\n                Dag pb lowb highb rrept \\<and>\n                (\\<forall>pt.\n                    pt \\<notin> set_of rrept \\<longrightarrow>\n                    (lowa(rep p := pa)) pt = lowb pt \\<and>\n                    higha pt = highb pt) \\<longrightarrow>\n                Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                (\\<forall>pt.\n                    pt \\<notin> set_of rept \\<longrightarrow>\n                    low pt = lowb pt \\<and>\n                    high pt = (highb(rep p := pb)) pt))))", "apply  (simp add: id_trans lrept_dag)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>no\\<in>set_of lrept. rep no = no) \\<and>\n    (\\<forall>lowa higha pa.\n        Dag pa lowa higha lrept \\<and>\n        (\\<forall>pt.\n            pt \\<notin> set_of lrept \\<longrightarrow>\n            low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n        (\\<exists>rrept.\n            Dag ((rep \\<propto> id) (higha (rep p)))\n             (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n             rrept \\<and>\n            (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n            (\\<forall>lowb highb pb.\n                Dag pb lowb highb rrept \\<and>\n                (\\<forall>pt.\n                    pt \\<notin> set_of rrept \\<longrightarrow>\n                    (lowa(rep p := pa)) pt = lowb pt \\<and>\n                    higha pt = highb pt) \\<longrightarrow>\n                Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                (\\<forall>pt.\n                    pt \\<notin> set_of rept \\<longrightarrow>\n                    low pt = lowb pt \\<and>\n                    high pt = (highb(rep p := pb)) pt))))", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>no\\<in>set_of lrept. rep no = no\n 2. \\<forall>lowa higha pa.\n       Dag pa lowa higha lrept \\<and>\n       (\\<forall>pt.\n           pt \\<notin> set_of lrept \\<longrightarrow>\n           low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n       (\\<exists>rrept.\n           Dag ((rep \\<propto> id) (higha (rep p)))\n            (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n            rrept \\<and>\n           (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n           (\\<forall>lowb highb pb.\n               Dag pb lowb highb rrept \\<and>\n               (\\<forall>pt.\n                   pt \\<notin> set_of rrept \\<longrightarrow>\n                   (lowa(rep p := pa)) pt = lowb pt \\<and>\n                   higha pt = highb pt) \\<longrightarrow>\n               Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n               (\\<forall>pt.\n                   pt \\<notin> set_of rept \\<longrightarrow>\n                   low pt = lowb pt \\<and>\n                   high pt = (highb(rep p := pb)) pt)))", "apply (rule rno_lrept)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>lowa higha pa.\n       Dag pa lowa higha lrept \\<and>\n       (\\<forall>pt.\n           pt \\<notin> set_of lrept \\<longrightarrow>\n           low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n       (\\<exists>rrept.\n           Dag ((rep \\<propto> id) (higha (rep p)))\n            (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n            rrept \\<and>\n           (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n           (\\<forall>lowb highb pb.\n               Dag pb lowb highb rrept \\<and>\n               (\\<forall>pt.\n                   pt \\<notin> set_of rrept \\<longrightarrow>\n                   (lowa(rep p := pa)) pt = lowb pt \\<and>\n                   higha pt = highb pt) \\<longrightarrow>\n               Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n               (\\<forall>pt.\n                   pt \\<notin> set_of rept \\<longrightarrow>\n                   low pt = lowb pt \\<and>\n                   high pt = (highb(rep p := pb)) pt)))", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>lowa higha pa.\n       \\<lbrakk>Dag pa lowa higha lrept;\n        \\<forall>pt.\n           pt \\<notin> set_of lrept \\<longrightarrow>\n           low pt = lowa pt \\<and> high pt = higha pt\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rrept.\n                            Dag ((rep \\<propto> id) (higha (rep p)))\n                             (rep \\<propto> lowa(rep p := pa))\n                             (rep \\<propto> higha) rrept \\<and>\n                            (\\<forall>no\\<in>set_of rrept.\n                                rep no = no) \\<and>\n                            (\\<forall>lowb highb pb.\n                                Dag pb lowb highb rrept \\<and>\n                                (\\<forall>pt.\n                                    pt \\<notin> set_of\n           rrept \\<longrightarrow>\n                                    (lowa(rep p := pa)) pt = lowb pt \\<and>\n                                    higha pt = highb pt) \\<longrightarrow>\n                                Dag (rep p) lowb (highb(rep p := pb))\n                                 rept \\<and>\n                                (\\<forall>pt.\n                                    pt \\<notin> set_of\n           rept \\<longrightarrow>\n                                    low pt = lowb pt \\<and>\n                                    high pt = (highb(rep p := pb)) pt))", "subgoal premises prems for lowa higha pa"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>rrept.\n       Dag ((rep \\<propto> id) (higha (rep p)))\n        (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept \\<and>\n       (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n       (\\<forall>lowb highb pb.\n           Dag pb lowb highb rrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rrept \\<longrightarrow>\n               (lowa(rep p := pa)) pt = lowb pt \\<and>\n               higha pt = highb pt) \\<longrightarrow>\n           Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>rrept.\n       Dag ((rep \\<propto> id) (higha (rep p)))\n        (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept \\<and>\n       (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n       (\\<forall>lowb highb pb.\n           Dag pb lowb highb rrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rrept \\<longrightarrow>\n               (lowa(rep p := pa)) pt = lowb pt \\<and>\n               higha pt = highb pt) \\<longrightarrow>\n           Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))", "have lrepta: \"Dag pa lowa higha lrept\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dag pa lowa higha lrept", "by fact"], ["proof (state)\nthis:\n  Dag pa lowa higha lrept\n\ngoal (1 subgoal):\n 1. \\<exists>rrept.\n       Dag ((rep \\<propto> id) (higha (rep p)))\n        (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept \\<and>\n       (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n       (\\<forall>lowb highb pb.\n           Dag pb lowb highb rrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rrept \\<longrightarrow>\n               (lowa(rep p := pa)) pt = lowb pt \\<and>\n               higha pt = highb pt) \\<longrightarrow>\n           Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))", "have low_lowa_nc: \n          \"\\<forall>pt. pt \\<notin> set_of lrept \\<longrightarrow> low pt = lowa pt \\<and> high pt = higha pt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>pt.\n       pt \\<notin> set_of lrept \\<longrightarrow>\n       low pt = lowa pt \\<and> high pt = higha pt", "by fact"], ["proof (state)\nthis:\n  \\<forall>pt.\n     pt \\<notin> set_of lrept \\<longrightarrow>\n     low pt = lowa pt \\<and> high pt = higha pt\n\ngoal (1 subgoal):\n 1. \\<exists>rrept.\n       Dag ((rep \\<propto> id) (higha (rep p)))\n        (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept \\<and>\n       (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n       (\\<forall>lowb highb pb.\n           Dag pb lowb highb rrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rrept \\<longrightarrow>\n               (lowa(rep p := pa)) pt = lowb pt \\<and>\n               higha pt = highb pt) \\<longrightarrow>\n           Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))", "from lrept_dag lrepta"], ["proof (chain)\npicking this:\n  Dag ((rep \\<propto> low) (rep p)) (rep \\<propto> low) (rep \\<propto> high)\n   lrept\n  Dag pa lowa higha lrept", "obtain \n          pa_def: \"pa = (rep \\<propto> low) (rep p)\" and\n          lowa_higha_def: \"\\<forall>no \\<in> set_of lrept. \n          lowa no = (rep \\<propto> low) no \\<and> higha no = (rep \\<propto> high) no\""], ["proof (prove)\nusing this:\n  Dag ((rep \\<propto> low) (rep p)) (rep \\<propto> low) (rep \\<propto> high)\n   lrept\n  Dag pa lowa higha lrept\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>pa = (rep \\<propto> low) (rep p);\n      \\<forall>no\\<in>set_of lrept.\n         lowa no = (rep \\<propto> low) no \\<and>\n         higha no = (rep \\<propto> high) no\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>pa = (rep \\<propto> low) (rep p);\n              \\<forall>no\\<in>set_of lrept.\n                 lowa no = (rep \\<propto> low) no \\<and>\n                 higha no = (rep \\<propto> high) no\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     Dag ((rep \\<propto> low) (rep p)) (rep \\<propto> low)\n      (rep \\<propto> high) lrept;\n     Dag pa lowa higha lrept\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply (drule Dags_eq_hp_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>pa = (rep \\<propto> low) (rep p);\n              \\<forall>no\\<in>set_of lrept.\n                 lowa no = (rep \\<propto> low) no \\<and>\n                 higha no = (rep \\<propto> high) no\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     Dag pa lowa higha lrept\\<rbrakk>\n    \\<Longrightarrow> Dag ?p'3 ?l'3 ?r'3 lrept\n 2. \\<lbrakk>\\<lbrakk>pa = (rep \\<propto> low) (rep p);\n              \\<forall>no\\<in>set_of lrept.\n                 lowa no = (rep \\<propto> low) no \\<and>\n                 higha no = (rep \\<propto> high) no\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     Dag pa lowa higha lrept;\n     ?p'3 = (rep \\<propto> low) (rep p) \\<and>\n     (\\<forall>no\\<in>set_of lrept.\n         ?l'3 no = (rep \\<propto> low) no \\<and>\n         ?r'3 no = (rep \\<propto> high) no)\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  pa = (rep \\<propto> low) (rep p)\n  \\<forall>no\\<in>set_of lrept.\n     lowa no = (rep \\<propto> low) no \\<and>\n     higha no = (rep \\<propto> high) no\n\ngoal (1 subgoal):\n 1. \\<exists>rrept.\n       Dag ((rep \\<propto> id) (higha (rep p)))\n        (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept \\<and>\n       (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n       (\\<forall>lowb highb pb.\n           Dag pb lowb highb rrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rrept \\<longrightarrow>\n               (lowa(rep p := pa)) pt = lowb pt \\<and>\n               higha pt = highb pt) \\<longrightarrow>\n           Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))", "from rept_dag"], ["proof (chain)\npicking this:\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept", "have rept_DAG: \"DAG rept\""], ["proof (prove)\nusing this:\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n\ngoal (1 subgoal):\n 1. DAG rept", "by (rule Dag_is_DAG)"], ["proof (state)\nthis:\n  DAG rept\n\ngoal (1 subgoal):\n 1. \\<exists>rrept.\n       Dag ((rep \\<propto> id) (higha (rep p)))\n        (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept \\<and>\n       (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n       (\\<forall>lowb highb pb.\n           Dag pb lowb highb rrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rrept \\<longrightarrow>\n               (lowa(rep p := pa)) pt = lowb pt \\<and>\n               higha pt = highb pt) \\<longrightarrow>\n           Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))", "with rept_def"], ["proof (chain)\npicking this:\n  rept = Node lrept (rep p) rrept\n  DAG rept", "have rp_notin_lrept: \"rep p \\<notin> set_of lrept\""], ["proof (prove)\nusing this:\n  rept = Node lrept (rep p) rrept\n  DAG rept\n\ngoal (1 subgoal):\n 1. rep p \\<notin> set_of lrept", "by simp"], ["proof (state)\nthis:\n  rep p \\<notin> set_of lrept\n\ngoal (1 subgoal):\n 1. \\<exists>rrept.\n       Dag ((rep \\<propto> id) (higha (rep p)))\n        (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept \\<and>\n       (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n       (\\<forall>lowb highb pb.\n           Dag pb lowb highb rrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rrept \\<longrightarrow>\n               (lowa(rep p := pa)) pt = lowb pt \\<and>\n               higha pt = highb pt) \\<longrightarrow>\n           Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))", "from rept_DAG rept_def"], ["proof (chain)\npicking this:\n  DAG rept\n  rept = Node lrept (rep p) rrept", "have rp_notin_rrept: \"rep p \\<notin> set_of rrept\""], ["proof (prove)\nusing this:\n  DAG rept\n  rept = Node lrept (rep p) rrept\n\ngoal (1 subgoal):\n 1. rep p \\<notin> set_of rrept", "by simp"], ["proof (state)\nthis:\n  rep p \\<notin> set_of rrept\n\ngoal (1 subgoal):\n 1. \\<exists>rrept.\n       Dag ((rep \\<propto> id) (higha (rep p)))\n        (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept \\<and>\n       (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n       (\\<forall>lowb highb pb.\n           Dag pb lowb highb rrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rrept \\<longrightarrow>\n               (lowa(rep p := pa)) pt = lowb pt \\<and>\n               higha pt = highb pt) \\<longrightarrow>\n           Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))", "have rrepta: \"Dag ((rep \\<propto> id) (higha (rep p))) \n                         (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "from low_lowa_nc rp_notin_lrept"], ["proof (chain)\npicking this:\n  \\<forall>pt.\n     pt \\<notin> set_of lrept \\<longrightarrow>\n     low pt = lowa pt \\<and> high pt = higha pt\n  rep p \\<notin> set_of lrept", "have \"(rep \\<propto> high) (rep p) = (rep \\<propto> higha) (rep p)\""], ["proof (prove)\nusing this:\n  \\<forall>pt.\n     pt \\<notin> set_of lrept \\<longrightarrow>\n     low pt = lowa pt \\<and> high pt = higha pt\n  rep p \\<notin> set_of lrept\n\ngoal (1 subgoal):\n 1. (rep \\<propto> high) (rep p) = (rep \\<propto> higha) (rep p)", "by (auto simp add: null_comp_def)"], ["proof (state)\nthis:\n  (rep \\<propto> high) (rep p) = (rep \\<propto> higha) (rep p)\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "with rrept_dag"], ["proof (chain)\npicking this:\n  Dag ((rep \\<propto> high) (rep p)) (rep \\<propto> low)\n   (rep \\<propto> high) rrept\n  (rep \\<propto> high) (rep p) = (rep \\<propto> higha) (rep p)", "have higha_mixed_rrept: \n            \"Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> low) (rep \\<propto> high) rrept\""], ["proof (prove)\nusing this:\n  Dag ((rep \\<propto> high) (rep p)) (rep \\<propto> low)\n   (rep \\<propto> high) rrept\n  (rep \\<propto> high) (rep p) = (rep \\<propto> higha) (rep p)\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> low)\n     (rep \\<propto> high) rrept", "by (simp add: id_trans)"], ["proof (state)\nthis:\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> low)\n   (rep \\<propto> high) rrept\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "thm low_high_exchange_dag"], ["proof (state)\nthis:\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> low)\n   (rep \\<propto> high) rrept\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "with low_lowa_nc lowa_higha_def rno_rrept"], ["proof (chain)\npicking this:\n  \\<forall>pt.\n     pt \\<notin> set_of lrept \\<longrightarrow>\n     low pt = lowa pt \\<and> high pt = higha pt\n  \\<forall>no\\<in>set_of lrept.\n     lowa no = (rep \\<propto> low) no \\<and>\n     higha no = (rep \\<propto> high) no\n  \\<forall>no\\<in>set_of rrept. rep no = no\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> low)\n   (rep \\<propto> high) rrept", "have lowa_higha_rrept:\n              \"Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa) (rep \\<propto> higha) rrept\""], ["proof (prove)\nusing this:\n  \\<forall>pt.\n     pt \\<notin> set_of lrept \\<longrightarrow>\n     low pt = lowa pt \\<and> high pt = higha pt\n  \\<forall>no\\<in>set_of lrept.\n     lowa no = (rep \\<propto> low) no \\<and>\n     higha no = (rep \\<propto> high) no\n  \\<forall>no\\<in>set_of rrept. rep no = no\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> low)\n   (rep \\<propto> high) rrept\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n     (rep \\<propto> higha) rrept", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>pt.\n                pt \\<notin> set_of lrept \\<longrightarrow>\n                low pt = lowa pt \\<and> high pt = higha pt;\n     \\<forall>no\\<in>set_of lrept.\n        lowa no = (rep \\<propto> low) no \\<and>\n        higha no = (rep \\<propto> high) no;\n     \\<forall>no\\<in>set_of rrept. rep no = no;\n     Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> low)\n      (rep \\<propto> high) rrept\\<rbrakk>\n    \\<Longrightarrow> Dag ((rep \\<propto> id) (higha (rep p)))\n                       (rep \\<propto> lowa) (rep \\<propto> higha) rrept", "apply (rule low_high_exchange_dag)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<forall>pt.\n                pt \\<notin> set_of lrept \\<longrightarrow>\n                low pt = lowa pt \\<and> high pt = higha pt;\n     \\<forall>no\\<in>set_of lrept.\n        lowa no = (rep \\<propto> low) no \\<and>\n        higha no = (rep \\<propto> high) no;\n     \\<forall>no\\<in>set_of rrept. rep no = no;\n     Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> low)\n      (rep \\<propto> high) rrept\\<rbrakk>\n    \\<Longrightarrow> \\<forall>pt.\n                         pt \\<notin> set_of ?lt4 \\<longrightarrow>\n                         ?low4 pt = lowa pt \\<and> ?high4 pt = higha pt\n 2. \\<lbrakk>\\<forall>pt.\n                pt \\<notin> set_of lrept \\<longrightarrow>\n                low pt = lowa pt \\<and> high pt = higha pt;\n     \\<forall>no\\<in>set_of lrept.\n        lowa no = (rep \\<propto> low) no \\<and>\n        higha no = (rep \\<propto> high) no;\n     \\<forall>no\\<in>set_of rrept. rep no = no;\n     Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> low)\n      (rep \\<propto> high) rrept\\<rbrakk>\n    \\<Longrightarrow> \\<forall>pt\\<in>set_of ?lt4.\n                         lowa pt = (rep \\<propto> ?low4) pt \\<and>\n                         higha pt = (rep \\<propto> ?high4) pt\n 3. \\<lbrakk>\\<forall>pt.\n                pt \\<notin> set_of lrept \\<longrightarrow>\n                low pt = lowa pt \\<and> high pt = higha pt;\n     \\<forall>no\\<in>set_of lrept.\n        lowa no = (rep \\<propto> low) no \\<and>\n        higha no = (rep \\<propto> high) no;\n     \\<forall>no\\<in>set_of rrept. rep no = no;\n     Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> low)\n      (rep \\<propto> high) rrept\\<rbrakk>\n    \\<Longrightarrow> \\<forall>pt\\<in>set_of rrept. rep pt = pt\n 4. \\<lbrakk>\\<forall>pt.\n                pt \\<notin> set_of lrept \\<longrightarrow>\n                low pt = lowa pt \\<and> high pt = higha pt;\n     \\<forall>no\\<in>set_of lrept.\n        lowa no = (rep \\<propto> low) no \\<and>\n        higha no = (rep \\<propto> high) no;\n     \\<forall>no\\<in>set_of rrept. rep no = no;\n     Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> low)\n      (rep \\<propto> high) rrept\\<rbrakk>\n    \\<Longrightarrow> Dag ((rep \\<propto> id) (higha (rep p)))\n                       (rep \\<propto> ?low4) (rep \\<propto> ?high4) rrept", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n   (rep \\<propto> higha) rrept\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "have \"Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa) (rep \\<propto> higha) rrept = \n                Dag ((rep \\<propto> id) (higha (rep p))) \n                        (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n     (rep \\<propto> higha) rrept =\n    Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n     (rep \\<propto> higha) rrept =\n    Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "have \"\\<forall>no \\<in> set_of rrept. \n                      (rep \\<propto> lowa) no = (rep \\<propto> lowa(rep p := pa)) no \\<and>\n                      (rep \\<propto> higha) no = (rep \\<propto> higha) no\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>no\\<in>set_of rrept.\n       (rep \\<propto> lowa) no = (rep \\<propto> lowa(rep p := pa)) no \\<and>\n       (rep \\<propto> higha) no = (rep \\<propto> higha) no", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>no.\n       no \\<in> set_of rrept \\<Longrightarrow>\n       (rep \\<propto> lowa) no = (rep \\<propto> lowa(rep p := pa)) no \\<and>\n       (rep \\<propto> higha) no = (rep \\<propto> higha) no", "fix no"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>no.\n       no \\<in> set_of rrept \\<Longrightarrow>\n       (rep \\<propto> lowa) no = (rep \\<propto> lowa(rep p := pa)) no \\<and>\n       (rep \\<propto> higha) no = (rep \\<propto> higha) no", "assume no_in_rrept: \"no \\<in> set_of rrept\""], ["proof (state)\nthis:\n  no \\<in> set_of rrept\n\ngoal (1 subgoal):\n 1. \\<And>no.\n       no \\<in> set_of rrept \\<Longrightarrow>\n       (rep \\<propto> lowa) no = (rep \\<propto> lowa(rep p := pa)) no \\<and>\n       (rep \\<propto> higha) no = (rep \\<propto> higha) no", "with rp_notin_rrept"], ["proof (chain)\npicking this:\n  rep p \\<notin> set_of rrept\n  no \\<in> set_of rrept", "have \"no \\<noteq> rep p\""], ["proof (prove)\nusing this:\n  rep p \\<notin> set_of rrept\n  no \\<in> set_of rrept\n\ngoal (1 subgoal):\n 1. no \\<noteq> rep p", "by blast"], ["proof (state)\nthis:\n  no \\<noteq> rep p\n\ngoal (1 subgoal):\n 1. \\<And>no.\n       no \\<in> set_of rrept \\<Longrightarrow>\n       (rep \\<propto> lowa) no = (rep \\<propto> lowa(rep p := pa)) no \\<and>\n       (rep \\<propto> higha) no = (rep \\<propto> higha) no", "thus \"(rep \\<propto> lowa) no = (rep \\<propto> lowa(rep p := pa)) no \\<and> \n                (rep \\<propto> higha) no = (rep \\<propto> higha) no\""], ["proof (prove)\nusing this:\n  no \\<noteq> rep p\n\ngoal (1 subgoal):\n 1. (rep \\<propto> lowa) no = (rep \\<propto> lowa(rep p := pa)) no \\<and>\n    (rep \\<propto> higha) no = (rep \\<propto> higha) no", "by (simp add: null_comp_def)"], ["proof (state)\nthis:\n  (rep \\<propto> lowa) no = (rep \\<propto> lowa(rep p := pa)) no \\<and>\n  (rep \\<propto> higha) no = (rep \\<propto> higha) no\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>no\\<in>set_of rrept.\n     (rep \\<propto> lowa) no = (rep \\<propto> lowa(rep p := pa)) no \\<and>\n     (rep \\<propto> higha) no = (rep \\<propto> higha) no\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n     (rep \\<propto> higha) rrept =\n    Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>no\\<in>set_of rrept.\n     (rep \\<propto> lowa) no = (rep \\<propto> lowa(rep p := pa)) no \\<and>\n     (rep \\<propto> higha) no = (rep \\<propto> higha) no\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n     (rep \\<propto> higha) rrept =\n    Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "by (rule heaps_eq_Dag_eq)"], ["proof (state)\nthis:\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n   (rep \\<propto> higha) rrept =\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n   (rep \\<propto> higha) rrept\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n   (rep \\<propto> higha) rrept =\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n   (rep \\<propto> higha) rrept\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "with lowa_higha_rrept"], ["proof (chain)\npicking this:\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n   (rep \\<propto> higha) rrept\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n   (rep \\<propto> higha) rrept =\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n   (rep \\<propto> higha) rrept", "show ?thesis"], ["proof (prove)\nusing this:\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n   (rep \\<propto> higha) rrept\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n   (rep \\<propto> higha) rrept =\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n   (rep \\<propto> higha) rrept\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "by simp"], ["proof (state)\nthis:\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n   (rep \\<propto> higha) rrept\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n   (rep \\<propto> higha) rrept\n\ngoal (1 subgoal):\n 1. \\<exists>rrept.\n       Dag ((rep \\<propto> id) (higha (rep p)))\n        (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept \\<and>\n       (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n       (\\<forall>lowb highb pb.\n           Dag pb lowb highb rrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rrept \\<longrightarrow>\n               (lowa(rep p := pa)) pt = lowb pt \\<and>\n               higha pt = highb pt) \\<longrightarrow>\n           Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>rrept.\n       Dag ((rep \\<propto> id) (higha (rep p)))\n        (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept \\<and>\n       (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n       (\\<forall>lowb highb pb.\n           Dag pb lowb highb rrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rrept \\<longrightarrow>\n               (lowa(rep p := pa)) pt = lowb pt \\<and>\n               higha pt = highb pt) \\<longrightarrow>\n           Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))", "apply (rule_tac x=rrept in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept \\<and>\n    (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n    (\\<forall>lowb highb pb.\n        Dag pb lowb highb rrept \\<and>\n        (\\<forall>pt.\n            pt \\<notin> set_of rrept \\<longrightarrow>\n            (lowa(rep p := pa)) pt = lowb pt \\<and>\n            higha pt = highb pt) \\<longrightarrow>\n        Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n        (\\<forall>pt.\n            pt \\<notin> set_of rept \\<longrightarrow>\n            low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept\n 2. (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n    (\\<forall>lowb highb pb.\n        Dag pb lowb highb rrept \\<and>\n        (\\<forall>pt.\n            pt \\<notin> set_of rrept \\<longrightarrow>\n            (lowa(rep p := pa)) pt = lowb pt \\<and>\n            higha pt = highb pt) \\<longrightarrow>\n        Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n        (\\<forall>pt.\n            pt \\<notin> set_of rept \\<longrightarrow>\n            low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))", "apply  (rule rrepta)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n    (\\<forall>lowb highb pb.\n        Dag pb lowb highb rrept \\<and>\n        (\\<forall>pt.\n            pt \\<notin> set_of rrept \\<longrightarrow>\n            (lowa(rep p := pa)) pt = lowb pt \\<and>\n            higha pt = highb pt) \\<longrightarrow>\n        Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n        (\\<forall>pt.\n            pt \\<notin> set_of rept \\<longrightarrow>\n            low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>no\\<in>set_of rrept. rep no = no\n 2. \\<forall>lowb highb pb.\n       Dag pb lowb highb rrept \\<and>\n       (\\<forall>pt.\n           pt \\<notin> set_of rrept \\<longrightarrow>\n           (lowa(rep p := pa)) pt = lowb pt \\<and>\n           higha pt = highb pt) \\<longrightarrow>\n       Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n       (\\<forall>pt.\n           pt \\<notin> set_of rept \\<longrightarrow>\n           low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "apply  (rule rno_rrept)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>lowb highb pb.\n       Dag pb lowb highb rrept \\<and>\n       (\\<forall>pt.\n           pt \\<notin> set_of rrept \\<longrightarrow>\n           (lowa(rep p := pa)) pt = lowb pt \\<and>\n           higha pt = highb pt) \\<longrightarrow>\n       Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n       (\\<forall>pt.\n           pt \\<notin> set_of rept \\<longrightarrow>\n           low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>lowb highb pb.\n       \\<lbrakk>Dag pb lowb highb rrept;\n        \\<forall>pt.\n           pt \\<notin> set_of rrept \\<longrightarrow>\n           (lowa(rep p := pa)) pt = lowb pt \\<and>\n           higha pt = highb pt\\<rbrakk>\n       \\<Longrightarrow> Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                         (\\<forall>pt.\n                             pt \\<notin> set_of rept \\<longrightarrow>\n                             low pt = lowb pt \\<and>\n                             high pt = (highb(rep p := pb)) pt)", "subgoal premises prems for lowb highb pb"], ["proof (prove)\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "have rreptb: \"Dag pb lowb highb rrept\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dag pb lowb highb rrept", "by fact"], ["proof (state)\nthis:\n  Dag pb lowb highb rrept\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "have ab_nc: \"\\<forall>pt. pt \\<notin> set_of rrept \\<longrightarrow> \n                            (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>pt.\n       pt \\<notin> set_of rrept \\<longrightarrow>\n       (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt", "by fact"], ["proof (state)\nthis:\n  \\<forall>pt.\n     pt \\<notin> set_of rrept \\<longrightarrow>\n     (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "from rreptb rrept_dag"], ["proof (chain)\npicking this:\n  Dag pb lowb highb rrept\n  Dag ((rep \\<propto> high) (rep p)) (rep \\<propto> low)\n   (rep \\<propto> high) rrept", "obtain\n              pb_def: \"pb = ((rep \\<propto> high) (rep p))\" and\n              lowb_highb_def: \"\\<forall>no \\<in> set_of rrept. \n                                  lowb no = (rep \\<propto> low) no \\<and> highb no = (rep \\<propto> high) no\""], ["proof (prove)\nusing this:\n  Dag pb lowb highb rrept\n  Dag ((rep \\<propto> high) (rep p)) (rep \\<propto> low)\n   (rep \\<propto> high) rrept\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>pb = (rep \\<propto> high) (rep p);\n      \\<forall>no\\<in>set_of rrept.\n         lowb no = (rep \\<propto> low) no \\<and>\n         highb no = (rep \\<propto> high) no\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>pb = (rep \\<propto> high) (rep p);\n              \\<forall>no\\<in>set_of rrept.\n                 lowb no = (rep \\<propto> low) no \\<and>\n                 highb no = (rep \\<propto> high) no\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     Dag pb lowb highb rrept;\n     Dag ((rep \\<propto> high) (rep p)) (rep \\<propto> low)\n      (rep \\<propto> high) rrept\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply (drule Dags_eq_hp_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>pb = (rep \\<propto> high) (rep p);\n              \\<forall>no\\<in>set_of rrept.\n                 lowb no = (rep \\<propto> low) no \\<and>\n                 highb no = (rep \\<propto> high) no\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     Dag ((rep \\<propto> high) (rep p)) (rep \\<propto> low)\n      (rep \\<propto> high) rrept\\<rbrakk>\n    \\<Longrightarrow> Dag ?p'3 ?l'3 ?r'3 rrept\n 2. \\<lbrakk>\\<lbrakk>pb = (rep \\<propto> high) (rep p);\n              \\<forall>no\\<in>set_of rrept.\n                 lowb no = (rep \\<propto> low) no \\<and>\n                 highb no = (rep \\<propto> high) no\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     Dag ((rep \\<propto> high) (rep p)) (rep \\<propto> low)\n      (rep \\<propto> high) rrept;\n     ?p'3 = pb \\<and>\n     (\\<forall>no\\<in>set_of rrept.\n         ?l'3 no = lowb no \\<and> ?r'3 no = highb no)\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  pb = (rep \\<propto> high) (rep p)\n  \\<forall>no\\<in>set_of rrept.\n     lowb no = (rep \\<propto> low) no \\<and>\n     highb no = (rep \\<propto> high) no\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "have rept_end_dag: \" Dag (rep p) lowb (highb(rep p := pb)) rept\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept", "have \"\\<forall>no \\<in> set_of rept. \n                    lowb no = (rep \\<propto> low) no \\<and> (highb(rep p := pb)) no = (rep \\<propto> high) no\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>no\\<in>set_of rept.\n       lowb no = (rep \\<propto> low) no \\<and>\n       (highb(rep p := pb)) no = (rep \\<propto> high) no", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>no.\n       no \\<in> set_of rept \\<Longrightarrow>\n       lowb no = (rep \\<propto> low) no \\<and>\n       (highb(rep p := pb)) no = (rep \\<propto> high) no", "fix no"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>no.\n       no \\<in> set_of rept \\<Longrightarrow>\n       lowb no = (rep \\<propto> low) no \\<and>\n       (highb(rep p := pb)) no = (rep \\<propto> high) no", "assume no_in_rept: \" no \\<in> set_of rept\""], ["proof (state)\nthis:\n  no \\<in> set_of rept\n\ngoal (1 subgoal):\n 1. \\<And>no.\n       no \\<in> set_of rept \\<Longrightarrow>\n       lowb no = (rep \\<propto> low) no \\<and>\n       (highb(rep p := pb)) no = (rep \\<propto> high) no", "show \"lowb no = (rep \\<propto> low) no \\<and> \n                      (highb(rep p := pb)) no = (rep \\<propto> high) no\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "proof (cases \"no \\<in> set_of rrept\")"], ["proof (state)\ngoal (2 subgoals):\n 1. no \\<in> set_of rrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no\n 2. no \\<notin> set_of rrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "case True"], ["proof (state)\nthis:\n  no \\<in> set_of rrept\n\ngoal (2 subgoals):\n 1. no \\<in> set_of rrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no\n 2. no \\<notin> set_of rrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "with lowb_highb_def pb_def"], ["proof (chain)\npicking this:\n  \\<forall>no\\<in>set_of rrept.\n     lowb no = (rep \\<propto> low) no \\<and>\n     highb no = (rep \\<propto> high) no\n  pb = (rep \\<propto> high) (rep p)\n  no \\<in> set_of rrept", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>no\\<in>set_of rrept.\n     lowb no = (rep \\<propto> low) no \\<and>\n     highb no = (rep \\<propto> high) no\n  pb = (rep \\<propto> high) (rep p)\n  no \\<in> set_of rrept\n\ngoal (1 subgoal):\n 1. lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "by simp"], ["proof (state)\nthis:\n  lowb no = (rep \\<propto> low) no \\<and>\n  (highb(rep p := pb)) no = (rep \\<propto> high) no\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of rrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. no \\<notin> set_of rrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "assume no_notin_rrept: \" no \\<notin> set_of rrept\""], ["proof (state)\nthis:\n  no \\<notin> set_of rrept\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of rrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "proof (cases \"no \\<in> set_of lrept\")"], ["proof (state)\ngoal (2 subgoals):\n 1. no \\<in> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no\n 2. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "case True"], ["proof (state)\nthis:\n  no \\<in> set_of lrept\n\ngoal (2 subgoals):\n 1. no \\<in> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no\n 2. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "with no_notin_rrept rp_notin_lrept ab_nc"], ["proof (chain)\npicking this:\n  no \\<notin> set_of rrept\n  rep p \\<notin> set_of lrept\n  \\<forall>pt.\n     pt \\<notin> set_of rrept \\<longrightarrow>\n     (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt\n  no \\<in> set_of lrept", "have ab_nc_no: \"lowa no = lowb no \\<and> higha no = highb no\""], ["proof (prove)\nusing this:\n  no \\<notin> set_of rrept\n  rep p \\<notin> set_of lrept\n  \\<forall>pt.\n     pt \\<notin> set_of rrept \\<longrightarrow>\n     (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt\n  no \\<in> set_of lrept\n\ngoal (1 subgoal):\n 1. lowa no = lowb no \\<and> higha no = highb no", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>no \\<notin> set_of rrept; rep p \\<notin> set_of lrept;\n     \\<forall>pt.\n        pt \\<notin> set_of rrept \\<longrightarrow>\n        (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt;\n     no \\<in> set_of lrept\\<rbrakk>\n    \\<Longrightarrow> lowa no = lowb no \\<and> higha no = highb no", "apply (erule_tac x=no in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>no \\<notin> set_of rrept; rep p \\<notin> set_of lrept;\n     no \\<in> set_of lrept;\n     no \\<notin> set_of rrept \\<longrightarrow>\n     (lowa(rep p := pa)) no = lowb no \\<and> higha no = highb no\\<rbrakk>\n    \\<Longrightarrow> lowa no = lowb no \\<and> higha no = highb no", "apply (erule impE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>no \\<notin> set_of rrept; rep p \\<notin> set_of lrept;\n     no \\<in> set_of lrept\\<rbrakk>\n    \\<Longrightarrow> no \\<notin> set_of rrept\n 2. \\<lbrakk>no \\<notin> set_of rrept; rep p \\<notin> set_of lrept;\n     no \\<in> set_of lrept;\n     (lowa(rep p := pa)) no = lowb no \\<and> higha no = highb no\\<rbrakk>\n    \\<Longrightarrow> lowa no = lowb no \\<and> higha no = highb no", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>no \\<notin> set_of rrept; rep p \\<notin> set_of lrept;\n     no \\<in> set_of lrept;\n     (lowa(rep p := pa)) no = lowb no \\<and> higha no = highb no\\<rbrakk>\n    \\<Longrightarrow> lowa no = lowb no \\<and> higha no = highb no", "apply (subgoal_tac \"no \\<noteq> rep p\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>no \\<notin> set_of rrept; rep p \\<notin> set_of lrept;\n     no \\<in> set_of lrept;\n     (lowa(rep p := pa)) no = lowb no \\<and> higha no = highb no;\n     no \\<noteq> rep p\\<rbrakk>\n    \\<Longrightarrow> lowa no = lowb no \\<and> higha no = highb no\n 2. \\<lbrakk>no \\<notin> set_of rrept; rep p \\<notin> set_of lrept;\n     no \\<in> set_of lrept;\n     (lowa(rep p := pa)) no = lowb no \\<and> higha no = highb no\\<rbrakk>\n    \\<Longrightarrow> no \\<noteq> rep p", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>no \\<notin> set_of rrept; rep p \\<notin> set_of lrept;\n     no \\<in> set_of lrept;\n     (lowa(rep p := pa)) no = lowb no \\<and> higha no = highb no\\<rbrakk>\n    \\<Longrightarrow> no \\<noteq> rep p", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  lowa no = lowb no \\<and> higha no = highb no\n\ngoal (2 subgoals):\n 1. no \\<in> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no\n 2. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "from lowa_higha_def True"], ["proof (chain)\npicking this:\n  \\<forall>no\\<in>set_of lrept.\n     lowa no = (rep \\<propto> low) no \\<and>\n     higha no = (rep \\<propto> high) no\n  no \\<in> set_of lrept", "have \n                      \"lowa no = (rep \\<propto> low) no \\<and> higha no = (rep \\<propto> high) no\""], ["proof (prove)\nusing this:\n  \\<forall>no\\<in>set_of lrept.\n     lowa no = (rep \\<propto> low) no \\<and>\n     higha no = (rep \\<propto> high) no\n  no \\<in> set_of lrept\n\ngoal (1 subgoal):\n 1. lowa no = (rep \\<propto> low) no \\<and>\n    higha no = (rep \\<propto> high) no", "by auto"], ["proof (state)\nthis:\n  lowa no = (rep \\<propto> low) no \\<and> higha no = (rep \\<propto> high) no\n\ngoal (2 subgoals):\n 1. no \\<in> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no\n 2. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "with ab_nc_no"], ["proof (chain)\npicking this:\n  lowa no = lowb no \\<and> higha no = highb no\n  lowa no = (rep \\<propto> low) no \\<and> higha no = (rep \\<propto> high) no", "have \"lowb no = (rep \\<propto> low) no \\<and> highb no =(rep \\<propto> high) no\""], ["proof (prove)\nusing this:\n  lowa no = lowb no \\<and> higha no = highb no\n  lowa no = (rep \\<propto> low) no \\<and> higha no = (rep \\<propto> high) no\n\ngoal (1 subgoal):\n 1. lowb no = (rep \\<propto> low) no \\<and>\n    highb no = (rep \\<propto> high) no", "by simp"], ["proof (state)\nthis:\n  lowb no = (rep \\<propto> low) no \\<and> highb no = (rep \\<propto> high) no\n\ngoal (2 subgoals):\n 1. no \\<in> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no\n 2. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "with rp_notin_lrept True"], ["proof (chain)\npicking this:\n  rep p \\<notin> set_of lrept\n  no \\<in> set_of lrept\n  lowb no = (rep \\<propto> low) no \\<and> highb no = (rep \\<propto> high) no", "show ?thesis"], ["proof (prove)\nusing this:\n  rep p \\<notin> set_of lrept\n  no \\<in> set_of lrept\n  lowb no = (rep \\<propto> low) no \\<and> highb no = (rep \\<propto> high) no\n\ngoal (1 subgoal):\n 1. lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "apply (subgoal_tac \"no \\<noteq> rep p\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>rep p \\<notin> set_of lrept; no \\<in> set_of lrept;\n     lowb no = (rep \\<propto> low) no \\<and>\n     highb no = (rep \\<propto> high) no;\n     no \\<noteq> rep p\\<rbrakk>\n    \\<Longrightarrow> lowb no = (rep \\<propto> low) no \\<and>\n                      (highb(rep p := pb)) no = (rep \\<propto> high) no\n 2. \\<lbrakk>rep p \\<notin> set_of lrept; no \\<in> set_of lrept;\n     lowb no = (rep \\<propto> low) no \\<and>\n     highb no = (rep \\<propto> high) no\\<rbrakk>\n    \\<Longrightarrow> no \\<noteq> rep p", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>rep p \\<notin> set_of lrept; no \\<in> set_of lrept;\n     lowb no = (rep \\<propto> low) no \\<and>\n     highb no = (rep \\<propto> high) no\\<rbrakk>\n    \\<Longrightarrow> no \\<noteq> rep p", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  lowb no = (rep \\<propto> low) no \\<and>\n  (highb(rep p := pb)) no = (rep \\<propto> high) no\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "assume no_notin_lrept: \" no \\<notin> set_of lrept\""], ["proof (state)\nthis:\n  no \\<notin> set_of lrept\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "with no_in_rept rept_def no_notin_rrept"], ["proof (chain)\npicking this:\n  no \\<in> set_of rept\n  rept = Node lrept (rep p) rrept\n  no \\<notin> set_of rrept\n  no \\<notin> set_of lrept", "have no_rp: \"no = rep p\""], ["proof (prove)\nusing this:\n  no \\<in> set_of rept\n  rept = Node lrept (rep p) rrept\n  no \\<notin> set_of rrept\n  no \\<notin> set_of lrept\n\ngoal (1 subgoal):\n 1. no = rep p", "by simp"], ["proof (state)\nthis:\n  no = rep p\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "with rp_notin_lrept low_lowa_nc"], ["proof (chain)\npicking this:\n  rep p \\<notin> set_of lrept\n  \\<forall>pt.\n     pt \\<notin> set_of lrept \\<longrightarrow>\n     low pt = lowa pt \\<and> high pt = higha pt\n  no = rep p", "have a_nc: \"low no = lowa no \\<and> high no = higha no\""], ["proof (prove)\nusing this:\n  rep p \\<notin> set_of lrept\n  \\<forall>pt.\n     pt \\<notin> set_of lrept \\<longrightarrow>\n     low pt = lowa pt \\<and> high pt = higha pt\n  no = rep p\n\ngoal (1 subgoal):\n 1. low no = lowa no \\<and> high no = higha no", "by auto"], ["proof (state)\nthis:\n  low no = lowa no \\<and> high no = higha no\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "from rp_notin_rrept no_rp ab_nc"], ["proof (chain)\npicking this:\n  rep p \\<notin> set_of rrept\n  no = rep p\n  \\<forall>pt.\n     pt \\<notin> set_of rrept \\<longrightarrow>\n     (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt", "have \"(lowa(rep p := pa)) no = lowb no \\<and> higha no = highb no\""], ["proof (prove)\nusing this:\n  rep p \\<notin> set_of rrept\n  no = rep p\n  \\<forall>pt.\n     pt \\<notin> set_of rrept \\<longrightarrow>\n     (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt\n\ngoal (1 subgoal):\n 1. (lowa(rep p := pa)) no = lowb no \\<and> higha no = highb no", "by auto"], ["proof (state)\nthis:\n  (lowa(rep p := pa)) no = lowb no \\<and> higha no = highb no\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "with a_nc pa_def no_rp"], ["proof (chain)\npicking this:\n  low no = lowa no \\<and> high no = higha no\n  pa = (rep \\<propto> low) (rep p)\n  no = rep p\n  (lowa(rep p := pa)) no = lowb no \\<and> higha no = highb no", "have \"(rep \\<propto> low) no = lowb no \\<and> high no = highb no\""], ["proof (prove)\nusing this:\n  low no = lowa no \\<and> high no = higha no\n  pa = (rep \\<propto> low) (rep p)\n  no = rep p\n  (lowa(rep p := pa)) no = lowb no \\<and> higha no = highb no\n\ngoal (1 subgoal):\n 1. (rep \\<propto> low) no = lowb no \\<and> high no = highb no", "by auto"], ["proof (state)\nthis:\n  (rep \\<propto> low) no = lowb no \\<and> high no = highb no\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "with pb_def no_rp"], ["proof (chain)\npicking this:\n  pb = (rep \\<propto> high) (rep p)\n  no = rep p\n  (rep \\<propto> low) no = lowb no \\<and> high no = highb no", "show ?thesis"], ["proof (prove)\nusing this:\n  pb = (rep \\<propto> high) (rep p)\n  no = rep p\n  (rep \\<propto> low) no = lowb no \\<and> high no = highb no\n\ngoal (1 subgoal):\n 1. lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "by simp"], ["proof (state)\nthis:\n  lowb no = (rep \\<propto> low) no \\<and>\n  (highb(rep p := pb)) no = (rep \\<propto> high) no\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lowb no = (rep \\<propto> low) no \\<and>\n  (highb(rep p := pb)) no = (rep \\<propto> high) no\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lowb no = (rep \\<propto> low) no \\<and>\n  (highb(rep p := pb)) no = (rep \\<propto> high) no\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>no\\<in>set_of rept.\n     lowb no = (rep \\<propto> low) no \\<and>\n     (highb(rep p := pb)) no = (rep \\<propto> high) no\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept", "with rept_dag"], ["proof (chain)\npicking this:\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n  \\<forall>no\\<in>set_of rept.\n     lowb no = (rep \\<propto> low) no \\<and>\n     (highb(rep p := pb)) no = (rep \\<propto> high) no", "have \"Dag (rep p) lowb (highb(rep p := pb)) rept = \n                    Dag (rep p) (rep \\<propto> low) (rep \\<propto> high) rept\""], ["proof (prove)\nusing this:\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n  \\<forall>no\\<in>set_of rept.\n     lowb no = (rep \\<propto> low) no \\<and>\n     (highb(rep p := pb)) no = (rep \\<propto> high) no\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept =\n    Dag (rep p) (rep \\<propto> low) (rep \\<propto> high) rept", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n              (rep \\<propto> high) rept;\n     \\<forall>no\\<in>set_of rept.\n        lowb no = (rep \\<propto> low) no \\<and>\n        (highb(rep p := pb)) no = (rep \\<propto> high) no\\<rbrakk>\n    \\<Longrightarrow> Dag (rep p) lowb (highb(rep p := pb)) rept =\n                      Dag (rep p) (rep \\<propto> low) (rep \\<propto> high)\n                       rept", "apply (rule heaps_eq_Dag_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n              (rep \\<propto> high) rept;\n     \\<forall>no\\<in>set_of rept.\n        lowb no = (rep \\<propto> low) no \\<and>\n        (highb(rep p := pb)) no = (rep \\<propto> high) no\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>set_of rept.\n                         lowb x = (rep \\<propto> low) x \\<and>\n                         (highb(rep p := pb)) x = (rep \\<propto> high) x", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  Dag (rep p) lowb (highb(rep p := pb)) rept =\n  Dag (rep p) (rep \\<propto> low) (rep \\<propto> high) rept\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept", "with rept_dag p_nNull"], ["proof (chain)\npicking this:\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n  p \\<noteq> Null\n  Dag (rep p) lowb (highb(rep p := pb)) rept =\n  Dag (rep p) (rep \\<propto> low) (rep \\<propto> high) rept", "show ?thesis"], ["proof (prove)\nusing this:\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n  p \\<noteq> Null\n  Dag (rep p) lowb (highb(rep p := pb)) rept =\n  Dag (rep p) (rep \\<propto> low) (rep \\<propto> high) rept\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept", "by simp"], ["proof (state)\nthis:\n  Dag (rep p) lowb (highb(rep p := pb)) rept\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Dag (rep p) lowb (highb(rep p := pb)) rept\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "have \"(\\<forall>pt. pt \\<notin> set_of rept \\<longrightarrow> low pt = lowb pt \\<and> \n                        high pt = (highb(rep p := pb)) pt)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>pt.\n       pt \\<notin> set_of rept \\<longrightarrow>\n       low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt", "proof (intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>pt.\n       pt \\<notin> set_of rept \\<Longrightarrow>\n       low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt", "fix pt"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>pt.\n       pt \\<notin> set_of rept \\<Longrightarrow>\n       low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt", "assume pt_notin_rept: \"pt \\<notin> set_of rept\""], ["proof (state)\nthis:\n  pt \\<notin> set_of rept\n\ngoal (1 subgoal):\n 1. \\<And>pt.\n       pt \\<notin> set_of rept \\<Longrightarrow>\n       low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt", "with rept_def"], ["proof (chain)\npicking this:\n  rept = Node lrept (rep p) rrept\n  pt \\<notin> set_of rept", "obtain\n                pt_notin_lrept: \"pt \\<notin> set_of lrept\" and\n                pt_notin_rrept: \"pt \\<notin> set_of rrept\" and\n                pt_neq_rp: \"pt \\<noteq> rep p\""], ["proof (prove)\nusing this:\n  rept = Node lrept (rep p) rrept\n  pt \\<notin> set_of rept\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>pt \\<notin> set_of lrept; pt \\<notin> set_of rrept;\n      pt \\<noteq> rep p\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by simp"], ["proof (state)\nthis:\n  pt \\<notin> set_of lrept\n  pt \\<notin> set_of rrept\n  pt \\<noteq> rep p\n\ngoal (1 subgoal):\n 1. \\<And>pt.\n       pt \\<notin> set_of rept \\<Longrightarrow>\n       low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt", "with low_lowa_nc ab_nc"], ["proof (chain)\npicking this:\n  \\<forall>pt.\n     pt \\<notin> set_of lrept \\<longrightarrow>\n     low pt = lowa pt \\<and> high pt = higha pt\n  \\<forall>pt.\n     pt \\<notin> set_of rrept \\<longrightarrow>\n     (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt\n  pt \\<notin> set_of lrept\n  pt \\<notin> set_of rrept\n  pt \\<noteq> rep p", "show \"low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt\""], ["proof (prove)\nusing this:\n  \\<forall>pt.\n     pt \\<notin> set_of lrept \\<longrightarrow>\n     low pt = lowa pt \\<and> high pt = higha pt\n  \\<forall>pt.\n     pt \\<notin> set_of rrept \\<longrightarrow>\n     (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt\n  pt \\<notin> set_of lrept\n  pt \\<notin> set_of rrept\n  pt \\<noteq> rep p\n\ngoal (1 subgoal):\n 1. low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt", "by auto"], ["proof (state)\nthis:\n  low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>pt.\n     pt \\<notin> set_of rept \\<longrightarrow>\n     low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "with rept_end_dag"], ["proof (chain)\npicking this:\n  Dag (rep p) lowb (highb(rep p := pb)) rept\n  \\<forall>pt.\n     pt \\<notin> set_of rept \\<longrightarrow>\n     low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt", "show ?thesis"], ["proof (prove)\nusing this:\n  Dag (rep p) lowb (highb(rep p := pb)) rept\n  \\<forall>pt.\n     pt \\<notin> set_of rept \\<longrightarrow>\n     low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "by simp"], ["proof (state)\nthis:\n  Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of rept \\<longrightarrow>\n      low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>rrept.\n     Dag ((rep \\<propto> id) (higha (rep p)))\n      (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept \\<and>\n     (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n     (\\<forall>lowb highb pb.\n         Dag pb lowb highb rrept \\<and>\n         (\\<forall>pt.\n             pt \\<notin> set_of rrept \\<longrightarrow>\n             (lowa(rep p := pa)) pt = lowb pt \\<and>\n             higha pt = highb pt) \\<longrightarrow>\n         Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n         (\\<forall>pt.\n             pt \\<notin> set_of rept \\<longrightarrow>\n             low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>lrept.\n     Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n      (rep \\<propto> high) lrept \\<and>\n     (\\<forall>no\\<in>set_of lrept. rep no = no) \\<and>\n     (\\<forall>lowa higha pa.\n         Dag pa lowa higha lrept \\<and>\n         (\\<forall>pt.\n             pt \\<notin> set_of lrept \\<longrightarrow>\n             low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n         (\\<exists>rrept.\n             Dag ((rep \\<propto> id) (higha (rep p)))\n              (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n              rrept \\<and>\n             (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n             (\\<forall>lowb highb pb.\n                 Dag pb lowb highb rrept \\<and>\n                 (\\<forall>pt.\n                     pt \\<notin> set_of rrept \\<longrightarrow>\n                     (lowa(rep p := pa)) pt = lowb pt \\<and>\n                     higha pt = highb pt) \\<longrightarrow>\n                 Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                 (\\<forall>pt.\n                     pt \\<notin> set_of rept \\<longrightarrow>\n                     low pt = lowb pt \\<and>\n                     high pt = (highb(rep p := pb)) pt))))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>lrept.\n     Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n      (rep \\<propto> high) lrept \\<and>\n     (\\<forall>no\\<in>set_of lrept. rep no = no) \\<and>\n     (\\<forall>lowa higha pa.\n         Dag pa lowa higha lrept \\<and>\n         (\\<forall>pt.\n             pt \\<notin> set_of lrept \\<longrightarrow>\n             low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n         (\\<exists>rrept.\n             Dag ((rep \\<propto> id) (higha (rep p)))\n              (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n              rrept \\<and>\n             (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n             (\\<forall>lowb highb pb.\n                 Dag pb lowb highb rrept \\<and>\n                 (\\<forall>pt.\n                     pt \\<notin> set_of rrept \\<longrightarrow>\n                     (lowa(rep p := pa)) pt = lowb pt \\<and>\n                     higha pt = highb pt) \\<longrightarrow>\n                 Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                 (\\<forall>pt.\n                     pt \\<notin> set_of rept \\<longrightarrow>\n                     low pt = lowb pt \\<and>\n                     high pt = (highb(rep p := pb)) pt))))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in Repoint_impl) Repoint_spec_total:\nshows \n  \"\\<forall>\\<sigma> rept. \\<Gamma>\\<turnstile>\\<^sub>t \\<lbrace>\\<sigma>. Dag ((\\<acute>rep \\<propto> id) \\<acute>p) (\\<acute>rep \\<propto> \\<acute>low) (\\<acute>rep \\<propto> \\<acute>high) rept \n  \\<and> (\\<forall> no \\<in> set_of rept. \\<acute>rep no = no) \\<rbrace> \n  \\<acute>p :== PROC Repoint (\\<acute>p)\n  \\<lbrace>Dag \\<acute>p \\<acute>low \\<acute>high rept \\<and>\n  (\\<forall>pt. pt \\<notin> set_of rept \\<longrightarrow> \\<^bsup>\\<sigma>\\<^esup>low pt = \\<acute>low pt \\<and> \\<^bsup>\\<sigma>\\<^esup>high pt = \\<acute>high pt)\\<rbrace>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<sigma> rept.\n       \\<Gamma>\n          \\<turnstile>\\<^sub>t \\<lbrace>\\<sigma>. Dag\n             ((\\<acute>rep \\<propto> id) \\<acute>p)\n             (\\<acute>rep \\<propto> \\<acute>low)\n             (\\<acute>rep \\<propto> \\<acute>high) rept \\<and>\n            (\\<forall>no\\<in>set_of rept.\n                no\\<rightarrow>\\<acute>rep = no)\\<rbrace>\n                               \\<acute>p :== PROC Repoint(\\<acute>p)\n                               \\<lbrace>Dag \\<acute>p \\<acute>low\n   \\<acute>high rept \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of rept \\<longrightarrow>\n      \\<^bsup>\\<sigma>\\<^esup>low pt = pt\\<rightarrow>\\<acute>low \\<and>\n      \\<^bsup>\\<sigma>\\<^esup>high pt =\n      pt\\<rightarrow>\\<acute>high)\\<rbrace>", "apply (hoare_rule HoareTotal.ProcRec1\n          [where r=\"measure (\\<lambda>(s,p). size \n                       (dag ((\\<^bsup>s\\<^esup>rep \\<propto> id) \\<^bsup>s\\<^esup>p) (\\<^bsup>s\\<^esup>rep \\<propto> \\<^bsup>s\\<^esup>low) (\\<^bsup>s\\<^esup>rep \\<propto> \\<^bsup>s\\<^esup>high)))\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<sigma> \\<sigma>' rept.\n       \\<Gamma>,(\\<Union>\\<sigma>' rept.\n                    {(\\<lbrace>\\<sigma>'. Dag\n     ((\\<acute>rep \\<propto> id) \\<acute>p)\n     (\\<acute>rep \\<propto> \\<acute>low)\n     (\\<acute>rep \\<propto> \\<acute>high) rept \\<and>\n    (\\<forall>no\\<in>set_of rept.\n        no\\<rightarrow>\\<acute>rep = no)\\<rbrace> \\<inter>\n                      \\<lbrace>size\n                                (dag ((\\<acute>rep \\<propto> id) \\<acute>p)\n                                  (\\<acute>rep \\<propto> \\<acute>low)\n                                  (\\<acute>rep \\<propto> \\<acute>high))\n                               < size\n                                  (dag ((\\<^bsup>\\<sigma>\\<^esup>rep \\<propto>\n   id)\n   \\<^bsup>\\<sigma>\\<^esup>p)\n                                    (\\<^bsup>\\<sigma>\\<^esup>rep \\<propto>\n                                     \\<^bsup>\\<sigma>\\<^esup>low)\n                                    (\\<^bsup>\\<sigma>\\<^esup>rep \\<propto>\n                                     \\<^bsup>\\<sigma>\\<^esup>high))\\<rbrace>,\n                      Repoint_'proc,\n                      \\<lbrace>Dag \\<acute>p \\<acute>low \\<acute>high\n                                rept \\<and>\n                               (\\<forall>pt.\n                                   pt \\<notin> set_of rept \\<longrightarrow>\n                                   \\<^bsup>\\<sigma>'\\<^esup>low pt =\n                                   pt\\<rightarrow>\\<acute>low \\<and>\n                                   \\<^bsup>\\<sigma>'\\<^esup>high pt =\n                                   pt\\<rightarrow>\\<acute>high)\\<rbrace>,\n                      {})})\n          \\<turnstile>\\<^sub>t ({\\<sigma>} \\<inter>\n                                \\<lbrace>\\<sigma>'. Dag\n               ((\\<acute>rep \\<propto> id) \\<acute>p)\n               (\\<acute>rep \\<propto> \\<acute>low)\n               (\\<acute>rep \\<propto> \\<acute>high) rept \\<and>\n              (\\<forall>no\\<in>set_of rept.\n                  no\\<rightarrow>\\<acute>rep = no)\\<rbrace>)\n                               IF \\<acute>p \\<noteq> Null\n                               THEN \\<acute>p :==\n                                    \\<acute>p\\<rightarrow>\\<acute>rep;;\n                                 IF \\<acute>p \\<noteq> Null\n                                 THEN \\<acute>p\\<rightarrow>\\<acute>low :== CALL Repoint(\\<acute>p\\<rightarrow>\\<acute>low);;\n                                   \\<acute>p\\<rightarrow>\\<acute>high :== CALL Repoint(\\<acute>p\\<rightarrow>\\<acute>high)\n                                 FI\n                               FI\n                               \\<lbrace>Dag \\<acute>p \\<acute>low\n   \\<acute>high rept \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of rept \\<longrightarrow>\n      \\<^bsup>\\<sigma>'\\<^esup>low pt = pt\\<rightarrow>\\<acute>low \\<and>\n      \\<^bsup>\\<sigma>'\\<^esup>high pt =\n      pt\\<rightarrow>\\<acute>high)\\<rbrace>", "apply vcg"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no\\<rbrakk>\n       \\<Longrightarrow> (p \\<noteq> Null \\<longrightarrow>\n                          (rep p \\<noteq> Null \\<longrightarrow>\n                           (\\<exists>repta.\n                               Dag ((rep \\<propto> id) (low (rep p)))\n                                (rep \\<propto> low) (rep \\<propto> high)\n                                repta \\<and>\n                               (\\<forall>no\\<in>set_of repta.\n                                   rep no = no) \\<and>\n                               size\n                                (dag ((rep \\<propto> id) (low (rep p)))\n                                  (rep \\<propto> low) (rep \\<propto> high))\n                               < size\n                                  (dag ((rep \\<propto> id) p)\n                                    (rep \\<propto> low)\n                                    (rep \\<propto> high)) \\<and>\n                               (\\<forall>lowa higha pa.\n                                   Dag pa lowa higha repta \\<and>\n                                   (\\<forall>pt.\n pt \\<notin> set_of repta \\<longrightarrow>\n low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n                                   (\\<exists>repta.\n Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n  (rep \\<propto> higha) repta \\<and>\n (\\<forall>no\\<in>set_of repta. rep no = no) \\<and>\n size\n  (dag ((rep \\<propto> id) (higha (rep p)))\n    (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n < size\n    (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n      (rep \\<propto> high)) \\<and>\n (\\<forall>lowb highb pb.\n     Dag pb lowb highb repta \\<and>\n     (\\<forall>pt.\n         pt \\<notin> set_of repta \\<longrightarrow>\n         (lowa(rep p := pa)) pt = lowb pt \\<and>\n         higha pt = highb pt) \\<longrightarrow>\n     Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n     (\\<forall>pt.\n         pt \\<notin> set_of rept \\<longrightarrow>\n         low pt = lowb pt \\<and>\n         high pt = (highb(rep p := pb)) pt)))))) \\<and>\n                          (\\<not> rep p \\<noteq> Null \\<longrightarrow>\n                           Dag (rep p) low high rept \\<and>\n                           (\\<forall>pt.\n                               pt \\<notin> set_of rept \\<longrightarrow>\n                               low pt = low pt \\<and>\n                               high pt = high pt))) \\<and>\n                         (\\<not> p \\<noteq> Null \\<longrightarrow>\n                          Dag p low high rept \\<and>\n                          (\\<forall>pt.\n                              pt \\<notin> set_of rept \\<longrightarrow>\n                              low pt = low pt \\<and> high pt = high pt))", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no\\<rbrakk>\n       \\<Longrightarrow> p \\<noteq> Null \\<longrightarrow>\n                         (rep p \\<noteq> Null \\<longrightarrow>\n                          (\\<exists>repta.\n                              Dag ((rep \\<propto> id) (low (rep p)))\n                               (rep \\<propto> low) (rep \\<propto> high)\n                               repta \\<and>\n                              (\\<forall>no\\<in>set_of repta.\n                                  rep no = no) \\<and>\n                              size\n                               (dag ((rep \\<propto> id) (low (rep p)))\n                                 (rep \\<propto> low) (rep \\<propto> high))\n                              < size\n                                 (dag ((rep \\<propto> id) p)\n                                   (rep \\<propto> low)\n                                   (rep \\<propto> high)) \\<and>\n                              (\\<forall>lowa higha pa.\n                                  Dag pa lowa higha repta \\<and>\n                                  (\\<forall>pt.\npt \\<notin> set_of repta \\<longrightarrow>\nlow pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n                                  (\\<exists>repta.\nDag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n (rep \\<propto> higha) repta \\<and>\n(\\<forall>no\\<in>set_of repta. rep no = no) \\<and>\nsize\n (dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n   (rep \\<propto> higha))\n< size\n   (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n     (rep \\<propto> high)) \\<and>\n(\\<forall>lowb highb pb.\n    Dag pb lowb highb repta \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of repta \\<longrightarrow>\n        (lowa(rep p := pa)) pt = lowb pt \\<and>\n        higha pt = highb pt) \\<longrightarrow>\n    Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and>\n        high pt = (highb(rep p := pb)) pt)))))) \\<and>\n                         (\\<not> rep p \\<noteq> Null \\<longrightarrow>\n                          Dag (rep p) low high rept \\<and>\n                          (\\<forall>pt.\n                              pt \\<notin> set_of rept \\<longrightarrow>\n                              low pt = low pt \\<and> high pt = high pt))\n 2. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no\\<rbrakk>\n       \\<Longrightarrow> \\<not> p \\<noteq> Null \\<longrightarrow>\n                         Dag p low high rept \\<and>\n                         (\\<forall>pt.\n                             pt \\<notin> set_of rept \\<longrightarrow>\n                             low pt = low pt \\<and> high pt = high pt)", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no\\<rbrakk>\n       \\<Longrightarrow> \\<not> p \\<noteq> Null \\<longrightarrow>\n                         Dag p low high rept \\<and>\n                         (\\<forall>pt.\n                             pt \\<notin> set_of rept \\<longrightarrow>\n                             low pt = low pt \\<and> high pt = high pt)\n 2. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no\\<rbrakk>\n       \\<Longrightarrow> p \\<noteq> Null \\<longrightarrow>\n                         (rep p \\<noteq> Null \\<longrightarrow>\n                          (\\<exists>repta.\n                              Dag ((rep \\<propto> id) (low (rep p)))\n                               (rep \\<propto> low) (rep \\<propto> high)\n                               repta \\<and>\n                              (\\<forall>no\\<in>set_of repta.\n                                  rep no = no) \\<and>\n                              size\n                               (dag ((rep \\<propto> id) (low (rep p)))\n                                 (rep \\<propto> low) (rep \\<propto> high))\n                              < size\n                                 (dag ((rep \\<propto> id) p)\n                                   (rep \\<propto> low)\n                                   (rep \\<propto> high)) \\<and>\n                              (\\<forall>lowa higha pa.\n                                  Dag pa lowa higha repta \\<and>\n                                  (\\<forall>pt.\npt \\<notin> set_of repta \\<longrightarrow>\nlow pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n                                  (\\<exists>repta.\nDag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n (rep \\<propto> higha) repta \\<and>\n(\\<forall>no\\<in>set_of repta. rep no = no) \\<and>\nsize\n (dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n   (rep \\<propto> higha))\n< size\n   (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n     (rep \\<propto> high)) \\<and>\n(\\<forall>lowb highb pb.\n    Dag pb lowb highb repta \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of repta \\<longrightarrow>\n        (lowa(rep p := pa)) pt = lowb pt \\<and>\n        higha pt = highb pt) \\<longrightarrow>\n    Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and>\n        high pt = (highb(rep p := pb)) pt)))))) \\<and>\n                         (\\<not> rep p \\<noteq> Null \\<longrightarrow>\n                          Dag (rep p) low high rept \\<and>\n                          (\\<forall>pt.\n                              pt \\<notin> set_of rept \\<longrightarrow>\n                              low pt = low pt \\<and> high pt = high pt))", "apply  (clarsimp simp add: null_comp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no\\<rbrakk>\n       \\<Longrightarrow> p \\<noteq> Null \\<longrightarrow>\n                         (rep p \\<noteq> Null \\<longrightarrow>\n                          (\\<exists>repta.\n                              Dag ((rep \\<propto> id) (low (rep p)))\n                               (rep \\<propto> low) (rep \\<propto> high)\n                               repta \\<and>\n                              (\\<forall>no\\<in>set_of repta.\n                                  rep no = no) \\<and>\n                              size\n                               (dag ((rep \\<propto> id) (low (rep p)))\n                                 (rep \\<propto> low) (rep \\<propto> high))\n                              < size\n                                 (dag ((rep \\<propto> id) p)\n                                   (rep \\<propto> low)\n                                   (rep \\<propto> high)) \\<and>\n                              (\\<forall>lowa higha pa.\n                                  Dag pa lowa higha repta \\<and>\n                                  (\\<forall>pt.\npt \\<notin> set_of repta \\<longrightarrow>\nlow pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n                                  (\\<exists>repta.\nDag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n (rep \\<propto> higha) repta \\<and>\n(\\<forall>no\\<in>set_of repta. rep no = no) \\<and>\nsize\n (dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n   (rep \\<propto> higha))\n< size\n   (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n     (rep \\<propto> high)) \\<and>\n(\\<forall>lowb highb pb.\n    Dag pb lowb highb repta \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of repta \\<longrightarrow>\n        (lowa(rep p := pa)) pt = lowb pt \\<and>\n        higha pt = highb pt) \\<longrightarrow>\n    Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and>\n        high pt = (highb(rep p := pb)) pt)))))) \\<and>\n                         (\\<not> rep p \\<noteq> Null \\<longrightarrow>\n                          Dag (rep p) low high rept \\<and>\n                          (\\<forall>pt.\n                              pt \\<notin> set_of rept \\<longrightarrow>\n                              low pt = low pt \\<and> high pt = high pt))", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no; p \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> (rep p \\<noteq> Null \\<longrightarrow>\n                          (\\<exists>repta.\n                              Dag ((rep \\<propto> id) (low (rep p)))\n                               (rep \\<propto> low) (rep \\<propto> high)\n                               repta \\<and>\n                              (\\<forall>no\\<in>set_of repta.\n                                  rep no = no) \\<and>\n                              size\n                               (dag ((rep \\<propto> id) (low (rep p)))\n                                 (rep \\<propto> low) (rep \\<propto> high))\n                              < size\n                                 (dag ((rep \\<propto> id) p)\n                                   (rep \\<propto> low)\n                                   (rep \\<propto> high)) \\<and>\n                              (\\<forall>lowa higha pa.\n                                  Dag pa lowa higha repta \\<and>\n                                  (\\<forall>pt.\npt \\<notin> set_of repta \\<longrightarrow>\nlow pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n                                  (\\<exists>repta.\nDag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n (rep \\<propto> higha) repta \\<and>\n(\\<forall>no\\<in>set_of repta. rep no = no) \\<and>\nsize\n (dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n   (rep \\<propto> higha))\n< size\n   (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n     (rep \\<propto> high)) \\<and>\n(\\<forall>lowb highb pb.\n    Dag pb lowb highb repta \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of repta \\<longrightarrow>\n        (lowa(rep p := pa)) pt = lowb pt \\<and>\n        higha pt = highb pt) \\<longrightarrow>\n    Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and>\n        high pt = (highb(rep p := pb)) pt)))))) \\<and>\n                         (\\<not> rep p \\<noteq> Null \\<longrightarrow>\n                          Dag (rep p) low high rept \\<and>\n                          (\\<forall>pt.\n                              pt \\<notin> set_of rept \\<longrightarrow>\n                              low pt = low pt \\<and> high pt = high pt))", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no; p \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> rep p \\<noteq> Null \\<longrightarrow>\n                         (\\<exists>repta.\n                             Dag ((rep \\<propto> id) (low (rep p)))\n                              (rep \\<propto> low) (rep \\<propto> high)\n                              repta \\<and>\n                             (\\<forall>no\\<in>set_of repta.\n                                 rep no = no) \\<and>\n                             size\n                              (dag ((rep \\<propto> id) (low (rep p)))\n                                (rep \\<propto> low) (rep \\<propto> high))\n                             < size\n                                (dag ((rep \\<propto> id) p)\n                                  (rep \\<propto> low)\n                                  (rep \\<propto> high)) \\<and>\n                             (\\<forall>lowa higha pa.\n                                 Dag pa lowa higha repta \\<and>\n                                 (\\<forall>pt.\n                                     pt \\<notin> set_of\n            repta \\<longrightarrow>\n                                     low pt = lowa pt \\<and>\n                                     high pt = higha pt) \\<longrightarrow>\n                                 (\\<exists>repta.\n                                     Dag\n((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n(rep \\<propto> higha) repta \\<and>\n                                     (\\<forall>no\\<in>set_of repta.\n   rep no = no) \\<and>\n                                     size\n(dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n  (rep \\<propto> higha))\n                                     < size\n  (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n    (rep \\<propto> high)) \\<and>\n                                     (\\<forall>lowb highb pb.\n   Dag pb lowb highb repta \\<and>\n   (\\<forall>pt.\n       pt \\<notin> set_of repta \\<longrightarrow>\n       (lowa(rep p := pa)) pt = lowb pt \\<and>\n       higha pt = highb pt) \\<longrightarrow>\n   Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n   (\\<forall>pt.\n       pt \\<notin> set_of rept \\<longrightarrow>\n       low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)))))\n 2. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no; p \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> \\<not> rep p \\<noteq> Null \\<longrightarrow>\n                         Dag (rep p) low high rept \\<and>\n                         (\\<forall>pt.\n                             pt \\<notin> set_of rept \\<longrightarrow>\n                             low pt = low pt \\<and> high pt = high pt)", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no; p \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> \\<not> rep p \\<noteq> Null \\<longrightarrow>\n                         Dag (rep p) low high rept \\<and>\n                         (\\<forall>pt.\n                             pt \\<notin> set_of rept \\<longrightarrow>\n                             low pt = low pt \\<and> high pt = high pt)\n 2. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no; p \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> rep p \\<noteq> Null \\<longrightarrow>\n                         (\\<exists>repta.\n                             Dag ((rep \\<propto> id) (low (rep p)))\n                              (rep \\<propto> low) (rep \\<propto> high)\n                              repta \\<and>\n                             (\\<forall>no\\<in>set_of repta.\n                                 rep no = no) \\<and>\n                             size\n                              (dag ((rep \\<propto> id) (low (rep p)))\n                                (rep \\<propto> low) (rep \\<propto> high))\n                             < size\n                                (dag ((rep \\<propto> id) p)\n                                  (rep \\<propto> low)\n                                  (rep \\<propto> high)) \\<and>\n                             (\\<forall>lowa higha pa.\n                                 Dag pa lowa higha repta \\<and>\n                                 (\\<forall>pt.\n                                     pt \\<notin> set_of\n            repta \\<longrightarrow>\n                                     low pt = lowa pt \\<and>\n                                     high pt = higha pt) \\<longrightarrow>\n                                 (\\<exists>repta.\n                                     Dag\n((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n(rep \\<propto> higha) repta \\<and>\n                                     (\\<forall>no\\<in>set_of repta.\n   rep no = no) \\<and>\n                                     size\n(dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n  (rep \\<propto> higha))\n                                     < size\n  (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n    (rep \\<propto> high)) \\<and>\n                                     (\\<forall>lowb highb pb.\n   Dag pb lowb highb repta \\<and>\n   (\\<forall>pt.\n       pt \\<notin> set_of repta \\<longrightarrow>\n       (lowa(rep p := pa)) pt = lowb pt \\<and>\n       higha pt = highb pt) \\<longrightarrow>\n   Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n   (\\<forall>pt.\n       pt \\<notin> set_of rept \\<longrightarrow>\n       low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)))))", "apply  clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no; p \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> rep p \\<noteq> Null \\<longrightarrow>\n                         (\\<exists>repta.\n                             Dag ((rep \\<propto> id) (low (rep p)))\n                              (rep \\<propto> low) (rep \\<propto> high)\n                              repta \\<and>\n                             (\\<forall>no\\<in>set_of repta.\n                                 rep no = no) \\<and>\n                             size\n                              (dag ((rep \\<propto> id) (low (rep p)))\n                                (rep \\<propto> low) (rep \\<propto> high))\n                             < size\n                                (dag ((rep \\<propto> id) p)\n                                  (rep \\<propto> low)\n                                  (rep \\<propto> high)) \\<and>\n                             (\\<forall>lowa higha pa.\n                                 Dag pa lowa higha repta \\<and>\n                                 (\\<forall>pt.\n                                     pt \\<notin> set_of\n            repta \\<longrightarrow>\n                                     low pt = lowa pt \\<and>\n                                     high pt = higha pt) \\<longrightarrow>\n                                 (\\<exists>repta.\n                                     Dag\n((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n(rep \\<propto> higha) repta \\<and>\n                                     (\\<forall>no\\<in>set_of repta.\n   rep no = no) \\<and>\n                                     size\n(dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n  (rep \\<propto> higha))\n                                     < size\n  (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n    (rep \\<propto> high)) \\<and>\n                                     (\\<forall>lowb highb pb.\n   Dag pb lowb highb repta \\<and>\n   (\\<forall>pt.\n       pt \\<notin> set_of repta \\<longrightarrow>\n       (lowa(rep p := pa)) pt = lowb pt \\<and>\n       higha pt = highb pt) \\<longrightarrow>\n   Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n   (\\<forall>pt.\n       pt \\<notin> set_of rept \\<longrightarrow>\n       low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)))))", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no; p \\<noteq> Null;\n        rep p \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> \\<exists>repta.\n                            Dag ((rep \\<propto> id) (low (rep p)))\n                             (rep \\<propto> low) (rep \\<propto> high)\n                             repta \\<and>\n                            (\\<forall>no\\<in>set_of repta.\n                                rep no = no) \\<and>\n                            size\n                             (dag ((rep \\<propto> id) (low (rep p)))\n                               (rep \\<propto> low) (rep \\<propto> high))\n                            < size\n                               (dag ((rep \\<propto> id) p)\n                                 (rep \\<propto> low)\n                                 (rep \\<propto> high)) \\<and>\n                            (\\<forall>lowa higha pa.\n                                Dag pa lowa higha repta \\<and>\n                                (\\<forall>pt.\n                                    pt \\<notin> set_of\n           repta \\<longrightarrow>\n                                    low pt = lowa pt \\<and>\n                                    high pt = higha pt) \\<longrightarrow>\n                                (\\<exists>repta.\n                                    Dag ((rep \\<propto> id) (higha (rep p)))\n                                     (rep \\<propto> lowa(rep p := pa))\n                                     (rep \\<propto> higha) repta \\<and>\n                                    (\\<forall>no\\<in>set_of repta.\n  rep no = no) \\<and>\n                                    size\n                                     (dag\n ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n (rep \\<propto> higha))\n                                    < size\n (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n   (rep \\<propto> high)) \\<and>\n                                    (\\<forall>lowb highb pb.\n  Dag pb lowb highb repta \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of repta \\<longrightarrow>\n      (lowa(rep p := pa)) pt = lowb pt \\<and>\n      higha pt = highb pt) \\<longrightarrow>\n  Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of rept \\<longrightarrow>\n      low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no; p \\<noteq> Null;\n        rep p \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> \\<exists>repta.\n                            Dag ((rep \\<propto> id) (low (rep p)))\n                             (rep \\<propto> low) (rep \\<propto> high)\n                             repta \\<and>\n                            (\\<forall>no\\<in>set_of repta.\n                                rep no = no) \\<and>\n                            size\n                             (dag ((rep \\<propto> id) (low (rep p)))\n                               (rep \\<propto> low) (rep \\<propto> high))\n                            < size\n                               (dag ((rep \\<propto> id) p)\n                                 (rep \\<propto> low)\n                                 (rep \\<propto> high)) \\<and>\n                            (\\<forall>lowa higha pa.\n                                Dag pa lowa higha repta \\<and>\n                                (\\<forall>pt.\n                                    pt \\<notin> set_of\n           repta \\<longrightarrow>\n                                    low pt = lowa pt \\<and>\n                                    high pt = higha pt) \\<longrightarrow>\n                                (\\<exists>repta.\n                                    Dag ((rep \\<propto> id) (higha (rep p)))\n                                     (rep \\<propto> lowa(rep p := pa))\n                                     (rep \\<propto> higha) repta \\<and>\n                                    (\\<forall>no\\<in>set_of repta.\n  rep no = no) \\<and>\n                                    size\n                                     (dag\n ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n (rep \\<propto> higha))\n                                    < size\n (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n   (rep \\<propto> high)) \\<and>\n                                    (\\<forall>lowb highb pb.\n  Dag pb lowb highb repta \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of repta \\<longrightarrow>\n      (lowa(rep p := pa)) pt = lowb pt \\<and>\n      higha pt = highb pt) \\<longrightarrow>\n  Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of rept \\<longrightarrow>\n      low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))))", "fix rept low high rep p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no; p \\<noteq> Null;\n        rep p \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> \\<exists>repta.\n                            Dag ((rep \\<propto> id) (low (rep p)))\n                             (rep \\<propto> low) (rep \\<propto> high)\n                             repta \\<and>\n                            (\\<forall>no\\<in>set_of repta.\n                                rep no = no) \\<and>\n                            size\n                             (dag ((rep \\<propto> id) (low (rep p)))\n                               (rep \\<propto> low) (rep \\<propto> high))\n                            < size\n                               (dag ((rep \\<propto> id) p)\n                                 (rep \\<propto> low)\n                                 (rep \\<propto> high)) \\<and>\n                            (\\<forall>lowa higha pa.\n                                Dag pa lowa higha repta \\<and>\n                                (\\<forall>pt.\n                                    pt \\<notin> set_of\n           repta \\<longrightarrow>\n                                    low pt = lowa pt \\<and>\n                                    high pt = higha pt) \\<longrightarrow>\n                                (\\<exists>repta.\n                                    Dag ((rep \\<propto> id) (higha (rep p)))\n                                     (rep \\<propto> lowa(rep p := pa))\n                                     (rep \\<propto> higha) repta \\<and>\n                                    (\\<forall>no\\<in>set_of repta.\n  rep no = no) \\<and>\n                                    size\n                                     (dag\n ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n (rep \\<propto> higha))\n                                    < size\n (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n   (rep \\<propto> high)) \\<and>\n                                    (\\<forall>lowb highb pb.\n  Dag pb lowb highb repta \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of repta \\<longrightarrow>\n      (lowa(rep p := pa)) pt = lowb pt \\<and>\n      higha pt = highb pt) \\<longrightarrow>\n  Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of rept \\<longrightarrow>\n      low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))))", "assume rept_dag: \"Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\""], ["proof (state)\nthis:\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n\ngoal (1 subgoal):\n 1. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no; p \\<noteq> Null;\n        rep p \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> \\<exists>repta.\n                            Dag ((rep \\<propto> id) (low (rep p)))\n                             (rep \\<propto> low) (rep \\<propto> high)\n                             repta \\<and>\n                            (\\<forall>no\\<in>set_of repta.\n                                rep no = no) \\<and>\n                            size\n                             (dag ((rep \\<propto> id) (low (rep p)))\n                               (rep \\<propto> low) (rep \\<propto> high))\n                            < size\n                               (dag ((rep \\<propto> id) p)\n                                 (rep \\<propto> low)\n                                 (rep \\<propto> high)) \\<and>\n                            (\\<forall>lowa higha pa.\n                                Dag pa lowa higha repta \\<and>\n                                (\\<forall>pt.\n                                    pt \\<notin> set_of\n           repta \\<longrightarrow>\n                                    low pt = lowa pt \\<and>\n                                    high pt = higha pt) \\<longrightarrow>\n                                (\\<exists>repta.\n                                    Dag ((rep \\<propto> id) (higha (rep p)))\n                                     (rep \\<propto> lowa(rep p := pa))\n                                     (rep \\<propto> higha) repta \\<and>\n                                    (\\<forall>no\\<in>set_of repta.\n  rep no = no) \\<and>\n                                    size\n                                     (dag\n ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n (rep \\<propto> higha))\n                                    < size\n (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n   (rep \\<propto> high)) \\<and>\n                                    (\\<forall>lowb highb pb.\n  Dag pb lowb highb repta \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of repta \\<longrightarrow>\n      (lowa(rep p := pa)) pt = lowb pt \\<and>\n      higha pt = highb pt) \\<longrightarrow>\n  Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of rept \\<longrightarrow>\n      low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))))", "assume rno_rept: \"\\<forall>no\\<in>set_of rept. rep no = no\""], ["proof (state)\nthis:\n  \\<forall>no\\<in>set_of rept. rep no = no\n\ngoal (1 subgoal):\n 1. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no; p \\<noteq> Null;\n        rep p \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> \\<exists>repta.\n                            Dag ((rep \\<propto> id) (low (rep p)))\n                             (rep \\<propto> low) (rep \\<propto> high)\n                             repta \\<and>\n                            (\\<forall>no\\<in>set_of repta.\n                                rep no = no) \\<and>\n                            size\n                             (dag ((rep \\<propto> id) (low (rep p)))\n                               (rep \\<propto> low) (rep \\<propto> high))\n                            < size\n                               (dag ((rep \\<propto> id) p)\n                                 (rep \\<propto> low)\n                                 (rep \\<propto> high)) \\<and>\n                            (\\<forall>lowa higha pa.\n                                Dag pa lowa higha repta \\<and>\n                                (\\<forall>pt.\n                                    pt \\<notin> set_of\n           repta \\<longrightarrow>\n                                    low pt = lowa pt \\<and>\n                                    high pt = higha pt) \\<longrightarrow>\n                                (\\<exists>repta.\n                                    Dag ((rep \\<propto> id) (higha (rep p)))\n                                     (rep \\<propto> lowa(rep p := pa))\n                                     (rep \\<propto> higha) repta \\<and>\n                                    (\\<forall>no\\<in>set_of repta.\n  rep no = no) \\<and>\n                                    size\n                                     (dag\n ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n (rep \\<propto> higha))\n                                    < size\n (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n   (rep \\<propto> high)) \\<and>\n                                    (\\<forall>lowb highb pb.\n  Dag pb lowb highb repta \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of repta \\<longrightarrow>\n      (lowa(rep p := pa)) pt = lowb pt \\<and>\n      higha pt = highb pt) \\<longrightarrow>\n  Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of rept \\<longrightarrow>\n      low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))))", "assume p_nNull: \"p \\<noteq> Null\""], ["proof (state)\nthis:\n  p \\<noteq> Null\n\ngoal (1 subgoal):\n 1. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no; p \\<noteq> Null;\n        rep p \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> \\<exists>repta.\n                            Dag ((rep \\<propto> id) (low (rep p)))\n                             (rep \\<propto> low) (rep \\<propto> high)\n                             repta \\<and>\n                            (\\<forall>no\\<in>set_of repta.\n                                rep no = no) \\<and>\n                            size\n                             (dag ((rep \\<propto> id) (low (rep p)))\n                               (rep \\<propto> low) (rep \\<propto> high))\n                            < size\n                               (dag ((rep \\<propto> id) p)\n                                 (rep \\<propto> low)\n                                 (rep \\<propto> high)) \\<and>\n                            (\\<forall>lowa higha pa.\n                                Dag pa lowa higha repta \\<and>\n                                (\\<forall>pt.\n                                    pt \\<notin> set_of\n           repta \\<longrightarrow>\n                                    low pt = lowa pt \\<and>\n                                    high pt = higha pt) \\<longrightarrow>\n                                (\\<exists>repta.\n                                    Dag ((rep \\<propto> id) (higha (rep p)))\n                                     (rep \\<propto> lowa(rep p := pa))\n                                     (rep \\<propto> higha) repta \\<and>\n                                    (\\<forall>no\\<in>set_of repta.\n  rep no = no) \\<and>\n                                    size\n                                     (dag\n ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n (rep \\<propto> higha))\n                                    < size\n (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n   (rep \\<propto> high)) \\<and>\n                                    (\\<forall>lowb highb pb.\n  Dag pb lowb highb repta \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of repta \\<longrightarrow>\n      (lowa(rep p := pa)) pt = lowb pt \\<and>\n      higha pt = highb pt) \\<longrightarrow>\n  Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of rept \\<longrightarrow>\n      low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))))", "assume rp_nNull: \" rep p \\<noteq> Null\""], ["proof (state)\nthis:\n  rep p \\<noteq> Null\n\ngoal (1 subgoal):\n 1. \\<And>rept low high rep p.\n       \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high) rept;\n        \\<forall>no\\<in>set_of rept. rep no = no; p \\<noteq> Null;\n        rep p \\<noteq> Null\\<rbrakk>\n       \\<Longrightarrow> \\<exists>repta.\n                            Dag ((rep \\<propto> id) (low (rep p)))\n                             (rep \\<propto> low) (rep \\<propto> high)\n                             repta \\<and>\n                            (\\<forall>no\\<in>set_of repta.\n                                rep no = no) \\<and>\n                            size\n                             (dag ((rep \\<propto> id) (low (rep p)))\n                               (rep \\<propto> low) (rep \\<propto> high))\n                            < size\n                               (dag ((rep \\<propto> id) p)\n                                 (rep \\<propto> low)\n                                 (rep \\<propto> high)) \\<and>\n                            (\\<forall>lowa higha pa.\n                                Dag pa lowa higha repta \\<and>\n                                (\\<forall>pt.\n                                    pt \\<notin> set_of\n           repta \\<longrightarrow>\n                                    low pt = lowa pt \\<and>\n                                    high pt = higha pt) \\<longrightarrow>\n                                (\\<exists>repta.\n                                    Dag ((rep \\<propto> id) (higha (rep p)))\n                                     (rep \\<propto> lowa(rep p := pa))\n                                     (rep \\<propto> higha) repta \\<and>\n                                    (\\<forall>no\\<in>set_of repta.\n  rep no = no) \\<and>\n                                    size\n                                     (dag\n ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n (rep \\<propto> higha))\n                                    < size\n (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n   (rep \\<propto> high)) \\<and>\n                                    (\\<forall>lowb highb pb.\n  Dag pb lowb highb repta \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of repta \\<longrightarrow>\n      (lowa(rep p := pa)) pt = lowb pt \\<and>\n      higha pt = highb pt) \\<longrightarrow>\n  Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of rept \\<longrightarrow>\n      low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))))", "show \"\\<exists>lrept.\n             Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low) (rep \\<propto> high) lrept \\<and>\n             (\\<forall>no\\<in>set_of lrept. rep no = no) \\<and>\n             size (dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low) (rep \\<propto> high))\n             < size (dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high)) \\<and>\n             (\\<forall>lowa higha pa.\n                 Dag pa lowa higha lrept \\<and>\n                 (\\<forall>pt. pt \\<notin> set_of lrept \\<longrightarrow>\n                       low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n                 (\\<exists>rrept.\n                     Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n                      (rep \\<propto> higha) rrept \\<and>\n                     (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n                     size (dag ((rep \\<propto> id) (higha (rep p)))\n                            (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n                     < size (dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high)) \\<and>\n                     (\\<forall>lowb highb pb.\n                         Dag pb lowb highb rrept \\<and>\n                         (\\<forall>pt. pt \\<notin> set_of rrept \\<longrightarrow>\n                               (lowa(rep p := pa)) pt = lowb pt \\<and>\n                               higha pt = highb pt) \\<longrightarrow>\n                         Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                         (\\<forall>pt. pt \\<notin> set_of rept \\<longrightarrow>\n                               low pt = lowb pt \\<and>\n                               high pt = (highb(rep p := pb)) pt))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>lrept.\n       Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n        (rep \\<propto> high) lrept \\<and>\n       (\\<forall>no\\<in>set_of lrept. rep no = no) \\<and>\n       size\n        (dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n          (rep \\<propto> high))\n       < size\n          (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n            (rep \\<propto> high)) \\<and>\n       (\\<forall>lowa higha pa.\n           Dag pa lowa higha lrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of lrept \\<longrightarrow>\n               low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n           (\\<exists>rrept.\n               Dag ((rep \\<propto> id) (higha (rep p)))\n                (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n                rrept \\<and>\n               (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n               size\n                (dag ((rep \\<propto> id) (higha (rep p)))\n                  (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n               < size\n                  (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                    (rep \\<propto> high)) \\<and>\n               (\\<forall>lowb highb pb.\n                   Dag pb lowb highb rrept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rrept \\<longrightarrow>\n                       (lowa(rep p := pa)) pt = lowb pt \\<and>\n                       higha pt = highb pt) \\<longrightarrow>\n                   Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rept \\<longrightarrow>\n                       low pt = lowb pt \\<and>\n                       high pt = (highb(rep p := pb)) pt))))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>lrept.\n       Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n        (rep \\<propto> high) lrept \\<and>\n       (\\<forall>no\\<in>set_of lrept. rep no = no) \\<and>\n       size\n        (dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n          (rep \\<propto> high))\n       < size\n          (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n            (rep \\<propto> high)) \\<and>\n       (\\<forall>lowa higha pa.\n           Dag pa lowa higha lrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of lrept \\<longrightarrow>\n               low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n           (\\<exists>rrept.\n               Dag ((rep \\<propto> id) (higha (rep p)))\n                (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n                rrept \\<and>\n               (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n               size\n                (dag ((rep \\<propto> id) (higha (rep p)))\n                  (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n               < size\n                  (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                    (rep \\<propto> high)) \\<and>\n               (\\<forall>lowb highb pb.\n                   Dag pb lowb highb rrept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rrept \\<longrightarrow>\n                       (lowa(rep p := pa)) pt = lowb pt \\<and>\n                       higha pt = highb pt) \\<longrightarrow>\n                   Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rept \\<longrightarrow>\n                       low pt = lowb pt \\<and>\n                       high pt = (highb(rep p := pb)) pt))))", "from rp_nNull rept_dag p_nNull"], ["proof (chain)\npicking this:\n  rep p \\<noteq> Null\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n  p \\<noteq> Null", "obtain lrept rrept where\n      rept_def: \"rept = Node lrept (rep p) rrept\""], ["proof (prove)\nusing this:\n  rep p \\<noteq> Null\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n  p \\<noteq> Null\n\ngoal (1 subgoal):\n 1. (\\<And>lrept rrept.\n        rept = Node lrept (rep p) rrept \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  rept = Node lrept (rep p) rrept\n\ngoal (1 subgoal):\n 1. \\<exists>lrept.\n       Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n        (rep \\<propto> high) lrept \\<and>\n       (\\<forall>no\\<in>set_of lrept. rep no = no) \\<and>\n       size\n        (dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n          (rep \\<propto> high))\n       < size\n          (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n            (rep \\<propto> high)) \\<and>\n       (\\<forall>lowa higha pa.\n           Dag pa lowa higha lrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of lrept \\<longrightarrow>\n               low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n           (\\<exists>rrept.\n               Dag ((rep \\<propto> id) (higha (rep p)))\n                (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n                rrept \\<and>\n               (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n               size\n                (dag ((rep \\<propto> id) (higha (rep p)))\n                  (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n               < size\n                  (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                    (rep \\<propto> high)) \\<and>\n               (\\<forall>lowb highb pb.\n                   Dag pb lowb highb rrept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rrept \\<longrightarrow>\n                       (lowa(rep p := pa)) pt = lowb pt \\<and>\n                       higha pt = highb pt) \\<longrightarrow>\n                   Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rept \\<longrightarrow>\n                       low pt = lowb pt \\<and>\n                       high pt = (highb(rep p := pb)) pt))))", "with rept_dag p_nNull"], ["proof (chain)\npicking this:\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n  p \\<noteq> Null\n  rept = Node lrept (rep p) rrept", "have lrept_dag: \n      \"Dag ((rep \\<propto> low) (rep p)) (rep \\<propto> low) (rep \\<propto> high) lrept\""], ["proof (prove)\nusing this:\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n  p \\<noteq> Null\n  rept = Node lrept (rep p) rrept\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> low) (rep p)) (rep \\<propto> low)\n     (rep \\<propto> high) lrept", "by simp"], ["proof (state)\nthis:\n  Dag ((rep \\<propto> low) (rep p)) (rep \\<propto> low) (rep \\<propto> high)\n   lrept\n\ngoal (1 subgoal):\n 1. \\<exists>lrept.\n       Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n        (rep \\<propto> high) lrept \\<and>\n       (\\<forall>no\\<in>set_of lrept. rep no = no) \\<and>\n       size\n        (dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n          (rep \\<propto> high))\n       < size\n          (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n            (rep \\<propto> high)) \\<and>\n       (\\<forall>lowa higha pa.\n           Dag pa lowa higha lrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of lrept \\<longrightarrow>\n               low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n           (\\<exists>rrept.\n               Dag ((rep \\<propto> id) (higha (rep p)))\n                (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n                rrept \\<and>\n               (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n               size\n                (dag ((rep \\<propto> id) (higha (rep p)))\n                  (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n               < size\n                  (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                    (rep \\<propto> high)) \\<and>\n               (\\<forall>lowb highb pb.\n                   Dag pb lowb highb rrept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rrept \\<longrightarrow>\n                       (lowa(rep p := pa)) pt = lowb pt \\<and>\n                       higha pt = highb pt) \\<longrightarrow>\n                   Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rept \\<longrightarrow>\n                       low pt = lowb pt \\<and>\n                       high pt = (highb(rep p := pb)) pt))))", "from rept_def rept_dag p_nNull"], ["proof (chain)\npicking this:\n  rept = Node lrept (rep p) rrept\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n  p \\<noteq> Null", "have rrept_dag: \n      \"Dag ((rep \\<propto> high) (rep p)) (rep \\<propto> low) (rep \\<propto> high) rrept\""], ["proof (prove)\nusing this:\n  rept = Node lrept (rep p) rrept\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n  p \\<noteq> Null\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> high) (rep p)) (rep \\<propto> low)\n     (rep \\<propto> high) rrept", "by simp"], ["proof (state)\nthis:\n  Dag ((rep \\<propto> high) (rep p)) (rep \\<propto> low)\n   (rep \\<propto> high) rrept\n\ngoal (1 subgoal):\n 1. \\<exists>lrept.\n       Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n        (rep \\<propto> high) lrept \\<and>\n       (\\<forall>no\\<in>set_of lrept. rep no = no) \\<and>\n       size\n        (dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n          (rep \\<propto> high))\n       < size\n          (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n            (rep \\<propto> high)) \\<and>\n       (\\<forall>lowa higha pa.\n           Dag pa lowa higha lrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of lrept \\<longrightarrow>\n               low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n           (\\<exists>rrept.\n               Dag ((rep \\<propto> id) (higha (rep p)))\n                (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n                rrept \\<and>\n               (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n               size\n                (dag ((rep \\<propto> id) (higha (rep p)))\n                  (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n               < size\n                  (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                    (rep \\<propto> high)) \\<and>\n               (\\<forall>lowb highb pb.\n                   Dag pb lowb highb rrept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rrept \\<longrightarrow>\n                       (lowa(rep p := pa)) pt = lowb pt \\<and>\n                       higha pt = highb pt) \\<longrightarrow>\n                   Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rept \\<longrightarrow>\n                       low pt = lowb pt \\<and>\n                       high pt = (highb(rep p := pb)) pt))))", "from rno_rept rept_def"], ["proof (chain)\npicking this:\n  \\<forall>no\\<in>set_of rept. rep no = no\n  rept = Node lrept (rep p) rrept", "have rno_lrept: \"\\<forall> no \\<in> set_of lrept. rep no = no\""], ["proof (prove)\nusing this:\n  \\<forall>no\\<in>set_of rept. rep no = no\n  rept = Node lrept (rep p) rrept\n\ngoal (1 subgoal):\n 1. \\<forall>no\\<in>set_of lrept. rep no = no", "by auto"], ["proof (state)\nthis:\n  \\<forall>no\\<in>set_of lrept. rep no = no\n\ngoal (1 subgoal):\n 1. \\<exists>lrept.\n       Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n        (rep \\<propto> high) lrept \\<and>\n       (\\<forall>no\\<in>set_of lrept. rep no = no) \\<and>\n       size\n        (dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n          (rep \\<propto> high))\n       < size\n          (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n            (rep \\<propto> high)) \\<and>\n       (\\<forall>lowa higha pa.\n           Dag pa lowa higha lrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of lrept \\<longrightarrow>\n               low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n           (\\<exists>rrept.\n               Dag ((rep \\<propto> id) (higha (rep p)))\n                (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n                rrept \\<and>\n               (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n               size\n                (dag ((rep \\<propto> id) (higha (rep p)))\n                  (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n               < size\n                  (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                    (rep \\<propto> high)) \\<and>\n               (\\<forall>lowb highb pb.\n                   Dag pb lowb highb rrept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rrept \\<longrightarrow>\n                       (lowa(rep p := pa)) pt = lowb pt \\<and>\n                       higha pt = highb pt) \\<longrightarrow>\n                   Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rept \\<longrightarrow>\n                       low pt = lowb pt \\<and>\n                       high pt = (highb(rep p := pb)) pt))))", "from rno_rept rept_def"], ["proof (chain)\npicking this:\n  \\<forall>no\\<in>set_of rept. rep no = no\n  rept = Node lrept (rep p) rrept", "have rno_rrept: \"\\<forall> no \\<in> set_of rrept. rep no = no\""], ["proof (prove)\nusing this:\n  \\<forall>no\\<in>set_of rept. rep no = no\n  rept = Node lrept (rep p) rrept\n\ngoal (1 subgoal):\n 1. \\<forall>no\\<in>set_of rrept. rep no = no", "by auto"], ["proof (state)\nthis:\n  \\<forall>no\\<in>set_of rrept. rep no = no\n\ngoal (1 subgoal):\n 1. \\<exists>lrept.\n       Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n        (rep \\<propto> high) lrept \\<and>\n       (\\<forall>no\\<in>set_of lrept. rep no = no) \\<and>\n       size\n        (dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n          (rep \\<propto> high))\n       < size\n          (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n            (rep \\<propto> high)) \\<and>\n       (\\<forall>lowa higha pa.\n           Dag pa lowa higha lrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of lrept \\<longrightarrow>\n               low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n           (\\<exists>rrept.\n               Dag ((rep \\<propto> id) (higha (rep p)))\n                (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n                rrept \\<and>\n               (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n               size\n                (dag ((rep \\<propto> id) (higha (rep p)))\n                  (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n               < size\n                  (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                    (rep \\<propto> high)) \\<and>\n               (\\<forall>lowb highb pb.\n                   Dag pb lowb highb rrept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rrept \\<longrightarrow>\n                       (lowa(rep p := pa)) pt = lowb pt \\<and>\n                       higha pt = highb pt) \\<longrightarrow>\n                   Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rept \\<longrightarrow>\n                       low pt = lowb pt \\<and>\n                       high pt = (highb(rep p := pb)) pt))))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>lrept.\n       Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n        (rep \\<propto> high) lrept \\<and>\n       (\\<forall>no\\<in>set_of lrept. rep no = no) \\<and>\n       size\n        (dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n          (rep \\<propto> high))\n       < size\n          (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n            (rep \\<propto> high)) \\<and>\n       (\\<forall>lowa higha pa.\n           Dag pa lowa higha lrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of lrept \\<longrightarrow>\n               low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n           (\\<exists>rrept.\n               Dag ((rep \\<propto> id) (higha (rep p)))\n                (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n                rrept \\<and>\n               (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n               size\n                (dag ((rep \\<propto> id) (higha (rep p)))\n                  (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n               < size\n                  (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                    (rep \\<propto> high)) \\<and>\n               (\\<forall>lowb highb pb.\n                   Dag pb lowb highb rrept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rrept \\<longrightarrow>\n                       (lowa(rep p := pa)) pt = lowb pt \\<and>\n                       higha pt = highb pt) \\<longrightarrow>\n                   Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                   (\\<forall>pt.\n                       pt \\<notin> set_of rept \\<longrightarrow>\n                       low pt = lowb pt \\<and>\n                       high pt = (highb(rep p := pb)) pt))))", "apply (rule_tac x=lrept in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n     (rep \\<propto> high) lrept \\<and>\n    (\\<forall>no\\<in>set_of lrept. rep no = no) \\<and>\n    size\n     (dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n       (rep \\<propto> high))\n    < size\n       (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n         (rep \\<propto> high)) \\<and>\n    (\\<forall>lowa higha pa.\n        Dag pa lowa higha lrept \\<and>\n        (\\<forall>pt.\n            pt \\<notin> set_of lrept \\<longrightarrow>\n            low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n        (\\<exists>rrept.\n            Dag ((rep \\<propto> id) (higha (rep p)))\n             (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n             rrept \\<and>\n            (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n            size\n             (dag ((rep \\<propto> id) (higha (rep p)))\n               (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n            < size\n               (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high)) \\<and>\n            (\\<forall>lowb highb pb.\n                Dag pb lowb highb rrept \\<and>\n                (\\<forall>pt.\n                    pt \\<notin> set_of rrept \\<longrightarrow>\n                    (lowa(rep p := pa)) pt = lowb pt \\<and>\n                    higha pt = highb pt) \\<longrightarrow>\n                Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                (\\<forall>pt.\n                    pt \\<notin> set_of rept \\<longrightarrow>\n                    low pt = lowb pt \\<and>\n                    high pt = (highb(rep p := pb)) pt))))", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n     (rep \\<propto> high) lrept\n 2. (\\<forall>no\\<in>set_of lrept. rep no = no) \\<and>\n    size\n     (dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n       (rep \\<propto> high))\n    < size\n       (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n         (rep \\<propto> high)) \\<and>\n    (\\<forall>lowa higha pa.\n        Dag pa lowa higha lrept \\<and>\n        (\\<forall>pt.\n            pt \\<notin> set_of lrept \\<longrightarrow>\n            low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n        (\\<exists>rrept.\n            Dag ((rep \\<propto> id) (higha (rep p)))\n             (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n             rrept \\<and>\n            (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n            size\n             (dag ((rep \\<propto> id) (higha (rep p)))\n               (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n            < size\n               (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high)) \\<and>\n            (\\<forall>lowb highb pb.\n                Dag pb lowb highb rrept \\<and>\n                (\\<forall>pt.\n                    pt \\<notin> set_of rrept \\<longrightarrow>\n                    (lowa(rep p := pa)) pt = lowb pt \\<and>\n                    higha pt = highb pt) \\<longrightarrow>\n                Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                (\\<forall>pt.\n                    pt \\<notin> set_of rept \\<longrightarrow>\n                    low pt = lowb pt \\<and>\n                    high pt = (highb(rep p := pb)) pt))))", "apply  (simp add: id_trans lrept_dag)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>no\\<in>set_of lrept. rep no = no) \\<and>\n    size\n     (dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n       (rep \\<propto> high))\n    < size\n       (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n         (rep \\<propto> high)) \\<and>\n    (\\<forall>lowa higha pa.\n        Dag pa lowa higha lrept \\<and>\n        (\\<forall>pt.\n            pt \\<notin> set_of lrept \\<longrightarrow>\n            low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n        (\\<exists>rrept.\n            Dag ((rep \\<propto> id) (higha (rep p)))\n             (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n             rrept \\<and>\n            (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n            size\n             (dag ((rep \\<propto> id) (higha (rep p)))\n               (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n            < size\n               (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high)) \\<and>\n            (\\<forall>lowb highb pb.\n                Dag pb lowb highb rrept \\<and>\n                (\\<forall>pt.\n                    pt \\<notin> set_of rrept \\<longrightarrow>\n                    (lowa(rep p := pa)) pt = lowb pt \\<and>\n                    higha pt = highb pt) \\<longrightarrow>\n                Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                (\\<forall>pt.\n                    pt \\<notin> set_of rept \\<longrightarrow>\n                    low pt = lowb pt \\<and>\n                    high pt = (highb(rep p := pb)) pt))))", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>no\\<in>set_of lrept. rep no = no\n 2. size\n     (dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n       (rep \\<propto> high))\n    < size\n       (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n         (rep \\<propto> high)) \\<and>\n    (\\<forall>lowa higha pa.\n        Dag pa lowa higha lrept \\<and>\n        (\\<forall>pt.\n            pt \\<notin> set_of lrept \\<longrightarrow>\n            low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n        (\\<exists>rrept.\n            Dag ((rep \\<propto> id) (higha (rep p)))\n             (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n             rrept \\<and>\n            (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n            size\n             (dag ((rep \\<propto> id) (higha (rep p)))\n               (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n            < size\n               (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high)) \\<and>\n            (\\<forall>lowb highb pb.\n                Dag pb lowb highb rrept \\<and>\n                (\\<forall>pt.\n                    pt \\<notin> set_of rrept \\<longrightarrow>\n                    (lowa(rep p := pa)) pt = lowb pt \\<and>\n                    higha pt = highb pt) \\<longrightarrow>\n                Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                (\\<forall>pt.\n                    pt \\<notin> set_of rept \\<longrightarrow>\n                    low pt = lowb pt \\<and>\n                    high pt = (highb(rep p := pb)) pt))))", "apply (rule rno_lrept)"], ["proof (prove)\ngoal (1 subgoal):\n 1. size\n     (dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n       (rep \\<propto> high))\n    < size\n       (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n         (rep \\<propto> high)) \\<and>\n    (\\<forall>lowa higha pa.\n        Dag pa lowa higha lrept \\<and>\n        (\\<forall>pt.\n            pt \\<notin> set_of lrept \\<longrightarrow>\n            low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n        (\\<exists>rrept.\n            Dag ((rep \\<propto> id) (higha (rep p)))\n             (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n             rrept \\<and>\n            (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n            size\n             (dag ((rep \\<propto> id) (higha (rep p)))\n               (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n            < size\n               (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                 (rep \\<propto> high)) \\<and>\n            (\\<forall>lowb highb pb.\n                Dag pb lowb highb rrept \\<and>\n                (\\<forall>pt.\n                    pt \\<notin> set_of rrept \\<longrightarrow>\n                    (lowa(rep p := pa)) pt = lowb pt \\<and>\n                    higha pt = highb pt) \\<longrightarrow>\n                Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                (\\<forall>pt.\n                    pt \\<notin> set_of rept \\<longrightarrow>\n                    low pt = lowb pt \\<and>\n                    high pt = (highb(rep p := pb)) pt))))", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. size\n     (dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n       (rep \\<propto> high))\n    < size\n       (dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high))\n 2. \\<forall>lowa higha pa.\n       Dag pa lowa higha lrept \\<and>\n       (\\<forall>pt.\n           pt \\<notin> set_of lrept \\<longrightarrow>\n           low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n       (\\<exists>rrept.\n           Dag ((rep \\<propto> id) (higha (rep p)))\n            (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n            rrept \\<and>\n           (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n           size\n            (dag ((rep \\<propto> id) (higha (rep p)))\n              (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n           < size\n              (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                (rep \\<propto> high)) \\<and>\n           (\\<forall>lowb highb pb.\n               Dag pb lowb highb rrept \\<and>\n               (\\<forall>pt.\n                   pt \\<notin> set_of rrept \\<longrightarrow>\n                   (lowa(rep p := pa)) pt = lowb pt \\<and>\n                   higha pt = highb pt) \\<longrightarrow>\n               Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n               (\\<forall>pt.\n                   pt \\<notin> set_of rept \\<longrightarrow>\n                   low pt = lowb pt \\<and>\n                   high pt = (highb(rep p := pb)) pt)))", "using rept_dag rept_def"], ["proof (prove)\nusing this:\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n  rept = Node lrept (rep p) rrept\n\ngoal (2 subgoals):\n 1. size\n     (dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n       (rep \\<propto> high))\n    < size\n       (dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high))\n 2. \\<forall>lowa higha pa.\n       Dag pa lowa higha lrept \\<and>\n       (\\<forall>pt.\n           pt \\<notin> set_of lrept \\<longrightarrow>\n           low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n       (\\<exists>rrept.\n           Dag ((rep \\<propto> id) (higha (rep p)))\n            (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n            rrept \\<and>\n           (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n           size\n            (dag ((rep \\<propto> id) (higha (rep p)))\n              (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n           < size\n              (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                (rep \\<propto> high)) \\<and>\n           (\\<forall>lowb highb pb.\n               Dag pb lowb highb rrept \\<and>\n               (\\<forall>pt.\n                   pt \\<notin> set_of rrept \\<longrightarrow>\n                   (lowa(rep p := pa)) pt = lowb pt \\<and>\n                   higha pt = highb pt) \\<longrightarrow>\n               Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n               (\\<forall>pt.\n                   pt \\<notin> set_of rept \\<longrightarrow>\n                   low pt = lowb pt \\<and>\n                   high pt = (highb(rep p := pb)) pt)))", "apply  (simp only: Dag_dag)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n              (rep \\<propto> high) (Node lrept (rep p) rrept);\n     rept = Node lrept (rep p) rrept\\<rbrakk>\n    \\<Longrightarrow> size\n                       (dag ((rep \\<propto> id) (low (rep p)))\n                         (rep \\<propto> low) (rep \\<propto> high))\n                      < size (Node lrept (rep p) rrept)\n 2. \\<forall>lowa higha pa.\n       Dag pa lowa higha lrept \\<and>\n       (\\<forall>pt.\n           pt \\<notin> set_of lrept \\<longrightarrow>\n           low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n       (\\<exists>rrept.\n           Dag ((rep \\<propto> id) (higha (rep p)))\n            (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n            rrept \\<and>\n           (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n           size\n            (dag ((rep \\<propto> id) (higha (rep p)))\n              (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n           < size\n              (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                (rep \\<propto> high)) \\<and>\n           (\\<forall>lowb highb pb.\n               Dag pb lowb highb rrept \\<and>\n               (\\<forall>pt.\n                   pt \\<notin> set_of rrept \\<longrightarrow>\n                   (lowa(rep p := pa)) pt = lowb pt \\<and>\n                   higha pt = highb pt) \\<longrightarrow>\n               Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n               (\\<forall>pt.\n                   pt \\<notin> set_of rept \\<longrightarrow>\n                   low pt = lowb pt \\<and>\n                   high pt = (highb(rep p := pb)) pt)))", "apply  (clarsimp simp add: id_trans Dag_dag)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>lowa higha pa.\n       Dag pa lowa higha lrept \\<and>\n       (\\<forall>pt.\n           pt \\<notin> set_of lrept \\<longrightarrow>\n           low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n       (\\<exists>rrept.\n           Dag ((rep \\<propto> id) (higha (rep p)))\n            (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n            rrept \\<and>\n           (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n           size\n            (dag ((rep \\<propto> id) (higha (rep p)))\n              (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n           < size\n              (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                (rep \\<propto> high)) \\<and>\n           (\\<forall>lowb highb pb.\n               Dag pb lowb highb rrept \\<and>\n               (\\<forall>pt.\n                   pt \\<notin> set_of rrept \\<longrightarrow>\n                   (lowa(rep p := pa)) pt = lowb pt \\<and>\n                   higha pt = highb pt) \\<longrightarrow>\n               Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n               (\\<forall>pt.\n                   pt \\<notin> set_of rept \\<longrightarrow>\n                   low pt = lowb pt \\<and>\n                   high pt = (highb(rep p := pb)) pt)))", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>lowa higha pa.\n       \\<lbrakk>Dag pa lowa higha lrept;\n        \\<forall>pt.\n           pt \\<notin> set_of lrept \\<longrightarrow>\n           low pt = lowa pt \\<and> high pt = higha pt\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rrept.\n                            Dag ((rep \\<propto> id) (higha (rep p)))\n                             (rep \\<propto> lowa(rep p := pa))\n                             (rep \\<propto> higha) rrept \\<and>\n                            (\\<forall>no\\<in>set_of rrept.\n                                rep no = no) \\<and>\n                            size\n                             (dag ((rep \\<propto> id) (higha (rep p)))\n                               (rep \\<propto> lowa(rep p := pa))\n                               (rep \\<propto> higha))\n                            < size\n                               (dag ((rep \\<propto> id) p)\n                                 (rep \\<propto> low)\n                                 (rep \\<propto> high)) \\<and>\n                            (\\<forall>lowb highb pb.\n                                Dag pb lowb highb rrept \\<and>\n                                (\\<forall>pt.\n                                    pt \\<notin> set_of\n           rrept \\<longrightarrow>\n                                    (lowa(rep p := pa)) pt = lowb pt \\<and>\n                                    higha pt = highb pt) \\<longrightarrow>\n                                Dag (rep p) lowb (highb(rep p := pb))\n                                 rept \\<and>\n                                (\\<forall>pt.\n                                    pt \\<notin> set_of\n           rept \\<longrightarrow>\n                                    low pt = lowb pt \\<and>\n                                    high pt = (highb(rep p := pb)) pt))", "subgoal premises prems for lowa higha pa"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>rrept.\n       Dag ((rep \\<propto> id) (higha (rep p)))\n        (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept \\<and>\n       (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n       size\n        (dag ((rep \\<propto> id) (higha (rep p)))\n          (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n       < size\n          (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n            (rep \\<propto> high)) \\<and>\n       (\\<forall>lowb highb pb.\n           Dag pb lowb highb rrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rrept \\<longrightarrow>\n               (lowa(rep p := pa)) pt = lowb pt \\<and>\n               higha pt = highb pt) \\<longrightarrow>\n           Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>rrept.\n       Dag ((rep \\<propto> id) (higha (rep p)))\n        (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept \\<and>\n       (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n       size\n        (dag ((rep \\<propto> id) (higha (rep p)))\n          (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n       < size\n          (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n            (rep \\<propto> high)) \\<and>\n       (\\<forall>lowb highb pb.\n           Dag pb lowb highb rrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rrept \\<longrightarrow>\n               (lowa(rep p := pa)) pt = lowb pt \\<and>\n               higha pt = highb pt) \\<longrightarrow>\n           Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))", "have lrepta: \"Dag pa lowa higha lrept\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dag pa lowa higha lrept", "by fact"], ["proof (state)\nthis:\n  Dag pa lowa higha lrept\n\ngoal (1 subgoal):\n 1. \\<exists>rrept.\n       Dag ((rep \\<propto> id) (higha (rep p)))\n        (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept \\<and>\n       (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n       size\n        (dag ((rep \\<propto> id) (higha (rep p)))\n          (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n       < size\n          (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n            (rep \\<propto> high)) \\<and>\n       (\\<forall>lowb highb pb.\n           Dag pb lowb highb rrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rrept \\<longrightarrow>\n               (lowa(rep p := pa)) pt = lowb pt \\<and>\n               higha pt = highb pt) \\<longrightarrow>\n           Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))", "have low_lowa_nc: \n          \"\\<forall>pt. pt \\<notin> set_of lrept \\<longrightarrow> low pt = lowa pt \\<and> high pt = higha pt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>pt.\n       pt \\<notin> set_of lrept \\<longrightarrow>\n       low pt = lowa pt \\<and> high pt = higha pt", "by fact"], ["proof (state)\nthis:\n  \\<forall>pt.\n     pt \\<notin> set_of lrept \\<longrightarrow>\n     low pt = lowa pt \\<and> high pt = higha pt\n\ngoal (1 subgoal):\n 1. \\<exists>rrept.\n       Dag ((rep \\<propto> id) (higha (rep p)))\n        (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept \\<and>\n       (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n       size\n        (dag ((rep \\<propto> id) (higha (rep p)))\n          (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n       < size\n          (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n            (rep \\<propto> high)) \\<and>\n       (\\<forall>lowb highb pb.\n           Dag pb lowb highb rrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rrept \\<longrightarrow>\n               (lowa(rep p := pa)) pt = lowb pt \\<and>\n               higha pt = highb pt) \\<longrightarrow>\n           Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))", "from lrept_dag lrepta"], ["proof (chain)\npicking this:\n  Dag ((rep \\<propto> low) (rep p)) (rep \\<propto> low) (rep \\<propto> high)\n   lrept\n  Dag pa lowa higha lrept", "obtain \n          pa_def: \"pa = (rep \\<propto> low) (rep p)\" and\n          lowa_higha_def: \"\\<forall>no \\<in> set_of lrept. \n          lowa no = (rep \\<propto> low) no \\<and> higha no = (rep \\<propto> high) no\""], ["proof (prove)\nusing this:\n  Dag ((rep \\<propto> low) (rep p)) (rep \\<propto> low) (rep \\<propto> high)\n   lrept\n  Dag pa lowa higha lrept\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>pa = (rep \\<propto> low) (rep p);\n      \\<forall>no\\<in>set_of lrept.\n         lowa no = (rep \\<propto> low) no \\<and>\n         higha no = (rep \\<propto> high) no\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>pa = (rep \\<propto> low) (rep p);\n              \\<forall>no\\<in>set_of lrept.\n                 lowa no = (rep \\<propto> low) no \\<and>\n                 higha no = (rep \\<propto> high) no\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     Dag ((rep \\<propto> low) (rep p)) (rep \\<propto> low)\n      (rep \\<propto> high) lrept;\n     Dag pa lowa higha lrept\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply (drule Dags_eq_hp_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>pa = (rep \\<propto> low) (rep p);\n              \\<forall>no\\<in>set_of lrept.\n                 lowa no = (rep \\<propto> low) no \\<and>\n                 higha no = (rep \\<propto> high) no\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     Dag pa lowa higha lrept\\<rbrakk>\n    \\<Longrightarrow> Dag ?p'3 ?l'3 ?r'3 lrept\n 2. \\<lbrakk>\\<lbrakk>pa = (rep \\<propto> low) (rep p);\n              \\<forall>no\\<in>set_of lrept.\n                 lowa no = (rep \\<propto> low) no \\<and>\n                 higha no = (rep \\<propto> high) no\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     Dag pa lowa higha lrept;\n     ?p'3 = (rep \\<propto> low) (rep p) \\<and>\n     (\\<forall>no\\<in>set_of lrept.\n         ?l'3 no = (rep \\<propto> low) no \\<and>\n         ?r'3 no = (rep \\<propto> high) no)\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  pa = (rep \\<propto> low) (rep p)\n  \\<forall>no\\<in>set_of lrept.\n     lowa no = (rep \\<propto> low) no \\<and>\n     higha no = (rep \\<propto> high) no\n\ngoal (1 subgoal):\n 1. \\<exists>rrept.\n       Dag ((rep \\<propto> id) (higha (rep p)))\n        (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept \\<and>\n       (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n       size\n        (dag ((rep \\<propto> id) (higha (rep p)))\n          (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n       < size\n          (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n            (rep \\<propto> high)) \\<and>\n       (\\<forall>lowb highb pb.\n           Dag pb lowb highb rrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rrept \\<longrightarrow>\n               (lowa(rep p := pa)) pt = lowb pt \\<and>\n               higha pt = highb pt) \\<longrightarrow>\n           Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))", "from rept_dag"], ["proof (chain)\npicking this:\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept", "have rept_DAG: \"DAG rept\""], ["proof (prove)\nusing this:\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n\ngoal (1 subgoal):\n 1. DAG rept", "by (rule Dag_is_DAG)"], ["proof (state)\nthis:\n  DAG rept\n\ngoal (1 subgoal):\n 1. \\<exists>rrept.\n       Dag ((rep \\<propto> id) (higha (rep p)))\n        (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept \\<and>\n       (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n       size\n        (dag ((rep \\<propto> id) (higha (rep p)))\n          (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n       < size\n          (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n            (rep \\<propto> high)) \\<and>\n       (\\<forall>lowb highb pb.\n           Dag pb lowb highb rrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rrept \\<longrightarrow>\n               (lowa(rep p := pa)) pt = lowb pt \\<and>\n               higha pt = highb pt) \\<longrightarrow>\n           Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))", "with rept_def"], ["proof (chain)\npicking this:\n  rept = Node lrept (rep p) rrept\n  DAG rept", "have rp_notin_lrept: \"rep p \\<notin> set_of lrept\""], ["proof (prove)\nusing this:\n  rept = Node lrept (rep p) rrept\n  DAG rept\n\ngoal (1 subgoal):\n 1. rep p \\<notin> set_of lrept", "by simp"], ["proof (state)\nthis:\n  rep p \\<notin> set_of lrept\n\ngoal (1 subgoal):\n 1. \\<exists>rrept.\n       Dag ((rep \\<propto> id) (higha (rep p)))\n        (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept \\<and>\n       (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n       size\n        (dag ((rep \\<propto> id) (higha (rep p)))\n          (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n       < size\n          (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n            (rep \\<propto> high)) \\<and>\n       (\\<forall>lowb highb pb.\n           Dag pb lowb highb rrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rrept \\<longrightarrow>\n               (lowa(rep p := pa)) pt = lowb pt \\<and>\n               higha pt = highb pt) \\<longrightarrow>\n           Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))", "from rept_DAG rept_def"], ["proof (chain)\npicking this:\n  DAG rept\n  rept = Node lrept (rep p) rrept", "have rp_notin_rrept: \"rep p \\<notin> set_of rrept\""], ["proof (prove)\nusing this:\n  DAG rept\n  rept = Node lrept (rep p) rrept\n\ngoal (1 subgoal):\n 1. rep p \\<notin> set_of rrept", "by simp"], ["proof (state)\nthis:\n  rep p \\<notin> set_of rrept\n\ngoal (1 subgoal):\n 1. \\<exists>rrept.\n       Dag ((rep \\<propto> id) (higha (rep p)))\n        (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept \\<and>\n       (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n       size\n        (dag ((rep \\<propto> id) (higha (rep p)))\n          (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n       < size\n          (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n            (rep \\<propto> high)) \\<and>\n       (\\<forall>lowb highb pb.\n           Dag pb lowb highb rrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rrept \\<longrightarrow>\n               (lowa(rep p := pa)) pt = lowb pt \\<and>\n               higha pt = highb pt) \\<longrightarrow>\n           Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))", "have rrepta: \"Dag ((rep \\<propto> id) (higha (rep p))) \n                         (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "from low_lowa_nc rp_notin_lrept"], ["proof (chain)\npicking this:\n  \\<forall>pt.\n     pt \\<notin> set_of lrept \\<longrightarrow>\n     low pt = lowa pt \\<and> high pt = higha pt\n  rep p \\<notin> set_of lrept", "have \"(rep \\<propto> high) (rep p) = (rep \\<propto> higha) (rep p)\""], ["proof (prove)\nusing this:\n  \\<forall>pt.\n     pt \\<notin> set_of lrept \\<longrightarrow>\n     low pt = lowa pt \\<and> high pt = higha pt\n  rep p \\<notin> set_of lrept\n\ngoal (1 subgoal):\n 1. (rep \\<propto> high) (rep p) = (rep \\<propto> higha) (rep p)", "by (auto simp add: null_comp_def)"], ["proof (state)\nthis:\n  (rep \\<propto> high) (rep p) = (rep \\<propto> higha) (rep p)\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "with rrept_dag"], ["proof (chain)\npicking this:\n  Dag ((rep \\<propto> high) (rep p)) (rep \\<propto> low)\n   (rep \\<propto> high) rrept\n  (rep \\<propto> high) (rep p) = (rep \\<propto> higha) (rep p)", "have higha_mixed_rrept: \n            \"Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> low) (rep \\<propto> high) rrept\""], ["proof (prove)\nusing this:\n  Dag ((rep \\<propto> high) (rep p)) (rep \\<propto> low)\n   (rep \\<propto> high) rrept\n  (rep \\<propto> high) (rep p) = (rep \\<propto> higha) (rep p)\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> low)\n     (rep \\<propto> high) rrept", "by (simp add: id_trans)"], ["proof (state)\nthis:\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> low)\n   (rep \\<propto> high) rrept\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "thm low_high_exchange_dag"], ["proof (state)\nthis:\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> low)\n   (rep \\<propto> high) rrept\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "with low_lowa_nc lowa_higha_def rno_rrept"], ["proof (chain)\npicking this:\n  \\<forall>pt.\n     pt \\<notin> set_of lrept \\<longrightarrow>\n     low pt = lowa pt \\<and> high pt = higha pt\n  \\<forall>no\\<in>set_of lrept.\n     lowa no = (rep \\<propto> low) no \\<and>\n     higha no = (rep \\<propto> high) no\n  \\<forall>no\\<in>set_of rrept. rep no = no\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> low)\n   (rep \\<propto> high) rrept", "have lowa_higha_rrept:\n              \"Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa) (rep \\<propto> higha) rrept\""], ["proof (prove)\nusing this:\n  \\<forall>pt.\n     pt \\<notin> set_of lrept \\<longrightarrow>\n     low pt = lowa pt \\<and> high pt = higha pt\n  \\<forall>no\\<in>set_of lrept.\n     lowa no = (rep \\<propto> low) no \\<and>\n     higha no = (rep \\<propto> high) no\n  \\<forall>no\\<in>set_of rrept. rep no = no\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> low)\n   (rep \\<propto> high) rrept\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n     (rep \\<propto> higha) rrept", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>pt.\n                pt \\<notin> set_of lrept \\<longrightarrow>\n                low pt = lowa pt \\<and> high pt = higha pt;\n     \\<forall>no\\<in>set_of lrept.\n        lowa no = (rep \\<propto> low) no \\<and>\n        higha no = (rep \\<propto> high) no;\n     \\<forall>no\\<in>set_of rrept. rep no = no;\n     Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> low)\n      (rep \\<propto> high) rrept\\<rbrakk>\n    \\<Longrightarrow> Dag ((rep \\<propto> id) (higha (rep p)))\n                       (rep \\<propto> lowa) (rep \\<propto> higha) rrept", "apply (rule low_high_exchange_dag)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<forall>pt.\n                pt \\<notin> set_of lrept \\<longrightarrow>\n                low pt = lowa pt \\<and> high pt = higha pt;\n     \\<forall>no\\<in>set_of lrept.\n        lowa no = (rep \\<propto> low) no \\<and>\n        higha no = (rep \\<propto> high) no;\n     \\<forall>no\\<in>set_of rrept. rep no = no;\n     Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> low)\n      (rep \\<propto> high) rrept\\<rbrakk>\n    \\<Longrightarrow> \\<forall>pt.\n                         pt \\<notin> set_of ?lt4 \\<longrightarrow>\n                         ?low4 pt = lowa pt \\<and> ?high4 pt = higha pt\n 2. \\<lbrakk>\\<forall>pt.\n                pt \\<notin> set_of lrept \\<longrightarrow>\n                low pt = lowa pt \\<and> high pt = higha pt;\n     \\<forall>no\\<in>set_of lrept.\n        lowa no = (rep \\<propto> low) no \\<and>\n        higha no = (rep \\<propto> high) no;\n     \\<forall>no\\<in>set_of rrept. rep no = no;\n     Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> low)\n      (rep \\<propto> high) rrept\\<rbrakk>\n    \\<Longrightarrow> \\<forall>pt\\<in>set_of ?lt4.\n                         lowa pt = (rep \\<propto> ?low4) pt \\<and>\n                         higha pt = (rep \\<propto> ?high4) pt\n 3. \\<lbrakk>\\<forall>pt.\n                pt \\<notin> set_of lrept \\<longrightarrow>\n                low pt = lowa pt \\<and> high pt = higha pt;\n     \\<forall>no\\<in>set_of lrept.\n        lowa no = (rep \\<propto> low) no \\<and>\n        higha no = (rep \\<propto> high) no;\n     \\<forall>no\\<in>set_of rrept. rep no = no;\n     Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> low)\n      (rep \\<propto> high) rrept\\<rbrakk>\n    \\<Longrightarrow> \\<forall>pt\\<in>set_of rrept. rep pt = pt\n 4. \\<lbrakk>\\<forall>pt.\n                pt \\<notin> set_of lrept \\<longrightarrow>\n                low pt = lowa pt \\<and> high pt = higha pt;\n     \\<forall>no\\<in>set_of lrept.\n        lowa no = (rep \\<propto> low) no \\<and>\n        higha no = (rep \\<propto> high) no;\n     \\<forall>no\\<in>set_of rrept. rep no = no;\n     Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> low)\n      (rep \\<propto> high) rrept\\<rbrakk>\n    \\<Longrightarrow> Dag ((rep \\<propto> id) (higha (rep p)))\n                       (rep \\<propto> ?low4) (rep \\<propto> ?high4) rrept", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n   (rep \\<propto> higha) rrept\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "have \"Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa) (rep \\<propto> higha) rrept = \n                Dag ((rep \\<propto> id) (higha (rep p))) \n                        (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n     (rep \\<propto> higha) rrept =\n    Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n     (rep \\<propto> higha) rrept =\n    Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "have \"\\<forall>no \\<in> set_of rrept. \n                      (rep \\<propto> lowa) no = (rep \\<propto> lowa(rep p := pa)) no \\<and>\n                      (rep \\<propto> higha) no = (rep \\<propto> higha) no\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>no\\<in>set_of rrept.\n       (rep \\<propto> lowa) no = (rep \\<propto> lowa(rep p := pa)) no \\<and>\n       (rep \\<propto> higha) no = (rep \\<propto> higha) no", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>no.\n       no \\<in> set_of rrept \\<Longrightarrow>\n       (rep \\<propto> lowa) no = (rep \\<propto> lowa(rep p := pa)) no \\<and>\n       (rep \\<propto> higha) no = (rep \\<propto> higha) no", "fix no"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>no.\n       no \\<in> set_of rrept \\<Longrightarrow>\n       (rep \\<propto> lowa) no = (rep \\<propto> lowa(rep p := pa)) no \\<and>\n       (rep \\<propto> higha) no = (rep \\<propto> higha) no", "assume no_in_rrept: \"no \\<in> set_of rrept\""], ["proof (state)\nthis:\n  no \\<in> set_of rrept\n\ngoal (1 subgoal):\n 1. \\<And>no.\n       no \\<in> set_of rrept \\<Longrightarrow>\n       (rep \\<propto> lowa) no = (rep \\<propto> lowa(rep p := pa)) no \\<and>\n       (rep \\<propto> higha) no = (rep \\<propto> higha) no", "with rp_notin_rrept"], ["proof (chain)\npicking this:\n  rep p \\<notin> set_of rrept\n  no \\<in> set_of rrept", "have \"no \\<noteq> rep p\""], ["proof (prove)\nusing this:\n  rep p \\<notin> set_of rrept\n  no \\<in> set_of rrept\n\ngoal (1 subgoal):\n 1. no \\<noteq> rep p", "by blast"], ["proof (state)\nthis:\n  no \\<noteq> rep p\n\ngoal (1 subgoal):\n 1. \\<And>no.\n       no \\<in> set_of rrept \\<Longrightarrow>\n       (rep \\<propto> lowa) no = (rep \\<propto> lowa(rep p := pa)) no \\<and>\n       (rep \\<propto> higha) no = (rep \\<propto> higha) no", "thus \"(rep \\<propto> lowa) no = (rep \\<propto> lowa(rep p := pa)) no \\<and> \n                (rep \\<propto> higha) no = (rep \\<propto> higha) no\""], ["proof (prove)\nusing this:\n  no \\<noteq> rep p\n\ngoal (1 subgoal):\n 1. (rep \\<propto> lowa) no = (rep \\<propto> lowa(rep p := pa)) no \\<and>\n    (rep \\<propto> higha) no = (rep \\<propto> higha) no", "by (simp add: null_comp_def)"], ["proof (state)\nthis:\n  (rep \\<propto> lowa) no = (rep \\<propto> lowa(rep p := pa)) no \\<and>\n  (rep \\<propto> higha) no = (rep \\<propto> higha) no\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>no\\<in>set_of rrept.\n     (rep \\<propto> lowa) no = (rep \\<propto> lowa(rep p := pa)) no \\<and>\n     (rep \\<propto> higha) no = (rep \\<propto> higha) no\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n     (rep \\<propto> higha) rrept =\n    Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>no\\<in>set_of rrept.\n     (rep \\<propto> lowa) no = (rep \\<propto> lowa(rep p := pa)) no \\<and>\n     (rep \\<propto> higha) no = (rep \\<propto> higha) no\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n     (rep \\<propto> higha) rrept =\n    Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "by (rule heaps_eq_Dag_eq)"], ["proof (state)\nthis:\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n   (rep \\<propto> higha) rrept =\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n   (rep \\<propto> higha) rrept\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n   (rep \\<propto> higha) rrept =\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n   (rep \\<propto> higha) rrept\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "with lowa_higha_rrept"], ["proof (chain)\npicking this:\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n   (rep \\<propto> higha) rrept\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n   (rep \\<propto> higha) rrept =\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n   (rep \\<propto> higha) rrept", "show ?thesis"], ["proof (prove)\nusing this:\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n   (rep \\<propto> higha) rrept\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa)\n   (rep \\<propto> higha) rrept =\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n   (rep \\<propto> higha) rrept\n\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept", "by simp"], ["proof (state)\nthis:\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n   (rep \\<propto> higha) rrept\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n   (rep \\<propto> higha) rrept\n\ngoal (1 subgoal):\n 1. \\<exists>rrept.\n       Dag ((rep \\<propto> id) (higha (rep p)))\n        (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept \\<and>\n       (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n       size\n        (dag ((rep \\<propto> id) (higha (rep p)))\n          (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n       < size\n          (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n            (rep \\<propto> high)) \\<and>\n       (\\<forall>lowb highb pb.\n           Dag pb lowb highb rrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rrept \\<longrightarrow>\n               (lowa(rep p := pa)) pt = lowb pt \\<and>\n               higha pt = highb pt) \\<longrightarrow>\n           Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>rrept.\n       Dag ((rep \\<propto> id) (higha (rep p)))\n        (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept \\<and>\n       (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n       size\n        (dag ((rep \\<propto> id) (higha (rep p)))\n          (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n       < size\n          (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n            (rep \\<propto> high)) \\<and>\n       (\\<forall>lowb highb pb.\n           Dag pb lowb highb rrept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rrept \\<longrightarrow>\n               (lowa(rep p := pa)) pt = lowb pt \\<and>\n               higha pt = highb pt) \\<longrightarrow>\n           Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n           (\\<forall>pt.\n               pt \\<notin> set_of rept \\<longrightarrow>\n               low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))", "apply (rule_tac x=rrept in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept \\<and>\n    (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n    size\n     (dag ((rep \\<propto> id) (higha (rep p)))\n       (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n    < size\n       (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n         (rep \\<propto> high)) \\<and>\n    (\\<forall>lowb highb pb.\n        Dag pb lowb highb rrept \\<and>\n        (\\<forall>pt.\n            pt \\<notin> set_of rrept \\<longrightarrow>\n            (lowa(rep p := pa)) pt = lowb pt \\<and>\n            higha pt = highb pt) \\<longrightarrow>\n        Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n        (\\<forall>pt.\n            pt \\<notin> set_of rept \\<longrightarrow>\n            low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Dag ((rep \\<propto> id) (higha (rep p)))\n     (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept\n 2. (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n    size\n     (dag ((rep \\<propto> id) (higha (rep p)))\n       (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n    < size\n       (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n         (rep \\<propto> high)) \\<and>\n    (\\<forall>lowb highb pb.\n        Dag pb lowb highb rrept \\<and>\n        (\\<forall>pt.\n            pt \\<notin> set_of rrept \\<longrightarrow>\n            (lowa(rep p := pa)) pt = lowb pt \\<and>\n            higha pt = highb pt) \\<longrightarrow>\n        Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n        (\\<forall>pt.\n            pt \\<notin> set_of rept \\<longrightarrow>\n            low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))", "apply  (rule rrepta)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n    size\n     (dag ((rep \\<propto> id) (higha (rep p)))\n       (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n    < size\n       (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n         (rep \\<propto> high)) \\<and>\n    (\\<forall>lowb highb pb.\n        Dag pb lowb highb rrept \\<and>\n        (\\<forall>pt.\n            pt \\<notin> set_of rrept \\<longrightarrow>\n            (lowa(rep p := pa)) pt = lowb pt \\<and>\n            higha pt = highb pt) \\<longrightarrow>\n        Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n        (\\<forall>pt.\n            pt \\<notin> set_of rept \\<longrightarrow>\n            low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>no\\<in>set_of rrept. rep no = no\n 2. size\n     (dag ((rep \\<propto> id) (higha (rep p)))\n       (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n    < size\n       (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n         (rep \\<propto> high)) \\<and>\n    (\\<forall>lowb highb pb.\n        Dag pb lowb highb rrept \\<and>\n        (\\<forall>pt.\n            pt \\<notin> set_of rrept \\<longrightarrow>\n            (lowa(rep p := pa)) pt = lowb pt \\<and>\n            higha pt = highb pt) \\<longrightarrow>\n        Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n        (\\<forall>pt.\n            pt \\<notin> set_of rept \\<longrightarrow>\n            low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))", "apply  (rule rno_rrept)"], ["proof (prove)\ngoal (1 subgoal):\n 1. size\n     (dag ((rep \\<propto> id) (higha (rep p)))\n       (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n    < size\n       (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n         (rep \\<propto> high)) \\<and>\n    (\\<forall>lowb highb pb.\n        Dag pb lowb highb rrept \\<and>\n        (\\<forall>pt.\n            pt \\<notin> set_of rrept \\<longrightarrow>\n            (lowa(rep p := pa)) pt = lowb pt \\<and>\n            higha pt = highb pt) \\<longrightarrow>\n        Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n        (\\<forall>pt.\n            pt \\<notin> set_of rept \\<longrightarrow>\n            low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. size\n     (dag ((rep \\<propto> id) (higha (rep p)))\n       (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n    < size\n       (dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high))\n 2. \\<forall>lowb highb pb.\n       Dag pb lowb highb rrept \\<and>\n       (\\<forall>pt.\n           pt \\<notin> set_of rrept \\<longrightarrow>\n           (lowa(rep p := pa)) pt = lowb pt \\<and>\n           higha pt = highb pt) \\<longrightarrow>\n       Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n       (\\<forall>pt.\n           pt \\<notin> set_of rept \\<longrightarrow>\n           low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "using rept_dag rept_def rrepta"], ["proof (prove)\nusing this:\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n  rept = Node lrept (rep p) rrept\n  Dag ((rep \\<propto> id) (higha (rep p))) (rep \\<propto> lowa(rep p := pa))\n   (rep \\<propto> higha) rrept\n\ngoal (2 subgoals):\n 1. size\n     (dag ((rep \\<propto> id) (higha (rep p)))\n       (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n    < size\n       (dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high))\n 2. \\<forall>lowb highb pb.\n       Dag pb lowb highb rrept \\<and>\n       (\\<forall>pt.\n           pt \\<notin> set_of rrept \\<longrightarrow>\n           (lowa(rep p := pa)) pt = lowb pt \\<and>\n           higha pt = highb pt) \\<longrightarrow>\n       Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n       (\\<forall>pt.\n           pt \\<notin> set_of rept \\<longrightarrow>\n           low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "apply  (simp only: Dag_dag)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n              (rep \\<propto> high) (Node lrept (rep p) rrept);\n     rept = Node lrept (rep p) rrept;\n     Dag ((rep \\<propto> id) (higha (rep p)))\n      (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept\\<rbrakk>\n    \\<Longrightarrow> size rrept < size (Node lrept (rep p) rrept)\n 2. \\<forall>lowb highb pb.\n       Dag pb lowb highb rrept \\<and>\n       (\\<forall>pt.\n           pt \\<notin> set_of rrept \\<longrightarrow>\n           (lowa(rep p := pa)) pt = lowb pt \\<and>\n           higha pt = highb pt) \\<longrightarrow>\n       Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n       (\\<forall>pt.\n           pt \\<notin> set_of rept \\<longrightarrow>\n           low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "apply  (clarsimp simp add: id_trans Dag_dag)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>lowb highb pb.\n       Dag pb lowb highb rrept \\<and>\n       (\\<forall>pt.\n           pt \\<notin> set_of rrept \\<longrightarrow>\n           (lowa(rep p := pa)) pt = lowb pt \\<and>\n           higha pt = highb pt) \\<longrightarrow>\n       Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n       (\\<forall>pt.\n           pt \\<notin> set_of rept \\<longrightarrow>\n           low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>lowb highb pb.\n       \\<lbrakk>Dag pb lowb highb rrept;\n        \\<forall>pt.\n           pt \\<notin> set_of rrept \\<longrightarrow>\n           (lowa(rep p := pa)) pt = lowb pt \\<and>\n           higha pt = highb pt\\<rbrakk>\n       \\<Longrightarrow> Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                         (\\<forall>pt.\n                             pt \\<notin> set_of rept \\<longrightarrow>\n                             low pt = lowb pt \\<and>\n                             high pt = (highb(rep p := pb)) pt)", "subgoal premises prems for lowb highb pb"], ["proof (prove)\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "have rreptb: \"Dag pb lowb highb rrept\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dag pb lowb highb rrept", "by fact"], ["proof (state)\nthis:\n  Dag pb lowb highb rrept\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "have ab_nc: \"\\<forall>pt. pt \\<notin> set_of rrept \\<longrightarrow> \n                            (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>pt.\n       pt \\<notin> set_of rrept \\<longrightarrow>\n       (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt", "by fact"], ["proof (state)\nthis:\n  \\<forall>pt.\n     pt \\<notin> set_of rrept \\<longrightarrow>\n     (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "from rreptb rrept_dag"], ["proof (chain)\npicking this:\n  Dag pb lowb highb rrept\n  Dag ((rep \\<propto> high) (rep p)) (rep \\<propto> low)\n   (rep \\<propto> high) rrept", "obtain\n              pb_def: \"pb = ((rep \\<propto> high) (rep p))\" and\n              lowb_highb_def: \"\\<forall>no \\<in> set_of rrept. \n                                  lowb no = (rep \\<propto> low) no \\<and> highb no = (rep \\<propto> high) no\""], ["proof (prove)\nusing this:\n  Dag pb lowb highb rrept\n  Dag ((rep \\<propto> high) (rep p)) (rep \\<propto> low)\n   (rep \\<propto> high) rrept\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>pb = (rep \\<propto> high) (rep p);\n      \\<forall>no\\<in>set_of rrept.\n         lowb no = (rep \\<propto> low) no \\<and>\n         highb no = (rep \\<propto> high) no\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>pb = (rep \\<propto> high) (rep p);\n              \\<forall>no\\<in>set_of rrept.\n                 lowb no = (rep \\<propto> low) no \\<and>\n                 highb no = (rep \\<propto> high) no\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     Dag pb lowb highb rrept;\n     Dag ((rep \\<propto> high) (rep p)) (rep \\<propto> low)\n      (rep \\<propto> high) rrept\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply (drule Dags_eq_hp_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>pb = (rep \\<propto> high) (rep p);\n              \\<forall>no\\<in>set_of rrept.\n                 lowb no = (rep \\<propto> low) no \\<and>\n                 highb no = (rep \\<propto> high) no\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     Dag ((rep \\<propto> high) (rep p)) (rep \\<propto> low)\n      (rep \\<propto> high) rrept\\<rbrakk>\n    \\<Longrightarrow> Dag ?p'3 ?l'3 ?r'3 rrept\n 2. \\<lbrakk>\\<lbrakk>pb = (rep \\<propto> high) (rep p);\n              \\<forall>no\\<in>set_of rrept.\n                 lowb no = (rep \\<propto> low) no \\<and>\n                 highb no = (rep \\<propto> high) no\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     Dag ((rep \\<propto> high) (rep p)) (rep \\<propto> low)\n      (rep \\<propto> high) rrept;\n     ?p'3 = pb \\<and>\n     (\\<forall>no\\<in>set_of rrept.\n         ?l'3 no = lowb no \\<and> ?r'3 no = highb no)\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  pb = (rep \\<propto> high) (rep p)\n  \\<forall>no\\<in>set_of rrept.\n     lowb no = (rep \\<propto> low) no \\<and>\n     highb no = (rep \\<propto> high) no\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "have rept_end_dag: \" Dag (rep p) lowb (highb(rep p := pb)) rept\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept", "have \"\\<forall>no \\<in> set_of rept. \n                    lowb no = (rep \\<propto> low) no \\<and> (highb(rep p := pb)) no = (rep \\<propto> high) no\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>no\\<in>set_of rept.\n       lowb no = (rep \\<propto> low) no \\<and>\n       (highb(rep p := pb)) no = (rep \\<propto> high) no", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>no.\n       no \\<in> set_of rept \\<Longrightarrow>\n       lowb no = (rep \\<propto> low) no \\<and>\n       (highb(rep p := pb)) no = (rep \\<propto> high) no", "fix no"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>no.\n       no \\<in> set_of rept \\<Longrightarrow>\n       lowb no = (rep \\<propto> low) no \\<and>\n       (highb(rep p := pb)) no = (rep \\<propto> high) no", "assume no_in_rept: \" no \\<in> set_of rept\""], ["proof (state)\nthis:\n  no \\<in> set_of rept\n\ngoal (1 subgoal):\n 1. \\<And>no.\n       no \\<in> set_of rept \\<Longrightarrow>\n       lowb no = (rep \\<propto> low) no \\<and>\n       (highb(rep p := pb)) no = (rep \\<propto> high) no", "show \"lowb no = (rep \\<propto> low) no \\<and> \n                      (highb(rep p := pb)) no = (rep \\<propto> high) no\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "proof (cases \"no \\<in> set_of rrept\")"], ["proof (state)\ngoal (2 subgoals):\n 1. no \\<in> set_of rrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no\n 2. no \\<notin> set_of rrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "case True"], ["proof (state)\nthis:\n  no \\<in> set_of rrept\n\ngoal (2 subgoals):\n 1. no \\<in> set_of rrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no\n 2. no \\<notin> set_of rrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "with lowb_highb_def pb_def"], ["proof (chain)\npicking this:\n  \\<forall>no\\<in>set_of rrept.\n     lowb no = (rep \\<propto> low) no \\<and>\n     highb no = (rep \\<propto> high) no\n  pb = (rep \\<propto> high) (rep p)\n  no \\<in> set_of rrept", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>no\\<in>set_of rrept.\n     lowb no = (rep \\<propto> low) no \\<and>\n     highb no = (rep \\<propto> high) no\n  pb = (rep \\<propto> high) (rep p)\n  no \\<in> set_of rrept\n\ngoal (1 subgoal):\n 1. lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "by simp"], ["proof (state)\nthis:\n  lowb no = (rep \\<propto> low) no \\<and>\n  (highb(rep p := pb)) no = (rep \\<propto> high) no\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of rrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. no \\<notin> set_of rrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "assume no_notin_rrept: \" no \\<notin> set_of rrept\""], ["proof (state)\nthis:\n  no \\<notin> set_of rrept\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of rrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "proof (cases \"no \\<in> set_of lrept\")"], ["proof (state)\ngoal (2 subgoals):\n 1. no \\<in> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no\n 2. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "case True"], ["proof (state)\nthis:\n  no \\<in> set_of lrept\n\ngoal (2 subgoals):\n 1. no \\<in> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no\n 2. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "with no_notin_rrept rp_notin_lrept ab_nc"], ["proof (chain)\npicking this:\n  no \\<notin> set_of rrept\n  rep p \\<notin> set_of lrept\n  \\<forall>pt.\n     pt \\<notin> set_of rrept \\<longrightarrow>\n     (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt\n  no \\<in> set_of lrept", "have ab_nc_no: \"lowa no = lowb no \\<and> higha no = highb no\""], ["proof (prove)\nusing this:\n  no \\<notin> set_of rrept\n  rep p \\<notin> set_of lrept\n  \\<forall>pt.\n     pt \\<notin> set_of rrept \\<longrightarrow>\n     (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt\n  no \\<in> set_of lrept\n\ngoal (1 subgoal):\n 1. lowa no = lowb no \\<and> higha no = highb no", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>no \\<notin> set_of rrept; rep p \\<notin> set_of lrept;\n     \\<forall>pt.\n        pt \\<notin> set_of rrept \\<longrightarrow>\n        (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt;\n     no \\<in> set_of lrept\\<rbrakk>\n    \\<Longrightarrow> lowa no = lowb no \\<and> higha no = highb no", "apply (erule_tac x=no in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>no \\<notin> set_of rrept; rep p \\<notin> set_of lrept;\n     no \\<in> set_of lrept;\n     no \\<notin> set_of rrept \\<longrightarrow>\n     (lowa(rep p := pa)) no = lowb no \\<and> higha no = highb no\\<rbrakk>\n    \\<Longrightarrow> lowa no = lowb no \\<and> higha no = highb no", "apply (erule impE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>no \\<notin> set_of rrept; rep p \\<notin> set_of lrept;\n     no \\<in> set_of lrept\\<rbrakk>\n    \\<Longrightarrow> no \\<notin> set_of rrept\n 2. \\<lbrakk>no \\<notin> set_of rrept; rep p \\<notin> set_of lrept;\n     no \\<in> set_of lrept;\n     (lowa(rep p := pa)) no = lowb no \\<and> higha no = highb no\\<rbrakk>\n    \\<Longrightarrow> lowa no = lowb no \\<and> higha no = highb no", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>no \\<notin> set_of rrept; rep p \\<notin> set_of lrept;\n     no \\<in> set_of lrept;\n     (lowa(rep p := pa)) no = lowb no \\<and> higha no = highb no\\<rbrakk>\n    \\<Longrightarrow> lowa no = lowb no \\<and> higha no = highb no", "apply (subgoal_tac \"no \\<noteq> rep p\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>no \\<notin> set_of rrept; rep p \\<notin> set_of lrept;\n     no \\<in> set_of lrept;\n     (lowa(rep p := pa)) no = lowb no \\<and> higha no = highb no;\n     no \\<noteq> rep p\\<rbrakk>\n    \\<Longrightarrow> lowa no = lowb no \\<and> higha no = highb no\n 2. \\<lbrakk>no \\<notin> set_of rrept; rep p \\<notin> set_of lrept;\n     no \\<in> set_of lrept;\n     (lowa(rep p := pa)) no = lowb no \\<and> higha no = highb no\\<rbrakk>\n    \\<Longrightarrow> no \\<noteq> rep p", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>no \\<notin> set_of rrept; rep p \\<notin> set_of lrept;\n     no \\<in> set_of lrept;\n     (lowa(rep p := pa)) no = lowb no \\<and> higha no = highb no\\<rbrakk>\n    \\<Longrightarrow> no \\<noteq> rep p", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  lowa no = lowb no \\<and> higha no = highb no\n\ngoal (2 subgoals):\n 1. no \\<in> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no\n 2. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "from lowa_higha_def True"], ["proof (chain)\npicking this:\n  \\<forall>no\\<in>set_of lrept.\n     lowa no = (rep \\<propto> low) no \\<and>\n     higha no = (rep \\<propto> high) no\n  no \\<in> set_of lrept", "have \n                      \"lowa no = (rep \\<propto> low) no \\<and> higha no = (rep \\<propto> high) no\""], ["proof (prove)\nusing this:\n  \\<forall>no\\<in>set_of lrept.\n     lowa no = (rep \\<propto> low) no \\<and>\n     higha no = (rep \\<propto> high) no\n  no \\<in> set_of lrept\n\ngoal (1 subgoal):\n 1. lowa no = (rep \\<propto> low) no \\<and>\n    higha no = (rep \\<propto> high) no", "by auto"], ["proof (state)\nthis:\n  lowa no = (rep \\<propto> low) no \\<and> higha no = (rep \\<propto> high) no\n\ngoal (2 subgoals):\n 1. no \\<in> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no\n 2. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "with ab_nc_no"], ["proof (chain)\npicking this:\n  lowa no = lowb no \\<and> higha no = highb no\n  lowa no = (rep \\<propto> low) no \\<and> higha no = (rep \\<propto> high) no", "have \"lowb no = (rep \\<propto> low) no \\<and> highb no =(rep \\<propto> high) no\""], ["proof (prove)\nusing this:\n  lowa no = lowb no \\<and> higha no = highb no\n  lowa no = (rep \\<propto> low) no \\<and> higha no = (rep \\<propto> high) no\n\ngoal (1 subgoal):\n 1. lowb no = (rep \\<propto> low) no \\<and>\n    highb no = (rep \\<propto> high) no", "by simp"], ["proof (state)\nthis:\n  lowb no = (rep \\<propto> low) no \\<and> highb no = (rep \\<propto> high) no\n\ngoal (2 subgoals):\n 1. no \\<in> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no\n 2. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "with rp_notin_lrept True"], ["proof (chain)\npicking this:\n  rep p \\<notin> set_of lrept\n  no \\<in> set_of lrept\n  lowb no = (rep \\<propto> low) no \\<and> highb no = (rep \\<propto> high) no", "show ?thesis"], ["proof (prove)\nusing this:\n  rep p \\<notin> set_of lrept\n  no \\<in> set_of lrept\n  lowb no = (rep \\<propto> low) no \\<and> highb no = (rep \\<propto> high) no\n\ngoal (1 subgoal):\n 1. lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "apply (subgoal_tac \"no \\<noteq> rep p\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>rep p \\<notin> set_of lrept; no \\<in> set_of lrept;\n     lowb no = (rep \\<propto> low) no \\<and>\n     highb no = (rep \\<propto> high) no;\n     no \\<noteq> rep p\\<rbrakk>\n    \\<Longrightarrow> lowb no = (rep \\<propto> low) no \\<and>\n                      (highb(rep p := pb)) no = (rep \\<propto> high) no\n 2. \\<lbrakk>rep p \\<notin> set_of lrept; no \\<in> set_of lrept;\n     lowb no = (rep \\<propto> low) no \\<and>\n     highb no = (rep \\<propto> high) no\\<rbrakk>\n    \\<Longrightarrow> no \\<noteq> rep p", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>rep p \\<notin> set_of lrept; no \\<in> set_of lrept;\n     lowb no = (rep \\<propto> low) no \\<and>\n     highb no = (rep \\<propto> high) no\\<rbrakk>\n    \\<Longrightarrow> no \\<noteq> rep p", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  lowb no = (rep \\<propto> low) no \\<and>\n  (highb(rep p := pb)) no = (rep \\<propto> high) no\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "assume no_notin_lrept: \" no \\<notin> set_of lrept\""], ["proof (state)\nthis:\n  no \\<notin> set_of lrept\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "with no_in_rept rept_def no_notin_rrept"], ["proof (chain)\npicking this:\n  no \\<in> set_of rept\n  rept = Node lrept (rep p) rrept\n  no \\<notin> set_of rrept\n  no \\<notin> set_of lrept", "have no_rp: \"no = rep p\""], ["proof (prove)\nusing this:\n  no \\<in> set_of rept\n  rept = Node lrept (rep p) rrept\n  no \\<notin> set_of rrept\n  no \\<notin> set_of lrept\n\ngoal (1 subgoal):\n 1. no = rep p", "by simp"], ["proof (state)\nthis:\n  no = rep p\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "with rp_notin_lrept low_lowa_nc"], ["proof (chain)\npicking this:\n  rep p \\<notin> set_of lrept\n  \\<forall>pt.\n     pt \\<notin> set_of lrept \\<longrightarrow>\n     low pt = lowa pt \\<and> high pt = higha pt\n  no = rep p", "have a_nc: \"low no = lowa no \\<and> high no = higha no\""], ["proof (prove)\nusing this:\n  rep p \\<notin> set_of lrept\n  \\<forall>pt.\n     pt \\<notin> set_of lrept \\<longrightarrow>\n     low pt = lowa pt \\<and> high pt = higha pt\n  no = rep p\n\ngoal (1 subgoal):\n 1. low no = lowa no \\<and> high no = higha no", "by auto"], ["proof (state)\nthis:\n  low no = lowa no \\<and> high no = higha no\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "from rp_notin_rrept no_rp ab_nc"], ["proof (chain)\npicking this:\n  rep p \\<notin> set_of rrept\n  no = rep p\n  \\<forall>pt.\n     pt \\<notin> set_of rrept \\<longrightarrow>\n     (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt", "have \"(lowa(rep p := pa)) no = lowb no \\<and> higha no = highb no\""], ["proof (prove)\nusing this:\n  rep p \\<notin> set_of rrept\n  no = rep p\n  \\<forall>pt.\n     pt \\<notin> set_of rrept \\<longrightarrow>\n     (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt\n\ngoal (1 subgoal):\n 1. (lowa(rep p := pa)) no = lowb no \\<and> higha no = highb no", "by auto"], ["proof (state)\nthis:\n  (lowa(rep p := pa)) no = lowb no \\<and> higha no = highb no\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "with a_nc pa_def no_rp"], ["proof (chain)\npicking this:\n  low no = lowa no \\<and> high no = higha no\n  pa = (rep \\<propto> low) (rep p)\n  no = rep p\n  (lowa(rep p := pa)) no = lowb no \\<and> higha no = highb no", "have \"(rep \\<propto> low) no = lowb no \\<and> high no = highb no\""], ["proof (prove)\nusing this:\n  low no = lowa no \\<and> high no = higha no\n  pa = (rep \\<propto> low) (rep p)\n  no = rep p\n  (lowa(rep p := pa)) no = lowb no \\<and> higha no = highb no\n\ngoal (1 subgoal):\n 1. (rep \\<propto> low) no = lowb no \\<and> high no = highb no", "by auto"], ["proof (state)\nthis:\n  (rep \\<propto> low) no = lowb no \\<and> high no = highb no\n\ngoal (1 subgoal):\n 1. no \\<notin> set_of lrept \\<Longrightarrow>\n    lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "with pb_def no_rp"], ["proof (chain)\npicking this:\n  pb = (rep \\<propto> high) (rep p)\n  no = rep p\n  (rep \\<propto> low) no = lowb no \\<and> high no = highb no", "show ?thesis"], ["proof (prove)\nusing this:\n  pb = (rep \\<propto> high) (rep p)\n  no = rep p\n  (rep \\<propto> low) no = lowb no \\<and> high no = highb no\n\ngoal (1 subgoal):\n 1. lowb no = (rep \\<propto> low) no \\<and>\n    (highb(rep p := pb)) no = (rep \\<propto> high) no", "by simp"], ["proof (state)\nthis:\n  lowb no = (rep \\<propto> low) no \\<and>\n  (highb(rep p := pb)) no = (rep \\<propto> high) no\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lowb no = (rep \\<propto> low) no \\<and>\n  (highb(rep p := pb)) no = (rep \\<propto> high) no\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lowb no = (rep \\<propto> low) no \\<and>\n  (highb(rep p := pb)) no = (rep \\<propto> high) no\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>no\\<in>set_of rept.\n     lowb no = (rep \\<propto> low) no \\<and>\n     (highb(rep p := pb)) no = (rep \\<propto> high) no\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept", "with rept_dag"], ["proof (chain)\npicking this:\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n  \\<forall>no\\<in>set_of rept.\n     lowb no = (rep \\<propto> low) no \\<and>\n     (highb(rep p := pb)) no = (rep \\<propto> high) no", "have \"Dag (rep p) lowb (highb(rep p := pb)) rept = \n                    Dag (rep p) (rep \\<propto> low) (rep \\<propto> high) rept\""], ["proof (prove)\nusing this:\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n  \\<forall>no\\<in>set_of rept.\n     lowb no = (rep \\<propto> low) no \\<and>\n     (highb(rep p := pb)) no = (rep \\<propto> high) no\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept =\n    Dag (rep p) (rep \\<propto> low) (rep \\<propto> high) rept", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n              (rep \\<propto> high) rept;\n     \\<forall>no\\<in>set_of rept.\n        lowb no = (rep \\<propto> low) no \\<and>\n        (highb(rep p := pb)) no = (rep \\<propto> high) no\\<rbrakk>\n    \\<Longrightarrow> Dag (rep p) lowb (highb(rep p := pb)) rept =\n                      Dag (rep p) (rep \\<propto> low) (rep \\<propto> high)\n                       rept", "apply (rule heaps_eq_Dag_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Dag ((rep \\<propto> id) p) (rep \\<propto> low)\n              (rep \\<propto> high) rept;\n     \\<forall>no\\<in>set_of rept.\n        lowb no = (rep \\<propto> low) no \\<and>\n        (highb(rep p := pb)) no = (rep \\<propto> high) no\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>set_of rept.\n                         lowb x = (rep \\<propto> low) x \\<and>\n                         (highb(rep p := pb)) x = (rep \\<propto> high) x", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  Dag (rep p) lowb (highb(rep p := pb)) rept =\n  Dag (rep p) (rep \\<propto> low) (rep \\<propto> high) rept\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept", "with rept_dag p_nNull"], ["proof (chain)\npicking this:\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n  p \\<noteq> Null\n  Dag (rep p) lowb (highb(rep p := pb)) rept =\n  Dag (rep p) (rep \\<propto> low) (rep \\<propto> high) rept", "show ?thesis"], ["proof (prove)\nusing this:\n  Dag ((rep \\<propto> id) p) (rep \\<propto> low) (rep \\<propto> high) rept\n  p \\<noteq> Null\n  Dag (rep p) lowb (highb(rep p := pb)) rept =\n  Dag (rep p) (rep \\<propto> low) (rep \\<propto> high) rept\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept", "by simp"], ["proof (state)\nthis:\n  Dag (rep p) lowb (highb(rep p := pb)) rept\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Dag (rep p) lowb (highb(rep p := pb)) rept\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "have \"(\\<forall>pt. pt \\<notin> set_of rept \\<longrightarrow> low pt = lowb pt \\<and> \n                        high pt = (highb(rep p := pb)) pt)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>pt.\n       pt \\<notin> set_of rept \\<longrightarrow>\n       low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt", "proof (intro allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>pt.\n       pt \\<notin> set_of rept \\<Longrightarrow>\n       low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt", "fix pt"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>pt.\n       pt \\<notin> set_of rept \\<Longrightarrow>\n       low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt", "assume pt_notin_rept: \"pt \\<notin> set_of rept\""], ["proof (state)\nthis:\n  pt \\<notin> set_of rept\n\ngoal (1 subgoal):\n 1. \\<And>pt.\n       pt \\<notin> set_of rept \\<Longrightarrow>\n       low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt", "with rept_def"], ["proof (chain)\npicking this:\n  rept = Node lrept (rep p) rrept\n  pt \\<notin> set_of rept", "obtain\n                pt_notin_lrept: \"pt \\<notin> set_of lrept\" and\n                pt_notin_rrept: \"pt \\<notin> set_of rrept\" and\n                pt_neq_rp: \"pt \\<noteq> rep p\""], ["proof (prove)\nusing this:\n  rept = Node lrept (rep p) rrept\n  pt \\<notin> set_of rept\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>pt \\<notin> set_of lrept; pt \\<notin> set_of rrept;\n      pt \\<noteq> rep p\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by simp"], ["proof (state)\nthis:\n  pt \\<notin> set_of lrept\n  pt \\<notin> set_of rrept\n  pt \\<noteq> rep p\n\ngoal (1 subgoal):\n 1. \\<And>pt.\n       pt \\<notin> set_of rept \\<Longrightarrow>\n       low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt", "with low_lowa_nc ab_nc"], ["proof (chain)\npicking this:\n  \\<forall>pt.\n     pt \\<notin> set_of lrept \\<longrightarrow>\n     low pt = lowa pt \\<and> high pt = higha pt\n  \\<forall>pt.\n     pt \\<notin> set_of rrept \\<longrightarrow>\n     (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt\n  pt \\<notin> set_of lrept\n  pt \\<notin> set_of rrept\n  pt \\<noteq> rep p", "show \"low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt\""], ["proof (prove)\nusing this:\n  \\<forall>pt.\n     pt \\<notin> set_of lrept \\<longrightarrow>\n     low pt = lowa pt \\<and> high pt = higha pt\n  \\<forall>pt.\n     pt \\<notin> set_of rrept \\<longrightarrow>\n     (lowa(rep p := pa)) pt = lowb pt \\<and> higha pt = highb pt\n  pt \\<notin> set_of lrept\n  pt \\<notin> set_of rrept\n  pt \\<noteq> rep p\n\ngoal (1 subgoal):\n 1. low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt", "by auto"], ["proof (state)\nthis:\n  low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>pt.\n     pt \\<notin> set_of rept \\<longrightarrow>\n     low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "with rept_end_dag"], ["proof (chain)\npicking this:\n  Dag (rep p) lowb (highb(rep p := pb)) rept\n  \\<forall>pt.\n     pt \\<notin> set_of rept \\<longrightarrow>\n     low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt", "show ?thesis"], ["proof (prove)\nusing this:\n  Dag (rep p) lowb (highb(rep p := pb)) rept\n  \\<forall>pt.\n     pt \\<notin> set_of rept \\<longrightarrow>\n     low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt\n\ngoal (1 subgoal):\n 1. Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n    (\\<forall>pt.\n        pt \\<notin> set_of rept \\<longrightarrow>\n        low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)", "by simp"], ["proof (state)\nthis:\n  Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n  (\\<forall>pt.\n      pt \\<notin> set_of rept \\<longrightarrow>\n      low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt)\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>rrept.\n     Dag ((rep \\<propto> id) (higha (rep p)))\n      (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha) rrept \\<and>\n     (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n     size\n      (dag ((rep \\<propto> id) (higha (rep p)))\n        (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n     < size\n        (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n          (rep \\<propto> high)) \\<and>\n     (\\<forall>lowb highb pb.\n         Dag pb lowb highb rrept \\<and>\n         (\\<forall>pt.\n             pt \\<notin> set_of rrept \\<longrightarrow>\n             (lowa(rep p := pa)) pt = lowb pt \\<and>\n             higha pt = highb pt) \\<longrightarrow>\n         Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n         (\\<forall>pt.\n             pt \\<notin> set_of rept \\<longrightarrow>\n             low pt = lowb pt \\<and> high pt = (highb(rep p := pb)) pt))\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>lrept.\n     Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n      (rep \\<propto> high) lrept \\<and>\n     (\\<forall>no\\<in>set_of lrept. rep no = no) \\<and>\n     size\n      (dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n        (rep \\<propto> high))\n     < size\n        (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n          (rep \\<propto> high)) \\<and>\n     (\\<forall>lowa higha pa.\n         Dag pa lowa higha lrept \\<and>\n         (\\<forall>pt.\n             pt \\<notin> set_of lrept \\<longrightarrow>\n             low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n         (\\<exists>rrept.\n             Dag ((rep \\<propto> id) (higha (rep p)))\n              (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n              rrept \\<and>\n             (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n             size\n              (dag ((rep \\<propto> id) (higha (rep p)))\n                (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n             < size\n                (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                  (rep \\<propto> high)) \\<and>\n             (\\<forall>lowb highb pb.\n                 Dag pb lowb highb rrept \\<and>\n                 (\\<forall>pt.\n                     pt \\<notin> set_of rrept \\<longrightarrow>\n                     (lowa(rep p := pa)) pt = lowb pt \\<and>\n                     higha pt = highb pt) \\<longrightarrow>\n                 Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                 (\\<forall>pt.\n                     pt \\<notin> set_of rept \\<longrightarrow>\n                     low pt = lowb pt \\<and>\n                     high pt = (highb(rep p := pb)) pt))))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>lrept.\n     Dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n      (rep \\<propto> high) lrept \\<and>\n     (\\<forall>no\\<in>set_of lrept. rep no = no) \\<and>\n     size\n      (dag ((rep \\<propto> id) (low (rep p))) (rep \\<propto> low)\n        (rep \\<propto> high))\n     < size\n        (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n          (rep \\<propto> high)) \\<and>\n     (\\<forall>lowa higha pa.\n         Dag pa lowa higha lrept \\<and>\n         (\\<forall>pt.\n             pt \\<notin> set_of lrept \\<longrightarrow>\n             low pt = lowa pt \\<and> high pt = higha pt) \\<longrightarrow>\n         (\\<exists>rrept.\n             Dag ((rep \\<propto> id) (higha (rep p)))\n              (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha)\n              rrept \\<and>\n             (\\<forall>no\\<in>set_of rrept. rep no = no) \\<and>\n             size\n              (dag ((rep \\<propto> id) (higha (rep p)))\n                (rep \\<propto> lowa(rep p := pa)) (rep \\<propto> higha))\n             < size\n                (dag ((rep \\<propto> id) p) (rep \\<propto> low)\n                  (rep \\<propto> high)) \\<and>\n             (\\<forall>lowb highb pb.\n                 Dag pb lowb highb rrept \\<and>\n                 (\\<forall>pt.\n                     pt \\<notin> set_of rrept \\<longrightarrow>\n                     (lowa(rep p := pa)) pt = lowb pt \\<and>\n                     higha pt = highb pt) \\<longrightarrow>\n                 Dag (rep p) lowb (highb(rep p := pb)) rept \\<and>\n                 (\\<forall>pt.\n                     pt \\<notin> set_of rept \\<longrightarrow>\n                     low pt = lowb pt \\<and>\n                     high pt = (highb(rep p := pb)) pt))))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}