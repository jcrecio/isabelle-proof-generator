{"file_name": "/home/qj213/afp-2021-10-22/thys/Complex_Bounded_Operators/extra/Extra_Ordered_Fields.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Complex_Bounded_Operators", "problem_names": ["lemma convex_bound_le:\n  assumes \"x \\<le> a\" and \"y \\<le> a\" and \"0 \\<le> u\" and \"0 \\<le> v\" and \"u + v = 1\"\n  shows \"u * x + v * y \\<le> a\"", "lemma mult_pos_pos[simp]: \"0 < a \\<Longrightarrow> 0 < b \\<Longrightarrow> 0 < a * b\"", "lemma mult_pos_neg: \"0 < a \\<Longrightarrow> b < 0 \\<Longrightarrow> a * b < 0\"", "lemma mult_neg_pos: \"a < 0 \\<Longrightarrow> 0 < b \\<Longrightarrow> a * b < 0\"", "lemma mult_strict_mono:\n  assumes t1: \"a < b\" and t2: \"c < d\" and t3: \"0 < b\" and t4: \"0 \\<le> c\"\n  shows \"a * c < b * d\"", "lemma mult_strict_mono':\n  assumes \"a < b\" and \"c < d\" and \"0 \\<le> a\" and \"0 \\<le> c\"\n  shows \"a * c < b * d\"", "lemma mult_less_le_imp_less:\n  assumes t1: \"a < b\" and t2: \"c \\<le> d\" and t3: \"0 \\<le> a\" and t4: \"0 < c\"\n  shows \"a * c < b * d\"", "lemma mult_le_less_imp_less:\n  assumes \"a \\<le> b\" and \"c < d\" and \"0 < a\" and \"0 \\<le> c\"\n  shows \"a * c < b * d\"", "lemma convex_bound_lt:\n  assumes \"x < a\" and \"y < a\" and \"0 \\<le> u\" and \"0 \\<le> v\" and \"u + v = 1\"\n  shows \"u * x + v * y < a\"", "lemma mult_strict_left_mono_neg: \"b < a \\<Longrightarrow> c < 0 \\<Longrightarrow> c * a < c * b\"", "lemma mult_strict_right_mono_neg: \"b < a \\<Longrightarrow> c < 0 \\<Longrightarrow> a * c < b * c\"", "lemma mult_neg_neg: \"a < 0 \\<Longrightarrow> b < 0 \\<Longrightarrow> 0 < a * b\"", "lemmas mult_sign_intros =\n  mult_nonneg_nonneg mult_nonneg_nonpos\n  mult_nonpos_nonneg mult_nonpos_nonpos\n  mult_pos_pos mult_pos_neg\n  mult_neg_pos mult_neg_neg", "lemma frac_less_eq:\n  \"y \\<noteq> 0 \\<Longrightarrow> z \\<noteq> 0 \\<Longrightarrow> x / y < w / z \\<longleftrightarrow> (x * z - w * y) / (y * z) < 0\"", "lemma frac_le_eq:\n  \"y \\<noteq> 0 \\<Longrightarrow> z \\<noteq> 0 \\<Longrightarrow> x / y \\<le> w / z \\<longleftrightarrow> (x * z - w * y) / (y * z) \\<le> 0\"", "lemmas sign_simps = algebra_simps zero_less_mult_iff mult_less_0_iff", "lemmas (in -) sign_simps = algebra_simps zero_less_mult_iff mult_less_0_iff", "lemma zero_eq_1_divide_iff [simp]: \"0 = 1 / a \\<longleftrightarrow> a = 0\"", "lemma one_divide_eq_0_iff [simp]: \"1 / a = 0 \\<longleftrightarrow> a = 0\"", "lemma eq_divide_eq_1 [simp]:\n  \"(1 = b/a) = ((a \\<noteq> 0 & a = b))\"", "lemma divide_eq_eq_1 [simp]:\n  \"(b/a = 1) = ((a \\<noteq> 0 & a = b))\"", "lemma comparable:\n  assumes h1: \"a \\<le> c \\<or> a \\<ge> c\"\n    and h2: \"b \\<le> c \\<or> b \\<ge> c\"\n  shows \"a \\<le> b \\<or> b \\<le> a\"", "lemma negative_imp_inverse_negative:\n  \"a < 0 \\<Longrightarrow> inverse a < 0\"", "lemma inverse_positive_imp_positive:\n  assumes inv_gt_0: \"0 < inverse a\" and nz: \"a \\<noteq> 0\"\n  shows \"0 < a\"", "lemma inverse_negative_imp_negative:\n  assumes inv_less_0: \"inverse a < 0\" and nz: \"a \\<noteq> 0\"\n  shows \"a < 0\"", "lemma linordered_field_no_lb:\n  \"\\<forall>x. \\<exists>y. y < x\"", "lemma linordered_field_no_ub:\n  \"\\<forall>x. \\<exists>y. y > x\"", "lemma less_imp_inverse_less:\n  assumes less: \"a < b\" and apos:  \"0 < a\"\n  shows \"inverse b < inverse a\"", "lemma inverse_less_imp_less:\n  \"inverse a < inverse b \\<Longrightarrow> 0 < a \\<Longrightarrow> b < a\"", "lemma inverse_less_iff_less [simp]:\n  \"0 < a \\<Longrightarrow> 0 < b \\<Longrightarrow> inverse a < inverse b \\<longleftrightarrow> b < a\"", "lemma le_imp_inverse_le:\n  \"a \\<le> b \\<Longrightarrow> 0 < a \\<Longrightarrow> inverse b \\<le> inverse a\"", "lemma inverse_le_iff_le [simp]:\n  \"0 < a \\<Longrightarrow> 0 < b \\<Longrightarrow> inverse a \\<le> inverse b \\<longleftrightarrow> b \\<le> a\"", "lemma inverse_le_imp_le_neg:\n  \"inverse a \\<le> inverse b \\<Longrightarrow> b < 0 \\<Longrightarrow> b \\<le> a\"", "lemma inverse_less_imp_less_neg:\n  \"inverse a < inverse b \\<Longrightarrow> b < 0 \\<Longrightarrow> b < a\"", "lemma inverse_less_iff_less_neg [simp]:\n  \"a < 0 \\<Longrightarrow> b < 0 \\<Longrightarrow> inverse a < inverse b \\<longleftrightarrow> b < a\"", "lemma le_imp_inverse_le_neg:\n  \"a \\<le> b \\<Longrightarrow> b < 0 \\<Longrightarrow> inverse b \\<le> inverse a\"", "lemma inverse_le_iff_le_neg [simp]:\n  \"a < 0 \\<Longrightarrow> b < 0 \\<Longrightarrow> inverse a \\<le> inverse b \\<longleftrightarrow> b \\<le> a\"", "lemma one_less_inverse:\n  \"0 < a \\<Longrightarrow> a < 1 \\<Longrightarrow> 1 < inverse a\"", "lemma one_le_inverse:\n  \"0 < a \\<Longrightarrow> a \\<le> 1 \\<Longrightarrow> 1 \\<le> inverse a\"", "lemma pos_le_divide_eq [field_simps]:\n  assumes \"0 < c\"\n  shows \"a \\<le> b / c \\<longleftrightarrow> a * c \\<le> b\"", "lemma pos_less_divide_eq [field_simps]:\n  assumes \"0 < c\"\n  shows \"a < b / c \\<longleftrightarrow> a * c < b\"", "lemma neg_less_divide_eq [field_simps]:\n  assumes \"c < 0\"\n  shows \"a < b / c \\<longleftrightarrow> b < a * c\"", "lemma neg_le_divide_eq [field_simps]:\n  assumes \"c < 0\"\n  shows \"a \\<le> b / c \\<longleftrightarrow> b \\<le> a * c\"", "lemma pos_divide_le_eq [field_simps]:\n  assumes \"0 < c\"\n  shows \"b / c \\<le> a \\<longleftrightarrow> b \\<le> a * c\"", "lemma pos_divide_less_eq [field_simps]:\n  assumes \"0 < c\"\n  shows \"b / c < a \\<longleftrightarrow> b < a * c\"", "lemma neg_divide_le_eq [field_simps]:\n  assumes \"c < 0\"\n  shows \"b / c \\<le> a \\<longleftrightarrow> a * c \\<le> b\"", "lemma neg_divide_less_eq [field_simps]:\n  assumes \"c < 0\"\n  shows \"b / c < a \\<longleftrightarrow> a * c < b\"", "lemma pos_le_minus_divide_eq [field_simps]: \"0 < c \\<Longrightarrow> a \\<le> - (b / c) \\<longleftrightarrow> a * c \\<le> - b\"", "lemma neg_le_minus_divide_eq [field_simps]: \"c < 0 \\<Longrightarrow> a \\<le> - (b / c) \\<longleftrightarrow> - b \\<le> a * c\"", "lemma pos_less_minus_divide_eq [field_simps]: \"0 < c \\<Longrightarrow> a < - (b / c) \\<longleftrightarrow> a * c < - b\"", "lemma neg_less_minus_divide_eq [field_simps]: \"c < 0 \\<Longrightarrow> a < - (b / c) \\<longleftrightarrow> - b < a * c\"", "lemma pos_minus_divide_less_eq [field_simps]: \"0 < c \\<Longrightarrow> - (b / c) < a \\<longleftrightarrow> - b < a * c\"", "lemma neg_minus_divide_less_eq [field_simps]: \"c < 0 \\<Longrightarrow> - (b / c) < a \\<longleftrightarrow> a * c < - b\"", "lemma pos_minus_divide_le_eq [field_simps]: \"0 < c \\<Longrightarrow> - (b / c) \\<le> a \\<longleftrightarrow> - b \\<le> a * c\"", "lemma neg_minus_divide_le_eq [field_simps]: \"c < 0 \\<Longrightarrow> - (b / c) \\<le> a \\<longleftrightarrow> a * c \\<le> - b\"", "lemma frac_less_eq:\n  \"y \\<noteq> 0 \\<Longrightarrow> z \\<noteq> 0 \\<Longrightarrow> x / y < w / z \\<longleftrightarrow> (x * z - w * y) / (y * z) < 0\"", "lemma frac_le_eq:\n  \"y \\<noteq> 0 \\<Longrightarrow> z \\<noteq> 0 \\<Longrightarrow> x / y \\<le> w / z \\<longleftrightarrow> (x * z - w * y) / (y * z) \\<le> 0\"", "lemma divide_pos_pos[simp]:\n  \"0 < x \\<Longrightarrow> 0 < y \\<Longrightarrow> 0 < x / y\"", "lemma divide_nonneg_pos:\n  \"0 \\<le> x \\<Longrightarrow> 0 < y \\<Longrightarrow> 0 \\<le> x / y\"", "lemma divide_neg_pos:\n  \"x < 0 \\<Longrightarrow> 0 < y \\<Longrightarrow> x / y < 0\"", "lemma divide_nonpos_pos:\n  \"x \\<le> 0 \\<Longrightarrow> 0 < y \\<Longrightarrow> x / y \\<le> 0\"", "lemma divide_pos_neg:\n  \"0 < x \\<Longrightarrow> y < 0 \\<Longrightarrow> x / y < 0\"", "lemma divide_nonneg_neg:\n  \"0 \\<le> x \\<Longrightarrow> y < 0 \\<Longrightarrow> x / y \\<le> 0\"", "lemma divide_neg_neg:\n  \"x < 0 \\<Longrightarrow> y < 0 \\<Longrightarrow> 0 < x / y\"", "lemma divide_nonpos_neg:\n  \"x \\<le> 0 \\<Longrightarrow> y < 0 \\<Longrightarrow> 0 \\<le> x / y\"", "lemma divide_strict_right_mono:\n  \"a < b \\<Longrightarrow> 0 < c \\<Longrightarrow> a / c < b / c\"", "lemma divide_strict_right_mono_neg:\n  \"b < a \\<Longrightarrow> c < 0 \\<Longrightarrow> a / c < b / c\"", "lemma divide_strict_left_mono:\n  \"b < a \\<Longrightarrow> 0 < c \\<Longrightarrow> 0 < a*b \\<Longrightarrow> c / a < c / b\"", "lemma divide_left_mono:\n  \"b \\<le> a \\<Longrightarrow> 0 \\<le> c \\<Longrightarrow> 0 < a*b \\<Longrightarrow> c / a \\<le> c / b\"", "lemma divide_strict_left_mono_neg:\n  \"a < b \\<Longrightarrow> c < 0 \\<Longrightarrow> 0 < a*b \\<Longrightarrow> c / a < c / b\"", "lemma mult_imp_div_pos_le: \"0 < y \\<Longrightarrow> x \\<le> z * y \\<Longrightarrow> x / y \\<le> z\"", "lemma mult_imp_le_div_pos: \"0 < y \\<Longrightarrow> z * y \\<le> x \\<Longrightarrow> z \\<le> x / y\"", "lemma mult_imp_div_pos_less: \"0 < y \\<Longrightarrow> x < z * y \\<Longrightarrow> x / y < z\"", "lemma mult_imp_less_div_pos: \"0 < y \\<Longrightarrow> z * y < x \\<Longrightarrow> z < x / y\"", "lemma frac_le: \"0 \\<le> x \\<Longrightarrow> x \\<le> y \\<Longrightarrow> 0 < w \\<Longrightarrow> w \\<le> z  \\<Longrightarrow> x / z \\<le> y / w\"", "lemma frac_less: \"0 \\<le> x \\<Longrightarrow> x < y \\<Longrightarrow> 0 < w \\<Longrightarrow> w \\<le> z \\<Longrightarrow> x / z < y / w\"", "lemma frac_less2: \"0 < x \\<Longrightarrow> x \\<le> y \\<Longrightarrow> 0 < w \\<Longrightarrow> w < z  \\<Longrightarrow> x / z < y / w\"", "lemma less_half_sum: \"a < b \\<Longrightarrow> a < (a+b) / (1+1)\"", "lemma gt_half_sum: \"a < b \\<Longrightarrow> (a+b)/(1+1) < b\"", "lemma dense_le_bounded:\n  fixes x y z :: 'a\n  assumes \"x < y\"\n    and *: \"\\<And>w. \\<lbrakk> x < w ; w < y \\<rbrakk> \\<Longrightarrow> w \\<le> z\"\n  shows \"y \\<le> z\"", "lemma nonzero_abs_inverse:\n  \"a \\<noteq> 0 \\<Longrightarrow> \\<bar>inverse a\\<bar> = inverse \\<bar>a\\<bar>\"", "lemma nonzero_abs_divide:\n  \"b \\<noteq> 0 \\<Longrightarrow> \\<bar>a / b\\<bar> = \\<bar>a\\<bar> / \\<bar>b\\<bar>\"", "lemma field_le_epsilon:\n  assumes e: \"\\<And>e. 0 < e \\<Longrightarrow> x \\<le> y + e\"\n  shows \"x \\<le> y\"", "lemma inverse_positive_iff_positive [simp]:\n  \"(0 < inverse a) = (0 < a)\"", "lemma inverse_negative_iff_negative [simp]:\n  \"(inverse a < 0) = (a < 0)\"", "lemma inverse_nonnegative_iff_nonnegative [simp]:\n  \"0 \\<le> inverse a \\<longleftrightarrow> 0 \\<le> a\"", "lemma inverse_nonpositive_iff_nonpositive [simp]:\n  \"inverse a \\<le> 0 \\<longleftrightarrow> a \\<le> 0\"", "lemma one_less_inverse_iff: \"1 < inverse x \\<longleftrightarrow> 0 < x \\<and> x < 1\"", "lemma one_le_inverse_iff: \"1 \\<le> inverse x \\<longleftrightarrow> 0 < x \\<and> x \\<le> 1\"", "lemma inverse_less_1_iff: \"inverse x < 1 \\<longleftrightarrow> x \\<le> 0 \\<or> 1 < x\"", "lemma inverse_le_1_iff: \"inverse x \\<le> 1 \\<longleftrightarrow> x \\<le> 0 \\<or> 1 \\<le> x\"", "lemma zero_le_divide_1_iff [simp]:\n  \"0 \\<le> 1 / a \\<longleftrightarrow> 0 \\<le> a\"", "lemma zero_less_divide_1_iff [simp]:\n  \"0 < 1 / a \\<longleftrightarrow> 0 < a\"", "lemma divide_le_0_1_iff [simp]:\n  \"1 / a \\<le> 0 \\<longleftrightarrow> a \\<le> 0\"", "lemma divide_less_0_1_iff [simp]:\n  \"1 / a < 0 \\<longleftrightarrow> a < 0\"", "lemma divide_right_mono:\n  \"a \\<le> b \\<Longrightarrow> 0 \\<le> c \\<Longrightarrow> a/c \\<le> b/c\"", "lemma divide_right_mono_neg: \"a \\<le> b\n    \\<Longrightarrow> c \\<le> 0 \\<Longrightarrow> b / c \\<le> a / c\"", "lemma divide_left_mono_neg: \"a \\<le> b\n    \\<Longrightarrow> c \\<le> 0 \\<Longrightarrow> 0 < a * b \\<Longrightarrow> c / a \\<le> c / b\"", "lemma divide_nonneg_nonneg [simp]:\n  \"0 \\<le> x \\<Longrightarrow> 0 \\<le> y \\<Longrightarrow> 0 \\<le> x / y\"", "lemma divide_nonpos_nonpos:\n  \"x \\<le> 0 \\<Longrightarrow> y \\<le> 0 \\<Longrightarrow> 0 \\<le> x / y\"", "lemma divide_nonneg_nonpos:\n  \"0 \\<le> x \\<Longrightarrow> y \\<le> 0 \\<Longrightarrow> x / y \\<le> 0\"", "lemma divide_nonpos_nonneg:\n  \"x \\<le> 0 \\<Longrightarrow> 0 \\<le> y \\<Longrightarrow> x / y \\<le> 0\"", "lemma le_divide_eq_1_pos [simp]:\n  \"0 < a \\<Longrightarrow> (1 \\<le> b/a) = (a \\<le> b)\"", "lemma le_divide_eq_1_neg [simp]:\n  \"a < 0 \\<Longrightarrow> (1 \\<le> b/a) = (b \\<le> a)\"", "lemma divide_le_eq_1_pos [simp]:\n  \"0 < a \\<Longrightarrow> (b/a \\<le> 1) = (b \\<le> a)\"", "lemma divide_le_eq_1_neg [simp]:\n  \"a < 0 \\<Longrightarrow> (b/a \\<le> 1) = (a \\<le> b)\"", "lemma less_divide_eq_1_pos [simp]:\n  \"0 < a \\<Longrightarrow> (1 < b/a) = (a < b)\"", "lemma less_divide_eq_1_neg [simp]:\n  \"a < 0 \\<Longrightarrow> (1 < b/a) = (b < a)\"", "lemma divide_less_eq_1_pos [simp]:\n  \"0 < a \\<Longrightarrow> (b/a < 1) = (b < a)\"", "lemma divide_less_eq_1_neg [simp]:\n  \"a < 0 \\<Longrightarrow> b/a < 1 \\<longleftrightarrow> a < b\"", "lemma abs_div_pos: \"0 < y \\<Longrightarrow>\n    \\<bar>x\\<bar> / y = \\<bar>x / y\\<bar>\"", "lemma zero_le_divide_abs_iff [simp]: \"(0 \\<le> a / \\<bar>b\\<bar>) = (0 \\<le> a | b = 0)\"", "lemma divide_le_0_abs_iff [simp]: \"(a / \\<bar>b\\<bar> \\<le> 0) = (a \\<le> 0 | b = 0)\"", "lemma scaling_mono:\n  assumes \"u \\<le> v\" and \"0 \\<le> r\" and \"r \\<le> s\"\n  shows \"u + r * (v - u) / s \\<le> v\"", "lemma less_eq_complexI: \"Re x \\<le> Re y \\<Longrightarrow> Im x = Im y \\<Longrightarrow> x\\<le>y\"", "lemma less_complexI: \"Re x < Re y \\<Longrightarrow> Im x = Im y \\<Longrightarrow> x<y\"", "lemma complex_of_real_mono:\n  \"x \\<le> y \\<Longrightarrow> complex_of_real x \\<le> complex_of_real y\"", "lemma complex_of_real_mono_iff[simp]:\n  \"complex_of_real x \\<le> complex_of_real y \\<longleftrightarrow> x \\<le> y\"", "lemma complex_of_real_strict_mono_iff[simp]:\n  \"complex_of_real x < complex_of_real y \\<longleftrightarrow> x < y\"", "lemma complex_of_real_nn_iff[simp]:\n  \"0 \\<le> complex_of_real y \\<longleftrightarrow> 0 \\<le> y\"", "lemma complex_of_real_pos_iff[simp]:\n  \"0 < complex_of_real y \\<longleftrightarrow> 0 < y\"", "lemma Re_mono: \"x \\<le> y \\<Longrightarrow> Re x \\<le> Re y\"", "lemma comp_Im_same: \"x \\<le> y \\<Longrightarrow> Im x = Im y\"", "lemma Re_strict_mono: \"x < y \\<Longrightarrow> Re x < Re y\"", "lemma complex_of_real_cmod: assumes \"x \\<ge> 0\" shows \"complex_of_real (cmod x) = x\""], "translations": [["", "lemma convex_bound_le:\n  assumes \"x \\<le> a\" and \"y \\<le> a\" and \"0 \\<le> u\" and \"0 \\<le> v\" and \"u + v = 1\"\n  shows \"u * x + v * y \\<le> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u * x + v * y \\<le> a", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. u * x + v * y \\<le> a", "from assms"], ["proof (chain)\npicking this:\n  x \\<le> a\n  y \\<le> a\n  (0::'a) \\<le> u\n  (0::'a) \\<le> v\n  u + v = (1::'a)", "have \"u * x + v * y \\<le> u * a + v * a\""], ["proof (prove)\nusing this:\n  x \\<le> a\n  y \\<le> a\n  (0::'a) \\<le> u\n  (0::'a) \\<le> v\n  u + v = (1::'a)\n\ngoal (1 subgoal):\n 1. u * x + v * y \\<le> u * a + v * a", "by (simp add: add_mono mult_left_mono)"], ["proof (state)\nthis:\n  u * x + v * y \\<le> u * a + v * a\n\ngoal (1 subgoal):\n 1. u * x + v * y \\<le> a", "with assms"], ["proof (chain)\npicking this:\n  x \\<le> a\n  y \\<le> a\n  (0::'a) \\<le> u\n  (0::'a) \\<le> v\n  u + v = (1::'a)\n  u * x + v * y \\<le> u * a + v * a", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<le> a\n  y \\<le> a\n  (0::'a) \\<le> u\n  (0::'a) \\<le> v\n  u + v = (1::'a)\n  u * x + v * y \\<le> u * a + v * a\n\ngoal (1 subgoal):\n 1. u * x + v * y \\<le> a", "unfolding distrib_right[symmetric]"], ["proof (prove)\nusing this:\n  x \\<le> a\n  y \\<le> a\n  (0::'a) \\<le> u\n  (0::'a) \\<le> v\n  u + v = (1::'a)\n  u * x + v * y \\<le> (u + v) * a\n\ngoal (1 subgoal):\n 1. u * x + v * y \\<le> a", "by simp"], ["proof (state)\nthis:\n  u * x + v * y \\<le> a\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subclass (in linordered_semiring_1) ordered_semiring_1"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.ordered_semiring_1 (+) (0::'a) (\\<le>) (<) (*) (1::'a)", ".."], ["", "class ordered_semiring_strict = semiring + comm_monoid_add + ordered_cancel_ab_semigroup_add +\n  \\<comment> \\<open>missing class analogous to \\<^class>\\<open>linordered_semiring_strict\\<close> without requiring a total order\\<close>\n  assumes mult_strict_left_mono: \"a < b \\<Longrightarrow> 0 < c \\<Longrightarrow> c * a < c * b\"\n  assumes mult_strict_right_mono: \"a < b \\<Longrightarrow> 0 < c \\<Longrightarrow> a * c < b * c\"\nbegin"], ["", "subclass semiring_0_cancel"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.semiring_0_cancel (+) (-) (0::'a) (*)", ".."], ["", "subclass ordered_semiring"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.ordered_semiring (+) (0::'a) (\\<le>) (<) (*)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b c.\n       \\<lbrakk>a \\<le> b; (0::'a) \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * a \\<le> c * b\n 2. \\<And>a b c.\n       \\<lbrakk>a \\<le> b; (0::'a) \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * c \\<le> b * c", "fix a b c :: 'a"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b c.\n       \\<lbrakk>a \\<le> b; (0::'a) \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * a \\<le> c * b\n 2. \\<And>a b c.\n       \\<lbrakk>a \\<le> b; (0::'a) \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * c \\<le> b * c", "assume t1: \"a \\<le> b\" and t2: \"0 \\<le> c\""], ["proof (state)\nthis:\n  a \\<le> b\n  (0::'a) \\<le> c\n\ngoal (2 subgoals):\n 1. \\<And>a b c.\n       \\<lbrakk>a \\<le> b; (0::'a) \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * a \\<le> c * b\n 2. \\<And>a b c.\n       \\<lbrakk>a \\<le> b; (0::'a) \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * c \\<le> b * c", "thus \"c * a \\<le> c * b\""], ["proof (prove)\nusing this:\n  a \\<le> b\n  (0::'a) \\<le> c\n\ngoal (1 subgoal):\n 1. c * a \\<le> c * b", "unfolding le_less"], ["proof (prove)\nusing this:\n  a < b \\<or> a = b\n  (0::'a) < c \\<or> (0::'a) = c\n\ngoal (1 subgoal):\n 1. c * a < c * b \\<or> c * a = c * b", "using mult_strict_left_mono"], ["proof (prove)\nusing this:\n  a < b \\<or> a = b\n  (0::'a) < c \\<or> (0::'a) = c\n  \\<lbrakk>?a < ?b; (0::'a) < ?c\\<rbrakk>\n  \\<Longrightarrow> ?c * ?a < ?c * ?b\n\ngoal (1 subgoal):\n 1. c * a < c * b \\<or> c * a = c * b", "by (cases \"c = 0\") auto"], ["proof (state)\nthis:\n  c * a \\<le> c * b\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>a \\<le> b; (0::'a) \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * c \\<le> b * c", "from t2"], ["proof (chain)\npicking this:\n  (0::'a) \\<le> c", "show \"a * c \\<le> b * c\""], ["proof (prove)\nusing this:\n  (0::'a) \\<le> c\n\ngoal (1 subgoal):\n 1. a * c \\<le> b * c", "unfolding le_less"], ["proof (prove)\nusing this:\n  (0::'a) < c \\<or> (0::'a) = c\n\ngoal (1 subgoal):\n 1. a * c < b * c \\<or> a * c = b * c", "by (metis local.antisym_conv2 local.mult_not_zero local.mult_strict_right_mono t1)"], ["proof (state)\nthis:\n  a * c \\<le> b * c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mult_pos_pos[simp]: \"0 < a \\<Longrightarrow> 0 < b \\<Longrightarrow> 0 < a * b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) < a; (0::'a) < b\\<rbrakk>\n    \\<Longrightarrow> (0::'a) < a * b", "using mult_strict_left_mono [of 0 b a]"], ["proof (prove)\nusing this:\n  \\<lbrakk>(0::'a) < b; (0::'a) < a\\<rbrakk>\n  \\<Longrightarrow> a * (0::'a) < a * b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) < a; (0::'a) < b\\<rbrakk>\n    \\<Longrightarrow> (0::'a) < a * b", "by simp"], ["", "lemma mult_pos_neg: \"0 < a \\<Longrightarrow> b < 0 \\<Longrightarrow> a * b < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) < a; b < (0::'a)\\<rbrakk>\n    \\<Longrightarrow> a * b < (0::'a)", "using mult_strict_left_mono [of b 0 a]"], ["proof (prove)\nusing this:\n  \\<lbrakk>b < (0::'a); (0::'a) < a\\<rbrakk>\n  \\<Longrightarrow> a * b < a * (0::'a)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) < a; b < (0::'a)\\<rbrakk>\n    \\<Longrightarrow> a * b < (0::'a)", "by simp"], ["", "lemma mult_neg_pos: \"a < 0 \\<Longrightarrow> 0 < b \\<Longrightarrow> a * b < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a < (0::'a); (0::'a) < b\\<rbrakk>\n    \\<Longrightarrow> a * b < (0::'a)", "using mult_strict_right_mono [of a 0 b]"], ["proof (prove)\nusing this:\n  \\<lbrakk>a < (0::'a); (0::'a) < b\\<rbrakk>\n  \\<Longrightarrow> a * b < (0::'a) * b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a < (0::'a); (0::'a) < b\\<rbrakk>\n    \\<Longrightarrow> a * b < (0::'a)", "by simp"], ["", "text \\<open>Strict monotonicity in both arguments\\<close>"], ["", "lemma mult_strict_mono:\n  assumes t1: \"a < b\" and t2: \"c < d\" and t3: \"0 < b\" and t4: \"0 \\<le> c\"\n  shows \"a * c < b * d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * c < b * d", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. a * c < b * d", "have \"a * c < b * d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * c < b * d", "by (metis local.dual_order.order_iff_strict local.dual_order.strict_trans2 \n        local.mult_strict_left_mono local.mult_strict_right_mono local.mult_zero_right t1 t2 t3 t4)"], ["proof (state)\nthis:\n  a * c < b * d\n\ngoal (1 subgoal):\n 1. a * c < b * d", "thus ?thesis"], ["proof (prove)\nusing this:\n  a * c < b * d\n\ngoal (1 subgoal):\n 1. a * c < b * d", "using assms"], ["proof (prove)\nusing this:\n  a * c < b * d\n  a < b\n  c < d\n  (0::'a) < b\n  (0::'a) \\<le> c\n\ngoal (1 subgoal):\n 1. a * c < b * d", "by blast"], ["proof (state)\nthis:\n  a * c < b * d\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>This weaker variant has more natural premises\\<close>"], ["", "lemma mult_strict_mono':\n  assumes \"a < b\" and \"c < d\" and \"0 \\<le> a\" and \"0 \\<le> c\"\n  shows \"a * c < b * d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * c < b * d", "by (rule mult_strict_mono) (insert assms, auto)"], ["", "lemma mult_less_le_imp_less:\n  assumes t1: \"a < b\" and t2: \"c \\<le> d\" and t3: \"0 \\<le> a\" and t4: \"0 < c\"\n  shows \"a * c < b * d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * c < b * d", "using local.mult_strict_mono' local.mult_strict_right_mono local.order.order_iff_strict \n    t1 t2 t3 t4"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a < ?b; ?c < ?d; (0::'a) \\<le> ?a; (0::'a) \\<le> ?c\\<rbrakk>\n  \\<Longrightarrow> ?a * ?c < ?b * ?d\n  \\<lbrakk>?a < ?b; (0::'a) < ?c\\<rbrakk>\n  \\<Longrightarrow> ?a * ?c < ?b * ?c\n  (?a \\<le> ?b) = (?a < ?b \\<or> ?a = ?b)\n  a < b\n  c \\<le> d\n  (0::'a) \\<le> a\n  (0::'a) < c\n\ngoal (1 subgoal):\n 1. a * c < b * d", "by auto"], ["", "lemma mult_le_less_imp_less:\n  assumes \"a \\<le> b\" and \"c < d\" and \"0 < a\" and \"0 \\<le> c\"\n  shows \"a * c < b * d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * c < b * d", "by (metis assms(1) assms(2) assms(3) assms(4) local.antisym_conv2 local.dual_order.strict_trans1 \n      local.mult_strict_left_mono local.mult_strict_mono)"], ["", "end"], ["", "subclass (in linordered_semiring_strict) ordered_semiring_strict"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.ordered_semiring_strict (+) (0::'a) (-) (\\<le>) (<) (*)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b c.\n       \\<lbrakk>a < b; (0::'a) < c\\<rbrakk> \\<Longrightarrow> c * a < c * b\n 2. \\<And>a b c.\n       \\<lbrakk>a < b; (0::'a) < c\\<rbrakk> \\<Longrightarrow> a * c < b * c", "show \"c * a < c * b\"\n    if \"a < b\"\n      and \"0 < c\"\n    for a :: 'a\n      and b \n      and c"], ["proof (prove)\ngoal (1 subgoal):\n 1. c * a < c * b", "using that"], ["proof (prove)\nusing this:\n  a < b\n  (0::'a) < c\n\ngoal (1 subgoal):\n 1. c * a < c * b", "by (simp add: local.mult_strict_left_mono)"], ["proof (state)\nthis:\n  \\<lbrakk>?a1 < ?b1; (0::'a) < ?c1\\<rbrakk>\n  \\<Longrightarrow> ?c1 * ?a1 < ?c1 * ?b1\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>a < b; (0::'a) < c\\<rbrakk> \\<Longrightarrow> a * c < b * c", "show \"a * c < b * c\"\n    if \"a < b\"\n      and \"0 < c\"\n    for a :: 'a\n      and b \n      and c"], ["proof (prove)\ngoal (1 subgoal):\n 1. a * c < b * c", "using that"], ["proof (prove)\nusing this:\n  a < b\n  (0::'a) < c\n\ngoal (1 subgoal):\n 1. a * c < b * c", "by (simp add: local.mult_strict_right_mono)"], ["proof (state)\nthis:\n  \\<lbrakk>?a1 < ?b1; (0::'a) < ?c1\\<rbrakk>\n  \\<Longrightarrow> ?a1 * ?c1 < ?b1 * ?c1\n\ngoal:\nNo subgoals!", "qed"], ["", "class ordered_semiring_1_strict = ordered_semiring_strict + semiring_1\n  \\<comment> \\<open>missing class analogous to \\<^class>\\<open>linordered_semiring_1_strict\\<close> without requiring \n  a total order\\<close>\nbegin"], ["", "subclass ordered_semiring_1"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.ordered_semiring_1 (+) (0::'a) (\\<le>) (<) (*) (1::'a)", ".."], ["", "lemma convex_bound_lt:\n  assumes \"x < a\" and \"y < a\" and \"0 \\<le> u\" and \"0 \\<le> v\" and \"u + v = 1\"\n  shows \"u * x + v * y < a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u * x + v * y < a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. u * x + v * y < a", "from assms"], ["proof (chain)\npicking this:\n  x < a\n  y < a\n  (0::'a) \\<le> u\n  (0::'a) \\<le> v\n  u + v = (1::'a)", "have \"u * x + v * y < u * a + v * a\""], ["proof (prove)\nusing this:\n  x < a\n  y < a\n  (0::'a) \\<le> u\n  (0::'a) \\<le> v\n  u + v = (1::'a)\n\ngoal (1 subgoal):\n 1. u * x + v * y < u * a + v * a", "by (cases \"u = 0\") (auto intro!: add_less_le_mono mult_strict_left_mono mult_left_mono)"], ["proof (state)\nthis:\n  u * x + v * y < u * a + v * a\n\ngoal (1 subgoal):\n 1. u * x + v * y < a", "with assms"], ["proof (chain)\npicking this:\n  x < a\n  y < a\n  (0::'a) \\<le> u\n  (0::'a) \\<le> v\n  u + v = (1::'a)\n  u * x + v * y < u * a + v * a", "show ?thesis"], ["proof (prove)\nusing this:\n  x < a\n  y < a\n  (0::'a) \\<le> u\n  (0::'a) \\<le> v\n  u + v = (1::'a)\n  u * x + v * y < u * a + v * a\n\ngoal (1 subgoal):\n 1. u * x + v * y < a", "unfolding distrib_right[symmetric]"], ["proof (prove)\nusing this:\n  x < a\n  y < a\n  (0::'a) \\<le> u\n  (0::'a) \\<le> v\n  u + v = (1::'a)\n  u * x + v * y < (u + v) * a\n\ngoal (1 subgoal):\n 1. u * x + v * y < a", "by simp"], ["proof (state)\nthis:\n  u * x + v * y < a\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subclass (in linordered_semiring_1_strict) ordered_semiring_1_strict"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.ordered_semiring_1_strict (+) (0::'a) (-) (\\<le>) (<) (*) (1::'a)", ".."], ["", "class ordered_comm_semiring_strict = comm_semiring_0 + ordered_cancel_ab_semigroup_add +\n  \\<comment> \\<open>missing class analogous to \\<^class>\\<open>linordered_comm_semiring_strict\\<close> without requiring a total order\\<close>\n  assumes comm_mult_strict_left_mono: \"a < b \\<Longrightarrow> 0 < c \\<Longrightarrow> c * a < c * b\"\nbegin"], ["", "subclass ordered_semiring_strict"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.ordered_semiring_strict (+) (0::'a) (-) (\\<le>) (<) (*)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b c.\n       \\<lbrakk>a < b; (0::'a) < c\\<rbrakk> \\<Longrightarrow> c * a < c * b\n 2. \\<And>a b c.\n       \\<lbrakk>a < b; (0::'a) < c\\<rbrakk> \\<Longrightarrow> a * c < b * c", "fix a b c :: 'a"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b c.\n       \\<lbrakk>a < b; (0::'a) < c\\<rbrakk> \\<Longrightarrow> c * a < c * b\n 2. \\<And>a b c.\n       \\<lbrakk>a < b; (0::'a) < c\\<rbrakk> \\<Longrightarrow> a * c < b * c", "assume \"a < b\" and \"0 < c\""], ["proof (state)\nthis:\n  a < b\n  (0::'a) < c\n\ngoal (2 subgoals):\n 1. \\<And>a b c.\n       \\<lbrakk>a < b; (0::'a) < c\\<rbrakk> \\<Longrightarrow> c * a < c * b\n 2. \\<And>a b c.\n       \\<lbrakk>a < b; (0::'a) < c\\<rbrakk> \\<Longrightarrow> a * c < b * c", "thus \"c * a < c * b\""], ["proof (prove)\nusing this:\n  a < b\n  (0::'a) < c\n\ngoal (1 subgoal):\n 1. c * a < c * b", "by (rule comm_mult_strict_left_mono)"], ["proof (state)\nthis:\n  c * a < c * b\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>a < b; (0::'a) < c\\<rbrakk> \\<Longrightarrow> a * c < b * c", "thus \"a * c < b * c\""], ["proof (prove)\nusing this:\n  c * a < c * b\n\ngoal (1 subgoal):\n 1. a * c < b * c", "by (simp only: mult.commute)"], ["proof (state)\nthis:\n  a * c < b * c\n\ngoal:\nNo subgoals!", "qed"], ["", "subclass ordered_cancel_comm_semiring"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.ordered_cancel_comm_semiring (+) (-) (0::'a) (\\<le>) (<) (*)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>a \\<le> b; (0::'a) \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * a \\<le> c * b", "fix a b c :: 'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>a \\<le> b; (0::'a) \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * a \\<le> c * b", "assume \"a \\<le> b\" and \"0 \\<le> c\""], ["proof (state)\nthis:\n  a \\<le> b\n  (0::'a) \\<le> c\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>a \\<le> b; (0::'a) \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * a \\<le> c * b", "thus \"c * a \\<le> c * b\""], ["proof (prove)\nusing this:\n  a \\<le> b\n  (0::'a) \\<le> c\n\ngoal (1 subgoal):\n 1. c * a \\<le> c * b", "unfolding le_less"], ["proof (prove)\nusing this:\n  a < b \\<or> a = b\n  (0::'a) < c \\<or> (0::'a) = c\n\ngoal (1 subgoal):\n 1. c * a < c * b \\<or> c * a = c * b", "using mult_strict_left_mono"], ["proof (prove)\nusing this:\n  a < b \\<or> a = b\n  (0::'a) < c \\<or> (0::'a) = c\n  \\<lbrakk>?a < ?b; (0::'a) < ?c\\<rbrakk>\n  \\<Longrightarrow> ?c * ?a < ?c * ?b\n\ngoal (1 subgoal):\n 1. c * a < c * b \\<or> c * a = c * b", "by (cases \"c = 0\") auto"], ["proof (state)\nthis:\n  c * a \\<le> c * b\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subclass (in linordered_comm_semiring_strict) ordered_comm_semiring_strict"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.ordered_comm_semiring_strict (+) (-) (\\<le>) (<) (0::'a) (*)", "apply standard"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>a < b; (0::'a) < c\\<rbrakk> \\<Longrightarrow> c * a < c * b", "by (simp add: local.mult_strict_left_mono)"], ["", "class ordered_ring_strict = ring + ordered_semiring_strict\n  + ordered_ab_group_add + partial_abs_if\n  \\<comment> \\<open>missing class analogous to \\<^class>\\<open>linordered_ring_strict\\<close> without requiring a total order\\<close>\nbegin"], ["", "subclass ordered_ring"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.ordered_ring (+) (-) (0::'a) (\\<le>) (<) (*) uminus", ".."], ["", "lemma mult_strict_left_mono_neg: \"b < a \\<Longrightarrow> c < 0 \\<Longrightarrow> c * a < c * b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>b < a; c < (0::'a)\\<rbrakk> \\<Longrightarrow> c * a < c * b", "using mult_strict_left_mono [of b a \"- c\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>b < a; (0::'a) < - c\\<rbrakk> \\<Longrightarrow> - c * b < - c * a\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b < a; c < (0::'a)\\<rbrakk> \\<Longrightarrow> c * a < c * b", "by simp"], ["", "lemma mult_strict_right_mono_neg: \"b < a \\<Longrightarrow> c < 0 \\<Longrightarrow> a * c < b * c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>b < a; c < (0::'a)\\<rbrakk> \\<Longrightarrow> a * c < b * c", "using mult_strict_right_mono [of b a \"- c\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>b < a; (0::'a) < - c\\<rbrakk> \\<Longrightarrow> b * - c < a * - c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b < a; c < (0::'a)\\<rbrakk> \\<Longrightarrow> a * c < b * c", "by simp"], ["", "lemma mult_neg_neg: \"a < 0 \\<Longrightarrow> b < 0 \\<Longrightarrow> 0 < a * b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a < (0::'a); b < (0::'a)\\<rbrakk>\n    \\<Longrightarrow> (0::'a) < a * b", "using mult_strict_right_mono_neg [of a 0 b]"], ["proof (prove)\nusing this:\n  \\<lbrakk>a < (0::'a); b < (0::'a)\\<rbrakk>\n  \\<Longrightarrow> (0::'a) * b < a * b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a < (0::'a); b < (0::'a)\\<rbrakk>\n    \\<Longrightarrow> (0::'a) < a * b", "by simp"], ["", "end"], ["", "lemmas mult_sign_intros =\n  mult_nonneg_nonneg mult_nonneg_nonpos\n  mult_nonpos_nonneg mult_nonpos_nonpos\n  mult_pos_pos mult_pos_neg\n  mult_neg_pos mult_neg_neg"], ["", "subsection \\<open>Ordered fields\\<close>"], ["", "class ordered_field = field + order + ordered_comm_semiring_strict + ordered_ab_group_add \n  + partial_abs_if \n  \\<comment> \\<open>missing class analogous to \\<^class>\\<open>linordered_field\\<close> without requiring a total order\\<close>\nbegin"], ["", "lemma frac_less_eq:\n  \"y \\<noteq> 0 \\<Longrightarrow> z \\<noteq> 0 \\<Longrightarrow> x / y < w / z \\<longleftrightarrow> (x * z - w * y) / (y * z) < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<noteq> (0::'a); z \\<noteq> (0::'a)\\<rbrakk>\n    \\<Longrightarrow> (x / y < w / z) =\n                      ((x * z - w * y) / (y * z) < (0::'a))", "by (subst less_iff_diff_less_0) (simp add: diff_frac_eq )"], ["", "lemma frac_le_eq:\n  \"y \\<noteq> 0 \\<Longrightarrow> z \\<noteq> 0 \\<Longrightarrow> x / y \\<le> w / z \\<longleftrightarrow> (x * z - w * y) / (y * z) \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<noteq> (0::'a); z \\<noteq> (0::'a)\\<rbrakk>\n    \\<Longrightarrow> (x / y \\<le> w / z) =\n                      ((x * z - w * y) / (y * z) \\<le> (0::'a))", "by (subst le_iff_diff_le_0) (simp add: diff_frac_eq )"], ["", "lemmas sign_simps = algebra_simps zero_less_mult_iff mult_less_0_iff"], ["", "lemmas (in -) sign_simps = algebra_simps zero_less_mult_iff mult_less_0_iff"], ["", "text\\<open>Simplify expressions equated with 1\\<close>"], ["", "lemma zero_eq_1_divide_iff [simp]: \"0 = 1 / a \\<longleftrightarrow> a = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((0::'a) = (1::'a) / a) = (a = (0::'a))", "by (cases \"a = 0\") (auto simp: field_simps)"], ["", "lemma one_divide_eq_0_iff [simp]: \"1 / a = 0 \\<longleftrightarrow> a = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((1::'a) / a = (0::'a)) = (a = (0::'a))", "using zero_eq_1_divide_iff[of a]"], ["proof (prove)\nusing this:\n  ((0::'a) = (1::'a) / a) = (a = (0::'a))\n\ngoal (1 subgoal):\n 1. ((1::'a) / a = (0::'a)) = (a = (0::'a))", "by simp"], ["", "text\\<open>Simplify expressions such as \\<open>0 < 1/x\\<close> to \\<open>0 < x\\<close>\\<close>"], ["", "text\\<open>Simplify quotients that are compared with the value 1.\\<close>"], ["", "text \\<open>Conditional Simplification Rules: No Case Splits\\<close>"], ["", "lemma eq_divide_eq_1 [simp]:\n  \"(1 = b/a) = ((a \\<noteq> 0 & a = b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((1::'a) = b / a) = (a \\<noteq> (0::'a) \\<and> a = b)", "by (auto simp add: eq_divide_eq)"], ["", "lemma divide_eq_eq_1 [simp]:\n  \"(b/a = 1) = ((a \\<noteq> 0 & a = b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b / a = (1::'a)) = (a \\<noteq> (0::'a) \\<and> a = b)", "by (auto simp add: divide_eq_eq)"], ["", "end"], ["", "(* class ordered_field *)"], ["", "text \\<open>The following type class intends to capture some important properties \n  that are common both to the real and the complex numbers. The purpose is\n  to be able to state and prove lemmas that apply both to the real and the complex \n  numbers without needing to state the lemma twice.\n\\<close>"], ["", "class nice_ordered_field = ordered_field + zero_less_one + idom_abs_sgn +\n  assumes positive_imp_inverse_positive: \"0 < a \\<Longrightarrow> 0 < inverse a\"\n    and inverse_le_imp_le: \"inverse a \\<le> inverse b \\<Longrightarrow> 0 < a \\<Longrightarrow> b \\<le> a\"\n    and dense_le: \"(\\<And>x. x < y \\<Longrightarrow> x \\<le> z) \\<Longrightarrow> y \\<le> z\"\n    and nn_comparable: \"0 \\<le> a \\<Longrightarrow> 0 \\<le> b \\<Longrightarrow> a \\<le> b \\<or> b \\<le> a\"\n    and abs_nn: \"\\<bar>x\\<bar> \\<ge> 0\"\nbegin"], ["", "subclass (in linordered_field) nice_ordered_field"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.nice_ordered_field (+) (-) (\\<le>) (<) (0::'a) (*) abs uminus (/)\n     inverse (1::'a) sgn", "proof"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>a. a \\<le> (0::'a) \\<Longrightarrow> \\<bar>a\\<bar> = - a\n 2. \\<And>a. (0::'a) \\<le> a \\<Longrightarrow> \\<bar>a\\<bar> = a\n 3. \\<And>a. (0::'a) < a \\<Longrightarrow> (0::'a) < inverse a\n 4. \\<And>a b.\n       \\<lbrakk>inverse a \\<le> inverse b; (0::'a) < a\\<rbrakk>\n       \\<Longrightarrow> b \\<le> a\n 5. \\<And>y z.\n       (\\<And>x. x < y \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       y \\<le> z\n 6. \\<And>a b.\n       \\<lbrakk>(0::'a) \\<le> a; (0::'a) \\<le> b\\<rbrakk>\n       \\<Longrightarrow> a \\<le> b \\<or> b \\<le> a\n 7. \\<And>x. (0::'a) \\<le> \\<bar>x\\<bar>", "show \"\\<bar>a\\<bar> = - a\"\n    if \"a \\<le> 0\"\n    for a :: 'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = - a", "using that"], ["proof (prove)\nusing this:\n  a \\<le> (0::'a)\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = - a", "by simp"], ["proof (state)\nthis:\n  ?a1 \\<le> (0::'a) \\<Longrightarrow> \\<bar>?a1\\<bar> = - ?a1\n\ngoal (6 subgoals):\n 1. \\<And>a. (0::'a) \\<le> a \\<Longrightarrow> \\<bar>a\\<bar> = a\n 2. \\<And>a. (0::'a) < a \\<Longrightarrow> (0::'a) < inverse a\n 3. \\<And>a b.\n       \\<lbrakk>inverse a \\<le> inverse b; (0::'a) < a\\<rbrakk>\n       \\<Longrightarrow> b \\<le> a\n 4. \\<And>y z.\n       (\\<And>x. x < y \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       y \\<le> z\n 5. \\<And>a b.\n       \\<lbrakk>(0::'a) \\<le> a; (0::'a) \\<le> b\\<rbrakk>\n       \\<Longrightarrow> a \\<le> b \\<or> b \\<le> a\n 6. \\<And>x. (0::'a) \\<le> \\<bar>x\\<bar>", "show \"\\<bar>a\\<bar> = a\"\n    if \"0 \\<le> a\"\n    for a :: 'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = a", "using that"], ["proof (prove)\nusing this:\n  (0::'a) \\<le> a\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = a", "by simp"], ["proof (state)\nthis:\n  (0::'a) \\<le> ?a1 \\<Longrightarrow> \\<bar>?a1\\<bar> = ?a1\n\ngoal (5 subgoals):\n 1. \\<And>a. (0::'a) < a \\<Longrightarrow> (0::'a) < inverse a\n 2. \\<And>a b.\n       \\<lbrakk>inverse a \\<le> inverse b; (0::'a) < a\\<rbrakk>\n       \\<Longrightarrow> b \\<le> a\n 3. \\<And>y z.\n       (\\<And>x. x < y \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       y \\<le> z\n 4. \\<And>a b.\n       \\<lbrakk>(0::'a) \\<le> a; (0::'a) \\<le> b\\<rbrakk>\n       \\<Longrightarrow> a \\<le> b \\<or> b \\<le> a\n 5. \\<And>x. (0::'a) \\<le> \\<bar>x\\<bar>", "show \"0 < inverse a\"\n    if \"0 < a\"\n    for a :: 'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) < inverse a", "using that"], ["proof (prove)\nusing this:\n  (0::'a) < a\n\ngoal (1 subgoal):\n 1. (0::'a) < inverse a", "by simp"], ["proof (state)\nthis:\n  (0::'a) < ?a1 \\<Longrightarrow> (0::'a) < inverse ?a1\n\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>inverse a \\<le> inverse b; (0::'a) < a\\<rbrakk>\n       \\<Longrightarrow> b \\<le> a\n 2. \\<And>y z.\n       (\\<And>x. x < y \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       y \\<le> z\n 3. \\<And>a b.\n       \\<lbrakk>(0::'a) \\<le> a; (0::'a) \\<le> b\\<rbrakk>\n       \\<Longrightarrow> a \\<le> b \\<or> b \\<le> a\n 4. \\<And>x. (0::'a) \\<le> \\<bar>x\\<bar>", "show \"b \\<le> a\"\n    if \"inverse a \\<le> inverse b\"\n      and \"0 < a\"\n    for a :: 'a\n      and b"], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<le> a", "using that"], ["proof (prove)\nusing this:\n  inverse a \\<le> inverse b\n  (0::'a) < a\n\ngoal (1 subgoal):\n 1. b \\<le> a", "using local.inverse_le_imp_le"], ["proof (prove)\nusing this:\n  inverse a \\<le> inverse b\n  (0::'a) < a\n  \\<lbrakk>inverse ?a \\<le> inverse ?b; (0::'a) < ?a\\<rbrakk>\n  \\<Longrightarrow> ?b \\<le> ?a\n\ngoal (1 subgoal):\n 1. b \\<le> a", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>inverse ?a1 \\<le> inverse ?b1; (0::'a) < ?a1\\<rbrakk>\n  \\<Longrightarrow> ?b1 \\<le> ?a1\n\ngoal (3 subgoals):\n 1. \\<And>y z.\n       (\\<And>x. x < y \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       y \\<le> z\n 2. \\<And>a b.\n       \\<lbrakk>(0::'a) \\<le> a; (0::'a) \\<le> b\\<rbrakk>\n       \\<Longrightarrow> a \\<le> b \\<or> b \\<le> a\n 3. \\<And>x. (0::'a) \\<le> \\<bar>x\\<bar>", "show \"y \\<le> z\"\n    if \"\\<And>x::'a. x < y \\<Longrightarrow> x \\<le> z\"\n    for y\n      and z"], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<le> z", "using that"], ["proof (prove)\nusing this:\n  ?x1 < y \\<Longrightarrow> ?x1 \\<le> z\n\ngoal (1 subgoal):\n 1. y \\<le> z", "using local.dense_le"], ["proof (prove)\nusing this:\n  ?x1 < y \\<Longrightarrow> ?x1 \\<le> z\n  (\\<And>x. x < ?y \\<Longrightarrow> x \\<le> ?z) \\<Longrightarrow>\n  ?y \\<le> ?z\n\ngoal (1 subgoal):\n 1. y \\<le> z", "by blast"], ["proof (state)\nthis:\n  (\\<And>x. x < ?y1 \\<Longrightarrow> x \\<le> ?z1) \\<Longrightarrow>\n  ?y1 \\<le> ?z1\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>(0::'a) \\<le> a; (0::'a) \\<le> b\\<rbrakk>\n       \\<Longrightarrow> a \\<le> b \\<or> b \\<le> a\n 2. \\<And>x. (0::'a) \\<le> \\<bar>x\\<bar>", "show \"a \\<le> b \\<or> b \\<le> a\"\n    if \"0 \\<le> a\"\n      and \"0 \\<le> b\"\n    for a :: 'a\n      and b"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> b \\<or> b \\<le> a", "using that"], ["proof (prove)\nusing this:\n  (0::'a) \\<le> a\n  (0::'a) \\<le> b\n\ngoal (1 subgoal):\n 1. a \\<le> b \\<or> b \\<le> a", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>(0::'a) \\<le> ?a1; (0::'a) \\<le> ?b1\\<rbrakk>\n  \\<Longrightarrow> ?a1 \\<le> ?b1 \\<or> ?b1 \\<le> ?a1\n\ngoal (1 subgoal):\n 1. \\<And>x. (0::'a) \\<le> \\<bar>x\\<bar>", "show \"0 \\<le> \\<bar>x\\<bar>\"\n    for x :: 'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> \\<bar>x\\<bar>", "by simp"], ["proof (state)\nthis:\n  (0::'a) \\<le> \\<bar>?x1\\<bar>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma comparable:\n  assumes h1: \"a \\<le> c \\<or> a \\<ge> c\"\n    and h2: \"b \\<le> c \\<or> b \\<ge> c\"\n  shows \"a \\<le> b \\<or> b \\<le> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> b \\<or> b \\<le> a", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<le> b \\<or> b \\<le> a", "have \"a \\<le> b\"\n    if t1: \"\\<not> b \\<le> a\" and t2: \"a \\<le> c\" and t3: \"b \\<le> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> b", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<le> b", "have \"0 \\<le> c-a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> c - a", "by (simp add: t2)"], ["proof (state)\nthis:\n  (0::'a) \\<le> c - a\n\ngoal (1 subgoal):\n 1. a \\<le> b", "moreover"], ["proof (state)\nthis:\n  (0::'a) \\<le> c - a\n\ngoal (1 subgoal):\n 1. a \\<le> b", "have \"0 \\<le> c-b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> c - b", "by (simp add: t3)"], ["proof (state)\nthis:\n  (0::'a) \\<le> c - b\n\ngoal (1 subgoal):\n 1. a \\<le> b", "ultimately"], ["proof (chain)\npicking this:\n  (0::'a) \\<le> c - a\n  (0::'a) \\<le> c - b", "have \"c-a \\<le> c-b \\<or> c-a \\<ge> c-b\""], ["proof (prove)\nusing this:\n  (0::'a) \\<le> c - a\n  (0::'a) \\<le> c - b\n\ngoal (1 subgoal):\n 1. c - a \\<le> c - b \\<or> c - b \\<le> c - a", "by (rule nn_comparable)"], ["proof (state)\nthis:\n  c - a \\<le> c - b \\<or> c - b \\<le> c - a\n\ngoal (1 subgoal):\n 1. a \\<le> b", "hence \"-a \\<le> -b \\<or> -a \\<ge> -b\""], ["proof (prove)\nusing this:\n  c - a \\<le> c - b \\<or> c - b \\<le> c - a\n\ngoal (1 subgoal):\n 1. - a \\<le> - b \\<or> - b \\<le> - a", "using local.add_le_imp_le_right local.uminus_add_conv_diff"], ["proof (prove)\nusing this:\n  c - a \\<le> c - b \\<or> c - b \\<le> c - a\n  ?a + ?c \\<le> ?b + ?c \\<Longrightarrow> ?a \\<le> ?b\n  - ?a + ?b = ?b - ?a\n\ngoal (1 subgoal):\n 1. - a \\<le> - b \\<or> - b \\<le> - a", "by presburger"], ["proof (state)\nthis:\n  - a \\<le> - b \\<or> - b \\<le> - a\n\ngoal (1 subgoal):\n 1. a \\<le> b", "thus ?thesis"], ["proof (prove)\nusing this:\n  - a \\<le> - b \\<or> - b \\<le> - a\n\ngoal (1 subgoal):\n 1. a \\<le> b", "by (simp add: t1)"], ["proof (state)\nthis:\n  a \\<le> b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>\\<not> b \\<le> a; a \\<le> c; b \\<le> c\\<rbrakk>\n  \\<Longrightarrow> a \\<le> b\n\ngoal (1 subgoal):\n 1. a \\<le> b \\<or> b \\<le> a", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>\\<not> b \\<le> a; a \\<le> c; b \\<le> c\\<rbrakk>\n  \\<Longrightarrow> a \\<le> b\n\ngoal (1 subgoal):\n 1. a \\<le> b \\<or> b \\<le> a", "have \"a \\<le> b\"\n    if t1: \"\\<not> b \\<le> a\" and t2: \"c \\<le> a\" and t3: \"b \\<le> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> b", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<le> b", "have \"b \\<le> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<le> a", "using local.dual_order.trans t2 t3"], ["proof (prove)\nusing this:\n  \\<lbrakk>?b \\<le> ?a; ?c \\<le> ?b\\<rbrakk> \\<Longrightarrow> ?c \\<le> ?a\n  c \\<le> a\n  b \\<le> c\n\ngoal (1 subgoal):\n 1. b \\<le> a", "by blast"], ["proof (state)\nthis:\n  b \\<le> a\n\ngoal (1 subgoal):\n 1. a \\<le> b", "thus ?thesis"], ["proof (prove)\nusing this:\n  b \\<le> a\n\ngoal (1 subgoal):\n 1. a \\<le> b", "using t1"], ["proof (prove)\nusing this:\n  b \\<le> a\n  \\<not> b \\<le> a\n\ngoal (1 subgoal):\n 1. a \\<le> b", "by auto"], ["proof (state)\nthis:\n  a \\<le> b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>\\<not> b \\<le> a; c \\<le> a; b \\<le> c\\<rbrakk>\n  \\<Longrightarrow> a \\<le> b\n\ngoal (1 subgoal):\n 1. a \\<le> b \\<or> b \\<le> a", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>\\<not> b \\<le> a; c \\<le> a; b \\<le> c\\<rbrakk>\n  \\<Longrightarrow> a \\<le> b\n\ngoal (1 subgoal):\n 1. a \\<le> b \\<or> b \\<le> a", "have \"a \\<le> b\"\n    if t1: \"\\<not> b \\<le> a\" and t2: \"c \\<le> a\" and t3: \"c \\<le> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> b", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<le> b", "have \"0 \\<le> a-c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> a - c", "by (simp add: t2)"], ["proof (state)\nthis:\n  (0::'a) \\<le> a - c\n\ngoal (1 subgoal):\n 1. a \\<le> b", "moreover"], ["proof (state)\nthis:\n  (0::'a) \\<le> a - c\n\ngoal (1 subgoal):\n 1. a \\<le> b", "have \"0 \\<le> b-c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> b - c", "by (simp add: t3)"], ["proof (state)\nthis:\n  (0::'a) \\<le> b - c\n\ngoal (1 subgoal):\n 1. a \\<le> b", "ultimately"], ["proof (chain)\npicking this:\n  (0::'a) \\<le> a - c\n  (0::'a) \\<le> b - c", "have \"a-c \\<le> b-c \\<or> a-c \\<ge> b-c\""], ["proof (prove)\nusing this:\n  (0::'a) \\<le> a - c\n  (0::'a) \\<le> b - c\n\ngoal (1 subgoal):\n 1. a - c \\<le> b - c \\<or> b - c \\<le> a - c", "by (rule nn_comparable)"], ["proof (state)\nthis:\n  a - c \\<le> b - c \\<or> b - c \\<le> a - c\n\ngoal (1 subgoal):\n 1. a \\<le> b", "hence \"a \\<le> b \\<or> a \\<ge> b\""], ["proof (prove)\nusing this:\n  a - c \\<le> b - c \\<or> b - c \\<le> a - c\n\ngoal (1 subgoal):\n 1. a \\<le> b \\<or> b \\<le> a", "by (simp add: local.le_diff_eq)"], ["proof (state)\nthis:\n  a \\<le> b \\<or> b \\<le> a\n\ngoal (1 subgoal):\n 1. a \\<le> b", "thus ?thesis"], ["proof (prove)\nusing this:\n  a \\<le> b \\<or> b \\<le> a\n\ngoal (1 subgoal):\n 1. a \\<le> b", "by (simp add: t1)"], ["proof (state)\nthis:\n  a \\<le> b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>\\<not> b \\<le> a; c \\<le> a; c \\<le> b\\<rbrakk>\n  \\<Longrightarrow> a \\<le> b\n\ngoal (1 subgoal):\n 1. a \\<le> b \\<or> b \\<le> a", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<not> b \\<le> a; a \\<le> c; b \\<le> c\\<rbrakk>\n  \\<Longrightarrow> a \\<le> b\n  \\<lbrakk>\\<not> b \\<le> a; c \\<le> a; b \\<le> c\\<rbrakk>\n  \\<Longrightarrow> a \\<le> b\n  \\<lbrakk>\\<not> b \\<le> a; c \\<le> a; c \\<le> b\\<rbrakk>\n  \\<Longrightarrow> a \\<le> b", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<not> b \\<le> a; a \\<le> c; b \\<le> c\\<rbrakk>\n  \\<Longrightarrow> a \\<le> b\n  \\<lbrakk>\\<not> b \\<le> a; c \\<le> a; b \\<le> c\\<rbrakk>\n  \\<Longrightarrow> a \\<le> b\n  \\<lbrakk>\\<not> b \\<le> a; c \\<le> a; c \\<le> b\\<rbrakk>\n  \\<Longrightarrow> a \\<le> b\n\ngoal (1 subgoal):\n 1. a \\<le> b \\<or> b \\<le> a", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<not> b \\<le> a; a \\<le> c; b \\<le> c\\<rbrakk>\n  \\<Longrightarrow> a \\<le> b\n  \\<lbrakk>\\<not> b \\<le> a; c \\<le> a; b \\<le> c\\<rbrakk>\n  \\<Longrightarrow> a \\<le> b\n  \\<lbrakk>\\<not> b \\<le> a; c \\<le> a; c \\<le> b\\<rbrakk>\n  \\<Longrightarrow> a \\<le> b\n  a \\<le> c \\<or> c \\<le> a\n  b \\<le> c \\<or> c \\<le> b\n\ngoal (1 subgoal):\n 1. a \\<le> b \\<or> b \\<le> a", "by auto"], ["proof (state)\nthis:\n  a \\<le> b \\<or> b \\<le> a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma negative_imp_inverse_negative:\n  \"a < 0 \\<Longrightarrow> inverse a < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a < (0::'a) \\<Longrightarrow> inverse a < (0::'a)", "by (insert positive_imp_inverse_positive [of \"-a\"],\n      simp add: nonzero_inverse_minus_eq less_imp_not_eq)"], ["", "lemma inverse_positive_imp_positive:\n  assumes inv_gt_0: \"0 < inverse a\" and nz: \"a \\<noteq> 0\"\n  shows \"0 < a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) < a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (0::'a) < a", "have \"0 < inverse (inverse a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) < inverse (inverse a)", "using inv_gt_0"], ["proof (prove)\nusing this:\n  (0::'a) < inverse a\n\ngoal (1 subgoal):\n 1. (0::'a) < inverse (inverse a)", "by (rule positive_imp_inverse_positive)"], ["proof (state)\nthis:\n  (0::'a) < inverse (inverse a)\n\ngoal (1 subgoal):\n 1. (0::'a) < a", "thus \"0 < a\""], ["proof (prove)\nusing this:\n  (0::'a) < inverse (inverse a)\n\ngoal (1 subgoal):\n 1. (0::'a) < a", "using nz"], ["proof (prove)\nusing this:\n  (0::'a) < inverse (inverse a)\n  a \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. (0::'a) < a", "by (simp add: nonzero_inverse_inverse_eq)"], ["proof (state)\nthis:\n  (0::'a) < a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inverse_negative_imp_negative:\n  assumes inv_less_0: \"inverse a < 0\" and nz: \"a \\<noteq> 0\"\n  shows \"a < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a < (0::'a)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. a < (0::'a)", "have \"inverse (inverse a) < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inverse (inverse a) < (0::'a)", "using inv_less_0"], ["proof (prove)\nusing this:\n  inverse a < (0::'a)\n\ngoal (1 subgoal):\n 1. inverse (inverse a) < (0::'a)", "by (rule negative_imp_inverse_negative)"], ["proof (state)\nthis:\n  inverse (inverse a) < (0::'a)\n\ngoal (1 subgoal):\n 1. a < (0::'a)", "thus \"a < 0\""], ["proof (prove)\nusing this:\n  inverse (inverse a) < (0::'a)\n\ngoal (1 subgoal):\n 1. a < (0::'a)", "using nz"], ["proof (prove)\nusing this:\n  inverse (inverse a) < (0::'a)\n  a \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. a < (0::'a)", "by (simp add: nonzero_inverse_inverse_eq)"], ["proof (state)\nthis:\n  a < (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma linordered_field_no_lb:\n  \"\\<forall>x. \\<exists>y. y < x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. \\<exists>y. y < x", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. \\<exists>y. y < x", "fix x::'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. \\<exists>y. y < x", "have m1: \"- (1::'a) < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (1::'a) < (0::'a)", "by simp"], ["proof (state)\nthis:\n  - (1::'a) < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>x. \\<exists>y. y < x", "from add_strict_right_mono[OF m1, where c=x]"], ["proof (chain)\npicking this:\n  - (1::'a) + x < (0::'a) + x", "have \"(- 1) + x < x\""], ["proof (prove)\nusing this:\n  - (1::'a) + x < (0::'a) + x\n\ngoal (1 subgoal):\n 1. - (1::'a) + x < x", "by simp"], ["proof (state)\nthis:\n  - (1::'a) + x < x\n\ngoal (1 subgoal):\n 1. \\<And>x. \\<exists>y. y < x", "thus \"\\<exists>y. y < x\""], ["proof (prove)\nusing this:\n  - (1::'a) + x < x\n\ngoal (1 subgoal):\n 1. \\<exists>y. y < x", "by blast"], ["proof (state)\nthis:\n  \\<exists>y. y < x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma linordered_field_no_ub:\n  \"\\<forall>x. \\<exists>y. y > x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. \\<exists>y. x < y", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. \\<exists>y. x < y", "fix x::'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. \\<exists>y. x < y", "have m1: \" (1::'a) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) < (1::'a)", "by simp"], ["proof (state)\nthis:\n  (0::'a) < (1::'a)\n\ngoal (1 subgoal):\n 1. \\<And>x. \\<exists>y. x < y", "from add_strict_right_mono[OF m1, where c=x]"], ["proof (chain)\npicking this:\n  (0::'a) + x < (1::'a) + x", "have \"1 + x > x\""], ["proof (prove)\nusing this:\n  (0::'a) + x < (1::'a) + x\n\ngoal (1 subgoal):\n 1. x < (1::'a) + x", "by simp"], ["proof (state)\nthis:\n  x < (1::'a) + x\n\ngoal (1 subgoal):\n 1. \\<And>x. \\<exists>y. x < y", "thus \"\\<exists>y. y > x\""], ["proof (prove)\nusing this:\n  x < (1::'a) + x\n\ngoal (1 subgoal):\n 1. \\<exists>y. x < y", "by blast"], ["proof (state)\nthis:\n  \\<exists>y. x < y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma less_imp_inverse_less:\n  assumes less: \"a < b\" and apos:  \"0 < a\"\n  shows \"inverse b < inverse a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inverse b < inverse a", "using assms"], ["proof (prove)\nusing this:\n  a < b\n  (0::'a) < a\n\ngoal (1 subgoal):\n 1. inverse b < inverse a", "by (metis local.dual_order.strict_iff_order \n      local.inverse_inverse_eq local.inverse_le_imp_le local.positive_imp_inverse_positive)"], ["", "lemma inverse_less_imp_less:\n  \"inverse a < inverse b \\<Longrightarrow> 0 < a \\<Longrightarrow> b < a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>inverse a < inverse b; (0::'a) < a\\<rbrakk>\n    \\<Longrightarrow> b < a", "using local.inverse_le_imp_le local.order.strict_iff_order"], ["proof (prove)\nusing this:\n  \\<lbrakk>inverse ?a \\<le> inverse ?b; (0::'a) < ?a\\<rbrakk>\n  \\<Longrightarrow> ?b \\<le> ?a\n  (?a < ?b) = (?a \\<le> ?b \\<and> ?a \\<noteq> ?b)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>inverse a < inverse b; (0::'a) < a\\<rbrakk>\n    \\<Longrightarrow> b < a", "by blast"], ["", "text\\<open>Both premises are essential. Consider -1 and 1.\\<close>"], ["", "lemma inverse_less_iff_less [simp]:\n  \"0 < a \\<Longrightarrow> 0 < b \\<Longrightarrow> inverse a < inverse b \\<longleftrightarrow> b < a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) < a; (0::'a) < b\\<rbrakk>\n    \\<Longrightarrow> (inverse a < inverse b) = (b < a)", "by (blast intro: less_imp_inverse_less dest: inverse_less_imp_less)"], ["", "lemma le_imp_inverse_le:\n  \"a \\<le> b \\<Longrightarrow> 0 < a \\<Longrightarrow> inverse b \\<le> inverse a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; (0::'a) < a\\<rbrakk>\n    \\<Longrightarrow> inverse b \\<le> inverse a", "by (force simp add: le_less less_imp_inverse_less)"], ["", "lemma inverse_le_iff_le [simp]:\n  \"0 < a \\<Longrightarrow> 0 < b \\<Longrightarrow> inverse a \\<le> inverse b \\<longleftrightarrow> b \\<le> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) < a; (0::'a) < b\\<rbrakk>\n    \\<Longrightarrow> (inverse a \\<le> inverse b) = (b \\<le> a)", "by (blast intro: le_imp_inverse_le dest: inverse_le_imp_le)"], ["", "text\\<open>These results refer to both operands being negative.  The opposite-sign\ncase is trivial, since inverse preserves signs.\\<close>"], ["", "lemma inverse_le_imp_le_neg:\n  \"inverse a \\<le> inverse b \\<Longrightarrow> b < 0 \\<Longrightarrow> b \\<le> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>inverse a \\<le> inverse b; b < (0::'a)\\<rbrakk>\n    \\<Longrightarrow> b \\<le> a", "by (metis local.inverse_le_imp_le local.inverse_minus_eq local.neg_0_less_iff_less \n      local.neg_le_iff_le)"], ["", "lemma inverse_less_imp_less_neg:\n  \"inverse a < inverse b \\<Longrightarrow> b < 0 \\<Longrightarrow> b < a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>inverse a < inverse b; b < (0::'a)\\<rbrakk>\n    \\<Longrightarrow> b < a", "using local.dual_order.strict_iff_order local.inverse_le_imp_le_neg"], ["proof (prove)\nusing this:\n  (?b < ?a) = (?b \\<le> ?a \\<and> ?a \\<noteq> ?b)\n  \\<lbrakk>inverse ?a \\<le> inverse ?b; ?b < (0::'a)\\<rbrakk>\n  \\<Longrightarrow> ?b \\<le> ?a\n\ngoal (1 subgoal):\n 1. \\<lbrakk>inverse a < inverse b; b < (0::'a)\\<rbrakk>\n    \\<Longrightarrow> b < a", "by blast"], ["", "lemma inverse_less_iff_less_neg [simp]:\n  \"a < 0 \\<Longrightarrow> b < 0 \\<Longrightarrow> inverse a < inverse b \\<longleftrightarrow> b < a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a < (0::'a); b < (0::'a)\\<rbrakk>\n    \\<Longrightarrow> (inverse a < inverse b) = (b < a)", "by (metis local.antisym_conv2 local.inverse_less_imp_less_neg local.negative_imp_inverse_negative \n      local.nonzero_inverse_inverse_eq local.order.strict_implies_order)"], ["", "lemma le_imp_inverse_le_neg:\n  \"a \\<le> b \\<Longrightarrow> b < 0 \\<Longrightarrow> inverse b \\<le> inverse a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; b < (0::'a)\\<rbrakk>\n    \\<Longrightarrow> inverse b \\<le> inverse a", "by (force simp add: le_less less_imp_inverse_less_neg)"], ["", "lemma inverse_le_iff_le_neg [simp]:\n  \"a < 0 \\<Longrightarrow> b < 0 \\<Longrightarrow> inverse a \\<le> inverse b \\<longleftrightarrow> b \\<le> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a < (0::'a); b < (0::'a)\\<rbrakk>\n    \\<Longrightarrow> (inverse a \\<le> inverse b) = (b \\<le> a)", "by (blast intro: le_imp_inverse_le_neg dest: inverse_le_imp_le_neg)"], ["", "lemma one_less_inverse:\n  \"0 < a \\<Longrightarrow> a < 1 \\<Longrightarrow> 1 < inverse a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) < a; a < (1::'a)\\<rbrakk>\n    \\<Longrightarrow> (1::'a) < inverse a", "using less_imp_inverse_less [of a 1, unfolded inverse_1]"], ["proof (prove)\nusing this:\n  \\<lbrakk>a < (1::'a); (0::'a) < a\\<rbrakk>\n  \\<Longrightarrow> (1::'a) < inverse a\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) < a; a < (1::'a)\\<rbrakk>\n    \\<Longrightarrow> (1::'a) < inverse a", "."], ["", "lemma one_le_inverse:\n  \"0 < a \\<Longrightarrow> a \\<le> 1 \\<Longrightarrow> 1 \\<le> inverse a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) < a; a \\<le> (1::'a)\\<rbrakk>\n    \\<Longrightarrow> (1::'a) \\<le> inverse a", "using le_imp_inverse_le [of a 1, unfolded inverse_1]"], ["proof (prove)\nusing this:\n  \\<lbrakk>a \\<le> (1::'a); (0::'a) < a\\<rbrakk>\n  \\<Longrightarrow> (1::'a) \\<le> inverse a\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) < a; a \\<le> (1::'a)\\<rbrakk>\n    \\<Longrightarrow> (1::'a) \\<le> inverse a", "."], ["", "lemma pos_le_divide_eq [field_simps]:\n  assumes \"0 < c\"\n  shows \"a \\<le> b / c \\<longleftrightarrow> a * c \\<le> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<le> b / c) = (a * c \\<le> b)", "using assms"], ["proof (prove)\nusing this:\n  (0::'a) < c\n\ngoal (1 subgoal):\n 1. (a \\<le> b / c) = (a * c \\<le> b)", "by (metis local.divide_eq_imp local.divide_inverse_commute \n      local.dual_order.order_iff_strict local.dual_order.strict_iff_order \n      local.mult_right_mono local.mult_strict_left_mono local.nonzero_divide_eq_eq \n      local.order.strict_implies_order local.positive_imp_inverse_positive)"], ["", "lemma pos_less_divide_eq [field_simps]:\n  assumes \"0 < c\"\n  shows \"a < b / c \\<longleftrightarrow> a * c < b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a < b / c) = (a * c < b)", "using assms local.dual_order.strict_iff_order local.nonzero_divide_eq_eq local.pos_le_divide_eq"], ["proof (prove)\nusing this:\n  (0::'a) < c\n  (?b < ?a) = (?b \\<le> ?a \\<and> ?a \\<noteq> ?b)\n  ?c \\<noteq> (0::'a) \\<Longrightarrow> (?b / ?c = ?a) = (?b = ?a * ?c)\n  (0::'a) < ?c \\<Longrightarrow> (?a \\<le> ?b / ?c) = (?a * ?c \\<le> ?b)\n\ngoal (1 subgoal):\n 1. (a < b / c) = (a * c < b)", "by auto"], ["", "lemma neg_less_divide_eq [field_simps]:\n  assumes \"c < 0\"\n  shows \"a < b / c \\<longleftrightarrow> b < a * c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a < b / c) = (b < a * c)", "by (metis assms local.minus_divide_divide local.mult_minus_right local.neg_0_less_iff_less \n      local.neg_less_iff_less local.pos_less_divide_eq)"], ["", "lemma neg_le_divide_eq [field_simps]:\n  assumes \"c < 0\"\n  shows \"a \\<le> b / c \\<longleftrightarrow> b \\<le> a * c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<le> b / c) = (b \\<le> a * c)", "by (metis assms local.dual_order.order_iff_strict local.dual_order.strict_iff_order \n      local.neg_less_divide_eq local.nonzero_divide_eq_eq)"], ["", "lemma pos_divide_le_eq [field_simps]:\n  assumes \"0 < c\"\n  shows \"b / c \\<le> a \\<longleftrightarrow> b \\<le> a * c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b / c \\<le> a) = (b \\<le> a * c)", "by (metis assms local.dual_order.strict_iff_order local.nonzero_eq_divide_eq \n      local.pos_le_divide_eq)"], ["", "lemma pos_divide_less_eq [field_simps]:\n  assumes \"0 < c\"\n  shows \"b / c < a \\<longleftrightarrow> b < a * c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b / c < a) = (b < a * c)", "by (metis assms local.minus_divide_left local.mult_minus_left local.neg_less_iff_less \n      local.pos_less_divide_eq)"], ["", "lemma neg_divide_le_eq [field_simps]:\n  assumes \"c < 0\"\n  shows \"b / c \\<le> a \\<longleftrightarrow> a * c \\<le> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b / c \\<le> a) = (a * c \\<le> b)", "by (metis assms local.minus_divide_left local.mult_minus_left local.neg_le_divide_eq \n      local.neg_le_iff_le)"], ["", "lemma neg_divide_less_eq [field_simps]:\n  assumes \"c < 0\"\n  shows \"b / c < a \\<longleftrightarrow> a * c < b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b / c < a) = (a * c < b)", "using assms local.dual_order.strict_iff_order local.neg_divide_le_eq"], ["proof (prove)\nusing this:\n  c < (0::'a)\n  (?b < ?a) = (?b \\<le> ?a \\<and> ?a \\<noteq> ?b)\n  ?c < (0::'a) \\<Longrightarrow> (?b / ?c \\<le> ?a) = (?a * ?c \\<le> ?b)\n\ngoal (1 subgoal):\n 1. (b / c < a) = (a * c < b)", "by auto"], ["", "text\\<open>The following \\<open>field_simps\\<close> rules are necessary, as minus is always moved atop of\ndivision but we want to get rid of division.\\<close>"], ["", "lemma pos_le_minus_divide_eq [field_simps]: \"0 < c \\<Longrightarrow> a \\<le> - (b / c) \\<longleftrightarrow> a * c \\<le> - b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) < c \\<Longrightarrow> (a \\<le> - (b / c)) = (a * c \\<le> - b)", "unfolding minus_divide_left"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) < c \\<Longrightarrow> (a \\<le> - b / c) = (a * c \\<le> - b)", "by (rule pos_le_divide_eq)"], ["", "lemma neg_le_minus_divide_eq [field_simps]: \"c < 0 \\<Longrightarrow> a \\<le> - (b / c) \\<longleftrightarrow> - b \\<le> a * c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c < (0::'a) \\<Longrightarrow> (a \\<le> - (b / c)) = (- b \\<le> a * c)", "unfolding minus_divide_left"], ["proof (prove)\ngoal (1 subgoal):\n 1. c < (0::'a) \\<Longrightarrow> (a \\<le> - b / c) = (- b \\<le> a * c)", "by (rule neg_le_divide_eq)"], ["", "lemma pos_less_minus_divide_eq [field_simps]: \"0 < c \\<Longrightarrow> a < - (b / c) \\<longleftrightarrow> a * c < - b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) < c \\<Longrightarrow> (a < - (b / c)) = (a * c < - b)", "unfolding minus_divide_left"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) < c \\<Longrightarrow> (a < - b / c) = (a * c < - b)", "by (rule pos_less_divide_eq)"], ["", "lemma neg_less_minus_divide_eq [field_simps]: \"c < 0 \\<Longrightarrow> a < - (b / c) \\<longleftrightarrow> - b < a * c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c < (0::'a) \\<Longrightarrow> (a < - (b / c)) = (- b < a * c)", "unfolding minus_divide_left"], ["proof (prove)\ngoal (1 subgoal):\n 1. c < (0::'a) \\<Longrightarrow> (a < - b / c) = (- b < a * c)", "by (rule neg_less_divide_eq)"], ["", "lemma pos_minus_divide_less_eq [field_simps]: \"0 < c \\<Longrightarrow> - (b / c) < a \\<longleftrightarrow> - b < a * c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) < c \\<Longrightarrow> (- (b / c) < a) = (- b < a * c)", "unfolding minus_divide_left"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) < c \\<Longrightarrow> (- b / c < a) = (- b < a * c)", "by (rule pos_divide_less_eq)"], ["", "lemma neg_minus_divide_less_eq [field_simps]: \"c < 0 \\<Longrightarrow> - (b / c) < a \\<longleftrightarrow> a * c < - b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c < (0::'a) \\<Longrightarrow> (- (b / c) < a) = (a * c < - b)", "unfolding minus_divide_left"], ["proof (prove)\ngoal (1 subgoal):\n 1. c < (0::'a) \\<Longrightarrow> (- b / c < a) = (a * c < - b)", "by (rule neg_divide_less_eq)"], ["", "lemma pos_minus_divide_le_eq [field_simps]: \"0 < c \\<Longrightarrow> - (b / c) \\<le> a \\<longleftrightarrow> - b \\<le> a * c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) < c \\<Longrightarrow> (- (b / c) \\<le> a) = (- b \\<le> a * c)", "unfolding minus_divide_left"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) < c \\<Longrightarrow> (- b / c \\<le> a) = (- b \\<le> a * c)", "by (rule pos_divide_le_eq)"], ["", "lemma neg_minus_divide_le_eq [field_simps]: \"c < 0 \\<Longrightarrow> - (b / c) \\<le> a \\<longleftrightarrow> a * c \\<le> - b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c < (0::'a) \\<Longrightarrow> (- (b / c) \\<le> a) = (a * c \\<le> - b)", "unfolding minus_divide_left"], ["proof (prove)\ngoal (1 subgoal):\n 1. c < (0::'a) \\<Longrightarrow> (- b / c \\<le> a) = (a * c \\<le> - b)", "by (rule neg_divide_le_eq)"], ["", "lemma frac_less_eq:\n  \"y \\<noteq> 0 \\<Longrightarrow> z \\<noteq> 0 \\<Longrightarrow> x / y < w / z \\<longleftrightarrow> (x * z - w * y) / (y * z) < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<noteq> (0::'a); z \\<noteq> (0::'a)\\<rbrakk>\n    \\<Longrightarrow> (x / y < w / z) =\n                      ((x * z - w * y) / (y * z) < (0::'a))", "by (subst less_iff_diff_less_0) (simp add: diff_frac_eq )"], ["", "lemma frac_le_eq:\n  \"y \\<noteq> 0 \\<Longrightarrow> z \\<noteq> 0 \\<Longrightarrow> x / y \\<le> w / z \\<longleftrightarrow> (x * z - w * y) / (y * z) \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<noteq> (0::'a); z \\<noteq> (0::'a)\\<rbrakk>\n    \\<Longrightarrow> (x / y \\<le> w / z) =\n                      ((x * z - w * y) / (y * z) \\<le> (0::'a))", "by (subst le_iff_diff_le_0) (simp add: diff_frac_eq )"], ["", "text\\<open>Lemmas \\<open>sign_simps\\<close> is a first attempt to automate proofs\nof positivity/negativity needed for \\<open>field_simps\\<close>. Have not added \\<open>sign_simps\\<close> to \\<open>field_simps\\<close> \n  because the former can lead to case explosions.\\<close>"], ["", "lemma divide_pos_pos[simp]:\n  \"0 < x \\<Longrightarrow> 0 < y \\<Longrightarrow> 0 < x / y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) < x; (0::'a) < y\\<rbrakk>\n    \\<Longrightarrow> (0::'a) < x / y", "by(simp add:field_simps)"], ["", "lemma divide_nonneg_pos:\n  \"0 \\<le> x \\<Longrightarrow> 0 < y \\<Longrightarrow> 0 \\<le> x / y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> x; (0::'a) < y\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> x / y", "by(simp add:field_simps)"], ["", "lemma divide_neg_pos:\n  \"x < 0 \\<Longrightarrow> 0 < y \\<Longrightarrow> x / y < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < (0::'a); (0::'a) < y\\<rbrakk>\n    \\<Longrightarrow> x / y < (0::'a)", "by(simp add:field_simps)"], ["", "lemma divide_nonpos_pos:\n  \"x \\<le> 0 \\<Longrightarrow> 0 < y \\<Longrightarrow> x / y \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<le> (0::'a); (0::'a) < y\\<rbrakk>\n    \\<Longrightarrow> x / y \\<le> (0::'a)", "by(simp add:field_simps)"], ["", "lemma divide_pos_neg:\n  \"0 < x \\<Longrightarrow> y < 0 \\<Longrightarrow> x / y < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) < x; y < (0::'a)\\<rbrakk>\n    \\<Longrightarrow> x / y < (0::'a)", "by(simp add:field_simps)"], ["", "lemma divide_nonneg_neg:\n  \"0 \\<le> x \\<Longrightarrow> y < 0 \\<Longrightarrow> x / y \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> x; y < (0::'a)\\<rbrakk>\n    \\<Longrightarrow> x / y \\<le> (0::'a)", "by(simp add:field_simps)"], ["", "lemma divide_neg_neg:\n  \"x < 0 \\<Longrightarrow> y < 0 \\<Longrightarrow> 0 < x / y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < (0::'a); y < (0::'a)\\<rbrakk>\n    \\<Longrightarrow> (0::'a) < x / y", "by(simp add:field_simps)"], ["", "lemma divide_nonpos_neg:\n  \"x \\<le> 0 \\<Longrightarrow> y < 0 \\<Longrightarrow> 0 \\<le> x / y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<le> (0::'a); y < (0::'a)\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> x / y", "by(simp add:field_simps)"], ["", "lemma divide_strict_right_mono:\n  \"a < b \\<Longrightarrow> 0 < c \\<Longrightarrow> a / c < b / c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a < b; (0::'a) < c\\<rbrakk> \\<Longrightarrow> a / c < b / c", "by (simp add: less_imp_not_eq2 divide_inverse mult_strict_right_mono\n      positive_imp_inverse_positive)"], ["", "lemma divide_strict_right_mono_neg:\n  \"b < a \\<Longrightarrow> c < 0 \\<Longrightarrow> a / c < b / c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>b < a; c < (0::'a)\\<rbrakk> \\<Longrightarrow> a / c < b / c", "by (simp add: local.neg_less_divide_eq)"], ["", "text\\<open>The last premise ensures that \\<^term>\\<open>a\\<close> and \\<^term>\\<open>b\\<close>\n      have the same sign\\<close>"], ["", "lemma divide_strict_left_mono:\n  \"b < a \\<Longrightarrow> 0 < c \\<Longrightarrow> 0 < a*b \\<Longrightarrow> c / a < c / b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>b < a; (0::'a) < c; (0::'a) < a * b\\<rbrakk>\n    \\<Longrightarrow> c / a < c / b", "by (metis local.divide_neg_pos local.dual_order.strict_iff_order local.frac_less_eq local.less_iff_diff_less_0 local.mult_not_zero local.mult_strict_left_mono)"], ["", "lemma divide_left_mono:\n  \"b \\<le> a \\<Longrightarrow> 0 \\<le> c \\<Longrightarrow> 0 < a*b \\<Longrightarrow> c / a \\<le> c / b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>b \\<le> a; (0::'a) \\<le> c; (0::'a) < a * b\\<rbrakk>\n    \\<Longrightarrow> c / a \\<le> c / b", "using local.divide_cancel_left local.divide_strict_left_mono local.dual_order.order_iff_strict"], ["proof (prove)\nusing this:\n  (?c / ?a = ?c / ?b) = (?c = (0::'a) \\<or> ?a = ?b)\n  \\<lbrakk>?b < ?a; (0::'a) < ?c; (0::'a) < ?a * ?b\\<rbrakk>\n  \\<Longrightarrow> ?c / ?a < ?c / ?b\n  (?b \\<le> ?a) = (?b < ?a \\<or> ?a = ?b)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b \\<le> a; (0::'a) \\<le> c; (0::'a) < a * b\\<rbrakk>\n    \\<Longrightarrow> c / a \\<le> c / b", "by auto"], ["", "lemma divide_strict_left_mono_neg:\n  \"a < b \\<Longrightarrow> c < 0 \\<Longrightarrow> 0 < a*b \\<Longrightarrow> c / a < c / b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a < b; c < (0::'a); (0::'a) < a * b\\<rbrakk>\n    \\<Longrightarrow> c / a < c / b", "by (metis local.divide_strict_left_mono local.minus_divide_left local.neg_0_less_iff_less local.neg_less_iff_less mult_commute)"], ["", "lemma mult_imp_div_pos_le: \"0 < y \\<Longrightarrow> x \\<le> z * y \\<Longrightarrow> x / y \\<le> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) < y; x \\<le> z * y\\<rbrakk>\n    \\<Longrightarrow> x / y \\<le> z", "by (subst pos_divide_le_eq, assumption+)"], ["", "lemma mult_imp_le_div_pos: \"0 < y \\<Longrightarrow> z * y \\<le> x \\<Longrightarrow> z \\<le> x / y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) < y; z * y \\<le> x\\<rbrakk>\n    \\<Longrightarrow> z \\<le> x / y", "by(simp add:field_simps)"], ["", "lemma mult_imp_div_pos_less: \"0 < y \\<Longrightarrow> x < z * y \\<Longrightarrow> x / y < z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) < y; x < z * y\\<rbrakk> \\<Longrightarrow> x / y < z", "by(simp add:field_simps)"], ["", "lemma mult_imp_less_div_pos: \"0 < y \\<Longrightarrow> z * y < x \\<Longrightarrow> z < x / y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) < y; z * y < x\\<rbrakk> \\<Longrightarrow> z < x / y", "by(simp add:field_simps)"], ["", "lemma frac_le: \"0 \\<le> x \\<Longrightarrow> x \\<le> y \\<Longrightarrow> 0 < w \\<Longrightarrow> w \\<le> z  \\<Longrightarrow> x / z \\<le> y / w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> x; x \\<le> y; (0::'a) < w; w \\<le> z\\<rbrakk>\n    \\<Longrightarrow> x / z \\<le> y / w", "using local.mult_imp_div_pos_le local.mult_imp_le_div_pos local.mult_mono"], ["proof (prove)\nusing this:\n  \\<lbrakk>(0::'a) < ?y; ?x \\<le> ?z * ?y\\<rbrakk>\n  \\<Longrightarrow> ?x / ?y \\<le> ?z\n  \\<lbrakk>(0::'a) < ?y; ?z * ?y \\<le> ?x\\<rbrakk>\n  \\<Longrightarrow> ?z \\<le> ?x / ?y\n  \\<lbrakk>?a \\<le> ?b; ?c \\<le> ?d; (0::'a) \\<le> ?b;\n   (0::'a) \\<le> ?c\\<rbrakk>\n  \\<Longrightarrow> ?a * ?c \\<le> ?b * ?d\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> x; x \\<le> y; (0::'a) < w; w \\<le> z\\<rbrakk>\n    \\<Longrightarrow> x / z \\<le> y / w", "by auto"], ["", "lemma frac_less: \"0 \\<le> x \\<Longrightarrow> x < y \\<Longrightarrow> 0 < w \\<Longrightarrow> w \\<le> z \\<Longrightarrow> x / z < y / w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> x; x < y; (0::'a) < w; w \\<le> z\\<rbrakk>\n    \\<Longrightarrow> x / z < y / w", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> x; x < y; (0::'a) < w; w \\<le> z\\<rbrakk>\n    \\<Longrightarrow> x / z < y / w", "assume a1: \"w \\<le> z\""], ["proof (state)\nthis:\n  w \\<le> z\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> x; x < y; (0::'a) < w; w \\<le> z\\<rbrakk>\n    \\<Longrightarrow> x / z < y / w", "assume a2: \"0 < w\""], ["proof (state)\nthis:\n  (0::'a) < w\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> x; x < y; (0::'a) < w; w \\<le> z\\<rbrakk>\n    \\<Longrightarrow> x / z < y / w", "assume a3: \"0 \\<le> x\""], ["proof (state)\nthis:\n  (0::'a) \\<le> x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> x; x < y; (0::'a) < w; w \\<le> z\\<rbrakk>\n    \\<Longrightarrow> x / z < y / w", "assume a4: \"x < y\""], ["proof (state)\nthis:\n  x < y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> x; x < y; (0::'a) < w; w \\<le> z\\<rbrakk>\n    \\<Longrightarrow> x / z < y / w", "have f5: \"a = 0 \\<or> (b = c / a) = (b * a = c)\"\n    for a b c::'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. a = (0::'a) \\<or> (b = c / a) = (b * a = c)", "by (meson local.nonzero_eq_divide_eq)"], ["proof (state)\nthis:\n  ?a1 = (0::'a) \\<or> (?b1 = ?c1 / ?a1) = (?b1 * ?a1 = ?c1)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> x; x < y; (0::'a) < w; w \\<le> z\\<rbrakk>\n    \\<Longrightarrow> x / z < y / w", "have f6: \"0 < z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) < z", "using a2 a1"], ["proof (prove)\nusing this:\n  (0::'a) < w\n  w \\<le> z\n\ngoal (1 subgoal):\n 1. (0::'a) < z", "by (meson local.order.ordering_axioms ordering.strict_trans2)"], ["proof (state)\nthis:\n  (0::'a) < z\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> x; x < y; (0::'a) < w; w \\<le> z\\<rbrakk>\n    \\<Longrightarrow> x / z < y / w", "have \"z \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<noteq> (0::'a)", "using a2 a1"], ["proof (prove)\nusing this:\n  (0::'a) < w\n  w \\<le> z\n\ngoal (1 subgoal):\n 1. z \\<noteq> (0::'a)", "by (meson local.leD)"], ["proof (state)\nthis:\n  z \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> x; x < y; (0::'a) < w; w \\<le> z\\<rbrakk>\n    \\<Longrightarrow> x / z < y / w", "moreover"], ["proof (state)\nthis:\n  z \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> x; x < y; (0::'a) < w; w \\<le> z\\<rbrakk>\n    \\<Longrightarrow> x / z < y / w", "have \"x / z \\<noteq> y / w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x / z \\<noteq> y / w", "using a1 a2 a3 a4 local.frac_eq_eq local.mult_less_le_imp_less"], ["proof (prove)\nusing this:\n  w \\<le> z\n  (0::'a) < w\n  (0::'a) \\<le> x\n  x < y\n  \\<lbrakk>?y \\<noteq> (0::'a); ?z \\<noteq> (0::'a)\\<rbrakk>\n  \\<Longrightarrow> (?x / ?y = ?w / ?z) = (?x * ?z = ?w * ?y)\n  \\<lbrakk>?a < ?b; ?c \\<le> ?d; (0::'a) \\<le> ?a; (0::'a) < ?c\\<rbrakk>\n  \\<Longrightarrow> ?a * ?c < ?b * ?d\n\ngoal (1 subgoal):\n 1. x / z \\<noteq> y / w", "by fastforce"], ["proof (state)\nthis:\n  x / z \\<noteq> y / w\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> x; x < y; (0::'a) < w; w \\<le> z\\<rbrakk>\n    \\<Longrightarrow> x / z < y / w", "ultimately"], ["proof (chain)\npicking this:\n  z \\<noteq> (0::'a)\n  x / z \\<noteq> y / w", "have \"x / z \\<noteq> y / w\""], ["proof (prove)\nusing this:\n  z \\<noteq> (0::'a)\n  x / z \\<noteq> y / w\n\ngoal (1 subgoal):\n 1. x / z \\<noteq> y / w", "using f5"], ["proof (prove)\nusing this:\n  z \\<noteq> (0::'a)\n  x / z \\<noteq> y / w\n  ?a1 = (0::'a) \\<or> (?b1 = ?c1 / ?a1) = (?b1 * ?a1 = ?c1)\n\ngoal (1 subgoal):\n 1. x / z \\<noteq> y / w", "by (metis (no_types))"], ["proof (state)\nthis:\n  x / z \\<noteq> y / w\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> x; x < y; (0::'a) < w; w \\<le> z\\<rbrakk>\n    \\<Longrightarrow> x / z < y / w", "thus ?thesis"], ["proof (prove)\nusing this:\n  x / z \\<noteq> y / w\n\ngoal (1 subgoal):\n 1. x / z < y / w", "using a4 a3 a2 a1"], ["proof (prove)\nusing this:\n  x / z \\<noteq> y / w\n  x < y\n  (0::'a) \\<le> x\n  (0::'a) < w\n  w \\<le> z\n\ngoal (1 subgoal):\n 1. x / z < y / w", "by (meson local.frac_le local.order.not_eq_order_implies_strict \n        local.order.strict_implies_order)"], ["proof (state)\nthis:\n  x / z < y / w\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma frac_less2: \"0 < x \\<Longrightarrow> x \\<le> y \\<Longrightarrow> 0 < w \\<Longrightarrow> w < z  \\<Longrightarrow> x / z < y / w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) < x; x \\<le> y; (0::'a) < w; w < z\\<rbrakk>\n    \\<Longrightarrow> x / z < y / w", "by (metis local.antisym_conv2 local.divide_cancel_left local.dual_order.strict_implies_order \n      local.frac_le local.frac_less)"], ["", "lemma less_half_sum: \"a < b \\<Longrightarrow> a < (a+b) / (1+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a < b \\<Longrightarrow> a < (a + b) / ((1::'a) + (1::'a))", "by (metis local.add_pos_pos local.add_strict_left_mono local.mult_imp_less_div_pos local.semiring_normalization_rules(4) local.zero_less_one mult_commute)"], ["", "lemma gt_half_sum: \"a < b \\<Longrightarrow> (a+b)/(1+1) < b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a < b \\<Longrightarrow> (a + b) / ((1::'a) + (1::'a)) < b", "by (metis local.add_pos_pos local.add_strict_left_mono local.mult_imp_div_pos_less local.semiring_normalization_rules(24) local.semiring_normalization_rules(4) local.zero_less_one mult_commute)"], ["", "subclass unbounded_dense_order"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.unbounded_dense_order (\\<le>) (<)", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y. x < y \\<Longrightarrow> \\<exists>z>x. z < y\n 2. \\<And>x. \\<exists>y. y < x\n 3. \\<And>x. \\<exists>y. x < y", "fix x y :: 'a"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y. x < y \\<Longrightarrow> \\<exists>z>x. z < y\n 2. \\<And>x. \\<exists>y. y < x\n 3. \\<And>x. \\<exists>y. x < y", "have less_add_one: \"a < a + 1\" for a::'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. a < a + (1::'a)", "by auto"], ["proof (state)\nthis:\n  ?a1 < ?a1 + (1::'a)\n\ngoal (3 subgoals):\n 1. \\<And>x y. x < y \\<Longrightarrow> \\<exists>z>x. z < y\n 2. \\<And>x. \\<exists>y. y < x\n 3. \\<And>x. \\<exists>y. x < y", "from less_add_one"], ["proof (chain)\npicking this:\n  ?a1 < ?a1 + (1::'a)", "show \"\\<exists>y. x < y\""], ["proof (prove)\nusing this:\n  ?a1 < ?a1 + (1::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>y. x < y", "by blast"], ["proof (state)\nthis:\n  \\<exists>y. x < y\n\ngoal (2 subgoals):\n 1. \\<And>x y. x < y \\<Longrightarrow> \\<exists>z>x. z < y\n 2. \\<And>x. \\<exists>y. y < x", "from less_add_one"], ["proof (chain)\npicking this:\n  ?a1 < ?a1 + (1::'a)", "have \"x + (- 1) < (x + 1) + (- 1)\""], ["proof (prove)\nusing this:\n  ?a1 < ?a1 + (1::'a)\n\ngoal (1 subgoal):\n 1. x + - (1::'a) < x + (1::'a) + - (1::'a)", "by (rule add_strict_right_mono)"], ["proof (state)\nthis:\n  x + - (1::'a) < x + (1::'a) + - (1::'a)\n\ngoal (2 subgoals):\n 1. \\<And>x y. x < y \\<Longrightarrow> \\<exists>z>x. z < y\n 2. \\<And>x. \\<exists>y. y < x", "hence \"x - 1 < x + 1 - 1\""], ["proof (prove)\nusing this:\n  x + - (1::'a) < x + (1::'a) + - (1::'a)\n\ngoal (1 subgoal):\n 1. x - (1::'a) < x + (1::'a) - (1::'a)", "by simp"], ["proof (state)\nthis:\n  x - (1::'a) < x + (1::'a) - (1::'a)\n\ngoal (2 subgoals):\n 1. \\<And>x y. x < y \\<Longrightarrow> \\<exists>z>x. z < y\n 2. \\<And>x. \\<exists>y. y < x", "hence \"x - 1 < x\""], ["proof (prove)\nusing this:\n  x - (1::'a) < x + (1::'a) - (1::'a)\n\ngoal (1 subgoal):\n 1. x - (1::'a) < x", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  x - (1::'a) < x\n\ngoal (2 subgoals):\n 1. \\<And>x y. x < y \\<Longrightarrow> \\<exists>z>x. z < y\n 2. \\<And>x. \\<exists>y. y < x", "thus \"\\<exists>y. y < x\""], ["proof (prove)\nusing this:\n  x - (1::'a) < x\n\ngoal (1 subgoal):\n 1. \\<exists>y. y < x", ".."], ["proof (state)\nthis:\n  \\<exists>y. y < x\n\ngoal (1 subgoal):\n 1. \\<And>x y. x < y \\<Longrightarrow> \\<exists>z>x. z < y", "show \"x < y \\<Longrightarrow> \\<exists>z>x. z < y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x < y \\<Longrightarrow> \\<exists>z>x. z < y", "by (blast intro!: less_half_sum gt_half_sum)"], ["proof (state)\nthis:\n  x < y \\<Longrightarrow> \\<exists>z>x. z < y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dense_le_bounded:\n  fixes x y z :: 'a\n  assumes \"x < y\"\n    and *: \"\\<And>w. \\<lbrakk> x < w ; w < y \\<rbrakk> \\<Longrightarrow> w \\<le> z\"\n  shows \"y \\<le> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<le> z", "proof (rule dense_le)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x < y \\<Longrightarrow> x \\<le> z", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x < y \\<Longrightarrow> x \\<le> z", "assume \"w < y\""], ["proof (state)\nthis:\n  w < y\n\ngoal (1 subgoal):\n 1. \\<And>x. x < y \\<Longrightarrow> x \\<le> z", "from dense[OF \\<open>x < y\\<close>]"], ["proof (chain)\npicking this:\n  \\<exists>z>x. z < y", "obtain u where \"x < u\" \"u < y\""], ["proof (prove)\nusing this:\n  \\<exists>z>x. z < y\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>x < u; u < y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by safe"], ["proof (state)\nthis:\n  x < u\n  u < y\n\ngoal (1 subgoal):\n 1. \\<And>x. x < y \\<Longrightarrow> x \\<le> z", "have \"u \\<le> w \\<or> w \\<le> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le> w \\<or> w \\<le> u", "using \\<open>u < y\\<close> \\<open>w < y\\<close> comparable local.order.strict_implies_order"], ["proof (prove)\nusing this:\n  u < y\n  w < y\n  \\<lbrakk>?a \\<le> ?c \\<or> ?c \\<le> ?a;\n   ?b \\<le> ?c \\<or> ?c \\<le> ?b\\<rbrakk>\n  \\<Longrightarrow> ?a \\<le> ?b \\<or> ?b \\<le> ?a\n  ?a < ?b \\<Longrightarrow> ?a \\<le> ?b\n\ngoal (1 subgoal):\n 1. u \\<le> w \\<or> w \\<le> u", "by blast"], ["proof (state)\nthis:\n  u \\<le> w \\<or> w \\<le> u\n\ngoal (1 subgoal):\n 1. \\<And>x. x < y \\<Longrightarrow> x \\<le> z", "thus \"w \\<le> z\""], ["proof (prove)\nusing this:\n  u \\<le> w \\<or> w \\<le> u\n\ngoal (1 subgoal):\n 1. w \\<le> z", "using \"*\" \\<open>u < y\\<close> \\<open>w < y\\<close> \\<open>x < u\\<close> local.dual_order.trans local.order.strict_trans2"], ["proof (prove)\nusing this:\n  u \\<le> w \\<or> w \\<le> u\n  \\<lbrakk>x < ?w1; ?w1 < y\\<rbrakk> \\<Longrightarrow> ?w1 \\<le> z\n  u < y\n  w < y\n  x < u\n  \\<lbrakk>?b \\<le> ?a; ?c \\<le> ?b\\<rbrakk> \\<Longrightarrow> ?c \\<le> ?a\n  \\<lbrakk>?a < ?b; ?b \\<le> ?c\\<rbrakk> \\<Longrightarrow> ?a < ?c\n\ngoal (1 subgoal):\n 1. w \\<le> z", "by blast"], ["proof (state)\nthis:\n  w \\<le> z\n\ngoal:\nNo subgoals!", "qed"], ["", "subclass field_abs_sgn"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.field_abs_sgn (/) inverse (*) (1::'a) (+) (0::'a) (-) uminus abs\n     sgn", ".."], ["", "lemma nonzero_abs_inverse:\n  \"a \\<noteq> 0 \\<Longrightarrow> \\<bar>inverse a\\<bar> = inverse \\<bar>a\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<noteq> (0::'a) \\<Longrightarrow>\n    \\<bar>inverse a\\<bar> = inverse \\<bar>a\\<bar>", "by (rule abs_inverse)"], ["", "lemma nonzero_abs_divide:\n  \"b \\<noteq> 0 \\<Longrightarrow> \\<bar>a / b\\<bar> = \\<bar>a\\<bar> / \\<bar>b\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<noteq> (0::'a) \\<Longrightarrow>\n    \\<bar>a / b\\<bar> = \\<bar>a\\<bar> / \\<bar>b\\<bar>", "by (rule abs_divide)"], ["", "lemma field_le_epsilon:\n  assumes e: \"\\<And>e. 0 < e \\<Longrightarrow> x \\<le> y + e\"\n  shows \"x \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y", "proof (rule dense_le)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa. xa < x \\<Longrightarrow> xa \\<le> y", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa. xa < x \\<Longrightarrow> xa \\<le> y", "assume \"t < x\""], ["proof (state)\nthis:\n  t < x\n\ngoal (1 subgoal):\n 1. \\<And>xa. xa < x \\<Longrightarrow> xa \\<le> y", "hence \"0 < x - t\""], ["proof (prove)\nusing this:\n  t < x\n\ngoal (1 subgoal):\n 1. (0::'a) < x - t", "by (simp add: less_diff_eq)"], ["proof (state)\nthis:\n  (0::'a) < x - t\n\ngoal (1 subgoal):\n 1. \\<And>xa. xa < x \\<Longrightarrow> xa \\<le> y", "from e [OF this]"], ["proof (chain)\npicking this:\n  x \\<le> y + (x - t)", "have \"x + 0 \\<le> x + (y - t)\""], ["proof (prove)\nusing this:\n  x \\<le> y + (x - t)\n\ngoal (1 subgoal):\n 1. x + (0::'a) \\<le> x + (y - t)", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  x + (0::'a) \\<le> x + (y - t)\n\ngoal (1 subgoal):\n 1. \\<And>xa. xa < x \\<Longrightarrow> xa \\<le> y", "hence \"0 \\<le> y - t\""], ["proof (prove)\nusing this:\n  x + (0::'a) \\<le> x + (y - t)\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> y - t", "by (simp only: add_le_cancel_left)"], ["proof (state)\nthis:\n  (0::'a) \\<le> y - t\n\ngoal (1 subgoal):\n 1. \\<And>xa. xa < x \\<Longrightarrow> xa \\<le> y", "thus \"t \\<le> y\""], ["proof (prove)\nusing this:\n  (0::'a) \\<le> y - t\n\ngoal (1 subgoal):\n 1. t \\<le> y", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  t \\<le> y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inverse_positive_iff_positive [simp]:\n  \"(0 < inverse a) = (0 < a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((0::'a) < inverse a) = ((0::'a) < a)", "using local.positive_imp_inverse_positive"], ["proof (prove)\nusing this:\n  (0::'a) < ?a \\<Longrightarrow> (0::'a) < inverse ?a\n\ngoal (1 subgoal):\n 1. ((0::'a) < inverse a) = ((0::'a) < a)", "by fastforce"], ["", "lemma inverse_negative_iff_negative [simp]:\n  \"(inverse a < 0) = (a < 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (inverse a < (0::'a)) = (a < (0::'a))", "using local.negative_imp_inverse_negative"], ["proof (prove)\nusing this:\n  ?a < (0::'a) \\<Longrightarrow> inverse ?a < (0::'a)\n\ngoal (1 subgoal):\n 1. (inverse a < (0::'a)) = (a < (0::'a))", "by fastforce"], ["", "lemma inverse_nonnegative_iff_nonnegative [simp]:\n  \"0 \\<le> inverse a \\<longleftrightarrow> 0 \\<le> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((0::'a) \\<le> inverse a) = ((0::'a) \\<le> a)", "by (simp add: local.dual_order.order_iff_strict)"], ["", "lemma inverse_nonpositive_iff_nonpositive [simp]:\n  \"inverse a \\<le> 0 \\<longleftrightarrow> a \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (inverse a \\<le> (0::'a)) = (a \\<le> (0::'a))", "using local.inverse_nonnegative_iff_nonnegative local.neg_0_le_iff_le"], ["proof (prove)\nusing this:\n  ((0::'a) \\<le> inverse ?a) = ((0::'a) \\<le> ?a)\n  ((0::'a) \\<le> - ?a) = (?a \\<le> (0::'a))\n\ngoal (1 subgoal):\n 1. (inverse a \\<le> (0::'a)) = (a \\<le> (0::'a))", "by fastforce"], ["", "lemma one_less_inverse_iff: \"1 < inverse x \\<longleftrightarrow> 0 < x \\<and> x < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((1::'a) < inverse x) = ((0::'a) < x \\<and> x < (1::'a))", "using less_trans[of 1 x 0 for x]"], ["proof (prove)\nusing this:\n  \\<lbrakk>(1::'a) < ?xa3; ?xa3 < (0::'a)\\<rbrakk>\n  \\<Longrightarrow> (1::'a) < (0::'a)\n\ngoal (1 subgoal):\n 1. ((1::'a) < inverse x) = ((0::'a) < x \\<and> x < (1::'a))", "by (metis local.dual_order.strict_trans local.inverse_1 local.inverse_less_imp_less local.inverse_positive_iff_positive local.one_less_inverse local.zero_less_one)"], ["", "lemma one_le_inverse_iff: \"1 \\<le> inverse x \\<longleftrightarrow> 0 < x \\<and> x \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((1::'a) \\<le> inverse x) = ((0::'a) < x \\<and> x \\<le> (1::'a))", "by (metis local.dual_order.strict_trans1 local.inverse_1 local.inverse_le_imp_le local.inverse_positive_iff_positive local.one_le_inverse local.zero_less_one)"], ["", "lemma inverse_less_1_iff: \"inverse x < 1 \\<longleftrightarrow> x \\<le> 0 \\<or> 1 < x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (inverse x < (1::'a)) = (x \\<le> (0::'a) \\<or> (1::'a) < x)", "proof (rule)"], ["proof (state)\ngoal (2 subgoals):\n 1. inverse x < (1::'a) \\<Longrightarrow> x \\<le> (0::'a) \\<or> (1::'a) < x\n 2. x \\<le> (0::'a) \\<or> (1::'a) < x \\<Longrightarrow> inverse x < (1::'a)", "assume invx1: \"inverse x < 1\""], ["proof (state)\nthis:\n  inverse x < (1::'a)\n\ngoal (2 subgoals):\n 1. inverse x < (1::'a) \\<Longrightarrow> x \\<le> (0::'a) \\<or> (1::'a) < x\n 2. x \\<le> (0::'a) \\<or> (1::'a) < x \\<Longrightarrow> inverse x < (1::'a)", "have \"inverse x \\<le> 0 \\<or> inverse x \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inverse x \\<le> (0::'a) \\<or> (0::'a) \\<le> inverse x", "using comparable invx1 local.order.strict_implies_order local.zero_less_one"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<le> ?c \\<or> ?c \\<le> ?a;\n   ?b \\<le> ?c \\<or> ?c \\<le> ?b\\<rbrakk>\n  \\<Longrightarrow> ?a \\<le> ?b \\<or> ?b \\<le> ?a\n  inverse x < (1::'a)\n  ?a < ?b \\<Longrightarrow> ?a \\<le> ?b\n  (0::'a) < (1::'a)\n\ngoal (1 subgoal):\n 1. inverse x \\<le> (0::'a) \\<or> (0::'a) \\<le> inverse x", "by blast"], ["proof (state)\nthis:\n  inverse x \\<le> (0::'a) \\<or> (0::'a) \\<le> inverse x\n\ngoal (2 subgoals):\n 1. inverse x < (1::'a) \\<Longrightarrow> x \\<le> (0::'a) \\<or> (1::'a) < x\n 2. x \\<le> (0::'a) \\<or> (1::'a) < x \\<Longrightarrow> inverse x < (1::'a)", "then"], ["proof (chain)\npicking this:\n  inverse x \\<le> (0::'a) \\<or> (0::'a) \\<le> inverse x", "consider (leq0) \"inverse x \\<le> 0\" | (pos) \"inverse x > 0\" | (zero) \"inverse x = 0\""], ["proof (prove)\nusing this:\n  inverse x \\<le> (0::'a) \\<or> (0::'a) \\<le> inverse x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>inverse x \\<le> (0::'a) \\<Longrightarrow> thesis;\n     (0::'a) < inverse x \\<Longrightarrow> thesis;\n     inverse x = (0::'a) \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using local.antisym_conv1"], ["proof (prove)\nusing this:\n  inverse x \\<le> (0::'a) \\<or> (0::'a) \\<le> inverse x\n  \\<not> ?x < ?y \\<Longrightarrow> (?x \\<le> ?y) = (?x = ?y)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>inverse x \\<le> (0::'a) \\<Longrightarrow> thesis;\n     (0::'a) < inverse x \\<Longrightarrow> thesis;\n     inverse x = (0::'a) \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>inverse x \\<le> (0::'a) \\<Longrightarrow> ?thesis1;\n   (0::'a) < inverse x \\<Longrightarrow> ?thesis1;\n   inverse x = (0::'a) \\<Longrightarrow> ?thesis1\\<rbrakk>\n  \\<Longrightarrow> ?thesis1\n\ngoal (2 subgoals):\n 1. inverse x < (1::'a) \\<Longrightarrow> x \\<le> (0::'a) \\<or> (1::'a) < x\n 2. x \\<le> (0::'a) \\<or> (1::'a) < x \\<Longrightarrow> inverse x < (1::'a)", "thus \"x \\<le> 0 \\<or> 1 < x\""], ["proof (prove)\nusing this:\n  \\<lbrakk>inverse x \\<le> (0::'a) \\<Longrightarrow> ?thesis1;\n   (0::'a) < inverse x \\<Longrightarrow> ?thesis1;\n   inverse x = (0::'a) \\<Longrightarrow> ?thesis1\\<rbrakk>\n  \\<Longrightarrow> ?thesis1\n\ngoal (1 subgoal):\n 1. x \\<le> (0::'a) \\<or> (1::'a) < x", "by (metis invx1 local.eq_iff local.inverse_1 local.inverse_less_imp_less \n        local.inverse_nonpositive_iff_nonpositive local.inverse_positive_imp_positive)"], ["proof (state)\nthis:\n  x \\<le> (0::'a) \\<or> (1::'a) < x\n\ngoal (1 subgoal):\n 1. x \\<le> (0::'a) \\<or> (1::'a) < x \\<Longrightarrow> inverse x < (1::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<le> (0::'a) \\<or> (1::'a) < x \\<Longrightarrow> inverse x < (1::'a)", "assume \"x \\<le> 0 \\<or> 1 < x\""], ["proof (state)\nthis:\n  x \\<le> (0::'a) \\<or> (1::'a) < x\n\ngoal (1 subgoal):\n 1. x \\<le> (0::'a) \\<or> (1::'a) < x \\<Longrightarrow> inverse x < (1::'a)", "then"], ["proof (chain)\npicking this:\n  x \\<le> (0::'a) \\<or> (1::'a) < x", "consider (neg) \"x \\<le> 0\" | (g1) \"1 < x\""], ["proof (prove)\nusing this:\n  x \\<le> (0::'a) \\<or> (1::'a) < x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<le> (0::'a) \\<Longrightarrow> thesis;\n     (1::'a) < x \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>x \\<le> (0::'a) \\<Longrightarrow> ?thesis1;\n   (1::'a) < x \\<Longrightarrow> ?thesis1\\<rbrakk>\n  \\<Longrightarrow> ?thesis1\n\ngoal (1 subgoal):\n 1. x \\<le> (0::'a) \\<or> (1::'a) < x \\<Longrightarrow> inverse x < (1::'a)", "thus \"inverse x < 1\""], ["proof (prove)\nusing this:\n  \\<lbrakk>x \\<le> (0::'a) \\<Longrightarrow> ?thesis1;\n   (1::'a) < x \\<Longrightarrow> ?thesis1\\<rbrakk>\n  \\<Longrightarrow> ?thesis1\n\ngoal (1 subgoal):\n 1. inverse x < (1::'a)", "by (metis local.dual_order.not_eq_order_implies_strict local.dual_order.strict_trans\n        local.inverse_1 local.inverse_negative_iff_negative local.inverse_zero \n        local.less_imp_inverse_less local.zero_less_one)"], ["proof (state)\nthis:\n  inverse x < (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inverse_le_1_iff: \"inverse x \\<le> 1 \\<longleftrightarrow> x \\<le> 0 \\<or> 1 \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (inverse x \\<le> (1::'a)) = (x \\<le> (0::'a) \\<or> (1::'a) \\<le> x)", "by (metis local.dual_order.order_iff_strict local.inverse_1 local.inverse_le_iff_le \n      local.inverse_less_1_iff local.one_le_inverse_iff)"], ["", "text\\<open>Simplify expressions such as \\<open>0 < 1/x\\<close> to \\<open>0 < x\\<close>\\<close>"], ["", "lemma zero_le_divide_1_iff [simp]:\n  \"0 \\<le> 1 / a \\<longleftrightarrow> 0 \\<le> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((0::'a) \\<le> (1::'a) / a) = ((0::'a) \\<le> a)", "using local.dual_order.order_iff_strict local.inverse_eq_divide \n    local.inverse_positive_iff_positive"], ["proof (prove)\nusing this:\n  (?b \\<le> ?a) = (?b < ?a \\<or> ?a = ?b)\n  inverse ?a = (1::'a) / ?a\n  ((0::'a) < inverse ?a) = ((0::'a) < ?a)\n\ngoal (1 subgoal):\n 1. ((0::'a) \\<le> (1::'a) / a) = ((0::'a) \\<le> a)", "by auto"], ["", "lemma zero_less_divide_1_iff [simp]:\n  \"0 < 1 / a \\<longleftrightarrow> 0 < a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((0::'a) < (1::'a) / a) = ((0::'a) < a)", "by (simp add: local.dual_order.strict_iff_order)"], ["", "lemma divide_le_0_1_iff [simp]:\n  \"1 / a \\<le> 0 \\<longleftrightarrow> a \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((1::'a) / a \\<le> (0::'a)) = (a \\<le> (0::'a))", "by (smt local.abs_0 local.abs_1 local.abs_divide local.abs_neg local.abs_nn \n      local.divide_cancel_left local.le_minus_iff local.minus_divide_right local.zero_neq_one)"], ["", "lemma divide_less_0_1_iff [simp]:\n  \"1 / a < 0 \\<longleftrightarrow> a < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((1::'a) / a < (0::'a)) = (a < (0::'a))", "using local.dual_order.strict_iff_order"], ["proof (prove)\nusing this:\n  (?b < ?a) = (?b \\<le> ?a \\<and> ?a \\<noteq> ?b)\n\ngoal (1 subgoal):\n 1. ((1::'a) / a < (0::'a)) = (a < (0::'a))", "by auto"], ["", "lemma divide_right_mono:\n  \"a \\<le> b \\<Longrightarrow> 0 \\<le> c \\<Longrightarrow> a/c \\<le> b/c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; (0::'a) \\<le> c\\<rbrakk>\n    \\<Longrightarrow> a / c \\<le> b / c", "using local.divide_cancel_right local.divide_strict_right_mono local.dual_order.order_iff_strict"], ["proof (prove)\nusing this:\n  (?a / ?c = ?b / ?c) = (?c = (0::'a) \\<or> ?a = ?b)\n  \\<lbrakk>?a < ?b; (0::'a) < ?c\\<rbrakk>\n  \\<Longrightarrow> ?a / ?c < ?b / ?c\n  (?b \\<le> ?a) = (?b < ?a \\<or> ?a = ?b)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; (0::'a) \\<le> c\\<rbrakk>\n    \\<Longrightarrow> a / c \\<le> b / c", "by blast"], ["", "lemma divide_right_mono_neg: \"a \\<le> b\n    \\<Longrightarrow> c \\<le> 0 \\<Longrightarrow> b / c \\<le> a / c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; c \\<le> (0::'a)\\<rbrakk>\n    \\<Longrightarrow> b / c \\<le> a / c", "by (metis local.divide_cancel_right local.divide_strict_right_mono_neg local.dual_order.strict_implies_order local.eq_refl local.le_imp_less_or_eq)"], ["", "lemma divide_left_mono_neg: \"a \\<le> b\n    \\<Longrightarrow> c \\<le> 0 \\<Longrightarrow> 0 < a * b \\<Longrightarrow> c / a \\<le> c / b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; c \\<le> (0::'a); (0::'a) < a * b\\<rbrakk>\n    \\<Longrightarrow> c / a \\<le> c / b", "by (metis local.divide_left_mono local.minus_divide_left local.neg_0_le_iff_le local.neg_le_iff_le mult_commute)"], ["", "lemma divide_nonneg_nonneg [simp]:\n  \"0 \\<le> x \\<Longrightarrow> 0 \\<le> y \\<Longrightarrow> 0 \\<le> x / y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> x; (0::'a) \\<le> y\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> x / y", "using local.divide_eq_0_iff local.divide_nonneg_pos local.dual_order.order_iff_strict"], ["proof (prove)\nusing this:\n  (?a / ?b = (0::'a)) = (?a = (0::'a) \\<or> ?b = (0::'a))\n  \\<lbrakk>(0::'a) \\<le> ?x; (0::'a) < ?y\\<rbrakk>\n  \\<Longrightarrow> (0::'a) \\<le> ?x / ?y\n  (?b \\<le> ?a) = (?b < ?a \\<or> ?a = ?b)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> x; (0::'a) \\<le> y\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> x / y", "by blast"], ["", "lemma divide_nonpos_nonpos:\n  \"x \\<le> 0 \\<Longrightarrow> y \\<le> 0 \\<Longrightarrow> 0 \\<le> x / y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<le> (0::'a); y \\<le> (0::'a)\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> x / y", "using local.divide_nonpos_neg local.dual_order.order_iff_strict"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<le> (0::'a); ?y < (0::'a)\\<rbrakk>\n  \\<Longrightarrow> (0::'a) \\<le> ?x / ?y\n  (?b \\<le> ?a) = (?b < ?a \\<or> ?a = ?b)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<le> (0::'a); y \\<le> (0::'a)\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> x / y", "by auto"], ["", "lemma divide_nonneg_nonpos:\n  \"0 \\<le> x \\<Longrightarrow> y \\<le> 0 \\<Longrightarrow> x / y \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> x; y \\<le> (0::'a)\\<rbrakk>\n    \\<Longrightarrow> x / y \\<le> (0::'a)", "by (metis local.divide_eq_0_iff local.divide_nonneg_neg local.dual_order.order_iff_strict)"], ["", "lemma divide_nonpos_nonneg:\n  \"x \\<le> 0 \\<Longrightarrow> 0 \\<le> y \\<Longrightarrow> x / y \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<le> (0::'a); (0::'a) \\<le> y\\<rbrakk>\n    \\<Longrightarrow> x / y \\<le> (0::'a)", "using local.divide_nonpos_pos local.dual_order.order_iff_strict"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<le> (0::'a); (0::'a) < ?y\\<rbrakk>\n  \\<Longrightarrow> ?x / ?y \\<le> (0::'a)\n  (?b \\<le> ?a) = (?b < ?a \\<or> ?a = ?b)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<le> (0::'a); (0::'a) \\<le> y\\<rbrakk>\n    \\<Longrightarrow> x / y \\<le> (0::'a)", "by auto"], ["", "text \\<open>Conditional Simplification Rules: No Case Splits\\<close>"], ["", "lemma le_divide_eq_1_pos [simp]:\n  \"0 < a \\<Longrightarrow> (1 \\<le> b/a) = (a \\<le> b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) < a \\<Longrightarrow> ((1::'a) \\<le> b / a) = (a \\<le> b)", "by (simp add: local.pos_le_divide_eq)"], ["", "lemma le_divide_eq_1_neg [simp]:\n  \"a < 0 \\<Longrightarrow> (1 \\<le> b/a) = (b \\<le> a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a < (0::'a) \\<Longrightarrow> ((1::'a) \\<le> b / a) = (b \\<le> a)", "by (metis local.le_divide_eq_1_pos local.minus_divide_divide local.neg_0_less_iff_less local.neg_le_iff_le)"], ["", "lemma divide_le_eq_1_pos [simp]:\n  \"0 < a \\<Longrightarrow> (b/a \\<le> 1) = (b \\<le> a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) < a \\<Longrightarrow> (b / a \\<le> (1::'a)) = (b \\<le> a)", "using local.pos_divide_le_eq"], ["proof (prove)\nusing this:\n  (0::'a) < ?c \\<Longrightarrow> (?b / ?c \\<le> ?a) = (?b \\<le> ?a * ?c)\n\ngoal (1 subgoal):\n 1. (0::'a) < a \\<Longrightarrow> (b / a \\<le> (1::'a)) = (b \\<le> a)", "by auto"], ["", "lemma divide_le_eq_1_neg [simp]:\n  \"a < 0 \\<Longrightarrow> (b/a \\<le> 1) = (a \\<le> b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a < (0::'a) \\<Longrightarrow> (b / a \\<le> (1::'a)) = (a \\<le> b)", "by (metis local.divide_le_eq_1_pos local.minus_divide_divide local.neg_0_less_iff_less \n      local.neg_le_iff_le)"], ["", "lemma less_divide_eq_1_pos [simp]:\n  \"0 < a \\<Longrightarrow> (1 < b/a) = (a < b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) < a \\<Longrightarrow> ((1::'a) < b / a) = (a < b)", "by (simp add: local.dual_order.strict_iff_order)"], ["", "lemma less_divide_eq_1_neg [simp]:\n  \"a < 0 \\<Longrightarrow> (1 < b/a) = (b < a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a < (0::'a) \\<Longrightarrow> ((1::'a) < b / a) = (b < a)", "using local.dual_order.strict_iff_order"], ["proof (prove)\nusing this:\n  (?b < ?a) = (?b \\<le> ?a \\<and> ?a \\<noteq> ?b)\n\ngoal (1 subgoal):\n 1. a < (0::'a) \\<Longrightarrow> ((1::'a) < b / a) = (b < a)", "by auto"], ["", "lemma divide_less_eq_1_pos [simp]:\n  \"0 < a \\<Longrightarrow> (b/a < 1) = (b < a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) < a \\<Longrightarrow> (b / a < (1::'a)) = (b < a)", "using local.divide_le_eq_1_pos local.dual_order.strict_iff_order"], ["proof (prove)\nusing this:\n  (0::'a) < ?a \\<Longrightarrow> (?b / ?a \\<le> (1::'a)) = (?b \\<le> ?a)\n  (?b < ?a) = (?b \\<le> ?a \\<and> ?a \\<noteq> ?b)\n\ngoal (1 subgoal):\n 1. (0::'a) < a \\<Longrightarrow> (b / a < (1::'a)) = (b < a)", "by auto"], ["", "lemma divide_less_eq_1_neg [simp]:\n  \"a < 0 \\<Longrightarrow> b/a < 1 \\<longleftrightarrow> a < b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a < (0::'a) \\<Longrightarrow> (b / a < (1::'a)) = (a < b)", "using local.dual_order.strict_iff_order"], ["proof (prove)\nusing this:\n  (?b < ?a) = (?b \\<le> ?a \\<and> ?a \\<noteq> ?b)\n\ngoal (1 subgoal):\n 1. a < (0::'a) \\<Longrightarrow> (b / a < (1::'a)) = (a < b)", "by auto"], ["", "lemma abs_div_pos: \"0 < y \\<Longrightarrow>\n    \\<bar>x\\<bar> / y = \\<bar>x / y\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) < y \\<Longrightarrow> \\<bar>x\\<bar> / y = \\<bar>x / y\\<bar>", "by (simp add: local.abs_pos)"], ["", "lemma zero_le_divide_abs_iff [simp]: \"(0 \\<le> a / \\<bar>b\\<bar>) = (0 \\<le> a | b = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((0::'a) \\<le> a / \\<bar>b\\<bar>) = ((0::'a) \\<le> a \\<or> b = (0::'a))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (0::'a) \\<le> a / \\<bar>b\\<bar> \\<Longrightarrow>\n    (0::'a) \\<le> a \\<or> b = (0::'a)\n 2. (0::'a) \\<le> a \\<or> b = (0::'a) \\<Longrightarrow>\n    (0::'a) \\<le> a / \\<bar>b\\<bar>", "assume assm: \"0 \\<le> a / \\<bar>b\\<bar>\""], ["proof (state)\nthis:\n  (0::'a) \\<le> a / \\<bar>b\\<bar>\n\ngoal (2 subgoals):\n 1. (0::'a) \\<le> a / \\<bar>b\\<bar> \\<Longrightarrow>\n    (0::'a) \\<le> a \\<or> b = (0::'a)\n 2. (0::'a) \\<le> a \\<or> b = (0::'a) \\<Longrightarrow>\n    (0::'a) \\<le> a / \\<bar>b\\<bar>", "have absb: \"abs b \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> \\<bar>b\\<bar>", "by (fact abs_nn)"], ["proof (state)\nthis:\n  (0::'a) \\<le> \\<bar>b\\<bar>\n\ngoal (2 subgoals):\n 1. (0::'a) \\<le> a / \\<bar>b\\<bar> \\<Longrightarrow>\n    (0::'a) \\<le> a \\<or> b = (0::'a)\n 2. (0::'a) \\<le> a \\<or> b = (0::'a) \\<Longrightarrow>\n    (0::'a) \\<le> a / \\<bar>b\\<bar>", "thus \"0 \\<le> a \\<or> b = 0\""], ["proof (prove)\nusing this:\n  (0::'a) \\<le> \\<bar>b\\<bar>\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> a \\<or> b = (0::'a)", "using absb assm local.abs_eq_0_iff local.mult_nonneg_nonneg"], ["proof (prove)\nusing this:\n  (0::'a) \\<le> \\<bar>b\\<bar>\n  (0::'a) \\<le> \\<bar>b\\<bar>\n  (0::'a) \\<le> a / \\<bar>b\\<bar>\n  (\\<bar>?a\\<bar> = (0::'a)) = (?a = (0::'a))\n  \\<lbrakk>(0::'a) \\<le> ?a; (0::'a) \\<le> ?b\\<rbrakk>\n  \\<Longrightarrow> (0::'a) \\<le> ?a * ?b\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> a \\<or> b = (0::'a)", "by fastforce"], ["proof (state)\nthis:\n  (0::'a) \\<le> a \\<or> b = (0::'a)\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> a \\<or> b = (0::'a) \\<Longrightarrow>\n    (0::'a) \\<le> a / \\<bar>b\\<bar>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> a \\<or> b = (0::'a) \\<Longrightarrow>\n    (0::'a) \\<le> a / \\<bar>b\\<bar>", "assume \"0 \\<le> a \\<or> b = 0\""], ["proof (state)\nthis:\n  (0::'a) \\<le> a \\<or> b = (0::'a)\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> a \\<or> b = (0::'a) \\<Longrightarrow>\n    (0::'a) \\<le> a / \\<bar>b\\<bar>", "then"], ["proof (chain)\npicking this:\n  (0::'a) \\<le> a \\<or> b = (0::'a)", "consider (a) \"0 \\<le> a\" | (b) \"b = 0\""], ["proof (prove)\nusing this:\n  (0::'a) \\<le> a \\<or> b = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> a \\<Longrightarrow> thesis;\n     b = (0::'a) \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by atomize_elim auto"], ["proof (state)\nthis:\n  \\<lbrakk>(0::'a) \\<le> a \\<Longrightarrow> ?thesis1;\n   b = (0::'a) \\<Longrightarrow> ?thesis1\\<rbrakk>\n  \\<Longrightarrow> ?thesis1\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> a \\<or> b = (0::'a) \\<Longrightarrow>\n    (0::'a) \\<le> a / \\<bar>b\\<bar>", "thus \"0 \\<le> a / \\<bar>b\\<bar>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>(0::'a) \\<le> a \\<Longrightarrow> ?thesis1;\n   b = (0::'a) \\<Longrightarrow> ?thesis1\\<rbrakk>\n  \\<Longrightarrow> ?thesis1\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> a / \\<bar>b\\<bar>", "by (metis local.abs_eq_0_iff local.abs_nn local.divide_eq_0_iff local.divide_nonneg_nonneg)"], ["proof (state)\nthis:\n  (0::'a) \\<le> a / \\<bar>b\\<bar>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma divide_le_0_abs_iff [simp]: \"(a / \\<bar>b\\<bar> \\<le> 0) = (a \\<le> 0 | b = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a / \\<bar>b\\<bar> \\<le> (0::'a)) = (a \\<le> (0::'a) \\<or> b = (0::'a))", "by (metis local.minus_divide_left local.neg_0_le_iff_le local.zero_le_divide_abs_iff)"], ["", "text\\<open>For creating values between \\<^term>\\<open>u\\<close> and \\<^term>\\<open>v\\<close>.\\<close>"], ["", "lemma scaling_mono:\n  assumes \"u \\<le> v\" and \"0 \\<le> r\" and \"r \\<le> s\"\n  shows \"u + r * (v - u) / s \\<le> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u + r * (v - u) / s \\<le> v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. u + r * (v - u) / s \\<le> v", "have \"r/s \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r / s \\<le> (1::'a)", "using assms"], ["proof (prove)\nusing this:\n  u \\<le> v\n  (0::'a) \\<le> r\n  r \\<le> s\n\ngoal (1 subgoal):\n 1. r / s \\<le> (1::'a)", "by (metis local.divide_le_eq_1_pos local.division_ring_divide_zero \n        local.dual_order.order_iff_strict local.dual_order.trans local.zero_less_one)"], ["proof (state)\nthis:\n  r / s \\<le> (1::'a)\n\ngoal (1 subgoal):\n 1. u + r * (v - u) / s \\<le> v", "hence \"(r/s) * (v - u) \\<le> 1 * (v - u)\""], ["proof (prove)\nusing this:\n  r / s \\<le> (1::'a)\n\ngoal (1 subgoal):\n 1. r / s * (v - u) \\<le> (1::'a) * (v - u)", "using assms(1) local.diff_ge_0_iff_ge local.mult_right_mono"], ["proof (prove)\nusing this:\n  r / s \\<le> (1::'a)\n  u \\<le> v\n  ((0::'a) \\<le> ?a - ?b) = (?b \\<le> ?a)\n  \\<lbrakk>?a \\<le> ?b; (0::'a) \\<le> ?c\\<rbrakk>\n  \\<Longrightarrow> ?a * ?c \\<le> ?b * ?c\n\ngoal (1 subgoal):\n 1. r / s * (v - u) \\<le> (1::'a) * (v - u)", "by blast"], ["proof (state)\nthis:\n  r / s * (v - u) \\<le> (1::'a) * (v - u)\n\ngoal (1 subgoal):\n 1. u + r * (v - u) / s \\<le> v", "thus ?thesis"], ["proof (prove)\nusing this:\n  r / s * (v - u) \\<le> (1::'a) * (v - u)\n\ngoal (1 subgoal):\n 1. u + r * (v - u) / s \\<le> v", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  u + r * (v - u) / s \\<le> v\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* class nice_ordered_field *)"], ["", "code_identifier\n  code_module Ordered_Fields \\<rightharpoonup> (SML) Arith and (OCaml) Arith and (Haskell) Arith"], ["", "subsection\\<open>Ordered Complex\\<close>"], ["", "declare Conjugate.less_eq_complex_def[simp del]"], ["", "declare Conjugate.less_complex_def[simp del]"], ["", "subsection \\<open>Ordering on complex numbers\\<close>"], ["", "instantiation complex :: nice_ordered_field begin"], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(complex, nice_ordered_field_class)", "proof intro_classes"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>a b c.\n       \\<lbrakk>a < b; 0 < c\\<rbrakk> \\<Longrightarrow> c * a < c * b\n 2. \\<And>a. a \\<le> 0 \\<Longrightarrow> \\<bar>a\\<bar> = - a\n 3. \\<And>a. 0 \\<le> a \\<Longrightarrow> \\<bar>a\\<bar> = a\n 4. 0 < 1\n 5. \\<And>a. 0 < a \\<Longrightarrow> 0 < inverse a\n 6. \\<And>a b.\n       \\<lbrakk>inverse a \\<le> inverse b; 0 < a\\<rbrakk>\n       \\<Longrightarrow> b \\<le> a\n 7. \\<And>y z.\n       (\\<And>x. x < y \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       y \\<le> z\n 8. \\<And>a b.\n       \\<lbrakk>0 \\<le> a; 0 \\<le> b\\<rbrakk>\n       \\<Longrightarrow> a \\<le> b \\<or> b \\<le> a\n 9. \\<And>x. 0 \\<le> \\<bar>x\\<bar>", "note defs = less_eq_complex_def less_complex_def abs_complex_def"], ["proof (state)\nthis:\n  ?x \\<le> ?y \\<equiv> Im ?x = Im ?y \\<and> Re ?x \\<le> Re ?y\n  ?x < ?y \\<equiv> Im ?x = Im ?y \\<and> Re ?x < Re ?y\n  abs = complex_of_real \\<circ> cmod\n\ngoal (9 subgoals):\n 1. \\<And>a b c.\n       \\<lbrakk>a < b; 0 < c\\<rbrakk> \\<Longrightarrow> c * a < c * b\n 2. \\<And>a. a \\<le> 0 \\<Longrightarrow> \\<bar>a\\<bar> = - a\n 3. \\<And>a. 0 \\<le> a \\<Longrightarrow> \\<bar>a\\<bar> = a\n 4. 0 < 1\n 5. \\<And>a. 0 < a \\<Longrightarrow> 0 < inverse a\n 6. \\<And>a b.\n       \\<lbrakk>inverse a \\<le> inverse b; 0 < a\\<rbrakk>\n       \\<Longrightarrow> b \\<le> a\n 7. \\<And>y z.\n       (\\<And>x. x < y \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       y \\<le> z\n 8. \\<And>a b.\n       \\<lbrakk>0 \\<le> a; 0 \\<le> b\\<rbrakk>\n       \\<Longrightarrow> a \\<le> b \\<or> b \\<le> a\n 9. \\<And>x. 0 \\<le> \\<bar>x\\<bar>", "fix x y z a b c :: complex"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>a b c.\n       \\<lbrakk>a < b; 0 < c\\<rbrakk> \\<Longrightarrow> c * a < c * b\n 2. \\<And>a. a \\<le> 0 \\<Longrightarrow> \\<bar>a\\<bar> = - a\n 3. \\<And>a. 0 \\<le> a \\<Longrightarrow> \\<bar>a\\<bar> = a\n 4. 0 < 1\n 5. \\<And>a. 0 < a \\<Longrightarrow> 0 < inverse a\n 6. \\<And>a b.\n       \\<lbrakk>inverse a \\<le> inverse b; 0 < a\\<rbrakk>\n       \\<Longrightarrow> b \\<le> a\n 7. \\<And>y z.\n       (\\<And>x. x < y \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       y \\<le> z\n 8. \\<And>a b.\n       \\<lbrakk>0 \\<le> a; 0 \\<le> b\\<rbrakk>\n       \\<Longrightarrow> a \\<le> b \\<or> b \\<le> a\n 9. \\<And>x. 0 \\<le> \\<bar>x\\<bar>", "show \"a \\<le> 0 \\<Longrightarrow> \\<bar>a\\<bar> = - a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> 0 \\<Longrightarrow> \\<bar>a\\<bar> = - a", "unfolding defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. Im a = Im 0 \\<and> Re a \\<le> Re 0 \\<Longrightarrow>\n    (complex_of_real \\<circ> cmod) a = - a", "by (simp add: cmod_eq_Re complex_is_Real_iff)"], ["proof (state)\nthis:\n  a \\<le> 0 \\<Longrightarrow> \\<bar>a\\<bar> = - a\n\ngoal (8 subgoals):\n 1. \\<And>a b c.\n       \\<lbrakk>a < b; 0 < c\\<rbrakk> \\<Longrightarrow> c * a < c * b\n 2. \\<And>a. 0 \\<le> a \\<Longrightarrow> \\<bar>a\\<bar> = a\n 3. 0 < 1\n 4. \\<And>a. 0 < a \\<Longrightarrow> 0 < inverse a\n 5. \\<And>a b.\n       \\<lbrakk>inverse a \\<le> inverse b; 0 < a\\<rbrakk>\n       \\<Longrightarrow> b \\<le> a\n 6. \\<And>y z.\n       (\\<And>x. x < y \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       y \\<le> z\n 7. \\<And>a b.\n       \\<lbrakk>0 \\<le> a; 0 \\<le> b\\<rbrakk>\n       \\<Longrightarrow> a \\<le> b \\<or> b \\<le> a\n 8. \\<And>x. 0 \\<le> \\<bar>x\\<bar>", "show \"0 \\<le> a \\<Longrightarrow> \\<bar>a\\<bar> = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> a \\<Longrightarrow> \\<bar>a\\<bar> = a", "unfolding defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. Im 0 = Im a \\<and> Re 0 \\<le> Re a \\<Longrightarrow>\n    (complex_of_real \\<circ> cmod) a = a", "by (metis abs_of_nonneg cmod_eq_Re comp_apply complex.exhaust_sel complex_of_real_def zero_complex.simps(1) zero_complex.simps(2))"], ["proof (state)\nthis:\n  0 \\<le> a \\<Longrightarrow> \\<bar>a\\<bar> = a\n\ngoal (7 subgoals):\n 1. \\<And>a b c.\n       \\<lbrakk>a < b; 0 < c\\<rbrakk> \\<Longrightarrow> c * a < c * b\n 2. 0 < 1\n 3. \\<And>a. 0 < a \\<Longrightarrow> 0 < inverse a\n 4. \\<And>a b.\n       \\<lbrakk>inverse a \\<le> inverse b; 0 < a\\<rbrakk>\n       \\<Longrightarrow> b \\<le> a\n 5. \\<And>y z.\n       (\\<And>x. x < y \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       y \\<le> z\n 6. \\<And>a b.\n       \\<lbrakk>0 \\<le> a; 0 \\<le> b\\<rbrakk>\n       \\<Longrightarrow> a \\<le> b \\<or> b \\<le> a\n 7. \\<And>x. 0 \\<le> \\<bar>x\\<bar>", "show \"a < b \\<Longrightarrow> 0 < c \\<Longrightarrow> c * a < c * b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a < b; 0 < c\\<rbrakk> \\<Longrightarrow> c * a < c * b", "unfolding defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Im a = Im b \\<and> Re a < Re b;\n     Im 0 = Im c \\<and> Re 0 < Re c\\<rbrakk>\n    \\<Longrightarrow> Im (c * a) = Im (c * b) \\<and> Re (c * a) < Re (c * b)", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>a < b; 0 < c\\<rbrakk> \\<Longrightarrow> c * a < c * b\n\ngoal (6 subgoals):\n 1. 0 < 1\n 2. \\<And>a. 0 < a \\<Longrightarrow> 0 < inverse a\n 3. \\<And>a b.\n       \\<lbrakk>inverse a \\<le> inverse b; 0 < a\\<rbrakk>\n       \\<Longrightarrow> b \\<le> a\n 4. \\<And>y z.\n       (\\<And>x. x < y \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       y \\<le> z\n 5. \\<And>a b.\n       \\<lbrakk>0 \\<le> a; 0 \\<le> b\\<rbrakk>\n       \\<Longrightarrow> a \\<le> b \\<or> b \\<le> a\n 6. \\<And>x. 0 \\<le> \\<bar>x\\<bar>", "show \"0 < (1::complex)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 1", "unfolding defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. Im 0 = Im 1 \\<and> Re 0 < Re 1", "by simp"], ["proof (state)\nthis:\n  0 < 1\n\ngoal (5 subgoals):\n 1. \\<And>a. 0 < a \\<Longrightarrow> 0 < inverse a\n 2. \\<And>a b.\n       \\<lbrakk>inverse a \\<le> inverse b; 0 < a\\<rbrakk>\n       \\<Longrightarrow> b \\<le> a\n 3. \\<And>y z.\n       (\\<And>x. x < y \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       y \\<le> z\n 4. \\<And>a b.\n       \\<lbrakk>0 \\<le> a; 0 \\<le> b\\<rbrakk>\n       \\<Longrightarrow> a \\<le> b \\<or> b \\<le> a\n 5. \\<And>x. 0 \\<le> \\<bar>x\\<bar>", "show \"0 < a \\<Longrightarrow> 0 < inverse a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < a \\<Longrightarrow> 0 < inverse a", "unfolding defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. Im 0 = Im a \\<and> Re 0 < Re a \\<Longrightarrow>\n    Im 0 = Im (inverse a) \\<and> Re 0 < Re (inverse a)", "by auto"], ["proof (state)\nthis:\n  0 < a \\<Longrightarrow> 0 < inverse a\n\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>inverse a \\<le> inverse b; 0 < a\\<rbrakk>\n       \\<Longrightarrow> b \\<le> a\n 2. \\<And>y z.\n       (\\<And>x. x < y \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       y \\<le> z\n 3. \\<And>a b.\n       \\<lbrakk>0 \\<le> a; 0 \\<le> b\\<rbrakk>\n       \\<Longrightarrow> a \\<le> b \\<or> b \\<le> a\n 4. \\<And>x. 0 \\<le> \\<bar>x\\<bar>", "define ra ia rb ib rc ic where \"ra = Re a\" \"ia = Im a\" \"rb = Re b\" \"ib = Im b\" \"rc = Re c\" \"ic = Im c\""], ["proof (state)\nthis:\n  ra = Re a\n  ia = Im a\n  rb = Re b\n  ib = Im b\n  rc = Re c\n  ic = Im c\n\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>inverse a \\<le> inverse b; 0 < a\\<rbrakk>\n       \\<Longrightarrow> b \\<le> a\n 2. \\<And>y z.\n       (\\<And>x. x < y \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       y \\<le> z\n 3. \\<And>a b.\n       \\<lbrakk>0 \\<le> a; 0 \\<le> b\\<rbrakk>\n       \\<Longrightarrow> a \\<le> b \\<or> b \\<le> a\n 4. \\<And>x. 0 \\<le> \\<bar>x\\<bar>", "note ri = this[symmetric]"], ["proof (state)\nthis:\n  Re a = ra\n  Im a = ia\n  Re b = rb\n  Im b = ib\n  Re c = rc\n  Im c = ic\n\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>inverse a \\<le> inverse b; 0 < a\\<rbrakk>\n       \\<Longrightarrow> b \\<le> a\n 2. \\<And>y z.\n       (\\<And>x. x < y \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       y \\<le> z\n 3. \\<And>a b.\n       \\<lbrakk>0 \\<le> a; 0 \\<le> b\\<rbrakk>\n       \\<Longrightarrow> a \\<le> b \\<or> b \\<le> a\n 4. \\<And>x. 0 \\<le> \\<bar>x\\<bar>", "hence \"a = Complex ra ia\" \"b = Complex rb ib\" \"c = Complex rc ic\""], ["proof (prove)\nusing this:\n  Re a = ra\n  Im a = ia\n  Re b = rb\n  Im b = ib\n  Re c = rc\n  Im c = ic\n\ngoal (1 subgoal):\n 1. a = Complex ra ia &&& b = Complex rb ib &&& c = Complex rc ic", "by auto"], ["proof (state)\nthis:\n  a = Complex ra ia\n  b = Complex rb ib\n  c = Complex rc ic\n\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>inverse a \\<le> inverse b; 0 < a\\<rbrakk>\n       \\<Longrightarrow> b \\<le> a\n 2. \\<And>y z.\n       (\\<And>x. x < y \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       y \\<le> z\n 3. \\<And>a b.\n       \\<lbrakk>0 \\<le> a; 0 \\<le> b\\<rbrakk>\n       \\<Longrightarrow> a \\<le> b \\<or> b \\<le> a\n 4. \\<And>x. 0 \\<le> \\<bar>x\\<bar>", "note ri = this ri"], ["proof (state)\nthis:\n  a = Complex ra ia\n  b = Complex rb ib\n  c = Complex rc ic\n  Re a = ra\n  Im a = ia\n  Re b = rb\n  Im b = ib\n  Re c = rc\n  Im c = ic\n\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>inverse a \\<le> inverse b; 0 < a\\<rbrakk>\n       \\<Longrightarrow> b \\<le> a\n 2. \\<And>y z.\n       (\\<And>x. x < y \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       y \\<le> z\n 3. \\<And>a b.\n       \\<lbrakk>0 \\<le> a; 0 \\<le> b\\<rbrakk>\n       \\<Longrightarrow> a \\<le> b \\<or> b \\<le> a\n 4. \\<And>x. 0 \\<le> \\<bar>x\\<bar>", "have \"rb \\<le> ra\"\n    if \"1 / ra \\<le> (if rb = 0 then 0 else 1 / rb)\" \n      and \"ia = 0\" and \"0 < ra\" and \"ib = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rb \\<le> ra", "proof(cases \"rb = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. rb = 0 \\<Longrightarrow> rb \\<le> ra\n 2. rb \\<noteq> 0 \\<Longrightarrow> rb \\<le> ra", "case True"], ["proof (state)\nthis:\n  rb = 0\n\ngoal (2 subgoals):\n 1. rb = 0 \\<Longrightarrow> rb \\<le> ra\n 2. rb \\<noteq> 0 \\<Longrightarrow> rb \\<le> ra", "thus ?thesis"], ["proof (prove)\nusing this:\n  rb = 0\n\ngoal (1 subgoal):\n 1. rb \\<le> ra", "using that(3)"], ["proof (prove)\nusing this:\n  rb = 0\n  0 < ra\n\ngoal (1 subgoal):\n 1. rb \\<le> ra", "by auto"], ["proof (state)\nthis:\n  rb \\<le> ra\n\ngoal (1 subgoal):\n 1. rb \\<noteq> 0 \\<Longrightarrow> rb \\<le> ra", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. rb \\<noteq> 0 \\<Longrightarrow> rb \\<le> ra", "case False"], ["proof (state)\nthis:\n  rb \\<noteq> 0\n\ngoal (1 subgoal):\n 1. rb \\<noteq> 0 \\<Longrightarrow> rb \\<le> ra", "thus ?thesis"], ["proof (prove)\nusing this:\n  rb \\<noteq> 0\n\ngoal (1 subgoal):\n 1. rb \\<le> ra", "by (smt nice_ordered_field_class.frac_less2 that(1) that(3))"], ["proof (state)\nthis:\n  rb \\<le> ra\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>1 / ra \\<le> (if rb = 0 then 0 else 1 / rb); ia = 0; 0 < ra;\n   ib = 0\\<rbrakk>\n  \\<Longrightarrow> rb \\<le> ra\n\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>inverse a \\<le> inverse b; 0 < a\\<rbrakk>\n       \\<Longrightarrow> b \\<le> a\n 2. \\<And>y z.\n       (\\<And>x. x < y \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       y \\<le> z\n 3. \\<And>a b.\n       \\<lbrakk>0 \\<le> a; 0 \\<le> b\\<rbrakk>\n       \\<Longrightarrow> a \\<le> b \\<or> b \\<le> a\n 4. \\<And>x. 0 \\<le> \\<bar>x\\<bar>", "thus \"inverse a \\<le> inverse b \\<Longrightarrow> 0 < a \\<Longrightarrow> b \\<le> a\""], ["proof (prove)\nusing this:\n  \\<lbrakk>1 / ra \\<le> (if rb = 0 then 0 else 1 / rb); ia = 0; 0 < ra;\n   ib = 0\\<rbrakk>\n  \\<Longrightarrow> rb \\<le> ra\n\ngoal (1 subgoal):\n 1. \\<lbrakk>inverse a \\<le> inverse b; 0 < a\\<rbrakk>\n    \\<Longrightarrow> b \\<le> a", "unfolding defs ri"], ["proof (prove)\nusing this:\n  \\<lbrakk>1 / ra \\<le> (if rb = 0 then 0 else 1 / rb); ia = 0; 0 < ra;\n   ib = 0\\<rbrakk>\n  \\<Longrightarrow> rb \\<le> ra\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Im (inverse (Complex ra ia)) =\n             Im (inverse (Complex rb ib)) \\<and>\n             Re (inverse (Complex ra ia))\n             \\<le> Re (inverse (Complex rb ib));\n     Im 0 = Im (Complex ra ia) \\<and> Re 0 < Re (Complex ra ia)\\<rbrakk>\n    \\<Longrightarrow> Im (Complex rb ib) = Im (Complex ra ia) \\<and>\n                      Re (Complex rb ib) \\<le> Re (Complex ra ia)", "by (auto simp: power2_eq_square)"], ["proof (state)\nthis:\n  \\<lbrakk>inverse a \\<le> inverse b; 0 < a\\<rbrakk>\n  \\<Longrightarrow> b \\<le> a\n\ngoal (3 subgoals):\n 1. \\<And>y z.\n       (\\<And>x. x < y \\<Longrightarrow> x \\<le> z) \\<Longrightarrow>\n       y \\<le> z\n 2. \\<And>a b.\n       \\<lbrakk>0 \\<le> a; 0 \\<le> b\\<rbrakk>\n       \\<Longrightarrow> a \\<le> b \\<or> b \\<le> a\n 3. \\<And>x. 0 \\<le> \\<bar>x\\<bar>", "show \"(\\<And>a. a < b \\<Longrightarrow> a \\<le> c) \\<Longrightarrow> b \\<le> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a. a < b \\<Longrightarrow> a \\<le> c) \\<Longrightarrow> b \\<le> c", "unfolding defs ri"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        Im a = Im (Complex rb ib) \\<and>\n        Re a < Re (Complex rb ib) \\<Longrightarrow>\n        Im a = Im (Complex rc ic) \\<and>\n        Re a \\<le> Re (Complex rc ic)) \\<Longrightarrow>\n    Im (Complex rb ib) = Im (Complex rc ic) \\<and>\n    Re (Complex rb ib) \\<le> Re (Complex rc ic)", "by (metis complex.sel(1) complex.sel(2) dense less_le_not_le \n        nice_ordered_field_class.linordered_field_no_lb not_le_imp_less)"], ["proof (state)\nthis:\n  (\\<And>a. a < b \\<Longrightarrow> a \\<le> c) \\<Longrightarrow> b \\<le> c\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>0 \\<le> a; 0 \\<le> b\\<rbrakk>\n       \\<Longrightarrow> a \\<le> b \\<or> b \\<le> a\n 2. \\<And>x. 0 \\<le> \\<bar>x\\<bar>", "show \"0 \\<le> a \\<Longrightarrow> 0 \\<le> b \\<Longrightarrow> a \\<le> b \\<or> b \\<le> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> a; 0 \\<le> b\\<rbrakk>\n    \\<Longrightarrow> a \\<le> b \\<or> b \\<le> a", "unfolding defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Im 0 = Im a \\<and> Re 0 \\<le> Re a;\n     Im 0 = Im b \\<and> Re 0 \\<le> Re b\\<rbrakk>\n    \\<Longrightarrow> Im a = Im b \\<and> Re a \\<le> Re b \\<or>\n                      Im b = Im a \\<and> Re b \\<le> Re a", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>0 \\<le> a; 0 \\<le> b\\<rbrakk>\n  \\<Longrightarrow> a \\<le> b \\<or> b \\<le> a\n\ngoal (1 subgoal):\n 1. \\<And>x. 0 \\<le> \\<bar>x\\<bar>", "show \"0 \\<le> \\<bar>x\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> \\<bar>x\\<bar>", "unfolding defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. Im 0 = Im ((complex_of_real \\<circ> cmod) x) \\<and>\n    Re 0 \\<le> Re ((complex_of_real \\<circ> cmod) x)", "by auto"], ["proof (state)\nthis:\n  0 \\<le> \\<bar>x\\<bar>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "lemma less_eq_complexI: \"Re x \\<le> Re y \\<Longrightarrow> Im x = Im y \\<Longrightarrow> x\\<le>y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Re x \\<le> Re y; Im x = Im y\\<rbrakk>\n    \\<Longrightarrow> x \\<le> y", "unfolding less_eq_complex_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Re x \\<le> Re y; Im x = Im y\\<rbrakk>\n    \\<Longrightarrow> Im x = Im y \\<and> Re x \\<le> Re y", "by simp"], ["", "lemma less_complexI: \"Re x < Re y \\<Longrightarrow> Im x = Im y \\<Longrightarrow> x<y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Re x < Re y; Im x = Im y\\<rbrakk> \\<Longrightarrow> x < y", "unfolding less_complex_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Re x < Re y; Im x = Im y\\<rbrakk>\n    \\<Longrightarrow> Im x = Im y \\<and> Re x < Re y", "by simp"], ["", "lemma complex_of_real_mono:\n  \"x \\<le> y \\<Longrightarrow> complex_of_real x \\<le> complex_of_real y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> complex_of_real x \\<le> complex_of_real y", "unfolding less_eq_complex_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow>\n    Im (complex_of_real x) = Im (complex_of_real y) \\<and>\n    Re (complex_of_real x) \\<le> Re (complex_of_real y)", "by auto"], ["", "lemma complex_of_real_mono_iff[simp]:\n  \"complex_of_real x \\<le> complex_of_real y \\<longleftrightarrow> x \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (complex_of_real x \\<le> complex_of_real y) = (x \\<le> y)", "unfolding less_eq_complex_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Im (complex_of_real x) = Im (complex_of_real y) \\<and>\n     Re (complex_of_real x) \\<le> Re (complex_of_real y)) =\n    (x \\<le> y)", "by auto"], ["", "lemma complex_of_real_strict_mono_iff[simp]:\n  \"complex_of_real x < complex_of_real y \\<longleftrightarrow> x < y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (complex_of_real x < complex_of_real y) = (x < y)", "unfolding less_complex_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Im (complex_of_real x) = Im (complex_of_real y) \\<and>\n     Re (complex_of_real x) < Re (complex_of_real y)) =\n    (x < y)", "by auto"], ["", "lemma complex_of_real_nn_iff[simp]:\n  \"0 \\<le> complex_of_real y \\<longleftrightarrow> 0 \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 \\<le> complex_of_real y) = (0 \\<le> y)", "unfolding less_eq_complex_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Im 0 = Im (complex_of_real y) \\<and>\n     Re 0 \\<le> Re (complex_of_real y)) =\n    (0 \\<le> y)", "by auto"], ["", "lemma complex_of_real_pos_iff[simp]:\n  \"0 < complex_of_real y \\<longleftrightarrow> 0 < y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 < complex_of_real y) = (0 < y)", "unfolding less_complex_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Im 0 = Im (complex_of_real y) \\<and> Re 0 < Re (complex_of_real y)) =\n    (0 < y)", "by auto"], ["", "lemma Re_mono: \"x \\<le> y \\<Longrightarrow> Re x \\<le> Re y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> Re x \\<le> Re y", "unfolding less_eq_complex_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Im x = Im y \\<and> Re x \\<le> Re y \\<Longrightarrow> Re x \\<le> Re y", "by simp"], ["", "lemma comp_Im_same: \"x \\<le> y \\<Longrightarrow> Im x = Im y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> Im x = Im y", "unfolding less_eq_complex_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Im x = Im y \\<and> Re x \\<le> Re y \\<Longrightarrow> Im x = Im y", "by simp"], ["", "lemma Re_strict_mono: \"x < y \\<Longrightarrow> Re x < Re y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x < y \\<Longrightarrow> Re x < Re y", "unfolding less_complex_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Im x = Im y \\<and> Re x < Re y \\<Longrightarrow> Re x < Re y", "by simp"], ["", "lemma complex_of_real_cmod: assumes \"x \\<ge> 0\" shows \"complex_of_real (cmod x) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (cmod x) = x", "by (metis Reals_cases abs_of_nonneg assms comp_Im_same complex_is_Real_iff complex_of_real_nn_iff norm_of_real zero_complex.simps(2))"], ["", "end"]]}