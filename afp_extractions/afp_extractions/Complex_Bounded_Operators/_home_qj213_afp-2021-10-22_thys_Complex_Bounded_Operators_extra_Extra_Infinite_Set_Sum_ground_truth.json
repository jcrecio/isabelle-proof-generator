{"file_name": "/home/qj213/afp-2021-10-22/thys/Complex_Bounded_Operators/extra/Extra_Infinite_Set_Sum.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Complex_Bounded_Operators", "problem_names": ["lemma infsetsum'_converges_cong: \n  assumes t1: \"\\<And>x. x\\<in>A \\<Longrightarrow> f x = g x\"\n  shows \"infsetsum'_converges f A = infsetsum'_converges g A\"", "lemma infsetsum'_cong:\n  assumes \"\\<And>x. x\\<in>A \\<Longrightarrow> f x = g x\"\n  shows \"infsetsum' f A = infsetsum' g A\"", "lemma abs_summable_finiteI0:\n  assumes \"\\<And>F. finite F \\<Longrightarrow> F\\<subseteq>S \\<Longrightarrow> sum (\\<lambda>x. norm (f x)) F \\<le> B\"\n    and \"B \\<ge> 0\"\n  shows \"f abs_summable_on S\" and \"infsetsum (\\<lambda>x. norm (f x)) S \\<le> B\"", "lemma abs_summable_finiteI:\n  assumes \"\\<And>F. finite F \\<Longrightarrow> F\\<subseteq>S \\<Longrightarrow> sum (\\<lambda>x. norm (f x)) F \\<le> B\"\n  shows \"f abs_summable_on S\"", "lemma infsetsum_finite_sets:\n  assumes \"\\<And>F. finite F \\<Longrightarrow> F\\<subseteq>S \\<Longrightarrow> sum (\\<lambda>x. norm (f x)) F \\<le> B\"\n    and \"B \\<ge> 0\" and \"\\<And>x. f x \\<ge> 0\"\n  shows \"infsetsum f S \\<le> B\"", "lemma abs_summable_finiteI_converse:\n  assumes f_sum_S: \"f abs_summable_on S\"\n    and finite_F: \"finite F\" and FS: \"F\\<subseteq>S\"\n  defines \"B \\<equiv> (infsetsum (\\<lambda>x. norm (f x)) S)\"\n  shows \"sum (\\<lambda>x. norm (f x)) F \\<le> B\"", "lemma abs_summable_countable:\n  fixes \\<mu> :: \"'a \\<Rightarrow> 'b::{banach,second_countable_topology}\"\n  assumes \"\\<mu> abs_summable_on T\"\n  shows \"countable {x\\<in>T. 0 \\<noteq> \\<mu> x}\"", "lemma infsetsum_cnj[simp]: \"infsetsum (\\<lambda>x. cnj (f x)) M = cnj (infsetsum f M)\"", "lemma infsetsum_Re: \n  assumes \"f abs_summable_on M\"\n  shows \"infsetsum (\\<lambda>x. Re (f x)) M = Re (infsetsum f M)\"", "lemma infsetsum_Im: \n  assumes \"f abs_summable_on M\"\n  shows \"infsetsum (\\<lambda>x. Im (f x)) M = Im (infsetsum f M)\"", "lemma infsetsum_mono_complex:\n  fixes f g :: \"'a \\<Rightarrow> complex\"\n  assumes f_sum: \"f abs_summable_on A\" and g_sum: \"g abs_summable_on A\"\n  assumes x: \"\\<And>x. x \\<in> A \\<Longrightarrow> f x \\<le> g x\"\n  shows   \"infsetsum f A \\<le> infsetsum g A\"", "lemma infsetsum_subset_complex:\n  fixes f :: \"'a \\<Rightarrow> complex\"\n  assumes \"f abs_summable_on B\" and \"A \\<subseteq> B\" and \"\\<And>x. x\\<notin>A \\<Longrightarrow> f x \\<ge> 0\"\n  shows \"infsetsum f A \\<le> infsetsum f B\"", "lemma infsetsum_subset_real:\n  fixes f :: \"'a \\<Rightarrow> real\"\n  assumes \"f abs_summable_on B\" and \"A \\<subseteq> B\" and \"\\<And>x. x\\<notin>A \\<Longrightarrow> f x \\<ge> 0\"\n  shows \"infsetsum f A \\<le> infsetsum f B\"", "lemma abs_summable_product:\n  fixes x :: \"'a \\<Rightarrow> 'b::{real_normed_div_algebra,banach,second_countable_topology}\"\n  assumes x2_sum: \"(\\<lambda>i. (x i) * (x i)) abs_summable_on A\"\n    and y2_sum: \"(\\<lambda>i. (y i) * (y i)) abs_summable_on A\"\n  shows \"(\\<lambda>i. x i * y i) abs_summable_on A\"", "lemma abs_summable_cnj_iff[simp]:\n  \"(\\<lambda>i. cnj (f i)) abs_summable_on A \\<longleftrightarrow> f abs_summable_on A\"", "lemma ennreal_Sup:\n  assumes \"bdd_above A\" and nonempty: \"A\\<noteq>{}\"\n  shows \"ennreal (Sup A) = Sup (ennreal ` A)\"", "lemma infsetsum_nonneg_is_SUPREMUM_ennreal:\n  fixes f :: \"'a \\<Rightarrow> real\"\n  assumes summable: \"f abs_summable_on A\"\n    and fnn: \"\\<And>x. x\\<in>A \\<Longrightarrow> f x \\<ge> 0\"\n  shows \"ennreal (infsetsum f A) = (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. (ennreal (sum f F)))\"", "lemma infsetsum_nonneg_is_SUPREMUM_ereal:\n  fixes f :: \"'a \\<Rightarrow> real\"\n  assumes summable: \"f abs_summable_on A\"\n    and fnn: \"\\<And>x. x\\<in>A \\<Longrightarrow> f x \\<ge> 0\"\n  shows \"ereal (infsetsum f A) = (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. (ereal (sum f F)))\"", "lemma infsetsum_nonneg_is_SUPREMUM:\n  fixes f :: \"'a \\<Rightarrow> real\"\n  assumes summable: \"f abs_summable_on A\"\n    and fnn: \"\\<And>x. x\\<in>A \\<Longrightarrow> f x \\<ge> 0\"\n  shows \"infsetsum f A = (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. (sum f F))\"", "lemma infsetsum_geq0_complex:\n  fixes f :: \"'a \\<Rightarrow> complex\"\n  assumes \"f abs_summable_on M\"\n    and fnn: \"\\<And>x. x \\<in> M \\<Longrightarrow> 0 \\<le> f x\"\n  shows \"infsetsum f M \\<ge> 0\" (is \"?lhs \\<ge> _\")", "lemma infsetsum_cmod:\n  assumes \"f abs_summable_on M\"\n    and fnn: \"\\<And>x. x \\<in> M \\<Longrightarrow> 0 \\<le> f x\"\n  shows \"infsetsum (\\<lambda>x. cmod (f x)) M = cmod (infsetsum f M)\"", "lemma infsetsum_Sigma:\n  fixes A :: \"'a set\" and B :: \"'a \\<Rightarrow> 'b set\"\n  assumes summable: \"f abs_summable_on (Sigma A B)\"\n  shows \"infsetsum f (Sigma A B) = infsetsum (\\<lambda>x. infsetsum (\\<lambda>y. f (x, y)) (B x)) A\"", "lemma infsetsum_Sigma':\n  fixes A :: \"'a set\" and B :: \"'a \\<Rightarrow> 'b set\"\n  assumes summable: \"(\\<lambda>(x,y). f x y) abs_summable_on (Sigma A B)\"\n  shows   \"infsetsum (\\<lambda>x. infsetsum (\\<lambda>y. f x y) (B x)) A = infsetsum (\\<lambda>(x,y). f x y) (Sigma A B)\"", "lemma infsetsum_Times:\n  fixes A :: \"'a set\" and B :: \"'b set\"\n  assumes summable: \"f abs_summable_on (A \\<times> B)\"\n  shows   \"infsetsum f (A \\<times> B) = infsetsum (\\<lambda>x. infsetsum (\\<lambda>y. f (x, y)) B) A\"", "lemma infsetsum_Times':\n  fixes A :: \"'a set\" and B :: \"'b set\"\n  fixes f :: \"'a \\<Rightarrow> 'b \\<Rightarrow> 'c :: {banach, second_countable_topology}\"\n  assumes summable: \"(\\<lambda>(x,y). f x y) abs_summable_on (A \\<times> B)\"\n  shows   \"infsetsum (\\<lambda>x. infsetsum (\\<lambda>y. f x y) B) A = infsetsum (\\<lambda>(x,y). f x y) (A \\<times> B)\"", "lemma infsetsum_swap:\n  fixes A :: \"'a set\" and B :: \"'b set\"\n  fixes f :: \"'a \\<Rightarrow> 'b \\<Rightarrow> 'c :: {banach, second_countable_topology}\"\n  assumes summable: \"(\\<lambda>(x,y). f x y) abs_summable_on A \\<times> B\"\n  shows \"infsetsum (\\<lambda>x. infsetsum (\\<lambda>y. f x y) B) A = infsetsum (\\<lambda>y. infsetsum (\\<lambda>x. f x y) A) B\"", "lemma abs_summable_infsetsum'_converges:\n  fixes f :: \"'a\\<Rightarrow>'b::{second_countable_topology,banach}\" and A :: \"'a set\"\n  assumes \"f abs_summable_on A\"\n  shows \"infsetsum'_converges f A\"", "lemma infsetsum'_converges_cofin_subset:\n  fixes f :: \"'a \\<Rightarrow> 'b::{topological_ab_group_add,t2_space}\"\n  assumes \"infsetsum'_converges f A\" and [simp]: \"finite F\"\n  shows \"infsetsum'_converges f (A-F)\"", "lemma \n  fixes f :: \"'a \\<Rightarrow> 'b::{comm_monoid_add,t2_space}\"\n  assumes \"\\<And>x. x\\<in>(A-B)\\<union>(B-A) \\<Longrightarrow> f x = 0\"\n  shows infsetsum'_subset_zero: \"infsetsum' f A = infsetsum' f B\"\n    and infsetsum'_converges_subset_zero: \"infsetsum'_converges f A = infsetsum'_converges f B\"", "lemma\n  fixes f :: \"'a \\<Rightarrow> 'b::{topological_ab_group_add,t2_space}\"\n  assumes \"infsetsum'_converges f B\" and \"infsetsum'_converges f A\" and AB: \"A \\<subseteq> B\"\n  shows infsetsum'_Diff: \"infsetsum' f (B - A) = infsetsum' f B - infsetsum' f A\"\n    and infsetsum'_converges_Diff: \"infsetsum'_converges f (B-A)\"", "lemma infsetsum'_mono_set:\n  fixes f :: \"'a\\<Rightarrow>'b::{ordered_comm_monoid_add,linorder_topology}\"\n  assumes fx0: \"\\<And>x. x\\<in>B-A \\<Longrightarrow> f x \\<ge> 0\"\n    and \"A \\<subseteq> B\"\n    and \"infsetsum'_converges f A\"\n    and \"infsetsum'_converges f B\"\n  shows \"infsetsum' f B \\<ge> infsetsum' f A\"", "lemma infsetsum'_converges_finite[simp]:\n  assumes \"finite F\"\n  shows \"infsetsum'_converges f F\"", "lemma infsetsum'_finite[simp]:\n  assumes \"finite F\"\n  shows \"infsetsum' f F = sum f F\"", "lemma infsetsum'_approx_sum:\n  fixes f :: \"'a \\<Rightarrow> 'b::{comm_monoid_add,metric_space}\"\n  assumes \"infsetsum'_converges f A\" and \"\\<epsilon> > 0\"\n  shows \"\\<exists>F. finite F \\<and> F \\<subseteq> A \\<and> dist (sum f F) (infsetsum' f A) \\<le> \\<epsilon>\"", "lemma norm_infsetsum'_bound:\n  fixes f :: \"'b \\<Rightarrow> 'a::real_normed_vector\"\n    and A :: \"'b set\"\n  assumes a1: \"infsetsum'_converges (\\<lambda>x. norm (f x)) A\"\n  shows \"norm (infsetsum' f A) \\<le> (infsetsum' (\\<lambda>x. norm (f x)) A)\"", "lemma infsetsum_infsetsum':\n  assumes \"f abs_summable_on A\"\n  shows \"infsetsum f A = infsetsum' f A\"", "lemma abs_summable_partition:\n  fixes T :: \"'b set\" and I :: \"'a set\"\n  assumes \"\\<And>i. f abs_summable_on S i\"\n    and \"(\\<lambda>i. \\<Sum>\\<^sub>ax\\<in>S i. norm (f x)) abs_summable_on I\"\n    and \"T \\<subseteq> (\\<Union>i\\<in>I. S i)\"\n  shows \"f abs_summable_on T\"", "lemma abs_summable_product':\n  fixes X :: \"'a set\" and Y :: \"'b set\"\n  assumes \"\\<And>x. (\\<lambda>y. f (x,y)) abs_summable_on Y\"\n    and \"(\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>Y. norm (f (x,y))) abs_summable_on X\"\n  shows \"f abs_summable_on X\\<times>Y\"", "lemma infsetsum_prod_PiE:\n  fixes f :: \"'a \\<Rightarrow> 'b \\<Rightarrow> 'c :: {real_normed_field,banach,second_countable_topology}\"\n  assumes finite: \"finite A\"\n    and summable: \"\\<And>x. x \\<in> A \\<Longrightarrow> f x abs_summable_on B x\"\n  shows \"infsetsum (\\<lambda>g. \\<Prod>x\\<in>A. f x (g x)) (PiE A B) = (\\<Prod>x\\<in>A. infsetsum (f x) (B x))\"", "lemma infsetsum_0D:\n  fixes f :: \"'a \\<Rightarrow> real\"\n  assumes \"infsetsum f A = 0\"\n    and abs_sum: \"f abs_summable_on A\"\n    and nneg: \"\\<And>x. x \\<in> A \\<Longrightarrow> f x \\<ge> 0\"\n    and \"x \\<in> A\"\n  shows \"f x = 0\"", "lemma sum_leq_infsetsum:\n  fixes f :: \"_ \\<Rightarrow> real\"\n  assumes \"f abs_summable_on N\"\n    and \"finite M\"\n    and \"M \\<subseteq> N\"\n    and \"\\<And>x. x\\<in>N-M \\<Longrightarrow> f x \\<ge> 0\"\n  shows \"sum f M \\<le> infsetsum f N\"", "lemma infsetsum_cmult_left':\n  fixes f :: \"'a \\<Rightarrow> 'b :: {banach, real_normed_algebra, second_countable_topology, division_ring}\"\n  shows  \"infsetsum (\\<lambda>x. f x * c) A = infsetsum f A * c\"", "lemma abs_summable_on_zero_diff:\n  assumes \"f abs_summable_on A\"\n    and \"\\<And>x. x \\<in> B - A \\<Longrightarrow> f x = 0\"\n  shows \"f abs_summable_on B\"", "lemma abs_summable_on_Sigma_iff:\n  \"f abs_summable_on Sigma A B \\<longleftrightarrow>\n             (\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x) \\<and>\n             ((\\<lambda>x. infsetsum (\\<lambda>y. norm (f (x, y))) (B x)) abs_summable_on A)\"", "lemma\n  fixes f :: \"'a \\<Rightarrow> 'c :: {banach, real_normed_field, second_countable_topology}\"\n  assumes \"f abs_summable_on A\" and \"g abs_summable_on B\"\n  shows   abs_summable_on_product: \"(\\<lambda>(x,y). f x * g y) abs_summable_on A \\<times> B\"\n    and   infsetsum_product: \"infsetsum (\\<lambda>(x,y). f x * g y) (A \\<times> B) =\n                                infsetsum f A * infsetsum g B\"", "lemma infsetsum'_converges_ennreal: \\<open>infsetsum'_converges (f::_ \\<Rightarrow> ennreal) S\\<close>", "lemma infsetsum'_superconst_infinite:\n  assumes geqb: \\<open>\\<And>x. x \\<in> S \\<Longrightarrow> f x \\<ge> b\\<close>\n  assumes b: \\<open>b > 0\\<close>\n  assumes \\<open>infinite S\\<close>\n  shows \"infsetsum' f S = (\\<infinity>::ennreal)\"", "lemma infsetsum'_tendsto:\n  assumes \\<open>infsetsum'_converges f S\\<close>\n  shows \\<open>((\\<lambda>F. sum f F) \\<longlongrightarrow> infsetsum' f S) (finite_subsets_at_top S)\\<close>", "lemma infsetsum'_constant[simp]:\n  assumes \\<open>finite F\\<close>\n  shows \\<open>infsetsum' (\\<lambda>_. c) F = of_nat (card F) * c\\<close>", "lemma infsetsum'_zero[simp]:\n  shows \\<open>infsetsum' (\\<lambda>_. 0) S = 0\\<close>", "lemma\n  fixes f g :: \"'a \\<Rightarrow> 'b::{topological_monoid_add, t2_space, comm_monoid_add}\"\n  assumes \\<open>infsetsum'_converges f A\\<close>\n  assumes \\<open>infsetsum'_converges g A\\<close>\n  shows infsetsum'_add: \\<open>infsetsum' (\\<lambda>x. f x + g x) A = infsetsum' f A + infsetsum' g A\\<close>\n    and infsetsum'_converges_add: \\<open>infsetsum'_converges (\\<lambda>x. f x + g x) A\\<close>", "lemma \n  fixes f :: \"'a \\<Rightarrow> 'b::{topological_monoid_add, t2_space, comm_monoid_add}\"\n  assumes \"infsetsum'_converges f A\"\n  assumes \"infsetsum'_converges f B\"\n  assumes disj: \"A \\<inter> B = {}\"\n  shows infsetsum'_Un_disjoint: \\<open>infsetsum' f (A \\<union> B) = infsetsum' f A + infsetsum' f B\\<close>\n    and infsetsum'_converges_Un_disjoint: \\<open>infsetsum'_converges f (A \\<union> B)\\<close>", "lemma infsetsum'_converges_union_disjoint:\n  fixes f :: \"'a \\<Rightarrow> 'b::{topological_monoid_add, t2_space, comm_monoid_add}\"\n  assumes finite: \\<open>finite A\\<close>\n  assumes conv: \\<open>\\<And>a. a \\<in> A \\<Longrightarrow> infsetsum'_converges f (B a)\\<close>\n  assumes disj: \\<open>\\<And>a a'. a\\<in>A \\<Longrightarrow> a'\\<in>A \\<Longrightarrow> a\\<noteq>a' \\<Longrightarrow> B a \\<inter> B a' = {}\\<close>\n  shows \\<open>infsetsum'_converges f (\\<Union>a\\<in>A. B a)\\<close>", "lemma sum_infsetsum':\n  fixes f :: \"'a \\<Rightarrow> 'b::{topological_monoid_add, t2_space, comm_monoid_add}\"\n  assumes finite: \\<open>finite A\\<close>\n  assumes conv: \\<open>\\<And>a. a \\<in> A \\<Longrightarrow> infsetsum'_converges f (B a)\\<close>\n  assumes disj: \\<open>\\<And>a a'. a\\<in>A \\<Longrightarrow> a'\\<in>A \\<Longrightarrow> a\\<noteq>a' \\<Longrightarrow> B a \\<inter> B a' = {}\\<close>\n  shows \\<open>sum (\\<lambda>a. infsetsum' f (B a)) A = infsetsum' f (\\<Union>a\\<in>A. B a)\\<close>", "theorem infsetsum'_mono:\n  fixes f g :: \"'a\\<Rightarrow>'b::{ordered_comm_monoid_add,linorder_topology}\"\n  assumes \"infsetsum'_converges f A\"\n    and \"infsetsum'_converges g A\"\n  assumes leq: \"\\<And>x. x \\<in> A \\<Longrightarrow> f x \\<le> g x\"\n  shows \"infsetsum' f A \\<le> infsetsum' g A\""], "translations": [["", "lemma infsetsum'_converges_cong: \n  assumes t1: \"\\<And>x. x\\<in>A \\<Longrightarrow> f x = g x\"\n  shows \"infsetsum'_converges f A = infsetsum'_converges g A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum'_converges f A = infsetsum'_converges g A", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. infsetsum'_converges f A = infsetsum'_converges g A", "have \"sum f X = sum g X\"\n    if \"finite X\" and \"X \\<subseteq> A\"\n    for X"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f X = sum g X", "by (meson Finite_Cartesian_Product.sum_cong_aux subsetD t1 that(2))"], ["proof (state)\nthis:\n  \\<lbrakk>finite ?X; ?X \\<subseteq> A\\<rbrakk>\n  \\<Longrightarrow> sum f ?X = sum g ?X\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f A = infsetsum'_converges g A", "hence \"\\<forall>\\<^sub>F x in finite_subsets_at_top A. sum f x = sum g x\""], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?X; ?X \\<subseteq> A\\<rbrakk>\n  \\<Longrightarrow> sum f ?X = sum g ?X\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in finite_subsets_at_top A. sum f x = sum g x", "by (simp add: eventually_finite_subsets_at_top_weakI)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in finite_subsets_at_top A. sum f x = sum g x\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f A = infsetsum'_converges g A", "hence  \"(sum f \\<longlongrightarrow> x) (finite_subsets_at_top A) =\n         (sum g \\<longlongrightarrow> x) (finite_subsets_at_top A)\"\n    for x"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in finite_subsets_at_top A. sum f x = sum g x\n\ngoal (1 subgoal):\n 1. (sum f \\<longlongrightarrow> x) (finite_subsets_at_top A) =\n    (sum g \\<longlongrightarrow> x) (finite_subsets_at_top A)", "by (simp add: filterlim_cong)"], ["proof (state)\nthis:\n  (sum f \\<longlongrightarrow> ?x) (finite_subsets_at_top A) =\n  (sum g \\<longlongrightarrow> ?x) (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f A = infsetsum'_converges g A", "thus ?thesis"], ["proof (prove)\nusing this:\n  (sum f \\<longlongrightarrow> ?x) (finite_subsets_at_top A) =\n  (sum g \\<longlongrightarrow> ?x) (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f A = infsetsum'_converges g A", "by (simp add: infsetsum'_converges_def)"], ["proof (state)\nthis:\n  infsetsum'_converges f A = infsetsum'_converges g A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infsetsum'_cong:\n  assumes \"\\<And>x. x\\<in>A \\<Longrightarrow> f x = g x\"\n  shows \"infsetsum' f A = infsetsum' g A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum' f A = infsetsum' g A", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. infsetsum' f A = infsetsum' g A", "have \"sum f X = sum g X\"\n    if \"finite X\" and \"X \\<subseteq> A\"\n    for X"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f X = sum g X", "by (meson Finite_Cartesian_Product.sum_cong_aux assms in_mono that(2))"], ["proof (state)\nthis:\n  \\<lbrakk>finite ?X; ?X \\<subseteq> A\\<rbrakk>\n  \\<Longrightarrow> sum f ?X = sum g ?X\n\ngoal (1 subgoal):\n 1. infsetsum' f A = infsetsum' g A", "hence \"\\<forall>\\<^sub>F x in finite_subsets_at_top A. sum f x = sum g x\""], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?X; ?X \\<subseteq> A\\<rbrakk>\n  \\<Longrightarrow> sum f ?X = sum g ?X\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in finite_subsets_at_top A. sum f x = sum g x", "by (rule eventually_finite_subsets_at_top_weakI)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in finite_subsets_at_top A. sum f x = sum g x\n\ngoal (1 subgoal):\n 1. infsetsum' f A = infsetsum' g A", "hence \"(sum f \\<longlongrightarrow> x) (finite_subsets_at_top A) \\<longleftrightarrow> (sum g \\<longlongrightarrow> x) (finite_subsets_at_top A)\" \n    for x"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in finite_subsets_at_top A. sum f x = sum g x\n\ngoal (1 subgoal):\n 1. (sum f \\<longlongrightarrow> x) (finite_subsets_at_top A) =\n    (sum g \\<longlongrightarrow> x) (finite_subsets_at_top A)", "by (rule tendsto_cong)"], ["proof (state)\nthis:\n  (sum f \\<longlongrightarrow> ?x) (finite_subsets_at_top A) =\n  (sum g \\<longlongrightarrow> ?x) (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. infsetsum' f A = infsetsum' g A", "hence \"Lim (finite_subsets_at_top A) (sum f) = Lim (finite_subsets_at_top A) (sum g)\""], ["proof (prove)\nusing this:\n  (sum f \\<longlongrightarrow> ?x) (finite_subsets_at_top A) =\n  (sum g \\<longlongrightarrow> ?x) (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. Lim (finite_subsets_at_top A) (sum f) =\n    Lim (finite_subsets_at_top A) (sum g)", "unfolding Topological_Spaces.Lim_def[abs_def]"], ["proof (prove)\nusing this:\n  (sum f \\<longlongrightarrow> ?x) (finite_subsets_at_top A) =\n  (sum g \\<longlongrightarrow> ?x) (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. (THE l. (sum f \\<longlongrightarrow> l) (finite_subsets_at_top A)) =\n    (THE l. (sum g \\<longlongrightarrow> l) (finite_subsets_at_top A))", "by auto"], ["proof (state)\nthis:\n  Lim (finite_subsets_at_top A) (sum f) =\n  Lim (finite_subsets_at_top A) (sum g)\n\ngoal (1 subgoal):\n 1. infsetsum' f A = infsetsum' g A", "thus ?thesis"], ["proof (prove)\nusing this:\n  Lim (finite_subsets_at_top A) (sum f) =\n  Lim (finite_subsets_at_top A) (sum g)\n\ngoal (1 subgoal):\n 1. infsetsum' f A = infsetsum' g A", "unfolding infsetsum'_def"], ["proof (prove)\nusing this:\n  Lim (finite_subsets_at_top A) (sum f) =\n  Lim (finite_subsets_at_top A) (sum g)\n\ngoal (1 subgoal):\n 1. (if infsetsum'_converges f A then Lim (finite_subsets_at_top A) (sum f)\n     else (0::'b)) =\n    (if infsetsum'_converges g A then Lim (finite_subsets_at_top A) (sum g)\n     else (0::'b))", "using assms infsetsum'_converges_cong"], ["proof (prove)\nusing this:\n  Lim (finite_subsets_at_top A) (sum f) =\n  Lim (finite_subsets_at_top A) (sum g)\n  ?x \\<in> A \\<Longrightarrow> f ?x = g ?x\n  (\\<And>x. x \\<in> ?A \\<Longrightarrow> ?f x = ?g x) \\<Longrightarrow>\n  infsetsum'_converges ?f ?A = infsetsum'_converges ?g ?A\n\ngoal (1 subgoal):\n 1. (if infsetsum'_converges f A then Lim (finite_subsets_at_top A) (sum f)\n     else (0::'b)) =\n    (if infsetsum'_converges g A then Lim (finite_subsets_at_top A) (sum g)\n     else (0::'b))", "by auto"], ["proof (state)\nthis:\n  infsetsum' f A = infsetsum' g A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma abs_summable_finiteI0:\n  assumes \"\\<And>F. finite F \\<Longrightarrow> F\\<subseteq>S \\<Longrightarrow> sum (\\<lambda>x. norm (f x)) F \\<le> B\"\n    and \"B \\<ge> 0\"\n  shows \"f abs_summable_on S\" and \"infsetsum (\\<lambda>x. norm (f x)) S \\<le> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f abs_summable_on S &&& (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B", "proof-"], ["proof (state)\ngoal (2 subgoals):\n 1. f abs_summable_on S\n 2. (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B", "have t1: \"f abs_summable_on S \\<and> infsetsum (\\<lambda>x. norm (f x)) S \\<le> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f abs_summable_on S \\<and> (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B", "proof(cases \"S = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. S = {} \\<Longrightarrow>\n    f abs_summable_on S \\<and> (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B\n 2. S \\<noteq> {} \\<Longrightarrow>\n    f abs_summable_on S \\<and> (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B", "case True"], ["proof (state)\nthis:\n  S = {}\n\ngoal (2 subgoals):\n 1. S = {} \\<Longrightarrow>\n    f abs_summable_on S \\<and> (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B\n 2. S \\<noteq> {} \\<Longrightarrow>\n    f abs_summable_on S \\<and> (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B", "thus ?thesis"], ["proof (prove)\nusing this:\n  S = {}\n\ngoal (1 subgoal):\n 1. f abs_summable_on S \\<and> (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B", "by (simp add: assms(2))"], ["proof (state)\nthis:\n  f abs_summable_on S \\<and> (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    f abs_summable_on S \\<and> (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    f abs_summable_on S \\<and> (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B", "case False"], ["proof (state)\nthis:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    f abs_summable_on S \\<and> (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B", "define M normf where \"M = count_space S\" and \"normf x = ennreal (norm (f x))\" for x"], ["proof (state)\nthis:\n  M = count_space S\n  normf ?x = ennreal (norm (f ?x))\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    f abs_summable_on S \\<and> (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B", "have \"sum normf F \\<le> ennreal B\"\n      if \"finite F\" and \"F \\<subseteq> S\" and\n        \"\\<And>F. finite F \\<Longrightarrow> F \\<subseteq> S \\<Longrightarrow> (\\<Sum>i\\<in>F. ennreal (norm (f i))) \\<le> ennreal B\" and\n        \"ennreal 0 \\<le> ennreal B\"\n      for F"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum normf F \\<le> ennreal B", "using that"], ["proof (prove)\nusing this:\n  finite F\n  F \\<subseteq> S\n  \\<lbrakk>finite ?F; ?F \\<subseteq> S\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>i\\<in>?F. ennreal (norm (f i))) \\<le> ennreal B\n  ennreal 0 \\<le> ennreal B\n\ngoal (1 subgoal):\n 1. sum normf F \\<le> ennreal B", "unfolding normf_def[symmetric]"], ["proof (prove)\nusing this:\n  finite F\n  F \\<subseteq> S\n  \\<lbrakk>finite ?F; ?F \\<subseteq> S\\<rbrakk>\n  \\<Longrightarrow> sum normf ?F \\<le> ennreal B\n  ennreal 0 \\<le> ennreal B\n\ngoal (1 subgoal):\n 1. sum normf F \\<le> ennreal B", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>finite ?F; ?F \\<subseteq> S;\n   \\<And>F.\n      \\<lbrakk>finite F; F \\<subseteq> S\\<rbrakk>\n      \\<Longrightarrow> (\\<Sum>i\\<in>F. ennreal (norm (f i)))\n                        \\<le> ennreal B;\n   ennreal 0 \\<le> ennreal B\\<rbrakk>\n  \\<Longrightarrow> sum normf ?F \\<le> ennreal B\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    f abs_summable_on S \\<and> (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B", "hence normf_B: \"finite F \\<Longrightarrow> F\\<subseteq>S \\<Longrightarrow> sum normf F \\<le> ennreal B\" for F"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?F; ?F \\<subseteq> S;\n   \\<And>F.\n      \\<lbrakk>finite F; F \\<subseteq> S\\<rbrakk>\n      \\<Longrightarrow> (\\<Sum>i\\<in>F. ennreal (norm (f i)))\n                        \\<le> ennreal B;\n   ennreal 0 \\<le> ennreal B\\<rbrakk>\n  \\<Longrightarrow> sum normf ?F \\<le> ennreal B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite F; F \\<subseteq> S\\<rbrakk>\n    \\<Longrightarrow> sum normf F \\<le> ennreal B", "using assms[THEN ennreal_leI]"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?F; ?F \\<subseteq> S;\n   \\<And>F.\n      \\<lbrakk>finite F; F \\<subseteq> S\\<rbrakk>\n      \\<Longrightarrow> (\\<Sum>i\\<in>F. ennreal (norm (f i)))\n                        \\<le> ennreal B;\n   ennreal 0 \\<le> ennreal B\\<rbrakk>\n  \\<Longrightarrow> sum normf ?F \\<le> ennreal B\n  \\<lbrakk>finite ?F1; ?F1 \\<subseteq> S\\<rbrakk>\n  \\<Longrightarrow> ennreal (\\<Sum>x\\<in>?F1. norm (f x)) \\<le> ennreal B\n  ennreal 0 \\<le> ennreal B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite F; F \\<subseteq> S\\<rbrakk>\n    \\<Longrightarrow> sum normf F \\<le> ennreal B", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>finite ?F; ?F \\<subseteq> S\\<rbrakk>\n  \\<Longrightarrow> sum normf ?F \\<le> ennreal B\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    f abs_summable_on S \\<and> (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B", "have \"integral\\<^sup>S M g \\<le> B\" if \"simple_function M g\" and \"g \\<le> normf\" for g"], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>S M g \\<le> ennreal B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. integral\\<^sup>S M g \\<le> ennreal B", "define gS where \"gS = g ` S\""], ["proof (state)\nthis:\n  gS = g ` S\n\ngoal (1 subgoal):\n 1. integral\\<^sup>S M g \\<le> ennreal B", "have \"finite gS\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite gS", "using that"], ["proof (prove)\nusing this:\n  simple_function M g\n  g \\<le> normf\n\ngoal (1 subgoal):\n 1. finite gS", "unfolding gS_def M_def simple_function_count_space"], ["proof (prove)\nusing this:\n  finite (g ` S)\n  g \\<le> normf\n\ngoal (1 subgoal):\n 1. finite (g ` S)", "by simp"], ["proof (state)\nthis:\n  finite gS\n\ngoal (1 subgoal):\n 1. integral\\<^sup>S M g \\<le> ennreal B", "have \"gS \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gS \\<noteq> {}", "unfolding gS_def False"], ["proof (prove)\ngoal (1 subgoal):\n 1. g ` S \\<noteq> {}", "by (simp add: False)"], ["proof (state)\nthis:\n  gS \\<noteq> {}\n\ngoal (1 subgoal):\n 1. integral\\<^sup>S M g \\<le> ennreal B", "define part where \"part r = g -` {r} \\<inter> S\" for r"], ["proof (state)\nthis:\n  part ?r = g -` {?r} \\<inter> S\n\ngoal (1 subgoal):\n 1. integral\\<^sup>S M g \\<le> ennreal B", "have r_finite: \"r < \\<infinity>\" if \"r : gS\" for r"], ["proof (prove)\ngoal (1 subgoal):\n 1. r < \\<infinity>", "using \\<open>g \\<le> normf\\<close> that"], ["proof (prove)\nusing this:\n  g \\<le> normf\n  r \\<in> gS\n\ngoal (1 subgoal):\n 1. r < \\<infinity>", "unfolding gS_def le_fun_def normf_def"], ["proof (prove)\nusing this:\n  \\<forall>x. g x \\<le> ennreal (norm (f x))\n  r \\<in> g ` S\n\ngoal (1 subgoal):\n 1. r < \\<infinity>", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>x. g x \\<le> ennreal (norm (f x)); x \\<in> S;\n        r = g x\\<rbrakk>\n       \\<Longrightarrow> g x < top", "using ennreal_less_top neq_top_trans top.not_eq_extremum"], ["proof (prove)\nusing this:\n  ennreal ?x < top\n  \\<lbrakk>?y \\<noteq> top; ?x \\<le> ?y\\<rbrakk>\n  \\<Longrightarrow> ?x \\<noteq> top\n  (?a \\<noteq> top) = (?a < top)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>x. g x \\<le> ennreal (norm (f x)); x \\<in> S;\n        r = g x\\<rbrakk>\n       \\<Longrightarrow> g x < top", "by blast"], ["proof (state)\nthis:\n  ?r \\<in> gS \\<Longrightarrow> ?r < \\<infinity>\n\ngoal (1 subgoal):\n 1. integral\\<^sup>S M g \\<le> ennreal B", "define B' where \"B' r = (SUP F\\<in>{F. finite F \\<and> F\\<subseteq>part r}. sum normf F)\" for r"], ["proof (state)\nthis:\n  B' ?r = Sup (sum normf ` {F. finite F \\<and> F \\<subseteq> part ?r})\n\ngoal (1 subgoal):\n 1. integral\\<^sup>S M g \\<le> ennreal B", "have B'fin: \"B' r < \\<infinity>\" for r"], ["proof (prove)\ngoal (1 subgoal):\n 1. B' r < \\<infinity>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. B' r < \\<infinity>", "have \"B' r \\<le> (SUP F\\<in>{F. finite F \\<and> F\\<subseteq>part r}. sum normf F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B' r \\<le> Sup (sum normf ` {F. finite F \\<and> F \\<subseteq> part r})", "unfolding B'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup (sum normf ` {F. finite F \\<and> F \\<subseteq> part r})\n    \\<le> Sup (sum normf ` {F. finite F \\<and> F \\<subseteq> part r})", "by (metis (mono_tags, lifting) SUP_least SUP_upper)"], ["proof (state)\nthis:\n  B' r \\<le> Sup (sum normf ` {F. finite F \\<and> F \\<subseteq> part r})\n\ngoal (1 subgoal):\n 1. B' r < \\<infinity>", "also"], ["proof (state)\nthis:\n  B' r \\<le> Sup (sum normf ` {F. finite F \\<and> F \\<subseteq> part r})\n\ngoal (1 subgoal):\n 1. B' r < \\<infinity>", "have \"\\<dots> \\<le> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup (sum normf ` {F. finite F \\<and> F \\<subseteq> part r})\n    \\<le> ennreal B", "using normf_B"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?F; ?F \\<subseteq> S\\<rbrakk>\n  \\<Longrightarrow> sum normf ?F \\<le> ennreal B\n\ngoal (1 subgoal):\n 1. Sup (sum normf ` {F. finite F \\<and> F \\<subseteq> part r})\n    \\<le> ennreal B", "unfolding part_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?F; ?F \\<subseteq> S\\<rbrakk>\n  \\<Longrightarrow> sum normf ?F \\<le> ennreal B\n\ngoal (1 subgoal):\n 1. Sup (sum normf ` {F. finite F \\<and> F \\<subseteq> g -` {r} \\<inter> S})\n    \\<le> ennreal B", "by (metis (no_types, lifting) Int_subset_iff SUP_least mem_Collect_eq)"], ["proof (state)\nthis:\n  Sup (sum normf ` {F. finite F \\<and> F \\<subseteq> part r})\n  \\<le> ennreal B\n\ngoal (1 subgoal):\n 1. B' r < \\<infinity>", "also"], ["proof (state)\nthis:\n  Sup (sum normf ` {F. finite F \\<and> F \\<subseteq> part r})\n  \\<le> ennreal B\n\ngoal (1 subgoal):\n 1. B' r < \\<infinity>", "have \"\\<dots> < \\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal B < \\<infinity>", "by simp"], ["proof (state)\nthis:\n  ennreal B < \\<infinity>\n\ngoal (1 subgoal):\n 1. B' r < \\<infinity>", "finally"], ["proof (chain)\npicking this:\n  B' r < \\<infinity>", "show ?thesis"], ["proof (prove)\nusing this:\n  B' r < \\<infinity>\n\ngoal (1 subgoal):\n 1. B' r < \\<infinity>", "by simp"], ["proof (state)\nthis:\n  B' r < \\<infinity>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  B' ?r < \\<infinity>\n\ngoal (1 subgoal):\n 1. integral\\<^sup>S M g \\<le> ennreal B", "have sumB': \"sum B' gS \\<le> ennreal B + \\<epsilon>\" if \"\\<epsilon>>0\" for \\<epsilon>"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum B' gS \\<le> ennreal B + \\<epsilon>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum B' gS \\<le> ennreal B + \\<epsilon>", "define N \\<epsilon>N where \"N = card gS\" and \"\\<epsilon>N = \\<epsilon> / N\""], ["proof (state)\nthis:\n  N = card gS\n  \\<epsilon>N = \\<epsilon> / of_nat N\n\ngoal (1 subgoal):\n 1. sum B' gS \\<le> ennreal B + \\<epsilon>", "have \"N > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < N", "unfolding N_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < card gS", "using \\<open>gS\\<noteq>{}\\<close> \\<open>finite gS\\<close>"], ["proof (prove)\nusing this:\n  gS \\<noteq> {}\n  finite gS\n\ngoal (1 subgoal):\n 1. 0 < card gS", "by (simp add: card_gt_0_iff)"], ["proof (state)\nthis:\n  0 < N\n\ngoal (1 subgoal):\n 1. sum B' gS \\<le> ennreal B + \\<epsilon>", "from \\<epsilon>N_def that"], ["proof (chain)\npicking this:\n  \\<epsilon>N = \\<epsilon> / of_nat N\n  0 < \\<epsilon>", "have \"\\<epsilon>N > 0\""], ["proof (prove)\nusing this:\n  \\<epsilon>N = \\<epsilon> / of_nat N\n  0 < \\<epsilon>\n\ngoal (1 subgoal):\n 1. 0 < \\<epsilon>N", "by (simp add: ennreal_of_nat_eq_real_of_nat ennreal_zero_less_divide)"], ["proof (state)\nthis:\n  0 < \\<epsilon>N\n\ngoal (1 subgoal):\n 1. sum B' gS \\<le> ennreal B + \\<epsilon>", "have c1: \"\\<exists>y. B' r \\<le> sum normf y + \\<epsilon>N \\<and>\n             finite y \\<and> y \\<subseteq> part r\"\n          if \"B' r = 0\"\n          for r"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y.\n       B' r \\<le> sum normf y + \\<epsilon>N \\<and>\n       finite y \\<and> y \\<subseteq> part r", "using that"], ["proof (prove)\nusing this:\n  B' r = 0\n\ngoal (1 subgoal):\n 1. \\<exists>y.\n       B' r \\<le> sum normf y + \\<epsilon>N \\<and>\n       finite y \\<and> y \\<subseteq> part r", "by auto"], ["proof (state)\nthis:\n  B' ?r = 0 \\<Longrightarrow>\n  \\<exists>y.\n     B' ?r \\<le> sum normf y + \\<epsilon>N \\<and>\n     finite y \\<and> y \\<subseteq> part ?r\n\ngoal (1 subgoal):\n 1. sum B' gS \\<le> ennreal B + \\<epsilon>", "have c2: \"\\<exists>y. B' r \\<le> sum normf y + \\<epsilon>N \\<and>\n             finite y \\<and> y \\<subseteq> part r\"\n          if \"B' r \\<noteq> 0\"\n          for r"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y.\n       B' r \\<le> sum normf y + \\<epsilon>N \\<and>\n       finite y \\<and> y \\<subseteq> part r", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>y.\n       B' r \\<le> sum normf y + \\<epsilon>N \\<and>\n       finite y \\<and> y \\<subseteq> part r", "have \"B' r - \\<epsilon>N < B' r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B' r - \\<epsilon>N < B' r", "using B'fin \\<open>0 < \\<epsilon>N\\<close> ennreal_between that"], ["proof (prove)\nusing this:\n  B' ?r < \\<infinity>\n  0 < \\<epsilon>N\n  \\<lbrakk>0 < ?e; 0 < ?x; ?x < top\\<rbrakk> \\<Longrightarrow> ?x - ?e < ?x\n  B' r \\<noteq> 0\n\ngoal (1 subgoal):\n 1. B' r - \\<epsilon>N < B' r", "by fastforce"], ["proof (state)\nthis:\n  B' r - \\<epsilon>N < B' r\n\ngoal (1 subgoal):\n 1. \\<exists>y.\n       B' r \\<le> sum normf y + \\<epsilon>N \\<and>\n       finite y \\<and> y \\<subseteq> part r", "have \"B' r - \\<epsilon>N < Sup (sum normf ` {F. finite F \\<and> F \\<subseteq> part r}) \\<Longrightarrow>\n               \\<exists>F. B' r - \\<epsilon>N \\<le> sum normf F \\<and> finite F \\<and> F \\<subseteq> part r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B' r - \\<epsilon>N\n    < Sup (sum normf `\n           {F. finite F \\<and> F \\<subseteq> part r}) \\<Longrightarrow>\n    \\<exists>F.\n       B' r - \\<epsilon>N \\<le> sum normf F \\<and>\n       finite F \\<and> F \\<subseteq> part r", "by (metis (no_types, lifting) leD le_cases less_SUP_iff mem_Collect_eq)"], ["proof (state)\nthis:\n  B' r - \\<epsilon>N\n  < Sup (sum normf `\n         {F. finite F \\<and> F \\<subseteq> part r}) \\<Longrightarrow>\n  \\<exists>F.\n     B' r - \\<epsilon>N \\<le> sum normf F \\<and>\n     finite F \\<and> F \\<subseteq> part r\n\ngoal (1 subgoal):\n 1. \\<exists>y.\n       B' r \\<le> sum normf y + \\<epsilon>N \\<and>\n       finite y \\<and> y \\<subseteq> part r", "hence \"B' r - \\<epsilon>N < B' r \\<Longrightarrow>\n                \\<exists>F. B' r - \\<epsilon>N \\<le> sum normf F \\<and>\n                finite F \\<and> F \\<subseteq> part r\""], ["proof (prove)\nusing this:\n  B' r - \\<epsilon>N\n  < Sup (sum normf `\n         {F. finite F \\<and> F \\<subseteq> part r}) \\<Longrightarrow>\n  \\<exists>F.\n     B' r - \\<epsilon>N \\<le> sum normf F \\<and>\n     finite F \\<and> F \\<subseteq> part r\n\ngoal (1 subgoal):\n 1. B' r - \\<epsilon>N < B' r \\<Longrightarrow>\n    \\<exists>F.\n       B' r - \\<epsilon>N \\<le> sum normf F \\<and>\n       finite F \\<and> F \\<subseteq> part r", "by (subst (asm) (2) B'_def)"], ["proof (state)\nthis:\n  B' r - \\<epsilon>N < B' r \\<Longrightarrow>\n  \\<exists>F.\n     B' r - \\<epsilon>N \\<le> sum normf F \\<and>\n     finite F \\<and> F \\<subseteq> part r\n\ngoal (1 subgoal):\n 1. \\<exists>y.\n       B' r \\<le> sum normf y + \\<epsilon>N \\<and>\n       finite y \\<and> y \\<subseteq> part r", "then"], ["proof (chain)\npicking this:\n  B' r - \\<epsilon>N < B' r \\<Longrightarrow>\n  \\<exists>F.\n     B' r - \\<epsilon>N \\<le> sum normf F \\<and>\n     finite F \\<and> F \\<subseteq> part r", "obtain F where \"B' r - \\<epsilon>N \\<le> sum normf F\" and \"finite F\" and \"F \\<subseteq> part r\""], ["proof (prove)\nusing this:\n  B' r - \\<epsilon>N < B' r \\<Longrightarrow>\n  \\<exists>F.\n     B' r - \\<epsilon>N \\<le> sum normf F \\<and>\n     finite F \\<and> F \\<subseteq> part r\n\ngoal (1 subgoal):\n 1. (\\<And>F.\n        \\<lbrakk>B' r - \\<epsilon>N \\<le> sum normf F; finite F;\n         F \\<subseteq> part r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>B' r - \\<epsilon>N < B' r\\<close>"], ["proof (prove)\nusing this:\n  B' r - \\<epsilon>N < B' r \\<Longrightarrow>\n  \\<exists>F.\n     B' r - \\<epsilon>N \\<le> sum normf F \\<and>\n     finite F \\<and> F \\<subseteq> part r\n  B' r - \\<epsilon>N < B' r\n\ngoal (1 subgoal):\n 1. (\\<And>F.\n        \\<lbrakk>B' r - \\<epsilon>N \\<le> sum normf F; finite F;\n         F \\<subseteq> part r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  B' r - \\<epsilon>N \\<le> sum normf F\n  finite F\n  F \\<subseteq> part r\n\ngoal (1 subgoal):\n 1. \\<exists>y.\n       B' r \\<le> sum normf y + \\<epsilon>N \\<and>\n       finite y \\<and> y \\<subseteq> part r", "thus \"\\<exists>F. B' r \\<le> sum normf F + \\<epsilon>N \\<and> finite F \\<and> F \\<subseteq> part r\""], ["proof (prove)\nusing this:\n  B' r - \\<epsilon>N \\<le> sum normf F\n  finite F\n  F \\<subseteq> part r\n\ngoal (1 subgoal):\n 1. \\<exists>F.\n       B' r \\<le> sum normf F + \\<epsilon>N \\<and>\n       finite F \\<and> F \\<subseteq> part r", "by (metis add.commute ennreal_minus_le_iff)"], ["proof (state)\nthis:\n  \\<exists>F.\n     B' r \\<le> sum normf F + \\<epsilon>N \\<and>\n     finite F \\<and> F \\<subseteq> part r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  B' ?r \\<noteq> 0 \\<Longrightarrow>\n  \\<exists>y.\n     B' ?r \\<le> sum normf y + \\<epsilon>N \\<and>\n     finite y \\<and> y \\<subseteq> part ?r\n\ngoal (1 subgoal):\n 1. sum B' gS \\<le> ennreal B + \\<epsilon>", "have \"\\<forall>x. \\<exists>y. B' x \\<le> sum normf y + \\<epsilon>N \\<and>\n            finite y \\<and> y \\<subseteq> part x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       \\<exists>y.\n          B' x \\<le> sum normf y + \\<epsilon>N \\<and>\n          finite y \\<and> y \\<subseteq> part x", "using c1 c2"], ["proof (prove)\nusing this:\n  B' ?r = 0 \\<Longrightarrow>\n  \\<exists>y.\n     B' ?r \\<le> sum normf y + \\<epsilon>N \\<and>\n     finite y \\<and> y \\<subseteq> part ?r\n  B' ?r \\<noteq> 0 \\<Longrightarrow>\n  \\<exists>y.\n     B' ?r \\<le> sum normf y + \\<epsilon>N \\<and>\n     finite y \\<and> y \\<subseteq> part ?r\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       \\<exists>y.\n          B' x \\<le> sum normf y + \\<epsilon>N \\<and>\n          finite y \\<and> y \\<subseteq> part x", "by blast"], ["proof (state)\nthis:\n  \\<forall>x.\n     \\<exists>y.\n        B' x \\<le> sum normf y + \\<epsilon>N \\<and>\n        finite y \\<and> y \\<subseteq> part x\n\ngoal (1 subgoal):\n 1. sum B' gS \\<le> ennreal B + \\<epsilon>", "hence \"\\<exists>F. \\<forall>x. B' x \\<le> sum normf (F x) + \\<epsilon>N \\<and> finite (F x) \\<and> F x \\<subseteq> part x\""], ["proof (prove)\nusing this:\n  \\<forall>x.\n     \\<exists>y.\n        B' x \\<le> sum normf y + \\<epsilon>N \\<and>\n        finite y \\<and> y \\<subseteq> part x\n\ngoal (1 subgoal):\n 1. \\<exists>F.\n       \\<forall>x.\n          B' x \\<le> sum normf (F x) + \\<epsilon>N \\<and>\n          finite (F x) \\<and> F x \\<subseteq> part x", "by metis"], ["proof (state)\nthis:\n  \\<exists>F.\n     \\<forall>x.\n        B' x \\<le> sum normf (F x) + \\<epsilon>N \\<and>\n        finite (F x) \\<and> F x \\<subseteq> part x\n\ngoal (1 subgoal):\n 1. sum B' gS \\<le> ennreal B + \\<epsilon>", "then"], ["proof (chain)\npicking this:\n  \\<exists>F.\n     \\<forall>x.\n        B' x \\<le> sum normf (F x) + \\<epsilon>N \\<and>\n        finite (F x) \\<and> F x \\<subseteq> part x", "obtain F where F: \"sum normf (F r) + \\<epsilon>N \\<ge> B' r\" and Ffin: \"finite (F r)\" and Fpartr: \"F r \\<subseteq> part r\" for r"], ["proof (prove)\nusing this:\n  \\<exists>F.\n     \\<forall>x.\n        B' x \\<le> sum normf (F x) + \\<epsilon>N \\<and>\n        finite (F x) \\<and> F x \\<subseteq> part x\n\ngoal (1 subgoal):\n 1. (\\<And>F.\n        \\<lbrakk>\\<And>r. B' r \\<le> sum normf (F r) + \\<epsilon>N;\n         \\<And>r. finite (F r); \\<And>r. F r \\<subseteq> part r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using atomize_elim"], ["proof (prove)\nusing this:\n  \\<exists>F.\n     \\<forall>x.\n        B' x \\<le> sum normf (F x) + \\<epsilon>N \\<and>\n        finite (F x) \\<and> F x \\<subseteq> part x\n  (\\<And>x. ?P x \\<Longrightarrow> ?Q) \\<equiv>\n  (\\<exists>x. ?P x \\<Longrightarrow> ?Q)\n  (\\<lbrakk>?A; ?B\\<rbrakk> \\<Longrightarrow> ?C) \\<equiv>\n  (?A \\<and> ?B \\<Longrightarrow> ?C)\n  (\\<lbrakk>?A \\<Longrightarrow> ?C; ?B \\<Longrightarrow> ?C\\<rbrakk>\n   \\<Longrightarrow> ?C) \\<equiv>\n  ((?A \\<or> ?B \\<Longrightarrow> ?C) \\<Longrightarrow> ?C)\n  (\\<And>B. (?A \\<Longrightarrow> B) \\<Longrightarrow> B) \\<equiv> ?A\n\ngoal (1 subgoal):\n 1. (\\<And>F.\n        \\<lbrakk>\\<And>r. B' r \\<le> sum normf (F r) + \\<epsilon>N;\n         \\<And>r. finite (F r); \\<And>r. F r \\<subseteq> part r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  B' ?r \\<le> sum normf (F ?r) + \\<epsilon>N\n  finite (F ?r)\n  F ?r \\<subseteq> part ?r\n\ngoal (1 subgoal):\n 1. sum B' gS \\<le> ennreal B + \\<epsilon>", "have w1: \"finite gS\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite gS", "by (simp add: \\<open>finite gS\\<close>)"], ["proof (state)\nthis:\n  finite gS\n\ngoal (1 subgoal):\n 1. sum B' gS \\<le> ennreal B + \\<epsilon>", "have w2: \"\\<forall>i\\<in>gS. finite (F i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>gS. finite (F i)", "by (simp add: Ffin)"], ["proof (state)\nthis:\n  \\<forall>i\\<in>gS. finite (F i)\n\ngoal (1 subgoal):\n 1. sum B' gS \\<le> ennreal B + \\<epsilon>", "have False\n          if \"\\<And>r. F r \\<subseteq> g -` {r} \\<and> F r \\<subseteq> S\"\n            and \"i \\<in> gS\" and \"j \\<in> gS\" and \"i \\<noteq> j\" and \"x \\<in> F i\" and \"x \\<in> F j\"\n          for i j x"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "by (metis subsetD that(1) that(4) that(5) that(6) vimage_singleton_eq)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>r. F r \\<subseteq> g -` {r} \\<and> F r \\<subseteq> S;\n   ?i \\<in> gS; ?j \\<in> gS; ?i \\<noteq> ?j; ?x \\<in> F ?i;\n   ?x \\<in> F ?j\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. sum B' gS \\<le> ennreal B + \\<epsilon>", "hence w3: \"\\<forall>i\\<in>gS. \\<forall>j\\<in>gS. i \\<noteq> j \\<longrightarrow> F i \\<inter> F j = {}\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>r. F r \\<subseteq> g -` {r} \\<and> F r \\<subseteq> S;\n   ?i \\<in> gS; ?j \\<in> gS; ?i \\<noteq> ?j; ?x \\<in> F ?i;\n   ?x \\<in> F ?j\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>gS.\n       \\<forall>j\\<in>gS.\n          i \\<noteq> j \\<longrightarrow> F i \\<inter> F j = {}", "using Fpartr[unfolded part_def]"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>r. F r \\<subseteq> g -` {r} \\<and> F r \\<subseteq> S;\n   ?i \\<in> gS; ?j \\<in> gS; ?i \\<noteq> ?j; ?x \\<in> F ?i;\n   ?x \\<in> F ?j\\<rbrakk>\n  \\<Longrightarrow> False\n  F ?r \\<subseteq> g -` {?r} \\<inter> S\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>gS.\n       \\<forall>j\\<in>gS.\n          i \\<noteq> j \\<longrightarrow> F i \\<inter> F j = {}", "by auto"], ["proof (state)\nthis:\n  \\<forall>i\\<in>gS.\n     \\<forall>j\\<in>gS. i \\<noteq> j \\<longrightarrow> F i \\<inter> F j = {}\n\ngoal (1 subgoal):\n 1. sum B' gS \\<le> ennreal B + \\<epsilon>", "have w4: \"sum normf (\\<Union> (F ` gS)) + \\<epsilon> = sum normf (\\<Union> (F ` gS)) + \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum normf (\\<Union> (F ` gS)) + \\<epsilon> =\n    sum normf (\\<Union> (F ` gS)) + \\<epsilon>", "by simp"], ["proof (state)\nthis:\n  sum normf (\\<Union> (F ` gS)) + \\<epsilon> =\n  sum normf (\\<Union> (F ` gS)) + \\<epsilon>\n\ngoal (1 subgoal):\n 1. sum B' gS \\<le> ennreal B + \\<epsilon>", "have \"sum B' gS \\<le> (\\<Sum>r\\<in>gS. sum normf (F r) + \\<epsilon>N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum B' gS \\<le> (\\<Sum>r\\<in>gS. sum normf (F r) + \\<epsilon>N)", "using F"], ["proof (prove)\nusing this:\n  B' ?r \\<le> sum normf (F ?r) + \\<epsilon>N\n\ngoal (1 subgoal):\n 1. sum B' gS \\<le> (\\<Sum>r\\<in>gS. sum normf (F r) + \\<epsilon>N)", "by (simp add: sum_mono)"], ["proof (state)\nthis:\n  sum B' gS \\<le> (\\<Sum>r\\<in>gS. sum normf (F r) + \\<epsilon>N)\n\ngoal (1 subgoal):\n 1. sum B' gS \\<le> ennreal B + \\<epsilon>", "also"], ["proof (state)\nthis:\n  sum B' gS \\<le> (\\<Sum>r\\<in>gS. sum normf (F r) + \\<epsilon>N)\n\ngoal (1 subgoal):\n 1. sum B' gS \\<le> ennreal B + \\<epsilon>", "have \"\\<dots> = (\\<Sum>r\\<in>gS. sum normf (F r)) + (\\<Sum>r\\<in>gS. \\<epsilon>N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>r\\<in>gS. sum normf (F r) + \\<epsilon>N) =\n    (\\<Sum>r\\<in>gS. sum normf (F r)) + (\\<Sum>r\\<in>gS. \\<epsilon>N)", "by (simp add: sum.distrib)"], ["proof (state)\nthis:\n  (\\<Sum>r\\<in>gS. sum normf (F r) + \\<epsilon>N) =\n  (\\<Sum>r\\<in>gS. sum normf (F r)) + (\\<Sum>r\\<in>gS. \\<epsilon>N)\n\ngoal (1 subgoal):\n 1. sum B' gS \\<le> ennreal B + \\<epsilon>", "also"], ["proof (state)\nthis:\n  (\\<Sum>r\\<in>gS. sum normf (F r) + \\<epsilon>N) =\n  (\\<Sum>r\\<in>gS. sum normf (F r)) + (\\<Sum>r\\<in>gS. \\<epsilon>N)\n\ngoal (1 subgoal):\n 1. sum B' gS \\<le> ennreal B + \\<epsilon>", "have \"\\<dots> = (\\<Sum>r\\<in>gS. sum normf (F r)) + (card gS * \\<epsilon>N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>r\\<in>gS. sum normf (F r)) + (\\<Sum>r\\<in>gS. \\<epsilon>N) =\n    (\\<Sum>r\\<in>gS. sum normf (F r)) + of_nat (card gS) * \\<epsilon>N", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>r\\<in>gS. sum normf (F r)) + (\\<Sum>r\\<in>gS. \\<epsilon>N) =\n  (\\<Sum>r\\<in>gS. sum normf (F r)) + of_nat (card gS) * \\<epsilon>N\n\ngoal (1 subgoal):\n 1. sum B' gS \\<le> ennreal B + \\<epsilon>", "also"], ["proof (state)\nthis:\n  (\\<Sum>r\\<in>gS. sum normf (F r)) + (\\<Sum>r\\<in>gS. \\<epsilon>N) =\n  (\\<Sum>r\\<in>gS. sum normf (F r)) + of_nat (card gS) * \\<epsilon>N\n\ngoal (1 subgoal):\n 1. sum B' gS \\<le> ennreal B + \\<epsilon>", "have \"\\<dots> = (\\<Sum>r\\<in>gS. sum normf (F r)) + \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>r\\<in>gS. sum normf (F r)) + of_nat (card gS) * \\<epsilon>N =\n    (\\<Sum>r\\<in>gS. sum normf (F r)) + \\<epsilon>", "unfolding \\<epsilon>N_def N_def[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>r\\<in>gS. sum normf (F r)) + of_nat N * (\\<epsilon> / of_nat N) =\n    (\\<Sum>r\\<in>gS. sum normf (F r)) + \\<epsilon>", "using \\<open>N>0\\<close>"], ["proof (prove)\nusing this:\n  0 < N\n\ngoal (1 subgoal):\n 1. (\\<Sum>r\\<in>gS. sum normf (F r)) + of_nat N * (\\<epsilon> / of_nat N) =\n    (\\<Sum>r\\<in>gS. sum normf (F r)) + \\<epsilon>", "by (simp add: ennreal_times_divide mult.commute mult_divide_eq_ennreal)"], ["proof (state)\nthis:\n  (\\<Sum>r\\<in>gS. sum normf (F r)) + of_nat (card gS) * \\<epsilon>N =\n  (\\<Sum>r\\<in>gS. sum normf (F r)) + \\<epsilon>\n\ngoal (1 subgoal):\n 1. sum B' gS \\<le> ennreal B + \\<epsilon>", "also"], ["proof (state)\nthis:\n  (\\<Sum>r\\<in>gS. sum normf (F r)) + of_nat (card gS) * \\<epsilon>N =\n  (\\<Sum>r\\<in>gS. sum normf (F r)) + \\<epsilon>\n\ngoal (1 subgoal):\n 1. sum B' gS \\<le> ennreal B + \\<epsilon>", "have \"\\<dots> = sum normf (\\<Union> (F ` gS)) + \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>r\\<in>gS. sum normf (F r)) + \\<epsilon> =\n    sum normf (\\<Union> (F ` gS)) + \\<epsilon>", "using w1 w2 w3 w4"], ["proof (prove)\nusing this:\n  finite gS\n  \\<forall>i\\<in>gS. finite (F i)\n  \\<forall>i\\<in>gS.\n     \\<forall>j\\<in>gS. i \\<noteq> j \\<longrightarrow> F i \\<inter> F j = {}\n  sum normf (\\<Union> (F ` gS)) + \\<epsilon> =\n  sum normf (\\<Union> (F ` gS)) + \\<epsilon>\n\ngoal (1 subgoal):\n 1. (\\<Sum>r\\<in>gS. sum normf (F r)) + \\<epsilon> =\n    sum normf (\\<Union> (F ` gS)) + \\<epsilon>", "by (subst sum.UNION_disjoint[symmetric])"], ["proof (state)\nthis:\n  (\\<Sum>r\\<in>gS. sum normf (F r)) + \\<epsilon> =\n  sum normf (\\<Union> (F ` gS)) + \\<epsilon>\n\ngoal (1 subgoal):\n 1. sum B' gS \\<le> ennreal B + \\<epsilon>", "also"], ["proof (state)\nthis:\n  (\\<Sum>r\\<in>gS. sum normf (F r)) + \\<epsilon> =\n  sum normf (\\<Union> (F ` gS)) + \\<epsilon>\n\ngoal (1 subgoal):\n 1. sum B' gS \\<le> ennreal B + \\<epsilon>", "have \"\\<dots> \\<le> B + \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum normf (\\<Union> (F ` gS)) + \\<epsilon> \\<le> ennreal B + \\<epsilon>", "using \\<open>finite gS\\<close> normf_B add_right_mono Ffin Fpartr"], ["proof (prove)\nusing this:\n  finite gS\n  \\<lbrakk>finite ?F; ?F \\<subseteq> S\\<rbrakk>\n  \\<Longrightarrow> sum normf ?F \\<le> ennreal B\n  ?a \\<le> ?b \\<Longrightarrow> ?a + ?c \\<le> ?b + ?c\n  finite (F ?r)\n  F ?r \\<subseteq> part ?r\n\ngoal (1 subgoal):\n 1. sum normf (\\<Union> (F ` gS)) + \\<epsilon> \\<le> ennreal B + \\<epsilon>", "unfolding part_def"], ["proof (prove)\nusing this:\n  finite gS\n  \\<lbrakk>finite ?F; ?F \\<subseteq> S\\<rbrakk>\n  \\<Longrightarrow> sum normf ?F \\<le> ennreal B\n  ?a \\<le> ?b \\<Longrightarrow> ?a + ?c \\<le> ?b + ?c\n  finite (F ?r)\n  F ?r \\<subseteq> g -` {?r} \\<inter> S\n\ngoal (1 subgoal):\n 1. sum normf (\\<Union> (F ` gS)) + \\<epsilon> \\<le> ennreal B + \\<epsilon>", "by (simp add: \\<open>gS \\<noteq> {}\\<close> cSUP_least)"], ["proof (state)\nthis:\n  sum normf (\\<Union> (F ` gS)) + \\<epsilon> \\<le> ennreal B + \\<epsilon>\n\ngoal (1 subgoal):\n 1. sum B' gS \\<le> ennreal B + \\<epsilon>", "finally"], ["proof (chain)\npicking this:\n  sum B' gS \\<le> ennreal B + \\<epsilon>", "show ?thesis"], ["proof (prove)\nusing this:\n  sum B' gS \\<le> ennreal B + \\<epsilon>\n\ngoal (1 subgoal):\n 1. sum B' gS \\<le> ennreal B + \\<epsilon>", "by auto"], ["proof (state)\nthis:\n  sum B' gS \\<le> ennreal B + \\<epsilon>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < ?\\<epsilon> \\<Longrightarrow> sum B' gS \\<le> ennreal B + ?\\<epsilon>\n\ngoal (1 subgoal):\n 1. integral\\<^sup>S M g \\<le> ennreal B", "hence sumB': \"sum B' gS \\<le> B\""], ["proof (prove)\nusing this:\n  0 < ?\\<epsilon> \\<Longrightarrow> sum B' gS \\<le> ennreal B + ?\\<epsilon>\n\ngoal (1 subgoal):\n 1. sum B' gS \\<le> ennreal B", "using ennreal_le_epsilon ennreal_less_zero_iff"], ["proof (prove)\nusing this:\n  0 < ?\\<epsilon> \\<Longrightarrow> sum B' gS \\<le> ennreal B + ?\\<epsilon>\n  (\\<And>e.\n      \\<lbrakk>?y < top; 0 < e\\<rbrakk>\n      \\<Longrightarrow> ?x \\<le> ?y + ennreal e) \\<Longrightarrow>\n  ?x \\<le> ?y\n  (0 < ennreal ?x) = (0 < ?x)\n\ngoal (1 subgoal):\n 1. sum B' gS \\<le> ennreal B", "by blast"], ["proof (state)\nthis:\n  sum B' gS \\<le> ennreal B\n\ngoal (1 subgoal):\n 1. integral\\<^sup>S M g \\<le> ennreal B", "have \"\\<forall>r. \\<exists>y. r \\<in> gS \\<longrightarrow> B' r = ennreal y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>r. \\<exists>y. r \\<in> gS \\<longrightarrow> B' r = ennreal y", "using B'fin less_top_ennreal"], ["proof (prove)\nusing this:\n  B' ?r < \\<infinity>\n  (?x < top) = (\\<exists>r\\<ge>0. ?x = ennreal r)\n\ngoal (1 subgoal):\n 1. \\<forall>r. \\<exists>y. r \\<in> gS \\<longrightarrow> B' r = ennreal y", "by auto"], ["proof (state)\nthis:\n  \\<forall>r. \\<exists>y. r \\<in> gS \\<longrightarrow> B' r = ennreal y\n\ngoal (1 subgoal):\n 1. integral\\<^sup>S M g \\<le> ennreal B", "hence \"\\<exists>B''. \\<forall>r. r \\<in> gS \\<longrightarrow> B' r = ennreal (B'' r)\""], ["proof (prove)\nusing this:\n  \\<forall>r. \\<exists>y. r \\<in> gS \\<longrightarrow> B' r = ennreal y\n\ngoal (1 subgoal):\n 1. \\<exists>B''.\n       \\<forall>r. r \\<in> gS \\<longrightarrow> B' r = ennreal (B'' r)", "by (rule_tac choice)"], ["proof (state)\nthis:\n  \\<exists>B''.\n     \\<forall>r. r \\<in> gS \\<longrightarrow> B' r = ennreal (B'' r)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>S M g \\<le> ennreal B", "then"], ["proof (chain)\npicking this:\n  \\<exists>B''.\n     \\<forall>r. r \\<in> gS \\<longrightarrow> B' r = ennreal (B'' r)", "obtain B'' where B'': \"B' r = ennreal (B'' r)\" if \"r \\<in> gS\" for r"], ["proof (prove)\nusing this:\n  \\<exists>B''.\n     \\<forall>r. r \\<in> gS \\<longrightarrow> B' r = ennreal (B'' r)\n\ngoal (1 subgoal):\n 1. (\\<And>B''.\n        (\\<And>r.\n            r \\<in> gS \\<Longrightarrow>\n            B' r = ennreal (B'' r)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by atomize_elim"], ["proof (state)\nthis:\n  ?r \\<in> gS \\<Longrightarrow> B' ?r = ennreal (B'' ?r)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>S M g \\<le> ennreal B", "have cases[case_names zero finite infinite]: \"P\" if \"r=0 \\<Longrightarrow> P\" and \"finite (part r) \\<Longrightarrow> P\"\n        and \"infinite (part r) \\<Longrightarrow> r\\<noteq>0 \\<Longrightarrow> P\" for P r"], ["proof (prove)\ngoal (1 subgoal):\n 1. P", "using that"], ["proof (prove)\nusing this:\n  r = 0 \\<Longrightarrow> P\n  finite (part r) \\<Longrightarrow> P\n  \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk> \\<Longrightarrow> P\n\ngoal (1 subgoal):\n 1. P", "by metis"], ["proof (state)\nthis:\n  \\<lbrakk>?r = 0 \\<Longrightarrow> ?P;\n   finite (part ?r) \\<Longrightarrow> ?P;\n   \\<lbrakk>infinite (part ?r); ?r \\<noteq> 0\\<rbrakk>\n   \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. integral\\<^sup>S M g \\<le> ennreal B", "have emeasure_B': \"r * emeasure M (part r) \\<le> B' r\" if \"r : gS\" for r"], ["proof (prove)\ngoal (1 subgoal):\n 1. r * emeasure M (part r) \\<le> B' r", "proof (cases rule:cases[of r])"], ["proof (state)\ngoal (3 subgoals):\n 1. r = 0 \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r\n 2. finite (part r) \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r\n 3. \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r", "case zero"], ["proof (state)\nthis:\n  r = 0\n\ngoal (3 subgoals):\n 1. r = 0 \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r\n 2. finite (part r) \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r\n 3. \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r", "thus ?thesis"], ["proof (prove)\nusing this:\n  r = 0\n\ngoal (1 subgoal):\n 1. r * emeasure M (part r) \\<le> B' r", "by simp"], ["proof (state)\nthis:\n  r * emeasure M (part r) \\<le> B' r\n\ngoal (2 subgoals):\n 1. finite (part r) \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r\n 2. \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. finite (part r) \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r\n 2. \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r", "case finite"], ["proof (state)\nthis:\n  finite (part r)\n\ngoal (2 subgoals):\n 1. finite (part r) \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r\n 2. \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r", "have s1: \"sum g F \\<le> sum normf F\"\n          if \"F \\<in> {F. finite F \\<and> F \\<subseteq> part r}\"\n          for F"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum g F \\<le> sum normf F", "using \\<open>g \\<le> normf\\<close>"], ["proof (prove)\nusing this:\n  g \\<le> normf\n\ngoal (1 subgoal):\n 1. sum g F \\<le> sum normf F", "by (simp add: le_fun_def sum_mono)"], ["proof (state)\nthis:\n  ?F \\<in> {F. finite F \\<and> F \\<subseteq> part r} \\<Longrightarrow>\n  sum g ?F \\<le> sum normf ?F\n\ngoal (2 subgoals):\n 1. finite (part r) \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r\n 2. \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r", "have \"r * of_nat (card (part r)) = r * (\\<Sum>x\\<in>part r. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r * of_nat (card (part r)) = r * (\\<Sum>x\\<in>part r. 1)", "by simp"], ["proof (state)\nthis:\n  r * of_nat (card (part r)) = r * (\\<Sum>x\\<in>part r. 1)\n\ngoal (2 subgoals):\n 1. finite (part r) \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r\n 2. \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r", "also"], ["proof (state)\nthis:\n  r * of_nat (card (part r)) = r * (\\<Sum>x\\<in>part r. 1)\n\ngoal (2 subgoals):\n 1. finite (part r) \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r\n 2. \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r", "have \"\\<dots> = (\\<Sum>x\\<in>part r. r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r * (\\<Sum>x\\<in>part r. 1) = (\\<Sum>x\\<in>part r. r)", "using mult.commute"], ["proof (prove)\nusing this:\n  ?a * ?b = ?b * ?a\n\ngoal (1 subgoal):\n 1. r * (\\<Sum>x\\<in>part r. 1) = (\\<Sum>x\\<in>part r. r)", "by auto"], ["proof (state)\nthis:\n  r * (\\<Sum>x\\<in>part r. 1) = (\\<Sum>x\\<in>part r. r)\n\ngoal (2 subgoals):\n 1. finite (part r) \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r\n 2. \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r", "also"], ["proof (state)\nthis:\n  r * (\\<Sum>x\\<in>part r. 1) = (\\<Sum>x\\<in>part r. r)\n\ngoal (2 subgoals):\n 1. finite (part r) \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r\n 2. \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r", "have \"\\<dots> = (\\<Sum>x\\<in>part r. g x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>part r. r) = sum g (part r)", "unfolding part_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>g -` {r} \\<inter> S. r) = sum g (g -` {r} \\<inter> S)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>part r. r) = sum g (part r)\n\ngoal (2 subgoals):\n 1. finite (part r) \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r\n 2. \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>part r. r) = sum g (part r)\n\ngoal (2 subgoals):\n 1. finite (part r) \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r\n 2. \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r", "have \"\\<dots> \\<le> (SUP F\\<in>{F. finite F \\<and> F\\<subseteq>part r}. sum g F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum g (part r)\n    \\<le> Sup (sum g ` {F. finite F \\<and> F \\<subseteq> part r})", "using finite"], ["proof (prove)\nusing this:\n  finite (part r)\n\ngoal (1 subgoal):\n 1. sum g (part r)\n    \\<le> Sup (sum g ` {F. finite F \\<and> F \\<subseteq> part r})", "by (simp add: Sup_upper)"], ["proof (state)\nthis:\n  sum g (part r)\n  \\<le> Sup (sum g ` {F. finite F \\<and> F \\<subseteq> part r})\n\ngoal (2 subgoals):\n 1. finite (part r) \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r\n 2. \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r", "also"], ["proof (state)\nthis:\n  sum g (part r)\n  \\<le> Sup (sum g ` {F. finite F \\<and> F \\<subseteq> part r})\n\ngoal (2 subgoals):\n 1. finite (part r) \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r\n 2. \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r", "have \"\\<dots> \\<le> B' r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup (sum g ` {F. finite F \\<and> F \\<subseteq> part r}) \\<le> B' r", "unfolding B'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup (sum g ` {F. finite F \\<and> F \\<subseteq> part r})\n    \\<le> Sup (sum normf ` {F. finite F \\<and> F \\<subseteq> part r})", "using s1 SUP_subset_mono"], ["proof (prove)\nusing this:\n  ?F \\<in> {F. finite F \\<and> F \\<subseteq> part r} \\<Longrightarrow>\n  sum g ?F \\<le> sum normf ?F\n  \\<lbrakk>?A \\<subseteq> ?B;\n   \\<And>x. x \\<in> ?A \\<Longrightarrow> ?f x \\<le> ?g x\\<rbrakk>\n  \\<Longrightarrow> Sup (?f ` ?A) \\<le> Sup (?g ` ?B)\n\ngoal (1 subgoal):\n 1. Sup (sum g ` {F. finite F \\<and> F \\<subseteq> part r})\n    \\<le> Sup (sum normf ` {F. finite F \\<and> F \\<subseteq> part r})", "by blast"], ["proof (state)\nthis:\n  Sup (sum g ` {F. finite F \\<and> F \\<subseteq> part r}) \\<le> B' r\n\ngoal (2 subgoals):\n 1. finite (part r) \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r\n 2. \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r", "finally"], ["proof (chain)\npicking this:\n  r * of_nat (card (part r)) \\<le> B' r", "have \"r * of_nat (card (part r)) \\<le> B' r\""], ["proof (prove)\nusing this:\n  r * of_nat (card (part r)) \\<le> B' r\n\ngoal (1 subgoal):\n 1. r * of_nat (card (part r)) \\<le> B' r", "by assumption"], ["proof (state)\nthis:\n  r * of_nat (card (part r)) \\<le> B' r\n\ngoal (2 subgoals):\n 1. finite (part r) \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r\n 2. \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r", "thus ?thesis"], ["proof (prove)\nusing this:\n  r * of_nat (card (part r)) \\<le> B' r\n\ngoal (1 subgoal):\n 1. r * emeasure M (part r) \\<le> B' r", "unfolding M_def"], ["proof (prove)\nusing this:\n  r * of_nat (card (part r)) \\<le> B' r\n\ngoal (1 subgoal):\n 1. r * emeasure (count_space S) (part r) \\<le> B' r", "using part_def finite"], ["proof (prove)\nusing this:\n  r * of_nat (card (part r)) \\<le> B' r\n  part ?r = g -` {?r} \\<inter> S\n  finite (part r)\n\ngoal (1 subgoal):\n 1. r * emeasure (count_space S) (part r) \\<le> B' r", "by auto"], ["proof (state)\nthis:\n  r * emeasure M (part r) \\<le> B' r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r", "case infinite"], ["proof (state)\nthis:\n  infinite (part r)\n  r \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r", "from r_finite[OF \\<open>r : gS\\<close>]"], ["proof (chain)\npicking this:\n  r < \\<infinity>", "obtain r' where r': \"r = ennreal r'\""], ["proof (prove)\nusing this:\n  r < \\<infinity>\n\ngoal (1 subgoal):\n 1. (\\<And>r'. r = ennreal r' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using ennreal_cases"], ["proof (prove)\nusing this:\n  r < \\<infinity>\n  \\<lbrakk>\\<And>r.\n              \\<lbrakk>0 \\<le> r; ?x = ennreal r\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   ?x = top \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>r'. r = ennreal r' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  r = ennreal r'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r", "with infinite"], ["proof (chain)\npicking this:\n  infinite (part r)\n  r \\<noteq> 0\n  r = ennreal r'", "have \"r' > 0\""], ["proof (prove)\nusing this:\n  infinite (part r)\n  r \\<noteq> 0\n  r = ennreal r'\n\ngoal (1 subgoal):\n 1. 0 < r'", "using ennreal_less_zero_iff not_gr_zero"], ["proof (prove)\nusing this:\n  infinite (part r)\n  r \\<noteq> 0\n  r = ennreal r'\n  (0 < ennreal ?x) = (0 < ?x)\n  (\\<not> (0::?'a) < ?n) = (?n = (0::?'a))\n\ngoal (1 subgoal):\n 1. 0 < r'", "by blast"], ["proof (state)\nthis:\n  0 < r'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r", "obtain N::nat where N:\"N > B / r'\" and \"real N > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<lbrakk>B / r' < real N; 0 < real N\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "apply atomize_elim"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>N. B / r' < real N \\<and> 0 < real N", "using reals_Archimedean2"], ["proof (prove)\nusing this:\n  \\<exists>n. ?x < of_nat n\n\ngoal (1 subgoal):\n 1. \\<exists>N. B / r' < real N \\<and> 0 < real N", "by (metis less_trans linorder_neqE_linordered_idom)"], ["proof (state)\nthis:\n  B / r' < real N\n  0 < real N\n\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r", "obtain F where \"finite F\" and \"card F = N\" and \"F \\<subseteq> part r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>F.\n        \\<lbrakk>finite F; card F = N; F \\<subseteq> part r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using infinite(1) infinite_arbitrarily_large"], ["proof (prove)\nusing this:\n  infinite (part r)\n  infinite ?A \\<Longrightarrow>\n  \\<exists>B. finite B \\<and> card B = ?n \\<and> B \\<subseteq> ?A\n\ngoal (1 subgoal):\n 1. (\\<And>F.\n        \\<lbrakk>finite F; card F = N; F \\<subseteq> part r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  finite F\n  card F = N\n  F \\<subseteq> part r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r", "from \\<open>F \\<subseteq> part r\\<close>"], ["proof (chain)\npicking this:\n  F \\<subseteq> part r", "have \"F \\<subseteq> S\""], ["proof (prove)\nusing this:\n  F \\<subseteq> part r\n\ngoal (1 subgoal):\n 1. F \\<subseteq> S", "unfolding part_def"], ["proof (prove)\nusing this:\n  F \\<subseteq> g -` {r} \\<inter> S\n\ngoal (1 subgoal):\n 1. F \\<subseteq> S", "by simp"], ["proof (state)\nthis:\n  F \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r", "have \"B < r * N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal B < r * of_nat N", "unfolding r' ennreal_of_nat_eq_real_of_nat"], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal B < ennreal r' * ennreal (real N)", "using N \\<open>0 < r'\\<close> assms(2) r'"], ["proof (prove)\nusing this:\n  B / r' < real N\n  0 < r'\n  0 \\<le> B\n  r = ennreal r'\n\ngoal (1 subgoal):\n 1. ennreal B < ennreal r' * ennreal (real N)", "by (metis enn2real_ennreal enn2real_less_iff ennreal_less_top ennreal_mult' less_le mult_less_cancel_left_pos nonzero_mult_div_cancel_left times_divide_eq_right)"], ["proof (state)\nthis:\n  ennreal B < r * of_nat N\n\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r", "also"], ["proof (state)\nthis:\n  ennreal B < r * of_nat N\n\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r", "have \"r * N = (\\<Sum>x\\<in>F. r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r * of_nat N = (\\<Sum>x\\<in>F. r)", "using \\<open>card F = N\\<close>"], ["proof (prove)\nusing this:\n  card F = N\n\ngoal (1 subgoal):\n 1. r * of_nat N = (\\<Sum>x\\<in>F. r)", "by (simp add: mult.commute)"], ["proof (state)\nthis:\n  r * of_nat N = (\\<Sum>x\\<in>F. r)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r", "also"], ["proof (state)\nthis:\n  r * of_nat N = (\\<Sum>x\\<in>F. r)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r", "have \"(\\<Sum>x\\<in>F. r) = (\\<Sum>x\\<in>F. g x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>F. r) = sum g F", "using \\<open>F \\<subseteq> part r\\<close>  part_def sum.cong subsetD"], ["proof (prove)\nusing this:\n  F \\<subseteq> part r\n  part ?r = g -` {?r} \\<inter> S\n  \\<lbrakk>?A = ?B;\n   \\<And>x. x \\<in> ?B \\<Longrightarrow> ?g x = ?h x\\<rbrakk>\n  \\<Longrightarrow> sum ?g ?A = sum ?h ?B\n  \\<lbrakk>?A \\<subseteq> ?B; ?c \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> ?c \\<in> ?B\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>F. r) = sum g F", "by fastforce"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>F. r) = sum g F\n\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>F. r) = sum g F\n\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r", "have \"(\\<Sum>x\\<in>F. g x) \\<le> (\\<Sum>x\\<in>F. ennreal (norm (f x)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum g F \\<le> (\\<Sum>x\\<in>F. ennreal (norm (f x)))", "by (metis (mono_tags, lifting) \\<open>g \\<le> normf\\<close> \\<open>normf \\<equiv> \\<lambda>x. ennreal (norm (f x))\\<close> le_fun_def \n              sum_mono)"], ["proof (state)\nthis:\n  sum g F \\<le> (\\<Sum>x\\<in>F. ennreal (norm (f x)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r", "also"], ["proof (state)\nthis:\n  sum g F \\<le> (\\<Sum>x\\<in>F. ennreal (norm (f x)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r", "have \"(\\<Sum>x\\<in>F. ennreal (norm (f x))) \\<le> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>F. ennreal (norm (f x))) \\<le> ennreal B", "using \\<open>F \\<subseteq> S\\<close> \\<open>finite F\\<close> \\<open>normf \\<equiv> \\<lambda>x. ennreal (norm (f x))\\<close> normf_B"], ["proof (prove)\nusing this:\n  F \\<subseteq> S\n  finite F\n  normf \\<equiv> \\<lambda>x. ennreal (norm (f x))\n  \\<lbrakk>finite ?F; ?F \\<subseteq> S\\<rbrakk>\n  \\<Longrightarrow> sum normf ?F \\<le> ennreal B\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>F. ennreal (norm (f x))) \\<le> ennreal B", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>F. ennreal (norm (f x))) \\<le> ennreal B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r", "finally"], ["proof (chain)\npicking this:\n  ennreal B < ennreal B", "have \"B < B\""], ["proof (prove)\nusing this:\n  ennreal B < ennreal B\n\ngoal (1 subgoal):\n 1. B < B", "by auto"], ["proof (state)\nthis:\n  B < B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite (part r); r \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> r * emeasure M (part r) \\<le> B' r", "thus ?thesis"], ["proof (prove)\nusing this:\n  B < B\n\ngoal (1 subgoal):\n 1. r * emeasure M (part r) \\<le> B' r", "by simp"], ["proof (state)\nthis:\n  r * emeasure M (part r) \\<le> B' r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?r \\<in> gS \\<Longrightarrow> ?r * emeasure M (part ?r) \\<le> B' ?r\n\ngoal (1 subgoal):\n 1. integral\\<^sup>S M g \\<le> ennreal B", "have \"integral\\<^sup>S M g = (\\<Sum>r \\<in> gS. r * emeasure M (part r))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>S M g = (\\<Sum>r\\<in>gS. r * emeasure M (part r))", "unfolding simple_integral_def gS_def M_def part_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>g ` space (count_space S).\n       x *\n       emeasure (count_space S) (g -` {x} \\<inter> space (count_space S))) =\n    (\\<Sum>r\\<in>g ` S. r * emeasure (count_space S) (g -` {r} \\<inter> S))", "by simp"], ["proof (state)\nthis:\n  integral\\<^sup>S M g = (\\<Sum>r\\<in>gS. r * emeasure M (part r))\n\ngoal (1 subgoal):\n 1. integral\\<^sup>S M g \\<le> ennreal B", "also"], ["proof (state)\nthis:\n  integral\\<^sup>S M g = (\\<Sum>r\\<in>gS. r * emeasure M (part r))\n\ngoal (1 subgoal):\n 1. integral\\<^sup>S M g \\<le> ennreal B", "have \"\\<dots> \\<le> (\\<Sum>r \\<in> gS. B' r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>r\\<in>gS. r * emeasure M (part r)) \\<le> sum B' gS", "by (simp add: emeasure_B' sum_mono)"], ["proof (state)\nthis:\n  (\\<Sum>r\\<in>gS. r * emeasure M (part r)) \\<le> sum B' gS\n\ngoal (1 subgoal):\n 1. integral\\<^sup>S M g \\<le> ennreal B", "also"], ["proof (state)\nthis:\n  (\\<Sum>r\\<in>gS. r * emeasure M (part r)) \\<le> sum B' gS\n\ngoal (1 subgoal):\n 1. integral\\<^sup>S M g \\<le> ennreal B", "have \"\\<dots> \\<le> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum B' gS \\<le> ennreal B", "using sumB'"], ["proof (prove)\nusing this:\n  sum B' gS \\<le> ennreal B\n\ngoal (1 subgoal):\n 1. sum B' gS \\<le> ennreal B", "by blast"], ["proof (state)\nthis:\n  sum B' gS \\<le> ennreal B\n\ngoal (1 subgoal):\n 1. integral\\<^sup>S M g \\<le> ennreal B", "finally"], ["proof (chain)\npicking this:\n  integral\\<^sup>S M g \\<le> ennreal B", "show ?thesis"], ["proof (prove)\nusing this:\n  integral\\<^sup>S M g \\<le> ennreal B\n\ngoal (1 subgoal):\n 1. integral\\<^sup>S M g \\<le> ennreal B", "by assumption"], ["proof (state)\nthis:\n  integral\\<^sup>S M g \\<le> ennreal B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>simple_function M ?g; ?g \\<le> normf\\<rbrakk>\n  \\<Longrightarrow> integral\\<^sup>S M ?g \\<le> ennreal B\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    f abs_summable_on S \\<and> (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B", "hence int_leq_B: \"integral\\<^sup>N M normf \\<le> B\""], ["proof (prove)\nusing this:\n  \\<lbrakk>simple_function M ?g; ?g \\<le> normf\\<rbrakk>\n  \\<Longrightarrow> integral\\<^sup>S M ?g \\<le> ennreal B\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M normf \\<le> ennreal B", "unfolding nn_integral_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>simple_function M ?g; ?g \\<le> normf\\<rbrakk>\n  \\<Longrightarrow> integral\\<^sup>S M ?g \\<le> ennreal B\n\ngoal (1 subgoal):\n 1. Sup (integral\\<^sup>S M ` {g. simple_function M g \\<and> g \\<le> normf})\n    \\<le> ennreal B", "by (metis (no_types, lifting) SUP_least mem_Collect_eq)"], ["proof (state)\nthis:\n  integral\\<^sup>N M normf \\<le> ennreal B\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    f abs_summable_on S \\<and> (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B", "hence \"integral\\<^sup>N M normf < \\<infinity>\""], ["proof (prove)\nusing this:\n  integral\\<^sup>N M normf \\<le> ennreal B\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M normf < \\<infinity>", "using le_less_trans"], ["proof (prove)\nusing this:\n  integral\\<^sup>N M normf \\<le> ennreal B\n  \\<lbrakk>?x \\<le> ?y; ?y < ?z\\<rbrakk> \\<Longrightarrow> ?x < ?z\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N M normf < \\<infinity>", "by fastforce"], ["proof (state)\nthis:\n  integral\\<^sup>N M normf < \\<infinity>\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    f abs_summable_on S \\<and> (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B", "hence \"integrable M f\""], ["proof (prove)\nusing this:\n  integral\\<^sup>N M normf < \\<infinity>\n\ngoal (1 subgoal):\n 1. integrable M f", "unfolding M_def normf_def"], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ x. ennreal (norm (f x)) \\<partial>count_space S\n  < \\<infinity>\n\ngoal (1 subgoal):\n 1. integrable (count_space S) f", "by (rule integrableI_bounded[rotated], simp)"], ["proof (state)\nthis:\n  integrable M f\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    f abs_summable_on S \\<and> (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B", "hence v1: \"f abs_summable_on S\""], ["proof (prove)\nusing this:\n  integrable M f\n\ngoal (1 subgoal):\n 1. f abs_summable_on S", "unfolding abs_summable_on_def M_def"], ["proof (prove)\nusing this:\n  integrable (count_space S) f\n\ngoal (1 subgoal):\n 1. integrable (count_space S) f", "by simp"], ["proof (state)\nthis:\n  f abs_summable_on S\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    f abs_summable_on S \\<and> (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B", "have \"(\\<lambda>x. norm (f x)) abs_summable_on S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. norm (f x)) abs_summable_on S", "using v1 Infinite_Set_Sum.abs_summable_on_norm_iff[where A = S and f = f]"], ["proof (prove)\nusing this:\n  f abs_summable_on S\n  ((\\<lambda>x. norm (f x)) abs_summable_on S) = (f abs_summable_on S)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. norm (f x)) abs_summable_on S", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>x. norm (f x)) abs_summable_on S\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    f abs_summable_on S \\<and> (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>x. norm (f x)) abs_summable_on S\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    f abs_summable_on S \\<and> (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B", "have \"0 \\<le> norm (f x)\"\n      if \"x \\<in> S\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> norm (f x)", "by simp"], ["proof (state)\nthis:\n  ?x \\<in> S \\<Longrightarrow> 0 \\<le> norm (f ?x)\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    f abs_summable_on S \\<and> (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B", "moreover"], ["proof (state)\nthis:\n  ?x \\<in> S \\<Longrightarrow> 0 \\<le> norm (f ?x)\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    f abs_summable_on S \\<and> (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B", "have \"(\\<integral>\\<^sup>+ x. ennreal (norm (f x)) \\<partial>count_space S) \\<le> ennreal B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (norm (f x)) \\<partial>count_space S\n    \\<le> ennreal B", "using M_def \\<open>normf \\<equiv> \\<lambda>x. ennreal (norm (f x))\\<close> int_leq_B"], ["proof (prove)\nusing this:\n  M = count_space S\n  normf \\<equiv> \\<lambda>x. ennreal (norm (f x))\n  integral\\<^sup>N M normf \\<le> ennreal B\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal (norm (f x)) \\<partial>count_space S\n    \\<le> ennreal B", "by auto"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal (norm (f x)) \\<partial>count_space S\n  \\<le> ennreal B\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    f abs_summable_on S \\<and> (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>x. norm (f x)) abs_summable_on S\n  ?x \\<in> S \\<Longrightarrow> 0 \\<le> norm (f ?x)\n  \\<integral>\\<^sup>+ x. ennreal (norm (f x)) \\<partial>count_space S\n  \\<le> ennreal B", "have \"ennreal (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> ennreal B\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. norm (f x)) abs_summable_on S\n  ?x \\<in> S \\<Longrightarrow> 0 \\<le> norm (f ?x)\n  \\<integral>\\<^sup>+ x. ennreal (norm (f x)) \\<partial>count_space S\n  \\<le> ennreal B\n\ngoal (1 subgoal):\n 1. ennreal (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> ennreal B", "by (simp add: nn_integral_conv_infsetsum)"], ["proof (state)\nthis:\n  ennreal (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> ennreal B\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    f abs_summable_on S \\<and> (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B", "hence v2: \"(\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B\""], ["proof (prove)\nusing this:\n  ennreal (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> ennreal B\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B", "by (subst ennreal_le_iff[symmetric], simp add: assms)"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    f abs_summable_on S \\<and> (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. f abs_summable_on S \\<and> (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B", "using v1 v2"], ["proof (prove)\nusing this:\n  f abs_summable_on S\n  (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B\n\ngoal (1 subgoal):\n 1. f abs_summable_on S \\<and> (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B", "by auto"], ["proof (state)\nthis:\n  f abs_summable_on S \\<and> (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f abs_summable_on S \\<and> (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B\n\ngoal (2 subgoals):\n 1. f abs_summable_on S\n 2. (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B", "show \"f abs_summable_on S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f abs_summable_on S", "using t1"], ["proof (prove)\nusing this:\n  f abs_summable_on S \\<and> (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B\n\ngoal (1 subgoal):\n 1. f abs_summable_on S", "by blast"], ["proof (state)\nthis:\n  f abs_summable_on S\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B", "show \"(\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B", "using t1"], ["proof (prove)\nusing this:\n  f abs_summable_on S \\<and> (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>S. norm (f x)) \\<le> B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma abs_summable_finiteI:\n  assumes \"\\<And>F. finite F \\<Longrightarrow> F\\<subseteq>S \\<Longrightarrow> sum (\\<lambda>x. norm (f x)) F \\<le> B\"\n  shows \"f abs_summable_on S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f abs_summable_on S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f abs_summable_on S", "from assms"], ["proof (chain)\npicking this:\n  \\<lbrakk>finite ?F; ?F \\<subseteq> S\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>x\\<in>?F. norm (f x)) \\<le> B", "have \"sum (\\<lambda>x. norm (f x)) {} \\<le> B\""], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?F; ?F \\<subseteq> S\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>x\\<in>?F. norm (f x)) \\<le> B\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{}. norm (f x)) \\<le> B", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{}. norm (f x)) \\<le> B\n\ngoal (1 subgoal):\n 1. f abs_summable_on S", "hence \"0 \\<le> B\""], ["proof (prove)\nusing this:\n  (\\<Sum>x\\<in>{}. norm (f x)) \\<le> B\n\ngoal (1 subgoal):\n 1. 0 \\<le> B", "by simp"], ["proof (state)\nthis:\n  0 \\<le> B\n\ngoal (1 subgoal):\n 1. f abs_summable_on S", "thus ?thesis"], ["proof (prove)\nusing this:\n  0 \\<le> B\n\ngoal (1 subgoal):\n 1. f abs_summable_on S", "using assms"], ["proof (prove)\nusing this:\n  0 \\<le> B\n  \\<lbrakk>finite ?F; ?F \\<subseteq> S\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>x\\<in>?F. norm (f x)) \\<le> B\n\ngoal (1 subgoal):\n 1. f abs_summable_on S", "by (rule abs_summable_finiteI0[rotated])"], ["proof (state)\nthis:\n  f abs_summable_on S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infsetsum_finite_sets:\n  assumes \"\\<And>F. finite F \\<Longrightarrow> F\\<subseteq>S \\<Longrightarrow> sum (\\<lambda>x. norm (f x)) F \\<le> B\"\n    and \"B \\<ge> 0\" and \"\\<And>x. f x \\<ge> 0\"\n  shows \"infsetsum f S \\<le> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum f S \\<le> B", "using abs_summable_finiteI0(2)[where f=f and S=S, OF assms(1-2), simplified]\n    assms(3)"], ["proof (prove)\nusing this:\n  (\\<Sum>\\<^sub>ax\\<in>S. \\<bar>f x\\<bar>) \\<le> B\n  0 \\<le> f ?x\n\ngoal (1 subgoal):\n 1. infsetsum f S \\<le> B", "by auto"], ["", "lemma abs_summable_finiteI_converse:\n  assumes f_sum_S: \"f abs_summable_on S\"\n    and finite_F: \"finite F\" and FS: \"F\\<subseteq>S\"\n  defines \"B \\<equiv> (infsetsum (\\<lambda>x. norm (f x)) S)\"\n  shows \"sum (\\<lambda>x. norm (f x)) F \\<le> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>F. norm (f x)) \\<le> B", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>F. norm (f x)) \\<le> B", "have a1: \"(\\<lambda>x. norm (f x)) abs_summable_on F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. norm (f x)) abs_summable_on F", "by (simp add: finite_F)"], ["proof (state)\nthis:\n  (\\<lambda>x. norm (f x)) abs_summable_on F\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>F. norm (f x)) \\<le> B", "have a2: \"(\\<lambda>x. norm (f x)) abs_summable_on S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. norm (f x)) abs_summable_on S", "by (simp add: f_sum_S)"], ["proof (state)\nthis:\n  (\\<lambda>x. norm (f x)) abs_summable_on S\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>F. norm (f x)) \\<le> B", "have a3: \"x \\<in> F \\<Longrightarrow> norm (f x) \\<le> norm (f x)\"\n    for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> F \\<Longrightarrow> norm (f x) \\<le> norm (f x)", "by simp"], ["proof (state)\nthis:\n  ?x \\<in> F \\<Longrightarrow> norm (f ?x) \\<le> norm (f ?x)\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>F. norm (f x)) \\<le> B", "have a4: \"F \\<subseteq> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<subseteq> S", "by (simp add: FS)"], ["proof (state)\nthis:\n  F \\<subseteq> S\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>F. norm (f x)) \\<le> B", "have a5: \"x \\<in> S - F \\<Longrightarrow> 0 \\<le> norm (f x)\"\n    for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> S - F \\<Longrightarrow> 0 \\<le> norm (f x)", "by simp"], ["proof (state)\nthis:\n  ?x \\<in> S - F \\<Longrightarrow> 0 \\<le> norm (f ?x)\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>F. norm (f x)) \\<le> B", "have \"sum (\\<lambda>x. norm (f x)) F = infsetsum (\\<lambda>x. norm (f x)) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>F. norm (f x)) = (\\<Sum>\\<^sub>ax\\<in>F. norm (f x))", "by (simp add: finite_F)"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>F. norm (f x)) = (\\<Sum>\\<^sub>ax\\<in>F. norm (f x))\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>F. norm (f x)) \\<le> B", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>F. norm (f x)) = (\\<Sum>\\<^sub>ax\\<in>F. norm (f x))\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>F. norm (f x)) \\<le> B", "have \"infsetsum (\\<lambda>x. norm (f x)) F \\<le> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>F. norm (f x)) \\<le> B", "unfolding B_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>F. norm (f x))\n    \\<le> (\\<Sum>\\<^sub>ax\\<in>S. norm (f x))", "using a1 a2 a3 a4 a5"], ["proof (prove)\nusing this:\n  (\\<lambda>x. norm (f x)) abs_summable_on F\n  (\\<lambda>x. norm (f x)) abs_summable_on S\n  ?x \\<in> F \\<Longrightarrow> norm (f ?x) \\<le> norm (f ?x)\n  F \\<subseteq> S\n  ?x \\<in> S - F \\<Longrightarrow> 0 \\<le> norm (f ?x)\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>F. norm (f x))\n    \\<le> (\\<Sum>\\<^sub>ax\\<in>S. norm (f x))", "by (simp add: infsetsum_mono_neutral_left)"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>F. norm (f x)) \\<le> B\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>F. norm (f x)) \\<le> B", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>x\\<in>F. norm (f x)) \\<le> B", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>x\\<in>F. norm (f x)) \\<le> B\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>F. norm (f x)) \\<le> B", "by assumption"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>F. norm (f x)) \\<le> B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma abs_summable_countable:\n  fixes \\<mu> :: \"'a \\<Rightarrow> 'b::{banach,second_countable_topology}\"\n  assumes \"\\<mu> abs_summable_on T\"\n  shows \"countable {x\\<in>T. 0 \\<noteq> \\<mu> x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. countable {x \\<in> T. (0::'b) \\<noteq> \\<mu> x}", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. countable {x \\<in> T. (0::'b) \\<noteq> \\<mu> x}", "define B where \"B = infsetsum (\\<lambda>x. norm (\\<mu> x)) T\""], ["proof (state)\nthis:\n  B = (\\<Sum>\\<^sub>ax\\<in>T. norm (\\<mu> x))\n\ngoal (1 subgoal):\n 1. countable {x \\<in> T. (0::'b) \\<noteq> \\<mu> x}", "have \\<mu>sum: \"sum (\\<lambda>x. norm (\\<mu> x)) F \\<le> B\" if \"finite F\" and \"F \\<subseteq> T\" for F"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>F. norm (\\<mu> x)) \\<le> B", "unfolding B_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>F. norm (\\<mu> x))\n    \\<le> (\\<Sum>\\<^sub>ax\\<in>T. norm (\\<mu> x))", "using assms that abs_summable_finiteI_converse"], ["proof (prove)\nusing this:\n  \\<mu> abs_summable_on T\n  finite F\n  F \\<subseteq> T\n  \\<lbrakk>?f abs_summable_on ?S; finite ?F; ?F \\<subseteq> ?S\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>x\\<in>?F. norm (?f x))\n                    \\<le> (\\<Sum>\\<^sub>ax\\<in>?S. norm (?f x))\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>F. norm (\\<mu> x))\n    \\<le> (\\<Sum>\\<^sub>ax\\<in>T. norm (\\<mu> x))", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>finite ?F; ?F \\<subseteq> T\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>x\\<in>?F. norm (\\<mu> x)) \\<le> B\n\ngoal (1 subgoal):\n 1. countable {x \\<in> T. (0::'b) \\<noteq> \\<mu> x}", "define S where \"S i = {x\\<in>T. 1/real (Suc i) < norm (\\<mu> x)}\" for i::nat"], ["proof (state)\nthis:\n  S ?i = {x \\<in> T. 1 / real (Suc ?i) < norm (\\<mu> x)}\n\ngoal (1 subgoal):\n 1. countable {x \\<in> T. (0::'b) \\<noteq> \\<mu> x}", "have \"\\<exists>i. x \\<in> S i\" if \"0 < norm (\\<mu> x)\" and \"x \\<in> T\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i. x \\<in> S i", "using that"], ["proof (prove)\nusing this:\n  0 < norm (\\<mu> x)\n  x \\<in> T\n\ngoal (1 subgoal):\n 1. \\<exists>i. x \\<in> S i", "unfolding S_def"], ["proof (prove)\nusing this:\n  0 < norm (\\<mu> x)\n  x \\<in> T\n\ngoal (1 subgoal):\n 1. \\<exists>i. x \\<in> {x \\<in> T. 1 / real (Suc i) < norm (\\<mu> x)}", "by (metis (full_types, lifting) mem_Collect_eq nat_approx_posE)"], ["proof (state)\nthis:\n  \\<lbrakk>0 < norm (\\<mu> ?x); ?x \\<in> T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i. ?x \\<in> S i\n\ngoal (1 subgoal):\n 1. countable {x \\<in> T. (0::'b) \\<noteq> \\<mu> x}", "hence union: \"{x\\<in>T. 0 < norm (\\<mu> x)} = (\\<Union>i. S i)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < norm (\\<mu> ?x); ?x \\<in> T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i. ?x \\<in> S i\n\ngoal (1 subgoal):\n 1. {x \\<in> T. 0 < norm (\\<mu> x)} = \\<Union> (range S)", "unfolding S_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < norm (\\<mu> ?x); ?x \\<in> T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i.\n                       ?x \\<in> {x \\<in> T.\n                                 1 / real (Suc i) < norm (\\<mu> x)}\n\ngoal (1 subgoal):\n 1. {x \\<in> T. 0 < norm (\\<mu> x)} =\n    (\\<Union>i. {x \\<in> T. 1 / real (Suc i) < norm (\\<mu> x)})", "by auto"], ["proof (state)\nthis:\n  {x \\<in> T. 0 < norm (\\<mu> x)} = \\<Union> (range S)\n\ngoal (1 subgoal):\n 1. countable {x \\<in> T. (0::'b) \\<noteq> \\<mu> x}", "have finiteS: \"finite (S i)\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (S i)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. infinite (S i) \\<Longrightarrow> False", "assume \"infinite (S i)\""], ["proof (state)\nthis:\n  infinite (S i)\n\ngoal (1 subgoal):\n 1. infinite (S i) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  infinite (S i)", "obtain F where F_Si: \"F \\<subseteq> S i\" and cardF: \"card F > (Suc i)*B\" and finiteF: \"finite F\""], ["proof (prove)\nusing this:\n  infinite (S i)\n\ngoal (1 subgoal):\n 1. (\\<And>F.\n        \\<lbrakk>F \\<subseteq> S i; real (Suc i) * B < real (card F);\n         finite F\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis One_nat_def ex_less_of_nat_mult infinite_arbitrarily_large lessI mult.commute mult.left_neutral of_nat_0_less_iff of_nat_1)"], ["proof (state)\nthis:\n  F \\<subseteq> S i\n  real (Suc i) * B < real (card F)\n  finite F\n\ngoal (1 subgoal):\n 1. infinite (S i) \\<Longrightarrow> False", "from F_Si"], ["proof (chain)\npicking this:\n  F \\<subseteq> S i", "have F_T: \"F \\<subseteq> T\""], ["proof (prove)\nusing this:\n  F \\<subseteq> S i\n\ngoal (1 subgoal):\n 1. F \\<subseteq> T", "unfolding S_def"], ["proof (prove)\nusing this:\n  F \\<subseteq> {x \\<in> T. 1 / real (Suc i) < norm (\\<mu> x)}\n\ngoal (1 subgoal):\n 1. F \\<subseteq> T", "by blast"], ["proof (state)\nthis:\n  F \\<subseteq> T\n\ngoal (1 subgoal):\n 1. infinite (S i) \\<Longrightarrow> False", "from finiteF \\<mu>sum F_T"], ["proof (chain)\npicking this:\n  finite F\n  \\<lbrakk>finite ?F; ?F \\<subseteq> T\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>x\\<in>?F. norm (\\<mu> x)) \\<le> B\n  F \\<subseteq> T", "have sumF: \"sum (\\<lambda>x. norm (\\<mu> x)) F \\<le> B\""], ["proof (prove)\nusing this:\n  finite F\n  \\<lbrakk>finite ?F; ?F \\<subseteq> T\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>x\\<in>?F. norm (\\<mu> x)) \\<le> B\n  F \\<subseteq> T\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>F. norm (\\<mu> x)) \\<le> B", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>F. norm (\\<mu> x)) \\<le> B\n\ngoal (1 subgoal):\n 1. infinite (S i) \\<Longrightarrow> False", "have \"1 / real (Suc i) \\<le> norm (\\<mu> x)\"\n      if \"x \\<in> F\"\n      for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / real (Suc i) \\<le> norm (\\<mu> x)", "using that F_Si S_def"], ["proof (prove)\nusing this:\n  x \\<in> F\n  F \\<subseteq> S i\n  S ?i = {x \\<in> T. 1 / real (Suc ?i) < norm (\\<mu> x)}\n\ngoal (1 subgoal):\n 1. 1 / real (Suc i) \\<le> norm (\\<mu> x)", "by auto"], ["proof (state)\nthis:\n  ?x \\<in> F \\<Longrightarrow> 1 / real (Suc i) \\<le> norm (\\<mu> ?x)\n\ngoal (1 subgoal):\n 1. infinite (S i) \\<Longrightarrow> False", "hence \"sum (\\<lambda>x. norm (\\<mu> x)) F \\<ge> sum (\\<lambda>_. 1/real (Suc i)) F\" (is \"_ \\<ge> \\<dots>\")"], ["proof (prove)\nusing this:\n  ?x \\<in> F \\<Longrightarrow> 1 / real (Suc i) \\<le> norm (\\<mu> ?x)\n\ngoal (1 subgoal):\n 1. (\\<Sum>_\\<in>F. 1 / real (Suc i)) \\<le> (\\<Sum>x\\<in>F. norm (\\<mu> x))", "using sum_mono"], ["proof (prove)\nusing this:\n  ?x \\<in> F \\<Longrightarrow> 1 / real (Suc i) \\<le> norm (\\<mu> ?x)\n  (\\<And>i. i \\<in> ?K \\<Longrightarrow> ?f i \\<le> ?g i) \\<Longrightarrow>\n  sum ?f ?K \\<le> sum ?g ?K\n\ngoal (1 subgoal):\n 1. (\\<Sum>_\\<in>F. 1 / real (Suc i)) \\<le> (\\<Sum>x\\<in>F. norm (\\<mu> x))", "by metis"], ["proof (state)\nthis:\n  (\\<Sum>_\\<in>F. 1 / real (Suc i)) \\<le> (\\<Sum>x\\<in>F. norm (\\<mu> x))\n\ngoal (1 subgoal):\n 1. infinite (S i) \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  (\\<Sum>_\\<in>F. 1 / real (Suc i)) \\<le> (\\<Sum>x\\<in>F. norm (\\<mu> x))\n\ngoal (1 subgoal):\n 1. infinite (S i) \\<Longrightarrow> False", "have \"\\<dots> = real (card F) / (Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>_\\<in>F. 1 / real (Suc i)) = real (card F) / real (Suc i)", "by (subst sum_constant_scale, auto)"], ["proof (state)\nthis:\n  (\\<Sum>_\\<in>F. 1 / real (Suc i)) = real (card F) / real (Suc i)\n\ngoal (1 subgoal):\n 1. infinite (S i) \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  (\\<Sum>_\\<in>F. 1 / real (Suc i)) = real (card F) / real (Suc i)\n\ngoal (1 subgoal):\n 1. infinite (S i) \\<Longrightarrow> False", "have \"\\<dots> > B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B < real (card F) / real (Suc i)", "using cardF"], ["proof (prove)\nusing this:\n  real (Suc i) * B < real (card F)\n\ngoal (1 subgoal):\n 1. B < real (card F) / real (Suc i)", "by (simp add: linordered_field_class.mult_imp_less_div_pos algebra_simps)"], ["proof (state)\nthis:\n  B < real (card F) / real (Suc i)\n\ngoal (1 subgoal):\n 1. infinite (S i) \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Sum>_\\<in>F. 1 / real (Suc i)) \\<le> (\\<Sum>x\\<in>F. norm (\\<mu> x))\n  (\\<Sum>_\\<in>F. 1 / real (Suc i)) = real (card F) / real (Suc i)\n  B < real (card F) / real (Suc i)", "have \"sum (\\<lambda>x. norm (\\<mu> x)) F > B\""], ["proof (prove)\nusing this:\n  (\\<Sum>_\\<in>F. 1 / real (Suc i)) \\<le> (\\<Sum>x\\<in>F. norm (\\<mu> x))\n  (\\<Sum>_\\<in>F. 1 / real (Suc i)) = real (card F) / real (Suc i)\n  B < real (card F) / real (Suc i)\n\ngoal (1 subgoal):\n 1. B < (\\<Sum>x\\<in>F. norm (\\<mu> x))", "by linarith"], ["proof (state)\nthis:\n  B < (\\<Sum>x\\<in>F. norm (\\<mu> x))\n\ngoal (1 subgoal):\n 1. infinite (S i) \\<Longrightarrow> False", "with sumF"], ["proof (chain)\npicking this:\n  (\\<Sum>x\\<in>F. norm (\\<mu> x)) \\<le> B\n  B < (\\<Sum>x\\<in>F. norm (\\<mu> x))", "show False"], ["proof (prove)\nusing this:\n  (\\<Sum>x\\<in>F. norm (\\<mu> x)) \\<le> B\n  B < (\\<Sum>x\\<in>F. norm (\\<mu> x))\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite (S ?i)\n\ngoal (1 subgoal):\n 1. countable {x \\<in> T. (0::'b) \\<noteq> \\<mu> x}", "have \"countable (S i)\"\n    if \"i \\<in> UNIV\"\n    for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. countable (S i)", "using finiteS"], ["proof (prove)\nusing this:\n  finite (S ?i)\n\ngoal (1 subgoal):\n 1. countable (S i)", "by (simp add: countable_finite)"], ["proof (state)\nthis:\n  ?i \\<in> UNIV \\<Longrightarrow> countable (S ?i)\n\ngoal (1 subgoal):\n 1. countable {x \\<in> T. (0::'b) \\<noteq> \\<mu> x}", "hence \"countable (\\<Union>i. S i)\""], ["proof (prove)\nusing this:\n  ?i \\<in> UNIV \\<Longrightarrow> countable (S ?i)\n\ngoal (1 subgoal):\n 1. countable (\\<Union> (range S))", "using countable_UN"], ["proof (prove)\nusing this:\n  ?i \\<in> UNIV \\<Longrightarrow> countable (S ?i)\n  \\<lbrakk>countable ?I;\n   \\<And>i. i \\<in> ?I \\<Longrightarrow> countable (?A i)\\<rbrakk>\n  \\<Longrightarrow> countable (\\<Union> (?A ` ?I))\n\ngoal (1 subgoal):\n 1. countable (\\<Union> (range S))", "by simp"], ["proof (state)\nthis:\n  countable (\\<Union> (range S))\n\ngoal (1 subgoal):\n 1. countable {x \\<in> T. (0::'b) \\<noteq> \\<mu> x}", "hence \"countable {x\\<in>T. 0 < norm (\\<mu> x)}\""], ["proof (prove)\nusing this:\n  countable (\\<Union> (range S))\n\ngoal (1 subgoal):\n 1. countable {x \\<in> T. 0 < norm (\\<mu> x)}", "unfolding union"], ["proof (prove)\nusing this:\n  countable (\\<Union> (range S))\n\ngoal (1 subgoal):\n 1. countable (\\<Union> (range S))", "by simp"], ["proof (state)\nthis:\n  countable {x \\<in> T. 0 < norm (\\<mu> x)}\n\ngoal (1 subgoal):\n 1. countable {x \\<in> T. (0::'b) \\<noteq> \\<mu> x}", "thus ?thesis"], ["proof (prove)\nusing this:\n  countable {x \\<in> T. 0 < norm (\\<mu> x)}\n\ngoal (1 subgoal):\n 1. countable {x \\<in> T. (0::'b) \\<noteq> \\<mu> x}", "by simp"], ["proof (state)\nthis:\n  countable {x \\<in> T. (0::'b) \\<noteq> \\<mu> x}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infsetsum_cnj[simp]: \"infsetsum (\\<lambda>x. cnj (f x)) M = cnj (infsetsum f M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>M. cnj (f x)) = cnj (infsetsum f M)", "unfolding infsetsum_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. CLINT x|count_space M. cnj (f x) =\n    cnj (integral\\<^sup>C (count_space M) f)", "by (rule integral_cnj)"], ["", "lemma infsetsum_Re: \n  assumes \"f abs_summable_on M\"\n  shows \"infsetsum (\\<lambda>x. Re (f x)) M = Re (infsetsum f M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>M. Re (f x)) = Re (infsetsum f M)", "unfolding infsetsum_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. LINT x|count_space M. Re (f x) = Re (integral\\<^sup>C (count_space M) f)", "using integral_Re assms"], ["proof (prove)\nusing this:\n  complex_integrable ?M ?f \\<Longrightarrow>\n  LINT x|?M. Re (?f x) = Re (integral\\<^sup>C ?M ?f)\n  f abs_summable_on M\n\ngoal (1 subgoal):\n 1. LINT x|count_space M. Re (f x) = Re (integral\\<^sup>C (count_space M) f)", "by (simp add: abs_summable_on_def)"], ["", "lemma infsetsum_Im: \n  assumes \"f abs_summable_on M\"\n  shows \"infsetsum (\\<lambda>x. Im (f x)) M = Im (infsetsum f M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>M. Im (f x)) = Im (infsetsum f M)", "unfolding infsetsum_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. LINT x|count_space M. Im (f x) = Im (integral\\<^sup>C (count_space M) f)", "using assms"], ["proof (prove)\nusing this:\n  f abs_summable_on M\n\ngoal (1 subgoal):\n 1. LINT x|count_space M. Im (f x) = Im (integral\\<^sup>C (count_space M) f)", "by (simp add: abs_summable_on_def)"], ["", "lemma infsetsum_mono_complex:\n  fixes f g :: \"'a \\<Rightarrow> complex\"\n  assumes f_sum: \"f abs_summable_on A\" and g_sum: \"g abs_summable_on A\"\n  assumes x: \"\\<And>x. x \\<in> A \\<Longrightarrow> f x \\<le> g x\"\n  shows   \"infsetsum f A \\<le> infsetsum g A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum g A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum g A", "have a1: \"infsetsum f A = Complex (Re (infsetsum f A)) (Im (infsetsum f A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum f A = Complex (Re (infsetsum f A)) (Im (infsetsum f A))", "by auto"], ["proof (state)\nthis:\n  infsetsum f A = Complex (Re (infsetsum f A)) (Im (infsetsum f A))\n\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum g A", "also"], ["proof (state)\nthis:\n  infsetsum f A = Complex (Re (infsetsum f A)) (Im (infsetsum f A))\n\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum g A", "have a2: \"Re (infsetsum f A) = infsetsum (\\<lambda>x. Re (f x)) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re (infsetsum f A) = (\\<Sum>\\<^sub>ax\\<in>A. Re (f x))", "unfolding infsetsum_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Re (integral\\<^sup>C (count_space A) f) = LINT x|count_space A. Re (f x)", "using assms"], ["proof (prove)\nusing this:\n  f abs_summable_on A\n  g abs_summable_on A\n  ?x \\<in> A \\<Longrightarrow> f ?x \\<le> g ?x\n\ngoal (1 subgoal):\n 1. Re (integral\\<^sup>C (count_space A) f) = LINT x|count_space A. Re (f x)", "by (simp add: abs_summable_on_def)"], ["proof (state)\nthis:\n  Re (infsetsum f A) = (\\<Sum>\\<^sub>ax\\<in>A. Re (f x))\n\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum g A", "also"], ["proof (state)\nthis:\n  Re (infsetsum f A) = (\\<Sum>\\<^sub>ax\\<in>A. Re (f x))\n\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum g A", "have a3: \"Im (infsetsum f A) = infsetsum (\\<lambda>x. Im (f x)) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Im (infsetsum f A) = (\\<Sum>\\<^sub>ax\\<in>A. Im (f x))", "using f_sum"], ["proof (prove)\nusing this:\n  f abs_summable_on A\n\ngoal (1 subgoal):\n 1. Im (infsetsum f A) = (\\<Sum>\\<^sub>ax\\<in>A. Im (f x))", "by (rule infsetsum_Im[symmetric])"], ["proof (state)\nthis:\n  Im (infsetsum f A) = (\\<Sum>\\<^sub>ax\\<in>A. Im (f x))\n\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum g A", "finally"], ["proof (chain)\npicking this:\n  infsetsum f A =\n  Complex (\\<Sum>\\<^sub>ax\\<in>A. Re (f x))\n   (\\<Sum>\\<^sub>ax\\<in>A. Im (f x))", "have fsplit: \"infsetsum f A = Complex (\\<Sum>\\<^sub>ax\\<in>A. Re (f x)) (\\<Sum>\\<^sub>ax\\<in>A. Im (f x))\""], ["proof (prove)\nusing this:\n  infsetsum f A =\n  Complex (\\<Sum>\\<^sub>ax\\<in>A. Re (f x))\n   (\\<Sum>\\<^sub>ax\\<in>A. Im (f x))\n\ngoal (1 subgoal):\n 1. infsetsum f A =\n    Complex (\\<Sum>\\<^sub>ax\\<in>A. Re (f x))\n     (\\<Sum>\\<^sub>ax\\<in>A. Im (f x))", "by assumption"], ["proof (state)\nthis:\n  infsetsum f A =\n  Complex (\\<Sum>\\<^sub>ax\\<in>A. Re (f x))\n   (\\<Sum>\\<^sub>ax\\<in>A. Im (f x))\n\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum g A", "have \"infsetsum g A = Complex (Re (infsetsum g A)) (Im (infsetsum g A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum g A = Complex (Re (infsetsum g A)) (Im (infsetsum g A))", "by auto"], ["proof (state)\nthis:\n  infsetsum g A = Complex (Re (infsetsum g A)) (Im (infsetsum g A))\n\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum g A", "also"], ["proof (state)\nthis:\n  infsetsum g A = Complex (Re (infsetsum g A)) (Im (infsetsum g A))\n\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum g A", "have b2: \"Re (infsetsum g A) = infsetsum (\\<lambda>x. Re (g x)) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re (infsetsum g A) = (\\<Sum>\\<^sub>ax\\<in>A. Re (g x))", "using g_sum"], ["proof (prove)\nusing this:\n  g abs_summable_on A\n\ngoal (1 subgoal):\n 1. Re (infsetsum g A) = (\\<Sum>\\<^sub>ax\\<in>A. Re (g x))", "by (rule infsetsum_Re[symmetric])"], ["proof (state)\nthis:\n  Re (infsetsum g A) = (\\<Sum>\\<^sub>ax\\<in>A. Re (g x))\n\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum g A", "also"], ["proof (state)\nthis:\n  Re (infsetsum g A) = (\\<Sum>\\<^sub>ax\\<in>A. Re (g x))\n\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum g A", "have b1: \"Im (infsetsum g A) = infsetsum (\\<lambda>x. Im (g x)) A \""], ["proof (prove)\ngoal (1 subgoal):\n 1. Im (infsetsum g A) = (\\<Sum>\\<^sub>ax\\<in>A. Im (g x))", "using g_sum"], ["proof (prove)\nusing this:\n  g abs_summable_on A\n\ngoal (1 subgoal):\n 1. Im (infsetsum g A) = (\\<Sum>\\<^sub>ax\\<in>A. Im (g x))", "by (rule infsetsum_Im[symmetric])"], ["proof (state)\nthis:\n  Im (infsetsum g A) = (\\<Sum>\\<^sub>ax\\<in>A. Im (g x))\n\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum g A", "finally"], ["proof (chain)\npicking this:\n  infsetsum g A =\n  Complex (\\<Sum>\\<^sub>ax\\<in>A. Re (g x))\n   (\\<Sum>\\<^sub>ax\\<in>A. Im (g x))", "have gsplit: \"infsetsum g A = Complex (\\<Sum>\\<^sub>ax\\<in>A. Re (g x)) (\\<Sum>\\<^sub>ax\\<in>A. Im (g x))\""], ["proof (prove)\nusing this:\n  infsetsum g A =\n  Complex (\\<Sum>\\<^sub>ax\\<in>A. Re (g x))\n   (\\<Sum>\\<^sub>ax\\<in>A. Im (g x))\n\ngoal (1 subgoal):\n 1. infsetsum g A =\n    Complex (\\<Sum>\\<^sub>ax\\<in>A. Re (g x))\n     (\\<Sum>\\<^sub>ax\\<in>A. Im (g x))", "by assumption"], ["proof (state)\nthis:\n  infsetsum g A =\n  Complex (\\<Sum>\\<^sub>ax\\<in>A. Re (g x))\n   (\\<Sum>\\<^sub>ax\\<in>A. Im (g x))\n\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum g A", "have Re_leq: \"Re (f x) \\<le> Re (g x)\" if \"x\\<in>A\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. Re (f x) \\<le> Re (g x)", "using that assms"], ["proof (prove)\nusing this:\n  x \\<in> A\n  f abs_summable_on A\n  g abs_summable_on A\n  ?x \\<in> A \\<Longrightarrow> f ?x \\<le> g ?x\n\ngoal (1 subgoal):\n 1. Re (f x) \\<le> Re (g x)", "unfolding less_eq_complex_def"], ["proof (prove)\nusing this:\n  x \\<in> A\n  f abs_summable_on A\n  g abs_summable_on A\n  ?x \\<in> A \\<Longrightarrow>\n  Im (f ?x) = Im (g ?x) \\<and> Re (f ?x) \\<le> Re (g ?x)\n\ngoal (1 subgoal):\n 1. Re (f x) \\<le> Re (g x)", "by simp"], ["proof (state)\nthis:\n  ?x \\<in> A \\<Longrightarrow> Re (f ?x) \\<le> Re (g ?x)\n\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum g A", "have Im_eq: \"Im (f x) = Im (g x)\" if \"x\\<in>A\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. Im (f x) = Im (g x)", "using that assms"], ["proof (prove)\nusing this:\n  x \\<in> A\n  f abs_summable_on A\n  g abs_summable_on A\n  ?x \\<in> A \\<Longrightarrow> f ?x \\<le> g ?x\n\ngoal (1 subgoal):\n 1. Im (f x) = Im (g x)", "unfolding less_eq_complex_def"], ["proof (prove)\nusing this:\n  x \\<in> A\n  f abs_summable_on A\n  g abs_summable_on A\n  ?x \\<in> A \\<Longrightarrow>\n  Im (f ?x) = Im (g ?x) \\<and> Re (f ?x) \\<le> Re (g ?x)\n\ngoal (1 subgoal):\n 1. Im (f x) = Im (g x)", "by simp"], ["proof (state)\nthis:\n  ?x \\<in> A \\<Longrightarrow> Im (f ?x) = Im (g ?x)\n\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum g A", "have Refsum: \"(\\<lambda>x. Re (f x)) abs_summable_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. Re (f x)) abs_summable_on A", "using assms(1) abs_Re_le_cmod"], ["proof (prove)\nusing this:\n  f abs_summable_on A\n  \\<bar>Re ?x\\<bar> \\<le> cmod ?x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. Re (f x)) abs_summable_on A", "by (simp add: abs_summable_on_comparison_test[where g=f])"], ["proof (state)\nthis:\n  (\\<lambda>x. Re (f x)) abs_summable_on A\n\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum g A", "have Regsum: \"(\\<lambda>x. Re (g x)) abs_summable_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. Re (g x)) abs_summable_on A", "using assms(2) abs_Re_le_cmod"], ["proof (prove)\nusing this:\n  g abs_summable_on A\n  \\<bar>Re ?x\\<bar> \\<le> cmod ?x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. Re (g x)) abs_summable_on A", "by (simp add: abs_summable_on_comparison_test[where g=g])"], ["proof (state)\nthis:\n  (\\<lambda>x. Re (g x)) abs_summable_on A\n\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum g A", "show \"infsetsum f A \\<le> infsetsum g A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum g A", "unfolding fsplit gsplit"], ["proof (prove)\ngoal (1 subgoal):\n 1. Complex (\\<Sum>\\<^sub>ax\\<in>A. Re (f x))\n     (\\<Sum>\\<^sub>ax\\<in>A. Im (f x))\n    \\<le> Complex (\\<Sum>\\<^sub>ax\\<in>A. Re (g x))\n           (\\<Sum>\\<^sub>ax\\<in>A. Im (g x))", "by (smt (verit, ccfv_SIG) Im_eq Re_leq Refsum Regsum a2 a3 b1 b2 fsplit gsplit infsetsum_cong infsetsum_mono less_eq_complex_def)"], ["proof (state)\nthis:\n  infsetsum f A \\<le> infsetsum g A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infsetsum_subset_complex:\n  fixes f :: \"'a \\<Rightarrow> complex\"\n  assumes \"f abs_summable_on B\" and \"A \\<subseteq> B\" and \"\\<And>x. x\\<notin>A \\<Longrightarrow> f x \\<ge> 0\"\n  shows \"infsetsum f A \\<le> infsetsum f B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum f B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum f B", "have fBA: \"f abs_summable_on B - A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f abs_summable_on B - A", "by (meson Diff_subset abs_summable_on_subset assms(1))"], ["proof (state)\nthis:\n  f abs_summable_on B - A\n\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum f B", "have \"0 = infsetsum (\\<lambda>_.0) (B-A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'b) = (\\<Sum>\\<^sub>a_\\<in>B - A. (0::'b))", "by auto"], ["proof (state)\nthis:\n  (0::?'b1) = (\\<Sum>\\<^sub>a_\\<in>B - A. (0::?'b1))\n\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum f B", "also"], ["proof (state)\nthis:\n  (0::?'b1) = (\\<Sum>\\<^sub>a_\\<in>B - A. (0::?'b1))\n\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum f B", "have \"... \\<le> infsetsum f (B - A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>a_\\<in>B - A. 0) \\<le> infsetsum f (B - A)", "using assms fBA infsetsum_mono_complex"], ["proof (prove)\nusing this:\n  f abs_summable_on B\n  A \\<subseteq> B\n  ?x \\<notin> A \\<Longrightarrow> 0 \\<le> f ?x\n  f abs_summable_on B - A\n  \\<lbrakk>?f abs_summable_on ?A; ?g abs_summable_on ?A;\n   \\<And>x. x \\<in> ?A \\<Longrightarrow> ?f x \\<le> ?g x\\<rbrakk>\n  \\<Longrightarrow> infsetsum ?f ?A \\<le> infsetsum ?g ?A\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>a_\\<in>B - A. 0) \\<le> infsetsum f (B - A)", "by (metis DiffD2 abs_summable_on_0)"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>a_\\<in>B - A. 0) \\<le> infsetsum f (B - A)\n\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum f B", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>a_\\<in>B - A. 0) \\<le> infsetsum f (B - A)\n\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum f B", "have \"... = infsetsum f B - infsetsum f A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum f (B - A) = infsetsum f B - infsetsum f A", "using assms"], ["proof (prove)\nusing this:\n  f abs_summable_on B\n  A \\<subseteq> B\n  ?x \\<notin> A \\<Longrightarrow> 0 \\<le> f ?x\n\ngoal (1 subgoal):\n 1. infsetsum f (B - A) = infsetsum f B - infsetsum f A", "by (simp add: infsetsum_Diff)"], ["proof (state)\nthis:\n  infsetsum f (B - A) = infsetsum f B - infsetsum f A\n\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum f B", "finally"], ["proof (chain)\npicking this:\n  0 \\<le> infsetsum f B - infsetsum f A", "show ?thesis"], ["proof (prove)\nusing this:\n  0 \\<le> infsetsum f B - infsetsum f A\n\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum f B", "by auto"], ["proof (state)\nthis:\n  infsetsum f A \\<le> infsetsum f B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infsetsum_subset_real:\n  fixes f :: \"'a \\<Rightarrow> real\"\n  assumes \"f abs_summable_on B\" and \"A \\<subseteq> B\" and \"\\<And>x. x\\<notin>A \\<Longrightarrow> f x \\<ge> 0\"\n  shows \"infsetsum f A \\<le> infsetsum f B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum f B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum f B", "have fBA: \"f abs_summable_on B - A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f abs_summable_on B - A", "by (meson Diff_subset abs_summable_on_subset assms(1))"], ["proof (state)\nthis:\n  f abs_summable_on B - A\n\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum f B", "have \"0 = infsetsum (\\<lambda>_.0) (B-A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'b) = (\\<Sum>\\<^sub>a_\\<in>B - A. (0::'b))", "by auto"], ["proof (state)\nthis:\n  (0::?'b1) = (\\<Sum>\\<^sub>a_\\<in>B - A. (0::?'b1))\n\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum f B", "also"], ["proof (state)\nthis:\n  (0::?'b1) = (\\<Sum>\\<^sub>a_\\<in>B - A. (0::?'b1))\n\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum f B", "have \"... \\<le> infsetsum f (B - A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>a_\\<in>B - A. 0) \\<le> infsetsum f (B - A)", "using assms fBA"], ["proof (prove)\nusing this:\n  f abs_summable_on B\n  A \\<subseteq> B\n  ?x \\<notin> A \\<Longrightarrow> 0 \\<le> f ?x\n  f abs_summable_on B - A\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>a_\\<in>B - A. 0) \\<le> infsetsum f (B - A)", "by (metis DiffD2 calculation infsetsum_nonneg)"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>a_\\<in>B - A. 0) \\<le> infsetsum f (B - A)\n\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum f B", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>a_\\<in>B - A. 0) \\<le> infsetsum f (B - A)\n\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum f B", "have \"... = infsetsum f B - infsetsum f A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum f (B - A) = infsetsum f B - infsetsum f A", "using assms"], ["proof (prove)\nusing this:\n  f abs_summable_on B\n  A \\<subseteq> B\n  ?x \\<notin> A \\<Longrightarrow> 0 \\<le> f ?x\n\ngoal (1 subgoal):\n 1. infsetsum f (B - A) = infsetsum f B - infsetsum f A", "by (simp add: infsetsum_Diff)"], ["proof (state)\nthis:\n  infsetsum f (B - A) = infsetsum f B - infsetsum f A\n\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum f B", "finally"], ["proof (chain)\npicking this:\n  0 \\<le> infsetsum f B - infsetsum f A", "show ?thesis"], ["proof (prove)\nusing this:\n  0 \\<le> infsetsum f B - infsetsum f A\n\ngoal (1 subgoal):\n 1. infsetsum f A \\<le> infsetsum f B", "by auto"], ["proof (state)\nthis:\n  infsetsum f A \\<le> infsetsum f B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma abs_summable_product:\n  fixes x :: \"'a \\<Rightarrow> 'b::{real_normed_div_algebra,banach,second_countable_topology}\"\n  assumes x2_sum: \"(\\<lambda>i. (x i) * (x i)) abs_summable_on A\"\n    and y2_sum: \"(\\<lambda>i. (y i) * (y i)) abs_summable_on A\"\n  shows \"(\\<lambda>i. x i * y i) abs_summable_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i. x i * y i) abs_summable_on A", "proof (rule abs_summable_finiteI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>xa\\<in>F. norm (x xa * y xa)) \\<le> ?B", "have aux: \"a\\<le>a' \\<Longrightarrow> b\\<le>b' \\<Longrightarrow> a+b \\<le> a'+b'\" for a b a' b' :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> a'; b \\<le> b'\\<rbrakk>\n    \\<Longrightarrow> a + b \\<le> a' + b'", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>?a \\<le> ?a'; ?b \\<le> ?b'\\<rbrakk>\n  \\<Longrightarrow> ?a + ?b \\<le> ?a' + ?b'\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>xa\\<in>F. norm (x xa * y xa)) \\<le> ?B", "fix F"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>xa\\<in>F. norm (x xa * y xa)) \\<le> ?B", "assume r1: \"finite F\" and b4: \"F \\<subseteq> A\""], ["proof (state)\nthis:\n  finite F\n  F \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>xa\\<in>F. norm (x xa * y xa)) \\<le> ?B", "define B :: real where \"B = (\\<Sum>\\<^sub>ai\\<in>A. norm (x i * x i)) + (\\<Sum>\\<^sub>ai\\<in>A. norm (y i * y i))\""], ["proof (state)\nthis:\n  B =\n  (\\<Sum>\\<^sub>ai\\<in>A. norm (x i * x i)) +\n  (\\<Sum>\\<^sub>ai\\<in>A. norm (y i * y i))\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>xa\\<in>F. norm (x xa * y xa)) \\<le> ?B", "have a1: \"(\\<Sum>\\<^sub>ai\\<in>F. norm (x i * x i)) \\<le> (\\<Sum>\\<^sub>ai\\<in>A. norm (x i * x i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ai\\<in>F. norm (x i * x i))\n    \\<le> (\\<Sum>\\<^sub>ai\\<in>A. norm (x i * x i))", "proof (rule infsetsum_mono_neutral_left)"], ["proof (state)\ngoal (5 subgoals):\n 1. (\\<lambda>i. norm (x i * x i)) abs_summable_on F\n 2. (\\<lambda>i. norm (x i * x i)) abs_summable_on A\n 3. \\<And>xa.\n       xa \\<in> F \\<Longrightarrow>\n       norm (x xa * x xa) \\<le> norm (x xa * x xa)\n 4. F \\<subseteq> A\n 5. \\<And>xa. xa \\<in> A - F \\<Longrightarrow> 0 \\<le> norm (x xa * x xa)", "show \"(\\<lambda>i. norm (x i * x i)) abs_summable_on F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i. norm (x i * x i)) abs_summable_on F", "by (simp add: r1)"], ["proof (state)\nthis:\n  (\\<lambda>i. norm (x i * x i)) abs_summable_on F\n\ngoal (4 subgoals):\n 1. (\\<lambda>i. norm (x i * x i)) abs_summable_on A\n 2. \\<And>xa.\n       xa \\<in> F \\<Longrightarrow>\n       norm (x xa * x xa) \\<le> norm (x xa * x xa)\n 3. F \\<subseteq> A\n 4. \\<And>xa. xa \\<in> A - F \\<Longrightarrow> 0 \\<le> norm (x xa * x xa)", "show \"(\\<lambda>i. norm (x i * x i)) abs_summable_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i. norm (x i * x i)) abs_summable_on A", "by (simp add: x2_sum)"], ["proof (state)\nthis:\n  (\\<lambda>i. norm (x i * x i)) abs_summable_on A\n\ngoal (3 subgoals):\n 1. \\<And>xa.\n       xa \\<in> F \\<Longrightarrow>\n       norm (x xa * x xa) \\<le> norm (x xa * x xa)\n 2. F \\<subseteq> A\n 3. \\<And>xa. xa \\<in> A - F \\<Longrightarrow> 0 \\<le> norm (x xa * x xa)", "show \"norm (x i * x i) \\<le> norm (x i * x i)\"\n      if \"i \\<in> F\"\n      for i :: 'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (x i * x i) \\<le> norm (x i * x i)", "by simp"], ["proof (state)\nthis:\n  ?i \\<in> F \\<Longrightarrow> norm (x ?i * x ?i) \\<le> norm (x ?i * x ?i)\n\ngoal (2 subgoals):\n 1. F \\<subseteq> A\n 2. \\<And>xa. xa \\<in> A - F \\<Longrightarrow> 0 \\<le> norm (x xa * x xa)", "show \"F \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<subseteq> A", "by (simp add: b4)"], ["proof (state)\nthis:\n  F \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<And>xa. xa \\<in> A - F \\<Longrightarrow> 0 \\<le> norm (x xa * x xa)", "show \"0 \\<le> norm (x i * x i)\"\n      if \"i \\<in> A - F\"\n      for i :: 'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> norm (x i * x i)", "by simp"], ["proof (state)\nthis:\n  ?i \\<in> A - F \\<Longrightarrow> 0 \\<le> norm (x ?i * x ?i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ai\\<in>F. norm (x i * x i))\n  \\<le> (\\<Sum>\\<^sub>ai\\<in>A. norm (x i * x i))\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>xa\\<in>F. norm (x xa * y xa)) \\<le> ?B", "have \"norm (x i * y i) \\<le> norm (x i * x i) + norm (y i * y i)\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (x i * y i) \\<le> norm (x i * x i) + norm (y i * y i)", "unfolding norm_mult"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (x i) * norm (y i)\n    \\<le> norm (x i) * norm (x i) + norm (y i) * norm (y i)", "by (smt mult_left_mono mult_nonneg_nonneg mult_right_mono norm_ge_zero)"], ["proof (state)\nthis:\n  norm (x ?i * y ?i) \\<le> norm (x ?i * x ?i) + norm (y ?i * y ?i)\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>xa\\<in>F. norm (x xa * y xa)) \\<le> ?B", "hence \"(\\<Sum>i\\<in>F. norm (x i * y i)) \\<le> (\\<Sum>i\\<in>F. norm (x i * x i) + norm (y i * y i))\""], ["proof (prove)\nusing this:\n  norm (x ?i * y ?i) \\<le> norm (x ?i * x ?i) + norm (y ?i * y ?i)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>F. norm (x i * y i))\n    \\<le> (\\<Sum>i\\<in>F. norm (x i * x i) + norm (y i * y i))", "by (simp add: sum_mono)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>F. norm (x i * y i))\n  \\<le> (\\<Sum>i\\<in>F. norm (x i * x i) + norm (y i * y i))\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>xa\\<in>F. norm (x xa * y xa)) \\<le> ?B", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>F. norm (x i * y i))\n  \\<le> (\\<Sum>i\\<in>F. norm (x i * x i) + norm (y i * y i))\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>xa\\<in>F. norm (x xa * y xa)) \\<le> ?B", "have \"\\<dots> = (\\<Sum>i\\<in>F. norm (x i * x i)) + (\\<Sum>i\\<in>F. norm (y i * y i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>F. norm (x i * x i) + norm (y i * y i)) =\n    (\\<Sum>i\\<in>F. norm (x i * x i)) + (\\<Sum>i\\<in>F. norm (y i * y i))", "by (simp add: sum.distrib)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>F. norm (x i * x i) + norm (y i * y i)) =\n  (\\<Sum>i\\<in>F. norm (x i * x i)) + (\\<Sum>i\\<in>F. norm (y i * y i))\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>xa\\<in>F. norm (x xa * y xa)) \\<le> ?B", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>F. norm (x i * x i) + norm (y i * y i)) =\n  (\\<Sum>i\\<in>F. norm (x i * x i)) + (\\<Sum>i\\<in>F. norm (y i * y i))\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>xa\\<in>F. norm (x xa * y xa)) \\<le> ?B", "have \"\\<dots> = (\\<Sum>\\<^sub>ai\\<in>F. norm (x i * x i)) + (\\<Sum>\\<^sub>ai\\<in>F. norm (y i * y i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>F. norm (x i * x i)) + (\\<Sum>i\\<in>F. norm (y i * y i)) =\n    (\\<Sum>\\<^sub>ai\\<in>F. norm (x i * x i)) +\n    (\\<Sum>\\<^sub>ai\\<in>F. norm (y i * y i))", "by (simp add: \\<open>finite F\\<close>)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>F. norm (x i * x i)) + (\\<Sum>i\\<in>F. norm (y i * y i)) =\n  (\\<Sum>\\<^sub>ai\\<in>F. norm (x i * x i)) +\n  (\\<Sum>\\<^sub>ai\\<in>F. norm (y i * y i))\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>xa\\<in>F. norm (x xa * y xa)) \\<le> ?B", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>F. norm (x i * x i)) + (\\<Sum>i\\<in>F. norm (y i * y i)) =\n  (\\<Sum>\\<^sub>ai\\<in>F. norm (x i * x i)) +\n  (\\<Sum>\\<^sub>ai\\<in>F. norm (y i * y i))\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>xa\\<in>F. norm (x xa * y xa)) \\<le> ?B", "have \"\\<dots> \\<le> (\\<Sum>\\<^sub>ai\\<in>A. norm (x i * x i)) + (\\<Sum>\\<^sub>ai\\<in>A. norm (y i * y i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ai\\<in>F. norm (x i * x i)) +\n    (\\<Sum>\\<^sub>ai\\<in>F. norm (y i * y i))\n    \\<le> (\\<Sum>\\<^sub>ai\\<in>A. norm (x i * x i)) +\n          (\\<Sum>\\<^sub>ai\\<in>A. norm (y i * y i))", "using aux a1"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<le> ?a'; ?b \\<le> ?b'\\<rbrakk>\n  \\<Longrightarrow> ?a + ?b \\<le> ?a' + ?b'\n  (\\<Sum>\\<^sub>ai\\<in>F. norm (x i * x i))\n  \\<le> (\\<Sum>\\<^sub>ai\\<in>A. norm (x i * x i))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ai\\<in>F. norm (x i * x i)) +\n    (\\<Sum>\\<^sub>ai\\<in>F. norm (y i * y i))\n    \\<le> (\\<Sum>\\<^sub>ai\\<in>A. norm (x i * x i)) +\n          (\\<Sum>\\<^sub>ai\\<in>A. norm (y i * y i))", "by (simp add: aux \\<open>F \\<subseteq> A\\<close> \\<open>finite F\\<close> abs_summable_finiteI_converse x2_sum y2_sum)"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ai\\<in>F. norm (x i * x i)) +\n  (\\<Sum>\\<^sub>ai\\<in>F. norm (y i * y i))\n  \\<le> (\\<Sum>\\<^sub>ai\\<in>A. norm (x i * x i)) +\n        (\\<Sum>\\<^sub>ai\\<in>A. norm (y i * y i))\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>xa\\<in>F. norm (x xa * y xa)) \\<le> ?B", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ai\\<in>F. norm (x i * x i)) +\n  (\\<Sum>\\<^sub>ai\\<in>F. norm (y i * y i))\n  \\<le> (\\<Sum>\\<^sub>ai\\<in>A. norm (x i * x i)) +\n        (\\<Sum>\\<^sub>ai\\<in>A. norm (y i * y i))\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>xa\\<in>F. norm (x xa * y xa)) \\<le> ?B", "have \"\\<dots> = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ai\\<in>A. norm (x i * x i)) +\n    (\\<Sum>\\<^sub>ai\\<in>A. norm (y i * y i)) =\n    B", "unfolding B_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ai\\<in>A. norm (x i * x i)) +\n    (\\<Sum>\\<^sub>ai\\<in>A. norm (y i * y i)) =\n    (\\<Sum>\\<^sub>ai\\<in>A. norm (x i * x i)) +\n    (\\<Sum>\\<^sub>ai\\<in>A. norm (y i * y i))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ai\\<in>A. norm (x i * x i)) +\n  (\\<Sum>\\<^sub>ai\\<in>A. norm (y i * y i)) =\n  B\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>xa\\<in>F. norm (x xa * y xa)) \\<le> ?B", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>i\\<in>F. norm (x i * y i)) \\<le> B", "show \"(\\<Sum>i\\<in>F. norm (x i * y i)) \\<le> B\""], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>F. norm (x i * y i)) \\<le> B\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>F. norm (x i * y i)) \\<le> B", "by assumption"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>F. norm (x i * y i)) \\<le> B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma abs_summable_cnj_iff[simp]:\n  \"(\\<lambda>i. cnj (f i)) abs_summable_on A \\<longleftrightarrow> f abs_summable_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>i. cnj (f i)) abs_summable_on A) = (f abs_summable_on A)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>i. cnj (f i)) abs_summable_on A \\<Longrightarrow>\n    f abs_summable_on A\n 2. f abs_summable_on A \\<Longrightarrow>\n    (\\<lambda>i. cnj (f i)) abs_summable_on A", "show \"f abs_summable_on A\"\n    if \"(\\<lambda>i. cnj (f i)) abs_summable_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f abs_summable_on A", "using that abs_summable_on_norm_iff[symmetric]\n      abs_summable_on_comparison_test"], ["proof (prove)\nusing this:\n  (\\<lambda>i. cnj (f i)) abs_summable_on A\n  (?f abs_summable_on ?A) = ((\\<lambda>x. norm (?f x)) abs_summable_on ?A)\n  \\<lbrakk>?g abs_summable_on ?A;\n   \\<And>x.\n      x \\<in> ?A \\<Longrightarrow> norm (?f x) \\<le> norm (?g x)\\<rbrakk>\n  \\<Longrightarrow> ?f abs_summable_on ?A\n\ngoal (1 subgoal):\n 1. f abs_summable_on A", "by fastforce"], ["proof (state)\nthis:\n  (\\<lambda>i. cnj (f i)) abs_summable_on A \\<Longrightarrow>\n  f abs_summable_on A\n\ngoal (1 subgoal):\n 1. f abs_summable_on A \\<Longrightarrow>\n    (\\<lambda>i. cnj (f i)) abs_summable_on A", "show \"(\\<lambda>i. cnj (f i)) abs_summable_on A\"\n    if \"f abs_summable_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i. cnj (f i)) abs_summable_on A", "using that abs_summable_on_norm_iff[symmetric]\n      abs_summable_on_comparison_test"], ["proof (prove)\nusing this:\n  f abs_summable_on A\n  (?f abs_summable_on ?A) = ((\\<lambda>x. norm (?f x)) abs_summable_on ?A)\n  \\<lbrakk>?g abs_summable_on ?A;\n   \\<And>x.\n      x \\<in> ?A \\<Longrightarrow> norm (?f x) \\<le> norm (?g x)\\<rbrakk>\n  \\<Longrightarrow> ?f abs_summable_on ?A\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. cnj (f i)) abs_summable_on A", "by fastforce"], ["proof (state)\nthis:\n  f abs_summable_on A \\<Longrightarrow>\n  (\\<lambda>i. cnj (f i)) abs_summable_on A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ennreal_Sup:\n  assumes \"bdd_above A\" and nonempty: \"A\\<noteq>{}\"\n  shows \"ennreal (Sup A) = Sup (ennreal ` A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (Sup A) = Sup (ennreal ` A)", "proof (rule Sup_eqI[symmetric])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y. y \\<in> ennreal ` A \\<Longrightarrow> y \\<le> ennreal (Sup A)\n 2. \\<And>y.\n       (\\<And>z.\n           z \\<in> ennreal ` A \\<Longrightarrow>\n           z \\<le> y) \\<Longrightarrow>\n       ennreal (Sup A) \\<le> y", "fix y"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y. y \\<in> ennreal ` A \\<Longrightarrow> y \\<le> ennreal (Sup A)\n 2. \\<And>y.\n       (\\<And>z.\n           z \\<in> ennreal ` A \\<Longrightarrow>\n           z \\<le> y) \\<Longrightarrow>\n       ennreal (Sup A) \\<le> y", "assume \"y \\<in> ennreal ` A\""], ["proof (state)\nthis:\n  y \\<in> ennreal ` A\n\ngoal (2 subgoals):\n 1. \\<And>y. y \\<in> ennreal ` A \\<Longrightarrow> y \\<le> ennreal (Sup A)\n 2. \\<And>y.\n       (\\<And>z.\n           z \\<in> ennreal ` A \\<Longrightarrow>\n           z \\<le> y) \\<Longrightarrow>\n       ennreal (Sup A) \\<le> y", "thus \"y \\<le> ennreal (Sup A)\""], ["proof (prove)\nusing this:\n  y \\<in> ennreal ` A\n\ngoal (1 subgoal):\n 1. y \\<le> ennreal (Sup A)", "using assms cSup_upper ennreal_leI"], ["proof (prove)\nusing this:\n  y \\<in> ennreal ` A\n  bdd_above A\n  A \\<noteq> {}\n  \\<lbrakk>?x \\<in> ?X; bdd_above ?X\\<rbrakk>\n  \\<Longrightarrow> ?x \\<le> Sup ?X\n  ?x \\<le> ?y \\<Longrightarrow> ennreal ?x \\<le> ennreal ?y\n\ngoal (1 subgoal):\n 1. y \\<le> ennreal (Sup A)", "by auto"], ["proof (state)\nthis:\n  y \\<le> ennreal (Sup A)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       (\\<And>z.\n           z \\<in> ennreal ` A \\<Longrightarrow>\n           z \\<le> y) \\<Longrightarrow>\n       ennreal (Sup A) \\<le> y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       (\\<And>z.\n           z \\<in> ennreal ` A \\<Longrightarrow>\n           z \\<le> y) \\<Longrightarrow>\n       ennreal (Sup A) \\<le> y", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       (\\<And>z.\n           z \\<in> ennreal ` A \\<Longrightarrow>\n           z \\<le> y) \\<Longrightarrow>\n       ennreal (Sup A) \\<le> y", "assume asm: \"\\<And>z. z \\<in> ennreal ` A \\<Longrightarrow> z \\<le> y\""], ["proof (state)\nthis:\n  ?z \\<in> ennreal ` A \\<Longrightarrow> ?z \\<le> y\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       (\\<And>z.\n           z \\<in> ennreal ` A \\<Longrightarrow>\n           z \\<le> y) \\<Longrightarrow>\n       ennreal (Sup A) \\<le> y", "show \"ennreal (Sup A) \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (Sup A) \\<le> y", "proof (cases y)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>r.\n       \\<lbrakk>0 \\<le> r; y = ennreal r\\<rbrakk>\n       \\<Longrightarrow> ennreal (Sup A) \\<le> y\n 2. y = top \\<Longrightarrow> ennreal (Sup A) \\<le> y", "case (real r)"], ["proof (state)\nthis:\n  0 \\<le> r\n  y = ennreal r\n\ngoal (2 subgoals):\n 1. \\<And>r.\n       \\<lbrakk>0 \\<le> r; y = ennreal r\\<rbrakk>\n       \\<Longrightarrow> ennreal (Sup A) \\<le> y\n 2. y = top \\<Longrightarrow> ennreal (Sup A) \\<le> y", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (Sup A) \\<le> y", "by (metis assms(1) cSup_le_iff ennreal_leI real(1) real(2) asm Sup_least bdd_above_top \n          cSUP_le_iff ennreal_le_iff nonempty)"], ["proof (state)\nthis:\n  ennreal (Sup A) \\<le> y\n\ngoal (1 subgoal):\n 1. y = top \\<Longrightarrow> ennreal (Sup A) \\<le> y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y = top \\<Longrightarrow> ennreal (Sup A) \\<le> y", "case top"], ["proof (state)\nthis:\n  y = top\n\ngoal (1 subgoal):\n 1. y = top \\<Longrightarrow> ennreal (Sup A) \\<le> y", "thus ?thesis"], ["proof (prove)\nusing this:\n  y = top\n\ngoal (1 subgoal):\n 1. ennreal (Sup A) \\<le> y", "by auto"], ["proof (state)\nthis:\n  ennreal (Sup A) \\<le> y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ennreal (Sup A) \\<le> y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infsetsum_nonneg_is_SUPREMUM_ennreal:\n  fixes f :: \"'a \\<Rightarrow> real\"\n  assumes summable: \"f abs_summable_on A\"\n    and fnn: \"\\<And>x. x\\<in>A \\<Longrightarrow> f x \\<ge> 0\"\n  shows \"ennreal (infsetsum f A) = (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. (ennreal (sum f F)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (infsetsum f A) =\n    (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. ennreal (infsetsum f A) =\n    (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F))", "have sum_F_A: \"sum f F \\<le> infsetsum f A\" \n    if \"F \\<in> {F. finite F \\<and> F \\<subseteq> A}\" \n    for F"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f F \\<le> infsetsum f A", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. sum f F \\<le> infsetsum f A", "from that"], ["proof (chain)\npicking this:\n  F \\<in> {F. finite F \\<and> F \\<subseteq> A}", "have \"finite F\" and \"F \\<subseteq> A\""], ["proof (prove)\nusing this:\n  F \\<in> {F. finite F \\<and> F \\<subseteq> A}\n\ngoal (1 subgoal):\n 1. finite F &&& F \\<subseteq> A", "by auto"], ["proof (state)\nthis:\n  finite F\n  F \\<subseteq> A\n\ngoal (1 subgoal):\n 1. sum f F \\<le> infsetsum f A", "from \\<open>finite F\\<close>"], ["proof (chain)\npicking this:\n  finite F", "have \"sum f F = infsetsum f F\""], ["proof (prove)\nusing this:\n  finite F\n\ngoal (1 subgoal):\n 1. sum f F = infsetsum f F", "by auto"], ["proof (state)\nthis:\n  sum f F = infsetsum f F\n\ngoal (1 subgoal):\n 1. sum f F \\<le> infsetsum f A", "also"], ["proof (state)\nthis:\n  sum f F = infsetsum f F\n\ngoal (1 subgoal):\n 1. sum f F \\<le> infsetsum f A", "have \"\\<dots> \\<le> infsetsum f A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum f F \\<le> infsetsum f A", "proof (rule infsetsum_mono_neutral_left)"], ["proof (state)\ngoal (5 subgoals):\n 1. f abs_summable_on F\n 2. f abs_summable_on A\n 3. \\<And>x. x \\<in> F \\<Longrightarrow> f x \\<le> f x\n 4. F \\<subseteq> A\n 5. \\<And>x. x \\<in> A - F \\<Longrightarrow> 0 \\<le> f x", "show \"f abs_summable_on F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f abs_summable_on F", "by (simp add: \\<open>finite F\\<close>)"], ["proof (state)\nthis:\n  f abs_summable_on F\n\ngoal (4 subgoals):\n 1. f abs_summable_on A\n 2. \\<And>x. x \\<in> F \\<Longrightarrow> f x \\<le> f x\n 3. F \\<subseteq> A\n 4. \\<And>x. x \\<in> A - F \\<Longrightarrow> 0 \\<le> f x", "show \"f abs_summable_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f abs_summable_on A", "by (simp add: local.summable)"], ["proof (state)\nthis:\n  f abs_summable_on A\n\ngoal (3 subgoals):\n 1. \\<And>x. x \\<in> F \\<Longrightarrow> f x \\<le> f x\n 2. F \\<subseteq> A\n 3. \\<And>x. x \\<in> A - F \\<Longrightarrow> 0 \\<le> f x", "show \"f x \\<le> f x\"\n        if \"x \\<in> F\"\n        for x :: 'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. f x \\<le> f x", "by simp"], ["proof (state)\nthis:\n  ?x \\<in> F \\<Longrightarrow> f ?x \\<le> f ?x\n\ngoal (2 subgoals):\n 1. F \\<subseteq> A\n 2. \\<And>x. x \\<in> A - F \\<Longrightarrow> 0 \\<le> f x", "show \"F \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<subseteq> A", "by (simp add: \\<open>F \\<subseteq> A\\<close>)"], ["proof (state)\nthis:\n  F \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A - F \\<Longrightarrow> 0 \\<le> f x", "show \"0 \\<le> f x\"\n        if \"x \\<in> A - F\"\n        for x :: 'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> f x", "using that fnn"], ["proof (prove)\nusing this:\n  x \\<in> A - F\n  ?x \\<in> A \\<Longrightarrow> 0 \\<le> f ?x\n\ngoal (1 subgoal):\n 1. 0 \\<le> f x", "by auto"], ["proof (state)\nthis:\n  ?x \\<in> A - F \\<Longrightarrow> 0 \\<le> f ?x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  infsetsum f F \\<le> infsetsum f A\n\ngoal (1 subgoal):\n 1. sum f F \\<le> infsetsum f A", "finally"], ["proof (chain)\npicking this:\n  sum f F \\<le> infsetsum f A", "show ?thesis"], ["proof (prove)\nusing this:\n  sum f F \\<le> infsetsum f A\n\ngoal (1 subgoal):\n 1. sum f F \\<le> infsetsum f A", "by assumption"], ["proof (state)\nthis:\n  sum f F \\<le> infsetsum f A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?F \\<in> {F. finite F \\<and> F \\<subseteq> A} \\<Longrightarrow>\n  sum f ?F \\<le> infsetsum f A\n\ngoal (1 subgoal):\n 1. ennreal (infsetsum f A) =\n    (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F))", "hence geq: \"ennreal (infsetsum f A) \\<ge> (SUP F\\<in>{G. finite G \\<and> G \\<subseteq> A}. (ennreal (sum f F)))\""], ["proof (prove)\nusing this:\n  ?F \\<in> {F. finite F \\<and> F \\<subseteq> A} \\<Longrightarrow>\n  sum f ?F \\<le> infsetsum f A\n\ngoal (1 subgoal):\n 1. (SUP F\\<in>{G. finite G \\<and> G \\<subseteq> A}. ennreal (sum f F))\n    \\<le> ennreal (infsetsum f A)", "by (meson SUP_least ennreal_leI)"], ["proof (state)\nthis:\n  (SUP F\\<in>{G. finite G \\<and> G \\<subseteq> A}. ennreal (sum f F))\n  \\<le> ennreal (infsetsum f A)\n\ngoal (1 subgoal):\n 1. ennreal (infsetsum f A) =\n    (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F))", "define fe where \"fe x = ennreal (f x)\" for x"], ["proof (state)\nthis:\n  fe ?x = ennreal (f ?x)\n\ngoal (1 subgoal):\n 1. ennreal (infsetsum f A) =\n    (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F))", "have sum_f_int: \"infsetsum f A = \\<integral>\\<^sup>+ x. fe x \\<partial>(count_space A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (infsetsum f A) = integral\\<^sup>N (count_space A) fe", "unfolding infsetsum_def fe_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (integral\\<^sup>L (count_space A) f) =\n    \\<integral>\\<^sup>+ x. ennreal (f x) \\<partial>count_space A", "proof (rule nn_integral_eq_integral [symmetric])"], ["proof (state)\ngoal (2 subgoals):\n 1. integrable (count_space A) f\n 2. AE x in count_space A. 0 \\<le> f x", "show \"integrable (count_space A) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable (count_space A) f", "using abs_summable_on_def local.summable"], ["proof (prove)\nusing this:\n  (?f abs_summable_on ?A) = integrable (count_space ?A) ?f\n  f abs_summable_on A\n\ngoal (1 subgoal):\n 1. integrable (count_space A) f", "by blast"], ["proof (state)\nthis:\n  integrable (count_space A) f\n\ngoal (1 subgoal):\n 1. AE x in count_space A. 0 \\<le> f x", "show \"AE x in count_space A. 0 \\<le> f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in count_space A. 0 \\<le> f x", "using fnn"], ["proof (prove)\nusing this:\n  ?x \\<in> A \\<Longrightarrow> 0 \\<le> f ?x\n\ngoal (1 subgoal):\n 1. AE x in count_space A. 0 \\<le> f x", "by auto"], ["proof (state)\nthis:\n  AE x in count_space A. 0 \\<le> f x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ennreal (infsetsum f A) = integral\\<^sup>N (count_space A) fe\n\ngoal (1 subgoal):\n 1. ennreal (infsetsum f A) =\n    (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F))", "also"], ["proof (state)\nthis:\n  ennreal (infsetsum f A) = integral\\<^sup>N (count_space A) fe\n\ngoal (1 subgoal):\n 1. ennreal (infsetsum f A) =\n    (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F))", "have \"\\<dots> = (SUP g \\<in> {g. finite (g`A) \\<and> g \\<le> fe}. integral\\<^sup>S (count_space A) g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>N (count_space A) fe =\n    Sup (integral\\<^sup>S (count_space A) `\n         {g. finite (g ` A) \\<and> g \\<le> fe})", "unfolding nn_integral_def simple_function_count_space"], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup (integral\\<^sup>S (count_space A) `\n         {g. finite (g ` A) \\<and> g \\<le> fe}) =\n    Sup (integral\\<^sup>S (count_space A) `\n         {g. finite (g ` A) \\<and> g \\<le> fe})", "by simp"], ["proof (state)\nthis:\n  integral\\<^sup>N (count_space A) fe =\n  Sup (integral\\<^sup>S (count_space A) `\n       {g. finite (g ` A) \\<and> g \\<le> fe})\n\ngoal (1 subgoal):\n 1. ennreal (infsetsum f A) =\n    (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F))", "also"], ["proof (state)\nthis:\n  integral\\<^sup>N (count_space A) fe =\n  Sup (integral\\<^sup>S (count_space A) `\n       {g. finite (g ` A) \\<and> g \\<le> fe})\n\ngoal (1 subgoal):\n 1. ennreal (infsetsum f A) =\n    (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F))", "have \"\\<dots> \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. (ennreal (sum f F)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup (integral\\<^sup>S (count_space A) `\n         {g. finite (g ` A) \\<and> g \\<le> fe})\n    \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n              ennreal (sum f F))", "proof (rule Sup_least)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> integral\\<^sup>S (count_space A) `\n               {g. finite (g ` A) \\<and> g \\<le> fe} \\<Longrightarrow>\n       x \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n                   ennreal (sum f F))", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> integral\\<^sup>S (count_space A) `\n               {g. finite (g ` A) \\<and> g \\<le> fe} \\<Longrightarrow>\n       x \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n                   ennreal (sum f F))", "assume \"x \\<in> integral\\<^sup>S (count_space A) ` {g. finite (g ` A) \\<and> g \\<le> fe}\""], ["proof (state)\nthis:\n  x \\<in> integral\\<^sup>S (count_space A) `\n          {g. finite (g ` A) \\<and> g \\<le> fe}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> integral\\<^sup>S (count_space A) `\n               {g. finite (g ` A) \\<and> g \\<le> fe} \\<Longrightarrow>\n       x \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n                   ennreal (sum f F))", "then"], ["proof (chain)\npicking this:\n  x \\<in> integral\\<^sup>S (count_space A) `\n          {g. finite (g ` A) \\<and> g \\<le> fe}", "obtain g where xg: \"x = integral\\<^sup>S (count_space A) g\" and fin_gA: \"finite (g`A)\" \n      and g_fe: \"g \\<le> fe\""], ["proof (prove)\nusing this:\n  x \\<in> integral\\<^sup>S (count_space A) `\n          {g. finite (g ` A) \\<and> g \\<le> fe}\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>x = integral\\<^sup>S (count_space A) g; finite (g ` A);\n         g \\<le> fe\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x = integral\\<^sup>S (count_space A) g\n  finite (g ` A)\n  g \\<le> fe\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> integral\\<^sup>S (count_space A) `\n               {g. finite (g ` A) \\<and> g \\<le> fe} \\<Longrightarrow>\n       x \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n                   ennreal (sum f F))", "define F where \"F = {z:A. g z \\<noteq> 0}\""], ["proof (state)\nthis:\n  F = {z \\<in> A. g z \\<noteq> 0}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> integral\\<^sup>S (count_space A) `\n               {g. finite (g ` A) \\<and> g \\<le> fe} \\<Longrightarrow>\n       x \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n                   ennreal (sum f F))", "hence \"F \\<subseteq> A\""], ["proof (prove)\nusing this:\n  F = {z \\<in> A. g z \\<noteq> 0}\n\ngoal (1 subgoal):\n 1. F \\<subseteq> A", "by simp"], ["proof (state)\nthis:\n  F \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> integral\\<^sup>S (count_space A) `\n               {g. finite (g ` A) \\<and> g \\<le> fe} \\<Longrightarrow>\n       x \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n                   ennreal (sum f F))", "have fin: \"finite {z:A. g z = t}\" if \"t \\<noteq> 0\" for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {z \\<in> A. g z = t}", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. infinite {z \\<in> A. g z = t} \\<Longrightarrow> False", "assume inf: \"infinite {z:A. g z = t}\""], ["proof (state)\nthis:\n  infinite {z \\<in> A. g z = t}\n\ngoal (1 subgoal):\n 1. infinite {z \\<in> A. g z = t} \\<Longrightarrow> False", "hence tgA: \"t \\<in> g ` A\""], ["proof (prove)\nusing this:\n  infinite {z \\<in> A. g z = t}\n\ngoal (1 subgoal):\n 1. t \\<in> g ` A", "by (metis (mono_tags, lifting) image_eqI not_finite_existsD)"], ["proof (state)\nthis:\n  t \\<in> g ` A\n\ngoal (1 subgoal):\n 1. infinite {z \\<in> A. g z = t} \\<Longrightarrow> False", "have \"x = (\\<Sum>x \\<in> g ` A. x * emeasure (count_space A) (g -` {x} \\<inter> A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x =\n    (\\<Sum>x\\<in>g ` A. x * emeasure (count_space A) (g -` {x} \\<inter> A))", "unfolding xg simple_integral_def space_count_space"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>g ` A.\n       x * emeasure (count_space A) (g -` {x} \\<inter> A)) =\n    (\\<Sum>x\\<in>g ` A. x * emeasure (count_space A) (g -` {x} \\<inter> A))", "by simp"], ["proof (state)\nthis:\n  x =\n  (\\<Sum>x\\<in>g ` A. x * emeasure (count_space A) (g -` {x} \\<inter> A))\n\ngoal (1 subgoal):\n 1. infinite {z \\<in> A. g z = t} \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  x =\n  (\\<Sum>x\\<in>g ` A. x * emeasure (count_space A) (g -` {x} \\<inter> A))\n\ngoal (1 subgoal):\n 1. infinite {z \\<in> A. g z = t} \\<Longrightarrow> False", "have \"\\<dots> \\<ge> (\\<Sum>x \\<in> {t}. x * emeasure (count_space A) (g -` {x} \\<inter> A))\" (is \"_ \\<ge> \\<dots>\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{t}. x * emeasure (count_space A) (g -` {x} \\<inter> A))\n    \\<le> (\\<Sum>x\\<in>g ` A.\n             x * emeasure (count_space A) (g -` {x} \\<inter> A))", "proof (rule sum_mono2)"], ["proof (state)\ngoal (3 subgoals):\n 1. finite (g ` A)\n 2. {t} \\<subseteq> g ` A\n 3. \\<And>b.\n       b \\<in> g ` A - {t} \\<Longrightarrow>\n       0 \\<le> b * emeasure (count_space A) (g -` {b} \\<inter> A)", "show \"finite (g ` A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (g ` A)", "by (simp add: fin_gA)"], ["proof (state)\nthis:\n  finite (g ` A)\n\ngoal (2 subgoals):\n 1. {t} \\<subseteq> g ` A\n 2. \\<And>b.\n       b \\<in> g ` A - {t} \\<Longrightarrow>\n       0 \\<le> b * emeasure (count_space A) (g -` {b} \\<inter> A)", "show \"{t} \\<subseteq> g ` A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {t} \\<subseteq> g ` A", "by (simp add: tgA)"], ["proof (state)\nthis:\n  {t} \\<subseteq> g ` A\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> g ` A - {t} \\<Longrightarrow>\n       0 \\<le> b * emeasure (count_space A) (g -` {b} \\<inter> A)", "show \"0 \\<le> b * emeasure (count_space A) (g -` {b} \\<inter> A)\"\n          if \"b \\<in> g ` A - {t}\"\n          for b :: ennreal"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> b * emeasure (count_space A) (g -` {b} \\<inter> A)", "using that"], ["proof (prove)\nusing this:\n  b \\<in> g ` A - {t}\n\ngoal (1 subgoal):\n 1. 0 \\<le> b * emeasure (count_space A) (g -` {b} \\<inter> A)", "by simp"], ["proof (state)\nthis:\n  ?b \\<in> g ` A - {t} \\<Longrightarrow>\n  0 \\<le> ?b * emeasure (count_space A) (g -` {?b} \\<inter> A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{t}. x * emeasure (count_space A) (g -` {x} \\<inter> A))\n  \\<le> (\\<Sum>x\\<in>g ` A.\n           x * emeasure (count_space A) (g -` {x} \\<inter> A))\n\ngoal (1 subgoal):\n 1. infinite {z \\<in> A. g z = t} \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{t}. x * emeasure (count_space A) (g -` {x} \\<inter> A))\n  \\<le> (\\<Sum>x\\<in>g ` A.\n           x * emeasure (count_space A) (g -` {x} \\<inter> A))\n\ngoal (1 subgoal):\n 1. infinite {z \\<in> A. g z = t} \\<Longrightarrow> False", "have \"\\<dots> = t * emeasure (count_space A) (g -` {t} \\<inter> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{t}. x * emeasure (count_space A) (g -` {x} \\<inter> A)) =\n    t * emeasure (count_space A) (g -` {t} \\<inter> A)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{t}. x * emeasure (count_space A) (g -` {x} \\<inter> A)) =\n  t * emeasure (count_space A) (g -` {t} \\<inter> A)\n\ngoal (1 subgoal):\n 1. infinite {z \\<in> A. g z = t} \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{t}. x * emeasure (count_space A) (g -` {x} \\<inter> A)) =\n  t * emeasure (count_space A) (g -` {t} \\<inter> A)\n\ngoal (1 subgoal):\n 1. infinite {z \\<in> A. g z = t} \\<Longrightarrow> False", "have \"\\<dots> = t * \\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t * emeasure (count_space A) (g -` {t} \\<inter> A) = t * \\<infinity>", "proof (subst emeasure_count_space_infinite)"], ["proof (state)\ngoal (3 subgoals):\n 1. g -` {t} \\<inter> A \\<subseteq> A\n 2. infinite (g -` {t} \\<inter> A)\n 3. t * \\<infinity> = t * \\<infinity>", "show \"g -` {t} \\<inter> A \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g -` {t} \\<inter> A \\<subseteq> A", "by simp"], ["proof (state)\nthis:\n  g -` {t} \\<inter> A \\<subseteq> A\n\ngoal (2 subgoals):\n 1. infinite (g -` {t} \\<inter> A)\n 2. t * \\<infinity> = t * \\<infinity>", "have \"{a \\<in> A. g a = t} = {a \\<in> g -` {t}. a \\<in> A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a \\<in> A. g a = t} = {a \\<in> g -` {t}. a \\<in> A}", "by auto"], ["proof (state)\nthis:\n  {a \\<in> A. g a = t} = {a \\<in> g -` {t}. a \\<in> A}\n\ngoal (2 subgoals):\n 1. infinite (g -` {t} \\<inter> A)\n 2. t * \\<infinity> = t * \\<infinity>", "thus \"infinite (g -` {t} \\<inter> A)\""], ["proof (prove)\nusing this:\n  {a \\<in> A. g a = t} = {a \\<in> g -` {t}. a \\<in> A}\n\ngoal (1 subgoal):\n 1. infinite (g -` {t} \\<inter> A)", "by (metis (full_types) Int_def inf)"], ["proof (state)\nthis:\n  infinite (g -` {t} \\<inter> A)\n\ngoal (1 subgoal):\n 1. t * \\<infinity> = t * \\<infinity>", "show \"t * \\<infinity> = t * \\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t * \\<infinity> = t * \\<infinity>", "by simp"], ["proof (state)\nthis:\n  t * \\<infinity> = t * \\<infinity>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  t * emeasure (count_space A) (g -` {t} \\<inter> A) = t * \\<infinity>\n\ngoal (1 subgoal):\n 1. infinite {z \\<in> A. g z = t} \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  t * emeasure (count_space A) (g -` {t} \\<inter> A) = t * \\<infinity>\n\ngoal (1 subgoal):\n 1. infinite {z \\<in> A. g z = t} \\<Longrightarrow> False", "have \"\\<dots> = \\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t * \\<infinity> = \\<infinity>", "using \\<open>t \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  t \\<noteq> 0\n\ngoal (1 subgoal):\n 1. t * \\<infinity> = \\<infinity>", "by (simp add: ennreal_mult_eq_top_iff)"], ["proof (state)\nthis:\n  t * \\<infinity> = \\<infinity>\n\ngoal (1 subgoal):\n 1. infinite {z \\<in> A. g z = t} \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  \\<infinity> \\<le> x", "have x_inf: \"x = \\<infinity>\""], ["proof (prove)\nusing this:\n  \\<infinity> \\<le> x\n\ngoal (1 subgoal):\n 1. x = \\<infinity>", "using neq_top_trans"], ["proof (prove)\nusing this:\n  \\<infinity> \\<le> x\n  \\<lbrakk>?y \\<noteq> top; ?x \\<le> ?y\\<rbrakk>\n  \\<Longrightarrow> ?x \\<noteq> top\n\ngoal (1 subgoal):\n 1. x = \\<infinity>", "by auto"], ["proof (state)\nthis:\n  x = \\<infinity>\n\ngoal (1 subgoal):\n 1. infinite {z \\<in> A. g z = t} \\<Longrightarrow> False", "have \"x = integral\\<^sup>S (count_space A) g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = integral\\<^sup>S (count_space A) g", "by (fact xg)"], ["proof (state)\nthis:\n  x = integral\\<^sup>S (count_space A) g\n\ngoal (1 subgoal):\n 1. infinite {z \\<in> A. g z = t} \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  x = integral\\<^sup>S (count_space A) g\n\ngoal (1 subgoal):\n 1. infinite {z \\<in> A. g z = t} \\<Longrightarrow> False", "have \"\\<dots> = integral\\<^sup>N (count_space A) g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>S (count_space A) g = integral\\<^sup>N (count_space A) g", "by (simp add: fin_gA nn_integral_eq_simple_integral)"], ["proof (state)\nthis:\n  integral\\<^sup>S (count_space A) g = integral\\<^sup>N (count_space A) g\n\ngoal (1 subgoal):\n 1. infinite {z \\<in> A. g z = t} \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  integral\\<^sup>S (count_space A) g = integral\\<^sup>N (count_space A) g\n\ngoal (1 subgoal):\n 1. infinite {z \\<in> A. g z = t} \\<Longrightarrow> False", "have \"\\<dots> \\<le> integral\\<^sup>N (count_space A) fe\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>N (count_space A) g\n    \\<le> integral\\<^sup>N (count_space A) fe", "using g_fe"], ["proof (prove)\nusing this:\n  g \\<le> fe\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N (count_space A) g\n    \\<le> integral\\<^sup>N (count_space A) fe", "by (simp add: le_funD nn_integral_mono)"], ["proof (state)\nthis:\n  integral\\<^sup>N (count_space A) g\n  \\<le> integral\\<^sup>N (count_space A) fe\n\ngoal (1 subgoal):\n 1. infinite {z \\<in> A. g z = t} \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  integral\\<^sup>N (count_space A) g\n  \\<le> integral\\<^sup>N (count_space A) fe\n\ngoal (1 subgoal):\n 1. infinite {z \\<in> A. g z = t} \\<Longrightarrow> False", "have \"\\<dots> < \\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>N (count_space A) fe < \\<infinity>", "by (metis sum_f_int ennreal_less_top infinity_ennreal_def)"], ["proof (state)\nthis:\n  integral\\<^sup>N (count_space A) fe < \\<infinity>\n\ngoal (1 subgoal):\n 1. infinite {z \\<in> A. g z = t} \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  x < \\<infinity>", "have x_fin: \"x < \\<infinity>\""], ["proof (prove)\nusing this:\n  x < \\<infinity>\n\ngoal (1 subgoal):\n 1. x < \\<infinity>", "by simp"], ["proof (state)\nthis:\n  x < \\<infinity>\n\ngoal (1 subgoal):\n 1. infinite {z \\<in> A. g z = t} \\<Longrightarrow> False", "from x_inf x_fin"], ["proof (chain)\npicking this:\n  x = \\<infinity>\n  x < \\<infinity>", "show False"], ["proof (prove)\nusing this:\n  x = \\<infinity>\n  x < \\<infinity>\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?t \\<noteq> 0 \\<Longrightarrow> finite {z \\<in> A. g z = ?t}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> integral\\<^sup>S (count_space A) `\n               {g. finite (g ` A) \\<and> g \\<le> fe} \\<Longrightarrow>\n       x \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n                   ennreal (sum f F))", "have F: \"F = (\\<Union>t\\<in>g`A-{0}. {z\\<in>A. g z = t})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F = (\\<Union>t\\<in>g ` A - {0}. {z \\<in> A. g z = t})", "unfolding F_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {z \\<in> A. g z \\<noteq> 0} =\n    (\\<Union>t\\<in>g ` A - {0}. {z \\<in> A. g z = t})", "by auto"], ["proof (state)\nthis:\n  F = (\\<Union>t\\<in>g ` A - {0}. {z \\<in> A. g z = t})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> integral\\<^sup>S (count_space A) `\n               {g. finite (g ` A) \\<and> g \\<le> fe} \\<Longrightarrow>\n       x \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n                   ennreal (sum f F))", "hence \"finite F\""], ["proof (prove)\nusing this:\n  F = (\\<Union>t\\<in>g ` A - {0}. {z \\<in> A. g z = t})\n\ngoal (1 subgoal):\n 1. finite F", "unfolding F"], ["proof (prove)\nusing this:\n  (\\<Union>t\\<in>g ` A - {0}. {z \\<in> A. g z = t}) =\n  (\\<Union>t\\<in>g ` A - {0}. {z \\<in> A. g z = t})\n\ngoal (1 subgoal):\n 1. finite (\\<Union>t\\<in>g ` A - {0}. {z \\<in> A. g z = t})", "using fin_gA fin"], ["proof (prove)\nusing this:\n  (\\<Union>t\\<in>g ` A - {0}. {z \\<in> A. g z = t}) =\n  (\\<Union>t\\<in>g ` A - {0}. {z \\<in> A. g z = t})\n  finite (g ` A)\n  ?t \\<noteq> 0 \\<Longrightarrow> finite {z \\<in> A. g z = ?t}\n\ngoal (1 subgoal):\n 1. finite (\\<Union>t\\<in>g ` A - {0}. {z \\<in> A. g z = t})", "by auto"], ["proof (state)\nthis:\n  finite F\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> integral\\<^sup>S (count_space A) `\n               {g. finite (g ` A) \\<and> g \\<le> fe} \\<Longrightarrow>\n       x \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n                   ennreal (sum f F))", "have \"x = integral\\<^sup>N (count_space A) g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = integral\\<^sup>N (count_space A) g", "unfolding xg"], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>S (count_space A) g = integral\\<^sup>N (count_space A) g", "by (simp add: fin_gA nn_integral_eq_simple_integral)"], ["proof (state)\nthis:\n  x = integral\\<^sup>N (count_space A) g\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> integral\\<^sup>S (count_space A) `\n               {g. finite (g ` A) \\<and> g \\<le> fe} \\<Longrightarrow>\n       x \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n                   ennreal (sum f F))", "also"], ["proof (state)\nthis:\n  x = integral\\<^sup>N (count_space A) g\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> integral\\<^sup>S (count_space A) `\n               {g. finite (g ` A) \\<and> g \\<le> fe} \\<Longrightarrow>\n       x \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n                   ennreal (sum f F))", "have \"\\<dots> = set_nn_integral (count_space UNIV) A g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>N (count_space A) g =\n    set_nn_integral (count_space UNIV) A g", "by (simp add: nn_integral_restrict_space[symmetric] restrict_count_space)"], ["proof (state)\nthis:\n  integral\\<^sup>N (count_space A) g =\n  set_nn_integral (count_space UNIV) A g\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> integral\\<^sup>S (count_space A) `\n               {g. finite (g ` A) \\<and> g \\<le> fe} \\<Longrightarrow>\n       x \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n                   ennreal (sum f F))", "also"], ["proof (state)\nthis:\n  integral\\<^sup>N (count_space A) g =\n  set_nn_integral (count_space UNIV) A g\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> integral\\<^sup>S (count_space A) `\n               {g. finite (g ` A) \\<and> g \\<le> fe} \\<Longrightarrow>\n       x \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n                   ennreal (sum f F))", "have \"\\<dots> = set_nn_integral (count_space UNIV) F g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_nn_integral (count_space UNIV) A g =\n    set_nn_integral (count_space UNIV) F g", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. set_nn_integral (count_space UNIV) A g =\n    set_nn_integral (count_space UNIV) F g", "have \"\\<forall>a. g a * (if a \\<in> {a \\<in> A. g a \\<noteq> 0} then 1 else 0) = g a * (if a \\<in> A then 1 else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a.\n       g a * (if a \\<in> {a \\<in> A. g a \\<noteq> 0} then 1 else 0) =\n       g a * (if a \\<in> A then 1 else 0)", "by auto"], ["proof (state)\nthis:\n  \\<forall>a.\n     g a * (if a \\<in> {a \\<in> A. g a \\<noteq> 0} then 1 else 0) =\n     g a * (if a \\<in> A then 1 else 0)\n\ngoal (1 subgoal):\n 1. set_nn_integral (count_space UNIV) A g =\n    set_nn_integral (count_space UNIV) F g", "hence \"(\\<integral>\\<^sup>+ a. g a * (if a \\<in> A then 1 else 0) \\<partial>count_space UNIV)\n           = (\\<integral>\\<^sup>+ a. g a * (if a \\<in> {a \\<in> A. g a \\<noteq> 0} then 1 else 0) \\<partial>count_space UNIV)\""], ["proof (prove)\nusing this:\n  \\<forall>a.\n     g a * (if a \\<in> {a \\<in> A. g a \\<noteq> 0} then 1 else 0) =\n     g a * (if a \\<in> A then 1 else 0)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ a. g a * (if a \\<in> A then 1 else 0)\n                       \\<partial>count_space UNIV =\n    \\<integral>\\<^sup>+ a. g a *\n                           (if a \\<in> {a \\<in> A. g a \\<noteq> 0} then 1\n                            else 0)\n                       \\<partial>count_space UNIV", "by presburger"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ a. g a * (if a \\<in> A then 1 else 0)\n                     \\<partial>count_space UNIV =\n  \\<integral>\\<^sup>+ a. g a *\n                         (if a \\<in> {a \\<in> A. g a \\<noteq> 0} then 1\n                          else 0)\n                     \\<partial>count_space UNIV\n\ngoal (1 subgoal):\n 1. set_nn_integral (count_space UNIV) A g =\n    set_nn_integral (count_space UNIV) F g", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ a. g a * (if a \\<in> A then 1 else 0)\n                     \\<partial>count_space UNIV =\n  \\<integral>\\<^sup>+ a. g a *\n                         (if a \\<in> {a \\<in> A. g a \\<noteq> 0} then 1\n                          else 0)\n                     \\<partial>count_space UNIV\n\ngoal (1 subgoal):\n 1. set_nn_integral (count_space UNIV) A g =\n    set_nn_integral (count_space UNIV) F g", "unfolding F_def indicator_def"], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ a. g a * (if a \\<in> A then 1 else 0)\n                     \\<partial>count_space UNIV =\n  \\<integral>\\<^sup>+ a. g a *\n                         (if a \\<in> {a \\<in> A. g a \\<noteq> 0} then 1\n                          else 0)\n                     \\<partial>count_space UNIV\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. g x * (if x \\<in> A then 1 else 0)\n                       \\<partial>count_space UNIV =\n    \\<integral>\\<^sup>+ x. g x *\n                           (if x \\<in> {z \\<in> A. g z \\<noteq> 0} then 1\n                            else 0)\n                       \\<partial>count_space UNIV", "using mult.right_neutral mult_zero_right nn_integral_cong"], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ a. g a * (if a \\<in> A then 1 else 0)\n                     \\<partial>count_space UNIV =\n  \\<integral>\\<^sup>+ a. g a *\n                         (if a \\<in> {a \\<in> A. g a \\<noteq> 0} then 1\n                          else 0)\n                     \\<partial>count_space UNIV\n  ?a * (1::?'a) = ?a\n  ?a * (0::?'a) = (0::?'a)\n  (\\<And>x.\n      x \\<in> space ?M \\<Longrightarrow> ?u x = ?v x) \\<Longrightarrow>\n  integral\\<^sup>N ?M ?u = integral\\<^sup>N ?M ?v\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. g x * (if x \\<in> A then 1 else 0)\n                       \\<partial>count_space UNIV =\n    \\<integral>\\<^sup>+ x. g x *\n                           (if x \\<in> {z \\<in> A. g z \\<noteq> 0} then 1\n                            else 0)\n                       \\<partial>count_space UNIV", "by blast"], ["proof (state)\nthis:\n  set_nn_integral (count_space UNIV) A g =\n  set_nn_integral (count_space UNIV) F g\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  set_nn_integral (count_space UNIV) A g =\n  set_nn_integral (count_space UNIV) F g\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> integral\\<^sup>S (count_space A) `\n               {g. finite (g ` A) \\<and> g \\<le> fe} \\<Longrightarrow>\n       x \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n                   ennreal (sum f F))", "also"], ["proof (state)\nthis:\n  set_nn_integral (count_space UNIV) A g =\n  set_nn_integral (count_space UNIV) F g\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> integral\\<^sup>S (count_space A) `\n               {g. finite (g ` A) \\<and> g \\<le> fe} \\<Longrightarrow>\n       x \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n                   ennreal (sum f F))", "have \"\\<dots> = integral\\<^sup>N (count_space F) g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_nn_integral (count_space UNIV) F g =\n    integral\\<^sup>N (count_space F) g", "by (simp add: nn_integral_restrict_space[symmetric] restrict_count_space)"], ["proof (state)\nthis:\n  set_nn_integral (count_space UNIV) F g =\n  integral\\<^sup>N (count_space F) g\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> integral\\<^sup>S (count_space A) `\n               {g. finite (g ` A) \\<and> g \\<le> fe} \\<Longrightarrow>\n       x \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n                   ennreal (sum f F))", "also"], ["proof (state)\nthis:\n  set_nn_integral (count_space UNIV) F g =\n  integral\\<^sup>N (count_space F) g\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> integral\\<^sup>S (count_space A) `\n               {g. finite (g ` A) \\<and> g \\<le> fe} \\<Longrightarrow>\n       x \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n                   ennreal (sum f F))", "have \"\\<dots> = sum g F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>N (count_space F) g = sum g F", "using \\<open>finite F\\<close>"], ["proof (prove)\nusing this:\n  finite F\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N (count_space F) g = sum g F", "by (rule nn_integral_count_space_finite)"], ["proof (state)\nthis:\n  integral\\<^sup>N (count_space F) g = sum g F\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> integral\\<^sup>S (count_space A) `\n               {g. finite (g ` A) \\<and> g \\<le> fe} \\<Longrightarrow>\n       x \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n                   ennreal (sum f F))", "also"], ["proof (state)\nthis:\n  integral\\<^sup>N (count_space F) g = sum g F\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> integral\\<^sup>S (count_space A) `\n               {g. finite (g ` A) \\<and> g \\<le> fe} \\<Longrightarrow>\n       x \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n                   ennreal (sum f F))", "have \"sum g F \\<le> sum fe F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum g F \\<le> sum fe F", "using g_fe"], ["proof (prove)\nusing this:\n  g \\<le> fe\n\ngoal (1 subgoal):\n 1. sum g F \\<le> sum fe F", "unfolding le_fun_def"], ["proof (prove)\nusing this:\n  \\<forall>x. g x \\<le> fe x\n\ngoal (1 subgoal):\n 1. sum g F \\<le> sum fe F", "by (simp add: sum_mono)"], ["proof (state)\nthis:\n  sum g F \\<le> sum fe F\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> integral\\<^sup>S (count_space A) `\n               {g. finite (g ` A) \\<and> g \\<le> fe} \\<Longrightarrow>\n       x \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n                   ennreal (sum f F))", "also"], ["proof (state)\nthis:\n  sum g F \\<le> sum fe F\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> integral\\<^sup>S (count_space A) `\n               {g. finite (g ` A) \\<and> g \\<le> fe} \\<Longrightarrow>\n       x \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n                   ennreal (sum f F))", "have \"\\<dots> \\<le> (SUP F \\<in> {G. finite G \\<and> G \\<subseteq> A}. (sum fe F))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum fe F \\<le> Sup (sum fe ` {G. finite G \\<and> G \\<subseteq> A})", "using \\<open>finite F\\<close> \\<open>F\\<subseteq>A\\<close>"], ["proof (prove)\nusing this:\n  finite F\n  F \\<subseteq> A\n\ngoal (1 subgoal):\n 1. sum fe F \\<le> Sup (sum fe ` {G. finite G \\<and> G \\<subseteq> A})", "by (simp add: SUP_upper)"], ["proof (state)\nthis:\n  sum fe F \\<le> Sup (sum fe ` {G. finite G \\<and> G \\<subseteq> A})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> integral\\<^sup>S (count_space A) `\n               {g. finite (g ` A) \\<and> g \\<le> fe} \\<Longrightarrow>\n       x \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n                   ennreal (sum f F))", "also"], ["proof (state)\nthis:\n  sum fe F \\<le> Sup (sum fe ` {G. finite G \\<and> G \\<subseteq> A})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> integral\\<^sup>S (count_space A) `\n               {g. finite (g ` A) \\<and> g \\<le> fe} \\<Longrightarrow>\n       x \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n                   ennreal (sum f F))", "have \"\\<dots> = (SUP F \\<in> {F. finite F \\<and> F \\<subseteq> A}. (ennreal (sum f F)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup (sum fe ` {G. finite G \\<and> G \\<subseteq> A}) =\n    (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F))", "proof (rule SUP_cong [OF refl])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {G. finite G \\<and> G \\<subseteq> A} \\<Longrightarrow>\n       sum fe x = ennreal (sum f x)", "have \"finite x \\<Longrightarrow> x \\<subseteq> A \\<Longrightarrow> (\\<Sum>x\\<in>x. ennreal (f x)) = ennreal (sum f x)\"\n        for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite x; x \\<subseteq> A\\<rbrakk>\n    \\<Longrightarrow> (\\<Sum>x\\<in>x. ennreal (f x)) = ennreal (sum f x)", "by (metis fnn subsetCE sum_ennreal)"], ["proof (state)\nthis:\n  \\<lbrakk>finite ?x; ?x \\<subseteq> A\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>x\\<in>?x. ennreal (f x)) = ennreal (sum f ?x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {G. finite G \\<and> G \\<subseteq> A} \\<Longrightarrow>\n       sum fe x = ennreal (sum f x)", "thus \"sum fe x = ennreal (sum f x)\"\n        if \"x \\<in> {G. finite G \\<and> G \\<subseteq> A}\"\n        for x :: \"'a set\""], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?x; ?x \\<subseteq> A\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>x\\<in>?x. ennreal (f x)) = ennreal (sum f ?x)\n\ngoal (1 subgoal):\n 1. sum fe x = ennreal (sum f x)", "using that"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?x; ?x \\<subseteq> A\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>x\\<in>?x. ennreal (f x)) = ennreal (sum f ?x)\n  x \\<in> {G. finite G \\<and> G \\<subseteq> A}\n\ngoal (1 subgoal):\n 1. sum fe x = ennreal (sum f x)", "unfolding fe_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?x; ?x \\<subseteq> A\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>x\\<in>?x. ennreal (f x)) = ennreal (sum f ?x)\n  x \\<in> {G. finite G \\<and> G \\<subseteq> A}\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>x. ennreal (f x)) = ennreal (sum f x)", "by auto"], ["proof (state)\nthis:\n  ?x \\<in> {G. finite G \\<and> G \\<subseteq> A} \\<Longrightarrow>\n  sum fe ?x = ennreal (sum f ?x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Sup (sum fe ` {G. finite G \\<and> G \\<subseteq> A}) =\n  (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> integral\\<^sup>S (count_space A) `\n               {g. finite (g ` A) \\<and> g \\<le> fe} \\<Longrightarrow>\n       x \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n                   ennreal (sum f F))", "finally"], ["proof (chain)\npicking this:\n  x \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n              ennreal (sum f F))", "show \"x \\<le> \\<dots>\""], ["proof (prove)\nusing this:\n  x \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n              ennreal (sum f F))\n\ngoal (1 subgoal):\n 1. x \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n                ennreal (sum f F))", "by simp"], ["proof (state)\nthis:\n  x \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n              ennreal (sum f F))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Sup (integral\\<^sup>S (count_space A) `\n       {g. finite (g ` A) \\<and> g \\<le> fe})\n  \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F))\n\ngoal (1 subgoal):\n 1. ennreal (infsetsum f A) =\n    (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F))", "finally"], ["proof (chain)\npicking this:\n  ennreal (infsetsum f A)\n  \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F))", "have leq: \"ennreal (infsetsum f A) \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. (ennreal (sum f F)))\""], ["proof (prove)\nusing this:\n  ennreal (infsetsum f A)\n  \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F))\n\ngoal (1 subgoal):\n 1. ennreal (infsetsum f A)\n    \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n              ennreal (sum f F))", "by assumption"], ["proof (state)\nthis:\n  ennreal (infsetsum f A)\n  \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F))\n\ngoal (1 subgoal):\n 1. ennreal (infsetsum f A) =\n    (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F))", "from leq geq"], ["proof (chain)\npicking this:\n  ennreal (infsetsum f A)\n  \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F))\n  (SUP F\\<in>{G. finite G \\<and> G \\<subseteq> A}. ennreal (sum f F))\n  \\<le> ennreal (infsetsum f A)", "show ?thesis"], ["proof (prove)\nusing this:\n  ennreal (infsetsum f A)\n  \\<le> (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F))\n  (SUP F\\<in>{G. finite G \\<and> G \\<subseteq> A}. ennreal (sum f F))\n  \\<le> ennreal (infsetsum f A)\n\ngoal (1 subgoal):\n 1. ennreal (infsetsum f A) =\n    (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F))", "by simp"], ["proof (state)\nthis:\n  ennreal (infsetsum f A) =\n  (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infsetsum_nonneg_is_SUPREMUM_ereal:\n  fixes f :: \"'a \\<Rightarrow> real\"\n  assumes summable: \"f abs_summable_on A\"\n    and fnn: \"\\<And>x. x\\<in>A \\<Longrightarrow> f x \\<ge> 0\"\n  shows \"ereal (infsetsum f A) = (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. (ereal (sum f F)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ereal (infsetsum f A) =\n    (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (sum f F))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ereal (infsetsum f A) =\n    (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (sum f F))", "have \"ereal (infsetsum f A) = enn2ereal (ennreal (infsetsum f A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ereal (infsetsum f A) = enn2ereal (ennreal (infsetsum f A))", "by (simp add: fnn infsetsum_nonneg)"], ["proof (state)\nthis:\n  ereal (infsetsum f A) = enn2ereal (ennreal (infsetsum f A))\n\ngoal (1 subgoal):\n 1. ereal (infsetsum f A) =\n    (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (sum f F))", "also"], ["proof (state)\nthis:\n  ereal (infsetsum f A) = enn2ereal (ennreal (infsetsum f A))\n\ngoal (1 subgoal):\n 1. ereal (infsetsum f A) =\n    (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (sum f F))", "have \"\\<dots> = enn2ereal (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enn2ereal (ennreal (infsetsum f A)) =\n    enn2ereal\n     (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F))", "proof (subst infsetsum_nonneg_is_SUPREMUM_ennreal)"], ["proof (state)\ngoal (3 subgoals):\n 1. f abs_summable_on A\n 2. \\<And>x. x \\<in> A \\<Longrightarrow> 0 \\<le> f x\n 3. enn2ereal\n     (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F)) =\n    enn2ereal\n     (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F))", "show \"f abs_summable_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f abs_summable_on A", "by (simp add: local.summable)"], ["proof (state)\nthis:\n  f abs_summable_on A\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> 0 \\<le> f x\n 2. enn2ereal\n     (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F)) =\n    enn2ereal\n     (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F))", "show \"0 \\<le> f x\"\n      if \"x \\<in> A\"\n      for x :: 'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> f x", "using that"], ["proof (prove)\nusing this:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. 0 \\<le> f x", "by (simp add: fnn)"], ["proof (state)\nthis:\n  ?x \\<in> A \\<Longrightarrow> 0 \\<le> f ?x\n\ngoal (1 subgoal):\n 1. enn2ereal\n     (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F)) =\n    enn2ereal\n     (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F))", "show \"enn2ereal (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F)) = enn2ereal (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enn2ereal\n     (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F)) =\n    enn2ereal\n     (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F))", "by simp"], ["proof (state)\nthis:\n  enn2ereal\n   (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F)) =\n  enn2ereal\n   (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  enn2ereal (ennreal (infsetsum f A)) =\n  enn2ereal\n   (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F))\n\ngoal (1 subgoal):\n 1. ereal (infsetsum f A) =\n    (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (sum f F))", "also"], ["proof (state)\nthis:\n  enn2ereal (ennreal (infsetsum f A)) =\n  enn2ereal\n   (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F))\n\ngoal (1 subgoal):\n 1. ereal (infsetsum f A) =\n    (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (sum f F))", "have \"\\<dots> = (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. (ereal (sum f F)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enn2ereal\n     (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F)) =\n    (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (sum f F))", "proof (simp add: image_def Sup_ennreal.rep_eq)"], ["proof (state)\ngoal (1 subgoal):\n 1. max 0\n     (Sup {y. \\<exists>x.\n                 (\\<exists>xa.\n                     finite xa \\<and>\n                     xa \\<subseteq> A \\<and> x = ennreal (sum f xa)) \\<and>\n                 y = enn2ereal x}) =\n    Sup {y. \\<exists>x.\n               finite x \\<and> x \\<subseteq> A \\<and> y = ereal (sum f x)}", "have \"0 \\<le> Sup {y. \\<exists>x. (\\<exists>xa. finite xa \\<and> xa \\<subseteq> A \\<and> x = ennreal (sum f xa)) \\<and>\n                     y = enn2ereal x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> Sup {y. \\<exists>x.\n                       (\\<exists>xa.\n                           finite xa \\<and>\n                           xa \\<subseteq> A \\<and>\n                           x = ennreal (sum f xa)) \\<and>\n                       y = enn2ereal x}", "by (metis (mono_tags, lifting) Sup_upper empty_subsetI ennreal_0 finite.emptyI\n          mem_Collect_eq sum.empty zero_ennreal.rep_eq)"], ["proof (state)\nthis:\n  0 \\<le> Sup {y. \\<exists>x.\n                     (\\<exists>xa.\n                         finite xa \\<and>\n                         xa \\<subseteq> A \\<and>\n                         x = ennreal (sum f xa)) \\<and>\n                     y = enn2ereal x}\n\ngoal (1 subgoal):\n 1. max 0\n     (Sup {y. \\<exists>x.\n                 (\\<exists>xa.\n                     finite xa \\<and>\n                     xa \\<subseteq> A \\<and> x = ennreal (sum f xa)) \\<and>\n                 y = enn2ereal x}) =\n    Sup {y. \\<exists>x.\n               finite x \\<and> x \\<subseteq> A \\<and> y = ereal (sum f x)}", "moreover"], ["proof (state)\nthis:\n  0 \\<le> Sup {y. \\<exists>x.\n                     (\\<exists>xa.\n                         finite xa \\<and>\n                         xa \\<subseteq> A \\<and>\n                         x = ennreal (sum f xa)) \\<and>\n                     y = enn2ereal x}\n\ngoal (1 subgoal):\n 1. max 0\n     (Sup {y. \\<exists>x.\n                 (\\<exists>xa.\n                     finite xa \\<and>\n                     xa \\<subseteq> A \\<and> x = ennreal (sum f xa)) \\<and>\n                 y = enn2ereal x}) =\n    Sup {y. \\<exists>x.\n               finite x \\<and> x \\<subseteq> A \\<and> y = ereal (sum f x)}", "have \"Sup {y. \\<exists>x. (\\<exists>y. finite y \\<and> y \\<subseteq> A \\<and> x = ennreal (sum f y)) \\<and>\n                y = enn2ereal x} = Sup {y. \\<exists>x. finite x \\<and> x \\<subseteq> A \\<and> y = ereal (sum f x)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup {y. \\<exists>x.\n               (\\<exists>y.\n                   finite y \\<and>\n                   y \\<subseteq> A \\<and> x = ennreal (sum f y)) \\<and>\n               y = enn2ereal x} =\n    Sup {y. \\<exists>x.\n               finite x \\<and> x \\<subseteq> A \\<and> y = ereal (sum f x)}", "using enn2ereal_ennreal fnn in_mono sum_nonneg Collect_cong"], ["proof (prove)\nusing this:\n  0 \\<le> ?x \\<Longrightarrow> enn2ereal (ennreal ?x) = ereal ?x\n  ?x \\<in> A \\<Longrightarrow> 0 \\<le> f ?x\n  ?A \\<subseteq> ?B \\<Longrightarrow>\n  ?x \\<in> ?A \\<longrightarrow> ?x \\<in> ?B\n  (\\<And>x.\n      x \\<in> ?A \\<Longrightarrow> (0::?'a) \\<le> ?f x) \\<Longrightarrow>\n  (0::?'a) \\<le> sum ?f ?A\n  (\\<And>x. ?P x = ?Q x) \\<Longrightarrow> {x. ?P x} = {x. ?Q x}\n\ngoal (1 subgoal):\n 1. Sup {y. \\<exists>x.\n               (\\<exists>y.\n                   finite y \\<and>\n                   y \\<subseteq> A \\<and> x = ennreal (sum f y)) \\<and>\n               y = enn2ereal x} =\n    Sup {y. \\<exists>x.\n               finite x \\<and> x \\<subseteq> A \\<and> y = ereal (sum f x)}", "by smt"], ["proof (state)\nthis:\n  Sup {y. \\<exists>x.\n             (\\<exists>y.\n                 finite y \\<and>\n                 y \\<subseteq> A \\<and> x = ennreal (sum f y)) \\<and>\n             y = enn2ereal x} =\n  Sup {y. \\<exists>x.\n             finite x \\<and> x \\<subseteq> A \\<and> y = ereal (sum f x)}\n\ngoal (1 subgoal):\n 1. max 0\n     (Sup {y. \\<exists>x.\n                 (\\<exists>xa.\n                     finite xa \\<and>\n                     xa \\<subseteq> A \\<and> x = ennreal (sum f xa)) \\<and>\n                 y = enn2ereal x}) =\n    Sup {y. \\<exists>x.\n               finite x \\<and> x \\<subseteq> A \\<and> y = ereal (sum f x)}", "ultimately"], ["proof (chain)\npicking this:\n  0 \\<le> Sup {y. \\<exists>x.\n                     (\\<exists>xa.\n                         finite xa \\<and>\n                         xa \\<subseteq> A \\<and>\n                         x = ennreal (sum f xa)) \\<and>\n                     y = enn2ereal x}\n  Sup {y. \\<exists>x.\n             (\\<exists>y.\n                 finite y \\<and>\n                 y \\<subseteq> A \\<and> x = ennreal (sum f y)) \\<and>\n             y = enn2ereal x} =\n  Sup {y. \\<exists>x.\n             finite x \\<and> x \\<subseteq> A \\<and> y = ereal (sum f x)}", "show \"max 0 (Sup {y. \\<exists>x. (\\<exists>xa. finite xa \\<and> xa \\<subseteq> A \\<and> x\n                                       = ennreal (sum f xa)) \\<and> y = enn2ereal x})\n         = Sup {y. \\<exists>x. finite x \\<and> x \\<subseteq> A \\<and> y = ereal (sum f x)}\""], ["proof (prove)\nusing this:\n  0 \\<le> Sup {y. \\<exists>x.\n                     (\\<exists>xa.\n                         finite xa \\<and>\n                         xa \\<subseteq> A \\<and>\n                         x = ennreal (sum f xa)) \\<and>\n                     y = enn2ereal x}\n  Sup {y. \\<exists>x.\n             (\\<exists>y.\n                 finite y \\<and>\n                 y \\<subseteq> A \\<and> x = ennreal (sum f y)) \\<and>\n             y = enn2ereal x} =\n  Sup {y. \\<exists>x.\n             finite x \\<and> x \\<subseteq> A \\<and> y = ereal (sum f x)}\n\ngoal (1 subgoal):\n 1. max 0\n     (Sup {y. \\<exists>x.\n                 (\\<exists>xa.\n                     finite xa \\<and>\n                     xa \\<subseteq> A \\<and> x = ennreal (sum f xa)) \\<and>\n                 y = enn2ereal x}) =\n    Sup {y. \\<exists>x.\n               finite x \\<and> x \\<subseteq> A \\<and> y = ereal (sum f x)}", "by linarith"], ["proof (state)\nthis:\n  max 0\n   (Sup {y. \\<exists>x.\n               (\\<exists>xa.\n                   finite xa \\<and>\n                   xa \\<subseteq> A \\<and> x = ennreal (sum f xa)) \\<and>\n               y = enn2ereal x}) =\n  Sup {y. \\<exists>x.\n             finite x \\<and> x \\<subseteq> A \\<and> y = ereal (sum f x)}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  enn2ereal\n   (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ennreal (sum f F)) =\n  (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (sum f F))\n\ngoal (1 subgoal):\n 1. ereal (infsetsum f A) =\n    (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (sum f F))", "finally"], ["proof (chain)\npicking this:\n  ereal (infsetsum f A) =\n  (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (sum f F))", "show ?thesis"], ["proof (prove)\nusing this:\n  ereal (infsetsum f A) =\n  (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (sum f F))\n\ngoal (1 subgoal):\n 1. ereal (infsetsum f A) =\n    (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (sum f F))", "by simp"], ["proof (state)\nthis:\n  ereal (infsetsum f A) =\n  (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (sum f F))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infsetsum_nonneg_is_SUPREMUM:\n  fixes f :: \"'a \\<Rightarrow> real\"\n  assumes summable: \"f abs_summable_on A\"\n    and fnn: \"\\<And>x. x\\<in>A \\<Longrightarrow> f x \\<ge> 0\"\n  shows \"infsetsum f A = (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. (sum f F))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum f A = Sup (sum f ` {F. finite F \\<and> F \\<subseteq> A})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. infsetsum f A = Sup (sum f ` {F. finite F \\<and> F \\<subseteq> A})", "have \"ereal (infsetsum f A) = (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. (ereal (sum f F)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ereal (infsetsum f A) =\n    (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (sum f F))", "using assms"], ["proof (prove)\nusing this:\n  f abs_summable_on A\n  ?x \\<in> A \\<Longrightarrow> 0 \\<le> f ?x\n\ngoal (1 subgoal):\n 1. ereal (infsetsum f A) =\n    (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (sum f F))", "by (rule infsetsum_nonneg_is_SUPREMUM_ereal)"], ["proof (state)\nthis:\n  ereal (infsetsum f A) =\n  (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (sum f F))\n\ngoal (1 subgoal):\n 1. infsetsum f A = Sup (sum f ` {F. finite F \\<and> F \\<subseteq> A})", "also"], ["proof (state)\nthis:\n  ereal (infsetsum f A) =\n  (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (sum f F))\n\ngoal (1 subgoal):\n 1. infsetsum f A = Sup (sum f ` {F. finite F \\<and> F \\<subseteq> A})", "have \"\\<dots> = ereal (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. (sum f F))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (sum f F)) =\n    ereal (Sup (sum f ` {F. finite F \\<and> F \\<subseteq> A}))", "proof (subst ereal_SUP)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<bar>SUP a\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n             ereal (sum f a)\\<bar> \\<noteq>\n    \\<infinity>\n 2. (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (sum f F)) =\n    (SUP a\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (sum f a))", "show \"\\<bar>SUP a\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (sum f a)\\<bar> \\<noteq> \\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>SUP a\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n             ereal (sum f a)\\<bar> \\<noteq>\n    \\<infinity>", "using calculation"], ["proof (prove)\nusing this:\n  ereal (infsetsum f A) =\n  (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (sum f F))\n\ngoal (1 subgoal):\n 1. \\<bar>SUP a\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n             ereal (sum f a)\\<bar> \\<noteq>\n    \\<infinity>", "by fastforce"], ["proof (state)\nthis:\n  \\<bar>SUP a\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n           ereal (sum f a)\\<bar> \\<noteq>\n  \\<infinity>\n\ngoal (1 subgoal):\n 1. (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (sum f F)) =\n    (SUP a\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (sum f a))", "show \"(SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (sum f F)) = (SUP a\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (sum f a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (sum f F)) =\n    (SUP a\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (sum f a))", "by simp"], ["proof (state)\nthis:\n  (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (sum f F)) =\n  (SUP a\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (sum f a))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (sum f F)) =\n  ereal (Sup (sum f ` {F. finite F \\<and> F \\<subseteq> A}))\n\ngoal (1 subgoal):\n 1. infsetsum f A = Sup (sum f ` {F. finite F \\<and> F \\<subseteq> A})", "finally"], ["proof (chain)\npicking this:\n  ereal (infsetsum f A) =\n  ereal (Sup (sum f ` {F. finite F \\<and> F \\<subseteq> A}))", "show ?thesis"], ["proof (prove)\nusing this:\n  ereal (infsetsum f A) =\n  ereal (Sup (sum f ` {F. finite F \\<and> F \\<subseteq> A}))\n\ngoal (1 subgoal):\n 1. infsetsum f A = Sup (sum f ` {F. finite F \\<and> F \\<subseteq> A})", "by simp"], ["proof (state)\nthis:\n  infsetsum f A = Sup (sum f ` {F. finite F \\<and> F \\<subseteq> A})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infsetsum_geq0_complex:\n  fixes f :: \"'a \\<Rightarrow> complex\"\n  assumes \"f abs_summable_on M\"\n    and fnn: \"\\<And>x. x \\<in> M \\<Longrightarrow> 0 \\<le> f x\"\n  shows \"infsetsum f M \\<ge> 0\" (is \"?lhs \\<ge> _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> infsetsum f M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<le> infsetsum f M", "have \"?lhs \\<ge> infsetsum (\\<lambda>x. 0) M\" (is \"_ \\<ge> \\<dots>\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>M. 0) \\<le> infsetsum f M", "proof (rule infsetsum_mono_complex)"], ["proof (state)\ngoal (3 subgoals):\n 1. (\\<lambda>x. 0) abs_summable_on M\n 2. f abs_summable_on M\n 3. \\<And>x. x \\<in> M \\<Longrightarrow> 0 \\<le> f x", "show \"(\\<lambda>x. 0::complex) abs_summable_on M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. 0) abs_summable_on M", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. 0) abs_summable_on M\n\ngoal (2 subgoals):\n 1. f abs_summable_on M\n 2. \\<And>x. x \\<in> M \\<Longrightarrow> 0 \\<le> f x", "show \"f abs_summable_on M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f abs_summable_on M", "by (simp add: assms(1))"], ["proof (state)\nthis:\n  f abs_summable_on M\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> M \\<Longrightarrow> 0 \\<le> f x", "show \"0 \\<le> f x\"\n      if \"x \\<in> M\"\n      for x :: 'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> f x", "using that"], ["proof (prove)\nusing this:\n  x \\<in> M\n\ngoal (1 subgoal):\n 1. 0 \\<le> f x", "using fnn"], ["proof (prove)\nusing this:\n  x \\<in> M\n  ?x \\<in> M \\<Longrightarrow> 0 \\<le> f ?x\n\ngoal (1 subgoal):\n 1. 0 \\<le> f x", "by blast"], ["proof (state)\nthis:\n  ?x \\<in> M \\<Longrightarrow> 0 \\<le> f ?x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>M. 0) \\<le> infsetsum f M\n\ngoal (1 subgoal):\n 1. 0 \\<le> infsetsum f M", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>M. 0) \\<le> infsetsum f M\n\ngoal (1 subgoal):\n 1. 0 \\<le> infsetsum f M", "have \"\\<dots> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>M. 0) = 0", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>M. 0) = 0\n\ngoal (1 subgoal):\n 1. 0 \\<le> infsetsum f M", "finally"], ["proof (chain)\npicking this:\n  0 \\<le> infsetsum f M", "show ?thesis"], ["proof (prove)\nusing this:\n  0 \\<le> infsetsum f M\n\ngoal (1 subgoal):\n 1. 0 \\<le> infsetsum f M", "by assumption"], ["proof (state)\nthis:\n  0 \\<le> infsetsum f M\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infsetsum_cmod:\n  assumes \"f abs_summable_on M\"\n    and fnn: \"\\<And>x. x \\<in> M \\<Longrightarrow> 0 \\<le> f x\"\n  shows \"infsetsum (\\<lambda>x. cmod (f x)) M = cmod (infsetsum f M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>M. cmod (f x)) = cmod (infsetsum f M)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>M. cmod (f x)) = cmod (infsetsum f M)", "have nn: \"infsetsum f M \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> infsetsum f M", "using assms"], ["proof (prove)\nusing this:\n  f abs_summable_on M\n  ?x \\<in> M \\<Longrightarrow> 0 \\<le> f ?x\n\ngoal (1 subgoal):\n 1. 0 \\<le> infsetsum f M", "by (rule infsetsum_geq0_complex)"], ["proof (state)\nthis:\n  0 \\<le> infsetsum f M\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>M. cmod (f x)) = cmod (infsetsum f M)", "have \"infsetsum (\\<lambda>x. cmod (f x)) M = infsetsum (\\<lambda>x. Re (f x)) M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>M. cmod (f x)) = (\\<Sum>\\<^sub>ax\\<in>M. Re (f x))", "using fnn cmod_eq_Re less_eq_complex_def"], ["proof (prove)\nusing this:\n  ?x \\<in> M \\<Longrightarrow> 0 \\<le> f ?x\n  Im ?z = 0 \\<Longrightarrow> cmod ?z = \\<bar>Re ?z\\<bar>\n  ?x \\<le> ?y \\<equiv> Im ?x = Im ?y \\<and> Re ?x \\<le> Re ?y\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>M. cmod (f x)) = (\\<Sum>\\<^sub>ax\\<in>M. Re (f x))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>M. cmod (f x)) = (\\<Sum>\\<^sub>ax\\<in>M. Re (f x))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>M. cmod (f x)) = cmod (infsetsum f M)", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>M. cmod (f x)) = (\\<Sum>\\<^sub>ax\\<in>M. Re (f x))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>M. cmod (f x)) = cmod (infsetsum f M)", "have \"\\<dots> = Re (infsetsum f M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>M. Re (f x)) = Re (infsetsum f M)", "using assms(1) infsetsum_Re"], ["proof (prove)\nusing this:\n  f abs_summable_on M\n  ?f abs_summable_on ?M \\<Longrightarrow>\n  (\\<Sum>\\<^sub>ax\\<in>?M. Re (?f x)) = Re (infsetsum ?f ?M)\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>M. Re (f x)) = Re (infsetsum f M)", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>M. Re (f x)) = Re (infsetsum f M)\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>M. cmod (f x)) = cmod (infsetsum f M)", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>M. Re (f x)) = Re (infsetsum f M)\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>M. cmod (f x)) = cmod (infsetsum f M)", "have \"\\<dots> = cmod (infsetsum f M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re (infsetsum f M) = cmod (infsetsum f M)", "using nn cmod_eq_Re less_eq_complex_def"], ["proof (prove)\nusing this:\n  0 \\<le> infsetsum f M\n  Im ?z = 0 \\<Longrightarrow> cmod ?z = \\<bar>Re ?z\\<bar>\n  ?x \\<le> ?y \\<equiv> Im ?x = Im ?y \\<and> Re ?x \\<le> Re ?y\n\ngoal (1 subgoal):\n 1. Re (infsetsum f M) = cmod (infsetsum f M)", "by auto"], ["proof (state)\nthis:\n  Re (infsetsum f M) = cmod (infsetsum f M)\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>M. cmod (f x)) = cmod (infsetsum f M)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>\\<^sub>ax\\<in>M. cmod (f x)) = cmod (infsetsum f M)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>\\<^sub>ax\\<in>M. cmod (f x)) = cmod (infsetsum f M)\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>M. cmod (f x)) = cmod (infsetsum f M)", "by assumption"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>M. cmod (f x)) = cmod (infsetsum f M)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infsetsum_Sigma:\n  fixes A :: \"'a set\" and B :: \"'a \\<Rightarrow> 'b set\"\n  assumes summable: \"f abs_summable_on (Sigma A B)\"\n  shows \"infsetsum f (Sigma A B) = infsetsum (\\<lambda>x. infsetsum (\\<lambda>y. f (x, y)) (B x)) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum f (Sigma A B) =\n    (\\<Sum>\\<^sub>ax\\<in>A. \\<Sum>\\<^sub>ay\\<in>B x. f (x, y))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. infsetsum f (Sigma A B) =\n    (\\<Sum>\\<^sub>ax\\<in>A. \\<Sum>\\<^sub>ay\\<in>B x. f (x, y))", "from summable"], ["proof (chain)\npicking this:\n  f abs_summable_on Sigma A B", "have countable_Sigma: \"countable {x \\<in> Sigma A B. 0 \\<noteq> f x}\""], ["proof (prove)\nusing this:\n  f abs_summable_on Sigma A B\n\ngoal (1 subgoal):\n 1. countable {x \\<in> Sigma A B. (0::'c) \\<noteq> f x}", "by (rule abs_summable_countable)"], ["proof (state)\nthis:\n  countable {x \\<in> Sigma A B. (0::'c) \\<noteq> f x}\n\ngoal (1 subgoal):\n 1. infsetsum f (Sigma A B) =\n    (\\<Sum>\\<^sub>ax\\<in>A. \\<Sum>\\<^sub>ay\\<in>B x. f (x, y))", "define A' where \"A' = fst ` {x \\<in> Sigma A B. 0 \\<noteq> f x}\""], ["proof (state)\nthis:\n  A' = fst ` {x \\<in> Sigma A B. (0::'c) \\<noteq> f x}\n\ngoal (1 subgoal):\n 1. infsetsum f (Sigma A B) =\n    (\\<Sum>\\<^sub>ax\\<in>A. \\<Sum>\\<^sub>ay\\<in>B x. f (x, y))", "have countA': \"countable A'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. countable A'", "using countable_Sigma"], ["proof (prove)\nusing this:\n  countable {x \\<in> Sigma A B. (0::'c) \\<noteq> f x}\n\ngoal (1 subgoal):\n 1. countable A'", "unfolding A'_def"], ["proof (prove)\nusing this:\n  countable {x \\<in> Sigma A B. (0::'c) \\<noteq> f x}\n\ngoal (1 subgoal):\n 1. countable (fst ` {x \\<in> Sigma A B. (0::'c) \\<noteq> f x})", "by auto"], ["proof (state)\nthis:\n  countable A'\n\ngoal (1 subgoal):\n 1. infsetsum f (Sigma A B) =\n    (\\<Sum>\\<^sub>ax\\<in>A. \\<Sum>\\<^sub>ay\\<in>B x. f (x, y))", "define B' where \"B' a = snd ` ({x \\<in> Sigma A B. 0 \\<noteq> f x} \\<inter> {(a,b) | b. True})\" for a"], ["proof (state)\nthis:\n  B' ?a =\n  snd `\n  ({x \\<in> Sigma A B. (0::'c) \\<noteq> f x} \\<inter> {(?a, b) |b. True})\n\ngoal (1 subgoal):\n 1. infsetsum f (Sigma A B) =\n    (\\<Sum>\\<^sub>ax\\<in>A. \\<Sum>\\<^sub>ay\\<in>B x. f (x, y))", "have countB': \"countable (B' a)\" for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. countable (B' a)", "using countable_Sigma"], ["proof (prove)\nusing this:\n  countable {x \\<in> Sigma A B. (0::'c) \\<noteq> f x}\n\ngoal (1 subgoal):\n 1. countable (B' a)", "unfolding B'_def"], ["proof (prove)\nusing this:\n  countable {x \\<in> Sigma A B. (0::'c) \\<noteq> f x}\n\ngoal (1 subgoal):\n 1. countable\n     (snd `\n      ({x \\<in> Sigma A B. (0::'c) \\<noteq> f x} \\<inter>\n       {(a, b) |b. True}))", "by auto"], ["proof (state)\nthis:\n  countable (B' ?a)\n\ngoal (1 subgoal):\n 1. infsetsum f (Sigma A B) =\n    (\\<Sum>\\<^sub>ax\\<in>A. \\<Sum>\\<^sub>ay\\<in>B x. f (x, y))", "have Sigma_eq: \"x \\<in> Sigma A B \\<longleftrightarrow> x \\<in> Sigma A' B'\" if \"f x \\<noteq> 0\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> Sigma A B) = (x \\<in> Sigma A' B')", "unfolding A'_def B'_def Sigma_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> (\\<Union>x\\<in>A. \\<Union>y\\<in>B x. {(x, y)})) =\n    (x \\<in> (\\<Union>x\\<in>fst `\n                            {x \\<in> \\<Union>x\\<in>A.\n  \\<Union>y\\<in>B x. {(x, y)}.\n                             (0::'c) \\<noteq> f x}.\n                 \\<Union>y\\<in>snd `\n                               ({x \\<in> \\<Union>x\\<in>A.\n      \\<Union>y\\<in>B x. {(x, y)}.\n                                 (0::'c) \\<noteq> f x} \\<inter>\n                                {(x, b) |b. True}).\n                    {(x, y)}))", "using that"], ["proof (prove)\nusing this:\n  f x \\<noteq> (0::'c)\n\ngoal (1 subgoal):\n 1. (x \\<in> (\\<Union>x\\<in>A. \\<Union>y\\<in>B x. {(x, y)})) =\n    (x \\<in> (\\<Union>x\\<in>fst `\n                            {x \\<in> \\<Union>x\\<in>A.\n  \\<Union>y\\<in>B x. {(x, y)}.\n                             (0::'c) \\<noteq> f x}.\n                 \\<Union>y\\<in>snd `\n                               ({x \\<in> \\<Union>x\\<in>A.\n      \\<Union>y\\<in>B x. {(x, y)}.\n                                 (0::'c) \\<noteq> f x} \\<inter>\n                                {(x, b) |b. True}).\n                    {(x, y)}))", "by force"], ["proof (state)\nthis:\n  f ?x \\<noteq> (0::'c) \\<Longrightarrow>\n  (?x \\<in> Sigma A B) = (?x \\<in> Sigma A' B')\n\ngoal (1 subgoal):\n 1. infsetsum f (Sigma A B) =\n    (\\<Sum>\\<^sub>ax\\<in>A. \\<Sum>\\<^sub>ay\\<in>B x. f (x, y))", "have Sigma'_smaller: \"Sigma A' B' \\<subseteq> Sigma A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sigma A' B' \\<subseteq> Sigma A B", "unfolding A'_def B'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (SIGMA a:fst ` {x \\<in> Sigma A B. (0::'c) \\<noteq> f x}.\n        snd `\n        ({x \\<in> Sigma A B. (0::'c) \\<noteq> f x} \\<inter>\n         {(a, b) |b. True}))\n    \\<subseteq> Sigma A B", "by auto"], ["proof (state)\nthis:\n  Sigma A' B' \\<subseteq> Sigma A B\n\ngoal (1 subgoal):\n 1. infsetsum f (Sigma A B) =\n    (\\<Sum>\\<^sub>ax\\<in>A. \\<Sum>\\<^sub>ay\\<in>B x. f (x, y))", "with summable"], ["proof (chain)\npicking this:\n  f abs_summable_on Sigma A B\n  Sigma A' B' \\<subseteq> Sigma A B", "have summable': \"f abs_summable_on Sigma A' B'\""], ["proof (prove)\nusing this:\n  f abs_summable_on Sigma A B\n  Sigma A' B' \\<subseteq> Sigma A B\n\ngoal (1 subgoal):\n 1. f abs_summable_on Sigma A' B'", "using abs_summable_on_subset"], ["proof (prove)\nusing this:\n  f abs_summable_on Sigma A B\n  Sigma A' B' \\<subseteq> Sigma A B\n  \\<lbrakk>?f abs_summable_on ?B; ?A \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> ?f abs_summable_on ?A\n\ngoal (1 subgoal):\n 1. f abs_summable_on Sigma A' B'", "by blast"], ["proof (state)\nthis:\n  f abs_summable_on Sigma A' B'\n\ngoal (1 subgoal):\n 1. infsetsum f (Sigma A B) =\n    (\\<Sum>\\<^sub>ax\\<in>A. \\<Sum>\\<^sub>ay\\<in>B x. f (x, y))", "have A'_smaller: \"A' \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A' \\<subseteq> A", "unfolding A'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst ` {x \\<in> Sigma A B. (0::'c) \\<noteq> f x} \\<subseteq> A", "by auto"], ["proof (state)\nthis:\n  A' \\<subseteq> A\n\ngoal (1 subgoal):\n 1. infsetsum f (Sigma A B) =\n    (\\<Sum>\\<^sub>ax\\<in>A. \\<Sum>\\<^sub>ay\\<in>B x. f (x, y))", "have B'_smaller: \"B' a \\<subseteq> B a\" for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. B' a \\<subseteq> B a", "unfolding B'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd `\n    ({x \\<in> Sigma A B. (0::'c) \\<noteq> f x} \\<inter> {(a, b) |b. True})\n    \\<subseteq> B a", "by auto"], ["proof (state)\nthis:\n  B' ?a \\<subseteq> B ?a\n\ngoal (1 subgoal):\n 1. infsetsum f (Sigma A B) =\n    (\\<Sum>\\<^sub>ax\\<in>A. \\<Sum>\\<^sub>ay\\<in>B x. f (x, y))", "have \"infsetsum f (Sigma A B) = infsetsum f (Sigma A' B')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum f (Sigma A B) = infsetsum f (Sigma A' B')", "proof (rule infsetsum_cong_neutral)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x. x \\<in> Sigma A B - Sigma A' B' \\<Longrightarrow> f x = (0::'c)\n 2. \\<And>x. x \\<in> Sigma A' B' - Sigma A B \\<Longrightarrow> f x = (0::'c)\n 3. \\<And>x.\n       x \\<in> Sigma A B \\<inter> Sigma A' B' \\<Longrightarrow> f x = f x", "show \"f x = 0\"\n      if \"x \\<in> Sigma A B - Sigma A' B'\"\n      for x :: \"'a \\<times> 'b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x = (0::'c)", "using that"], ["proof (prove)\nusing this:\n  x \\<in> Sigma A B - Sigma A' B'\n\ngoal (1 subgoal):\n 1. f x = (0::'c)", "by (meson DiffD1 DiffD2 Sigma_eq)"], ["proof (state)\nthis:\n  ?x \\<in> Sigma A B - Sigma A' B' \\<Longrightarrow> f ?x = (0::'c)\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> Sigma A' B' - Sigma A B \\<Longrightarrow> f x = (0::'c)\n 2. \\<And>x.\n       x \\<in> Sigma A B \\<inter> Sigma A' B' \\<Longrightarrow> f x = f x", "show \"f x = 0\"\n      if \"x \\<in> Sigma A' B' - Sigma A B\"\n      for x :: \"'a \\<times> 'b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x = (0::'c)", "using that Sigma'_smaller"], ["proof (prove)\nusing this:\n  x \\<in> Sigma A' B' - Sigma A B\n  Sigma A' B' \\<subseteq> Sigma A B\n\ngoal (1 subgoal):\n 1. f x = (0::'c)", "by auto"], ["proof (state)\nthis:\n  ?x \\<in> Sigma A' B' - Sigma A B \\<Longrightarrow> f ?x = (0::'c)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Sigma A B \\<inter> Sigma A' B' \\<Longrightarrow> f x = f x", "show \"f x = f x\"\n      if \"x \\<in> Sigma A B \\<inter> Sigma A' B'\"\n      for x :: \"'a \\<times> 'b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x = f x", "using that"], ["proof (prove)\nusing this:\n  x \\<in> Sigma A B \\<inter> Sigma A' B'\n\ngoal (1 subgoal):\n 1. f x = f x", "by simp"], ["proof (state)\nthis:\n  ?x \\<in> Sigma A B \\<inter> Sigma A' B' \\<Longrightarrow> f ?x = f ?x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  infsetsum f (Sigma A B) = infsetsum f (Sigma A' B')\n\ngoal (1 subgoal):\n 1. infsetsum f (Sigma A B) =\n    (\\<Sum>\\<^sub>ax\\<in>A. \\<Sum>\\<^sub>ay\\<in>B x. f (x, y))", "also"], ["proof (state)\nthis:\n  infsetsum f (Sigma A B) = infsetsum f (Sigma A' B')\n\ngoal (1 subgoal):\n 1. infsetsum f (Sigma A B) =\n    (\\<Sum>\\<^sub>ax\\<in>A. \\<Sum>\\<^sub>ay\\<in>B x. f (x, y))", "from countA' countB' summable'"], ["proof (chain)\npicking this:\n  countable A'\n  countable (B' ?a)\n  f abs_summable_on Sigma A' B'", "have \"\\<dots> = (\\<Sum>\\<^sub>aa\\<in>A'. \\<Sum>\\<^sub>ab\\<in>B' a. f (a, b))\""], ["proof (prove)\nusing this:\n  countable A'\n  countable (B' ?a)\n  f abs_summable_on Sigma A' B'\n\ngoal (1 subgoal):\n 1. infsetsum f (Sigma A' B') =\n    (\\<Sum>\\<^sub>aa\\<in>A'. \\<Sum>\\<^sub>ab\\<in>B' a. f (a, b))", "by (rule infsetsum_Sigma)"], ["proof (state)\nthis:\n  infsetsum f (Sigma A' B') =\n  (\\<Sum>\\<^sub>aa\\<in>A'. \\<Sum>\\<^sub>ab\\<in>B' a. f (a, b))\n\ngoal (1 subgoal):\n 1. infsetsum f (Sigma A B) =\n    (\\<Sum>\\<^sub>ax\\<in>A. \\<Sum>\\<^sub>ay\\<in>B x. f (x, y))", "also"], ["proof (state)\nthis:\n  infsetsum f (Sigma A' B') =\n  (\\<Sum>\\<^sub>aa\\<in>A'. \\<Sum>\\<^sub>ab\\<in>B' a. f (a, b))\n\ngoal (1 subgoal):\n 1. infsetsum f (Sigma A B) =\n    (\\<Sum>\\<^sub>ax\\<in>A. \\<Sum>\\<^sub>ay\\<in>B x. f (x, y))", "have \"\\<dots> = (\\<Sum>\\<^sub>aa\\<in>A. \\<Sum>\\<^sub>ab\\<in>B' a. f (a, b))\" (is \"_ = (\\<Sum>\\<^sub>aa\\<in>A. ?inner a)\" is \"_ = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>aa\\<in>A'. \\<Sum>\\<^sub>ab\\<in>B' a. f (a, b)) =\n    (\\<Sum>\\<^sub>aa\\<in>A. \\<Sum>\\<^sub>ab\\<in>B' a. f (a, b))", "proof (rule infsetsum_cong_neutral)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> A' - A \\<Longrightarrow>\n       (\\<Sum>\\<^sub>ab\\<in>B' x. f (x, b)) = (0::'c)\n 2. \\<And>x.\n       x \\<in> A - A' \\<Longrightarrow>\n       (\\<Sum>\\<^sub>ab\\<in>B' x. f (x, b)) = (0::'c)\n 3. \\<And>x.\n       x \\<in> A' \\<inter> A \\<Longrightarrow>\n       (\\<Sum>\\<^sub>ab\\<in>B' x. f (x, b)) =\n       (\\<Sum>\\<^sub>ab\\<in>B' x. f (x, b))", "show \"(\\<Sum>\\<^sub>ab\\<in>B' x. f (x, b)) = 0\"\n      if \"x \\<in> A' - A\"\n      for x :: 'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ab\\<in>B' x. f (x, b)) = (0::'c)", "using that A'_smaller"], ["proof (prove)\nusing this:\n  x \\<in> A' - A\n  A' \\<subseteq> A\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ab\\<in>B' x. f (x, b)) = (0::'c)", "by blast"], ["proof (state)\nthis:\n  ?x \\<in> A' - A \\<Longrightarrow>\n  (\\<Sum>\\<^sub>ab\\<in>B' ?x. f (?x, b)) = (0::'c)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> A - A' \\<Longrightarrow>\n       (\\<Sum>\\<^sub>ab\\<in>B' x. f (x, b)) = (0::'c)\n 2. \\<And>x.\n       x \\<in> A' \\<inter> A \\<Longrightarrow>\n       (\\<Sum>\\<^sub>ab\\<in>B' x. f (x, b)) =\n       (\\<Sum>\\<^sub>ab\\<in>B' x. f (x, b))", "show \"(\\<Sum>\\<^sub>ab\\<in>B' x. f (x, b)) = 0\"\n      if \"x \\<in> A - A'\"\n      for x :: 'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ab\\<in>B' x. f (x, b)) = (0::'c)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ab\\<in>B' x. f (x, b)) = (0::'c)", "have f1: \"x \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> A", "by (metis DiffD1 that)"], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ab\\<in>B' x. f (x, b)) = (0::'c)", "obtain bb :: \"('b \\<Rightarrow> 'c) \\<Rightarrow> 'b set \\<Rightarrow> 'b\" where\n        \"\\<forall>x0 x1. (\\<exists>v2. v2 \\<in> x1 \\<and> x0 v2 \\<noteq> 0) = (bb x0 x1 \\<in> x1 \\<and> x0 (bb x0 x1) \\<noteq> 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>bb.\n        \\<forall>x0 x1.\n           (\\<exists>v2. v2 \\<in> x1 \\<and> x0 v2 \\<noteq> (0::'c)) =\n           (bb x0 x1 \\<in> x1 \\<and>\n            x0 (bb x0 x1) \\<noteq> (0::'c)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by moura"], ["proof (state)\nthis:\n  \\<forall>x0 x1.\n     (\\<exists>v2. v2 \\<in> x1 \\<and> x0 v2 \\<noteq> (0::'c)) =\n     (bb x0 x1 \\<in> x1 \\<and> x0 (bb x0 x1) \\<noteq> (0::'c))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ab\\<in>B' x. f (x, b)) = (0::'c)", "hence f2: \"\\<forall>B f. bb f B \\<in> B \\<and> f (bb f B) \\<noteq> 0 \\<or> infsetsum f B = 0\""], ["proof (prove)\nusing this:\n  \\<forall>x0 x1.\n     (\\<exists>v2. v2 \\<in> x1 \\<and> x0 v2 \\<noteq> (0::'c)) =\n     (bb x0 x1 \\<in> x1 \\<and> x0 (bb x0 x1) \\<noteq> (0::'c))\n\ngoal (1 subgoal):\n 1. \\<forall>B f.\n       bb f B \\<in> B \\<and> f (bb f B) \\<noteq> (0::'c) \\<or>\n       infsetsum f B = (0::'c)", "by (meson infsetsum_all_0)"], ["proof (state)\nthis:\n  \\<forall>B f.\n     bb f B \\<in> B \\<and> f (bb f B) \\<noteq> (0::'c) \\<or>\n     infsetsum f B = (0::'c)\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ab\\<in>B' x. f (x, b)) = (0::'c)", "have \"(x, bb (\\<lambda>b. f (x, b)) (B' x)) \\<notin> Sigma A' B'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, bb (\\<lambda>b. f (x, b)) (B' x)) \\<notin> Sigma A' B'", "by (meson DiffD2 SigmaE2 that)"], ["proof (state)\nthis:\n  (x, bb (\\<lambda>b. f (x, b)) (B' x)) \\<notin> Sigma A' B'\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ab\\<in>B' x. f (x, b)) = (0::'c)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (x, bb (\\<lambda>b. f (x, b)) (B' x)) \\<notin> Sigma A' B'\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ab\\<in>B' x. f (x, b)) = (0::'c)", "using f2 f1"], ["proof (prove)\nusing this:\n  (x, bb (\\<lambda>b. f (x, b)) (B' x)) \\<notin> Sigma A' B'\n  \\<forall>B f.\n     bb f B \\<in> B \\<and> f (bb f B) \\<noteq> (0::'c) \\<or>\n     infsetsum f B = (0::'c)\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ab\\<in>B' x. f (x, b)) = (0::'c)", "by (meson B'_smaller SigmaI Sigma_eq in_mono)"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ab\\<in>B' x. f (x, b)) = (0::'c)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x \\<in> A - A' \\<Longrightarrow>\n  (\\<Sum>\\<^sub>ab\\<in>B' ?x. f (?x, b)) = (0::'c)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A' \\<inter> A \\<Longrightarrow>\n       (\\<Sum>\\<^sub>ab\\<in>B' x. f (x, b)) =\n       (\\<Sum>\\<^sub>ab\\<in>B' x. f (x, b))", "show \"(\\<Sum>\\<^sub>ab\\<in>B' x. f (x, b)) = (\\<Sum>\\<^sub>ab\\<in>B' x. f (x, b))\"\n      if \"x \\<in> A' \\<inter> A\"\n      for x :: 'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ab\\<in>B' x. f (x, b)) =\n    (\\<Sum>\\<^sub>ab\\<in>B' x. f (x, b))", "using that"], ["proof (prove)\nusing this:\n  x \\<in> A' \\<inter> A\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ab\\<in>B' x. f (x, b)) =\n    (\\<Sum>\\<^sub>ab\\<in>B' x. f (x, b))", "by simp"], ["proof (state)\nthis:\n  ?x \\<in> A' \\<inter> A \\<Longrightarrow>\n  (\\<Sum>\\<^sub>ab\\<in>B' ?x. f (?x, b)) =\n  (\\<Sum>\\<^sub>ab\\<in>B' ?x. f (?x, b))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>aa\\<in>A'. \\<Sum>\\<^sub>ab\\<in>B' a. f (a, b)) =\n  (\\<Sum>\\<^sub>aa\\<in>A. \\<Sum>\\<^sub>ab\\<in>B' a. f (a, b))\n\ngoal (1 subgoal):\n 1. infsetsum f (Sigma A B) =\n    (\\<Sum>\\<^sub>ax\\<in>A. \\<Sum>\\<^sub>ay\\<in>B x. f (x, y))", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>aa\\<in>A'. \\<Sum>\\<^sub>ab\\<in>B' a. f (a, b)) =\n  (\\<Sum>\\<^sub>aa\\<in>A. \\<Sum>\\<^sub>ab\\<in>B' a. f (a, b))\n\ngoal (1 subgoal):\n 1. infsetsum f (Sigma A B) =\n    (\\<Sum>\\<^sub>ax\\<in>A. \\<Sum>\\<^sub>ay\\<in>B x. f (x, y))", "have \"?inner a = (\\<Sum>\\<^sub>ab\\<in>B a. f (a, b))\" if \"a\\<in>A\" for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ab\\<in>B' a. f (a, b)) =\n    (\\<Sum>\\<^sub>ab\\<in>B a. f (a, b))", "proof (rule infsetsum_cong_neutral)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x. x \\<in> B' a - B a \\<Longrightarrow> f (a, x) = (0::'c)\n 2. \\<And>x. x \\<in> B a - B' a \\<Longrightarrow> f (a, x) = (0::'c)\n 3. \\<And>x. x \\<in> B' a \\<inter> B a \\<Longrightarrow> f (a, x) = f (a, x)", "show \"f (a, x) = 0\"\n      if \"x \\<in> B' a - B a\"\n      for x :: 'b"], ["proof (prove)\ngoal (1 subgoal):\n 1. f (a, x) = (0::'c)", "using that B'_smaller"], ["proof (prove)\nusing this:\n  x \\<in> B' a - B a\n  B' ?a \\<subseteq> B ?a\n\ngoal (1 subgoal):\n 1. f (a, x) = (0::'c)", "by blast"], ["proof (state)\nthis:\n  ?x \\<in> B' a - B a \\<Longrightarrow> f (a, ?x) = (0::'c)\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> B a - B' a \\<Longrightarrow> f (a, x) = (0::'c)\n 2. \\<And>x. x \\<in> B' a \\<inter> B a \\<Longrightarrow> f (a, x) = f (a, x)", "show \"f (a, x) = 0\"\n      if \"x \\<in> B a - B' a\"\n      for x :: 'b"], ["proof (prove)\ngoal (1 subgoal):\n 1. f (a, x) = (0::'c)", "using that Sigma_eq \\<open>a \\<in> A\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> B a - B' a\n  f ?x \\<noteq> (0::'c) \\<Longrightarrow>\n  (?x \\<in> Sigma A B) = (?x \\<in> Sigma A' B')\n  a \\<in> A\n\ngoal (1 subgoal):\n 1. f (a, x) = (0::'c)", "by fastforce"], ["proof (state)\nthis:\n  ?x \\<in> B a - B' a \\<Longrightarrow> f (a, ?x) = (0::'c)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B' a \\<inter> B a \\<Longrightarrow> f (a, x) = f (a, x)", "show \"f (a, x) = f (a, x)\"\n      if \"x \\<in> B' a \\<inter> B a\"\n      for x :: 'b"], ["proof (prove)\ngoal (1 subgoal):\n 1. f (a, x) = f (a, x)", "using that"], ["proof (prove)\nusing this:\n  x \\<in> B' a \\<inter> B a\n\ngoal (1 subgoal):\n 1. f (a, x) = f (a, x)", "by simp"], ["proof (state)\nthis:\n  ?x \\<in> B' a \\<inter> B a \\<Longrightarrow> f (a, ?x) = f (a, ?x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?a \\<in> A \\<Longrightarrow>\n  (\\<Sum>\\<^sub>ab\\<in>B' ?a. f (?a, b)) =\n  (\\<Sum>\\<^sub>ab\\<in>B ?a. f (?a, b))\n\ngoal (1 subgoal):\n 1. infsetsum f (Sigma A B) =\n    (\\<Sum>\\<^sub>ax\\<in>A. \\<Sum>\\<^sub>ay\\<in>B x. f (x, y))", "hence \"?rhs = (\\<Sum>\\<^sub>aa\\<in>A. \\<Sum>\\<^sub>ab\\<in>B a. f (a, b))\""], ["proof (prove)\nusing this:\n  ?a \\<in> A \\<Longrightarrow>\n  (\\<Sum>\\<^sub>ab\\<in>B' ?a. f (?a, b)) =\n  (\\<Sum>\\<^sub>ab\\<in>B ?a. f (?a, b))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>aa\\<in>A. \\<Sum>\\<^sub>ab\\<in>B' a. f (a, b)) =\n    (\\<Sum>\\<^sub>aa\\<in>A. \\<Sum>\\<^sub>ab\\<in>B a. f (a, b))", "by (rule infsetsum_cong, auto)"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>aa\\<in>A. \\<Sum>\\<^sub>ab\\<in>B' a. f (a, b)) =\n  (\\<Sum>\\<^sub>aa\\<in>A. \\<Sum>\\<^sub>ab\\<in>B a. f (a, b))\n\ngoal (1 subgoal):\n 1. infsetsum f (Sigma A B) =\n    (\\<Sum>\\<^sub>ax\\<in>A. \\<Sum>\\<^sub>ay\\<in>B x. f (x, y))", "finally"], ["proof (chain)\npicking this:\n  infsetsum f (Sigma A B) =\n  (\\<Sum>\\<^sub>aa\\<in>A. \\<Sum>\\<^sub>ab\\<in>B a. f (a, b))", "show ?thesis"], ["proof (prove)\nusing this:\n  infsetsum f (Sigma A B) =\n  (\\<Sum>\\<^sub>aa\\<in>A. \\<Sum>\\<^sub>ab\\<in>B a. f (a, b))\n\ngoal (1 subgoal):\n 1. infsetsum f (Sigma A B) =\n    (\\<Sum>\\<^sub>ax\\<in>A. \\<Sum>\\<^sub>ay\\<in>B x. f (x, y))", "by simp"], ["proof (state)\nthis:\n  infsetsum f (Sigma A B) =\n  (\\<Sum>\\<^sub>ax\\<in>A. \\<Sum>\\<^sub>ay\\<in>B x. f (x, y))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infsetsum_Sigma':\n  fixes A :: \"'a set\" and B :: \"'a \\<Rightarrow> 'b set\"\n  assumes summable: \"(\\<lambda>(x,y). f x y) abs_summable_on (Sigma A B)\"\n  shows   \"infsetsum (\\<lambda>x. infsetsum (\\<lambda>y. f x y) (B x)) A = infsetsum (\\<lambda>(x,y). f x y) (Sigma A B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A. infsetsum (f x) (B x)) =\n    (\\<Sum>\\<^sub>a(x, y)\\<in>Sigma A B. f x y)", "using assms"], ["proof (prove)\nusing this:\n  (\\<lambda>(x, y). f x y) abs_summable_on Sigma A B\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A. infsetsum (f x) (B x)) =\n    (\\<Sum>\\<^sub>a(x, y)\\<in>Sigma A B. f x y)", "by (subst infsetsum_Sigma) auto"], ["", "lemma infsetsum_Times:\n  fixes A :: \"'a set\" and B :: \"'b set\"\n  assumes summable: \"f abs_summable_on (A \\<times> B)\"\n  shows   \"infsetsum f (A \\<times> B) = infsetsum (\\<lambda>x. infsetsum (\\<lambda>y. f (x, y)) B) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum f (A \\<times> B) =\n    (\\<Sum>\\<^sub>ax\\<in>A. \\<Sum>\\<^sub>ay\\<in>B. f (x, y))", "using assms"], ["proof (prove)\nusing this:\n  f abs_summable_on A \\<times> B\n\ngoal (1 subgoal):\n 1. infsetsum f (A \\<times> B) =\n    (\\<Sum>\\<^sub>ax\\<in>A. \\<Sum>\\<^sub>ay\\<in>B. f (x, y))", "by (subst infsetsum_Sigma) auto"], ["", "lemma infsetsum_Times':\n  fixes A :: \"'a set\" and B :: \"'b set\"\n  fixes f :: \"'a \\<Rightarrow> 'b \\<Rightarrow> 'c :: {banach, second_countable_topology}\"\n  assumes summable: \"(\\<lambda>(x,y). f x y) abs_summable_on (A \\<times> B)\"\n  shows   \"infsetsum (\\<lambda>x. infsetsum (\\<lambda>y. f x y) B) A = infsetsum (\\<lambda>(x,y). f x y) (A \\<times> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A. infsetsum (f x) B) =\n    (\\<Sum>\\<^sub>a(x, y)\\<in>A \\<times> B. f x y)", "using assms"], ["proof (prove)\nusing this:\n  (\\<lambda>(x, y). f x y) abs_summable_on A \\<times> B\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A. infsetsum (f x) B) =\n    (\\<Sum>\\<^sub>a(x, y)\\<in>A \\<times> B. f x y)", "by (subst infsetsum_Times) auto"], ["", "lemma infsetsum_swap:\n  fixes A :: \"'a set\" and B :: \"'b set\"\n  fixes f :: \"'a \\<Rightarrow> 'b \\<Rightarrow> 'c :: {banach, second_countable_topology}\"\n  assumes summable: \"(\\<lambda>(x,y). f x y) abs_summable_on A \\<times> B\"\n  shows \"infsetsum (\\<lambda>x. infsetsum (\\<lambda>y. f x y) B) A = infsetsum (\\<lambda>y. infsetsum (\\<lambda>x. f x y) A) B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A. infsetsum (f x) B) =\n    (\\<Sum>\\<^sub>ay\\<in>B. \\<Sum>\\<^sub>ax\\<in>A. f x y)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A. infsetsum (f x) B) =\n    (\\<Sum>\\<^sub>ay\\<in>B. \\<Sum>\\<^sub>ax\\<in>A. f x y)", "from summable"], ["proof (chain)\npicking this:\n  (\\<lambda>(x, y). f x y) abs_summable_on A \\<times> B", "have summable': \"(\\<lambda>(x,y). f y x) abs_summable_on B \\<times> A\""], ["proof (prove)\nusing this:\n  (\\<lambda>(x, y). f x y) abs_summable_on A \\<times> B\n\ngoal (1 subgoal):\n 1. (\\<lambda>(x, y). f y x) abs_summable_on B \\<times> A", "by (subst abs_summable_on_Times_swap) auto"], ["proof (state)\nthis:\n  (\\<lambda>(x, y). f y x) abs_summable_on B \\<times> A\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A. infsetsum (f x) B) =\n    (\\<Sum>\\<^sub>ay\\<in>B. \\<Sum>\\<^sub>ax\\<in>A. f x y)", "have bij: \"bij_betw (\\<lambda>(x, y). (y, x)) (B \\<times> A) (A \\<times> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (\\<lambda>(x, y). (y, x)) (B \\<times> A) (A \\<times> B)", "by (auto simp: bij_betw_def inj_on_def)"], ["proof (state)\nthis:\n  bij_betw (\\<lambda>(x, y). (y, x)) (B \\<times> A) (A \\<times> B)\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A. infsetsum (f x) B) =\n    (\\<Sum>\\<^sub>ay\\<in>B. \\<Sum>\\<^sub>ax\\<in>A. f x y)", "have \"infsetsum (\\<lambda>x. infsetsum (\\<lambda>y. f x y) B) A = infsetsum (\\<lambda>(x,y). f x y) (A \\<times> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A. infsetsum (f x) B) =\n    (\\<Sum>\\<^sub>a(x, y)\\<in>A \\<times> B. f x y)", "using summable"], ["proof (prove)\nusing this:\n  (\\<lambda>(x, y). f x y) abs_summable_on A \\<times> B\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A. infsetsum (f x) B) =\n    (\\<Sum>\\<^sub>a(x, y)\\<in>A \\<times> B. f x y)", "by (subst infsetsum_Times) auto"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>A. infsetsum (f x) B) =\n  (\\<Sum>\\<^sub>a(x, y)\\<in>A \\<times> B. f x y)\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A. infsetsum (f x) B) =\n    (\\<Sum>\\<^sub>ay\\<in>B. \\<Sum>\\<^sub>ax\\<in>A. f x y)", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>A. infsetsum (f x) B) =\n  (\\<Sum>\\<^sub>a(x, y)\\<in>A \\<times> B. f x y)\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A. infsetsum (f x) B) =\n    (\\<Sum>\\<^sub>ay\\<in>B. \\<Sum>\\<^sub>ax\\<in>A. f x y)", "have \"\\<dots> = infsetsum (\\<lambda>(x,y). f y x) (B \\<times> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>a(x, y)\\<in>A \\<times> B. f x y) =\n    (\\<Sum>\\<^sub>a(x, y)\\<in>B \\<times> A. f y x)", "by (subst infsetsum_reindex_bij_betw[OF bij, of \"\\<lambda>(x,y). f x y\", symmetric])\n      (simp_all add: case_prod_unfold)"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>a(x, y)\\<in>A \\<times> B. f x y) =\n  (\\<Sum>\\<^sub>a(x, y)\\<in>B \\<times> A. f y x)\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A. infsetsum (f x) B) =\n    (\\<Sum>\\<^sub>ay\\<in>B. \\<Sum>\\<^sub>ax\\<in>A. f x y)", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>a(x, y)\\<in>A \\<times> B. f x y) =\n  (\\<Sum>\\<^sub>a(x, y)\\<in>B \\<times> A. f y x)\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A. infsetsum (f x) B) =\n    (\\<Sum>\\<^sub>ay\\<in>B. \\<Sum>\\<^sub>ax\\<in>A. f x y)", "have \"\\<dots> = infsetsum (\\<lambda>y. infsetsum (\\<lambda>x. f x y) A) B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>a(x, y)\\<in>B \\<times> A. f y x) =\n    (\\<Sum>\\<^sub>ay\\<in>B. \\<Sum>\\<^sub>ax\\<in>A. f x y)", "using summable'"], ["proof (prove)\nusing this:\n  (\\<lambda>(x, y). f y x) abs_summable_on B \\<times> A\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>a(x, y)\\<in>B \\<times> A. f y x) =\n    (\\<Sum>\\<^sub>ay\\<in>B. \\<Sum>\\<^sub>ax\\<in>A. f x y)", "by (subst infsetsum_Times) auto"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>a(x, y)\\<in>B \\<times> A. f y x) =\n  (\\<Sum>\\<^sub>ay\\<in>B. \\<Sum>\\<^sub>ax\\<in>A. f x y)\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A. infsetsum (f x) B) =\n    (\\<Sum>\\<^sub>ay\\<in>B. \\<Sum>\\<^sub>ax\\<in>A. f x y)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>\\<^sub>ax\\<in>A. infsetsum (f x) B) =\n  (\\<Sum>\\<^sub>ay\\<in>B. \\<Sum>\\<^sub>ax\\<in>A. f x y)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>\\<^sub>ax\\<in>A. infsetsum (f x) B) =\n  (\\<Sum>\\<^sub>ay\\<in>B. \\<Sum>\\<^sub>ax\\<in>A. f x y)\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A. infsetsum (f x) B) =\n    (\\<Sum>\\<^sub>ay\\<in>B. \\<Sum>\\<^sub>ax\\<in>A. f x y)", "."], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>A. infsetsum (f x) B) =\n  (\\<Sum>\\<^sub>ay\\<in>B. \\<Sum>\\<^sub>ax\\<in>A. f x y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma abs_summable_infsetsum'_converges:\n  fixes f :: \"'a\\<Rightarrow>'b::{second_countable_topology,banach}\" and A :: \"'a set\"\n  assumes \"f abs_summable_on A\"\n  shows \"infsetsum'_converges f A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum'_converges f A", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. infsetsum'_converges f A", "define F where \"F = filtermap (sum f) (finite_subsets_at_top A)\""], ["proof (state)\nthis:\n  F = filtermap (sum f) (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f A", "have F_not_bot: \"F \\<noteq> bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<noteq> bot", "unfolding F_def filtermap_bot_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_subsets_at_top A \\<noteq> bot", "by simp"], ["proof (state)\nthis:\n  F \\<noteq> bot\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f A", "have \"\\<exists>P. eventually P (finite_subsets_at_top A) \\<and> (\\<forall>x y. P x \\<and> P y\n         \\<longrightarrow> dist (sum f x) (sum f y) < e)\"\n    if \"0 < e\"\n    for e :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>P.\n       eventually P (finite_subsets_at_top A) \\<and>\n       (\\<forall>x y.\n           P x \\<and> P y \\<longrightarrow> dist (sum f x) (sum f y) < e)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>P.\n       eventually P (finite_subsets_at_top A) \\<and>\n       (\\<forall>x y.\n           P x \\<and> P y \\<longrightarrow> dist (sum f x) (sum f y) < e)", "have is_SUP: \"ereal (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) = (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (\\<Sum>x\\<in>F. norm (f x)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ereal (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) =\n    (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n        ereal (\\<Sum>x\\<in>F. norm (f x)))", "proof (rule infsetsum_nonneg_is_SUPREMUM_ereal)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x. norm (f x)) abs_summable_on A\n 2. \\<And>x. x \\<in> A \\<Longrightarrow> 0 \\<le> norm (f x)", "show \"(\\<lambda>x. norm (f x)) abs_summable_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. norm (f x)) abs_summable_on A", "by (simp add: assms)"], ["proof (state)\nthis:\n  (\\<lambda>x. norm (f x)) abs_summable_on A\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> 0 \\<le> norm (f x)", "show \"0 \\<le> norm (f x)\"\n        if \"x \\<in> A\"\n        for x :: 'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> norm (f x)", "using that"], ["proof (prove)\nusing this:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. 0 \\<le> norm (f x)", "by simp"], ["proof (state)\nthis:\n  ?x \\<in> A \\<Longrightarrow> 0 \\<le> norm (f ?x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ereal (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) =\n  (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n      ereal (\\<Sum>x\\<in>F. norm (f x)))\n\ngoal (1 subgoal):\n 1. \\<exists>P.\n       eventually P (finite_subsets_at_top A) \\<and>\n       (\\<forall>x y.\n           P x \\<and> P y \\<longrightarrow> dist (sum f x) (sum f y) < e)", "have \"\\<exists>F0\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n       (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (\\<Sum>x\\<in>F. norm (f x))) - ereal e\n       < ereal (\\<Sum>x\\<in>F0. norm (f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>F0\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n       (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n           ereal (\\<Sum>x\\<in>F. norm (f x))) -\n       ereal e\n       < ereal (\\<Sum>x\\<in>F0. norm (f x))", "unfolding is_SUP Bex_def[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>F0\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n       (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n           ereal (\\<Sum>x\\<in>F. norm (f x))) -\n       ereal e\n       < ereal (\\<Sum>x\\<in>F0. norm (f x))", "by (smt less_SUP_iff[symmetric] \\<open>0 < e\\<close> ereal_diff_le_self ereal_less_eq(5) ereal_minus(1) \n          is_SUP less_eq_ereal_def)"], ["proof (state)\nthis:\n  \\<exists>F0\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n     (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n         ereal (\\<Sum>x\\<in>F. norm (f x))) -\n     ereal e\n     < ereal (\\<Sum>x\\<in>F0. norm (f x))\n\ngoal (1 subgoal):\n 1. \\<exists>P.\n       eventually P (finite_subsets_at_top A) \\<and>\n       (\\<forall>x y.\n           P x \\<and> P y \\<longrightarrow> dist (sum f x) (sum f y) < e)", "then"], ["proof (chain)\npicking this:\n  \\<exists>F0\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n     (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n         ereal (\\<Sum>x\\<in>F. norm (f x))) -\n     ereal e\n     < ereal (\\<Sum>x\\<in>F0. norm (f x))", "obtain F0 where \"F0\\<in>{F. finite F \\<and> F \\<subseteq> A}\" and \"ereal (\\<Sum>x\\<in>F0. norm (f x)) > ereal (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) - ereal e\""], ["proof (prove)\nusing this:\n  \\<exists>F0\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n     (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n         ereal (\\<Sum>x\\<in>F. norm (f x))) -\n     ereal e\n     < ereal (\\<Sum>x\\<in>F0. norm (f x))\n\ngoal (1 subgoal):\n 1. (\\<And>F0.\n        \\<lbrakk>F0 \\<in> {F. finite F \\<and> F \\<subseteq> A};\n         ereal (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) - ereal e\n         < ereal (\\<Sum>x\\<in>F0. norm (f x))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp add: atomize_elim is_SUP)"], ["proof (state)\nthis:\n  F0 \\<in> {F. finite F \\<and> F \\<subseteq> A}\n  ereal (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) - ereal e\n  < ereal (\\<Sum>x\\<in>F0. norm (f x))\n\ngoal (1 subgoal):\n 1. \\<exists>P.\n       eventually P (finite_subsets_at_top A) \\<and>\n       (\\<forall>x y.\n           P x \\<and> P y \\<longrightarrow> dist (sum f x) (sum f y) < e)", "hence [simp]: \"finite F0\" and [simp]: \"F0 \\<subseteq> A\" \n      and sum_diff: \"sum (\\<lambda>x. norm (f x)) F0 > infsetsum (\\<lambda>x. norm (f x)) A - e\""], ["proof (prove)\nusing this:\n  F0 \\<in> {F. finite F \\<and> F \\<subseteq> A}\n  ereal (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) - ereal e\n  < ereal (\\<Sum>x\\<in>F0. norm (f x))\n\ngoal (1 subgoal):\n 1. finite F0 &&&\n    F0 \\<subseteq> A &&&\n    (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) - e < (\\<Sum>x\\<in>F0. norm (f x))", "by auto"], ["proof (state)\nthis:\n  finite F0\n  F0 \\<subseteq> A\n  (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) - e < (\\<Sum>x\\<in>F0. norm (f x))\n\ngoal (1 subgoal):\n 1. \\<exists>P.\n       eventually P (finite_subsets_at_top A) \\<and>\n       (\\<forall>x y.\n           P x \\<and> P y \\<longrightarrow> dist (sum f x) (sum f y) < e)", "define P where \"P F \\<longleftrightarrow> finite F \\<and> F \\<supseteq> F0 \\<and> F \\<subseteq> A\" for F"], ["proof (state)\nthis:\n  P ?F = (finite ?F \\<and> F0 \\<subseteq> ?F \\<and> ?F \\<subseteq> A)\n\ngoal (1 subgoal):\n 1. \\<exists>P.\n       eventually P (finite_subsets_at_top A) \\<and>\n       (\\<forall>x y.\n           P x \\<and> P y \\<longrightarrow> dist (sum f x) (sum f y) < e)", "have \"dist (sum f F1) (sum f F2) < e\" if \"P F1\" and \"P F2\" for F1 F2"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (sum f F1) (sum f F2) < e", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist (sum f F1) (sum f F2) < e", "from that(1)"], ["proof (chain)\npicking this:\n  P F1", "have \"finite F1\" and \"F1 \\<supseteq> F0\" and \"F1 \\<subseteq> A\""], ["proof (prove)\nusing this:\n  P F1\n\ngoal (1 subgoal):\n 1. finite F1 &&& F0 \\<subseteq> F1 &&& F1 \\<subseteq> A", "unfolding P_def"], ["proof (prove)\nusing this:\n  finite F1 \\<and> F0 \\<subseteq> F1 \\<and> F1 \\<subseteq> A\n\ngoal (1 subgoal):\n 1. finite F1 &&& F0 \\<subseteq> F1 &&& F1 \\<subseteq> A", "by auto"], ["proof (state)\nthis:\n  finite F1\n  F0 \\<subseteq> F1\n  F1 \\<subseteq> A\n\ngoal (1 subgoal):\n 1. dist (sum f F1) (sum f F2) < e", "from that(2)"], ["proof (chain)\npicking this:\n  P F2", "have \"finite F2\" and \"F2 \\<supseteq> F0\" and \"F2 \\<subseteq> A\""], ["proof (prove)\nusing this:\n  P F2\n\ngoal (1 subgoal):\n 1. finite F2 &&& F0 \\<subseteq> F2 &&& F2 \\<subseteq> A", "unfolding P_def"], ["proof (prove)\nusing this:\n  finite F2 \\<and> F0 \\<subseteq> F2 \\<and> F2 \\<subseteq> A\n\ngoal (1 subgoal):\n 1. finite F2 &&& F0 \\<subseteq> F2 &&& F2 \\<subseteq> A", "by auto"], ["proof (state)\nthis:\n  finite F2\n  F0 \\<subseteq> F2\n  F2 \\<subseteq> A\n\ngoal (1 subgoal):\n 1. dist (sum f F1) (sum f F2) < e", "have \"dist (sum f F1) (sum f F2) = norm (sum f (F1-F2) - sum f (F2-F1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (sum f F1) (sum f F2) = norm (sum f (F1 - F2) - sum f (F2 - F1))", "unfolding dist_norm"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (sum f F1 - sum f F2) = norm (sum f (F1 - F2) - sum f (F2 - F1))", "by (smt \\<open>finite F1\\<close> \\<open>finite F2\\<close> add_diff_cancel_left' add_diff_cancel_right' algebra_simps sum.Int_Diff sum.union_diff2 sum.union_inter)"], ["proof (state)\nthis:\n  dist (sum f F1) (sum f F2) = norm (sum f (F1 - F2) - sum f (F2 - F1))\n\ngoal (1 subgoal):\n 1. dist (sum f F1) (sum f F2) < e", "also"], ["proof (state)\nthis:\n  dist (sum f F1) (sum f F2) = norm (sum f (F1 - F2) - sum f (F2 - F1))\n\ngoal (1 subgoal):\n 1. dist (sum f F1) (sum f F2) < e", "have \"\\<dots> \\<le> sum (\\<lambda>x. norm (f x)) (F1-F2) + sum (\\<lambda>x. norm (f x)) (F2-F1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (sum f (F1 - F2) - sum f (F2 - F1))\n    \\<le> (\\<Sum>x\\<in>F1 - F2. norm (f x)) +\n          (\\<Sum>x\\<in>F2 - F1. norm (f x))", "by (smt norm_triangle_ineq4 sum_norm_le)"], ["proof (state)\nthis:\n  norm (sum f (F1 - F2) - sum f (F2 - F1))\n  \\<le> (\\<Sum>x\\<in>F1 - F2. norm (f x)) +\n        (\\<Sum>x\\<in>F2 - F1. norm (f x))\n\ngoal (1 subgoal):\n 1. dist (sum f F1) (sum f F2) < e", "also"], ["proof (state)\nthis:\n  norm (sum f (F1 - F2) - sum f (F2 - F1))\n  \\<le> (\\<Sum>x\\<in>F1 - F2. norm (f x)) +\n        (\\<Sum>x\\<in>F2 - F1. norm (f x))\n\ngoal (1 subgoal):\n 1. dist (sum f F1) (sum f F2) < e", "have \"\\<dots> = infsetsum (\\<lambda>x. norm (f x)) (F1-F2) + infsetsum (\\<lambda>x. norm (f x)) (F2-F1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>F1 - F2. norm (f x)) + (\\<Sum>x\\<in>F2 - F1. norm (f x)) =\n    (\\<Sum>\\<^sub>ax\\<in>F1 - F2. norm (f x)) +\n    (\\<Sum>\\<^sub>ax\\<in>F2 - F1. norm (f x))", "by (simp add: \\<open>finite F1\\<close> \\<open>finite F2\\<close>)"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>F1 - F2. norm (f x)) + (\\<Sum>x\\<in>F2 - F1. norm (f x)) =\n  (\\<Sum>\\<^sub>ax\\<in>F1 - F2. norm (f x)) +\n  (\\<Sum>\\<^sub>ax\\<in>F2 - F1. norm (f x))\n\ngoal (1 subgoal):\n 1. dist (sum f F1) (sum f F2) < e", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>F1 - F2. norm (f x)) + (\\<Sum>x\\<in>F2 - F1. norm (f x)) =\n  (\\<Sum>\\<^sub>ax\\<in>F1 - F2. norm (f x)) +\n  (\\<Sum>\\<^sub>ax\\<in>F2 - F1. norm (f x))\n\ngoal (1 subgoal):\n 1. dist (sum f F1) (sum f F2) < e", "have \"\\<dots> = infsetsum (\\<lambda>x. norm (f x)) ((F1-F2)\\<union>(F2-F1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>F1 - F2. norm (f x)) +\n    (\\<Sum>\\<^sub>ax\\<in>F2 - F1. norm (f x)) =\n    (\\<Sum>\\<^sub>ax\\<in>F1 - F2 \\<union> (F2 - F1). norm (f x))", "proof (rule infsetsum_Un_disjoint [symmetric])"], ["proof (state)\ngoal (3 subgoals):\n 1. (\\<lambda>x. norm (f x)) abs_summable_on F1 - F2\n 2. (\\<lambda>x. norm (f x)) abs_summable_on F2 - F1\n 3. (F1 - F2) \\<inter> (F2 - F1) = {}", "show \"(\\<lambda>x. norm (f x)) abs_summable_on F1 - F2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. norm (f x)) abs_summable_on F1 - F2", "by (simp add: \\<open>finite F1\\<close>)"], ["proof (state)\nthis:\n  (\\<lambda>x. norm (f x)) abs_summable_on F1 - F2\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. norm (f x)) abs_summable_on F2 - F1\n 2. (F1 - F2) \\<inter> (F2 - F1) = {}", "show \"(\\<lambda>x. norm (f x)) abs_summable_on F2 - F1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. norm (f x)) abs_summable_on F2 - F1", "by (simp add: \\<open>finite F2\\<close>)"], ["proof (state)\nthis:\n  (\\<lambda>x. norm (f x)) abs_summable_on F2 - F1\n\ngoal (1 subgoal):\n 1. (F1 - F2) \\<inter> (F2 - F1) = {}", "show \"(F1 - F2) \\<inter> (F2 - F1) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (F1 - F2) \\<inter> (F2 - F1) = {}", "by (simp add: Diff_Int_distrib2)"], ["proof (state)\nthis:\n  (F1 - F2) \\<inter> (F2 - F1) = {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>F1 - F2. norm (f x)) +\n  (\\<Sum>\\<^sub>ax\\<in>F2 - F1. norm (f x)) =\n  (\\<Sum>\\<^sub>ax\\<in>F1 - F2 \\<union> (F2 - F1). norm (f x))\n\ngoal (1 subgoal):\n 1. dist (sum f F1) (sum f F2) < e", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>F1 - F2. norm (f x)) +\n  (\\<Sum>\\<^sub>ax\\<in>F2 - F1. norm (f x)) =\n  (\\<Sum>\\<^sub>ax\\<in>F1 - F2 \\<union> (F2 - F1). norm (f x))\n\ngoal (1 subgoal):\n 1. dist (sum f F1) (sum f F2) < e", "have \"\\<dots> \\<le> infsetsum (\\<lambda>x. norm (f x)) (A-F0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>F1 - F2 \\<union> (F2 - F1). norm (f x))\n    \\<le> (\\<Sum>\\<^sub>ax\\<in>A - F0. norm (f x))", "proof (rule infsetsum_mono_neutral_left)"], ["proof (state)\ngoal (5 subgoals):\n 1. (\\<lambda>x. norm (f x)) abs_summable_on F1 - F2 \\<union> (F2 - F1)\n 2. (\\<lambda>x. norm (f x)) abs_summable_on A - F0\n 3. \\<And>x.\n       x \\<in> F1 - F2 \\<union> (F2 - F1) \\<Longrightarrow>\n       norm (f x) \\<le> norm (f x)\n 4. F1 - F2 \\<union> (F2 - F1) \\<subseteq> A - F0\n 5. \\<And>x.\n       x \\<in> A - F0 - (F1 - F2 \\<union> (F2 - F1)) \\<Longrightarrow>\n       0 \\<le> norm (f x)", "show \"(\\<lambda>x. norm (f x)) abs_summable_on F1 - F2 \\<union> (F2 - F1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. norm (f x)) abs_summable_on F1 - F2 \\<union> (F2 - F1)", "by (simp add: \\<open>finite F1\\<close> \\<open>finite F2\\<close>)"], ["proof (state)\nthis:\n  (\\<lambda>x. norm (f x)) abs_summable_on F1 - F2 \\<union> (F2 - F1)\n\ngoal (4 subgoals):\n 1. (\\<lambda>x. norm (f x)) abs_summable_on A - F0\n 2. \\<And>x.\n       x \\<in> F1 - F2 \\<union> (F2 - F1) \\<Longrightarrow>\n       norm (f x) \\<le> norm (f x)\n 3. F1 - F2 \\<union> (F2 - F1) \\<subseteq> A - F0\n 4. \\<And>x.\n       x \\<in> A - F0 - (F1 - F2 \\<union> (F2 - F1)) \\<Longrightarrow>\n       0 \\<le> norm (f x)", "show \"(\\<lambda>x. norm (f x)) abs_summable_on A - F0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. norm (f x)) abs_summable_on A - F0", "using abs_summable_on_subset assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?f abs_summable_on ?B; ?A \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> ?f abs_summable_on ?A\n  f abs_summable_on A\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. norm (f x)) abs_summable_on A - F0", "by fastforce"], ["proof (state)\nthis:\n  (\\<lambda>x. norm (f x)) abs_summable_on A - F0\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> F1 - F2 \\<union> (F2 - F1) \\<Longrightarrow>\n       norm (f x) \\<le> norm (f x)\n 2. F1 - F2 \\<union> (F2 - F1) \\<subseteq> A - F0\n 3. \\<And>x.\n       x \\<in> A - F0 - (F1 - F2 \\<union> (F2 - F1)) \\<Longrightarrow>\n       0 \\<le> norm (f x)", "show \"norm (f x) \\<le> norm (f x)\"\n          if \"x \\<in> F1 - F2 \\<union> (F2 - F1)\"\n          for x :: 'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (f x) \\<le> norm (f x)", "using that"], ["proof (prove)\nusing this:\n  x \\<in> F1 - F2 \\<union> (F2 - F1)\n\ngoal (1 subgoal):\n 1. norm (f x) \\<le> norm (f x)", "by simp"], ["proof (state)\nthis:\n  ?x \\<in> F1 - F2 \\<union> (F2 - F1) \\<Longrightarrow>\n  norm (f ?x) \\<le> norm (f ?x)\n\ngoal (2 subgoals):\n 1. F1 - F2 \\<union> (F2 - F1) \\<subseteq> A - F0\n 2. \\<And>x.\n       x \\<in> A - F0 - (F1 - F2 \\<union> (F2 - F1)) \\<Longrightarrow>\n       0 \\<le> norm (f x)", "show \"F1 - F2 \\<union> (F2 - F1) \\<subseteq> A - F0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F1 - F2 \\<union> (F2 - F1) \\<subseteq> A - F0", "by (simp add: Diff_mono \\<open>F0 \\<subseteq> F1\\<close> \\<open>F0 \\<subseteq> F2\\<close> \\<open>F1 \\<subseteq> A\\<close> \\<open>F2 \\<subseteq> A\\<close>)"], ["proof (state)\nthis:\n  F1 - F2 \\<union> (F2 - F1) \\<subseteq> A - F0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A - F0 - (F1 - F2 \\<union> (F2 - F1)) \\<Longrightarrow>\n       0 \\<le> norm (f x)", "show \"0 \\<le> norm (f x)\"\n          if \"x \\<in> A - F0 - (F1 - F2 \\<union> (F2 - F1))\"\n          for x :: 'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> norm (f x)", "by simp"], ["proof (state)\nthis:\n  ?x \\<in> A - F0 - (F1 - F2 \\<union> (F2 - F1)) \\<Longrightarrow>\n  0 \\<le> norm (f ?x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>F1 - F2 \\<union> (F2 - F1). norm (f x))\n  \\<le> (\\<Sum>\\<^sub>ax\\<in>A - F0. norm (f x))\n\ngoal (1 subgoal):\n 1. dist (sum f F1) (sum f F2) < e", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>F1 - F2 \\<union> (F2 - F1). norm (f x))\n  \\<le> (\\<Sum>\\<^sub>ax\\<in>A - F0. norm (f x))\n\ngoal (1 subgoal):\n 1. dist (sum f F1) (sum f F2) < e", "have \"\\<dots> = infsetsum (\\<lambda>x. norm (f x)) A - infsetsum (\\<lambda>x. norm (f x)) F0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A - F0. norm (f x)) =\n    (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) -\n    (\\<Sum>\\<^sub>ax\\<in>F0. norm (f x))", "by (simp add: assms infsetsum_Diff)"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>A - F0. norm (f x)) =\n  (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) - (\\<Sum>\\<^sub>ax\\<in>F0. norm (f x))\n\ngoal (1 subgoal):\n 1. dist (sum f F1) (sum f F2) < e", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>A - F0. norm (f x)) =\n  (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) - (\\<Sum>\\<^sub>ax\\<in>F0. norm (f x))\n\ngoal (1 subgoal):\n 1. dist (sum f F1) (sum f F2) < e", "have \"\\<dots> < e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) -\n    (\\<Sum>\\<^sub>ax\\<in>F0. norm (f x))\n    < e", "using local.sum_diff"], ["proof (prove)\nusing this:\n  (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) - e < (\\<Sum>x\\<in>F0. norm (f x))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) -\n    (\\<Sum>\\<^sub>ax\\<in>F0. norm (f x))\n    < e", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) - (\\<Sum>\\<^sub>ax\\<in>F0. norm (f x))\n  < e\n\ngoal (1 subgoal):\n 1. dist (sum f F1) (sum f F2) < e", "finally"], ["proof (chain)\npicking this:\n  dist (sum f F1) (sum f F2) < e", "show \"dist (sum f F1) (sum f F2) < e\""], ["proof (prove)\nusing this:\n  dist (sum f F1) (sum f F2) < e\n\ngoal (1 subgoal):\n 1. dist (sum f F1) (sum f F2) < e", "by assumption"], ["proof (state)\nthis:\n  dist (sum f F1) (sum f F2) < e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>P ?F1.0; P ?F2.0\\<rbrakk>\n  \\<Longrightarrow> dist (sum f ?F1.0) (sum f ?F2.0) < e\n\ngoal (1 subgoal):\n 1. \\<exists>P.\n       eventually P (finite_subsets_at_top A) \\<and>\n       (\\<forall>x y.\n           P x \\<and> P y \\<longrightarrow> dist (sum f x) (sum f y) < e)", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>P ?F1.0; P ?F2.0\\<rbrakk>\n  \\<Longrightarrow> dist (sum f ?F1.0) (sum f ?F2.0) < e\n\ngoal (1 subgoal):\n 1. \\<exists>P.\n       eventually P (finite_subsets_at_top A) \\<and>\n       (\\<forall>x y.\n           P x \\<and> P y \\<longrightarrow> dist (sum f x) (sum f y) < e)", "have \"eventually P (finite_subsets_at_top A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eventually P (finite_subsets_at_top A)", "unfolding P_def eventually_finite_subsets_at_top"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>X.\n       finite X \\<and>\n       X \\<subseteq> A \\<and>\n       (\\<forall>Y.\n           finite Y \\<and>\n           X \\<subseteq> Y \\<and> Y \\<subseteq> A \\<longrightarrow>\n           finite Y \\<and> F0 \\<subseteq> Y \\<and> Y \\<subseteq> A)", "using \\<open>F0 \\<subseteq> A\\<close> \\<open>finite F0\\<close>"], ["proof (prove)\nusing this:\n  F0 \\<subseteq> A\n  finite F0\n\ngoal (1 subgoal):\n 1. \\<exists>X.\n       finite X \\<and>\n       X \\<subseteq> A \\<and>\n       (\\<forall>Y.\n           finite Y \\<and>\n           X \\<subseteq> Y \\<and> Y \\<subseteq> A \\<longrightarrow>\n           finite Y \\<and> F0 \\<subseteq> Y \\<and> Y \\<subseteq> A)", "by blast"], ["proof (state)\nthis:\n  eventually P (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. \\<exists>P.\n       eventually P (finite_subsets_at_top A) \\<and>\n       (\\<forall>x y.\n           P x \\<and> P y \\<longrightarrow> dist (sum f x) (sum f y) < e)", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>P ?F1.0; P ?F2.0\\<rbrakk>\n  \\<Longrightarrow> dist (sum f ?F1.0) (sum f ?F2.0) < e\n  eventually P (finite_subsets_at_top A)", "show \"\\<exists>P. eventually P (finite_subsets_at_top A) \\<and> (\\<forall>F1 F2. P F1 \\<and> P F2 \\<longrightarrow> dist (sum f F1) (sum f F2) < e)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>P ?F1.0; P ?F2.0\\<rbrakk>\n  \\<Longrightarrow> dist (sum f ?F1.0) (sum f ?F2.0) < e\n  eventually P (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. \\<exists>P.\n       eventually P (finite_subsets_at_top A) \\<and>\n       (\\<forall>F1 F2.\n           P F1 \\<and> P F2 \\<longrightarrow>\n           dist (sum f F1) (sum f F2) < e)", "by auto"], ["proof (state)\nthis:\n  \\<exists>P.\n     eventually P (finite_subsets_at_top A) \\<and>\n     (\\<forall>F1 F2.\n         P F1 \\<and> P F2 \\<longrightarrow> dist (sum f F1) (sum f F2) < e)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < ?e \\<Longrightarrow>\n  \\<exists>P.\n     eventually P (finite_subsets_at_top A) \\<and>\n     (\\<forall>x y.\n         P x \\<and> P y \\<longrightarrow> dist (sum f x) (sum f y) < ?e)\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f A", "hence cauchy: \"cauchy_filter F\""], ["proof (prove)\nusing this:\n  0 < ?e \\<Longrightarrow>\n  \\<exists>P.\n     eventually P (finite_subsets_at_top A) \\<and>\n     (\\<forall>x y.\n         P x \\<and> P y \\<longrightarrow> dist (sum f x) (sum f y) < ?e)\n\ngoal (1 subgoal):\n 1. cauchy_filter F", "unfolding F_def"], ["proof (prove)\nusing this:\n  0 < ?e \\<Longrightarrow>\n  \\<exists>P.\n     eventually P (finite_subsets_at_top A) \\<and>\n     (\\<forall>x y.\n         P x \\<and> P y \\<longrightarrow> dist (sum f x) (sum f y) < ?e)\n\ngoal (1 subgoal):\n 1. cauchy_filter (filtermap (sum f) (finite_subsets_at_top A))", "by (rule cauchy_filter_metric_filtermapI)"], ["proof (state)\nthis:\n  cauchy_filter F\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f A", "from complete_UNIV"], ["proof (chain)\npicking this:\n  complete UNIV", "have \"F\\<le>principal UNIV \\<Longrightarrow> F \\<noteq> bot \\<Longrightarrow> cauchy_filter F \\<Longrightarrow> (\\<exists>x. F \\<le> nhds x)\""], ["proof (prove)\nusing this:\n  complete UNIV\n\ngoal (1 subgoal):\n 1. \\<lbrakk>F \\<le> principal UNIV; F \\<noteq> bot;\n     cauchy_filter F\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x. F \\<le> nhds x", "unfolding complete_uniform"], ["proof (prove)\nusing this:\n  \\<forall>F\\<le>principal UNIV.\n     F \\<noteq> bot \\<longrightarrow>\n     cauchy_filter F \\<longrightarrow> (\\<exists>x\\<in>UNIV. F \\<le> nhds x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>F \\<le> principal UNIV; F \\<noteq> bot;\n     cauchy_filter F\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x. F \\<le> nhds x", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>F \\<le> principal UNIV; F \\<noteq> bot; cauchy_filter F\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x. F \\<le> nhds x\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f A", "have \"(F \\<le> principal UNIV \\<Longrightarrow> F \\<noteq> bot \\<Longrightarrow> cauchy_filter F \\<Longrightarrow> \\<exists>x. F \\<le> nhds x) \\<Longrightarrow>\n    \\<exists>x. F \\<le> nhds x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>F \\<le> principal UNIV; F \\<noteq> bot;\n      cauchy_filter F\\<rbrakk>\n     \\<Longrightarrow> \\<exists>x. F \\<le> nhds x) \\<Longrightarrow>\n    \\<exists>x. F \\<le> nhds x", "using cauchy F_not_bot"], ["proof (prove)\nusing this:\n  cauchy_filter F\n  F \\<noteq> bot\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>F \\<le> principal UNIV; F \\<noteq> bot;\n      cauchy_filter F\\<rbrakk>\n     \\<Longrightarrow> \\<exists>x. F \\<le> nhds x) \\<Longrightarrow>\n    \\<exists>x. F \\<le> nhds x", "by simp"], ["proof (state)\nthis:\n  (\\<lbrakk>F \\<le> principal UNIV; F \\<noteq> bot; cauchy_filter F\\<rbrakk>\n   \\<Longrightarrow> \\<exists>x. F \\<le> nhds x) \\<Longrightarrow>\n  \\<exists>x. F \\<le> nhds x\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f A", "then"], ["proof (chain)\npicking this:\n  (\\<lbrakk>F \\<le> principal UNIV; F \\<noteq> bot; cauchy_filter F\\<rbrakk>\n   \\<Longrightarrow> \\<exists>x. F \\<le> nhds x) \\<Longrightarrow>\n  \\<exists>x. F \\<le> nhds x", "obtain x where Fx: \"F \\<le> nhds x\""], ["proof (prove)\nusing this:\n  (\\<lbrakk>F \\<le> principal UNIV; F \\<noteq> bot; cauchy_filter F\\<rbrakk>\n   \\<Longrightarrow> \\<exists>x. F \\<le> nhds x) \\<Longrightarrow>\n  \\<exists>x. F \\<le> nhds x\n\ngoal (1 subgoal):\n 1. (\\<And>x. F \\<le> nhds x \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>\\<lbrakk>F \\<le> principal UNIV; F \\<noteq> bot; cauchy_filter F\\<rbrakk> \\<Longrightarrow> \\<exists>x. F \\<le> nhds x\\<close>"], ["proof (prove)\nusing this:\n  (\\<lbrakk>F \\<le> principal UNIV; F \\<noteq> bot; cauchy_filter F\\<rbrakk>\n   \\<Longrightarrow> \\<exists>x. F \\<le> nhds x) \\<Longrightarrow>\n  \\<exists>x. F \\<le> nhds x\n  \\<lbrakk>F \\<le> principal UNIV; F \\<noteq> bot; cauchy_filter F\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x. F \\<le> nhds x\n\ngoal (1 subgoal):\n 1. (\\<And>x. F \\<le> nhds x \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  F \\<le> nhds x\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f A", "hence \"(sum f \\<longlongrightarrow> x) (finite_subsets_at_top A)\""], ["proof (prove)\nusing this:\n  F \\<le> nhds x\n\ngoal (1 subgoal):\n 1. (sum f \\<longlongrightarrow> x) (finite_subsets_at_top A)", "unfolding F_def"], ["proof (prove)\nusing this:\n  filtermap (sum f) (finite_subsets_at_top A) \\<le> nhds x\n\ngoal (1 subgoal):\n 1. (sum f \\<longlongrightarrow> x) (finite_subsets_at_top A)", "by (simp add: filterlim_def)"], ["proof (state)\nthis:\n  (sum f \\<longlongrightarrow> x) (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f A", "thus ?thesis"], ["proof (prove)\nusing this:\n  (sum f \\<longlongrightarrow> x) (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f A", "unfolding infsetsum'_converges_def"], ["proof (prove)\nusing this:\n  (sum f \\<longlongrightarrow> x) (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. \\<exists>x. (sum f \\<longlongrightarrow> x) (finite_subsets_at_top A)", "by auto"], ["proof (state)\nthis:\n  infsetsum'_converges f A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infsetsum'_converges_cofin_subset:\n  fixes f :: \"'a \\<Rightarrow> 'b::{topological_ab_group_add,t2_space}\"\n  assumes \"infsetsum'_converges f A\" and [simp]: \"finite F\"\n  shows \"infsetsum'_converges f (A-F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum'_converges f (A - F)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. infsetsum'_converges f (A - F)", "from assms(1)"], ["proof (chain)\npicking this:\n  infsetsum'_converges f A", "obtain x where lim_f: \"(sum f \\<longlongrightarrow> x) (finite_subsets_at_top A)\""], ["proof (prove)\nusing this:\n  infsetsum'_converges f A\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        (sum f \\<longlongrightarrow> x)\n         (finite_subsets_at_top A) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding infsetsum'_converges_def"], ["proof (prove)\nusing this:\n  \\<exists>x. (sum f \\<longlongrightarrow> x) (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        (sum f \\<longlongrightarrow> x)\n         (finite_subsets_at_top A) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (sum f \\<longlongrightarrow> x) (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f (A - F)", "define F' where \"F' = F\\<inter>A\""], ["proof (state)\nthis:\n  F' = F \\<inter> A\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f (A - F)", "with assms"], ["proof (chain)\npicking this:\n  infsetsum'_converges f A\n  finite F\n  F' = F \\<inter> A", "have \"finite F'\" and \"A-F = A-F'\""], ["proof (prove)\nusing this:\n  infsetsum'_converges f A\n  finite F\n  F' = F \\<inter> A\n\ngoal (1 subgoal):\n 1. finite F' &&& A - F = A - F'", "by auto"], ["proof (state)\nthis:\n  finite F'\n  A - F = A - F'\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f (A - F)", "have \"filtermap ((\\<union>)F') (finite_subsets_at_top (A-F))\n      \\<le> finite_subsets_at_top A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filtermap ((\\<union>) F') (finite_subsets_at_top (A - F))\n    \\<le> finite_subsets_at_top A", "proof (rule filter_leI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P.\n       eventually P (finite_subsets_at_top A) \\<Longrightarrow>\n       eventually P\n        (filtermap ((\\<union>) F') (finite_subsets_at_top (A - F)))", "fix P"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P.\n       eventually P (finite_subsets_at_top A) \\<Longrightarrow>\n       eventually P\n        (filtermap ((\\<union>) F') (finite_subsets_at_top (A - F)))", "assume \"eventually P (finite_subsets_at_top A)\""], ["proof (state)\nthis:\n  eventually P (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       eventually P (finite_subsets_at_top A) \\<Longrightarrow>\n       eventually P\n        (filtermap ((\\<union>) F') (finite_subsets_at_top (A - F)))", "then"], ["proof (chain)\npicking this:\n  eventually P (finite_subsets_at_top A)", "obtain X where [simp]: \"finite X\" and XA: \"X \\<subseteq> A\" \n      and P: \"\\<forall>Y. finite Y \\<and> X \\<subseteq> Y \\<and> Y \\<subseteq> A \\<longrightarrow> P Y\""], ["proof (prove)\nusing this:\n  eventually P (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. (\\<And>X.\n        \\<lbrakk>finite X; X \\<subseteq> A;\n         \\<forall>Y.\n            finite Y \\<and>\n            X \\<subseteq> Y \\<and> Y \\<subseteq> A \\<longrightarrow>\n            P Y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding eventually_finite_subsets_at_top"], ["proof (prove)\nusing this:\n  \\<exists>X.\n     finite X \\<and>\n     X \\<subseteq> A \\<and>\n     (\\<forall>Y.\n         finite Y \\<and>\n         X \\<subseteq> Y \\<and> Y \\<subseteq> A \\<longrightarrow>\n         P Y)\n\ngoal (1 subgoal):\n 1. (\\<And>X.\n        \\<lbrakk>finite X; X \\<subseteq> A;\n         \\<forall>Y.\n            finite Y \\<and>\n            X \\<subseteq> Y \\<and> Y \\<subseteq> A \\<longrightarrow>\n            P Y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  finite X\n  X \\<subseteq> A\n  \\<forall>Y.\n     finite Y \\<and>\n     X \\<subseteq> Y \\<and> Y \\<subseteq> A \\<longrightarrow>\n     P Y\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       eventually P (finite_subsets_at_top A) \\<Longrightarrow>\n       eventually P\n        (filtermap ((\\<union>) F') (finite_subsets_at_top (A - F)))", "define X' where \"X' = X-F\""], ["proof (state)\nthis:\n  X' = X - F\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       eventually P (finite_subsets_at_top A) \\<Longrightarrow>\n       eventually P\n        (filtermap ((\\<union>) F') (finite_subsets_at_top (A - F)))", "hence [simp]: \"finite X'\" and [simp]: \"X' \\<subseteq> A-F\""], ["proof (prove)\nusing this:\n  X' = X - F\n\ngoal (1 subgoal):\n 1. finite X' &&& X' \\<subseteq> A - F", "using XA"], ["proof (prove)\nusing this:\n  X' = X - F\n  X \\<subseteq> A\n\ngoal (1 subgoal):\n 1. finite X' &&& X' \\<subseteq> A - F", "by auto"], ["proof (state)\nthis:\n  finite X'\n  X' \\<subseteq> A - F\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       eventually P (finite_subsets_at_top A) \\<Longrightarrow>\n       eventually P\n        (filtermap ((\\<union>) F') (finite_subsets_at_top (A - F)))", "hence \"finite Y \\<and> X' \\<subseteq> Y \\<and> Y \\<subseteq> A - F \\<longrightarrow> P (F' \\<union> Y)\" for Y"], ["proof (prove)\nusing this:\n  finite X'\n  X' \\<subseteq> A - F\n\ngoal (1 subgoal):\n 1. finite Y \\<and>\n    X' \\<subseteq> Y \\<and> Y \\<subseteq> A - F \\<longrightarrow>\n    P (F' \\<union> Y)", "using P XA"], ["proof (prove)\nusing this:\n  finite X'\n  X' \\<subseteq> A - F\n  \\<forall>Y.\n     finite Y \\<and>\n     X \\<subseteq> Y \\<and> Y \\<subseteq> A \\<longrightarrow>\n     P Y\n  X \\<subseteq> A\n\ngoal (1 subgoal):\n 1. finite Y \\<and>\n    X' \\<subseteq> Y \\<and> Y \\<subseteq> A - F \\<longrightarrow>\n    P (F' \\<union> Y)", "unfolding X'_def"], ["proof (prove)\nusing this:\n  finite (X - F)\n  X - F \\<subseteq> A - F\n  \\<forall>Y.\n     finite Y \\<and>\n     X \\<subseteq> Y \\<and> Y \\<subseteq> A \\<longrightarrow>\n     P Y\n  X \\<subseteq> A\n\ngoal (1 subgoal):\n 1. finite Y \\<and>\n    X - F \\<subseteq> Y \\<and> Y \\<subseteq> A - F \\<longrightarrow>\n    P (F' \\<union> Y)", "using F'_def \\<open>finite F'\\<close>"], ["proof (prove)\nusing this:\n  finite (X - F)\n  X - F \\<subseteq> A - F\n  \\<forall>Y.\n     finite Y \\<and>\n     X \\<subseteq> Y \\<and> Y \\<subseteq> A \\<longrightarrow>\n     P Y\n  X \\<subseteq> A\n  F' = F \\<inter> A\n  finite F'\n\ngoal (1 subgoal):\n 1. finite Y \\<and>\n    X - F \\<subseteq> Y \\<and> Y \\<subseteq> A - F \\<longrightarrow>\n    P (F' \\<union> Y)", "by blast"], ["proof (state)\nthis:\n  finite ?Y \\<and>\n  X' \\<subseteq> ?Y \\<and> ?Y \\<subseteq> A - F \\<longrightarrow>\n  P (F' \\<union> ?Y)\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       eventually P (finite_subsets_at_top A) \\<Longrightarrow>\n       eventually P\n        (filtermap ((\\<union>) F') (finite_subsets_at_top (A - F)))", "thus \"eventually P (filtermap ((\\<union>) F') (finite_subsets_at_top (A - F)))\""], ["proof (prove)\nusing this:\n  finite ?Y \\<and>\n  X' \\<subseteq> ?Y \\<and> ?Y \\<subseteq> A - F \\<longrightarrow>\n  P (F' \\<union> ?Y)\n\ngoal (1 subgoal):\n 1. eventually P (filtermap ((\\<union>) F') (finite_subsets_at_top (A - F)))", "unfolding eventually_filtermap eventually_finite_subsets_at_top"], ["proof (prove)\nusing this:\n  finite ?Y \\<and>\n  X' \\<subseteq> ?Y \\<and> ?Y \\<subseteq> A - F \\<longrightarrow>\n  P (F' \\<union> ?Y)\n\ngoal (1 subgoal):\n 1. \\<exists>X.\n       finite X \\<and>\n       X \\<subseteq> A - F \\<and>\n       (\\<forall>Y.\n           finite Y \\<and>\n           X \\<subseteq> Y \\<and> Y \\<subseteq> A - F \\<longrightarrow>\n           P (F' \\<union> Y))", "by (rule_tac x=X' in exI, simp)"], ["proof (state)\nthis:\n  eventually P (filtermap ((\\<union>) F') (finite_subsets_at_top (A - F)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  filtermap ((\\<union>) F') (finite_subsets_at_top (A - F))\n  \\<le> finite_subsets_at_top A\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f (A - F)", "with lim_f"], ["proof (chain)\npicking this:\n  (sum f \\<longlongrightarrow> x) (finite_subsets_at_top A)\n  filtermap ((\\<union>) F') (finite_subsets_at_top (A - F))\n  \\<le> finite_subsets_at_top A", "have \"(sum f \\<longlongrightarrow> x) (filtermap ((\\<union>)F') (finite_subsets_at_top (A-F)))\""], ["proof (prove)\nusing this:\n  (sum f \\<longlongrightarrow> x) (finite_subsets_at_top A)\n  filtermap ((\\<union>) F') (finite_subsets_at_top (A - F))\n  \\<le> finite_subsets_at_top A\n\ngoal (1 subgoal):\n 1. (sum f \\<longlongrightarrow> x)\n     (filtermap ((\\<union>) F') (finite_subsets_at_top (A - F)))", "using tendsto_mono"], ["proof (prove)\nusing this:\n  (sum f \\<longlongrightarrow> x) (finite_subsets_at_top A)\n  filtermap ((\\<union>) F') (finite_subsets_at_top (A - F))\n  \\<le> finite_subsets_at_top A\n  \\<lbrakk>?F \\<le> ?F'; (?f \\<longlongrightarrow> ?l) ?F'\\<rbrakk>\n  \\<Longrightarrow> (?f \\<longlongrightarrow> ?l) ?F\n\ngoal (1 subgoal):\n 1. (sum f \\<longlongrightarrow> x)\n     (filtermap ((\\<union>) F') (finite_subsets_at_top (A - F)))", "by blast"], ["proof (state)\nthis:\n  (sum f \\<longlongrightarrow> x)\n   (filtermap ((\\<union>) F') (finite_subsets_at_top (A - F)))\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f (A - F)", "have \"((\\<lambda>G. sum f (F' \\<union> G)) \\<longlongrightarrow> x) (finite_subsets_at_top (A - F))\"\n    if \"((sum f \\<circ> (\\<union>) F') \\<longlongrightarrow> x) (finite_subsets_at_top (A - F))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>G. sum f (F' \\<union> G)) \\<longlongrightarrow> x)\n     (finite_subsets_at_top (A - F))", "using that"], ["proof (prove)\nusing this:\n  ((sum f \\<circ> (\\<union>) F') \\<longlongrightarrow> x)\n   (finite_subsets_at_top (A - F))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>G. sum f (F' \\<union> G)) \\<longlongrightarrow> x)\n     (finite_subsets_at_top (A - F))", "unfolding o_def"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. sum f (F' \\<union> x)) \\<longlongrightarrow> x)\n   (finite_subsets_at_top (A - F))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>G. sum f (F' \\<union> G)) \\<longlongrightarrow> x)\n     (finite_subsets_at_top (A - F))", "by auto"], ["proof (state)\nthis:\n  ((sum f \\<circ> (\\<union>) F') \\<longlongrightarrow> x)\n   (finite_subsets_at_top (A - F)) \\<Longrightarrow>\n  ((\\<lambda>G. sum f (F' \\<union> G)) \\<longlongrightarrow> x)\n   (finite_subsets_at_top (A - F))\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f (A - F)", "hence \"((\\<lambda>G. sum f (F' \\<union> G)) \\<longlongrightarrow> x) (finite_subsets_at_top (A-F))\""], ["proof (prove)\nusing this:\n  ((sum f \\<circ> (\\<union>) F') \\<longlongrightarrow> x)\n   (finite_subsets_at_top (A - F)) \\<Longrightarrow>\n  ((\\<lambda>G. sum f (F' \\<union> G)) \\<longlongrightarrow> x)\n   (finite_subsets_at_top (A - F))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>G. sum f (F' \\<union> G)) \\<longlongrightarrow> x)\n     (finite_subsets_at_top (A - F))", "using tendsto_compose_filtermap [symmetric]"], ["proof (prove)\nusing this:\n  ((sum f \\<circ> (\\<union>) F') \\<longlongrightarrow> x)\n   (finite_subsets_at_top (A - F)) \\<Longrightarrow>\n  ((\\<lambda>G. sum f (F' \\<union> G)) \\<longlongrightarrow> x)\n   (finite_subsets_at_top (A - F))\n  (?g \\<longlongrightarrow> ?T) (filtermap ?f ?F) =\n  ((?g \\<circ> ?f) \\<longlongrightarrow> ?T) ?F\n\ngoal (1 subgoal):\n 1. ((\\<lambda>G. sum f (F' \\<union> G)) \\<longlongrightarrow> x)\n     (finite_subsets_at_top (A - F))", "by (simp add: \\<open>(sum f \\<longlongrightarrow> x) (filtermap ((\\<union>) F') (finite_subsets_at_top (A - F)))\\<close> \n        tendsto_compose_filtermap)"], ["proof (state)\nthis:\n  ((\\<lambda>G. sum f (F' \\<union> G)) \\<longlongrightarrow> x)\n   (finite_subsets_at_top (A - F))\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f (A - F)", "have \"\\<forall>Y. finite Y \\<and> Y \\<subseteq> A - F \\<longrightarrow> sum f (F' \\<union> Y) = sum f F' + sum f Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>Y.\n       finite Y \\<and> Y \\<subseteq> A - F \\<longrightarrow>\n       sum f (F' \\<union> Y) = sum f F' + sum f Y", "by (metis Diff_disjoint Int_Diff \\<open>A - F = A - F'\\<close> \\<open>finite F'\\<close> inf.orderE sum.union_disjoint)"], ["proof (state)\nthis:\n  \\<forall>Y.\n     finite Y \\<and> Y \\<subseteq> A - F \\<longrightarrow>\n     sum f (F' \\<union> Y) = sum f F' + sum f Y\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f (A - F)", "hence \"\\<forall>\\<^sub>F x in finite_subsets_at_top (A - F). sum f (F' \\<union> x) = sum f F' + sum f x\""], ["proof (prove)\nusing this:\n  \\<forall>Y.\n     finite Y \\<and> Y \\<subseteq> A - F \\<longrightarrow>\n     sum f (F' \\<union> Y) = sum f F' + sum f Y\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in finite_subsets_at_top (A - F).\n       sum f (F' \\<union> x) = sum f F' + sum f x", "unfolding eventually_finite_subsets_at_top"], ["proof (prove)\nusing this:\n  \\<forall>Y.\n     finite Y \\<and> Y \\<subseteq> A - F \\<longrightarrow>\n     sum f (F' \\<union> Y) = sum f F' + sum f Y\n\ngoal (1 subgoal):\n 1. \\<exists>X.\n       finite X \\<and>\n       X \\<subseteq> A - F \\<and>\n       (\\<forall>Y.\n           finite Y \\<and>\n           X \\<subseteq> Y \\<and> Y \\<subseteq> A - F \\<longrightarrow>\n           sum f (F' \\<union> Y) = sum f F' + sum f Y)", "using exI [where x = \"{}\"]"], ["proof (prove)\nusing this:\n  \\<forall>Y.\n     finite Y \\<and> Y \\<subseteq> A - F \\<longrightarrow>\n     sum f (F' \\<union> Y) = sum f F' + sum f Y\n  ?P {} \\<Longrightarrow> \\<exists>x. ?P x\n\ngoal (1 subgoal):\n 1. \\<exists>X.\n       finite X \\<and>\n       X \\<subseteq> A - F \\<and>\n       (\\<forall>Y.\n           finite Y \\<and>\n           X \\<subseteq> Y \\<and> Y \\<subseteq> A - F \\<longrightarrow>\n           sum f (F' \\<union> Y) = sum f F' + sum f Y)", "by (simp add: \\<open>\\<And>P. P {} \\<Longrightarrow> \\<exists>x. P x\\<close>)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in finite_subsets_at_top (A - F).\n     sum f (F' \\<union> x) = sum f F' + sum f x\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f (A - F)", "hence \"((\\<lambda>G. sum f F' + sum f G) \\<longlongrightarrow> x) (finite_subsets_at_top (A-F))\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in finite_subsets_at_top (A - F).\n     sum f (F' \\<union> x) = sum f F' + sum f x\n\ngoal (1 subgoal):\n 1. ((\\<lambda>G. sum f F' + sum f G) \\<longlongrightarrow> x)\n     (finite_subsets_at_top (A - F))", "using tendsto_cong [THEN iffD1 , rotated]\n      \\<open>((\\<lambda>G. sum f (F' \\<union> G)) \\<longlongrightarrow> x) (finite_subsets_at_top (A - F))\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in finite_subsets_at_top (A - F).\n     sum f (F' \\<union> x) = sum f F' + sum f x\n  \\<lbrakk>(?f1 \\<longlongrightarrow> ?c1) ?F1;\n   \\<forall>\\<^sub>F x in ?F1. ?f1 x = ?g1 x\\<rbrakk>\n  \\<Longrightarrow> (?g1 \\<longlongrightarrow> ?c1) ?F1\n  ((\\<lambda>G. sum f (F' \\<union> G)) \\<longlongrightarrow> x)\n   (finite_subsets_at_top (A - F))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>G. sum f F' + sum f G) \\<longlongrightarrow> x)\n     (finite_subsets_at_top (A - F))", "by fastforce"], ["proof (state)\nthis:\n  ((\\<lambda>G. sum f F' + sum f G) \\<longlongrightarrow> x)\n   (finite_subsets_at_top (A - F))\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f (A - F)", "hence \"((\\<lambda>G. sum f F' + sum f G) \\<longlongrightarrow> sum f F' + (x-sum f F')) (finite_subsets_at_top (A-F))\""], ["proof (prove)\nusing this:\n  ((\\<lambda>G. sum f F' + sum f G) \\<longlongrightarrow> x)\n   (finite_subsets_at_top (A - F))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>G. sum f F' + sum f G) \\<longlongrightarrow>\n     sum f F' + (x - sum f F'))\n     (finite_subsets_at_top (A - F))", "by simp"], ["proof (state)\nthis:\n  ((\\<lambda>G. sum f F' + sum f G) \\<longlongrightarrow>\n   sum f F' + (x - sum f F'))\n   (finite_subsets_at_top (A - F))\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f (A - F)", "hence \"(sum f \\<longlongrightarrow> x - sum f F') (finite_subsets_at_top (A-F))\""], ["proof (prove)\nusing this:\n  ((\\<lambda>G. sum f F' + sum f G) \\<longlongrightarrow>\n   sum f F' + (x - sum f F'))\n   (finite_subsets_at_top (A - F))\n\ngoal (1 subgoal):\n 1. (sum f \\<longlongrightarrow> x - sum f F')\n     (finite_subsets_at_top (A - F))", "using Extra_General.tendsto_add_const_iff"], ["proof (prove)\nusing this:\n  ((\\<lambda>G. sum f F' + sum f G) \\<longlongrightarrow>\n   sum f F' + (x - sum f F'))\n   (finite_subsets_at_top (A - F))\n  ((\\<lambda>x. ?c + ?f x) \\<longlongrightarrow> ?c + ?d) ?F =\n  (?f \\<longlongrightarrow> ?d) ?F\n\ngoal (1 subgoal):\n 1. (sum f \\<longlongrightarrow> x - sum f F')\n     (finite_subsets_at_top (A - F))", "by blast"], ["proof (state)\nthis:\n  (sum f \\<longlongrightarrow> x - sum f F') (finite_subsets_at_top (A - F))\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f (A - F)", "thus \"infsetsum'_converges f (A - F)\""], ["proof (prove)\nusing this:\n  (sum f \\<longlongrightarrow> x - sum f F') (finite_subsets_at_top (A - F))\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f (A - F)", "unfolding infsetsum'_converges_def"], ["proof (prove)\nusing this:\n  (sum f \\<longlongrightarrow> x - sum f F') (finite_subsets_at_top (A - F))\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       (sum f \\<longlongrightarrow> x) (finite_subsets_at_top (A - F))", "by auto"], ["proof (state)\nthis:\n  infsetsum'_converges f (A - F)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \n  fixes f :: \"'a \\<Rightarrow> 'b::{comm_monoid_add,t2_space}\"\n  assumes \"\\<And>x. x\\<in>(A-B)\\<union>(B-A) \\<Longrightarrow> f x = 0\"\n  shows infsetsum'_subset_zero: \"infsetsum' f A = infsetsum' f B\"\n    and infsetsum'_converges_subset_zero: \"infsetsum'_converges f A = infsetsum'_converges f B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum' f A = infsetsum' f B &&&\n    infsetsum'_converges f A = infsetsum'_converges f B", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. infsetsum' f A = infsetsum' f B\n 2. infsetsum'_converges f A = infsetsum'_converges f B", "have convB: \"infsetsum'_converges f B\" and eq: \"infsetsum' f A = infsetsum' f B\"\n    if convA: \"infsetsum'_converges f A\" and f0: \"\\<And>x. x\\<in>(A-B)\\<union>(B-A) \\<Longrightarrow> f x = 0\" for A B"], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum'_converges f B &&& infsetsum' f A = infsetsum' f B", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. infsetsum'_converges f B\n 2. infsetsum' f A = infsetsum' f B", "define D where \"D = (A-B)\""], ["proof (state)\nthis:\n  D = A - B\n\ngoal (2 subgoals):\n 1. infsetsum'_converges f B\n 2. infsetsum' f A = infsetsum' f B", "define D' where \"D' = B-A\""], ["proof (state)\nthis:\n  D' = B - A\n\ngoal (2 subgoals):\n 1. infsetsum'_converges f B\n 2. infsetsum' f A = infsetsum' f B", "from convA"], ["proof (chain)\npicking this:\n  infsetsum'_converges f A", "obtain x where limA: \"(sum f \\<longlongrightarrow> x) (finite_subsets_at_top A)\""], ["proof (prove)\nusing this:\n  infsetsum'_converges f A\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        (sum f \\<longlongrightarrow> x)\n         (finite_subsets_at_top A) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using infsetsum'_converges_def"], ["proof (prove)\nusing this:\n  infsetsum'_converges f A\n  infsetsum'_converges ?f ?A =\n  (\\<exists>x. (sum ?f \\<longlongrightarrow> x) (finite_subsets_at_top ?A))\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        (sum f \\<longlongrightarrow> x)\n         (finite_subsets_at_top A) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (sum f \\<longlongrightarrow> x) (finite_subsets_at_top A)\n\ngoal (2 subgoals):\n 1. infsetsum'_converges f B\n 2. infsetsum' f A = infsetsum' f B", "have \"sum f X = sum f (X - D)\"\n      if \"finite (X::'a set)\"\n        and \"X \\<subseteq> A\"\n      for X :: \"'a set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f X = sum f (X - D)", "using that f0 D_def"], ["proof (prove)\nusing this:\n  finite X\n  X \\<subseteq> A\n  ?x \\<in> A - B \\<union> (B - A) \\<Longrightarrow> f ?x = (0::'b)\n  D = A - B\n\ngoal (1 subgoal):\n 1. sum f X = sum f (X - D)", "by (simp add: subset_iff sum.mono_neutral_cong_right)"], ["proof (state)\nthis:\n  \\<lbrakk>finite ?X; ?X \\<subseteq> A\\<rbrakk>\n  \\<Longrightarrow> sum f ?X = sum f (?X - D)\n\ngoal (2 subgoals):\n 1. infsetsum'_converges f B\n 2. infsetsum' f A = infsetsum' f B", "hence \"\\<forall>\\<^sub>F x in finite_subsets_at_top A. sum f x = sum f (x - D)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?X; ?X \\<subseteq> A\\<rbrakk>\n  \\<Longrightarrow> sum f ?X = sum f (?X - D)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in finite_subsets_at_top A. sum f x = sum f (x - D)", "by (rule eventually_finite_subsets_at_top_weakI)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in finite_subsets_at_top A. sum f x = sum f (x - D)\n\ngoal (2 subgoals):\n 1. infsetsum'_converges f B\n 2. infsetsum' f A = infsetsum' f B", "hence \"((\\<lambda>F. sum f (F-D)) \\<longlongrightarrow> x) (finite_subsets_at_top A)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in finite_subsets_at_top A. sum f x = sum f (x - D)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>F. sum f (F - D)) \\<longlongrightarrow> x)\n     (finite_subsets_at_top A)", "using tendsto_cong [THEN iffD1, rotated] limA"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in finite_subsets_at_top A. sum f x = sum f (x - D)\n  \\<lbrakk>(?f1 \\<longlongrightarrow> ?c1) ?F1;\n   \\<forall>\\<^sub>F x in ?F1. ?f1 x = ?g1 x\\<rbrakk>\n  \\<Longrightarrow> (?g1 \\<longlongrightarrow> ?c1) ?F1\n  (sum f \\<longlongrightarrow> x) (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>F. sum f (F - D)) \\<longlongrightarrow> x)\n     (finite_subsets_at_top A)", "by fastforce"], ["proof (state)\nthis:\n  ((\\<lambda>F. sum f (F - D)) \\<longlongrightarrow> x)\n   (finite_subsets_at_top A)\n\ngoal (2 subgoals):\n 1. infsetsum'_converges f B\n 2. infsetsum' f A = infsetsum' f B", "hence \"(sum f \\<longlongrightarrow> x) (filtermap (\\<lambda>F. F-D) (finite_subsets_at_top A))\""], ["proof (prove)\nusing this:\n  ((\\<lambda>F. sum f (F - D)) \\<longlongrightarrow> x)\n   (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. (sum f \\<longlongrightarrow> x)\n     (filtermap (\\<lambda>F. F - D) (finite_subsets_at_top A))", "by (simp add: filterlim_filtermap)"], ["proof (state)\nthis:\n  (sum f \\<longlongrightarrow> x)\n   (filtermap (\\<lambda>F. F - D) (finite_subsets_at_top A))\n\ngoal (2 subgoals):\n 1. infsetsum'_converges f B\n 2. infsetsum' f A = infsetsum' f B", "have \"D \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D \\<subseteq> A", "unfolding D_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. A - B \\<subseteq> A", "by simp"], ["proof (state)\nthis:\n  D \\<subseteq> A\n\ngoal (2 subgoals):\n 1. infsetsum'_converges f B\n 2. infsetsum' f A = infsetsum' f B", "hence \"finite_subsets_at_top (A - D) \\<le> filtermap (\\<lambda>F. F - D) (finite_subsets_at_top A)\""], ["proof (prove)\nusing this:\n  D \\<subseteq> A\n\ngoal (1 subgoal):\n 1. finite_subsets_at_top (A - D)\n    \\<le> filtermap (\\<lambda>F. F - D) (finite_subsets_at_top A)", "by (rule finite_subsets_at_top_minus)"], ["proof (state)\nthis:\n  finite_subsets_at_top (A - D)\n  \\<le> filtermap (\\<lambda>F. F - D) (finite_subsets_at_top A)\n\ngoal (2 subgoals):\n 1. infsetsum'_converges f B\n 2. infsetsum' f A = infsetsum' f B", "hence \"(sum f \\<longlongrightarrow> x) (finite_subsets_at_top (A-D))\""], ["proof (prove)\nusing this:\n  finite_subsets_at_top (A - D)\n  \\<le> filtermap (\\<lambda>F. F - D) (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. (sum f \\<longlongrightarrow> x) (finite_subsets_at_top (A - D))", "using tendsto_mono [rotated] \n        \\<open>(sum f \\<longlongrightarrow> x) (filtermap (\\<lambda>F. F - D) (finite_subsets_at_top A))\\<close>"], ["proof (prove)\nusing this:\n  finite_subsets_at_top (A - D)\n  \\<le> filtermap (\\<lambda>F. F - D) (finite_subsets_at_top A)\n  \\<lbrakk>(?f \\<longlongrightarrow> ?l) ?F'; ?F \\<le> ?F'\\<rbrakk>\n  \\<Longrightarrow> (?f \\<longlongrightarrow> ?l) ?F\n  (sum f \\<longlongrightarrow> x)\n   (filtermap (\\<lambda>F. F - D) (finite_subsets_at_top A))\n\ngoal (1 subgoal):\n 1. (sum f \\<longlongrightarrow> x) (finite_subsets_at_top (A - D))", "by blast"], ["proof (state)\nthis:\n  (sum f \\<longlongrightarrow> x) (finite_subsets_at_top (A - D))\n\ngoal (2 subgoals):\n 1. infsetsum'_converges f B\n 2. infsetsum' f A = infsetsum' f B", "have \"A - D \\<subseteq> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A - D \\<subseteq> B", "unfolding D_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. A - (A - B) \\<subseteq> B", "by auto"], ["proof (state)\nthis:\n  A - D \\<subseteq> B\n\ngoal (2 subgoals):\n 1. infsetsum'_converges f B\n 2. infsetsum' f A = infsetsum' f B", "hence \"filtermap (\\<lambda>F. F \\<inter> (A - D)) (finite_subsets_at_top B) \\<le> finite_subsets_at_top (A - D)\""], ["proof (prove)\nusing this:\n  A - D \\<subseteq> B\n\ngoal (1 subgoal):\n 1. filtermap (\\<lambda>F. F \\<inter> (A - D)) (finite_subsets_at_top B)\n    \\<le> finite_subsets_at_top (A - D)", "by (rule finite_subsets_at_top_inter [where B = B and A = \"A-D\"])"], ["proof (state)\nthis:\n  filtermap (\\<lambda>F. F \\<inter> (A - D)) (finite_subsets_at_top B)\n  \\<le> finite_subsets_at_top (A - D)\n\ngoal (2 subgoals):\n 1. infsetsum'_converges f B\n 2. infsetsum' f A = infsetsum' f B", "hence \"(sum f \\<longlongrightarrow> x) (filtermap (\\<lambda>F. F \\<inter> (A - D)) (finite_subsets_at_top B))\""], ["proof (prove)\nusing this:\n  filtermap (\\<lambda>F. F \\<inter> (A - D)) (finite_subsets_at_top B)\n  \\<le> finite_subsets_at_top (A - D)\n\ngoal (1 subgoal):\n 1. (sum f \\<longlongrightarrow> x)\n     (filtermap (\\<lambda>F. F \\<inter> (A - D)) (finite_subsets_at_top B))", "using tendsto_mono [rotated] \\<open>(sum f \\<longlongrightarrow> x) (finite_subsets_at_top (A - D))\\<close>"], ["proof (prove)\nusing this:\n  filtermap (\\<lambda>F. F \\<inter> (A - D)) (finite_subsets_at_top B)\n  \\<le> finite_subsets_at_top (A - D)\n  \\<lbrakk>(?f \\<longlongrightarrow> ?l) ?F'; ?F \\<le> ?F'\\<rbrakk>\n  \\<Longrightarrow> (?f \\<longlongrightarrow> ?l) ?F\n  (sum f \\<longlongrightarrow> x) (finite_subsets_at_top (A - D))\n\ngoal (1 subgoal):\n 1. (sum f \\<longlongrightarrow> x)\n     (filtermap (\\<lambda>F. F \\<inter> (A - D)) (finite_subsets_at_top B))", "by blast"], ["proof (state)\nthis:\n  (sum f \\<longlongrightarrow> x)\n   (filtermap (\\<lambda>F. F \\<inter> (A - D)) (finite_subsets_at_top B))\n\ngoal (2 subgoals):\n 1. infsetsum'_converges f B\n 2. infsetsum' f A = infsetsum' f B", "hence \"((\\<lambda>F. sum f (F \\<inter> (A - D))) \\<longlongrightarrow> x) (finite_subsets_at_top B)\""], ["proof (prove)\nusing this:\n  (sum f \\<longlongrightarrow> x)\n   (filtermap (\\<lambda>F. F \\<inter> (A - D)) (finite_subsets_at_top B))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>F. sum f (F \\<inter> (A - D))) \\<longlongrightarrow> x)\n     (finite_subsets_at_top B)", "by (simp add: filterlim_filtermap)"], ["proof (state)\nthis:\n  ((\\<lambda>F. sum f (F \\<inter> (A - D))) \\<longlongrightarrow> x)\n   (finite_subsets_at_top B)\n\ngoal (2 subgoals):\n 1. infsetsum'_converges f B\n 2. infsetsum' f A = infsetsum' f B", "have \"sum f (X \\<inter> (A - D)) = sum f X\"\n      if \"finite (X::'a set)\"\n        and \"X \\<subseteq> B\"\n      for X :: \"'a set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f (X \\<inter> (A - D)) = sum f X", "proof (rule sum.mono_neutral_cong)"], ["proof (state)\ngoal (5 subgoals):\n 1. finite X\n 2. finite (X \\<inter> (A - D))\n 3. \\<And>i. i \\<in> X - X \\<inter> (A - D) \\<Longrightarrow> f i = (0::'b)\n 4. \\<And>i. i \\<in> X \\<inter> (A - D) - X \\<Longrightarrow> f i = (0::'b)\n 5. \\<And>x.\n       x \\<in> X \\<inter> (A - D) \\<inter> X \\<Longrightarrow> f x = f x", "show \"finite X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite X", "by (simp add: that(1))"], ["proof (state)\nthis:\n  finite X\n\ngoal (4 subgoals):\n 1. finite (X \\<inter> (A - D))\n 2. \\<And>i. i \\<in> X - X \\<inter> (A - D) \\<Longrightarrow> f i = (0::'b)\n 3. \\<And>i. i \\<in> X \\<inter> (A - D) - X \\<Longrightarrow> f i = (0::'b)\n 4. \\<And>x.\n       x \\<in> X \\<inter> (A - D) \\<inter> X \\<Longrightarrow> f x = f x", "show \"finite (X \\<inter> (A - D))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (X \\<inter> (A - D))", "by (simp add: that(1))"], ["proof (state)\nthis:\n  finite (X \\<inter> (A - D))\n\ngoal (3 subgoals):\n 1. \\<And>i. i \\<in> X - X \\<inter> (A - D) \\<Longrightarrow> f i = (0::'b)\n 2. \\<And>i. i \\<in> X \\<inter> (A - D) - X \\<Longrightarrow> f i = (0::'b)\n 3. \\<And>x.\n       x \\<in> X \\<inter> (A - D) \\<inter> X \\<Longrightarrow> f x = f x", "show \"f i = 0\"\n        if \"i \\<in> X - X \\<inter> (A - D)\"\n        for i :: 'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. f i = (0::'b)", "using that D_def DiffD2 \\<open>X \\<subseteq> B\\<close> f0"], ["proof (prove)\nusing this:\n  i \\<in> X - X \\<inter> (A - D)\n  D = A - B\n  \\<lbrakk>?c \\<in> ?A - ?B; ?c \\<in> ?B\\<rbrakk> \\<Longrightarrow> ?P\n  X \\<subseteq> B\n  ?x \\<in> A - B \\<union> (B - A) \\<Longrightarrow> f ?x = (0::'b)\n\ngoal (1 subgoal):\n 1. f i = (0::'b)", "by auto"], ["proof (state)\nthis:\n  ?i \\<in> X - X \\<inter> (A - D) \\<Longrightarrow> f ?i = (0::'b)\n\ngoal (2 subgoals):\n 1. \\<And>i. i \\<in> X \\<inter> (A - D) - X \\<Longrightarrow> f i = (0::'b)\n 2. \\<And>x.\n       x \\<in> X \\<inter> (A - D) \\<inter> X \\<Longrightarrow> f x = f x", "show \"f i = 0\"\n        if \"i \\<in> X \\<inter> (A - D) - X\"\n        for i :: 'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. f i = (0::'b)", "using that"], ["proof (prove)\nusing this:\n  i \\<in> X \\<inter> (A - D) - X\n\ngoal (1 subgoal):\n 1. f i = (0::'b)", "by auto"], ["proof (state)\nthis:\n  ?i \\<in> X \\<inter> (A - D) - X \\<Longrightarrow> f ?i = (0::'b)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> X \\<inter> (A - D) \\<inter> X \\<Longrightarrow> f x = f x", "show \"f x = f x\"\n        if \"x \\<in> X \\<inter> (A - D) \\<inter> X\"\n        for x :: 'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. f x = f x", "by simp"], ["proof (state)\nthis:\n  ?x \\<in> X \\<inter> (A - D) \\<inter> X \\<Longrightarrow> f ?x = f ?x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>finite ?X; ?X \\<subseteq> B\\<rbrakk>\n  \\<Longrightarrow> sum f (?X \\<inter> (A - D)) = sum f ?X\n\ngoal (2 subgoals):\n 1. infsetsum'_converges f B\n 2. infsetsum' f A = infsetsum' f B", "hence \"\\<forall>\\<^sub>F x in finite_subsets_at_top B. sum f (x \\<inter> (A - D)) = sum f x\""], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?X; ?X \\<subseteq> B\\<rbrakk>\n  \\<Longrightarrow> sum f (?X \\<inter> (A - D)) = sum f ?X\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in finite_subsets_at_top B.\n       sum f (x \\<inter> (A - D)) = sum f x", "by (rule eventually_finite_subsets_at_top_weakI)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in finite_subsets_at_top B.\n     sum f (x \\<inter> (A - D)) = sum f x\n\ngoal (2 subgoals):\n 1. infsetsum'_converges f B\n 2. infsetsum' f A = infsetsum' f B", "hence limB: \"(sum f \\<longlongrightarrow> x) (finite_subsets_at_top B)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in finite_subsets_at_top B.\n     sum f (x \\<inter> (A - D)) = sum f x\n\ngoal (1 subgoal):\n 1. (sum f \\<longlongrightarrow> x) (finite_subsets_at_top B)", "using tendsto_cong [THEN iffD1 , rotated]\n        \\<open>((\\<lambda>F. sum f (F \\<inter> (A - D))) \\<longlongrightarrow> x) (finite_subsets_at_top B)\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in finite_subsets_at_top B.\n     sum f (x \\<inter> (A - D)) = sum f x\n  \\<lbrakk>(?f1 \\<longlongrightarrow> ?c1) ?F1;\n   \\<forall>\\<^sub>F x in ?F1. ?f1 x = ?g1 x\\<rbrakk>\n  \\<Longrightarrow> (?g1 \\<longlongrightarrow> ?c1) ?F1\n  ((\\<lambda>F. sum f (F \\<inter> (A - D))) \\<longlongrightarrow> x)\n   (finite_subsets_at_top B)\n\ngoal (1 subgoal):\n 1. (sum f \\<longlongrightarrow> x) (finite_subsets_at_top B)", "by blast"], ["proof (state)\nthis:\n  (sum f \\<longlongrightarrow> x) (finite_subsets_at_top B)\n\ngoal (2 subgoals):\n 1. infsetsum'_converges f B\n 2. infsetsum' f A = infsetsum' f B", "thus \"infsetsum'_converges f B\""], ["proof (prove)\nusing this:\n  (sum f \\<longlongrightarrow> x) (finite_subsets_at_top B)\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f B", "unfolding infsetsum'_converges_def"], ["proof (prove)\nusing this:\n  (sum f \\<longlongrightarrow> x) (finite_subsets_at_top B)\n\ngoal (1 subgoal):\n 1. \\<exists>x. (sum f \\<longlongrightarrow> x) (finite_subsets_at_top B)", "by auto"], ["proof (state)\nthis:\n  infsetsum'_converges f B\n\ngoal (1 subgoal):\n 1. infsetsum' f A = infsetsum' f B", "have \"Lim (finite_subsets_at_top A) (sum f) = Lim (finite_subsets_at_top B) (sum f)\"\n      if \"infsetsum'_converges f B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Lim (finite_subsets_at_top A) (sum f) =\n    Lim (finite_subsets_at_top B) (sum f)", "using that"], ["proof (prove)\nusing this:\n  infsetsum'_converges f B\n\ngoal (1 subgoal):\n 1. Lim (finite_subsets_at_top A) (sum f) =\n    Lim (finite_subsets_at_top B) (sum f)", "using limA limB"], ["proof (prove)\nusing this:\n  infsetsum'_converges f B\n  (sum f \\<longlongrightarrow> x) (finite_subsets_at_top A)\n  (sum f \\<longlongrightarrow> x) (finite_subsets_at_top B)\n\ngoal (1 subgoal):\n 1. Lim (finite_subsets_at_top A) (sum f) =\n    Lim (finite_subsets_at_top B) (sum f)", "using finite_subsets_at_top_neq_bot tendsto_Lim"], ["proof (prove)\nusing this:\n  infsetsum'_converges f B\n  (sum f \\<longlongrightarrow> x) (finite_subsets_at_top A)\n  (sum f \\<longlongrightarrow> x) (finite_subsets_at_top B)\n  finite_subsets_at_top ?A \\<noteq> bot\n  \\<lbrakk>?net \\<noteq> bot; (?f \\<longlongrightarrow> ?l) ?net\\<rbrakk>\n  \\<Longrightarrow> Lim ?net ?f = ?l\n\ngoal (1 subgoal):\n 1. Lim (finite_subsets_at_top A) (sum f) =\n    Lim (finite_subsets_at_top B) (sum f)", "by blast"], ["proof (state)\nthis:\n  infsetsum'_converges f B \\<Longrightarrow>\n  Lim (finite_subsets_at_top A) (sum f) =\n  Lim (finite_subsets_at_top B) (sum f)\n\ngoal (1 subgoal):\n 1. infsetsum' f A = infsetsum' f B", "thus \"infsetsum' f A = infsetsum' f B\""], ["proof (prove)\nusing this:\n  infsetsum'_converges f B \\<Longrightarrow>\n  Lim (finite_subsets_at_top A) (sum f) =\n  Lim (finite_subsets_at_top B) (sum f)\n\ngoal (1 subgoal):\n 1. infsetsum' f A = infsetsum' f B", "unfolding infsetsum'_def"], ["proof (prove)\nusing this:\n  infsetsum'_converges f B \\<Longrightarrow>\n  Lim (finite_subsets_at_top A) (sum f) =\n  Lim (finite_subsets_at_top B) (sum f)\n\ngoal (1 subgoal):\n 1. (if infsetsum'_converges f A then Lim (finite_subsets_at_top A) (sum f)\n     else (0::'b)) =\n    (if infsetsum'_converges f B then Lim (finite_subsets_at_top B) (sum f)\n     else (0::'b))", "using convA"], ["proof (prove)\nusing this:\n  infsetsum'_converges f B \\<Longrightarrow>\n  Lim (finite_subsets_at_top A) (sum f) =\n  Lim (finite_subsets_at_top B) (sum f)\n  infsetsum'_converges f A\n\ngoal (1 subgoal):\n 1. (if infsetsum'_converges f A then Lim (finite_subsets_at_top A) (sum f)\n     else (0::'b)) =\n    (if infsetsum'_converges f B then Lim (finite_subsets_at_top B) (sum f)\n     else (0::'b))", "by (simp add: \\<open>infsetsum'_converges f B\\<close>)"], ["proof (state)\nthis:\n  infsetsum' f A = infsetsum' f B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>infsetsum'_converges f ?A;\n   \\<And>x.\n      x \\<in> ?A - ?B \\<union> (?B - ?A) \\<Longrightarrow>\n      f x = (0::'b)\\<rbrakk>\n  \\<Longrightarrow> infsetsum'_converges f ?B\n  \\<lbrakk>infsetsum'_converges f ?A;\n   \\<And>x.\n      x \\<in> ?A - ?B \\<union> (?B - ?A) \\<Longrightarrow>\n      f x = (0::'b)\\<rbrakk>\n  \\<Longrightarrow> infsetsum' f ?A = infsetsum' f ?B\n\ngoal (2 subgoals):\n 1. infsetsum' f A = infsetsum' f B\n 2. infsetsum'_converges f A = infsetsum'_converges f B", "with assms"], ["proof (chain)\npicking this:\n  ?x \\<in> A - B \\<union> (B - A) \\<Longrightarrow> f ?x = (0::'b)\n  \\<lbrakk>infsetsum'_converges f ?A;\n   \\<And>x.\n      x \\<in> ?A - ?B \\<union> (?B - ?A) \\<Longrightarrow>\n      f x = (0::'b)\\<rbrakk>\n  \\<Longrightarrow> infsetsum'_converges f ?B\n  \\<lbrakk>infsetsum'_converges f ?A;\n   \\<And>x.\n      x \\<in> ?A - ?B \\<union> (?B - ?A) \\<Longrightarrow>\n      f x = (0::'b)\\<rbrakk>\n  \\<Longrightarrow> infsetsum' f ?A = infsetsum' f ?B", "show \"infsetsum'_converges f A = infsetsum'_converges f B\""], ["proof (prove)\nusing this:\n  ?x \\<in> A - B \\<union> (B - A) \\<Longrightarrow> f ?x = (0::'b)\n  \\<lbrakk>infsetsum'_converges f ?A;\n   \\<And>x.\n      x \\<in> ?A - ?B \\<union> (?B - ?A) \\<Longrightarrow>\n      f x = (0::'b)\\<rbrakk>\n  \\<Longrightarrow> infsetsum'_converges f ?B\n  \\<lbrakk>infsetsum'_converges f ?A;\n   \\<And>x.\n      x \\<in> ?A - ?B \\<union> (?B - ?A) \\<Longrightarrow>\n      f x = (0::'b)\\<rbrakk>\n  \\<Longrightarrow> infsetsum' f ?A = infsetsum' f ?B\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f A = infsetsum'_converges f B", "by (metis Un_commute)"], ["proof (state)\nthis:\n  infsetsum'_converges f A = infsetsum'_converges f B\n\ngoal (1 subgoal):\n 1. infsetsum' f A = infsetsum' f B", "thus \"infsetsum' f A = infsetsum' f B\""], ["proof (prove)\nusing this:\n  infsetsum'_converges f A = infsetsum'_converges f B\n\ngoal (1 subgoal):\n 1. infsetsum' f A = infsetsum' f B", "using assms convB eq"], ["proof (prove)\nusing this:\n  infsetsum'_converges f A = infsetsum'_converges f B\n  ?x \\<in> A - B \\<union> (B - A) \\<Longrightarrow> f ?x = (0::'b)\n  \\<lbrakk>infsetsum'_converges f ?A;\n   \\<And>x.\n      x \\<in> ?A - ?B \\<union> (?B - ?A) \\<Longrightarrow>\n      f x = (0::'b)\\<rbrakk>\n  \\<Longrightarrow> infsetsum'_converges f ?B\n  \\<lbrakk>infsetsum'_converges f ?A;\n   \\<And>x.\n      x \\<in> ?A - ?B \\<union> (?B - ?A) \\<Longrightarrow>\n      f x = (0::'b)\\<rbrakk>\n  \\<Longrightarrow> infsetsum' f ?A = infsetsum' f ?B\n\ngoal (1 subgoal):\n 1. infsetsum' f A = infsetsum' f B", "by (metis infsetsum'_def)"], ["proof (state)\nthis:\n  infsetsum' f A = infsetsum' f B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma\n  fixes f :: \"'a \\<Rightarrow> 'b::{topological_ab_group_add,t2_space}\"\n  assumes \"infsetsum'_converges f B\" and \"infsetsum'_converges f A\" and AB: \"A \\<subseteq> B\"\n  shows infsetsum'_Diff: \"infsetsum' f (B - A) = infsetsum' f B - infsetsum' f A\"\n    and infsetsum'_converges_Diff: \"infsetsum'_converges f (B-A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum' f (B - A) = infsetsum' f B - infsetsum' f A &&&\n    infsetsum'_converges f (B - A)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. infsetsum' f (B - A) = infsetsum' f B - infsetsum' f A\n 2. infsetsum'_converges f (B - A)", "define limA limB where \"limA = infsetsum' f A\" and \"limB = infsetsum' f B\""], ["proof (state)\nthis:\n  limA = infsetsum' f A\n  limB = infsetsum' f B\n\ngoal (2 subgoals):\n 1. infsetsum' f (B - A) = infsetsum' f B - infsetsum' f A\n 2. infsetsum'_converges f (B - A)", "from assms(1)"], ["proof (chain)\npicking this:\n  infsetsum'_converges f B", "have limB: \"(sum f \\<longlongrightarrow> limB) (finite_subsets_at_top B)\""], ["proof (prove)\nusing this:\n  infsetsum'_converges f B\n\ngoal (1 subgoal):\n 1. (sum f \\<longlongrightarrow> limB) (finite_subsets_at_top B)", "unfolding infsetsum'_converges_def infsetsum'_def limB_def"], ["proof (prove)\nusing this:\n  \\<exists>x. (sum f \\<longlongrightarrow> x) (finite_subsets_at_top B)\n\ngoal (1 subgoal):\n 1. (sum f \\<longlongrightarrow>\n     (if \\<exists>x.\n            (sum f \\<longlongrightarrow> x) (finite_subsets_at_top B)\n      then Lim (finite_subsets_at_top B) (sum f) else (0::'b)))\n     (finite_subsets_at_top B)", "by (auto simp: tendsto_Lim)"], ["proof (state)\nthis:\n  (sum f \\<longlongrightarrow> limB) (finite_subsets_at_top B)\n\ngoal (2 subgoals):\n 1. infsetsum' f (B - A) = infsetsum' f B - infsetsum' f A\n 2. infsetsum'_converges f (B - A)", "from assms(2)"], ["proof (chain)\npicking this:\n  infsetsum'_converges f A", "have limA: \"(sum f \\<longlongrightarrow> limA) (finite_subsets_at_top A)\""], ["proof (prove)\nusing this:\n  infsetsum'_converges f A\n\ngoal (1 subgoal):\n 1. (sum f \\<longlongrightarrow> limA) (finite_subsets_at_top A)", "unfolding infsetsum'_converges_def infsetsum'_def limA_def"], ["proof (prove)\nusing this:\n  \\<exists>x. (sum f \\<longlongrightarrow> x) (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. (sum f \\<longlongrightarrow>\n     (if \\<exists>x.\n            (sum f \\<longlongrightarrow> x) (finite_subsets_at_top A)\n      then Lim (finite_subsets_at_top A) (sum f) else (0::'b)))\n     (finite_subsets_at_top A)", "by (auto simp: tendsto_Lim)"], ["proof (state)\nthis:\n  (sum f \\<longlongrightarrow> limA) (finite_subsets_at_top A)\n\ngoal (2 subgoals):\n 1. infsetsum' f (B - A) = infsetsum' f B - infsetsum' f A\n 2. infsetsum'_converges f (B - A)", "have \"((\\<lambda>F. sum f (F\\<inter>A)) \\<longlongrightarrow> limA) (finite_subsets_at_top B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>F. sum f (F \\<inter> A)) \\<longlongrightarrow> limA)\n     (finite_subsets_at_top B)", "proof (subst asm_rl [of \"(\\<lambda>F. sum f (F\\<inter>A)) = sum f o (\\<lambda>F. F\\<inter>A)\"])"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>F. sum f (F \\<inter> A)) =\n    sum f \\<circ> (\\<lambda>F. F \\<inter> A)\n 2. ((sum f \\<circ> (\\<lambda>F. F \\<inter> A)) \\<longlongrightarrow> limA)\n     (finite_subsets_at_top B)", "show \"(\\<lambda>F. sum f (F \\<inter> A)) = sum f \\<circ> (\\<lambda>F. F \\<inter> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>F. sum f (F \\<inter> A)) =\n    sum f \\<circ> (\\<lambda>F. F \\<inter> A)", "unfolding o_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>F. sum f (F \\<inter> A)) = (\\<lambda>x. sum f (x \\<inter> A))", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>F. sum f (F \\<inter> A)) =\n  sum f \\<circ> (\\<lambda>F. F \\<inter> A)\n\ngoal (1 subgoal):\n 1. ((sum f \\<circ> (\\<lambda>F. F \\<inter> A)) \\<longlongrightarrow> limA)\n     (finite_subsets_at_top B)", "show \"((sum f \\<circ> (\\<lambda>F. F \\<inter> A)) \\<longlongrightarrow> limA) (finite_subsets_at_top B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((sum f \\<circ> (\\<lambda>F. F \\<inter> A)) \\<longlongrightarrow> limA)\n     (finite_subsets_at_top B)", "unfolding o_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. sum f (x \\<inter> A)) \\<longlongrightarrow> limA)\n     (finite_subsets_at_top B)", "using tendsto_compose_filtermap finite_subsets_at_top_inter[OF AB] limA tendsto_mono\n        \\<open>(\\<lambda>F. sum f (F \\<inter> A)) = sum f \\<circ> (\\<lambda>F. F \\<inter> A)\\<close>"], ["proof (prove)\nusing this:\n  ((?g \\<circ> ?f) \\<longlongrightarrow> ?T) ?F =\n  (?g \\<longlongrightarrow> ?T) (filtermap ?f ?F)\n  filtermap (\\<lambda>F. F \\<inter> A) (finite_subsets_at_top B)\n  \\<le> finite_subsets_at_top A\n  (sum f \\<longlongrightarrow> limA) (finite_subsets_at_top A)\n  \\<lbrakk>?F \\<le> ?F'; (?f \\<longlongrightarrow> ?l) ?F'\\<rbrakk>\n  \\<Longrightarrow> (?f \\<longlongrightarrow> ?l) ?F\n  (\\<lambda>F. sum f (F \\<inter> A)) =\n  sum f \\<circ> (\\<lambda>F. F \\<inter> A)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. sum f (x \\<inter> A)) \\<longlongrightarrow> limA)\n     (finite_subsets_at_top B)", "by fastforce"], ["proof (state)\nthis:\n  ((sum f \\<circ> (\\<lambda>F. F \\<inter> A)) \\<longlongrightarrow> limA)\n   (finite_subsets_at_top B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((\\<lambda>F. sum f (F \\<inter> A)) \\<longlongrightarrow> limA)\n   (finite_subsets_at_top B)\n\ngoal (2 subgoals):\n 1. infsetsum' f (B - A) = infsetsum' f B - infsetsum' f A\n 2. infsetsum'_converges f (B - A)", "with limB"], ["proof (chain)\npicking this:\n  (sum f \\<longlongrightarrow> limB) (finite_subsets_at_top B)\n  ((\\<lambda>F. sum f (F \\<inter> A)) \\<longlongrightarrow> limA)\n   (finite_subsets_at_top B)", "have \"((\\<lambda>F. sum f F - sum f (F\\<inter>A)) \\<longlongrightarrow> limB - limA) (finite_subsets_at_top B)\""], ["proof (prove)\nusing this:\n  (sum f \\<longlongrightarrow> limB) (finite_subsets_at_top B)\n  ((\\<lambda>F. sum f (F \\<inter> A)) \\<longlongrightarrow> limA)\n   (finite_subsets_at_top B)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>F. sum f F - sum f (F \\<inter> A)) \\<longlongrightarrow>\n     limB - limA)\n     (finite_subsets_at_top B)", "using tendsto_diff"], ["proof (prove)\nusing this:\n  (sum f \\<longlongrightarrow> limB) (finite_subsets_at_top B)\n  ((\\<lambda>F. sum f (F \\<inter> A)) \\<longlongrightarrow> limA)\n   (finite_subsets_at_top B)\n  \\<lbrakk>(?f \\<longlongrightarrow> ?a) ?F;\n   (?g \\<longlongrightarrow> ?b) ?F\\<rbrakk>\n  \\<Longrightarrow> ((\\<lambda>x. ?f x - ?g x) \\<longlongrightarrow>\n                     ?a - ?b)\n                     ?F\n\ngoal (1 subgoal):\n 1. ((\\<lambda>F. sum f F - sum f (F \\<inter> A)) \\<longlongrightarrow>\n     limB - limA)\n     (finite_subsets_at_top B)", "by blast"], ["proof (state)\nthis:\n  ((\\<lambda>F. sum f F - sum f (F \\<inter> A)) \\<longlongrightarrow>\n   limB - limA)\n   (finite_subsets_at_top B)\n\ngoal (2 subgoals):\n 1. infsetsum' f (B - A) = infsetsum' f B - infsetsum' f A\n 2. infsetsum'_converges f (B - A)", "have \"sum f X - sum f (X \\<inter> A) = sum f (X - A)\"\n    if \"finite (X::'a set)\"\n      and \"X \\<subseteq> B\"\n    for X :: \"'a set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f X - sum f (X \\<inter> A) = sum f (X - A)", "using that"], ["proof (prove)\nusing this:\n  finite X\n  X \\<subseteq> B\n\ngoal (1 subgoal):\n 1. sum f X - sum f (X \\<inter> A) = sum f (X - A)", "by (metis add_diff_cancel_left' sum.Int_Diff)"], ["proof (state)\nthis:\n  \\<lbrakk>finite ?X; ?X \\<subseteq> B\\<rbrakk>\n  \\<Longrightarrow> sum f ?X - sum f (?X \\<inter> A) = sum f (?X - A)\n\ngoal (2 subgoals):\n 1. infsetsum' f (B - A) = infsetsum' f B - infsetsum' f A\n 2. infsetsum'_converges f (B - A)", "hence \"\\<forall>\\<^sub>F x in finite_subsets_at_top B. sum f x - sum f (x \\<inter> A) = sum f (x - A)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?X; ?X \\<subseteq> B\\<rbrakk>\n  \\<Longrightarrow> sum f ?X - sum f (?X \\<inter> A) = sum f (?X - A)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in finite_subsets_at_top B.\n       sum f x - sum f (x \\<inter> A) = sum f (x - A)", "by (rule eventually_finite_subsets_at_top_weakI)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in finite_subsets_at_top B.\n     sum f x - sum f (x \\<inter> A) = sum f (x - A)\n\ngoal (2 subgoals):\n 1. infsetsum' f (B - A) = infsetsum' f B - infsetsum' f A\n 2. infsetsum'_converges f (B - A)", "hence \"((\\<lambda>F. sum f (F-A)) \\<longlongrightarrow> limB - limA) (finite_subsets_at_top B)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in finite_subsets_at_top B.\n     sum f x - sum f (x \\<inter> A) = sum f (x - A)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>F. sum f (F - A)) \\<longlongrightarrow> limB - limA)\n     (finite_subsets_at_top B)", "using tendsto_cong [THEN iffD1 , rotated]\n      \\<open>((\\<lambda>F. sum f F - sum f (F \\<inter> A)) \\<longlongrightarrow> limB - limA) (finite_subsets_at_top B)\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in finite_subsets_at_top B.\n     sum f x - sum f (x \\<inter> A) = sum f (x - A)\n  \\<lbrakk>(?f1 \\<longlongrightarrow> ?c1) ?F1;\n   \\<forall>\\<^sub>F x in ?F1. ?f1 x = ?g1 x\\<rbrakk>\n  \\<Longrightarrow> (?g1 \\<longlongrightarrow> ?c1) ?F1\n  ((\\<lambda>F. sum f F - sum f (F \\<inter> A)) \\<longlongrightarrow>\n   limB - limA)\n   (finite_subsets_at_top B)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>F. sum f (F - A)) \\<longlongrightarrow> limB - limA)\n     (finite_subsets_at_top B)", "by fastforce"], ["proof (state)\nthis:\n  ((\\<lambda>F. sum f (F - A)) \\<longlongrightarrow> limB - limA)\n   (finite_subsets_at_top B)\n\ngoal (2 subgoals):\n 1. infsetsum' f (B - A) = infsetsum' f B - infsetsum' f A\n 2. infsetsum'_converges f (B - A)", "hence \"(sum f \\<longlongrightarrow> limB - limA) (filtermap (\\<lambda>F. F-A) (finite_subsets_at_top B))\""], ["proof (prove)\nusing this:\n  ((\\<lambda>F. sum f (F - A)) \\<longlongrightarrow> limB - limA)\n   (finite_subsets_at_top B)\n\ngoal (1 subgoal):\n 1. (sum f \\<longlongrightarrow> limB - limA)\n     (filtermap (\\<lambda>F. F - A) (finite_subsets_at_top B))", "by (subst tendsto_compose_filtermap[symmetric], simp add: o_def)"], ["proof (state)\nthis:\n  (sum f \\<longlongrightarrow> limB - limA)\n   (filtermap (\\<lambda>F. F - A) (finite_subsets_at_top B))\n\ngoal (2 subgoals):\n 1. infsetsum' f (B - A) = infsetsum' f B - infsetsum' f A\n 2. infsetsum'_converges f (B - A)", "hence limBA: \"(sum f \\<longlongrightarrow> limB - limA) (finite_subsets_at_top (B-A))\""], ["proof (prove)\nusing this:\n  (sum f \\<longlongrightarrow> limB - limA)\n   (filtermap (\\<lambda>F. F - A) (finite_subsets_at_top B))\n\ngoal (1 subgoal):\n 1. (sum f \\<longlongrightarrow> limB - limA)\n     (finite_subsets_at_top (B - A))", "using finite_subsets_at_top_minus[OF AB]"], ["proof (prove)\nusing this:\n  (sum f \\<longlongrightarrow> limB - limA)\n   (filtermap (\\<lambda>F. F - A) (finite_subsets_at_top B))\n  finite_subsets_at_top (B - A)\n  \\<le> filtermap (\\<lambda>F. F - A) (finite_subsets_at_top B)\n\ngoal (1 subgoal):\n 1. (sum f \\<longlongrightarrow> limB - limA)\n     (finite_subsets_at_top (B - A))", "by (rule tendsto_mono[rotated])"], ["proof (state)\nthis:\n  (sum f \\<longlongrightarrow> limB - limA) (finite_subsets_at_top (B - A))\n\ngoal (2 subgoals):\n 1. infsetsum' f (B - A) = infsetsum' f B - infsetsum' f A\n 2. infsetsum'_converges f (B - A)", "thus \"infsetsum'_converges f (B-A)\""], ["proof (prove)\nusing this:\n  (sum f \\<longlongrightarrow> limB - limA) (finite_subsets_at_top (B - A))\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f (B - A)", "unfolding infsetsum'_converges_def"], ["proof (prove)\nusing this:\n  (sum f \\<longlongrightarrow> limB - limA) (finite_subsets_at_top (B - A))\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       (sum f \\<longlongrightarrow> x) (finite_subsets_at_top (B - A))", "by auto"], ["proof (state)\nthis:\n  infsetsum'_converges f (B - A)\n\ngoal (1 subgoal):\n 1. infsetsum' f (B - A) = infsetsum' f B - infsetsum' f A", "with limBA"], ["proof (chain)\npicking this:\n  (sum f \\<longlongrightarrow> limB - limA) (finite_subsets_at_top (B - A))\n  infsetsum'_converges f (B - A)", "show \"infsetsum' f (B - A) = limB - limA\""], ["proof (prove)\nusing this:\n  (sum f \\<longlongrightarrow> limB - limA) (finite_subsets_at_top (B - A))\n  infsetsum'_converges f (B - A)\n\ngoal (1 subgoal):\n 1. infsetsum' f (B - A) = limB - limA", "unfolding infsetsum'_def"], ["proof (prove)\nusing this:\n  (sum f \\<longlongrightarrow> limB - limA) (finite_subsets_at_top (B - A))\n  infsetsum'_converges f (B - A)\n\ngoal (1 subgoal):\n 1. (if infsetsum'_converges f (B - A)\n     then Lim (finite_subsets_at_top (B - A)) (sum f) else (0::'b)) =\n    limB - limA", "by (simp add: tendsto_Lim)"], ["proof (state)\nthis:\n  infsetsum' f (B - A) = limB - limA\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infsetsum'_mono_set:\n  fixes f :: \"'a\\<Rightarrow>'b::{ordered_comm_monoid_add,linorder_topology}\"\n  assumes fx0: \"\\<And>x. x\\<in>B-A \\<Longrightarrow> f x \\<ge> 0\"\n    and \"A \\<subseteq> B\"\n    and \"infsetsum'_converges f A\"\n    and \"infsetsum'_converges f B\"\n  shows \"infsetsum' f B \\<ge> infsetsum' f A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum' f A \\<le> infsetsum' f B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. infsetsum' f A \\<le> infsetsum' f B", "define limA limB f' where \"limA = infsetsum' f A\" and \"limB = infsetsum' f B\"\n    and \"f' x = (if x \\<in> A then f x else 0)\" for x"], ["proof (state)\nthis:\n  limA = infsetsum' f A\n  limB = infsetsum' f B\n  f' ?x = (if ?x \\<in> A then f ?x else (0::'b))\n\ngoal (1 subgoal):\n 1. infsetsum' f A \\<le> infsetsum' f B", "have \"infsetsum' f A = infsetsum' f' B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum' f A = infsetsum' f' B", "proof (subst infsetsum'_subset_zero [where f = f' and B = A])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> B - A \\<union> (A - B) \\<Longrightarrow> f' x = (0::'b)\n 2. infsetsum' f A = infsetsum' f' A", "show \"f' x = 0\"\n      if \"x \\<in> B - A \\<union> (A - B)\"\n      for x :: 'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. f' x = (0::'b)", "using that assms(2) f'_def"], ["proof (prove)\nusing this:\n  x \\<in> B - A \\<union> (A - B)\n  A \\<subseteq> B\n  f' ?x = (if ?x \\<in> A then f ?x else (0::'b))\n\ngoal (1 subgoal):\n 1. f' x = (0::'b)", "by auto"], ["proof (state)\nthis:\n  ?x \\<in> B - A \\<union> (A - B) \\<Longrightarrow> f' ?x = (0::'b)\n\ngoal (1 subgoal):\n 1. infsetsum' f A = infsetsum' f' A", "show \"infsetsum' f A = infsetsum' f' A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum' f A = infsetsum' f' A", "by (metis f'_def infsetsum'_cong)"], ["proof (state)\nthis:\n  infsetsum' f A = infsetsum' f' A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  infsetsum' f A = infsetsum' f' B\n\ngoal (1 subgoal):\n 1. infsetsum' f A \\<le> infsetsum' f B", "hence limA_def': \"limA = infsetsum' f' B\""], ["proof (prove)\nusing this:\n  infsetsum' f A = infsetsum' f' B\n\ngoal (1 subgoal):\n 1. limA = infsetsum' f' B", "unfolding limA_def"], ["proof (prove)\nusing this:\n  infsetsum' f A = infsetsum' f' B\n\ngoal (1 subgoal):\n 1. infsetsum' f A = infsetsum' f' B", "by auto"], ["proof (state)\nthis:\n  limA = infsetsum' f' B\n\ngoal (1 subgoal):\n 1. infsetsum' f A \\<le> infsetsum' f B", "have convA': \"infsetsum'_converges f' B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum'_converges f' B", "proof (rule infsetsum'_converges_subset_zero [THEN iffD1 , where A1 = A])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> A - B \\<union> (B - A) \\<Longrightarrow> f' x = (0::'b)\n 2. infsetsum'_converges f' A", "show \"f' x = 0\"\n      if \"x \\<in> A - B \\<union> (B - A)\"\n      for x :: 'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. f' x = (0::'b)", "using that assms(2) f'_def"], ["proof (prove)\nusing this:\n  x \\<in> A - B \\<union> (B - A)\n  A \\<subseteq> B\n  f' ?x = (if ?x \\<in> A then f ?x else (0::'b))\n\ngoal (1 subgoal):\n 1. f' x = (0::'b)", "by auto"], ["proof (state)\nthis:\n  ?x \\<in> A - B \\<union> (B - A) \\<Longrightarrow> f' ?x = (0::'b)\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f' A", "show \"infsetsum'_converges f' A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum'_converges f' A", "by (simp add: assms(3) f'_def infsetsum'_converges_cong)"], ["proof (state)\nthis:\n  infsetsum'_converges f' A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  infsetsum'_converges f' B\n\ngoal (1 subgoal):\n 1. infsetsum' f A \\<le> infsetsum' f B", "from assms"], ["proof (chain)\npicking this:\n  ?x \\<in> B - A \\<Longrightarrow> (0::'b) \\<le> f ?x\n  A \\<subseteq> B\n  infsetsum'_converges f A\n  infsetsum'_converges f B", "have limA: \"(sum f \\<longlongrightarrow> limA) (finite_subsets_at_top A)\" \n    and limB: \"(sum f \\<longlongrightarrow> limB) (finite_subsets_at_top B)\""], ["proof (prove)\nusing this:\n  ?x \\<in> B - A \\<Longrightarrow> (0::'b) \\<le> f ?x\n  A \\<subseteq> B\n  infsetsum'_converges f A\n  infsetsum'_converges f B\n\ngoal (1 subgoal):\n 1. (sum f \\<longlongrightarrow> limA) (finite_subsets_at_top A) &&&\n    (sum f \\<longlongrightarrow> limB) (finite_subsets_at_top B)", "by (auto simp: limA_def limB_def infsetsum'_converges_def infsetsum'_def tendsto_Lim)"], ["proof (state)\nthis:\n  (sum f \\<longlongrightarrow> limA) (finite_subsets_at_top A)\n  (sum f \\<longlongrightarrow> limB) (finite_subsets_at_top B)\n\ngoal (1 subgoal):\n 1. infsetsum' f A \\<le> infsetsum' f B", "have limA': \"(sum f' \\<longlongrightarrow> limA) (finite_subsets_at_top B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (sum f' \\<longlongrightarrow> limA) (finite_subsets_at_top B)", "using finite_subsets_at_top_neq_bot tendsto_Lim convA'"], ["proof (prove)\nusing this:\n  finite_subsets_at_top ?A \\<noteq> bot\n  \\<lbrakk>?net \\<noteq> bot; (?f \\<longlongrightarrow> ?l) ?net\\<rbrakk>\n  \\<Longrightarrow> Lim ?net ?f = ?l\n  infsetsum'_converges f' B\n\ngoal (1 subgoal):\n 1. (sum f' \\<longlongrightarrow> limA) (finite_subsets_at_top B)", "unfolding limA_def' infsetsum'_def  infsetsum'_converges_def"], ["proof (prove)\nusing this:\n  finite_subsets_at_top ?A \\<noteq> bot\n  \\<lbrakk>?net \\<noteq> bot; (?f \\<longlongrightarrow> ?l) ?net\\<rbrakk>\n  \\<Longrightarrow> Lim ?net ?f = ?l\n  \\<exists>x. (sum f' \\<longlongrightarrow> x) (finite_subsets_at_top B)\n\ngoal (1 subgoal):\n 1. (sum f' \\<longlongrightarrow>\n     (if \\<exists>x.\n            (sum f' \\<longlongrightarrow> x) (finite_subsets_at_top B)\n      then Lim (finite_subsets_at_top B) (sum f') else (0::'b)))\n     (finite_subsets_at_top B)", "by fastforce"], ["proof (state)\nthis:\n  (sum f' \\<longlongrightarrow> limA) (finite_subsets_at_top B)\n\ngoal (1 subgoal):\n 1. infsetsum' f A \\<le> infsetsum' f B", "have \"f' i \\<le> f i\"\n    if \"i \\<in> X\" and \"X \\<subseteq> B\"\n    for i :: 'a and X"], ["proof (prove)\ngoal (1 subgoal):\n 1. f' i \\<le> f i", "unfolding f'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if i \\<in> A then f i else (0::'b)) \\<le> f i", "using fx0 that"], ["proof (prove)\nusing this:\n  ?x \\<in> B - A \\<Longrightarrow> (0::'b) \\<le> f ?x\n  i \\<in> X\n  X \\<subseteq> B\n\ngoal (1 subgoal):\n 1. (if i \\<in> A then f i else (0::'b)) \\<le> f i", "using \\<open>X \\<subseteq> B\\<close>"], ["proof (prove)\nusing this:\n  ?x \\<in> B - A \\<Longrightarrow> (0::'b) \\<le> f ?x\n  i \\<in> X\n  X \\<subseteq> B\n  X \\<subseteq> B\n\ngoal (1 subgoal):\n 1. (if i \\<in> A then f i else (0::'b)) \\<le> f i", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>?i \\<in> ?X; ?X \\<subseteq> B\\<rbrakk>\n  \\<Longrightarrow> f' ?i \\<le> f ?i\n\ngoal (1 subgoal):\n 1. infsetsum' f A \\<le> infsetsum' f B", "hence \"sum f' X \\<le> sum f X\"\n    if \"finite (X::'a set)\"\n      and \"X \\<subseteq> B\"\n    for X :: \"'a set\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?i \\<in> ?X; ?X \\<subseteq> B\\<rbrakk>\n  \\<Longrightarrow> f' ?i \\<le> f ?i\n\ngoal (1 subgoal):\n 1. sum f' X \\<le> sum f X", "using sum_mono"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i \\<in> ?X; ?X \\<subseteq> B\\<rbrakk>\n  \\<Longrightarrow> f' ?i \\<le> f ?i\n  (\\<And>i. i \\<in> ?K \\<Longrightarrow> ?f i \\<le> ?g i) \\<Longrightarrow>\n  sum ?f ?K \\<le> sum ?g ?K\n\ngoal (1 subgoal):\n 1. sum f' X \\<le> sum f X", "by (simp add: sum_mono that(2))"], ["proof (state)\nthis:\n  \\<lbrakk>finite ?X; ?X \\<subseteq> B\\<rbrakk>\n  \\<Longrightarrow> sum f' ?X \\<le> sum f ?X\n\ngoal (1 subgoal):\n 1. infsetsum' f A \\<le> infsetsum' f B", "hence sumf'_leq_sumf: \"\\<forall>\\<^sub>F x in finite_subsets_at_top B. sum f' x \\<le> sum f x\""], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?X; ?X \\<subseteq> B\\<rbrakk>\n  \\<Longrightarrow> sum f' ?X \\<le> sum f ?X\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in finite_subsets_at_top B. sum f' x \\<le> sum f x", "by (rule eventually_finite_subsets_at_top_weakI)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in finite_subsets_at_top B. sum f' x \\<le> sum f x\n\ngoal (1 subgoal):\n 1. infsetsum' f A \\<le> infsetsum' f B", "show \"limA \\<le> limB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. limA \\<le> limB", "using finite_subsets_at_top_neq_bot limB limA' sumf'_leq_sumf"], ["proof (prove)\nusing this:\n  finite_subsets_at_top ?A \\<noteq> bot\n  (sum f \\<longlongrightarrow> limB) (finite_subsets_at_top B)\n  (sum f' \\<longlongrightarrow> limA) (finite_subsets_at_top B)\n  \\<forall>\\<^sub>F x in finite_subsets_at_top B. sum f' x \\<le> sum f x\n\ngoal (1 subgoal):\n 1. limA \\<le> limB", "by (rule tendsto_le)"], ["proof (state)\nthis:\n  limA \\<le> limB\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infsetsum'_converges_finite[simp]:\n  assumes \"finite F\"\n  shows \"infsetsum'_converges f F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum'_converges f F", "unfolding infsetsum'_converges_def finite_subsets_at_top_finite[OF assms]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. (sum f \\<longlongrightarrow> x) (principal {F})", "using tendsto_principal_singleton"], ["proof (prove)\nusing this:\n  (?f \\<longlongrightarrow> ?f ?x) (principal {?x})\n\ngoal (1 subgoal):\n 1. \\<exists>x. (sum f \\<longlongrightarrow> x) (principal {F})", "by fastforce"], ["", "lemma infsetsum'_finite[simp]:\n  assumes \"finite F\"\n  shows \"infsetsum' f F = sum f F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum' f F = sum f F", "using assms"], ["proof (prove)\nusing this:\n  finite F\n\ngoal (1 subgoal):\n 1. infsetsum' f F = sum f F", "by (auto intro: tendsto_Lim simp: finite_subsets_at_top_finite infsetsum'_def principal_eq_bot_iff tendsto_principal_singleton)"], ["", "lemma infsetsum'_approx_sum:\n  fixes f :: \"'a \\<Rightarrow> 'b::{comm_monoid_add,metric_space}\"\n  assumes \"infsetsum'_converges f A\" and \"\\<epsilon> > 0\"\n  shows \"\\<exists>F. finite F \\<and> F \\<subseteq> A \\<and> dist (sum f F) (infsetsum' f A) \\<le> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>F.\n       finite F \\<and>\n       F \\<subseteq> A \\<and>\n       dist (sum f F) (infsetsum' f A) \\<le> \\<epsilon>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>F.\n       finite F \\<and>\n       F \\<subseteq> A \\<and>\n       dist (sum f F) (infsetsum' f A) \\<le> \\<epsilon>", "have \"infsetsum'_converges f A \\<Longrightarrow>\n    0 < \\<epsilon> \\<Longrightarrow> (sum f \\<longlongrightarrow> Lim (finite_subsets_at_top A) (sum f)) (finite_subsets_at_top A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>infsetsum'_converges f A; 0 < \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> (sum f \\<longlongrightarrow>\n                       Lim (finite_subsets_at_top A) (sum f))\n                       (finite_subsets_at_top A)", "unfolding infsetsum'_converges_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>x.\n                (sum f \\<longlongrightarrow> x) (finite_subsets_at_top A);\n     0 < \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> (sum f \\<longlongrightarrow>\n                       Lim (finite_subsets_at_top A) (sum f))\n                       (finite_subsets_at_top A)", "using Lim_trivial_limit tendsto_Lim"], ["proof (prove)\nusing this:\n  ?net = bot \\<Longrightarrow> (?f \\<longlongrightarrow> ?l) ?net\n  \\<lbrakk>?net \\<noteq> bot; (?f \\<longlongrightarrow> ?l) ?net\\<rbrakk>\n  \\<Longrightarrow> Lim ?net ?f = ?l\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>x.\n                (sum f \\<longlongrightarrow> x) (finite_subsets_at_top A);\n     0 < \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> (sum f \\<longlongrightarrow>\n                       Lim (finite_subsets_at_top A) (sum f))\n                       (finite_subsets_at_top A)", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>infsetsum'_converges f A; 0 < \\<epsilon>\\<rbrakk>\n  \\<Longrightarrow> (sum f \\<longlongrightarrow>\n                     Lim (finite_subsets_at_top A) (sum f))\n                     (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. \\<exists>F.\n       finite F \\<and>\n       F \\<subseteq> A \\<and>\n       dist (sum f F) (infsetsum' f A) \\<le> \\<epsilon>", "hence \"(sum f \\<longlongrightarrow> infsetsum' f A) (finite_subsets_at_top A)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>infsetsum'_converges f A; 0 < \\<epsilon>\\<rbrakk>\n  \\<Longrightarrow> (sum f \\<longlongrightarrow>\n                     Lim (finite_subsets_at_top A) (sum f))\n                     (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. (sum f \\<longlongrightarrow> infsetsum' f A) (finite_subsets_at_top A)", "unfolding infsetsum'_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>infsetsum'_converges f A; 0 < \\<epsilon>\\<rbrakk>\n  \\<Longrightarrow> (sum f \\<longlongrightarrow>\n                     Lim (finite_subsets_at_top A) (sum f))\n                     (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. (sum f \\<longlongrightarrow>\n     (if infsetsum'_converges f A then Lim (finite_subsets_at_top A) (sum f)\n      else (0::'b)))\n     (finite_subsets_at_top A)", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>infsetsum'_converges f A; 0 < \\<epsilon>\\<rbrakk>\n  \\<Longrightarrow> (sum f \\<longlongrightarrow>\n                     Lim (finite_subsets_at_top A) (sum f))\n                     (finite_subsets_at_top A)\n  infsetsum'_converges f A\n  0 < \\<epsilon>\n\ngoal (1 subgoal):\n 1. (sum f \\<longlongrightarrow>\n     (if infsetsum'_converges f A then Lim (finite_subsets_at_top A) (sum f)\n      else (0::'b)))\n     (finite_subsets_at_top A)", "by simp"], ["proof (state)\nthis:\n  (sum f \\<longlongrightarrow> infsetsum' f A) (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. \\<exists>F.\n       finite F \\<and>\n       F \\<subseteq> A \\<and>\n       dist (sum f F) (infsetsum' f A) \\<le> \\<epsilon>", "hence \"\\<forall>\\<^sub>F F in (finite_subsets_at_top A). dist (sum f F) (infsetsum' f A) < \\<epsilon>\""], ["proof (prove)\nusing this:\n  (sum f \\<longlongrightarrow> infsetsum' f A) (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F F in finite_subsets_at_top A.\n       dist (sum f F) (infsetsum' f A) < \\<epsilon>", "using assms(2)"], ["proof (prove)\nusing this:\n  (sum f \\<longlongrightarrow> infsetsum' f A) (finite_subsets_at_top A)\n  0 < \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F F in finite_subsets_at_top A.\n       dist (sum f F) (infsetsum' f A) < \\<epsilon>", "by (rule tendstoD)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F F in finite_subsets_at_top A.\n     dist (sum f F) (infsetsum' f A) < \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<exists>F.\n       finite F \\<and>\n       F \\<subseteq> A \\<and>\n       dist (sum f F) (infsetsum' f A) \\<le> \\<epsilon>", "have \"finite X \\<Longrightarrow>\n         X \\<subseteq> A \\<Longrightarrow>\n         \\<forall>Y. finite Y \\<and> X \\<subseteq> Y \\<and> Y \\<subseteq> A \\<longrightarrow> dist (sum f Y) (infsetsum' f A) < \\<epsilon> \\<Longrightarrow>\n         \\<exists>F. finite F \\<and> F \\<subseteq> A \\<and> dist (sum f F) (infsetsum' f A) \\<le> \\<epsilon>\"\n    for X"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite X; X \\<subseteq> A;\n     \\<forall>Y.\n        finite Y \\<and>\n        X \\<subseteq> Y \\<and> Y \\<subseteq> A \\<longrightarrow>\n        dist (sum f Y) (infsetsum' f A) < \\<epsilon>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>F.\n                         finite F \\<and>\n                         F \\<subseteq> A \\<and>\n                         dist (sum f F) (infsetsum' f A) \\<le> \\<epsilon>", "by fastforce"], ["proof (state)\nthis:\n  \\<lbrakk>finite ?X; ?X \\<subseteq> A;\n   \\<forall>Y.\n      finite Y \\<and>\n      ?X \\<subseteq> Y \\<and> Y \\<subseteq> A \\<longrightarrow>\n      dist (sum f Y) (infsetsum' f A) < \\<epsilon>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>F.\n                       finite F \\<and>\n                       F \\<subseteq> A \\<and>\n                       dist (sum f F) (infsetsum' f A) \\<le> \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<exists>F.\n       finite F \\<and>\n       F \\<subseteq> A \\<and>\n       dist (sum f F) (infsetsum' f A) \\<le> \\<epsilon>", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?X; ?X \\<subseteq> A;\n   \\<forall>Y.\n      finite Y \\<and>\n      ?X \\<subseteq> Y \\<and> Y \\<subseteq> A \\<longrightarrow>\n      dist (sum f Y) (infsetsum' f A) < \\<epsilon>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>F.\n                       finite F \\<and>\n                       F \\<subseteq> A \\<and>\n                       dist (sum f F) (infsetsum' f A) \\<le> \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<exists>F.\n       finite F \\<and>\n       F \\<subseteq> A \\<and>\n       dist (sum f F) (infsetsum' f A) \\<le> \\<epsilon>", "using eventually_finite_subsets_at_top"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?X; ?X \\<subseteq> A;\n   \\<forall>Y.\n      finite Y \\<and>\n      ?X \\<subseteq> Y \\<and> Y \\<subseteq> A \\<longrightarrow>\n      dist (sum f Y) (infsetsum' f A) < \\<epsilon>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>F.\n                       finite F \\<and>\n                       F \\<subseteq> A \\<and>\n                       dist (sum f F) (infsetsum' f A) \\<le> \\<epsilon>\n  eventually ?P (finite_subsets_at_top ?A) =\n  (\\<exists>X.\n      finite X \\<and>\n      X \\<subseteq> ?A \\<and>\n      (\\<forall>Y.\n          finite Y \\<and>\n          X \\<subseteq> Y \\<and> Y \\<subseteq> ?A \\<longrightarrow>\n          ?P Y))\n\ngoal (1 subgoal):\n 1. \\<exists>F.\n       finite F \\<and>\n       F \\<subseteq> A \\<and>\n       dist (sum f F) (infsetsum' f A) \\<le> \\<epsilon>", "by (metis (no_types, lifting)\n        \\<open>\\<forall>\\<^sub>F F in finite_subsets_at_top A. dist (sum f F) (infsetsum' f A) < \\<epsilon>\\<close>)"], ["proof (state)\nthis:\n  \\<exists>F.\n     finite F \\<and>\n     F \\<subseteq> A \\<and> dist (sum f F) (infsetsum' f A) \\<le> \\<epsilon>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma norm_infsetsum'_bound:\n  fixes f :: \"'b \\<Rightarrow> 'a::real_normed_vector\"\n    and A :: \"'b set\"\n  assumes a1: \"infsetsum'_converges (\\<lambda>x. norm (f x)) A\"\n  shows \"norm (infsetsum' f A) \\<le> (infsetsum' (\\<lambda>x. norm (f x)) A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (infsetsum' f A) \\<le> infsetsum' (\\<lambda>x. norm (f x)) A", "proof(cases \"infsetsum'_converges f A\")"], ["proof (state)\ngoal (2 subgoals):\n 1. infsetsum'_converges f A \\<Longrightarrow>\n    norm (infsetsum' f A) \\<le> infsetsum' (\\<lambda>x. norm (f x)) A\n 2. \\<not> infsetsum'_converges f A \\<Longrightarrow>\n    norm (infsetsum' f A) \\<le> infsetsum' (\\<lambda>x. norm (f x)) A", "case True"], ["proof (state)\nthis:\n  infsetsum'_converges f A\n\ngoal (2 subgoals):\n 1. infsetsum'_converges f A \\<Longrightarrow>\n    norm (infsetsum' f A) \\<le> infsetsum' (\\<lambda>x. norm (f x)) A\n 2. \\<not> infsetsum'_converges f A \\<Longrightarrow>\n    norm (infsetsum' f A) \\<le> infsetsum' (\\<lambda>x. norm (f x)) A", "have \"norm (infsetsum' f A) \\<le> (infsetsum' (\\<lambda>x. norm (f x)) A) + \\<epsilon>\" if \"\\<epsilon>>0\" for \\<epsilon>"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (infsetsum' f A)\n    \\<le> infsetsum' (\\<lambda>x. norm (f x)) A + \\<epsilon>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. norm (infsetsum' f A)\n    \\<le> infsetsum' (\\<lambda>x. norm (f x)) A + \\<epsilon>", "have \"\\<exists>F. norm (infsetsum' f A - sum f F) \\<le> \\<epsilon> \\<and> finite F \\<and> F \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>F.\n       norm (infsetsum' f A - sum f F) \\<le> \\<epsilon> \\<and>\n       finite F \\<and> F \\<subseteq> A", "using infsetsum'_approx_sum[where A=A and f=f and \\<epsilon>=\"\\<epsilon>\"] a1 True \\<open>0 < \\<epsilon>\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>infsetsum'_converges f A; 0 < \\<epsilon>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>F.\n                       finite F \\<and>\n                       F \\<subseteq> A \\<and>\n                       dist (sum f F) (infsetsum' f A) \\<le> \\<epsilon>\n  infsetsum'_converges (\\<lambda>x. norm (f x)) A\n  infsetsum'_converges f A\n  0 < \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<exists>F.\n       norm (infsetsum' f A - sum f F) \\<le> \\<epsilon> \\<and>\n       finite F \\<and> F \\<subseteq> A", "by (metis dist_commute dist_norm)"], ["proof (state)\nthis:\n  \\<exists>F.\n     norm (infsetsum' f A - sum f F) \\<le> \\<epsilon> \\<and>\n     finite F \\<and> F \\<subseteq> A\n\ngoal (1 subgoal):\n 1. norm (infsetsum' f A)\n    \\<le> infsetsum' (\\<lambda>x. norm (f x)) A + \\<epsilon>", "then"], ["proof (chain)\npicking this:\n  \\<exists>F.\n     norm (infsetsum' f A - sum f F) \\<le> \\<epsilon> \\<and>\n     finite F \\<and> F \\<subseteq> A", "obtain F where \"norm (infsetsum' f A - sum f F) \\<le> \\<epsilon>\"\n      and \"finite F\" and \"F \\<subseteq> A\""], ["proof (prove)\nusing this:\n  \\<exists>F.\n     norm (infsetsum' f A - sum f F) \\<le> \\<epsilon> \\<and>\n     finite F \\<and> F \\<subseteq> A\n\ngoal (1 subgoal):\n 1. (\\<And>F.\n        \\<lbrakk>norm (infsetsum' f A - sum f F) \\<le> \\<epsilon>; finite F;\n         F \\<subseteq> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp add: atomize_elim)"], ["proof (state)\nthis:\n  norm (infsetsum' f A - sum f F) \\<le> \\<epsilon>\n  finite F\n  F \\<subseteq> A\n\ngoal (1 subgoal):\n 1. norm (infsetsum' f A)\n    \\<le> infsetsum' (\\<lambda>x. norm (f x)) A + \\<epsilon>", "hence \"norm (infsetsum' f A) \\<le> norm (sum f F) + \\<epsilon>\""], ["proof (prove)\nusing this:\n  norm (infsetsum' f A - sum f F) \\<le> \\<epsilon>\n  finite F\n  F \\<subseteq> A\n\ngoal (1 subgoal):\n 1. norm (infsetsum' f A) \\<le> norm (sum f F) + \\<epsilon>", "by (smt norm_triangle_sub)"], ["proof (state)\nthis:\n  norm (infsetsum' f A) \\<le> norm (sum f F) + \\<epsilon>\n\ngoal (1 subgoal):\n 1. norm (infsetsum' f A)\n    \\<le> infsetsum' (\\<lambda>x. norm (f x)) A + \\<epsilon>", "also"], ["proof (state)\nthis:\n  norm (infsetsum' f A) \\<le> norm (sum f F) + \\<epsilon>\n\ngoal (1 subgoal):\n 1. norm (infsetsum' f A)\n    \\<le> infsetsum' (\\<lambda>x. norm (f x)) A + \\<epsilon>", "have \"\\<dots> \\<le> sum (\\<lambda>x. norm (f x)) F + \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (sum f F) + \\<epsilon>\n    \\<le> (\\<Sum>x\\<in>F. norm (f x)) + \\<epsilon>", "using norm_sum"], ["proof (prove)\nusing this:\n  norm (sum ?f ?A) \\<le> (\\<Sum>i\\<in>?A. norm (?f i))\n\ngoal (1 subgoal):\n 1. norm (sum f F) + \\<epsilon>\n    \\<le> (\\<Sum>x\\<in>F. norm (f x)) + \\<epsilon>", "by auto"], ["proof (state)\nthis:\n  norm (sum f F) + \\<epsilon> \\<le> (\\<Sum>x\\<in>F. norm (f x)) + \\<epsilon>\n\ngoal (1 subgoal):\n 1. norm (infsetsum' f A)\n    \\<le> infsetsum' (\\<lambda>x. norm (f x)) A + \\<epsilon>", "also"], ["proof (state)\nthis:\n  norm (sum f F) + \\<epsilon> \\<le> (\\<Sum>x\\<in>F. norm (f x)) + \\<epsilon>\n\ngoal (1 subgoal):\n 1. norm (infsetsum' f A)\n    \\<le> infsetsum' (\\<lambda>x. norm (f x)) A + \\<epsilon>", "have \"\\<dots> \\<le> (infsetsum' (\\<lambda>x. norm (f x)) A) + \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>F. norm (f x)) + \\<epsilon>\n    \\<le> infsetsum' (\\<lambda>x. norm (f x)) A + \\<epsilon>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>F. norm (f x)) + \\<epsilon>\n    \\<le> infsetsum' (\\<lambda>x. norm (f x)) A + \\<epsilon>", "have \"infsetsum' (\\<lambda>x. norm (f x)) F \\<le> infsetsum' (\\<lambda>x. norm (f x)) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum' (\\<lambda>x. norm (f x)) F\n    \\<le> infsetsum' (\\<lambda>x. norm (f x)) A", "proof (rule infsetsum'_mono_set)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x. x \\<in> A - F \\<Longrightarrow> 0 \\<le> norm (f x)\n 2. F \\<subseteq> A\n 3. infsetsum'_converges (\\<lambda>x. norm (f x)) F\n 4. infsetsum'_converges (\\<lambda>x. norm (f x)) A", "show \"0 \\<le> norm (f x)\"\n          if \"x \\<in> A - F\"\n          for x :: 'b"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> norm (f x)", "using that"], ["proof (prove)\nusing this:\n  x \\<in> A - F\n\ngoal (1 subgoal):\n 1. 0 \\<le> norm (f x)", "by simp"], ["proof (state)\nthis:\n  ?x \\<in> A - F \\<Longrightarrow> 0 \\<le> norm (f ?x)\n\ngoal (3 subgoals):\n 1. F \\<subseteq> A\n 2. infsetsum'_converges (\\<lambda>x. norm (f x)) F\n 3. infsetsum'_converges (\\<lambda>x. norm (f x)) A", "show \"F \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<subseteq> A", "by (simp add: \\<open>F \\<subseteq> A\\<close>)"], ["proof (state)\nthis:\n  F \\<subseteq> A\n\ngoal (2 subgoals):\n 1. infsetsum'_converges (\\<lambda>x. norm (f x)) F\n 2. infsetsum'_converges (\\<lambda>x. norm (f x)) A", "show \"infsetsum'_converges (\\<lambda>x. norm (f x)) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum'_converges (\\<lambda>x. norm (f x)) F", "using \\<open>finite F\\<close>"], ["proof (prove)\nusing this:\n  finite F\n\ngoal (1 subgoal):\n 1. infsetsum'_converges (\\<lambda>x. norm (f x)) F", "by auto"], ["proof (state)\nthis:\n  infsetsum'_converges (\\<lambda>x. norm (f x)) F\n\ngoal (1 subgoal):\n 1. infsetsum'_converges (\\<lambda>x. norm (f x)) A", "show \"infsetsum'_converges (\\<lambda>x. norm (f x)) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum'_converges (\\<lambda>x. norm (f x)) A", "by (simp add: assms)"], ["proof (state)\nthis:\n  infsetsum'_converges (\\<lambda>x. norm (f x)) A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  infsetsum' (\\<lambda>x. norm (f x)) F\n  \\<le> infsetsum' (\\<lambda>x. norm (f x)) A\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>F. norm (f x)) + \\<epsilon>\n    \\<le> infsetsum' (\\<lambda>x. norm (f x)) A + \\<epsilon>", "thus ?thesis"], ["proof (prove)\nusing this:\n  infsetsum' (\\<lambda>x. norm (f x)) F\n  \\<le> infsetsum' (\\<lambda>x. norm (f x)) A\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>F. norm (f x)) + \\<epsilon>\n    \\<le> infsetsum' (\\<lambda>x. norm (f x)) A + \\<epsilon>", "by (simp_all flip: infsetsum'_finite add: \\<open>finite F\\<close>)"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>F. norm (f x)) + \\<epsilon>\n  \\<le> infsetsum' (\\<lambda>x. norm (f x)) A + \\<epsilon>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>F. norm (f x)) + \\<epsilon>\n  \\<le> infsetsum' (\\<lambda>x. norm (f x)) A + \\<epsilon>\n\ngoal (1 subgoal):\n 1. norm (infsetsum' f A)\n    \\<le> infsetsum' (\\<lambda>x. norm (f x)) A + \\<epsilon>", "finally"], ["proof (chain)\npicking this:\n  norm (infsetsum' f A)\n  \\<le> infsetsum' (\\<lambda>x. norm (f x)) A + \\<epsilon>", "show ?thesis"], ["proof (prove)\nusing this:\n  norm (infsetsum' f A)\n  \\<le> infsetsum' (\\<lambda>x. norm (f x)) A + \\<epsilon>\n\ngoal (1 subgoal):\n 1. norm (infsetsum' f A)\n    \\<le> infsetsum' (\\<lambda>x. norm (f x)) A + \\<epsilon>", "by assumption"], ["proof (state)\nthis:\n  norm (infsetsum' f A)\n  \\<le> infsetsum' (\\<lambda>x. norm (f x)) A + \\<epsilon>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < ?\\<epsilon> \\<Longrightarrow>\n  norm (infsetsum' f A)\n  \\<le> infsetsum' (\\<lambda>x. norm (f x)) A + ?\\<epsilon>\n\ngoal (2 subgoals):\n 1. infsetsum'_converges f A \\<Longrightarrow>\n    norm (infsetsum' f A) \\<le> infsetsum' (\\<lambda>x. norm (f x)) A\n 2. \\<not> infsetsum'_converges f A \\<Longrightarrow>\n    norm (infsetsum' f A) \\<le> infsetsum' (\\<lambda>x. norm (f x)) A", "thus ?thesis"], ["proof (prove)\nusing this:\n  0 < ?\\<epsilon> \\<Longrightarrow>\n  norm (infsetsum' f A)\n  \\<le> infsetsum' (\\<lambda>x. norm (f x)) A + ?\\<epsilon>\n\ngoal (1 subgoal):\n 1. norm (infsetsum' f A) \\<le> infsetsum' (\\<lambda>x. norm (f x)) A", "using linordered_field_class.field_le_epsilon"], ["proof (prove)\nusing this:\n  0 < ?\\<epsilon> \\<Longrightarrow>\n  norm (infsetsum' f A)\n  \\<le> infsetsum' (\\<lambda>x. norm (f x)) A + ?\\<epsilon>\n  (\\<And>e.\n      (0::?'a) < e \\<Longrightarrow> ?x \\<le> ?y + e) \\<Longrightarrow>\n  ?x \\<le> ?y\n\ngoal (1 subgoal):\n 1. norm (infsetsum' f A) \\<le> infsetsum' (\\<lambda>x. norm (f x)) A", "by blast"], ["proof (state)\nthis:\n  norm (infsetsum' f A) \\<le> infsetsum' (\\<lambda>x. norm (f x)) A\n\ngoal (1 subgoal):\n 1. \\<not> infsetsum'_converges f A \\<Longrightarrow>\n    norm (infsetsum' f A) \\<le> infsetsum' (\\<lambda>x. norm (f x)) A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> infsetsum'_converges f A \\<Longrightarrow>\n    norm (infsetsum' f A) \\<le> infsetsum' (\\<lambda>x. norm (f x)) A", "case False"], ["proof (state)\nthis:\n  \\<not> infsetsum'_converges f A\n\ngoal (1 subgoal):\n 1. \\<not> infsetsum'_converges f A \\<Longrightarrow>\n    norm (infsetsum' f A) \\<le> infsetsum' (\\<lambda>x. norm (f x)) A", "obtain t where t_def: \"(sum (\\<lambda>x. norm (f x)) \\<longlongrightarrow> t) (finite_subsets_at_top A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t.\n        (sum (\\<lambda>x. norm (f x)) \\<longlongrightarrow> t)\n         (finite_subsets_at_top A) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using a1"], ["proof (prove)\nusing this:\n  infsetsum'_converges (\\<lambda>x. norm (f x)) A\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        (sum (\\<lambda>x. norm (f x)) \\<longlongrightarrow> t)\n         (finite_subsets_at_top A) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding infsetsum'_converges_def"], ["proof (prove)\nusing this:\n  \\<exists>x.\n     (sum (\\<lambda>x. norm (f x)) \\<longlongrightarrow> x)\n      (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        (sum (\\<lambda>x. norm (f x)) \\<longlongrightarrow> t)\n         (finite_subsets_at_top A) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (sum (\\<lambda>x. norm (f x)) \\<longlongrightarrow> t)\n   (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. \\<not> infsetsum'_converges f A \\<Longrightarrow>\n    norm (infsetsum' f A) \\<le> infsetsum' (\\<lambda>x. norm (f x)) A", "have sumpos: \"sum (\\<lambda>x. norm (f x)) X \\<ge> 0\"\n    for X"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> (\\<Sum>x\\<in>X. norm (f x))", "by (simp add: sum_nonneg)"], ["proof (state)\nthis:\n  0 \\<le> (\\<Sum>x\\<in>?X. norm (f x))\n\ngoal (1 subgoal):\n 1. \\<not> infsetsum'_converges f A \\<Longrightarrow>\n    norm (infsetsum' f A) \\<le> infsetsum' (\\<lambda>x. norm (f x)) A", "have tgeq0:\"t \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> t", "proof(rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> t \\<Longrightarrow> False", "define S::\"real set\" where \"S = {s. s < 0}\""], ["proof (state)\nthis:\n  S = {s. s < 0}\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> t \\<Longrightarrow> False", "assume \"\\<not> 0 \\<le> t\""], ["proof (state)\nthis:\n  \\<not> 0 \\<le> t\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> t \\<Longrightarrow> False", "hence \"t < 0\""], ["proof (prove)\nusing this:\n  \\<not> 0 \\<le> t\n\ngoal (1 subgoal):\n 1. t < 0", "by simp"], ["proof (state)\nthis:\n  t < 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> t \\<Longrightarrow> False", "hence \"t \\<in> S\""], ["proof (prove)\nusing this:\n  t < 0\n\ngoal (1 subgoal):\n 1. t \\<in> S", "unfolding S_def"], ["proof (prove)\nusing this:\n  t < 0\n\ngoal (1 subgoal):\n 1. t \\<in> {s. s < 0}", "by blast"], ["proof (state)\nthis:\n  t \\<in> S\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> t \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  t \\<in> S\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> t \\<Longrightarrow> False", "have \"open S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. open S", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. open S", "have \"closed {s::real. s \\<ge> 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closed {s. 0 \\<le> s}", "using Elementary_Topology.closed_sequential_limits[where S = \"{s::real. s \\<ge> 0}\"]"], ["proof (prove)\nusing this:\n  closed {s. 0 \\<le> s} =\n  (\\<forall>x l.\n      (\\<forall>n. x n \\<in> {s. 0 \\<le> s}) \\<and>\n      x \\<longlonglongrightarrow> l \\<longrightarrow>\n      l \\<in> {s. 0 \\<le> s})\n\ngoal (1 subgoal):\n 1. closed {s. 0 \\<le> s}", "by (metis Lim_bounded2 mem_Collect_eq)"], ["proof (state)\nthis:\n  closed {s. 0 \\<le> s}\n\ngoal (1 subgoal):\n 1. open S", "moreover"], ["proof (state)\nthis:\n  closed {s. 0 \\<le> s}\n\ngoal (1 subgoal):\n 1. open S", "have \"{s::real. s \\<ge> 0} = UNIV - S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {s. 0 \\<le> s} = UNIV - S", "unfolding S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {s. 0 \\<le> s} = UNIV - {s. s < 0}", "by auto"], ["proof (state)\nthis:\n  {s. 0 \\<le> s} = UNIV - S\n\ngoal (1 subgoal):\n 1. open S", "ultimately"], ["proof (chain)\npicking this:\n  closed {s. 0 \\<le> s}\n  {s. 0 \\<le> s} = UNIV - S", "have \"closed (UNIV - S)\""], ["proof (prove)\nusing this:\n  closed {s. 0 \\<le> s}\n  {s. 0 \\<le> s} = UNIV - S\n\ngoal (1 subgoal):\n 1. closed (UNIV - S)", "by simp"], ["proof (state)\nthis:\n  closed (UNIV - S)\n\ngoal (1 subgoal):\n 1. open S", "thus ?thesis"], ["proof (prove)\nusing this:\n  closed (UNIV - S)\n\ngoal (1 subgoal):\n 1. open S", "by (simp add: Compl_eq_Diff_UNIV open_closed)"], ["proof (state)\nthis:\n  open S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  open S\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> t \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  t \\<in> S\n  open S", "have \"\\<forall>\\<^sub>F X in finite_subsets_at_top A. (\\<Sum>x\\<in>X. norm (f x)) \\<in> S\""], ["proof (prove)\nusing this:\n  t \\<in> S\n  open S\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F X in finite_subsets_at_top A.\n       (\\<Sum>x\\<in>X. norm (f x)) \\<in> S", "using t_def"], ["proof (prove)\nusing this:\n  t \\<in> S\n  open S\n  (sum (\\<lambda>x. norm (f x)) \\<longlongrightarrow> t)\n   (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F X in finite_subsets_at_top A.\n       (\\<Sum>x\\<in>X. norm (f x)) \\<in> S", "unfolding tendsto_def"], ["proof (prove)\nusing this:\n  t \\<in> S\n  open S\n  \\<forall>S.\n     open S \\<longrightarrow>\n     t \\<in> S \\<longrightarrow>\n     (\\<forall>\\<^sub>F x in finite_subsets_at_top A.\n         (\\<Sum>x\\<in>x. norm (f x)) \\<in> S)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F X in finite_subsets_at_top A.\n       (\\<Sum>x\\<in>X. norm (f x)) \\<in> S", "by blast"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F X in finite_subsets_at_top A.\n     (\\<Sum>x\\<in>X. norm (f x)) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> t \\<Longrightarrow> False", "hence \"\\<exists>X. (\\<Sum>x\\<in>X. norm (f x)) \\<in> S\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F X in finite_subsets_at_top A.\n     (\\<Sum>x\\<in>X. norm (f x)) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<exists>X. (\\<Sum>x\\<in>X. norm (f x)) \\<in> S", "by (metis (no_types, lifting) False eventually_mono filterlim_iff infsetsum'_converges_def)"], ["proof (state)\nthis:\n  \\<exists>X. (\\<Sum>x\\<in>X. norm (f x)) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> t \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>X. (\\<Sum>x\\<in>X. norm (f x)) \\<in> S", "obtain X where \"(\\<Sum>x\\<in>X. norm (f x)) \\<in> S\""], ["proof (prove)\nusing this:\n  \\<exists>X. (\\<Sum>x\\<in>X. norm (f x)) \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<And>X.\n        (\\<Sum>x\\<in>X. norm (f x)) \\<in> S \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>X. norm (f x)) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> t \\<Longrightarrow> False", "hence \"(\\<Sum>x\\<in>X. norm (f x)) < 0\""], ["proof (prove)\nusing this:\n  (\\<Sum>x\\<in>X. norm (f x)) \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>X. norm (f x)) < 0", "unfolding S_def"], ["proof (prove)\nusing this:\n  (\\<Sum>x\\<in>X. norm (f x)) \\<in> {s. s < 0}\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>X. norm (f x)) < 0", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>X. norm (f x)) < 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> t \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  (\\<Sum>x\\<in>X. norm (f x)) < 0\n\ngoal (1 subgoal):\n 1. False", "using sumpos"], ["proof (prove)\nusing this:\n  (\\<Sum>x\\<in>X. norm (f x)) < 0\n  0 \\<le> (\\<Sum>x\\<in>?X. norm (f x))\n\ngoal (1 subgoal):\n 1. False", "by smt"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 \\<le> t\n\ngoal (1 subgoal):\n 1. \\<not> infsetsum'_converges f A \\<Longrightarrow>\n    norm (infsetsum' f A) \\<le> infsetsum' (\\<lambda>x. norm (f x)) A", "have \"\\<exists>!h. (sum (\\<lambda>x. norm (f x)) \\<longlongrightarrow> h) (finite_subsets_at_top A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!h.\n       (sum (\\<lambda>x. norm (f x)) \\<longlongrightarrow> h)\n        (finite_subsets_at_top A)", "using t_def finite_subsets_at_top_neq_bot tendsto_unique"], ["proof (prove)\nusing this:\n  (sum (\\<lambda>x. norm (f x)) \\<longlongrightarrow> t)\n   (finite_subsets_at_top A)\n  finite_subsets_at_top ?A \\<noteq> bot\n  \\<lbrakk>?F \\<noteq> bot; (?f \\<longlongrightarrow> ?a) ?F;\n   (?f \\<longlongrightarrow> ?b) ?F\\<rbrakk>\n  \\<Longrightarrow> ?a = ?b\n\ngoal (1 subgoal):\n 1. \\<exists>!h.\n       (sum (\\<lambda>x. norm (f x)) \\<longlongrightarrow> h)\n        (finite_subsets_at_top A)", "by blast"], ["proof (state)\nthis:\n  \\<exists>!h.\n     (sum (\\<lambda>x. norm (f x)) \\<longlongrightarrow> h)\n      (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. \\<not> infsetsum'_converges f A \\<Longrightarrow>\n    norm (infsetsum' f A) \\<le> infsetsum' (\\<lambda>x. norm (f x)) A", "hence \"t = (Topological_Spaces.Lim (finite_subsets_at_top A) (sum (\\<lambda>x. norm (f x))))\""], ["proof (prove)\nusing this:\n  \\<exists>!h.\n     (sum (\\<lambda>x. norm (f x)) \\<longlongrightarrow> h)\n      (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. t = Lim (finite_subsets_at_top A) (sum (\\<lambda>x. norm (f x)))", "using t_def"], ["proof (prove)\nusing this:\n  \\<exists>!h.\n     (sum (\\<lambda>x. norm (f x)) \\<longlongrightarrow> h)\n      (finite_subsets_at_top A)\n  (sum (\\<lambda>x. norm (f x)) \\<longlongrightarrow> t)\n   (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. t = Lim (finite_subsets_at_top A) (sum (\\<lambda>x. norm (f x)))", "unfolding Topological_Spaces.Lim_def"], ["proof (prove)\nusing this:\n  \\<exists>!h.\n     (sum (\\<lambda>x. norm (f x)) \\<longlongrightarrow> h)\n      (finite_subsets_at_top A)\n  (sum (\\<lambda>x. norm (f x)) \\<longlongrightarrow> t)\n   (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. t =\n    (THE l.\n        (sum (\\<lambda>x. norm (f x)) \\<longlongrightarrow> l)\n         (finite_subsets_at_top A))", "by (metis the_equality)"], ["proof (state)\nthis:\n  t = Lim (finite_subsets_at_top A) (sum (\\<lambda>x. norm (f x)))\n\ngoal (1 subgoal):\n 1. \\<not> infsetsum'_converges f A \\<Longrightarrow>\n    norm (infsetsum' f A) \\<le> infsetsum' (\\<lambda>x. norm (f x)) A", "hence \"Lim (finite_subsets_at_top A) (sum (\\<lambda>x. norm (f x))) \\<ge> 0\""], ["proof (prove)\nusing this:\n  t = Lim (finite_subsets_at_top A) (sum (\\<lambda>x. norm (f x)))\n\ngoal (1 subgoal):\n 1. 0 \\<le> Lim (finite_subsets_at_top A) (sum (\\<lambda>x. norm (f x)))", "using tgeq0"], ["proof (prove)\nusing this:\n  t = Lim (finite_subsets_at_top A) (sum (\\<lambda>x. norm (f x)))\n  0 \\<le> t\n\ngoal (1 subgoal):\n 1. 0 \\<le> Lim (finite_subsets_at_top A) (sum (\\<lambda>x. norm (f x)))", "by blast"], ["proof (state)\nthis:\n  0 \\<le> Lim (finite_subsets_at_top A) (sum (\\<lambda>x. norm (f x)))\n\ngoal (1 subgoal):\n 1. \\<not> infsetsum'_converges f A \\<Longrightarrow>\n    norm (infsetsum' f A) \\<le> infsetsum' (\\<lambda>x. norm (f x)) A", "thus ?thesis"], ["proof (prove)\nusing this:\n  0 \\<le> Lim (finite_subsets_at_top A) (sum (\\<lambda>x. norm (f x)))\n\ngoal (1 subgoal):\n 1. norm (infsetsum' f A) \\<le> infsetsum' (\\<lambda>x. norm (f x)) A", "unfolding infsetsum'_def"], ["proof (prove)\nusing this:\n  0 \\<le> Lim (finite_subsets_at_top A) (sum (\\<lambda>x. norm (f x)))\n\ngoal (1 subgoal):\n 1. norm\n     (if infsetsum'_converges f A then Lim (finite_subsets_at_top A) (sum f)\n      else (0::'a))\n    \\<le> (if infsetsum'_converges (\\<lambda>x. norm (f x)) A\n           then Lim (finite_subsets_at_top A) (sum (\\<lambda>x. norm (f x)))\n           else 0)", "using False"], ["proof (prove)\nusing this:\n  0 \\<le> Lim (finite_subsets_at_top A) (sum (\\<lambda>x. norm (f x)))\n  \\<not> infsetsum'_converges f A\n\ngoal (1 subgoal):\n 1. norm\n     (if infsetsum'_converges f A then Lim (finite_subsets_at_top A) (sum f)\n      else (0::'a))\n    \\<le> (if infsetsum'_converges (\\<lambda>x. norm (f x)) A\n           then Lim (finite_subsets_at_top A) (sum (\\<lambda>x. norm (f x)))\n           else 0)", "by auto"], ["proof (state)\nthis:\n  norm (infsetsum' f A) \\<le> infsetsum' (\\<lambda>x. norm (f x)) A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infsetsum_infsetsum':\n  assumes \"f abs_summable_on A\"\n  shows \"infsetsum f A = infsetsum' f A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum f A = infsetsum' f A", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. infsetsum f A = infsetsum' f A", "have conv_sum_norm[simp]: \"infsetsum'_converges (\\<lambda>x. norm (f x)) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum'_converges (\\<lambda>x. norm (f x)) A", "proof (rule abs_summable_infsetsum'_converges)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. norm (f x)) abs_summable_on A", "show \"(\\<lambda>x. norm (f x)) abs_summable_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. norm (f x)) abs_summable_on A", "using assms"], ["proof (prove)\nusing this:\n  f abs_summable_on A\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. norm (f x)) abs_summable_on A", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. norm (f x)) abs_summable_on A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  infsetsum'_converges (\\<lambda>x. norm (f x)) A\n\ngoal (1 subgoal):\n 1. infsetsum f A = infsetsum' f A", "have \"norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>\" if \"\\<epsilon>>0\" for \\<epsilon>"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>", "define \\<delta> where \"\\<delta> = \\<epsilon>/2\""], ["proof (state)\nthis:\n  \\<delta> = \\<epsilon> / 2\n\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>", "with that"], ["proof (chain)\npicking this:\n  0 < \\<epsilon>\n  \\<delta> = \\<epsilon> / 2", "have [simp]: \"\\<delta> > 0\""], ["proof (prove)\nusing this:\n  0 < \\<epsilon>\n  \\<delta> = \\<epsilon> / 2\n\ngoal (1 subgoal):\n 1. 0 < \\<delta>", "by simp"], ["proof (state)\nthis:\n  0 < \\<delta>\n\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>", "obtain F1 where F1A: \"F1 \\<subseteq> A\" and finF1: \"finite F1\" and leq_eps: \"infsetsum (\\<lambda>x. norm (f x)) (A-F1) \\<le> \\<delta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>F1.\n        \\<lbrakk>F1 \\<subseteq> A; finite F1;\n         (\\<Sum>\\<^sub>ax\\<in>A - F1. norm (f x)) \\<le> \\<delta>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>F1.\n        \\<lbrakk>F1 \\<subseteq> A; finite F1;\n         (\\<Sum>\\<^sub>ax\\<in>A - F1. norm (f x)) \\<le> \\<delta>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have sum_SUP: \"ereal (infsetsum (\\<lambda>x. norm (f x)) A) = (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (sum (\\<lambda>x. norm (f x)) F))\"\n        (is \"_ = ?SUP\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. ereal (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) =\n    (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n        ereal (\\<Sum>x\\<in>F. norm (f x)))", "proof (rule infsetsum_nonneg_is_SUPREMUM_ereal)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x. norm (f x)) abs_summable_on A\n 2. \\<And>x. x \\<in> A \\<Longrightarrow> 0 \\<le> norm (f x)", "show \"(\\<lambda>x. norm (f x)) abs_summable_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. norm (f x)) abs_summable_on A", "by (simp add: assms)"], ["proof (state)\nthis:\n  (\\<lambda>x. norm (f x)) abs_summable_on A\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> 0 \\<le> norm (f x)", "show \"0 \\<le> norm (f x)\"\n          if \"x \\<in> A\"\n          for x :: 'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> norm (f x)", "using that"], ["proof (prove)\nusing this:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. 0 \\<le> norm (f x)", "by simp"], ["proof (state)\nthis:\n  ?x \\<in> A \\<Longrightarrow> 0 \\<le> norm (f ?x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ereal (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) =\n  (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n      ereal (\\<Sum>x\\<in>F. norm (f x)))\n\ngoal (1 subgoal):\n 1. (\\<And>F1.\n        \\<lbrakk>F1 \\<subseteq> A; finite F1;\n         (\\<Sum>\\<^sub>ax\\<in>A - F1. norm (f x)) \\<le> \\<delta>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"(SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (\\<Sum>x\\<in>F. norm (f x))) - ereal \\<delta>\n    < (SUP i\\<in>{F. finite F \\<and> F \\<subseteq> A}. ereal (\\<Sum>x\\<in>i. norm (f x)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n        ereal (\\<Sum>x\\<in>F. norm (f x))) -\n    ereal \\<delta>\n    < (SUP i\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n          ereal (\\<Sum>x\\<in>i. norm (f x)))", "using \\<open>\\<delta>>0\\<close>"], ["proof (prove)\nusing this:\n  0 < \\<delta>\n\ngoal (1 subgoal):\n 1. (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n        ereal (\\<Sum>x\\<in>F. norm (f x))) -\n    ereal \\<delta>\n    < (SUP i\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n          ereal (\\<Sum>x\\<in>i. norm (f x)))", "by (metis diff_strict_left_mono diff_zero ereal_less_eq(3) ereal_minus(1) not_le sum_SUP)"], ["proof (state)\nthis:\n  (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n      ereal (\\<Sum>x\\<in>F. norm (f x))) -\n  ereal \\<delta>\n  < (SUP i\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n        ereal (\\<Sum>x\\<in>i. norm (f x)))\n\ngoal (1 subgoal):\n 1. (\\<And>F1.\n        \\<lbrakk>F1 \\<subseteq> A; finite F1;\n         (\\<Sum>\\<^sub>ax\\<in>A - F1. norm (f x)) \\<le> \\<delta>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n      ereal (\\<Sum>x\\<in>F. norm (f x))) -\n  ereal \\<delta>\n  < (SUP i\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n        ereal (\\<Sum>x\\<in>i. norm (f x)))", "obtain F where \"F\\<in>{F. finite F \\<and> F \\<subseteq> A}\" and \"ereal (sum (\\<lambda>x. norm (f x)) F) > ?SUP - ereal (\\<delta>)\""], ["proof (prove)\nusing this:\n  (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n      ereal (\\<Sum>x\\<in>F. norm (f x))) -\n  ereal \\<delta>\n  < (SUP i\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n        ereal (\\<Sum>x\\<in>i. norm (f x)))\n\ngoal (1 subgoal):\n 1. (\\<And>F.\n        \\<lbrakk>F \\<in> {F. finite F \\<and> F \\<subseteq> A};\n         (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n             ereal (\\<Sum>x\\<in>F. norm (f x))) -\n         ereal \\<delta>\n         < ereal (\\<Sum>x\\<in>F. norm (f x))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson less_SUP_iff)"], ["proof (state)\nthis:\n  F \\<in> {F. finite F \\<and> F \\<subseteq> A}\n  (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n      ereal (\\<Sum>x\\<in>F. norm (f x))) -\n  ereal \\<delta>\n  < ereal (\\<Sum>x\\<in>F. norm (f x))\n\ngoal (1 subgoal):\n 1. (\\<And>F1.\n        \\<lbrakk>F1 \\<subseteq> A; finite F1;\n         (\\<Sum>\\<^sub>ax\\<in>A - F1. norm (f x)) \\<le> \\<delta>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"sum (\\<lambda>x. norm (f x)) F > infsetsum (\\<lambda>x. norm (f x)) A -  (\\<delta>)\""], ["proof (prove)\nusing this:\n  F \\<in> {F. finite F \\<and> F \\<subseteq> A}\n  (SUP F\\<in>{F. finite F \\<and> F \\<subseteq> A}.\n      ereal (\\<Sum>x\\<in>F. norm (f x))) -\n  ereal \\<delta>\n  < ereal (\\<Sum>x\\<in>F. norm (f x))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) - \\<delta>\n    < (\\<Sum>x\\<in>F. norm (f x))", "unfolding sum_SUP[symmetric]"], ["proof (prove)\nusing this:\n  F \\<in> {F. finite F \\<and> F \\<subseteq> A}\n  ereal (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) - ereal \\<delta>\n  < ereal (\\<Sum>x\\<in>F. norm (f x))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) - \\<delta>\n    < (\\<Sum>x\\<in>F. norm (f x))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) - \\<delta>\n  < (\\<Sum>x\\<in>F. norm (f x))\n\ngoal (1 subgoal):\n 1. (\\<And>F1.\n        \\<lbrakk>F1 \\<subseteq> A; finite F1;\n         (\\<Sum>\\<^sub>ax\\<in>A - F1. norm (f x)) \\<le> \\<delta>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"\\<delta> > infsetsum (\\<lambda>x. norm (f x)) (A-F)\""], ["proof (prove)\nusing this:\n  (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) - \\<delta>\n  < (\\<Sum>x\\<in>F. norm (f x))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A - F. norm (f x)) < \\<delta>", "proof (subst infsetsum_Diff)"], ["proof (state)\ngoal (3 subgoals):\n 1. (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) - \\<delta>\n    < (\\<Sum>x\\<in>F. norm (f x)) \\<Longrightarrow>\n    (\\<lambda>x. norm (f x)) abs_summable_on A\n 2. (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) - \\<delta>\n    < (\\<Sum>x\\<in>F. norm (f x)) \\<Longrightarrow>\n    F \\<subseteq> A\n 3. (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) - \\<delta>\n    < (\\<Sum>x\\<in>F. norm (f x)) \\<Longrightarrow>\n    (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) -\n    (\\<Sum>\\<^sub>ax\\<in>F. norm (f x))\n    < \\<delta>", "show \"(\\<lambda>x. norm (f x)) abs_summable_on A\"\n          if \"(\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) - \\<delta> < (\\<Sum>x\\<in>F. norm (f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. norm (f x)) abs_summable_on A", "using that"], ["proof (prove)\nusing this:\n  (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) - \\<delta>\n  < (\\<Sum>x\\<in>F. norm (f x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. norm (f x)) abs_summable_on A", "by (simp add: assms)"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) - \\<delta>\n  < (\\<Sum>x\\<in>F. norm (f x)) \\<Longrightarrow>\n  (\\<lambda>x. norm (f x)) abs_summable_on A\n\ngoal (2 subgoals):\n 1. (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) - \\<delta>\n    < (\\<Sum>x\\<in>F. norm (f x)) \\<Longrightarrow>\n    F \\<subseteq> A\n 2. (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) - \\<delta>\n    < (\\<Sum>x\\<in>F. norm (f x)) \\<Longrightarrow>\n    (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) -\n    (\\<Sum>\\<^sub>ax\\<in>F. norm (f x))\n    < \\<delta>", "show \"F \\<subseteq> A\"\n          if \"(\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) - \\<delta> < (\\<Sum>x\\<in>F. norm (f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<subseteq> A", "using that \\<open>F \\<in> {F. finite F \\<and> F \\<subseteq> A}\\<close>"], ["proof (prove)\nusing this:\n  (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) - \\<delta>\n  < (\\<Sum>x\\<in>F. norm (f x))\n  F \\<in> {F. finite F \\<and> F \\<subseteq> A}\n\ngoal (1 subgoal):\n 1. F \\<subseteq> A", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) - \\<delta>\n  < (\\<Sum>x\\<in>F. norm (f x)) \\<Longrightarrow>\n  F \\<subseteq> A\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) - \\<delta>\n    < (\\<Sum>x\\<in>F. norm (f x)) \\<Longrightarrow>\n    (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) -\n    (\\<Sum>\\<^sub>ax\\<in>F. norm (f x))\n    < \\<delta>", "show \"(\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) - (\\<Sum>\\<^sub>ax\\<in>F. norm (f x)) < \\<delta>\"\n          if \"(\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) - \\<delta> < (\\<Sum>x\\<in>F. norm (f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) -\n    (\\<Sum>\\<^sub>ax\\<in>F. norm (f x))\n    < \\<delta>", "using that \\<open>F \\<in> {F. finite F \\<and> F \\<subseteq> A}\\<close>"], ["proof (prove)\nusing this:\n  (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) - \\<delta>\n  < (\\<Sum>x\\<in>F. norm (f x))\n  F \\<in> {F. finite F \\<and> F \\<subseteq> A}\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) -\n    (\\<Sum>\\<^sub>ax\\<in>F. norm (f x))\n    < \\<delta>", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) - \\<delta>\n  < (\\<Sum>x\\<in>F. norm (f x)) \\<Longrightarrow>\n  (\\<Sum>\\<^sub>ax\\<in>A. norm (f x)) - (\\<Sum>\\<^sub>ax\\<in>F. norm (f x))\n  < \\<delta>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>A - F. norm (f x)) < \\<delta>\n\ngoal (1 subgoal):\n 1. (\\<And>F1.\n        \\<lbrakk>F1 \\<subseteq> A; finite F1;\n         (\\<Sum>\\<^sub>ax\\<in>A - F1. norm (f x)) \\<le> \\<delta>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>\\<^sub>ax\\<in>A - F. norm (f x)) < \\<delta>\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  (\\<Sum>\\<^sub>ax\\<in>A - F. norm (f x)) < \\<delta>\n  \\<lbrakk>?F1.0 \\<subseteq> A; finite ?F1.0;\n   (\\<Sum>\\<^sub>ax\\<in>A - ?F1.0. norm (f x)) \\<le> \\<delta>\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "apply atomize_elim"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A - F. norm (f x)) < \\<delta> \\<Longrightarrow>\n    \\<exists>F1\\<subseteq>A.\n       finite F1 \\<and>\n       (\\<Sum>\\<^sub>ax\\<in>A - F1. norm (f x)) \\<le> \\<delta>", "using \\<open>F \\<in> {F. finite F \\<and> F \\<subseteq> A}\\<close> less_imp_le"], ["proof (prove)\nusing this:\n  F \\<in> {F. finite F \\<and> F \\<subseteq> A}\n  ?x < ?y \\<Longrightarrow> ?x \\<le> ?y\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A - F. norm (f x)) < \\<delta> \\<Longrightarrow>\n    \\<exists>F1\\<subseteq>A.\n       finite F1 \\<and>\n       (\\<Sum>\\<^sub>ax\\<in>A - F1. norm (f x)) \\<le> \\<delta>", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  F1 \\<subseteq> A\n  finite F1\n  (\\<Sum>\\<^sub>ax\\<in>A - F1. norm (f x)) \\<le> \\<delta>\n\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>", "have \"\\<exists>F2\\<subseteq>A.\n       finite F2 \\<and>\n       dist (\\<Sum>x\\<in>F2. norm (f x)) (infsetsum' (\\<lambda>x. norm (f x)) A) \\<le> \\<delta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>F2\\<subseteq>A.\n       finite F2 \\<and>\n       dist (\\<Sum>x\\<in>F2. norm (f x))\n        (infsetsum' (\\<lambda>x. norm (f x)) A)\n       \\<le> \\<delta>", "using infsetsum'_approx_sum[where f=\"(\\<lambda>x. norm (f x))\" and A=A and \\<epsilon>=\\<delta>]\n        abs_summable_infsetsum'_converges assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>infsetsum'_converges (\\<lambda>x. norm (f x)) A;\n   0 < \\<delta>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>F.\n                       finite F \\<and>\n                       F \\<subseteq> A \\<and>\n                       dist (\\<Sum>x\\<in>F. norm (f x))\n                        (infsetsum' (\\<lambda>x. norm (f x)) A)\n                       \\<le> \\<delta>\n  ?f abs_summable_on ?A \\<Longrightarrow> infsetsum'_converges ?f ?A\n  f abs_summable_on A\n\ngoal (1 subgoal):\n 1. \\<exists>F2\\<subseteq>A.\n       finite F2 \\<and>\n       dist (\\<Sum>x\\<in>F2. norm (f x))\n        (infsetsum' (\\<lambda>x. norm (f x)) A)\n       \\<le> \\<delta>", "by auto"], ["proof (state)\nthis:\n  \\<exists>F2\\<subseteq>A.\n     finite F2 \\<and>\n     dist (\\<Sum>x\\<in>F2. norm (f x))\n      (infsetsum' (\\<lambda>x. norm (f x)) A)\n     \\<le> \\<delta>\n\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>", "then"], ["proof (chain)\npicking this:\n  \\<exists>F2\\<subseteq>A.\n     finite F2 \\<and>\n     dist (\\<Sum>x\\<in>F2. norm (f x))\n      (infsetsum' (\\<lambda>x. norm (f x)) A)\n     \\<le> \\<delta>", "obtain F2 where F2A: \"F2 \\<subseteq> A\" and finF2: \"finite F2\"\n      and dist: \"dist (sum (\\<lambda>x. norm (f x)) F2) (infsetsum' (\\<lambda>x. norm (f x)) A) \\<le> \\<delta>\""], ["proof (prove)\nusing this:\n  \\<exists>F2\\<subseteq>A.\n     finite F2 \\<and>\n     dist (\\<Sum>x\\<in>F2. norm (f x))\n      (infsetsum' (\\<lambda>x. norm (f x)) A)\n     \\<le> \\<delta>\n\ngoal (1 subgoal):\n 1. (\\<And>F2.\n        \\<lbrakk>F2 \\<subseteq> A; finite F2;\n         dist (\\<Sum>x\\<in>F2. norm (f x))\n          (infsetsum' (\\<lambda>x. norm (f x)) A)\n         \\<le> \\<delta>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  F2 \\<subseteq> A\n  finite F2\n  dist (\\<Sum>x\\<in>F2. norm (f x)) (infsetsum' (\\<lambda>x. norm (f x)) A)\n  \\<le> \\<delta>\n\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>", "have  leq_eps': \"infsetsum' (\\<lambda>x. norm (f x)) (A-F2) \\<le> \\<delta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum' (\\<lambda>x. norm (f x)) (A - F2) \\<le> \\<delta>", "proof (subst infsetsum'_Diff)"], ["proof (state)\ngoal (4 subgoals):\n 1. infsetsum'_converges (\\<lambda>x. norm (f x)) A\n 2. infsetsum'_converges (\\<lambda>x. norm (f x)) F2\n 3. F2 \\<subseteq> A\n 4. infsetsum' (\\<lambda>x. norm (f x)) A -\n    infsetsum' (\\<lambda>x. norm (f x)) F2\n    \\<le> \\<delta>", "show \"infsetsum'_converges (\\<lambda>x. norm (f x)) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum'_converges (\\<lambda>x. norm (f x)) A", "by simp"], ["proof (state)\nthis:\n  infsetsum'_converges (\\<lambda>x. norm (f x)) A\n\ngoal (3 subgoals):\n 1. infsetsum'_converges (\\<lambda>x. norm (f x)) F2\n 2. F2 \\<subseteq> A\n 3. infsetsum' (\\<lambda>x. norm (f x)) A -\n    infsetsum' (\\<lambda>x. norm (f x)) F2\n    \\<le> \\<delta>", "show \"infsetsum'_converges (\\<lambda>x. norm (f x)) F2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum'_converges (\\<lambda>x. norm (f x)) F2", "by (simp add: finF2)"], ["proof (state)\nthis:\n  infsetsum'_converges (\\<lambda>x. norm (f x)) F2\n\ngoal (2 subgoals):\n 1. F2 \\<subseteq> A\n 2. infsetsum' (\\<lambda>x. norm (f x)) A -\n    infsetsum' (\\<lambda>x. norm (f x)) F2\n    \\<le> \\<delta>", "show \"F2 \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F2 \\<subseteq> A", "by (simp add: F2A)"], ["proof (state)\nthis:\n  F2 \\<subseteq> A\n\ngoal (1 subgoal):\n 1. infsetsum' (\\<lambda>x. norm (f x)) A -\n    infsetsum' (\\<lambda>x. norm (f x)) F2\n    \\<le> \\<delta>", "show \"infsetsum' (\\<lambda>x. norm (f x)) A - infsetsum' (\\<lambda>x. norm (f x)) F2 \\<le> \\<delta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum' (\\<lambda>x. norm (f x)) A -\n    infsetsum' (\\<lambda>x. norm (f x)) F2\n    \\<le> \\<delta>", "using dist finF2"], ["proof (prove)\nusing this:\n  dist (\\<Sum>x\\<in>F2. norm (f x)) (infsetsum' (\\<lambda>x. norm (f x)) A)\n  \\<le> \\<delta>\n  finite F2\n\ngoal (1 subgoal):\n 1. infsetsum' (\\<lambda>x. norm (f x)) A -\n    infsetsum' (\\<lambda>x. norm (f x)) F2\n    \\<le> \\<delta>", "by (auto simp: dist_norm)"], ["proof (state)\nthis:\n  infsetsum' (\\<lambda>x. norm (f x)) A -\n  infsetsum' (\\<lambda>x. norm (f x)) F2\n  \\<le> \\<delta>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  infsetsum' (\\<lambda>x. norm (f x)) (A - F2) \\<le> \\<delta>\n\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>", "define F where \"F = F1 \\<union> F2\""], ["proof (state)\nthis:\n  F = F1 \\<union> F2\n\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>", "have FA: \"F \\<subseteq> A\" and finF: \"finite F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<subseteq> A &&& finite F", "unfolding F_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. F1 \\<union> F2 \\<subseteq> A &&& finite (F1 \\<union> F2)", "using F1A F2A finF1 finF2"], ["proof (prove)\nusing this:\n  F1 \\<subseteq> A\n  F2 \\<subseteq> A\n  finite F1\n  finite F2\n\ngoal (1 subgoal):\n 1. F1 \\<union> F2 \\<subseteq> A &&& finite (F1 \\<union> F2)", "by auto"], ["proof (state)\nthis:\n  F \\<subseteq> A\n  finite F\n\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>", "have \"(\\<Sum>\\<^sub>ax\\<in>A - (F1 \\<union> F2). norm (f x)) \\<le> (\\<Sum>\\<^sub>ax\\<in>A - F1. norm (f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A - (F1 \\<union> F2). norm (f x))\n    \\<le> (\\<Sum>\\<^sub>ax\\<in>A - F1. norm (f x))", "proof (rule infsetsum_mono_neutral_left)"], ["proof (state)\ngoal (5 subgoals):\n 1. (\\<lambda>x. norm (f x)) abs_summable_on A - (F1 \\<union> F2)\n 2. (\\<lambda>x. norm (f x)) abs_summable_on A - F1\n 3. \\<And>x.\n       x \\<in> A - (F1 \\<union> F2) \\<Longrightarrow>\n       norm (f x) \\<le> norm (f x)\n 4. A - (F1 \\<union> F2) \\<subseteq> A - F1\n 5. \\<And>x.\n       x \\<in> A - F1 - (A - (F1 \\<union> F2)) \\<Longrightarrow>\n       0 \\<le> norm (f x)", "show \"(\\<lambda>x. norm (f x)) abs_summable_on A - (F1 \\<union> F2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. norm (f x)) abs_summable_on A - (F1 \\<union> F2)", "using abs_summable_on_subset assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?f abs_summable_on ?B; ?A \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> ?f abs_summable_on ?A\n  f abs_summable_on A\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. norm (f x)) abs_summable_on A - (F1 \\<union> F2)", "by fastforce"], ["proof (state)\nthis:\n  (\\<lambda>x. norm (f x)) abs_summable_on A - (F1 \\<union> F2)\n\ngoal (4 subgoals):\n 1. (\\<lambda>x. norm (f x)) abs_summable_on A - F1\n 2. \\<And>x.\n       x \\<in> A - (F1 \\<union> F2) \\<Longrightarrow>\n       norm (f x) \\<le> norm (f x)\n 3. A - (F1 \\<union> F2) \\<subseteq> A - F1\n 4. \\<And>x.\n       x \\<in> A - F1 - (A - (F1 \\<union> F2)) \\<Longrightarrow>\n       0 \\<le> norm (f x)", "show \"(\\<lambda>x. norm (f x)) abs_summable_on A - F1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. norm (f x)) abs_summable_on A - F1", "using abs_summable_on_subset assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?f abs_summable_on ?B; ?A \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> ?f abs_summable_on ?A\n  f abs_summable_on A\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. norm (f x)) abs_summable_on A - F1", "by fastforce"], ["proof (state)\nthis:\n  (\\<lambda>x. norm (f x)) abs_summable_on A - F1\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> A - (F1 \\<union> F2) \\<Longrightarrow>\n       norm (f x) \\<le> norm (f x)\n 2. A - (F1 \\<union> F2) \\<subseteq> A - F1\n 3. \\<And>x.\n       x \\<in> A - F1 - (A - (F1 \\<union> F2)) \\<Longrightarrow>\n       0 \\<le> norm (f x)", "show \"norm (f x) \\<le> norm (f x)\"\n        if \"x \\<in> A - (F1 \\<union> F2)\"\n        for x :: 'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (f x) \\<le> norm (f x)", "using that"], ["proof (prove)\nusing this:\n  x \\<in> A - (F1 \\<union> F2)\n\ngoal (1 subgoal):\n 1. norm (f x) \\<le> norm (f x)", "by auto"], ["proof (state)\nthis:\n  ?x \\<in> A - (F1 \\<union> F2) \\<Longrightarrow>\n  norm (f ?x) \\<le> norm (f ?x)\n\ngoal (2 subgoals):\n 1. A - (F1 \\<union> F2) \\<subseteq> A - F1\n 2. \\<And>x.\n       x \\<in> A - F1 - (A - (F1 \\<union> F2)) \\<Longrightarrow>\n       0 \\<le> norm (f x)", "show \"A - (F1 \\<union> F2) \\<subseteq> A - F1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A - (F1 \\<union> F2) \\<subseteq> A - F1", "by (simp add: Diff_mono)"], ["proof (state)\nthis:\n  A - (F1 \\<union> F2) \\<subseteq> A - F1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A - F1 - (A - (F1 \\<union> F2)) \\<Longrightarrow>\n       0 \\<le> norm (f x)", "show \"0 \\<le> norm (f x)\"\n        if \"x \\<in> A - F1 - (A - (F1 \\<union> F2))\"\n        for x :: 'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> norm (f x)", "using that"], ["proof (prove)\nusing this:\n  x \\<in> A - F1 - (A - (F1 \\<union> F2))\n\ngoal (1 subgoal):\n 1. 0 \\<le> norm (f x)", "by auto"], ["proof (state)\nthis:\n  ?x \\<in> A - F1 - (A - (F1 \\<union> F2)) \\<Longrightarrow>\n  0 \\<le> norm (f ?x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>A - (F1 \\<union> F2). norm (f x))\n  \\<le> (\\<Sum>\\<^sub>ax\\<in>A - F1. norm (f x))\n\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>", "hence leq_eps: \"infsetsum (\\<lambda>x. norm (f x)) (A-F) \\<le> \\<delta>\""], ["proof (prove)\nusing this:\n  (\\<Sum>\\<^sub>ax\\<in>A - (F1 \\<union> F2). norm (f x))\n  \\<le> (\\<Sum>\\<^sub>ax\\<in>A - F1. norm (f x))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A - F. norm (f x)) \\<le> \\<delta>", "unfolding F_def"], ["proof (prove)\nusing this:\n  (\\<Sum>\\<^sub>ax\\<in>A - (F1 \\<union> F2). norm (f x))\n  \\<le> (\\<Sum>\\<^sub>ax\\<in>A - F1. norm (f x))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A - (F1 \\<union> F2). norm (f x)) \\<le> \\<delta>", "using leq_eps"], ["proof (prove)\nusing this:\n  (\\<Sum>\\<^sub>ax\\<in>A - (F1 \\<union> F2). norm (f x))\n  \\<le> (\\<Sum>\\<^sub>ax\\<in>A - F1. norm (f x))\n  (\\<Sum>\\<^sub>ax\\<in>A - F1. norm (f x)) \\<le> \\<delta>\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A - (F1 \\<union> F2). norm (f x)) \\<le> \\<delta>", "by linarith"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>A - F. norm (f x)) \\<le> \\<delta>\n\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>", "have \"infsetsum' (\\<lambda>x. norm (f x)) (A - (F1 \\<union> F2))\n    \\<le> infsetsum' (\\<lambda>x. norm (f x)) (A - F2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum' (\\<lambda>x. norm (f x)) (A - (F1 \\<union> F2))\n    \\<le> infsetsum' (\\<lambda>x. norm (f x)) (A - F2)", "proof (rule infsetsum'_mono_set)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x.\n       x \\<in> A - F2 - (A - (F1 \\<union> F2)) \\<Longrightarrow>\n       0 \\<le> norm (f x)\n 2. A - (F1 \\<union> F2) \\<subseteq> A - F2\n 3. infsetsum'_converges (\\<lambda>x. norm (f x)) (A - (F1 \\<union> F2))\n 4. infsetsum'_converges (\\<lambda>x. norm (f x)) (A - F2)", "show \"0 \\<le> norm (f x)\"\n        if \"x \\<in> A - F2 - (A - (F1 \\<union> F2))\"\n        for x :: 'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> norm (f x)", "using that"], ["proof (prove)\nusing this:\n  x \\<in> A - F2 - (A - (F1 \\<union> F2))\n\ngoal (1 subgoal):\n 1. 0 \\<le> norm (f x)", "by simp"], ["proof (state)\nthis:\n  ?x \\<in> A - F2 - (A - (F1 \\<union> F2)) \\<Longrightarrow>\n  0 \\<le> norm (f ?x)\n\ngoal (3 subgoals):\n 1. A - (F1 \\<union> F2) \\<subseteq> A - F2\n 2. infsetsum'_converges (\\<lambda>x. norm (f x)) (A - (F1 \\<union> F2))\n 3. infsetsum'_converges (\\<lambda>x. norm (f x)) (A - F2)", "show \"A - (F1 \\<union> F2) \\<subseteq> A - F2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A - (F1 \\<union> F2) \\<subseteq> A - F2", "by (simp add: Diff_mono)"], ["proof (state)\nthis:\n  A - (F1 \\<union> F2) \\<subseteq> A - F2\n\ngoal (2 subgoals):\n 1. infsetsum'_converges (\\<lambda>x. norm (f x)) (A - (F1 \\<union> F2))\n 2. infsetsum'_converges (\\<lambda>x. norm (f x)) (A - F2)", "show \"infsetsum'_converges (\\<lambda>x. norm (f x)) (A - (F1 \\<union> F2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum'_converges (\\<lambda>x. norm (f x)) (A - (F1 \\<union> F2))", "using F_def conv_sum_norm finF infsetsum'_converges_cofin_subset"], ["proof (prove)\nusing this:\n  F = F1 \\<union> F2\n  infsetsum'_converges (\\<lambda>x. norm (f x)) A\n  finite F\n  \\<lbrakk>infsetsum'_converges ?f ?A; finite ?F\\<rbrakk>\n  \\<Longrightarrow> infsetsum'_converges ?f (?A - ?F)\n\ngoal (1 subgoal):\n 1. infsetsum'_converges (\\<lambda>x. norm (f x)) (A - (F1 \\<union> F2))", "by blast"], ["proof (state)\nthis:\n  infsetsum'_converges (\\<lambda>x. norm (f x)) (A - (F1 \\<union> F2))\n\ngoal (1 subgoal):\n 1. infsetsum'_converges (\\<lambda>x. norm (f x)) (A - F2)", "show \"infsetsum'_converges (\\<lambda>x. norm (f x)) (A - F2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum'_converges (\\<lambda>x. norm (f x)) (A - F2)", "by (simp add: finF2 infsetsum'_converges_cofin_subset)"], ["proof (state)\nthis:\n  infsetsum'_converges (\\<lambda>x. norm (f x)) (A - F2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  infsetsum' (\\<lambda>x. norm (f x)) (A - (F1 \\<union> F2))\n  \\<le> infsetsum' (\\<lambda>x. norm (f x)) (A - F2)\n\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>", "hence leq_eps': \"infsetsum' (\\<lambda>x. norm (f x)) (A-F) \\<le> \\<delta>\""], ["proof (prove)\nusing this:\n  infsetsum' (\\<lambda>x. norm (f x)) (A - (F1 \\<union> F2))\n  \\<le> infsetsum' (\\<lambda>x. norm (f x)) (A - F2)\n\ngoal (1 subgoal):\n 1. infsetsum' (\\<lambda>x. norm (f x)) (A - F) \\<le> \\<delta>", "unfolding F_def"], ["proof (prove)\nusing this:\n  infsetsum' (\\<lambda>x. norm (f x)) (A - (F1 \\<union> F2))\n  \\<le> infsetsum' (\\<lambda>x. norm (f x)) (A - F2)\n\ngoal (1 subgoal):\n 1. infsetsum' (\\<lambda>x. norm (f x)) (A - (F1 \\<union> F2))\n    \\<le> \\<delta>", "by (rule order.trans[OF _ leq_eps'])"], ["proof (state)\nthis:\n  infsetsum' (\\<lambda>x. norm (f x)) (A - F) \\<le> \\<delta>\n\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>", "have \"norm (infsetsum f A - infsetsum f F) = norm (infsetsum f (A-F))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum f F) = norm (infsetsum f (A - F))", "proof (subst infsetsum_Diff [symmetric])"], ["proof (state)\ngoal (3 subgoals):\n 1. f abs_summable_on A\n 2. F \\<subseteq> A\n 3. norm (infsetsum f (A - F)) = norm (infsetsum f (A - F))", "show \"f abs_summable_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f abs_summable_on A", "by (simp add: assms)"], ["proof (state)\nthis:\n  f abs_summable_on A\n\ngoal (2 subgoals):\n 1. F \\<subseteq> A\n 2. norm (infsetsum f (A - F)) = norm (infsetsum f (A - F))", "show \"F \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<subseteq> A", "by (simp add: FA)"], ["proof (state)\nthis:\n  F \\<subseteq> A\n\ngoal (1 subgoal):\n 1. norm (infsetsum f (A - F)) = norm (infsetsum f (A - F))", "show \"norm (infsetsum f (A - F)) = norm (infsetsum f (A - F))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (infsetsum f (A - F)) = norm (infsetsum f (A - F))", "by simp"], ["proof (state)\nthis:\n  norm (infsetsum f (A - F)) = norm (infsetsum f (A - F))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  norm (infsetsum f A - infsetsum f F) = norm (infsetsum f (A - F))\n\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>", "also"], ["proof (state)\nthis:\n  norm (infsetsum f A - infsetsum f F) = norm (infsetsum f (A - F))\n\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>", "have \"\\<dots> \\<le> infsetsum (\\<lambda>x. norm (f x)) (A-F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (infsetsum f (A - F)) \\<le> (\\<Sum>\\<^sub>ax\\<in>A - F. norm (f x))", "using norm_infsetsum_bound"], ["proof (prove)\nusing this:\n  norm (infsetsum ?f ?A) \\<le> (\\<Sum>\\<^sub>ax\\<in>?A. norm (?f x))\n\ngoal (1 subgoal):\n 1. norm (infsetsum f (A - F)) \\<le> (\\<Sum>\\<^sub>ax\\<in>A - F. norm (f x))", "by blast"], ["proof (state)\nthis:\n  norm (infsetsum f (A - F)) \\<le> (\\<Sum>\\<^sub>ax\\<in>A - F. norm (f x))\n\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>", "also"], ["proof (state)\nthis:\n  norm (infsetsum f (A - F)) \\<le> (\\<Sum>\\<^sub>ax\\<in>A - F. norm (f x))\n\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>", "have \"\\<dots> \\<le> \\<delta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A - F. norm (f x)) \\<le> \\<delta>", "using leq_eps"], ["proof (prove)\nusing this:\n  (\\<Sum>\\<^sub>ax\\<in>A - F. norm (f x)) \\<le> \\<delta>\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A - F. norm (f x)) \\<le> \\<delta>", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>A - F. norm (f x)) \\<le> \\<delta>\n\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>", "finally"], ["proof (chain)\npicking this:\n  norm (infsetsum f A - infsetsum f F) \\<le> \\<delta>", "have diff1: \"norm (infsetsum f A - infsetsum f F) \\<le> \\<delta>\""], ["proof (prove)\nusing this:\n  norm (infsetsum f A - infsetsum f F) \\<le> \\<delta>\n\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum f F) \\<le> \\<delta>", "by assumption"], ["proof (state)\nthis:\n  norm (infsetsum f A - infsetsum f F) \\<le> \\<delta>\n\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>", "have \"norm (infsetsum' f A - infsetsum' f F) = norm (infsetsum' f (A-F))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (infsetsum' f A - infsetsum' f F) = norm (infsetsum' f (A - F))", "proof (subst infsetsum'_Diff [symmetric])"], ["proof (state)\ngoal (4 subgoals):\n 1. infsetsum'_converges f A\n 2. infsetsum'_converges f F\n 3. F \\<subseteq> A\n 4. norm (infsetsum' f (A - F)) = norm (infsetsum' f (A - F))", "show \"infsetsum'_converges f A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum'_converges f A", "by (simp add: abs_summable_infsetsum'_converges assms)"], ["proof (state)\nthis:\n  infsetsum'_converges f A\n\ngoal (3 subgoals):\n 1. infsetsum'_converges f F\n 2. F \\<subseteq> A\n 3. norm (infsetsum' f (A - F)) = norm (infsetsum' f (A - F))", "show \"infsetsum'_converges f F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum'_converges f F", "by (simp add: finF)"], ["proof (state)\nthis:\n  infsetsum'_converges f F\n\ngoal (2 subgoals):\n 1. F \\<subseteq> A\n 2. norm (infsetsum' f (A - F)) = norm (infsetsum' f (A - F))", "show \"F \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<subseteq> A", "by (simp add: FA)"], ["proof (state)\nthis:\n  F \\<subseteq> A\n\ngoal (1 subgoal):\n 1. norm (infsetsum' f (A - F)) = norm (infsetsum' f (A - F))", "show \"norm (infsetsum' f (A - F)) = norm (infsetsum' f (A - F))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (infsetsum' f (A - F)) = norm (infsetsum' f (A - F))", "by simp"], ["proof (state)\nthis:\n  norm (infsetsum' f (A - F)) = norm (infsetsum' f (A - F))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  norm (infsetsum' f A - infsetsum' f F) = norm (infsetsum' f (A - F))\n\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>", "also"], ["proof (state)\nthis:\n  norm (infsetsum' f A - infsetsum' f F) = norm (infsetsum' f (A - F))\n\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>", "have \"\\<dots> \\<le> infsetsum' (\\<lambda>x. norm (f x)) (A-F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (infsetsum' f (A - F))\n    \\<le> infsetsum' (\\<lambda>x. norm (f x)) (A - F)", "by (simp add: finF infsetsum'_converges_cofin_subset norm_infsetsum'_bound)"], ["proof (state)\nthis:\n  norm (infsetsum' f (A - F))\n  \\<le> infsetsum' (\\<lambda>x. norm (f x)) (A - F)\n\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>", "also"], ["proof (state)\nthis:\n  norm (infsetsum' f (A - F))\n  \\<le> infsetsum' (\\<lambda>x. norm (f x)) (A - F)\n\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>", "have \"\\<dots> \\<le> \\<delta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum' (\\<lambda>x. norm (f x)) (A - F) \\<le> \\<delta>", "using leq_eps'"], ["proof (prove)\nusing this:\n  infsetsum' (\\<lambda>x. norm (f x)) (A - F) \\<le> \\<delta>\n\ngoal (1 subgoal):\n 1. infsetsum' (\\<lambda>x. norm (f x)) (A - F) \\<le> \\<delta>", "by simp"], ["proof (state)\nthis:\n  infsetsum' (\\<lambda>x. norm (f x)) (A - F) \\<le> \\<delta>\n\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>", "finally"], ["proof (chain)\npicking this:\n  norm (infsetsum' f A - infsetsum' f F) \\<le> \\<delta>", "have diff2: \"norm (infsetsum' f A - infsetsum' f F) \\<le> \\<delta>\""], ["proof (prove)\nusing this:\n  norm (infsetsum' f A - infsetsum' f F) \\<le> \\<delta>\n\ngoal (1 subgoal):\n 1. norm (infsetsum' f A - infsetsum' f F) \\<le> \\<delta>", "by assumption"], ["proof (state)\nthis:\n  norm (infsetsum' f A - infsetsum' f F) \\<le> \\<delta>\n\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>", "have x1: \"infsetsum f F = infsetsum' f F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum f F = infsetsum' f F", "using finF"], ["proof (prove)\nusing this:\n  finite F\n\ngoal (1 subgoal):\n 1. infsetsum f F = infsetsum' f F", "by simp"], ["proof (state)\nthis:\n  infsetsum f F = infsetsum' f F\n\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>", "have \"norm (infsetsum f A - infsetsum' f A) \\<le> norm (infsetsum f A - infsetsum f F) + norm (infsetsum' f A - infsetsum' f F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum' f A)\n    \\<le> norm (infsetsum f A - infsetsum f F) +\n          norm (infsetsum' f A - infsetsum' f F)", "apply (rule_tac norm_diff_triangle_le)"], ["proof (prove)\ngoal (2 subgoals):\n 1. norm (infsetsum f A - ?y) \\<le> norm (infsetsum f A - infsetsum f F)\n 2. norm (?y - infsetsum' f A) \\<le> norm (infsetsum' f A - infsetsum' f F)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (infsetsum f F - infsetsum' f A)\n    \\<le> norm (infsetsum' f A - infsetsum' f F)", "by (simp_all add: x1 norm_minus_commute)"], ["proof (state)\nthis:\n  norm (infsetsum f A - infsetsum' f A)\n  \\<le> norm (infsetsum f A - infsetsum f F) +\n        norm (infsetsum' f A - infsetsum' f F)\n\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>", "also"], ["proof (state)\nthis:\n  norm (infsetsum f A - infsetsum' f A)\n  \\<le> norm (infsetsum f A - infsetsum f F) +\n        norm (infsetsum' f A - infsetsum' f F)\n\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>", "have \"\\<dots> \\<le> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum f F) +\n    norm (infsetsum' f A - infsetsum' f F)\n    \\<le> \\<epsilon>", "using diff1 diff2 \\<delta>_def"], ["proof (prove)\nusing this:\n  norm (infsetsum f A - infsetsum f F) \\<le> \\<delta>\n  norm (infsetsum' f A - infsetsum' f F) \\<le> \\<delta>\n  \\<delta> = \\<epsilon> / 2\n\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum f F) +\n    norm (infsetsum' f A - infsetsum' f F)\n    \\<le> \\<epsilon>", "by linarith"], ["proof (state)\nthis:\n  norm (infsetsum f A - infsetsum f F) +\n  norm (infsetsum' f A - infsetsum' f F)\n  \\<le> \\<epsilon>\n\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>", "finally"], ["proof (chain)\npicking this:\n  norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>", "show ?thesis"], ["proof (prove)\nusing this:\n  norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>\n\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>", "by assumption"], ["proof (state)\nthis:\n  norm (infsetsum f A - infsetsum' f A) \\<le> \\<epsilon>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < ?\\<epsilon> \\<Longrightarrow>\n  norm (infsetsum f A - infsetsum' f A) \\<le> ?\\<epsilon>\n\ngoal (1 subgoal):\n 1. infsetsum f A = infsetsum' f A", "hence \"norm (infsetsum f A - infsetsum' f A) = 0\""], ["proof (prove)\nusing this:\n  0 < ?\\<epsilon> \\<Longrightarrow>\n  norm (infsetsum f A - infsetsum' f A) \\<le> ?\\<epsilon>\n\ngoal (1 subgoal):\n 1. norm (infsetsum f A - infsetsum' f A) = 0", "by (meson antisym_conv1 dense_ge norm_not_less_zero)"], ["proof (state)\nthis:\n  norm (infsetsum f A - infsetsum' f A) = 0\n\ngoal (1 subgoal):\n 1. infsetsum f A = infsetsum' f A", "thus ?thesis"], ["proof (prove)\nusing this:\n  norm (infsetsum f A - infsetsum' f A) = 0\n\ngoal (1 subgoal):\n 1. infsetsum f A = infsetsum' f A", "by auto"], ["proof (state)\nthis:\n  infsetsum f A = infsetsum' f A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma abs_summable_partition:\n  fixes T :: \"'b set\" and I :: \"'a set\"\n  assumes \"\\<And>i. f abs_summable_on S i\"\n    and \"(\\<lambda>i. \\<Sum>\\<^sub>ax\\<in>S i. norm (f x)) abs_summable_on I\"\n    and \"T \\<subseteq> (\\<Union>i\\<in>I. S i)\"\n  shows \"f abs_summable_on T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f abs_summable_on T", "proof (rule abs_summable_finiteI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> T\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>F. norm (f x)) \\<le> ?B", "fix F"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> T\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>F. norm (f x)) \\<le> ?B", "assume finite_F: \"finite F\" and FT: \"F \\<subseteq> T\""], ["proof (state)\nthis:\n  finite F\n  F \\<subseteq> T\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> T\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>F. norm (f x)) \\<le> ?B", "define index where \"index s = (SOME i. i\\<in>I \\<and> s\\<in>S i)\" for s"], ["proof (state)\nthis:\n  index ?s = (SOME i. i \\<in> I \\<and> ?s \\<in> S i)\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> T\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>F. norm (f x)) \\<le> ?B", "hence index_I: \"index s \\<in> I\" and S_index: \"s \\<in> S (index s)\" if \"s \\<in> (\\<Union>i\\<in>I. S i)\" for s"], ["proof (prove)\nusing this:\n  index ?s = (SOME i. i \\<in> I \\<and> ?s \\<in> S i)\n\ngoal (1 subgoal):\n 1. index s \\<in> I &&& s \\<in> S (index s)", "proof auto"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<And>s.\n        index s = (SOME i. i \\<in> I \\<and> s \\<in> S i)) \\<Longrightarrow>\n    (SOME i. i \\<in> I \\<and> s \\<in> S i) \\<in> I\n 2. (\\<And>s.\n        index s = (SOME i. i \\<in> I \\<and> s \\<in> S i)) \\<Longrightarrow>\n    s \\<in> S (SOME i. i \\<in> I \\<and> s \\<in> S i)", "show \"(SOME i. i \\<in> I \\<and> s \\<in> S i) \\<in> I\"\n      if \"\\<And>s. index s = (SOME i. i \\<in> I \\<and> s \\<in> S i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (SOME i. i \\<in> I \\<and> s \\<in> S i) \\<in> I", "using that"], ["proof (prove)\nusing this:\n  index ?s = (SOME i. i \\<in> I \\<and> ?s \\<in> S i)\n\ngoal (1 subgoal):\n 1. (SOME i. i \\<in> I \\<and> s \\<in> S i) \\<in> I", "by (metis (no_types, lifting) UN_iff \\<open>s \\<in> \\<Union> (S ` I)\\<close> someI_ex)"], ["proof (state)\nthis:\n  (\\<And>s.\n      index s = (SOME i. i \\<in> I \\<and> s \\<in> S i)) \\<Longrightarrow>\n  (SOME i. i \\<in> I \\<and> s \\<in> S i) \\<in> I\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        index s = (SOME i. i \\<in> I \\<and> s \\<in> S i)) \\<Longrightarrow>\n    s \\<in> S (SOME i. i \\<in> I \\<and> s \\<in> S i)", "show \"s \\<in> S (SOME i. i \\<in> I \\<and> s \\<in> S i)\"\n      if \"\\<And>s. index s = (SOME i. i \\<in> I \\<and> s \\<in> S i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> S (SOME i. i \\<in> I \\<and> s \\<in> S i)", "using that"], ["proof (prove)\nusing this:\n  index ?s = (SOME i. i \\<in> I \\<and> ?s \\<in> S i)\n\ngoal (1 subgoal):\n 1. s \\<in> S (SOME i. i \\<in> I \\<and> s \\<in> S i)", "by (metis (no_types, lifting) UN_iff \\<open>s \\<in> \\<Union> (S ` I)\\<close> someI_ex)"], ["proof (state)\nthis:\n  (\\<And>s.\n      index s = (SOME i. i \\<in> I \\<and> s \\<in> S i)) \\<Longrightarrow>\n  s \\<in> S (SOME i. i \\<in> I \\<and> s \\<in> S i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?s \\<in> \\<Union> (S ` I) \\<Longrightarrow> index ?s \\<in> I\n  ?s \\<in> \\<Union> (S ` I) \\<Longrightarrow> ?s \\<in> S (index ?s)\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> T\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>F. norm (f x)) \\<le> ?B", "define S' where \"S' i = {s\\<in>S i. i = index s}\" for i"], ["proof (state)\nthis:\n  S' ?i = {s \\<in> S ?i. ?i = index s}\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> T\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>F. norm (f x)) \\<le> ?B", "have S'_S: \"S' i \\<subseteq> S i\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. S' i \\<subseteq> S i", "unfolding S'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {s \\<in> S i. i = index s} \\<subseteq> S i", "by simp"], ["proof (state)\nthis:\n  S' ?i \\<subseteq> S ?i\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> T\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>F. norm (f x)) \\<le> ?B", "hence f_sum_S': \"f abs_summable_on S' i\" for i"], ["proof (prove)\nusing this:\n  S' ?i \\<subseteq> S ?i\n\ngoal (1 subgoal):\n 1. f abs_summable_on S' i", "by (meson abs_summable_on_subset assms(1))"], ["proof (state)\nthis:\n  f abs_summable_on S' ?i\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> T\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>F. norm (f x)) \\<le> ?B", "with assms(1) S'_S"], ["proof (chain)\npicking this:\n  f abs_summable_on S ?i\n  S' ?i \\<subseteq> S ?i\n  f abs_summable_on S' ?i", "have \"(\\<Sum>\\<^sub>ax\\<in>S' i. norm (f x)) \\<le> (\\<Sum>\\<^sub>ax\\<in>S i. norm (f x))\" for i"], ["proof (prove)\nusing this:\n  f abs_summable_on S ?i\n  S' ?i \\<subseteq> S ?i\n  f abs_summable_on S' ?i\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>S' i. norm (f x))\n    \\<le> (\\<Sum>\\<^sub>ax\\<in>S i. norm (f x))", "by (simp add: infsetsum_mono_neutral_left)"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>S' ?i. norm (f x))\n  \\<le> (\\<Sum>\\<^sub>ax\\<in>S ?i. norm (f x))\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> T\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>F. norm (f x)) \\<le> ?B", "with assms(2)"], ["proof (chain)\npicking this:\n  (\\<lambda>i. \\<Sum>\\<^sub>ax\\<in>S i. norm (f x)) abs_summable_on I\n  (\\<Sum>\\<^sub>ax\\<in>S' ?i. norm (f x))\n  \\<le> (\\<Sum>\\<^sub>ax\\<in>S ?i. norm (f x))", "have sum_I: \"(\\<lambda>i. \\<Sum>\\<^sub>ax\\<in>S' i. norm (f x)) abs_summable_on I\""], ["proof (prove)\nusing this:\n  (\\<lambda>i. \\<Sum>\\<^sub>ax\\<in>S i. norm (f x)) abs_summable_on I\n  (\\<Sum>\\<^sub>ax\\<in>S' ?i. norm (f x))\n  \\<le> (\\<Sum>\\<^sub>ax\\<in>S ?i. norm (f x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. \\<Sum>\\<^sub>ax\\<in>S' i. norm (f x)) abs_summable_on I", "by (smt abs_summable_on_comparison_test' infsetsum_cong norm_ge_zero norm_infsetsum_bound real_norm_def)"], ["proof (state)\nthis:\n  (\\<lambda>i. \\<Sum>\\<^sub>ax\\<in>S' i. norm (f x)) abs_summable_on I\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> T\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>F. norm (f x)) \\<le> ?B", "have \"(\\<Union>i\\<in>I. S i) = (\\<Union>i\\<in>I. S' i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (S ` I) = \\<Union> (S' ` I)", "unfolding S'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (S ` I) = (\\<Union>i\\<in>I. {s \\<in> S i. i = index s})", "by (auto intro!: index_I S_index)"], ["proof (state)\nthis:\n  \\<Union> (S ` I) = \\<Union> (S' ` I)\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> T\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>F. norm (f x)) \\<le> ?B", "with assms(3)"], ["proof (chain)\npicking this:\n  T \\<subseteq> \\<Union> (S ` I)\n  \\<Union> (S ` I) = \\<Union> (S' ` I)", "have T_S': \"T \\<subseteq> (\\<Union>i\\<in>I. S' i)\""], ["proof (prove)\nusing this:\n  T \\<subseteq> \\<Union> (S ` I)\n  \\<Union> (S ` I) = \\<Union> (S' ` I)\n\ngoal (1 subgoal):\n 1. T \\<subseteq> \\<Union> (S' ` I)", "by simp"], ["proof (state)\nthis:\n  T \\<subseteq> \\<Union> (S' ` I)\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> T\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>F. norm (f x)) \\<le> ?B", "have S'_disj: \"(S' i) \\<inter> (S' j) = {}\" if \"i\\<noteq>j\" for i j"], ["proof (prove)\ngoal (1 subgoal):\n 1. S' i \\<inter> S' j = {}", "unfolding S'_def disjnt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {s \\<in> S i. i = index s} \\<inter> {s \\<in> S j. j = index s} = {}", "using that"], ["proof (prove)\nusing this:\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. {s \\<in> S i. i = index s} \\<inter> {s \\<in> S j. j = index s} = {}", "by auto"], ["proof (state)\nthis:\n  ?i \\<noteq> ?j \\<Longrightarrow> S' ?i \\<inter> S' ?j = {}\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> T\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>F. norm (f x)) \\<le> ?B", "define B where \"B i = (\\<Sum>\\<^sub>ax\\<in>S i. norm (f x))\" for i"], ["proof (state)\nthis:\n  B ?i = (\\<Sum>\\<^sub>ax\\<in>S ?i. norm (f x))\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> T\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>F. norm (f x)) \\<le> ?B", "have sum_FS'_B: \"(\\<Sum>x\\<in>F\\<inter>S' i. norm (f x)) \\<le> B i\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>F \\<inter> S' i. norm (f x)) \\<le> B i", "unfolding B_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>F \\<inter> S' i. norm (f x))\n    \\<le> (\\<Sum>\\<^sub>ax\\<in>S i. norm (f x))", "using f_sum_S' finite_F FT"], ["proof (prove)\nusing this:\n  f abs_summable_on S' ?i\n  finite F\n  F \\<subseteq> T\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>F \\<inter> S' i. norm (f x))\n    \\<le> (\\<Sum>\\<^sub>ax\\<in>S i. norm (f x))", "by (metis S'_S abs_summable_finiteI_converse assms(1) finite_Int le_inf_iff order_refl \n        subset_antisym)"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>F \\<inter> S' ?i. norm (f x)) \\<le> B ?i\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> T\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>F. norm (f x)) \\<le> ?B", "have B_pos[simp]: \"B i \\<ge> 0\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> B i", "unfolding B_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> (\\<Sum>\\<^sub>ax\\<in>S i. norm (f x))", "by (rule infsetsum_nonneg, simp)"], ["proof (state)\nthis:\n  0 \\<le> B ?i\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> T\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>F. norm (f x)) \\<le> ?B", "have B_sum_I[simp]: \"B abs_summable_on I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B abs_summable_on I", "by (simp add: B_def assms(2))"], ["proof (state)\nthis:\n  B abs_summable_on I\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> T\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>F. norm (f x)) \\<le> ?B", "define J where \"J = {i\\<in>I. F\\<inter>S' i \\<noteq> {}}\""], ["proof (state)\nthis:\n  J = {i \\<in> I. F \\<inter> S' i \\<noteq> {}}\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> T\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>F. norm (f x)) \\<le> ?B", "have finite_J[simp]: \"finite J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite J", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite J", "define a where \"a i = (SOME x. x\\<in>F\\<inter>S' i)\" for i"], ["proof (state)\nthis:\n  a ?i = (SOME x. x \\<in> F \\<inter> S' ?i)\n\ngoal (1 subgoal):\n 1. finite J", "hence a: \"a i \\<in> F\\<inter>S' i\" if \"i \\<in> J\" for i"], ["proof (prove)\nusing this:\n  a ?i = (SOME x. x \\<in> F \\<inter> S' ?i)\n\ngoal (1 subgoal):\n 1. a i \\<in> F \\<inter> S' i", "unfolding J_def"], ["proof (prove)\nusing this:\n  a ?i = (SOME x. x \\<in> F \\<inter> S' ?i)\n\ngoal (1 subgoal):\n 1. a i \\<in> F \\<inter> S' i", "by (metis (mono_tags) Collect_conj_eq Int_Collect J_def some_in_eq that)"], ["proof (state)\nthis:\n  ?i \\<in> J \\<Longrightarrow> a ?i \\<in> F \\<inter> S' ?i\n\ngoal (1 subgoal):\n 1. finite J", "have xy: \"x = y\"\n      if \"x \\<in> J\" and \"y \\<in> J\" and \"a x = a y\" and \"\\<And>i. i \\<in> J \\<Longrightarrow> a i \\<in> F \\<and> a i \\<in> S' i\"\n        and \"\\<And>i j. i \\<noteq> j \\<Longrightarrow> S' i \\<inter> S' j = {}\"\n        for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = y", "using that a S'_disj"], ["proof (prove)\nusing this:\n  x \\<in> J\n  y \\<in> J\n  a x = a y\n  ?i \\<in> J \\<Longrightarrow> a ?i \\<in> F \\<and> a ?i \\<in> S' ?i\n  ?i \\<noteq> ?j \\<Longrightarrow> S' ?i \\<inter> S' ?j = {}\n  ?i \\<in> J \\<Longrightarrow> a ?i \\<in> F \\<inter> S' ?i\n  ?i \\<noteq> ?j \\<Longrightarrow> S' ?i \\<inter> S' ?j = {}\n\ngoal (1 subgoal):\n 1. x = y", "by (metis S'_disj disjoint_iff_not_equal)"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> J; ?y \\<in> J; a ?x = a ?y;\n   \\<And>i. i \\<in> J \\<Longrightarrow> a i \\<in> F \\<and> a i \\<in> S' i;\n   \\<And>i j.\n      i \\<noteq> j \\<Longrightarrow> S' i \\<inter> S' j = {}\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n\ngoal (1 subgoal):\n 1. finite J", "hence \"inj_on a J\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> J; ?y \\<in> J; a ?x = a ?y;\n   \\<And>i. i \\<in> J \\<Longrightarrow> a i \\<in> F \\<and> a i \\<in> S' i;\n   \\<And>i j.\n      i \\<noteq> j \\<Longrightarrow> S' i \\<inter> S' j = {}\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n\ngoal (1 subgoal):\n 1. inj_on a J", "unfolding inj_on_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> J; ?y \\<in> J; a ?x = a ?y;\n   \\<And>i. i \\<in> J \\<Longrightarrow> a i \\<in> F \\<and> a i \\<in> S' i;\n   \\<And>i j.\n      i \\<noteq> j \\<Longrightarrow> S' i \\<inter> S' j = {}\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>J. \\<forall>y\\<in>J. a x = a y \\<longrightarrow> x = y", "using S'_disj a"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> J; ?y \\<in> J; a ?x = a ?y;\n   \\<And>i. i \\<in> J \\<Longrightarrow> a i \\<in> F \\<and> a i \\<in> S' i;\n   \\<And>i j.\n      i \\<noteq> j \\<Longrightarrow> S' i \\<inter> S' j = {}\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n  ?i \\<noteq> ?j \\<Longrightarrow> S' ?i \\<inter> S' ?j = {}\n  ?i \\<in> J \\<Longrightarrow> a ?i \\<in> F \\<inter> S' ?i\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>J. \\<forall>y\\<in>J. a x = a y \\<longrightarrow> x = y", "by auto"], ["proof (state)\nthis:\n  inj_on a J\n\ngoal (1 subgoal):\n 1. finite J", "moreover"], ["proof (state)\nthis:\n  inj_on a J\n\ngoal (1 subgoal):\n 1. finite J", "have \"a ` J \\<subseteq> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a ` J \\<subseteq> F", "using a"], ["proof (prove)\nusing this:\n  ?i \\<in> J \\<Longrightarrow> a ?i \\<in> F \\<inter> S' ?i\n\ngoal (1 subgoal):\n 1. a ` J \\<subseteq> F", "by auto"], ["proof (state)\nthis:\n  a ` J \\<subseteq> F\n\ngoal (1 subgoal):\n 1. finite J", "ultimately"], ["proof (chain)\npicking this:\n  inj_on a J\n  a ` J \\<subseteq> F", "show \"finite J\""], ["proof (prove)\nusing this:\n  inj_on a J\n  a ` J \\<subseteq> F\n\ngoal (1 subgoal):\n 1. finite J", "using finite_F Finite_Set.inj_on_finite"], ["proof (prove)\nusing this:\n  inj_on a J\n  a ` J \\<subseteq> F\n  finite F\n  \\<lbrakk>inj_on ?f ?A; ?f ` ?A \\<subseteq> ?B; finite ?B\\<rbrakk>\n  \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite J", "by blast"], ["proof (state)\nthis:\n  finite J\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite J\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> T\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>F. norm (f x)) \\<le> ?B", "have JI[simp]: \"J \\<subseteq> I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. J \\<subseteq> I", "unfolding J_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {i \\<in> I. F \\<inter> S' i \\<noteq> {}} \\<subseteq> I", "by simp"], ["proof (state)\nthis:\n  J \\<subseteq> I\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> T\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>F. norm (f x)) \\<le> ?B", "have \"F = (\\<Union>i\\<in>J. F\\<inter>S' i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F = (\\<Union>i\\<in>J. F \\<inter> S' i)", "unfolding J_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. F =\n    (\\<Union>i\\<in>{i \\<in> I. F \\<inter> S' i \\<noteq> {}}.\n        F \\<inter> S' i)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> F \\<Longrightarrow>\n       \\<exists>xa.\n          xa \\<in> I \\<and>\n          F \\<inter> S' xa \\<noteq> {} \\<and> x \\<in> S' xa", "by (metis FT T_S' UN_E disjoint_iff_not_equal subsetD)"], ["proof (state)\nthis:\n  F = (\\<Union>i\\<in>J. F \\<inter> S' i)\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> T\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>F. norm (f x)) \\<le> ?B", "hence \"(\\<Sum>x\\<in>F. norm (f x)) = (\\<Sum>x\\<in>(\\<Union>i\\<in>J. F\\<inter>S' i). norm (f x))\""], ["proof (prove)\nusing this:\n  F = (\\<Union>i\\<in>J. F \\<inter> S' i)\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>F. norm (f x)) =\n    (\\<Sum>x\\<in>(\\<Union>i\\<in>J. F \\<inter> S' i). norm (f x))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>F. norm (f x)) =\n  (\\<Sum>x\\<in>(\\<Union>i\\<in>J. F \\<inter> S' i). norm (f x))\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> T\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>F. norm (f x)) \\<le> ?B", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>F. norm (f x)) =\n  (\\<Sum>x\\<in>(\\<Union>i\\<in>J. F \\<inter> S' i). norm (f x))\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> T\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>F. norm (f x)) \\<le> ?B", "have \"\\<dots> = (\\<Sum>i\\<in>J. \\<Sum>x\\<in>F \\<inter> S' i. norm (f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>(\\<Union>i\\<in>J. F \\<inter> S' i). norm (f x)) =\n    (\\<Sum>i\\<in>J. \\<Sum>x\\<in>F \\<inter> S' i. norm (f x))", "proof (rule sum.UNION_disjoint)"], ["proof (state)\ngoal (3 subgoals):\n 1. finite J\n 2. \\<forall>i\\<in>J. finite (F \\<inter> S' i)\n 3. \\<forall>i\\<in>J.\n       \\<forall>j\\<in>J.\n          i \\<noteq> j \\<longrightarrow>\n          F \\<inter> S' i \\<inter> (F \\<inter> S' j) = {}", "show \"finite J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite J", "by simp"], ["proof (state)\nthis:\n  finite J\n\ngoal (2 subgoals):\n 1. \\<forall>i\\<in>J. finite (F \\<inter> S' i)\n 2. \\<forall>i\\<in>J.\n       \\<forall>j\\<in>J.\n          i \\<noteq> j \\<longrightarrow>\n          F \\<inter> S' i \\<inter> (F \\<inter> S' j) = {}", "show \"\\<forall>i\\<in>J. finite (F \\<inter> S' i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>J. finite (F \\<inter> S' i)", "by (simp add: finite_F)"], ["proof (state)\nthis:\n  \\<forall>i\\<in>J. finite (F \\<inter> S' i)\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>J.\n       \\<forall>j\\<in>J.\n          i \\<noteq> j \\<longrightarrow>\n          F \\<inter> S' i \\<inter> (F \\<inter> S' j) = {}", "show \"\\<forall>i\\<in>J. \\<forall>j\\<in>J. i \\<noteq> j \\<longrightarrow> F \\<inter> S' i \\<inter> (F \\<inter> S' j) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>J.\n       \\<forall>j\\<in>J.\n          i \\<noteq> j \\<longrightarrow>\n          F \\<inter> S' i \\<inter> (F \\<inter> S' j) = {}", "using S'_disj"], ["proof (prove)\nusing this:\n  ?i \\<noteq> ?j \\<Longrightarrow> S' ?i \\<inter> S' ?j = {}\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>J.\n       \\<forall>j\\<in>J.\n          i \\<noteq> j \\<longrightarrow>\n          F \\<inter> S' i \\<inter> (F \\<inter> S' j) = {}", "by auto"], ["proof (state)\nthis:\n  \\<forall>i\\<in>J.\n     \\<forall>j\\<in>J.\n        i \\<noteq> j \\<longrightarrow>\n        F \\<inter> S' i \\<inter> (F \\<inter> S' j) = {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>(\\<Union>i\\<in>J. F \\<inter> S' i). norm (f x)) =\n  (\\<Sum>i\\<in>J. \\<Sum>x\\<in>F \\<inter> S' i. norm (f x))\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> T\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>F. norm (f x)) \\<le> ?B", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>(\\<Union>i\\<in>J. F \\<inter> S' i). norm (f x)) =\n  (\\<Sum>i\\<in>J. \\<Sum>x\\<in>F \\<inter> S' i. norm (f x))\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> T\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>F. norm (f x)) \\<le> ?B", "have \"\\<dots> \\<le> (\\<Sum>i\\<in>J. B i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>J. \\<Sum>x\\<in>F \\<inter> S' i. norm (f x)) \\<le> sum B J", "using sum_FS'_B"], ["proof (prove)\nusing this:\n  (\\<Sum>x\\<in>F \\<inter> S' ?i. norm (f x)) \\<le> B ?i\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>J. \\<Sum>x\\<in>F \\<inter> S' i. norm (f x)) \\<le> sum B J", "by (simp add: ordered_comm_monoid_add_class.sum_mono)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>J. \\<Sum>x\\<in>F \\<inter> S' i. norm (f x)) \\<le> sum B J\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> T\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>F. norm (f x)) \\<le> ?B", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>J. \\<Sum>x\\<in>F \\<inter> S' i. norm (f x)) \\<le> sum B J\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> T\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>F. norm (f x)) \\<le> ?B", "have \"\\<dots> = (\\<Sum>\\<^sub>ai\\<in>J. B i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum B J = infsetsum B J", "by simp"], ["proof (state)\nthis:\n  sum B J = infsetsum B J\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> T\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>F. norm (f x)) \\<le> ?B", "also"], ["proof (state)\nthis:\n  sum B J = infsetsum B J\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> T\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>F. norm (f x)) \\<le> ?B", "have \"\\<dots> \\<le> (\\<Sum>\\<^sub>ai\\<in>I. B i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum B J \\<le> infsetsum B I", "proof (rule infsetsum_mono_neutral_left)"], ["proof (state)\ngoal (5 subgoals):\n 1. B abs_summable_on J\n 2. B abs_summable_on I\n 3. \\<And>x. x \\<in> J \\<Longrightarrow> B x \\<le> B x\n 4. J \\<subseteq> I\n 5. \\<And>x. x \\<in> I - J \\<Longrightarrow> 0 \\<le> B x", "show \"B abs_summable_on J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B abs_summable_on J", "by simp"], ["proof (state)\nthis:\n  B abs_summable_on J\n\ngoal (4 subgoals):\n 1. B abs_summable_on I\n 2. \\<And>x. x \\<in> J \\<Longrightarrow> B x \\<le> B x\n 3. J \\<subseteq> I\n 4. \\<And>x. x \\<in> I - J \\<Longrightarrow> 0 \\<le> B x", "show \"B abs_summable_on I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B abs_summable_on I", "by simp"], ["proof (state)\nthis:\n  B abs_summable_on I\n\ngoal (3 subgoals):\n 1. \\<And>x. x \\<in> J \\<Longrightarrow> B x \\<le> B x\n 2. J \\<subseteq> I\n 3. \\<And>x. x \\<in> I - J \\<Longrightarrow> 0 \\<le> B x", "show \"B x \\<le> B x\"\n      if \"x \\<in> J\"\n      for x :: 'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. B x \\<le> B x", "using that"], ["proof (prove)\nusing this:\n  x \\<in> J\n\ngoal (1 subgoal):\n 1. B x \\<le> B x", "by simp"], ["proof (state)\nthis:\n  ?x \\<in> J \\<Longrightarrow> B ?x \\<le> B ?x\n\ngoal (2 subgoals):\n 1. J \\<subseteq> I\n 2. \\<And>x. x \\<in> I - J \\<Longrightarrow> 0 \\<le> B x", "show \"J \\<subseteq> I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. J \\<subseteq> I", "by simp"], ["proof (state)\nthis:\n  J \\<subseteq> I\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> I - J \\<Longrightarrow> 0 \\<le> B x", "show \"0 \\<le> B x\"\n      if \"x \\<in> I - J\"\n      for x :: 'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> B x", "using that"], ["proof (prove)\nusing this:\n  x \\<in> I - J\n\ngoal (1 subgoal):\n 1. 0 \\<le> B x", "by simp"], ["proof (state)\nthis:\n  ?x \\<in> I - J \\<Longrightarrow> 0 \\<le> B ?x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  infsetsum B J \\<le> infsetsum B I\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> T\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>F. norm (f x)) \\<le> ?B", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>x\\<in>F. norm (f x)) \\<le> infsetsum B I", "show \"(\\<Sum>x\\<in>F. norm(f x)) \\<le> (\\<Sum>\\<^sub>ai\\<in>I. B i)\""], ["proof (prove)\nusing this:\n  (\\<Sum>x\\<in>F. norm (f x)) \\<le> infsetsum B I\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>F. norm (f x)) \\<le> infsetsum B I", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>F. norm (f x)) \\<le> infsetsum B I\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma abs_summable_product':\n  fixes X :: \"'a set\" and Y :: \"'b set\"\n  assumes \"\\<And>x. (\\<lambda>y. f (x,y)) abs_summable_on Y\"\n    and \"(\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>Y. norm (f (x,y))) abs_summable_on X\"\n  shows \"f abs_summable_on X\\<times>Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f abs_summable_on X \\<times> Y", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. f abs_summable_on X \\<times> Y", "define S where \"S x = {x} \\<times> Y\" for x :: 'a"], ["proof (state)\nthis:\n  S ?x = {?x} \\<times> Y\n\ngoal (1 subgoal):\n 1. f abs_summable_on X \\<times> Y", "have bij[simp]: \"bij_betw (Pair x) Y (S x)\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (Pair x) Y (S x)", "proof (rule bij_betwI [where g = snd])"], ["proof (state)\ngoal (4 subgoals):\n 1. Pair x \\<in> Y \\<rightarrow> S x\n 2. snd \\<in> S x \\<rightarrow> Y\n 3. \\<And>xa. xa \\<in> Y \\<Longrightarrow> snd (x, xa) = xa\n 4. \\<And>y. y \\<in> S x \\<Longrightarrow> (x, snd y) = y", "show \"Pair x \\<in> Y \\<rightarrow> S x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pair x \\<in> Y \\<rightarrow> S x", "by (simp add: S_def)"], ["proof (state)\nthis:\n  Pair x \\<in> Y \\<rightarrow> S x\n\ngoal (3 subgoals):\n 1. snd \\<in> S x \\<rightarrow> Y\n 2. \\<And>xa. xa \\<in> Y \\<Longrightarrow> snd (x, xa) = xa\n 3. \\<And>y. y \\<in> S x \\<Longrightarrow> (x, snd y) = y", "show \"snd \\<in> S x \\<rightarrow> Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd \\<in> S x \\<rightarrow> Y", "using Pi_I' S_def"], ["proof (prove)\nusing this:\n  (\\<And>x. x \\<in> ?A \\<longrightarrow> ?f x \\<in> ?B x) \\<Longrightarrow>\n  ?f \\<in> Pi ?A ?B\n  S ?x = {?x} \\<times> Y\n\ngoal (1 subgoal):\n 1. snd \\<in> S x \\<rightarrow> Y", "by auto"], ["proof (state)\nthis:\n  snd \\<in> S x \\<rightarrow> Y\n\ngoal (2 subgoals):\n 1. \\<And>xa. xa \\<in> Y \\<Longrightarrow> snd (x, xa) = xa\n 2. \\<And>y. y \\<in> S x \\<Longrightarrow> (x, snd y) = y", "show \"snd (y, x::'b) = x\"\n      if \"x \\<in> Y\"\n      for x :: 'b and y::'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (y, x) = x", "using that"], ["proof (prove)\nusing this:\n  x \\<in> Y\n\ngoal (1 subgoal):\n 1. snd (y, x) = x", "by simp"], ["proof (state)\nthis:\n  ?x \\<in> Y \\<Longrightarrow> snd (?y, ?x) = ?x\n\ngoal (1 subgoal):\n 1. \\<And>y. y \\<in> S x \\<Longrightarrow> (x, snd y) = y", "show \"(x, snd y::'b) = y\"\n      if \"y \\<in> S x\"\n      for y :: \"'a \\<times> 'b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, snd y) = y", "using that"], ["proof (prove)\nusing this:\n  y \\<in> S x\n\ngoal (1 subgoal):\n 1. (x, snd y) = y", "unfolding S_def"], ["proof (prove)\nusing this:\n  y \\<in> {x} \\<times> Y\n\ngoal (1 subgoal):\n 1. (x, snd y) = y", "by auto"], ["proof (state)\nthis:\n  ?y \\<in> S x \\<Longrightarrow> (x, snd ?y) = ?y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bij_betw (Pair ?x) Y (S ?x)\n\ngoal (1 subgoal):\n 1. f abs_summable_on X \\<times> Y", "have \"f abs_summable_on S x\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. f abs_summable_on S x", "proof (subst abs_summable_on_reindex_bij_betw [symmetric , where A = Y and g = \"\\<lambda>y. (x,y)\"])"], ["proof (state)\ngoal (2 subgoals):\n 1. bij_betw (Pair x) Y (S x)\n 2. (\\<lambda>xa. f (x, xa)) abs_summable_on Y", "show \"bij_betw (Pair x) Y (S x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (Pair x) Y (S x)", "by simp"], ["proof (state)\nthis:\n  bij_betw (Pair x) Y (S x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>xa. f (x, xa)) abs_summable_on Y", "show \"(\\<lambda>xa. f (x, xa)) abs_summable_on Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>xa. f (x, xa)) abs_summable_on Y", "using assms(1)"], ["proof (prove)\nusing this:\n  (\\<lambda>y. f (?x, y)) abs_summable_on Y\n\ngoal (1 subgoal):\n 1. (\\<lambda>xa. f (x, xa)) abs_summable_on Y", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>xa. f (x, xa)) abs_summable_on Y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f abs_summable_on S ?x\n\ngoal (1 subgoal):\n 1. f abs_summable_on X \\<times> Y", "moreover"], ["proof (state)\nthis:\n  f abs_summable_on S ?x\n\ngoal (1 subgoal):\n 1. f abs_summable_on X \\<times> Y", "have \"bij_betw (Pair x) Y (S x)\"\n    for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (Pair x) Y (S x)", "unfolding S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (Pair x) Y ({x} \\<times> Y)", "using bij_betw_def"], ["proof (prove)\nusing this:\n  bij_betw ?f ?A ?B = (inj_on ?f ?A \\<and> ?f ` ?A = ?B)\n\ngoal (1 subgoal):\n 1. bij_betw (Pair x) Y ({x} \\<times> Y)", "using S_def bij"], ["proof (prove)\nusing this:\n  bij_betw ?f ?A ?B = (inj_on ?f ?A \\<and> ?f ` ?A = ?B)\n  S ?x = {?x} \\<times> Y\n  bij_betw (Pair ?x) Y (S ?x)\n\ngoal (1 subgoal):\n 1. bij_betw (Pair x) Y ({x} \\<times> Y)", "by auto"], ["proof (state)\nthis:\n  bij_betw (Pair ?x) Y (S ?x)\n\ngoal (1 subgoal):\n 1. f abs_summable_on X \\<times> Y", "hence \"(\\<Sum>\\<^sub>ay\\<in>Y. norm (f (x, y))) = (\\<Sum>\\<^sub>ay\\<in>S x. norm (f y))\" for x"], ["proof (prove)\nusing this:\n  bij_betw (Pair ?x) Y (S ?x)\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ay\\<in>Y. norm (f (x, y))) =\n    (\\<Sum>\\<^sub>ay\\<in>S x. norm (f y))", "by (rule infsetsum_reindex_bij_betw)"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ay\\<in>Y. norm (f (?x, y))) =\n  (\\<Sum>\\<^sub>ay\\<in>S ?x. norm (f y))\n\ngoal (1 subgoal):\n 1. f abs_summable_on X \\<times> Y", "hence \"(\\<lambda>i. \\<Sum>\\<^sub>ax\\<in>S i. norm (f x)) abs_summable_on X\""], ["proof (prove)\nusing this:\n  (\\<Sum>\\<^sub>ay\\<in>Y. norm (f (?x, y))) =\n  (\\<Sum>\\<^sub>ay\\<in>S ?x. norm (f y))\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. \\<Sum>\\<^sub>ax\\<in>S i. norm (f x)) abs_summable_on X", "using assms(2)"], ["proof (prove)\nusing this:\n  (\\<Sum>\\<^sub>ay\\<in>Y. norm (f (?x, y))) =\n  (\\<Sum>\\<^sub>ay\\<in>S ?x. norm (f y))\n  (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>Y. norm (f (x, y))) abs_summable_on X\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. \\<Sum>\\<^sub>ax\\<in>S i. norm (f x)) abs_summable_on X", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>i. \\<Sum>\\<^sub>ax\\<in>S i. norm (f x)) abs_summable_on X\n\ngoal (1 subgoal):\n 1. f abs_summable_on X \\<times> Y", "hence \"(\\<lambda>i. \\<Sum>\\<^sub>ax\\<in>S i. norm (f x)) abs_summable_on X\""], ["proof (prove)\nusing this:\n  (\\<lambda>i. \\<Sum>\\<^sub>ax\\<in>S i. norm (f x)) abs_summable_on X\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. \\<Sum>\\<^sub>ax\\<in>S i. norm (f x)) abs_summable_on X", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>i. \\<Sum>\\<^sub>ax\\<in>S i. norm (f x)) abs_summable_on X\n\ngoal (1 subgoal):\n 1. f abs_summable_on X \\<times> Y", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>i. \\<Sum>\\<^sub>ax\\<in>S i. norm (f x)) abs_summable_on X\n\ngoal (1 subgoal):\n 1. f abs_summable_on X \\<times> Y", "have \"X \\<times> Y \\<subseteq> (\\<Union>i\\<in>X. S i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<times> Y \\<subseteq> \\<Union> (S ` X)", "unfolding S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<times> Y \\<subseteq> (\\<Union>i\\<in>X. {i} \\<times> Y)", "by auto"], ["proof (state)\nthis:\n  X \\<times> Y \\<subseteq> \\<Union> (S ` X)\n\ngoal (1 subgoal):\n 1. f abs_summable_on X \\<times> Y", "ultimately"], ["proof (chain)\npicking this:\n  f abs_summable_on S ?x\n  (\\<lambda>i. \\<Sum>\\<^sub>ax\\<in>S i. norm (f x)) abs_summable_on X\n  X \\<times> Y \\<subseteq> \\<Union> (S ` X)", "show ?thesis"], ["proof (prove)\nusing this:\n  f abs_summable_on S ?x\n  (\\<lambda>i. \\<Sum>\\<^sub>ax\\<in>S i. norm (f x)) abs_summable_on X\n  X \\<times> Y \\<subseteq> \\<Union> (S ` X)\n\ngoal (1 subgoal):\n 1. f abs_summable_on X \\<times> Y", "by (rule abs_summable_partition[where S=S and I=X])"], ["proof (state)\nthis:\n  f abs_summable_on X \\<times> Y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infsetsum_prod_PiE:\n  fixes f :: \"'a \\<Rightarrow> 'b \\<Rightarrow> 'c :: {real_normed_field,banach,second_countable_topology}\"\n  assumes finite: \"finite A\"\n    and summable: \"\\<And>x. x \\<in> A \\<Longrightarrow> f x abs_summable_on B x\"\n  shows \"infsetsum (\\<lambda>g. \\<Prod>x\\<in>A. f x (g x)) (PiE A B) = (\\<Prod>x\\<in>A. infsetsum (f x) (B x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ag\\<in>Pi\\<^sub>E A B. \\<Prod>x\\<in>A. f x (g x)) =\n    (\\<Prod>x\\<in>A. infsetsum (f x) (B x))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ag\\<in>Pi\\<^sub>E A B. \\<Prod>x\\<in>A. f x (g x)) =\n    (\\<Prod>x\\<in>A. infsetsum (f x) (B x))", "define B' where \"B' x = {y\\<in>B x. 0 \\<noteq> f x y}\" for x"], ["proof (state)\nthis:\n  B' ?x = {y \\<in> B ?x. (0::'c) \\<noteq> f ?x y}\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ag\\<in>Pi\\<^sub>E A B. \\<Prod>x\\<in>A. f x (g x)) =\n    (\\<Prod>x\\<in>A. infsetsum (f x) (B x))", "have [simp]: \"B' x \\<subseteq> B x\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. B' x \\<subseteq> B x", "unfolding B'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {y \\<in> B x. (0::'c) \\<noteq> f x y} \\<subseteq> B x", "by simp"], ["proof (state)\nthis:\n  B' ?x \\<subseteq> B ?x\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ag\\<in>Pi\\<^sub>E A B. \\<Prod>x\\<in>A. f x (g x)) =\n    (\\<Prod>x\\<in>A. infsetsum (f x) (B x))", "have PiE_subset: \"Pi\\<^sub>E A B' \\<subseteq> Pi\\<^sub>E A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pi\\<^sub>E A B' \\<subseteq> Pi\\<^sub>E A B", "by (simp add: PiE_mono)"], ["proof (state)\nthis:\n  Pi\\<^sub>E A B' \\<subseteq> Pi\\<^sub>E A B\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ag\\<in>Pi\\<^sub>E A B. \\<Prod>x\\<in>A. f x (g x)) =\n    (\\<Prod>x\\<in>A. infsetsum (f x) (B x))", "have \"f x abs_summable_on B x\"\n    if \"x\\<in>A\"\n    for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. f x abs_summable_on B x", "using that"], ["proof (prove)\nusing this:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. f x abs_summable_on B x", "by (simp add: local.summable)"], ["proof (state)\nthis:\n  ?x \\<in> A \\<Longrightarrow> f ?x abs_summable_on B ?x\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ag\\<in>Pi\\<^sub>E A B. \\<Prod>x\\<in>A. f x (g x)) =\n    (\\<Prod>x\\<in>A. infsetsum (f x) (B x))", "hence countable: \"countable (B' x)\" if \"x\\<in>A\" for x"], ["proof (prove)\nusing this:\n  ?x \\<in> A \\<Longrightarrow> f ?x abs_summable_on B ?x\n\ngoal (1 subgoal):\n 1. countable (B' x)", "unfolding B'_def"], ["proof (prove)\nusing this:\n  ?x \\<in> A \\<Longrightarrow> f ?x abs_summable_on B ?x\n\ngoal (1 subgoal):\n 1. countable {y \\<in> B x. (0::'c) \\<noteq> f x y}", "using abs_summable_countable"], ["proof (prove)\nusing this:\n  ?x \\<in> A \\<Longrightarrow> f ?x abs_summable_on B ?x\n  ?\\<mu> abs_summable_on ?T \\<Longrightarrow>\n  countable {x \\<in> ?T. (0::?'b) \\<noteq> ?\\<mu> x}\n\ngoal (1 subgoal):\n 1. countable {y \\<in> B x. (0::'c) \\<noteq> f x y}", "using that"], ["proof (prove)\nusing this:\n  ?x \\<in> A \\<Longrightarrow> f ?x abs_summable_on B ?x\n  ?\\<mu> abs_summable_on ?T \\<Longrightarrow>\n  countable {x \\<in> ?T. (0::?'b) \\<noteq> ?\\<mu> x}\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. countable {y \\<in> B x. (0::'c) \\<noteq> f x y}", "by blast"], ["proof (state)\nthis:\n  ?x \\<in> A \\<Longrightarrow> countable (B' ?x)\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ag\\<in>Pi\\<^sub>E A B. \\<Prod>x\\<in>A. f x (g x)) =\n    (\\<Prod>x\\<in>A. infsetsum (f x) (B x))", "have summable: \"f x abs_summable_on B' x\" if \"x\\<in>A\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. f x abs_summable_on B' x", "using that summable[where x = x] \\<open>\\<And>x. B' x \\<subseteq> B x\\<close> abs_summable_on_subset"], ["proof (prove)\nusing this:\n  x \\<in> A\n  x \\<in> A \\<Longrightarrow> f x abs_summable_on B x\n  B' ?x \\<subseteq> B ?x\n  \\<lbrakk>?f abs_summable_on ?B; ?A \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> ?f abs_summable_on ?A\n\ngoal (1 subgoal):\n 1. f x abs_summable_on B' x", "by blast"], ["proof (state)\nthis:\n  ?x \\<in> A \\<Longrightarrow> f ?x abs_summable_on B' ?x\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ag\\<in>Pi\\<^sub>E A B. \\<Prod>x\\<in>A. f x (g x)) =\n    (\\<Prod>x\\<in>A. infsetsum (f x) (B x))", "have 0: \"(\\<Prod>x\\<in>A. f x (g x)) = 0\" if \"g \\<in> Pi\\<^sub>E A B - Pi\\<^sub>E A B'\" for g"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>x\\<in>A. f x (g x)) = (0::'c)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Prod>x\\<in>A. f x (g x)) = (0::'c)", "from that"], ["proof (chain)\npicking this:\n  g \\<in> Pi\\<^sub>E A B - Pi\\<^sub>E A B'", "have \"g \\<in> extensional A\""], ["proof (prove)\nusing this:\n  g \\<in> Pi\\<^sub>E A B - Pi\\<^sub>E A B'\n\ngoal (1 subgoal):\n 1. g \\<in> extensional A", "by (simp add: PiE_def)"], ["proof (state)\nthis:\n  g \\<in> extensional A\n\ngoal (1 subgoal):\n 1. (\\<Prod>x\\<in>A. f x (g x)) = (0::'c)", "from that"], ["proof (chain)\npicking this:\n  g \\<in> Pi\\<^sub>E A B - Pi\\<^sub>E A B'", "have \"g \\<notin> Pi\\<^sub>E A B'\""], ["proof (prove)\nusing this:\n  g \\<in> Pi\\<^sub>E A B - Pi\\<^sub>E A B'\n\ngoal (1 subgoal):\n 1. g \\<notin> Pi\\<^sub>E A B'", "by simp"], ["proof (state)\nthis:\n  g \\<notin> Pi\\<^sub>E A B'\n\ngoal (1 subgoal):\n 1. (\\<Prod>x\\<in>A. f x (g x)) = (0::'c)", "with \\<open>g \\<in> extensional A\\<close>"], ["proof (chain)\npicking this:\n  g \\<in> extensional A\n  g \\<notin> Pi\\<^sub>E A B'", "have \"g \\<notin> Pi A B'\""], ["proof (prove)\nusing this:\n  g \\<in> extensional A\n  g \\<notin> Pi\\<^sub>E A B'\n\ngoal (1 subgoal):\n 1. g \\<notin> Pi A B'", "unfolding PiE_def"], ["proof (prove)\nusing this:\n  g \\<in> extensional A\n  g \\<notin> Pi A B' \\<inter> extensional A\n\ngoal (1 subgoal):\n 1. g \\<notin> Pi A B'", "by simp"], ["proof (state)\nthis:\n  g \\<notin> Pi A B'\n\ngoal (1 subgoal):\n 1. (\\<Prod>x\\<in>A. f x (g x)) = (0::'c)", "then"], ["proof (chain)\npicking this:\n  g \\<notin> Pi A B'", "obtain x where \"x\\<in>A\" and \"g x \\<notin> B' x\""], ["proof (prove)\nusing this:\n  g \\<notin> Pi A B'\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> A; g x \\<notin> B' x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding Pi_def"], ["proof (prove)\nusing this:\n  g \\<notin> {f. \\<forall>x. x \\<in> A \\<longrightarrow> f x \\<in> B' x}\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> A; g x \\<notin> B' x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> A\n  g x \\<notin> B' x\n\ngoal (1 subgoal):\n 1. (\\<Prod>x\\<in>A. f x (g x)) = (0::'c)", "hence \"f x (g x) = 0\""], ["proof (prove)\nusing this:\n  x \\<in> A\n  g x \\<notin> B' x\n\ngoal (1 subgoal):\n 1. f x (g x) = (0::'c)", "unfolding B'_def"], ["proof (prove)\nusing this:\n  x \\<in> A\n  g x \\<notin> {y \\<in> B x. (0::'c) \\<noteq> f x y}\n\ngoal (1 subgoal):\n 1. f x (g x) = (0::'c)", "using that"], ["proof (prove)\nusing this:\n  x \\<in> A\n  g x \\<notin> {y \\<in> B x. (0::'c) \\<noteq> f x y}\n  g \\<in> Pi\\<^sub>E A B - Pi\\<^sub>E A B'\n\ngoal (1 subgoal):\n 1. f x (g x) = (0::'c)", "by auto"], ["proof (state)\nthis:\n  f x (g x) = (0::'c)\n\ngoal (1 subgoal):\n 1. (\\<Prod>x\\<in>A. f x (g x)) = (0::'c)", "with finite"], ["proof (chain)\npicking this:\n  finite A\n  f x (g x) = (0::'c)", "show ?thesis"], ["proof (prove)\nusing this:\n  finite A\n  f x (g x) = (0::'c)\n\ngoal (1 subgoal):\n 1. (\\<Prod>x\\<in>A. f x (g x)) = (0::'c)", "proof (rule_tac prod_zero)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite A; f x (g x) = (0::'c)\\<rbrakk>\n    \\<Longrightarrow> finite A\n 2. \\<lbrakk>finite A; f x (g x) = (0::'c)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a\\<in>A. f a (g a) = (0::'c)", "show \"finite A\"\n        if \"finite A\"\n          and \"f x (g x) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite A", "using that"], ["proof (prove)\nusing this:\n  finite A\n  f x (g x) = (0::'c)\n\ngoal (1 subgoal):\n 1. finite A", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>finite A; f x (g x) = (0::'c)\\<rbrakk> \\<Longrightarrow> finite A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; f x (g x) = (0::'c)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a\\<in>A. f a (g a) = (0::'c)", "show \"\\<exists>a\\<in>A. f a (g a) = 0\"\n        if \"finite A\"\n          and \"f x (g x) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a\\<in>A. f a (g a) = (0::'c)", "using that \\<open>x \\<in> A\\<close>"], ["proof (prove)\nusing this:\n  finite A\n  f x (g x) = (0::'c)\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<exists>a\\<in>A. f a (g a) = (0::'c)", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>finite A; f x (g x) = (0::'c)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a\\<in>A. f a (g a) = (0::'c)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Prod>x\\<in>A. f x (g x)) = (0::'c)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?g \\<in> Pi\\<^sub>E A B - Pi\\<^sub>E A B' \\<Longrightarrow>\n  (\\<Prod>x\\<in>A. f x (?g x)) = (0::'c)\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ag\\<in>Pi\\<^sub>E A B. \\<Prod>x\\<in>A. f x (g x)) =\n    (\\<Prod>x\\<in>A. infsetsum (f x) (B x))", "have d: \"infsetsum (f x) (B' x) = infsetsum (f x) (B x)\"\n    if \"x \\<in> A\"\n    for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum (f x) (B' x) = infsetsum (f x) (B x)", "proof (rule infsetsum_cong_neutral)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>xa. xa \\<in> B' x - B x \\<Longrightarrow> f x xa = (0::'c)\n 2. \\<And>xa. xa \\<in> B x - B' x \\<Longrightarrow> f x xa = (0::'c)\n 3. \\<And>xa. xa \\<in> B' x \\<inter> B x \\<Longrightarrow> f x xa = f x xa", "show \"f y x = 0\"\n      if \"x \\<in> B' y - B y\"\n      for x :: 'b and y :: 'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. f y x = (0::'c)", "using that"], ["proof (prove)\nusing this:\n  x \\<in> B' y - B y\n\ngoal (1 subgoal):\n 1. f y x = (0::'c)", "by (meson DiffD1 DiffD2 \\<open>\\<And>x. B' x \\<subseteq> B x\\<close> in_mono)"], ["proof (state)\nthis:\n  ?x \\<in> B' ?y - B ?y \\<Longrightarrow> f ?y ?x = (0::'c)\n\ngoal (2 subgoals):\n 1. \\<And>xa. xa \\<in> B x - B' x \\<Longrightarrow> f x xa = (0::'c)\n 2. \\<And>xa. xa \\<in> B' x \\<inter> B x \\<Longrightarrow> f x xa = f x xa", "show \"f y x = 0\"\n      if \"x \\<in> B y - B' y\"\n      for x :: 'b and y"], ["proof (prove)\ngoal (1 subgoal):\n 1. f y x = (0::'c)", "using that B'_def"], ["proof (prove)\nusing this:\n  x \\<in> B y - B' y\n  B' ?x = {y \\<in> B ?x. (0::'c) \\<noteq> f ?x y}\n\ngoal (1 subgoal):\n 1. f y x = (0::'c)", "by auto"], ["proof (state)\nthis:\n  ?x \\<in> B ?y - B' ?y \\<Longrightarrow> f ?y ?x = (0::'c)\n\ngoal (1 subgoal):\n 1. \\<And>xa. xa \\<in> B' x \\<inter> B x \\<Longrightarrow> f x xa = f x xa", "show \"f y x = f y x\"\n      if \"x \\<in> B' y \\<inter> B y\"\n      for x :: 'b and y"], ["proof (prove)\ngoal (1 subgoal):\n 1. f y x = f y x", "using that"], ["proof (prove)\nusing this:\n  x \\<in> B' y \\<inter> B y\n\ngoal (1 subgoal):\n 1. f y x = f y x", "by simp"], ["proof (state)\nthis:\n  ?x \\<in> B' ?y \\<inter> B ?y \\<Longrightarrow> f ?y ?x = f ?y ?x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x \\<in> A \\<Longrightarrow>\n  infsetsum (f ?x) (B' ?x) = infsetsum (f ?x) (B ?x)\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ag\\<in>Pi\\<^sub>E A B. \\<Prod>x\\<in>A. f x (g x)) =\n    (\\<Prod>x\\<in>A. infsetsum (f x) (B x))", "have \"infsetsum (\\<lambda>g. \\<Prod>x\\<in>A. f x (g x)) (PiE A B)\n      = infsetsum (\\<lambda>g. \\<Prod>x\\<in>A. f x (g x)) (PiE A B')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ag\\<in>Pi\\<^sub>E A B. \\<Prod>x\\<in>A. f x (g x)) =\n    (\\<Sum>\\<^sub>ag\\<in>Pi\\<^sub>E A B'. \\<Prod>x\\<in>A. f x (g x))", "proof (rule infsetsum_cong_neutral)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> Pi\\<^sub>E A B - Pi\\<^sub>E A B' \\<Longrightarrow>\n       (\\<Prod>xa\\<in>A. f xa (x xa)) = (0::'c)\n 2. \\<And>x.\n       x \\<in> Pi\\<^sub>E A B' - Pi\\<^sub>E A B \\<Longrightarrow>\n       (\\<Prod>xa\\<in>A. f xa (x xa)) = (0::'c)\n 3. \\<And>x.\n       x \\<in> Pi\\<^sub>E A B \\<inter> Pi\\<^sub>E A B' \\<Longrightarrow>\n       (\\<Prod>xa\\<in>A. f xa (x xa)) = (\\<Prod>xa\\<in>A. f xa (x xa))", "show \"(\\<Prod>a\\<in>A. f a (x a)) = 0\"\n      if \"x \\<in> Pi\\<^sub>E A B - Pi\\<^sub>E A B'\"\n      for x :: \"'a \\<Rightarrow> 'b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>a\\<in>A. f a (x a)) = (0::'c)", "using that"], ["proof (prove)\nusing this:\n  x \\<in> Pi\\<^sub>E A B - Pi\\<^sub>E A B'\n\ngoal (1 subgoal):\n 1. (\\<Prod>a\\<in>A. f a (x a)) = (0::'c)", "by (simp add: \"0\")"], ["proof (state)\nthis:\n  ?x \\<in> Pi\\<^sub>E A B - Pi\\<^sub>E A B' \\<Longrightarrow>\n  (\\<Prod>a\\<in>A. f a (?x a)) = (0::'c)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> Pi\\<^sub>E A B' - Pi\\<^sub>E A B \\<Longrightarrow>\n       (\\<Prod>xa\\<in>A. f xa (x xa)) = (0::'c)\n 2. \\<And>x.\n       x \\<in> Pi\\<^sub>E A B \\<inter> Pi\\<^sub>E A B' \\<Longrightarrow>\n       (\\<Prod>xa\\<in>A. f xa (x xa)) = (\\<Prod>xa\\<in>A. f xa (x xa))", "show \"(\\<Prod>a\\<in>A. f a (x a)) = 0\"\n      if \"x \\<in> Pi\\<^sub>E A B' - Pi\\<^sub>E A B\"\n      for x :: \"'a \\<Rightarrow> 'b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>a\\<in>A. f a (x a)) = (0::'c)", "using that PiE_subset"], ["proof (prove)\nusing this:\n  x \\<in> Pi\\<^sub>E A B' - Pi\\<^sub>E A B\n  Pi\\<^sub>E A B' \\<subseteq> Pi\\<^sub>E A B\n\ngoal (1 subgoal):\n 1. (\\<Prod>a\\<in>A. f a (x a)) = (0::'c)", "by auto"], ["proof (state)\nthis:\n  ?x \\<in> Pi\\<^sub>E A B' - Pi\\<^sub>E A B \\<Longrightarrow>\n  (\\<Prod>a\\<in>A. f a (?x a)) = (0::'c)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Pi\\<^sub>E A B \\<inter> Pi\\<^sub>E A B' \\<Longrightarrow>\n       (\\<Prod>xa\\<in>A. f xa (x xa)) = (\\<Prod>xa\\<in>A. f xa (x xa))", "show \"(\\<Prod>a\\<in>A. f a (x a)) = (\\<Prod>a\\<in>A. f a (x a))\"\n      if \"x \\<in> Pi\\<^sub>E A B \\<inter> Pi\\<^sub>E A B'\"\n      for x :: \"'a \\<Rightarrow> 'b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>a\\<in>A. f a (x a)) = (\\<Prod>a\\<in>A. f a (x a))", "using that"], ["proof (prove)\nusing this:\n  x \\<in> Pi\\<^sub>E A B \\<inter> Pi\\<^sub>E A B'\n\ngoal (1 subgoal):\n 1. (\\<Prod>a\\<in>A. f a (x a)) = (\\<Prod>a\\<in>A. f a (x a))", "by simp"], ["proof (state)\nthis:\n  ?x \\<in> Pi\\<^sub>E A B \\<inter> Pi\\<^sub>E A B' \\<Longrightarrow>\n  (\\<Prod>a\\<in>A. f a (?x a)) = (\\<Prod>a\\<in>A. f a (?x a))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ag\\<in>Pi\\<^sub>E A B. \\<Prod>x\\<in>A. f x (g x)) =\n  (\\<Sum>\\<^sub>ag\\<in>Pi\\<^sub>E A B'. \\<Prod>x\\<in>A. f x (g x))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ag\\<in>Pi\\<^sub>E A B. \\<Prod>x\\<in>A. f x (g x)) =\n    (\\<Prod>x\\<in>A. infsetsum (f x) (B x))", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ag\\<in>Pi\\<^sub>E A B. \\<Prod>x\\<in>A. f x (g x)) =\n  (\\<Sum>\\<^sub>ag\\<in>Pi\\<^sub>E A B'. \\<Prod>x\\<in>A. f x (g x))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ag\\<in>Pi\\<^sub>E A B. \\<Prod>x\\<in>A. f x (g x)) =\n    (\\<Prod>x\\<in>A. infsetsum (f x) (B x))", "have \"\\<dots> = (\\<Prod>x\\<in>A. infsetsum (f x) (B' x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ag\\<in>Pi\\<^sub>E A B'. \\<Prod>x\\<in>A. f x (g x)) =\n    (\\<Prod>x\\<in>A. infsetsum (f x) (B' x))", "using finite countable summable"], ["proof (prove)\nusing this:\n  finite A\n  ?x \\<in> A \\<Longrightarrow> countable (B' ?x)\n  ?x \\<in> A \\<Longrightarrow> f ?x abs_summable_on B' ?x\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ag\\<in>Pi\\<^sub>E A B'. \\<Prod>x\\<in>A. f x (g x)) =\n    (\\<Prod>x\\<in>A. infsetsum (f x) (B' x))", "by (rule infsetsum_prod_PiE)"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ag\\<in>Pi\\<^sub>E A B'. \\<Prod>x\\<in>A. f x (g x)) =\n  (\\<Prod>x\\<in>A. infsetsum (f x) (B' x))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ag\\<in>Pi\\<^sub>E A B. \\<Prod>x\\<in>A. f x (g x)) =\n    (\\<Prod>x\\<in>A. infsetsum (f x) (B x))", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ag\\<in>Pi\\<^sub>E A B'. \\<Prod>x\\<in>A. f x (g x)) =\n  (\\<Prod>x\\<in>A. infsetsum (f x) (B' x))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ag\\<in>Pi\\<^sub>E A B. \\<Prod>x\\<in>A. f x (g x)) =\n    (\\<Prod>x\\<in>A. infsetsum (f x) (B x))", "have \"\\<dots> = (\\<Prod>x\\<in>A. infsetsum (f x) (B x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>x\\<in>A. infsetsum (f x) (B' x)) =\n    (\\<Prod>x\\<in>A. infsetsum (f x) (B x))", "using d"], ["proof (prove)\nusing this:\n  ?x \\<in> A \\<Longrightarrow>\n  infsetsum (f ?x) (B' ?x) = infsetsum (f ?x) (B ?x)\n\ngoal (1 subgoal):\n 1. (\\<Prod>x\\<in>A. infsetsum (f x) (B' x)) =\n    (\\<Prod>x\\<in>A. infsetsum (f x) (B x))", "by auto"], ["proof (state)\nthis:\n  (\\<Prod>x\\<in>A. infsetsum (f x) (B' x)) =\n  (\\<Prod>x\\<in>A. infsetsum (f x) (B x))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ag\\<in>Pi\\<^sub>E A B. \\<Prod>x\\<in>A. f x (g x)) =\n    (\\<Prod>x\\<in>A. infsetsum (f x) (B x))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>\\<^sub>ag\\<in>Pi\\<^sub>E A B. \\<Prod>x\\<in>A. f x (g x)) =\n  (\\<Prod>x\\<in>A. infsetsum (f x) (B x))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>\\<^sub>ag\\<in>Pi\\<^sub>E A B. \\<Prod>x\\<in>A. f x (g x)) =\n  (\\<Prod>x\\<in>A. infsetsum (f x) (B x))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ag\\<in>Pi\\<^sub>E A B. \\<Prod>x\\<in>A. f x (g x)) =\n    (\\<Prod>x\\<in>A. infsetsum (f x) (B x))", "."], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ag\\<in>Pi\\<^sub>E A B. \\<Prod>x\\<in>A. f x (g x)) =\n  (\\<Prod>x\\<in>A. infsetsum (f x) (B x))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infsetsum_0D:\n  fixes f :: \"'a \\<Rightarrow> real\"\n  assumes \"infsetsum f A = 0\"\n    and abs_sum: \"f abs_summable_on A\"\n    and nneg: \"\\<And>x. x \\<in> A \\<Longrightarrow> f x \\<ge> 0\"\n    and \"x \\<in> A\"\n  shows \"f x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f x = 0", "from abs_sum"], ["proof (chain)\npicking this:\n  f abs_summable_on A", "have [simp]: \"f abs_summable_on (A-{x})\""], ["proof (prove)\nusing this:\n  f abs_summable_on A\n\ngoal (1 subgoal):\n 1. f abs_summable_on A - {x}", "by (meson Diff_subset abs_summable_on_subset)"], ["proof (state)\nthis:\n  f abs_summable_on A - {x}\n\ngoal (1 subgoal):\n 1. f x = 0", "from abs_sum \\<open>x\\<in>A\\<close>"], ["proof (chain)\npicking this:\n  f abs_summable_on A\n  x \\<in> A", "have [simp]: \"f abs_summable_on {x}\""], ["proof (prove)\nusing this:\n  f abs_summable_on A\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. f abs_summable_on {x}", "by auto"], ["proof (state)\nthis:\n  f abs_summable_on {x}\n\ngoal (1 subgoal):\n 1. f x = 0", "have a: \"\\<And>a. a \\<in> A - {x} \\<Longrightarrow> a \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a. a \\<in> A - {x} \\<Longrightarrow> a \\<in> A", "by simp"], ["proof (state)\nthis:\n  ?a \\<in> A - {x} \\<Longrightarrow> ?a \\<in> A\n\ngoal (1 subgoal):\n 1. f x = 0", "from assms"], ["proof (chain)\npicking this:\n  infsetsum f A = 0\n  f abs_summable_on A\n  ?x \\<in> A \\<Longrightarrow> 0 \\<le> f ?x\n  x \\<in> A", "have \"0 = infsetsum f A\""], ["proof (prove)\nusing this:\n  infsetsum f A = 0\n  f abs_summable_on A\n  ?x \\<in> A \\<Longrightarrow> 0 \\<le> f ?x\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. 0 = infsetsum f A", "by simp"], ["proof (state)\nthis:\n  0 = infsetsum f A\n\ngoal (1 subgoal):\n 1. f x = 0", "also"], ["proof (state)\nthis:\n  0 = infsetsum f A\n\ngoal (1 subgoal):\n 1. f x = 0", "have \"\\<dots> = infsetsum f (A-{x}) + infsetsum f {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum f A = infsetsum f (A - {x}) + infsetsum f {x}", "proof (subst infsetsum_Un_disjoint [symmetric])"], ["proof (state)\ngoal (4 subgoals):\n 1. f abs_summable_on A - {x}\n 2. f abs_summable_on {x}\n 3. (A - {x}) \\<inter> {x} = {}\n 4. infsetsum f A = infsetsum f (A - {x} \\<union> {x})", "show \"f abs_summable_on A - {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f abs_summable_on A - {x}", "by simp"], ["proof (state)\nthis:\n  f abs_summable_on A - {x}\n\ngoal (3 subgoals):\n 1. f abs_summable_on {x}\n 2. (A - {x}) \\<inter> {x} = {}\n 3. infsetsum f A = infsetsum f (A - {x} \\<union> {x})", "show \"f abs_summable_on {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f abs_summable_on {x}", "by simp"], ["proof (state)\nthis:\n  f abs_summable_on {x}\n\ngoal (2 subgoals):\n 1. (A - {x}) \\<inter> {x} = {}\n 2. infsetsum f A = infsetsum f (A - {x} \\<union> {x})", "show \"(A - {x}) \\<inter> {x} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A - {x}) \\<inter> {x} = {}", "by simp"], ["proof (state)\nthis:\n  (A - {x}) \\<inter> {x} = {}\n\ngoal (1 subgoal):\n 1. infsetsum f A = infsetsum f (A - {x} \\<union> {x})", "show \"infsetsum f A = infsetsum f (A - {x} \\<union> {x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum f A = infsetsum f (A - {x} \\<union> {x})", "using assms(4) insert_Diff"], ["proof (prove)\nusing this:\n  x \\<in> A\n  ?a \\<in> ?A \\<Longrightarrow> insert ?a (?A - {?a}) = ?A\n\ngoal (1 subgoal):\n 1. infsetsum f A = infsetsum f (A - {x} \\<union> {x})", "by fastforce"], ["proof (state)\nthis:\n  infsetsum f A = infsetsum f (A - {x} \\<union> {x})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  infsetsum f A = infsetsum f (A - {x}) + infsetsum f {x}\n\ngoal (1 subgoal):\n 1. f x = 0", "also"], ["proof (state)\nthis:\n  infsetsum f A = infsetsum f (A - {x}) + infsetsum f {x}\n\ngoal (1 subgoal):\n 1. f x = 0", "have \"\\<dots> \\<ge> 0 + infsetsum f {x}\" (is \"_ \\<ge> \\<dots>\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 + infsetsum f {x} \\<le> infsetsum f (A - {x}) + infsetsum f {x}", "using a"], ["proof (prove)\nusing this:\n  ?a \\<in> A - {x} \\<Longrightarrow> ?a \\<in> A\n\ngoal (1 subgoal):\n 1. 0 + infsetsum f {x} \\<le> infsetsum f (A - {x}) + infsetsum f {x}", "by (smt infsetsum_nonneg nneg)"], ["proof (state)\nthis:\n  0 + infsetsum f {x} \\<le> infsetsum f (A - {x}) + infsetsum f {x}\n\ngoal (1 subgoal):\n 1. f x = 0", "also"], ["proof (state)\nthis:\n  0 + infsetsum f {x} \\<le> infsetsum f (A - {x}) + infsetsum f {x}\n\ngoal (1 subgoal):\n 1. f x = 0", "have \"\\<dots> = f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 + infsetsum f {x} = f x", "by simp"], ["proof (state)\nthis:\n  0 + infsetsum f {x} = f x\n\ngoal (1 subgoal):\n 1. f x = 0", "finally"], ["proof (chain)\npicking this:\n  f x \\<le> 0", "have \"f x \\<le> 0\""], ["proof (prove)\nusing this:\n  f x \\<le> 0\n\ngoal (1 subgoal):\n 1. f x \\<le> 0", "."], ["proof (state)\nthis:\n  f x \\<le> 0\n\ngoal (1 subgoal):\n 1. f x = 0", "with nneg[OF \\<open>x\\<in>A\\<close>]"], ["proof (chain)\npicking this:\n  0 \\<le> f x\n  f x \\<le> 0", "show \"f x = 0\""], ["proof (prove)\nusing this:\n  0 \\<le> f x\n  f x \\<le> 0\n\ngoal (1 subgoal):\n 1. f x = 0", "by auto"], ["proof (state)\nthis:\n  f x = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_leq_infsetsum:\n  fixes f :: \"_ \\<Rightarrow> real\"\n  assumes \"f abs_summable_on N\"\n    and \"finite M\"\n    and \"M \\<subseteq> N\"\n    and \"\\<And>x. x\\<in>N-M \\<Longrightarrow> f x \\<ge> 0\"\n  shows \"sum f M \\<le> infsetsum f N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f M \\<le> infsetsum f N", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum f M \\<le> infsetsum f N", "have \"infsetsum f M \\<le> infsetsum f N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum f M \\<le> infsetsum f N", "proof (rule infsetsum_mono_neutral_left)"], ["proof (state)\ngoal (5 subgoals):\n 1. f abs_summable_on M\n 2. f abs_summable_on N\n 3. \\<And>x. x \\<in> M \\<Longrightarrow> f x \\<le> f x\n 4. M \\<subseteq> N\n 5. \\<And>x. x \\<in> N - M \\<Longrightarrow> 0 \\<le> f x", "show \"f abs_summable_on M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f abs_summable_on M", "by (simp add: assms(2))"], ["proof (state)\nthis:\n  f abs_summable_on M\n\ngoal (4 subgoals):\n 1. f abs_summable_on N\n 2. \\<And>x. x \\<in> M \\<Longrightarrow> f x \\<le> f x\n 3. M \\<subseteq> N\n 4. \\<And>x. x \\<in> N - M \\<Longrightarrow> 0 \\<le> f x", "show \"f abs_summable_on N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f abs_summable_on N", "by (simp add: assms(1))"], ["proof (state)\nthis:\n  f abs_summable_on N\n\ngoal (3 subgoals):\n 1. \\<And>x. x \\<in> M \\<Longrightarrow> f x \\<le> f x\n 2. M \\<subseteq> N\n 3. \\<And>x. x \\<in> N - M \\<Longrightarrow> 0 \\<le> f x", "show \"f x \\<le> f x\"\n      if \"x \\<in> M\"\n      for x :: 'b"], ["proof (prove)\ngoal (1 subgoal):\n 1. f x \\<le> f x", "using that"], ["proof (prove)\nusing this:\n  x \\<in> M\n\ngoal (1 subgoal):\n 1. f x \\<le> f x", "by simp"], ["proof (state)\nthis:\n  ?x \\<in> M \\<Longrightarrow> f ?x \\<le> f ?x\n\ngoal (2 subgoals):\n 1. M \\<subseteq> N\n 2. \\<And>x. x \\<in> N - M \\<Longrightarrow> 0 \\<le> f x", "show \"M \\<subseteq> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M \\<subseteq> N", "by (simp add: assms(3))"], ["proof (state)\nthis:\n  M \\<subseteq> N\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> N - M \\<Longrightarrow> 0 \\<le> f x", "show \"0 \\<le> f x\"\n      if \"x \\<in> N - M\"\n      for x :: 'b"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> f x", "using that"], ["proof (prove)\nusing this:\n  x \\<in> N - M\n\ngoal (1 subgoal):\n 1. 0 \\<le> f x", "by (simp add: assms(4))"], ["proof (state)\nthis:\n  ?x \\<in> N - M \\<Longrightarrow> 0 \\<le> f ?x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  infsetsum f M \\<le> infsetsum f N\n\ngoal (1 subgoal):\n 1. sum f M \\<le> infsetsum f N", "thus ?thesis"], ["proof (prove)\nusing this:\n  infsetsum f M \\<le> infsetsum f N\n\ngoal (1 subgoal):\n 1. sum f M \\<le> infsetsum f N", "using assms"], ["proof (prove)\nusing this:\n  infsetsum f M \\<le> infsetsum f N\n  f abs_summable_on N\n  finite M\n  M \\<subseteq> N\n  ?x \\<in> N - M \\<Longrightarrow> 0 \\<le> f ?x\n\ngoal (1 subgoal):\n 1. sum f M \\<le> infsetsum f N", "by auto"], ["proof (state)\nthis:\n  sum f M \\<le> infsetsum f N\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infsetsum_cmult_left':\n  fixes f :: \"'a \\<Rightarrow> 'b :: {banach, real_normed_algebra, second_countable_topology, division_ring}\"\n  shows  \"infsetsum (\\<lambda>x. f x * c) A = infsetsum f A * c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A. f x * c) = infsetsum f A * c", "proof (cases \"c \\<noteq> 0 \\<longrightarrow> f abs_summable_on A\")"], ["proof (state)\ngoal (2 subgoals):\n 1. c \\<noteq> (0::'b) \\<longrightarrow>\n    f abs_summable_on A \\<Longrightarrow>\n    (\\<Sum>\\<^sub>ax\\<in>A. f x * c) = infsetsum f A * c\n 2. \\<not> (c \\<noteq> (0::'b) \\<longrightarrow>\n            f abs_summable_on A) \\<Longrightarrow>\n    (\\<Sum>\\<^sub>ax\\<in>A. f x * c) = infsetsum f A * c", "case True"], ["proof (state)\nthis:\n  c \\<noteq> (0::'b) \\<longrightarrow> f abs_summable_on A\n\ngoal (2 subgoals):\n 1. c \\<noteq> (0::'b) \\<longrightarrow>\n    f abs_summable_on A \\<Longrightarrow>\n    (\\<Sum>\\<^sub>ax\\<in>A. f x * c) = infsetsum f A * c\n 2. \\<not> (c \\<noteq> (0::'b) \\<longrightarrow>\n            f abs_summable_on A) \\<Longrightarrow>\n    (\\<Sum>\\<^sub>ax\\<in>A. f x * c) = infsetsum f A * c", "have \"(\\<Sum>\\<^sub>ax\\<in>A. f x * c) = infsetsum f A * c\"\n    if \"f abs_summable_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A. f x * c) = infsetsum f A * c", "using infsetsum_cmult_left that"], ["proof (prove)\nusing this:\n  (?c \\<noteq> (0::?'b) \\<Longrightarrow>\n   ?f abs_summable_on ?A) \\<Longrightarrow>\n  (\\<Sum>\\<^sub>ax\\<in>?A. ?f x * ?c) = infsetsum ?f ?A * ?c\n  f abs_summable_on A\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A. f x * c) = infsetsum f A * c", "by blast"], ["proof (state)\nthis:\n  f abs_summable_on A \\<Longrightarrow>\n  (\\<Sum>\\<^sub>ax\\<in>A. f x * c) = infsetsum f A * c\n\ngoal (2 subgoals):\n 1. c \\<noteq> (0::'b) \\<longrightarrow>\n    f abs_summable_on A \\<Longrightarrow>\n    (\\<Sum>\\<^sub>ax\\<in>A. f x * c) = infsetsum f A * c\n 2. \\<not> (c \\<noteq> (0::'b) \\<longrightarrow>\n            f abs_summable_on A) \\<Longrightarrow>\n    (\\<Sum>\\<^sub>ax\\<in>A. f x * c) = infsetsum f A * c", "thus ?thesis"], ["proof (prove)\nusing this:\n  f abs_summable_on A \\<Longrightarrow>\n  (\\<Sum>\\<^sub>ax\\<in>A. f x * c) = infsetsum f A * c\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A. f x * c) = infsetsum f A * c", "using True"], ["proof (prove)\nusing this:\n  f abs_summable_on A \\<Longrightarrow>\n  (\\<Sum>\\<^sub>ax\\<in>A. f x * c) = infsetsum f A * c\n  c \\<noteq> (0::'b) \\<longrightarrow> f abs_summable_on A\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A. f x * c) = infsetsum f A * c", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>A. f x * c) = infsetsum f A * c\n\ngoal (1 subgoal):\n 1. \\<not> (c \\<noteq> (0::'b) \\<longrightarrow>\n            f abs_summable_on A) \\<Longrightarrow>\n    (\\<Sum>\\<^sub>ax\\<in>A. f x * c) = infsetsum f A * c", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (c \\<noteq> (0::'b) \\<longrightarrow>\n            f abs_summable_on A) \\<Longrightarrow>\n    (\\<Sum>\\<^sub>ax\\<in>A. f x * c) = infsetsum f A * c", "case False"], ["proof (state)\nthis:\n  \\<not> (c \\<noteq> (0::'b) \\<longrightarrow> f abs_summable_on A)\n\ngoal (1 subgoal):\n 1. \\<not> (c \\<noteq> (0::'b) \\<longrightarrow>\n            f abs_summable_on A) \\<Longrightarrow>\n    (\\<Sum>\\<^sub>ax\\<in>A. f x * c) = infsetsum f A * c", "hence \"c\\<noteq>0\" and \"\\<not> f abs_summable_on A\""], ["proof (prove)\nusing this:\n  \\<not> (c \\<noteq> (0::'b) \\<longrightarrow> f abs_summable_on A)\n\ngoal (1 subgoal):\n 1. c \\<noteq> (0::'b) &&& \\<not> f abs_summable_on A", "by auto"], ["proof (state)\nthis:\n  c \\<noteq> (0::'b)\n  \\<not> f abs_summable_on A\n\ngoal (1 subgoal):\n 1. \\<not> (c \\<noteq> (0::'b) \\<longrightarrow>\n            f abs_summable_on A) \\<Longrightarrow>\n    (\\<Sum>\\<^sub>ax\\<in>A. f x * c) = infsetsum f A * c", "have \"\\<not> (\\<lambda>x. f x * c) abs_summable_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<lambda>x. f x * c) abs_summable_on A", "proof (rule notI)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x * c) abs_summable_on A \\<Longrightarrow> False", "assume \"(\\<lambda>x. f x * c) abs_summable_on A\""], ["proof (state)\nthis:\n  (\\<lambda>x. f x * c) abs_summable_on A\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x * c) abs_summable_on A \\<Longrightarrow> False", "hence \"(\\<lambda>x. (f x * c) * inverse c) abs_summable_on A\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. f x * c) abs_summable_on A\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x * c * inverse c) abs_summable_on A", "by (rule abs_summable_on_cmult_left)"], ["proof (state)\nthis:\n  (\\<lambda>x. f x * c * inverse c) abs_summable_on A\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x * c) abs_summable_on A \\<Longrightarrow> False", "with \\<open>\\<not> f abs_summable_on A\\<close>"], ["proof (chain)\npicking this:\n  \\<not> f abs_summable_on A\n  (\\<lambda>x. f x * c * inverse c) abs_summable_on A", "show False"], ["proof (prove)\nusing this:\n  \\<not> f abs_summable_on A\n  (\\<lambda>x. f x * c * inverse c) abs_summable_on A\n\ngoal (1 subgoal):\n 1. False", "by (metis (no_types, lifting) False Groups.mult_ac(1) abs_summable_on_cong mult_1_right\n          right_inverse)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> (\\<lambda>x. f x * c) abs_summable_on A\n\ngoal (1 subgoal):\n 1. \\<not> (c \\<noteq> (0::'b) \\<longrightarrow>\n            f abs_summable_on A) \\<Longrightarrow>\n    (\\<Sum>\\<^sub>ax\\<in>A. f x * c) = infsetsum f A * c", "with \\<open>\\<not> f abs_summable_on A\\<close>"], ["proof (chain)\npicking this:\n  \\<not> f abs_summable_on A\n  \\<not> (\\<lambda>x. f x * c) abs_summable_on A", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> f abs_summable_on A\n  \\<not> (\\<lambda>x. f x * c) abs_summable_on A\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ax\\<in>A. f x * c) = infsetsum f A * c", "by (simp add: not_summable_infsetsum_eq)"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ax\\<in>A. f x * c) = infsetsum f A * c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma abs_summable_on_zero_diff:\n  assumes \"f abs_summable_on A\"\n    and \"\\<And>x. x \\<in> B - A \\<Longrightarrow> f x = 0\"\n  shows \"f abs_summable_on B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f abs_summable_on B", "proof (subst asm_rl [of \"B = (B-A) \\<union> (A\\<inter>B)\"])"], ["proof (state)\ngoal (2 subgoals):\n 1. B = B - A \\<union> A \\<inter> B\n 2. f abs_summable_on B - A \\<union> A \\<inter> B", "show \"B = B - A \\<union> A \\<inter> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B = B - A \\<union> A \\<inter> B", "by auto"], ["proof (state)\nthis:\n  B = B - A \\<union> A \\<inter> B\n\ngoal (1 subgoal):\n 1. f abs_summable_on B - A \\<union> A \\<inter> B", "have \"(\\<lambda>x. 0::real) abs_summable_on B - A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. 0) abs_summable_on B - A", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. 0) abs_summable_on B - A\n\ngoal (1 subgoal):\n 1. f abs_summable_on B - A \\<union> A \\<inter> B", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>x. 0) abs_summable_on B - A\n\ngoal (1 subgoal):\n 1. f abs_summable_on B - A \\<union> A \\<inter> B", "have \"norm (f x) \\<le> 0\"\n    if \"x \\<in> B - A\"\n    for x :: 'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (f x) \\<le> 0", "using that"], ["proof (prove)\nusing this:\n  x \\<in> B - A\n\ngoal (1 subgoal):\n 1. norm (f x) \\<le> 0", "by (simp add: assms(2))"], ["proof (state)\nthis:\n  ?x \\<in> B - A \\<Longrightarrow> norm (f ?x) \\<le> 0\n\ngoal (1 subgoal):\n 1. f abs_summable_on B - A \\<union> A \\<inter> B", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>x. 0) abs_summable_on B - A\n  ?x \\<in> B - A \\<Longrightarrow> norm (f ?x) \\<le> 0", "have \"f abs_summable_on B - A\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. 0) abs_summable_on B - A\n  ?x \\<in> B - A \\<Longrightarrow> norm (f ?x) \\<le> 0\n\ngoal (1 subgoal):\n 1. f abs_summable_on B - A", "by (rule abs_summable_on_comparison_test' [where g = \"\\<lambda>x. 0\"])"], ["proof (state)\nthis:\n  f abs_summable_on B - A\n\ngoal (1 subgoal):\n 1. f abs_summable_on B - A \\<union> A \\<inter> B", "moreover"], ["proof (state)\nthis:\n  f abs_summable_on B - A\n\ngoal (1 subgoal):\n 1. f abs_summable_on B - A \\<union> A \\<inter> B", "have \"f abs_summable_on A \\<inter> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f abs_summable_on A \\<inter> B", "using abs_summable_on_subset assms(1)"], ["proof (prove)\nusing this:\n  \\<lbrakk>?f abs_summable_on ?B; ?A \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> ?f abs_summable_on ?A\n  f abs_summable_on A\n\ngoal (1 subgoal):\n 1. f abs_summable_on A \\<inter> B", "by blast"], ["proof (state)\nthis:\n  f abs_summable_on A \\<inter> B\n\ngoal (1 subgoal):\n 1. f abs_summable_on B - A \\<union> A \\<inter> B", "ultimately"], ["proof (chain)\npicking this:\n  f abs_summable_on B - A\n  f abs_summable_on A \\<inter> B", "show \"f abs_summable_on B - A \\<union> A \\<inter> B\""], ["proof (prove)\nusing this:\n  f abs_summable_on B - A\n  f abs_summable_on A \\<inter> B\n\ngoal (1 subgoal):\n 1. f abs_summable_on B - A \\<union> A \\<inter> B", "by (rule abs_summable_on_union)"], ["proof (state)\nthis:\n  f abs_summable_on B - A \\<union> A \\<inter> B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma abs_summable_on_Sigma_iff:\n  \"f abs_summable_on Sigma A B \\<longleftrightarrow>\n             (\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x) \\<and>\n             ((\\<lambda>x. infsetsum (\\<lambda>y. norm (f (x, y))) (B x)) abs_summable_on A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f abs_summable_on Sigma A B) =\n    ((\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x) \\<and>\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A)", "proof auto"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>f abs_summable_on Sigma A B; x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>y. f (x, y)) abs_summable_on B x\n 2. f abs_summable_on Sigma A B \\<Longrightarrow>\n    (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on A\n 3. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "assume sum_AB: \"f abs_summable_on Sigma A B\""], ["proof (state)\nthis:\n  f abs_summable_on Sigma A B\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>f abs_summable_on Sigma A B; x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>y. f (x, y)) abs_summable_on B x\n 2. f abs_summable_on Sigma A B \\<Longrightarrow>\n    (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on A\n 3. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "define S' where \"S' = {x\\<in>Sigma A B. 0 \\<noteq> f x}\""], ["proof (state)\nthis:\n  S' = {x \\<in> Sigma A B. (0::'c) \\<noteq> f x}\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>f abs_summable_on Sigma A B; x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>y. f (x, y)) abs_summable_on B x\n 2. f abs_summable_on Sigma A B \\<Longrightarrow>\n    (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on A\n 3. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "from sum_AB"], ["proof (chain)\npicking this:\n  f abs_summable_on Sigma A B", "have \"countable S'\""], ["proof (prove)\nusing this:\n  f abs_summable_on Sigma A B\n\ngoal (1 subgoal):\n 1. countable S'", "unfolding S'_def"], ["proof (prove)\nusing this:\n  f abs_summable_on Sigma A B\n\ngoal (1 subgoal):\n 1. countable {x \\<in> Sigma A B. (0::'c) \\<noteq> f x}", "by (rule abs_summable_countable)"], ["proof (state)\nthis:\n  countable S'\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>f abs_summable_on Sigma A B; x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>y. f (x, y)) abs_summable_on B x\n 2. f abs_summable_on Sigma A B \\<Longrightarrow>\n    (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on A\n 3. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "define A' B' where \"A' = fst ` S'\" and \"B' x = B x \\<inter> snd ` S'\" for x"], ["proof (state)\nthis:\n  A' = fst ` S'\n  B' ?x = B ?x \\<inter> snd ` S'\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>f abs_summable_on Sigma A B; x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>y. f (x, y)) abs_summable_on B x\n 2. f abs_summable_on Sigma A B \\<Longrightarrow>\n    (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on A\n 3. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "have A'A: \\<open>A' \\<subseteq> A\\<close> and B'B: \\<open>B' x \\<subseteq> B x\\<close> for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. A' \\<subseteq> A &&& B' x \\<subseteq> B x", "unfolding A'_def B'_def S'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst ` {x \\<in> Sigma A B. (0::'c) \\<noteq> f x} \\<subseteq> A &&&\n    B x \\<inter> snd ` {x \\<in> Sigma A B. (0::'c) \\<noteq> f x}\n    \\<subseteq> B x", "by auto"], ["proof (state)\nthis:\n  A' \\<subseteq> A\n  B' ?x \\<subseteq> B ?x\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>f abs_summable_on Sigma A B; x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>y. f (x, y)) abs_summable_on B x\n 2. f abs_summable_on Sigma A B \\<Longrightarrow>\n    (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on A\n 3. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "have  cntA: \"countable A'\" and cntB: \"countable (B' x)\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. countable A' &&& countable (B' x)", "unfolding A'_def B'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. countable (fst ` S') &&& countable (B x \\<inter> snd ` S')", "using \\<open>countable S'\\<close>"], ["proof (prove)\nusing this:\n  countable S'\n\ngoal (1 subgoal):\n 1. countable (fst ` S') &&& countable (B x \\<inter> snd ` S')", "by auto"], ["proof (state)\nthis:\n  countable A'\n  countable (B' ?x)\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>f abs_summable_on Sigma A B; x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>y. f (x, y)) abs_summable_on B x\n 2. f abs_summable_on Sigma A B \\<Longrightarrow>\n    (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on A\n 3. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "have f0: \"f (x,y) = 0\" if \"x \\<in> A - A'\" and \"y \\<in> B x\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. f (x, y) = (0::'c)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f (x, y) = (0::'c)", "from that"], ["proof (chain)\npicking this:\n  x \\<in> A - A'\n  y \\<in> B x", "have \"(x,y) \\<in> Sigma A B\""], ["proof (prove)\nusing this:\n  x \\<in> A - A'\n  y \\<in> B x\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> Sigma A B", "by auto"], ["proof (state)\nthis:\n  (x, y) \\<in> Sigma A B\n\ngoal (1 subgoal):\n 1. f (x, y) = (0::'c)", "moreover"], ["proof (state)\nthis:\n  (x, y) \\<in> Sigma A B\n\ngoal (1 subgoal):\n 1. f (x, y) = (0::'c)", "from that"], ["proof (chain)\npicking this:\n  x \\<in> A - A'\n  y \\<in> B x", "have \"(x,y) \\<notin> S'\""], ["proof (prove)\nusing this:\n  x \\<in> A - A'\n  y \\<in> B x\n\ngoal (1 subgoal):\n 1. (x, y) \\<notin> S'", "unfolding A'_def"], ["proof (prove)\nusing this:\n  x \\<in> A - fst ` S'\n  y \\<in> B x\n\ngoal (1 subgoal):\n 1. (x, y) \\<notin> S'", "by (metis image_eqI mem_simps(6) prod.sel(1))"], ["proof (state)\nthis:\n  (x, y) \\<notin> S'\n\ngoal (1 subgoal):\n 1. f (x, y) = (0::'c)", "ultimately"], ["proof (chain)\npicking this:\n  (x, y) \\<in> Sigma A B\n  (x, y) \\<notin> S'", "show \"f (x,y) = 0\""], ["proof (prove)\nusing this:\n  (x, y) \\<in> Sigma A B\n  (x, y) \\<notin> S'\n\ngoal (1 subgoal):\n 1. f (x, y) = (0::'c)", "unfolding S'_def"], ["proof (prove)\nusing this:\n  (x, y) \\<in> Sigma A B\n  (x, y) \\<notin> {x \\<in> Sigma A B. (0::'c) \\<noteq> f x}\n\ngoal (1 subgoal):\n 1. f (x, y) = (0::'c)", "by auto"], ["proof (state)\nthis:\n  f (x, y) = (0::'c)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> A - A'; ?y \\<in> B ?x\\<rbrakk>\n  \\<Longrightarrow> f (?x, ?y) = (0::'c)\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>f abs_summable_on Sigma A B; x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>y. f (x, y)) abs_summable_on B x\n 2. f abs_summable_on Sigma A B \\<Longrightarrow>\n    (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on A\n 3. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "have f0': \"f (x,y) = 0\" if \"x \\<in> A\" and \"y \\<in> B x - B' x\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. f (x, y) = (0::'c)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f (x, y) = (0::'c)", "from that"], ["proof (chain)\npicking this:\n  x \\<in> A\n  y \\<in> B x - B' x", "have \"(x,y) \\<in> Sigma A B\""], ["proof (prove)\nusing this:\n  x \\<in> A\n  y \\<in> B x - B' x\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> Sigma A B", "by auto"], ["proof (state)\nthis:\n  (x, y) \\<in> Sigma A B\n\ngoal (1 subgoal):\n 1. f (x, y) = (0::'c)", "moreover"], ["proof (state)\nthis:\n  (x, y) \\<in> Sigma A B\n\ngoal (1 subgoal):\n 1. f (x, y) = (0::'c)", "from that"], ["proof (chain)\npicking this:\n  x \\<in> A\n  y \\<in> B x - B' x", "have \"(x,y) \\<notin> S'\""], ["proof (prove)\nusing this:\n  x \\<in> A\n  y \\<in> B x - B' x\n\ngoal (1 subgoal):\n 1. (x, y) \\<notin> S'", "unfolding B'_def"], ["proof (prove)\nusing this:\n  x \\<in> A\n  y \\<in> B x - B x \\<inter> snd ` S'\n\ngoal (1 subgoal):\n 1. (x, y) \\<notin> S'", "by (auto simp add: rev_image_eqI)"], ["proof (state)\nthis:\n  (x, y) \\<notin> S'\n\ngoal (1 subgoal):\n 1. f (x, y) = (0::'c)", "ultimately"], ["proof (chain)\npicking this:\n  (x, y) \\<in> Sigma A B\n  (x, y) \\<notin> S'", "show \"f (x,y) = 0\""], ["proof (prove)\nusing this:\n  (x, y) \\<in> Sigma A B\n  (x, y) \\<notin> S'\n\ngoal (1 subgoal):\n 1. f (x, y) = (0::'c)", "unfolding S'_def"], ["proof (prove)\nusing this:\n  (x, y) \\<in> Sigma A B\n  (x, y) \\<notin> {x \\<in> Sigma A B. (0::'c) \\<noteq> f x}\n\ngoal (1 subgoal):\n 1. f (x, y) = (0::'c)", "by auto"], ["proof (state)\nthis:\n  f (x, y) = (0::'c)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> A; ?y \\<in> B ?x - B' ?x\\<rbrakk>\n  \\<Longrightarrow> f (?x, ?y) = (0::'c)\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>f abs_summable_on Sigma A B; x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>y. f (x, y)) abs_summable_on B x\n 2. f abs_summable_on Sigma A B \\<Longrightarrow>\n    (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on A\n 3. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "have \"Sigma A' B' \\<subseteq> Sigma A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sigma A' B' \\<subseteq> Sigma A B", "using A'A B'B"], ["proof (prove)\nusing this:\n  A' \\<subseteq> A\n  B' ?x \\<subseteq> B ?x\n\ngoal (1 subgoal):\n 1. Sigma A' B' \\<subseteq> Sigma A B", "by (rule Sigma_mono)"], ["proof (state)\nthis:\n  Sigma A' B' \\<subseteq> Sigma A B\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>f abs_summable_on Sigma A B; x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>y. f (x, y)) abs_summable_on B x\n 2. f abs_summable_on Sigma A B \\<Longrightarrow>\n    (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on A\n 3. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "hence sum_A'B': \"f abs_summable_on Sigma A' B'\""], ["proof (prove)\nusing this:\n  Sigma A' B' \\<subseteq> Sigma A B\n\ngoal (1 subgoal):\n 1. f abs_summable_on Sigma A' B'", "using sum_AB abs_summable_on_subset"], ["proof (prove)\nusing this:\n  Sigma A' B' \\<subseteq> Sigma A B\n  f abs_summable_on Sigma A B\n  \\<lbrakk>?f abs_summable_on ?B; ?A \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> ?f abs_summable_on ?A\n\ngoal (1 subgoal):\n 1. f abs_summable_on Sigma A' B'", "by auto"], ["proof (state)\nthis:\n  f abs_summable_on Sigma A' B'\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>f abs_summable_on Sigma A B; x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>y. f (x, y)) abs_summable_on B x\n 2. f abs_summable_on Sigma A B \\<Longrightarrow>\n    (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on A\n 3. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "from sum_A'B'"], ["proof (chain)\npicking this:\n  f abs_summable_on Sigma A' B'", "have \"(\\<lambda>y. f (x, y)) abs_summable_on B' x\" if \"x \\<in> A'\" for x"], ["proof (prove)\nusing this:\n  f abs_summable_on Sigma A' B'\n\ngoal (1 subgoal):\n 1. (\\<lambda>y. f (x, y)) abs_summable_on B' x", "using abs_summable_on_Sigma_iff[OF cntA cntB, where f=f] that"], ["proof (prove)\nusing this:\n  f abs_summable_on Sigma A' B'\n  (f abs_summable_on (SIGMA x:A'. B' (?x1 x))) =\n  ((\\<forall>x\\<in>A'.\n       (\\<lambda>y. f (x, y)) abs_summable_on B' (?x1 x)) \\<and>\n   (\\<lambda>x.\n       \\<Sum>\\<^sub>ay\\<in>B' (?x1 x). norm (f (x, y))) abs_summable_on\n   A')\n  x \\<in> A'\n\ngoal (1 subgoal):\n 1. (\\<lambda>y. f (x, y)) abs_summable_on B' x", "by auto"], ["proof (state)\nthis:\n  ?x \\<in> A' \\<Longrightarrow>\n  (\\<lambda>y. f (?x, y)) abs_summable_on B' ?x\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>f abs_summable_on Sigma A B; x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>y. f (x, y)) abs_summable_on B x\n 2. f abs_summable_on Sigma A B \\<Longrightarrow>\n    (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on A\n 3. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "moreover"], ["proof (state)\nthis:\n  ?x \\<in> A' \\<Longrightarrow>\n  (\\<lambda>y. f (?x, y)) abs_summable_on B' ?x\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>f abs_summable_on Sigma A B; x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>y. f (x, y)) abs_summable_on B x\n 2. f abs_summable_on Sigma A B \\<Longrightarrow>\n    (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on A\n 3. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "have \"(\\<lambda>y. f (x, y)) abs_summable_on B' x\" \n    if t:\"x \\<in> A - A'\" \n    for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>y. f (x, y)) abs_summable_on B' x", "proof (subst abs_summable_on_zero_diff [where A = \"{}\"])"], ["proof (state)\ngoal (3 subgoals):\n 1. (\\<lambda>y. f (x, y)) abs_summable_on {}\n 2. \\<And>xa. xa \\<in> B' x - {} \\<Longrightarrow> f (x, xa) = (0::'c)\n 3. True", "show \"(\\<lambda>y. f (x, y)) abs_summable_on {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>y. f (x, y)) abs_summable_on {}", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>y. f (x, y)) abs_summable_on {}\n\ngoal (2 subgoals):\n 1. \\<And>xa. xa \\<in> B' x - {} \\<Longrightarrow> f (x, xa) = (0::'c)\n 2. True", "have \"f (x, a) = 0\"\n      if \"a \\<in> B' x\"\n      for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. f (x, a) = (0::'c)", "using t f0 that B'B"], ["proof (prove)\nusing this:\n  x \\<in> A - A'\n  \\<lbrakk>?x \\<in> A - A'; ?y \\<in> B ?x\\<rbrakk>\n  \\<Longrightarrow> f (?x, ?y) = (0::'c)\n  a \\<in> B' x\n  B' ?x \\<subseteq> B ?x\n\ngoal (1 subgoal):\n 1. f (x, a) = (0::'c)", "by auto"], ["proof (state)\nthis:\n  ?a \\<in> B' x \\<Longrightarrow> f (x, ?a) = (0::'c)\n\ngoal (2 subgoals):\n 1. \\<And>xa. xa \\<in> B' x - {} \\<Longrightarrow> f (x, xa) = (0::'c)\n 2. True", "thus \"f (x, a) = 0\"\n      if \"a \\<in> B' x - {}\"\n      for a"], ["proof (prove)\nusing this:\n  ?a \\<in> B' x \\<Longrightarrow> f (x, ?a) = (0::'c)\n\ngoal (1 subgoal):\n 1. f (x, a) = (0::'c)", "using that"], ["proof (prove)\nusing this:\n  ?a \\<in> B' x \\<Longrightarrow> f (x, ?a) = (0::'c)\n  a \\<in> B' x - {}\n\ngoal (1 subgoal):\n 1. f (x, a) = (0::'c)", "by auto"], ["proof (state)\nthis:\n  ?a \\<in> B' x - {} \\<Longrightarrow> f (x, ?a) = (0::'c)\n\ngoal (1 subgoal):\n 1. True", "show True"], ["proof (prove)\ngoal (1 subgoal):\n 1. True", "by blast"], ["proof (state)\nthis:\n  True\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x \\<in> A - A' \\<Longrightarrow>\n  (\\<lambda>y. f (?x, y)) abs_summable_on B' ?x\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>f abs_summable_on Sigma A B; x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>y. f (x, y)) abs_summable_on B x\n 2. f abs_summable_on Sigma A B \\<Longrightarrow>\n    (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on A\n 3. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "ultimately"], ["proof (chain)\npicking this:\n  ?x \\<in> A' \\<Longrightarrow>\n  (\\<lambda>y. f (?x, y)) abs_summable_on B' ?x\n  ?x \\<in> A - A' \\<Longrightarrow>\n  (\\<lambda>y. f (?x, y)) abs_summable_on B' ?x", "have \"(\\<lambda>y. f (x, y)) abs_summable_on B' x\" if \"x \\<in> A\" for x"], ["proof (prove)\nusing this:\n  ?x \\<in> A' \\<Longrightarrow>\n  (\\<lambda>y. f (?x, y)) abs_summable_on B' ?x\n  ?x \\<in> A - A' \\<Longrightarrow>\n  (\\<lambda>y. f (?x, y)) abs_summable_on B' ?x\n\ngoal (1 subgoal):\n 1. (\\<lambda>y. f (x, y)) abs_summable_on B' x", "using that"], ["proof (prove)\nusing this:\n  ?x \\<in> A' \\<Longrightarrow>\n  (\\<lambda>y. f (?x, y)) abs_summable_on B' ?x\n  ?x \\<in> A - A' \\<Longrightarrow>\n  (\\<lambda>y. f (?x, y)) abs_summable_on B' ?x\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<lambda>y. f (x, y)) abs_summable_on B' x", "by auto"], ["proof (state)\nthis:\n  ?x \\<in> A \\<Longrightarrow> (\\<lambda>y. f (?x, y)) abs_summable_on B' ?x\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>f abs_summable_on Sigma A B; x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>y. f (x, y)) abs_summable_on B x\n 2. f abs_summable_on Sigma A B \\<Longrightarrow>\n    (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on A\n 3. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "thus \"(\\<lambda>y. f (x, y)) abs_summable_on B x\" if \"x \\<in> A\" for x"], ["proof (prove)\nusing this:\n  ?x \\<in> A \\<Longrightarrow> (\\<lambda>y. f (?x, y)) abs_summable_on B' ?x\n\ngoal (1 subgoal):\n 1. (\\<lambda>y. f (x, y)) abs_summable_on B x", "apply (rule abs_summable_on_zero_diff)"], ["proof (prove)\ngoal (2 subgoals):\n 1. x \\<in> A\n 2. \\<And>xa. xa \\<in> B x - B' x \\<Longrightarrow> f (x, xa) = (0::'c)", "using that f0'"], ["proof (prove)\nusing this:\n  x \\<in> A\n  \\<lbrakk>?x \\<in> A; ?y \\<in> B ?x - B' ?x\\<rbrakk>\n  \\<Longrightarrow> f (?x, ?y) = (0::'c)\n\ngoal (2 subgoals):\n 1. x \\<in> A\n 2. \\<And>xa. xa \\<in> B x - B' x \\<Longrightarrow> f (x, xa) = (0::'c)", "by auto"], ["proof (state)\nthis:\n  ?x \\<in> A \\<Longrightarrow> (\\<lambda>y. f (?x, y)) abs_summable_on B ?x\n\ngoal (2 subgoals):\n 1. f abs_summable_on Sigma A B \\<Longrightarrow>\n    (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on A\n 2. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "have Q: \"\\<And>x. x \\<in> A - A' \\<Longrightarrow> (\\<Sum>\\<^sub>ay\\<in>B' x. norm (f (x, y))) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A - A' \\<Longrightarrow>\n       (\\<Sum>\\<^sub>ay\\<in>B' x. norm (f (x, y))) = 0", "apply (subst infsetsum_cong[where g=\\<open>\\<lambda>x. 0\\<close> and B=\"B' _\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> A - A'; xa \\<in> B' x\\<rbrakk>\n       \\<Longrightarrow> norm (f (x, xa)) = 0\n 2. \\<And>x. x \\<in> A - A' \\<Longrightarrow> B' x = B' (?uu x)\n 3. \\<And>x.\n       x \\<in> A - A' \\<Longrightarrow>\n       (\\<Sum>\\<^sub>ax\\<in>B' (?uu x). 0) = 0", "using f0 B'B"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> A - A'; ?y \\<in> B ?x\\<rbrakk>\n  \\<Longrightarrow> f (?x, ?y) = (0::'c)\n  B' ?x \\<subseteq> B ?x\n\ngoal (3 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> A - A'; xa \\<in> B' x\\<rbrakk>\n       \\<Longrightarrow> norm (f (x, xa)) = 0\n 2. \\<And>x. x \\<in> A - A' \\<Longrightarrow> B' x = B' (?uu x)\n 3. \\<And>x.\n       x \\<in> A - A' \\<Longrightarrow>\n       (\\<Sum>\\<^sub>ax\\<in>B' (?uu x). 0) = 0", "by auto"], ["proof (state)\nthis:\n  ?x \\<in> A - A' \\<Longrightarrow>\n  (\\<Sum>\\<^sub>ay\\<in>B' ?x. norm (f (?x, y))) = 0\n\ngoal (2 subgoals):\n 1. f abs_summable_on Sigma A B \\<Longrightarrow>\n    (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on A\n 2. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "from sum_A'B'"], ["proof (chain)\npicking this:\n  f abs_summable_on Sigma A' B'", "have \"(\\<lambda>x. infsetsum (\\<lambda>y. norm (f (x, y))) (B' x)) abs_summable_on A'\""], ["proof (prove)\nusing this:\n  f abs_summable_on Sigma A' B'\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B' x. norm (f (x, y))) abs_summable_on\n    A'", "using abs_summable_on_Sigma_iff[OF cntA cntB, where f=f]"], ["proof (prove)\nusing this:\n  f abs_summable_on Sigma A' B'\n  (f abs_summable_on (SIGMA x:A'. B' (?x1 x))) =\n  ((\\<forall>x\\<in>A'.\n       (\\<lambda>y. f (x, y)) abs_summable_on B' (?x1 x)) \\<and>\n   (\\<lambda>x.\n       \\<Sum>\\<^sub>ay\\<in>B' (?x1 x). norm (f (x, y))) abs_summable_on\n   A')\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B' x. norm (f (x, y))) abs_summable_on\n    A'", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B' x. norm (f (x, y))) abs_summable_on A'\n\ngoal (2 subgoals):\n 1. f abs_summable_on Sigma A B \\<Longrightarrow>\n    (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on A\n 2. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "hence \"(\\<lambda>x. infsetsum (\\<lambda>y. norm (f (x, y))) (B' x)) abs_summable_on A\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B' x. norm (f (x, y))) abs_summable_on A'\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B' x. norm (f (x, y))) abs_summable_on\n    A", "apply (rule abs_summable_on_zero_diff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A - A' \\<Longrightarrow>\n       (\\<Sum>\\<^sub>ay\\<in>B' x. norm (f (x, y))) = 0", "using Q"], ["proof (prove)\nusing this:\n  ?x \\<in> A - A' \\<Longrightarrow>\n  (\\<Sum>\\<^sub>ay\\<in>B' ?x. norm (f (?x, y))) = 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A - A' \\<Longrightarrow>\n       (\\<Sum>\\<^sub>ay\\<in>B' x. norm (f (x, y))) = 0", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B' x. norm (f (x, y))) abs_summable_on A\n\ngoal (2 subgoals):\n 1. f abs_summable_on Sigma A B \\<Longrightarrow>\n    (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on A\n 2. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "have R: \"\\<And>x. x \\<in> A \\<Longrightarrow>\n         (\\<Sum>\\<^sub>ay\\<in>B' x. norm (f (x, y))) =\n         (\\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       (\\<Sum>\\<^sub>ay\\<in>B' x. norm (f (x, y))) =\n       (\\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y)))", "proof (rule infsetsum_cong_neutral)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> A; xa \\<in> B' x - B x\\<rbrakk>\n       \\<Longrightarrow> norm (f (x, xa)) = 0\n 2. \\<And>x xa.\n       \\<lbrakk>x \\<in> A; xa \\<in> B x - B' x\\<rbrakk>\n       \\<Longrightarrow> norm (f (x, xa)) = 0\n 3. \\<And>x xa.\n       \\<lbrakk>x \\<in> A; xa \\<in> B' x \\<inter> B x\\<rbrakk>\n       \\<Longrightarrow> norm (f (x, xa)) = norm (f (x, xa))", "show \"norm (f (x, a)) = 0\"\n      if \"x \\<in> A\"\n        and \"a \\<in> B' x - B x\"\n      for x :: 'a\n        and a :: 'b"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (f (x, a)) = 0", "using that B'B"], ["proof (prove)\nusing this:\n  x \\<in> A\n  a \\<in> B' x - B x\n  B' ?x \\<subseteq> B ?x\n\ngoal (1 subgoal):\n 1. norm (f (x, a)) = 0", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> A; ?a \\<in> B' ?x - B ?x\\<rbrakk>\n  \\<Longrightarrow> norm (f (?x, ?a)) = 0\n\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> A; xa \\<in> B x - B' x\\<rbrakk>\n       \\<Longrightarrow> norm (f (x, xa)) = 0\n 2. \\<And>x xa.\n       \\<lbrakk>x \\<in> A; xa \\<in> B' x \\<inter> B x\\<rbrakk>\n       \\<Longrightarrow> norm (f (x, xa)) = norm (f (x, xa))", "show \"norm (f (x, a)) = 0\"\n      if \"x \\<in> A\"\n        and \"a \\<in> B x - B' x\"\n      for x :: 'a\n        and a :: 'b"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (f (x, a)) = 0", "using that"], ["proof (prove)\nusing this:\n  x \\<in> A\n  a \\<in> B x - B' x\n\ngoal (1 subgoal):\n 1. norm (f (x, a)) = 0", "by (simp add: f0')"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> A; ?a \\<in> B ?x - B' ?x\\<rbrakk>\n  \\<Longrightarrow> norm (f (?x, ?a)) = 0\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> A; xa \\<in> B' x \\<inter> B x\\<rbrakk>\n       \\<Longrightarrow> norm (f (x, xa)) = norm (f (x, xa))", "show \"norm (f (x, a)) = norm (f (x, a))\"\n      if \"x \\<in> A\"\n        and \"a \\<in> B' x \\<inter> B x\"\n      for x :: 'a\n        and a :: 'b"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (f (x, a)) = norm (f (x, a))", "using that"], ["proof (prove)\nusing this:\n  x \\<in> A\n  a \\<in> B' x \\<inter> B x\n\ngoal (1 subgoal):\n 1. norm (f (x, a)) = norm (f (x, a))", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> A; ?a \\<in> B' ?x \\<inter> B ?x\\<rbrakk>\n  \\<Longrightarrow> norm (f (?x, ?a)) = norm (f (?x, ?a))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x \\<in> A \\<Longrightarrow>\n  (\\<Sum>\\<^sub>ay\\<in>B' ?x. norm (f (?x, y))) =\n  (\\<Sum>\\<^sub>ay\\<in>B ?x. norm (f (?x, y)))\n\ngoal (2 subgoals):\n 1. f abs_summable_on Sigma A B \\<Longrightarrow>\n    (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on A\n 2. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "thus \"(\\<lambda>x. infsetsum (\\<lambda>y. norm (f (x, y))) (B x)) abs_summable_on A\""], ["proof (prove)\nusing this:\n  ?x \\<in> A \\<Longrightarrow>\n  (\\<Sum>\\<^sub>ay\\<in>B' ?x. norm (f (?x, y))) =\n  (\\<Sum>\\<^sub>ay\\<in>B ?x. norm (f (?x, y)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on A", "using \\<open>(\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B' x. norm (f (x, y))) abs_summable_on A\\<close>"], ["proof (prove)\nusing this:\n  ?x \\<in> A \\<Longrightarrow>\n  (\\<Sum>\\<^sub>ay\\<in>B' ?x. norm (f (?x, y))) =\n  (\\<Sum>\\<^sub>ay\\<in>B ?x. norm (f (?x, y)))\n  (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B' x. norm (f (x, y))) abs_summable_on A\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on A", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "assume sum_B: \"\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x\""], ["proof (state)\nthis:\n  \\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "assume sum_A: \"(\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on A\""], ["proof (state)\nthis:\n  (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "define B' where \"B' x = {y\\<in>B x. 0 \\<noteq> f (x,y)}\" for x"], ["proof (state)\nthis:\n  B' ?x = {y \\<in> B ?x. (0::'c) \\<noteq> f (?x, y)}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "from sum_B"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x", "have cnt_B': \"countable (B' x)\" if \"x\\<in>A\" for x"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x\n\ngoal (1 subgoal):\n 1. countable (B' x)", "unfolding B'_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x\n\ngoal (1 subgoal):\n 1. countable {y \\<in> B x. (0::'c) \\<noteq> f (x, y)}", "apply (rule_tac abs_summable_countable)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>A.\n       (\\<lambda>y. f (x, y)) abs_summable_on B x \\<Longrightarrow>\n    (\\<lambda>xa. f (x, xa)) abs_summable_on B x", "using that"], ["proof (prove)\nusing this:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>A.\n       (\\<lambda>y. f (x, y)) abs_summable_on B x \\<Longrightarrow>\n    (\\<lambda>xa. f (x, xa)) abs_summable_on B x", "by auto"], ["proof (state)\nthis:\n  ?x \\<in> A \\<Longrightarrow> countable (B' ?x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "define A' where \"A' = {x\\<in>A. 0 \\<noteq> (\\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y)))}\""], ["proof (state)\nthis:\n  A' = {x \\<in> A. 0 \\<noteq> (\\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y)))}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "from sum_A"], ["proof (chain)\npicking this:\n  (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on A", "have cnt_A': \"countable A'\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on A\n\ngoal (1 subgoal):\n 1. countable A'", "unfolding A'_def"], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on A\n\ngoal (1 subgoal):\n 1. countable\n     {x \\<in> A. 0 \\<noteq> (\\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y)))}", "by (rule abs_summable_countable)"], ["proof (state)\nthis:\n  countable A'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "have A'A: \"A' \\<subseteq> A\" and B'B: \"B' x \\<subseteq> B x\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. A' \\<subseteq> A &&& B' x \\<subseteq> B x", "unfolding A'_def B'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> A. 0 \\<noteq> (\\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y)))}\n    \\<subseteq> A &&&\n    {y \\<in> B x. (0::'c) \\<noteq> f (x, y)} \\<subseteq> B x", "by auto"], ["proof (state)\nthis:\n  A' \\<subseteq> A\n  B' ?x \\<subseteq> B ?x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "have f0': \"f (x,y) = 0\" if \"y \\<in> B x - B' x\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. f (x, y) = (0::'c)", "using that"], ["proof (prove)\nusing this:\n  y \\<in> B x - B' x\n\ngoal (1 subgoal):\n 1. f (x, y) = (0::'c)", "unfolding B'_def"], ["proof (prove)\nusing this:\n  y \\<in> B x - {y \\<in> B x. (0::'c) \\<noteq> f (x, y)}\n\ngoal (1 subgoal):\n 1. f (x, y) = (0::'c)", "by auto"], ["proof (state)\nthis:\n  ?y \\<in> B ?x - B' ?x \\<Longrightarrow> f (?x, ?y) = (0::'c)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "have f0: \"f (x,y) = 0\" if \"x \\<in> A - A'\" and \"y \\<in> B x\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. f (x, y) = (0::'c)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f (x, y) = (0::'c)", "have \"(\\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) = 0", "using that"], ["proof (prove)\nusing this:\n  x \\<in> A - A'\n  y \\<in> B x\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) = 0", "unfolding A'_def"], ["proof (prove)\nusing this:\n  x \\<in> A -\n          {x \\<in> A. 0 \\<noteq> (\\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y)))}\n  y \\<in> B x\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) = 0", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) = 0\n\ngoal (1 subgoal):\n 1. f (x, y) = (0::'c)", "hence \"norm (f (x, y)) = 0\""], ["proof (prove)\nusing this:\n  (\\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) = 0\n\ngoal (1 subgoal):\n 1. norm (f (x, y)) = 0", "apply (rule infsetsum_0D)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (\\<lambda>y. norm (f (x, y))) abs_summable_on B x\n 2. \\<And>xa. xa \\<in> B x \\<Longrightarrow> 0 \\<le> norm (f (x, xa))\n 3. y \\<in> B x", "using sum_B that"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x\n  x \\<in> A - A'\n  y \\<in> B x\n\ngoal (3 subgoals):\n 1. (\\<lambda>y. norm (f (x, y))) abs_summable_on B x\n 2. \\<And>xa. xa \\<in> B x \\<Longrightarrow> 0 \\<le> norm (f (x, xa))\n 3. y \\<in> B x", "by auto"], ["proof (state)\nthis:\n  norm (f (x, y)) = 0\n\ngoal (1 subgoal):\n 1. f (x, y) = (0::'c)", "thus ?thesis"], ["proof (prove)\nusing this:\n  norm (f (x, y)) = 0\n\ngoal (1 subgoal):\n 1. f (x, y) = (0::'c)", "by auto"], ["proof (state)\nthis:\n  f (x, y) = (0::'c)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> A - A'; ?y \\<in> B ?x\\<rbrakk>\n  \\<Longrightarrow> f (?x, ?y) = (0::'c)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "from sum_B"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x", "have sum_B': \"(\\<lambda>y. f (x, y)) abs_summable_on B' x\" if \"x\\<in>A\" for x"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x\n\ngoal (1 subgoal):\n 1. (\\<lambda>y. f (x, y)) abs_summable_on B' x", "proof (rule_tac abs_summable_on_subset [where B = \"B x\"])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>x\\<in>A.\n       (\\<lambda>y. f (x, y)) abs_summable_on B x \\<Longrightarrow>\n    (\\<lambda>y. f (x, y)) abs_summable_on B x\n 2. \\<forall>x\\<in>A.\n       (\\<lambda>y. f (x, y)) abs_summable_on B x \\<Longrightarrow>\n    B' x \\<subseteq> B x", "show \"(\\<lambda>y. f (x, y)) abs_summable_on B x\"\n      if \"\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>y. f (x, y)) abs_summable_on B x", "using that \\<open>x \\<in> A\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<lambda>y. f (x, y)) abs_summable_on B x", "by blast"], ["proof (state)\nthis:\n  \\<forall>x\\<in>A.\n     (\\<lambda>y. f (x, y)) abs_summable_on B x \\<Longrightarrow>\n  (\\<lambda>y. f (x, y)) abs_summable_on B x\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>A.\n       (\\<lambda>y. f (x, y)) abs_summable_on B x \\<Longrightarrow>\n    B' x \\<subseteq> B x", "show \"B' x \\<subseteq> B x\"\n      if \"\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B' x \\<subseteq> B x", "using that"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x\n\ngoal (1 subgoal):\n 1. B' x \\<subseteq> B x", "by (simp add: B'B)"], ["proof (state)\nthis:\n  \\<forall>x\\<in>A.\n     (\\<lambda>y. f (x, y)) abs_summable_on B x \\<Longrightarrow>\n  B' x \\<subseteq> B x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x \\<in> A \\<Longrightarrow> (\\<lambda>y. f (?x, y)) abs_summable_on B' ?x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "have *: \"(\\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) = (\\<Sum>\\<^sub>ay\\<in>B' x. norm (f (x, y)))\" if \"x\\<in>A\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) =\n    (\\<Sum>\\<^sub>ay\\<in>B' x. norm (f (x, y)))", "using infsetsum_cong_neutral f0' B'B that"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x. x \\<in> ?A - ?B \\<Longrightarrow> ?f x = (0::?'b);\n   \\<And>x. x \\<in> ?B - ?A \\<Longrightarrow> ?g x = (0::?'b);\n   \\<And>x. x \\<in> ?A \\<inter> ?B \\<Longrightarrow> ?f x = ?g x\\<rbrakk>\n  \\<Longrightarrow> infsetsum ?f ?A = infsetsum ?g ?B\n  ?y \\<in> B ?x - B' ?x \\<Longrightarrow> f (?x, ?y) = (0::'c)\n  B' ?x \\<subseteq> B ?x\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) =\n    (\\<Sum>\\<^sub>ay\\<in>B' x. norm (f (x, y)))", "by (metis (no_types, lifting) DiffD1 DiffD2 Int_iff inf.absorb_iff2 norm_zero)"], ["proof (state)\nthis:\n  ?x \\<in> A \\<Longrightarrow>\n  (\\<Sum>\\<^sub>ay\\<in>B ?x. norm (f (?x, y))) =\n  (\\<Sum>\\<^sub>ay\\<in>B' ?x. norm (f (?x, y)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "have \"(\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B' x. norm (f (x, y))) abs_summable_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B' x. norm (f (x, y))) abs_summable_on\n    A", "using abs_summable_on_cong sum_A \"*\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x. x \\<in> ?A \\<Longrightarrow> ?f x = ?g x;\n   ?A = ?B\\<rbrakk>\n  \\<Longrightarrow> (?f abs_summable_on ?A) = (?g abs_summable_on ?B)\n  (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on A\n  ?x \\<in> A \\<Longrightarrow>\n  (\\<Sum>\\<^sub>ay\\<in>B ?x. norm (f (?x, y))) =\n  (\\<Sum>\\<^sub>ay\\<in>B' ?x. norm (f (?x, y)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B' x. norm (f (x, y))) abs_summable_on\n    A", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B' x. norm (f (x, y))) abs_summable_on A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "hence sum_A': \"(\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B' x. norm (f (x, y))) abs_summable_on A'\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B' x. norm (f (x, y))) abs_summable_on A\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B' x. norm (f (x, y))) abs_summable_on\n    A'", "using _ A'A abs_summable_on_subset"], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B' x. norm (f (x, y))) abs_summable_on A\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  A' \\<subseteq> A\n  \\<lbrakk>?f abs_summable_on ?B; ?A \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> ?f abs_summable_on ?A\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B' x. norm (f (x, y))) abs_summable_on\n    A'", "by blast"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B' x. norm (f (x, y))) abs_summable_on A'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "from sum_A' sum_B'"], ["proof (chain)\npicking this:\n  (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B' x. norm (f (x, y))) abs_summable_on A'\n  ?x \\<in> A \\<Longrightarrow> (\\<lambda>y. f (?x, y)) abs_summable_on B' ?x", "have \"f abs_summable_on Sigma A' B'\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B' x. norm (f (x, y))) abs_summable_on A'\n  ?x \\<in> A \\<Longrightarrow> (\\<lambda>y. f (?x, y)) abs_summable_on B' ?x\n\ngoal (1 subgoal):\n 1. f abs_summable_on Sigma A' B'", "using abs_summable_on_Sigma_iff[where A=A' and B=B' and f=f, OF cnt_A' cnt_B'] A'A"], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B' x. norm (f (x, y))) abs_summable_on A'\n  ?x \\<in> A \\<Longrightarrow> (\\<lambda>y. f (?x, y)) abs_summable_on B' ?x\n  (\\<And>x. x \\<in> A' \\<Longrightarrow> x \\<in> A) \\<Longrightarrow>\n  (f abs_summable_on Sigma A' B') =\n  ((\\<forall>x\\<in>A'. (\\<lambda>y. f (x, y)) abs_summable_on B' x) \\<and>\n   (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B' x. norm (f (x, y))) abs_summable_on\n   A')\n  A' \\<subseteq> A\n\ngoal (1 subgoal):\n 1. f abs_summable_on Sigma A' B'", "by auto"], ["proof (state)\nthis:\n  f abs_summable_on Sigma A' B'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "moreover"], ["proof (state)\nthis:\n  f abs_summable_on Sigma A' B'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "have \"f x = 0\"\n    if \"x \\<in> Sigma A B - Sigma A' B'\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. f x = (0::'c)", "using that f0 f0'"], ["proof (prove)\nusing this:\n  x \\<in> Sigma A B - Sigma A' B'\n  \\<lbrakk>?x \\<in> A - A'; ?y \\<in> B ?x\\<rbrakk>\n  \\<Longrightarrow> f (?x, ?y) = (0::'c)\n  ?y \\<in> B ?x - B' ?x \\<Longrightarrow> f (?x, ?y) = (0::'c)\n\ngoal (1 subgoal):\n 1. f x = (0::'c)", "by force"], ["proof (state)\nthis:\n  ?x \\<in> Sigma A B - Sigma A' B' \\<Longrightarrow> f ?x = (0::'c)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x\\<in>A. (\\<lambda>y. f (x, y)) abs_summable_on B x;\n     (\\<lambda>x. \\<Sum>\\<^sub>ay\\<in>B x. norm (f (x, y))) abs_summable_on\n     A\\<rbrakk>\n    \\<Longrightarrow> f abs_summable_on Sigma A B", "ultimately"], ["proof (chain)\npicking this:\n  f abs_summable_on Sigma A' B'\n  ?x \\<in> Sigma A B - Sigma A' B' \\<Longrightarrow> f ?x = (0::'c)", "show \"f abs_summable_on Sigma A B\""], ["proof (prove)\nusing this:\n  f abs_summable_on Sigma A' B'\n  ?x \\<in> Sigma A B - Sigma A' B' \\<Longrightarrow> f ?x = (0::'c)\n\ngoal (1 subgoal):\n 1. f abs_summable_on Sigma A B", "by (rule abs_summable_on_zero_diff)"], ["proof (state)\nthis:\n  f abs_summable_on Sigma A B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma\n  fixes f :: \"'a \\<Rightarrow> 'c :: {banach, real_normed_field, second_countable_topology}\"\n  assumes \"f abs_summable_on A\" and \"g abs_summable_on B\"\n  shows   abs_summable_on_product: \"(\\<lambda>(x,y). f x * g y) abs_summable_on A \\<times> B\"\n    and   infsetsum_product: \"infsetsum (\\<lambda>(x,y). f x * g y) (A \\<times> B) =\n                                infsetsum f A * infsetsum g B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(x, y). f x * g y) abs_summable_on A \\<times> B &&&\n    (\\<Sum>\\<^sub>a(x, y)\\<in>A \\<times> B. f x * g y) =\n    infsetsum f A * infsetsum g B", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>(x, y). f x * g y) abs_summable_on A \\<times> B\n 2. (\\<Sum>\\<^sub>a(x, y)\\<in>A \\<times> B. f x * g y) =\n    infsetsum f A * infsetsum g B", "from assms"], ["proof (chain)\npicking this:\n  f abs_summable_on A\n  g abs_summable_on B", "show \"(\\<lambda>(x,y). f x * g y) abs_summable_on A \\<times> B\""], ["proof (prove)\nusing this:\n  f abs_summable_on A\n  g abs_summable_on B\n\ngoal (1 subgoal):\n 1. (\\<lambda>(x, y). f x * g y) abs_summable_on A \\<times> B", "by (subst abs_summable_on_Sigma_iff)\n      (auto simp: norm_mult infsetsum_cmult_right)"], ["proof (state)\nthis:\n  (\\<lambda>(x, y). f x * g y) abs_summable_on A \\<times> B\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>a(x, y)\\<in>A \\<times> B. f x * g y) =\n    infsetsum f A * infsetsum g B", "with assms"], ["proof (chain)\npicking this:\n  f abs_summable_on A\n  g abs_summable_on B\n  (\\<lambda>(x, y). f x * g y) abs_summable_on A \\<times> B", "show \"infsetsum (\\<lambda>(x,y). f x * g y) (A \\<times> B) = infsetsum f A * infsetsum g B\""], ["proof (prove)\nusing this:\n  f abs_summable_on A\n  g abs_summable_on B\n  (\\<lambda>(x, y). f x * g y) abs_summable_on A \\<times> B\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^sub>a(x, y)\\<in>A \\<times> B. f x * g y) =\n    infsetsum f A * infsetsum g B", "by (subst infsetsum_Sigma)\n      (auto simp: infsetsum_cmult_left infsetsum_cmult_right)"], ["proof (state)\nthis:\n  (\\<Sum>\\<^sub>a(x, y)\\<in>A \\<times> B. f x * g y) =\n  infsetsum f A * infsetsum g B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infsetsum'_converges_ennreal: \\<open>infsetsum'_converges (f::_ \\<Rightarrow> ennreal) S\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum'_converges f S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. infsetsum'_converges f S", "define B where \\<open>B = (SUP F\\<in>{F. F \\<subseteq> S \\<and> finite F}. sum f F)\\<close>"], ["proof (state)\nthis:\n  B = Sup (sum f ` {F. F \\<subseteq> S \\<and> finite F})\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f S", "have upper: \\<open>\\<forall>\\<^sub>F F in finite_subsets_at_top S. sum f F \\<le> B\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F F in finite_subsets_at_top S. sum f F \\<le> B", "apply (rule eventually_finite_subsets_at_top_weakI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>finite X; X \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> sum f X \\<le> B", "unfolding B_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>finite X; X \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> sum f X\n                         \\<le> Sup (sum f `\n                                    {F. F \\<subseteq> S \\<and> finite F})", "by (simp add: SUP_upper)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F F in finite_subsets_at_top S. sum f F \\<le> B\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f S", "have lower: \\<open>\\<forall>\\<^sub>F n in finite_subsets_at_top S. x < sum f n\\<close> if \\<open>x < B\\<close> for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in finite_subsets_at_top S. x < sum f n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in finite_subsets_at_top S. x < sum f n", "obtain F where Fx: \\<open>sum f F > x\\<close> and \\<open>F \\<subseteq> S\\<close> and \\<open>finite F\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>F.\n        \\<lbrakk>x < sum f F; F \\<subseteq> S; finite F\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>x < B\\<close>"], ["proof (prove)\nusing this:\n  x < B\n\ngoal (1 subgoal):\n 1. (\\<And>F.\n        \\<lbrakk>x < sum f F; F \\<subseteq> S; finite F\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding B_def"], ["proof (prove)\nusing this:\n  x < Sup (sum f ` {F. F \\<subseteq> S \\<and> finite F})\n\ngoal (1 subgoal):\n 1. (\\<And>F.\n        \\<lbrakk>x < sum f F; F \\<subseteq> S; finite F\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis (mono_tags, lifting)  less_SUP_iff mem_Collect_eq)"], ["proof (state)\nthis:\n  x < sum f F\n  F \\<subseteq> S\n  finite F\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in finite_subsets_at_top S. x < sum f n", "have geq: \\<open>sum f Y \\<ge> sum f F\\<close> if \\<open>finite Y\\<close> and \\<open>Y \\<supseteq> F\\<close> for Y"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f F \\<le> sum f Y", "by (simp add: sum_mono2 that(1) that(2))"], ["proof (state)\nthis:\n  \\<lbrakk>finite ?Y; F \\<subseteq> ?Y\\<rbrakk>\n  \\<Longrightarrow> sum f F \\<le> sum f ?Y\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in finite_subsets_at_top S. x < sum f n", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in finite_subsets_at_top S. x < sum f n", "unfolding eventually_finite_subsets_at_top"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>X.\n       finite X \\<and>\n       X \\<subseteq> S \\<and>\n       (\\<forall>Y.\n           finite Y \\<and>\n           X \\<subseteq> Y \\<and> Y \\<subseteq> S \\<longrightarrow>\n           x < sum f Y)", "apply (rule exI[of _ F])"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite F \\<and>\n    F \\<subseteq> S \\<and>\n    (\\<forall>Y.\n        finite Y \\<and>\n        F \\<subseteq> Y \\<and> Y \\<subseteq> S \\<longrightarrow>\n        x < sum f Y)", "using \\<open>finite F\\<close> \\<open>F \\<subseteq> S\\<close> Fx geq"], ["proof (prove)\nusing this:\n  finite F\n  F \\<subseteq> S\n  x < sum f F\n  \\<lbrakk>finite ?Y; F \\<subseteq> ?Y\\<rbrakk>\n  \\<Longrightarrow> sum f F \\<le> sum f ?Y\n\ngoal (1 subgoal):\n 1. finite F \\<and>\n    F \\<subseteq> S \\<and>\n    (\\<forall>Y.\n        finite Y \\<and>\n        F \\<subseteq> Y \\<and> Y \\<subseteq> S \\<longrightarrow>\n        x < sum f Y)", "by force"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in finite_subsets_at_top S. x < sum f n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x < B \\<Longrightarrow>\n  \\<forall>\\<^sub>F n in finite_subsets_at_top S. ?x < sum f n\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f S", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum'_converges f S", "unfolding infsetsum'_converges_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. (sum f \\<longlongrightarrow> x) (finite_subsets_at_top S)", "apply (rule exI[of _ B])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (sum f \\<longlongrightarrow> B) (finite_subsets_at_top S)", "using upper lower"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F F in finite_subsets_at_top S. sum f F \\<le> B\n  ?x < B \\<Longrightarrow>\n  \\<forall>\\<^sub>F n in finite_subsets_at_top S. ?x < sum f n\n\ngoal (1 subgoal):\n 1. (sum f \\<longlongrightarrow> B) (finite_subsets_at_top S)", "by (rule increasing_tendsto)"], ["proof (state)\nthis:\n  infsetsum'_converges f S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infsetsum'_superconst_infinite:\n  assumes geqb: \\<open>\\<And>x. x \\<in> S \\<Longrightarrow> f x \\<ge> b\\<close>\n  assumes b: \\<open>b > 0\\<close>\n  assumes \\<open>infinite S\\<close>\n  shows \"infsetsum' f S = (\\<infinity>::ennreal)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum' f S = \\<infinity>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. infsetsum' f S = \\<infinity>", "have \\<open>(sum f \\<longlongrightarrow> \\<infinity>) (finite_subsets_at_top S)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (sum f \\<longlongrightarrow> \\<infinity>) (finite_subsets_at_top S)", "proof (rule order_tendstoI[rotated], simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a < \\<infinity> \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in finite_subsets_at_top S. a < sum f x", "fix y :: ennreal"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a < \\<infinity> \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in finite_subsets_at_top S. a < sum f x", "assume \\<open>y < \\<infinity>\\<close>"], ["proof (state)\nthis:\n  y < \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a < \\<infinity> \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in finite_subsets_at_top S. a < sum f x", "then"], ["proof (chain)\npicking this:\n  y < \\<infinity>", "have \\<open>y / b < \\<infinity>\\<close>"], ["proof (prove)\nusing this:\n  y < \\<infinity>\n\ngoal (1 subgoal):\n 1. y / b < \\<infinity>", "by (metis b ennreal_divide_eq_top_iff gr_implies_not_zero infinity_ennreal_def top.not_eq_extremum)"], ["proof (state)\nthis:\n  y / b < \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a < \\<infinity> \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in finite_subsets_at_top S. a < sum f x", "then"], ["proof (chain)\npicking this:\n  y / b < \\<infinity>", "obtain F where \\<open>finite F\\<close> and \\<open>F \\<subseteq> S\\<close> and cardF: \\<open>card F > y / b\\<close>"], ["proof (prove)\nusing this:\n  y / b < \\<infinity>\n\ngoal (1 subgoal):\n 1. (\\<And>F.\n        \\<lbrakk>finite F; F \\<subseteq> S; y / b < of_nat (card F)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>infinite S\\<close>"], ["proof (prove)\nusing this:\n  y / b < \\<infinity>\n  infinite S\n\ngoal (1 subgoal):\n 1. (\\<And>F.\n        \\<lbrakk>finite F; F \\<subseteq> S; y / b < of_nat (card F)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis ennreal_Ex_less_of_nat infinite_arbitrarily_large infinity_ennreal_def)"], ["proof (state)\nthis:\n  finite F\n  F \\<subseteq> S\n  y / b < of_nat (card F)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a < \\<infinity> \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in finite_subsets_at_top S. a < sum f x", "moreover"], ["proof (state)\nthis:\n  finite F\n  F \\<subseteq> S\n  y / b < of_nat (card F)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a < \\<infinity> \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in finite_subsets_at_top S. a < sum f x", "have \\<open>sum f Y > y\\<close> if \\<open>finite Y\\<close> and \\<open>F \\<subseteq> Y\\<close> and \\<open>Y \\<subseteq> S\\<close> for Y"], ["proof (prove)\ngoal (1 subgoal):\n 1. y < sum f Y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. y < sum f Y", "have \\<open>y < b * card F\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. y < b * of_nat (card F)", "by (metis \\<open>y < \\<infinity>\\<close> b cardF divide_less_ennreal ennreal_mult_eq_top_iff gr_implies_not_zero infinity_ennreal_def mult.commute top.not_eq_extremum)"], ["proof (state)\nthis:\n  y < b * of_nat (card F)\n\ngoal (1 subgoal):\n 1. y < sum f Y", "also"], ["proof (state)\nthis:\n  y < b * of_nat (card F)\n\ngoal (1 subgoal):\n 1. y < sum f Y", "have \\<open>\\<dots> \\<le> b * card Y\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. b * of_nat (card F) \\<le> b * of_nat (card Y)", "by (meson b card_mono less_imp_le mult_left_mono of_nat_le_iff that(1) that(2))"], ["proof (state)\nthis:\n  b * of_nat (card F) \\<le> b * of_nat (card Y)\n\ngoal (1 subgoal):\n 1. y < sum f Y", "also"], ["proof (state)\nthis:\n  b * of_nat (card F) \\<le> b * of_nat (card Y)\n\ngoal (1 subgoal):\n 1. y < sum f Y", "have \\<open>\\<dots> = sum (\\<lambda>_. b) Y\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. b * of_nat (card Y) = (\\<Sum>_\\<in>Y. b)", "by (simp add: mult.commute)"], ["proof (state)\nthis:\n  b * of_nat (card Y) = (\\<Sum>_\\<in>Y. b)\n\ngoal (1 subgoal):\n 1. y < sum f Y", "also"], ["proof (state)\nthis:\n  b * of_nat (card Y) = (\\<Sum>_\\<in>Y. b)\n\ngoal (1 subgoal):\n 1. y < sum f Y", "have \\<open>\\<dots> \\<le> sum f Y\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>_\\<in>Y. b) \\<le> sum f Y", "using geqb"], ["proof (prove)\nusing this:\n  ?x \\<in> S \\<Longrightarrow> b \\<le> f ?x\n\ngoal (1 subgoal):\n 1. (\\<Sum>_\\<in>Y. b) \\<le> sum f Y", "by (meson subset_eq sum_mono that(3))"], ["proof (state)\nthis:\n  (\\<Sum>_\\<in>Y. b) \\<le> sum f Y\n\ngoal (1 subgoal):\n 1. y < sum f Y", "finally"], ["proof (chain)\npicking this:\n  y < sum f Y", "show ?thesis"], ["proof (prove)\nusing this:\n  y < sum f Y\n\ngoal (1 subgoal):\n 1. y < sum f Y", "by -"], ["proof (state)\nthis:\n  y < sum f Y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>finite ?Y; F \\<subseteq> ?Y; ?Y \\<subseteq> S\\<rbrakk>\n  \\<Longrightarrow> y < sum f ?Y\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a < \\<infinity> \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in finite_subsets_at_top S. a < sum f x", "ultimately"], ["proof (chain)\npicking this:\n  finite F\n  F \\<subseteq> S\n  y / b < of_nat (card F)\n  \\<lbrakk>finite ?Y; F \\<subseteq> ?Y; ?Y \\<subseteq> S\\<rbrakk>\n  \\<Longrightarrow> y < sum f ?Y", "show \\<open>\\<forall>\\<^sub>F x in finite_subsets_at_top S. y < sum f x\\<close>"], ["proof (prove)\nusing this:\n  finite F\n  F \\<subseteq> S\n  y / b < of_nat (card F)\n  \\<lbrakk>finite ?Y; F \\<subseteq> ?Y; ?Y \\<subseteq> S\\<rbrakk>\n  \\<Longrightarrow> y < sum f ?Y\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in finite_subsets_at_top S. y < sum f x", "unfolding eventually_finite_subsets_at_top"], ["proof (prove)\nusing this:\n  finite F\n  F \\<subseteq> S\n  y / b < of_nat (card F)\n  \\<lbrakk>finite ?Y; F \\<subseteq> ?Y; ?Y \\<subseteq> S\\<rbrakk>\n  \\<Longrightarrow> y < sum f ?Y\n\ngoal (1 subgoal):\n 1. \\<exists>X.\n       finite X \\<and>\n       X \\<subseteq> S \\<and>\n       (\\<forall>Y.\n           finite Y \\<and>\n           X \\<subseteq> Y \\<and> Y \\<subseteq> S \\<longrightarrow>\n           y < sum f Y)", "by auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in finite_subsets_at_top S. y < sum f x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (sum f \\<longlongrightarrow> \\<infinity>) (finite_subsets_at_top S)\n\ngoal (1 subgoal):\n 1. infsetsum' f S = \\<infinity>", "then"], ["proof (chain)\npicking this:\n  (sum f \\<longlongrightarrow> \\<infinity>) (finite_subsets_at_top S)", "show ?thesis"], ["proof (prove)\nusing this:\n  (sum f \\<longlongrightarrow> \\<infinity>) (finite_subsets_at_top S)\n\ngoal (1 subgoal):\n 1. infsetsum' f S = \\<infinity>", "unfolding infsetsum'_def"], ["proof (prove)\nusing this:\n  (sum f \\<longlongrightarrow> \\<infinity>) (finite_subsets_at_top S)\n\ngoal (1 subgoal):\n 1. (if infsetsum'_converges f S then Lim (finite_subsets_at_top S) (sum f)\n     else 0) =\n    \\<infinity>", "apply (simp add: infsetsum'_converges_ennreal)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (sum f \\<longlongrightarrow> top)\n     (finite_subsets_at_top S) \\<Longrightarrow>\n    Lim (finite_subsets_at_top S) (sum f) = top", "by (simp add: tendsto_Lim)"], ["proof (state)\nthis:\n  infsetsum' f S = \\<infinity>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infsetsum'_tendsto:\n  assumes \\<open>infsetsum'_converges f S\\<close>\n  shows \\<open>((\\<lambda>F. sum f F) \\<longlongrightarrow> infsetsum' f S) (finite_subsets_at_top S)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (sum f \\<longlongrightarrow> infsetsum' f S) (finite_subsets_at_top S)", "by (metis assms finite_subsets_at_top_neq_bot infsetsum'_converges_def infsetsum'_def tendsto_Lim)"], ["", "lemma infsetsum'_constant[simp]:\n  assumes \\<open>finite F\\<close>\n  shows \\<open>infsetsum' (\\<lambda>_. c) F = of_nat (card F) * c\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum' (\\<lambda>_. c) F = of_nat (card F) * c", "apply (subst infsetsum'_finite[OF assms])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>_\\<in>F. c) = of_nat (card F) * c", "by simp"], ["", "lemma infsetsum'_zero[simp]:\n  shows \\<open>infsetsum' (\\<lambda>_. 0) S = 0\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum' (\\<lambda>_. 0::'a) S = (0::'a)", "unfolding infsetsum'_def sum.neutral_const"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if infsetsum'_converges (\\<lambda>_. 0::'a) S\n     then Lim (finite_subsets_at_top S) (\\<lambda>A. 0::'a) else (0::'a)) =\n    (0::'a)", "by (simp add: tendsto_Lim)"], ["", "lemma\n  fixes f g :: \"'a \\<Rightarrow> 'b::{topological_monoid_add, t2_space, comm_monoid_add}\"\n  assumes \\<open>infsetsum'_converges f A\\<close>\n  assumes \\<open>infsetsum'_converges g A\\<close>\n  shows infsetsum'_add: \\<open>infsetsum' (\\<lambda>x. f x + g x) A = infsetsum' f A + infsetsum' g A\\<close>\n    and infsetsum'_converges_add: \\<open>infsetsum'_converges (\\<lambda>x. f x + g x) A\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum' (\\<lambda>x. f x + g x) A =\n    infsetsum' f A + infsetsum' g A &&&\n    infsetsum'_converges (\\<lambda>x. f x + g x) A", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. infsetsum' (\\<lambda>x. f x + g x) A = infsetsum' f A + infsetsum' g A\n 2. infsetsum'_converges (\\<lambda>x. f x + g x) A", "note lim_f = infsetsum'_tendsto[OF assms(1)]\n    and lim_g = infsetsum'_tendsto[OF assms(2)]"], ["proof (state)\nthis:\n  (sum f \\<longlongrightarrow> infsetsum' f A) (finite_subsets_at_top A)\n  (sum g \\<longlongrightarrow> infsetsum' g A) (finite_subsets_at_top A)\n\ngoal (2 subgoals):\n 1. infsetsum' (\\<lambda>x. f x + g x) A = infsetsum' f A + infsetsum' g A\n 2. infsetsum'_converges (\\<lambda>x. f x + g x) A", "then"], ["proof (chain)\npicking this:\n  (sum f \\<longlongrightarrow> infsetsum' f A) (finite_subsets_at_top A)\n  (sum g \\<longlongrightarrow> infsetsum' g A) (finite_subsets_at_top A)", "have lim: \\<open>(sum (\\<lambda>x. f x + g x) \\<longlongrightarrow> infsetsum' f A + infsetsum' g A) (finite_subsets_at_top A)\\<close>"], ["proof (prove)\nusing this:\n  (sum f \\<longlongrightarrow> infsetsum' f A) (finite_subsets_at_top A)\n  (sum g \\<longlongrightarrow> infsetsum' g A) (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. (sum (\\<lambda>x. f x + g x) \\<longlongrightarrow>\n     infsetsum' f A + infsetsum' g A)\n     (finite_subsets_at_top A)", "unfolding sum.distrib"], ["proof (prove)\nusing this:\n  (sum f \\<longlongrightarrow> infsetsum' f A) (finite_subsets_at_top A)\n  (sum g \\<longlongrightarrow> infsetsum' g A) (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>A. sum f A + sum g A) \\<longlongrightarrow>\n     infsetsum' f A + infsetsum' g A)\n     (finite_subsets_at_top A)", "by (rule tendsto_add)"], ["proof (state)\nthis:\n  (sum (\\<lambda>x. f x + g x) \\<longlongrightarrow>\n   infsetsum' f A + infsetsum' g A)\n   (finite_subsets_at_top A)\n\ngoal (2 subgoals):\n 1. infsetsum' (\\<lambda>x. f x + g x) A = infsetsum' f A + infsetsum' g A\n 2. infsetsum'_converges (\\<lambda>x. f x + g x) A", "then"], ["proof (chain)\npicking this:\n  (sum (\\<lambda>x. f x + g x) \\<longlongrightarrow>\n   infsetsum' f A + infsetsum' g A)\n   (finite_subsets_at_top A)", "show conv: \\<open>infsetsum'_converges (\\<lambda>x. f x + g x) A\\<close>"], ["proof (prove)\nusing this:\n  (sum (\\<lambda>x. f x + g x) \\<longlongrightarrow>\n   infsetsum' f A + infsetsum' g A)\n   (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. infsetsum'_converges (\\<lambda>x. f x + g x) A", "unfolding infsetsum'_converges_def"], ["proof (prove)\nusing this:\n  (sum (\\<lambda>x. f x + g x) \\<longlongrightarrow>\n   infsetsum' f A + infsetsum' g A)\n   (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       (sum (\\<lambda>x. f x + g x) \\<longlongrightarrow> x)\n        (finite_subsets_at_top A)", "by auto"], ["proof (state)\nthis:\n  infsetsum'_converges (\\<lambda>x. f x + g x) A\n\ngoal (1 subgoal):\n 1. infsetsum' (\\<lambda>x. f x + g x) A = infsetsum' f A + infsetsum' g A", "show \\<open>infsetsum' (\\<lambda>x. f x + g x) A = infsetsum' f A + infsetsum' g A\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum' (\\<lambda>x. f x + g x) A = infsetsum' f A + infsetsum' g A", "unfolding infsetsum'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if infsetsum'_converges (\\<lambda>x. f x + g x) A\n     then Lim (finite_subsets_at_top A) (sum (\\<lambda>x. f x + g x))\n     else (0::'b)) =\n    (if infsetsum'_converges f A then Lim (finite_subsets_at_top A) (sum f)\n     else (0::'b)) +\n    (if infsetsum'_converges g A then Lim (finite_subsets_at_top A) (sum g)\n     else (0::'b))", "using lim_f lim_g lim"], ["proof (prove)\nusing this:\n  (sum f \\<longlongrightarrow> infsetsum' f A) (finite_subsets_at_top A)\n  (sum g \\<longlongrightarrow> infsetsum' g A) (finite_subsets_at_top A)\n  (sum (\\<lambda>x. f x + g x) \\<longlongrightarrow>\n   infsetsum' f A + infsetsum' g A)\n   (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. (if infsetsum'_converges (\\<lambda>x. f x + g x) A\n     then Lim (finite_subsets_at_top A) (sum (\\<lambda>x. f x + g x))\n     else (0::'b)) =\n    (if infsetsum'_converges f A then Lim (finite_subsets_at_top A) (sum f)\n     else (0::'b)) +\n    (if infsetsum'_converges g A then Lim (finite_subsets_at_top A) (sum g)\n     else (0::'b))", "by (auto simp: assms conv tendsto_Lim)"], ["proof (state)\nthis:\n  infsetsum' (\\<lambda>x. f x + g x) A = infsetsum' f A + infsetsum' g A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \n  fixes f :: \"'a \\<Rightarrow> 'b::{topological_monoid_add, t2_space, comm_monoid_add}\"\n  assumes \"infsetsum'_converges f A\"\n  assumes \"infsetsum'_converges f B\"\n  assumes disj: \"A \\<inter> B = {}\"\n  shows infsetsum'_Un_disjoint: \\<open>infsetsum' f (A \\<union> B) = infsetsum' f A + infsetsum' f B\\<close>\n    and infsetsum'_converges_Un_disjoint: \\<open>infsetsum'_converges f (A \\<union> B)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum' f (A \\<union> B) = infsetsum' f A + infsetsum' f B &&&\n    infsetsum'_converges f (A \\<union> B)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. infsetsum' f (A \\<union> B) = infsetsum' f A + infsetsum' f B\n 2. infsetsum'_converges f (A \\<union> B)", "define fA fB where \\<open>fA x = (if x \\<in> A then f x else 0)\\<close>\n    and \\<open>fB x = (if x \\<notin> A then f x else 0)\\<close> for x"], ["proof (state)\nthis:\n  fA ?x = (if ?x \\<in> A then f ?x else (0::'b))\n  fB ?x = (if ?x \\<notin> A then f ?x else (0::'b))\n\ngoal (2 subgoals):\n 1. infsetsum' f (A \\<union> B) = infsetsum' f A + infsetsum' f B\n 2. infsetsum'_converges f (A \\<union> B)", "have conv_fA: \\<open>infsetsum'_converges fA (A \\<union> B)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum'_converges fA (A \\<union> B)", "unfolding fA_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum'_converges (\\<lambda>x. if x \\<in> A then f x else (0::'b))\n     (A \\<union> B)", "apply (subst infsetsum'_converges_subset_zero, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum'_converges (\\<lambda>x. if x \\<in> A then f x else (0::'b)) A", "by (simp add: assms(1) infsetsum'_converges_cong)"], ["proof (state)\nthis:\n  infsetsum'_converges fA (A \\<union> B)\n\ngoal (2 subgoals):\n 1. infsetsum' f (A \\<union> B) = infsetsum' f A + infsetsum' f B\n 2. infsetsum'_converges f (A \\<union> B)", "have conv_fB: \\<open>infsetsum'_converges fB (A \\<union> B)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum'_converges fB (A \\<union> B)", "unfolding fB_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum'_converges (\\<lambda>x. if x \\<notin> A then f x else (0::'b))\n     (A \\<union> B)", "apply (subst infsetsum'_converges_subset_zero, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum'_converges (\\<lambda>x. if x \\<notin> A then f x else (0::'b))\n     B", "by (smt (verit, ccfv_SIG) assms(2) assms(3) disjoint_iff infsetsum'_converges_cong)"], ["proof (state)\nthis:\n  infsetsum'_converges fB (A \\<union> B)\n\ngoal (2 subgoals):\n 1. infsetsum' f (A \\<union> B) = infsetsum' f A + infsetsum' f B\n 2. infsetsum'_converges f (A \\<union> B)", "have fAB: \\<open>f x = fA x + fB x\\<close> for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. f x = fA x + fB x", "unfolding fA_def fB_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. f x =\n    (if x \\<in> A then f x else (0::'b)) +\n    (if x \\<notin> A then f x else (0::'b))", "by simp"], ["proof (state)\nthis:\n  f ?x = fA ?x + fB ?x\n\ngoal (2 subgoals):\n 1. infsetsum' f (A \\<union> B) = infsetsum' f A + infsetsum' f B\n 2. infsetsum'_converges f (A \\<union> B)", "have \\<open>infsetsum' f (A \\<union> B) = infsetsum' fA (A \\<union> B) + infsetsum' fB (A \\<union> B)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum' f (A \\<union> B) =\n    infsetsum' fA (A \\<union> B) + infsetsum' fB (A \\<union> B)", "unfolding fAB"], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum' (\\<lambda>x. fA x + fB x) (A \\<union> B) =\n    infsetsum' fA (A \\<union> B) + infsetsum' fB (A \\<union> B)", "using conv_fA conv_fB"], ["proof (prove)\nusing this:\n  infsetsum'_converges fA (A \\<union> B)\n  infsetsum'_converges fB (A \\<union> B)\n\ngoal (1 subgoal):\n 1. infsetsum' (\\<lambda>x. fA x + fB x) (A \\<union> B) =\n    infsetsum' fA (A \\<union> B) + infsetsum' fB (A \\<union> B)", "by (rule infsetsum'_add)"], ["proof (state)\nthis:\n  infsetsum' f (A \\<union> B) =\n  infsetsum' fA (A \\<union> B) + infsetsum' fB (A \\<union> B)\n\ngoal (2 subgoals):\n 1. infsetsum' f (A \\<union> B) = infsetsum' f A + infsetsum' f B\n 2. infsetsum'_converges f (A \\<union> B)", "also"], ["proof (state)\nthis:\n  infsetsum' f (A \\<union> B) =\n  infsetsum' fA (A \\<union> B) + infsetsum' fB (A \\<union> B)\n\ngoal (2 subgoals):\n 1. infsetsum' f (A \\<union> B) = infsetsum' f A + infsetsum' f B\n 2. infsetsum'_converges f (A \\<union> B)", "have \\<open>\\<dots> = infsetsum' fA A + infsetsum' fB B\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum' fA (A \\<union> B) + infsetsum' fB (A \\<union> B) =\n    infsetsum' fA A + infsetsum' fB B", "unfolding fA_def fB_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum' (\\<lambda>x. if x \\<in> A then f x else (0::'b))\n     (A \\<union> B) +\n    infsetsum' (\\<lambda>x. if x \\<notin> A then f x else (0::'b))\n     (A \\<union> B) =\n    infsetsum' (\\<lambda>x. if x \\<in> A then f x else (0::'b)) A +\n    infsetsum' (\\<lambda>x. if x \\<notin> A then f x else (0::'b)) B", "by (subst infsetsum'_subset_zero[where A=\\<open>A\\<union>B\\<close>], auto)+"], ["proof (state)\nthis:\n  infsetsum' fA (A \\<union> B) + infsetsum' fB (A \\<union> B) =\n  infsetsum' fA A + infsetsum' fB B\n\ngoal (2 subgoals):\n 1. infsetsum' f (A \\<union> B) = infsetsum' f A + infsetsum' f B\n 2. infsetsum'_converges f (A \\<union> B)", "also"], ["proof (state)\nthis:\n  infsetsum' fA (A \\<union> B) + infsetsum' fB (A \\<union> B) =\n  infsetsum' fA A + infsetsum' fB B\n\ngoal (2 subgoals):\n 1. infsetsum' f (A \\<union> B) = infsetsum' f A + infsetsum' f B\n 2. infsetsum'_converges f (A \\<union> B)", "have \\<open>\\<dots> = infsetsum' f A + infsetsum' f B\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum' fA A + infsetsum' fB B = infsetsum' f A + infsetsum' f B", "apply (subst infsetsum'_cong[where f=fA and g=f], simp add: fA_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum' f A + infsetsum' fB B = infsetsum' f A + infsetsum' f B", "apply (subst infsetsum'_cong[where f=fB and g=f], simp add: fB_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> B \\<Longrightarrow> x \\<in> A \\<longrightarrow> f x = (0::'b)\n 2. infsetsum' f A + infsetsum' f B = infsetsum' f A + infsetsum' f B", "using disj"], ["proof (prove)\nusing this:\n  A \\<inter> B = {}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> B \\<Longrightarrow> x \\<in> A \\<longrightarrow> f x = (0::'b)\n 2. infsetsum' f A + infsetsum' f B = infsetsum' f A + infsetsum' f B", "by auto"], ["proof (state)\nthis:\n  infsetsum' fA A + infsetsum' fB B = infsetsum' f A + infsetsum' f B\n\ngoal (2 subgoals):\n 1. infsetsum' f (A \\<union> B) = infsetsum' f A + infsetsum' f B\n 2. infsetsum'_converges f (A \\<union> B)", "finally"], ["proof (chain)\npicking this:\n  infsetsum' f (A \\<union> B) = infsetsum' f A + infsetsum' f B", "show \\<open>infsetsum' f (A \\<union> B) = infsetsum' f A + infsetsum' f B\\<close>"], ["proof (prove)\nusing this:\n  infsetsum' f (A \\<union> B) = infsetsum' f A + infsetsum' f B\n\ngoal (1 subgoal):\n 1. infsetsum' f (A \\<union> B) = infsetsum' f A + infsetsum' f B", "by -"], ["proof (state)\nthis:\n  infsetsum' f (A \\<union> B) = infsetsum' f A + infsetsum' f B\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f (A \\<union> B)", "from conv_fA conv_fB"], ["proof (chain)\npicking this:\n  infsetsum'_converges fA (A \\<union> B)\n  infsetsum'_converges fB (A \\<union> B)", "have \\<open>infsetsum'_converges (\\<lambda>x. fA x + fB x) (A \\<union> B)\\<close>"], ["proof (prove)\nusing this:\n  infsetsum'_converges fA (A \\<union> B)\n  infsetsum'_converges fB (A \\<union> B)\n\ngoal (1 subgoal):\n 1. infsetsum'_converges (\\<lambda>x. fA x + fB x) (A \\<union> B)", "by (rule infsetsum'_converges_add)"], ["proof (state)\nthis:\n  infsetsum'_converges (\\<lambda>x. fA x + fB x) (A \\<union> B)\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f (A \\<union> B)", "then"], ["proof (chain)\npicking this:\n  infsetsum'_converges (\\<lambda>x. fA x + fB x) (A \\<union> B)", "show \\<open>infsetsum'_converges f (A \\<union> B)\\<close>"], ["proof (prove)\nusing this:\n  infsetsum'_converges (\\<lambda>x. fA x + fB x) (A \\<union> B)\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f (A \\<union> B)", "unfolding fAB"], ["proof (prove)\nusing this:\n  infsetsum'_converges (\\<lambda>x. fA x + fB x) (A \\<union> B)\n\ngoal (1 subgoal):\n 1. infsetsum'_converges (\\<lambda>x. fA x + fB x) (A \\<union> B)", "by -"], ["proof (state)\nthis:\n  infsetsum'_converges f (A \\<union> B)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infsetsum'_converges_union_disjoint:\n  fixes f :: \"'a \\<Rightarrow> 'b::{topological_monoid_add, t2_space, comm_monoid_add}\"\n  assumes finite: \\<open>finite A\\<close>\n  assumes conv: \\<open>\\<And>a. a \\<in> A \\<Longrightarrow> infsetsum'_converges f (B a)\\<close>\n  assumes disj: \\<open>\\<And>a a'. a\\<in>A \\<Longrightarrow> a'\\<in>A \\<Longrightarrow> a\\<noteq>a' \\<Longrightarrow> B a \\<inter> B a' = {}\\<close>\n  shows \\<open>infsetsum'_converges f (\\<Union>a\\<in>A. B a)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum'_converges f (\\<Union> (B ` A))", "using finite conv disj"], ["proof (prove)\nusing this:\n  finite A\n  ?a \\<in> A \\<Longrightarrow> infsetsum'_converges f (B ?a)\n  \\<lbrakk>?a \\<in> A; ?a' \\<in> A; ?a \\<noteq> ?a'\\<rbrakk>\n  \\<Longrightarrow> B ?a \\<inter> B ?a' = {}\n\ngoal (1 subgoal):\n 1. infsetsum'_converges f (\\<Union> (B ` A))", "apply induction"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>a.\n                a \\<in> {} \\<Longrightarrow> infsetsum'_converges f (B a);\n     \\<And>a a'.\n        \\<lbrakk>a \\<in> {}; a' \\<in> {}; a \\<noteq> a'\\<rbrakk>\n        \\<Longrightarrow> B a \\<inter> B a' = {}\\<rbrakk>\n    \\<Longrightarrow> infsetsum'_converges f (\\<Union> (B ` {}))\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>a.\n                    a \\<in> F \\<Longrightarrow>\n                    infsetsum'_converges f (B a);\n         \\<And>a a'.\n            \\<lbrakk>a \\<in> F; a' \\<in> F; a \\<noteq> a'\\<rbrakk>\n            \\<Longrightarrow> B a \\<inter> B a' = {}\\<rbrakk>\n        \\<Longrightarrow> infsetsum'_converges f (\\<Union> (B ` F));\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow>\n           infsetsum'_converges f (B a);\n        \\<And>a a'.\n           \\<lbrakk>a \\<in> insert x F; a' \\<in> insert x F;\n            a \\<noteq> a'\\<rbrakk>\n           \\<Longrightarrow> B a \\<inter> B a' = {}\\<rbrakk>\n       \\<Longrightarrow> infsetsum'_converges f (\\<Union> (B ` insert x F))", "by (auto intro!: infsetsum'_converges_Un_disjoint)"], ["", "lemma sum_infsetsum':\n  fixes f :: \"'a \\<Rightarrow> 'b::{topological_monoid_add, t2_space, comm_monoid_add}\"\n  assumes finite: \\<open>finite A\\<close>\n  assumes conv: \\<open>\\<And>a. a \\<in> A \\<Longrightarrow> infsetsum'_converges f (B a)\\<close>\n  assumes disj: \\<open>\\<And>a a'. a\\<in>A \\<Longrightarrow> a'\\<in>A \\<Longrightarrow> a\\<noteq>a' \\<Longrightarrow> B a \\<inter> B a' = {}\\<close>\n  shows \\<open>sum (\\<lambda>a. infsetsum' f (B a)) A = infsetsum' f (\\<Union>a\\<in>A. B a)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>A. infsetsum' f (B a)) = infsetsum' f (\\<Union> (B ` A))", "using assms"], ["proof (prove)\nusing this:\n  finite A\n  ?a \\<in> A \\<Longrightarrow> infsetsum'_converges f (B ?a)\n  \\<lbrakk>?a \\<in> A; ?a' \\<in> A; ?a \\<noteq> ?a'\\<rbrakk>\n  \\<Longrightarrow> B ?a \\<inter> B ?a' = {}\n\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>A. infsetsum' f (B a)) = infsetsum' f (\\<Union> (B ` A))", "proof (insert finite conv disj, induction)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite {};\n     \\<And>a. a \\<in> {} \\<Longrightarrow> infsetsum'_converges f (B a);\n     \\<And>a a'.\n        \\<lbrakk>a \\<in> {}; a' \\<in> {}; a \\<noteq> a'\\<rbrakk>\n        \\<Longrightarrow> B a \\<inter> B a' = {};\n     \\<And>a. a \\<in> {} \\<Longrightarrow> infsetsum'_converges f (B a);\n     \\<And>a a'.\n        \\<lbrakk>a \\<in> {}; a' \\<in> {}; a \\<noteq> a'\\<rbrakk>\n        \\<Longrightarrow> B a \\<inter> B a' = {}\\<rbrakk>\n    \\<Longrightarrow> (\\<Sum>a\\<in>{}. infsetsum' f (B a)) =\n                      infsetsum' f (\\<Union> (B ` {}))\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>finite F;\n         \\<And>a. a \\<in> F \\<Longrightarrow> infsetsum'_converges f (B a);\n         \\<And>a a'.\n            \\<lbrakk>a \\<in> F; a' \\<in> F; a \\<noteq> a'\\<rbrakk>\n            \\<Longrightarrow> B a \\<inter> B a' = {};\n         \\<And>a. a \\<in> F \\<Longrightarrow> infsetsum'_converges f (B a);\n         \\<And>a a'.\n            \\<lbrakk>a \\<in> F; a' \\<in> F; a \\<noteq> a'\\<rbrakk>\n            \\<Longrightarrow> B a \\<inter> B a' = {}\\<rbrakk>\n        \\<Longrightarrow> (\\<Sum>a\\<in>F. infsetsum' f (B a)) =\n                          infsetsum' f (\\<Union> (B ` F));\n        finite (insert x F);\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow>\n           infsetsum'_converges f (B a);\n        \\<And>a a'.\n           \\<lbrakk>a \\<in> insert x F; a' \\<in> insert x F;\n            a \\<noteq> a'\\<rbrakk>\n           \\<Longrightarrow> B a \\<inter> B a' = {};\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow>\n           infsetsum'_converges f (B a);\n        \\<And>a a'.\n           \\<lbrakk>a \\<in> insert x F; a' \\<in> insert x F;\n            a \\<noteq> a'\\<rbrakk>\n           \\<Longrightarrow> B a \\<inter> B a' = {}\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>insert x F. infsetsum' f (B a)) =\n                         infsetsum' f (\\<Union> (B ` insert x F))", "case empty"], ["proof (state)\nthis:\n  finite {}\n  ?a \\<in> {} \\<Longrightarrow> infsetsum'_converges f (B ?a)\n  \\<lbrakk>?a \\<in> {}; ?a' \\<in> {}; ?a \\<noteq> ?a'\\<rbrakk>\n  \\<Longrightarrow> B ?a \\<inter> B ?a' = {}\n  ?a \\<in> {} \\<Longrightarrow> infsetsum'_converges f (B ?a)\n  \\<lbrakk>?a \\<in> {}; ?a' \\<in> {}; ?a \\<noteq> ?a'\\<rbrakk>\n  \\<Longrightarrow> B ?a \\<inter> B ?a' = {}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>finite {};\n     \\<And>a. a \\<in> {} \\<Longrightarrow> infsetsum'_converges f (B a);\n     \\<And>a a'.\n        \\<lbrakk>a \\<in> {}; a' \\<in> {}; a \\<noteq> a'\\<rbrakk>\n        \\<Longrightarrow> B a \\<inter> B a' = {};\n     \\<And>a. a \\<in> {} \\<Longrightarrow> infsetsum'_converges f (B a);\n     \\<And>a a'.\n        \\<lbrakk>a \\<in> {}; a' \\<in> {}; a \\<noteq> a'\\<rbrakk>\n        \\<Longrightarrow> B a \\<inter> B a' = {}\\<rbrakk>\n    \\<Longrightarrow> (\\<Sum>a\\<in>{}. infsetsum' f (B a)) =\n                      infsetsum' f (\\<Union> (B ` {}))\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>finite F;\n         \\<And>a. a \\<in> F \\<Longrightarrow> infsetsum'_converges f (B a);\n         \\<And>a a'.\n            \\<lbrakk>a \\<in> F; a' \\<in> F; a \\<noteq> a'\\<rbrakk>\n            \\<Longrightarrow> B a \\<inter> B a' = {};\n         \\<And>a. a \\<in> F \\<Longrightarrow> infsetsum'_converges f (B a);\n         \\<And>a a'.\n            \\<lbrakk>a \\<in> F; a' \\<in> F; a \\<noteq> a'\\<rbrakk>\n            \\<Longrightarrow> B a \\<inter> B a' = {}\\<rbrakk>\n        \\<Longrightarrow> (\\<Sum>a\\<in>F. infsetsum' f (B a)) =\n                          infsetsum' f (\\<Union> (B ` F));\n        finite (insert x F);\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow>\n           infsetsum'_converges f (B a);\n        \\<And>a a'.\n           \\<lbrakk>a \\<in> insert x F; a' \\<in> insert x F;\n            a \\<noteq> a'\\<rbrakk>\n           \\<Longrightarrow> B a \\<inter> B a' = {};\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow>\n           infsetsum'_converges f (B a);\n        \\<And>a a'.\n           \\<lbrakk>a \\<in> insert x F; a' \\<in> insert x F;\n            a \\<noteq> a'\\<rbrakk>\n           \\<Longrightarrow> B a \\<inter> B a' = {}\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>insert x F. infsetsum' f (B a)) =\n                         infsetsum' f (\\<Union> (B ` insert x F))", "then"], ["proof (chain)\npicking this:\n  finite {}\n  ?a \\<in> {} \\<Longrightarrow> infsetsum'_converges f (B ?a)\n  \\<lbrakk>?a \\<in> {}; ?a' \\<in> {}; ?a \\<noteq> ?a'\\<rbrakk>\n  \\<Longrightarrow> B ?a \\<inter> B ?a' = {}\n  ?a \\<in> {} \\<Longrightarrow> infsetsum'_converges f (B ?a)\n  \\<lbrakk>?a \\<in> {}; ?a' \\<in> {}; ?a \\<noteq> ?a'\\<rbrakk>\n  \\<Longrightarrow> B ?a \\<inter> B ?a' = {}", "show ?case"], ["proof (prove)\nusing this:\n  finite {}\n  ?a \\<in> {} \\<Longrightarrow> infsetsum'_converges f (B ?a)\n  \\<lbrakk>?a \\<in> {}; ?a' \\<in> {}; ?a \\<noteq> ?a'\\<rbrakk>\n  \\<Longrightarrow> B ?a \\<inter> B ?a' = {}\n  ?a \\<in> {} \\<Longrightarrow> infsetsum'_converges f (B ?a)\n  \\<lbrakk>?a \\<in> {}; ?a' \\<in> {}; ?a \\<noteq> ?a'\\<rbrakk>\n  \\<Longrightarrow> B ?a \\<inter> B ?a' = {}\n\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>{}. infsetsum' f (B a)) = infsetsum' f (\\<Union> (B ` {}))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>{}. infsetsum' f (B a)) = infsetsum' f (\\<Union> (B ` {}))\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>finite F;\n         \\<And>a. a \\<in> F \\<Longrightarrow> infsetsum'_converges f (B a);\n         \\<And>a a'.\n            \\<lbrakk>a \\<in> F; a' \\<in> F; a \\<noteq> a'\\<rbrakk>\n            \\<Longrightarrow> B a \\<inter> B a' = {};\n         \\<And>a. a \\<in> F \\<Longrightarrow> infsetsum'_converges f (B a);\n         \\<And>a a'.\n            \\<lbrakk>a \\<in> F; a' \\<in> F; a \\<noteq> a'\\<rbrakk>\n            \\<Longrightarrow> B a \\<inter> B a' = {}\\<rbrakk>\n        \\<Longrightarrow> (\\<Sum>a\\<in>F. infsetsum' f (B a)) =\n                          infsetsum' f (\\<Union> (B ` F));\n        finite (insert x F);\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow>\n           infsetsum'_converges f (B a);\n        \\<And>a a'.\n           \\<lbrakk>a \\<in> insert x F; a' \\<in> insert x F;\n            a \\<noteq> a'\\<rbrakk>\n           \\<Longrightarrow> B a \\<inter> B a' = {};\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow>\n           infsetsum'_converges f (B a);\n        \\<And>a a'.\n           \\<lbrakk>a \\<in> insert x F; a' \\<in> insert x F;\n            a \\<noteq> a'\\<rbrakk>\n           \\<Longrightarrow> B a \\<inter> B a' = {}\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>insert x F. infsetsum' f (B a)) =\n                         infsetsum' f (\\<Union> (B ` insert x F))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>finite F;\n         \\<And>a. a \\<in> F \\<Longrightarrow> infsetsum'_converges f (B a);\n         \\<And>a a'.\n            \\<lbrakk>a \\<in> F; a' \\<in> F; a \\<noteq> a'\\<rbrakk>\n            \\<Longrightarrow> B a \\<inter> B a' = {};\n         \\<And>a. a \\<in> F \\<Longrightarrow> infsetsum'_converges f (B a);\n         \\<And>a a'.\n            \\<lbrakk>a \\<in> F; a' \\<in> F; a \\<noteq> a'\\<rbrakk>\n            \\<Longrightarrow> B a \\<inter> B a' = {}\\<rbrakk>\n        \\<Longrightarrow> (\\<Sum>a\\<in>F. infsetsum' f (B a)) =\n                          infsetsum' f (\\<Union> (B ` F));\n        finite (insert x F);\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow>\n           infsetsum'_converges f (B a);\n        \\<And>a a'.\n           \\<lbrakk>a \\<in> insert x F; a' \\<in> insert x F;\n            a \\<noteq> a'\\<rbrakk>\n           \\<Longrightarrow> B a \\<inter> B a' = {};\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow>\n           infsetsum'_converges f (B a);\n        \\<And>a a'.\n           \\<lbrakk>a \\<in> insert x F; a' \\<in> insert x F;\n            a \\<noteq> a'\\<rbrakk>\n           \\<Longrightarrow> B a \\<inter> B a' = {}\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>insert x F. infsetsum' f (B a)) =\n                         infsetsum' f (\\<Union> (B ` insert x F))", "case (insert x F)"], ["proof (state)\nthis:\n  finite F\n  x \\<notin> F\n  \\<lbrakk>finite F;\n   \\<And>a. a \\<in> F \\<Longrightarrow> infsetsum'_converges f (B a);\n   \\<And>a a'.\n      \\<lbrakk>a \\<in> F; a' \\<in> F; a \\<noteq> a'\\<rbrakk>\n      \\<Longrightarrow> B a \\<inter> B a' = {};\n   \\<And>a. a \\<in> F \\<Longrightarrow> infsetsum'_converges f (B a);\n   \\<And>a a'.\n      \\<lbrakk>a \\<in> F; a' \\<in> F; a \\<noteq> a'\\<rbrakk>\n      \\<Longrightarrow> B a \\<inter> B a' = {}\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>a\\<in>F. infsetsum' f (B a)) =\n                    infsetsum' f (\\<Union> (B ` F))\n  finite (insert x F)\n  ?a \\<in> insert x F \\<Longrightarrow> infsetsum'_converges f (B ?a)\n  \\<lbrakk>?a \\<in> insert x F; ?a' \\<in> insert x F;\n   ?a \\<noteq> ?a'\\<rbrakk>\n  \\<Longrightarrow> B ?a \\<inter> B ?a' = {}\n  ?a \\<in> insert x F \\<Longrightarrow> infsetsum'_converges f (B ?a)\n  \\<lbrakk>?a \\<in> insert x F; ?a' \\<in> insert x F;\n   ?a \\<noteq> ?a'\\<rbrakk>\n  \\<Longrightarrow> B ?a \\<inter> B ?a' = {}\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>finite F;\n         \\<And>a. a \\<in> F \\<Longrightarrow> infsetsum'_converges f (B a);\n         \\<And>a a'.\n            \\<lbrakk>a \\<in> F; a' \\<in> F; a \\<noteq> a'\\<rbrakk>\n            \\<Longrightarrow> B a \\<inter> B a' = {};\n         \\<And>a. a \\<in> F \\<Longrightarrow> infsetsum'_converges f (B a);\n         \\<And>a a'.\n            \\<lbrakk>a \\<in> F; a' \\<in> F; a \\<noteq> a'\\<rbrakk>\n            \\<Longrightarrow> B a \\<inter> B a' = {}\\<rbrakk>\n        \\<Longrightarrow> (\\<Sum>a\\<in>F. infsetsum' f (B a)) =\n                          infsetsum' f (\\<Union> (B ` F));\n        finite (insert x F);\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow>\n           infsetsum'_converges f (B a);\n        \\<And>a a'.\n           \\<lbrakk>a \\<in> insert x F; a' \\<in> insert x F;\n            a \\<noteq> a'\\<rbrakk>\n           \\<Longrightarrow> B a \\<inter> B a' = {};\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow>\n           infsetsum'_converges f (B a);\n        \\<And>a a'.\n           \\<lbrakk>a \\<in> insert x F; a' \\<in> insert x F;\n            a \\<noteq> a'\\<rbrakk>\n           \\<Longrightarrow> B a \\<inter> B a' = {}\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>insert x F. infsetsum' f (B a)) =\n                         infsetsum' f (\\<Union> (B ` insert x F))", "have \\<open>(\\<Sum>a\\<in>insert x F. infsetsum' f (B a)) = infsetsum' f (B x) + (\\<Sum>a\\<in>F. infsetsum' f (B a))\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>insert x F. infsetsum' f (B a)) =\n    infsetsum' f (B x) + (\\<Sum>a\\<in>F. infsetsum' f (B a))", "apply (subst sum.insert)"], ["proof (prove)\ngoal (3 subgoals):\n 1. finite F\n 2. x \\<notin> F\n 3. infsetsum' f (B x) + (\\<Sum>a\\<in>F. infsetsum' f (B a)) =\n    infsetsum' f (B x) + (\\<Sum>a\\<in>F. infsetsum' f (B a))", "using insert"], ["proof (prove)\nusing this:\n  finite F\n  x \\<notin> F\n  \\<lbrakk>finite F;\n   \\<And>a. a \\<in> F \\<Longrightarrow> infsetsum'_converges f (B a);\n   \\<And>a a'.\n      \\<lbrakk>a \\<in> F; a' \\<in> F; a \\<noteq> a'\\<rbrakk>\n      \\<Longrightarrow> B a \\<inter> B a' = {};\n   \\<And>a. a \\<in> F \\<Longrightarrow> infsetsum'_converges f (B a);\n   \\<And>a a'.\n      \\<lbrakk>a \\<in> F; a' \\<in> F; a \\<noteq> a'\\<rbrakk>\n      \\<Longrightarrow> B a \\<inter> B a' = {}\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>a\\<in>F. infsetsum' f (B a)) =\n                    infsetsum' f (\\<Union> (B ` F))\n  finite (insert x F)\n  ?a \\<in> insert x F \\<Longrightarrow> infsetsum'_converges f (B ?a)\n  \\<lbrakk>?a \\<in> insert x F; ?a' \\<in> insert x F;\n   ?a \\<noteq> ?a'\\<rbrakk>\n  \\<Longrightarrow> B ?a \\<inter> B ?a' = {}\n  ?a \\<in> insert x F \\<Longrightarrow> infsetsum'_converges f (B ?a)\n  \\<lbrakk>?a \\<in> insert x F; ?a' \\<in> insert x F;\n   ?a \\<noteq> ?a'\\<rbrakk>\n  \\<Longrightarrow> B ?a \\<inter> B ?a' = {}\n\ngoal (3 subgoals):\n 1. finite F\n 2. x \\<notin> F\n 3. infsetsum' f (B x) + (\\<Sum>a\\<in>F. infsetsum' f (B a)) =\n    infsetsum' f (B x) + (\\<Sum>a\\<in>F. infsetsum' f (B a))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>insert x F. infsetsum' f (B a)) =\n  infsetsum' f (B x) + (\\<Sum>a\\<in>F. infsetsum' f (B a))\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>finite F;\n         \\<And>a. a \\<in> F \\<Longrightarrow> infsetsum'_converges f (B a);\n         \\<And>a a'.\n            \\<lbrakk>a \\<in> F; a' \\<in> F; a \\<noteq> a'\\<rbrakk>\n            \\<Longrightarrow> B a \\<inter> B a' = {};\n         \\<And>a. a \\<in> F \\<Longrightarrow> infsetsum'_converges f (B a);\n         \\<And>a a'.\n            \\<lbrakk>a \\<in> F; a' \\<in> F; a \\<noteq> a'\\<rbrakk>\n            \\<Longrightarrow> B a \\<inter> B a' = {}\\<rbrakk>\n        \\<Longrightarrow> (\\<Sum>a\\<in>F. infsetsum' f (B a)) =\n                          infsetsum' f (\\<Union> (B ` F));\n        finite (insert x F);\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow>\n           infsetsum'_converges f (B a);\n        \\<And>a a'.\n           \\<lbrakk>a \\<in> insert x F; a' \\<in> insert x F;\n            a \\<noteq> a'\\<rbrakk>\n           \\<Longrightarrow> B a \\<inter> B a' = {};\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow>\n           infsetsum'_converges f (B a);\n        \\<And>a a'.\n           \\<lbrakk>a \\<in> insert x F; a' \\<in> insert x F;\n            a \\<noteq> a'\\<rbrakk>\n           \\<Longrightarrow> B a \\<inter> B a' = {}\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>insert x F. infsetsum' f (B a)) =\n                         infsetsum' f (\\<Union> (B ` insert x F))", "also"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>insert x F. infsetsum' f (B a)) =\n  infsetsum' f (B x) + (\\<Sum>a\\<in>F. infsetsum' f (B a))\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>finite F;\n         \\<And>a. a \\<in> F \\<Longrightarrow> infsetsum'_converges f (B a);\n         \\<And>a a'.\n            \\<lbrakk>a \\<in> F; a' \\<in> F; a \\<noteq> a'\\<rbrakk>\n            \\<Longrightarrow> B a \\<inter> B a' = {};\n         \\<And>a. a \\<in> F \\<Longrightarrow> infsetsum'_converges f (B a);\n         \\<And>a a'.\n            \\<lbrakk>a \\<in> F; a' \\<in> F; a \\<noteq> a'\\<rbrakk>\n            \\<Longrightarrow> B a \\<inter> B a' = {}\\<rbrakk>\n        \\<Longrightarrow> (\\<Sum>a\\<in>F. infsetsum' f (B a)) =\n                          infsetsum' f (\\<Union> (B ` F));\n        finite (insert x F);\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow>\n           infsetsum'_converges f (B a);\n        \\<And>a a'.\n           \\<lbrakk>a \\<in> insert x F; a' \\<in> insert x F;\n            a \\<noteq> a'\\<rbrakk>\n           \\<Longrightarrow> B a \\<inter> B a' = {};\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow>\n           infsetsum'_converges f (B a);\n        \\<And>a a'.\n           \\<lbrakk>a \\<in> insert x F; a' \\<in> insert x F;\n            a \\<noteq> a'\\<rbrakk>\n           \\<Longrightarrow> B a \\<inter> B a' = {}\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>insert x F. infsetsum' f (B a)) =\n                         infsetsum' f (\\<Union> (B ` insert x F))", "have \\<open>\\<dots> = infsetsum' f (B x) + infsetsum' f (\\<Union> (B ` F))\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum' f (B x) + (\\<Sum>a\\<in>F. infsetsum' f (B a)) =\n    infsetsum' f (B x) + infsetsum' f (\\<Union> (B ` F))", "apply (subst insert.IH)"], ["proof (prove)\ngoal (4 subgoals):\n 1. finite F\n 2. \\<And>a. a \\<in> F \\<Longrightarrow> infsetsum'_converges f (B a)\n 3. \\<And>a a'.\n       \\<lbrakk>a \\<in> F; a' \\<in> F; a \\<noteq> a'\\<rbrakk>\n       \\<Longrightarrow> B a \\<inter> B a' = {}\n 4. infsetsum' f (B x) + infsetsum' f (\\<Union> (B ` F)) =\n    infsetsum' f (B x) + infsetsum' f (\\<Union> (B ` F))", "using assms insert"], ["proof (prove)\nusing this:\n  finite A\n  ?a \\<in> A \\<Longrightarrow> infsetsum'_converges f (B ?a)\n  \\<lbrakk>?a \\<in> A; ?a' \\<in> A; ?a \\<noteq> ?a'\\<rbrakk>\n  \\<Longrightarrow> B ?a \\<inter> B ?a' = {}\n  finite F\n  x \\<notin> F\n  \\<lbrakk>finite F;\n   \\<And>a. a \\<in> F \\<Longrightarrow> infsetsum'_converges f (B a);\n   \\<And>a a'.\n      \\<lbrakk>a \\<in> F; a' \\<in> F; a \\<noteq> a'\\<rbrakk>\n      \\<Longrightarrow> B a \\<inter> B a' = {};\n   \\<And>a. a \\<in> F \\<Longrightarrow> infsetsum'_converges f (B a);\n   \\<And>a a'.\n      \\<lbrakk>a \\<in> F; a' \\<in> F; a \\<noteq> a'\\<rbrakk>\n      \\<Longrightarrow> B a \\<inter> B a' = {}\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>a\\<in>F. infsetsum' f (B a)) =\n                    infsetsum' f (\\<Union> (B ` F))\n  finite (insert x F)\n  ?a \\<in> insert x F \\<Longrightarrow> infsetsum'_converges f (B ?a)\n  \\<lbrakk>?a \\<in> insert x F; ?a' \\<in> insert x F;\n   ?a \\<noteq> ?a'\\<rbrakk>\n  \\<Longrightarrow> B ?a \\<inter> B ?a' = {}\n  ?a \\<in> insert x F \\<Longrightarrow> infsetsum'_converges f (B ?a)\n  \\<lbrakk>?a \\<in> insert x F; ?a' \\<in> insert x F;\n   ?a \\<noteq> ?a'\\<rbrakk>\n  \\<Longrightarrow> B ?a \\<inter> B ?a' = {}\n\ngoal (4 subgoals):\n 1. finite F\n 2. \\<And>a. a \\<in> F \\<Longrightarrow> infsetsum'_converges f (B a)\n 3. \\<And>a a'.\n       \\<lbrakk>a \\<in> F; a' \\<in> F; a \\<noteq> a'\\<rbrakk>\n       \\<Longrightarrow> B a \\<inter> B a' = {}\n 4. infsetsum' f (B x) + infsetsum' f (\\<Union> (B ` F)) =\n    infsetsum' f (B x) + infsetsum' f (\\<Union> (B ` F))", "by auto"], ["proof (state)\nthis:\n  infsetsum' f (B x) + (\\<Sum>a\\<in>F. infsetsum' f (B a)) =\n  infsetsum' f (B x) + infsetsum' f (\\<Union> (B ` F))\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>finite F;\n         \\<And>a. a \\<in> F \\<Longrightarrow> infsetsum'_converges f (B a);\n         \\<And>a a'.\n            \\<lbrakk>a \\<in> F; a' \\<in> F; a \\<noteq> a'\\<rbrakk>\n            \\<Longrightarrow> B a \\<inter> B a' = {};\n         \\<And>a. a \\<in> F \\<Longrightarrow> infsetsum'_converges f (B a);\n         \\<And>a a'.\n            \\<lbrakk>a \\<in> F; a' \\<in> F; a \\<noteq> a'\\<rbrakk>\n            \\<Longrightarrow> B a \\<inter> B a' = {}\\<rbrakk>\n        \\<Longrightarrow> (\\<Sum>a\\<in>F. infsetsum' f (B a)) =\n                          infsetsum' f (\\<Union> (B ` F));\n        finite (insert x F);\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow>\n           infsetsum'_converges f (B a);\n        \\<And>a a'.\n           \\<lbrakk>a \\<in> insert x F; a' \\<in> insert x F;\n            a \\<noteq> a'\\<rbrakk>\n           \\<Longrightarrow> B a \\<inter> B a' = {};\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow>\n           infsetsum'_converges f (B a);\n        \\<And>a a'.\n           \\<lbrakk>a \\<in> insert x F; a' \\<in> insert x F;\n            a \\<noteq> a'\\<rbrakk>\n           \\<Longrightarrow> B a \\<inter> B a' = {}\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>insert x F. infsetsum' f (B a)) =\n                         infsetsum' f (\\<Union> (B ` insert x F))", "also"], ["proof (state)\nthis:\n  infsetsum' f (B x) + (\\<Sum>a\\<in>F. infsetsum' f (B a)) =\n  infsetsum' f (B x) + infsetsum' f (\\<Union> (B ` F))\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>finite F;\n         \\<And>a. a \\<in> F \\<Longrightarrow> infsetsum'_converges f (B a);\n         \\<And>a a'.\n            \\<lbrakk>a \\<in> F; a' \\<in> F; a \\<noteq> a'\\<rbrakk>\n            \\<Longrightarrow> B a \\<inter> B a' = {};\n         \\<And>a. a \\<in> F \\<Longrightarrow> infsetsum'_converges f (B a);\n         \\<And>a a'.\n            \\<lbrakk>a \\<in> F; a' \\<in> F; a \\<noteq> a'\\<rbrakk>\n            \\<Longrightarrow> B a \\<inter> B a' = {}\\<rbrakk>\n        \\<Longrightarrow> (\\<Sum>a\\<in>F. infsetsum' f (B a)) =\n                          infsetsum' f (\\<Union> (B ` F));\n        finite (insert x F);\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow>\n           infsetsum'_converges f (B a);\n        \\<And>a a'.\n           \\<lbrakk>a \\<in> insert x F; a' \\<in> insert x F;\n            a \\<noteq> a'\\<rbrakk>\n           \\<Longrightarrow> B a \\<inter> B a' = {};\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow>\n           infsetsum'_converges f (B a);\n        \\<And>a a'.\n           \\<lbrakk>a \\<in> insert x F; a' \\<in> insert x F;\n            a \\<noteq> a'\\<rbrakk>\n           \\<Longrightarrow> B a \\<inter> B a' = {}\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>insert x F. infsetsum' f (B a)) =\n                         infsetsum' f (\\<Union> (B ` insert x F))", "have \\<open>\\<dots> = infsetsum' f (B x \\<union> \\<Union> (B ` F))\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum' f (B x) + infsetsum' f (\\<Union> (B ` F)) =\n    infsetsum' f (B x \\<union> \\<Union> (B ` F))", "apply (rule infsetsum'_Un_disjoint[symmetric])"], ["proof (prove)\ngoal (3 subgoals):\n 1. infsetsum'_converges f (B x)\n 2. infsetsum'_converges f (\\<Union> (B ` F))\n 3. B x \\<inter> \\<Union> (B ` F) = {}", "using insert.prems insert.hyps"], ["proof (prove)\nusing this:\n  finite (insert x F)\n  ?a \\<in> insert x F \\<Longrightarrow> infsetsum'_converges f (B ?a)\n  \\<lbrakk>?a \\<in> insert x F; ?a' \\<in> insert x F;\n   ?a \\<noteq> ?a'\\<rbrakk>\n  \\<Longrightarrow> B ?a \\<inter> B ?a' = {}\n  ?a \\<in> insert x F \\<Longrightarrow> infsetsum'_converges f (B ?a)\n  \\<lbrakk>?a \\<in> insert x F; ?a' \\<in> insert x F;\n   ?a \\<noteq> ?a'\\<rbrakk>\n  \\<Longrightarrow> B ?a \\<inter> B ?a' = {}\n  finite F\n  x \\<notin> F\n\ngoal (3 subgoals):\n 1. infsetsum'_converges f (B x)\n 2. infsetsum'_converges f (\\<Union> (B ` F))\n 3. B x \\<inter> \\<Union> (B ` F) = {}", "by (auto simp: infsetsum'_converges_union_disjoint)"], ["proof (state)\nthis:\n  infsetsum' f (B x) + infsetsum' f (\\<Union> (B ` F)) =\n  infsetsum' f (B x \\<union> \\<Union> (B ` F))\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>finite F;\n         \\<And>a. a \\<in> F \\<Longrightarrow> infsetsum'_converges f (B a);\n         \\<And>a a'.\n            \\<lbrakk>a \\<in> F; a' \\<in> F; a \\<noteq> a'\\<rbrakk>\n            \\<Longrightarrow> B a \\<inter> B a' = {};\n         \\<And>a. a \\<in> F \\<Longrightarrow> infsetsum'_converges f (B a);\n         \\<And>a a'.\n            \\<lbrakk>a \\<in> F; a' \\<in> F; a \\<noteq> a'\\<rbrakk>\n            \\<Longrightarrow> B a \\<inter> B a' = {}\\<rbrakk>\n        \\<Longrightarrow> (\\<Sum>a\\<in>F. infsetsum' f (B a)) =\n                          infsetsum' f (\\<Union> (B ` F));\n        finite (insert x F);\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow>\n           infsetsum'_converges f (B a);\n        \\<And>a a'.\n           \\<lbrakk>a \\<in> insert x F; a' \\<in> insert x F;\n            a \\<noteq> a'\\<rbrakk>\n           \\<Longrightarrow> B a \\<inter> B a' = {};\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow>\n           infsetsum'_converges f (B a);\n        \\<And>a a'.\n           \\<lbrakk>a \\<in> insert x F; a' \\<in> insert x F;\n            a \\<noteq> a'\\<rbrakk>\n           \\<Longrightarrow> B a \\<inter> B a' = {}\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>insert x F. infsetsum' f (B a)) =\n                         infsetsum' f (\\<Union> (B ` insert x F))", "also"], ["proof (state)\nthis:\n  infsetsum' f (B x) + infsetsum' f (\\<Union> (B ` F)) =\n  infsetsum' f (B x \\<union> \\<Union> (B ` F))\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>finite F;\n         \\<And>a. a \\<in> F \\<Longrightarrow> infsetsum'_converges f (B a);\n         \\<And>a a'.\n            \\<lbrakk>a \\<in> F; a' \\<in> F; a \\<noteq> a'\\<rbrakk>\n            \\<Longrightarrow> B a \\<inter> B a' = {};\n         \\<And>a. a \\<in> F \\<Longrightarrow> infsetsum'_converges f (B a);\n         \\<And>a a'.\n            \\<lbrakk>a \\<in> F; a' \\<in> F; a \\<noteq> a'\\<rbrakk>\n            \\<Longrightarrow> B a \\<inter> B a' = {}\\<rbrakk>\n        \\<Longrightarrow> (\\<Sum>a\\<in>F. infsetsum' f (B a)) =\n                          infsetsum' f (\\<Union> (B ` F));\n        finite (insert x F);\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow>\n           infsetsum'_converges f (B a);\n        \\<And>a a'.\n           \\<lbrakk>a \\<in> insert x F; a' \\<in> insert x F;\n            a \\<noteq> a'\\<rbrakk>\n           \\<Longrightarrow> B a \\<inter> B a' = {};\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow>\n           infsetsum'_converges f (B a);\n        \\<And>a a'.\n           \\<lbrakk>a \\<in> insert x F; a' \\<in> insert x F;\n            a \\<noteq> a'\\<rbrakk>\n           \\<Longrightarrow> B a \\<inter> B a' = {}\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>insert x F. infsetsum' f (B a)) =\n                         infsetsum' f (\\<Union> (B ` insert x F))", "have \\<open>\\<dots> = infsetsum' f (\\<Union>a\\<in>insert x F. B a)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum' f (B x \\<union> \\<Union> (B ` F)) =\n    infsetsum' f (\\<Union> (B ` insert x F))", "by auto"], ["proof (state)\nthis:\n  infsetsum' f (B x \\<union> \\<Union> (B ` F)) =\n  infsetsum' f (\\<Union> (B ` insert x F))\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>finite F;\n         \\<And>a. a \\<in> F \\<Longrightarrow> infsetsum'_converges f (B a);\n         \\<And>a a'.\n            \\<lbrakk>a \\<in> F; a' \\<in> F; a \\<noteq> a'\\<rbrakk>\n            \\<Longrightarrow> B a \\<inter> B a' = {};\n         \\<And>a. a \\<in> F \\<Longrightarrow> infsetsum'_converges f (B a);\n         \\<And>a a'.\n            \\<lbrakk>a \\<in> F; a' \\<in> F; a \\<noteq> a'\\<rbrakk>\n            \\<Longrightarrow> B a \\<inter> B a' = {}\\<rbrakk>\n        \\<Longrightarrow> (\\<Sum>a\\<in>F. infsetsum' f (B a)) =\n                          infsetsum' f (\\<Union> (B ` F));\n        finite (insert x F);\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow>\n           infsetsum'_converges f (B a);\n        \\<And>a a'.\n           \\<lbrakk>a \\<in> insert x F; a' \\<in> insert x F;\n            a \\<noteq> a'\\<rbrakk>\n           \\<Longrightarrow> B a \\<inter> B a' = {};\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow>\n           infsetsum'_converges f (B a);\n        \\<And>a a'.\n           \\<lbrakk>a \\<in> insert x F; a' \\<in> insert x F;\n            a \\<noteq> a'\\<rbrakk>\n           \\<Longrightarrow> B a \\<inter> B a' = {}\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>insert x F. infsetsum' f (B a)) =\n                         infsetsum' f (\\<Union> (B ` insert x F))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>a\\<in>insert x F. infsetsum' f (B a)) =\n  infsetsum' f (\\<Union> (B ` insert x F))", "show ?case"], ["proof (prove)\nusing this:\n  (\\<Sum>a\\<in>insert x F. infsetsum' f (B a)) =\n  infsetsum' f (\\<Union> (B ` insert x F))\n\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>insert x F. infsetsum' f (B a)) =\n    infsetsum' f (\\<Union> (B ` insert x F))", "by -"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>insert x F. infsetsum' f (B a)) =\n  infsetsum' f (\\<Union> (B ` insert x F))\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem infsetsum'_mono:\n  fixes f g :: \"'a\\<Rightarrow>'b::{ordered_comm_monoid_add,linorder_topology}\"\n  assumes \"infsetsum'_converges f A\"\n    and \"infsetsum'_converges g A\"\n  assumes leq: \"\\<And>x. x \\<in> A \\<Longrightarrow> f x \\<le> g x\"\n  shows \"infsetsum' f A \\<le> infsetsum' g A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum' f A \\<le> infsetsum' g A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. infsetsum' f A \\<le> infsetsum' g A", "note limf = infsetsum'_tendsto[OF assms(1)]\n    and limg =  infsetsum'_tendsto[OF assms(2)]"], ["proof (state)\nthis:\n  (sum f \\<longlongrightarrow> infsetsum' f A) (finite_subsets_at_top A)\n  (sum g \\<longlongrightarrow> infsetsum' g A) (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. infsetsum' f A \\<le> infsetsum' g A", "have sum_leq: \\<open>\\<And>F. finite F \\<Longrightarrow> F \\<subseteq> A \\<Longrightarrow> sum f F \\<le> sum g F\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F; F \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> sum f F \\<le> sum g F", "by (simp add: in_mono leq sum_mono)"], ["proof (state)\nthis:\n  \\<lbrakk>finite ?F; ?F \\<subseteq> A\\<rbrakk>\n  \\<Longrightarrow> sum f ?F \\<le> sum g ?F\n\ngoal (1 subgoal):\n 1. infsetsum' f A \\<le> infsetsum' g A", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. infsetsum' f A \\<le> infsetsum' g A", "using _ limg limf"], ["proof (prove)\nusing this:\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  (sum g \\<longlongrightarrow> infsetsum' g A) (finite_subsets_at_top A)\n  (sum f \\<longlongrightarrow> infsetsum' f A) (finite_subsets_at_top A)\n\ngoal (1 subgoal):\n 1. infsetsum' f A \\<le> infsetsum' g A", "apply (rule tendsto_le)"], ["proof (prove)\ngoal (2 subgoals):\n 1. finite_subsets_at_top A \\<noteq> bot\n 2. \\<forall>\\<^sub>F x in finite_subsets_at_top A. sum f x \\<le> sum g x", "by (auto intro!: sum_leq)"], ["proof (state)\nthis:\n  infsetsum' f A \\<le> infsetsum' g A\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}