{"file_name": "/home/qj213/afp-2021-10-22/thys/Auto2_HOL/HOL/Primes_Ex.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Auto2_HOL", "problem_names": ["lemma primeD1 [forward]: \"prime p \\<Longrightarrow> 1 < p\"", "lemma primeD2: \"prime p \\<Longrightarrow> m dvd p \\<Longrightarrow> m = 1 \\<or> m = p\"", "theorem exists_prime [resolve]: \"\\<exists>p. prime p\"", "lemma prime_odd_nat: \"prime p \\<Longrightarrow> p > 2 \\<Longrightarrow> odd p\"", "lemma prime_imp_coprime_nat [backward2]: \"prime p \\<Longrightarrow> \\<not> p dvd n \\<Longrightarrow> coprime p n\"", "lemma prime_dvd_mult_nat: \"prime p \\<Longrightarrow> p dvd m * n \\<Longrightarrow> p dvd m \\<or> p dvd n\"", "theorem prime_dvd_intro: \"prime p \\<Longrightarrow> p * q = m * n \\<Longrightarrow> p dvd m \\<or> p dvd n\"", "lemma prime_dvd_mult_eq_nat: \"prime p \\<Longrightarrow> p dvd m * n = (p dvd m \\<or> p dvd n)\"", "lemma not_prime_eq_prod_nat [backward1]: \"n > 1 \\<Longrightarrow> \\<not> prime n \\<Longrightarrow>\n    \\<exists>m k. n = m * k \\<and> 1 < m \\<and> m < n \\<and> 1 < k \\<and> k < n\"", "lemma prime_dvd_power_nat: \"prime p \\<Longrightarrow> p dvd x^n \\<Longrightarrow> p dvd x\"", "lemma prime_dvd_power_nat_iff: \"prime p \\<Longrightarrow> n > 0 \\<Longrightarrow> p dvd x^n \\<longleftrightarrow> p dvd x\"", "lemma prime_nat_code: \"prime p = (1 < p \\<and> (\\<forall>x. 1 < x \\<and> x < p \\<longrightarrow> \\<not> x dvd p))\"", "lemma prime_factor_nat [backward]: \"n \\<noteq> 1 \\<Longrightarrow> \\<exists>p. p dvd n \\<and> prime p\"", "lemma prime_divprod_pow_nat:\n  \"prime p \\<Longrightarrow> coprime a b \\<Longrightarrow> p^n dvd a * b \\<Longrightarrow> p^n dvd a \\<or> p^n dvd b\"", "lemma prime_product [forward]: \"prime (p * q) \\<Longrightarrow> p = 1 \\<or> q = 1\"", "lemma prime_exp: \"prime (p ^ n) \\<longleftrightarrow> n = 1 \\<and> prime p\"", "lemma prime_power_mult: \"prime p \\<Longrightarrow> x * y = p ^ k \\<Longrightarrow> \\<exists>i j. x = p ^ i \\<and> y = p ^ j\"", "theorem bigger_prime [resolve]: \"\\<exists>p. prime p \\<and> n < p\"", "theorem primes_infinite: \"\\<not> finite {p. prime p}\"", "theorem factorization_exists: \"n > 0 \\<Longrightarrow> \\<exists>M. (\\<forall>p\\<in>#M. prime p) \\<and> n = (\\<Prod>i\\<in>#M. i)\"", "theorem prime_dvd_multiset [backward1]: \"prime p \\<Longrightarrow> p dvd (\\<Prod>i\\<in>#M. i) \\<Longrightarrow> \\<exists>n. n\\<in>#M \\<and> p dvd n\"", "theorem factorization_unique_aux:\n  \"\\<forall>p\\<in>#M. prime p \\<Longrightarrow> \\<forall>p\\<in>#N. prime p \\<Longrightarrow> (\\<Prod>i\\<in>#M. i) dvd (\\<Prod>i\\<in>#N. i) \\<Longrightarrow> M \\<subseteq># N\"", "theorem factorization_unique:\n  \"\\<forall>p\\<in>#M. prime p \\<Longrightarrow> \\<forall>p\\<in>#N. prime p \\<Longrightarrow> (\\<Prod>i\\<in>#M. i) = (\\<Prod>i\\<in>#N. i) \\<Longrightarrow> M = N\""], "translations": [["", "lemma primeD1 [forward]: \"prime p \\<Longrightarrow> 1 < p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime p \\<Longrightarrow> 1 < p", "by auto2"], ["", "lemma primeD2: \"prime p \\<Longrightarrow> m dvd p \\<Longrightarrow> m = 1 \\<or> m = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; m dvd p\\<rbrakk> \\<Longrightarrow> m = 1 \\<or> m = p", "by auto2"], ["", "setup \\<open>add_forward_prfstep_cond @{thm primeD2} [with_cond \"?m \\<noteq> 1\", with_cond \"?m \\<noteq> ?p\"]\\<close>"], ["", "setup \\<open>del_prfstep_thm_eqforward @{thm prime_def}\\<close>"], ["", "(* Exists a prime p. *)"], ["", "theorem exists_prime [resolve]: \"\\<exists>p. prime p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p. prime p", "@proof"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p. prime p", "@have \"prime 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p. prime p", "@qed"], ["", "lemma prime_odd_nat: \"prime p \\<Longrightarrow> p > 2 \\<Longrightarrow> odd p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; 2 < p\\<rbrakk> \\<Longrightarrow> odd p", "by auto2"], ["", "lemma prime_imp_coprime_nat [backward2]: \"prime p \\<Longrightarrow> \\<not> p dvd n \\<Longrightarrow> coprime p n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; \\<not> p dvd n\\<rbrakk> \\<Longrightarrow> coprime p n", "by auto2"], ["", "lemma prime_dvd_mult_nat: \"prime p \\<Longrightarrow> p dvd m * n \\<Longrightarrow> p dvd m \\<or> p dvd n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; p dvd m * n\\<rbrakk>\n    \\<Longrightarrow> p dvd m \\<or> p dvd n", "by auto2"], ["", "setup \\<open>add_forward_prfstep_cond @{thm prime_dvd_mult_nat}\n  (with_conds [\"?m \\<noteq> ?p\", \"?n \\<noteq> ?p\", \"?m \\<noteq> ?p * ?m'\", \"?n \\<noteq> ?p * ?n'\"])\\<close>"], ["", "theorem prime_dvd_intro: \"prime p \\<Longrightarrow> p * q = m * n \\<Longrightarrow> p dvd m \\<or> p dvd n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; p * q = m * n\\<rbrakk>\n    \\<Longrightarrow> p dvd m \\<or> p dvd n", "@proof"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; p * q = m * n\\<rbrakk>\n    \\<Longrightarrow> p dvd m \\<or> p dvd n", "@have \"p dvd m * n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; p * q = m * n\\<rbrakk>\n    \\<Longrightarrow> p dvd m \\<or> p dvd n", "@qed"], ["", "setup \\<open>add_forward_prfstep_cond @{thm prime_dvd_intro}\n  (with_conds [\"?m \\<noteq> ?p\", \"?n \\<noteq> ?p\", \"?m \\<noteq> ?p * ?m'\", \"?n \\<noteq> ?p * ?n'\"])\\<close>"], ["", "lemma prime_dvd_mult_eq_nat: \"prime p \\<Longrightarrow> p dvd m * n = (p dvd m \\<or> p dvd n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime p \\<Longrightarrow> (p dvd m * n) = (p dvd m \\<or> p dvd n)", "by auto2"], ["", "lemma not_prime_eq_prod_nat [backward1]: \"n > 1 \\<Longrightarrow> \\<not> prime n \\<Longrightarrow>\n    \\<exists>m k. n = m * k \\<and> 1 < m \\<and> m < n \\<and> 1 < k \\<and> k < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < n; \\<not> prime n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>m k.\n                         n = m * k \\<and>\n                         1 < m \\<and> m < n \\<and> 1 < k \\<and> k < n", "@proof"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < n; \\<not> prime n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>m k.\n                         n = m * k \\<and>\n                         1 < m \\<and> m < n \\<and> 1 < k \\<and> k < n", "@obtain m where \"m dvd n \\<and> m \\<noteq> 1 \\<and> m \\<noteq> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < n; \\<not> prime n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>m k.\n                         n = m * k \\<and>\n                         1 < m \\<and> m < n \\<and> 1 < k \\<and> k < n", "@obtain k where \"n = m * k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < n; \\<not> prime n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>m k.\n                         n = m * k \\<and>\n                         1 < m \\<and> m < n \\<and> 1 < k \\<and> k < n", "@have \"m \\<le> m * k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < n; \\<not> prime n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>m k.\n                         n = m * k \\<and>\n                         1 < m \\<and> m < n \\<and> 1 < k \\<and> k < n", "@have \"k \\<le> m * k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < n; \\<not> prime n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>m k.\n                         n = m * k \\<and>\n                         1 < m \\<and> m < n \\<and> 1 < k \\<and> k < n", "@qed"], ["", "lemma prime_dvd_power_nat: \"prime p \\<Longrightarrow> p dvd x^n \\<Longrightarrow> p dvd x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; p dvd x ^ n\\<rbrakk> \\<Longrightarrow> p dvd x", "by auto2"], ["", "setup \\<open>add_forward_prfstep_cond @{thm prime_dvd_power_nat} [with_cond \"?p \\<noteq> ?x\"]\\<close>"], ["", "lemma prime_dvd_power_nat_iff: \"prime p \\<Longrightarrow> n > 0 \\<Longrightarrow> p dvd x^n \\<longleftrightarrow> p dvd x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; 0 < n\\<rbrakk>\n    \\<Longrightarrow> (p dvd x ^ n) = (p dvd x)", "by auto2"], ["", "lemma prime_nat_code: \"prime p = (1 < p \\<and> (\\<forall>x. 1 < x \\<and> x < p \\<longrightarrow> \\<not> x dvd p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime p =\n    (1 < p \\<and>\n     (\\<forall>x. 1 < x \\<and> x < p \\<longrightarrow> \\<not> x dvd p))", "by auto2"], ["", "lemma prime_factor_nat [backward]: \"n \\<noteq> 1 \\<Longrightarrow> \\<exists>p. p dvd n \\<and> prime p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> \\<exists>p. p dvd n \\<and> prime p", "@proof"], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> \\<exists>p. p dvd n \\<and> prime p", "@strong_induct n"], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> \\<exists>p. p dvd n \\<and> prime p", "@case \"prime n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> \\<exists>p. p dvd n \\<and> prime p", "@case \"n = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> \\<exists>p. p dvd n \\<and> prime p", "@obtain k where \"k \\<noteq> 1\" \"k \\<noteq> n\" \"k dvd n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> \\<exists>p. p dvd n \\<and> prime p", "@apply_induct_hyp k"], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow> \\<exists>p. p dvd n \\<and> prime p", "@qed"], ["", "lemma prime_divprod_pow_nat:\n  \"prime p \\<Longrightarrow> coprime a b \\<Longrightarrow> p^n dvd a * b \\<Longrightarrow> p^n dvd a \\<or> p^n dvd b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; coprime a b; p ^ n dvd a * b\\<rbrakk>\n    \\<Longrightarrow> p ^ n dvd a \\<or> p ^ n dvd b", "by auto2"], ["", "lemma prime_product [forward]: \"prime (p * q) \\<Longrightarrow> p = 1 \\<or> q = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime (p * q) \\<Longrightarrow> p = 1 \\<or> q = 1", "@proof"], ["proof (prove)\ngoal (1 subgoal):\n 1. prime (p * q) \\<Longrightarrow> p = 1 \\<or> q = 1", "@have \"p dvd q * p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime (p * q) \\<Longrightarrow> p = 1 \\<or> q = 1", "@qed"], ["", "lemma prime_exp: \"prime (p ^ n) \\<longleftrightarrow> n = 1 \\<and> prime p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime (p ^ n) = (n = 1 \\<and> prime p)", "by auto2"], ["", "lemma prime_power_mult: \"prime p \\<Longrightarrow> x * y = p ^ k \\<Longrightarrow> \\<exists>i j. x = p ^ i \\<and> y = p ^ j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; x * y = p ^ k\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i j. x = p ^ i \\<and> y = p ^ j", "@proof"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; x * y = p ^ k\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i j. x = p ^ i \\<and> y = p ^ j", "@induct k arbitrary x y @with"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; x * y = p ^ k\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i j. x = p ^ i \\<and> y = p ^ j", "@subgoal \"k = Suc k'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; x * y = p ^ k\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i j. x = p ^ i \\<and> y = p ^ j", "@case \"p dvd x\" @with"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; x * y = p ^ k\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i j. x = p ^ i \\<and> y = p ^ j", "@obtain x' where \"x = p * x'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; x * y = p ^ k\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i j. x = p ^ i \\<and> y = p ^ j", "@have \"x * y = p * (x' * y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; x * y = p ^ k\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i j. x = p ^ i \\<and> y = p ^ j", "@obtain i j where \"x' = p ^ i\" \"y = p ^ j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; x * y = p ^ k\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i j. x = p ^ i \\<and> y = p ^ j", "@have \"x = p ^ Suc i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; x * y = p ^ k\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i j. x = p ^ i \\<and> y = p ^ j", "@end"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; x * y = p ^ k\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i j. x = p ^ i \\<and> y = p ^ j", "@case \"p dvd y\" @with"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; x * y = p ^ k\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i j. x = p ^ i \\<and> y = p ^ j", "@obtain y' where \"y = p * y'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; x * y = p ^ k\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i j. x = p ^ i \\<and> y = p ^ j", "@have \"x * y = p * (x * y')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; x * y = p ^ k\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i j. x = p ^ i \\<and> y = p ^ j", "@obtain i j where \"x = p ^ i\" \"y' = p ^ j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; x * y = p ^ k\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i j. x = p ^ i \\<and> y = p ^ j", "@have \"y = p ^ Suc j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; x * y = p ^ k\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i j. x = p ^ i \\<and> y = p ^ j", "@end"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; x * y = p ^ k\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i j. x = p ^ i \\<and> y = p ^ j", "@endgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; x * y = p ^ k\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i j. x = p ^ i \\<and> y = p ^ j", "@end"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; x * y = p ^ k\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i j. x = p ^ i \\<and> y = p ^ j", "@qed"], ["", "subsection \\<open>Infinitude of primes\\<close>"], ["", "theorem bigger_prime [resolve]: \"\\<exists>p. prime p \\<and> n < p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p. prime p \\<and> n < p", "@proof"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p. prime p \\<and> n < p", "@obtain p where \"prime p\" \"p dvd fact n + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p. prime p \\<and> n < p", "@case \"n \\<ge> p\" @with"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p. prime p \\<and> n < p", "@have \"(p::nat) dvd fact n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p. prime p \\<and> n < p", "@end"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p. prime p \\<and> n < p", "@qed"], ["", "theorem primes_infinite: \"\\<not> finite {p. prime p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite {p. prime p}", "@proof"], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite {p. prime p}", "@obtain b where \"prime b\" \"Max {p. prime p} < b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite {p. prime p}", "@qed"], ["", "subsection \\<open>Existence and uniqueness of prime factorization\\<close>"], ["", "theorem factorization_exists: \"n > 0 \\<Longrightarrow> \\<exists>M. (\\<forall>p\\<in>#M. prime p) \\<and> n = (\\<Prod>i\\<in>#M. i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow>\n    \\<exists>M. (\\<forall>p\\<in>#M. prime p) \\<and> n = (\\<Prod>i\\<in>#M. i)", "@proof"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow>\n    \\<exists>M. (\\<forall>p\\<in>#M. prime p) \\<and> n = (\\<Prod>i\\<in>#M. i)", "@strong_induct n"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow>\n    \\<exists>M. (\\<forall>p\\<in>#M. prime p) \\<and> n = (\\<Prod>i\\<in>#M. i)", "@case \"n = 1\" @with"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow>\n    \\<exists>M. (\\<forall>p\\<in>#M. prime p) \\<and> n = (\\<Prod>i\\<in>#M. i)", "@have \"n = (\\<Prod>i\\<in># {#}. i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow>\n    \\<exists>M. (\\<forall>p\\<in>#M. prime p) \\<and> n = (\\<Prod>i\\<in>#M. i)", "@end"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow>\n    \\<exists>M. (\\<forall>p\\<in>#M. prime p) \\<and> n = (\\<Prod>i\\<in>#M. i)", "@case \"prime n\" @with"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow>\n    \\<exists>M. (\\<forall>p\\<in>#M. prime p) \\<and> n = (\\<Prod>i\\<in>#M. i)", "@have \"n = (\\<Prod>i\\<in># {#n#}. i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow>\n    \\<exists>M. (\\<forall>p\\<in>#M. prime p) \\<and> n = (\\<Prod>i\\<in>#M. i)", "@end"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow>\n    \\<exists>M. (\\<forall>p\\<in>#M. prime p) \\<and> n = (\\<Prod>i\\<in>#M. i)", "@obtain m k where \"n = m * k\" \"1 < m\" \"m < n\" \"1 < k\" \"k < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow>\n    \\<exists>M. (\\<forall>p\\<in>#M. prime p) \\<and> n = (\\<Prod>i\\<in>#M. i)", "@apply_induct_hyp m"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow>\n    \\<exists>M. (\\<forall>p\\<in>#M. prime p) \\<and> n = (\\<Prod>i\\<in>#M. i)", "@obtain M where \"(\\<forall>p\\<in>#M. prime p)\" \"m = (\\<Prod>i\\<in>#M. i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow>\n    \\<exists>M. (\\<forall>p\\<in>#M. prime p) \\<and> n = (\\<Prod>i\\<in>#M. i)", "@apply_induct_hyp k"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow>\n    \\<exists>M. (\\<forall>p\\<in>#M. prime p) \\<and> n = (\\<Prod>i\\<in>#M. i)", "@obtain K where \"(\\<forall>p\\<in>#K. prime p)\" \"k = (\\<Prod>i\\<in>#K. i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow>\n    \\<exists>M. (\\<forall>p\\<in>#M. prime p) \\<and> n = (\\<Prod>i\\<in>#M. i)", "@have \"n = (\\<Prod>i\\<in>#(M+K). i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow>\n    \\<exists>M. (\\<forall>p\\<in>#M. prime p) \\<and> n = (\\<Prod>i\\<in>#M. i)", "@qed"], ["", "theorem prime_dvd_multiset [backward1]: \"prime p \\<Longrightarrow> p dvd (\\<Prod>i\\<in>#M. i) \\<Longrightarrow> \\<exists>n. n\\<in>#M \\<and> p dvd n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; p dvd (\\<Prod>i\\<in>#M. i)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n. n \\<in># M \\<and> p dvd n", "@proof"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; p dvd (\\<Prod>i\\<in>#M. i)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n. n \\<in># M \\<and> p dvd n", "@strong_induct M"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; p dvd (\\<Prod>i\\<in>#M. i)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n. n \\<in># M \\<and> p dvd n", "@case \"M = {#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; p dvd (\\<Prod>i\\<in>#M. i)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n. n \\<in># M \\<and> p dvd n", "@obtain M' m where \"M = M' + {#m#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; p dvd (\\<Prod>i\\<in>#M. i)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n. n \\<in># M \\<and> p dvd n", "@contradiction"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; p dvd (\\<Prod>i\\<in>#M. i)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n. n \\<in># M \\<and> p dvd n", "@apply_induct_hyp M'"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime p; p dvd (\\<Prod>i\\<in>#M. i)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n. n \\<in># M \\<and> p dvd n", "@qed"], ["", "theorem factorization_unique_aux:\n  \"\\<forall>p\\<in>#M. prime p \\<Longrightarrow> \\<forall>p\\<in>#N. prime p \\<Longrightarrow> (\\<Prod>i\\<in>#M. i) dvd (\\<Prod>i\\<in>#N. i) \\<Longrightarrow> M \\<subseteq># N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>p\\<in>#M. prime p; \\<forall>p\\<in>#N. prime p;\n     (\\<Prod>i\\<in>#M. i) dvd (\\<Prod>i\\<in>#N. i)\\<rbrakk>\n    \\<Longrightarrow> M \\<subseteq># N", "@proof"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>p\\<in>#M. prime p; \\<forall>p\\<in>#N. prime p;\n     (\\<Prod>i\\<in>#M. i) dvd (\\<Prod>i\\<in>#N. i)\\<rbrakk>\n    \\<Longrightarrow> M \\<subseteq># N", "@strong_induct M arbitrary N"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>p\\<in>#M. prime p; \\<forall>p\\<in>#N. prime p;\n     (\\<Prod>i\\<in>#M. i) dvd (\\<Prod>i\\<in>#N. i)\\<rbrakk>\n    \\<Longrightarrow> M \\<subseteq># N", "@case \"M = {#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>p\\<in>#M. prime p; \\<forall>p\\<in>#N. prime p;\n     (\\<Prod>i\\<in>#M. i) dvd (\\<Prod>i\\<in>#N. i)\\<rbrakk>\n    \\<Longrightarrow> M \\<subseteq># N", "@obtain M' m where \"M = M' + {#m#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>p\\<in>#M. prime p; \\<forall>p\\<in>#N. prime p;\n     (\\<Prod>i\\<in>#M. i) dvd (\\<Prod>i\\<in>#N. i)\\<rbrakk>\n    \\<Longrightarrow> M \\<subseteq># N", "@have \"m dvd (\\<Prod>i\\<in>#M. i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>p\\<in>#M. prime p; \\<forall>p\\<in>#N. prime p;\n     (\\<Prod>i\\<in>#M. i) dvd (\\<Prod>i\\<in>#N. i)\\<rbrakk>\n    \\<Longrightarrow> M \\<subseteq># N", "@obtain n where \"n \\<in># N\" \"m dvd n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>p\\<in>#M. prime p; \\<forall>p\\<in>#N. prime p;\n     (\\<Prod>i\\<in>#M. i) dvd (\\<Prod>i\\<in>#N. i)\\<rbrakk>\n    \\<Longrightarrow> M \\<subseteq># N", "@obtain N' where \"N = N' + {#n#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>p\\<in>#M. prime p; \\<forall>p\\<in>#N. prime p;\n     (\\<Prod>i\\<in>#M. i) dvd (\\<Prod>i\\<in>#N. i)\\<rbrakk>\n    \\<Longrightarrow> M \\<subseteq># N", "@have \"m = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>p\\<in>#M. prime p; \\<forall>p\\<in>#N. prime p;\n     (\\<Prod>i\\<in>#M. i) dvd (\\<Prod>i\\<in>#N. i)\\<rbrakk>\n    \\<Longrightarrow> M \\<subseteq># N", "@have \"(\\<Prod>i\\<in>#M'. i) dvd (\\<Prod>i\\<in>#N'. i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>p\\<in>#M. prime p; \\<forall>p\\<in>#N. prime p;\n     (\\<Prod>i\\<in>#M. i) dvd (\\<Prod>i\\<in>#N. i)\\<rbrakk>\n    \\<Longrightarrow> M \\<subseteq># N", "@apply_induct_hyp M' N'"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>p\\<in>#M. prime p; \\<forall>p\\<in>#N. prime p;\n     (\\<Prod>i\\<in>#M. i) dvd (\\<Prod>i\\<in>#N. i)\\<rbrakk>\n    \\<Longrightarrow> M \\<subseteq># N", "@qed"], ["", "setup \\<open>add_forward_prfstep_cond @{thm factorization_unique_aux} [with_cond \"?M \\<noteq> ?N\"]\\<close>"], ["", "theorem factorization_unique:\n  \"\\<forall>p\\<in>#M. prime p \\<Longrightarrow> \\<forall>p\\<in>#N. prime p \\<Longrightarrow> (\\<Prod>i\\<in>#M. i) = (\\<Prod>i\\<in>#N. i) \\<Longrightarrow> M = N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>p\\<in>#M. prime p; \\<forall>p\\<in>#N. prime p;\n     (\\<Prod>i\\<in>#M. i) = (\\<Prod>i\\<in>#N. i)\\<rbrakk>\n    \\<Longrightarrow> M = N", "@proof"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>p\\<in>#M. prime p; \\<forall>p\\<in>#N. prime p;\n     (\\<Prod>i\\<in>#M. i) = (\\<Prod>i\\<in>#N. i)\\<rbrakk>\n    \\<Longrightarrow> M = N", "@have \"M \\<subseteq># N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>p\\<in>#M. prime p; \\<forall>p\\<in>#N. prime p;\n     (\\<Prod>i\\<in>#M. i) = (\\<Prod>i\\<in>#N. i)\\<rbrakk>\n    \\<Longrightarrow> M = N", "@qed"], ["", "setup \\<open>del_prfstep_thm @{thm factorization_unique_aux}\\<close>"], ["", "end"]]}