{"file_name": "/home/qj213/afp-2021-10-22/thys/Auto2_HOL/HOL/HOL_Base.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Auto2_HOL", "problem_names": ["theorem to_contra_form: \"Trueprop A \\<equiv> (\\<not>A \\<Longrightarrow> False)\"", "theorem to_contra_form': \"Trueprop (\\<not>A) \\<equiv> (A \\<Longrightarrow> False)\"", "theorem contra_triv: \"\\<not>A \\<Longrightarrow> A \\<Longrightarrow> False\"", "theorem or_intro1: \"\\<not> (P \\<or> Q) \\<Longrightarrow> \\<not> P\"", "theorem or_intro2: \"\\<not> (P \\<or> Q) \\<Longrightarrow> \\<not> Q\"", "theorem or_cancel1: \"\\<not>Q \\<Longrightarrow> (P \\<or> Q) = P\"", "theorem or_cancel2: \"\\<not>P \\<Longrightarrow> (P \\<or> Q) = Q\"", "theorem exE': \"(\\<And>x. P x \\<Longrightarrow> Q) \\<Longrightarrow> \\<exists>x. P x \\<Longrightarrow> Q\"", "theorem nn_create: \"A \\<Longrightarrow> \\<not>\\<not>A\"", "theorem iffD: \"A \\<longleftrightarrow> B \\<Longrightarrow> (A \\<longrightarrow> B) \\<and> (B \\<longrightarrow> A)\"", "theorem obj_sym: \"Trueprop (t = s) \\<equiv> Trueprop (s = t)\"", "theorem to_meta_eq: \"Trueprop (t = s) \\<equiv> (t \\<equiv> s)\"", "theorem inv_backward: \"A \\<longleftrightarrow> B \\<Longrightarrow> \\<not>A \\<Longrightarrow> \\<not>B\"", "theorem backward_conv: \"(A \\<Longrightarrow> B) \\<equiv> (\\<not>B \\<Longrightarrow> \\<not>A)\"", "theorem backward1_conv: \"(A \\<Longrightarrow> B \\<Longrightarrow> C) \\<equiv> (\\<not>C \\<Longrightarrow> B \\<Longrightarrow> \\<not>A)\"", "theorem backward2_conv: \"(A \\<Longrightarrow> B \\<Longrightarrow> C) \\<equiv> (\\<not>C \\<Longrightarrow> A \\<Longrightarrow> \\<not>B)\"", "theorem resolve_conv: \"(A \\<Longrightarrow> B) \\<equiv> (\\<not>B \\<Longrightarrow> A \\<Longrightarrow> False)\"", "theorem swap_ex_conj: \"(P \\<and> (\\<exists>x. Q x)) \\<longleftrightarrow> (\\<exists>x. P \\<and> Q x)\"", "theorem swap_all_disj: \"(P \\<or> (\\<forall>x. Q x)) \\<longleftrightarrow> (\\<forall>x. P \\<or> Q x)\"", "theorem Bex_def': \"(\\<exists>x\\<in>S. P x) \\<longleftrightarrow> (\\<exists>x. x \\<in> S \\<and> P x)\"", "theorem Ball_def': \"(\\<forall>x\\<in>S. P x) \\<longleftrightarrow> (\\<forall>x. x \\<in> S \\<longrightarrow> P x)\"", "lemma atomize_conjL: \"(A \\<Longrightarrow> B \\<Longrightarrow> PROP C) \\<equiv> (A \\<and> B \\<Longrightarrow> PROP C)\""], "translations": [["", "theorem to_contra_form: \"Trueprop A \\<equiv> (\\<not>A \\<Longrightarrow> False)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<equiv> (\\<not> A \\<Longrightarrow> False)", "by (rule equal_intr_rule) auto"], ["", "theorem to_contra_form': \"Trueprop (\\<not>A) \\<equiv> (A \\<Longrightarrow> False)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> A \\<equiv> (A \\<Longrightarrow> False)", "by (rule equal_intr_rule) auto"], ["", "theorem contra_triv: \"\\<not>A \\<Longrightarrow> A \\<Longrightarrow> False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> A; A\\<rbrakk> \\<Longrightarrow> False", "by simp"], ["", "theorem or_intro1: \"\\<not> (P \\<or> Q) \\<Longrightarrow> \\<not> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (P \\<or> Q) \\<Longrightarrow> \\<not> P", "by simp"], ["", "theorem or_intro2: \"\\<not> (P \\<or> Q) \\<Longrightarrow> \\<not> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (P \\<or> Q) \\<Longrightarrow> \\<not> Q", "by simp"], ["", "theorem or_cancel1: \"\\<not>Q \\<Longrightarrow> (P \\<or> Q) = P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> Q \\<Longrightarrow> (P \\<or> Q) = P", "by auto"], ["", "theorem or_cancel2: \"\\<not>P \\<Longrightarrow> (P \\<or> Q) = Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> P \\<Longrightarrow> (P \\<or> Q) = Q", "by auto"], ["", "theorem exE': \"(\\<And>x. P x \\<Longrightarrow> Q) \\<Longrightarrow> \\<exists>x. P x \\<Longrightarrow> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x. P x \\<Longrightarrow> Q; \\<exists>x. P x\\<rbrakk>\n    \\<Longrightarrow> Q", "by auto"], ["", "theorem nn_create: \"A \\<Longrightarrow> \\<not>\\<not>A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<Longrightarrow> \\<not> \\<not> A", "by auto"], ["", "theorem iffD: \"A \\<longleftrightarrow> B \\<Longrightarrow> (A \\<longrightarrow> B) \\<and> (B \\<longrightarrow> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = B \\<Longrightarrow>\n    (A \\<longrightarrow> B) \\<and> (B \\<longrightarrow> A)", "by auto"], ["", "theorem obj_sym: \"Trueprop (t = s) \\<equiv> Trueprop (s = t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t = s \\<equiv> s = t", "by (rule equal_intr_rule) auto"], ["", "theorem to_meta_eq: \"Trueprop (t = s) \\<equiv> (t \\<equiv> s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t = s \\<equiv> (t \\<equiv> s)", "by (rule equal_intr_rule) auto"], ["", "theorem inv_backward: \"A \\<longleftrightarrow> B \\<Longrightarrow> \\<not>A \\<Longrightarrow> \\<not>B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A = B; \\<not> A\\<rbrakk> \\<Longrightarrow> \\<not> B", "by auto"], ["", "theorem backward_conv: \"(A \\<Longrightarrow> B) \\<equiv> (\\<not>B \\<Longrightarrow> \\<not>A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A \\<Longrightarrow> B) \\<equiv> (\\<not> B \\<Longrightarrow> \\<not> A)", "by (rule equal_intr_rule) auto"], ["", "theorem backward1_conv: \"(A \\<Longrightarrow> B \\<Longrightarrow> C) \\<equiv> (\\<not>C \\<Longrightarrow> B \\<Longrightarrow> \\<not>A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>A; B\\<rbrakk> \\<Longrightarrow> C) \\<equiv>\n    (\\<lbrakk>\\<not> C; B\\<rbrakk> \\<Longrightarrow> \\<not> A)", "by (rule equal_intr_rule) auto"], ["", "theorem backward2_conv: \"(A \\<Longrightarrow> B \\<Longrightarrow> C) \\<equiv> (\\<not>C \\<Longrightarrow> A \\<Longrightarrow> \\<not>B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>A; B\\<rbrakk> \\<Longrightarrow> C) \\<equiv>\n    (\\<lbrakk>\\<not> C; A\\<rbrakk> \\<Longrightarrow> \\<not> B)", "by (rule equal_intr_rule) auto"], ["", "theorem resolve_conv: \"(A \\<Longrightarrow> B) \\<equiv> (\\<not>B \\<Longrightarrow> A \\<Longrightarrow> False)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A \\<Longrightarrow> B) \\<equiv>\n    (\\<lbrakk>\\<not> B; A\\<rbrakk> \\<Longrightarrow> False)", "by (rule equal_intr_rule) auto"], ["", "(* Quantifiers: swapping out of ALL or EX *)"], ["", "theorem swap_ex_conj: \"(P \\<and> (\\<exists>x. Q x)) \\<longleftrightarrow> (\\<exists>x. P \\<and> Q x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<and> (\\<exists>x. Q x)) = (\\<exists>x. P \\<and> Q x)", "by auto"], ["", "theorem swap_all_disj: \"(P \\<or> (\\<forall>x. Q x)) \\<longleftrightarrow> (\\<forall>x. P \\<or> Q x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<or> (\\<forall>x. Q x)) = (\\<forall>x. P \\<or> Q x)", "by auto"], ["", "(* Use these instead of original versions to keep names in abstractions. *)"], ["", "theorem Bex_def': \"(\\<exists>x\\<in>S. P x) \\<longleftrightarrow> (\\<exists>x. x \\<in> S \\<and> P x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>x\\<in>S. P x) = (\\<exists>x. x \\<in> S \\<and> P x)", "by auto"], ["", "theorem Ball_def': \"(\\<forall>x\\<in>S. P x) \\<longleftrightarrow> (\\<forall>x. x \\<in> S \\<longrightarrow> P x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>S. P x) = (\\<forall>x. x \\<in> S \\<longrightarrow> P x)", "by auto"], ["", "(* Taking conjunction of assumptions *)"], ["", "lemma atomize_conjL: \"(A \\<Longrightarrow> B \\<Longrightarrow> PROP C) \\<equiv> (A \\<and> B \\<Longrightarrow> PROP C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>A; B\\<rbrakk> \\<Longrightarrow> PROP C) \\<equiv>\n    (A \\<and> B \\<Longrightarrow> PROP C)", "by (rule equal_intr_rule) auto"], ["", "end"]]}