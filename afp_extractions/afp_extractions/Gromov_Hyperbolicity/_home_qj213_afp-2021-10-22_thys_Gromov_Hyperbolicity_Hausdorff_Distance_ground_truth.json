{"file_name": "/home/qj213/afp-2021-10-22/thys/Gromov_Hyperbolicity/Hausdorff_Distance.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Gromov_Hyperbolicity", "problem_names": ["lemma hausdorff_distance_self [simp]:\n  \"hausdorff_distance A A = 0\"", "lemma hausdorff_distance_sym:\n  \"hausdorff_distance A B = hausdorff_distance B A\"", "lemma hausdorff_distance_points [simp]:\n  \"hausdorff_distance {x} {y} = dist x y\"", "lemma bdd_above_infdist_aux:\n  assumes \"bounded A\" \"bounded B\"\n  shows \"bdd_above ((\\<lambda>x. infdist x B)`A)\"", "lemma hausdorff_distance_nonneg [simp, mono_intros]:\n  \"hausdorff_distance A B \\<ge> 0\"", "lemma hausdorff_distanceI:\n  assumes \"\\<And>x. x \\<in> A \\<Longrightarrow> infdist x B \\<le> D\"\n          \"\\<And>x. x \\<in> B \\<Longrightarrow> infdist x A \\<le> D\"\n          \"D \\<ge> 0\"\n  shows \"hausdorff_distance A B \\<le> D\"", "lemma hausdorff_distanceI2:\n  assumes \"\\<And>x. x \\<in> A \\<Longrightarrow> \\<exists>y\\<in>B. dist x y \\<le> D\"\n          \"\\<And>x. x \\<in> B \\<Longrightarrow> \\<exists>y\\<in>A. dist x y \\<le> D\"\n          \"D \\<ge> 0\"\n  shows \"hausdorff_distance A B \\<le> D\"", "lemma infdist_le_hausdorff_distance [mono_intros]:\n  assumes \"x \\<in> A\" \"bounded A\" \"bounded B\"\n  shows \"infdist x B \\<le> hausdorff_distance A B\"", "lemma hausdorff_distance_infdist_triangle [mono_intros]:\n  assumes \"B \\<noteq> {}\" \"bounded B\" \"bounded C\"\n  shows \"infdist x C \\<le> infdist x B + hausdorff_distance B C\"", "lemma hausdorff_distance_triangle [mono_intros]:\n  assumes \"B \\<noteq> {}\" \"bounded B\"\n  shows \"hausdorff_distance A C \\<le> hausdorff_distance A B + hausdorff_distance B C\"", "lemma hausdorff_distance_subset:\n  assumes \"A \\<subseteq> B\" \"A \\<noteq> {}\" \"bounded B\"\n  shows \"hausdorff_distance A B = (SUP x\\<in>B. infdist x A)\"", "lemma hausdorff_distance_closure [simp]:\n  \"hausdorff_distance A (closure A) = 0\"", "lemma hausdorff_distance_closures [simp]:\n  \"hausdorff_distance (closure A) (closure B) = hausdorff_distance A B\"", "lemma hausdorff_distance_zero:\n  assumes \"A \\<noteq> {}\" \"bounded A\" \"B \\<noteq> {}\" \"bounded B\"\n  shows \"hausdorff_distance A B = 0 \\<longleftrightarrow> closure A = closure B\"", "lemma hausdorff_distance_vimage:\n  assumes \"\\<And>x. x \\<in> A \\<Longrightarrow> dist (f x) (g x) \\<le> C\"\n          \"C \\<ge> 0\"\n  shows \"hausdorff_distance (f`A) (g`A) \\<le> C\"", "lemma hausdorff_distance_union [mono_intros]:\n  assumes \"A \\<noteq> {}\" \"B \\<noteq> {}\" \"C \\<noteq> {}\" \"D \\<noteq> {}\"\n  shows \"hausdorff_distance (A \\<union> B) (C \\<union> D) \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\""], "translations": [["", "lemma hausdorff_distance_self [simp]:\n  \"hausdorff_distance A A = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hausdorff_distance A A = 0", "unfolding hausdorff_distance_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if A = {} \\<or> A = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded A\n     then 0\n     else max (SUP x\\<in>A. infdist x A) (SUP x\\<in>A. infdist x A)) =\n    0", "by auto"], ["", "lemma hausdorff_distance_sym:\n  \"hausdorff_distance A B = hausdorff_distance B A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hausdorff_distance A B = hausdorff_distance B A", "unfolding hausdorff_distance_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if A = {} \\<or> B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B\n     then 0\n     else max (SUP x\\<in>A. infdist x B) (SUP x\\<in>B. infdist x A)) =\n    (if B = {} \\<or> A = {} \\<or> \\<not> bounded B \\<or> \\<not> bounded A\n     then 0 else max (SUP x\\<in>B. infdist x A) (SUP x\\<in>A. infdist x B))", "by auto"], ["", "lemma hausdorff_distance_points [simp]:\n  \"hausdorff_distance {x} {y} = dist x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hausdorff_distance {x} {y} = dist x y", "unfolding hausdorff_distance_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if {x} = {} \\<or>\n        {y} = {} \\<or> \\<not> bounded {x} \\<or> \\<not> bounded {y}\n     then 0\n     else max (SUP x\\<in>{x}. infdist x {y})\n           (SUP xa\\<in>{y}. infdist xa {x})) =\n    dist x y", "by (auto, metis dist_commute max.idem)"], ["", "text \\<open>The Hausdorff distance is expressed in terms of a supremum. To use it, one needs again\nand again to show that this is the supremum of a set which is bounded from above.\\<close>"], ["", "lemma bdd_above_infdist_aux:\n  assumes \"bounded A\" \"bounded B\"\n  shows \"bdd_above ((\\<lambda>x. infdist x B)`A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bdd_above ((\\<lambda>x. infdist x B) ` A)", "proof (cases \"B = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. B = {} \\<Longrightarrow> bdd_above ((\\<lambda>x. infdist x B) ` A)\n 2. B \\<noteq> {} \\<Longrightarrow>\n    bdd_above ((\\<lambda>x. infdist x B) ` A)", "case True"], ["proof (state)\nthis:\n  B = {}\n\ngoal (2 subgoals):\n 1. B = {} \\<Longrightarrow> bdd_above ((\\<lambda>x. infdist x B) ` A)\n 2. B \\<noteq> {} \\<Longrightarrow>\n    bdd_above ((\\<lambda>x. infdist x B) ` A)", "then"], ["proof (chain)\npicking this:\n  B = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  B = {}\n\ngoal (1 subgoal):\n 1. bdd_above ((\\<lambda>x. infdist x B) ` A)", "unfolding infdist_def"], ["proof (prove)\nusing this:\n  B = {}\n\ngoal (1 subgoal):\n 1. bdd_above ((\\<lambda>x. if B = {} then 0 else Inf (dist x ` B)) ` A)", "by auto"], ["proof (state)\nthis:\n  bdd_above ((\\<lambda>x. infdist x B) ` A)\n\ngoal (1 subgoal):\n 1. B \\<noteq> {} \\<Longrightarrow>\n    bdd_above ((\\<lambda>x. infdist x B) ` A)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. B \\<noteq> {} \\<Longrightarrow>\n    bdd_above ((\\<lambda>x. infdist x B) ` A)", "case False"], ["proof (state)\nthis:\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. B \\<noteq> {} \\<Longrightarrow>\n    bdd_above ((\\<lambda>x. infdist x B) ` A)", "then"], ["proof (chain)\npicking this:\n  B \\<noteq> {}", "obtain y where \"y \\<in> B\""], ["proof (prove)\nusing this:\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>y. y \\<in> B \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  y \\<in> B\n\ngoal (1 subgoal):\n 1. B \\<noteq> {} \\<Longrightarrow>\n    bdd_above ((\\<lambda>x. infdist x B) ` A)", "then"], ["proof (chain)\npicking this:\n  y \\<in> B", "have \"infdist x B \\<le> dist x y\" if \"x \\<in> A\" for x"], ["proof (prove)\nusing this:\n  y \\<in> B\n\ngoal (1 subgoal):\n 1. infdist x B \\<le> dist x y", "by (simp add: infdist_le)"], ["proof (state)\nthis:\n  ?x \\<in> A \\<Longrightarrow> infdist ?x B \\<le> dist ?x y\n\ngoal (1 subgoal):\n 1. B \\<noteq> {} \\<Longrightarrow>\n    bdd_above ((\\<lambda>x. infdist x B) ` A)", "then"], ["proof (chain)\npicking this:\n  ?x \\<in> A \\<Longrightarrow> infdist ?x B \\<le> dist ?x y", "show ?thesis"], ["proof (prove)\nusing this:\n  ?x \\<in> A \\<Longrightarrow> infdist ?x B \\<le> dist ?x y\n\ngoal (1 subgoal):\n 1. bdd_above ((\\<lambda>x. infdist x B) ` A)", "unfolding bdd_above_def"], ["proof (prove)\nusing this:\n  ?x \\<in> A \\<Longrightarrow> infdist ?x B \\<le> dist ?x y\n\ngoal (1 subgoal):\n 1. \\<exists>M. \\<forall>x\\<in>(\\<lambda>x. infdist x B) ` A. x \\<le> M", "by (auto, metis assms(1) bounded_any_center dist_commute order_trans)"], ["proof (state)\nthis:\n  bdd_above ((\\<lambda>x. infdist x B) ` A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma hausdorff_distance_nonneg [simp, mono_intros]:\n  \"hausdorff_distance A B \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> hausdorff_distance A B", "proof (cases \"A = {} \\<or> B = {} \\<or> (\\<not>(bounded A)) \\<or> (\\<not>(bounded B))\")"], ["proof (state)\ngoal (2 subgoals):\n 1. A = {} \\<or>\n    B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B \\<Longrightarrow>\n    0 \\<le> hausdorff_distance A B\n 2. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    0 \\<le> hausdorff_distance A B", "case True"], ["proof (state)\nthis:\n  A = {} \\<or> B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B\n\ngoal (2 subgoals):\n 1. A = {} \\<or>\n    B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B \\<Longrightarrow>\n    0 \\<le> hausdorff_distance A B\n 2. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    0 \\<le> hausdorff_distance A B", "then"], ["proof (chain)\npicking this:\n  A = {} \\<or> B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B", "show ?thesis"], ["proof (prove)\nusing this:\n  A = {} \\<or> B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B\n\ngoal (1 subgoal):\n 1. 0 \\<le> hausdorff_distance A B", "unfolding hausdorff_distance_def"], ["proof (prove)\nusing this:\n  A = {} \\<or> B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B\n\ngoal (1 subgoal):\n 1. 0 \\<le> (if A = {} \\<or>\n                B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B\n             then 0\n             else max (SUP x\\<in>A. infdist x B) (SUP x\\<in>B. infdist x A))", "by auto"], ["proof (state)\nthis:\n  0 \\<le> hausdorff_distance A B\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    0 \\<le> hausdorff_distance A B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    0 \\<le> hausdorff_distance A B", "case False"], ["proof (state)\nthis:\n  \\<not> (A = {} \\<or> B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B)\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    0 \\<le> hausdorff_distance A B", "then"], ["proof (chain)\npicking this:\n  \\<not> (A = {} \\<or> B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B)", "have \"A \\<noteq> {}\" \"B \\<noteq> {}\" \"bounded A\" \"bounded B\""], ["proof (prove)\nusing this:\n  \\<not> (A = {} \\<or> B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B)\n\ngoal (1 subgoal):\n 1. (A \\<noteq> {} &&& B \\<noteq> {}) &&& bounded A &&& bounded B", "by auto"], ["proof (state)\nthis:\n  A \\<noteq> {}\n  B \\<noteq> {}\n  bounded A\n  bounded B\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    0 \\<le> hausdorff_distance A B", "have \"(SUP x\\<in>A. infdist x B) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> (SUP x\\<in>A. infdist x B)", "using bdd_above_infdist_aux[OF \\<open>bounded A\\<close> \\<open>bounded B\\<close>] infdist_nonneg"], ["proof (prove)\nusing this:\n  bdd_above ((\\<lambda>x. infdist x B) ` A)\n  0 \\<le> infdist ?x ?A\n\ngoal (1 subgoal):\n 1. 0 \\<le> (SUP x\\<in>A. infdist x B)", "by (metis \\<open>A \\<noteq> {}\\<close> all_not_in_conv cSUP_upper2)"], ["proof (state)\nthis:\n  0 \\<le> (SUP x\\<in>A. infdist x B)\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    0 \\<le> hausdorff_distance A B", "moreover"], ["proof (state)\nthis:\n  0 \\<le> (SUP x\\<in>A. infdist x B)\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    0 \\<le> hausdorff_distance A B", "have \"(SUP x\\<in>B. infdist x A) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> (SUP x\\<in>B. infdist x A)", "using bdd_above_infdist_aux[OF \\<open>bounded B\\<close> \\<open>bounded A\\<close>] infdist_nonneg"], ["proof (prove)\nusing this:\n  bdd_above ((\\<lambda>x. infdist x A) ` B)\n  0 \\<le> infdist ?x ?A\n\ngoal (1 subgoal):\n 1. 0 \\<le> (SUP x\\<in>B. infdist x A)", "by (metis \\<open>B \\<noteq> {}\\<close> all_not_in_conv cSUP_upper2)"], ["proof (state)\nthis:\n  0 \\<le> (SUP x\\<in>B. infdist x A)\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    0 \\<le> hausdorff_distance A B", "ultimately"], ["proof (chain)\npicking this:\n  0 \\<le> (SUP x\\<in>A. infdist x B)\n  0 \\<le> (SUP x\\<in>B. infdist x A)", "show ?thesis"], ["proof (prove)\nusing this:\n  0 \\<le> (SUP x\\<in>A. infdist x B)\n  0 \\<le> (SUP x\\<in>B. infdist x A)\n\ngoal (1 subgoal):\n 1. 0 \\<le> hausdorff_distance A B", "unfolding hausdorff_distance_def"], ["proof (prove)\nusing this:\n  0 \\<le> (SUP x\\<in>A. infdist x B)\n  0 \\<le> (SUP x\\<in>B. infdist x A)\n\ngoal (1 subgoal):\n 1. 0 \\<le> (if A = {} \\<or>\n                B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B\n             then 0\n             else max (SUP x\\<in>A. infdist x B) (SUP x\\<in>B. infdist x A))", "by auto"], ["proof (state)\nthis:\n  0 \\<le> hausdorff_distance A B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma hausdorff_distanceI:\n  assumes \"\\<And>x. x \\<in> A \\<Longrightarrow> infdist x B \\<le> D\"\n          \"\\<And>x. x \\<in> B \\<Longrightarrow> infdist x A \\<le> D\"\n          \"D \\<ge> 0\"\n  shows \"hausdorff_distance A B \\<le> D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hausdorff_distance A B \\<le> D", "proof (cases \"A = {} \\<or> B = {} \\<or> (\\<not>(bounded A)) \\<or> (\\<not>(bounded B))\")"], ["proof (state)\ngoal (2 subgoals):\n 1. A = {} \\<or>\n    B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B \\<Longrightarrow>\n    hausdorff_distance A B \\<le> D\n 2. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance A B \\<le> D", "case True"], ["proof (state)\nthis:\n  A = {} \\<or> B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B\n\ngoal (2 subgoals):\n 1. A = {} \\<or>\n    B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B \\<Longrightarrow>\n    hausdorff_distance A B \\<le> D\n 2. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance A B \\<le> D", "then"], ["proof (chain)\npicking this:\n  A = {} \\<or> B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B", "show ?thesis"], ["proof (prove)\nusing this:\n  A = {} \\<or> B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B\n\ngoal (1 subgoal):\n 1. hausdorff_distance A B \\<le> D", "unfolding hausdorff_distance_def"], ["proof (prove)\nusing this:\n  A = {} \\<or> B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B\n\ngoal (1 subgoal):\n 1. (if A = {} \\<or> B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B\n     then 0 else max (SUP x\\<in>A. infdist x B) (SUP x\\<in>B. infdist x A))\n    \\<le> D", "using \\<open>D \\<ge> 0\\<close>"], ["proof (prove)\nusing this:\n  A = {} \\<or> B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B\n  0 \\<le> D\n\ngoal (1 subgoal):\n 1. (if A = {} \\<or> B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B\n     then 0 else max (SUP x\\<in>A. infdist x B) (SUP x\\<in>B. infdist x A))\n    \\<le> D", "by auto"], ["proof (state)\nthis:\n  hausdorff_distance A B \\<le> D\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance A B \\<le> D", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance A B \\<le> D", "case False"], ["proof (state)\nthis:\n  \\<not> (A = {} \\<or> B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B)\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance A B \\<le> D", "then"], ["proof (chain)\npicking this:\n  \\<not> (A = {} \\<or> B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B)", "have \"A \\<noteq> {}\" \"B \\<noteq> {}\" \"bounded A\" \"bounded B\""], ["proof (prove)\nusing this:\n  \\<not> (A = {} \\<or> B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B)\n\ngoal (1 subgoal):\n 1. (A \\<noteq> {} &&& B \\<noteq> {}) &&& bounded A &&& bounded B", "by auto"], ["proof (state)\nthis:\n  A \\<noteq> {}\n  B \\<noteq> {}\n  bounded A\n  bounded B\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance A B \\<le> D", "have \"(SUP x\\<in>A. infdist x B) \\<le> D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (SUP x\\<in>A. infdist x B) \\<le> D", "apply (rule cSUP_least, simp add: \\<open>A \\<noteq> {}\\<close>)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> infdist x B \\<le> D", "using assms(1)"], ["proof (prove)\nusing this:\n  ?x \\<in> A \\<Longrightarrow> infdist ?x B \\<le> D\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> infdist x B \\<le> D", "by blast"], ["proof (state)\nthis:\n  (SUP x\\<in>A. infdist x B) \\<le> D\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance A B \\<le> D", "moreover"], ["proof (state)\nthis:\n  (SUP x\\<in>A. infdist x B) \\<le> D\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance A B \\<le> D", "have \"(SUP x\\<in>B. infdist x A) \\<le> D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (SUP x\\<in>B. infdist x A) \\<le> D", "apply (rule cSUP_least, simp add: \\<open>B \\<noteq> {}\\<close>)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B \\<Longrightarrow> infdist x A \\<le> D", "using assms(2)"], ["proof (prove)\nusing this:\n  ?x \\<in> B \\<Longrightarrow> infdist ?x A \\<le> D\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B \\<Longrightarrow> infdist x A \\<le> D", "by blast"], ["proof (state)\nthis:\n  (SUP x\\<in>B. infdist x A) \\<le> D\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance A B \\<le> D", "ultimately"], ["proof (chain)\npicking this:\n  (SUP x\\<in>A. infdist x B) \\<le> D\n  (SUP x\\<in>B. infdist x A) \\<le> D", "show ?thesis"], ["proof (prove)\nusing this:\n  (SUP x\\<in>A. infdist x B) \\<le> D\n  (SUP x\\<in>B. infdist x A) \\<le> D\n\ngoal (1 subgoal):\n 1. hausdorff_distance A B \\<le> D", "unfolding hausdorff_distance_def"], ["proof (prove)\nusing this:\n  (SUP x\\<in>A. infdist x B) \\<le> D\n  (SUP x\\<in>B. infdist x A) \\<le> D\n\ngoal (1 subgoal):\n 1. (if A = {} \\<or> B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B\n     then 0 else max (SUP x\\<in>A. infdist x B) (SUP x\\<in>B. infdist x A))\n    \\<le> D", "using False"], ["proof (prove)\nusing this:\n  (SUP x\\<in>A. infdist x B) \\<le> D\n  (SUP x\\<in>B. infdist x A) \\<le> D\n  \\<not> (A = {} \\<or> B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B)\n\ngoal (1 subgoal):\n 1. (if A = {} \\<or> B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B\n     then 0 else max (SUP x\\<in>A. infdist x B) (SUP x\\<in>B. infdist x A))\n    \\<le> D", "by auto"], ["proof (state)\nthis:\n  hausdorff_distance A B \\<le> D\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma hausdorff_distanceI2:\n  assumes \"\\<And>x. x \\<in> A \\<Longrightarrow> \\<exists>y\\<in>B. dist x y \\<le> D\"\n          \"\\<And>x. x \\<in> B \\<Longrightarrow> \\<exists>y\\<in>A. dist x y \\<le> D\"\n          \"D \\<ge> 0\"\n  shows \"hausdorff_distance A B \\<le> D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hausdorff_distance A B \\<le> D", "proof (rule hausdorff_distanceI[OF _ _ \\<open>D \\<ge> 0\\<close>])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> infdist x B \\<le> D\n 2. \\<And>x. x \\<in> B \\<Longrightarrow> infdist x A \\<le> D", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> infdist x B \\<le> D\n 2. \\<And>x. x \\<in> B \\<Longrightarrow> infdist x A \\<le> D", "assume \"x \\<in> A\""], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> infdist x B \\<le> D\n 2. \\<And>x. x \\<in> B \\<Longrightarrow> infdist x A \\<le> D", "show \"infdist x B \\<le> D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infdist x B \\<le> D", "using assms(1)[OF \\<open>x \\<in> A\\<close>] infdist_le2"], ["proof (prove)\nusing this:\n  \\<exists>y\\<in>B. dist x y \\<le> D\n  \\<lbrakk>?a \\<in> ?A; dist ?x ?a \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> infdist ?x ?A \\<le> ?d\n\ngoal (1 subgoal):\n 1. infdist x B \\<le> D", "by fastforce"], ["proof (state)\nthis:\n  infdist x B \\<le> D\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B \\<Longrightarrow> infdist x A \\<le> D", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B \\<Longrightarrow> infdist x A \\<le> D", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B \\<Longrightarrow> infdist x A \\<le> D", "assume \"x \\<in> B\""], ["proof (state)\nthis:\n  x \\<in> B\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B \\<Longrightarrow> infdist x A \\<le> D", "show \"infdist x A \\<le> D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infdist x A \\<le> D", "using assms(2)[OF \\<open>x \\<in> B\\<close>] infdist_le2"], ["proof (prove)\nusing this:\n  \\<exists>y\\<in>A. dist x y \\<le> D\n  \\<lbrakk>?a \\<in> ?A; dist ?x ?a \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> infdist ?x ?A \\<le> ?d\n\ngoal (1 subgoal):\n 1. infdist x A \\<le> D", "by fastforce"], ["proof (state)\nthis:\n  infdist x A \\<le> D\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infdist_le_hausdorff_distance [mono_intros]:\n  assumes \"x \\<in> A\" \"bounded A\" \"bounded B\"\n  shows \"infdist x B \\<le> hausdorff_distance A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infdist x B \\<le> hausdorff_distance A B", "proof (cases \"B = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. B = {} \\<Longrightarrow> infdist x B \\<le> hausdorff_distance A B\n 2. B \\<noteq> {} \\<Longrightarrow> infdist x B \\<le> hausdorff_distance A B", "case True"], ["proof (state)\nthis:\n  B = {}\n\ngoal (2 subgoals):\n 1. B = {} \\<Longrightarrow> infdist x B \\<le> hausdorff_distance A B\n 2. B \\<noteq> {} \\<Longrightarrow> infdist x B \\<le> hausdorff_distance A B", "then"], ["proof (chain)\npicking this:\n  B = {}", "have \"infdist x B = 0\""], ["proof (prove)\nusing this:\n  B = {}\n\ngoal (1 subgoal):\n 1. infdist x B = 0", "unfolding infdist_def"], ["proof (prove)\nusing this:\n  B = {}\n\ngoal (1 subgoal):\n 1. (if B = {} then 0 else Inf (dist x ` B)) = 0", "by auto"], ["proof (state)\nthis:\n  infdist x B = 0\n\ngoal (2 subgoals):\n 1. B = {} \\<Longrightarrow> infdist x B \\<le> hausdorff_distance A B\n 2. B \\<noteq> {} \\<Longrightarrow> infdist x B \\<le> hausdorff_distance A B", "then"], ["proof (chain)\npicking this:\n  infdist x B = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  infdist x B = 0\n\ngoal (1 subgoal):\n 1. infdist x B \\<le> hausdorff_distance A B", "using hausdorff_distance_nonneg"], ["proof (prove)\nusing this:\n  infdist x B = 0\n  0 \\<le> hausdorff_distance ?A ?B\n\ngoal (1 subgoal):\n 1. infdist x B \\<le> hausdorff_distance A B", "by auto"], ["proof (state)\nthis:\n  infdist x B \\<le> hausdorff_distance A B\n\ngoal (1 subgoal):\n 1. B \\<noteq> {} \\<Longrightarrow> infdist x B \\<le> hausdorff_distance A B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. B \\<noteq> {} \\<Longrightarrow> infdist x B \\<le> hausdorff_distance A B", "case False"], ["proof (state)\nthis:\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. B \\<noteq> {} \\<Longrightarrow> infdist x B \\<le> hausdorff_distance A B", "have \"infdist x B \\<le> (SUP y\\<in>A. infdist y B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infdist x B \\<le> (SUP y\\<in>A. infdist y B)", "using bdd_above_infdist_aux[OF \\<open>bounded A\\<close> \\<open>bounded B\\<close>]"], ["proof (prove)\nusing this:\n  bdd_above ((\\<lambda>x. infdist x B) ` A)\n\ngoal (1 subgoal):\n 1. infdist x B \\<le> (SUP y\\<in>A. infdist y B)", "by (meson assms(1) cSUP_upper)"], ["proof (state)\nthis:\n  infdist x B \\<le> (SUP y\\<in>A. infdist y B)\n\ngoal (1 subgoal):\n 1. B \\<noteq> {} \\<Longrightarrow> infdist x B \\<le> hausdorff_distance A B", "then"], ["proof (chain)\npicking this:\n  infdist x B \\<le> (SUP y\\<in>A. infdist y B)", "show ?thesis"], ["proof (prove)\nusing this:\n  infdist x B \\<le> (SUP y\\<in>A. infdist y B)\n\ngoal (1 subgoal):\n 1. infdist x B \\<le> hausdorff_distance A B", "unfolding hausdorff_distance_def"], ["proof (prove)\nusing this:\n  infdist x B \\<le> (SUP y\\<in>A. infdist y B)\n\ngoal (1 subgoal):\n 1. infdist x B\n    \\<le> (if A = {} \\<or>\n              B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B\n           then 0\n           else max (SUP x\\<in>A. infdist x B) (SUP x\\<in>B. infdist x A))", "using assms False"], ["proof (prove)\nusing this:\n  infdist x B \\<le> (SUP y\\<in>A. infdist y B)\n  x \\<in> A\n  bounded A\n  bounded B\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. infdist x B\n    \\<le> (if A = {} \\<or>\n              B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B\n           then 0\n           else max (SUP x\\<in>A. infdist x B) (SUP x\\<in>B. infdist x A))", "by auto"], ["proof (state)\nthis:\n  infdist x B \\<le> hausdorff_distance A B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma hausdorff_distance_infdist_triangle [mono_intros]:\n  assumes \"B \\<noteq> {}\" \"bounded B\" \"bounded C\"\n  shows \"infdist x C \\<le> infdist x B + hausdorff_distance B C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infdist x C \\<le> infdist x B + hausdorff_distance B C", "proof (cases \"C = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. C = {} \\<Longrightarrow>\n    infdist x C \\<le> infdist x B + hausdorff_distance B C\n 2. C \\<noteq> {} \\<Longrightarrow>\n    infdist x C \\<le> infdist x B + hausdorff_distance B C", "case True"], ["proof (state)\nthis:\n  C = {}\n\ngoal (2 subgoals):\n 1. C = {} \\<Longrightarrow>\n    infdist x C \\<le> infdist x B + hausdorff_distance B C\n 2. C \\<noteq> {} \\<Longrightarrow>\n    infdist x C \\<le> infdist x B + hausdorff_distance B C", "then"], ["proof (chain)\npicking this:\n  C = {}", "have \"infdist x C = 0\""], ["proof (prove)\nusing this:\n  C = {}\n\ngoal (1 subgoal):\n 1. infdist x C = 0", "unfolding infdist_def"], ["proof (prove)\nusing this:\n  C = {}\n\ngoal (1 subgoal):\n 1. (if C = {} then 0 else Inf (dist x ` C)) = 0", "by auto"], ["proof (state)\nthis:\n  infdist x C = 0\n\ngoal (2 subgoals):\n 1. C = {} \\<Longrightarrow>\n    infdist x C \\<le> infdist x B + hausdorff_distance B C\n 2. C \\<noteq> {} \\<Longrightarrow>\n    infdist x C \\<le> infdist x B + hausdorff_distance B C", "then"], ["proof (chain)\npicking this:\n  infdist x C = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  infdist x C = 0\n\ngoal (1 subgoal):\n 1. infdist x C \\<le> infdist x B + hausdorff_distance B C", "using infdist_nonneg[of x B] hausdorff_distance_nonneg[of B C]"], ["proof (prove)\nusing this:\n  infdist x C = 0\n  0 \\<le> infdist x B\n  0 \\<le> hausdorff_distance B C\n\ngoal (1 subgoal):\n 1. infdist x C \\<le> infdist x B + hausdorff_distance B C", "by auto"], ["proof (state)\nthis:\n  infdist x C \\<le> infdist x B + hausdorff_distance B C\n\ngoal (1 subgoal):\n 1. C \\<noteq> {} \\<Longrightarrow>\n    infdist x C \\<le> infdist x B + hausdorff_distance B C", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. C \\<noteq> {} \\<Longrightarrow>\n    infdist x C \\<le> infdist x B + hausdorff_distance B C", "case False"], ["proof (state)\nthis:\n  C \\<noteq> {}\n\ngoal (1 subgoal):\n 1. C \\<noteq> {} \\<Longrightarrow>\n    infdist x C \\<le> infdist x B + hausdorff_distance B C", "have \"infdist x C - hausdorff_distance B C \\<le> dist x b\" if \"b \\<in> B\" for b"], ["proof (prove)\ngoal (1 subgoal):\n 1. infdist x C - hausdorff_distance B C \\<le> dist x b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. infdist x C - hausdorff_distance B C \\<le> dist x b", "have \"infdist x C \\<le> infdist b C + dist x b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infdist x C \\<le> infdist b C + dist x b", "by (rule infdist_triangle)"], ["proof (state)\nthis:\n  infdist x C \\<le> infdist b C + dist x b\n\ngoal (1 subgoal):\n 1. infdist x C - hausdorff_distance B C \\<le> dist x b", "also"], ["proof (state)\nthis:\n  infdist x C \\<le> infdist b C + dist x b\n\ngoal (1 subgoal):\n 1. infdist x C - hausdorff_distance B C \\<le> dist x b", "have \"... \\<le> dist x b + hausdorff_distance B C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infdist b C + dist x b \\<le> dist x b + hausdorff_distance B C", "using infdist_le_hausdorff_distance[OF \\<open>b \\<in> B\\<close> \\<open>bounded B\\<close> \\<open>bounded C\\<close>]"], ["proof (prove)\nusing this:\n  infdist b C \\<le> hausdorff_distance B C\n\ngoal (1 subgoal):\n 1. infdist b C + dist x b \\<le> dist x b + hausdorff_distance B C", "by auto"], ["proof (state)\nthis:\n  infdist b C + dist x b \\<le> dist x b + hausdorff_distance B C\n\ngoal (1 subgoal):\n 1. infdist x C - hausdorff_distance B C \\<le> dist x b", "finally"], ["proof (chain)\npicking this:\n  infdist x C \\<le> dist x b + hausdorff_distance B C", "show ?thesis"], ["proof (prove)\nusing this:\n  infdist x C \\<le> dist x b + hausdorff_distance B C\n\ngoal (1 subgoal):\n 1. infdist x C - hausdorff_distance B C \\<le> dist x b", "by auto"], ["proof (state)\nthis:\n  infdist x C - hausdorff_distance B C \\<le> dist x b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?b \\<in> B \\<Longrightarrow>\n  infdist x C - hausdorff_distance B C \\<le> dist x ?b\n\ngoal (1 subgoal):\n 1. C \\<noteq> {} \\<Longrightarrow>\n    infdist x C \\<le> infdist x B + hausdorff_distance B C", "then"], ["proof (chain)\npicking this:\n  ?b \\<in> B \\<Longrightarrow>\n  infdist x C - hausdorff_distance B C \\<le> dist x ?b", "have \"infdist x C - hausdorff_distance B C \\<le> infdist x B\""], ["proof (prove)\nusing this:\n  ?b \\<in> B \\<Longrightarrow>\n  infdist x C - hausdorff_distance B C \\<le> dist x ?b\n\ngoal (1 subgoal):\n 1. infdist x C - hausdorff_distance B C \\<le> infdist x B", "unfolding infdist_def"], ["proof (prove)\nusing this:\n  ?b \\<in> B \\<Longrightarrow>\n  (if C = {} then 0 else Inf (dist x ` C)) - hausdorff_distance B C\n  \\<le> dist x ?b\n\ngoal (1 subgoal):\n 1. (if C = {} then 0 else Inf (dist x ` C)) - hausdorff_distance B C\n    \\<le> (if B = {} then 0 else Inf (dist x ` B))", "using \\<open>B \\<noteq> {}\\<close>"], ["proof (prove)\nusing this:\n  ?b \\<in> B \\<Longrightarrow>\n  (if C = {} then 0 else Inf (dist x ` C)) - hausdorff_distance B C\n  \\<le> dist x ?b\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (if C = {} then 0 else Inf (dist x ` C)) - hausdorff_distance B C\n    \\<le> (if B = {} then 0 else Inf (dist x ` B))", "by (simp add: le_cINF_iff)"], ["proof (state)\nthis:\n  infdist x C - hausdorff_distance B C \\<le> infdist x B\n\ngoal (1 subgoal):\n 1. C \\<noteq> {} \\<Longrightarrow>\n    infdist x C \\<le> infdist x B + hausdorff_distance B C", "then"], ["proof (chain)\npicking this:\n  infdist x C - hausdorff_distance B C \\<le> infdist x B", "show ?thesis"], ["proof (prove)\nusing this:\n  infdist x C - hausdorff_distance B C \\<le> infdist x B\n\ngoal (1 subgoal):\n 1. infdist x C \\<le> infdist x B + hausdorff_distance B C", "by auto"], ["proof (state)\nthis:\n  infdist x C \\<le> infdist x B + hausdorff_distance B C\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma hausdorff_distance_triangle [mono_intros]:\n  assumes \"B \\<noteq> {}\" \"bounded B\"\n  shows \"hausdorff_distance A C \\<le> hausdorff_distance A B + hausdorff_distance B C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hausdorff_distance A C\n    \\<le> hausdorff_distance A B + hausdorff_distance B C", "proof (cases \"A = {} \\<or> C = {} \\<or> (\\<not>(bounded A)) \\<or> (\\<not>(bounded C))\")"], ["proof (state)\ngoal (2 subgoals):\n 1. A = {} \\<or>\n    C = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded C \\<Longrightarrow>\n    hausdorff_distance A C\n    \\<le> hausdorff_distance A B + hausdorff_distance B C\n 2. \\<not> (A = {} \\<or>\n            C = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded C) \\<Longrightarrow>\n    hausdorff_distance A C\n    \\<le> hausdorff_distance A B + hausdorff_distance B C", "case True"], ["proof (state)\nthis:\n  A = {} \\<or> C = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded C\n\ngoal (2 subgoals):\n 1. A = {} \\<or>\n    C = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded C \\<Longrightarrow>\n    hausdorff_distance A C\n    \\<le> hausdorff_distance A B + hausdorff_distance B C\n 2. \\<not> (A = {} \\<or>\n            C = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded C) \\<Longrightarrow>\n    hausdorff_distance A C\n    \\<le> hausdorff_distance A B + hausdorff_distance B C", "then"], ["proof (chain)\npicking this:\n  A = {} \\<or> C = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded C", "have \"hausdorff_distance A C = 0\""], ["proof (prove)\nusing this:\n  A = {} \\<or> C = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded C\n\ngoal (1 subgoal):\n 1. hausdorff_distance A C = 0", "unfolding hausdorff_distance_def"], ["proof (prove)\nusing this:\n  A = {} \\<or> C = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded C\n\ngoal (1 subgoal):\n 1. (if A = {} \\<or> C = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded C\n     then 0\n     else max (SUP x\\<in>A. infdist x C) (SUP x\\<in>C. infdist x A)) =\n    0", "by auto"], ["proof (state)\nthis:\n  hausdorff_distance A C = 0\n\ngoal (2 subgoals):\n 1. A = {} \\<or>\n    C = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded C \\<Longrightarrow>\n    hausdorff_distance A C\n    \\<le> hausdorff_distance A B + hausdorff_distance B C\n 2. \\<not> (A = {} \\<or>\n            C = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded C) \\<Longrightarrow>\n    hausdorff_distance A C\n    \\<le> hausdorff_distance A B + hausdorff_distance B C", "then"], ["proof (chain)\npicking this:\n  hausdorff_distance A C = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  hausdorff_distance A C = 0\n\ngoal (1 subgoal):\n 1. hausdorff_distance A C\n    \\<le> hausdorff_distance A B + hausdorff_distance B C", "using hausdorff_distance_nonneg[of A B] hausdorff_distance_nonneg[of B C]"], ["proof (prove)\nusing this:\n  hausdorff_distance A C = 0\n  0 \\<le> hausdorff_distance A B\n  0 \\<le> hausdorff_distance B C\n\ngoal (1 subgoal):\n 1. hausdorff_distance A C\n    \\<le> hausdorff_distance A B + hausdorff_distance B C", "by auto"], ["proof (state)\nthis:\n  hausdorff_distance A C\n  \\<le> hausdorff_distance A B + hausdorff_distance B C\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            C = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded C) \\<Longrightarrow>\n    hausdorff_distance A C\n    \\<le> hausdorff_distance A B + hausdorff_distance B C", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            C = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded C) \\<Longrightarrow>\n    hausdorff_distance A C\n    \\<le> hausdorff_distance A B + hausdorff_distance B C", "case False"], ["proof (state)\nthis:\n  \\<not> (A = {} \\<or> C = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded C)\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            C = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded C) \\<Longrightarrow>\n    hausdorff_distance A C\n    \\<le> hausdorff_distance A B + hausdorff_distance B C", "then"], ["proof (chain)\npicking this:\n  \\<not> (A = {} \\<or> C = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded C)", "have *: \"A \\<noteq> {}\" \"C \\<noteq> {}\" \"bounded A\" \"bounded C\""], ["proof (prove)\nusing this:\n  \\<not> (A = {} \\<or> C = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded C)\n\ngoal (1 subgoal):\n 1. (A \\<noteq> {} &&& C \\<noteq> {}) &&& bounded A &&& bounded C", "by auto"], ["proof (state)\nthis:\n  A \\<noteq> {}\n  C \\<noteq> {}\n  bounded A\n  bounded C\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            C = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded C) \\<Longrightarrow>\n    hausdorff_distance A C\n    \\<le> hausdorff_distance A B + hausdorff_distance B C", "define M where \"M = hausdorff_distance A B + hausdorff_distance B C\""], ["proof (state)\nthis:\n  M = hausdorff_distance A B + hausdorff_distance B C\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            C = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded C) \\<Longrightarrow>\n    hausdorff_distance A C\n    \\<le> hausdorff_distance A B + hausdorff_distance B C", "have \"infdist x C \\<le> M\" if \"x \\<in> A\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. infdist x C \\<le> M", "using hausdorff_distance_infdist_triangle[OF \\<open>B \\<noteq> {}\\<close> \\<open>bounded B \\<close> \\<open>bounded C\\<close>, of x]\n          infdist_le_hausdorff_distance[OF \\<open>x \\<in> A\\<close> \\<open>bounded A\\<close> \\<open>bounded B\\<close>]"], ["proof (prove)\nusing this:\n  infdist x C \\<le> infdist x B + hausdorff_distance B C\n  infdist x B \\<le> hausdorff_distance A B\n\ngoal (1 subgoal):\n 1. infdist x C \\<le> M", "by (auto simp add: M_def)"], ["proof (state)\nthis:\n  ?x \\<in> A \\<Longrightarrow> infdist ?x C \\<le> M\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            C = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded C) \\<Longrightarrow>\n    hausdorff_distance A C\n    \\<le> hausdorff_distance A B + hausdorff_distance B C", "moreover"], ["proof (state)\nthis:\n  ?x \\<in> A \\<Longrightarrow> infdist ?x C \\<le> M\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            C = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded C) \\<Longrightarrow>\n    hausdorff_distance A C\n    \\<le> hausdorff_distance A B + hausdorff_distance B C", "have \"infdist x A \\<le> M\" if \"x \\<in> C\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. infdist x A \\<le> M", "using hausdorff_distance_infdist_triangle[OF \\<open>B \\<noteq> {}\\<close> \\<open>bounded B \\<close> \\<open>bounded A\\<close>, of x]\n          infdist_le_hausdorff_distance[OF \\<open>x \\<in> C\\<close> \\<open>bounded C\\<close> \\<open>bounded B\\<close>]"], ["proof (prove)\nusing this:\n  infdist x A \\<le> infdist x B + hausdorff_distance B A\n  infdist x B \\<le> hausdorff_distance C B\n\ngoal (1 subgoal):\n 1. infdist x A \\<le> M", "by (auto simp add: hausdorff_distance_sym M_def)"], ["proof (state)\nthis:\n  ?x \\<in> C \\<Longrightarrow> infdist ?x A \\<le> M\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            C = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded C) \\<Longrightarrow>\n    hausdorff_distance A C\n    \\<le> hausdorff_distance A B + hausdorff_distance B C", "ultimately"], ["proof (chain)\npicking this:\n  ?x \\<in> A \\<Longrightarrow> infdist ?x C \\<le> M\n  ?x \\<in> C \\<Longrightarrow> infdist ?x A \\<le> M", "have \"hausdorff_distance A C \\<le> M\""], ["proof (prove)\nusing this:\n  ?x \\<in> A \\<Longrightarrow> infdist ?x C \\<le> M\n  ?x \\<in> C \\<Longrightarrow> infdist ?x A \\<le> M\n\ngoal (1 subgoal):\n 1. hausdorff_distance A C \\<le> M", "unfolding hausdorff_distance_def"], ["proof (prove)\nusing this:\n  ?x \\<in> A \\<Longrightarrow> infdist ?x C \\<le> M\n  ?x \\<in> C \\<Longrightarrow> infdist ?x A \\<le> M\n\ngoal (1 subgoal):\n 1. (if A = {} \\<or> C = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded C\n     then 0 else max (SUP x\\<in>A. infdist x C) (SUP x\\<in>C. infdist x A))\n    \\<le> M", "using * bdd_above_infdist_aux"], ["proof (prove)\nusing this:\n  ?x \\<in> A \\<Longrightarrow> infdist ?x C \\<le> M\n  ?x \\<in> C \\<Longrightarrow> infdist ?x A \\<le> M\n  A \\<noteq> {}\n  C \\<noteq> {}\n  bounded A\n  bounded C\n  \\<lbrakk>bounded ?A; bounded ?B\\<rbrakk>\n  \\<Longrightarrow> bdd_above ((\\<lambda>x. infdist x ?B) ` ?A)\n\ngoal (1 subgoal):\n 1. (if A = {} \\<or> C = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded C\n     then 0 else max (SUP x\\<in>A. infdist x C) (SUP x\\<in>C. infdist x A))\n    \\<le> M", "by (auto simp add: cSUP_least)"], ["proof (state)\nthis:\n  hausdorff_distance A C \\<le> M\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            C = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded C) \\<Longrightarrow>\n    hausdorff_distance A C\n    \\<le> hausdorff_distance A B + hausdorff_distance B C", "then"], ["proof (chain)\npicking this:\n  hausdorff_distance A C \\<le> M", "show ?thesis"], ["proof (prove)\nusing this:\n  hausdorff_distance A C \\<le> M\n\ngoal (1 subgoal):\n 1. hausdorff_distance A C\n    \\<le> hausdorff_distance A B + hausdorff_distance B C", "unfolding M_def"], ["proof (prove)\nusing this:\n  hausdorff_distance A C\n  \\<le> hausdorff_distance A B + hausdorff_distance B C\n\ngoal (1 subgoal):\n 1. hausdorff_distance A C\n    \\<le> hausdorff_distance A B + hausdorff_distance B C", "by auto"], ["proof (state)\nthis:\n  hausdorff_distance A C\n  \\<le> hausdorff_distance A B + hausdorff_distance B C\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma hausdorff_distance_subset:\n  assumes \"A \\<subseteq> B\" \"A \\<noteq> {}\" \"bounded B\"\n  shows \"hausdorff_distance A B = (SUP x\\<in>B. infdist x A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hausdorff_distance A B = (SUP x\\<in>B. infdist x A)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. hausdorff_distance A B = (SUP x\\<in>B. infdist x A)", "have H: \"B \\<noteq> {}\" \"bounded A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<noteq> {} &&& bounded A", "using assms bounded_subset"], ["proof (prove)\nusing this:\n  A \\<subseteq> B\n  A \\<noteq> {}\n  bounded B\n  \\<lbrakk>bounded ?T; ?S \\<subseteq> ?T\\<rbrakk>\n  \\<Longrightarrow> bounded ?S\n\ngoal (1 subgoal):\n 1. B \\<noteq> {} &&& bounded A", "by auto"], ["proof (state)\nthis:\n  B \\<noteq> {}\n  bounded A\n\ngoal (1 subgoal):\n 1. hausdorff_distance A B = (SUP x\\<in>B. infdist x A)", "have \"(SUP x\\<in>A. infdist x B) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (SUP x\\<in>A. infdist x B) = 0", "using assms"], ["proof (prove)\nusing this:\n  A \\<subseteq> B\n  A \\<noteq> {}\n  bounded B\n\ngoal (1 subgoal):\n 1. (SUP x\\<in>A. infdist x B) = 0", "by (simp add: subset_eq)"], ["proof (state)\nthis:\n  (SUP x\\<in>A. infdist x B) = 0\n\ngoal (1 subgoal):\n 1. hausdorff_distance A B = (SUP x\\<in>B. infdist x A)", "moreover"], ["proof (state)\nthis:\n  (SUP x\\<in>A. infdist x B) = 0\n\ngoal (1 subgoal):\n 1. hausdorff_distance A B = (SUP x\\<in>B. infdist x A)", "have \"(SUP x\\<in>B. infdist x A) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> (SUP x\\<in>B. infdist x A)", "using bdd_above_infdist_aux[OF \\<open>bounded B\\<close> \\<open>bounded A\\<close>] infdist_nonneg[of _ A]"], ["proof (prove)\nusing this:\n  bdd_above ((\\<lambda>x. infdist x A) ` B)\n  0 \\<le> infdist ?x A\n\ngoal (1 subgoal):\n 1. 0 \\<le> (SUP x\\<in>B. infdist x A)", "by (meson H(1) cSUP_upper2 ex_in_conv)"], ["proof (state)\nthis:\n  0 \\<le> (SUP x\\<in>B. infdist x A)\n\ngoal (1 subgoal):\n 1. hausdorff_distance A B = (SUP x\\<in>B. infdist x A)", "ultimately"], ["proof (chain)\npicking this:\n  (SUP x\\<in>A. infdist x B) = 0\n  0 \\<le> (SUP x\\<in>B. infdist x A)", "show ?thesis"], ["proof (prove)\nusing this:\n  (SUP x\\<in>A. infdist x B) = 0\n  0 \\<le> (SUP x\\<in>B. infdist x A)\n\ngoal (1 subgoal):\n 1. hausdorff_distance A B = (SUP x\\<in>B. infdist x A)", "unfolding hausdorff_distance_def"], ["proof (prove)\nusing this:\n  (SUP x\\<in>A. infdist x B) = 0\n  0 \\<le> (SUP x\\<in>B. infdist x A)\n\ngoal (1 subgoal):\n 1. (if A = {} \\<or> B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B\n     then 0\n     else max (SUP x\\<in>A. infdist x B) (SUP x\\<in>B. infdist x A)) =\n    (SUP x\\<in>B. infdist x A)", "using assms H"], ["proof (prove)\nusing this:\n  (SUP x\\<in>A. infdist x B) = 0\n  0 \\<le> (SUP x\\<in>B. infdist x A)\n  A \\<subseteq> B\n  A \\<noteq> {}\n  bounded B\n  B \\<noteq> {}\n  bounded A\n\ngoal (1 subgoal):\n 1. (if A = {} \\<or> B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B\n     then 0\n     else max (SUP x\\<in>A. infdist x B) (SUP x\\<in>B. infdist x A)) =\n    (SUP x\\<in>B. infdist x A)", "by auto"], ["proof (state)\nthis:\n  hausdorff_distance A B = (SUP x\\<in>B. infdist x A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma hausdorff_distance_closure [simp]:\n  \"hausdorff_distance A (closure A) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hausdorff_distance A (closure A) = 0", "proof (cases \"A = {} \\<or> (\\<not>(bounded A))\")"], ["proof (state)\ngoal (2 subgoals):\n 1. A = {} \\<or> \\<not> bounded A \\<Longrightarrow>\n    hausdorff_distance A (closure A) = 0\n 2. \\<not> (A = {} \\<or> \\<not> bounded A) \\<Longrightarrow>\n    hausdorff_distance A (closure A) = 0", "case True"], ["proof (state)\nthis:\n  A = {} \\<or> \\<not> bounded A\n\ngoal (2 subgoals):\n 1. A = {} \\<or> \\<not> bounded A \\<Longrightarrow>\n    hausdorff_distance A (closure A) = 0\n 2. \\<not> (A = {} \\<or> \\<not> bounded A) \\<Longrightarrow>\n    hausdorff_distance A (closure A) = 0", "then"], ["proof (chain)\npicking this:\n  A = {} \\<or> \\<not> bounded A", "show ?thesis"], ["proof (prove)\nusing this:\n  A = {} \\<or> \\<not> bounded A\n\ngoal (1 subgoal):\n 1. hausdorff_distance A (closure A) = 0", "unfolding hausdorff_distance_def"], ["proof (prove)\nusing this:\n  A = {} \\<or> \\<not> bounded A\n\ngoal (1 subgoal):\n 1. (if A = {} \\<or>\n        closure A = {} \\<or>\n        \\<not> bounded A \\<or> \\<not> bounded (closure A)\n     then 0\n     else max (SUP x\\<in>A. infdist x (closure A))\n           (SUP x\\<in>closure A. infdist x A)) =\n    0", "by auto"], ["proof (state)\nthis:\n  hausdorff_distance A (closure A) = 0\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> \\<not> bounded A) \\<Longrightarrow>\n    hausdorff_distance A (closure A) = 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> \\<not> bounded A) \\<Longrightarrow>\n    hausdorff_distance A (closure A) = 0", "case False"], ["proof (state)\nthis:\n  \\<not> (A = {} \\<or> \\<not> bounded A)\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> \\<not> bounded A) \\<Longrightarrow>\n    hausdorff_distance A (closure A) = 0", "then"], ["proof (chain)\npicking this:\n  \\<not> (A = {} \\<or> \\<not> bounded A)", "have \"A \\<noteq> {}\" \"bounded A\""], ["proof (prove)\nusing this:\n  \\<not> (A = {} \\<or> \\<not> bounded A)\n\ngoal (1 subgoal):\n 1. A \\<noteq> {} &&& bounded A", "by auto"], ["proof (state)\nthis:\n  A \\<noteq> {}\n  bounded A\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> \\<not> bounded A) \\<Longrightarrow>\n    hausdorff_distance A (closure A) = 0", "then"], ["proof (chain)\npicking this:\n  A \\<noteq> {}\n  bounded A", "have \"closure A \\<noteq> {}\" \"bounded (closure A)\" \"A \\<subseteq> closure A\""], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n  bounded A\n\ngoal (1 subgoal):\n 1. closure A \\<noteq> {} &&&\n    bounded (closure A) &&& A \\<subseteq> closure A", "using closure_subset"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n  bounded A\n  ?S \\<subseteq> closure ?S\n\ngoal (1 subgoal):\n 1. closure A \\<noteq> {} &&&\n    bounded (closure A) &&& A \\<subseteq> closure A", "by auto"], ["proof (state)\nthis:\n  closure A \\<noteq> {}\n  bounded (closure A)\n  A \\<subseteq> closure A\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> \\<not> bounded A) \\<Longrightarrow>\n    hausdorff_distance A (closure A) = 0", "have \"infdist x A = 0\" if \"x \\<in> closure A\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. infdist x A = 0", "using in_closure_iff_infdist_zero[OF \\<open>A \\<noteq> {}\\<close>] that"], ["proof (prove)\nusing this:\n  (?x \\<in> closure A) = (infdist ?x A = 0)\n  x \\<in> closure A\n\ngoal (1 subgoal):\n 1. infdist x A = 0", "by auto"], ["proof (state)\nthis:\n  ?x \\<in> closure A \\<Longrightarrow> infdist ?x A = 0\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> \\<not> bounded A) \\<Longrightarrow>\n    hausdorff_distance A (closure A) = 0", "then"], ["proof (chain)\npicking this:\n  ?x \\<in> closure A \\<Longrightarrow> infdist ?x A = 0", "have \"(SUP x\\<in>closure A. infdist x A) = 0\""], ["proof (prove)\nusing this:\n  ?x \\<in> closure A \\<Longrightarrow> infdist ?x A = 0\n\ngoal (1 subgoal):\n 1. (SUP x\\<in>closure A. infdist x A) = 0", "using \\<open>closure A \\<noteq> {}\\<close>"], ["proof (prove)\nusing this:\n  ?x \\<in> closure A \\<Longrightarrow> infdist ?x A = 0\n  closure A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (SUP x\\<in>closure A. infdist x A) = 0", "by auto"], ["proof (state)\nthis:\n  (SUP x\\<in>closure A. infdist x A) = 0\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or> \\<not> bounded A) \\<Longrightarrow>\n    hausdorff_distance A (closure A) = 0", "then"], ["proof (chain)\npicking this:\n  (SUP x\\<in>closure A. infdist x A) = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  (SUP x\\<in>closure A. infdist x A) = 0\n\ngoal (1 subgoal):\n 1. hausdorff_distance A (closure A) = 0", "unfolding hausdorff_distance_subset[OF \\<open>A \\<subseteq> closure A\\<close> \\<open>A \\<noteq> {}\\<close> \\<open>bounded (closure A)\\<close>]"], ["proof (prove)\nusing this:\n  (SUP x\\<in>closure A. infdist x A) = 0\n\ngoal (1 subgoal):\n 1. (SUP x\\<in>closure A. infdist x A) = 0", "by simp"], ["proof (state)\nthis:\n  hausdorff_distance A (closure A) = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma hausdorff_distance_closures [simp]:\n  \"hausdorff_distance (closure A) (closure B) = hausdorff_distance A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hausdorff_distance (closure A) (closure B) = hausdorff_distance A B", "proof (cases \"A = {} \\<or> B = {} \\<or> (\\<not>(bounded A)) \\<or> (\\<not>(bounded B))\")"], ["proof (state)\ngoal (2 subgoals):\n 1. A = {} \\<or>\n    B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B \\<Longrightarrow>\n    hausdorff_distance (closure A) (closure B) = hausdorff_distance A B\n 2. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance (closure A) (closure B) = hausdorff_distance A B", "case True"], ["proof (state)\nthis:\n  A = {} \\<or> B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B\n\ngoal (2 subgoals):\n 1. A = {} \\<or>\n    B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B \\<Longrightarrow>\n    hausdorff_distance (closure A) (closure B) = hausdorff_distance A B\n 2. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance (closure A) (closure B) = hausdorff_distance A B", "then"], ["proof (chain)\npicking this:\n  A = {} \\<or> B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B", "have *: \"hausdorff_distance A B = 0\""], ["proof (prove)\nusing this:\n  A = {} \\<or> B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B\n\ngoal (1 subgoal):\n 1. hausdorff_distance A B = 0", "unfolding hausdorff_distance_def"], ["proof (prove)\nusing this:\n  A = {} \\<or> B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B\n\ngoal (1 subgoal):\n 1. (if A = {} \\<or> B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B\n     then 0\n     else max (SUP x\\<in>A. infdist x B) (SUP x\\<in>B. infdist x A)) =\n    0", "by auto"], ["proof (state)\nthis:\n  hausdorff_distance A B = 0\n\ngoal (2 subgoals):\n 1. A = {} \\<or>\n    B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B \\<Longrightarrow>\n    hausdorff_distance (closure A) (closure B) = hausdorff_distance A B\n 2. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance (closure A) (closure B) = hausdorff_distance A B", "have \"closure A = {} \\<or> (\\<not>(bounded (closure A))) \\<or> closure B = {} \\<or> (\\<not>(bounded (closure B)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closure A = {} \\<or>\n    \\<not> bounded (closure A) \\<or>\n    closure B = {} \\<or> \\<not> bounded (closure B)", "using True bounded_subset closure_subset"], ["proof (prove)\nusing this:\n  A = {} \\<or> B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B\n  \\<lbrakk>bounded ?T; ?S \\<subseteq> ?T\\<rbrakk>\n  \\<Longrightarrow> bounded ?S\n  ?S \\<subseteq> closure ?S\n\ngoal (1 subgoal):\n 1. closure A = {} \\<or>\n    \\<not> bounded (closure A) \\<or>\n    closure B = {} \\<or> \\<not> bounded (closure B)", "by auto"], ["proof (state)\nthis:\n  closure A = {} \\<or>\n  \\<not> bounded (closure A) \\<or>\n  closure B = {} \\<or> \\<not> bounded (closure B)\n\ngoal (2 subgoals):\n 1. A = {} \\<or>\n    B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B \\<Longrightarrow>\n    hausdorff_distance (closure A) (closure B) = hausdorff_distance A B\n 2. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance (closure A) (closure B) = hausdorff_distance A B", "then"], ["proof (chain)\npicking this:\n  closure A = {} \\<or>\n  \\<not> bounded (closure A) \\<or>\n  closure B = {} \\<or> \\<not> bounded (closure B)", "have \"hausdorff_distance (closure A) (closure B) = 0\""], ["proof (prove)\nusing this:\n  closure A = {} \\<or>\n  \\<not> bounded (closure A) \\<or>\n  closure B = {} \\<or> \\<not> bounded (closure B)\n\ngoal (1 subgoal):\n 1. hausdorff_distance (closure A) (closure B) = 0", "unfolding hausdorff_distance_def"], ["proof (prove)\nusing this:\n  closure A = {} \\<or>\n  \\<not> bounded (closure A) \\<or>\n  closure B = {} \\<or> \\<not> bounded (closure B)\n\ngoal (1 subgoal):\n 1. (if closure A = {} \\<or>\n        closure B = {} \\<or>\n        \\<not> bounded (closure A) \\<or> \\<not> bounded (closure B)\n     then 0\n     else max (SUP x\\<in>closure A. infdist x (closure B))\n           (SUP x\\<in>closure B. infdist x (closure A))) =\n    0", "by auto"], ["proof (state)\nthis:\n  hausdorff_distance (closure A) (closure B) = 0\n\ngoal (2 subgoals):\n 1. A = {} \\<or>\n    B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B \\<Longrightarrow>\n    hausdorff_distance (closure A) (closure B) = hausdorff_distance A B\n 2. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance (closure A) (closure B) = hausdorff_distance A B", "then"], ["proof (chain)\npicking this:\n  hausdorff_distance (closure A) (closure B) = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  hausdorff_distance (closure A) (closure B) = 0\n\ngoal (1 subgoal):\n 1. hausdorff_distance (closure A) (closure B) = hausdorff_distance A B", "using *"], ["proof (prove)\nusing this:\n  hausdorff_distance (closure A) (closure B) = 0\n  hausdorff_distance A B = 0\n\ngoal (1 subgoal):\n 1. hausdorff_distance (closure A) (closure B) = hausdorff_distance A B", "by simp"], ["proof (state)\nthis:\n  hausdorff_distance (closure A) (closure B) = hausdorff_distance A B\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance (closure A) (closure B) = hausdorff_distance A B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance (closure A) (closure B) = hausdorff_distance A B", "case False"], ["proof (state)\nthis:\n  \\<not> (A = {} \\<or> B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B)\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance (closure A) (closure B) = hausdorff_distance A B", "then"], ["proof (chain)\npicking this:\n  \\<not> (A = {} \\<or> B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B)", "have H: \"A \\<noteq> {}\" \"B \\<noteq> {}\" \"bounded A\" \"bounded B\""], ["proof (prove)\nusing this:\n  \\<not> (A = {} \\<or> B = {} \\<or> \\<not> bounded A \\<or> \\<not> bounded B)\n\ngoal (1 subgoal):\n 1. (A \\<noteq> {} &&& B \\<noteq> {}) &&& bounded A &&& bounded B", "by auto"], ["proof (state)\nthis:\n  A \\<noteq> {}\n  B \\<noteq> {}\n  bounded A\n  bounded B\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance (closure A) (closure B) = hausdorff_distance A B", "then"], ["proof (chain)\npicking this:\n  A \\<noteq> {}\n  B \\<noteq> {}\n  bounded A\n  bounded B", "have H2: \"closure A \\<noteq> {}\" \"closure B \\<noteq> {}\" \"bounded (closure A)\" \"bounded (closure B)\""], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n  B \\<noteq> {}\n  bounded A\n  bounded B\n\ngoal (1 subgoal):\n 1. (closure A \\<noteq> {} &&& closure B \\<noteq> {}) &&&\n    bounded (closure A) &&& bounded (closure B)", "by auto"], ["proof (state)\nthis:\n  closure A \\<noteq> {}\n  closure B \\<noteq> {}\n  bounded (closure A)\n  bounded (closure B)\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance (closure A) (closure B) = hausdorff_distance A B", "have \"hausdorff_distance A B \\<le> hausdorff_distance A (closure A) + hausdorff_distance (closure A) B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hausdorff_distance A B\n    \\<le> hausdorff_distance A (closure A) +\n          hausdorff_distance (closure A) B", "apply (rule hausdorff_distance_triangle)"], ["proof (prove)\ngoal (2 subgoals):\n 1. closure A \\<noteq> {}\n 2. bounded (closure A)", "using H H2"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n  B \\<noteq> {}\n  bounded A\n  bounded B\n  closure A \\<noteq> {}\n  closure B \\<noteq> {}\n  bounded (closure A)\n  bounded (closure B)\n\ngoal (2 subgoals):\n 1. closure A \\<noteq> {}\n 2. bounded (closure A)", "by auto"], ["proof (state)\nthis:\n  hausdorff_distance A B\n  \\<le> hausdorff_distance A (closure A) + hausdorff_distance (closure A) B\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance (closure A) (closure B) = hausdorff_distance A B", "also"], ["proof (state)\nthis:\n  hausdorff_distance A B\n  \\<le> hausdorff_distance A (closure A) + hausdorff_distance (closure A) B\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance (closure A) (closure B) = hausdorff_distance A B", "have \"... = hausdorff_distance (closure A) B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hausdorff_distance A (closure A) + hausdorff_distance (closure A) B =\n    hausdorff_distance (closure A) B", "using hausdorff_distance_closure"], ["proof (prove)\nusing this:\n  hausdorff_distance ?A (closure ?A) = 0\n\ngoal (1 subgoal):\n 1. hausdorff_distance A (closure A) + hausdorff_distance (closure A) B =\n    hausdorff_distance (closure A) B", "by auto"], ["proof (state)\nthis:\n  hausdorff_distance A (closure A) + hausdorff_distance (closure A) B =\n  hausdorff_distance (closure A) B\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance (closure A) (closure B) = hausdorff_distance A B", "also"], ["proof (state)\nthis:\n  hausdorff_distance A (closure A) + hausdorff_distance (closure A) B =\n  hausdorff_distance (closure A) B\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance (closure A) (closure B) = hausdorff_distance A B", "have \"... \\<le> hausdorff_distance (closure A) (closure B) + hausdorff_distance (closure B) B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hausdorff_distance (closure A) B\n    \\<le> hausdorff_distance (closure A) (closure B) +\n          hausdorff_distance (closure B) B", "apply (rule hausdorff_distance_triangle)"], ["proof (prove)\ngoal (2 subgoals):\n 1. closure B \\<noteq> {}\n 2. bounded (closure B)", "using H H2"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n  B \\<noteq> {}\n  bounded A\n  bounded B\n  closure A \\<noteq> {}\n  closure B \\<noteq> {}\n  bounded (closure A)\n  bounded (closure B)\n\ngoal (2 subgoals):\n 1. closure B \\<noteq> {}\n 2. bounded (closure B)", "by auto"], ["proof (state)\nthis:\n  hausdorff_distance (closure A) B\n  \\<le> hausdorff_distance (closure A) (closure B) +\n        hausdorff_distance (closure B) B\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance (closure A) (closure B) = hausdorff_distance A B", "also"], ["proof (state)\nthis:\n  hausdorff_distance (closure A) B\n  \\<le> hausdorff_distance (closure A) (closure B) +\n        hausdorff_distance (closure B) B\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance (closure A) (closure B) = hausdorff_distance A B", "have \"... = hausdorff_distance (closure A) (closure B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hausdorff_distance (closure A) (closure B) +\n    hausdorff_distance (closure B) B =\n    hausdorff_distance (closure A) (closure B)", "using hausdorff_distance_closure"], ["proof (prove)\nusing this:\n  hausdorff_distance ?A (closure ?A) = 0\n\ngoal (1 subgoal):\n 1. hausdorff_distance (closure A) (closure B) +\n    hausdorff_distance (closure B) B =\n    hausdorff_distance (closure A) (closure B)", "by (auto simp add: hausdorff_distance_sym)"], ["proof (state)\nthis:\n  hausdorff_distance (closure A) (closure B) +\n  hausdorff_distance (closure B) B =\n  hausdorff_distance (closure A) (closure B)\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance (closure A) (closure B) = hausdorff_distance A B", "finally"], ["proof (chain)\npicking this:\n  hausdorff_distance A B \\<le> hausdorff_distance (closure A) (closure B)", "have *: \"hausdorff_distance A B \\<le> hausdorff_distance (closure A) (closure B)\""], ["proof (prove)\nusing this:\n  hausdorff_distance A B \\<le> hausdorff_distance (closure A) (closure B)\n\ngoal (1 subgoal):\n 1. hausdorff_distance A B \\<le> hausdorff_distance (closure A) (closure B)", "by simp"], ["proof (state)\nthis:\n  hausdorff_distance A B \\<le> hausdorff_distance (closure A) (closure B)\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance (closure A) (closure B) = hausdorff_distance A B", "have \"hausdorff_distance (closure A) (closure B) \\<le> hausdorff_distance (closure A) A + hausdorff_distance A (closure B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hausdorff_distance (closure A) (closure B)\n    \\<le> hausdorff_distance (closure A) A +\n          hausdorff_distance A (closure B)", "apply (rule hausdorff_distance_triangle)"], ["proof (prove)\ngoal (2 subgoals):\n 1. A \\<noteq> {}\n 2. bounded A", "using H H2"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n  B \\<noteq> {}\n  bounded A\n  bounded B\n  closure A \\<noteq> {}\n  closure B \\<noteq> {}\n  bounded (closure A)\n  bounded (closure B)\n\ngoal (2 subgoals):\n 1. A \\<noteq> {}\n 2. bounded A", "by auto"], ["proof (state)\nthis:\n  hausdorff_distance (closure A) (closure B)\n  \\<le> hausdorff_distance (closure A) A + hausdorff_distance A (closure B)\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance (closure A) (closure B) = hausdorff_distance A B", "also"], ["proof (state)\nthis:\n  hausdorff_distance (closure A) (closure B)\n  \\<le> hausdorff_distance (closure A) A + hausdorff_distance A (closure B)\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance (closure A) (closure B) = hausdorff_distance A B", "have \"... = hausdorff_distance A (closure B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hausdorff_distance (closure A) A + hausdorff_distance A (closure B) =\n    hausdorff_distance A (closure B)", "using hausdorff_distance_closure"], ["proof (prove)\nusing this:\n  hausdorff_distance ?A (closure ?A) = 0\n\ngoal (1 subgoal):\n 1. hausdorff_distance (closure A) A + hausdorff_distance A (closure B) =\n    hausdorff_distance A (closure B)", "by (auto simp add: hausdorff_distance_sym)"], ["proof (state)\nthis:\n  hausdorff_distance (closure A) A + hausdorff_distance A (closure B) =\n  hausdorff_distance A (closure B)\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance (closure A) (closure B) = hausdorff_distance A B", "also"], ["proof (state)\nthis:\n  hausdorff_distance (closure A) A + hausdorff_distance A (closure B) =\n  hausdorff_distance A (closure B)\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance (closure A) (closure B) = hausdorff_distance A B", "have \"... \\<le> hausdorff_distance A B + hausdorff_distance B (closure B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hausdorff_distance A (closure B)\n    \\<le> hausdorff_distance A B + hausdorff_distance B (closure B)", "apply (rule hausdorff_distance_triangle)"], ["proof (prove)\ngoal (2 subgoals):\n 1. B \\<noteq> {}\n 2. bounded B", "using H H2"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n  B \\<noteq> {}\n  bounded A\n  bounded B\n  closure A \\<noteq> {}\n  closure B \\<noteq> {}\n  bounded (closure A)\n  bounded (closure B)\n\ngoal (2 subgoals):\n 1. B \\<noteq> {}\n 2. bounded B", "by auto"], ["proof (state)\nthis:\n  hausdorff_distance A (closure B)\n  \\<le> hausdorff_distance A B + hausdorff_distance B (closure B)\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance (closure A) (closure B) = hausdorff_distance A B", "also"], ["proof (state)\nthis:\n  hausdorff_distance A (closure B)\n  \\<le> hausdorff_distance A B + hausdorff_distance B (closure B)\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance (closure A) (closure B) = hausdorff_distance A B", "have \"... = hausdorff_distance A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hausdorff_distance A B + hausdorff_distance B (closure B) =\n    hausdorff_distance A B", "using hausdorff_distance_closure"], ["proof (prove)\nusing this:\n  hausdorff_distance ?A (closure ?A) = 0\n\ngoal (1 subgoal):\n 1. hausdorff_distance A B + hausdorff_distance B (closure B) =\n    hausdorff_distance A B", "by (auto simp add: hausdorff_distance_sym)"], ["proof (state)\nthis:\n  hausdorff_distance A B + hausdorff_distance B (closure B) =\n  hausdorff_distance A B\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance (closure A) (closure B) = hausdorff_distance A B", "finally"], ["proof (chain)\npicking this:\n  hausdorff_distance (closure A) (closure B) \\<le> hausdorff_distance A B", "have \"hausdorff_distance (closure A) (closure B) \\<le> hausdorff_distance A B\""], ["proof (prove)\nusing this:\n  hausdorff_distance (closure A) (closure B) \\<le> hausdorff_distance A B\n\ngoal (1 subgoal):\n 1. hausdorff_distance (closure A) (closure B) \\<le> hausdorff_distance A B", "by simp"], ["proof (state)\nthis:\n  hausdorff_distance (closure A) (closure B) \\<le> hausdorff_distance A B\n\ngoal (1 subgoal):\n 1. \\<not> (A = {} \\<or>\n            B = {} \\<or>\n            \\<not> bounded A \\<or> \\<not> bounded B) \\<Longrightarrow>\n    hausdorff_distance (closure A) (closure B) = hausdorff_distance A B", "then"], ["proof (chain)\npicking this:\n  hausdorff_distance (closure A) (closure B) \\<le> hausdorff_distance A B", "show ?thesis"], ["proof (prove)\nusing this:\n  hausdorff_distance (closure A) (closure B) \\<le> hausdorff_distance A B\n\ngoal (1 subgoal):\n 1. hausdorff_distance (closure A) (closure B) = hausdorff_distance A B", "using *"], ["proof (prove)\nusing this:\n  hausdorff_distance (closure A) (closure B) \\<le> hausdorff_distance A B\n  hausdorff_distance A B \\<le> hausdorff_distance (closure A) (closure B)\n\ngoal (1 subgoal):\n 1. hausdorff_distance (closure A) (closure B) = hausdorff_distance A B", "by auto"], ["proof (state)\nthis:\n  hausdorff_distance (closure A) (closure B) = hausdorff_distance A B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma hausdorff_distance_zero:\n  assumes \"A \\<noteq> {}\" \"bounded A\" \"B \\<noteq> {}\" \"bounded B\"\n  shows \"hausdorff_distance A B = 0 \\<longleftrightarrow> closure A = closure B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (hausdorff_distance A B = 0) = (closure A = closure B)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. hausdorff_distance A B = 0 \\<Longrightarrow> closure A = closure B\n 2. closure A = closure B \\<Longrightarrow> hausdorff_distance A B = 0", "assume H: \"hausdorff_distance A B = 0\""], ["proof (state)\nthis:\n  hausdorff_distance A B = 0\n\ngoal (2 subgoals):\n 1. hausdorff_distance A B = 0 \\<Longrightarrow> closure A = closure B\n 2. closure A = closure B \\<Longrightarrow> hausdorff_distance A B = 0", "have \"A \\<subseteq> closure B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> closure B", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> x \\<in> closure B", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> x \\<in> closure B", "assume \"x \\<in> A\""], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> x \\<in> closure B", "have \"infdist x B = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infdist x B = 0", "using infdist_le_hausdorff_distance[OF \\<open>x \\<in> A\\<close> \\<open>bounded A\\<close> \\<open>bounded B\\<close>] H infdist_nonneg[of x B]"], ["proof (prove)\nusing this:\n  infdist x B \\<le> hausdorff_distance A B\n  hausdorff_distance A B = 0\n  0 \\<le> infdist x B\n\ngoal (1 subgoal):\n 1. infdist x B = 0", "by auto"], ["proof (state)\nthis:\n  infdist x B = 0\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> x \\<in> closure B", "then"], ["proof (chain)\npicking this:\n  infdist x B = 0", "show \"x \\<in> closure B\""], ["proof (prove)\nusing this:\n  infdist x B = 0\n\ngoal (1 subgoal):\n 1. x \\<in> closure B", "using in_closure_iff_infdist_zero[OF \\<open>B \\<noteq> {}\\<close>]"], ["proof (prove)\nusing this:\n  infdist x B = 0\n  (?x \\<in> closure B) = (infdist ?x B = 0)\n\ngoal (1 subgoal):\n 1. x \\<in> closure B", "by auto"], ["proof (state)\nthis:\n  x \\<in> closure B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A \\<subseteq> closure B\n\ngoal (2 subgoals):\n 1. hausdorff_distance A B = 0 \\<Longrightarrow> closure A = closure B\n 2. closure A = closure B \\<Longrightarrow> hausdorff_distance A B = 0", "then"], ["proof (chain)\npicking this:\n  A \\<subseteq> closure B", "have A: \"closure A \\<subseteq> closure B\""], ["proof (prove)\nusing this:\n  A \\<subseteq> closure B\n\ngoal (1 subgoal):\n 1. closure A \\<subseteq> closure B", "by (simp add: closure_minimal)"], ["proof (state)\nthis:\n  closure A \\<subseteq> closure B\n\ngoal (2 subgoals):\n 1. hausdorff_distance A B = 0 \\<Longrightarrow> closure A = closure B\n 2. closure A = closure B \\<Longrightarrow> hausdorff_distance A B = 0", "have \"B \\<subseteq> closure A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<subseteq> closure A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B \\<Longrightarrow> x \\<in> closure A", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B \\<Longrightarrow> x \\<in> closure A", "assume \"x \\<in> B\""], ["proof (state)\nthis:\n  x \\<in> B\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B \\<Longrightarrow> x \\<in> closure A", "have \"infdist x A = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infdist x A = 0", "using infdist_le_hausdorff_distance[OF \\<open>x \\<in> B\\<close> \\<open>bounded B\\<close> \\<open>bounded A\\<close>] H infdist_nonneg[of x A]"], ["proof (prove)\nusing this:\n  infdist x A \\<le> hausdorff_distance B A\n  hausdorff_distance A B = 0\n  0 \\<le> infdist x A\n\ngoal (1 subgoal):\n 1. infdist x A = 0", "by (auto simp add: hausdorff_distance_sym)"], ["proof (state)\nthis:\n  infdist x A = 0\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B \\<Longrightarrow> x \\<in> closure A", "then"], ["proof (chain)\npicking this:\n  infdist x A = 0", "show \"x \\<in> closure A\""], ["proof (prove)\nusing this:\n  infdist x A = 0\n\ngoal (1 subgoal):\n 1. x \\<in> closure A", "using in_closure_iff_infdist_zero[OF \\<open>A \\<noteq> {}\\<close>]"], ["proof (prove)\nusing this:\n  infdist x A = 0\n  (?x \\<in> closure A) = (infdist ?x A = 0)\n\ngoal (1 subgoal):\n 1. x \\<in> closure A", "by auto"], ["proof (state)\nthis:\n  x \\<in> closure A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  B \\<subseteq> closure A\n\ngoal (2 subgoals):\n 1. hausdorff_distance A B = 0 \\<Longrightarrow> closure A = closure B\n 2. closure A = closure B \\<Longrightarrow> hausdorff_distance A B = 0", "then"], ["proof (chain)\npicking this:\n  B \\<subseteq> closure A", "have \"closure B \\<subseteq> closure A\""], ["proof (prove)\nusing this:\n  B \\<subseteq> closure A\n\ngoal (1 subgoal):\n 1. closure B \\<subseteq> closure A", "by (simp add: closure_minimal)"], ["proof (state)\nthis:\n  closure B \\<subseteq> closure A\n\ngoal (2 subgoals):\n 1. hausdorff_distance A B = 0 \\<Longrightarrow> closure A = closure B\n 2. closure A = closure B \\<Longrightarrow> hausdorff_distance A B = 0", "then"], ["proof (chain)\npicking this:\n  closure B \\<subseteq> closure A", "show \"closure A = closure B\""], ["proof (prove)\nusing this:\n  closure B \\<subseteq> closure A\n\ngoal (1 subgoal):\n 1. closure A = closure B", "using A"], ["proof (prove)\nusing this:\n  closure B \\<subseteq> closure A\n  closure A \\<subseteq> closure B\n\ngoal (1 subgoal):\n 1. closure A = closure B", "by auto"], ["proof (state)\nthis:\n  closure A = closure B\n\ngoal (1 subgoal):\n 1. closure A = closure B \\<Longrightarrow> hausdorff_distance A B = 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. closure A = closure B \\<Longrightarrow> hausdorff_distance A B = 0", "assume \"closure A = closure B\""], ["proof (state)\nthis:\n  closure A = closure B\n\ngoal (1 subgoal):\n 1. closure A = closure B \\<Longrightarrow> hausdorff_distance A B = 0", "then"], ["proof (chain)\npicking this:\n  closure A = closure B", "show \"hausdorff_distance A B = 0\""], ["proof (prove)\nusing this:\n  closure A = closure B\n\ngoal (1 subgoal):\n 1. hausdorff_distance A B = 0", "using hausdorff_distance_closures[of A B]"], ["proof (prove)\nusing this:\n  closure A = closure B\n  hausdorff_distance (closure A) (closure B) = hausdorff_distance A B\n\ngoal (1 subgoal):\n 1. hausdorff_distance A B = 0", "by auto"], ["proof (state)\nthis:\n  hausdorff_distance A B = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma hausdorff_distance_vimage:\n  assumes \"\\<And>x. x \\<in> A \\<Longrightarrow> dist (f x) (g x) \\<le> C\"\n          \"C \\<ge> 0\"\n  shows \"hausdorff_distance (f`A) (g`A) \\<le> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hausdorff_distance (f ` A) (g ` A) \\<le> C", "apply (rule hausdorff_distanceI2[OF _ _ \\<open>C \\<ge> 0\\<close>])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> f ` A \\<Longrightarrow>\n       \\<exists>y\\<in>g ` A. dist x y \\<le> C\n 2. \\<And>x.\n       x \\<in> g ` A \\<Longrightarrow>\n       \\<exists>y\\<in>f ` A. dist x y \\<le> C", "using assms"], ["proof (prove)\nusing this:\n  ?x \\<in> A \\<Longrightarrow> dist (f ?x) (g ?x) \\<le> C\n  0 \\<le> C\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> f ` A \\<Longrightarrow>\n       \\<exists>y\\<in>g ` A. dist x y \\<le> C\n 2. \\<And>x.\n       x \\<in> g ` A \\<Longrightarrow>\n       \\<exists>y\\<in>f ` A. dist x y \\<le> C", "by (auto simp add: dist_commute, auto)"], ["", "lemma hausdorff_distance_union [mono_intros]:\n  assumes \"A \\<noteq> {}\" \"B \\<noteq> {}\" \"C \\<noteq> {}\" \"D \\<noteq> {}\"\n  shows \"hausdorff_distance (A \\<union> B) (C \\<union> D) \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hausdorff_distance (A \\<union> B) (C \\<union> D)\n    \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "proof (cases \"bounded A \\<and> bounded B \\<and> bounded C \\<and> bounded D\")"], ["proof (state)\ngoal (2 subgoals):\n 1. bounded A \\<and>\n    bounded B \\<and> bounded C \\<and> bounded D \\<Longrightarrow>\n    hausdorff_distance (A \\<union> B) (C \\<union> D)\n    \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. \\<not> (bounded A \\<and>\n            bounded B \\<and> bounded C \\<and> bounded D) \\<Longrightarrow>\n    hausdorff_distance (A \\<union> B) (C \\<union> D)\n    \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "case False"], ["proof (state)\nthis:\n  \\<not> (bounded A \\<and> bounded B \\<and> bounded C \\<and> bounded D)\n\ngoal (2 subgoals):\n 1. bounded A \\<and>\n    bounded B \\<and> bounded C \\<and> bounded D \\<Longrightarrow>\n    hausdorff_distance (A \\<union> B) (C \\<union> D)\n    \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. \\<not> (bounded A \\<and>\n            bounded B \\<and> bounded C \\<and> bounded D) \\<Longrightarrow>\n    hausdorff_distance (A \\<union> B) (C \\<union> D)\n    \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "then"], ["proof (chain)\npicking this:\n  \\<not> (bounded A \\<and> bounded B \\<and> bounded C \\<and> bounded D)", "have \"hausdorff_distance (A \\<union> B) (C \\<union> D) = 0\""], ["proof (prove)\nusing this:\n  \\<not> (bounded A \\<and> bounded B \\<and> bounded C \\<and> bounded D)\n\ngoal (1 subgoal):\n 1. hausdorff_distance (A \\<union> B) (C \\<union> D) = 0", "unfolding hausdorff_distance_def"], ["proof (prove)\nusing this:\n  \\<not> (bounded A \\<and> bounded B \\<and> bounded C \\<and> bounded D)\n\ngoal (1 subgoal):\n 1. (if A \\<union> B = {} \\<or>\n        C \\<union> D = {} \\<or>\n        \\<not> bounded (A \\<union> B) \\<or> \\<not> bounded (C \\<union> D)\n     then 0\n     else max (SUP x\\<in>A \\<union> B. infdist x (C \\<union> D))\n           (SUP x\\<in>C \\<union> D. infdist x (A \\<union> B))) =\n    0", "by auto"], ["proof (state)\nthis:\n  hausdorff_distance (A \\<union> B) (C \\<union> D) = 0\n\ngoal (2 subgoals):\n 1. bounded A \\<and>\n    bounded B \\<and> bounded C \\<and> bounded D \\<Longrightarrow>\n    hausdorff_distance (A \\<union> B) (C \\<union> D)\n    \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. \\<not> (bounded A \\<and>\n            bounded B \\<and> bounded C \\<and> bounded D) \\<Longrightarrow>\n    hausdorff_distance (A \\<union> B) (C \\<union> D)\n    \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "then"], ["proof (chain)\npicking this:\n  hausdorff_distance (A \\<union> B) (C \\<union> D) = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  hausdorff_distance (A \\<union> B) (C \\<union> D) = 0\n\ngoal (1 subgoal):\n 1. hausdorff_distance (A \\<union> B) (C \\<union> D)\n    \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "by (simp add: hausdorff_distance_nonneg le_max_iff_disj)"], ["proof (state)\nthis:\n  hausdorff_distance (A \\<union> B) (C \\<union> D)\n  \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n\ngoal (1 subgoal):\n 1. bounded A \\<and>\n    bounded B \\<and> bounded C \\<and> bounded D \\<Longrightarrow>\n    hausdorff_distance (A \\<union> B) (C \\<union> D)\n    \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. bounded A \\<and>\n    bounded B \\<and> bounded C \\<and> bounded D \\<Longrightarrow>\n    hausdorff_distance (A \\<union> B) (C \\<union> D)\n    \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "case True"], ["proof (state)\nthis:\n  bounded A \\<and> bounded B \\<and> bounded C \\<and> bounded D\n\ngoal (1 subgoal):\n 1. bounded A \\<and>\n    bounded B \\<and> bounded C \\<and> bounded D \\<Longrightarrow>\n    hausdorff_distance (A \\<union> B) (C \\<union> D)\n    \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. hausdorff_distance (A \\<union> B) (C \\<union> D)\n    \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "proof (rule hausdorff_distanceI, auto)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       infdist x (C \\<union> D)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. \\<And>x.\n       x \\<in> B \\<Longrightarrow>\n       infdist x (C \\<union> D)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 3. \\<And>x.\n       x \\<in> C \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 4. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 5. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "fix x"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       infdist x (C \\<union> D)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. \\<And>x.\n       x \\<in> B \\<Longrightarrow>\n       infdist x (C \\<union> D)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 3. \\<And>x.\n       x \\<in> C \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 4. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 5. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "assume H: \"x \\<in> A\""], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (5 subgoals):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       infdist x (C \\<union> D)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. \\<And>x.\n       x \\<in> B \\<Longrightarrow>\n       infdist x (C \\<union> D)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 3. \\<And>x.\n       x \\<in> C \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 4. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 5. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "have \"infdist x (C \\<union> D) \\<le> infdist x C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infdist x (C \\<union> D) \\<le> infdist x C", "by (simp add: assms infdist_union_min)"], ["proof (state)\nthis:\n  infdist x (C \\<union> D) \\<le> infdist x C\n\ngoal (5 subgoals):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       infdist x (C \\<union> D)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. \\<And>x.\n       x \\<in> B \\<Longrightarrow>\n       infdist x (C \\<union> D)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 3. \\<And>x.\n       x \\<in> C \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 4. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 5. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "also"], ["proof (state)\nthis:\n  infdist x (C \\<union> D) \\<le> infdist x C\n\ngoal (5 subgoals):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       infdist x (C \\<union> D)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. \\<And>x.\n       x \\<in> B \\<Longrightarrow>\n       infdist x (C \\<union> D)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 3. \\<And>x.\n       x \\<in> C \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 4. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 5. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "have \"... \\<le> hausdorff_distance A C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infdist x C \\<le> hausdorff_distance A C", "apply (rule infdist_le_hausdorff_distance)"], ["proof (prove)\ngoal (3 subgoals):\n 1. x \\<in> A\n 2. bounded A\n 3. bounded C", "using H True"], ["proof (prove)\nusing this:\n  x \\<in> A\n  bounded A \\<and> bounded B \\<and> bounded C \\<and> bounded D\n\ngoal (3 subgoals):\n 1. x \\<in> A\n 2. bounded A\n 3. bounded C", "by auto"], ["proof (state)\nthis:\n  infdist x C \\<le> hausdorff_distance A C\n\ngoal (5 subgoals):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       infdist x (C \\<union> D)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. \\<And>x.\n       x \\<in> B \\<Longrightarrow>\n       infdist x (C \\<union> D)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 3. \\<And>x.\n       x \\<in> C \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 4. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 5. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "also"], ["proof (state)\nthis:\n  infdist x C \\<le> hausdorff_distance A C\n\ngoal (5 subgoals):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       infdist x (C \\<union> D)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. \\<And>x.\n       x \\<in> B \\<Longrightarrow>\n       infdist x (C \\<union> D)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 3. \\<And>x.\n       x \\<in> C \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 4. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 5. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "have \"... \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hausdorff_distance A C\n    \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "by auto"], ["proof (state)\nthis:\n  hausdorff_distance A C\n  \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n\ngoal (5 subgoals):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       infdist x (C \\<union> D)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. \\<And>x.\n       x \\<in> B \\<Longrightarrow>\n       infdist x (C \\<union> D)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 3. \\<And>x.\n       x \\<in> C \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 4. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 5. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "finally"], ["proof (chain)\npicking this:\n  infdist x (C \\<union> D)\n  \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "show \"infdist x (C \\<union> D) \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\""], ["proof (prove)\nusing this:\n  infdist x (C \\<union> D)\n  \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n\ngoal (1 subgoal):\n 1. infdist x (C \\<union> D)\n    \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "by simp"], ["proof (state)\nthis:\n  infdist x (C \\<union> D)\n  \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n\ngoal (4 subgoals):\n 1. \\<And>x.\n       x \\<in> B \\<Longrightarrow>\n       infdist x (C \\<union> D)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. \\<And>x.\n       x \\<in> C \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 3. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 4. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x.\n       x \\<in> B \\<Longrightarrow>\n       infdist x (C \\<union> D)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. \\<And>x.\n       x \\<in> C \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 3. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 4. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "fix x"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x.\n       x \\<in> B \\<Longrightarrow>\n       infdist x (C \\<union> D)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. \\<And>x.\n       x \\<in> C \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 3. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 4. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "assume H: \"x \\<in> B\""], ["proof (state)\nthis:\n  x \\<in> B\n\ngoal (4 subgoals):\n 1. \\<And>x.\n       x \\<in> B \\<Longrightarrow>\n       infdist x (C \\<union> D)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. \\<And>x.\n       x \\<in> C \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 3. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 4. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "have \"infdist x (C \\<union> D) \\<le> infdist x D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infdist x (C \\<union> D) \\<le> infdist x D", "by (simp add: assms infdist_union_min)"], ["proof (state)\nthis:\n  infdist x (C \\<union> D) \\<le> infdist x D\n\ngoal (4 subgoals):\n 1. \\<And>x.\n       x \\<in> B \\<Longrightarrow>\n       infdist x (C \\<union> D)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. \\<And>x.\n       x \\<in> C \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 3. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 4. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "also"], ["proof (state)\nthis:\n  infdist x (C \\<union> D) \\<le> infdist x D\n\ngoal (4 subgoals):\n 1. \\<And>x.\n       x \\<in> B \\<Longrightarrow>\n       infdist x (C \\<union> D)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. \\<And>x.\n       x \\<in> C \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 3. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 4. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "have \"... \\<le> hausdorff_distance B D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infdist x D \\<le> hausdorff_distance B D", "apply (rule infdist_le_hausdorff_distance)"], ["proof (prove)\ngoal (3 subgoals):\n 1. x \\<in> B\n 2. bounded B\n 3. bounded D", "using H True"], ["proof (prove)\nusing this:\n  x \\<in> B\n  bounded A \\<and> bounded B \\<and> bounded C \\<and> bounded D\n\ngoal (3 subgoals):\n 1. x \\<in> B\n 2. bounded B\n 3. bounded D", "by auto"], ["proof (state)\nthis:\n  infdist x D \\<le> hausdorff_distance B D\n\ngoal (4 subgoals):\n 1. \\<And>x.\n       x \\<in> B \\<Longrightarrow>\n       infdist x (C \\<union> D)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. \\<And>x.\n       x \\<in> C \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 3. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 4. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "also"], ["proof (state)\nthis:\n  infdist x D \\<le> hausdorff_distance B D\n\ngoal (4 subgoals):\n 1. \\<And>x.\n       x \\<in> B \\<Longrightarrow>\n       infdist x (C \\<union> D)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. \\<And>x.\n       x \\<in> C \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 3. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 4. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "have \"... \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hausdorff_distance B D\n    \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "by auto"], ["proof (state)\nthis:\n  hausdorff_distance B D\n  \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n\ngoal (4 subgoals):\n 1. \\<And>x.\n       x \\<in> B \\<Longrightarrow>\n       infdist x (C \\<union> D)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. \\<And>x.\n       x \\<in> C \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 3. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 4. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "finally"], ["proof (chain)\npicking this:\n  infdist x (C \\<union> D)\n  \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "show \"infdist x (C \\<union> D) \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\""], ["proof (prove)\nusing this:\n  infdist x (C \\<union> D)\n  \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n\ngoal (1 subgoal):\n 1. infdist x (C \\<union> D)\n    \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "by simp"], ["proof (state)\nthis:\n  infdist x (C \\<union> D)\n  \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> C \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 3. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> C \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 3. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "fix x"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> C \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 3. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "assume H: \"x \\<in> C\""], ["proof (state)\nthis:\n  x \\<in> C\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> C \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 3. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "have \"infdist x (A \\<union> B) \\<le> infdist x A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infdist x (A \\<union> B) \\<le> infdist x A", "by (simp add: assms infdist_union_min)"], ["proof (state)\nthis:\n  infdist x (A \\<union> B) \\<le> infdist x A\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> C \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 3. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "also"], ["proof (state)\nthis:\n  infdist x (A \\<union> B) \\<le> infdist x A\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> C \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 3. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "have \"... \\<le> hausdorff_distance C A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infdist x A \\<le> hausdorff_distance C A", "apply (rule infdist_le_hausdorff_distance)"], ["proof (prove)\ngoal (3 subgoals):\n 1. x \\<in> C\n 2. bounded C\n 3. bounded A", "using H True"], ["proof (prove)\nusing this:\n  x \\<in> C\n  bounded A \\<and> bounded B \\<and> bounded C \\<and> bounded D\n\ngoal (3 subgoals):\n 1. x \\<in> C\n 2. bounded C\n 3. bounded A", "by auto"], ["proof (state)\nthis:\n  infdist x A \\<le> hausdorff_distance C A\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> C \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 3. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "also"], ["proof (state)\nthis:\n  infdist x A \\<le> hausdorff_distance C A\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> C \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 3. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "have \"... \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hausdorff_distance C A\n    \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "using hausdorff_distance_sym[of A C]"], ["proof (prove)\nusing this:\n  hausdorff_distance A C = hausdorff_distance C A\n\ngoal (1 subgoal):\n 1. hausdorff_distance C A\n    \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "by auto"], ["proof (state)\nthis:\n  hausdorff_distance C A\n  \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> C \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 3. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "finally"], ["proof (chain)\npicking this:\n  infdist x (A \\<union> B)\n  \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "show \"infdist x (A \\<union> B) \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\""], ["proof (prove)\nusing this:\n  infdist x (A \\<union> B)\n  \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n\ngoal (1 subgoal):\n 1. infdist x (A \\<union> B)\n    \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "by simp"], ["proof (state)\nthis:\n  infdist x (A \\<union> B)\n  \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "assume H: \"x \\<in> D\""], ["proof (state)\nthis:\n  x \\<in> D\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "have \"infdist x (A \\<union> B) \\<le> infdist x B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infdist x (A \\<union> B) \\<le> infdist x B", "by (simp add: assms infdist_union_min)"], ["proof (state)\nthis:\n  infdist x (A \\<union> B) \\<le> infdist x B\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "also"], ["proof (state)\nthis:\n  infdist x (A \\<union> B) \\<le> infdist x B\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "have \"... \\<le> hausdorff_distance D B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infdist x B \\<le> hausdorff_distance D B", "apply (rule infdist_le_hausdorff_distance)"], ["proof (prove)\ngoal (3 subgoals):\n 1. x \\<in> D\n 2. bounded D\n 3. bounded B", "using H True"], ["proof (prove)\nusing this:\n  x \\<in> D\n  bounded A \\<and> bounded B \\<and> bounded C \\<and> bounded D\n\ngoal (3 subgoals):\n 1. x \\<in> D\n 2. bounded D\n 3. bounded B", "by auto"], ["proof (state)\nthis:\n  infdist x B \\<le> hausdorff_distance D B\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "also"], ["proof (state)\nthis:\n  infdist x B \\<le> hausdorff_distance D B\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "have \"... \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hausdorff_distance D B\n    \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "using hausdorff_distance_sym[of B D]"], ["proof (prove)\nusing this:\n  hausdorff_distance B D = hausdorff_distance D B\n\ngoal (1 subgoal):\n 1. hausdorff_distance D B\n    \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "by auto"], ["proof (state)\nthis:\n  hausdorff_distance D B\n  \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> D \\<Longrightarrow>\n       infdist x (A \\<union> B)\n       \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n 2. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "finally"], ["proof (chain)\npicking this:\n  infdist x (A \\<union> B)\n  \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "show \"infdist x (A \\<union> B) \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\""], ["proof (prove)\nusing this:\n  infdist x (A \\<union> B)\n  \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n\ngoal (1 subgoal):\n 1. infdist x (A \\<union> B)\n    \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "by simp"], ["proof (state)\nthis:\n  infdist x (A \\<union> B)\n  \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n\ngoal (1 subgoal):\n 1. 0 \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)", "qed (simp add: le_max_iff_disj)"], ["proof (state)\nthis:\n  hausdorff_distance (A \\<union> B) (C \\<union> D)\n  \\<le> max (hausdorff_distance A C) (hausdorff_distance B D)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(*of theory Hausdorff_Distance*)"]]}