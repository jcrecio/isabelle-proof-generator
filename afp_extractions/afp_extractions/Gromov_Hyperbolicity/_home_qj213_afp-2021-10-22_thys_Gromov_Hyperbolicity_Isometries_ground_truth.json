{"file_name": "/home/qj213/afp-2021-10-22/thys/Gromov_Hyperbolicity/Isometries.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Gromov_Hyperbolicity", "problem_names": ["lemma isometry_on_subset:\n  assumes \"isometry_on X f\"\n          \"Y \\<subseteq> X\"\n  shows \"isometry_on Y f\"", "lemma isometry_onI [intro?]:\n  assumes \"\\<And>x y. x \\<in> X \\<Longrightarrow> y \\<in> X \\<Longrightarrow> dist (f x) (f y) = dist x y\"\n  shows \"isometry_on X f\"", "lemma isometry_onD:\n  assumes \"isometry_on X f\"\n          \"x \\<in> X\" \"y \\<in> X\"\n  shows \"dist (f x) (f y) = dist x y\"", "lemma isometryI [intro?]:\n  assumes \"\\<And>x y. dist (f x) (f y) = dist x y\"\n          \"range f = UNIV\"\n  shows \"isometry f\"", "lemma\n  assumes \"isometry_on X f\"\n  shows isometry_on_lipschitz: \"1-lipschitz_on X f\"\n    and isometry_on_uniformly_continuous: \"uniformly_continuous_on X f\"\n    and isometry_on_continuous: \"continuous_on X f\"", "lemma isometryD:\n  assumes \"isometry f\"\n  shows \"isometry_on UNIV f\"\n        \"dist (f x) (f y) = dist x y\"\n        \"range f = UNIV\"\n        \"1-lipschitz_on UNIV f\"\n        \"uniformly_continuous_on UNIV f\"\n        \"continuous_on UNIV f\"", "lemma isometry_on_injective:\n  assumes \"isometry_on X f\"\n  shows \"inj_on f X\"", "lemma isometry_on_compose:\n  assumes \"isometry_on X f\"\n          \"isometry_on (f`X) g\"\n  shows \"isometry_on X (\\<lambda>x. g(f x))\"", "lemma isometry_on_cong:\n  assumes \"isometry_on X f\"\n          \"\\<And>x. x \\<in> X \\<Longrightarrow> g x = f x\"\n  shows \"isometry_on X g\"", "lemma isometry_on_inverse:\n  assumes \"isometry_on X f\"\n  shows \"isometry_on (f`X) (inv_into X f)\"\n        \"\\<And>x. x \\<in> X \\<Longrightarrow> (inv_into X f) (f x) = x\"\n        \"\\<And>y. y \\<in> f`X \\<Longrightarrow> f (inv_into X f y) = y\"\n        \"bij_betw f X (f`X)\"", "lemma isometry_inverse:\n  assumes \"isometry f\"\n  shows \"isometry (inv f)\"\n        \"bij f\"", "lemma isometry_on_homeomorphism:\n  assumes \"isometry_on X f\"\n  shows \"homeomorphism X (f`X) f (inv_into X f)\"\n        \"homeomorphism_on X f\"\n        \"X homeomorphic f`X\"", "lemma isometry_homeomorphism:\n  fixes f::\"('a::metric_space) \\<Rightarrow> ('b::metric_space)\"\n  assumes \"isometry f\"\n  shows \"homeomorphism UNIV UNIV f (inv f)\"\n        \"(UNIV::'a set) homeomorphic (UNIV::'b set)\"", "lemma isometry_on_closure:\n  assumes \"isometry_on X f\"\n          \"continuous_on (closure X) f\"\n  shows \"isometry_on (closure X) f\"", "lemma isometry_extend_closure:\n  fixes f::\"('a::metric_space) \\<Rightarrow> ('b::complete_space)\"\n  assumes \"isometry_on X f\"\n  shows \"\\<exists>g. isometry_on (closure X) g \\<and> (\\<forall>x\\<in>X. g x = f x)\"", "lemma isometry_on_complete_image:\n  assumes \"isometry_on X f\"\n          \"complete X\"\n  shows \"complete (f`X)\"", "lemma isometry_on_id [simp]:\n  \"isometry_on A (\\<lambda>x. x)\"\n  \"isometry_on A id\"", "lemma isometry_on_add [simp]:\n  \"isometry_on A (\\<lambda>x. x + (t::'a::real_normed_vector))\"", "lemma isometry_on_minus [simp]:\n  \"isometry_on A (\\<lambda>(x::'a::real_normed_vector). -x)\"", "lemma isometry_on_diff [simp]:\n  \"isometry_on A (\\<lambda>x. (t::'a::real_normed_vector) - x)\"", "lemma isometry_preserves_bounded:\n  assumes \"isometry_on X f\"\n          \"A \\<subseteq> X\"\n  shows \"bounded (f`A) \\<longleftrightarrow> bounded A\"", "lemma isometry_preserves_infdist:\n  \"infdist (f x) (f`A) = infdist x A\"\n  if \"isometry_on X f\" \"A \\<subseteq> X\" \"x \\<in> X\"", "lemma isometry_preserves_hausdorff_distance:\n  \"hausdorff_distance (f`A) (f`B) = hausdorff_distance A B\"\n  if \"isometry_on X f\" \"A \\<subseteq> X\" \"B \\<subseteq> X\"", "lemma isometry_on_UNIV_iterates:\n  fixes f::\"('a::metric_space) \\<Rightarrow> 'a\"\n  assumes \"isometry_on UNIV f\"\n  shows \"isometry_on UNIV (f^^n)\"", "lemma isometry_iterates:\n  fixes f::\"('a::metric_space) \\<Rightarrow> 'a\"\n  assumes \"isometry f\"\n  shows \"isometry (f^^n)\"", "lemma geodesic_segment_betweenI:\n  assumes \"g 0 = x\" \"g (dist x y) = y\" \"isometry_on {0..dist x y} g\" \"G = g`{0..dist x y}\"\n  shows \"geodesic_segment_between G x y\"", "lemma geodesic_segmentI [intro, simp]:\n  assumes \"geodesic_segment_between G x y\"\n  shows \"geodesic_segment G\"", "lemma geodesic_segmentI2 [intro]:\n  assumes \"isometry_on {a..b} g\" \"a \\<le> (b::real)\"\n  shows \"geodesic_segment_between (g`{a..b}) (g a) (g b)\"\n        \"geodesic_segment (g`{a..b})\"", "lemma geodesic_segmentD:\n  assumes \"geodesic_segment_between G x y\"\n  shows \"\\<exists>g::(real \\<Rightarrow> _). (g t = x \\<and> g (t + dist x y) = y \\<and> isometry_on {t..t+dist x y} g \\<and> G = g`{t..t+dist x y})\"", "lemma geodesic_segment_endpoints [simp]:\n  assumes \"geodesic_segment_between G x y\"\n  shows \"x \\<in> G\" \"y \\<in> G\" \"G \\<noteq> {}\"", "lemma geodesic_segment_commute:\n  assumes \"geodesic_segment_between G x y\"\n  shows \"geodesic_segment_between G y x\"", "lemma geodesic_segment_dist:\n  assumes \"geodesic_segment_between G x y\" \"a \\<in> G\"\n  shows \"dist x a + dist a y = dist x y\"", "lemma geodesic_segment_dist_unique:\n  assumes \"geodesic_segment_between G x y\" \"a \\<in> G\" \"b \\<in> G\" \"dist x a = dist x b\"\n  shows \"a = b\"", "lemma geodesic_segment_union:\n  assumes \"dist x z = dist x y + dist y z\"\n          \"geodesic_segment_between G x y\" \"geodesic_segment_between H y z\"\n  shows \"geodesic_segment_between (G \\<union> H) x z\"\n        \"G \\<inter> H = {y}\"", "lemma geodesic_segment_dist_le:\n  assumes \"geodesic_segment_between G x y\" \"a \\<in> G\" \"b \\<in> G\"\n  shows \"dist a b \\<le> dist x y\"", "lemma geodesic_segment_param [simp]:\n  assumes \"geodesic_segment_between G x y\"\n  shows \"geodesic_segment_param G x 0 = x\"\n        \"geodesic_segment_param G x (dist x y) = y\"\n        \"t \\<in> {0..dist x y} \\<Longrightarrow> geodesic_segment_param G x t \\<in> G\"\n        \"isometry_on {0..dist x y} (geodesic_segment_param G x)\"\n        \"(geodesic_segment_param G x)`{0..dist x y} = G\"\n        \"t \\<in> {0..dist x y} \\<Longrightarrow> dist x (geodesic_segment_param G x t) = t\"\n        \"s \\<in> {0..dist x y} \\<Longrightarrow> t \\<in> {0..dist x y} \\<Longrightarrow> dist (geodesic_segment_param G x s) (geodesic_segment_param G x t) = abs(s-t)\"\n        \"z \\<in> G \\<Longrightarrow> z = geodesic_segment_param G x (dist x z)\"", "lemma geodesic_segment_param_in_segment:\n  assumes \"G \\<noteq> {}\"\n  shows \"geodesic_segment_param G x t \\<in> G\"", "lemma geodesic_segment_reverse_param:\n  assumes \"geodesic_segment_between G x y\"\n          \"t \\<in> {0..dist x y}\"\n  shows \"geodesic_segment_param G y (dist x y - t) = geodesic_segment_param G x t\"", "lemma dist_along_geodesic_wrt_endpoint:\n  assumes \"geodesic_segment_between G x y\"\n          \"u \\<in> G\" \"v \\<in> G\"\n  shows \"dist u v = abs(dist u x - dist v x)\"", "lemma geodesic_subsegment_subset:\n  \"geodesic_subsegment G x s t \\<subseteq> G\"", "lemma geodesic_subsegment:\n  assumes \"geodesic_segment_between G x y\"\n          \"0 \\<le> s\" \"s \\<le> t\" \"t \\<le> dist x y\"\n  shows \"geodesic_subsegment G x s t = (geodesic_segment_param G x)`{s..t}\"\n        \"geodesic_segment_between (geodesic_subsegment G x s t) (geodesic_segment_param G x s) (geodesic_segment_param G x t)\"\n        \"\\<And>u. s \\<le> u \\<Longrightarrow> u \\<le> t \\<Longrightarrow> geodesic_segment_param (geodesic_subsegment G x s t) (geodesic_segment_param G x s) (u - s) = geodesic_segment_param G x u\"", "lemma geodesic_segment_subparam:\n  assumes \"geodesic_segment_between G x z\" \"geodesic_segment_between H x y\" \"H \\<subseteq> G\" \"t \\<in> {0..dist x y}\"\n  shows \"geodesic_segment_param G x t = geodesic_segment_param H x t\"", "lemma geodesic_subsegment_exists:\n  assumes \"geodesic_segment G\" \"x \\<in> G\" \"y \\<in> G\"\n  shows \"\\<exists>H. H \\<subseteq> G \\<and> geodesic_segment_between H x y\"", "lemma geodesic_segment_homeo_interval:\n  assumes \"geodesic_segment_between G x y\"\n  shows \"{0..dist x y} homeomorphic G\"", "lemma geodesic_segment_topology:\n  assumes \"geodesic_segment G\"\n  shows \"compact G\" \"connected G\" \"path_connected G\" \"bounded G\" \"closed G\" \"G \\<noteq> {}\" \"proper G\"", "lemma geodesic_segment_between_x_x [simp]:\n  \"geodesic_segment_between {x} x x\"\n  \"geodesic_segment {x}\"\n  \"geodesic_segment_between G x x \\<longleftrightarrow> G = {x}\"", "lemma geodesic_segment_disconnection:\n  assumes \"geodesic_segment_between G x y\" \"z \\<in> G\"\n  shows \"(connected (G - {z})) = (z = x \\<or> z = y)\"", "lemma geodesic_segment_unique_endpoints:\n  assumes \"geodesic_segment_between G x y\"\n          \"geodesic_segment_between G a b\"\n  shows \"{x, y} = {a, b}\"", "lemma geodesic_segment_subsegment:\n  assumes \"geodesic_segment G\" \"H \\<subseteq> G\" \"compact H\" \"connected H\" \"H \\<noteq> {}\"\n  shows \"geodesic_segment H\"", "lemma isometry_preserves_geodesic_segment_between:\n  assumes \"isometry_on X f\"\n          \"G \\<subseteq> X\" \"geodesic_segment_between G x y\"\n  shows \"geodesic_segment_between (f`G) (f x) (f y)\"", "lemma geodesic_segment_distance:\n  assumes \"geodesic_segment_between G x y\"\n  shows \"dist w x + dist w y \\<le> dist x y + 2 * infdist w G\"", "lemma proj_set_geodesic_same_basepoint:\n  assumes \"p \\<in> proj_set x A\" \"geodesic_segment_between G p x\" \"y \\<in> G\"\n  shows \"p \\<in> proj_set y A\"", "lemma proj_set_subset:\n  assumes \"p \\<in> proj_set x A\" \"geodesic_segment_between G p x\" \"y \\<in> G\"\n  shows \"proj_set y A \\<subseteq> proj_set x A\"", "lemma proj_set_thickening:\n  assumes \"p \\<in> proj_set x Z\"\n          \"0 \\<le> D\"\n          \"D \\<le> dist p x\"\n          \"geodesic_segment_between G p x\"\n  shows \"geodesic_segment_param G p D \\<in> proj_set x (\\<Union>z\\<in>Z. cball z D)\"", "lemma proj_set_thickening':\n  assumes \"p \\<in> proj_set x Z\"\n          \"0 \\<le> D\"\n          \"D \\<le> E\"\n          \"E \\<le> dist p x\"\n          \"geodesic_segment_between G p x\"\n  shows \"geodesic_segment_param G p D \\<in> proj_set (geodesic_segment_param G p E) (\\<Union>z\\<in>Z. cball z D)\"", "lemma some_geodesic_segment_between_exists:\n  \"\\<exists>f. \\<forall> x y S. f x S y = f y S x\n    \\<and> (if (\\<exists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S) then (geodesic_segment_between (f x S y) x y \\<and> (f x S y \\<subseteq> S))\n        else f x S y = {x, y})\"", "lemma some_geodesic_commute:\n  \"{x--S--y} = {y--S--x}\"", "lemma some_geodesic_segment_description:\n  \"(\\<exists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S) \\<Longrightarrow> geodesic_segment_between {x--S--y} x y\"\n  \"(\\<not>(\\<exists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S)) \\<Longrightarrow> {x--S--y} = {x, y}\"", "lemma some_geodesic_compact [simp]:\n  \"compact {x--S--y}\"", "lemma some_geodesic_closed [simp]:\n  \"closed {x--S--y}\"", "lemma some_geodesic_bounded [simp]:\n  \"bounded {x--S--y}\"", "lemma some_geodesic_endpoints [simp]:\n  \"x \\<in> {x--S--y}\" \"y \\<in> {x--S--y}\" \"{x--S--y} \\<noteq> {}\"", "lemma some_geodesic_subsegment:\n  assumes \"H \\<subseteq> {x--S--y}\" \"compact H\" \"connected H\" \"H \\<noteq> {}\"\n  shows \"geodesic_segment H\"", "lemma some_geodesic_in_subset:\n  assumes \"x \\<in> S\" \"y \\<in> S\"\n  shows \"{x--S--y} \\<subseteq> S\"", "lemma some_geodesic_same_endpoints [simp]:\n  \"{x--S--x} = {x}\"", "lemma geodesic_subsetD:\n  assumes \"geodesic_subset S\" \"x \\<in> S\" \"y \\<in> S\"\n  shows \"geodesic_segment_between {x--S--y} x y\"", "lemma geodesic_subsetI:\n  assumes \"\\<And>x y. x \\<in> S \\<Longrightarrow> y \\<in> S \\<Longrightarrow> \\<exists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S\"\n  shows \"geodesic_subset S\"", "lemma geodesic_subset_empty:\n  \"geodesic_subset {}\"", "lemma geodesic_subset_singleton:\n  \"geodesic_subset {x}\"", "lemma geodesic_subset_path_connected:\n  assumes \"geodesic_subset S\"\n  shows \"path_connected S\"", "lemma closed_segment_as_isometric_image:\n  \"((\\<lambda>t. x + (t/dist x y) *\\<^sub>R (y - x))`{0..dist x y}) = closed_segment x y\"", "lemma (in geodesic_space) some_geodesic_is_geodesic_segment [simp]:\n  \"geodesic_segment_between {x--y} x (y::'a)\"\n  \"geodesic_segment {x--y}\"", "lemma (in geodesic_space) some_geodesic_connected [simp]:\n  \"connected {x--y}\" \"path_connected {x--y}\"", "lemma (in geodesic_space) geodesic_segment_param_in_geodesic_spaces [simp]:\n  \"geodesic_segment_param {x--y} x 0 = x\"\n  \"geodesic_segment_param {x--y} x (dist x y) = y\"\n  \"t \\<in> {0..dist x y} \\<Longrightarrow> geodesic_segment_param {x--y} x t \\<in> {x--y}\"\n  \"isometry_on {0..dist x y} (geodesic_segment_param {x--y} x)\"\n  \"(geodesic_segment_param {x--y} x)`{0..dist x y} = {x--y}\"\n  \"t \\<in> {0..dist x y} \\<Longrightarrow> dist x (geodesic_segment_param {x--y} x t) = t\"\n  \"s \\<in> {0..dist x y} \\<Longrightarrow> t \\<in> {0..dist x y} \\<Longrightarrow> dist (geodesic_segment_param {x--y} x s) (geodesic_segment_param {x--y} x t) = abs(s-t)\"\n  \"z \\<in> {x--y} \\<Longrightarrow> z = geodesic_segment_param {x--y} x (dist x z)\"", "lemma (in geodesic_space) uniquely_geodesic_spaceI:\n  assumes \"\\<And>G H x (y::'a). geodesic_segment_between G x y \\<Longrightarrow> geodesic_segment_between H x y \\<Longrightarrow> G \\<inter> H = {x, y} \\<Longrightarrow> x = y\"\n          \"geodesic_segment_between G x y\" \"geodesic_segment_between H x (y::'a)\"\n  shows \"G = H\"", "lemma geodesic_segment_unique:\n  \"geodesic_segment_between G x y = (G = {x--(y::'a)})\"", "lemma geodesic_segment_dist':\n  assumes \"dist x z = dist x y + dist y z\"\n  shows \"y \\<in> {x--z}\" \"{x--z} = {x--y} \\<union> {y--z}\"", "lemma geodesic_segment_expression:\n  \"{x--z} = {y. dist x z = dist x y + dist y z}\"", "lemma geodesic_segment_split:\n  assumes \"(y::'a) \\<in> {x--z}\"\n  shows \"{x--z} = {x--y} \\<union> {y--z}\"\n        \"{x--y} \\<inter> {y--z} = {y}\"", "lemma geodesic_segment_subparam':\n  assumes \"y \\<in> {x--z}\" \"t \\<in> {0..dist x y}\"\n  shows \"geodesic_segment_param {x--z} x t = geodesic_segment_param {x--y} x t\"", "lemma middle:\n  \"dist x (middle x y) = (dist x y)/2\"\n  \"dist (middle x y) y = (dist x y)/2\"", "lemma geod_distance_successor:\n  \"\\<forall>a < 2^n. dist (geod n a) (geod n (Suc a)) = dist x0 y0 / 2^n\"", "lemma geod_mult:\n  \"geod n a = geod (n + k) (a * 2^k)\"", "lemma geod_0:\n  \"geod n 0 = x0\"", "lemma geod_end:\n  \"geod n (2^n) = y0\"", "lemma geod_upper:\n  assumes \"a \\<le> b\" \"b \\<le> 2^n\"\n  shows \"dist (geod n a) (geod n b) \\<le> (b-a) * dist x0 y0 / 2^n\"", "lemma geod_dist:\n  assumes \"a \\<le> b\" \"b \\<le> 2^n\"\n  shows \"dist (geod n a) (geod n b) = (b-a) * dist x0 y0 / 2^n\"", "lemma geod_dist2:\n  assumes \"a \\<le> 2^n\" \"b \\<le> 2^p\" \"a/2^n \\<le> b / 2^p\"\n  shows \"dist (geod n a) (geod p b) = (b/2^p - a/2^n) * dist x0 y0\"", "lemma geod_dist3:\n  assumes \"a \\<le> 2^n\" \"b \\<le> 2^p\"\n  shows \"dist (geod n a) (geod p b) = abs(b/2^p - a/2^n) * dist x0 y0\"", "lemma geod:\n  shows \"\\<exists>g. isometry_on {0..dist x0 y0} g \\<and> g 0 = x0 \\<and> g (dist x0 y0) = y0\"", "theorem complete_with_middles_imp_geodesic:\n  assumes \"\\<And>x y::('a::complete_space). \\<exists>m. dist x m = dist x y /2 \\<and> dist m y = dist x y /2\"\n  shows \"OFCLASS('a, geodesic_space_class)\"", "lemma quasi_isometry_onD:\n  assumes \"lambda C-quasi_isometry_on X f\"\n  shows \"\\<And>x y. x \\<in> X \\<Longrightarrow> y \\<in> X \\<Longrightarrow> dist (f x) (f y) \\<le> lambda * dist x y + C\"\n        \"\\<And>x y. x \\<in> X \\<Longrightarrow> y \\<in> X \\<Longrightarrow> dist (f x) (f y) \\<ge> (1/lambda) * dist x y - C\"\n        \"lambda \\<ge> 1\" \"C \\<ge> 0\"", "lemma quasi_isometry_onI [intro]:\n  assumes \"\\<And>x y. x \\<in> X \\<Longrightarrow> y \\<in> X \\<Longrightarrow> dist (f x) (f y) \\<le> lambda * dist x y + C\"\n          \"\\<And>x y. x \\<in> X \\<Longrightarrow> y \\<in> X \\<Longrightarrow> dist (f x) (f y) \\<ge> (1/lambda) * dist x y - C\"\n          \"lambda \\<ge> 1\" \"C \\<ge> 0\"\n  shows \"lambda C-quasi_isometry_on X f\"", "lemma isometry_quasi_isometry_on:\n  assumes \"isometry_on X f\"\n  shows \"1 0-quasi_isometry_on X f\"", "lemma quasi_isometry_on_change_params:\n  assumes \"lambda C-quasi_isometry_on X f\" \"mu \\<ge> lambda\" \"D \\<ge> C\"\n  shows \"mu D-quasi_isometry_on X f\"", "lemma quasi_isometry_on_subset:\n  assumes \"lambda C-quasi_isometry_on X f\"\n          \"Y \\<subseteq> X\"\n  shows \"lambda C-quasi_isometry_on Y f\"", "lemma quasi_isometry_on_perturb:\n  assumes \"lambda C-quasi_isometry_on X f\"\n          \"D \\<ge> 0\"\n          \"\\<And>x. x \\<in> X \\<Longrightarrow> dist (f x) (g x) \\<le> D\"\n  shows \"lambda (C + 2 * D)-quasi_isometry_on X g\"", "lemma quasi_isometry_on_compose:\n  assumes \"lambda C-quasi_isometry_on X f\"\n          \"mu D-quasi_isometry_on Y g\"\n          \"f`X \\<subseteq> Y\"\n  shows \"(lambda * mu) (C * mu + D)-quasi_isometry_on X (g o f)\"", "lemma quasi_isometry_on_bounded:\n  assumes \"lambda C-quasi_isometry_on X f\"\n          \"bounded X\"\n  shows \"bounded (f`X)\"", "lemma quasi_isometry_on_empty:\n  assumes \"C \\<ge> 0\" \"lambda \\<ge> 1\"\n  shows \"lambda C-quasi_isometry_on {} f\"", "lemma quasi_isometry_on_infdist:\n  assumes \"lambda C-quasi_isometry_on X f\"\n          \"w \\<in> X\"\n          \"S \\<subseteq> X\"\n  shows \"infdist (f w) (f`S) \\<le> lambda * infdist w S + C\"\n        \"infdist (f w) (f`S) \\<ge> (1/lambda) * infdist w S - C\"", "lemma quasi_isometry_betweenD:\n  assumes \"lambda C-quasi_isometry_between X Y f\"\n  shows \"lambda C-quasi_isometry_on X f\"\n        \"f`X \\<subseteq> Y\"\n        \"\\<And>y. y \\<in> Y \\<Longrightarrow> \\<exists>x\\<in>X. dist (f x) y \\<le> C\"\n        \"\\<And>x y. x \\<in> X \\<Longrightarrow> y \\<in> X \\<Longrightarrow> dist (f x) (f y) \\<le> lambda * dist x y + C\"\n        \"\\<And>x y. x \\<in> X \\<Longrightarrow> y \\<in> X \\<Longrightarrow> dist (f x) (f y) \\<ge> (1/lambda) * dist x y - C\"\n        \"lambda \\<ge> 1\" \"C \\<ge> 0\"", "lemma quasi_isometry_betweenI:\n  assumes \"lambda C-quasi_isometry_on X f\"\n          \"f`X \\<subseteq> Y\"\n          \"\\<And>y. y \\<in> Y \\<Longrightarrow> \\<exists>x\\<in>X. dist (f x) y \\<le> C\"\n  shows \"lambda C-quasi_isometry_between X Y f\"", "lemma quasi_isometry_on_between:\n  assumes \"lambda C-quasi_isometry_on X f\"\n  shows \"lambda C-quasi_isometry_between X (f`X) f\"", "lemma quasi_isometry_between_change_params:\n  assumes \"lambda C-quasi_isometry_between X Y f\" \"mu \\<ge> lambda\" \"D \\<ge> C\"\n  shows \"mu D-quasi_isometry_between X Y f\"", "lemma quasi_isometry_subset:\n  assumes \"X \\<subseteq> Y\" \"\\<And>y. y \\<in> Y \\<Longrightarrow> \\<exists>x\\<in>X. dist x y \\<le> C\" \"C \\<ge> 0\"\n  shows \"1 C-quasi_isometry_between X Y (\\<lambda>x. x)\"", "lemma isometry_quasi_isometry_between:\n  assumes \"isometry f\"\n  shows \"1 0-quasi_isometry_between UNIV UNIV f\"", "theorem quasi_isometric_equiv_rel:\n  \"quasi_isometric X X\"\n  \"quasi_isometric X Y \\<Longrightarrow> quasi_isometric Y Z \\<Longrightarrow> quasi_isometric X Z\"\n  \"quasi_isometric X Y \\<Longrightarrow> quasi_isometric Y X\"", "lemma quasi_isometric_empty:\n  assumes \"X = {}\" \"quasi_isometric X Y\"\n  shows \"Y = {}\"", "lemma quasi_isometric_bounded:\n  assumes \"bounded X\" \"quasi_isometric X Y\"\n  shows \"bounded Y\"", "lemma quasi_isometric_bounded_iff:\n  assumes \"bounded X\" \"X \\<noteq> {}\" \"bounded Y\" \"Y \\<noteq> {}\"\n  shows \"quasi_isometric X Y\"", "theorem quasi_isometric_euclidean:\n  assumes \"quasi_isometric (UNIV::'a::euclidean_space set) (UNIV::'b::euclidean_space set)\"\n  shows \"DIM('a) = DIM('b)\""], "translations": [["", "lemma isometry_on_subset:\n  assumes \"isometry_on X f\"\n          \"Y \\<subseteq> X\"\n  shows \"isometry_on Y f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isometry_on Y f", "using assms"], ["proof (prove)\nusing this:\n  isometry_on X f\n  Y \\<subseteq> X\n\ngoal (1 subgoal):\n 1. isometry_on Y f", "unfolding isometry_on_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>X. \\<forall>y\\<in>X. dist (f x) (f y) = dist x y\n  Y \\<subseteq> X\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>Y. \\<forall>y\\<in>Y. dist (f x) (f y) = dist x y", "by auto"], ["", "lemma isometry_onI [intro?]:\n  assumes \"\\<And>x y. x \\<in> X \\<Longrightarrow> y \\<in> X \\<Longrightarrow> dist (f x) (f y) = dist x y\"\n  shows \"isometry_on X f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isometry_on X f", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> X; ?y \\<in> X\\<rbrakk>\n  \\<Longrightarrow> dist (f ?x) (f ?y) = dist ?x ?y\n\ngoal (1 subgoal):\n 1. isometry_on X f", "unfolding isometry_on_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> X; ?y \\<in> X\\<rbrakk>\n  \\<Longrightarrow> dist (f ?x) (f ?y) = dist ?x ?y\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>X. \\<forall>y\\<in>X. dist (f x) (f y) = dist x y", "by auto"], ["", "lemma isometry_onD:\n  assumes \"isometry_on X f\"\n          \"x \\<in> X\" \"y \\<in> X\"\n  shows \"dist (f x) (f y) = dist x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (f x) (f y) = dist x y", "using assms"], ["proof (prove)\nusing this:\n  isometry_on X f\n  x \\<in> X\n  y \\<in> X\n\ngoal (1 subgoal):\n 1. dist (f x) (f y) = dist x y", "unfolding isometry_on_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>X. \\<forall>y\\<in>X. dist (f x) (f y) = dist x y\n  x \\<in> X\n  y \\<in> X\n\ngoal (1 subgoal):\n 1. dist (f x) (f y) = dist x y", "by auto"], ["", "lemma isometryI [intro?]:\n  assumes \"\\<And>x y. dist (f x) (f y) = dist x y\"\n          \"range f = UNIV\"\n  shows \"isometry f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isometry f", "unfolding isometry_def isometry_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>UNIV.\n        \\<forall>y\\<in>UNIV. dist (f x) (f y) = dist x y) \\<and>\n    surj f", "using assms"], ["proof (prove)\nusing this:\n  dist (f ?x) (f ?y) = dist ?x ?y\n  surj f\n\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>UNIV.\n        \\<forall>y\\<in>UNIV. dist (f x) (f y) = dist x y) \\<and>\n    surj f", "by auto"], ["", "lemma\n  assumes \"isometry_on X f\"\n  shows isometry_on_lipschitz: \"1-lipschitz_on X f\"\n    and isometry_on_uniformly_continuous: \"uniformly_continuous_on X f\"\n    and isometry_on_continuous: \"continuous_on X f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1-lipschitz_on X f &&& uniformly_continuous_on X f &&& continuous_on X f", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. 1-lipschitz_on X f\n 2. uniformly_continuous_on X f\n 3. continuous_on X f", "show \"1-lipschitz_on X f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1-lipschitz_on X f", "apply (rule lipschitz_onI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> dist (f x) (f y) \\<le> 1 * dist x y\n 2. 0 \\<le> 1", "using isometry_onD[OF assms]"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> X; ?y \\<in> X\\<rbrakk>\n  \\<Longrightarrow> dist (f ?x) (f ?y) = dist ?x ?y\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> dist (f x) (f y) \\<le> 1 * dist x y\n 2. 0 \\<le> 1", "by auto"], ["proof (state)\nthis:\n  1-lipschitz_on X f\n\ngoal (2 subgoals):\n 1. uniformly_continuous_on X f\n 2. continuous_on X f", "then"], ["proof (chain)\npicking this:\n  1-lipschitz_on X f", "show \"uniformly_continuous_on X f\" \"continuous_on X f\""], ["proof (prove)\nusing this:\n  1-lipschitz_on X f\n\ngoal (1 subgoal):\n 1. uniformly_continuous_on X f &&& continuous_on X f", "using lipschitz_on_uniformly_continuous lipschitz_on_continuous_on"], ["proof (prove)\nusing this:\n  1-lipschitz_on X f\n  ?L-lipschitz_on ?X ?f \\<Longrightarrow> uniformly_continuous_on ?X ?f\n  ?L-lipschitz_on ?X ?f \\<Longrightarrow> continuous_on ?X ?f\n\ngoal (1 subgoal):\n 1. uniformly_continuous_on X f &&& continuous_on X f", "by auto"], ["proof (state)\nthis:\n  uniformly_continuous_on X f\n  continuous_on X f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma isometryD:\n  assumes \"isometry f\"\n  shows \"isometry_on UNIV f\"\n        \"dist (f x) (f y) = dist x y\"\n        \"range f = UNIV\"\n        \"1-lipschitz_on UNIV f\"\n        \"uniformly_continuous_on UNIV f\"\n        \"continuous_on UNIV f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (isometry_on UNIV f &&& dist (f x) (f y) = dist x y &&& surj f) &&&\n    1-lipschitz_on UNIV f &&& isUCont f &&& continuous_on UNIV f", "using assms"], ["proof (prove)\nusing this:\n  isometry f\n\ngoal (1 subgoal):\n 1. (isometry_on UNIV f &&& dist (f x) (f y) = dist x y &&& surj f) &&&\n    1-lipschitz_on UNIV f &&& isUCont f &&& continuous_on UNIV f", "unfolding isometry_def isometry_on_def"], ["proof (prove)\nusing this:\n  (\\<forall>x\\<in>UNIV.\n      \\<forall>y\\<in>UNIV. dist (f x) (f y) = dist x y) \\<and>\n  surj f\n\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>UNIV.\n        \\<forall>y\\<in>UNIV. dist (f x) (f y) = dist x y &&&\n     dist (f x) (f y) = dist x y &&& surj f) &&&\n    1-lipschitz_on UNIV f &&& isUCont f &&& continuous_on UNIV f", "apply auto"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<forall>x y. dist (f x) (f y) = dist x y; surj f\\<rbrakk>\n    \\<Longrightarrow> 1-lipschitz_on UNIV f\n 2. \\<lbrakk>\\<forall>x y. dist (f x) (f y) = dist x y; surj f\\<rbrakk>\n    \\<Longrightarrow> isUCont f\n 3. \\<lbrakk>\\<forall>x y. dist (f x) (f y) = dist x y; surj f\\<rbrakk>\n    \\<Longrightarrow> continuous_on UNIV f", "using isometry_on_lipschitz isometry_on_uniformly_continuous isometry_on_continuous assms"], ["proof (prove)\nusing this:\n  isometry_on ?X ?f \\<Longrightarrow> 1-lipschitz_on ?X ?f\n  isometry_on ?X ?f \\<Longrightarrow> uniformly_continuous_on ?X ?f\n  isometry_on ?X ?f \\<Longrightarrow> continuous_on ?X ?f\n  isometry f\n\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<forall>x y. dist (f x) (f y) = dist x y; surj f\\<rbrakk>\n    \\<Longrightarrow> 1-lipschitz_on UNIV f\n 2. \\<lbrakk>\\<forall>x y. dist (f x) (f y) = dist x y; surj f\\<rbrakk>\n    \\<Longrightarrow> isUCont f\n 3. \\<lbrakk>\\<forall>x y. dist (f x) (f y) = dist x y; surj f\\<rbrakk>\n    \\<Longrightarrow> continuous_on UNIV f", "unfolding isometry_def"], ["proof (prove)\nusing this:\n  isometry_on ?X ?f \\<Longrightarrow> 1-lipschitz_on ?X ?f\n  isometry_on ?X ?f \\<Longrightarrow> uniformly_continuous_on ?X ?f\n  isometry_on ?X ?f \\<Longrightarrow> continuous_on ?X ?f\n  isometry_on UNIV f \\<and> surj f\n\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<forall>x y. dist (f x) (f y) = dist x y; surj f\\<rbrakk>\n    \\<Longrightarrow> 1-lipschitz_on UNIV f\n 2. \\<lbrakk>\\<forall>x y. dist (f x) (f y) = dist x y; surj f\\<rbrakk>\n    \\<Longrightarrow> isUCont f\n 3. \\<lbrakk>\\<forall>x y. dist (f x) (f y) = dist x y; surj f\\<rbrakk>\n    \\<Longrightarrow> continuous_on UNIV f", "by blast+"], ["", "lemma isometry_on_injective:\n  assumes \"isometry_on X f\"\n  shows \"inj_on f X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on f X", "using assms inj_on_def isometry_on_def"], ["proof (prove)\nusing this:\n  isometry_on X f\n  inj_on ?f ?A =\n  (\\<forall>x\\<in>?A.\n      \\<forall>y\\<in>?A. ?f x = ?f y \\<longrightarrow> x = y)\n  isometry_on ?X ?f =\n  (\\<forall>x\\<in>?X. \\<forall>y\\<in>?X. dist (?f x) (?f y) = dist x y)\n\ngoal (1 subgoal):\n 1. inj_on f X", "by force"], ["", "lemma isometry_on_compose:\n  assumes \"isometry_on X f\"\n          \"isometry_on (f`X) g\"\n  shows \"isometry_on X (\\<lambda>x. g(f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isometry_on X (\\<lambda>x. g (f x))", "using assms"], ["proof (prove)\nusing this:\n  isometry_on X f\n  isometry_on (f ` X) g\n\ngoal (1 subgoal):\n 1. isometry_on X (\\<lambda>x. g (f x))", "unfolding isometry_on_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>X. \\<forall>y\\<in>X. dist (f x) (f y) = dist x y\n  \\<forall>x\\<in>f ` X. \\<forall>y\\<in>f ` X. dist (g x) (g y) = dist x y\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>X. \\<forall>y\\<in>X. dist (g (f x)) (g (f y)) = dist x y", "by auto"], ["", "lemma isometry_on_cong:\n  assumes \"isometry_on X f\"\n          \"\\<And>x. x \\<in> X \\<Longrightarrow> g x = f x\"\n  shows \"isometry_on X g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isometry_on X g", "using assms"], ["proof (prove)\nusing this:\n  isometry_on X f\n  ?x \\<in> X \\<Longrightarrow> g ?x = f ?x\n\ngoal (1 subgoal):\n 1. isometry_on X g", "unfolding isometry_on_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>X. \\<forall>y\\<in>X. dist (f x) (f y) = dist x y\n  ?x \\<in> X \\<Longrightarrow> g ?x = f ?x\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>X. \\<forall>y\\<in>X. dist (g x) (g y) = dist x y", "by auto"], ["", "lemma isometry_on_inverse:\n  assumes \"isometry_on X f\"\n  shows \"isometry_on (f`X) (inv_into X f)\"\n        \"\\<And>x. x \\<in> X \\<Longrightarrow> (inv_into X f) (f x) = x\"\n        \"\\<And>y. y \\<in> f`X \\<Longrightarrow> f (inv_into X f y) = y\"\n        \"bij_betw f X (f`X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (isometry_on (f ` X) (inv_into X f) &&&\n     (\\<And>x. x \\<in> X \\<Longrightarrow> inv_into X f (f x) = x)) &&&\n    (\\<And>y. y \\<in> f ` X \\<Longrightarrow> f (inv_into X f y) = y) &&&\n    bij_betw f X (f ` X)", "proof -"], ["proof (state)\ngoal (4 subgoals):\n 1. isometry_on (f ` X) (inv_into X f)\n 2. \\<And>x. x \\<in> X \\<Longrightarrow> inv_into X f (f x) = x\n 3. \\<And>y. y \\<in> f ` X \\<Longrightarrow> f (inv_into X f y) = y\n 4. bij_betw f X (f ` X)", "show *: \"bij_betw f X (f`X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw f X (f ` X)", "using assms"], ["proof (prove)\nusing this:\n  isometry_on X f\n\ngoal (1 subgoal):\n 1. bij_betw f X (f ` X)", "unfolding bij_betw_def inj_on_def isometry_on_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>X. \\<forall>y\\<in>X. dist (f x) (f y) = dist x y\n\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>X.\n        \\<forall>y\\<in>X. f x = f y \\<longrightarrow> x = y) \\<and>\n    f ` X = f ` X", "by force"], ["proof (state)\nthis:\n  bij_betw f X (f ` X)\n\ngoal (3 subgoals):\n 1. isometry_on (f ` X) (inv_into X f)\n 2. \\<And>x. x \\<in> X \\<Longrightarrow> inv_into X f (f x) = x\n 3. \\<And>y. y \\<in> f ` X \\<Longrightarrow> f (inv_into X f y) = y", "show \"isometry_on (f`X) (inv_into X f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isometry_on (f ` X) (inv_into X f)", "using assms"], ["proof (prove)\nusing this:\n  isometry_on X f\n\ngoal (1 subgoal):\n 1. isometry_on (f ` X) (inv_into X f)", "unfolding isometry_on_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>X. \\<forall>y\\<in>X. dist (f x) (f y) = dist x y\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>f ` X.\n       \\<forall>y\\<in>f ` X.\n          dist (inv_into X f x) (inv_into X f y) = dist x y", "by (auto) (metis (mono_tags, lifting) dist_eq_0_iff inj_on_def inv_into_f_f)"], ["proof (state)\nthis:\n  isometry_on (f ` X) (inv_into X f)\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> X \\<Longrightarrow> inv_into X f (f x) = x\n 2. \\<And>y. y \\<in> f ` X \\<Longrightarrow> f (inv_into X f y) = y", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> X \\<Longrightarrow> inv_into X f (f x) = x\n 2. \\<And>y. y \\<in> f ` X \\<Longrightarrow> f (inv_into X f y) = y", "assume \"x \\<in> X\""], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> X \\<Longrightarrow> inv_into X f (f x) = x\n 2. \\<And>y. y \\<in> f ` X \\<Longrightarrow> f (inv_into X f y) = y", "then"], ["proof (chain)\npicking this:\n  x \\<in> X", "show \"(inv_into X f) (f x) = x\""], ["proof (prove)\nusing this:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. inv_into X f (f x) = x", "using *"], ["proof (prove)\nusing this:\n  x \\<in> X\n  bij_betw f X (f ` X)\n\ngoal (1 subgoal):\n 1. inv_into X f (f x) = x", "by (simp add: bij_betw_def)"], ["proof (state)\nthis:\n  inv_into X f (f x) = x\n\ngoal (1 subgoal):\n 1. \\<And>y. y \\<in> f ` X \\<Longrightarrow> f (inv_into X f y) = y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y. y \\<in> f ` X \\<Longrightarrow> f (inv_into X f y) = y", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y. y \\<in> f ` X \\<Longrightarrow> f (inv_into X f y) = y", "assume \"y \\<in> f`X\""], ["proof (state)\nthis:\n  y \\<in> f ` X\n\ngoal (1 subgoal):\n 1. \\<And>y. y \\<in> f ` X \\<Longrightarrow> f (inv_into X f y) = y", "then"], ["proof (chain)\npicking this:\n  y \\<in> f ` X", "show \"f (inv_into X f y) = y\""], ["proof (prove)\nusing this:\n  y \\<in> f ` X\n\ngoal (1 subgoal):\n 1. f (inv_into X f y) = y", "by (simp add: f_inv_into_f)"], ["proof (state)\nthis:\n  f (inv_into X f y) = y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma isometry_inverse:\n  assumes \"isometry f\"\n  shows \"isometry (inv f)\"\n        \"bij f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isometry (inv f) &&& bij f", "using isometry_on_inverse[OF isometryD(1)[OF assms]] isometryD(3)[OF assms]"], ["proof (prove)\nusing this:\n  isometry_on (range f) (inv f)\n  ?x \\<in> UNIV \\<Longrightarrow> inv f (f ?x) = ?x\n  ?y \\<in> range f \\<Longrightarrow> f (inv f ?y) = ?y\n  bij_betw f UNIV (range f)\n  surj f\n\ngoal (1 subgoal):\n 1. isometry (inv f) &&& bij f", "unfolding isometry_def"], ["proof (prove)\nusing this:\n  isometry_on (range f) (inv f)\n  ?x \\<in> UNIV \\<Longrightarrow> inv f (f ?x) = ?x\n  ?y \\<in> range f \\<Longrightarrow> f (inv f ?y) = ?y\n  bij_betw f UNIV (range f)\n  surj f\n\ngoal (1 subgoal):\n 1. isometry_on UNIV (inv f) \\<and> surj (inv f) &&& bij f", "by (auto simp add: bij_imp_bij_inv bij_is_surj)"], ["", "lemma isometry_on_homeomorphism:\n  assumes \"isometry_on X f\"\n  shows \"homeomorphism X (f`X) f (inv_into X f)\"\n        \"homeomorphism_on X f\"\n        \"X homeomorphic f`X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. homeomorphism X (f ` X) f (inv_into X f) &&&\n    homeomorphism_on X f &&& X homeomorphic f ` X", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. homeomorphism X (f ` X) f (inv_into X f)\n 2. homeomorphism_on X f\n 3. X homeomorphic f ` X", "show *: \"homeomorphism X (f`X) f (inv_into X f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. homeomorphism X (f ` X) f (inv_into X f)", "apply (rule homeomorphismI)"], ["proof (prove)\ngoal (6 subgoals):\n 1. continuous_on X f\n 2. continuous_on (f ` X) (inv_into X f)\n 3. f ` X \\<subseteq> f ` X\n 4. inv_into X f ` f ` X \\<subseteq> X\n 5. \\<And>x. x \\<in> X \\<Longrightarrow> inv_into X f (f x) = x\n 6. \\<And>y. y \\<in> f ` X \\<Longrightarrow> f (inv_into X f y) = y", "using uniformly_continuous_imp_continuous[OF isometry_on_uniformly_continuous]\n    isometry_on_inverse[OF assms] assms"], ["proof (prove)\nusing this:\n  isometry_on ?s ?f \\<Longrightarrow> continuous_on ?s ?f\n  isometry_on (f ` X) (inv_into X f)\n  ?x \\<in> X \\<Longrightarrow> inv_into X f (f ?x) = ?x\n  ?y \\<in> f ` X \\<Longrightarrow> f (inv_into X f ?y) = ?y\n  bij_betw f X (f ` X)\n  isometry_on X f\n\ngoal (6 subgoals):\n 1. continuous_on X f\n 2. continuous_on (f ` X) (inv_into X f)\n 3. f ` X \\<subseteq> f ` X\n 4. inv_into X f ` f ` X \\<subseteq> X\n 5. \\<And>x. x \\<in> X \\<Longrightarrow> inv_into X f (f x) = x\n 6. \\<And>y. y \\<in> f ` X \\<Longrightarrow> f (inv_into X f y) = y", "by auto"], ["proof (state)\nthis:\n  homeomorphism X (f ` X) f (inv_into X f)\n\ngoal (2 subgoals):\n 1. homeomorphism_on X f\n 2. X homeomorphic f ` X", "then"], ["proof (chain)\npicking this:\n  homeomorphism X (f ` X) f (inv_into X f)", "show \"X homeomorphic f`X\""], ["proof (prove)\nusing this:\n  homeomorphism X (f ` X) f (inv_into X f)\n\ngoal (1 subgoal):\n 1. X homeomorphic f ` X", "unfolding homeomorphic_def"], ["proof (prove)\nusing this:\n  homeomorphism X (f ` X) f (inv_into X f)\n\ngoal (1 subgoal):\n 1. \\<exists>fa g. homeomorphism X (f ` X) fa g", "by auto"], ["proof (state)\nthis:\n  X homeomorphic f ` X\n\ngoal (1 subgoal):\n 1. homeomorphism_on X f", "show \"homeomorphism_on X f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. homeomorphism_on X f", "unfolding homeomorphism_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ex (homeomorphism X (f ` X) f)", "using *"], ["proof (prove)\nusing this:\n  homeomorphism X (f ` X) f (inv_into X f)\n\ngoal (1 subgoal):\n 1. Ex (homeomorphism X (f ` X) f)", "by auto"], ["proof (state)\nthis:\n  homeomorphism_on X f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma isometry_homeomorphism:\n  fixes f::\"('a::metric_space) \\<Rightarrow> ('b::metric_space)\"\n  assumes \"isometry f\"\n  shows \"homeomorphism UNIV UNIV f (inv f)\"\n        \"(UNIV::'a set) homeomorphic (UNIV::'b set)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. homeomorphism UNIV UNIV f (inv f) &&& UNIV homeomorphic UNIV", "using isometry_on_homeomorphism[OF isometryD(1)[OF assms]] isometryD(3)[OF assms]"], ["proof (prove)\nusing this:\n  homeomorphism UNIV (range f) f (inv f)\n  homeomorphism_on UNIV f\n  UNIV homeomorphic range f\n  surj f\n\ngoal (1 subgoal):\n 1. homeomorphism UNIV UNIV f (inv f) &&& UNIV homeomorphic UNIV", "by auto"], ["", "lemma isometry_on_closure:\n  assumes \"isometry_on X f\"\n          \"continuous_on (closure X) f\"\n  shows \"isometry_on (closure X) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isometry_on (closure X) f", "proof (rule isometry_onI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> closure X; y \\<in> closure X\\<rbrakk>\n       \\<Longrightarrow> dist (f x) (f y) = dist x y", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> closure X; y \\<in> closure X\\<rbrakk>\n       \\<Longrightarrow> dist (f x) (f y) = dist x y", "assume \"x \\<in> closure X\" \"y \\<in> closure X\""], ["proof (state)\nthis:\n  x \\<in> closure X\n  y \\<in> closure X\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> closure X; y \\<in> closure X\\<rbrakk>\n       \\<Longrightarrow> dist (f x) (f y) = dist x y", "obtain u v::\"nat \\<Rightarrow> 'a\" where *: \"\\<And>n. u n \\<in> X\" \"u \\<longlonglongrightarrow> x\"\n                                   \"\\<And>n. v n \\<in> X\" \"v \\<longlonglongrightarrow> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>\\<And>n. u n \\<in> X; u \\<longlonglongrightarrow> x;\n         \\<And>n. v n \\<in> X; v \\<longlonglongrightarrow> y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>x \\<in> closure X\\<close> \\<open>y \\<in> closure X\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> closure X\n  y \\<in> closure X\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>\\<And>n. u n \\<in> X; u \\<longlonglongrightarrow> x;\n         \\<And>n. v n \\<in> X; v \\<longlonglongrightarrow> y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding closure_sequential"], ["proof (prove)\nusing this:\n  \\<exists>xa.\n     (\\<forall>n. xa n \\<in> X) \\<and> xa \\<longlonglongrightarrow> x\n  \\<exists>x. (\\<forall>n. x n \\<in> X) \\<and> x \\<longlonglongrightarrow> y\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>\\<And>n. u n \\<in> X; u \\<longlonglongrightarrow> x;\n         \\<And>n. v n \\<in> X; v \\<longlonglongrightarrow> y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  u ?n \\<in> X\n  u \\<longlonglongrightarrow> x\n  v ?n \\<in> X\n  v \\<longlonglongrightarrow> y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> closure X; y \\<in> closure X\\<rbrakk>\n       \\<Longrightarrow> dist (f x) (f y) = dist x y", "have \"(\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f x", "using *(1) *(2) \\<open>x \\<in> closure X\\<close> \\<open>continuous_on (closure X) f\\<close>"], ["proof (prove)\nusing this:\n  u ?n \\<in> X\n  u \\<longlonglongrightarrow> x\n  x \\<in> closure X\n  continuous_on (closure X) f\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f x", "unfolding comp_def continuous_on_closure_sequentially[of X f]"], ["proof (prove)\nusing this:\n  u ?n \\<in> X\n  u \\<longlonglongrightarrow> x\n  x \\<in> closure X\n  \\<forall>x a.\n     a \\<in> closure X \\<and>\n     (\\<forall>n. x n \\<in> X) \\<and>\n     x \\<longlonglongrightarrow> a \\<longrightarrow>\n     (\\<lambda>xa. f (x xa)) \\<longlonglongrightarrow> f a\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f x", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f x\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> closure X; y \\<in> closure X\\<rbrakk>\n       \\<Longrightarrow> dist (f x) (f y) = dist x y", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f x\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> closure X; y \\<in> closure X\\<rbrakk>\n       \\<Longrightarrow> dist (f x) (f y) = dist x y", "have \"(\\<lambda>n. f (v n)) \\<longlonglongrightarrow> f y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (v n)) \\<longlonglongrightarrow> f y", "using *(3) *(4) \\<open>y \\<in> closure X\\<close> \\<open>continuous_on (closure X) f\\<close>"], ["proof (prove)\nusing this:\n  v ?n \\<in> X\n  v \\<longlonglongrightarrow> y\n  y \\<in> closure X\n  continuous_on (closure X) f\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (v n)) \\<longlonglongrightarrow> f y", "unfolding comp_def continuous_on_closure_sequentially[of X f]"], ["proof (prove)\nusing this:\n  v ?n \\<in> X\n  v \\<longlonglongrightarrow> y\n  y \\<in> closure X\n  \\<forall>x a.\n     a \\<in> closure X \\<and>\n     (\\<forall>n. x n \\<in> X) \\<and>\n     x \\<longlonglongrightarrow> a \\<longrightarrow>\n     (\\<lambda>xa. f (x xa)) \\<longlonglongrightarrow> f a\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (v n)) \\<longlonglongrightarrow> f y", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n. f (v n)) \\<longlonglongrightarrow> f y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> closure X; y \\<in> closure X\\<rbrakk>\n       \\<Longrightarrow> dist (f x) (f y) = dist x y", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f x\n  (\\<lambda>n. f (v n)) \\<longlonglongrightarrow> f y", "have \"(\\<lambda>n. dist (f (u n)) (f (v n))) \\<longlonglongrightarrow> dist (f x) (f y)\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f x\n  (\\<lambda>n. f (v n)) \\<longlonglongrightarrow> f y\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. dist (f (u n)) (f (v n)))\n    \\<longlonglongrightarrow> dist (f x) (f y)", "by (simp add: tendsto_dist)"], ["proof (state)\nthis:\n  (\\<lambda>n. dist (f (u n)) (f (v n)))\n  \\<longlonglongrightarrow> dist (f x) (f y)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> closure X; y \\<in> closure X\\<rbrakk>\n       \\<Longrightarrow> dist (f x) (f y) = dist x y", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n. dist (f (u n)) (f (v n)))\n  \\<longlonglongrightarrow> dist (f x) (f y)", "have \"(\\<lambda>n. dist (u n) (v n)) \\<longlonglongrightarrow> dist (f x) (f y)\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. dist (f (u n)) (f (v n)))\n  \\<longlonglongrightarrow> dist (f x) (f y)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. dist (u n) (v n))\n    \\<longlonglongrightarrow> dist (f x) (f y)", "using assms(1) *(1) *(3)"], ["proof (prove)\nusing this:\n  (\\<lambda>n. dist (f (u n)) (f (v n)))\n  \\<longlonglongrightarrow> dist (f x) (f y)\n  isometry_on X f\n  u ?n \\<in> X\n  v ?n \\<in> X\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. dist (u n) (v n))\n    \\<longlonglongrightarrow> dist (f x) (f y)", "unfolding isometry_on_def"], ["proof (prove)\nusing this:\n  (\\<lambda>n. dist (f (u n)) (f (v n)))\n  \\<longlonglongrightarrow> dist (f x) (f y)\n  \\<forall>x\\<in>X. \\<forall>y\\<in>X. dist (f x) (f y) = dist x y\n  u ?n \\<in> X\n  v ?n \\<in> X\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. dist (u n) (v n))\n    \\<longlonglongrightarrow> dist (f x) (f y)", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n. dist (u n) (v n)) \\<longlonglongrightarrow> dist (f x) (f y)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> closure X; y \\<in> closure X\\<rbrakk>\n       \\<Longrightarrow> dist (f x) (f y) = dist x y", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>n. dist (u n) (v n)) \\<longlonglongrightarrow> dist (f x) (f y)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> closure X; y \\<in> closure X\\<rbrakk>\n       \\<Longrightarrow> dist (f x) (f y) = dist x y", "have \"(\\<lambda>n. dist (u n) (v n)) \\<longlonglongrightarrow> dist x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. dist (u n) (v n)) \\<longlonglongrightarrow> dist x y", "using *(2) *(4)"], ["proof (prove)\nusing this:\n  u \\<longlonglongrightarrow> x\n  v \\<longlonglongrightarrow> y\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. dist (u n) (v n)) \\<longlonglongrightarrow> dist x y", "by (simp add: tendsto_dist)"], ["proof (state)\nthis:\n  (\\<lambda>n. dist (u n) (v n)) \\<longlonglongrightarrow> dist x y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> closure X; y \\<in> closure X\\<rbrakk>\n       \\<Longrightarrow> dist (f x) (f y) = dist x y", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>n. dist (u n) (v n)) \\<longlonglongrightarrow> dist (f x) (f y)\n  (\\<lambda>n. dist (u n) (v n)) \\<longlonglongrightarrow> dist x y", "show \"dist (f x) (f y) = dist x y\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. dist (u n) (v n)) \\<longlonglongrightarrow> dist (f x) (f y)\n  (\\<lambda>n. dist (u n) (v n)) \\<longlonglongrightarrow> dist x y\n\ngoal (1 subgoal):\n 1. dist (f x) (f y) = dist x y", "using LIMSEQ_unique"], ["proof (prove)\nusing this:\n  (\\<lambda>n. dist (u n) (v n)) \\<longlonglongrightarrow> dist (f x) (f y)\n  (\\<lambda>n. dist (u n) (v n)) \\<longlonglongrightarrow> dist x y\n  \\<lbrakk>?X \\<longlonglongrightarrow> ?a;\n   ?X \\<longlonglongrightarrow> ?b\\<rbrakk>\n  \\<Longrightarrow> ?a = ?b\n\ngoal (1 subgoal):\n 1. dist (f x) (f y) = dist x y", "by auto"], ["proof (state)\nthis:\n  dist (f x) (f y) = dist x y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma isometry_extend_closure:\n  fixes f::\"('a::metric_space) \\<Rightarrow> ('b::complete_space)\"\n  assumes \"isometry_on X f\"\n  shows \"\\<exists>g. isometry_on (closure X) g \\<and> (\\<forall>x\\<in>X. g x = f x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>g.\n       isometry_on (closure X) g \\<and> (\\<forall>x\\<in>X. g x = f x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>g.\n       isometry_on (closure X) g \\<and> (\\<forall>x\\<in>X. g x = f x)", "obtain g where g: \"\\<And>x. x \\<in> X \\<Longrightarrow> g x = f x\" \"uniformly_continuous_on (closure X) g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>\\<And>x. x \\<in> X \\<Longrightarrow> g x = f x;\n         uniformly_continuous_on (closure X) g\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using uniformly_continuous_on_extension_on_closure[OF isometry_on_uniformly_continuous[OF assms]]"], ["proof (prove)\nusing this:\n  (\\<And>g.\n      \\<lbrakk>uniformly_continuous_on (closure X) g;\n       \\<And>x. x \\<in> X \\<Longrightarrow> f x = g x;\n       \\<And>Y h x.\n          \\<lbrakk>X \\<subseteq> Y; Y \\<subseteq> closure X;\n           continuous_on Y h;\n           \\<And>x. x \\<in> X \\<Longrightarrow> f x = h x;\n           x \\<in> Y\\<rbrakk>\n          \\<Longrightarrow> h x = g x\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>\\<And>x. x \\<in> X \\<Longrightarrow> g x = f x;\n         uniformly_continuous_on (closure X) g\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  ?x \\<in> X \\<Longrightarrow> g ?x = f ?x\n  uniformly_continuous_on (closure X) g\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       isometry_on (closure X) g \\<and> (\\<forall>x\\<in>X. g x = f x)", "have \"isometry_on (closure X) g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isometry_on (closure X) g", "apply (rule isometry_on_closure, rule isometry_on_cong[OF assms])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> X \\<Longrightarrow> g x = f x\n 2. continuous_on (closure X) g", "using g uniformly_continuous_imp_continuous[OF g(2)]"], ["proof (prove)\nusing this:\n  ?x \\<in> X \\<Longrightarrow> g ?x = f ?x\n  uniformly_continuous_on (closure X) g\n  continuous_on (closure X) g\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> X \\<Longrightarrow> g x = f x\n 2. continuous_on (closure X) g", "by auto"], ["proof (state)\nthis:\n  isometry_on (closure X) g\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       isometry_on (closure X) g \\<and> (\\<forall>x\\<in>X. g x = f x)", "then"], ["proof (chain)\npicking this:\n  isometry_on (closure X) g", "show ?thesis"], ["proof (prove)\nusing this:\n  isometry_on (closure X) g\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       isometry_on (closure X) g \\<and> (\\<forall>x\\<in>X. g x = f x)", "using g(1)"], ["proof (prove)\nusing this:\n  isometry_on (closure X) g\n  ?x \\<in> X \\<Longrightarrow> g ?x = f ?x\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       isometry_on (closure X) g \\<and> (\\<forall>x\\<in>X. g x = f x)", "by auto"], ["proof (state)\nthis:\n  \\<exists>g. isometry_on (closure X) g \\<and> (\\<forall>x\\<in>X. g x = f x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma isometry_on_complete_image:\n  assumes \"isometry_on X f\"\n          \"complete X\"\n  shows \"complete (f`X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complete (f ` X)", "proof (rule completeI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>fa.\n       \\<lbrakk>\\<forall>n. fa n \\<in> f ` X; Cauchy fa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>f ` X.\n                            fa \\<longlonglongrightarrow> l", "fix u :: \"nat \\<Rightarrow> 'b\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>fa.\n       \\<lbrakk>\\<forall>n. fa n \\<in> f ` X; Cauchy fa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>f ` X.\n                            fa \\<longlonglongrightarrow> l", "assume u: \"\\<forall>n. u n \\<in> f`X\" \"Cauchy u\""], ["proof (state)\nthis:\n  \\<forall>n. u n \\<in> f ` X\n  Cauchy u\n\ngoal (1 subgoal):\n 1. \\<And>fa.\n       \\<lbrakk>\\<forall>n. fa n \\<in> f ` X; Cauchy fa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>f ` X.\n                            fa \\<longlonglongrightarrow> l", "define v where \"v = (\\<lambda>n. inv_into X f (u n))\""], ["proof (state)\nthis:\n  v = (\\<lambda>n. inv_into X f (u n))\n\ngoal (1 subgoal):\n 1. \\<And>fa.\n       \\<lbrakk>\\<forall>n. fa n \\<in> f ` X; Cauchy fa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>f ` X.\n                            fa \\<longlonglongrightarrow> l", "have \"v n \\<in> X\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. v n \\<in> X", "unfolding v_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_into X f (u n) \\<in> X", "by (simp add: inv_into_into u(1))"], ["proof (state)\nthis:\n  v ?n \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>fa.\n       \\<lbrakk>\\<forall>n. fa n \\<in> f ` X; Cauchy fa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>f ` X.\n                            fa \\<longlonglongrightarrow> l", "have \"dist (v n) (v m) = dist (u n) (u m)\" for m n"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (v n) (v m) = dist (u n) (u m)", "using u(1) isometry_on_inverse[OF \\<open>isometry_on X f\\<close>]"], ["proof (prove)\nusing this:\n  \\<forall>n. u n \\<in> f ` X\n  isometry_on (f ` X) (inv_into X f)\n  ?x \\<in> X \\<Longrightarrow> inv_into X f (f ?x) = ?x\n  ?y \\<in> f ` X \\<Longrightarrow> f (inv_into X f ?y) = ?y\n  bij_betw f X (f ` X)\n\ngoal (1 subgoal):\n 1. dist (v n) (v m) = dist (u n) (u m)", "unfolding isometry_on_def v_def"], ["proof (prove)\nusing this:\n  \\<forall>n. u n \\<in> f ` X\n  \\<forall>x\\<in>f ` X.\n     \\<forall>y\\<in>f ` X. dist (inv_into X f x) (inv_into X f y) = dist x y\n  ?x \\<in> X \\<Longrightarrow> inv_into X f (f ?x) = ?x\n  ?y \\<in> f ` X \\<Longrightarrow> f (inv_into X f ?y) = ?y\n  bij_betw f X (f ` X)\n\ngoal (1 subgoal):\n 1. dist (inv_into X f (u n)) (inv_into X f (u m)) = dist (u n) (u m)", "by (auto simp add: inv_into_into)"], ["proof (state)\nthis:\n  dist (v ?n) (v ?m) = dist (u ?n) (u ?m)\n\ngoal (1 subgoal):\n 1. \\<And>fa.\n       \\<lbrakk>\\<forall>n. fa n \\<in> f ` X; Cauchy fa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>f ` X.\n                            fa \\<longlonglongrightarrow> l", "then"], ["proof (chain)\npicking this:\n  dist (v ?n) (v ?m) = dist (u ?n) (u ?m)", "have \"Cauchy v\""], ["proof (prove)\nusing this:\n  dist (v ?n) (v ?m) = dist (u ?n) (u ?m)\n\ngoal (1 subgoal):\n 1. Cauchy v", "using u(2)"], ["proof (prove)\nusing this:\n  dist (v ?n) (v ?m) = dist (u ?n) (u ?m)\n  Cauchy u\n\ngoal (1 subgoal):\n 1. Cauchy v", "unfolding Cauchy_def"], ["proof (prove)\nusing this:\n  dist (v ?n) (v ?m) = dist (u ?n) (u ?m)\n  \\<forall>e>0.\n     \\<exists>M. \\<forall>m\\<ge>M. \\<forall>n\\<ge>M. dist (u m) (u n) < e\n\ngoal (1 subgoal):\n 1. \\<forall>e>0.\n       \\<exists>M. \\<forall>m\\<ge>M. \\<forall>n\\<ge>M. dist (v m) (v n) < e", "by auto"], ["proof (state)\nthis:\n  Cauchy v\n\ngoal (1 subgoal):\n 1. \\<And>fa.\n       \\<lbrakk>\\<forall>n. fa n \\<in> f ` X; Cauchy fa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>f ` X.\n                            fa \\<longlonglongrightarrow> l", "obtain l where \"l \\<in> X\" \"v \\<longlonglongrightarrow> l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>l \\<in> X; v \\<longlonglongrightarrow> l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "apply (rule completeE[OF \\<open>complete X\\<close> _ \\<open>Cauchy v\\<close>])"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<And>l.\n        \\<lbrakk>l \\<in> X; v \\<longlonglongrightarrow> l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    \\<forall>n. v n \\<in> X\n 2. \\<And>l.\n       \\<lbrakk>\\<And>l.\n                   \\<lbrakk>l \\<in> X;\n                    v \\<longlonglongrightarrow> l\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        l \\<in> X; v \\<longlonglongrightarrow> l\\<rbrakk>\n       \\<Longrightarrow> thesis", "using \\<open>\\<And>n. v n \\<in> X\\<close>"], ["proof (prove)\nusing this:\n  v ?n \\<in> X\n\ngoal (2 subgoals):\n 1. (\\<And>l.\n        \\<lbrakk>l \\<in> X; v \\<longlonglongrightarrow> l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    \\<forall>n. v n \\<in> X\n 2. \\<And>l.\n       \\<lbrakk>\\<And>l.\n                   \\<lbrakk>l \\<in> X;\n                    v \\<longlonglongrightarrow> l\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        l \\<in> X; v \\<longlonglongrightarrow> l\\<rbrakk>\n       \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  l \\<in> X\n  v \\<longlonglongrightarrow> l\n\ngoal (1 subgoal):\n 1. \\<And>fa.\n       \\<lbrakk>\\<forall>n. fa n \\<in> f ` X; Cauchy fa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>f ` X.\n                            fa \\<longlonglongrightarrow> l", "have \"(\\<lambda>n. f (v n)) \\<longlonglongrightarrow> f l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (v n)) \\<longlonglongrightarrow> f l", "apply (rule continuous_on_tendsto_compose[OF isometry_on_continuous[OF \\<open>isometry_on X f\\<close>]])"], ["proof (prove)\ngoal (3 subgoals):\n 1. v \\<longlonglongrightarrow> l\n 2. l \\<in> X\n 3. \\<forall>\\<^sub>F n in sequentially. v n \\<in> X", "using \\<open>\\<And>n. v n \\<in> X\\<close> \\<open>l \\<in> X\\<close> \\<open>v \\<longlonglongrightarrow> l\\<close>"], ["proof (prove)\nusing this:\n  v ?n \\<in> X\n  l \\<in> X\n  v \\<longlonglongrightarrow> l\n\ngoal (3 subgoals):\n 1. v \\<longlonglongrightarrow> l\n 2. l \\<in> X\n 3. \\<forall>\\<^sub>F n in sequentially. v n \\<in> X", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n. f (v n)) \\<longlonglongrightarrow> f l\n\ngoal (1 subgoal):\n 1. \\<And>fa.\n       \\<lbrakk>\\<forall>n. fa n \\<in> f ` X; Cauchy fa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>f ` X.\n                            fa \\<longlonglongrightarrow> l", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>n. f (v n)) \\<longlonglongrightarrow> f l\n\ngoal (1 subgoal):\n 1. \\<And>fa.\n       \\<lbrakk>\\<forall>n. fa n \\<in> f ` X; Cauchy fa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>f ` X.\n                            fa \\<longlonglongrightarrow> l", "have \"f(v n) = u n\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. f (v n) = u n", "unfolding v_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. f (inv_into X f (u n)) = u n", "by (simp add: f_inv_into_f u(1))"], ["proof (state)\nthis:\n  f (v ?n) = u ?n\n\ngoal (1 subgoal):\n 1. \\<And>fa.\n       \\<lbrakk>\\<forall>n. fa n \\<in> f ` X; Cauchy fa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>f ` X.\n                            fa \\<longlonglongrightarrow> l", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>n. f (v n)) \\<longlonglongrightarrow> f l\n  f (v ?n) = u ?n", "have \"u \\<longlonglongrightarrow> f l\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. f (v n)) \\<longlonglongrightarrow> f l\n  f (v ?n) = u ?n\n\ngoal (1 subgoal):\n 1. u \\<longlonglongrightarrow> f l", "by auto"], ["proof (state)\nthis:\n  u \\<longlonglongrightarrow> f l\n\ngoal (1 subgoal):\n 1. \\<And>fa.\n       \\<lbrakk>\\<forall>n. fa n \\<in> f ` X; Cauchy fa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l\\<in>f ` X.\n                            fa \\<longlonglongrightarrow> l", "then"], ["proof (chain)\npicking this:\n  u \\<longlonglongrightarrow> f l", "show \"\\<exists>m \\<in> f`X. u \\<longlonglongrightarrow> m\""], ["proof (prove)\nusing this:\n  u \\<longlonglongrightarrow> f l\n\ngoal (1 subgoal):\n 1. \\<exists>m\\<in>f ` X. u \\<longlonglongrightarrow> m", "using \\<open>l \\<in> X\\<close>"], ["proof (prove)\nusing this:\n  u \\<longlonglongrightarrow> f l\n  l \\<in> X\n\ngoal (1 subgoal):\n 1. \\<exists>m\\<in>f ` X. u \\<longlonglongrightarrow> m", "by auto"], ["proof (state)\nthis:\n  \\<exists>m\\<in>f ` X. u \\<longlonglongrightarrow> m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma isometry_on_id [simp]:\n  \"isometry_on A (\\<lambda>x. x)\"\n  \"isometry_on A id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isometry_on A (\\<lambda>x. x) &&& isometry_on A id", "unfolding isometry_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>A. \\<forall>y\\<in>A. dist x y = dist x y &&&\n    \\<forall>x\\<in>A. \\<forall>y\\<in>A. dist (id x) (id y) = dist x y", "by auto"], ["", "lemma isometry_on_add [simp]:\n  \"isometry_on A (\\<lambda>x. x + (t::'a::real_normed_vector))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isometry_on A (\\<lambda>x. x + t)", "unfolding isometry_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>A. \\<forall>y\\<in>A. dist (x + t) (y + t) = dist x y", "by auto"], ["", "lemma isometry_on_minus [simp]:\n  \"isometry_on A (\\<lambda>(x::'a::real_normed_vector). -x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isometry_on A uminus", "unfolding isometry_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>A. \\<forall>y\\<in>A. dist (- x) (- y) = dist x y", "by (auto simp add: dist_minus)"], ["", "lemma isometry_on_diff [simp]:\n  \"isometry_on A (\\<lambda>x. (t::'a::real_normed_vector) - x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isometry_on A ((-) t)", "unfolding isometry_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>A. \\<forall>y\\<in>A. dist (t - x) (t - y) = dist x y", "by (auto, metis add_uminus_conv_diff dist_add_cancel dist_minus)"], ["", "lemma isometry_preserves_bounded:\n  assumes \"isometry_on X f\"\n          \"A \\<subseteq> X\"\n  shows \"bounded (f`A) \\<longleftrightarrow> bounded A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded (f ` A) = bounded A", "unfolding bounded_two_points"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>e.\n        \\<forall>x\\<in>f ` A. \\<forall>y\\<in>f ` A. dist x y \\<le> e) =\n    (\\<exists>e. \\<forall>x\\<in>A. \\<forall>y\\<in>A. dist x y \\<le> e)", "using assms(2) isometry_onD[OF assms(1)]"], ["proof (prove)\nusing this:\n  A \\<subseteq> X\n  \\<lbrakk>?x \\<in> X; ?y \\<in> X\\<rbrakk>\n  \\<Longrightarrow> dist (f ?x) (f ?y) = dist ?x ?y\n\ngoal (1 subgoal):\n 1. (\\<exists>e.\n        \\<forall>x\\<in>f ` A. \\<forall>y\\<in>f ` A. dist x y \\<le> e) =\n    (\\<exists>e. \\<forall>x\\<in>A. \\<forall>y\\<in>A. dist x y \\<le> e)", "by auto (metis assms(2) rev_subsetD)+"], ["", "lemma isometry_preserves_infdist:\n  \"infdist (f x) (f`A) = infdist x A\"\n  if \"isometry_on X f\" \"A \\<subseteq> X\" \"x \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infdist (f x) (f ` A) = infdist x A", "using that"], ["proof (prove)\nusing this:\n  isometry_on X f\n  A \\<subseteq> X\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. infdist (f x) (f ` A) = infdist x A", "by (simp add: infdist_def image_comp isometry_on_def subset_iff)"], ["", "lemma isometry_preserves_hausdorff_distance:\n  \"hausdorff_distance (f`A) (f`B) = hausdorff_distance A B\"\n  if \"isometry_on X f\" \"A \\<subseteq> X\" \"B \\<subseteq> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hausdorff_distance (f ` A) (f ` B) = hausdorff_distance A B", "using that isometry_preserves_infdist [OF that(1) that(2)]\n  isometry_preserves_infdist [OF that(1) that(3)]\n  isometry_preserves_bounded [OF that(1) that(2)]\n  isometry_preserves_bounded [OF that(1) that(3)]"], ["proof (prove)\nusing this:\n  isometry_on X f\n  A \\<subseteq> X\n  B \\<subseteq> X\n  ?x \\<in> X \\<Longrightarrow> infdist (f ?x) (f ` A) = infdist ?x A\n  ?x \\<in> X \\<Longrightarrow> infdist (f ?x) (f ` B) = infdist ?x B\n  bounded (f ` A) = bounded A\n  bounded (f ` B) = bounded B\n\ngoal (1 subgoal):\n 1. hausdorff_distance (f ` A) (f ` B) = hausdorff_distance A B", "by (simp add: hausdorff_distance_def image_comp subset_eq)"], ["", "lemma isometry_on_UNIV_iterates:\n  fixes f::\"('a::metric_space) \\<Rightarrow> 'a\"\n  assumes \"isometry_on UNIV f\"\n  shows \"isometry_on UNIV (f^^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isometry_on UNIV (f ^^ n)", "by (induction n, auto, rule isometry_on_compose[of _ _ f], auto intro: isometry_on_subset[OF assms])"], ["", "lemma isometry_iterates:\n  fixes f::\"('a::metric_space) \\<Rightarrow> 'a\"\n  assumes \"isometry f\"\n  shows \"isometry (f^^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isometry (f ^^ n)", "using isometry_on_UNIV_iterates[OF isometryD(1)[OF assms], of n] bij_fn[OF isometry_inverse(2)[OF assms], of n]"], ["proof (prove)\nusing this:\n  isometry_on UNIV (f ^^ n)\n  bij (f ^^ n)\n\ngoal (1 subgoal):\n 1. isometry (f ^^ n)", "unfolding isometry_def"], ["proof (prove)\nusing this:\n  isometry_on UNIV (f ^^ n)\n  bij (f ^^ n)\n\ngoal (1 subgoal):\n 1. isometry_on UNIV (f ^^ n) \\<and> surj (f ^^ n)", "by (simp add: bij_is_surj)"], ["", "section \\<open>Geodesic spaces\\<close>"], ["", "text \\<open>A geodesic space is a metric space in which any pair of points can be joined by a geodesic segment,\ni.e., an isometrically embedded copy of a segment in the real line. Most spaces in geometry are\ngeodesic. We introduce in this section the corresponding class of metric spaces. First, we study\nproperties of general geodesic segments in metric spaces.\\<close>"], ["", "subsection \\<open>Geodesic segments in general metric spaces\\<close>"], ["", "definition geodesic_segment_between::\"('a::metric_space) set \\<Rightarrow> 'a \\<Rightarrow> 'a \\<Rightarrow> bool\"\n  where \"geodesic_segment_between G x y = (\\<exists>g::(real \\<Rightarrow> 'a). g 0 = x \\<and> g (dist x y) = y \\<and> isometry_on {0..dist x y} g \\<and> G = g`{0..dist x y})\""], ["", "definition geodesic_segment::\"('a::metric_space) set \\<Rightarrow> bool\"\n  where \"geodesic_segment G = (\\<exists>x y. geodesic_segment_between G x y)\""], ["", "text \\<open>We also introduce the parametrization of a geodesic segment. It is convenient to use the\nfollowing definition, which guarantees that the point is on $G$ even without checking that $G$\nis a geodesic segment or that the parameter is in the reasonable range: this shortens some\narguments below.\\<close>"], ["", "definition geodesic_segment_param::\"('a::metric_space) set \\<Rightarrow> 'a \\<Rightarrow> real \\<Rightarrow> 'a\"\n  where \"geodesic_segment_param G x t = (if \\<exists>w. w \\<in> G \\<and> dist x w = t then SOME w. w \\<in> G \\<and> dist x w = t else SOME w. w \\<in> G)\""], ["", "lemma geodesic_segment_betweenI:\n  assumes \"g 0 = x\" \"g (dist x y) = y\" \"isometry_on {0..dist x y} g\" \"G = g`{0..dist x y}\"\n  shows \"geodesic_segment_between G x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between G x y", "unfolding geodesic_segment_between_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>g.\n       g 0 = x \\<and>\n       g (dist x y) = y \\<and>\n       isometry_on {0..dist x y} g \\<and> G = g ` {0..dist x y}", "apply (rule exI[of _ g])"], ["proof (prove)\ngoal (1 subgoal):\n 1. g 0 = x \\<and>\n    g (dist x y) = y \\<and>\n    isometry_on {0..dist x y} g \\<and> G = g ` {0..dist x y}", "using assms"], ["proof (prove)\nusing this:\n  g 0 = x\n  g (dist x y) = y\n  isometry_on {0..dist x y} g\n  G = g ` {0..dist x y}\n\ngoal (1 subgoal):\n 1. g 0 = x \\<and>\n    g (dist x y) = y \\<and>\n    isometry_on {0..dist x y} g \\<and> G = g ` {0..dist x y}", "by auto"], ["", "lemma geodesic_segmentI [intro, simp]:\n  assumes \"geodesic_segment_between G x y\"\n  shows \"geodesic_segment G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment G", "unfolding geodesic_segment_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. Ex (geodesic_segment_between G x)", "using assms"], ["proof (prove)\nusing this:\n  geodesic_segment_between G x y\n\ngoal (1 subgoal):\n 1. \\<exists>x. Ex (geodesic_segment_between G x)", "by auto"], ["", "lemma geodesic_segmentI2 [intro]:\n  assumes \"isometry_on {a..b} g\" \"a \\<le> (b::real)\"\n  shows \"geodesic_segment_between (g`{a..b}) (g a) (g b)\"\n        \"geodesic_segment (g`{a..b})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between (g ` {a..b}) (g a) (g b) &&&\n    geodesic_segment (g ` {a..b})", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. geodesic_segment_between (g ` {a..b}) (g a) (g b)\n 2. geodesic_segment (g ` {a..b})", "define h where \"h = (\\<lambda>t. g (t+a))\""], ["proof (state)\nthis:\n  h = (\\<lambda>t. g (t + a))\n\ngoal (2 subgoals):\n 1. geodesic_segment_between (g ` {a..b}) (g a) (g b)\n 2. geodesic_segment (g ` {a..b})", "have *: \"isometry_on {0..b-a} h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isometry_on {0..b - a} h", "apply (rule isometry_onI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {0..b - a}; y \\<in> {0..b - a}\\<rbrakk>\n       \\<Longrightarrow> dist (h x) (h y) = dist x y", "using \\<open>isometry_on {a..b} g\\<close> \\<open>a \\<le> b\\<close>"], ["proof (prove)\nusing this:\n  isometry_on {a..b} g\n  a \\<le> b\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {0..b - a}; y \\<in> {0..b - a}\\<rbrakk>\n       \\<Longrightarrow> dist (h x) (h y) = dist x y", "by (auto simp add: isometry_on_def h_def)"], ["proof (state)\nthis:\n  isometry_on {0..b - a} h\n\ngoal (2 subgoals):\n 1. geodesic_segment_between (g ` {a..b}) (g a) (g b)\n 2. geodesic_segment (g ` {a..b})", "have **: \"dist (h 0) (h (b-a)) = b-a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (h 0) (h (b - a)) = b - a", "using isometry_onD[OF \\<open>isometry_on {0..b-a} h\\<close>, of 0 \"b-a\"] \\<open>a \\<le> b\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<in> {0..b - a}; b - a \\<in> {0..b - a}\\<rbrakk>\n  \\<Longrightarrow> dist (h 0) (h (b - a)) = dist 0 (b - a)\n  a \\<le> b\n\ngoal (1 subgoal):\n 1. dist (h 0) (h (b - a)) = b - a", "unfolding dist_real_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<in> {0..b - a}; b - a \\<in> {0..b - a}\\<rbrakk>\n  \\<Longrightarrow> dist (h 0) (h (b - a)) = \\<bar>0 - (b - a)\\<bar>\n  a \\<le> b\n\ngoal (1 subgoal):\n 1. dist (h 0) (h (b - a)) = b - a", "by auto"], ["proof (state)\nthis:\n  dist (h 0) (h (b - a)) = b - a\n\ngoal (2 subgoals):\n 1. geodesic_segment_between (g ` {a..b}) (g a) (g b)\n 2. geodesic_segment (g ` {a..b})", "have \"geodesic_segment_between (h`{0..b-a}) (h 0) (h (b-a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between (h ` {0..b - a}) (h 0) (h (b - a))", "unfolding geodesic_segment_between_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>g.\n       g 0 = h 0 \\<and>\n       g (dist (h 0) (h (b - a))) = h (b - a) \\<and>\n       isometry_on {0..dist (h 0) (h (b - a))} g \\<and>\n       h ` {0..b - a} = g ` {0..dist (h 0) (h (b - a))}", "apply (rule exI[of _ h])"], ["proof (prove)\ngoal (1 subgoal):\n 1. h 0 = h 0 \\<and>\n    h (dist (h 0) (h (b - a))) = h (b - a) \\<and>\n    isometry_on {0..dist (h 0) (h (b - a))} h \\<and>\n    h ` {0..b - a} = h ` {0..dist (h 0) (h (b - a))}", "unfolding **"], ["proof (prove)\ngoal (1 subgoal):\n 1. h 0 = h 0 \\<and>\n    h (b - a) = h (b - a) \\<and>\n    isometry_on {0..b - a} h \\<and> h ` {0..b - a} = h ` {0..b - a}", "using *"], ["proof (prove)\nusing this:\n  isometry_on {0..b - a} h\n\ngoal (1 subgoal):\n 1. h 0 = h 0 \\<and>\n    h (b - a) = h (b - a) \\<and>\n    isometry_on {0..b - a} h \\<and> h ` {0..b - a} = h ` {0..b - a}", "by auto"], ["proof (state)\nthis:\n  geodesic_segment_between (h ` {0..b - a}) (h 0) (h (b - a))\n\ngoal (2 subgoals):\n 1. geodesic_segment_between (g ` {a..b}) (g a) (g b)\n 2. geodesic_segment (g ` {a..b})", "moreover"], ["proof (state)\nthis:\n  geodesic_segment_between (h ` {0..b - a}) (h 0) (h (b - a))\n\ngoal (2 subgoals):\n 1. geodesic_segment_between (g ` {a..b}) (g a) (g b)\n 2. geodesic_segment (g ` {a..b})", "have \"g`{a..b} = h`{0..b-a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g ` {a..b} = h ` {0..b - a}", "unfolding h_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. g ` {a..b} = (\\<lambda>t. g (t + a)) ` {0..b - a}", "apply (auto simp add: image_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>a \\<le> xa; xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>{0..b - a}. g xa = g (x + a)", "by (metis add.commute atLeastAtMost_iff diff_ge_0_iff_ge diff_right_mono le_add_diff_inverse)"], ["proof (state)\nthis:\n  g ` {a..b} = h ` {0..b - a}\n\ngoal (2 subgoals):\n 1. geodesic_segment_between (g ` {a..b}) (g a) (g b)\n 2. geodesic_segment (g ` {a..b})", "moreover"], ["proof (state)\nthis:\n  g ` {a..b} = h ` {0..b - a}\n\ngoal (2 subgoals):\n 1. geodesic_segment_between (g ` {a..b}) (g a) (g b)\n 2. geodesic_segment (g ` {a..b})", "have \"h 0 = g a\" \"h (b-a) = g b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h 0 = g a &&& h (b - a) = g b", "unfolding h_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. g (0 + a) = g a &&& g (b - a + a) = g b", "by auto"], ["proof (state)\nthis:\n  h 0 = g a\n  h (b - a) = g b\n\ngoal (2 subgoals):\n 1. geodesic_segment_between (g ` {a..b}) (g a) (g b)\n 2. geodesic_segment (g ` {a..b})", "ultimately"], ["proof (chain)\npicking this:\n  geodesic_segment_between (h ` {0..b - a}) (h 0) (h (b - a))\n  g ` {a..b} = h ` {0..b - a}\n  h 0 = g a\n  h (b - a) = g b", "show \"geodesic_segment_between (g`{a..b}) (g a) (g b)\""], ["proof (prove)\nusing this:\n  geodesic_segment_between (h ` {0..b - a}) (h 0) (h (b - a))\n  g ` {a..b} = h ` {0..b - a}\n  h 0 = g a\n  h (b - a) = g b\n\ngoal (1 subgoal):\n 1. geodesic_segment_between (g ` {a..b}) (g a) (g b)", "by auto"], ["proof (state)\nthis:\n  geodesic_segment_between (g ` {a..b}) (g a) (g b)\n\ngoal (1 subgoal):\n 1. geodesic_segment (g ` {a..b})", "then"], ["proof (chain)\npicking this:\n  geodesic_segment_between (g ` {a..b}) (g a) (g b)", "show \"geodesic_segment (g`{a..b})\""], ["proof (prove)\nusing this:\n  geodesic_segment_between (g ` {a..b}) (g a) (g b)\n\ngoal (1 subgoal):\n 1. geodesic_segment (g ` {a..b})", "unfolding geodesic_segment_def"], ["proof (prove)\nusing this:\n  geodesic_segment_between (g ` {a..b}) (g a) (g b)\n\ngoal (1 subgoal):\n 1. \\<exists>x. Ex (geodesic_segment_between (g ` {a..b}) x)", "by auto"], ["proof (state)\nthis:\n  geodesic_segment (g ` {a..b})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma geodesic_segmentD:\n  assumes \"geodesic_segment_between G x y\"\n  shows \"\\<exists>g::(real \\<Rightarrow> _). (g t = x \\<and> g (t + dist x y) = y \\<and> isometry_on {t..t+dist x y} g \\<and> G = g`{t..t+dist x y})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>g.\n       g t = x \\<and>\n       g (t + dist x y) = y \\<and>\n       isometry_on {t..t + dist x y} g \\<and> G = g ` {t..t + dist x y}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>g.\n       g t = x \\<and>\n       g (t + dist x y) = y \\<and>\n       isometry_on {t..t + dist x y} g \\<and> G = g ` {t..t + dist x y}", "obtain h where h: \"h 0 = x\" \"h (dist x y) = y\" \"isometry_on {0..dist x y} h\" \"G = h`{0..dist x y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>h.\n        \\<lbrakk>h 0 = x; h (dist x y) = y; isometry_on {0..dist x y} h;\n         G = h ` {0..dist x y}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson \\<open>geodesic_segment_between G x y\\<close> geodesic_segment_between_def)"], ["proof (state)\nthis:\n  h 0 = x\n  h (dist x y) = y\n  isometry_on {0..dist x y} h\n  G = h ` {0..dist x y}\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       g t = x \\<and>\n       g (t + dist x y) = y \\<and>\n       isometry_on {t..t + dist x y} g \\<and> G = g ` {t..t + dist x y}", "have * [simp]: \"(\\<lambda>x. x - t) ` {t..t + dist x y} = {0..dist x y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x - t) ` {t..t + dist x y} = {0..dist x y}", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>x. x - t) ` {t..t + dist x y} = {0..dist x y}\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       g t = x \\<and>\n       g (t + dist x y) = y \\<and>\n       isometry_on {t..t + dist x y} g \\<and> G = g ` {t..t + dist x y}", "define g where \"g = (\\<lambda>s. h (s - t))\""], ["proof (state)\nthis:\n  g = (\\<lambda>s. h (s - t))\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       g t = x \\<and>\n       g (t + dist x y) = y \\<and>\n       isometry_on {t..t + dist x y} g \\<and> G = g ` {t..t + dist x y}", "have \"g t = x\" \"g (t + dist x y) = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g t = x &&& g (t + dist x y) = y", "using h assms(1)"], ["proof (prove)\nusing this:\n  h 0 = x\n  h (dist x y) = y\n  isometry_on {0..dist x y} h\n  G = h ` {0..dist x y}\n  geodesic_segment_between G x y\n\ngoal (1 subgoal):\n 1. g t = x &&& g (t + dist x y) = y", "unfolding g_def"], ["proof (prove)\nusing this:\n  h 0 = x\n  h (dist x y) = y\n  isometry_on {0..dist x y} h\n  G = h ` {0..dist x y}\n  geodesic_segment_between G x y\n\ngoal (1 subgoal):\n 1. h (t - t) = x &&& h (t + dist x y - t) = y", "by auto"], ["proof (state)\nthis:\n  g t = x\n  g (t + dist x y) = y\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       g t = x \\<and>\n       g (t + dist x y) = y \\<and>\n       isometry_on {t..t + dist x y} g \\<and> G = g ` {t..t + dist x y}", "moreover"], ["proof (state)\nthis:\n  g t = x\n  g (t + dist x y) = y\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       g t = x \\<and>\n       g (t + dist x y) = y \\<and>\n       isometry_on {t..t + dist x y} g \\<and> G = g ` {t..t + dist x y}", "have \"isometry_on {t..t+dist x y} g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isometry_on {t..t + dist x y} g", "unfolding g_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. isometry_on {t..t + dist x y} (\\<lambda>s. h (s - t))", "apply (rule isometry_on_compose[of _ _ h])"], ["proof (prove)\ngoal (2 subgoals):\n 1. isometry_on {t..t + dist x y} (\\<lambda>x. x - t)\n 2. isometry_on ((\\<lambda>x. x - t) ` {t..t + dist x y}) h", "by (simp add: dist_real_def isometry_on_def, simp add: h(3))"], ["proof (state)\nthis:\n  isometry_on {t..t + dist x y} g\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       g t = x \\<and>\n       g (t + dist x y) = y \\<and>\n       isometry_on {t..t + dist x y} g \\<and> G = g ` {t..t + dist x y}", "moreover"], ["proof (state)\nthis:\n  isometry_on {t..t + dist x y} g\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       g t = x \\<and>\n       g (t + dist x y) = y \\<and>\n       isometry_on {t..t + dist x y} g \\<and> G = g ` {t..t + dist x y}", "have \"g` {t..t + dist x y} = G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g ` {t..t + dist x y} = G", "unfolding g_def h(4)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. h (s - t)) ` {t..t + dist x y} = h ` {0..dist x y}", "using *"], ["proof (prove)\nusing this:\n  (\\<lambda>x. x - t) ` {t..t + dist x y} = {0..dist x y}\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. h (s - t)) ` {t..t + dist x y} = h ` {0..dist x y}", "by (metis image_image)"], ["proof (state)\nthis:\n  g ` {t..t + dist x y} = G\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       g t = x \\<and>\n       g (t + dist x y) = y \\<and>\n       isometry_on {t..t + dist x y} g \\<and> G = g ` {t..t + dist x y}", "ultimately"], ["proof (chain)\npicking this:\n  g t = x\n  g (t + dist x y) = y\n  isometry_on {t..t + dist x y} g\n  g ` {t..t + dist x y} = G", "show ?thesis"], ["proof (prove)\nusing this:\n  g t = x\n  g (t + dist x y) = y\n  isometry_on {t..t + dist x y} g\n  g ` {t..t + dist x y} = G\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       g t = x \\<and>\n       g (t + dist x y) = y \\<and>\n       isometry_on {t..t + dist x y} g \\<and> G = g ` {t..t + dist x y}", "by auto"], ["proof (state)\nthis:\n  \\<exists>g.\n     g t = x \\<and>\n     g (t + dist x y) = y \\<and>\n     isometry_on {t..t + dist x y} g \\<and> G = g ` {t..t + dist x y}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma geodesic_segment_endpoints [simp]:\n  assumes \"geodesic_segment_between G x y\"\n  shows \"x \\<in> G\" \"y \\<in> G\" \"G \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> G &&& y \\<in> G &&& G \\<noteq> {}", "using assms"], ["proof (prove)\nusing this:\n  geodesic_segment_between G x y\n\ngoal (1 subgoal):\n 1. x \\<in> G &&& y \\<in> G &&& G \\<noteq> {}", "unfolding geodesic_segment_between_def"], ["proof (prove)\nusing this:\n  \\<exists>g.\n     g 0 = x \\<and>\n     g (dist x y) = y \\<and>\n     isometry_on {0..dist x y} g \\<and> G = g ` {0..dist x y}\n\ngoal (1 subgoal):\n 1. x \\<in> G &&& y \\<in> G &&& G \\<noteq> {}", "by (auto, metis atLeastAtMost_iff image_eqI less_eq_real_def zero_le_dist)"], ["", "lemma geodesic_segment_commute:\n  assumes \"geodesic_segment_between G x y\"\n  shows \"geodesic_segment_between G y x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between G y x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. geodesic_segment_between G y x", "obtain g::\"real\\<Rightarrow>'a\" where g: \"g 0 = x\" \"g (dist x y) = y\" \"isometry_on {0..dist x y} g\" \"G = g`{0..dist x y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g 0 = x; g (dist x y) = y; isometry_on {0..dist x y} g;\n         G = g ` {0..dist x y}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson \\<open>geodesic_segment_between G x y\\<close> geodesic_segment_between_def)"], ["proof (state)\nthis:\n  g 0 = x\n  g (dist x y) = y\n  isometry_on {0..dist x y} g\n  G = g ` {0..dist x y}\n\ngoal (1 subgoal):\n 1. geodesic_segment_between G y x", "define h::\"real\\<Rightarrow>'a\" where \"h = (\\<lambda>t. g(dist x y-t))\""], ["proof (state)\nthis:\n  h = (\\<lambda>t. g (dist x y - t))\n\ngoal (1 subgoal):\n 1. geodesic_segment_between G y x", "have \"(\\<lambda>t. dist x y -t)`{0..dist x y} = {0..dist x y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (-) (dist x y) ` {0..dist x y} = {0..dist x y}", "by auto"], ["proof (state)\nthis:\n  (-) (dist x y) ` {0..dist x y} = {0..dist x y}\n\ngoal (1 subgoal):\n 1. geodesic_segment_between G y x", "then"], ["proof (chain)\npicking this:\n  (-) (dist x y) ` {0..dist x y} = {0..dist x y}", "have \"h`{0..dist x y} = G\""], ["proof (prove)\nusing this:\n  (-) (dist x y) ` {0..dist x y} = {0..dist x y}\n\ngoal (1 subgoal):\n 1. h ` {0..dist x y} = G", "unfolding g(4) h_def"], ["proof (prove)\nusing this:\n  (-) (dist x y) ` {0..dist x y} = {0..dist x y}\n\ngoal (1 subgoal):\n 1. (\\<lambda>t. g (dist x y - t)) ` {0..dist x y} = g ` {0..dist x y}", "by (metis image_image)"], ["proof (state)\nthis:\n  h ` {0..dist x y} = G\n\ngoal (1 subgoal):\n 1. geodesic_segment_between G y x", "moreover"], ["proof (state)\nthis:\n  h ` {0..dist x y} = G\n\ngoal (1 subgoal):\n 1. geodesic_segment_between G y x", "have \"h 0 = y\" \"h (dist x y) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h 0 = y &&& h (dist x y) = x", "unfolding h_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. g (dist x y - 0) = y &&& g (dist x y - dist x y) = x", "using g"], ["proof (prove)\nusing this:\n  g 0 = x\n  g (dist x y) = y\n  isometry_on {0..dist x y} g\n  G = g ` {0..dist x y}\n\ngoal (1 subgoal):\n 1. g (dist x y - 0) = y &&& g (dist x y - dist x y) = x", "by auto"], ["proof (state)\nthis:\n  h 0 = y\n  h (dist x y) = x\n\ngoal (1 subgoal):\n 1. geodesic_segment_between G y x", "moreover"], ["proof (state)\nthis:\n  h 0 = y\n  h (dist x y) = x\n\ngoal (1 subgoal):\n 1. geodesic_segment_between G y x", "have \"isometry_on {0..dist x y} h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isometry_on {0..dist x y} h", "unfolding h_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. isometry_on {0..dist x y} (\\<lambda>t. g (dist x y - t))", "apply (rule isometry_on_compose[of _ _ g])"], ["proof (prove)\ngoal (2 subgoals):\n 1. isometry_on {0..dist x y} ((-) (dist x y))\n 2. isometry_on ((-) (dist x y) ` {0..dist x y}) g", "using g(3)"], ["proof (prove)\nusing this:\n  isometry_on {0..dist x y} g\n\ngoal (2 subgoals):\n 1. isometry_on {0..dist x y} ((-) (dist x y))\n 2. isometry_on ((-) (dist x y) ` {0..dist x y}) g", "by auto"], ["proof (state)\nthis:\n  isometry_on {0..dist x y} h\n\ngoal (1 subgoal):\n 1. geodesic_segment_between G y x", "ultimately"], ["proof (chain)\npicking this:\n  h ` {0..dist x y} = G\n  h 0 = y\n  h (dist x y) = x\n  isometry_on {0..dist x y} h", "show ?thesis"], ["proof (prove)\nusing this:\n  h ` {0..dist x y} = G\n  h 0 = y\n  h (dist x y) = x\n  isometry_on {0..dist x y} h\n\ngoal (1 subgoal):\n 1. geodesic_segment_between G y x", "unfolding geodesic_segment_between_def"], ["proof (prove)\nusing this:\n  h ` {0..dist x y} = G\n  h 0 = y\n  h (dist x y) = x\n  isometry_on {0..dist x y} h\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       g 0 = y \\<and>\n       g (dist y x) = x \\<and>\n       isometry_on {0..dist y x} g \\<and> G = g ` {0..dist y x}", "by (auto simp add: dist_commute)"], ["proof (state)\nthis:\n  geodesic_segment_between G y x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma geodesic_segment_dist:\n  assumes \"geodesic_segment_between G x y\" \"a \\<in> G\"\n  shows \"dist x a + dist a y = dist x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x a + dist a y = dist x y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist x a + dist a y = dist x y", "obtain g where g: \"g 0 = x\" \"g (dist x y) = y\" \"isometry_on {0..dist x y} g\" \"G = g`{0..dist x y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g 0 = x; g (dist x y) = y; isometry_on {0..dist x y} g;\n         G = g ` {0..dist x y}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson \\<open>geodesic_segment_between G x y\\<close> geodesic_segment_between_def)"], ["proof (state)\nthis:\n  g 0 = x\n  g (dist x y) = y\n  isometry_on {0..dist x y} g\n  G = g ` {0..dist x y}\n\ngoal (1 subgoal):\n 1. dist x a + dist a y = dist x y", "obtain t where t: \"t \\<in> {0..dist x y}\" \"a = g t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>t \\<in> {0..dist x y}; a = g t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using g(4) assms"], ["proof (prove)\nusing this:\n  G = g ` {0..dist x y}\n  geodesic_segment_between G x y\n  a \\<in> G\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>t \\<in> {0..dist x y}; a = g t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  t \\<in> {0..dist x y}\n  a = g t\n\ngoal (1 subgoal):\n 1. dist x a + dist a y = dist x y", "have \"dist x a = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x a = t", "using isometry_onD[OF g(3) _ t(1), of 0]"], ["proof (prove)\nusing this:\n  0 \\<in> {0..dist x y} \\<Longrightarrow> dist (g 0) (g t) = dist 0 t\n\ngoal (1 subgoal):\n 1. dist x a = t", "unfolding g(1) dist_real_def t(2)"], ["proof (prove)\nusing this:\n  0 \\<in> {0..dist x y} \\<Longrightarrow> dist x (g t) = \\<bar>0 - t\\<bar>\n\ngoal (1 subgoal):\n 1. dist x (g t) = t", "using t(1)"], ["proof (prove)\nusing this:\n  0 \\<in> {0..dist x y} \\<Longrightarrow> dist x (g t) = \\<bar>0 - t\\<bar>\n  t \\<in> {0..dist x y}\n\ngoal (1 subgoal):\n 1. dist x (g t) = t", "by auto"], ["proof (state)\nthis:\n  dist x a = t\n\ngoal (1 subgoal):\n 1. dist x a + dist a y = dist x y", "moreover"], ["proof (state)\nthis:\n  dist x a = t\n\ngoal (1 subgoal):\n 1. dist x a + dist a y = dist x y", "have \"dist a y = dist x y - t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist a y = dist x y - t", "using isometry_onD[OF g(3) _ t(1), of \"dist x y\"]"], ["proof (prove)\nusing this:\n  dist x y \\<in> {0..dist x y} \\<Longrightarrow>\n  dist (g (dist x y)) (g t) = dist (dist x y) t\n\ngoal (1 subgoal):\n 1. dist a y = dist x y - t", "unfolding g(2) dist_real_def t(2)"], ["proof (prove)\nusing this:\n  dist x y \\<in> {0..dist x y} \\<Longrightarrow>\n  dist y (g t) = \\<bar>dist x y - t\\<bar>\n\ngoal (1 subgoal):\n 1. dist (g t) y = dist x y - t", "using t(1)"], ["proof (prove)\nusing this:\n  dist x y \\<in> {0..dist x y} \\<Longrightarrow>\n  dist y (g t) = \\<bar>dist x y - t\\<bar>\n  t \\<in> {0..dist x y}\n\ngoal (1 subgoal):\n 1. dist (g t) y = dist x y - t", "by (auto simp add: dist_commute)"], ["proof (state)\nthis:\n  dist a y = dist x y - t\n\ngoal (1 subgoal):\n 1. dist x a + dist a y = dist x y", "ultimately"], ["proof (chain)\npicking this:\n  dist x a = t\n  dist a y = dist x y - t", "show ?thesis"], ["proof (prove)\nusing this:\n  dist x a = t\n  dist a y = dist x y - t\n\ngoal (1 subgoal):\n 1. dist x a + dist a y = dist x y", "by auto"], ["proof (state)\nthis:\n  dist x a + dist a y = dist x y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma geodesic_segment_dist_unique:\n  assumes \"geodesic_segment_between G x y\" \"a \\<in> G\" \"b \\<in> G\" \"dist x a = dist x b\"\n  shows \"a = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a = b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a = b", "obtain g where g: \"g 0 = x\" \"g (dist x y) = y\" \"isometry_on {0..dist x y} g\" \"G = g`{0..dist x y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g 0 = x; g (dist x y) = y; isometry_on {0..dist x y} g;\n         G = g ` {0..dist x y}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson \\<open>geodesic_segment_between G x y\\<close> geodesic_segment_between_def)"], ["proof (state)\nthis:\n  g 0 = x\n  g (dist x y) = y\n  isometry_on {0..dist x y} g\n  G = g ` {0..dist x y}\n\ngoal (1 subgoal):\n 1. a = b", "obtain ta where ta: \"ta \\<in> {0..dist x y}\" \"a = g ta\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ta.\n        \\<lbrakk>ta \\<in> {0..dist x y}; a = g ta\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using g(4) assms"], ["proof (prove)\nusing this:\n  G = g ` {0..dist x y}\n  geodesic_segment_between G x y\n  a \\<in> G\n  b \\<in> G\n  dist x a = dist x b\n\ngoal (1 subgoal):\n 1. (\\<And>ta.\n        \\<lbrakk>ta \\<in> {0..dist x y}; a = g ta\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ta \\<in> {0..dist x y}\n  a = g ta\n\ngoal (1 subgoal):\n 1. a = b", "have *: \"dist x a = ta\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x a = ta", "unfolding g(1)[symmetric] ta(2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (g 0) (g ta) = ta", "using isometry_onD[OF g(3), of 0 ta]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<in> {0..dist x y}; ta \\<in> {0..dist x y}\\<rbrakk>\n  \\<Longrightarrow> dist (g 0) (g ta) = dist 0 ta\n\ngoal (1 subgoal):\n 1. dist (g 0) (g ta) = ta", "unfolding dist_real_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<in> {0..dist x y}; ta \\<in> {0..dist x y}\\<rbrakk>\n  \\<Longrightarrow> dist (g 0) (g ta) = \\<bar>0 - ta\\<bar>\n\ngoal (1 subgoal):\n 1. dist (g 0) (g ta) = ta", "using ta(1)"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<in> {0..dist x y}; ta \\<in> {0..dist x y}\\<rbrakk>\n  \\<Longrightarrow> dist (g 0) (g ta) = \\<bar>0 - ta\\<bar>\n  ta \\<in> {0..dist x y}\n\ngoal (1 subgoal):\n 1. dist (g 0) (g ta) = ta", "by auto"], ["proof (state)\nthis:\n  dist x a = ta\n\ngoal (1 subgoal):\n 1. a = b", "obtain tb where tb: \"tb \\<in> {0..dist x y}\" \"b = g tb\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>tb.\n        \\<lbrakk>tb \\<in> {0..dist x y}; b = g tb\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using g(4) assms"], ["proof (prove)\nusing this:\n  G = g ` {0..dist x y}\n  geodesic_segment_between G x y\n  a \\<in> G\n  b \\<in> G\n  dist x a = dist x b\n\ngoal (1 subgoal):\n 1. (\\<And>tb.\n        \\<lbrakk>tb \\<in> {0..dist x y}; b = g tb\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  tb \\<in> {0..dist x y}\n  b = g tb\n\ngoal (1 subgoal):\n 1. a = b", "have \"dist x b = tb\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x b = tb", "unfolding g(1)[symmetric] tb(2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (g 0) (g tb) = tb", "using isometry_onD[OF g(3), of 0 tb]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<in> {0..dist x y}; tb \\<in> {0..dist x y}\\<rbrakk>\n  \\<Longrightarrow> dist (g 0) (g tb) = dist 0 tb\n\ngoal (1 subgoal):\n 1. dist (g 0) (g tb) = tb", "unfolding dist_real_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<in> {0..dist x y}; tb \\<in> {0..dist x y}\\<rbrakk>\n  \\<Longrightarrow> dist (g 0) (g tb) = \\<bar>0 - tb\\<bar>\n\ngoal (1 subgoal):\n 1. dist (g 0) (g tb) = tb", "using tb(1)"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<in> {0..dist x y}; tb \\<in> {0..dist x y}\\<rbrakk>\n  \\<Longrightarrow> dist (g 0) (g tb) = \\<bar>0 - tb\\<bar>\n  tb \\<in> {0..dist x y}\n\ngoal (1 subgoal):\n 1. dist (g 0) (g tb) = tb", "by auto"], ["proof (state)\nthis:\n  dist x b = tb\n\ngoal (1 subgoal):\n 1. a = b", "then"], ["proof (chain)\npicking this:\n  dist x b = tb", "have \"ta = tb\""], ["proof (prove)\nusing this:\n  dist x b = tb\n\ngoal (1 subgoal):\n 1. ta = tb", "using * \\<open>dist x a = dist x b\\<close>"], ["proof (prove)\nusing this:\n  dist x b = tb\n  dist x a = ta\n  dist x a = dist x b\n\ngoal (1 subgoal):\n 1. ta = tb", "by auto"], ["proof (state)\nthis:\n  ta = tb\n\ngoal (1 subgoal):\n 1. a = b", "then"], ["proof (chain)\npicking this:\n  ta = tb", "show \"a = b\""], ["proof (prove)\nusing this:\n  ta = tb\n\ngoal (1 subgoal):\n 1. a = b", "using ta(2) tb(2)"], ["proof (prove)\nusing this:\n  ta = tb\n  a = g ta\n  b = g tb\n\ngoal (1 subgoal):\n 1. a = b", "by auto"], ["proof (state)\nthis:\n  a = b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma geodesic_segment_union:\n  assumes \"dist x z = dist x y + dist y z\"\n          \"geodesic_segment_between G x y\" \"geodesic_segment_between H y z\"\n  shows \"geodesic_segment_between (G \\<union> H) x z\"\n        \"G \\<inter> H = {y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between (G \\<union> H) x z &&& G \\<inter> H = {y}", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. geodesic_segment_between (G \\<union> H) x z\n 2. G \\<inter> H = {y}", "obtain g where g: \"g 0 = x\" \"g (dist x y) = y\" \"isometry_on {0..dist x y} g\" \"G = g`{0..dist x y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g 0 = x; g (dist x y) = y; isometry_on {0..dist x y} g;\n         G = g ` {0..dist x y}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson \\<open>geodesic_segment_between G x y\\<close> geodesic_segment_between_def)"], ["proof (state)\nthis:\n  g 0 = x\n  g (dist x y) = y\n  isometry_on {0..dist x y} g\n  G = g ` {0..dist x y}\n\ngoal (2 subgoals):\n 1. geodesic_segment_between (G \\<union> H) x z\n 2. G \\<inter> H = {y}", "obtain h where h: \"h (dist x y) = y\" \"h (dist x z) = z\" \"isometry_on {dist x y..dist x z} h\" \"H = h`{dist x y..dist x z}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>h.\n        \\<lbrakk>h (dist x y) = y; h (dist x z) = z;\n         isometry_on {dist x y..dist x z} h;\n         H = h ` {dist x y..dist x z}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding \\<open>dist x z = dist x y + dist y z\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>h.\n        \\<lbrakk>h (dist x y) = y; h (dist x y + dist y z) = z;\n         isometry_on {dist x y..dist x y + dist y z} h;\n         H = h ` {dist x y..dist x y + dist y z}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using geodesic_segmentD[OF \\<open>geodesic_segment_between H y z\\<close>, of \"dist x y\"]"], ["proof (prove)\nusing this:\n  \\<exists>g.\n     g (dist x y) = y \\<and>\n     g (dist x y + dist y z) = z \\<and>\n     isometry_on {dist x y..dist x y + dist y z} g \\<and>\n     H = g ` {dist x y..dist x y + dist y z}\n\ngoal (1 subgoal):\n 1. (\\<And>h.\n        \\<lbrakk>h (dist x y) = y; h (dist x y + dist y z) = z;\n         isometry_on {dist x y..dist x y + dist y z} h;\n         H = h ` {dist x y..dist x y + dist y z}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  h (dist x y) = y\n  h (dist x z) = z\n  isometry_on {dist x y..dist x z} h\n  H = h ` {dist x y..dist x z}\n\ngoal (2 subgoals):\n 1. geodesic_segment_between (G \\<union> H) x z\n 2. G \\<inter> H = {y}", "define f where \"f = (\\<lambda>t. if t \\<le> dist x y then g t else h t)\""], ["proof (state)\nthis:\n  f = (\\<lambda>t. if t \\<le> dist x y then g t else h t)\n\ngoal (2 subgoals):\n 1. geodesic_segment_between (G \\<union> H) x z\n 2. G \\<inter> H = {y}", "have fg: \"f t = g t\" if \"t \\<le> dist x y\" for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. f t = g t", "unfolding f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if t \\<le> dist x y then g t else h t) = g t", "using that"], ["proof (prove)\nusing this:\n  t \\<le> dist x y\n\ngoal (1 subgoal):\n 1. (if t \\<le> dist x y then g t else h t) = g t", "by auto"], ["proof (state)\nthis:\n  ?t \\<le> dist x y \\<Longrightarrow> f ?t = g ?t\n\ngoal (2 subgoals):\n 1. geodesic_segment_between (G \\<union> H) x z\n 2. G \\<inter> H = {y}", "have fh: \"f t = h t\" if \"t \\<ge> dist x y\" for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. f t = h t", "unfolding f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if t \\<le> dist x y then g t else h t) = h t", "apply (cases \"t > dist x y\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist x y < t \\<Longrightarrow>\n    (if t \\<le> dist x y then g t else h t) = h t\n 2. \\<not> dist x y < t \\<Longrightarrow>\n    (if t \\<le> dist x y then g t else h t) = h t", "using that g(2) h(1)"], ["proof (prove)\nusing this:\n  dist x y \\<le> t\n  g (dist x y) = y\n  h (dist x y) = y\n\ngoal (2 subgoals):\n 1. dist x y < t \\<Longrightarrow>\n    (if t \\<le> dist x y then g t else h t) = h t\n 2. \\<not> dist x y < t \\<Longrightarrow>\n    (if t \\<le> dist x y then g t else h t) = h t", "by auto"], ["proof (state)\nthis:\n  dist x y \\<le> ?t \\<Longrightarrow> f ?t = h ?t\n\ngoal (2 subgoals):\n 1. geodesic_segment_between (G \\<union> H) x z\n 2. G \\<inter> H = {y}", "have \"f 0 = x\" \"f (dist x z) = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f 0 = x &&& f (dist x z) = z", "using fg fh g(1) h(2) assms(1)"], ["proof (prove)\nusing this:\n  ?t \\<le> dist x y \\<Longrightarrow> f ?t = g ?t\n  dist x y \\<le> ?t \\<Longrightarrow> f ?t = h ?t\n  g 0 = x\n  h (dist x z) = z\n  dist x z = dist x y + dist y z\n\ngoal (1 subgoal):\n 1. f 0 = x &&& f (dist x z) = z", "by auto"], ["proof (state)\nthis:\n  f 0 = x\n  f (dist x z) = z\n\ngoal (2 subgoals):\n 1. geodesic_segment_between (G \\<union> H) x z\n 2. G \\<inter> H = {y}", "have \"f`{0..dist x z} = f`{0..dist x y} \\<union> f`{dist x y..dist x z}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` {0..dist x z} = f ` {0..dist x y} \\<union> f ` {dist x y..dist x z}", "unfolding assms(1) image_Un[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` {0..dist x y + dist y z} =\n    f ` ({0..dist x y} \\<union> {dist x y..dist x y + dist y z})", "by (simp add: ivl_disj_un_two_touch(4))"], ["proof (state)\nthis:\n  f ` {0..dist x z} = f ` {0..dist x y} \\<union> f ` {dist x y..dist x z}\n\ngoal (2 subgoals):\n 1. geodesic_segment_between (G \\<union> H) x z\n 2. G \\<inter> H = {y}", "moreover"], ["proof (state)\nthis:\n  f ` {0..dist x z} = f ` {0..dist x y} \\<union> f ` {dist x y..dist x z}\n\ngoal (2 subgoals):\n 1. geodesic_segment_between (G \\<union> H) x z\n 2. G \\<inter> H = {y}", "have \"f`{0..dist x y} = G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` {0..dist x y} = G", "unfolding g(4)"], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` {0..dist x y} = g ` {0..dist x y}", "using fg image_cong"], ["proof (prove)\nusing this:\n  ?t \\<le> dist x y \\<Longrightarrow> f ?t = g ?t\n  \\<lbrakk>?M = ?N;\n   \\<And>x. x \\<in> ?N \\<Longrightarrow> ?f x = ?g x\\<rbrakk>\n  \\<Longrightarrow> ?f ` ?M = ?g ` ?N\n\ngoal (1 subgoal):\n 1. f ` {0..dist x y} = g ` {0..dist x y}", "by force"], ["proof (state)\nthis:\n  f ` {0..dist x y} = G\n\ngoal (2 subgoals):\n 1. geodesic_segment_between (G \\<union> H) x z\n 2. G \\<inter> H = {y}", "moreover"], ["proof (state)\nthis:\n  f ` {0..dist x y} = G\n\ngoal (2 subgoals):\n 1. geodesic_segment_between (G \\<union> H) x z\n 2. G \\<inter> H = {y}", "have \"f`{dist x y..dist x z} = H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` {dist x y..dist x z} = H", "unfolding h(4)"], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` {dist x y..dist x z} = h ` {dist x y..dist x z}", "using fh image_cong"], ["proof (prove)\nusing this:\n  dist x y \\<le> ?t \\<Longrightarrow> f ?t = h ?t\n  \\<lbrakk>?M = ?N;\n   \\<And>x. x \\<in> ?N \\<Longrightarrow> ?f x = ?g x\\<rbrakk>\n  \\<Longrightarrow> ?f ` ?M = ?g ` ?N\n\ngoal (1 subgoal):\n 1. f ` {dist x y..dist x z} = h ` {dist x y..dist x z}", "by force"], ["proof (state)\nthis:\n  f ` {dist x y..dist x z} = H\n\ngoal (2 subgoals):\n 1. geodesic_segment_between (G \\<union> H) x z\n 2. G \\<inter> H = {y}", "ultimately"], ["proof (chain)\npicking this:\n  f ` {0..dist x z} = f ` {0..dist x y} \\<union> f ` {dist x y..dist x z}\n  f ` {0..dist x y} = G\n  f ` {dist x y..dist x z} = H", "have \"f`{0..dist x z} = G \\<union> H\""], ["proof (prove)\nusing this:\n  f ` {0..dist x z} = f ` {0..dist x y} \\<union> f ` {dist x y..dist x z}\n  f ` {0..dist x y} = G\n  f ` {dist x y..dist x z} = H\n\ngoal (1 subgoal):\n 1. f ` {0..dist x z} = G \\<union> H", "by simp"], ["proof (state)\nthis:\n  f ` {0..dist x z} = G \\<union> H\n\ngoal (2 subgoals):\n 1. geodesic_segment_between (G \\<union> H) x z\n 2. G \\<inter> H = {y}", "have Ifg: \"dist (f s) (f t) = s-t\" if \"0 \\<le> t\" \"t \\<le> s\" \"s \\<le> dist x y\" for s t"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (f s) (f t) = s - t", "using that fg[of s] fg[of t] isometry_onD[OF g(3), of s t]"], ["proof (prove)\nusing this:\n  0 \\<le> t\n  t \\<le> s\n  s \\<le> dist x y\n  s \\<le> dist x y \\<Longrightarrow> f s = g s\n  t \\<le> dist x y \\<Longrightarrow> f t = g t\n  \\<lbrakk>s \\<in> {0..dist x y}; t \\<in> {0..dist x y}\\<rbrakk>\n  \\<Longrightarrow> dist (g s) (g t) = dist s t\n\ngoal (1 subgoal):\n 1. dist (f s) (f t) = s - t", "unfolding dist_real_def"], ["proof (prove)\nusing this:\n  0 \\<le> t\n  t \\<le> s\n  s \\<le> dist x y\n  s \\<le> dist x y \\<Longrightarrow> f s = g s\n  t \\<le> dist x y \\<Longrightarrow> f t = g t\n  \\<lbrakk>s \\<in> {0..dist x y}; t \\<in> {0..dist x y}\\<rbrakk>\n  \\<Longrightarrow> dist (g s) (g t) = \\<bar>s - t\\<bar>\n\ngoal (1 subgoal):\n 1. dist (f s) (f t) = s - t", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>0 \\<le> ?t; ?t \\<le> ?s; ?s \\<le> dist x y\\<rbrakk>\n  \\<Longrightarrow> dist (f ?s) (f ?t) = ?s - ?t\n\ngoal (2 subgoals):\n 1. geodesic_segment_between (G \\<union> H) x z\n 2. G \\<inter> H = {y}", "have Ifh: \"dist (f s) (f t) = s-t\" if \"dist x y \\<le> t\" \"t \\<le> s\" \"s \\<le> dist x z\" for s t"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (f s) (f t) = s - t", "using that fh[of s] fh[of t] isometry_onD[OF h(3), of s t]"], ["proof (prove)\nusing this:\n  dist x y \\<le> t\n  t \\<le> s\n  s \\<le> dist x z\n  dist x y \\<le> s \\<Longrightarrow> f s = h s\n  dist x y \\<le> t \\<Longrightarrow> f t = h t\n  \\<lbrakk>s \\<in> {dist x y..dist x z};\n   t \\<in> {dist x y..dist x z}\\<rbrakk>\n  \\<Longrightarrow> dist (h s) (h t) = dist s t\n\ngoal (1 subgoal):\n 1. dist (f s) (f t) = s - t", "unfolding dist_real_def"], ["proof (prove)\nusing this:\n  dist x y \\<le> t\n  t \\<le> s\n  s \\<le> dist x z\n  dist x y \\<le> s \\<Longrightarrow> f s = h s\n  dist x y \\<le> t \\<Longrightarrow> f t = h t\n  \\<lbrakk>s \\<in> {dist x y..dist x z};\n   t \\<in> {dist x y..dist x z}\\<rbrakk>\n  \\<Longrightarrow> dist (h s) (h t) = \\<bar>s - t\\<bar>\n\ngoal (1 subgoal):\n 1. dist (f s) (f t) = s - t", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>dist x y \\<le> ?t; ?t \\<le> ?s; ?s \\<le> dist x z\\<rbrakk>\n  \\<Longrightarrow> dist (f ?s) (f ?t) = ?s - ?t\n\ngoal (2 subgoals):\n 1. geodesic_segment_between (G \\<union> H) x z\n 2. G \\<inter> H = {y}", "have I: \"dist (f s) (f t) = s-t\" if \"0 \\<le> t\" \"t \\<le> s\" \"s \\<le> dist x z\" for s t"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (f s) (f t) = s - t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist (f s) (f t) = s - t", "consider \"t \\<le> dist x y \\<and> s \\<ge> dist x y\" | \"s \\<le> dist x y\" | \"t \\<ge> dist x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t \\<le> dist x y \\<and> dist x y \\<le> s \\<Longrightarrow>\n             thesis;\n     s \\<le> dist x y \\<Longrightarrow> thesis;\n     dist x y \\<le> t \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by fastforce"], ["proof (state)\nthis:\n  \\<lbrakk>t \\<le> dist x y \\<and> dist x y \\<le> s \\<Longrightarrow>\n           ?thesis;\n   s \\<le> dist x y \\<Longrightarrow> ?thesis;\n   dist x y \\<le> t \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. dist (f s) (f t) = s - t", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>t \\<le> dist x y \\<and> dist x y \\<le> s \\<Longrightarrow>\n           ?thesis;\n   s \\<le> dist x y \\<Longrightarrow> ?thesis;\n   dist x y \\<le> t \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>t \\<le> dist x y \\<and> dist x y \\<le> s \\<Longrightarrow>\n           ?thesis;\n   s \\<le> dist x y \\<Longrightarrow> ?thesis;\n   dist x y \\<le> t \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. dist (f s) (f t) = s - t", "proof (cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. t \\<le> dist x y \\<and> dist x y \\<le> s \\<Longrightarrow>\n    dist (f s) (f t) = s - t\n 2. s \\<le> dist x y \\<Longrightarrow> dist (f s) (f t) = s - t\n 3. dist x y \\<le> t \\<Longrightarrow> dist (f s) (f t) = s - t", "case 1"], ["proof (state)\nthis:\n  t \\<le> dist x y \\<and> dist x y \\<le> s\n\ngoal (3 subgoals):\n 1. t \\<le> dist x y \\<and> dist x y \\<le> s \\<Longrightarrow>\n    dist (f s) (f t) = s - t\n 2. s \\<le> dist x y \\<Longrightarrow> dist (f s) (f t) = s - t\n 3. dist x y \\<le> t \\<Longrightarrow> dist (f s) (f t) = s - t", "have \"dist (f t) (f s) \\<le> dist (f t) (f (dist x y)) + dist (f (dist x y)) (f s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (f t) (f s)\n    \\<le> dist (f t) (f (dist x y)) + dist (f (dist x y)) (f s)", "using dist_triangle"], ["proof (prove)\nusing this:\n  dist ?x ?z \\<le> dist ?x ?y + dist ?y ?z\n\ngoal (1 subgoal):\n 1. dist (f t) (f s)\n    \\<le> dist (f t) (f (dist x y)) + dist (f (dist x y)) (f s)", "by auto"], ["proof (state)\nthis:\n  dist (f t) (f s)\n  \\<le> dist (f t) (f (dist x y)) + dist (f (dist x y)) (f s)\n\ngoal (3 subgoals):\n 1. t \\<le> dist x y \\<and> dist x y \\<le> s \\<Longrightarrow>\n    dist (f s) (f t) = s - t\n 2. s \\<le> dist x y \\<Longrightarrow> dist (f s) (f t) = s - t\n 3. dist x y \\<le> t \\<Longrightarrow> dist (f s) (f t) = s - t", "also"], ["proof (state)\nthis:\n  dist (f t) (f s)\n  \\<le> dist (f t) (f (dist x y)) + dist (f (dist x y)) (f s)\n\ngoal (3 subgoals):\n 1. t \\<le> dist x y \\<and> dist x y \\<le> s \\<Longrightarrow>\n    dist (f s) (f t) = s - t\n 2. s \\<le> dist x y \\<Longrightarrow> dist (f s) (f t) = s - t\n 3. dist x y \\<le> t \\<Longrightarrow> dist (f s) (f t) = s - t", "have \"... \\<le> (dist x y - t) + (s - dist x y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (f t) (f (dist x y)) + dist (f (dist x y)) (f s)\n    \\<le> dist x y - t + (s - dist x y)", "using that 1 Ifg[of t \"dist x y\"] Ifh[of \"dist x y\" s]"], ["proof (prove)\nusing this:\n  0 \\<le> t\n  t \\<le> s\n  s \\<le> dist x z\n  t \\<le> dist x y \\<and> dist x y \\<le> s\n  \\<lbrakk>0 \\<le> t; t \\<le> dist x y; dist x y \\<le> dist x y\\<rbrakk>\n  \\<Longrightarrow> dist (f (dist x y)) (f t) = dist x y - t\n  \\<lbrakk>dist x y \\<le> dist x y; dist x y \\<le> s;\n   s \\<le> dist x z\\<rbrakk>\n  \\<Longrightarrow> dist (f s) (f (dist x y)) = s - dist x y\n\ngoal (1 subgoal):\n 1. dist (f t) (f (dist x y)) + dist (f (dist x y)) (f s)\n    \\<le> dist x y - t + (s - dist x y)", "by (auto simp add: dist_commute intro: mono_intros)"], ["proof (state)\nthis:\n  dist (f t) (f (dist x y)) + dist (f (dist x y)) (f s)\n  \\<le> dist x y - t + (s - dist x y)\n\ngoal (3 subgoals):\n 1. t \\<le> dist x y \\<and> dist x y \\<le> s \\<Longrightarrow>\n    dist (f s) (f t) = s - t\n 2. s \\<le> dist x y \\<Longrightarrow> dist (f s) (f t) = s - t\n 3. dist x y \\<le> t \\<Longrightarrow> dist (f s) (f t) = s - t", "finally"], ["proof (chain)\npicking this:\n  dist (f t) (f s) \\<le> dist x y - t + (s - dist x y)", "have *: \"dist (f t) (f s) \\<le> s - t\""], ["proof (prove)\nusing this:\n  dist (f t) (f s) \\<le> dist x y - t + (s - dist x y)\n\ngoal (1 subgoal):\n 1. dist (f t) (f s) \\<le> s - t", "by simp"], ["proof (state)\nthis:\n  dist (f t) (f s) \\<le> s - t\n\ngoal (3 subgoals):\n 1. t \\<le> dist x y \\<and> dist x y \\<le> s \\<Longrightarrow>\n    dist (f s) (f t) = s - t\n 2. s \\<le> dist x y \\<Longrightarrow> dist (f s) (f t) = s - t\n 3. dist x y \\<le> t \\<Longrightarrow> dist (f s) (f t) = s - t", "have \"dist x z \\<le> dist (f 0) (f t) + dist (f t) (f s) + dist (f s) (f (dist x z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x z\n    \\<le> dist (f 0) (f t) + dist (f t) (f s) + dist (f s) (f (dist x z))", "unfolding \\<open>f 0 = x\\<close> \\<open>f (dist x z) = z\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x z \\<le> dist x (f t) + dist (f t) (f s) + dist (f s) z", "using dist_triangle4"], ["proof (prove)\nusing this:\n  dist ?x ?t \\<le> dist ?x ?y + dist ?y ?z + dist ?z ?t\n\ngoal (1 subgoal):\n 1. dist x z \\<le> dist x (f t) + dist (f t) (f s) + dist (f s) z", "by auto"], ["proof (state)\nthis:\n  dist x z\n  \\<le> dist (f 0) (f t) + dist (f t) (f s) + dist (f s) (f (dist x z))\n\ngoal (3 subgoals):\n 1. t \\<le> dist x y \\<and> dist x y \\<le> s \\<Longrightarrow>\n    dist (f s) (f t) = s - t\n 2. s \\<le> dist x y \\<Longrightarrow> dist (f s) (f t) = s - t\n 3. dist x y \\<le> t \\<Longrightarrow> dist (f s) (f t) = s - t", "also"], ["proof (state)\nthis:\n  dist x z\n  \\<le> dist (f 0) (f t) + dist (f t) (f s) + dist (f s) (f (dist x z))\n\ngoal (3 subgoals):\n 1. t \\<le> dist x y \\<and> dist x y \\<le> s \\<Longrightarrow>\n    dist (f s) (f t) = s - t\n 2. s \\<le> dist x y \\<Longrightarrow> dist (f s) (f t) = s - t\n 3. dist x y \\<le> t \\<Longrightarrow> dist (f s) (f t) = s - t", "have \"... \\<le> t + dist (f t) (f s) + (dist x z - s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (f 0) (f t) + dist (f t) (f s) + dist (f s) (f (dist x z))\n    \\<le> t + dist (f t) (f s) + (dist x z - s)", "using that 1 Ifg[of 0 t] Ifh[of s \"dist x z\"]"], ["proof (prove)\nusing this:\n  0 \\<le> t\n  t \\<le> s\n  s \\<le> dist x z\n  t \\<le> dist x y \\<and> dist x y \\<le> s\n  \\<lbrakk>0 \\<le> 0; 0 \\<le> t; t \\<le> dist x y\\<rbrakk>\n  \\<Longrightarrow> dist (f t) (f 0) = t - 0\n  \\<lbrakk>dist x y \\<le> s; s \\<le> dist x z;\n   dist x z \\<le> dist x z\\<rbrakk>\n  \\<Longrightarrow> dist (f (dist x z)) (f s) = dist x z - s\n\ngoal (1 subgoal):\n 1. dist (f 0) (f t) + dist (f t) (f s) + dist (f s) (f (dist x z))\n    \\<le> t + dist (f t) (f s) + (dist x z - s)", "by (auto simp add: dist_commute intro: mono_intros)"], ["proof (state)\nthis:\n  dist (f 0) (f t) + dist (f t) (f s) + dist (f s) (f (dist x z))\n  \\<le> t + dist (f t) (f s) + (dist x z - s)\n\ngoal (3 subgoals):\n 1. t \\<le> dist x y \\<and> dist x y \\<le> s \\<Longrightarrow>\n    dist (f s) (f t) = s - t\n 2. s \\<le> dist x y \\<Longrightarrow> dist (f s) (f t) = s - t\n 3. dist x y \\<le> t \\<Longrightarrow> dist (f s) (f t) = s - t", "finally"], ["proof (chain)\npicking this:\n  dist x z \\<le> t + dist (f t) (f s) + (dist x z - s)", "have \"s - t \\<le> dist (f t) (f s)\""], ["proof (prove)\nusing this:\n  dist x z \\<le> t + dist (f t) (f s) + (dist x z - s)\n\ngoal (1 subgoal):\n 1. s - t \\<le> dist (f t) (f s)", "by auto"], ["proof (state)\nthis:\n  s - t \\<le> dist (f t) (f s)\n\ngoal (3 subgoals):\n 1. t \\<le> dist x y \\<and> dist x y \\<le> s \\<Longrightarrow>\n    dist (f s) (f t) = s - t\n 2. s \\<le> dist x y \\<Longrightarrow> dist (f s) (f t) = s - t\n 3. dist x y \\<le> t \\<Longrightarrow> dist (f s) (f t) = s - t", "then"], ["proof (chain)\npicking this:\n  s - t \\<le> dist (f t) (f s)", "show \"dist (f s) (f t) = s-t\""], ["proof (prove)\nusing this:\n  s - t \\<le> dist (f t) (f s)\n\ngoal (1 subgoal):\n 1. dist (f s) (f t) = s - t", "using * dist_commute"], ["proof (prove)\nusing this:\n  s - t \\<le> dist (f t) (f s)\n  dist (f t) (f s) \\<le> s - t\n  dist ?x ?y = dist ?y ?x\n\ngoal (1 subgoal):\n 1. dist (f s) (f t) = s - t", "by auto"], ["proof (state)\nthis:\n  dist (f s) (f t) = s - t\n\ngoal (2 subgoals):\n 1. s \\<le> dist x y \\<Longrightarrow> dist (f s) (f t) = s - t\n 2. dist x y \\<le> t \\<Longrightarrow> dist (f s) (f t) = s - t", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. s \\<le> dist x y \\<Longrightarrow> dist (f s) (f t) = s - t\n 2. dist x y \\<le> t \\<Longrightarrow> dist (f s) (f t) = s - t", "case 2"], ["proof (state)\nthis:\n  s \\<le> dist x y\n\ngoal (2 subgoals):\n 1. s \\<le> dist x y \\<Longrightarrow> dist (f s) (f t) = s - t\n 2. dist x y \\<le> t \\<Longrightarrow> dist (f s) (f t) = s - t", "then"], ["proof (chain)\npicking this:\n  s \\<le> dist x y", "show ?thesis"], ["proof (prove)\nusing this:\n  s \\<le> dist x y\n\ngoal (1 subgoal):\n 1. dist (f s) (f t) = s - t", "using Ifg that"], ["proof (prove)\nusing this:\n  s \\<le> dist x y\n  \\<lbrakk>0 \\<le> ?t; ?t \\<le> ?s; ?s \\<le> dist x y\\<rbrakk>\n  \\<Longrightarrow> dist (f ?s) (f ?t) = ?s - ?t\n  0 \\<le> t\n  t \\<le> s\n  s \\<le> dist x z\n\ngoal (1 subgoal):\n 1. dist (f s) (f t) = s - t", "by auto"], ["proof (state)\nthis:\n  dist (f s) (f t) = s - t\n\ngoal (1 subgoal):\n 1. dist x y \\<le> t \\<Longrightarrow> dist (f s) (f t) = s - t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. dist x y \\<le> t \\<Longrightarrow> dist (f s) (f t) = s - t", "case 3"], ["proof (state)\nthis:\n  dist x y \\<le> t\n\ngoal (1 subgoal):\n 1. dist x y \\<le> t \\<Longrightarrow> dist (f s) (f t) = s - t", "then"], ["proof (chain)\npicking this:\n  dist x y \\<le> t", "show ?thesis"], ["proof (prove)\nusing this:\n  dist x y \\<le> t\n\ngoal (1 subgoal):\n 1. dist (f s) (f t) = s - t", "using Ifh that"], ["proof (prove)\nusing this:\n  dist x y \\<le> t\n  \\<lbrakk>dist x y \\<le> ?t; ?t \\<le> ?s; ?s \\<le> dist x z\\<rbrakk>\n  \\<Longrightarrow> dist (f ?s) (f ?t) = ?s - ?t\n  0 \\<le> t\n  t \\<le> s\n  s \\<le> dist x z\n\ngoal (1 subgoal):\n 1. dist (f s) (f t) = s - t", "by auto"], ["proof (state)\nthis:\n  dist (f s) (f t) = s - t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dist (f s) (f t) = s - t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>0 \\<le> ?t; ?t \\<le> ?s; ?s \\<le> dist x z\\<rbrakk>\n  \\<Longrightarrow> dist (f ?s) (f ?t) = ?s - ?t\n\ngoal (2 subgoals):\n 1. geodesic_segment_between (G \\<union> H) x z\n 2. G \\<inter> H = {y}", "have \"isometry_on {0..dist x z} f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isometry_on {0..dist x z} f", "unfolding isometry_on_def dist_real_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>xa\\<in>{0..dist x z}.\n       \\<forall>y\\<in>{0..dist x z}. dist (f xa) (f y) = \\<bar>xa - y\\<bar>", "using I"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<le> ?t; ?t \\<le> ?s; ?s \\<le> dist x z\\<rbrakk>\n  \\<Longrightarrow> dist (f ?s) (f ?t) = ?s - ?t\n\ngoal (1 subgoal):\n 1. \\<forall>xa\\<in>{0..dist x z}.\n       \\<forall>y\\<in>{0..dist x z}. dist (f xa) (f y) = \\<bar>xa - y\\<bar>", "by (auto, metis abs_of_nonneg dist_commute dist_real_def le_cases zero_le_dist)"], ["proof (state)\nthis:\n  isometry_on {0..dist x z} f\n\ngoal (2 subgoals):\n 1. geodesic_segment_between (G \\<union> H) x z\n 2. G \\<inter> H = {y}", "then"], ["proof (chain)\npicking this:\n  isometry_on {0..dist x z} f", "show \"geodesic_segment_between (G \\<union> H) x z\""], ["proof (prove)\nusing this:\n  isometry_on {0..dist x z} f\n\ngoal (1 subgoal):\n 1. geodesic_segment_between (G \\<union> H) x z", "unfolding geodesic_segment_between_def"], ["proof (prove)\nusing this:\n  isometry_on {0..dist x z} f\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       g 0 = x \\<and>\n       g (dist x z) = z \\<and>\n       isometry_on {0..dist x z} g \\<and> G \\<union> H = g ` {0..dist x z}", "using \\<open>f 0 = x\\<close> \\<open>f (dist x z) = z\\<close> \\<open>f`{0..dist x z} = G \\<union> H\\<close>"], ["proof (prove)\nusing this:\n  isometry_on {0..dist x z} f\n  f 0 = x\n  f (dist x z) = z\n  f ` {0..dist x z} = G \\<union> H\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       g 0 = x \\<and>\n       g (dist x z) = z \\<and>\n       isometry_on {0..dist x z} g \\<and> G \\<union> H = g ` {0..dist x z}", "by auto"], ["proof (state)\nthis:\n  geodesic_segment_between (G \\<union> H) x z\n\ngoal (1 subgoal):\n 1. G \\<inter> H = {y}", "have \"G \\<inter> H \\<subseteq> {y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<inter> H \\<subseteq> {y}", "proof (auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. \\<lbrakk>x \\<in> G; x \\<in> H\\<rbrakk> \\<Longrightarrow> x = y", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. \\<lbrakk>x \\<in> G; x \\<in> H\\<rbrakk> \\<Longrightarrow> x = y", "assume a: \"a \\<in> G\" \"a \\<in> H\""], ["proof (state)\nthis:\n  a \\<in> G\n  a \\<in> H\n\ngoal (1 subgoal):\n 1. \\<And>x. \\<lbrakk>x \\<in> G; x \\<in> H\\<rbrakk> \\<Longrightarrow> x = y", "obtain s where s: \"s \\<in> {0..dist x y}\" \"a = g s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>s \\<in> {0..dist x y}; a = g s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using a g(4)"], ["proof (prove)\nusing this:\n  a \\<in> G\n  a \\<in> H\n  G = g ` {0..dist x y}\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>s \\<in> {0..dist x y}; a = g s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s \\<in> {0..dist x y}\n  a = g s\n\ngoal (1 subgoal):\n 1. \\<And>x. \\<lbrakk>x \\<in> G; x \\<in> H\\<rbrakk> \\<Longrightarrow> x = y", "obtain t where t: \"t \\<in> {dist x y..dist x z}\" \"a = h t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>t \\<in> {dist x y..dist x z}; a = h t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using a h(4)"], ["proof (prove)\nusing this:\n  a \\<in> G\n  a \\<in> H\n  H = h ` {dist x y..dist x z}\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>t \\<in> {dist x y..dist x z}; a = h t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  t \\<in> {dist x y..dist x z}\n  a = h t\n\ngoal (1 subgoal):\n 1. \\<And>x. \\<lbrakk>x \\<in> G; x \\<in> H\\<rbrakk> \\<Longrightarrow> x = y", "have \"a = f s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a = f s", "using fg s"], ["proof (prove)\nusing this:\n  ?t \\<le> dist x y \\<Longrightarrow> f ?t = g ?t\n  s \\<in> {0..dist x y}\n  a = g s\n\ngoal (1 subgoal):\n 1. a = f s", "by auto"], ["proof (state)\nthis:\n  a = f s\n\ngoal (1 subgoal):\n 1. \\<And>x. \\<lbrakk>x \\<in> G; x \\<in> H\\<rbrakk> \\<Longrightarrow> x = y", "moreover"], ["proof (state)\nthis:\n  a = f s\n\ngoal (1 subgoal):\n 1. \\<And>x. \\<lbrakk>x \\<in> G; x \\<in> H\\<rbrakk> \\<Longrightarrow> x = y", "have \"a = f t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a = f t", "using fh t"], ["proof (prove)\nusing this:\n  dist x y \\<le> ?t \\<Longrightarrow> f ?t = h ?t\n  t \\<in> {dist x y..dist x z}\n  a = h t\n\ngoal (1 subgoal):\n 1. a = f t", "by auto"], ["proof (state)\nthis:\n  a = f t\n\ngoal (1 subgoal):\n 1. \\<And>x. \\<lbrakk>x \\<in> G; x \\<in> H\\<rbrakk> \\<Longrightarrow> x = y", "ultimately"], ["proof (chain)\npicking this:\n  a = f s\n  a = f t", "have \"s = t\""], ["proof (prove)\nusing this:\n  a = f s\n  a = f t\n\ngoal (1 subgoal):\n 1. s = t", "using isometry_onD[OF \\<open>isometry_on {0..dist x z} f\\<close>, of s t] s(1) t(1)"], ["proof (prove)\nusing this:\n  a = f s\n  a = f t\n  \\<lbrakk>s \\<in> {0..dist x z}; t \\<in> {0..dist x z}\\<rbrakk>\n  \\<Longrightarrow> dist (f s) (f t) = dist s t\n  s \\<in> {0..dist x y}\n  t \\<in> {dist x y..dist x z}\n\ngoal (1 subgoal):\n 1. s = t", "by auto"], ["proof (state)\nthis:\n  s = t\n\ngoal (1 subgoal):\n 1. \\<And>x. \\<lbrakk>x \\<in> G; x \\<in> H\\<rbrakk> \\<Longrightarrow> x = y", "then"], ["proof (chain)\npicking this:\n  s = t", "have \"s = dist x y\""], ["proof (prove)\nusing this:\n  s = t\n\ngoal (1 subgoal):\n 1. s = dist x y", "using s t"], ["proof (prove)\nusing this:\n  s = t\n  s \\<in> {0..dist x y}\n  a = g s\n  t \\<in> {dist x y..dist x z}\n  a = h t\n\ngoal (1 subgoal):\n 1. s = dist x y", "by auto"], ["proof (state)\nthis:\n  s = dist x y\n\ngoal (1 subgoal):\n 1. \\<And>x. \\<lbrakk>x \\<in> G; x \\<in> H\\<rbrakk> \\<Longrightarrow> x = y", "then"], ["proof (chain)\npicking this:\n  s = dist x y", "show \"a = y\""], ["proof (prove)\nusing this:\n  s = dist x y\n\ngoal (1 subgoal):\n 1. a = y", "using s(2) g"], ["proof (prove)\nusing this:\n  s = dist x y\n  a = g s\n  g 0 = x\n  g (dist x y) = y\n  isometry_on {0..dist x y} g\n  G = g ` {0..dist x y}\n\ngoal (1 subgoal):\n 1. a = y", "by auto"], ["proof (state)\nthis:\n  a = y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  G \\<inter> H \\<subseteq> {y}\n\ngoal (1 subgoal):\n 1. G \\<inter> H = {y}", "then"], ["proof (chain)\npicking this:\n  G \\<inter> H \\<subseteq> {y}", "show \"G \\<inter> H = {y}\""], ["proof (prove)\nusing this:\n  G \\<inter> H \\<subseteq> {y}\n\ngoal (1 subgoal):\n 1. G \\<inter> H = {y}", "using assms"], ["proof (prove)\nusing this:\n  G \\<inter> H \\<subseteq> {y}\n  dist x z = dist x y + dist y z\n  geodesic_segment_between G x y\n  geodesic_segment_between H y z\n\ngoal (1 subgoal):\n 1. G \\<inter> H = {y}", "by auto"], ["proof (state)\nthis:\n  G \\<inter> H = {y}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma geodesic_segment_dist_le:\n  assumes \"geodesic_segment_between G x y\" \"a \\<in> G\" \"b \\<in> G\"\n  shows \"dist a b \\<le> dist x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist a b \\<le> dist x y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist a b \\<le> dist x y", "obtain g where g: \"g 0 = x\" \"g (dist x y) = y\" \"isometry_on {0..dist x y} g\" \"G = g`{0..dist x y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g 0 = x; g (dist x y) = y; isometry_on {0..dist x y} g;\n         G = g ` {0..dist x y}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson \\<open>geodesic_segment_between G x y\\<close> geodesic_segment_between_def)"], ["proof (state)\nthis:\n  g 0 = x\n  g (dist x y) = y\n  isometry_on {0..dist x y} g\n  G = g ` {0..dist x y}\n\ngoal (1 subgoal):\n 1. dist a b \\<le> dist x y", "obtain s t where st: \"s \\<in> {0..dist x y}\" \"t \\<in> {0..dist x y}\" \"a = g s\" \"b = g t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s t.\n        \\<lbrakk>s \\<in> {0..dist x y}; t \\<in> {0..dist x y}; a = g s;\n         b = g t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using g(4) assms"], ["proof (prove)\nusing this:\n  G = g ` {0..dist x y}\n  geodesic_segment_between G x y\n  a \\<in> G\n  b \\<in> G\n\ngoal (1 subgoal):\n 1. (\\<And>s t.\n        \\<lbrakk>s \\<in> {0..dist x y}; t \\<in> {0..dist x y}; a = g s;\n         b = g t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s \\<in> {0..dist x y}\n  t \\<in> {0..dist x y}\n  a = g s\n  b = g t\n\ngoal (1 subgoal):\n 1. dist a b \\<le> dist x y", "have \"dist a b = abs(s-t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist a b = \\<bar>s - t\\<bar>", "using isometry_onD[OF g(3) st(1) st(2)]"], ["proof (prove)\nusing this:\n  dist (g s) (g t) = dist s t\n\ngoal (1 subgoal):\n 1. dist a b = \\<bar>s - t\\<bar>", "unfolding st(3) st(4) dist_real_def"], ["proof (prove)\nusing this:\n  dist (g s) (g t) = \\<bar>s - t\\<bar>\n\ngoal (1 subgoal):\n 1. dist (g s) (g t) = \\<bar>s - t\\<bar>", "by simp"], ["proof (state)\nthis:\n  dist a b = \\<bar>s - t\\<bar>\n\ngoal (1 subgoal):\n 1. dist a b \\<le> dist x y", "then"], ["proof (chain)\npicking this:\n  dist a b = \\<bar>s - t\\<bar>", "show \"dist a b \\<le> dist x y\""], ["proof (prove)\nusing this:\n  dist a b = \\<bar>s - t\\<bar>\n\ngoal (1 subgoal):\n 1. dist a b \\<le> dist x y", "using st(1) st(2)"], ["proof (prove)\nusing this:\n  dist a b = \\<bar>s - t\\<bar>\n  s \\<in> {0..dist x y}\n  t \\<in> {0..dist x y}\n\ngoal (1 subgoal):\n 1. dist a b \\<le> dist x y", "unfolding dist_real_def"], ["proof (prove)\nusing this:\n  dist a b = \\<bar>s - t\\<bar>\n  s \\<in> {0..dist x y}\n  t \\<in> {0..dist x y}\n\ngoal (1 subgoal):\n 1. dist a b \\<le> dist x y", "by auto"], ["proof (state)\nthis:\n  dist a b \\<le> dist x y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma geodesic_segment_param [simp]:\n  assumes \"geodesic_segment_between G x y\"\n  shows \"geodesic_segment_param G x 0 = x\"\n        \"geodesic_segment_param G x (dist x y) = y\"\n        \"t \\<in> {0..dist x y} \\<Longrightarrow> geodesic_segment_param G x t \\<in> G\"\n        \"isometry_on {0..dist x y} (geodesic_segment_param G x)\"\n        \"(geodesic_segment_param G x)`{0..dist x y} = G\"\n        \"t \\<in> {0..dist x y} \\<Longrightarrow> dist x (geodesic_segment_param G x t) = t\"\n        \"s \\<in> {0..dist x y} \\<Longrightarrow> t \\<in> {0..dist x y} \\<Longrightarrow> dist (geodesic_segment_param G x s) (geodesic_segment_param G x t) = abs(s-t)\"\n        \"z \\<in> G \\<Longrightarrow> z = geodesic_segment_param G x (dist x z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((geodesic_segment_param G x 0 = x &&&\n      geodesic_segment_param G x (dist x y) = y) &&&\n     (t \\<in> {0..dist x y} \\<Longrightarrow>\n      geodesic_segment_param G x t \\<in> G) &&&\n     isometry_on {0..dist x y} (geodesic_segment_param G x)) &&&\n    (geodesic_segment_param G x ` {0..dist x y} = G &&&\n     (t \\<in> {0..dist x y} \\<Longrightarrow>\n      dist x (geodesic_segment_param G x t) = t)) &&&\n    (\\<lbrakk>s \\<in> {0..dist x y}; t \\<in> {0..dist x y}\\<rbrakk>\n     \\<Longrightarrow> dist (geodesic_segment_param G x s)\n                        (geodesic_segment_param G x t) =\n                       \\<bar>s - t\\<bar>) &&&\n    (z \\<in> G \\<Longrightarrow> z = geodesic_segment_param G x (dist x z))", "proof -"], ["proof (state)\ngoal (8 subgoals):\n 1. geodesic_segment_param G x 0 = x\n 2. geodesic_segment_param G x (dist x y) = y\n 3. t \\<in> {0..dist x y} \\<Longrightarrow>\n    geodesic_segment_param G x t \\<in> G\n 4. isometry_on {0..dist x y} (geodesic_segment_param G x)\n 5. geodesic_segment_param G x ` {0..dist x y} = G\n 6. t \\<in> {0..dist x y} \\<Longrightarrow>\n    dist x (geodesic_segment_param G x t) = t\n 7. \\<lbrakk>s \\<in> {0..dist x y}; t \\<in> {0..dist x y}\\<rbrakk>\n    \\<Longrightarrow> dist (geodesic_segment_param G x s)\n                       (geodesic_segment_param G x t) =\n                      \\<bar>s - t\\<bar>\n 8. z \\<in> G \\<Longrightarrow> z = geodesic_segment_param G x (dist x z)", "obtain g::\"real\\<Rightarrow>'a\" where g: \"g 0 = x\" \"g (dist x y) = y\" \"isometry_on {0..dist x y} g\" \"G = g`{0..dist x y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g 0 = x; g (dist x y) = y; isometry_on {0..dist x y} g;\n         G = g ` {0..dist x y}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson \\<open>geodesic_segment_between G x y\\<close> geodesic_segment_between_def)"], ["proof (state)\nthis:\n  g 0 = x\n  g (dist x y) = y\n  isometry_on {0..dist x y} g\n  G = g ` {0..dist x y}\n\ngoal (8 subgoals):\n 1. geodesic_segment_param G x 0 = x\n 2. geodesic_segment_param G x (dist x y) = y\n 3. t \\<in> {0..dist x y} \\<Longrightarrow>\n    geodesic_segment_param G x t \\<in> G\n 4. isometry_on {0..dist x y} (geodesic_segment_param G x)\n 5. geodesic_segment_param G x ` {0..dist x y} = G\n 6. t \\<in> {0..dist x y} \\<Longrightarrow>\n    dist x (geodesic_segment_param G x t) = t\n 7. \\<lbrakk>s \\<in> {0..dist x y}; t \\<in> {0..dist x y}\\<rbrakk>\n    \\<Longrightarrow> dist (geodesic_segment_param G x s)\n                       (geodesic_segment_param G x t) =\n                      \\<bar>s - t\\<bar>\n 8. z \\<in> G \\<Longrightarrow> z = geodesic_segment_param G x (dist x z)", "have *: \"g t \\<in> G \\<and> dist x (g t) = t\" if \"t \\<in> {0..dist x y}\" for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. g t \\<in> G \\<and> dist x (g t) = t", "using isometry_onD[OF g(3), of 0 t] that g(1) g(4)"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<in> {0..dist x y}; t \\<in> {0..dist x y}\\<rbrakk>\n  \\<Longrightarrow> dist (g 0) (g t) = dist 0 t\n  t \\<in> {0..dist x y}\n  g 0 = x\n  G = g ` {0..dist x y}\n\ngoal (1 subgoal):\n 1. g t \\<in> G \\<and> dist x (g t) = t", "unfolding dist_real_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<in> {0..dist x y}; t \\<in> {0..dist x y}\\<rbrakk>\n  \\<Longrightarrow> dist (g 0) (g t) = \\<bar>0 - t\\<bar>\n  t \\<in> {0..dist x y}\n  g 0 = x\n  G = g ` {0..dist x y}\n\ngoal (1 subgoal):\n 1. g t \\<in> G \\<and> dist x (g t) = t", "by auto"], ["proof (state)\nthis:\n  ?t \\<in> {0..dist x y} \\<Longrightarrow>\n  g ?t \\<in> G \\<and> dist x (g ?t) = ?t\n\ngoal (8 subgoals):\n 1. geodesic_segment_param G x 0 = x\n 2. geodesic_segment_param G x (dist x y) = y\n 3. t \\<in> {0..dist x y} \\<Longrightarrow>\n    geodesic_segment_param G x t \\<in> G\n 4. isometry_on {0..dist x y} (geodesic_segment_param G x)\n 5. geodesic_segment_param G x ` {0..dist x y} = G\n 6. t \\<in> {0..dist x y} \\<Longrightarrow>\n    dist x (geodesic_segment_param G x t) = t\n 7. \\<lbrakk>s \\<in> {0..dist x y}; t \\<in> {0..dist x y}\\<rbrakk>\n    \\<Longrightarrow> dist (geodesic_segment_param G x s)\n                       (geodesic_segment_param G x t) =\n                      \\<bar>s - t\\<bar>\n 8. z \\<in> G \\<Longrightarrow> z = geodesic_segment_param G x (dist x z)", "have G: \"geodesic_segment_param G x t = g t\" if \"t \\<in> {0..dist x y}\" for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_param G x t = g t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. geodesic_segment_param G x t = g t", "have A: \"geodesic_segment_param G x t \\<in> G \\<and> dist x (geodesic_segment_param G x t) = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_param G x t \\<in> G \\<and>\n    dist x (geodesic_segment_param G x t) = t", "using *[OF that]"], ["proof (prove)\nusing this:\n  g t \\<in> G \\<and> dist x (g t) = t\n\ngoal (1 subgoal):\n 1. geodesic_segment_param G x t \\<in> G \\<and>\n    dist x (geodesic_segment_param G x t) = t", "unfolding geodesic_segment_param_def"], ["proof (prove)\nusing this:\n  g t \\<in> G \\<and> dist x (g t) = t\n\ngoal (1 subgoal):\n 1. (if \\<exists>w. w \\<in> G \\<and> dist x w = t\n     then SOME w. w \\<in> G \\<and> dist x w = t else SOME w. w \\<in> G)\n    \\<in> G \\<and>\n    dist x\n     (if \\<exists>w. w \\<in> G \\<and> dist x w = t\n      then SOME w. w \\<in> G \\<and> dist x w = t else SOME w. w \\<in> G) =\n    t", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>w.\n       \\<lbrakk>g (dist x w) \\<in> G; dist x (g (dist x w)) = dist x w;\n        w \\<in> G; t = dist x w\\<rbrakk>\n       \\<Longrightarrow> (SOME wa. wa \\<in> G \\<and> dist x wa = dist x w)\n                         \\<in> G\n 2. \\<And>w.\n       \\<lbrakk>g (dist x w) \\<in> G; dist x (g (dist x w)) = dist x w;\n        w \\<in> G; t = dist x w\\<rbrakk>\n       \\<Longrightarrow> dist x\n                          (SOME wa.\n                              wa \\<in> G \\<and> dist x wa = dist x w) =\n                         dist x w", "using *[OF that]"], ["proof (prove)\nusing this:\n  g t \\<in> G \\<and> dist x (g t) = t\n\ngoal (2 subgoals):\n 1. \\<And>w.\n       \\<lbrakk>g (dist x w) \\<in> G; dist x (g (dist x w)) = dist x w;\n        w \\<in> G; t = dist x w\\<rbrakk>\n       \\<Longrightarrow> (SOME wa. wa \\<in> G \\<and> dist x wa = dist x w)\n                         \\<in> G\n 2. \\<And>w.\n       \\<lbrakk>g (dist x w) \\<in> G; dist x (g (dist x w)) = dist x w;\n        w \\<in> G; t = dist x w\\<rbrakk>\n       \\<Longrightarrow> dist x\n                          (SOME wa.\n                              wa \\<in> G \\<and> dist x wa = dist x w) =\n                         dist x w", "by (metis (mono_tags, lifting) someI)+"], ["proof (state)\nthis:\n  geodesic_segment_param G x t \\<in> G \\<and>\n  dist x (geodesic_segment_param G x t) = t\n\ngoal (1 subgoal):\n 1. geodesic_segment_param G x t = g t", "obtain s where s: \"geodesic_segment_param G x t = g s\" \"s \\<in> {0..dist x y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>geodesic_segment_param G x t = g s;\n         s \\<in> {0..dist x y}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using A g(4)"], ["proof (prove)\nusing this:\n  geodesic_segment_param G x t \\<in> G \\<and>\n  dist x (geodesic_segment_param G x t) = t\n  G = g ` {0..dist x y}\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>geodesic_segment_param G x t = g s;\n         s \\<in> {0..dist x y}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  geodesic_segment_param G x t = g s\n  s \\<in> {0..dist x y}\n\ngoal (1 subgoal):\n 1. geodesic_segment_param G x t = g t", "have \"s = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s = t", "using *[OF \\<open>s \\<in> {0..dist x y}\\<close>] A"], ["proof (prove)\nusing this:\n  g s \\<in> G \\<and> dist x (g s) = s\n  geodesic_segment_param G x t \\<in> G \\<and>\n  dist x (geodesic_segment_param G x t) = t\n\ngoal (1 subgoal):\n 1. s = t", "unfolding s(1)"], ["proof (prove)\nusing this:\n  g s \\<in> G \\<and> dist x (g s) = s\n  g s \\<in> G \\<and> dist x (g s) = t\n\ngoal (1 subgoal):\n 1. s = t", "by auto"], ["proof (state)\nthis:\n  s = t\n\ngoal (1 subgoal):\n 1. geodesic_segment_param G x t = g t", "then"], ["proof (chain)\npicking this:\n  s = t", "show ?thesis"], ["proof (prove)\nusing this:\n  s = t\n\ngoal (1 subgoal):\n 1. geodesic_segment_param G x t = g t", "using s"], ["proof (prove)\nusing this:\n  s = t\n  geodesic_segment_param G x t = g s\n  s \\<in> {0..dist x y}\n\ngoal (1 subgoal):\n 1. geodesic_segment_param G x t = g t", "by auto"], ["proof (state)\nthis:\n  geodesic_segment_param G x t = g t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?t \\<in> {0..dist x y} \\<Longrightarrow>\n  geodesic_segment_param G x ?t = g ?t\n\ngoal (8 subgoals):\n 1. geodesic_segment_param G x 0 = x\n 2. geodesic_segment_param G x (dist x y) = y\n 3. t \\<in> {0..dist x y} \\<Longrightarrow>\n    geodesic_segment_param G x t \\<in> G\n 4. isometry_on {0..dist x y} (geodesic_segment_param G x)\n 5. geodesic_segment_param G x ` {0..dist x y} = G\n 6. t \\<in> {0..dist x y} \\<Longrightarrow>\n    dist x (geodesic_segment_param G x t) = t\n 7. \\<lbrakk>s \\<in> {0..dist x y}; t \\<in> {0..dist x y}\\<rbrakk>\n    \\<Longrightarrow> dist (geodesic_segment_param G x s)\n                       (geodesic_segment_param G x t) =\n                      \\<bar>s - t\\<bar>\n 8. z \\<in> G \\<Longrightarrow> z = geodesic_segment_param G x (dist x z)", "show \"geodesic_segment_param G x 0 = x\"\n       \"geodesic_segment_param G x (dist x y) = y\"\n       \"t \\<in> {0..dist x y} \\<Longrightarrow> geodesic_segment_param G x t \\<in> G\"\n       \"isometry_on {0..dist x y} (geodesic_segment_param G x)\"\n       \"(geodesic_segment_param G x)`{0..dist x y} = G\"\n       \"t \\<in> {0..dist x y} \\<Longrightarrow> dist x (geodesic_segment_param G x t) = t\"\n       \"s \\<in> {0..dist x y} \\<Longrightarrow> t \\<in> {0..dist x y} \\<Longrightarrow> dist (geodesic_segment_param G x s) (geodesic_segment_param G x t) = abs(s-t)\"\n       \"z \\<in> G \\<Longrightarrow> z = geodesic_segment_param G x (dist x z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((geodesic_segment_param G x 0 = x &&&\n      geodesic_segment_param G x (dist x y) = y) &&&\n     (t \\<in> {0..dist x y} \\<Longrightarrow>\n      geodesic_segment_param G x t \\<in> G) &&&\n     isometry_on {0..dist x y} (geodesic_segment_param G x)) &&&\n    (geodesic_segment_param G x ` {0..dist x y} = G &&&\n     (t \\<in> {0..dist x y} \\<Longrightarrow>\n      dist x (geodesic_segment_param G x t) = t)) &&&\n    (\\<lbrakk>s \\<in> {0..dist x y}; t \\<in> {0..dist x y}\\<rbrakk>\n     \\<Longrightarrow> dist (geodesic_segment_param G x s)\n                        (geodesic_segment_param G x t) =\n                       \\<bar>s - t\\<bar>) &&&\n    (z \\<in> G \\<Longrightarrow> z = geodesic_segment_param G x (dist x z))", "using G g"], ["proof (prove)\nusing this:\n  ?t \\<in> {0..dist x y} \\<Longrightarrow>\n  geodesic_segment_param G x ?t = g ?t\n  g 0 = x\n  g (dist x y) = y\n  isometry_on {0..dist x y} g\n  G = g ` {0..dist x y}\n\ngoal (1 subgoal):\n 1. ((geodesic_segment_param G x 0 = x &&&\n      geodesic_segment_param G x (dist x y) = y) &&&\n     (t \\<in> {0..dist x y} \\<Longrightarrow>\n      geodesic_segment_param G x t \\<in> G) &&&\n     isometry_on {0..dist x y} (geodesic_segment_param G x)) &&&\n    (geodesic_segment_param G x ` {0..dist x y} = G &&&\n     (t \\<in> {0..dist x y} \\<Longrightarrow>\n      dist x (geodesic_segment_param G x t) = t)) &&&\n    (\\<lbrakk>s \\<in> {0..dist x y}; t \\<in> {0..dist x y}\\<rbrakk>\n     \\<Longrightarrow> dist (geodesic_segment_param G x s)\n                        (geodesic_segment_param G x t) =\n                       \\<bar>s - t\\<bar>) &&&\n    (z \\<in> G \\<Longrightarrow> z = geodesic_segment_param G x (dist x z))", "apply (auto simp add: rev_image_eqI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<And>t.\n                0 \\<le> t \\<and> t \\<le> dist (g 0) y \\<Longrightarrow>\n                geodesic_segment_param (g ` {0..dist (g 0) y}) (g 0) t =\n                g t;\n     g (dist (g 0) y) = y; isometry_on {0..dist (g 0) y} g;\n     G = g ` {0..dist (g 0) y}; x = g 0\\<rbrakk>\n    \\<Longrightarrow> isometry_on {0..dist (g 0) y}\n                       (geodesic_segment_param (g ` {0..dist (g 0) y})\n                         (g 0))\n 2. \\<lbrakk>\\<And>t.\n                0 \\<le> t \\<and> t \\<le> dist (g 0) y \\<Longrightarrow>\n                geodesic_segment_param (g ` {0..dist (g 0) y}) (g 0) t =\n                g t;\n     g (dist (g 0) y) = y; isometry_on {0..dist (g 0) y} g;\n     G = g ` {0..dist (g 0) y}; x = g 0; 0 \\<le> t;\n     t \\<le> dist (g 0) y\\<rbrakk>\n    \\<Longrightarrow> dist (g 0) (g t) = t\n 3. \\<lbrakk>\\<And>t.\n                0 \\<le> t \\<and> t \\<le> dist (g 0) y \\<Longrightarrow>\n                geodesic_segment_param (g ` {0..dist (g 0) y}) (g 0) t =\n                g t;\n     g (dist (g 0) y) = y; isometry_on {0..dist (g 0) y} g;\n     G = g ` {0..dist (g 0) y}; x = g 0; 0 \\<le> s; s \\<le> dist (g 0) y;\n     0 \\<le> t; t \\<le> dist (g 0) y\\<rbrakk>\n    \\<Longrightarrow> dist (g s) (g t) = \\<bar>s - t\\<bar>\n 4. \\<And>xa.\n       \\<lbrakk>\\<And>t.\n                   0 \\<le> t \\<and> t \\<le> dist (g 0) y \\<Longrightarrow>\n                   geodesic_segment_param (g ` {0..dist (g 0) y}) (g 0) t =\n                   g t;\n        g (dist (g 0) y) = y; isometry_on {0..dist (g 0) y} g;\n        G = g ` {0..dist (g 0) y}; x = g 0; z = g xa; 0 \\<le> xa;\n        xa \\<le> dist (g 0) y\\<rbrakk>\n       \\<Longrightarrow> g xa =\n                         geodesic_segment_param (g ` {0..dist (g 0) y})\n                          (g 0) (dist (g 0) (g xa))", "using G isometry_on_cong * atLeastAtMost_iff"], ["proof (prove)\nusing this:\n  ?t \\<in> {0..dist x y} \\<Longrightarrow>\n  geodesic_segment_param G x ?t = g ?t\n  \\<lbrakk>isometry_on ?X ?f;\n   \\<And>x. x \\<in> ?X \\<Longrightarrow> ?g x = ?f x\\<rbrakk>\n  \\<Longrightarrow> isometry_on ?X ?g\n  ?t \\<in> {0..dist x y} \\<Longrightarrow>\n  g ?t \\<in> G \\<and> dist x (g ?t) = ?t\n  (?i \\<in> {?l..?u}) = (?l \\<le> ?i \\<and> ?i \\<le> ?u)\n\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<And>t.\n                0 \\<le> t \\<and> t \\<le> dist (g 0) y \\<Longrightarrow>\n                geodesic_segment_param (g ` {0..dist (g 0) y}) (g 0) t =\n                g t;\n     g (dist (g 0) y) = y; isometry_on {0..dist (g 0) y} g;\n     G = g ` {0..dist (g 0) y}; x = g 0\\<rbrakk>\n    \\<Longrightarrow> isometry_on {0..dist (g 0) y}\n                       (geodesic_segment_param (g ` {0..dist (g 0) y})\n                         (g 0))\n 2. \\<lbrakk>\\<And>t.\n                0 \\<le> t \\<and> t \\<le> dist (g 0) y \\<Longrightarrow>\n                geodesic_segment_param (g ` {0..dist (g 0) y}) (g 0) t =\n                g t;\n     g (dist (g 0) y) = y; isometry_on {0..dist (g 0) y} g;\n     G = g ` {0..dist (g 0) y}; x = g 0; 0 \\<le> t;\n     t \\<le> dist (g 0) y\\<rbrakk>\n    \\<Longrightarrow> dist (g 0) (g t) = t\n 3. \\<lbrakk>\\<And>t.\n                0 \\<le> t \\<and> t \\<le> dist (g 0) y \\<Longrightarrow>\n                geodesic_segment_param (g ` {0..dist (g 0) y}) (g 0) t =\n                g t;\n     g (dist (g 0) y) = y; isometry_on {0..dist (g 0) y} g;\n     G = g ` {0..dist (g 0) y}; x = g 0; 0 \\<le> s; s \\<le> dist (g 0) y;\n     0 \\<le> t; t \\<le> dist (g 0) y\\<rbrakk>\n    \\<Longrightarrow> dist (g s) (g t) = \\<bar>s - t\\<bar>\n 4. \\<And>xa.\n       \\<lbrakk>\\<And>t.\n                   0 \\<le> t \\<and> t \\<le> dist (g 0) y \\<Longrightarrow>\n                   geodesic_segment_param (g ` {0..dist (g 0) y}) (g 0) t =\n                   g t;\n        g (dist (g 0) y) = y; isometry_on {0..dist (g 0) y} g;\n        G = g ` {0..dist (g 0) y}; x = g 0; z = g xa; 0 \\<le> xa;\n        xa \\<le> dist (g 0) y\\<rbrakk>\n       \\<Longrightarrow> g xa =\n                         geodesic_segment_param (g ` {0..dist (g 0) y})\n                          (g 0) (dist (g 0) (g xa))", "apply blast"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>t.\n                0 \\<le> t \\<and> t \\<le> dist (g 0) y \\<Longrightarrow>\n                geodesic_segment_param (g ` {0..dist (g 0) y}) (g 0) t =\n                g t;\n     g (dist (g 0) y) = y; isometry_on {0..dist (g 0) y} g;\n     G = g ` {0..dist (g 0) y}; x = g 0; 0 \\<le> t;\n     t \\<le> dist (g 0) y\\<rbrakk>\n    \\<Longrightarrow> dist (g 0) (g t) = t\n 2. \\<lbrakk>\\<And>t.\n                0 \\<le> t \\<and> t \\<le> dist (g 0) y \\<Longrightarrow>\n                geodesic_segment_param (g ` {0..dist (g 0) y}) (g 0) t =\n                g t;\n     g (dist (g 0) y) = y; isometry_on {0..dist (g 0) y} g;\n     G = g ` {0..dist (g 0) y}; x = g 0; 0 \\<le> s; s \\<le> dist (g 0) y;\n     0 \\<le> t; t \\<le> dist (g 0) y\\<rbrakk>\n    \\<Longrightarrow> dist (g s) (g t) = \\<bar>s - t\\<bar>\n 3. \\<And>xa.\n       \\<lbrakk>\\<And>t.\n                   0 \\<le> t \\<and> t \\<le> dist (g 0) y \\<Longrightarrow>\n                   geodesic_segment_param (g ` {0..dist (g 0) y}) (g 0) t =\n                   g t;\n        g (dist (g 0) y) = y; isometry_on {0..dist (g 0) y} g;\n        G = g ` {0..dist (g 0) y}; x = g 0; z = g xa; 0 \\<le> xa;\n        xa \\<le> dist (g 0) y\\<rbrakk>\n       \\<Longrightarrow> g xa =\n                         geodesic_segment_param (g ` {0..dist (g 0) y})\n                          (g 0) (dist (g 0) (g xa))", "using G isometry_on_cong * atLeastAtMost_iff"], ["proof (prove)\nusing this:\n  ?t \\<in> {0..dist x y} \\<Longrightarrow>\n  geodesic_segment_param G x ?t = g ?t\n  \\<lbrakk>isometry_on ?X ?f;\n   \\<And>x. x \\<in> ?X \\<Longrightarrow> ?g x = ?f x\\<rbrakk>\n  \\<Longrightarrow> isometry_on ?X ?g\n  ?t \\<in> {0..dist x y} \\<Longrightarrow>\n  g ?t \\<in> G \\<and> dist x (g ?t) = ?t\n  (?i \\<in> {?l..?u}) = (?l \\<le> ?i \\<and> ?i \\<le> ?u)\n\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>t.\n                0 \\<le> t \\<and> t \\<le> dist (g 0) y \\<Longrightarrow>\n                geodesic_segment_param (g ` {0..dist (g 0) y}) (g 0) t =\n                g t;\n     g (dist (g 0) y) = y; isometry_on {0..dist (g 0) y} g;\n     G = g ` {0..dist (g 0) y}; x = g 0; 0 \\<le> t;\n     t \\<le> dist (g 0) y\\<rbrakk>\n    \\<Longrightarrow> dist (g 0) (g t) = t\n 2. \\<lbrakk>\\<And>t.\n                0 \\<le> t \\<and> t \\<le> dist (g 0) y \\<Longrightarrow>\n                geodesic_segment_param (g ` {0..dist (g 0) y}) (g 0) t =\n                g t;\n     g (dist (g 0) y) = y; isometry_on {0..dist (g 0) y} g;\n     G = g ` {0..dist (g 0) y}; x = g 0; 0 \\<le> s; s \\<le> dist (g 0) y;\n     0 \\<le> t; t \\<le> dist (g 0) y\\<rbrakk>\n    \\<Longrightarrow> dist (g s) (g t) = \\<bar>s - t\\<bar>\n 3. \\<And>xa.\n       \\<lbrakk>\\<And>t.\n                   0 \\<le> t \\<and> t \\<le> dist (g 0) y \\<Longrightarrow>\n                   geodesic_segment_param (g ` {0..dist (g 0) y}) (g 0) t =\n                   g t;\n        g (dist (g 0) y) = y; isometry_on {0..dist (g 0) y} g;\n        G = g ` {0..dist (g 0) y}; x = g 0; z = g xa; 0 \\<le> xa;\n        xa \\<le> dist (g 0) y\\<rbrakk>\n       \\<Longrightarrow> g xa =\n                         geodesic_segment_param (g ` {0..dist (g 0) y})\n                          (g 0) (dist (g 0) (g xa))", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>t.\n                0 \\<le> t \\<and> t \\<le> dist (g 0) y \\<Longrightarrow>\n                geodesic_segment_param (g ` {0..dist (g 0) y}) (g 0) t =\n                g t;\n     g (dist (g 0) y) = y; isometry_on {0..dist (g 0) y} g;\n     G = g ` {0..dist (g 0) y}; x = g 0; 0 \\<le> s; s \\<le> dist (g 0) y;\n     0 \\<le> t; t \\<le> dist (g 0) y\\<rbrakk>\n    \\<Longrightarrow> dist (g s) (g t) = \\<bar>s - t\\<bar>\n 2. \\<And>xa.\n       \\<lbrakk>\\<And>t.\n                   0 \\<le> t \\<and> t \\<le> dist (g 0) y \\<Longrightarrow>\n                   geodesic_segment_param (g ` {0..dist (g 0) y}) (g 0) t =\n                   g t;\n        g (dist (g 0) y) = y; isometry_on {0..dist (g 0) y} g;\n        G = g ` {0..dist (g 0) y}; x = g 0; z = g xa; 0 \\<le> xa;\n        xa \\<le> dist (g 0) y\\<rbrakk>\n       \\<Longrightarrow> g xa =\n                         geodesic_segment_param (g ` {0..dist (g 0) y})\n                          (g 0) (dist (g 0) (g xa))", "by (auto simp add: * dist_real_def isometry_onD)"], ["proof (state)\nthis:\n  geodesic_segment_param G x 0 = x\n  geodesic_segment_param G x (dist x y) = y\n  t \\<in> {0..dist x y} \\<Longrightarrow>\n  geodesic_segment_param G x t \\<in> G\n  isometry_on {0..dist x y} (geodesic_segment_param G x)\n  geodesic_segment_param G x ` {0..dist x y} = G\n  t \\<in> {0..dist x y} \\<Longrightarrow>\n  dist x (geodesic_segment_param G x t) = t\n  \\<lbrakk>s \\<in> {0..dist x y}; t \\<in> {0..dist x y}\\<rbrakk>\n  \\<Longrightarrow> dist (geodesic_segment_param G x s)\n                     (geodesic_segment_param G x t) =\n                    \\<bar>s - t\\<bar>\n  z \\<in> G \\<Longrightarrow> z = geodesic_segment_param G x (dist x z)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma geodesic_segment_param_in_segment:\n  assumes \"G \\<noteq> {}\"\n  shows \"geodesic_segment_param G x t \\<in> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_param G x t \\<in> G", "unfolding geodesic_segment_param_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if \\<exists>w. w \\<in> G \\<and> dist x w = t\n     then SOME w. w \\<in> G \\<and> dist x w = t else SOME w. w \\<in> G)\n    \\<in> G", "apply (auto, metis (mono_tags, lifting) someI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w.\n       w \\<in> G \\<longrightarrow> dist x w \\<noteq> t \\<Longrightarrow>\n    (SOME w. w \\<in> G) \\<in> G", "using assms some_in_eq"], ["proof (prove)\nusing this:\n  G \\<noteq> {}\n  ((SOME x. x \\<in> ?A) \\<in> ?A) = (?A \\<noteq> {})\n\ngoal (1 subgoal):\n 1. \\<forall>w.\n       w \\<in> G \\<longrightarrow> dist x w \\<noteq> t \\<Longrightarrow>\n    (SOME w. w \\<in> G) \\<in> G", "by fastforce"], ["", "lemma geodesic_segment_reverse_param:\n  assumes \"geodesic_segment_between G x y\"\n          \"t \\<in> {0..dist x y}\"\n  shows \"geodesic_segment_param G y (dist x y - t) = geodesic_segment_param G x t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_param G y (dist x y - t) = geodesic_segment_param G x t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. geodesic_segment_param G y (dist x y - t) = geodesic_segment_param G x t", "have * [simp]: \"geodesic_segment_between G y x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between G y x", "using geodesic_segment_commute[OF assms(1)]"], ["proof (prove)\nusing this:\n  geodesic_segment_between G y x\n\ngoal (1 subgoal):\n 1. geodesic_segment_between G y x", "by simp"], ["proof (state)\nthis:\n  geodesic_segment_between G y x\n\ngoal (1 subgoal):\n 1. geodesic_segment_param G y (dist x y - t) = geodesic_segment_param G x t", "have \"geodesic_segment_param G y (dist x y - t) \\<in> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_param G y (dist x y - t) \\<in> G", "apply (rule geodesic_segment_param(3)[of _ _ x])"], ["proof (prove)\ngoal (2 subgoals):\n 1. geodesic_segment_between G y x\n 2. dist x y - t \\<in> {0..dist y x}", "using assms(2)"], ["proof (prove)\nusing this:\n  t \\<in> {0..dist x y}\n\ngoal (2 subgoals):\n 1. geodesic_segment_between G y x\n 2. dist x y - t \\<in> {0..dist y x}", "by (auto simp add: dist_commute)"], ["proof (state)\nthis:\n  geodesic_segment_param G y (dist x y - t) \\<in> G\n\ngoal (1 subgoal):\n 1. geodesic_segment_param G y (dist x y - t) = geodesic_segment_param G x t", "moreover"], ["proof (state)\nthis:\n  geodesic_segment_param G y (dist x y - t) \\<in> G\n\ngoal (1 subgoal):\n 1. geodesic_segment_param G y (dist x y - t) = geodesic_segment_param G x t", "have \"dist (geodesic_segment_param G y (dist x y - t)) x = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (geodesic_segment_param G y (dist x y - t)) x = t", "using geodesic_segment_param(2)[OF *] geodesic_segment_param(7)[OF *, of \"dist x y -t\" \"dist x y\"] assms(2)"], ["proof (prove)\nusing this:\n  geodesic_segment_param G y (dist y x) = x\n  \\<lbrakk>dist x y - t \\<in> {0..dist y x};\n   dist x y \\<in> {0..dist y x}\\<rbrakk>\n  \\<Longrightarrow> dist (geodesic_segment_param G y (dist x y - t))\n                     (geodesic_segment_param G y (dist x y)) =\n                    \\<bar>dist x y - t - dist x y\\<bar>\n  t \\<in> {0..dist x y}\n\ngoal (1 subgoal):\n 1. dist (geodesic_segment_param G y (dist x y - t)) x = t", "by (auto simp add: dist_commute)"], ["proof (state)\nthis:\n  dist (geodesic_segment_param G y (dist x y - t)) x = t\n\ngoal (1 subgoal):\n 1. geodesic_segment_param G y (dist x y - t) = geodesic_segment_param G x t", "moreover"], ["proof (state)\nthis:\n  dist (geodesic_segment_param G y (dist x y - t)) x = t\n\ngoal (1 subgoal):\n 1. geodesic_segment_param G y (dist x y - t) = geodesic_segment_param G x t", "have \"geodesic_segment_param G x t \\<in> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_param G x t \\<in> G", "apply (rule geodesic_segment_param(3)[OF assms(1)])"], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> {0..dist x y}", "using assms(2)"], ["proof (prove)\nusing this:\n  t \\<in> {0..dist x y}\n\ngoal (1 subgoal):\n 1. t \\<in> {0..dist x y}", "by auto"], ["proof (state)\nthis:\n  geodesic_segment_param G x t \\<in> G\n\ngoal (1 subgoal):\n 1. geodesic_segment_param G y (dist x y - t) = geodesic_segment_param G x t", "moreover"], ["proof (state)\nthis:\n  geodesic_segment_param G x t \\<in> G\n\ngoal (1 subgoal):\n 1. geodesic_segment_param G y (dist x y - t) = geodesic_segment_param G x t", "have \"dist (geodesic_segment_param G x t) x = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (geodesic_segment_param G x t) x = t", "using geodesic_segment_param(6)[OF assms]"], ["proof (prove)\nusing this:\n  dist x (geodesic_segment_param G x t) = t\n\ngoal (1 subgoal):\n 1. dist (geodesic_segment_param G x t) x = t", "by (simp add: dist_commute)"], ["proof (state)\nthis:\n  dist (geodesic_segment_param G x t) x = t\n\ngoal (1 subgoal):\n 1. geodesic_segment_param G y (dist x y - t) = geodesic_segment_param G x t", "ultimately"], ["proof (chain)\npicking this:\n  geodesic_segment_param G y (dist x y - t) \\<in> G\n  dist (geodesic_segment_param G y (dist x y - t)) x = t\n  geodesic_segment_param G x t \\<in> G\n  dist (geodesic_segment_param G x t) x = t", "show ?thesis"], ["proof (prove)\nusing this:\n  geodesic_segment_param G y (dist x y - t) \\<in> G\n  dist (geodesic_segment_param G y (dist x y - t)) x = t\n  geodesic_segment_param G x t \\<in> G\n  dist (geodesic_segment_param G x t) x = t\n\ngoal (1 subgoal):\n 1. geodesic_segment_param G y (dist x y - t) = geodesic_segment_param G x t", "using geodesic_segment_dist_unique[OF assms(1)]"], ["proof (prove)\nusing this:\n  geodesic_segment_param G y (dist x y - t) \\<in> G\n  dist (geodesic_segment_param G y (dist x y - t)) x = t\n  geodesic_segment_param G x t \\<in> G\n  dist (geodesic_segment_param G x t) x = t\n  \\<lbrakk>?a \\<in> G; ?b \\<in> G; dist x ?a = dist x ?b\\<rbrakk>\n  \\<Longrightarrow> ?a = ?b\n\ngoal (1 subgoal):\n 1. geodesic_segment_param G y (dist x y - t) = geodesic_segment_param G x t", "by (simp add: dist_commute)"], ["proof (state)\nthis:\n  geodesic_segment_param G y (dist x y - t) = geodesic_segment_param G x t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dist_along_geodesic_wrt_endpoint:\n  assumes \"geodesic_segment_between G x y\"\n          \"u \\<in> G\" \"v \\<in> G\"\n  shows \"dist u v = abs(dist u x - dist v x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist u v = \\<bar>dist u x - dist v x\\<bar>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist u v = \\<bar>dist u x - dist v x\\<bar>", "have *: \"u = geodesic_segment_param G x (dist x u)\" \"v = geodesic_segment_param G x (dist x v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u = geodesic_segment_param G x (dist x u) &&&\n    v = geodesic_segment_param G x (dist x v)", "using assms"], ["proof (prove)\nusing this:\n  geodesic_segment_between G x y\n  u \\<in> G\n  v \\<in> G\n\ngoal (1 subgoal):\n 1. u = geodesic_segment_param G x (dist x u) &&&\n    v = geodesic_segment_param G x (dist x v)", "by auto"], ["proof (state)\nthis:\n  u = geodesic_segment_param G x (dist x u)\n  v = geodesic_segment_param G x (dist x v)\n\ngoal (1 subgoal):\n 1. dist u v = \\<bar>dist u x - dist v x\\<bar>", "have \"dist u v = dist (geodesic_segment_param G x (dist x u)) (geodesic_segment_param G x (dist x v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist u v =\n    dist (geodesic_segment_param G x (dist x u))\n     (geodesic_segment_param G x (dist x v))", "using *"], ["proof (prove)\nusing this:\n  u = geodesic_segment_param G x (dist x u)\n  v = geodesic_segment_param G x (dist x v)\n\ngoal (1 subgoal):\n 1. dist u v =\n    dist (geodesic_segment_param G x (dist x u))\n     (geodesic_segment_param G x (dist x v))", "by auto"], ["proof (state)\nthis:\n  dist u v =\n  dist (geodesic_segment_param G x (dist x u))\n   (geodesic_segment_param G x (dist x v))\n\ngoal (1 subgoal):\n 1. dist u v = \\<bar>dist u x - dist v x\\<bar>", "also"], ["proof (state)\nthis:\n  dist u v =\n  dist (geodesic_segment_param G x (dist x u))\n   (geodesic_segment_param G x (dist x v))\n\ngoal (1 subgoal):\n 1. dist u v = \\<bar>dist u x - dist v x\\<bar>", "have \"... = abs(dist x u - dist x v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (geodesic_segment_param G x (dist x u))\n     (geodesic_segment_param G x (dist x v)) =\n    \\<bar>dist x u - dist x v\\<bar>", "apply (rule geodesic_segment_param(7)[OF assms(1)])"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist x u \\<in> {0..dist x y}\n 2. dist x v \\<in> {0..dist x y}", "using assms"], ["proof (prove)\nusing this:\n  geodesic_segment_between G x y\n  u \\<in> G\n  v \\<in> G\n\ngoal (2 subgoals):\n 1. dist x u \\<in> {0..dist x y}\n 2. dist x v \\<in> {0..dist x y}", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>geodesic_segment_between G x y; u \\<in> G; v \\<in> G\\<rbrakk>\n    \\<Longrightarrow> dist x u \\<le> dist x y\n 2. \\<lbrakk>geodesic_segment_between G x y; u \\<in> G; v \\<in> G\\<rbrakk>\n    \\<Longrightarrow> dist x v \\<le> dist x y", "using geodesic_segment_dist_le geodesic_segment_endpoints(1)"], ["proof (prove)\nusing this:\n  \\<lbrakk>geodesic_segment_between ?G ?x ?y; ?a \\<in> ?G;\n   ?b \\<in> ?G\\<rbrakk>\n  \\<Longrightarrow> dist ?a ?b \\<le> dist ?x ?y\n  geodesic_segment_between ?G ?x ?y \\<Longrightarrow> ?x \\<in> ?G\n\ngoal (2 subgoals):\n 1. \\<lbrakk>geodesic_segment_between G x y; u \\<in> G; v \\<in> G\\<rbrakk>\n    \\<Longrightarrow> dist x u \\<le> dist x y\n 2. \\<lbrakk>geodesic_segment_between G x y; u \\<in> G; v \\<in> G\\<rbrakk>\n    \\<Longrightarrow> dist x v \\<le> dist x y", "by blast+"], ["proof (state)\nthis:\n  dist (geodesic_segment_param G x (dist x u))\n   (geodesic_segment_param G x (dist x v)) =\n  \\<bar>dist x u - dist x v\\<bar>\n\ngoal (1 subgoal):\n 1. dist u v = \\<bar>dist u x - dist v x\\<bar>", "finally"], ["proof (chain)\npicking this:\n  dist u v = \\<bar>dist x u - dist x v\\<bar>", "show ?thesis"], ["proof (prove)\nusing this:\n  dist u v = \\<bar>dist x u - dist x v\\<bar>\n\ngoal (1 subgoal):\n 1. dist u v = \\<bar>dist u x - dist v x\\<bar>", "by (simp add: dist_commute)"], ["proof (state)\nthis:\n  dist u v = \\<bar>dist u x - dist v x\\<bar>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>One often needs to restrict a geodesic segment to a subsegment. We introduce the tools\nto express this conveniently.\\<close>"], ["", "definition geodesic_subsegment::\"('a::metric_space) set \\<Rightarrow> 'a \\<Rightarrow> real \\<Rightarrow> real \\<Rightarrow> 'a set\"\n  where \"geodesic_subsegment G x s t = G \\<inter> {z. dist x z \\<ge> s \\<and> dist x z \\<le> t}\""], ["", "text \\<open>A subsegment is always contained in the original segment.\\<close>"], ["", "lemma geodesic_subsegment_subset:\n  \"geodesic_subsegment G x s t \\<subseteq> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_subsegment G x s t \\<subseteq> G", "unfolding geodesic_subsegment_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<inter> {z. s \\<le> dist x z \\<and> dist x z \\<le> t} \\<subseteq> G", "by simp"], ["", "text \\<open>A subsegment is indeed a geodesic segment, and its endpoints and parametrization can be\nexpressed in terms of the original segment.\\<close>"], ["", "lemma geodesic_subsegment:\n  assumes \"geodesic_segment_between G x y\"\n          \"0 \\<le> s\" \"s \\<le> t\" \"t \\<le> dist x y\"\n  shows \"geodesic_subsegment G x s t = (geodesic_segment_param G x)`{s..t}\"\n        \"geodesic_segment_between (geodesic_subsegment G x s t) (geodesic_segment_param G x s) (geodesic_segment_param G x t)\"\n        \"\\<And>u. s \\<le> u \\<Longrightarrow> u \\<le> t \\<Longrightarrow> geodesic_segment_param (geodesic_subsegment G x s t) (geodesic_segment_param G x s) (u - s) = geodesic_segment_param G x u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_subsegment G x s t = geodesic_segment_param G x ` {s..t} &&&\n    geodesic_segment_between (geodesic_subsegment G x s t)\n     (geodesic_segment_param G x s) (geodesic_segment_param G x t) &&&\n    (\\<And>u.\n        \\<lbrakk>s \\<le> u; u \\<le> t\\<rbrakk>\n        \\<Longrightarrow> geodesic_segment_param\n                           (geodesic_subsegment G x s t)\n                           (geodesic_segment_param G x s) (u - s) =\n                          geodesic_segment_param G x u)", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. geodesic_subsegment G x s t = geodesic_segment_param G x ` {s..t}\n 2. geodesic_segment_between (geodesic_subsegment G x s t)\n     (geodesic_segment_param G x s) (geodesic_segment_param G x t)\n 3. \\<And>u.\n       \\<lbrakk>s \\<le> u; u \\<le> t\\<rbrakk>\n       \\<Longrightarrow> geodesic_segment_param\n                          (geodesic_subsegment G x s t)\n                          (geodesic_segment_param G x s) (u - s) =\n                         geodesic_segment_param G x u", "show A: \"geodesic_subsegment G x s t = (geodesic_segment_param G x)`{s..t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_subsegment G x s t = geodesic_segment_param G x ` {s..t}", "proof (auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> geodesic_subsegment G x s t \\<Longrightarrow>\n       xa \\<in> geodesic_segment_param G x ` {s..t}\n 2. \\<And>xa.\n       \\<lbrakk>s \\<le> xa; xa \\<le> t\\<rbrakk>\n       \\<Longrightarrow> geodesic_segment_param G x xa\n                         \\<in> geodesic_subsegment G x s t", "fix y"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> geodesic_subsegment G x s t \\<Longrightarrow>\n       xa \\<in> geodesic_segment_param G x ` {s..t}\n 2. \\<And>xa.\n       \\<lbrakk>s \\<le> xa; xa \\<le> t\\<rbrakk>\n       \\<Longrightarrow> geodesic_segment_param G x xa\n                         \\<in> geodesic_subsegment G x s t", "assume y: \"y \\<in> geodesic_subsegment G x s t\""], ["proof (state)\nthis:\n  y \\<in> geodesic_subsegment G x s t\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> geodesic_subsegment G x s t \\<Longrightarrow>\n       xa \\<in> geodesic_segment_param G x ` {s..t}\n 2. \\<And>xa.\n       \\<lbrakk>s \\<le> xa; xa \\<le> t\\<rbrakk>\n       \\<Longrightarrow> geodesic_segment_param G x xa\n                         \\<in> geodesic_subsegment G x s t", "have \"y = geodesic_segment_param G x (dist x y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y = geodesic_segment_param G x (dist x y)", "apply (rule geodesic_segment_param(8)[OF assms(1)])"], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> G", "using y geodesic_subsegment_subset"], ["proof (prove)\nusing this:\n  y \\<in> geodesic_subsegment G x s t\n  geodesic_subsegment ?G ?x ?s ?t \\<subseteq> ?G\n\ngoal (1 subgoal):\n 1. y \\<in> G", "by force"], ["proof (state)\nthis:\n  y = geodesic_segment_param G x (dist x y)\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> geodesic_subsegment G x s t \\<Longrightarrow>\n       xa \\<in> geodesic_segment_param G x ` {s..t}\n 2. \\<And>xa.\n       \\<lbrakk>s \\<le> xa; xa \\<le> t\\<rbrakk>\n       \\<Longrightarrow> geodesic_segment_param G x xa\n                         \\<in> geodesic_subsegment G x s t", "moreover"], ["proof (state)\nthis:\n  y = geodesic_segment_param G x (dist x y)\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> geodesic_subsegment G x s t \\<Longrightarrow>\n       xa \\<in> geodesic_segment_param G x ` {s..t}\n 2. \\<And>xa.\n       \\<lbrakk>s \\<le> xa; xa \\<le> t\\<rbrakk>\n       \\<Longrightarrow> geodesic_segment_param G x xa\n                         \\<in> geodesic_subsegment G x s t", "have \"dist x y \\<ge> s \\<and> dist x y \\<le> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<le> dist x y \\<and> dist x y \\<le> t", "using y"], ["proof (prove)\nusing this:\n  y \\<in> geodesic_subsegment G x s t\n\ngoal (1 subgoal):\n 1. s \\<le> dist x y \\<and> dist x y \\<le> t", "unfolding geodesic_subsegment_def"], ["proof (prove)\nusing this:\n  y \\<in> G \\<inter> {z. s \\<le> dist x z \\<and> dist x z \\<le> t}\n\ngoal (1 subgoal):\n 1. s \\<le> dist x y \\<and> dist x y \\<le> t", "by auto"], ["proof (state)\nthis:\n  s \\<le> dist x y \\<and> dist x y \\<le> t\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> geodesic_subsegment G x s t \\<Longrightarrow>\n       xa \\<in> geodesic_segment_param G x ` {s..t}\n 2. \\<And>xa.\n       \\<lbrakk>s \\<le> xa; xa \\<le> t\\<rbrakk>\n       \\<Longrightarrow> geodesic_segment_param G x xa\n                         \\<in> geodesic_subsegment G x s t", "ultimately"], ["proof (chain)\npicking this:\n  y = geodesic_segment_param G x (dist x y)\n  s \\<le> dist x y \\<and> dist x y \\<le> t", "show \"y \\<in> geodesic_segment_param G x ` {s..t}\""], ["proof (prove)\nusing this:\n  y = geodesic_segment_param G x (dist x y)\n  s \\<le> dist x y \\<and> dist x y \\<le> t\n\ngoal (1 subgoal):\n 1. y \\<in> geodesic_segment_param G x ` {s..t}", "by auto"], ["proof (state)\nthis:\n  y \\<in> geodesic_segment_param G x ` {s..t}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>s \\<le> xa; xa \\<le> t\\<rbrakk>\n       \\<Longrightarrow> geodesic_segment_param G x xa\n                         \\<in> geodesic_subsegment G x s t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>s \\<le> xa; xa \\<le> t\\<rbrakk>\n       \\<Longrightarrow> geodesic_segment_param G x xa\n                         \\<in> geodesic_subsegment G x s t", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>s \\<le> xa; xa \\<le> t\\<rbrakk>\n       \\<Longrightarrow> geodesic_segment_param G x xa\n                         \\<in> geodesic_subsegment G x s t", "assume H: \"s \\<le> u\" \"u \\<le> t\""], ["proof (state)\nthis:\n  s \\<le> u\n  u \\<le> t\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>s \\<le> xa; xa \\<le> t\\<rbrakk>\n       \\<Longrightarrow> geodesic_segment_param G x xa\n                         \\<in> geodesic_subsegment G x s t", "have *: \"dist x (geodesic_segment_param G x u) = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x (geodesic_segment_param G x u) = u", "apply (rule geodesic_segment_param(6)[OF assms(1)])"], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> {0..dist x y}", "using H assms"], ["proof (prove)\nusing this:\n  s \\<le> u\n  u \\<le> t\n  geodesic_segment_between G x y\n  0 \\<le> s\n  s \\<le> t\n  t \\<le> dist x y\n\ngoal (1 subgoal):\n 1. u \\<in> {0..dist x y}", "by auto"], ["proof (state)\nthis:\n  dist x (geodesic_segment_param G x u) = u\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>s \\<le> xa; xa \\<le> t\\<rbrakk>\n       \\<Longrightarrow> geodesic_segment_param G x xa\n                         \\<in> geodesic_subsegment G x s t", "show \"geodesic_segment_param G x u \\<in> geodesic_subsegment G x s t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_param G x u \\<in> geodesic_subsegment G x s t", "unfolding geodesic_subsegment_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_param G x u\n    \\<in> G \\<inter> {z. s \\<le> dist x z \\<and> dist x z \\<le> t}", "using geodesic_segment_param_in_segment[OF geodesic_segment_endpoints(3)[OF assms(1)]]"], ["proof (prove)\nusing this:\n  geodesic_segment_param G ?x ?t \\<in> G\n\ngoal (1 subgoal):\n 1. geodesic_segment_param G x u\n    \\<in> G \\<inter> {z. s \\<le> dist x z \\<and> dist x z \\<le> t}", "by (auto simp add: * H)"], ["proof (state)\nthis:\n  geodesic_segment_param G x u \\<in> geodesic_subsegment G x s t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  geodesic_subsegment G x s t = geodesic_segment_param G x ` {s..t}\n\ngoal (2 subgoals):\n 1. geodesic_segment_between (geodesic_subsegment G x s t)\n     (geodesic_segment_param G x s) (geodesic_segment_param G x t)\n 2. \\<And>u.\n       \\<lbrakk>s \\<le> u; u \\<le> t\\<rbrakk>\n       \\<Longrightarrow> geodesic_segment_param\n                          (geodesic_subsegment G x s t)\n                          (geodesic_segment_param G x s) (u - s) =\n                         geodesic_segment_param G x u", "have *: \"isometry_on {s..t} (geodesic_segment_param G x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isometry_on {s..t} (geodesic_segment_param G x)", "by (rule isometry_on_subset[of \"{0..dist x y}\"]) (auto simp add: assms)"], ["proof (state)\nthis:\n  isometry_on {s..t} (geodesic_segment_param G x)\n\ngoal (2 subgoals):\n 1. geodesic_segment_between (geodesic_subsegment G x s t)\n     (geodesic_segment_param G x s) (geodesic_segment_param G x t)\n 2. \\<And>u.\n       \\<lbrakk>s \\<le> u; u \\<le> t\\<rbrakk>\n       \\<Longrightarrow> geodesic_segment_param\n                          (geodesic_subsegment G x s t)\n                          (geodesic_segment_param G x s) (u - s) =\n                         geodesic_segment_param G x u", "show B: \"geodesic_segment_between (geodesic_subsegment G x s t) (geodesic_segment_param G x s) (geodesic_segment_param G x t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between (geodesic_subsegment G x s t)\n     (geodesic_segment_param G x s) (geodesic_segment_param G x t)", "unfolding A"], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between (geodesic_segment_param G x ` {s..t})\n     (geodesic_segment_param G x s) (geodesic_segment_param G x t)", "apply (rule geodesic_segmentI2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. isometry_on {s..t} (geodesic_segment_param G x)\n 2. s \\<le> t", "using * assms"], ["proof (prove)\nusing this:\n  isometry_on {s..t} (geodesic_segment_param G x)\n  geodesic_segment_between G x y\n  0 \\<le> s\n  s \\<le> t\n  t \\<le> dist x y\n\ngoal (2 subgoals):\n 1. isometry_on {s..t} (geodesic_segment_param G x)\n 2. s \\<le> t", "by auto"], ["proof (state)\nthis:\n  geodesic_segment_between (geodesic_subsegment G x s t)\n   (geodesic_segment_param G x s) (geodesic_segment_param G x t)\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<lbrakk>s \\<le> u; u \\<le> t\\<rbrakk>\n       \\<Longrightarrow> geodesic_segment_param\n                          (geodesic_subsegment G x s t)\n                          (geodesic_segment_param G x s) (u - s) =\n                         geodesic_segment_param G x u", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<lbrakk>s \\<le> u; u \\<le> t\\<rbrakk>\n       \\<Longrightarrow> geodesic_segment_param\n                          (geodesic_subsegment G x s t)\n                          (geodesic_segment_param G x s) (u - s) =\n                         geodesic_segment_param G x u", "assume u: \"s \\<le> u\" \"u \\<le> t\""], ["proof (state)\nthis:\n  s \\<le> u\n  u \\<le> t\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<lbrakk>s \\<le> u; u \\<le> t\\<rbrakk>\n       \\<Longrightarrow> geodesic_segment_param\n                          (geodesic_subsegment G x s t)\n                          (geodesic_segment_param G x s) (u - s) =\n                         geodesic_segment_param G x u", "show \"geodesic_segment_param (geodesic_subsegment G x s t) (geodesic_segment_param G x s) (u - s) = geodesic_segment_param G x u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_param (geodesic_subsegment G x s t)\n     (geodesic_segment_param G x s) (u - s) =\n    geodesic_segment_param G x u", "proof (rule geodesic_segment_dist_unique[OF B])"], ["proof (state)\ngoal (3 subgoals):\n 1. geodesic_segment_param (geodesic_subsegment G x s t)\n     (geodesic_segment_param G x s) (u - s)\n    \\<in> geodesic_subsegment G x s t\n 2. geodesic_segment_param G x u \\<in> geodesic_subsegment G x s t\n 3. dist (geodesic_segment_param G x s)\n     (geodesic_segment_param (geodesic_subsegment G x s t)\n       (geodesic_segment_param G x s) (u - s)) =\n    dist (geodesic_segment_param G x s) (geodesic_segment_param G x u)", "show \"geodesic_segment_param (geodesic_subsegment G x s t) (geodesic_segment_param G x s) (u - s) \\<in> geodesic_subsegment G x s t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_param (geodesic_subsegment G x s t)\n     (geodesic_segment_param G x s) (u - s)\n    \\<in> geodesic_subsegment G x s t", "by (rule geodesic_segment_param_in_segment[OF geodesic_segment_endpoints(3)[OF B]])"], ["proof (state)\nthis:\n  geodesic_segment_param (geodesic_subsegment G x s t)\n   (geodesic_segment_param G x s) (u - s)\n  \\<in> geodesic_subsegment G x s t\n\ngoal (2 subgoals):\n 1. geodesic_segment_param G x u \\<in> geodesic_subsegment G x s t\n 2. dist (geodesic_segment_param G x s)\n     (geodesic_segment_param (geodesic_subsegment G x s t)\n       (geodesic_segment_param G x s) (u - s)) =\n    dist (geodesic_segment_param G x s) (geodesic_segment_param G x u)", "show \"geodesic_segment_param G x u \\<in> geodesic_subsegment G x s t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_param G x u \\<in> geodesic_subsegment G x s t", "unfolding A"], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_param G x u \\<in> geodesic_segment_param G x ` {s..t}", "using u"], ["proof (prove)\nusing this:\n  s \\<le> u\n  u \\<le> t\n\ngoal (1 subgoal):\n 1. geodesic_segment_param G x u \\<in> geodesic_segment_param G x ` {s..t}", "by auto"], ["proof (state)\nthis:\n  geodesic_segment_param G x u \\<in> geodesic_subsegment G x s t\n\ngoal (1 subgoal):\n 1. dist (geodesic_segment_param G x s)\n     (geodesic_segment_param (geodesic_subsegment G x s t)\n       (geodesic_segment_param G x s) (u - s)) =\n    dist (geodesic_segment_param G x s) (geodesic_segment_param G x u)", "have \"dist (geodesic_segment_param G x s) (geodesic_segment_param (geodesic_subsegment G x s t) (geodesic_segment_param G x s) (u - s)) = u - s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (geodesic_segment_param G x s)\n     (geodesic_segment_param (geodesic_subsegment G x s t)\n       (geodesic_segment_param G x s) (u - s)) =\n    u - s", "using B assms u"], ["proof (prove)\nusing this:\n  geodesic_segment_between (geodesic_subsegment G x s t)\n   (geodesic_segment_param G x s) (geodesic_segment_param G x t)\n  geodesic_segment_between G x y\n  0 \\<le> s\n  s \\<le> t\n  t \\<le> dist x y\n  s \\<le> u\n  u \\<le> t\n\ngoal (1 subgoal):\n 1. dist (geodesic_segment_param G x s)\n     (geodesic_segment_param (geodesic_subsegment G x s t)\n       (geodesic_segment_param G x s) (u - s)) =\n    u - s", "by auto"], ["proof (state)\nthis:\n  dist (geodesic_segment_param G x s)\n   (geodesic_segment_param (geodesic_subsegment G x s t)\n     (geodesic_segment_param G x s) (u - s)) =\n  u - s\n\ngoal (1 subgoal):\n 1. dist (geodesic_segment_param G x s)\n     (geodesic_segment_param (geodesic_subsegment G x s t)\n       (geodesic_segment_param G x s) (u - s)) =\n    dist (geodesic_segment_param G x s) (geodesic_segment_param G x u)", "moreover"], ["proof (state)\nthis:\n  dist (geodesic_segment_param G x s)\n   (geodesic_segment_param (geodesic_subsegment G x s t)\n     (geodesic_segment_param G x s) (u - s)) =\n  u - s\n\ngoal (1 subgoal):\n 1. dist (geodesic_segment_param G x s)\n     (geodesic_segment_param (geodesic_subsegment G x s t)\n       (geodesic_segment_param G x s) (u - s)) =\n    dist (geodesic_segment_param G x s) (geodesic_segment_param G x u)", "have \"dist (geodesic_segment_param G x s) (geodesic_segment_param G x u) = u -s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (geodesic_segment_param G x s) (geodesic_segment_param G x u) =\n    u - s", "using assms u"], ["proof (prove)\nusing this:\n  geodesic_segment_between G x y\n  0 \\<le> s\n  s \\<le> t\n  t \\<le> dist x y\n  s \\<le> u\n  u \\<le> t\n\ngoal (1 subgoal):\n 1. dist (geodesic_segment_param G x s) (geodesic_segment_param G x u) =\n    u - s", "by auto"], ["proof (state)\nthis:\n  dist (geodesic_segment_param G x s) (geodesic_segment_param G x u) = u - s\n\ngoal (1 subgoal):\n 1. dist (geodesic_segment_param G x s)\n     (geodesic_segment_param (geodesic_subsegment G x s t)\n       (geodesic_segment_param G x s) (u - s)) =\n    dist (geodesic_segment_param G x s) (geodesic_segment_param G x u)", "ultimately"], ["proof (chain)\npicking this:\n  dist (geodesic_segment_param G x s)\n   (geodesic_segment_param (geodesic_subsegment G x s t)\n     (geodesic_segment_param G x s) (u - s)) =\n  u - s\n  dist (geodesic_segment_param G x s) (geodesic_segment_param G x u) = u - s", "show \"dist (geodesic_segment_param G x s) (geodesic_segment_param (geodesic_subsegment G x s t) (geodesic_segment_param G x s) (u - s)) =\n        dist (geodesic_segment_param G x s) (geodesic_segment_param G x u)\""], ["proof (prove)\nusing this:\n  dist (geodesic_segment_param G x s)\n   (geodesic_segment_param (geodesic_subsegment G x s t)\n     (geodesic_segment_param G x s) (u - s)) =\n  u - s\n  dist (geodesic_segment_param G x s) (geodesic_segment_param G x u) = u - s\n\ngoal (1 subgoal):\n 1. dist (geodesic_segment_param G x s)\n     (geodesic_segment_param (geodesic_subsegment G x s t)\n       (geodesic_segment_param G x s) (u - s)) =\n    dist (geodesic_segment_param G x s) (geodesic_segment_param G x u)", "by simp"], ["proof (state)\nthis:\n  dist (geodesic_segment_param G x s)\n   (geodesic_segment_param (geodesic_subsegment G x s t)\n     (geodesic_segment_param G x s) (u - s)) =\n  dist (geodesic_segment_param G x s) (geodesic_segment_param G x u)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  geodesic_segment_param (geodesic_subsegment G x s t)\n   (geodesic_segment_param G x s) (u - s) =\n  geodesic_segment_param G x u\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The parameterizations of a segment and a subsegment sharing an endpoint coincide where defined.\\<close>"], ["", "lemma geodesic_segment_subparam:\n  assumes \"geodesic_segment_between G x z\" \"geodesic_segment_between H x y\" \"H \\<subseteq> G\" \"t \\<in> {0..dist x y}\"\n  shows \"geodesic_segment_param G x t = geodesic_segment_param H x t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_param G x t = geodesic_segment_param H x t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. geodesic_segment_param G x t = geodesic_segment_param H x t", "have \"geodesic_segment_param H x t \\<in> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_param H x t \\<in> G", "using assms(3) geodesic_segment_param(3)[OF assms(2) assms(4)]"], ["proof (prove)\nusing this:\n  H \\<subseteq> G\n  geodesic_segment_param H x t \\<in> H\n\ngoal (1 subgoal):\n 1. geodesic_segment_param H x t \\<in> G", "by auto"], ["proof (state)\nthis:\n  geodesic_segment_param H x t \\<in> G\n\ngoal (1 subgoal):\n 1. geodesic_segment_param G x t = geodesic_segment_param H x t", "then"], ["proof (chain)\npicking this:\n  geodesic_segment_param H x t \\<in> G", "have \"geodesic_segment_param H x t = geodesic_segment_param G x (dist x (geodesic_segment_param H x t))\""], ["proof (prove)\nusing this:\n  geodesic_segment_param H x t \\<in> G\n\ngoal (1 subgoal):\n 1. geodesic_segment_param H x t =\n    geodesic_segment_param G x (dist x (geodesic_segment_param H x t))", "using geodesic_segment_param(8)[OF assms(1)]"], ["proof (prove)\nusing this:\n  geodesic_segment_param H x t \\<in> G\n  ?z \\<in> G \\<Longrightarrow> ?z = geodesic_segment_param G x (dist x ?z)\n\ngoal (1 subgoal):\n 1. geodesic_segment_param H x t =\n    geodesic_segment_param G x (dist x (geodesic_segment_param H x t))", "by auto"], ["proof (state)\nthis:\n  geodesic_segment_param H x t =\n  geodesic_segment_param G x (dist x (geodesic_segment_param H x t))\n\ngoal (1 subgoal):\n 1. geodesic_segment_param G x t = geodesic_segment_param H x t", "then"], ["proof (chain)\npicking this:\n  geodesic_segment_param H x t =\n  geodesic_segment_param G x (dist x (geodesic_segment_param H x t))", "show ?thesis"], ["proof (prove)\nusing this:\n  geodesic_segment_param H x t =\n  geodesic_segment_param G x (dist x (geodesic_segment_param H x t))\n\ngoal (1 subgoal):\n 1. geodesic_segment_param G x t = geodesic_segment_param H x t", "using geodesic_segment_param(6)[OF assms(2) assms(4)]"], ["proof (prove)\nusing this:\n  geodesic_segment_param H x t =\n  geodesic_segment_param G x (dist x (geodesic_segment_param H x t))\n  dist x (geodesic_segment_param H x t) = t\n\ngoal (1 subgoal):\n 1. geodesic_segment_param G x t = geodesic_segment_param H x t", "by auto"], ["proof (state)\nthis:\n  geodesic_segment_param G x t = geodesic_segment_param H x t\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>A segment contains a subsegment between any of its points\\<close>"], ["", "lemma geodesic_subsegment_exists:\n  assumes \"geodesic_segment G\" \"x \\<in> G\" \"y \\<in> G\"\n  shows \"\\<exists>H. H \\<subseteq> G \\<and> geodesic_segment_between H x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>H\\<subseteq>G. geodesic_segment_between H x y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>H\\<subseteq>G. geodesic_segment_between H x y", "obtain a0 b0 where Ga0b0: \"geodesic_segment_between G a0 b0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a0 b0.\n        geodesic_segment_between G a0 b0 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms(1)"], ["proof (prove)\nusing this:\n  geodesic_segment G\n\ngoal (1 subgoal):\n 1. (\\<And>a0 b0.\n        geodesic_segment_between G a0 b0 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding geodesic_segment_def"], ["proof (prove)\nusing this:\n  \\<exists>x. Ex (geodesic_segment_between G x)\n\ngoal (1 subgoal):\n 1. (\\<And>a0 b0.\n        geodesic_segment_between G a0 b0 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  geodesic_segment_between G a0 b0\n\ngoal (1 subgoal):\n 1. \\<exists>H\\<subseteq>G. geodesic_segment_between H x y", "text \\<open>Permuting the endpoints if necessary, we can ensure that the first endpoint $a$ is closer\n  to $x$ than $y$.\\<close>"], ["proof (state)\nthis:\n  geodesic_segment_between G a0 b0\n\ngoal (1 subgoal):\n 1. \\<exists>H\\<subseteq>G. geodesic_segment_between H x y", "have \"\\<exists> a b. geodesic_segment_between G a b \\<and> dist x a \\<le> dist y a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       geodesic_segment_between G a b \\<and> dist x a \\<le> dist y a", "proof (cases \"dist x a0 \\<le> dist y a0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. dist x a0 \\<le> dist y a0 \\<Longrightarrow>\n    \\<exists>a b.\n       geodesic_segment_between G a b \\<and> dist x a \\<le> dist y a\n 2. \\<not> dist x a0 \\<le> dist y a0 \\<Longrightarrow>\n    \\<exists>a b.\n       geodesic_segment_between G a b \\<and> dist x a \\<le> dist y a", "case True"], ["proof (state)\nthis:\n  dist x a0 \\<le> dist y a0\n\ngoal (2 subgoals):\n 1. dist x a0 \\<le> dist y a0 \\<Longrightarrow>\n    \\<exists>a b.\n       geodesic_segment_between G a b \\<and> dist x a \\<le> dist y a\n 2. \\<not> dist x a0 \\<le> dist y a0 \\<Longrightarrow>\n    \\<exists>a b.\n       geodesic_segment_between G a b \\<and> dist x a \\<le> dist y a", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       geodesic_segment_between G a b \\<and> dist x a \\<le> dist y a", "apply (rule exI[of _ a0], rule exI[of _ b0])"], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between G a0 b0 \\<and> dist x a0 \\<le> dist y a0", "using True Ga0b0"], ["proof (prove)\nusing this:\n  dist x a0 \\<le> dist y a0\n  geodesic_segment_between G a0 b0\n\ngoal (1 subgoal):\n 1. geodesic_segment_between G a0 b0 \\<and> dist x a0 \\<le> dist y a0", "by auto"], ["proof (state)\nthis:\n  \\<exists>a b.\n     geodesic_segment_between G a b \\<and> dist x a \\<le> dist y a\n\ngoal (1 subgoal):\n 1. \\<not> dist x a0 \\<le> dist y a0 \\<Longrightarrow>\n    \\<exists>a b.\n       geodesic_segment_between G a b \\<and> dist x a \\<le> dist y a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> dist x a0 \\<le> dist y a0 \\<Longrightarrow>\n    \\<exists>a b.\n       geodesic_segment_between G a b \\<and> dist x a \\<le> dist y a", "case False"], ["proof (state)\nthis:\n  \\<not> dist x a0 \\<le> dist y a0\n\ngoal (1 subgoal):\n 1. \\<not> dist x a0 \\<le> dist y a0 \\<Longrightarrow>\n    \\<exists>a b.\n       geodesic_segment_between G a b \\<and> dist x a \\<le> dist y a", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       geodesic_segment_between G a b \\<and> dist x a \\<le> dist y a", "apply (rule exI[of _ b0], rule exI[of _ a0])"], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between G b0 a0 \\<and> dist x b0 \\<le> dist y b0", "using Ga0b0 geodesic_segment_commute geodesic_segment_dist[OF Ga0b0 \\<open>x \\<in> G\\<close>] geodesic_segment_dist[OF Ga0b0 \\<open>y \\<in> G\\<close>] False"], ["proof (prove)\nusing this:\n  geodesic_segment_between G a0 b0\n  geodesic_segment_between ?G ?x ?y \\<Longrightarrow>\n  geodesic_segment_between ?G ?y ?x\n  dist a0 x + dist x b0 = dist a0 b0\n  dist a0 y + dist y b0 = dist a0 b0\n  \\<not> dist x a0 \\<le> dist y a0\n\ngoal (1 subgoal):\n 1. geodesic_segment_between G b0 a0 \\<and> dist x b0 \\<le> dist y b0", "by (auto simp add: dist_commute)"], ["proof (state)\nthis:\n  \\<exists>a b.\n     geodesic_segment_between G a b \\<and> dist x a \\<le> dist y a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>a b.\n     geodesic_segment_between G a b \\<and> dist x a \\<le> dist y a\n\ngoal (1 subgoal):\n 1. \\<exists>H\\<subseteq>G. geodesic_segment_between H x y", "then"], ["proof (chain)\npicking this:\n  \\<exists>a b.\n     geodesic_segment_between G a b \\<and> dist x a \\<le> dist y a", "obtain a b where Gab: \"geodesic_segment_between G a b\" \"dist x a \\<le> dist y a\""], ["proof (prove)\nusing this:\n  \\<exists>a b.\n     geodesic_segment_between G a b \\<and> dist x a \\<le> dist y a\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>geodesic_segment_between G a b;\n         dist x a \\<le> dist y a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  geodesic_segment_between G a b\n  dist x a \\<le> dist y a\n\ngoal (1 subgoal):\n 1. \\<exists>H\\<subseteq>G. geodesic_segment_between H x y", "have *: \"0 \\<le> dist x a\" \"dist x a \\<le> dist y a\" \"dist y a \\<le> dist a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> dist x a &&& dist x a \\<le> dist y a &&& dist y a \\<le> dist a b", "using Gab assms"], ["proof (prove)\nusing this:\n  geodesic_segment_between G a b\n  dist x a \\<le> dist y a\n  geodesic_segment G\n  x \\<in> G\n  y \\<in> G\n\ngoal (1 subgoal):\n 1. 0 \\<le> dist x a &&& dist x a \\<le> dist y a &&& dist y a \\<le> dist a b", "by (meson geodesic_segment_dist_le geodesic_segment_endpoints(1) zero_le_dist)+"], ["proof (state)\nthis:\n  0 \\<le> dist x a\n  dist x a \\<le> dist y a\n  dist y a \\<le> dist a b\n\ngoal (1 subgoal):\n 1. \\<exists>H\\<subseteq>G. geodesic_segment_between H x y", "have **: \"x = geodesic_segment_param G a (dist x a)\" \"y = geodesic_segment_param G a (dist y a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = geodesic_segment_param G a (dist x a) &&&\n    y = geodesic_segment_param G a (dist y a)", "using Gab \\<open>x \\<in> G\\<close> \\<open>y \\<in> G\\<close>"], ["proof (prove)\nusing this:\n  geodesic_segment_between G a b\n  dist x a \\<le> dist y a\n  x \\<in> G\n  y \\<in> G\n\ngoal (1 subgoal):\n 1. x = geodesic_segment_param G a (dist x a) &&&\n    y = geodesic_segment_param G a (dist y a)", "by (metis dist_commute geodesic_segment_param(8))+"], ["proof (state)\nthis:\n  x = geodesic_segment_param G a (dist x a)\n  y = geodesic_segment_param G a (dist y a)\n\ngoal (1 subgoal):\n 1. \\<exists>H\\<subseteq>G. geodesic_segment_between H x y", "define H where \"H = geodesic_subsegment G a (dist x a) (dist y a)\""], ["proof (state)\nthis:\n  H = geodesic_subsegment G a (dist x a) (dist y a)\n\ngoal (1 subgoal):\n 1. \\<exists>H\\<subseteq>G. geodesic_segment_between H x y", "have \"H \\<subseteq> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<subseteq> G", "unfolding H_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_subsegment G a (dist x a) (dist y a) \\<subseteq> G", "by (rule geodesic_subsegment_subset)"], ["proof (state)\nthis:\n  H \\<subseteq> G\n\ngoal (1 subgoal):\n 1. \\<exists>H\\<subseteq>G. geodesic_segment_between H x y", "moreover"], ["proof (state)\nthis:\n  H \\<subseteq> G\n\ngoal (1 subgoal):\n 1. \\<exists>H\\<subseteq>G. geodesic_segment_between H x y", "have \"geodesic_segment_between H x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between H x y", "unfolding H_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between (geodesic_subsegment G a (dist x a) (dist y a))\n     x y", "using geodesic_subsegment(2)[OF Gab(1) *] **"], ["proof (prove)\nusing this:\n  geodesic_segment_between (geodesic_subsegment G a (dist x a) (dist y a))\n   (geodesic_segment_param G a (dist x a))\n   (geodesic_segment_param G a (dist y a))\n  x = geodesic_segment_param G a (dist x a)\n  y = geodesic_segment_param G a (dist y a)\n\ngoal (1 subgoal):\n 1. geodesic_segment_between (geodesic_subsegment G a (dist x a) (dist y a))\n     x y", "by auto"], ["proof (state)\nthis:\n  geodesic_segment_between H x y\n\ngoal (1 subgoal):\n 1. \\<exists>H\\<subseteq>G. geodesic_segment_between H x y", "ultimately"], ["proof (chain)\npicking this:\n  H \\<subseteq> G\n  geodesic_segment_between H x y", "show ?thesis"], ["proof (prove)\nusing this:\n  H \\<subseteq> G\n  geodesic_segment_between H x y\n\ngoal (1 subgoal):\n 1. \\<exists>H\\<subseteq>G. geodesic_segment_between H x y", "by auto"], ["proof (state)\nthis:\n  \\<exists>H\\<subseteq>G. geodesic_segment_between H x y\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>A geodesic segment is homeomorphic to an interval.\\<close>"], ["", "lemma geodesic_segment_homeo_interval:\n  assumes \"geodesic_segment_between G x y\"\n  shows \"{0..dist x y} homeomorphic G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0..dist x y} homeomorphic G", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {0..dist x y} homeomorphic G", "obtain g where g: \"g 0 = x\" \"g (dist x y) = y\" \"isometry_on {0..dist x y} g\" \"G = g`{0..dist x y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g 0 = x; g (dist x y) = y; isometry_on {0..dist x y} g;\n         G = g ` {0..dist x y}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson \\<open>geodesic_segment_between G x y\\<close> geodesic_segment_between_def)"], ["proof (state)\nthis:\n  g 0 = x\n  g (dist x y) = y\n  isometry_on {0..dist x y} g\n  G = g ` {0..dist x y}\n\ngoal (1 subgoal):\n 1. {0..dist x y} homeomorphic G", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. {0..dist x y} homeomorphic G", "using isometry_on_homeomorphism(3)[OF g(3)]"], ["proof (prove)\nusing this:\n  {0..dist x y} homeomorphic g ` {0..dist x y}\n\ngoal (1 subgoal):\n 1. {0..dist x y} homeomorphic G", "unfolding g(4)"], ["proof (prove)\nusing this:\n  {0..dist x y} homeomorphic g ` {0..dist x y}\n\ngoal (1 subgoal):\n 1. {0..dist x y} homeomorphic g ` {0..dist x y}", "by simp"], ["proof (state)\nthis:\n  {0..dist x y} homeomorphic G\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Just like an interval, a geodesic segment is compact, connected, path connected, bounded,\nclosed, nonempty, and proper.\\<close>"], ["", "lemma geodesic_segment_topology:\n  assumes \"geodesic_segment G\"\n  shows \"compact G\" \"connected G\" \"path_connected G\" \"bounded G\" \"closed G\" \"G \\<noteq> {}\" \"proper G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (compact G &&& connected G &&& path_connected G) &&&\n    (bounded G &&& closed G) &&& G \\<noteq> {} &&& proper G", "proof -"], ["proof (state)\ngoal (7 subgoals):\n 1. compact G\n 2. connected G\n 3. path_connected G\n 4. bounded G\n 5. closed G\n 6. G \\<noteq> {}\n 7. proper G", "show \"compact G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compact G", "using assms geodesic_segment_homeo_interval homeomorphic_compactness"], ["proof (prove)\nusing this:\n  geodesic_segment G\n  geodesic_segment_between ?G ?x ?y \\<Longrightarrow>\n  {0..dist ?x ?y} homeomorphic ?G\n  ?s homeomorphic ?t \\<Longrightarrow> compact ?s = compact ?t\n\ngoal (1 subgoal):\n 1. compact G", "unfolding geodesic_segment_def"], ["proof (prove)\nusing this:\n  \\<exists>x. Ex (geodesic_segment_between G x)\n  geodesic_segment_between ?G ?x ?y \\<Longrightarrow>\n  {0..dist ?x ?y} homeomorphic ?G\n  ?s homeomorphic ?t \\<Longrightarrow> compact ?s = compact ?t\n\ngoal (1 subgoal):\n 1. compact G", "by force"], ["proof (state)\nthis:\n  compact G\n\ngoal (6 subgoals):\n 1. connected G\n 2. path_connected G\n 3. bounded G\n 4. closed G\n 5. G \\<noteq> {}\n 6. proper G", "show \"path_connected G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. path_connected G", "using assms is_interval_path_connected geodesic_segment_homeo_interval homeomorphic_path_connectedness"], ["proof (prove)\nusing this:\n  geodesic_segment G\n  is_interval ?S \\<Longrightarrow> path_connected ?S\n  geodesic_segment_between ?G ?x ?y \\<Longrightarrow>\n  {0..dist ?x ?y} homeomorphic ?G\n  ?S homeomorphic ?T \\<Longrightarrow> path_connected ?S = path_connected ?T\n\ngoal (1 subgoal):\n 1. path_connected G", "unfolding geodesic_segment_def"], ["proof (prove)\nusing this:\n  \\<exists>x. Ex (geodesic_segment_between G x)\n  is_interval ?S \\<Longrightarrow> path_connected ?S\n  geodesic_segment_between ?G ?x ?y \\<Longrightarrow>\n  {0..dist ?x ?y} homeomorphic ?G\n  ?S homeomorphic ?T \\<Longrightarrow> path_connected ?S = path_connected ?T\n\ngoal (1 subgoal):\n 1. path_connected G", "by (metis is_interval_cc)"], ["proof (state)\nthis:\n  path_connected G\n\ngoal (5 subgoals):\n 1. connected G\n 2. bounded G\n 3. closed G\n 4. G \\<noteq> {}\n 5. proper G", "then"], ["proof (chain)\npicking this:\n  path_connected G", "show \"connected G\""], ["proof (prove)\nusing this:\n  path_connected G\n\ngoal (1 subgoal):\n 1. connected G", "using path_connected_imp_connected"], ["proof (prove)\nusing this:\n  path_connected G\n  path_connected ?S \\<Longrightarrow> connected ?S\n\ngoal (1 subgoal):\n 1. connected G", "by auto"], ["proof (state)\nthis:\n  connected G\n\ngoal (4 subgoals):\n 1. bounded G\n 2. closed G\n 3. G \\<noteq> {}\n 4. proper G", "show \"bounded G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded G", "by (rule compact_imp_bounded, fact)"], ["proof (state)\nthis:\n  bounded G\n\ngoal (3 subgoals):\n 1. closed G\n 2. G \\<noteq> {}\n 3. proper G", "show \"closed G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closed G", "by (rule compact_imp_closed, fact)"], ["proof (state)\nthis:\n  closed G\n\ngoal (2 subgoals):\n 1. G \\<noteq> {}\n 2. proper G", "show \"G \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<noteq> {}", "using assms geodesic_segment_def geodesic_segment_endpoints(3)"], ["proof (prove)\nusing this:\n  geodesic_segment G\n  geodesic_segment ?G = (\\<exists>x y. geodesic_segment_between ?G x y)\n  geodesic_segment_between ?G ?x ?y \\<Longrightarrow> ?G \\<noteq> {}\n\ngoal (1 subgoal):\n 1. G \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  G \\<noteq> {}\n\ngoal (1 subgoal):\n 1. proper G", "show \"proper G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proper G", "using proper_of_compact \\<open>compact G\\<close>"], ["proof (prove)\nusing this:\n  compact ?S \\<Longrightarrow> proper ?S\n  compact G\n\ngoal (1 subgoal):\n 1. proper G", "by auto"], ["proof (state)\nthis:\n  proper G\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma geodesic_segment_between_x_x [simp]:\n  \"geodesic_segment_between {x} x x\"\n  \"geodesic_segment {x}\"\n  \"geodesic_segment_between G x x \\<longleftrightarrow> G = {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between {x} x x &&&\n    geodesic_segment {x} &&& geodesic_segment_between G x x = (G = {x})", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. geodesic_segment_between {x} x x\n 2. geodesic_segment {x}\n 3. geodesic_segment_between G x x = (G = {x})", "show *: \"geodesic_segment_between {x} x x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between {x} x x", "unfolding geodesic_segment_between_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>g.\n       g 0 = x \\<and>\n       g (dist x x) = x \\<and>\n       isometry_on {0..dist x x} g \\<and> {x} = g ` {0..dist x x}", "apply (rule exI[of _ \"\\<lambda>_. x\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = x \\<and>\n    x = x \\<and>\n    isometry_on {0..dist x x} (\\<lambda>_. x) \\<and>\n    {x} = (\\<lambda>_. x) ` {0..dist x x}", "unfolding isometry_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = x \\<and>\n    x = x \\<and>\n    (\\<forall>xa\\<in>{0..dist x x}.\n        \\<forall>y\\<in>{0..dist x x}. dist x x = dist xa y) \\<and>\n    {x} = (\\<lambda>_. x) ` {0..dist x x}", "by auto"], ["proof (state)\nthis:\n  geodesic_segment_between {x} x x\n\ngoal (2 subgoals):\n 1. geodesic_segment {x}\n 2. geodesic_segment_between G x x = (G = {x})", "then"], ["proof (chain)\npicking this:\n  geodesic_segment_between {x} x x", "show \"geodesic_segment {x}\""], ["proof (prove)\nusing this:\n  geodesic_segment_between {x} x x\n\ngoal (1 subgoal):\n 1. geodesic_segment {x}", "by auto"], ["proof (state)\nthis:\n  geodesic_segment {x}\n\ngoal (1 subgoal):\n 1. geodesic_segment_between G x x = (G = {x})", "show \"geodesic_segment_between G x x \\<longleftrightarrow> G = {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between G x x = (G = {x})", "using geodesic_segment_dist_le geodesic_segment_endpoints(2) *"], ["proof (prove)\nusing this:\n  \\<lbrakk>geodesic_segment_between ?G ?x ?y; ?a \\<in> ?G;\n   ?b \\<in> ?G\\<rbrakk>\n  \\<Longrightarrow> dist ?a ?b \\<le> dist ?x ?y\n  geodesic_segment_between ?G ?x ?y \\<Longrightarrow> ?y \\<in> ?G\n  geodesic_segment_between {x} x x\n\ngoal (1 subgoal):\n 1. geodesic_segment_between G x x = (G = {x})", "by fastforce"], ["proof (state)\nthis:\n  geodesic_segment_between G x x = (G = {x})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma geodesic_segment_disconnection:\n  assumes \"geodesic_segment_between G x y\" \"z \\<in> G\"\n  shows \"(connected (G - {z})) = (z = x \\<or> z = y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. connected (G - {z}) = (z = x \\<or> z = y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. connected (G - {z}) = (z = x \\<or> z = y)", "obtain g where g: \"g 0 = x\" \"g (dist x y) = y\" \"isometry_on {0..dist x y} g\" \"G = g`{0..dist x y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g 0 = x; g (dist x y) = y; isometry_on {0..dist x y} g;\n         G = g ` {0..dist x y}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson \\<open>geodesic_segment_between G x y\\<close> geodesic_segment_between_def)"], ["proof (state)\nthis:\n  g 0 = x\n  g (dist x y) = y\n  isometry_on {0..dist x y} g\n  G = g ` {0..dist x y}\n\ngoal (1 subgoal):\n 1. connected (G - {z}) = (z = x \\<or> z = y)", "obtain t where t: \"t \\<in> {0..dist x y}\" \"z = g t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>t \\<in> {0..dist x y}; z = g t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>z \\<in> G\\<close> g(4)"], ["proof (prove)\nusing this:\n  z \\<in> G\n  G = g ` {0..dist x y}\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>t \\<in> {0..dist x y}; z = g t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  t \\<in> {0..dist x y}\n  z = g t\n\ngoal (1 subgoal):\n 1. connected (G - {z}) = (z = x \\<or> z = y)", "have \"({0..dist x y} - {t}) homeomorphic (G - {g t})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0..dist x y} - {t} homeomorphic G - {g t}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {0..dist x y} - {t} homeomorphic G - {g t}", "have *: \"isometry_on ({0..dist x y} - {t}) g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isometry_on ({0..dist x y} - {t}) g", "apply (rule isometry_on_subset[OF g(3)])"], ["proof (prove)\ngoal (1 subgoal):\n 1. {0..dist x y} - {t} \\<subseteq> {0..dist x y}", "by auto"], ["proof (state)\nthis:\n  isometry_on ({0..dist x y} - {t}) g\n\ngoal (1 subgoal):\n 1. {0..dist x y} - {t} homeomorphic G - {g t}", "have \"({0..dist x y} - {t}) homeomorphic g`({0..dist x y} - {t})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0..dist x y} - {t} homeomorphic g ` ({0..dist x y} - {t})", "by (rule isometry_on_homeomorphism(3)[OF *])"], ["proof (state)\nthis:\n  {0..dist x y} - {t} homeomorphic g ` ({0..dist x y} - {t})\n\ngoal (1 subgoal):\n 1. {0..dist x y} - {t} homeomorphic G - {g t}", "moreover"], ["proof (state)\nthis:\n  {0..dist x y} - {t} homeomorphic g ` ({0..dist x y} - {t})\n\ngoal (1 subgoal):\n 1. {0..dist x y} - {t} homeomorphic G - {g t}", "have \"g`({0..dist x y} - {t}) = G - {g t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g ` ({0..dist x y} - {t}) = G - {g t}", "unfolding g(4)"], ["proof (prove)\ngoal (1 subgoal):\n 1. g ` ({0..dist x y} - {t}) = g ` {0..dist x y} - {g t}", "using isometry_on_injective[OF g(3)] t"], ["proof (prove)\nusing this:\n  inj_on g {0..dist x y}\n  t \\<in> {0..dist x y}\n  z = g t\n\ngoal (1 subgoal):\n 1. g ` ({0..dist x y} - {t}) = g ` {0..dist x y} - {g t}", "by (auto simp add: inj_onD)"], ["proof (state)\nthis:\n  g ` ({0..dist x y} - {t}) = G - {g t}\n\ngoal (1 subgoal):\n 1. {0..dist x y} - {t} homeomorphic G - {g t}", "ultimately"], ["proof (chain)\npicking this:\n  {0..dist x y} - {t} homeomorphic g ` ({0..dist x y} - {t})\n  g ` ({0..dist x y} - {t}) = G - {g t}", "show ?thesis"], ["proof (prove)\nusing this:\n  {0..dist x y} - {t} homeomorphic g ` ({0..dist x y} - {t})\n  g ` ({0..dist x y} - {t}) = G - {g t}\n\ngoal (1 subgoal):\n 1. {0..dist x y} - {t} homeomorphic G - {g t}", "by auto"], ["proof (state)\nthis:\n  {0..dist x y} - {t} homeomorphic G - {g t}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {0..dist x y} - {t} homeomorphic G - {g t}\n\ngoal (1 subgoal):\n 1. connected (G - {z}) = (z = x \\<or> z = y)", "moreover"], ["proof (state)\nthis:\n  {0..dist x y} - {t} homeomorphic G - {g t}\n\ngoal (1 subgoal):\n 1. connected (G - {z}) = (z = x \\<or> z = y)", "have \"connected({0..dist x y} - {t}) = (t = 0 \\<or> t = dist x y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. connected ({0..dist x y} - {t}) = (t = 0 \\<or> t = dist x y)", "using t(1)"], ["proof (prove)\nusing this:\n  t \\<in> {0..dist x y}\n\ngoal (1 subgoal):\n 1. connected ({0..dist x y} - {t}) = (t = 0 \\<or> t = dist x y)", "by (auto simp add: connected_iff_interval, fastforce)"], ["proof (state)\nthis:\n  connected ({0..dist x y} - {t}) = (t = 0 \\<or> t = dist x y)\n\ngoal (1 subgoal):\n 1. connected (G - {z}) = (z = x \\<or> z = y)", "ultimately"], ["proof (chain)\npicking this:\n  {0..dist x y} - {t} homeomorphic G - {g t}\n  connected ({0..dist x y} - {t}) = (t = 0 \\<or> t = dist x y)", "have \"connected (G - {z}) = (t = 0 \\<or> t = dist x y)\""], ["proof (prove)\nusing this:\n  {0..dist x y} - {t} homeomorphic G - {g t}\n  connected ({0..dist x y} - {t}) = (t = 0 \\<or> t = dist x y)\n\ngoal (1 subgoal):\n 1. connected (G - {z}) = (t = 0 \\<or> t = dist x y)", "unfolding \\<open>z = g t\\<close>[symmetric]"], ["proof (prove)\nusing this:\n  {0..dist x y} - {t} homeomorphic G - {z}\n  connected ({0..dist x y} - {t}) = (t = 0 \\<or> t = dist x y)\n\ngoal (1 subgoal):\n 1. connected (G - {z}) = (t = 0 \\<or> t = dist x y)", "using homeomorphic_connectedness"], ["proof (prove)\nusing this:\n  {0..dist x y} - {t} homeomorphic G - {z}\n  connected ({0..dist x y} - {t}) = (t = 0 \\<or> t = dist x y)\n  ?s homeomorphic ?t \\<Longrightarrow> connected ?s = connected ?t\n\ngoal (1 subgoal):\n 1. connected (G - {z}) = (t = 0 \\<or> t = dist x y)", "by blast"], ["proof (state)\nthis:\n  connected (G - {z}) = (t = 0 \\<or> t = dist x y)\n\ngoal (1 subgoal):\n 1. connected (G - {z}) = (z = x \\<or> z = y)", "moreover"], ["proof (state)\nthis:\n  connected (G - {z}) = (t = 0 \\<or> t = dist x y)\n\ngoal (1 subgoal):\n 1. connected (G - {z}) = (z = x \\<or> z = y)", "have \"(t = 0 \\<or> t = dist x y) = (z = x \\<or> z = y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t = 0 \\<or> t = dist x y) = (z = x \\<or> z = y)", "using t g"], ["proof (prove)\nusing this:\n  t \\<in> {0..dist x y}\n  z = g t\n  g 0 = x\n  g (dist x y) = y\n  isometry_on {0..dist x y} g\n  G = g ` {0..dist x y}\n\ngoal (1 subgoal):\n 1. (t = 0 \\<or> t = dist x y) = (z = x \\<or> z = y)", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>z = g 0; g (dist (g 0) y) = y; isometry_on {0..dist (g 0) y} g;\n     G = g ` {0..dist (g 0) y}; x = g 0; 0 \\<le> t; t \\<le> dist (g 0) y;\n     t \\<noteq> dist (g 0) y; g t = g 0\\<rbrakk>\n    \\<Longrightarrow> t = 0\n 2. \\<lbrakk>z = g t; g (dist (g 0) (g t)) = g t;\n     isometry_on {0..dist (g 0) (g t)} g; G = g ` {0..dist (g 0) (g t)};\n     x = g 0; 0 \\<le> t; t \\<le> dist (g 0) (g t);\n     t \\<noteq> dist (g 0) (g t); y = g t\\<rbrakk>\n    \\<Longrightarrow> t = 0", "by (metis atLeastAtMost_iff isometry_on_inverse(2) order_refl zero_le_dist)+"], ["proof (state)\nthis:\n  (t = 0 \\<or> t = dist x y) = (z = x \\<or> z = y)\n\ngoal (1 subgoal):\n 1. connected (G - {z}) = (z = x \\<or> z = y)", "ultimately"], ["proof (chain)\npicking this:\n  connected (G - {z}) = (t = 0 \\<or> t = dist x y)\n  (t = 0 \\<or> t = dist x y) = (z = x \\<or> z = y)", "show ?thesis"], ["proof (prove)\nusing this:\n  connected (G - {z}) = (t = 0 \\<or> t = dist x y)\n  (t = 0 \\<or> t = dist x y) = (z = x \\<or> z = y)\n\ngoal (1 subgoal):\n 1. connected (G - {z}) = (z = x \\<or> z = y)", "by auto"], ["proof (state)\nthis:\n  connected (G - {z}) = (z = x \\<or> z = y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma geodesic_segment_unique_endpoints:\n  assumes \"geodesic_segment_between G x y\"\n          \"geodesic_segment_between G a b\"\n  shows \"{x, y} = {a, b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x, y} = {a, b}", "by (metis geodesic_segment_disconnection assms(1) assms(2) doubleton_eq_iff geodesic_segment_endpoints(1) geodesic_segment_endpoints(2))"], ["", "lemma geodesic_segment_subsegment:\n  assumes \"geodesic_segment G\" \"H \\<subseteq> G\" \"compact H\" \"connected H\" \"H \\<noteq> {}\"\n  shows \"geodesic_segment H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment H", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. geodesic_segment H", "obtain x y where \"geodesic_segment_between G x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        geodesic_segment_between G x y \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  geodesic_segment G\n  H \\<subseteq> G\n  compact H\n  connected H\n  H \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        geodesic_segment_between G x y \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding geodesic_segment_def"], ["proof (prove)\nusing this:\n  \\<exists>x. Ex (geodesic_segment_between G x)\n  H \\<subseteq> G\n  compact H\n  connected H\n  H \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        geodesic_segment_between G x y \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  geodesic_segment_between G x y\n\ngoal (1 subgoal):\n 1. geodesic_segment H", "obtain g where g: \"g 0 = x\" \"g (dist x y) = y\" \"isometry_on {0..dist x y} g\" \"G = g`{0..dist x y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g 0 = x; g (dist x y) = y; isometry_on {0..dist x y} g;\n         G = g ` {0..dist x y}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson \\<open>geodesic_segment_between G x y\\<close> geodesic_segment_between_def)"], ["proof (state)\nthis:\n  g 0 = x\n  g (dist x y) = y\n  isometry_on {0..dist x y} g\n  G = g ` {0..dist x y}\n\ngoal (1 subgoal):\n 1. geodesic_segment H", "define L where \"L = (inv_into {0..dist x y} g)`H\""], ["proof (state)\nthis:\n  L = inv_into {0..dist x y} g ` H\n\ngoal (1 subgoal):\n 1. geodesic_segment H", "have \"L \\<subseteq> {0..dist x y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. L \\<subseteq> {0..dist x y}", "unfolding L_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_into {0..dist x y} g ` H \\<subseteq> {0..dist x y}", "using isometry_on_inverse[OF \\<open>isometry_on {0..dist x y} g\\<close>] assms(2) g(4)"], ["proof (prove)\nusing this:\n  isometry_on (g ` {0..dist x y}) (inv_into {0..dist x y} g)\n  ?x \\<in> {0..dist x y} \\<Longrightarrow>\n  inv_into {0..dist x y} g (g ?x) = ?x\n  ?y \\<in> g ` {0..dist x y} \\<Longrightarrow>\n  g (inv_into {0..dist x y} g ?y) = ?y\n  bij_betw g {0..dist x y} (g ` {0..dist x y})\n  H \\<subseteq> G\n  G = g ` {0..dist x y}\n\ngoal (1 subgoal):\n 1. inv_into {0..dist x y} g ` H \\<subseteq> {0..dist x y}", "by auto"], ["proof (state)\nthis:\n  L \\<subseteq> {0..dist x y}\n\ngoal (1 subgoal):\n 1. geodesic_segment H", "have \"isometry_on G (inv_into {0..dist x y} g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isometry_on G (inv_into {0..dist x y} g)", "using isometry_on_inverse[OF \\<open>isometry_on {0..dist x y} g\\<close>] g(4)"], ["proof (prove)\nusing this:\n  isometry_on (g ` {0..dist x y}) (inv_into {0..dist x y} g)\n  ?x \\<in> {0..dist x y} \\<Longrightarrow>\n  inv_into {0..dist x y} g (g ?x) = ?x\n  ?y \\<in> g ` {0..dist x y} \\<Longrightarrow>\n  g (inv_into {0..dist x y} g ?y) = ?y\n  bij_betw g {0..dist x y} (g ` {0..dist x y})\n  G = g ` {0..dist x y}\n\ngoal (1 subgoal):\n 1. isometry_on G (inv_into {0..dist x y} g)", "by auto"], ["proof (state)\nthis:\n  isometry_on G (inv_into {0..dist x y} g)\n\ngoal (1 subgoal):\n 1. geodesic_segment H", "then"], ["proof (chain)\npicking this:\n  isometry_on G (inv_into {0..dist x y} g)", "have \"isometry_on H (inv_into {0..dist x y} g)\""], ["proof (prove)\nusing this:\n  isometry_on G (inv_into {0..dist x y} g)\n\ngoal (1 subgoal):\n 1. isometry_on H (inv_into {0..dist x y} g)", "using \\<open>H \\<subseteq> G\\<close> isometry_on_subset"], ["proof (prove)\nusing this:\n  isometry_on G (inv_into {0..dist x y} g)\n  H \\<subseteq> G\n  \\<lbrakk>isometry_on ?X ?f; ?Y \\<subseteq> ?X\\<rbrakk>\n  \\<Longrightarrow> isometry_on ?Y ?f\n\ngoal (1 subgoal):\n 1. isometry_on H (inv_into {0..dist x y} g)", "by auto"], ["proof (state)\nthis:\n  isometry_on H (inv_into {0..dist x y} g)\n\ngoal (1 subgoal):\n 1. geodesic_segment H", "then"], ["proof (chain)\npicking this:\n  isometry_on H (inv_into {0..dist x y} g)", "have \"H homeomorphic L\""], ["proof (prove)\nusing this:\n  isometry_on H (inv_into {0..dist x y} g)\n\ngoal (1 subgoal):\n 1. H homeomorphic L", "unfolding L_def"], ["proof (prove)\nusing this:\n  isometry_on H (inv_into {0..dist x y} g)\n\ngoal (1 subgoal):\n 1. H homeomorphic inv_into {0..dist x y} g ` H", "using isometry_on_homeomorphism(3)"], ["proof (prove)\nusing this:\n  isometry_on H (inv_into {0..dist x y} g)\n  isometry_on ?X ?f \\<Longrightarrow> ?X homeomorphic ?f ` ?X\n\ngoal (1 subgoal):\n 1. H homeomorphic inv_into {0..dist x y} g ` H", "by auto"], ["proof (state)\nthis:\n  H homeomorphic L\n\ngoal (1 subgoal):\n 1. geodesic_segment H", "then"], ["proof (chain)\npicking this:\n  H homeomorphic L", "have \"compact L \\<and> connected L\""], ["proof (prove)\nusing this:\n  H homeomorphic L\n\ngoal (1 subgoal):\n 1. compact L \\<and> connected L", "using assms homeomorphic_compactness homeomorphic_connectedness"], ["proof (prove)\nusing this:\n  H homeomorphic L\n  geodesic_segment G\n  H \\<subseteq> G\n  compact H\n  connected H\n  H \\<noteq> {}\n  ?s homeomorphic ?t \\<Longrightarrow> compact ?s = compact ?t\n  ?s homeomorphic ?t \\<Longrightarrow> connected ?s = connected ?t\n\ngoal (1 subgoal):\n 1. compact L \\<and> connected L", "by blast"], ["proof (state)\nthis:\n  compact L \\<and> connected L\n\ngoal (1 subgoal):\n 1. geodesic_segment H", "then"], ["proof (chain)\npicking this:\n  compact L \\<and> connected L", "obtain a b where \"L = {a..b}\""], ["proof (prove)\nusing this:\n  compact L \\<and> connected L\n\ngoal (1 subgoal):\n 1. (\\<And>a b. L = {a..b} \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using connected_compact_interval_1[of L]"], ["proof (prove)\nusing this:\n  compact L \\<and> connected L\n  (connected L \\<and> compact L) = (\\<exists>a b. L = {a..b})\n\ngoal (1 subgoal):\n 1. (\\<And>a b. L = {a..b} \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  L = {a..b}\n\ngoal (1 subgoal):\n 1. geodesic_segment H", "have \"a \\<le> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> b", "using \\<open>H \\<noteq> {}\\<close> \\<open>L = {a..b}\\<close>"], ["proof (prove)\nusing this:\n  H \\<noteq> {}\n  L = {a..b}\n\ngoal (1 subgoal):\n 1. a \\<le> b", "unfolding L_def"], ["proof (prove)\nusing this:\n  H \\<noteq> {}\n  inv_into {0..dist x y} g ` H = {a..b}\n\ngoal (1 subgoal):\n 1. a \\<le> b", "by auto"], ["proof (state)\nthis:\n  a \\<le> b\n\ngoal (1 subgoal):\n 1. geodesic_segment H", "then"], ["proof (chain)\npicking this:\n  a \\<le> b", "have \"0 \\<le> a\" \"b \\<le> dist x y\""], ["proof (prove)\nusing this:\n  a \\<le> b\n\ngoal (1 subgoal):\n 1. 0 \\<le> a &&& b \\<le> dist x y", "using \\<open>L \\<subseteq> {0..dist x y}\\<close> \\<open>L = {a..b}\\<close>"], ["proof (prove)\nusing this:\n  a \\<le> b\n  L \\<subseteq> {0..dist x y}\n  L = {a..b}\n\ngoal (1 subgoal):\n 1. 0 \\<le> a &&& b \\<le> dist x y", "by auto"], ["proof (state)\nthis:\n  0 \\<le> a\n  b \\<le> dist x y\n\ngoal (1 subgoal):\n 1. geodesic_segment H", "have *: \"H = g`{a..b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H = g ` {a..b}", "by (metis L_def \\<open>L = {a..b}\\<close> assms(2) g(4) image_inv_into_cancel)"], ["proof (state)\nthis:\n  H = g ` {a..b}\n\ngoal (1 subgoal):\n 1. geodesic_segment H", "show \"geodesic_segment H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment H", "unfolding *"], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment (g ` {a..b})", "apply (rule geodesic_segmentI2[OF _ \\<open>a \\<le> b\\<close>])"], ["proof (prove)\ngoal (1 subgoal):\n 1. isometry_on {a..b} g", "apply (rule isometry_on_subset[OF g(3)])"], ["proof (prove)\ngoal (1 subgoal):\n 1. {a..b} \\<subseteq> {0..dist x y}", "using \\<open>0 \\<le> a\\<close> \\<open>b \\<le> dist x y\\<close>"], ["proof (prove)\nusing this:\n  0 \\<le> a\n  b \\<le> dist x y\n\ngoal (1 subgoal):\n 1. {a..b} \\<subseteq> {0..dist x y}", "by auto"], ["proof (state)\nthis:\n  geodesic_segment H\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The image under an isometry of a geodesic segment is still obviously a geodesic segment.\\<close>"], ["", "lemma isometry_preserves_geodesic_segment_between:\n  assumes \"isometry_on X f\"\n          \"G \\<subseteq> X\" \"geodesic_segment_between G x y\"\n  shows \"geodesic_segment_between (f`G) (f x) (f y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between (f ` G) (f x) (f y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. geodesic_segment_between (f ` G) (f x) (f y)", "obtain g where g: \"g 0 = x\" \"g (dist x y) = y\" \"isometry_on {0..dist x y} g\" \"G = g`{0..dist x y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g 0 = x; g (dist x y) = y; isometry_on {0..dist x y} g;\n         G = g ` {0..dist x y}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson \\<open>geodesic_segment_between G x y\\<close> geodesic_segment_between_def)"], ["proof (state)\nthis:\n  g 0 = x\n  g (dist x y) = y\n  isometry_on {0..dist x y} g\n  G = g ` {0..dist x y}\n\ngoal (1 subgoal):\n 1. geodesic_segment_between (f ` G) (f x) (f y)", "then"], ["proof (chain)\npicking this:\n  g 0 = x\n  g (dist x y) = y\n  isometry_on {0..dist x y} g\n  G = g ` {0..dist x y}", "have *: \"f`G = (f o g) `{0..dist x y}\" \"f x = (f o g) 0\" \"f y = (f o g) (dist x y)\""], ["proof (prove)\nusing this:\n  g 0 = x\n  g (dist x y) = y\n  isometry_on {0..dist x y} g\n  G = g ` {0..dist x y}\n\ngoal (1 subgoal):\n 1. f ` G = (f \\<circ> g) ` {0..dist x y} &&&\n    f x = (f \\<circ> g) 0 &&& f y = (f \\<circ> g) (dist x y)", "by auto"], ["proof (state)\nthis:\n  f ` G = (f \\<circ> g) ` {0..dist x y}\n  f x = (f \\<circ> g) 0\n  f y = (f \\<circ> g) (dist x y)\n\ngoal (1 subgoal):\n 1. geodesic_segment_between (f ` G) (f x) (f y)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between (f ` G) (f x) (f y)", "unfolding *"], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between ((f \\<circ> g) ` {0..dist x y})\n     ((f \\<circ> g) 0) ((f \\<circ> g) (dist x y))", "apply (intro geodesic_segmentI2(1))"], ["proof (prove)\ngoal (2 subgoals):\n 1. isometry_on {0..dist x y} (f \\<circ> g)\n 2. 0 \\<le> dist x y", "unfolding comp_def"], ["proof (prove)\ngoal (2 subgoals):\n 1. isometry_on {0..dist x y} (\\<lambda>x. f (g x))\n 2. 0 \\<le> dist x y", "apply (rule isometry_on_compose[of _ g])"], ["proof (prove)\ngoal (3 subgoals):\n 1. isometry_on {0..dist x y} g\n 2. isometry_on (g ` {0..dist x y}) f\n 3. 0 \\<le> dist x y", "using g(3) g(4) assms"], ["proof (prove)\nusing this:\n  isometry_on {0..dist x y} g\n  G = g ` {0..dist x y}\n  isometry_on X f\n  G \\<subseteq> X\n  geodesic_segment_between G x y\n\ngoal (3 subgoals):\n 1. isometry_on {0..dist x y} g\n 2. isometry_on (g ` {0..dist x y}) f\n 3. 0 \\<le> dist x y", "by (auto intro: isometry_on_subset)"], ["proof (state)\nthis:\n  geodesic_segment_between (f ` G) (f x) (f y)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The sum of distances $d(w, x) + d(w, y)$ can be controlled using the distance from $w$\nto a geodesic segment between $x$ and $y$.\\<close>"], ["", "lemma geodesic_segment_distance:\n  assumes \"geodesic_segment_between G x y\"\n  shows \"dist w x + dist w y \\<le> dist x y + 2 * infdist w G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist w x + dist w y \\<le> dist x y + 2 * infdist w G", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist w x + dist w y \\<le> dist x y + 2 * infdist w G", "have \"\\<exists>z \\<in> G. infdist w G = dist w z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>z\\<in>G. infdist w G = dist w z", "apply (rule infdist_proper_attained)"], ["proof (prove)\ngoal (2 subgoals):\n 1. proper G\n 2. G \\<noteq> {}", "using assms"], ["proof (prove)\nusing this:\n  geodesic_segment_between G x y\n\ngoal (2 subgoals):\n 1. proper G\n 2. G \\<noteq> {}", "by (auto simp add: geodesic_segment_topology)"], ["proof (state)\nthis:\n  \\<exists>z\\<in>G. infdist w G = dist w z\n\ngoal (1 subgoal):\n 1. dist w x + dist w y \\<le> dist x y + 2 * infdist w G", "then"], ["proof (chain)\npicking this:\n  \\<exists>z\\<in>G. infdist w G = dist w z", "obtain z where z: \"z \\<in> G\" \"infdist w G = dist w z\""], ["proof (prove)\nusing this:\n  \\<exists>z\\<in>G. infdist w G = dist w z\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>z \\<in> G; infdist w G = dist w z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  z \\<in> G\n  infdist w G = dist w z\n\ngoal (1 subgoal):\n 1. dist w x + dist w y \\<le> dist x y + 2 * infdist w G", "have \"dist w x + dist w y \\<le> (dist w z + dist z x) + (dist w z + dist z y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist w x + dist w y \\<le> dist w z + dist z x + (dist w z + dist z y)", "by (intro mono_intros)"], ["proof (state)\nthis:\n  dist w x + dist w y \\<le> dist w z + dist z x + (dist w z + dist z y)\n\ngoal (1 subgoal):\n 1. dist w x + dist w y \\<le> dist x y + 2 * infdist w G", "also"], ["proof (state)\nthis:\n  dist w x + dist w y \\<le> dist w z + dist z x + (dist w z + dist z y)\n\ngoal (1 subgoal):\n 1. dist w x + dist w y \\<le> dist x y + 2 * infdist w G", "have \"... = dist x z + dist z y + 2 * dist w z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist w z + dist z x + (dist w z + dist z y) =\n    dist x z + dist z y + 2 * dist w z", "by (auto simp add: dist_commute)"], ["proof (state)\nthis:\n  dist w z + dist z x + (dist w z + dist z y) =\n  dist x z + dist z y + 2 * dist w z\n\ngoal (1 subgoal):\n 1. dist w x + dist w y \\<le> dist x y + 2 * infdist w G", "also"], ["proof (state)\nthis:\n  dist w z + dist z x + (dist w z + dist z y) =\n  dist x z + dist z y + 2 * dist w z\n\ngoal (1 subgoal):\n 1. dist w x + dist w y \\<le> dist x y + 2 * infdist w G", "have \"... = dist x y + 2 * infdist w G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x z + dist z y + 2 * dist w z = dist x y + 2 * infdist w G", "using z(1) assms geodesic_segment_dist"], ["proof (prove)\nusing this:\n  z \\<in> G\n  geodesic_segment_between G x y\n  \\<lbrakk>geodesic_segment_between ?G ?x ?y; ?a \\<in> ?G\\<rbrakk>\n  \\<Longrightarrow> dist ?x ?a + dist ?a ?y = dist ?x ?y\n\ngoal (1 subgoal):\n 1. dist x z + dist z y + 2 * dist w z = dist x y + 2 * infdist w G", "unfolding z(2)"], ["proof (prove)\nusing this:\n  z \\<in> G\n  geodesic_segment_between G x y\n  \\<lbrakk>geodesic_segment_between ?G ?x ?y; ?a \\<in> ?G\\<rbrakk>\n  \\<Longrightarrow> dist ?x ?a + dist ?a ?y = dist ?x ?y\n\ngoal (1 subgoal):\n 1. dist x z + dist z y + 2 * dist w z = dist x y + 2 * dist w z", "by auto"], ["proof (state)\nthis:\n  dist x z + dist z y + 2 * dist w z = dist x y + 2 * infdist w G\n\ngoal (1 subgoal):\n 1. dist w x + dist w y \\<le> dist x y + 2 * infdist w G", "finally"], ["proof (chain)\npicking this:\n  dist w x + dist w y \\<le> dist x y + 2 * infdist w G", "show ?thesis"], ["proof (prove)\nusing this:\n  dist w x + dist w y \\<le> dist x y + 2 * infdist w G\n\ngoal (1 subgoal):\n 1. dist w x + dist w y \\<le> dist x y + 2 * infdist w G", "by auto"], ["proof (state)\nthis:\n  dist w x + dist w y \\<le> dist x y + 2 * infdist w G\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If a point $y$ is on a geodesic segment between $x$ and its closest projection $p$ on a set $A$,\nthen $p$ is also a closest projection of $y$, and the closest projection set of $y$ is contained in\nthat of $x$.\\<close>"], ["", "lemma proj_set_geodesic_same_basepoint:\n  assumes \"p \\<in> proj_set x A\" \"geodesic_segment_between G p x\" \"y \\<in> G\"\n  shows \"p \\<in> proj_set y A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> proj_set y A", "proof (rule proj_setI)"], ["proof (state)\ngoal (2 subgoals):\n 1. p \\<in> A\n 2. dist y p \\<le> infdist y A", "show \"p \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> A", "using assms proj_setD"], ["proof (prove)\nusing this:\n  p \\<in> proj_set x A\n  geodesic_segment_between G p x\n  y \\<in> G\n  ?y \\<in> proj_set ?x ?A \\<Longrightarrow> ?y \\<in> ?A\n  ?y \\<in> proj_set ?x ?A \\<Longrightarrow> dist ?x ?y = infdist ?x ?A\n\ngoal (1 subgoal):\n 1. p \\<in> A", "by auto"], ["proof (state)\nthis:\n  p \\<in> A\n\ngoal (1 subgoal):\n 1. dist y p \\<le> infdist y A", "have *: \"dist y p \\<le> dist y q\" if \"q \\<in> A\" for q"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist y p \\<le> dist y q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist y p \\<le> dist y q", "have \"dist p y + dist y x = dist p x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist p y + dist y x = dist p x", "using assms geodesic_segment_dist"], ["proof (prove)\nusing this:\n  p \\<in> proj_set x A\n  geodesic_segment_between G p x\n  y \\<in> G\n  \\<lbrakk>geodesic_segment_between ?G ?x ?y; ?a \\<in> ?G\\<rbrakk>\n  \\<Longrightarrow> dist ?x ?a + dist ?a ?y = dist ?x ?y\n\ngoal (1 subgoal):\n 1. dist p y + dist y x = dist p x", "by blast"], ["proof (state)\nthis:\n  dist p y + dist y x = dist p x\n\ngoal (1 subgoal):\n 1. dist y p \\<le> dist y q", "also"], ["proof (state)\nthis:\n  dist p y + dist y x = dist p x\n\ngoal (1 subgoal):\n 1. dist y p \\<le> dist y q", "have \"... \\<le> dist q x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist p x \\<le> dist q x", "using proj_set_dist_le[OF \\<open>q \\<in> A\\<close> assms(1)]"], ["proof (prove)\nusing this:\n  dist x p \\<le> dist x q\n\ngoal (1 subgoal):\n 1. dist p x \\<le> dist q x", "by (simp add: dist_commute)"], ["proof (state)\nthis:\n  dist p x \\<le> dist q x\n\ngoal (1 subgoal):\n 1. dist y p \\<le> dist y q", "also"], ["proof (state)\nthis:\n  dist p x \\<le> dist q x\n\ngoal (1 subgoal):\n 1. dist y p \\<le> dist y q", "have \"... \\<le> dist q y + dist y x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist q x \\<le> dist q y + dist y x", "by (intro mono_intros)"], ["proof (state)\nthis:\n  dist q x \\<le> dist q y + dist y x\n\ngoal (1 subgoal):\n 1. dist y p \\<le> dist y q", "finally"], ["proof (chain)\npicking this:\n  dist p y + dist y x \\<le> dist q y + dist y x", "show ?thesis"], ["proof (prove)\nusing this:\n  dist p y + dist y x \\<le> dist q y + dist y x\n\ngoal (1 subgoal):\n 1. dist y p \\<le> dist y q", "by (simp add: dist_commute)"], ["proof (state)\nthis:\n  dist y p \\<le> dist y q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?q \\<in> A \\<Longrightarrow> dist y p \\<le> dist y ?q\n\ngoal (1 subgoal):\n 1. dist y p \\<le> infdist y A", "have \"dist y p \\<le> Inf (dist y ` A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist y p \\<le> Inf (dist y ` A)", "apply (rule cINF_greatest)"], ["proof (prove)\ngoal (2 subgoals):\n 1. A \\<noteq> {}\n 2. \\<And>x. x \\<in> A \\<Longrightarrow> dist y p \\<le> dist y x", "using \\<open>p \\<in> A\\<close> *"], ["proof (prove)\nusing this:\n  p \\<in> A\n  ?q \\<in> A \\<Longrightarrow> dist y p \\<le> dist y ?q\n\ngoal (2 subgoals):\n 1. A \\<noteq> {}\n 2. \\<And>x. x \\<in> A \\<Longrightarrow> dist y p \\<le> dist y x", "by auto"], ["proof (state)\nthis:\n  dist y p \\<le> Inf (dist y ` A)\n\ngoal (1 subgoal):\n 1. dist y p \\<le> infdist y A", "then"], ["proof (chain)\npicking this:\n  dist y p \\<le> Inf (dist y ` A)", "show \"dist y p \\<le> infdist y A\""], ["proof (prove)\nusing this:\n  dist y p \\<le> Inf (dist y ` A)\n\ngoal (1 subgoal):\n 1. dist y p \\<le> infdist y A", "unfolding infdist_def"], ["proof (prove)\nusing this:\n  dist y p \\<le> Inf (dist y ` A)\n\ngoal (1 subgoal):\n 1. dist y p \\<le> (if A = {} then 0 else Inf (dist y ` A))", "using \\<open>p \\<in> A\\<close>"], ["proof (prove)\nusing this:\n  dist y p \\<le> Inf (dist y ` A)\n  p \\<in> A\n\ngoal (1 subgoal):\n 1. dist y p \\<le> (if A = {} then 0 else Inf (dist y ` A))", "by auto"], ["proof (state)\nthis:\n  dist y p \\<le> infdist y A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma proj_set_subset:\n  assumes \"p \\<in> proj_set x A\" \"geodesic_segment_between G p x\" \"y \\<in> G\"\n  shows \"proj_set y A \\<subseteq> proj_set x A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_set y A \\<subseteq> proj_set x A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. proj_set y A \\<subseteq> proj_set x A", "have \"z \\<in> proj_set x A\" if \"z \\<in> proj_set y A\" for z"], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> proj_set x A", "proof (rule proj_setI)"], ["proof (state)\ngoal (2 subgoals):\n 1. z \\<in> A\n 2. dist x z \\<le> infdist x A", "show \"z \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> A", "using that proj_setD"], ["proof (prove)\nusing this:\n  z \\<in> proj_set y A\n  ?y \\<in> proj_set ?x ?A \\<Longrightarrow> ?y \\<in> ?A\n  ?y \\<in> proj_set ?x ?A \\<Longrightarrow> dist ?x ?y = infdist ?x ?A\n\ngoal (1 subgoal):\n 1. z \\<in> A", "by auto"], ["proof (state)\nthis:\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. dist x z \\<le> infdist x A", "have \"dist x z \\<le> dist x y + dist y z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x z \\<le> dist x y + dist y z", "by (intro mono_intros)"], ["proof (state)\nthis:\n  dist x z \\<le> dist x y + dist y z\n\ngoal (1 subgoal):\n 1. dist x z \\<le> infdist x A", "also"], ["proof (state)\nthis:\n  dist x z \\<le> dist x y + dist y z\n\ngoal (1 subgoal):\n 1. dist x z \\<le> infdist x A", "have \"... \\<le> dist x y + dist y p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x y + dist y z \\<le> dist x y + dist y p", "using proj_set_dist_le[OF proj_setD(1)[OF \\<open>p \\<in> proj_set x A\\<close>] that]"], ["proof (prove)\nusing this:\n  dist y z \\<le> dist y p\n\ngoal (1 subgoal):\n 1. dist x y + dist y z \\<le> dist x y + dist y p", "by auto"], ["proof (state)\nthis:\n  dist x y + dist y z \\<le> dist x y + dist y p\n\ngoal (1 subgoal):\n 1. dist x z \\<le> infdist x A", "also"], ["proof (state)\nthis:\n  dist x y + dist y z \\<le> dist x y + dist y p\n\ngoal (1 subgoal):\n 1. dist x z \\<le> infdist x A", "have \"... = dist x p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x y + dist y p = dist x p", "using assms geodesic_segment_commute geodesic_segment_dist"], ["proof (prove)\nusing this:\n  p \\<in> proj_set x A\n  geodesic_segment_between G p x\n  y \\<in> G\n  geodesic_segment_between ?G ?x ?y \\<Longrightarrow>\n  geodesic_segment_between ?G ?y ?x\n  \\<lbrakk>geodesic_segment_between ?G ?x ?y; ?a \\<in> ?G\\<rbrakk>\n  \\<Longrightarrow> dist ?x ?a + dist ?a ?y = dist ?x ?y\n\ngoal (1 subgoal):\n 1. dist x y + dist y p = dist x p", "by blast"], ["proof (state)\nthis:\n  dist x y + dist y p = dist x p\n\ngoal (1 subgoal):\n 1. dist x z \\<le> infdist x A", "also"], ["proof (state)\nthis:\n  dist x y + dist y p = dist x p\n\ngoal (1 subgoal):\n 1. dist x z \\<le> infdist x A", "have \"... = infdist x A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x p = infdist x A", "using proj_setD(2)[OF assms(1)]"], ["proof (prove)\nusing this:\n  dist x p = infdist x A\n\ngoal (1 subgoal):\n 1. dist x p = infdist x A", "by simp"], ["proof (state)\nthis:\n  dist x p = infdist x A\n\ngoal (1 subgoal):\n 1. dist x z \\<le> infdist x A", "finally"], ["proof (chain)\npicking this:\n  dist x z \\<le> infdist x A", "show \"dist x z \\<le> infdist x A\""], ["proof (prove)\nusing this:\n  dist x z \\<le> infdist x A\n\ngoal (1 subgoal):\n 1. dist x z \\<le> infdist x A", "by simp"], ["proof (state)\nthis:\n  dist x z \\<le> infdist x A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?z \\<in> proj_set y A \\<Longrightarrow> ?z \\<in> proj_set x A\n\ngoal (1 subgoal):\n 1. proj_set y A \\<subseteq> proj_set x A", "then"], ["proof (chain)\npicking this:\n  ?z \\<in> proj_set y A \\<Longrightarrow> ?z \\<in> proj_set x A", "show ?thesis"], ["proof (prove)\nusing this:\n  ?z \\<in> proj_set y A \\<Longrightarrow> ?z \\<in> proj_set x A\n\ngoal (1 subgoal):\n 1. proj_set y A \\<subseteq> proj_set x A", "by auto"], ["proof (state)\nthis:\n  proj_set y A \\<subseteq> proj_set x A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma proj_set_thickening:\n  assumes \"p \\<in> proj_set x Z\"\n          \"0 \\<le> D\"\n          \"D \\<le> dist p x\"\n          \"geodesic_segment_between G p x\"\n  shows \"geodesic_segment_param G p D \\<in> proj_set x (\\<Union>z\\<in>Z. cball z D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_param G p D\n    \\<in> proj_set x (\\<Union>z\\<in>Z. cball z D)", "proof (rule proj_setI')"], ["proof (state)\ngoal (2 subgoals):\n 1. geodesic_segment_param G p D \\<in> (\\<Union>z\\<in>Z. cball z D)\n 2. \\<And>z.\n       z \\<in> (\\<Union>z\\<in>Z. cball z D) \\<Longrightarrow>\n       dist x (geodesic_segment_param G p D) \\<le> dist x z", "have \"dist p (geodesic_segment_param G p D) = D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist p (geodesic_segment_param G p D) = D", "using geodesic_segment_param(7)[OF assms(4), of 0 D]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<in> {0..dist p x}; D \\<in> {0..dist p x}\\<rbrakk>\n  \\<Longrightarrow> dist (geodesic_segment_param G p 0)\n                     (geodesic_segment_param G p D) =\n                    \\<bar>0 - D\\<bar>\n\ngoal (1 subgoal):\n 1. dist p (geodesic_segment_param G p D) = D", "unfolding geodesic_segment_param(1)[OF assms(4)]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<in> {0..dist p x}; D \\<in> {0..dist p x}\\<rbrakk>\n  \\<Longrightarrow> dist p (geodesic_segment_param G p D) =\n                    \\<bar>0 - D\\<bar>\n\ngoal (1 subgoal):\n 1. dist p (geodesic_segment_param G p D) = D", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<in> {0..dist p x}; D \\<in> {0..dist p x}\\<rbrakk>\n  \\<Longrightarrow> dist p (geodesic_segment_param G p D) =\n                    \\<bar>0 - D\\<bar>\n  p \\<in> proj_set x Z\n  0 \\<le> D\n  D \\<le> dist p x\n  geodesic_segment_between G p x\n\ngoal (1 subgoal):\n 1. dist p (geodesic_segment_param G p D) = D", "by simp"], ["proof (state)\nthis:\n  dist p (geodesic_segment_param G p D) = D\n\ngoal (2 subgoals):\n 1. geodesic_segment_param G p D \\<in> (\\<Union>z\\<in>Z. cball z D)\n 2. \\<And>z.\n       z \\<in> (\\<Union>z\\<in>Z. cball z D) \\<Longrightarrow>\n       dist x (geodesic_segment_param G p D) \\<le> dist x z", "then"], ["proof (chain)\npicking this:\n  dist p (geodesic_segment_param G p D) = D", "show \"geodesic_segment_param G p D \\<in> (\\<Union>z\\<in>Z. cball z D)\""], ["proof (prove)\nusing this:\n  dist p (geodesic_segment_param G p D) = D\n\ngoal (1 subgoal):\n 1. geodesic_segment_param G p D \\<in> (\\<Union>z\\<in>Z. cball z D)", "using proj_setD(1)[OF \\<open>p \\<in> proj_set x Z\\<close>]"], ["proof (prove)\nusing this:\n  dist p (geodesic_segment_param G p D) = D\n  p \\<in> Z\n\ngoal (1 subgoal):\n 1. geodesic_segment_param G p D \\<in> (\\<Union>z\\<in>Z. cball z D)", "by force"], ["proof (state)\nthis:\n  geodesic_segment_param G p D \\<in> (\\<Union>z\\<in>Z. cball z D)\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       z \\<in> (\\<Union>z\\<in>Z. cball z D) \\<Longrightarrow>\n       dist x (geodesic_segment_param G p D) \\<le> dist x z", "show \"dist x (geodesic_segment_param G p D) \\<le> dist x y\" if \"y \\<in> (\\<Union>z\\<in>Z. cball z D)\" for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x (geodesic_segment_param G p D) \\<le> dist x y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist x (geodesic_segment_param G p D) \\<le> dist x y", "obtain z where y: \"y \\<in> cball z D\" \"z \\<in> Z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>y \\<in> cball z D; z \\<in> Z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>y \\<in> (\\<Union>z\\<in>Z. cball z D)\\<close>"], ["proof (prove)\nusing this:\n  y \\<in> (\\<Union>z\\<in>Z. cball z D)\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>y \\<in> cball z D; z \\<in> Z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  y \\<in> cball z D\n  z \\<in> Z\n\ngoal (1 subgoal):\n 1. dist x (geodesic_segment_param G p D) \\<le> dist x y", "have \"dist (geodesic_segment_param G p D) x + D = dist p x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (geodesic_segment_param G p D) x + D = dist p x", "using geodesic_segment_param(7)[OF assms(4), of D \"dist p x\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>D \\<in> {0..dist p x}; dist p x \\<in> {0..dist p x}\\<rbrakk>\n  \\<Longrightarrow> dist (geodesic_segment_param G p D)\n                     (geodesic_segment_param G p (dist p x)) =\n                    \\<bar>D - dist p x\\<bar>\n\ngoal (1 subgoal):\n 1. dist (geodesic_segment_param G p D) x + D = dist p x", "unfolding geodesic_segment_param(2)[OF assms(4)]"], ["proof (prove)\nusing this:\n  \\<lbrakk>D \\<in> {0..dist p x}; dist p x \\<in> {0..dist p x}\\<rbrakk>\n  \\<Longrightarrow> dist (geodesic_segment_param G p D) x =\n                    \\<bar>D - dist p x\\<bar>\n\ngoal (1 subgoal):\n 1. dist (geodesic_segment_param G p D) x + D = dist p x", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>D \\<in> {0..dist p x}; dist p x \\<in> {0..dist p x}\\<rbrakk>\n  \\<Longrightarrow> dist (geodesic_segment_param G p D) x =\n                    \\<bar>D - dist p x\\<bar>\n  p \\<in> proj_set x Z\n  0 \\<le> D\n  D \\<le> dist p x\n  geodesic_segment_between G p x\n\ngoal (1 subgoal):\n 1. dist (geodesic_segment_param G p D) x + D = dist p x", "by simp"], ["proof (state)\nthis:\n  dist (geodesic_segment_param G p D) x + D = dist p x\n\ngoal (1 subgoal):\n 1. dist x (geodesic_segment_param G p D) \\<le> dist x y", "also"], ["proof (state)\nthis:\n  dist (geodesic_segment_param G p D) x + D = dist p x\n\ngoal (1 subgoal):\n 1. dist x (geodesic_segment_param G p D) \\<le> dist x y", "have \"... \\<le> dist z x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist p x \\<le> dist z x", "using proj_setD(2)[OF \\<open>p \\<in> proj_set x Z\\<close>] infdist_le[OF \\<open>z \\<in> Z\\<close>, of x]"], ["proof (prove)\nusing this:\n  dist x p = infdist x Z\n  infdist x Z \\<le> dist x z\n\ngoal (1 subgoal):\n 1. dist p x \\<le> dist z x", "by (simp add: dist_commute)"], ["proof (state)\nthis:\n  dist p x \\<le> dist z x\n\ngoal (1 subgoal):\n 1. dist x (geodesic_segment_param G p D) \\<le> dist x y", "also"], ["proof (state)\nthis:\n  dist p x \\<le> dist z x\n\ngoal (1 subgoal):\n 1. dist x (geodesic_segment_param G p D) \\<le> dist x y", "have \"... \\<le> dist z y + dist y x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist z x \\<le> dist z y + dist y x", "by (intro mono_intros)"], ["proof (state)\nthis:\n  dist z x \\<le> dist z y + dist y x\n\ngoal (1 subgoal):\n 1. dist x (geodesic_segment_param G p D) \\<le> dist x y", "also"], ["proof (state)\nthis:\n  dist z x \\<le> dist z y + dist y x\n\ngoal (1 subgoal):\n 1. dist x (geodesic_segment_param G p D) \\<le> dist x y", "have \"... \\<le> D + dist y x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist z y + dist y x \\<le> D + dist y x", "using y"], ["proof (prove)\nusing this:\n  y \\<in> cball z D\n  z \\<in> Z\n\ngoal (1 subgoal):\n 1. dist z y + dist y x \\<le> D + dist y x", "by simp"], ["proof (state)\nthis:\n  dist z y + dist y x \\<le> D + dist y x\n\ngoal (1 subgoal):\n 1. dist x (geodesic_segment_param G p D) \\<le> dist x y", "finally"], ["proof (chain)\npicking this:\n  dist (geodesic_segment_param G p D) x + D \\<le> D + dist y x", "show ?thesis"], ["proof (prove)\nusing this:\n  dist (geodesic_segment_param G p D) x + D \\<le> D + dist y x\n\ngoal (1 subgoal):\n 1. dist x (geodesic_segment_param G p D) \\<le> dist x y", "by (simp add: dist_commute)"], ["proof (state)\nthis:\n  dist x (geodesic_segment_param G p D) \\<le> dist x y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?y \\<in> (\\<Union>z\\<in>Z. cball z D) \\<Longrightarrow>\n  dist x (geodesic_segment_param G p D) \\<le> dist x ?y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma proj_set_thickening':\n  assumes \"p \\<in> proj_set x Z\"\n          \"0 \\<le> D\"\n          \"D \\<le> E\"\n          \"E \\<le> dist p x\"\n          \"geodesic_segment_between G p x\"\n  shows \"geodesic_segment_param G p D \\<in> proj_set (geodesic_segment_param G p E) (\\<Union>z\\<in>Z. cball z D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_param G p D\n    \\<in> proj_set (geodesic_segment_param G p E)\n           (\\<Union>z\\<in>Z. cball z D)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. geodesic_segment_param G p D\n    \\<in> proj_set (geodesic_segment_param G p E)\n           (\\<Union>z\\<in>Z. cball z D)", "define H where \"H = geodesic_subsegment G p D (dist p x)\""], ["proof (state)\nthis:\n  H = geodesic_subsegment G p D (dist p x)\n\ngoal (1 subgoal):\n 1. geodesic_segment_param G p D\n    \\<in> proj_set (geodesic_segment_param G p E)\n           (\\<Union>z\\<in>Z. cball z D)", "have H1: \"geodesic_segment_between H (geodesic_segment_param G p D) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between H (geodesic_segment_param G p D) x", "apply (subst geodesic_segment_param(2)[OF \\<open>geodesic_segment_between G p x\\<close>, symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between H (geodesic_segment_param G p D)\n     (geodesic_segment_param G p (dist p x))", "unfolding H_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between (geodesic_subsegment G p D (dist p x))\n     (geodesic_segment_param G p D) (geodesic_segment_param G p (dist p x))", "apply (rule geodesic_subsegment(2))"], ["proof (prove)\ngoal (4 subgoals):\n 1. geodesic_segment_between G p ?y\n 2. 0 \\<le> D\n 3. D \\<le> dist p x\n 4. dist p x \\<le> dist p ?y", "using assms"], ["proof (prove)\nusing this:\n  p \\<in> proj_set x Z\n  0 \\<le> D\n  D \\<le> E\n  E \\<le> dist p x\n  geodesic_segment_between G p x\n\ngoal (4 subgoals):\n 1. geodesic_segment_between G p ?y\n 2. 0 \\<le> D\n 3. D \\<le> dist p x\n 4. dist p x \\<le> dist p ?y", "by auto"], ["proof (state)\nthis:\n  geodesic_segment_between H (geodesic_segment_param G p D) x\n\ngoal (1 subgoal):\n 1. geodesic_segment_param G p D\n    \\<in> proj_set (geodesic_segment_param G p E)\n           (\\<Union>z\\<in>Z. cball z D)", "have H2: \"geodesic_segment_param G p E \\<in> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_param G p E \\<in> H", "unfolding H_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_param G p E \\<in> geodesic_subsegment G p D (dist p x)", "using assms geodesic_subsegment(1)"], ["proof (prove)\nusing this:\n  p \\<in> proj_set x Z\n  0 \\<le> D\n  D \\<le> E\n  E \\<le> dist p x\n  geodesic_segment_between G p x\n  \\<lbrakk>geodesic_segment_between ?G ?x ?y; 0 \\<le> ?s; ?s \\<le> ?t;\n   ?t \\<le> dist ?x ?y\\<rbrakk>\n  \\<Longrightarrow> geodesic_subsegment ?G ?x ?s ?t =\n                    geodesic_segment_param ?G ?x ` {?s..?t}\n\ngoal (1 subgoal):\n 1. geodesic_segment_param G p E \\<in> geodesic_subsegment G p D (dist p x)", "by force"], ["proof (state)\nthis:\n  geodesic_segment_param G p E \\<in> H\n\ngoal (1 subgoal):\n 1. geodesic_segment_param G p D\n    \\<in> proj_set (geodesic_segment_param G p E)\n           (\\<Union>z\\<in>Z. cball z D)", "have \"geodesic_segment_param G p D \\<in> proj_set x (\\<Union>z\\<in>Z. cball z D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_param G p D\n    \\<in> proj_set x (\\<Union>z\\<in>Z. cball z D)", "apply (rule proj_set_thickening)"], ["proof (prove)\ngoal (4 subgoals):\n 1. p \\<in> proj_set x Z\n 2. 0 \\<le> D\n 3. D \\<le> dist p x\n 4. geodesic_segment_between G p x", "using assms"], ["proof (prove)\nusing this:\n  p \\<in> proj_set x Z\n  0 \\<le> D\n  D \\<le> E\n  E \\<le> dist p x\n  geodesic_segment_between G p x\n\ngoal (4 subgoals):\n 1. p \\<in> proj_set x Z\n 2. 0 \\<le> D\n 3. D \\<le> dist p x\n 4. geodesic_segment_between G p x", "by auto"], ["proof (state)\nthis:\n  geodesic_segment_param G p D \\<in> proj_set x (\\<Union>z\\<in>Z. cball z D)\n\ngoal (1 subgoal):\n 1. geodesic_segment_param G p D\n    \\<in> proj_set (geodesic_segment_param G p E)\n           (\\<Union>z\\<in>Z. cball z D)", "then"], ["proof (chain)\npicking this:\n  geodesic_segment_param G p D \\<in> proj_set x (\\<Union>z\\<in>Z. cball z D)", "show ?thesis"], ["proof (prove)\nusing this:\n  geodesic_segment_param G p D \\<in> proj_set x (\\<Union>z\\<in>Z. cball z D)\n\ngoal (1 subgoal):\n 1. geodesic_segment_param G p D\n    \\<in> proj_set (geodesic_segment_param G p E)\n           (\\<Union>z\\<in>Z. cball z D)", "by (rule proj_set_geodesic_same_basepoint[OF _ H1 H2])"], ["proof (state)\nthis:\n  geodesic_segment_param G p D\n  \\<in> proj_set (geodesic_segment_param G p E) (\\<Union>z\\<in>Z. cball z D)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>It is often convenient to use \\emph{one} geodesic between $x$ and $y$, even if it is not unique.\nWe introduce a notation for such a choice of a geodesic, denoted \\verb+{x--S--y}+ for such a geodesic\nthat moreover remains in the set $S$. We also enforce\nthe condition \\verb+{x--S--y} = {y--S--x}+. When there is no such geodesic, we simply take\n\\verb+{x--S--y} = {x, y}+ for definiteness. It would be even better to enforce that, if\n$a$ is on \\verb+{x--S--y}+, then \\verb+{x--S--y}+ is the union of \\verb+{x--S--a}+ and \\verb+{a--S--y}+, but\nI do not know if such a choice is always possible -- such a choice of geodesics is\ncalled a geodesic bicombing.\nWe also write \\verb+{x--y}+ for \\verb+{x--UNIV--y}+.\\<close>"], ["", "definition some_geodesic_segment_between::\"'a::metric_space \\<Rightarrow> 'a set \\<Rightarrow> 'a \\<Rightarrow> 'a set\" (\"(1{_--_--_})\")\n  where \"some_geodesic_segment_between = (SOME f. \\<forall> x y S. f x S y = f y S x\n    \\<and> (if (\\<exists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S) then (geodesic_segment_between (f x S y) x y \\<and> (f x S y \\<subseteq> S))\n        else f x S y = {x, y}))\""], ["", "abbreviation some_geodesic_segment_between_UNIV::\"'a::metric_space \\<Rightarrow> 'a \\<Rightarrow> 'a set\" (\"(1{_--_})\")\n  where \"some_geodesic_segment_between_UNIV x y \\<equiv> {x--UNIV--y}\""], ["", "text \\<open>We prove that there is such a choice of geodesics, compatible with direction reversal. What\nwe do is choose arbitrarily a geodesic between $x$ and $y$ if it exists, and then use the geodesic\nbetween $\\min(x, y)$ and $\\max(x,y)$, for any total order on the space, to ensure that we get the\nsame result from $x$ to $y$ or from $y$ to $x$.\\<close>"], ["", "lemma some_geodesic_segment_between_exists:\n  \"\\<exists>f. \\<forall> x y S. f x S y = f y S x\n    \\<and> (if (\\<exists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S) then (geodesic_segment_between (f x S y) x y \\<and> (f x S y \\<subseteq> S))\n        else f x S y = {x, y})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f.\n       \\<forall>x y S.\n          f x S y = f y S x \\<and>\n          (if \\<exists>G.\n                 geodesic_segment_between G x y \\<and> G \\<subseteq> S\n           then geodesic_segment_between (f x S y) x y \\<and>\n                f x S y \\<subseteq> S\n           else f x S y = {x, y})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>f.\n       \\<forall>x y S.\n          f x S y = f y S x \\<and>\n          (if \\<exists>G.\n                 geodesic_segment_between G x y \\<and> G \\<subseteq> S\n           then geodesic_segment_between (f x S y) x y \\<and>\n                f x S y \\<subseteq> S\n           else f x S y = {x, y})", "define g::\"'a \\<Rightarrow> 'a set \\<Rightarrow> 'a \\<Rightarrow> 'a set\" where\n    \"g = (\\<lambda>x S y. if (\\<exists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S) then (SOME G. geodesic_segment_between G x y \\<and> G \\<subseteq> S) else {x, y})\""], ["proof (state)\nthis:\n  g =\n  (\\<lambda>x S y.\n      if \\<exists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S\n      then SOME G. geodesic_segment_between G x y \\<and> G \\<subseteq> S\n      else {x, y})\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       \\<forall>x y S.\n          f x S y = f y S x \\<and>\n          (if \\<exists>G.\n                 geodesic_segment_between G x y \\<and> G \\<subseteq> S\n           then geodesic_segment_between (f x S y) x y \\<and>\n                f x S y \\<subseteq> S\n           else f x S y = {x, y})", "have g1: \"geodesic_segment_between (g x S y) x y \\<and> (g x S y \\<subseteq> S)\" if \"\\<exists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S\" for x y S"], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between (g x S y) x y \\<and> g x S y \\<subseteq> S", "unfolding g_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between\n     (if \\<exists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S\n      then SOME G. geodesic_segment_between G x y \\<and> G \\<subseteq> S\n      else {x, y})\n     x y \\<and>\n    (if \\<exists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S\n     then SOME G. geodesic_segment_between G x y \\<and> G \\<subseteq> S\n     else {x, y})\n    \\<subseteq> S", "using someI_ex[OF that]"], ["proof (prove)\nusing this:\n  geodesic_segment_between\n   (SOME xa. geodesic_segment_between xa x y \\<and> xa \\<subseteq> S) x\n   y \\<and>\n  (SOME xa. geodesic_segment_between xa x y \\<and> xa \\<subseteq> S)\n  \\<subseteq> S\n\ngoal (1 subgoal):\n 1. geodesic_segment_between\n     (if \\<exists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S\n      then SOME G. geodesic_segment_between G x y \\<and> G \\<subseteq> S\n      else {x, y})\n     x y \\<and>\n    (if \\<exists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S\n     then SOME G. geodesic_segment_between G x y \\<and> G \\<subseteq> S\n     else {x, y})\n    \\<subseteq> S", "by auto"], ["proof (state)\nthis:\n  \\<exists>G.\n     geodesic_segment_between G ?x ?y \\<and>\n     G \\<subseteq> ?S \\<Longrightarrow>\n  geodesic_segment_between (g ?x ?S ?y) ?x ?y \\<and>\n  g ?x ?S ?y \\<subseteq> ?S\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       \\<forall>x y S.\n          f x S y = f y S x \\<and>\n          (if \\<exists>G.\n                 geodesic_segment_between G x y \\<and> G \\<subseteq> S\n           then geodesic_segment_between (f x S y) x y \\<and>\n                f x S y \\<subseteq> S\n           else f x S y = {x, y})", "have g2: \"g x S y = {x, y}\" if \"\\<not>(\\<exists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S)\" for x y S"], ["proof (prove)\ngoal (1 subgoal):\n 1. g x S y = {x, y}", "unfolding g_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if \\<exists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S\n     then SOME G. geodesic_segment_between G x y \\<and> G \\<subseteq> S\n     else {x, y}) =\n    {x, y}", "using that"], ["proof (prove)\nusing this:\n  \\<nexists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S\n\ngoal (1 subgoal):\n 1. (if \\<exists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S\n     then SOME G. geodesic_segment_between G x y \\<and> G \\<subseteq> S\n     else {x, y}) =\n    {x, y}", "by auto"], ["proof (state)\nthis:\n  \\<nexists>G.\n     geodesic_segment_between G ?x ?y \\<and>\n     G \\<subseteq> ?S \\<Longrightarrow>\n  g ?x ?S ?y = {?x, ?y}\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       \\<forall>x y S.\n          f x S y = f y S x \\<and>\n          (if \\<exists>G.\n                 geodesic_segment_between G x y \\<and> G \\<subseteq> S\n           then geodesic_segment_between (f x S y) x y \\<and>\n                f x S y \\<subseteq> S\n           else f x S y = {x, y})", "obtain r::\"'a rel\" where r: \"well_order_on UNIV r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r. well_order r \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using well_order_on"], ["proof (prove)\nusing this:\n  \\<exists>r. well_order_on ?A r\n\ngoal (1 subgoal):\n 1. (\\<And>r. well_order r \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  well_order r\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       \\<forall>x y S.\n          f x S y = f y S x \\<and>\n          (if \\<exists>G.\n                 geodesic_segment_between G x y \\<and> G \\<subseteq> S\n           then geodesic_segment_between (f x S y) x y \\<and>\n                f x S y \\<subseteq> S\n           else f x S y = {x, y})", "have A: \"x = y\" if \"(x, y) \\<in> r\" \"(y, x) \\<in> r\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = y", "using r that"], ["proof (prove)\nusing this:\n  well_order r\n  (x, y) \\<in> r\n  (y, x) \\<in> r\n\ngoal (1 subgoal):\n 1. x = y", "unfolding well_order_on_def linear_order_on_def partial_order_on_def antisym_def"], ["proof (prove)\nusing this:\n  ((preorder_on UNIV r \\<and>\n    (\\<forall>x y.\n        (x, y) \\<in> r \\<longrightarrow>\n        (y, x) \\<in> r \\<longrightarrow> x = y)) \\<and>\n   total r) \\<and>\n  wf (r - Id)\n  (x, y) \\<in> r\n  (y, x) \\<in> r\n\ngoal (1 subgoal):\n 1. x = y", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>(?x, ?y) \\<in> r; (?y, ?x) \\<in> r\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       \\<forall>x y S.\n          f x S y = f y S x \\<and>\n          (if \\<exists>G.\n                 geodesic_segment_between G x y \\<and> G \\<subseteq> S\n           then geodesic_segment_between (f x S y) x y \\<and>\n                f x S y \\<subseteq> S\n           else f x S y = {x, y})", "have B: \"(x, y) \\<in> r \\<or> (y, x) \\<in> r\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<in> r \\<or> (y, x) \\<in> r", "using r"], ["proof (prove)\nusing this:\n  well_order r\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> r \\<or> (y, x) \\<in> r", "unfolding well_order_on_def linear_order_on_def total_on_def partial_order_on_def preorder_on_def refl_on_def"], ["proof (prove)\nusing this:\n  ((((r \\<subseteq> UNIV \\<times> UNIV \\<and>\n      (\\<forall>x\\<in>UNIV. (x, x) \\<in> r)) \\<and>\n     trans r) \\<and>\n    antisym r) \\<and>\n   (\\<forall>x\\<in>UNIV.\n       \\<forall>y\\<in>UNIV.\n          x \\<noteq> y \\<longrightarrow>\n          (x, y) \\<in> r \\<or> (y, x) \\<in> r)) \\<and>\n  wf (r - Id)\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> r \\<or> (y, x) \\<in> r", "by force"], ["proof (state)\nthis:\n  (?x, ?y) \\<in> r \\<or> (?y, ?x) \\<in> r\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       \\<forall>x y S.\n          f x S y = f y S x \\<and>\n          (if \\<exists>G.\n                 geodesic_segment_between G x y \\<and> G \\<subseteq> S\n           then geodesic_segment_between (f x S y) x y \\<and>\n                f x S y \\<subseteq> S\n           else f x S y = {x, y})", "define f where \"f = (\\<lambda>x S y. if (x, y) \\<in> r then g x S y else g y S x)\""], ["proof (state)\nthis:\n  f = (\\<lambda>x S y. if (x, y) \\<in> r then g x S y else g y S x)\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       \\<forall>x y S.\n          f x S y = f y S x \\<and>\n          (if \\<exists>G.\n                 geodesic_segment_between G x y \\<and> G \\<subseteq> S\n           then geodesic_segment_between (f x S y) x y \\<and>\n                f x S y \\<subseteq> S\n           else f x S y = {x, y})", "have \"f x S y = f y S x\" for x y S"], ["proof (prove)\ngoal (1 subgoal):\n 1. f x S y = f y S x", "unfolding f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if (x, y) \\<in> r then g x S y else g y S x) =\n    (if (y, x) \\<in> r then g y S x else g x S y)", "using r A B"], ["proof (prove)\nusing this:\n  well_order r\n  \\<lbrakk>(?x, ?y) \\<in> r; (?y, ?x) \\<in> r\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n  (?x, ?y) \\<in> r \\<or> (?y, ?x) \\<in> r\n\ngoal (1 subgoal):\n 1. (if (x, y) \\<in> r then g x S y else g y S x) =\n    (if (y, x) \\<in> r then g y S x else g x S y)", "by auto"], ["proof (state)\nthis:\n  f ?x ?S ?y = f ?y ?S ?x\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       \\<forall>x y S.\n          f x S y = f y S x \\<and>\n          (if \\<exists>G.\n                 geodesic_segment_between G x y \\<and> G \\<subseteq> S\n           then geodesic_segment_between (f x S y) x y \\<and>\n                f x S y \\<subseteq> S\n           else f x S y = {x, y})", "moreover"], ["proof (state)\nthis:\n  f ?x ?S ?y = f ?y ?S ?x\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       \\<forall>x y S.\n          f x S y = f y S x \\<and>\n          (if \\<exists>G.\n                 geodesic_segment_between G x y \\<and> G \\<subseteq> S\n           then geodesic_segment_between (f x S y) x y \\<and>\n                f x S y \\<subseteq> S\n           else f x S y = {x, y})", "have \"geodesic_segment_between (f x S y) x y \\<and> (f x S y \\<subseteq> S)\" if \"\\<exists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S\" for x y S"], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between (f x S y) x y \\<and> f x S y \\<subseteq> S", "unfolding f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between (if (x, y) \\<in> r then g x S y else g y S x) x\n     y \\<and>\n    (if (x, y) \\<in> r then g x S y else g y S x) \\<subseteq> S", "using g1 geodesic_segment_commute that"], ["proof (prove)\nusing this:\n  \\<exists>G.\n     geodesic_segment_between G ?x ?y \\<and>\n     G \\<subseteq> ?S \\<Longrightarrow>\n  geodesic_segment_between (g ?x ?S ?y) ?x ?y \\<and>\n  g ?x ?S ?y \\<subseteq> ?S\n  geodesic_segment_between ?G ?x ?y \\<Longrightarrow>\n  geodesic_segment_between ?G ?y ?x\n  \\<exists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S\n\ngoal (1 subgoal):\n 1. geodesic_segment_between (if (x, y) \\<in> r then g x S y else g y S x) x\n     y \\<and>\n    (if (x, y) \\<in> r then g x S y else g y S x) \\<subseteq> S", "by smt"], ["proof (state)\nthis:\n  \\<exists>G.\n     geodesic_segment_between G ?x ?y \\<and>\n     G \\<subseteq> ?S \\<Longrightarrow>\n  geodesic_segment_between (f ?x ?S ?y) ?x ?y \\<and>\n  f ?x ?S ?y \\<subseteq> ?S\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       \\<forall>x y S.\n          f x S y = f y S x \\<and>\n          (if \\<exists>G.\n                 geodesic_segment_between G x y \\<and> G \\<subseteq> S\n           then geodesic_segment_between (f x S y) x y \\<and>\n                f x S y \\<subseteq> S\n           else f x S y = {x, y})", "moreover"], ["proof (state)\nthis:\n  \\<exists>G.\n     geodesic_segment_between G ?x ?y \\<and>\n     G \\<subseteq> ?S \\<Longrightarrow>\n  geodesic_segment_between (f ?x ?S ?y) ?x ?y \\<and>\n  f ?x ?S ?y \\<subseteq> ?S\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       \\<forall>x y S.\n          f x S y = f y S x \\<and>\n          (if \\<exists>G.\n                 geodesic_segment_between G x y \\<and> G \\<subseteq> S\n           then geodesic_segment_between (f x S y) x y \\<and>\n                f x S y \\<subseteq> S\n           else f x S y = {x, y})", "have \"f x S y = {x, y}\" if \"\\<not>(\\<exists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S)\" for x y S"], ["proof (prove)\ngoal (1 subgoal):\n 1. f x S y = {x, y}", "unfolding f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if (x, y) \\<in> r then g x S y else g y S x) = {x, y}", "using g2 that geodesic_segment_commute doubleton_eq_iff"], ["proof (prove)\nusing this:\n  \\<nexists>G.\n     geodesic_segment_between G ?x ?y \\<and>\n     G \\<subseteq> ?S \\<Longrightarrow>\n  g ?x ?S ?y = {?x, ?y}\n  \\<nexists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S\n  geodesic_segment_between ?G ?x ?y \\<Longrightarrow>\n  geodesic_segment_between ?G ?y ?x\n  ({?a, ?b} = {?c, ?d}) =\n  (?a = ?c \\<and> ?b = ?d \\<or> ?a = ?d \\<and> ?b = ?c)\n\ngoal (1 subgoal):\n 1. (if (x, y) \\<in> r then g x S y else g y S x) = {x, y}", "by metis"], ["proof (state)\nthis:\n  \\<nexists>G.\n     geodesic_segment_between G ?x ?y \\<and>\n     G \\<subseteq> ?S \\<Longrightarrow>\n  f ?x ?S ?y = {?x, ?y}\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       \\<forall>x y S.\n          f x S y = f y S x \\<and>\n          (if \\<exists>G.\n                 geodesic_segment_between G x y \\<and> G \\<subseteq> S\n           then geodesic_segment_between (f x S y) x y \\<and>\n                f x S y \\<subseteq> S\n           else f x S y = {x, y})", "ultimately"], ["proof (chain)\npicking this:\n  f ?x ?S ?y = f ?y ?S ?x\n  \\<exists>G.\n     geodesic_segment_between G ?x ?y \\<and>\n     G \\<subseteq> ?S \\<Longrightarrow>\n  geodesic_segment_between (f ?x ?S ?y) ?x ?y \\<and>\n  f ?x ?S ?y \\<subseteq> ?S\n  \\<nexists>G.\n     geodesic_segment_between G ?x ?y \\<and>\n     G \\<subseteq> ?S \\<Longrightarrow>\n  f ?x ?S ?y = {?x, ?y}", "show ?thesis"], ["proof (prove)\nusing this:\n  f ?x ?S ?y = f ?y ?S ?x\n  \\<exists>G.\n     geodesic_segment_between G ?x ?y \\<and>\n     G \\<subseteq> ?S \\<Longrightarrow>\n  geodesic_segment_between (f ?x ?S ?y) ?x ?y \\<and>\n  f ?x ?S ?y \\<subseteq> ?S\n  \\<nexists>G.\n     geodesic_segment_between G ?x ?y \\<and>\n     G \\<subseteq> ?S \\<Longrightarrow>\n  f ?x ?S ?y = {?x, ?y}\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       \\<forall>x y S.\n          f x S y = f y S x \\<and>\n          (if \\<exists>G.\n                 geodesic_segment_between G x y \\<and> G \\<subseteq> S\n           then geodesic_segment_between (f x S y) x y \\<and>\n                f x S y \\<subseteq> S\n           else f x S y = {x, y})", "by metis"], ["proof (state)\nthis:\n  \\<exists>f.\n     \\<forall>x y S.\n        f x S y = f y S x \\<and>\n        (if \\<exists>G.\n               geodesic_segment_between G x y \\<and> G \\<subseteq> S\n         then geodesic_segment_between (f x S y) x y \\<and>\n              f x S y \\<subseteq> S\n         else f x S y = {x, y})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma some_geodesic_commute:\n  \"{x--S--y} = {y--S--x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x--S--y} = {y--S--x}", "unfolding some_geodesic_segment_between_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (SOME f.\n        \\<forall>x y S.\n           f x S y = f y S x \\<and>\n           (if \\<exists>G.\n                  geodesic_segment_between G x y \\<and> G \\<subseteq> S\n            then geodesic_segment_between (f x S y) x y \\<and>\n                 f x S y \\<subseteq> S\n            else f x S y = {x, y}))\n     x S y =\n    (SOME f.\n        \\<forall>x y S.\n           f x S y = f y S x \\<and>\n           (if \\<exists>G.\n                  geodesic_segment_between G x y \\<and> G \\<subseteq> S\n            then geodesic_segment_between (f x S y) x y \\<and>\n                 f x S y \\<subseteq> S\n            else f x S y = {x, y}))\n     y S x", "by (auto simp add: someI_ex[OF some_geodesic_segment_between_exists])"], ["", "lemma some_geodesic_segment_description:\n  \"(\\<exists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S) \\<Longrightarrow> geodesic_segment_between {x--S--y} x y\"\n  \"(\\<not>(\\<exists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S)) \\<Longrightarrow> {x--S--y} = {x, y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>G.\n        geodesic_segment_between G x y \\<and>\n        G \\<subseteq> S \\<Longrightarrow>\n     geodesic_segment_between {x--S--y} x y) &&&\n    (\\<nexists>G.\n        geodesic_segment_between G x y \\<and>\n        G \\<subseteq> S \\<Longrightarrow>\n     {x--S--y} = {x, y})", "unfolding some_geodesic_segment_between_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>G.\n        geodesic_segment_between G x y \\<and>\n        G \\<subseteq> S \\<Longrightarrow>\n     geodesic_segment_between\n      ((SOME f.\n           \\<forall>x y S.\n              f x S y = f y S x \\<and>\n              (if \\<exists>G.\n                     geodesic_segment_between G x y \\<and> G \\<subseteq> S\n               then geodesic_segment_between (f x S y) x y \\<and>\n                    f x S y \\<subseteq> S\n               else f x S y = {x, y}))\n        x S y)\n      x y) &&&\n    (\\<nexists>G.\n        geodesic_segment_between G x y \\<and>\n        G \\<subseteq> S \\<Longrightarrow>\n     (SOME f.\n         \\<forall>x y S.\n            f x S y = f y S x \\<and>\n            (if \\<exists>G.\n                   geodesic_segment_between G x y \\<and> G \\<subseteq> S\n             then geodesic_segment_between (f x S y) x y \\<and>\n                  f x S y \\<subseteq> S\n             else f x S y = {x, y}))\n      x S y =\n     {x, y})", "by (simp add: someI_ex[OF some_geodesic_segment_between_exists])+"], ["", "text \\<open>Basic topological properties of our chosen set of geodesics.\\<close>"], ["", "lemma some_geodesic_compact [simp]:\n  \"compact {x--S--y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compact {x--S--y}", "apply (cases \"\\<exists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<exists>G.\n       geodesic_segment_between G x y \\<and>\n       G \\<subseteq> S \\<Longrightarrow>\n    compact {x--S--y}\n 2. \\<nexists>G.\n       geodesic_segment_between G x y \\<and>\n       G \\<subseteq> S \\<Longrightarrow>\n    compact {x--S--y}", "using some_geodesic_segment_description[of x y] geodesic_segment_topology[of \"{x--S--y}\"] geodesic_segment_def"], ["proof (prove)\nusing this:\n  \\<exists>G.\n     geodesic_segment_between G x y \\<and>\n     G \\<subseteq> ?S \\<Longrightarrow>\n  geodesic_segment_between {x--?S--y} x y\n  \\<nexists>G.\n     geodesic_segment_between G x y \\<and>\n     G \\<subseteq> ?S \\<Longrightarrow>\n  {x--?S--y} = {x, y}\n  geodesic_segment {x--S--y} \\<Longrightarrow> compact {x--S--y}\n  geodesic_segment {x--S--y} \\<Longrightarrow> connected {x--S--y}\n  geodesic_segment {x--S--y} \\<Longrightarrow> path_connected {x--S--y}\n  geodesic_segment {x--S--y} \\<Longrightarrow> bounded {x--S--y}\n  geodesic_segment {x--S--y} \\<Longrightarrow> closed {x--S--y}\n  geodesic_segment {x--S--y} \\<Longrightarrow> {x--S--y} \\<noteq> {}\n  geodesic_segment {x--S--y} \\<Longrightarrow> proper {x--S--y}\n  geodesic_segment ?G = (\\<exists>x y. geodesic_segment_between ?G x y)\n\ngoal (2 subgoals):\n 1. \\<exists>G.\n       geodesic_segment_between G x y \\<and>\n       G \\<subseteq> S \\<Longrightarrow>\n    compact {x--S--y}\n 2. \\<nexists>G.\n       geodesic_segment_between G x y \\<and>\n       G \\<subseteq> S \\<Longrightarrow>\n    compact {x--S--y}", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>G.\n       \\<lbrakk>\\<And>S.\n                   \\<exists>G.\n                      geodesic_segment_between G x y \\<and>\n                      G \\<subseteq> S \\<Longrightarrow>\n                   geodesic_segment_between {x--S--y} x y;\n        \\<And>S.\n           \\<forall>G.\n              geodesic_segment_between G x y \\<longrightarrow>\n              \\<not> G \\<subseteq> S \\<Longrightarrow>\n           {x--S--y} = {x, y};\n        geodesic_segment {x--S--y} \\<Longrightarrow> compact {x--S--y};\n        geodesic_segment {x--S--y} \\<Longrightarrow> connected {x--S--y};\n        geodesic_segment {x--S--y} \\<Longrightarrow>\n        path_connected {x--S--y};\n        geodesic_segment {x--S--y} \\<Longrightarrow> bounded {x--S--y};\n        geodesic_segment {x--S--y} \\<Longrightarrow> closed {x--S--y};\n        geodesic_segment {x--S--y} \\<Longrightarrow> {x--S--y} \\<noteq> {};\n        geodesic_segment {x--S--y} \\<Longrightarrow> proper {x--S--y};\n        \\<And>G.\n           geodesic_segment G =\n           (\\<exists>x y. geodesic_segment_between G x y);\n        geodesic_segment_between G x y; G \\<subseteq> S\\<rbrakk>\n       \\<Longrightarrow> compact {x--S--y}", "by blast"], ["", "lemma some_geodesic_closed [simp]:\n  \"closed {x--S--y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closed {x--S--y}", "by (rule compact_imp_closed[OF some_geodesic_compact[of x S y]])"], ["", "lemma some_geodesic_bounded [simp]:\n  \"bounded {x--S--y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded {x--S--y}", "by (rule compact_imp_bounded[OF some_geodesic_compact[of x S y]])"], ["", "lemma some_geodesic_endpoints [simp]:\n  \"x \\<in> {x--S--y}\" \"y \\<in> {x--S--y}\" \"{x--S--y} \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {x--S--y} &&& y \\<in> {x--S--y} &&& {x--S--y} \\<noteq> {}", "apply (cases \"\\<exists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<exists>G.\n       geodesic_segment_between G x y \\<and>\n       G \\<subseteq> S \\<Longrightarrow>\n    x \\<in> {x--S--y}\n 2. \\<nexists>G.\n       geodesic_segment_between G x y \\<and>\n       G \\<subseteq> S \\<Longrightarrow>\n    x \\<in> {x--S--y}\n 3. y \\<in> {x--S--y}\n 4. {x--S--y} \\<noteq> {}", "using some_geodesic_segment_description[of x y S]"], ["proof (prove)\nusing this:\n  \\<exists>G.\n     geodesic_segment_between G x y \\<and> G \\<subseteq> S \\<Longrightarrow>\n  geodesic_segment_between {x--S--y} x y\n  \\<nexists>G.\n     geodesic_segment_between G x y \\<and> G \\<subseteq> S \\<Longrightarrow>\n  {x--S--y} = {x, y}\n\ngoal (4 subgoals):\n 1. \\<exists>G.\n       geodesic_segment_between G x y \\<and>\n       G \\<subseteq> S \\<Longrightarrow>\n    x \\<in> {x--S--y}\n 2. \\<nexists>G.\n       geodesic_segment_between G x y \\<and>\n       G \\<subseteq> S \\<Longrightarrow>\n    x \\<in> {x--S--y}\n 3. y \\<in> {x--S--y}\n 4. {x--S--y} \\<noteq> {}", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<exists>G.\n                geodesic_segment_between G x y \\<and>\n                G \\<subseteq> S \\<Longrightarrow>\n             geodesic_segment_between {x--S--y} x y;\n     \\<forall>G.\n        geodesic_segment_between G x y \\<longrightarrow>\n        \\<not> G \\<subseteq> S \\<Longrightarrow>\n     {x--S--y} = {x, y}\\<rbrakk>\n    \\<Longrightarrow> y \\<in> {x--S--y}\n 2. \\<lbrakk>\\<exists>G.\n                geodesic_segment_between G x y \\<and>\n                G \\<subseteq> S \\<Longrightarrow>\n             geodesic_segment_between {} x y;\n     \\<forall>G.\n        geodesic_segment_between G x y \\<longrightarrow>\n        \\<not> G \\<subseteq> S \\<Longrightarrow>\n     False;\n     {x--S--y} = {}\\<rbrakk>\n    \\<Longrightarrow> False", "apply (cases \"\\<exists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<exists>G.\n                geodesic_segment_between G x y \\<and>\n                G \\<subseteq> S \\<Longrightarrow>\n             geodesic_segment_between {x--S--y} x y;\n     \\<forall>G.\n        geodesic_segment_between G x y \\<longrightarrow>\n        \\<not> G \\<subseteq> S \\<Longrightarrow>\n     {x--S--y} = {x, y};\n     \\<exists>G.\n        geodesic_segment_between G x y \\<and> G \\<subseteq> S\\<rbrakk>\n    \\<Longrightarrow> y \\<in> {x--S--y}\n 2. \\<lbrakk>\\<exists>G.\n                geodesic_segment_between G x y \\<and>\n                G \\<subseteq> S \\<Longrightarrow>\n             geodesic_segment_between {x--S--y} x y;\n     \\<forall>G.\n        geodesic_segment_between G x y \\<longrightarrow>\n        \\<not> G \\<subseteq> S \\<Longrightarrow>\n     {x--S--y} = {x, y};\n     \\<nexists>G.\n        geodesic_segment_between G x y \\<and> G \\<subseteq> S\\<rbrakk>\n    \\<Longrightarrow> y \\<in> {x--S--y}\n 3. \\<lbrakk>\\<exists>G.\n                geodesic_segment_between G x y \\<and>\n                G \\<subseteq> S \\<Longrightarrow>\n             geodesic_segment_between {} x y;\n     \\<forall>G.\n        geodesic_segment_between G x y \\<longrightarrow>\n        \\<not> G \\<subseteq> S \\<Longrightarrow>\n     False;\n     {x--S--y} = {}\\<rbrakk>\n    \\<Longrightarrow> False", "using some_geodesic_segment_description[of x y S]"], ["proof (prove)\nusing this:\n  \\<exists>G.\n     geodesic_segment_between G x y \\<and> G \\<subseteq> S \\<Longrightarrow>\n  geodesic_segment_between {x--S--y} x y\n  \\<nexists>G.\n     geodesic_segment_between G x y \\<and> G \\<subseteq> S \\<Longrightarrow>\n  {x--S--y} = {x, y}\n\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<exists>G.\n                geodesic_segment_between G x y \\<and>\n                G \\<subseteq> S \\<Longrightarrow>\n             geodesic_segment_between {x--S--y} x y;\n     \\<forall>G.\n        geodesic_segment_between G x y \\<longrightarrow>\n        \\<not> G \\<subseteq> S \\<Longrightarrow>\n     {x--S--y} = {x, y};\n     \\<exists>G.\n        geodesic_segment_between G x y \\<and> G \\<subseteq> S\\<rbrakk>\n    \\<Longrightarrow> y \\<in> {x--S--y}\n 2. \\<lbrakk>\\<exists>G.\n                geodesic_segment_between G x y \\<and>\n                G \\<subseteq> S \\<Longrightarrow>\n             geodesic_segment_between {x--S--y} x y;\n     \\<forall>G.\n        geodesic_segment_between G x y \\<longrightarrow>\n        \\<not> G \\<subseteq> S \\<Longrightarrow>\n     {x--S--y} = {x, y};\n     \\<nexists>G.\n        geodesic_segment_between G x y \\<and> G \\<subseteq> S\\<rbrakk>\n    \\<Longrightarrow> y \\<in> {x--S--y}\n 3. \\<lbrakk>\\<exists>G.\n                geodesic_segment_between G x y \\<and>\n                G \\<subseteq> S \\<Longrightarrow>\n             geodesic_segment_between {} x y;\n     \\<forall>G.\n        geodesic_segment_between G x y \\<longrightarrow>\n        \\<not> G \\<subseteq> S \\<Longrightarrow>\n     False;\n     {x--S--y} = {}\\<rbrakk>\n    \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>G.\n                geodesic_segment_between G x y \\<and>\n                G \\<subseteq> S \\<Longrightarrow>\n             geodesic_segment_between {} x y;\n     \\<forall>G.\n        geodesic_segment_between G x y \\<longrightarrow>\n        \\<not> G \\<subseteq> S \\<Longrightarrow>\n     False;\n     {x--S--y} = {};\n     \\<forall>G.\n        geodesic_segment_between G x y \\<longrightarrow>\n        \\<not> G \\<subseteq> S \\<Longrightarrow>\n     False\\<rbrakk>\n    \\<Longrightarrow> False", "apply (cases \"\\<exists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<exists>G.\n                geodesic_segment_between G x y \\<and>\n                G \\<subseteq> S \\<Longrightarrow>\n             geodesic_segment_between {} x y;\n     \\<forall>G.\n        geodesic_segment_between G x y \\<longrightarrow>\n        \\<not> G \\<subseteq> S \\<Longrightarrow>\n     False;\n     {x--S--y} = {};\n     \\<forall>G.\n        geodesic_segment_between G x y \\<longrightarrow>\n        \\<not> G \\<subseteq> S \\<Longrightarrow>\n     False;\n     \\<exists>G.\n        geodesic_segment_between G x y \\<and> G \\<subseteq> S\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>\\<exists>G.\n                geodesic_segment_between G x y \\<and>\n                G \\<subseteq> S \\<Longrightarrow>\n             geodesic_segment_between {} x y;\n     \\<forall>G.\n        geodesic_segment_between G x y \\<longrightarrow>\n        \\<not> G \\<subseteq> S \\<Longrightarrow>\n     False;\n     {x--S--y} = {};\n     \\<forall>G.\n        geodesic_segment_between G x y \\<longrightarrow>\n        \\<not> G \\<subseteq> S \\<Longrightarrow>\n     False;\n     \\<nexists>G.\n        geodesic_segment_between G x y \\<and> G \\<subseteq> S\\<rbrakk>\n    \\<Longrightarrow> False", "using geodesic_segment_endpoints(3)"], ["proof (prove)\nusing this:\n  geodesic_segment_between ?G ?x ?y \\<Longrightarrow> ?G \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<exists>G.\n                geodesic_segment_between G x y \\<and>\n                G \\<subseteq> S \\<Longrightarrow>\n             geodesic_segment_between {} x y;\n     \\<forall>G.\n        geodesic_segment_between G x y \\<longrightarrow>\n        \\<not> G \\<subseteq> S \\<Longrightarrow>\n     False;\n     {x--S--y} = {};\n     \\<forall>G.\n        geodesic_segment_between G x y \\<longrightarrow>\n        \\<not> G \\<subseteq> S \\<Longrightarrow>\n     False;\n     \\<exists>G.\n        geodesic_segment_between G x y \\<and> G \\<subseteq> S\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>\\<exists>G.\n                geodesic_segment_between G x y \\<and>\n                G \\<subseteq> S \\<Longrightarrow>\n             geodesic_segment_between {} x y;\n     \\<forall>G.\n        geodesic_segment_between G x y \\<longrightarrow>\n        \\<not> G \\<subseteq> S \\<Longrightarrow>\n     False;\n     {x--S--y} = {};\n     \\<forall>G.\n        geodesic_segment_between G x y \\<longrightarrow>\n        \\<not> G \\<subseteq> S \\<Longrightarrow>\n     False;\n     \\<nexists>G.\n        geodesic_segment_between G x y \\<and> G \\<subseteq> S\\<rbrakk>\n    \\<Longrightarrow> False", "by (auto, blast)"], ["", "lemma some_geodesic_subsegment:\n  assumes \"H \\<subseteq> {x--S--y}\" \"compact H\" \"connected H\" \"H \\<noteq> {}\"\n  shows \"geodesic_segment H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment H", "apply (cases \"\\<exists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<exists>G.\n       geodesic_segment_between G x y \\<and>\n       G \\<subseteq> S \\<Longrightarrow>\n    geodesic_segment H\n 2. \\<nexists>G.\n       geodesic_segment_between G x y \\<and>\n       G \\<subseteq> S \\<Longrightarrow>\n    geodesic_segment H", "using some_geodesic_segment_description[of x y] geodesic_segment_subsegment[OF _ assms] geodesic_segment_def"], ["proof (prove)\nusing this:\n  \\<exists>G.\n     geodesic_segment_between G x y \\<and>\n     G \\<subseteq> ?S \\<Longrightarrow>\n  geodesic_segment_between {x--?S--y} x y\n  \\<nexists>G.\n     geodesic_segment_between G x y \\<and>\n     G \\<subseteq> ?S \\<Longrightarrow>\n  {x--?S--y} = {x, y}\n  geodesic_segment {x--S--y} \\<Longrightarrow> geodesic_segment H\n  geodesic_segment ?G = (\\<exists>x y. geodesic_segment_between ?G x y)\n\ngoal (2 subgoals):\n 1. \\<exists>G.\n       geodesic_segment_between G x y \\<and>\n       G \\<subseteq> S \\<Longrightarrow>\n    geodesic_segment H\n 2. \\<nexists>G.\n       geodesic_segment_between G x y \\<and>\n       G \\<subseteq> S \\<Longrightarrow>\n    geodesic_segment H", "apply auto[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>G.\n       geodesic_segment_between G x y \\<and>\n       G \\<subseteq> S \\<Longrightarrow>\n    geodesic_segment H", "using some_geodesic_segment_description[of x y] assms"], ["proof (prove)\nusing this:\n  \\<exists>G.\n     geodesic_segment_between G x y \\<and>\n     G \\<subseteq> ?S \\<Longrightarrow>\n  geodesic_segment_between {x--?S--y} x y\n  \\<nexists>G.\n     geodesic_segment_between G x y \\<and>\n     G \\<subseteq> ?S \\<Longrightarrow>\n  {x--?S--y} = {x, y}\n  H \\<subseteq> {x--S--y}\n  compact H\n  connected H\n  H \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<nexists>G.\n       geodesic_segment_between G x y \\<and>\n       G \\<subseteq> S \\<Longrightarrow>\n    geodesic_segment H", "by (metis connected_finite_iff_sing finite.emptyI finite.insertI finite_subset geodesic_segment_between_x_x(2))"], ["", "lemma some_geodesic_in_subset:\n  assumes \"x \\<in> S\" \"y \\<in> S\"\n  shows \"{x--S--y} \\<subseteq> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x--S--y} \\<subseteq> S", "apply (cases \"\\<exists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<exists>G.\n       geodesic_segment_between G x y \\<and>\n       G \\<subseteq> S \\<Longrightarrow>\n    {x--S--y} \\<subseteq> S\n 2. \\<nexists>G.\n       geodesic_segment_between G x y \\<and>\n       G \\<subseteq> S \\<Longrightarrow>\n    {x--S--y} \\<subseteq> S", "unfolding some_geodesic_segment_between_def"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<exists>G.\n       geodesic_segment_between G x y \\<and>\n       G \\<subseteq> S \\<Longrightarrow>\n    (SOME f.\n        \\<forall>x y S.\n           f x S y = f y S x \\<and>\n           (if \\<exists>G.\n                  geodesic_segment_between G x y \\<and> G \\<subseteq> S\n            then geodesic_segment_between (f x S y) x y \\<and>\n                 f x S y \\<subseteq> S\n            else f x S y = {x, y}))\n     x S y\n    \\<subseteq> S\n 2. \\<nexists>G.\n       geodesic_segment_between G x y \\<and>\n       G \\<subseteq> S \\<Longrightarrow>\n    (SOME f.\n        \\<forall>x y S.\n           f x S y = f y S x \\<and>\n           (if \\<exists>G.\n                  geodesic_segment_between G x y \\<and> G \\<subseteq> S\n            then geodesic_segment_between (f x S y) x y \\<and>\n                 f x S y \\<subseteq> S\n            else f x S y = {x, y}))\n     x S y\n    \\<subseteq> S", "by (simp add: assms someI_ex[OF some_geodesic_segment_between_exists])+"], ["", "lemma some_geodesic_same_endpoints [simp]:\n  \"{x--S--x} = {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x--S--x} = {x}", "apply (cases \"\\<exists>G. geodesic_segment_between G x x \\<and> G \\<subseteq> S\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<exists>G.\n       geodesic_segment_between G x x \\<and>\n       G \\<subseteq> S \\<Longrightarrow>\n    {x--S--x} = {x}\n 2. \\<nexists>G.\n       geodesic_segment_between G x x \\<and>\n       G \\<subseteq> S \\<Longrightarrow>\n    {x--S--x} = {x}", "apply (meson geodesic_segment_between_x_x(3) some_geodesic_segment_description(1))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>G.\n       geodesic_segment_between G x x \\<and>\n       G \\<subseteq> S \\<Longrightarrow>\n    {x--S--x} = {x}", "by (simp add: some_geodesic_segment_description(2))"], ["", "subsection \\<open>Geodesic subsets\\<close>"], ["", "text \\<open>A subset is \\emph{geodesic} if any two of its points can be joined by a geodesic segment.\nWe prove basic properties of such a subset in this paragraph -- notably connectedness. A basic\nexample is given by convex subsets of vector spaces, as closed segments are geodesic.\\<close>"], ["", "definition geodesic_subset::\"('a::metric_space) set \\<Rightarrow> bool\"\n  where \"geodesic_subset S = (\\<forall>x\\<in>S. \\<forall>y\\<in>S. \\<exists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S)\""], ["", "lemma geodesic_subsetD:\n  assumes \"geodesic_subset S\" \"x \\<in> S\" \"y \\<in> S\"\n  shows \"geodesic_segment_between {x--S--y} x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between {x--S--y} x y", "using assms some_geodesic_segment_description(1)"], ["proof (prove)\nusing this:\n  geodesic_subset S\n  x \\<in> S\n  y \\<in> S\n  \\<exists>G.\n     geodesic_segment_between G ?x ?y \\<and>\n     G \\<subseteq> ?S \\<Longrightarrow>\n  geodesic_segment_between {?x--?S--?y} ?x ?y\n\ngoal (1 subgoal):\n 1. geodesic_segment_between {x--S--y} x y", "unfolding geodesic_subset_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>S.\n     \\<forall>y\\<in>S.\n        \\<exists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S\n  x \\<in> S\n  y \\<in> S\n  \\<exists>G.\n     geodesic_segment_between G ?x ?y \\<and>\n     G \\<subseteq> ?S \\<Longrightarrow>\n  geodesic_segment_between {?x--?S--?y} ?x ?y\n\ngoal (1 subgoal):\n 1. geodesic_segment_between {x--S--y} x y", "by blast"], ["", "lemma geodesic_subsetI:\n  assumes \"\\<And>x y. x \\<in> S \\<Longrightarrow> y \\<in> S \\<Longrightarrow> \\<exists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S\"\n  shows \"geodesic_subset S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_subset S", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> S; ?y \\<in> S\\<rbrakk>\n  \\<Longrightarrow> \\<exists>G.\n                       geodesic_segment_between G ?x ?y \\<and>\n                       G \\<subseteq> S\n\ngoal (1 subgoal):\n 1. geodesic_subset S", "unfolding geodesic_subset_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> S; ?y \\<in> S\\<rbrakk>\n  \\<Longrightarrow> \\<exists>G.\n                       geodesic_segment_between G ?x ?y \\<and>\n                       G \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>S.\n       \\<forall>y\\<in>S.\n          \\<exists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S", "by auto"], ["", "lemma geodesic_subset_empty:\n  \"geodesic_subset {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_subset {}", "using geodesic_subsetI"], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      \\<lbrakk>x \\<in> ?S; y \\<in> ?S\\<rbrakk>\n      \\<Longrightarrow> \\<exists>G.\n                           geodesic_segment_between G x y \\<and>\n                           G \\<subseteq> ?S) \\<Longrightarrow>\n  geodesic_subset ?S\n\ngoal (1 subgoal):\n 1. geodesic_subset {}", "by auto"], ["", "lemma geodesic_subset_singleton:\n  \"geodesic_subset {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_subset {x}", "by (auto intro!: geodesic_subsetI geodesic_segment_between_x_x(1))"], ["", "lemma geodesic_subset_path_connected:\n  assumes \"geodesic_subset S\"\n  shows \"path_connected S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. path_connected S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. path_connected S", "have \"\\<exists>g. path g \\<and> path_image g \\<subseteq> S \\<and> pathstart g = x \\<and> pathfinish g = y\" if \"x \\<in> S\" \"y \\<in> S\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>g.\n       path g \\<and>\n       path_image g \\<subseteq> S \\<and>\n       pathstart g = x \\<and> pathfinish g = y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>g.\n       path g \\<and>\n       path_image g \\<subseteq> S \\<and>\n       pathstart g = x \\<and> pathfinish g = y", "define G where \"G = {x--S--y}\""], ["proof (state)\nthis:\n  G = {x--S--y}\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       path g \\<and>\n       path_image g \\<subseteq> S \\<and>\n       pathstart g = x \\<and> pathfinish g = y", "have *: \"geodesic_segment_between G x y\" \"G \\<subseteq> S\" \"x \\<in> G\" \"y \\<in> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (geodesic_segment_between G x y &&& G \\<subseteq> S) &&&\n    x \\<in> G &&& y \\<in> G", "using assms that"], ["proof (prove)\nusing this:\n  geodesic_subset S\n  x \\<in> S\n  y \\<in> S\n\ngoal (1 subgoal):\n 1. (geodesic_segment_between G x y &&& G \\<subseteq> S) &&&\n    x \\<in> G &&& y \\<in> G", "by (auto simp add: G_def geodesic_subsetD some_geodesic_in_subset that(1) that(2))"], ["proof (state)\nthis:\n  geodesic_segment_between G x y\n  G \\<subseteq> S\n  x \\<in> G\n  y \\<in> G\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       path g \\<and>\n       path_image g \\<subseteq> S \\<and>\n       pathstart g = x \\<and> pathfinish g = y", "then"], ["proof (chain)\npicking this:\n  geodesic_segment_between G x y\n  G \\<subseteq> S\n  x \\<in> G\n  y \\<in> G", "have \"path_connected G\""], ["proof (prove)\nusing this:\n  geodesic_segment_between G x y\n  G \\<subseteq> S\n  x \\<in> G\n  y \\<in> G\n\ngoal (1 subgoal):\n 1. path_connected G", "using geodesic_segment_topology(3)"], ["proof (prove)\nusing this:\n  geodesic_segment_between G x y\n  G \\<subseteq> S\n  x \\<in> G\n  y \\<in> G\n  geodesic_segment ?G \\<Longrightarrow> path_connected ?G\n\ngoal (1 subgoal):\n 1. path_connected G", "unfolding geodesic_segment_def"], ["proof (prove)\nusing this:\n  geodesic_segment_between G x y\n  G \\<subseteq> S\n  x \\<in> G\n  y \\<in> G\n  \\<exists>x. Ex (geodesic_segment_between ?G x) \\<Longrightarrow>\n  path_connected ?G\n\ngoal (1 subgoal):\n 1. path_connected G", "by auto"], ["proof (state)\nthis:\n  path_connected G\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       path g \\<and>\n       path_image g \\<subseteq> S \\<and>\n       pathstart g = x \\<and> pathfinish g = y", "then"], ["proof (chain)\npicking this:\n  path_connected G", "have \"\\<exists>g. path g \\<and> path_image g \\<subseteq> G \\<and> pathstart g = x \\<and> pathfinish g = y\""], ["proof (prove)\nusing this:\n  path_connected G\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       path g \\<and>\n       path_image g \\<subseteq> G \\<and>\n       pathstart g = x \\<and> pathfinish g = y", "using *"], ["proof (prove)\nusing this:\n  path_connected G\n  geodesic_segment_between G x y\n  G \\<subseteq> S\n  x \\<in> G\n  y \\<in> G\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       path g \\<and>\n       path_image g \\<subseteq> G \\<and>\n       pathstart g = x \\<and> pathfinish g = y", "unfolding path_connected_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>G.\n     \\<forall>y\\<in>G.\n        \\<exists>g.\n           path g \\<and>\n           path_image g \\<subseteq> G \\<and>\n           pathstart g = x \\<and> pathfinish g = y\n  geodesic_segment_between G x y\n  G \\<subseteq> S\n  x \\<in> G\n  y \\<in> G\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       path g \\<and>\n       path_image g \\<subseteq> G \\<and>\n       pathstart g = x \\<and> pathfinish g = y", "by auto"], ["proof (state)\nthis:\n  \\<exists>g.\n     path g \\<and>\n     path_image g \\<subseteq> G \\<and>\n     pathstart g = x \\<and> pathfinish g = y\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       path g \\<and>\n       path_image g \\<subseteq> S \\<and>\n       pathstart g = x \\<and> pathfinish g = y", "then"], ["proof (chain)\npicking this:\n  \\<exists>g.\n     path g \\<and>\n     path_image g \\<subseteq> G \\<and>\n     pathstart g = x \\<and> pathfinish g = y", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>g.\n     path g \\<and>\n     path_image g \\<subseteq> G \\<and>\n     pathstart g = x \\<and> pathfinish g = y\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       path g \\<and>\n       path_image g \\<subseteq> S \\<and>\n       pathstart g = x \\<and> pathfinish g = y", "using \\<open>G \\<subseteq> S\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>g.\n     path g \\<and>\n     path_image g \\<subseteq> G \\<and>\n     pathstart g = x \\<and> pathfinish g = y\n  G \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       path g \\<and>\n       path_image g \\<subseteq> S \\<and>\n       pathstart g = x \\<and> pathfinish g = y", "by auto"], ["proof (state)\nthis:\n  \\<exists>g.\n     path g \\<and>\n     path_image g \\<subseteq> S \\<and>\n     pathstart g = x \\<and> pathfinish g = y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> S; ?y \\<in> S\\<rbrakk>\n  \\<Longrightarrow> \\<exists>g.\n                       path g \\<and>\n                       path_image g \\<subseteq> S \\<and>\n                       pathstart g = ?x \\<and> pathfinish g = ?y\n\ngoal (1 subgoal):\n 1. path_connected S", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?x \\<in> S; ?y \\<in> S\\<rbrakk>\n  \\<Longrightarrow> \\<exists>g.\n                       path g \\<and>\n                       path_image g \\<subseteq> S \\<and>\n                       pathstart g = ?x \\<and> pathfinish g = ?y", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> S; ?y \\<in> S\\<rbrakk>\n  \\<Longrightarrow> \\<exists>g.\n                       path g \\<and>\n                       path_image g \\<subseteq> S \\<and>\n                       pathstart g = ?x \\<and> pathfinish g = ?y\n\ngoal (1 subgoal):\n 1. path_connected S", "unfolding path_connected_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> S; ?y \\<in> S\\<rbrakk>\n  \\<Longrightarrow> \\<exists>g.\n                       path g \\<and>\n                       path_image g \\<subseteq> S \\<and>\n                       pathstart g = ?x \\<and> pathfinish g = ?y\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>S.\n       \\<forall>y\\<in>S.\n          \\<exists>g.\n             path g \\<and>\n             path_image g \\<subseteq> S \\<and>\n             pathstart g = x \\<and> pathfinish g = y", "by auto"], ["proof (state)\nthis:\n  path_connected S\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>To show that a segment in a normed vector space is geodesic, we will need to use its\nlength parametrization, which is given in the next lemma.\\<close>"], ["", "lemma closed_segment_as_isometric_image:\n  \"((\\<lambda>t. x + (t/dist x y) *\\<^sub>R (y - x))`{0..dist x y}) = closed_segment x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. x + (t / dist x y) *\\<^sub>R (y - x)) ` {0..dist x y} =\n    closed_segment x y", "proof (auto simp add: closed_segment_def image_iff)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>0 \\<le> t; t \\<le> dist x y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            x + (t / dist x y) *\\<^sub>R (y - x) =\n                            (1 - u) *\\<^sub>R x + u *\\<^sub>R y \\<and>\n                            0 \\<le> u \\<and> u \\<le> 1\n 2. \\<And>u.\n       \\<lbrakk>0 \\<le> u; u \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>{0..dist x y}.\n                            (1 - u) *\\<^sub>R x + u *\\<^sub>R y =\n                            x + (xa / dist x y) *\\<^sub>R (y - x)", "fix t"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>0 \\<le> t; t \\<le> dist x y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            x + (t / dist x y) *\\<^sub>R (y - x) =\n                            (1 - u) *\\<^sub>R x + u *\\<^sub>R y \\<and>\n                            0 \\<le> u \\<and> u \\<le> 1\n 2. \\<And>u.\n       \\<lbrakk>0 \\<le> u; u \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>{0..dist x y}.\n                            (1 - u) *\\<^sub>R x + u *\\<^sub>R y =\n                            x + (xa / dist x y) *\\<^sub>R (y - x)", "assume H: \"0 \\<le> t\" \"t \\<le> dist x y\""], ["proof (state)\nthis:\n  0 \\<le> t\n  t \\<le> dist x y\n\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>0 \\<le> t; t \\<le> dist x y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            x + (t / dist x y) *\\<^sub>R (y - x) =\n                            (1 - u) *\\<^sub>R x + u *\\<^sub>R y \\<and>\n                            0 \\<le> u \\<and> u \\<le> 1\n 2. \\<And>u.\n       \\<lbrakk>0 \\<le> u; u \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>{0..dist x y}.\n                            (1 - u) *\\<^sub>R x + u *\\<^sub>R y =\n                            x + (xa / dist x y) *\\<^sub>R (y - x)", "show \"\\<exists>u. x + (t / dist x y) *\\<^sub>R (y - x) = (1 - u) *\\<^sub>R x + u *\\<^sub>R y \\<and> 0 \\<le> u \\<and> u \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>u.\n       x + (t / dist x y) *\\<^sub>R (y - x) =\n       (1 - u) *\\<^sub>R x + u *\\<^sub>R y \\<and>\n       0 \\<le> u \\<and> u \\<le> 1", "apply (rule exI[of _ \"t/dist x y\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. x + (t / dist x y) *\\<^sub>R (y - x) =\n    (1 - t / dist x y) *\\<^sub>R x + (t / dist x y) *\\<^sub>R y \\<and>\n    0 \\<le> t / dist x y \\<and> t / dist x y \\<le> 1", "using H"], ["proof (prove)\nusing this:\n  0 \\<le> t\n  t \\<le> dist x y\n\ngoal (1 subgoal):\n 1. x + (t / dist x y) *\\<^sub>R (y - x) =\n    (1 - t / dist x y) *\\<^sub>R x + (t / dist x y) *\\<^sub>R y \\<and>\n    0 \\<le> t / dist x y \\<and> t / dist x y \\<le> 1", "apply (auto simp add: algebra_simps divide_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> t; t \\<le> dist x y; x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> x =\n                      (t / dist x y) *\\<^sub>R x +\n                      ((dist x y - t) / dist x y) *\\<^sub>R x", "apply (metis add_diff_cancel_left' add_diff_eq add_divide_distrib dist_eq_0_iff scaleR_add_left vector_fraction_eq_iff)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>u.\n     x + (t / dist x y) *\\<^sub>R (y - x) =\n     (1 - u) *\\<^sub>R x + u *\\<^sub>R y \\<and>\n     0 \\<le> u \\<and> u \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<lbrakk>0 \\<le> u; u \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>{0..dist x y}.\n                            (1 - u) *\\<^sub>R x + u *\\<^sub>R y =\n                            x + (xa / dist x y) *\\<^sub>R (y - x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<lbrakk>0 \\<le> u; u \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>{0..dist x y}.\n                            (1 - u) *\\<^sub>R x + u *\\<^sub>R y =\n                            x + (xa / dist x y) *\\<^sub>R (y - x)", "fix u::real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<lbrakk>0 \\<le> u; u \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>{0..dist x y}.\n                            (1 - u) *\\<^sub>R x + u *\\<^sub>R y =\n                            x + (xa / dist x y) *\\<^sub>R (y - x)", "assume H: \"0 \\<le> u\" \"u \\<le> 1\""], ["proof (state)\nthis:\n  0 \\<le> u\n  u \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<lbrakk>0 \\<le> u; u \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>{0..dist x y}.\n                            (1 - u) *\\<^sub>R x + u *\\<^sub>R y =\n                            x + (xa / dist x y) *\\<^sub>R (y - x)", "show \"\\<exists>t\\<in>{0..dist x y}. (1 - u) *\\<^sub>R x + u *\\<^sub>R y = x + (t / dist x y) *\\<^sub>R (y - x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t\\<in>{0..dist x y}.\n       (1 - u) *\\<^sub>R x + u *\\<^sub>R y =\n       x + (t / dist x y) *\\<^sub>R (y - x)", "apply (rule bexI[of _ \"u * dist x y\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. (1 - u) *\\<^sub>R x + u *\\<^sub>R y =\n    x + (u * dist x y / dist x y) *\\<^sub>R (y - x)\n 2. u * dist x y \\<in> {0..dist x y}", "using H"], ["proof (prove)\nusing this:\n  0 \\<le> u\n  u \\<le> 1\n\ngoal (2 subgoals):\n 1. (1 - u) *\\<^sub>R x + u *\\<^sub>R y =\n    x + (u * dist x y / dist x y) *\\<^sub>R (y - x)\n 2. u * dist x y \\<in> {0..dist x y}", "by (auto simp add: algebra_simps mult_left_le_one_le)"], ["proof (state)\nthis:\n  \\<exists>t\\<in>{0..dist x y}.\n     (1 - u) *\\<^sub>R x + u *\\<^sub>R y =\n     x + (t / dist x y) *\\<^sub>R (y - x)\n\ngoal:\nNo subgoals!", "qed"], ["", "proposition closed_segment_is_geodesic:\n  fixes x y::\"'a::real_normed_vector\"\n  shows \"isometry_on {0..dist x y} (\\<lambda>t. x + (t/dist x y) *\\<^sub>R (y - x))\"\n        \"geodesic_segment_between (closed_segment x y) x y\"\n        \"geodesic_segment (closed_segment x y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isometry_on {0..dist x y}\n     (\\<lambda>t. x + (t / dist x y) *\\<^sub>R (y - x)) &&&\n    geodesic_segment_between (closed_segment x y) x y &&&\n    geodesic_segment (closed_segment x y)", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. isometry_on {0..dist x y}\n     (\\<lambda>t. x + (t / dist x y) *\\<^sub>R (y - x))\n 2. geodesic_segment_between (closed_segment x y) x y\n 3. geodesic_segment (closed_segment x y)", "show *: \"isometry_on {0..dist x y} (\\<lambda>t. x + (t/dist x y) *\\<^sub>R (y - x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isometry_on {0..dist x y}\n     (\\<lambda>t. x + (t / dist x y) *\\<^sub>R (y - x))", "unfolding isometry_on_def dist_norm"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>xa\\<in>{0..norm (x - y)}.\n       \\<forall>ya\\<in>{0..norm (x - y)}.\n          norm\n           (x + (xa / norm (x - y)) *\\<^sub>R (y - x) -\n            (x + (ya / norm (x - y)) *\\<^sub>R (y - x))) =\n          norm (xa - ya)", "apply (cases \"x = y\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow>\n    \\<forall>xa\\<in>{0..norm (x - y)}.\n       \\<forall>ya\\<in>{0..norm (x - y)}.\n          norm\n           (x + (xa / norm (x - y)) *\\<^sub>R (y - x) -\n            (x + (ya / norm (x - y)) *\\<^sub>R (y - x))) =\n          norm (xa - ya)\n 2. x \\<noteq> y \\<Longrightarrow>\n    \\<forall>xa\\<in>{0..norm (x - y)}.\n       \\<forall>ya\\<in>{0..norm (x - y)}.\n          norm\n           (x + (xa / norm (x - y)) *\\<^sub>R (y - x) -\n            (x + (ya / norm (x - y)) *\\<^sub>R (y - x))) =\n          norm (xa - ya)", "by (auto simp add: scaleR_diff_left[symmetric] diff_divide_distrib[symmetric] norm_minus_commute)"], ["proof (state)\nthis:\n  isometry_on {0..dist x y}\n   (\\<lambda>t. x + (t / dist x y) *\\<^sub>R (y - x))\n\ngoal (2 subgoals):\n 1. geodesic_segment_between (closed_segment x y) x y\n 2. geodesic_segment (closed_segment x y)", "show \"geodesic_segment_between (closed_segment x y) x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between (closed_segment x y) x y", "unfolding closed_segment_as_isometric_image[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between\n     ((\\<lambda>t. x + (t / dist x y) *\\<^sub>R (y - x)) ` {0..dist x y}) x\n     y", "apply (rule geodesic_segment_betweenI[OF _ _ *])"], ["proof (prove)\ngoal (3 subgoals):\n 1. x + (0 / dist x y) *\\<^sub>R (y - x) = x\n 2. x + (dist x y / dist x y) *\\<^sub>R (y - x) = y\n 3. (\\<lambda>t. x + (t / dist x y) *\\<^sub>R (y - x)) ` {0..dist x y} =\n    (\\<lambda>t. x + (t / dist x y) *\\<^sub>R (y - x)) ` {0..dist x y}", "by auto"], ["proof (state)\nthis:\n  geodesic_segment_between (closed_segment x y) x y\n\ngoal (1 subgoal):\n 1. geodesic_segment (closed_segment x y)", "then"], ["proof (chain)\npicking this:\n  geodesic_segment_between (closed_segment x y) x y", "show \"geodesic_segment (closed_segment x y)\""], ["proof (prove)\nusing this:\n  geodesic_segment_between (closed_segment x y) x y\n\ngoal (1 subgoal):\n 1. geodesic_segment (closed_segment x y)", "by auto"], ["proof (state)\nthis:\n  geodesic_segment (closed_segment x y)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>We deduce that a convex set is geodesic.\\<close>"], ["", "proposition convex_is_geodesic:\n  assumes \"convex (S::'a::real_normed_vector set)\"\n  shows \"geodesic_subset S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_subset S", "proof (rule geodesic_subsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> S; y \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>G.\n                            geodesic_segment_between G x y \\<and>\n                            G \\<subseteq> S", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> S; y \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>G.\n                            geodesic_segment_between G x y \\<and>\n                            G \\<subseteq> S", "assume H: \"x \\<in> S\" \"y \\<in> S\""], ["proof (state)\nthis:\n  x \\<in> S\n  y \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> S; y \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>G.\n                            geodesic_segment_between G x y \\<and>\n                            G \\<subseteq> S", "show \"\\<exists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S", "apply (rule exI[of _ \"closed_segment x y\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between (closed_segment x y) x y \\<and>\n    closed_segment x y \\<subseteq> S", "apply (auto simp add: closed_segment_is_geodesic)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa. xa \\<in> closed_segment x y \\<Longrightarrow> xa \\<in> S", "using H assms convex_contains_segment"], ["proof (prove)\nusing this:\n  x \\<in> S\n  y \\<in> S\n  convex S\n  convex ?S =\n  (\\<forall>a\\<in>?S. \\<forall>b\\<in>?S. closed_segment a b \\<subseteq> ?S)\n\ngoal (1 subgoal):\n 1. \\<And>xa. xa \\<in> closed_segment x y \\<Longrightarrow> xa \\<in> S", "by blast"], ["proof (state)\nthis:\n  \\<exists>G. geodesic_segment_between G x y \\<and> G \\<subseteq> S\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Geodesic spaces\\<close>"], ["", "text \\<open>In this subsection, we define geodesic spaces (metric spaces in which there is a geodesic\nsegment joining any pair of points). We specialize the previous statements on geodesic segments to\nthese situations.\\<close>"], ["", "class geodesic_space = metric_space +\n  assumes geodesic: \"geodesic_subset (UNIV::('a::metric_space) set)\""], ["", "text \\<open>The simplest example of a geodesic space is a real normed vector space. Significant examples\nalso include graphs (with the graph distance), Riemannian manifolds, and $CAT(\\kappa)$ spaces.\\<close>"], ["", "instance real_normed_vector \\<subseteq> geodesic_space"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a, geodesic_space_class)", "by (standard, simp add: convex_is_geodesic)"], ["", "lemma (in geodesic_space) some_geodesic_is_geodesic_segment [simp]:\n  \"geodesic_segment_between {x--y} x (y::'a)\"\n  \"geodesic_segment {x--y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between {x--y} x y &&& geodesic_segment {x--y}", "using some_geodesic_segment_description(1)[of x y] geodesic_subsetD[OF geodesic]"], ["proof (prove)\nusing this:\n  \\<exists>G.\n     geodesic_segment_between G x y \\<and>\n     G \\<subseteq> ?S \\<Longrightarrow>\n  geodesic_segment_between {x--?S--y} x y\n  \\<lbrakk>?x \\<in> UNIV; ?y \\<in> UNIV\\<rbrakk>\n  \\<Longrightarrow> geodesic_segment_between {?x--?y} ?x ?y\n\ngoal (1 subgoal):\n 1. geodesic_segment_between {x--y} x y &&& geodesic_segment {x--y}", "by (auto, blast)"], ["", "lemma (in geodesic_space) some_geodesic_connected [simp]:\n  \"connected {x--y}\" \"path_connected {x--y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. connected {x--y} &&& path_connected {x--y}", "by (auto intro!: geodesic_segment_topology)"], ["", "text \\<open>In geodesic spaces, we restate as simp rules all properties of the geodesic segment\nparametrizations.\\<close>"], ["", "lemma (in geodesic_space) geodesic_segment_param_in_geodesic_spaces [simp]:\n  \"geodesic_segment_param {x--y} x 0 = x\"\n  \"geodesic_segment_param {x--y} x (dist x y) = y\"\n  \"t \\<in> {0..dist x y} \\<Longrightarrow> geodesic_segment_param {x--y} x t \\<in> {x--y}\"\n  \"isometry_on {0..dist x y} (geodesic_segment_param {x--y} x)\"\n  \"(geodesic_segment_param {x--y} x)`{0..dist x y} = {x--y}\"\n  \"t \\<in> {0..dist x y} \\<Longrightarrow> dist x (geodesic_segment_param {x--y} x t) = t\"\n  \"s \\<in> {0..dist x y} \\<Longrightarrow> t \\<in> {0..dist x y} \\<Longrightarrow> dist (geodesic_segment_param {x--y} x s) (geodesic_segment_param {x--y} x t) = abs(s-t)\"\n  \"z \\<in> {x--y} \\<Longrightarrow> z = geodesic_segment_param {x--y} x (dist x z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((geodesic_segment_param {x--y} x 0 = x &&&\n      geodesic_segment_param {x--y} x (dist x y) = y) &&&\n     (t \\<in> {0..dist x y} \\<Longrightarrow>\n      geodesic_segment_param {x--y} x t \\<in> {x--y}) &&&\n     isometry_on {0..dist x y} (geodesic_segment_param {x--y} x)) &&&\n    (geodesic_segment_param {x--y} x ` {0..dist x y} = {x--y} &&&\n     (t \\<in> {0..dist x y} \\<Longrightarrow>\n      dist x (geodesic_segment_param {x--y} x t) = t)) &&&\n    (\\<lbrakk>s \\<in> {0..dist x y}; t \\<in> {0..dist x y}\\<rbrakk>\n     \\<Longrightarrow> dist (geodesic_segment_param {x--y} x s)\n                        (geodesic_segment_param {x--y} x t) =\n                       \\<bar>s - t\\<bar>) &&&\n    (z \\<in> {x--y} \\<Longrightarrow>\n     z = geodesic_segment_param {x--y} x (dist x z))", "using geodesic_segment_param[OF some_geodesic_is_geodesic_segment(1)[of x y]]"], ["proof (prove)\nusing this:\n  geodesic_segment_param {x--y} x 0 = x\n  geodesic_segment_param {x--y} x (dist x y) = y\n  ?t \\<in> {0..dist x y} \\<Longrightarrow>\n  geodesic_segment_param {x--y} x ?t \\<in> {x--y}\n  isometry_on {0..dist x y} (geodesic_segment_param {x--y} x)\n  geodesic_segment_param {x--y} x ` {0..dist x y} = {x--y}\n  ?t \\<in> {0..dist x y} \\<Longrightarrow>\n  dist x (geodesic_segment_param {x--y} x ?t) = ?t\n  \\<lbrakk>?s \\<in> {0..dist x y}; ?t \\<in> {0..dist x y}\\<rbrakk>\n  \\<Longrightarrow> dist (geodesic_segment_param {x--y} x ?s)\n                     (geodesic_segment_param {x--y} x ?t) =\n                    \\<bar>?s - ?t\\<bar>\n  ?z \\<in> {x--y} \\<Longrightarrow>\n  ?z = geodesic_segment_param {x--y} x (dist x ?z)\n\ngoal (1 subgoal):\n 1. ((geodesic_segment_param {x--y} x 0 = x &&&\n      geodesic_segment_param {x--y} x (dist x y) = y) &&&\n     (t \\<in> {0..dist x y} \\<Longrightarrow>\n      geodesic_segment_param {x--y} x t \\<in> {x--y}) &&&\n     isometry_on {0..dist x y} (geodesic_segment_param {x--y} x)) &&&\n    (geodesic_segment_param {x--y} x ` {0..dist x y} = {x--y} &&&\n     (t \\<in> {0..dist x y} \\<Longrightarrow>\n      dist x (geodesic_segment_param {x--y} x t) = t)) &&&\n    (\\<lbrakk>s \\<in> {0..dist x y}; t \\<in> {0..dist x y}\\<rbrakk>\n     \\<Longrightarrow> dist (geodesic_segment_param {x--y} x s)\n                        (geodesic_segment_param {x--y} x t) =\n                       \\<bar>s - t\\<bar>) &&&\n    (z \\<in> {x--y} \\<Longrightarrow>\n     z = geodesic_segment_param {x--y} x (dist x z))", "by auto"], ["", "subsection \\<open>Uniquely geodesic spaces\\<close>"], ["", "text \\<open>In this subsection, we define uniquely geodesic spaces, i.e., geodesic spaces in which,\nadditionally, there is a unique geodesic between any pair of points.\\<close>"], ["", "class uniquely_geodesic_space = geodesic_space +\n  assumes uniquely_geodesic: \"\\<And>x y G H. geodesic_segment_between G x y \\<Longrightarrow> geodesic_segment_between H x y \\<Longrightarrow> G = H\""], ["", "text \\<open>To prove that a geodesic space is uniquely geodesic, it suffices to show that there is no loop,\ni.e., if two geodesic segments intersect only at their endpoints, then they coincide.\n\nIndeed, assume this holds, and consider two geodesics with the same endpoints. If they differ at\nsome time $t$, then consider the last time $a$ before $t$ where they coincide, and the first time\n$b$ after $t$ where they coincide. Then the restrictions of the two geodesics to $[a,b]$ give\na loop, and a contradiction.\\<close>"], ["", "lemma (in geodesic_space) uniquely_geodesic_spaceI:\n  assumes \"\\<And>G H x (y::'a). geodesic_segment_between G x y \\<Longrightarrow> geodesic_segment_between H x y \\<Longrightarrow> G \\<inter> H = {x, y} \\<Longrightarrow> x = y\"\n          \"geodesic_segment_between G x y\" \"geodesic_segment_between H x (y::'a)\"\n  shows \"G = H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G = H", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. G = H", "obtain g where g: \"g 0 = x\" \"g (dist x y) = y\" \"isometry_on {0..dist x y} g\" \"G = g`{0..dist x y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g 0 = x; g (dist x y) = y; isometry_on {0..dist x y} g;\n         G = g ` {0..dist x y}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson \\<open>geodesic_segment_between G x y\\<close> geodesic_segment_between_def)"], ["proof (state)\nthis:\n  g 0 = x\n  g (dist x y) = y\n  isometry_on {0..dist x y} g\n  G = g ` {0..dist x y}\n\ngoal (1 subgoal):\n 1. G = H", "obtain h where h: \"h 0 = x\" \"h (dist x y) = y\" \"isometry_on {0..dist x y} h\" \"H = h`{0..dist x y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>h.\n        \\<lbrakk>h 0 = x; h (dist x y) = y; isometry_on {0..dist x y} h;\n         H = h ` {0..dist x y}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson \\<open>geodesic_segment_between H x y\\<close> geodesic_segment_between_def)"], ["proof (state)\nthis:\n  h 0 = x\n  h (dist x y) = y\n  isometry_on {0..dist x y} h\n  H = h ` {0..dist x y}\n\ngoal (1 subgoal):\n 1. G = H", "have \"g t = h t\" if \"t \\<in> {0..dist x y}\" for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. g t = h t", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. g t \\<noteq> h t \\<Longrightarrow> False", "assume \"g t \\<noteq> h t\""], ["proof (state)\nthis:\n  g t \\<noteq> h t\n\ngoal (1 subgoal):\n 1. g t \\<noteq> h t \\<Longrightarrow> False", "define Z where \"Z = {s \\<in> {0..dist x y}. g s = h s}\""], ["proof (state)\nthis:\n  Z = {s \\<in> {0..dist x y}. g s = h s}\n\ngoal (1 subgoal):\n 1. g t \\<noteq> h t \\<Longrightarrow> False", "have \"0 \\<in> Z\" \"dist x y \\<in> Z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<in> Z &&& dist x y \\<in> Z", "unfolding Z_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<in> {s \\<in> {0..dist x y}. g s = h s} &&&\n    dist x y \\<in> {s \\<in> {0..dist x y}. g s = h s}", "using g h"], ["proof (prove)\nusing this:\n  g 0 = x\n  g (dist x y) = y\n  isometry_on {0..dist x y} g\n  G = g ` {0..dist x y}\n  h 0 = x\n  h (dist x y) = y\n  isometry_on {0..dist x y} h\n  H = h ` {0..dist x y}\n\ngoal (1 subgoal):\n 1. 0 \\<in> {s \\<in> {0..dist x y}. g s = h s} &&&\n    dist x y \\<in> {s \\<in> {0..dist x y}. g s = h s}", "by auto"], ["proof (state)\nthis:\n  0 \\<in> Z\n  dist x y \\<in> Z\n\ngoal (1 subgoal):\n 1. g t \\<noteq> h t \\<Longrightarrow> False", "have \"t \\<notin> Z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<notin> Z", "unfolding Z_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<notin> {s \\<in> {0..dist x y}. g s = h s}", "using \\<open>g t \\<noteq> h t\\<close>"], ["proof (prove)\nusing this:\n  g t \\<noteq> h t\n\ngoal (1 subgoal):\n 1. t \\<notin> {s \\<in> {0..dist x y}. g s = h s}", "by auto"], ["proof (state)\nthis:\n  t \\<notin> Z\n\ngoal (1 subgoal):\n 1. g t \\<noteq> h t \\<Longrightarrow> False", "have [simp]: \"closed Z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closed Z", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. closed Z", "have *: \"Z = (\\<lambda>s. dist (g s) (h s))-`{0} \\<inter> {0..dist x y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Z = (\\<lambda>s. dist (g s) (h s)) -` {0} \\<inter> {0..dist x y}", "unfolding Z_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {s \\<in> {0..dist x y}. g s = h s} =\n    (\\<lambda>s. dist (g s) (h s)) -` {0} \\<inter> {0..dist x y}", "by auto"], ["proof (state)\nthis:\n  Z = (\\<lambda>s. dist (g s) (h s)) -` {0} \\<inter> {0..dist x y}\n\ngoal (1 subgoal):\n 1. closed Z", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. closed Z", "unfolding *"], ["proof (prove)\ngoal (1 subgoal):\n 1. closed ((\\<lambda>s. dist (g s) (h s)) -` {0} \\<inter> {0..dist x y})", "apply (rule closed_vimage_Int)"], ["proof (prove)\ngoal (3 subgoals):\n 1. closed {0}\n 2. continuous_on {0..dist x y} (\\<lambda>s. dist (g s) (h s))\n 3. closed {0..dist x y}", "using isometry_on_continuous[OF g(3)] isometry_on_continuous[OF h(3)] continuous_on_dist"], ["proof (prove)\nusing this:\n  continuous_on {0..dist x y} g\n  continuous_on {0..dist x y} h\n  \\<lbrakk>continuous_on ?s ?f; continuous_on ?s ?g\\<rbrakk>\n  \\<Longrightarrow> continuous_on ?s (\\<lambda>x. dist (?f x) (?g x))\n\ngoal (3 subgoals):\n 1. closed {0}\n 2. continuous_on {0..dist x y} (\\<lambda>s. dist (g s) (h s))\n 3. closed {0..dist x y}", "by auto"], ["proof (state)\nthis:\n  closed Z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  closed Z\n\ngoal (1 subgoal):\n 1. g t \\<noteq> h t \\<Longrightarrow> False", "define a where \"a = Sup (Z \\<inter> {0..t})\""], ["proof (state)\nthis:\n  a = Sup (Z \\<inter> {0..t})\n\ngoal (1 subgoal):\n 1. g t \\<noteq> h t \\<Longrightarrow> False", "have a: \"a \\<in> Z \\<inter> {0..t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> Z \\<inter> {0..t}", "unfolding a_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup (Z \\<inter> {0..t}) \\<in> Z \\<inter> {0..t}", "apply (rule closed_contains_Sup, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Z \\<inter> {0..t} = {} \\<Longrightarrow> False", "using \\<open>0 \\<in> Z\\<close> that"], ["proof (prove)\nusing this:\n  0 \\<in> Z\n  t \\<in> {0..dist x y}\n\ngoal (1 subgoal):\n 1. Z \\<inter> {0..t} = {} \\<Longrightarrow> False", "by auto"], ["proof (state)\nthis:\n  a \\<in> Z \\<inter> {0..t}\n\ngoal (1 subgoal):\n 1. g t \\<noteq> h t \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  a \\<in> Z \\<inter> {0..t}", "have \"h a = g a\""], ["proof (prove)\nusing this:\n  a \\<in> Z \\<inter> {0..t}\n\ngoal (1 subgoal):\n 1. h a = g a", "unfolding Z_def"], ["proof (prove)\nusing this:\n  a \\<in> {s \\<in> {0..dist x y}. g s = h s} \\<inter> {0..t}\n\ngoal (1 subgoal):\n 1. h a = g a", "by auto"], ["proof (state)\nthis:\n  h a = g a\n\ngoal (1 subgoal):\n 1. g t \\<noteq> h t \\<Longrightarrow> False", "define b where \"b = Inf (Z \\<inter> {t..dist x y})\""], ["proof (state)\nthis:\n  b = Inf (Z \\<inter> {t..dist x y})\n\ngoal (1 subgoal):\n 1. g t \\<noteq> h t \\<Longrightarrow> False", "have b: \"b \\<in> Z \\<inter> {t..dist x y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<in> Z \\<inter> {t..dist x y}", "unfolding b_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf (Z \\<inter> {t..dist x y}) \\<in> Z \\<inter> {t..dist x y}", "apply (rule closed_contains_Inf, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Z \\<inter> {t..dist x y} = {} \\<Longrightarrow> False", "using \\<open>dist x y \\<in> Z\\<close> that"], ["proof (prove)\nusing this:\n  dist x y \\<in> Z\n  t \\<in> {0..dist x y}\n\ngoal (1 subgoal):\n 1. Z \\<inter> {t..dist x y} = {} \\<Longrightarrow> False", "by auto"], ["proof (state)\nthis:\n  b \\<in> Z \\<inter> {t..dist x y}\n\ngoal (1 subgoal):\n 1. g t \\<noteq> h t \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  b \\<in> Z \\<inter> {t..dist x y}", "have \"h b = g b\""], ["proof (prove)\nusing this:\n  b \\<in> Z \\<inter> {t..dist x y}\n\ngoal (1 subgoal):\n 1. h b = g b", "unfolding Z_def"], ["proof (prove)\nusing this:\n  b \\<in> {s \\<in> {0..dist x y}. g s = h s} \\<inter> {t..dist x y}\n\ngoal (1 subgoal):\n 1. h b = g b", "by auto"], ["proof (state)\nthis:\n  h b = g b\n\ngoal (1 subgoal):\n 1. g t \\<noteq> h t \\<Longrightarrow> False", "have notZ: \"s \\<notin> Z\" if \"s \\<in> {a<..<b}\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<notin> Z", "proof (rule ccontr, auto, cases \"s \\<le> t\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>s \\<in> Z; s \\<le> t\\<rbrakk> \\<Longrightarrow> False\n 2. \\<lbrakk>s \\<in> Z; \\<not> s \\<le> t\\<rbrakk> \\<Longrightarrow> False", "case True"], ["proof (state)\nthis:\n  s \\<le> t\n\ngoal (2 subgoals):\n 1. \\<lbrakk>s \\<in> Z; s \\<le> t\\<rbrakk> \\<Longrightarrow> False\n 2. \\<lbrakk>s \\<in> Z; \\<not> s \\<le> t\\<rbrakk> \\<Longrightarrow> False", "assume \"s \\<in> Z\""], ["proof (state)\nthis:\n  s \\<in> Z\n\ngoal (2 subgoals):\n 1. \\<lbrakk>s \\<in> Z; s \\<le> t\\<rbrakk> \\<Longrightarrow> False\n 2. \\<lbrakk>s \\<in> Z; \\<not> s \\<le> t\\<rbrakk> \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  s \\<in> Z", "have *: \"s \\<in> Z \\<inter> {0..t}\""], ["proof (prove)\nusing this:\n  s \\<in> Z\n\ngoal (1 subgoal):\n 1. s \\<in> Z \\<inter> {0..t}", "using that a True"], ["proof (prove)\nusing this:\n  s \\<in> Z\n  s \\<in> {a<..<b}\n  a \\<in> Z \\<inter> {0..t}\n  s \\<le> t\n\ngoal (1 subgoal):\n 1. s \\<in> Z \\<inter> {0..t}", "by auto"], ["proof (state)\nthis:\n  s \\<in> Z \\<inter> {0..t}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>s \\<in> Z; s \\<le> t\\<rbrakk> \\<Longrightarrow> False\n 2. \\<lbrakk>s \\<in> Z; \\<not> s \\<le> t\\<rbrakk> \\<Longrightarrow> False", "have \"s \\<le> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<le> a", "unfolding a_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<le> Sup (Z \\<inter> {0..t})", "apply (rule cSup_upper)"], ["proof (prove)\ngoal (2 subgoals):\n 1. s \\<in> Z \\<inter> {0..t}\n 2. bdd_above (Z \\<inter> {0..t})", "using *"], ["proof (prove)\nusing this:\n  s \\<in> Z \\<inter> {0..t}\n\ngoal (2 subgoals):\n 1. s \\<in> Z \\<inter> {0..t}\n 2. bdd_above (Z \\<inter> {0..t})", "by auto"], ["proof (state)\nthis:\n  s \\<le> a\n\ngoal (2 subgoals):\n 1. \\<lbrakk>s \\<in> Z; s \\<le> t\\<rbrakk> \\<Longrightarrow> False\n 2. \\<lbrakk>s \\<in> Z; \\<not> s \\<le> t\\<rbrakk> \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  s \\<le> a", "show False"], ["proof (prove)\nusing this:\n  s \\<le> a\n\ngoal (1 subgoal):\n 1. False", "using that"], ["proof (prove)\nusing this:\n  s \\<le> a\n  s \\<in> {a<..<b}\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> Z; \\<not> s \\<le> t\\<rbrakk> \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> Z; \\<not> s \\<le> t\\<rbrakk> \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  \\<not> s \\<le> t\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> Z; \\<not> s \\<le> t\\<rbrakk> \\<Longrightarrow> False", "assume \"s \\<in> Z\""], ["proof (state)\nthis:\n  s \\<in> Z\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> Z; \\<not> s \\<le> t\\<rbrakk> \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  s \\<in> Z", "have *: \"s \\<in> Z \\<inter> {t..dist x y}\""], ["proof (prove)\nusing this:\n  s \\<in> Z\n\ngoal (1 subgoal):\n 1. s \\<in> Z \\<inter> {t..dist x y}", "using that b False"], ["proof (prove)\nusing this:\n  s \\<in> Z\n  s \\<in> {a<..<b}\n  b \\<in> Z \\<inter> {t..dist x y}\n  \\<not> s \\<le> t\n\ngoal (1 subgoal):\n 1. s \\<in> Z \\<inter> {t..dist x y}", "by auto"], ["proof (state)\nthis:\n  s \\<in> Z \\<inter> {t..dist x y}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> Z; \\<not> s \\<le> t\\<rbrakk> \\<Longrightarrow> False", "have \"s \\<ge> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<le> s", "unfolding b_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf (Z \\<inter> {t..dist x y}) \\<le> s", "apply (rule cInf_lower)"], ["proof (prove)\ngoal (2 subgoals):\n 1. s \\<in> Z \\<inter> {t..dist x y}\n 2. bdd_below (Z \\<inter> {t..dist x y})", "using *"], ["proof (prove)\nusing this:\n  s \\<in> Z \\<inter> {t..dist x y}\n\ngoal (2 subgoals):\n 1. s \\<in> Z \\<inter> {t..dist x y}\n 2. bdd_below (Z \\<inter> {t..dist x y})", "by auto"], ["proof (state)\nthis:\n  b \\<le> s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> Z; \\<not> s \\<le> t\\<rbrakk> \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  b \\<le> s", "show False"], ["proof (prove)\nusing this:\n  b \\<le> s\n\ngoal (1 subgoal):\n 1. False", "using that"], ["proof (prove)\nusing this:\n  b \\<le> s\n  s \\<in> {a<..<b}\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?s \\<in> {a<..<b} \\<Longrightarrow> ?s \\<notin> Z\n\ngoal (1 subgoal):\n 1. g t \\<noteq> h t \\<Longrightarrow> False", "have \"t \\<in> {a<..<b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> {a<..<b}", "using a b \\<open>t \\<notin> Z\\<close> less_eq_real_def"], ["proof (prove)\nusing this:\n  a \\<in> Z \\<inter> {0..t}\n  b \\<in> Z \\<inter> {t..dist x y}\n  t \\<notin> Z\n  (?x \\<le> ?y) = (?x < ?y \\<or> ?x = ?y)\n\ngoal (1 subgoal):\n 1. t \\<in> {a<..<b}", "by auto"], ["proof (state)\nthis:\n  t \\<in> {a<..<b}\n\ngoal (1 subgoal):\n 1. g t \\<noteq> h t \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  t \\<in> {a<..<b}", "have \"a \\<le> b\""], ["proof (prove)\nusing this:\n  t \\<in> {a<..<b}\n\ngoal (1 subgoal):\n 1. a \\<le> b", "by auto"], ["proof (state)\nthis:\n  a \\<le> b\n\ngoal (1 subgoal):\n 1. g t \\<noteq> h t \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  a \\<le> b", "have \"dist (h a) (h b) = b-a\""], ["proof (prove)\nusing this:\n  a \\<le> b\n\ngoal (1 subgoal):\n 1. dist (h a) (h b) = b - a", "using isometry_onD[OF h(3), of a b] a b that"], ["proof (prove)\nusing this:\n  a \\<le> b\n  \\<lbrakk>a \\<in> {0..dist x y}; b \\<in> {0..dist x y}\\<rbrakk>\n  \\<Longrightarrow> dist (h a) (h b) = dist a b\n  a \\<in> Z \\<inter> {0..t}\n  b \\<in> Z \\<inter> {t..dist x y}\n  t \\<in> {0..dist x y}\n\ngoal (1 subgoal):\n 1. dist (h a) (h b) = b - a", "unfolding dist_real_def"], ["proof (prove)\nusing this:\n  a \\<le> b\n  \\<lbrakk>a \\<in> {0..dist x y}; b \\<in> {0..dist x y}\\<rbrakk>\n  \\<Longrightarrow> dist (h a) (h b) = \\<bar>a - b\\<bar>\n  a \\<in> Z \\<inter> {0..t}\n  b \\<in> Z \\<inter> {t..dist x y}\n  t \\<in> {0..dist x y}\n\ngoal (1 subgoal):\n 1. dist (h a) (h b) = b - a", "by auto"], ["proof (state)\nthis:\n  dist (h a) (h b) = b - a\n\ngoal (1 subgoal):\n 1. g t \\<noteq> h t \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  dist (h a) (h b) = b - a", "have \"dist (h a) (h b) > 0\""], ["proof (prove)\nusing this:\n  dist (h a) (h b) = b - a\n\ngoal (1 subgoal):\n 1. 0 < dist (h a) (h b)", "using \\<open>t \\<in> {a<..<b}\\<close>"], ["proof (prove)\nusing this:\n  dist (h a) (h b) = b - a\n  t \\<in> {a<..<b}\n\ngoal (1 subgoal):\n 1. 0 < dist (h a) (h b)", "by auto"], ["proof (state)\nthis:\n  0 < dist (h a) (h b)\n\ngoal (1 subgoal):\n 1. g t \\<noteq> h t \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  0 < dist (h a) (h b)", "have \"h a \\<noteq> h b\""], ["proof (prove)\nusing this:\n  0 < dist (h a) (h b)\n\ngoal (1 subgoal):\n 1. h a \\<noteq> h b", "by auto"], ["proof (state)\nthis:\n  h a \\<noteq> h b\n\ngoal (1 subgoal):\n 1. g t \\<noteq> h t \\<Longrightarrow> False", "define G2 where \"G2 = g`{a..b}\""], ["proof (state)\nthis:\n  G2 = g ` {a..b}\n\ngoal (1 subgoal):\n 1. g t \\<noteq> h t \\<Longrightarrow> False", "define H2 where \"H2 = h`{a..b}\""], ["proof (state)\nthis:\n  H2 = h ` {a..b}\n\ngoal (1 subgoal):\n 1. g t \\<noteq> h t \\<Longrightarrow> False", "have \"G2 \\<inter> H2 \\<subseteq> {h a, h b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G2 \\<inter> H2 \\<subseteq> {h a, h b}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> G2 \\<inter> H2 \\<Longrightarrow> x \\<in> {h a, h b}", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> G2 \\<inter> H2 \\<Longrightarrow> x \\<in> {h a, h b}", "assume z: \"z \\<in> G2 \\<inter> H2\""], ["proof (state)\nthis:\n  z \\<in> G2 \\<inter> H2\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> G2 \\<inter> H2 \\<Longrightarrow> x \\<in> {h a, h b}", "obtain sg where sg: \"z = g sg\" \"sg \\<in> {a..b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>sg.\n        \\<lbrakk>z = g sg; sg \\<in> {a..b}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using z"], ["proof (prove)\nusing this:\n  z \\<in> G2 \\<inter> H2\n\ngoal (1 subgoal):\n 1. (\\<And>sg.\n        \\<lbrakk>z = g sg; sg \\<in> {a..b}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding G2_def"], ["proof (prove)\nusing this:\n  z \\<in> g ` {a..b} \\<inter> H2\n\ngoal (1 subgoal):\n 1. (\\<And>sg.\n        \\<lbrakk>z = g sg; sg \\<in> {a..b}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  z = g sg\n  sg \\<in> {a..b}\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> G2 \\<inter> H2 \\<Longrightarrow> x \\<in> {h a, h b}", "obtain sh where sh: \"z = h sh\" \"sh \\<in> {a..b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>sh.\n        \\<lbrakk>z = h sh; sh \\<in> {a..b}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using z"], ["proof (prove)\nusing this:\n  z \\<in> G2 \\<inter> H2\n\ngoal (1 subgoal):\n 1. (\\<And>sh.\n        \\<lbrakk>z = h sh; sh \\<in> {a..b}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding H2_def"], ["proof (prove)\nusing this:\n  z \\<in> G2 \\<inter> h ` {a..b}\n\ngoal (1 subgoal):\n 1. (\\<And>sh.\n        \\<lbrakk>z = h sh; sh \\<in> {a..b}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  z = h sh\n  sh \\<in> {a..b}\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> G2 \\<inter> H2 \\<Longrightarrow> x \\<in> {h a, h b}", "have \"sg = dist x z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sg = dist x z", "using isometry_onD[OF g(3), of 0 sg] a b sg(2)"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<in> {0..dist x y}; sg \\<in> {0..dist x y}\\<rbrakk>\n  \\<Longrightarrow> dist (g 0) (g sg) = dist 0 sg\n  a \\<in> Z \\<inter> {0..t}\n  b \\<in> Z \\<inter> {t..dist x y}\n  sg \\<in> {a..b}\n\ngoal (1 subgoal):\n 1. sg = dist x z", "unfolding sg(1) g(1)[symmetric] dist_real_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<in> {0..dist (g 0) y}; sg \\<in> {0..dist (g 0) y}\\<rbrakk>\n  \\<Longrightarrow> dist (g 0) (g sg) = \\<bar>0 - sg\\<bar>\n  a \\<in> Z \\<inter> {0..t}\n  b \\<in> Z \\<inter> {t..dist (g 0) y}\n  sg \\<in> {a..b}\n\ngoal (1 subgoal):\n 1. sg = dist (g 0) (g sg)", "by auto"], ["proof (state)\nthis:\n  sg = dist x z\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> G2 \\<inter> H2 \\<Longrightarrow> x \\<in> {h a, h b}", "moreover"], ["proof (state)\nthis:\n  sg = dist x z\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> G2 \\<inter> H2 \\<Longrightarrow> x \\<in> {h a, h b}", "have \"sh = dist x z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sh = dist x z", "using isometry_onD[OF h(3), of 0 sh] a b sh(2)"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<in> {0..dist x y}; sh \\<in> {0..dist x y}\\<rbrakk>\n  \\<Longrightarrow> dist (h 0) (h sh) = dist 0 sh\n  a \\<in> Z \\<inter> {0..t}\n  b \\<in> Z \\<inter> {t..dist x y}\n  sh \\<in> {a..b}\n\ngoal (1 subgoal):\n 1. sh = dist x z", "unfolding sh(1) h(1)[symmetric] dist_real_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<in> {0..dist (h 0) y}; sh \\<in> {0..dist (h 0) y}\\<rbrakk>\n  \\<Longrightarrow> dist (h 0) (h sh) = \\<bar>0 - sh\\<bar>\n  a \\<in> Z \\<inter> {0..t}\n  b \\<in> Z \\<inter> {t..dist (h 0) y}\n  sh \\<in> {a..b}\n\ngoal (1 subgoal):\n 1. sh = dist (h 0) (h sh)", "by auto"], ["proof (state)\nthis:\n  sh = dist x z\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> G2 \\<inter> H2 \\<Longrightarrow> x \\<in> {h a, h b}", "ultimately"], ["proof (chain)\npicking this:\n  sg = dist x z\n  sh = dist x z", "have \"sg = sh\""], ["proof (prove)\nusing this:\n  sg = dist x z\n  sh = dist x z\n\ngoal (1 subgoal):\n 1. sg = sh", "by auto"], ["proof (state)\nthis:\n  sg = sh\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> G2 \\<inter> H2 \\<Longrightarrow> x \\<in> {h a, h b}", "then"], ["proof (chain)\npicking this:\n  sg = sh", "have \"sh \\<in> Z\""], ["proof (prove)\nusing this:\n  sg = sh\n\ngoal (1 subgoal):\n 1. sh \\<in> Z", "using sg(1) sh(1) a b sh(2)"], ["proof (prove)\nusing this:\n  sg = sh\n  z = g sg\n  z = h sh\n  a \\<in> Z \\<inter> {0..t}\n  b \\<in> Z \\<inter> {t..dist x y}\n  sh \\<in> {a..b}\n\ngoal (1 subgoal):\n 1. sh \\<in> Z", "unfolding Z_def"], ["proof (prove)\nusing this:\n  sg = sh\n  z = g sg\n  z = h sh\n  a \\<in> {s \\<in> {0..dist x y}. g s = h s} \\<inter> {0..t}\n  b \\<in> {s \\<in> {0..dist x y}. g s = h s} \\<inter> {t..dist x y}\n  sh \\<in> {a..b}\n\ngoal (1 subgoal):\n 1. sh \\<in> {s \\<in> {0..dist x y}. g s = h s}", "by auto"], ["proof (state)\nthis:\n  sh \\<in> Z\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> G2 \\<inter> H2 \\<Longrightarrow> x \\<in> {h a, h b}", "then"], ["proof (chain)\npicking this:\n  sh \\<in> Z", "have \"sh \\<in> {a, b}\""], ["proof (prove)\nusing this:\n  sh \\<in> Z\n\ngoal (1 subgoal):\n 1. sh \\<in> {a, b}", "using notZ sh(2)"], ["proof (prove)\nusing this:\n  sh \\<in> Z\n  ?s \\<in> {a<..<b} \\<Longrightarrow> ?s \\<notin> Z\n  sh \\<in> {a..b}\n\ngoal (1 subgoal):\n 1. sh \\<in> {a, b}", "by (metis IntD2 atLeastAtMost_iff atLeastAtMost_singleton greaterThanLessThan_iff inf_bot_left insertI2 insert_inter_insert not_le)"], ["proof (state)\nthis:\n  sh \\<in> {a, b}\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> G2 \\<inter> H2 \\<Longrightarrow> x \\<in> {h a, h b}", "then"], ["proof (chain)\npicking this:\n  sh \\<in> {a, b}", "show \"z \\<in> {h a, h b}\""], ["proof (prove)\nusing this:\n  sh \\<in> {a, b}\n\ngoal (1 subgoal):\n 1. z \\<in> {h a, h b}", "using sh(1)"], ["proof (prove)\nusing this:\n  sh \\<in> {a, b}\n  z = h sh\n\ngoal (1 subgoal):\n 1. z \\<in> {h a, h b}", "by auto"], ["proof (state)\nthis:\n  z \\<in> {h a, h b}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  G2 \\<inter> H2 \\<subseteq> {h a, h b}\n\ngoal (1 subgoal):\n 1. g t \\<noteq> h t \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  G2 \\<inter> H2 \\<subseteq> {h a, h b}", "have \"G2 \\<inter> H2 = {h a, h b}\""], ["proof (prove)\nusing this:\n  G2 \\<inter> H2 \\<subseteq> {h a, h b}\n\ngoal (1 subgoal):\n 1. G2 \\<inter> H2 = {h a, h b}", "using \\<open>h a = g a\\<close> \\<open>h b = g b\\<close> \\<open>a \\<le> b\\<close>"], ["proof (prove)\nusing this:\n  G2 \\<inter> H2 \\<subseteq> {h a, h b}\n  h a = g a\n  h b = g b\n  a \\<le> b\n\ngoal (1 subgoal):\n 1. G2 \\<inter> H2 = {h a, h b}", "unfolding H2_def G2_def"], ["proof (prove)\nusing this:\n  g ` {a..b} \\<inter> h ` {a..b} \\<subseteq> {h a, h b}\n  h a = g a\n  h b = g b\n  a \\<le> b\n\ngoal (1 subgoal):\n 1. g ` {a..b} \\<inter> h ` {a..b} = {h a, h b}", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>g ` {a..b} \\<inter> h ` {a..b} \\<subseteq> {g a, g b};\n     h a = g a; h b = g b; a \\<le> b\\<rbrakk>\n    \\<Longrightarrow> g a \\<in> h ` {a..b}\n 2. \\<lbrakk>g ` {a..b} \\<inter> h ` {a..b} \\<subseteq> {g a, g b};\n     h a = g a; h b = g b; a \\<le> b\\<rbrakk>\n    \\<Longrightarrow> g b \\<in> h ` {a..b}", "unfolding \\<open>h a = g a\\<close>[symmetric] \\<open>h b = g b\\<close>[symmetric]"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>g ` {a..b} \\<inter> h ` {a..b} \\<subseteq> {h a, h b};\n     h a = h a; h b = h b; a \\<le> b\\<rbrakk>\n    \\<Longrightarrow> h a \\<in> h ` {a..b}\n 2. \\<lbrakk>g ` {a..b} \\<inter> h ` {a..b} \\<subseteq> {h a, h b};\n     h a = h a; h b = h b; a \\<le> b\\<rbrakk>\n    \\<Longrightarrow> h b \\<in> h ` {a..b}", "by auto"], ["proof (state)\nthis:\n  G2 \\<inter> H2 = {h a, h b}\n\ngoal (1 subgoal):\n 1. g t \\<noteq> h t \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  G2 \\<inter> H2 = {h a, h b}\n\ngoal (1 subgoal):\n 1. g t \\<noteq> h t \\<Longrightarrow> False", "have \"geodesic_segment_between G2 (h a) (h b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between G2 (h a) (h b)", "unfolding G2_def \\<open>h a = g a\\<close> \\<open>h b = g b\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between (g ` {a..b}) (g a) (g b)", "apply (rule geodesic_segmentI2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. isometry_on {a..b} g\n 2. a \\<le> b", "apply (rule isometry_on_subset[OF g(3)])"], ["proof (prove)\ngoal (2 subgoals):\n 1. {a..b} \\<subseteq> {0..dist x y}\n 2. a \\<le> b", "using a b that"], ["proof (prove)\nusing this:\n  a \\<in> Z \\<inter> {0..t}\n  b \\<in> Z \\<inter> {t..dist x y}\n  t \\<in> {0..dist x y}\n\ngoal (2 subgoals):\n 1. {a..b} \\<subseteq> {0..dist x y}\n 2. a \\<le> b", "by auto"], ["proof (state)\nthis:\n  geodesic_segment_between G2 (h a) (h b)\n\ngoal (1 subgoal):\n 1. g t \\<noteq> h t \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  geodesic_segment_between G2 (h a) (h b)\n\ngoal (1 subgoal):\n 1. g t \\<noteq> h t \\<Longrightarrow> False", "have \"geodesic_segment_between H2 (h a) (h b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between H2 (h a) (h b)", "unfolding H2_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between (h ` {a..b}) (h a) (h b)", "apply (rule geodesic_segmentI2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. isometry_on {a..b} h\n 2. a \\<le> b", "apply (rule isometry_on_subset[OF h(3)])"], ["proof (prove)\ngoal (2 subgoals):\n 1. {a..b} \\<subseteq> {0..dist x y}\n 2. a \\<le> b", "using a b that"], ["proof (prove)\nusing this:\n  a \\<in> Z \\<inter> {0..t}\n  b \\<in> Z \\<inter> {t..dist x y}\n  t \\<in> {0..dist x y}\n\ngoal (2 subgoals):\n 1. {a..b} \\<subseteq> {0..dist x y}\n 2. a \\<le> b", "by auto"], ["proof (state)\nthis:\n  geodesic_segment_between H2 (h a) (h b)\n\ngoal (1 subgoal):\n 1. g t \\<noteq> h t \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  G2 \\<inter> H2 = {h a, h b}\n  geodesic_segment_between G2 (h a) (h b)\n  geodesic_segment_between H2 (h a) (h b)", "have \"h a = h b\""], ["proof (prove)\nusing this:\n  G2 \\<inter> H2 = {h a, h b}\n  geodesic_segment_between G2 (h a) (h b)\n  geodesic_segment_between H2 (h a) (h b)\n\ngoal (1 subgoal):\n 1. h a = h b", "using assms(1)"], ["proof (prove)\nusing this:\n  G2 \\<inter> H2 = {h a, h b}\n  geodesic_segment_between G2 (h a) (h b)\n  geodesic_segment_between H2 (h a) (h b)\n  \\<lbrakk>geodesic_segment_between ?G ?x ?y;\n   geodesic_segment_between ?H ?x ?y; ?G \\<inter> ?H = {?x, ?y}\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n\ngoal (1 subgoal):\n 1. h a = h b", "by auto"], ["proof (state)\nthis:\n  h a = h b\n\ngoal (1 subgoal):\n 1. g t \\<noteq> h t \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  h a = h b", "show False"], ["proof (prove)\nusing this:\n  h a = h b\n\ngoal (1 subgoal):\n 1. False", "using \\<open>h a \\<noteq> h b\\<close>"], ["proof (prove)\nusing this:\n  h a = h b\n  h a \\<noteq> h b\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?t \\<in> {0..dist x y} \\<Longrightarrow> g ?t = h ?t\n\ngoal (1 subgoal):\n 1. G = H", "then"], ["proof (chain)\npicking this:\n  ?t \\<in> {0..dist x y} \\<Longrightarrow> g ?t = h ?t", "show \"G = H\""], ["proof (prove)\nusing this:\n  ?t \\<in> {0..dist x y} \\<Longrightarrow> g ?t = h ?t\n\ngoal (1 subgoal):\n 1. G = H", "using g(4) h(4)"], ["proof (prove)\nusing this:\n  ?t \\<in> {0..dist x y} \\<Longrightarrow> g ?t = h ?t\n  G = g ` {0..dist x y}\n  H = h ` {0..dist x y}\n\ngoal (1 subgoal):\n 1. G = H", "by (simp add: image_def)"], ["proof (state)\nthis:\n  G = H\n\ngoal:\nNo subgoals!", "qed"], ["", "context uniquely_geodesic_space\nbegin"], ["", "lemma geodesic_segment_unique:\n  \"geodesic_segment_between G x y = (G = {x--(y::'a)})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between G x y = (G = {x--y})", "using uniquely_geodesic[of _ x y]"], ["proof (prove)\nusing this:\n  \\<lbrakk>geodesic_segment_between ?G x y;\n   geodesic_segment_between ?H x y\\<rbrakk>\n  \\<Longrightarrow> ?G = ?H\n\ngoal (1 subgoal):\n 1. geodesic_segment_between G x y = (G = {x--y})", "by (meson some_geodesic_is_geodesic_segment)"], ["", "lemma geodesic_segment_dist':\n  assumes \"dist x z = dist x y + dist y z\"\n  shows \"y \\<in> {x--z}\" \"{x--z} = {x--y} \\<union> {y--z}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> {x--z} &&& {x--z} = {x--y} \\<union> {y--z}", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. y \\<in> {x--z}\n 2. {x--z} = {x--y} \\<union> {y--z}", "have \"geodesic_segment_between ({x--y} \\<union> {y--z}) x z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_between ({x--y} \\<union> {y--z}) x z", "using geodesic_segment_union[OF assms]"], ["proof (prove)\nusing this:\n  \\<lbrakk>geodesic_segment_between ?G x y;\n   geodesic_segment_between ?H y z\\<rbrakk>\n  \\<Longrightarrow> geodesic_segment_between (?G \\<union> ?H) x z\n  \\<lbrakk>geodesic_segment_between ?G x y;\n   geodesic_segment_between ?H y z\\<rbrakk>\n  \\<Longrightarrow> ?G \\<inter> ?H = {y}\n\ngoal (1 subgoal):\n 1. geodesic_segment_between ({x--y} \\<union> {y--z}) x z", "by auto"], ["proof (state)\nthis:\n  geodesic_segment_between ({x--y} \\<union> {y--z}) x z\n\ngoal (2 subgoals):\n 1. y \\<in> {x--z}\n 2. {x--z} = {x--y} \\<union> {y--z}", "then"], ["proof (chain)\npicking this:\n  geodesic_segment_between ({x--y} \\<union> {y--z}) x z", "show \"{x--z} = {x--y} \\<union> {y--z}\""], ["proof (prove)\nusing this:\n  geodesic_segment_between ({x--y} \\<union> {y--z}) x z\n\ngoal (1 subgoal):\n 1. {x--z} = {x--y} \\<union> {y--z}", "using geodesic_segment_unique"], ["proof (prove)\nusing this:\n  geodesic_segment_between ({x--y} \\<union> {y--z}) x z\n  geodesic_segment_between ?G ?x ?y = (?G = {?x--?y})\n\ngoal (1 subgoal):\n 1. {x--z} = {x--y} \\<union> {y--z}", "by auto"], ["proof (state)\nthis:\n  {x--z} = {x--y} \\<union> {y--z}\n\ngoal (1 subgoal):\n 1. y \\<in> {x--z}", "then"], ["proof (chain)\npicking this:\n  {x--z} = {x--y} \\<union> {y--z}", "show \"y \\<in> {x--z}\""], ["proof (prove)\nusing this:\n  {x--z} = {x--y} \\<union> {y--z}\n\ngoal (1 subgoal):\n 1. y \\<in> {x--z}", "by auto"], ["proof (state)\nthis:\n  y \\<in> {x--z}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma geodesic_segment_expression:\n  \"{x--z} = {y. dist x z = dist x y + dist y z}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x--z} = {y. dist x z = dist x y + dist y z}", "using geodesic_segment_dist'(1) geodesic_segment_dist[OF some_geodesic_is_geodesic_segment(1)]"], ["proof (prove)\nusing this:\n  dist ?x ?z = dist ?x ?y + dist ?y ?z \\<Longrightarrow> ?y \\<in> {?x--?z}\n  ?a \\<in> {?x--?y} \\<Longrightarrow> dist ?x ?a + dist ?a ?y = dist ?x ?y\n\ngoal (1 subgoal):\n 1. {x--z} = {y. dist x z = dist x y + dist y z}", "by auto"], ["", "lemma geodesic_segment_split:\n  assumes \"(y::'a) \\<in> {x--z}\"\n  shows \"{x--z} = {x--y} \\<union> {y--z}\"\n        \"{x--y} \\<inter> {y--z} = {y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x--z} = {x--y} \\<union> {y--z} &&& {x--y} \\<inter> {y--z} = {y}", "apply (metis assms geodesic_segment_dist geodesic_segment_dist'(2) some_geodesic_is_geodesic_segment(1))"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x--y} \\<inter> {y--z} = {y}", "apply (rule geodesic_segment_union(2)[of x z], auto simp add: assms)"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x z = dist x y + dist y z", "using assms geodesic_segment_expression"], ["proof (prove)\nusing this:\n  y \\<in> {x--z}\n  {?x--?z} = {y. dist ?x ?z = dist ?x y + dist y ?z}\n\ngoal (1 subgoal):\n 1. dist x z = dist x y + dist y z", "by blast"], ["", "lemma geodesic_segment_subparam':\n  assumes \"y \\<in> {x--z}\" \"t \\<in> {0..dist x y}\"\n  shows \"geodesic_segment_param {x--z} x t = geodesic_segment_param {x--y} x t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_param {x--z} x t = geodesic_segment_param {x--y} x t", "apply (rule geodesic_segment_subparam[of _ _ z _ y])"], ["proof (prove)\ngoal (4 subgoals):\n 1. geodesic_segment_between {x--z} x z\n 2. geodesic_segment_between {x--y} x y\n 3. {x--y} \\<subseteq> {x--z}\n 4. t \\<in> {0..dist x y}", "using assms"], ["proof (prove)\nusing this:\n  y \\<in> {x--z}\n  t \\<in> {0..dist x y}\n\ngoal (4 subgoals):\n 1. geodesic_segment_between {x--z} x z\n 2. geodesic_segment_between {x--y} x y\n 3. {x--y} \\<subseteq> {x--z}\n 4. t \\<in> {0..dist x y}", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>y \\<in> {x--z}; xa \\<in> {x--y}; 0 \\<le> t;\n        t \\<le> dist x y\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x--z}", "using geodesic_segment_split(1)[OF assms(1)]"], ["proof (prove)\nusing this:\n  {x--z} = {x--y} \\<union> {y--z}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>y \\<in> {x--z}; xa \\<in> {x--y}; 0 \\<le> t;\n        t \\<le> dist x y\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x--z}", "by auto"], ["", "end"], ["", "(*of context uniquely_geodesic_space*)"], ["", "subsection \\<open>A complete metric space with middles is geodesic.\\<close>"], ["", "text \\<open>A complete space in which every pair of points has a middle (i.e., a point $m$ which\nis half distance of $x$ and $y$) is geodesic: to construct a geodesic between $x_0$\nand $y_0$, first choose a middle $m$, then middles of the pairs $(x_0,m)$ and $(m, y_0)$, and so\non. This will define the geodesic on dyadic points (and this is indeed an isometry on these dyadic\npoints. Then, extend it by uniform continuity to the whole segment $[0, dist x0 y0]$.\n\nThe formal proof will be done in a locale where $x_0$ and $y_0$ are fixed, for notational simplicity.\nWe define inductively the sequence of middles, in a function \\verb+geod+ of two natural variables:\n$geod n m$ corresponds to the image of the dyadic point $m/2^n$. It is defined inductively, by\n$geod (n+1) (2m) = geod n m$, and $geod (n+1) (2m+1)$ is a middle of $geod n m$ and $geod n (m+1)$.\nThis is not a completely classical inductive definition, so one has to use \\verb+function+ to define\nit. Then, one checks inductively that it has all the properties we want, and use it to define the\ngeodesic segment on dyadic points. We will not use a canonical\nrepresentative for a dyadic point, but any representative (i.e., numerator and denominator\nwill not have to be coprime) -- this will not create problems as $geod$ does not depend on the choice\nof the representative, by construction.\\<close>"], ["", "locale complete_space_with_middle =\n  fixes x0 y0::\"'a::complete_space\"\n  assumes middles: \"\\<And>x y::'a. \\<exists>z. dist x z = (dist x y)/2 \\<and> dist z y = (dist x y)/2\"\nbegin"], ["", "definition middle::\"'a \\<Rightarrow> 'a \\<Rightarrow> 'a\"\n  where \"middle x y = (SOME z. dist x z = (dist x y)/2 \\<and> dist z y = (dist x y)/2)\""], ["", "lemma middle:\n  \"dist x (middle x y) = (dist x y)/2\"\n  \"dist (middle x y) y = (dist x y)/2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x (middle x y) = dist x y / 2 &&&\n    dist (middle x y) y = dist x y / 2", "unfolding middle_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x\n     (SOME z. dist x z = dist x y / 2 \\<and> dist z y = dist x y / 2) =\n    dist x y / 2 &&&\n    dist (SOME z. dist x z = dist x y / 2 \\<and> dist z y = dist x y / 2)\n     y =\n    dist x y / 2", "using middles[of x y]"], ["proof (prove)\nusing this:\n  \\<exists>z. dist x z = dist x y / 2 \\<and> dist z y = dist x y / 2\n\ngoal (1 subgoal):\n 1. dist x\n     (SOME z. dist x z = dist x y / 2 \\<and> dist z y = dist x y / 2) =\n    dist x y / 2 &&&\n    dist (SOME z. dist x z = dist x y / 2 \\<and> dist z y = dist x y / 2)\n     y =\n    dist x y / 2", "by (metis (mono_tags, lifting) someI_ex)+"], ["", "function geod::\"nat \\<Rightarrow> nat \\<Rightarrow> 'a\" where\n \"geod 0 0 = x0\"\n|\"geod 0 (Suc m) = y0\"\n|\"geod (Suc n) (2 * m) = geod n m\"\n|\"geod (Suc n) (Suc (2*m)) = middle (geod n m) (geod n (Suc m))\""], ["proof (prove)\ngoal (11 subgoals):\n 1. \\<And>P x.\n       \\<lbrakk>x = (0, 0) \\<Longrightarrow> P;\n        \\<And>m. x = (0, Suc m) \\<Longrightarrow> P;\n        \\<And>n m. x = (Suc n, 2 * m) \\<Longrightarrow> P;\n        \\<And>n m. x = (Suc n, Suc (2 * m)) \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. (0, 0) = (0, 0) \\<Longrightarrow> x0 = x0\n 3. \\<And>m. (0, 0) = (0, Suc m) \\<Longrightarrow> x0 = y0\n 4. \\<And>n m.\n       (0, 0) = (Suc n, 2 * m) \\<Longrightarrow> x0 = geod_sumC (n, m)\n 5. \\<And>n m.\n       (0, 0) = (Suc n, Suc (2 * m)) \\<Longrightarrow>\n       x0 = middle (geod_sumC (n, m)) (geod_sumC (n, Suc m))\n 6. \\<And>m ma. (0, Suc m) = (0, Suc ma) \\<Longrightarrow> y0 = y0\n 7. \\<And>m n ma.\n       (0, Suc m) = (Suc n, 2 * ma) \\<Longrightarrow> y0 = geod_sumC (n, ma)\n 8. \\<And>m n ma.\n       (0, Suc m) = (Suc n, Suc (2 * ma)) \\<Longrightarrow>\n       y0 = middle (geod_sumC (n, ma)) (geod_sumC (n, Suc ma))\n 9. \\<And>n m na ma.\n       (Suc n, 2 * m) = (Suc na, 2 * ma) \\<Longrightarrow>\n       geod_sumC (n, m) = geod_sumC (na, ma)\n 10. \\<And>n m na ma.\n        (Suc n, 2 * m) = (Suc na, Suc (2 * ma)) \\<Longrightarrow>\n        geod_sumC (n, m) =\n        middle (geod_sumC (na, ma)) (geod_sumC (na, Suc ma))\nA total of 11 subgoals...", "apply (auto simp add: double_not_eq_Suc_double)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P a b.\n       \\<lbrakk>a = 0 \\<and> b = 0 \\<Longrightarrow> P;\n        \\<And>m. a = 0 \\<and> b = Suc m \\<Longrightarrow> P;\n        \\<And>n m. a = Suc n \\<and> b = 2 * m \\<Longrightarrow> P;\n        \\<And>n m.\n           a = Suc n \\<and> b = Suc (2 * m) \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P", "by (metis One_nat_def dvd_mult_div_cancel list_decode.cases odd_Suc_minus_one odd_two_times_div_two_nat)"], ["", "termination"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. Wellfounded.accp geod_rel x", "by lexicographic_order"], ["", "text \\<open>By induction, the distance between successive points is $D/2^n$.\\<close>"], ["", "lemma geod_distance_successor:\n  \"\\<forall>a < 2^n. dist (geod n a) (geod n (Suc a)) = dist x0 y0 / 2^n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a<2 ^ n. dist (geod n a) (geod n (Suc a)) = dist x0 y0 / 2 ^ n", "proof (induction n)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>a<2 ^ 0. dist (geod 0 a) (geod 0 (Suc a)) = dist x0 y0 / 2 ^ 0\n 2. \\<And>n.\n       \\<forall>a<2 ^ n.\n          dist (geod n a) (geod n (Suc a)) =\n          dist x0 y0 / 2 ^ n \\<Longrightarrow>\n       \\<forall>a<2 ^ Suc n.\n          dist (geod (Suc n) a) (geod (Suc n) (Suc a)) =\n          dist x0 y0 / 2 ^ Suc n", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<forall>a<2 ^ 0. dist (geod 0 a) (geod 0 (Suc a)) = dist x0 y0 / 2 ^ 0\n 2. \\<And>n.\n       \\<forall>a<2 ^ n.\n          dist (geod n a) (geod n (Suc a)) =\n          dist x0 y0 / 2 ^ n \\<Longrightarrow>\n       \\<forall>a<2 ^ Suc n.\n          dist (geod (Suc n) a) (geod (Suc n) (Suc a)) =\n          dist x0 y0 / 2 ^ Suc n", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a<2 ^ 0. dist (geod 0 a) (geod 0 (Suc a)) = dist x0 y0 / 2 ^ 0", "by auto"], ["proof (state)\nthis:\n  \\<forall>a<2 ^ 0. dist (geod 0 a) (geod 0 (Suc a)) = dist x0 y0 / 2 ^ 0\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>a<2 ^ n.\n          dist (geod n a) (geod n (Suc a)) =\n          dist x0 y0 / 2 ^ n \\<Longrightarrow>\n       \\<forall>a<2 ^ Suc n.\n          dist (geod (Suc n) a) (geod (Suc n) (Suc a)) =\n          dist x0 y0 / 2 ^ Suc n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>a<2 ^ n.\n          dist (geod n a) (geod n (Suc a)) =\n          dist x0 y0 / 2 ^ n \\<Longrightarrow>\n       \\<forall>a<2 ^ Suc n.\n          dist (geod (Suc n) a) (geod (Suc n) (Suc a)) =\n          dist x0 y0 / 2 ^ Suc n", "case (Suc n)"], ["proof (state)\nthis:\n  \\<forall>a<2 ^ n. dist (geod n a) (geod n (Suc a)) = dist x0 y0 / 2 ^ n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>a<2 ^ n.\n          dist (geod n a) (geod n (Suc a)) =\n          dist x0 y0 / 2 ^ n \\<Longrightarrow>\n       \\<forall>a<2 ^ Suc n.\n          dist (geod (Suc n) a) (geod (Suc n) (Suc a)) =\n          dist x0 y0 / 2 ^ Suc n", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a<2 ^ Suc n.\n       dist (geod (Suc n) a) (geod (Suc n) (Suc a)) = dist x0 y0 / 2 ^ Suc n", "proof (auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a < 2 * 2 ^ n \\<Longrightarrow>\n       dist (geod (Suc n) a) (geod (Suc n) (Suc a)) =\n       dist x0 y0 / (2 * 2 ^ n)", "fix a::nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a < 2 * 2 ^ n \\<Longrightarrow>\n       dist (geod (Suc n) a) (geod (Suc n) (Suc a)) =\n       dist x0 y0 / (2 * 2 ^ n)", "assume a: \"a < 2 * 2^n\""], ["proof (state)\nthis:\n  a < 2 * 2 ^ n\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a < 2 * 2 ^ n \\<Longrightarrow>\n       dist (geod (Suc n) a) (geod (Suc n) (Suc a)) =\n       dist x0 y0 / (2 * 2 ^ n)", "obtain m where m: \"a = 2 * m \\<or> a = Suc (2 * m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>m.\n        a = 2 * m \\<or> a = Suc (2 * m) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis geod.elims)"], ["proof (state)\nthis:\n  a = 2 * m \\<or> a = Suc (2 * m)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a < 2 * 2 ^ n \\<Longrightarrow>\n       dist (geod (Suc n) a) (geod (Suc n) (Suc a)) =\n       dist x0 y0 / (2 * 2 ^ n)", "then"], ["proof (chain)\npicking this:\n  a = 2 * m \\<or> a = Suc (2 * m)", "have \"m < 2^n\""], ["proof (prove)\nusing this:\n  a = 2 * m \\<or> a = Suc (2 * m)\n\ngoal (1 subgoal):\n 1. m < 2 ^ n", "using a"], ["proof (prove)\nusing this:\n  a = 2 * m \\<or> a = Suc (2 * m)\n  a < 2 * 2 ^ n\n\ngoal (1 subgoal):\n 1. m < 2 ^ n", "by auto"], ["proof (state)\nthis:\n  m < 2 ^ n\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a < 2 * 2 ^ n \\<Longrightarrow>\n       dist (geod (Suc n) a) (geod (Suc n) (Suc a)) =\n       dist x0 y0 / (2 * 2 ^ n)", "consider \"a = 2 * m\" | \"a = Suc(2*m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a = 2 * m \\<Longrightarrow> thesis;\n     a = Suc (2 * m) \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using m"], ["proof (prove)\nusing this:\n  a = 2 * m \\<or> a = Suc (2 * m)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = 2 * m \\<Longrightarrow> thesis;\n     a = Suc (2 * m) \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>a = 2 * m \\<Longrightarrow> ?thesis;\n   a = Suc (2 * m) \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a < 2 * 2 ^ n \\<Longrightarrow>\n       dist (geod (Suc n) a) (geod (Suc n) (Suc a)) =\n       dist x0 y0 / (2 * 2 ^ n)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>a = 2 * m \\<Longrightarrow> ?thesis;\n   a = Suc (2 * m) \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \"dist (geod (Suc n) a) (geod (Suc n) (Suc a)) = dist x0 y0 / (2 * 2 ^ n)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>a = 2 * m \\<Longrightarrow> ?thesis;\n   a = Suc (2 * m) \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. dist (geod (Suc n) a) (geod (Suc n) (Suc a)) = dist x0 y0 / (2 * 2 ^ n)", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. a = 2 * m \\<Longrightarrow>\n    dist (geod (Suc n) a) (geod (Suc n) (Suc a)) = dist x0 y0 / (2 * 2 ^ n)\n 2. a = Suc (2 * m) \\<Longrightarrow>\n    dist (geod (Suc n) a) (geod (Suc n) (Suc a)) = dist x0 y0 / (2 * 2 ^ n)", "case 1"], ["proof (state)\nthis:\n  a = 2 * m\n\ngoal (2 subgoals):\n 1. a = 2 * m \\<Longrightarrow>\n    dist (geod (Suc n) a) (geod (Suc n) (Suc a)) = dist x0 y0 / (2 * 2 ^ n)\n 2. a = Suc (2 * m) \\<Longrightarrow>\n    dist (geod (Suc n) a) (geod (Suc n) (Suc a)) = dist x0 y0 / (2 * 2 ^ n)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (geod (Suc n) a) (geod (Suc n) (Suc a)) = dist x0 y0 / (2 * 2 ^ n)", "unfolding 1"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (geod (Suc n) (2 * m)) (geod (Suc n) (Suc (2 * m))) =\n    dist x0 y0 / (2 * 2 ^ n)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (geod n m) (middle (geod n m) (geod n (Suc m))) =\n    dist x0 y0 / (2 * 2 ^ n)", "unfolding middle"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (geod n m) (geod n (Suc m)) / 2 = dist x0 y0 / (2 * 2 ^ n)", "using Suc.IH \\<open>m < 2^n\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>a<2 ^ n. dist (geod n a) (geod n (Suc a)) = dist x0 y0 / 2 ^ n\n  m < 2 ^ n\n\ngoal (1 subgoal):\n 1. dist (geod n m) (geod n (Suc m)) / 2 = dist x0 y0 / (2 * 2 ^ n)", "by auto"], ["proof (state)\nthis:\n  dist (geod (Suc n) a) (geod (Suc n) (Suc a)) = dist x0 y0 / (2 * 2 ^ n)\n\ngoal (1 subgoal):\n 1. a = Suc (2 * m) \\<Longrightarrow>\n    dist (geod (Suc n) a) (geod (Suc n) (Suc a)) = dist x0 y0 / (2 * 2 ^ n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a = Suc (2 * m) \\<Longrightarrow>\n    dist (geod (Suc n) a) (geod (Suc n) (Suc a)) = dist x0 y0 / (2 * 2 ^ n)", "case 2"], ["proof (state)\nthis:\n  a = Suc (2 * m)\n\ngoal (1 subgoal):\n 1. a = Suc (2 * m) \\<Longrightarrow>\n    dist (geod (Suc n) a) (geod (Suc n) (Suc a)) = dist x0 y0 / (2 * 2 ^ n)", "have *: \"Suc (Suc (2 * m)) = 2 * (Suc m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (Suc (2 * m)) = 2 * Suc m", "by auto"], ["proof (state)\nthis:\n  Suc (Suc (2 * m)) = 2 * Suc m\n\ngoal (1 subgoal):\n 1. a = Suc (2 * m) \\<Longrightarrow>\n    dist (geod (Suc n) a) (geod (Suc n) (Suc a)) = dist x0 y0 / (2 * 2 ^ n)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (geod (Suc n) a) (geod (Suc n) (Suc a)) = dist x0 y0 / (2 * 2 ^ n)", "unfolding 2"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (geod (Suc n) (Suc (2 * m))) (geod (Suc n) (Suc (Suc (2 * m)))) =\n    dist x0 y0 / (2 * 2 ^ n)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (middle (geod n m) (geod n (Suc m)))\n     (geod (Suc n) (Suc (Suc (2 * m)))) =\n    dist x0 y0 / (2 * 2 ^ n)", "unfolding * geod.simps(3) middle"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (geod n m) (geod n (Suc m)) / 2 = dist x0 y0 / (2 * 2 ^ n)", "using Suc.IH \\<open>m < 2^n\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>a<2 ^ n. dist (geod n a) (geod n (Suc a)) = dist x0 y0 / 2 ^ n\n  m < 2 ^ n\n\ngoal (1 subgoal):\n 1. dist (geod n m) (geod n (Suc m)) / 2 = dist x0 y0 / (2 * 2 ^ n)", "by auto"], ["proof (state)\nthis:\n  dist (geod (Suc n) a) (geod (Suc n) (Suc a)) = dist x0 y0 / (2 * 2 ^ n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dist (geod (Suc n) a) (geod (Suc n) (Suc a)) = dist x0 y0 / (2 * 2 ^ n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>a<2 ^ Suc n.\n     dist (geod (Suc n) a) (geod (Suc n) (Suc a)) = dist x0 y0 / 2 ^ Suc n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma geod_mult:\n  \"geod n a = geod (n + k) (a * 2^k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geod n a = geod (n + k) (a * 2 ^ k)", "apply (induction k, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k.\n       geod n a = geod (n + k) (a * 2 ^ k) \\<Longrightarrow>\n       geod (n + k) (a * 2 ^ k) = geod (Suc (n + k)) (a * (2 * 2 ^ k))", "using geod.simps(3)"], ["proof (prove)\nusing this:\n  geod (Suc ?n) (2 * ?m) = geod ?n ?m\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       geod n a = geod (n + k) (a * 2 ^ k) \\<Longrightarrow>\n       geod (n + k) (a * 2 ^ k) = geod (Suc (n + k)) (a * (2 * 2 ^ k))", "by (metis mult.left_commute)"], ["", "lemma geod_0:\n  \"geod n 0 = x0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geod n 0 = x0", "by (induction n, auto, metis geod.simps(3) semiring_normalization_rules(10))"], ["", "lemma geod_end:\n  \"geod n (2^n) = y0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geod n (2 ^ n) = y0", "by (induction n, auto)"], ["", "text \\<open>By the triangular inequality, the distance between points separated by $(b-a)/2^n$ is at\nmost $D * (b-a)/2^n$.\\<close>"], ["", "lemma geod_upper:\n  assumes \"a \\<le> b\" \"b \\<le> 2^n\"\n  shows \"dist (geod n a) (geod n b) \\<le> (b-a) * dist x0 y0 / 2^n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (geod n a) (geod n b) \\<le> (real b - real a) * dist x0 y0 / 2 ^ n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist (geod n a) (geod n b) \\<le> (real b - real a) * dist x0 y0 / 2 ^ n", "have *: \"a+k > 2^n \\<or> dist (geod n a) (geod n (a+k)) \\<le> k * dist x0 y0 / 2^n\" for k"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ n < a + k \\<or>\n    dist (geod n a) (geod n (a + k)) \\<le> real k * dist x0 y0 / 2 ^ n", "proof (induction k)"], ["proof (state)\ngoal (2 subgoals):\n 1. 2 ^ n < a + 0 \\<or>\n    dist (geod n a) (geod n (a + 0)) \\<le> real 0 * dist x0 y0 / 2 ^ n\n 2. \\<And>k.\n       2 ^ n < a + k \\<or>\n       dist (geod n a) (geod n (a + k))\n       \\<le> real k * dist x0 y0 / 2 ^ n \\<Longrightarrow>\n       2 ^ n < a + Suc k \\<or>\n       dist (geod n a) (geod n (a + Suc k))\n       \\<le> real (Suc k) * dist x0 y0 / 2 ^ n", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. 2 ^ n < a + 0 \\<or>\n    dist (geod n a) (geod n (a + 0)) \\<le> real 0 * dist x0 y0 / 2 ^ n\n 2. \\<And>k.\n       2 ^ n < a + k \\<or>\n       dist (geod n a) (geod n (a + k))\n       \\<le> real k * dist x0 y0 / 2 ^ n \\<Longrightarrow>\n       2 ^ n < a + Suc k \\<or>\n       dist (geod n a) (geod n (a + Suc k))\n       \\<le> real (Suc k) * dist x0 y0 / 2 ^ n", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ n < a + 0 \\<or>\n    dist (geod n a) (geod n (a + 0)) \\<le> real 0 * dist x0 y0 / 2 ^ n", "by auto"], ["proof (state)\nthis:\n  2 ^ n < a + 0 \\<or>\n  dist (geod n a) (geod n (a + 0)) \\<le> real 0 * dist x0 y0 / 2 ^ n\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       2 ^ n < a + k \\<or>\n       dist (geod n a) (geod n (a + k))\n       \\<le> real k * dist x0 y0 / 2 ^ n \\<Longrightarrow>\n       2 ^ n < a + Suc k \\<or>\n       dist (geod n a) (geod n (a + Suc k))\n       \\<le> real (Suc k) * dist x0 y0 / 2 ^ n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       2 ^ n < a + k \\<or>\n       dist (geod n a) (geod n (a + k))\n       \\<le> real k * dist x0 y0 / 2 ^ n \\<Longrightarrow>\n       2 ^ n < a + Suc k \\<or>\n       dist (geod n a) (geod n (a + Suc k))\n       \\<le> real (Suc k) * dist x0 y0 / 2 ^ n", "case (Suc k)"], ["proof (state)\nthis:\n  2 ^ n < a + k \\<or>\n  dist (geod n a) (geod n (a + k)) \\<le> real k * dist x0 y0 / 2 ^ n\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       2 ^ n < a + k \\<or>\n       dist (geod n a) (geod n (a + k))\n       \\<le> real k * dist x0 y0 / 2 ^ n \\<Longrightarrow>\n       2 ^ n < a + Suc k \\<or>\n       dist (geod n a) (geod n (a + Suc k))\n       \\<le> real (Suc k) * dist x0 y0 / 2 ^ n", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ n < a + Suc k \\<or>\n    dist (geod n a) (geod n (a + Suc k))\n    \\<le> real (Suc k) * dist x0 y0 / 2 ^ n", "proof (cases \"2 ^ n < a + Suc k\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 2 ^ n < a + Suc k \\<Longrightarrow>\n    2 ^ n < a + Suc k \\<or>\n    dist (geod n a) (geod n (a + Suc k))\n    \\<le> real (Suc k) * dist x0 y0 / 2 ^ n\n 2. \\<not> 2 ^ n < a + Suc k \\<Longrightarrow>\n    2 ^ n < a + Suc k \\<or>\n    dist (geod n a) (geod n (a + Suc k))\n    \\<le> real (Suc k) * dist x0 y0 / 2 ^ n", "case True"], ["proof (state)\nthis:\n  2 ^ n < a + Suc k\n\ngoal (2 subgoals):\n 1. 2 ^ n < a + Suc k \\<Longrightarrow>\n    2 ^ n < a + Suc k \\<or>\n    dist (geod n a) (geod n (a + Suc k))\n    \\<le> real (Suc k) * dist x0 y0 / 2 ^ n\n 2. \\<not> 2 ^ n < a + Suc k \\<Longrightarrow>\n    2 ^ n < a + Suc k \\<or>\n    dist (geod n a) (geod n (a + Suc k))\n    \\<le> real (Suc k) * dist x0 y0 / 2 ^ n", "then"], ["proof (chain)\npicking this:\n  2 ^ n < a + Suc k", "show ?thesis"], ["proof (prove)\nusing this:\n  2 ^ n < a + Suc k\n\ngoal (1 subgoal):\n 1. 2 ^ n < a + Suc k \\<or>\n    dist (geod n a) (geod n (a + Suc k))\n    \\<le> real (Suc k) * dist x0 y0 / 2 ^ n", "by auto"], ["proof (state)\nthis:\n  2 ^ n < a + Suc k \\<or>\n  dist (geod n a) (geod n (a + Suc k))\n  \\<le> real (Suc k) * dist x0 y0 / 2 ^ n\n\ngoal (1 subgoal):\n 1. \\<not> 2 ^ n < a + Suc k \\<Longrightarrow>\n    2 ^ n < a + Suc k \\<or>\n    dist (geod n a) (geod n (a + Suc k))\n    \\<le> real (Suc k) * dist x0 y0 / 2 ^ n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 2 ^ n < a + Suc k \\<Longrightarrow>\n    2 ^ n < a + Suc k \\<or>\n    dist (geod n a) (geod n (a + Suc k))\n    \\<le> real (Suc k) * dist x0 y0 / 2 ^ n", "case False"], ["proof (state)\nthis:\n  \\<not> 2 ^ n < a + Suc k\n\ngoal (1 subgoal):\n 1. \\<not> 2 ^ n < a + Suc k \\<Longrightarrow>\n    2 ^ n < a + Suc k \\<or>\n    dist (geod n a) (geod n (a + Suc k))\n    \\<le> real (Suc k) * dist x0 y0 / 2 ^ n", "then"], ["proof (chain)\npicking this:\n  \\<not> 2 ^ n < a + Suc k", "have *: \"a + k < 2 ^ n\""], ["proof (prove)\nusing this:\n  \\<not> 2 ^ n < a + Suc k\n\ngoal (1 subgoal):\n 1. a + k < 2 ^ n", "by auto"], ["proof (state)\nthis:\n  a + k < 2 ^ n\n\ngoal (1 subgoal):\n 1. \\<not> 2 ^ n < a + Suc k \\<Longrightarrow>\n    2 ^ n < a + Suc k \\<or>\n    dist (geod n a) (geod n (a + Suc k))\n    \\<le> real (Suc k) * dist x0 y0 / 2 ^ n", "have \"dist (geod n a) (geod n (a + Suc k)) \\<le> dist (geod n a) (geod n (a+k)) + dist (geod n (a+k)) (geod n (a+Suc k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (geod n a) (geod n (a + Suc k))\n    \\<le> dist (geod n a) (geod n (a + k)) +\n          dist (geod n (a + k)) (geod n (a + Suc k))", "using dist_triangle"], ["proof (prove)\nusing this:\n  dist ?x ?z \\<le> dist ?x ?y + dist ?y ?z\n\ngoal (1 subgoal):\n 1. dist (geod n a) (geod n (a + Suc k))\n    \\<le> dist (geod n a) (geod n (a + k)) +\n          dist (geod n (a + k)) (geod n (a + Suc k))", "by auto"], ["proof (state)\nthis:\n  dist (geod n a) (geod n (a + Suc k))\n  \\<le> dist (geod n a) (geod n (a + k)) +\n        dist (geod n (a + k)) (geod n (a + Suc k))\n\ngoal (1 subgoal):\n 1. \\<not> 2 ^ n < a + Suc k \\<Longrightarrow>\n    2 ^ n < a + Suc k \\<or>\n    dist (geod n a) (geod n (a + Suc k))\n    \\<le> real (Suc k) * dist x0 y0 / 2 ^ n", "also"], ["proof (state)\nthis:\n  dist (geod n a) (geod n (a + Suc k))\n  \\<le> dist (geod n a) (geod n (a + k)) +\n        dist (geod n (a + k)) (geod n (a + Suc k))\n\ngoal (1 subgoal):\n 1. \\<not> 2 ^ n < a + Suc k \\<Longrightarrow>\n    2 ^ n < a + Suc k \\<or>\n    dist (geod n a) (geod n (a + Suc k))\n    \\<le> real (Suc k) * dist x0 y0 / 2 ^ n", "have \"... \\<le> k * dist x0 y0 / 2^n + dist x0 y0 / 2^n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (geod n a) (geod n (a + k)) +\n    dist (geod n (a + k)) (geod n (a + Suc k))\n    \\<le> real k * dist x0 y0 / 2 ^ n + dist x0 y0 / 2 ^ n", "using Suc.IH * geod_distance_successor"], ["proof (prove)\nusing this:\n  2 ^ n < a + k \\<or>\n  dist (geod n a) (geod n (a + k)) \\<le> real k * dist x0 y0 / 2 ^ n\n  a + k < 2 ^ n\n  \\<forall>a<2 ^ ?n.\n     dist (geod ?n a) (geod ?n (Suc a)) = dist x0 y0 / 2 ^ ?n\n\ngoal (1 subgoal):\n 1. dist (geod n a) (geod n (a + k)) +\n    dist (geod n (a + k)) (geod n (a + Suc k))\n    \\<le> real k * dist x0 y0 / 2 ^ n + dist x0 y0 / 2 ^ n", "by auto"], ["proof (state)\nthis:\n  dist (geod n a) (geod n (a + k)) +\n  dist (geod n (a + k)) (geod n (a + Suc k))\n  \\<le> real k * dist x0 y0 / 2 ^ n + dist x0 y0 / 2 ^ n\n\ngoal (1 subgoal):\n 1. \\<not> 2 ^ n < a + Suc k \\<Longrightarrow>\n    2 ^ n < a + Suc k \\<or>\n    dist (geod n a) (geod n (a + Suc k))\n    \\<le> real (Suc k) * dist x0 y0 / 2 ^ n", "finally"], ["proof (chain)\npicking this:\n  dist (geod n a) (geod n (a + Suc k))\n  \\<le> real k * dist x0 y0 / 2 ^ n + dist x0 y0 / 2 ^ n", "show ?thesis"], ["proof (prove)\nusing this:\n  dist (geod n a) (geod n (a + Suc k))\n  \\<le> real k * dist x0 y0 / 2 ^ n + dist x0 y0 / 2 ^ n\n\ngoal (1 subgoal):\n 1. 2 ^ n < a + Suc k \\<or>\n    dist (geod n a) (geod n (a + Suc k))\n    \\<le> real (Suc k) * dist x0 y0 / 2 ^ n", "by (simp add: add_divide_distrib distrib_left mult.commute)"], ["proof (state)\nthis:\n  2 ^ n < a + Suc k \\<or>\n  dist (geod n a) (geod n (a + Suc k))\n  \\<le> real (Suc k) * dist x0 y0 / 2 ^ n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  2 ^ n < a + Suc k \\<or>\n  dist (geod n a) (geod n (a + Suc k))\n  \\<le> real (Suc k) * dist x0 y0 / 2 ^ n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  2 ^ n < a + ?k \\<or>\n  dist (geod n a) (geod n (a + ?k)) \\<le> real ?k * dist x0 y0 / 2 ^ n\n\ngoal (1 subgoal):\n 1. dist (geod n a) (geod n b) \\<le> (real b - real a) * dist x0 y0 / 2 ^ n", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (geod n a) (geod n b) \\<le> (real b - real a) * dist x0 y0 / 2 ^ n", "using *[of \"b-a\"] assms"], ["proof (prove)\nusing this:\n  2 ^ n < a + (b - a) \\<or>\n  dist (geod n a) (geod n (a + (b - a)))\n  \\<le> real (b - a) * dist x0 y0 / 2 ^ n\n  a \\<le> b\n  b \\<le> 2 ^ n\n\ngoal (1 subgoal):\n 1. dist (geod n a) (geod n b) \\<le> (real b - real a) * dist x0 y0 / 2 ^ n", "by (simp add: of_nat_diff)"], ["proof (state)\nthis:\n  dist (geod n a) (geod n b) \\<le> (real b - real a) * dist x0 y0 / 2 ^ n\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>In fact, the distance is exactly $D * (b-a)/2^n$, otherwise the extremities of the interval\nwould be closer than $D$, a contradiction.\\<close>"], ["", "lemma geod_dist:\n  assumes \"a \\<le> b\" \"b \\<le> 2^n\"\n  shows \"dist (geod n a) (geod n b) = (b-a) * dist x0 y0 / 2^n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (geod n a) (geod n b) = (real b - real a) * dist x0 y0 / 2 ^ n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist (geod n a) (geod n b) = (real b - real a) * dist x0 y0 / 2 ^ n", "have \"dist (geod n a) (geod n b) \\<le> (real b-a) * dist x0 y0 / 2^n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (geod n a) (geod n b) \\<le> (real b - real a) * dist x0 y0 / 2 ^ n", "using geod_upper[of a b n] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>a \\<le> b; b \\<le> 2 ^ n\\<rbrakk>\n  \\<Longrightarrow> dist (geod n a) (geod n b)\n                    \\<le> (real b - real a) * dist x0 y0 / 2 ^ n\n  a \\<le> b\n  b \\<le> 2 ^ n\n\ngoal (1 subgoal):\n 1. dist (geod n a) (geod n b) \\<le> (real b - real a) * dist x0 y0 / 2 ^ n", "by auto"], ["proof (state)\nthis:\n  dist (geod n a) (geod n b) \\<le> (real b - real a) * dist x0 y0 / 2 ^ n\n\ngoal (1 subgoal):\n 1. dist (geod n a) (geod n b) = (real b - real a) * dist x0 y0 / 2 ^ n", "moreover"], ["proof (state)\nthis:\n  dist (geod n a) (geod n b) \\<le> (real b - real a) * dist x0 y0 / 2 ^ n\n\ngoal (1 subgoal):\n 1. dist (geod n a) (geod n b) = (real b - real a) * dist x0 y0 / 2 ^ n", "have \"\\<not> (dist (geod n a) (geod n b) < (real b-a) * dist x0 y0 / 2^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> dist (geod n a) (geod n b)\n           < (real b - real a) * dist x0 y0 / 2 ^ n", "proof (rule ccontr, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. dist (geod n a) (geod n b)\n    < (real b - real a) * dist x0 y0 / 2 ^ n \\<Longrightarrow>\n    False", "assume *: \"dist (geod n a) (geod n b) < (real b-a) * dist x0 y0 / 2^n\""], ["proof (state)\nthis:\n  dist (geod n a) (geod n b) < (real b - real a) * dist x0 y0 / 2 ^ n\n\ngoal (1 subgoal):\n 1. dist (geod n a) (geod n b)\n    < (real b - real a) * dist x0 y0 / 2 ^ n \\<Longrightarrow>\n    False", "have \"dist x0 y0 = dist (geod n 0) (geod n (2^n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x0 y0 = dist (geod n 0) (geod n (2 ^ n))", "using geod_0 geod_end"], ["proof (prove)\nusing this:\n  geod ?n 0 = x0\n  geod ?n (2 ^ ?n) = y0\n\ngoal (1 subgoal):\n 1. dist x0 y0 = dist (geod n 0) (geod n (2 ^ n))", "by auto"], ["proof (state)\nthis:\n  dist x0 y0 = dist (geod n 0) (geod n (2 ^ n))\n\ngoal (1 subgoal):\n 1. dist (geod n a) (geod n b)\n    < (real b - real a) * dist x0 y0 / 2 ^ n \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  dist x0 y0 = dist (geod n 0) (geod n (2 ^ n))\n\ngoal (1 subgoal):\n 1. dist (geod n a) (geod n b)\n    < (real b - real a) * dist x0 y0 / 2 ^ n \\<Longrightarrow>\n    False", "have \"... \\<le> dist (geod n 0) (geod n a) + dist (geod n a) (geod n b) + dist (geod n b) (geod n (2^n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (geod n 0) (geod n (2 ^ n))\n    \\<le> dist (geod n 0) (geod n a) + dist (geod n a) (geod n b) +\n          dist (geod n b) (geod n (2 ^ n))", "using dist_triangle4"], ["proof (prove)\nusing this:\n  dist ?x ?t \\<le> dist ?x ?y + dist ?y ?z + dist ?z ?t\n\ngoal (1 subgoal):\n 1. dist (geod n 0) (geod n (2 ^ n))\n    \\<le> dist (geod n 0) (geod n a) + dist (geod n a) (geod n b) +\n          dist (geod n b) (geod n (2 ^ n))", "by auto"], ["proof (state)\nthis:\n  dist (geod n 0) (geod n (2 ^ n))\n  \\<le> dist (geod n 0) (geod n a) + dist (geod n a) (geod n b) +\n        dist (geod n b) (geod n (2 ^ n))\n\ngoal (1 subgoal):\n 1. dist (geod n a) (geod n b)\n    < (real b - real a) * dist x0 y0 / 2 ^ n \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  dist (geod n 0) (geod n (2 ^ n))\n  \\<le> dist (geod n 0) (geod n a) + dist (geod n a) (geod n b) +\n        dist (geod n b) (geod n (2 ^ n))\n\ngoal (1 subgoal):\n 1. dist (geod n a) (geod n b)\n    < (real b - real a) * dist x0 y0 / 2 ^ n \\<Longrightarrow>\n    False", "have \"... < a * dist x0 y0 / 2^n + (real b-a) * dist x0 y0 / 2^n + (2^n - real b) * dist x0 y0 / 2^n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (geod n 0) (geod n a) + dist (geod n a) (geod n b) +\n    dist (geod n b) (geod n (2 ^ n))\n    < real a * dist x0 y0 / 2 ^ n + (real b - real a) * dist x0 y0 / 2 ^ n +\n      (2 ^ n - real b) * dist x0 y0 / 2 ^ n", "using * assms geod_upper[of 0 a n] geod_upper[of b \"2^n\" n]"], ["proof (prove)\nusing this:\n  dist (geod n a) (geod n b) < (real b - real a) * dist x0 y0 / 2 ^ n\n  a \\<le> b\n  b \\<le> 2 ^ n\n  \\<lbrakk>0 \\<le> a; a \\<le> 2 ^ n\\<rbrakk>\n  \\<Longrightarrow> dist (geod n 0) (geod n a)\n                    \\<le> (real a - real 0) * dist x0 y0 / 2 ^ n\n  \\<lbrakk>b \\<le> 2 ^ n; 2 ^ n \\<le> 2 ^ n\\<rbrakk>\n  \\<Longrightarrow> dist (geod n b) (geod n (2 ^ n))\n                    \\<le> (real (2 ^ n) - real b) * dist x0 y0 / 2 ^ n\n\ngoal (1 subgoal):\n 1. dist (geod n 0) (geod n a) + dist (geod n a) (geod n b) +\n    dist (geod n b) (geod n (2 ^ n))\n    < real a * dist x0 y0 / 2 ^ n + (real b - real a) * dist x0 y0 / 2 ^ n +\n      (2 ^ n - real b) * dist x0 y0 / 2 ^ n", "by (auto intro: mono_intros)"], ["proof (state)\nthis:\n  dist (geod n 0) (geod n a) + dist (geod n a) (geod n b) +\n  dist (geod n b) (geod n (2 ^ n))\n  < real a * dist x0 y0 / 2 ^ n + (real b - real a) * dist x0 y0 / 2 ^ n +\n    (2 ^ n - real b) * dist x0 y0 / 2 ^ n\n\ngoal (1 subgoal):\n 1. dist (geod n a) (geod n b)\n    < (real b - real a) * dist x0 y0 / 2 ^ n \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  dist (geod n 0) (geod n a) + dist (geod n a) (geod n b) +\n  dist (geod n b) (geod n (2 ^ n))\n  < real a * dist x0 y0 / 2 ^ n + (real b - real a) * dist x0 y0 / 2 ^ n +\n    (2 ^ n - real b) * dist x0 y0 / 2 ^ n\n\ngoal (1 subgoal):\n 1. dist (geod n a) (geod n b)\n    < (real b - real a) * dist x0 y0 / 2 ^ n \\<Longrightarrow>\n    False", "have \"... = dist x0 y0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real a * dist x0 y0 / 2 ^ n + (real b - real a) * dist x0 y0 / 2 ^ n +\n    (2 ^ n - real b) * dist x0 y0 / 2 ^ n =\n    dist x0 y0", "using assms"], ["proof (prove)\nusing this:\n  a \\<le> b\n  b \\<le> 2 ^ n\n\ngoal (1 subgoal):\n 1. real a * dist x0 y0 / 2 ^ n + (real b - real a) * dist x0 y0 / 2 ^ n +\n    (2 ^ n - real b) * dist x0 y0 / 2 ^ n =\n    dist x0 y0", "by (auto simp add: algebra_simps divide_simps)"], ["proof (state)\nthis:\n  real a * dist x0 y0 / 2 ^ n + (real b - real a) * dist x0 y0 / 2 ^ n +\n  (2 ^ n - real b) * dist x0 y0 / 2 ^ n =\n  dist x0 y0\n\ngoal (1 subgoal):\n 1. dist (geod n a) (geod n b)\n    < (real b - real a) * dist x0 y0 / 2 ^ n \\<Longrightarrow>\n    False", "finally"], ["proof (chain)\npicking this:\n  dist x0 y0 < dist x0 y0", "show \"False\""], ["proof (prove)\nusing this:\n  dist x0 y0 < dist x0 y0\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> dist (geod n a) (geod n b) < (real b - real a) * dist x0 y0 / 2 ^ n\n\ngoal (1 subgoal):\n 1. dist (geod n a) (geod n b) = (real b - real a) * dist x0 y0 / 2 ^ n", "ultimately"], ["proof (chain)\npicking this:\n  dist (geod n a) (geod n b) \\<le> (real b - real a) * dist x0 y0 / 2 ^ n\n  \\<not> dist (geod n a) (geod n b) < (real b - real a) * dist x0 y0 / 2 ^ n", "show ?thesis"], ["proof (prove)\nusing this:\n  dist (geod n a) (geod n b) \\<le> (real b - real a) * dist x0 y0 / 2 ^ n\n  \\<not> dist (geod n a) (geod n b) < (real b - real a) * dist x0 y0 / 2 ^ n\n\ngoal (1 subgoal):\n 1. dist (geod n a) (geod n b) = (real b - real a) * dist x0 y0 / 2 ^ n", "by auto"], ["proof (state)\nthis:\n  dist (geod n a) (geod n b) = (real b - real a) * dist x0 y0 / 2 ^ n\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>We deduce the same statement but for points that are not on the same level, by putting\nthem on a common multiple level.\\<close>"], ["", "lemma geod_dist2:\n  assumes \"a \\<le> 2^n\" \"b \\<le> 2^p\" \"a/2^n \\<le> b / 2^p\"\n  shows \"dist (geod n a) (geod p b) = (b/2^p - a/2^n) * dist x0 y0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (geod n a) (geod p b) =\n    (real b / 2 ^ p - real a / 2 ^ n) * dist x0 y0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist (geod n a) (geod p b) =\n    (real b / 2 ^ p - real a / 2 ^ n) * dist x0 y0", "define r where \"r = max n p\""], ["proof (state)\nthis:\n  r = max n p\n\ngoal (1 subgoal):\n 1. dist (geod n a) (geod p b) =\n    (real b / 2 ^ p - real a / 2 ^ n) * dist x0 y0", "define ar where \"ar = a * 2^(r - n)\""], ["proof (state)\nthis:\n  ar = a * 2 ^ (r - n)\n\ngoal (1 subgoal):\n 1. dist (geod n a) (geod p b) =\n    (real b / 2 ^ p - real a / 2 ^ n) * dist x0 y0", "have a: \"ar / 2^r = a / 2^n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real ar / 2 ^ r = real a / 2 ^ n", "unfolding ar_def r_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. real (a * 2 ^ (max n p - n)) / 2 ^ max n p = real a / 2 ^ n", "by (auto simp add: divide_simps semiring_normalization_rules(26))"], ["proof (state)\nthis:\n  real ar / 2 ^ r = real a / 2 ^ n\n\ngoal (1 subgoal):\n 1. dist (geod n a) (geod p b) =\n    (real b / 2 ^ p - real a / 2 ^ n) * dist x0 y0", "have A: \"geod r ar = geod n a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geod r ar = geod n a", "unfolding ar_def r_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. geod (max n p) (a * 2 ^ (max n p - n)) = geod n a", "using geod_mult[of n a \"max n p - n\"]"], ["proof (prove)\nusing this:\n  geod n a = geod (n + (max n p - n)) (a * 2 ^ (max n p - n))\n\ngoal (1 subgoal):\n 1. geod (max n p) (a * 2 ^ (max n p - n)) = geod n a", "by auto"], ["proof (state)\nthis:\n  geod r ar = geod n a\n\ngoal (1 subgoal):\n 1. dist (geod n a) (geod p b) =\n    (real b / 2 ^ p - real a / 2 ^ n) * dist x0 y0", "define br where \"br = b * 2^(r - p)\""], ["proof (state)\nthis:\n  br = b * 2 ^ (r - p)\n\ngoal (1 subgoal):\n 1. dist (geod n a) (geod p b) =\n    (real b / 2 ^ p - real a / 2 ^ n) * dist x0 y0", "have b: \"br / 2^r = b / 2^p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real br / 2 ^ r = real b / 2 ^ p", "unfolding br_def r_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. real (b * 2 ^ (max n p - p)) / 2 ^ max n p = real b / 2 ^ p", "by (auto simp add: divide_simps semiring_normalization_rules(26))"], ["proof (state)\nthis:\n  real br / 2 ^ r = real b / 2 ^ p\n\ngoal (1 subgoal):\n 1. dist (geod n a) (geod p b) =\n    (real b / 2 ^ p - real a / 2 ^ n) * dist x0 y0", "have B: \"geod r br = geod p b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. geod r br = geod p b", "unfolding br_def r_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. geod (max n p) (b * 2 ^ (max n p - p)) = geod p b", "using geod_mult[of p b \"max n p - p\"]"], ["proof (prove)\nusing this:\n  geod p b = geod (p + (max n p - p)) (b * 2 ^ (max n p - p))\n\ngoal (1 subgoal):\n 1. geod (max n p) (b * 2 ^ (max n p - p)) = geod p b", "by auto"], ["proof (state)\nthis:\n  geod r br = geod p b\n\ngoal (1 subgoal):\n 1. dist (geod n a) (geod p b) =\n    (real b / 2 ^ p - real a / 2 ^ n) * dist x0 y0", "have \"dist (geod n a) (geod p b) = dist (geod r ar) (geod r br)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (geod n a) (geod p b) = dist (geod r ar) (geod r br)", "using A B"], ["proof (prove)\nusing this:\n  geod r ar = geod n a\n  geod r br = geod p b\n\ngoal (1 subgoal):\n 1. dist (geod n a) (geod p b) = dist (geod r ar) (geod r br)", "by auto"], ["proof (state)\nthis:\n  dist (geod n a) (geod p b) = dist (geod r ar) (geod r br)\n\ngoal (1 subgoal):\n 1. dist (geod n a) (geod p b) =\n    (real b / 2 ^ p - real a / 2 ^ n) * dist x0 y0", "also"], ["proof (state)\nthis:\n  dist (geod n a) (geod p b) = dist (geod r ar) (geod r br)\n\ngoal (1 subgoal):\n 1. dist (geod n a) (geod p b) =\n    (real b / 2 ^ p - real a / 2 ^ n) * dist x0 y0", "have \"... = (real br - ar) * dist x0 y0 / 2 ^r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (geod r ar) (geod r br) = (real br - real ar) * dist x0 y0 / 2 ^ r", "apply (rule geod_dist)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ar \\<le> br\n 2. br \\<le> 2 ^ r", "using \\<open>a/2^n \\<le> b / 2^p\\<close>"], ["proof (prove)\nusing this:\n  real a / 2 ^ n \\<le> real b / 2 ^ p\n\ngoal (2 subgoals):\n 1. ar \\<le> br\n 2. br \\<le> 2 ^ r", "unfolding a[symmetric] b[symmetric]"], ["proof (prove)\nusing this:\n  real ar / 2 ^ r \\<le> real br / 2 ^ r\n\ngoal (2 subgoals):\n 1. ar \\<le> br\n 2. br \\<le> 2 ^ r", "apply (auto simp add: divide_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ar \\<le> br \\<Longrightarrow> br \\<le> 2 ^ r", "using \\<open>b \\<le> 2^p\\<close> b"], ["proof (prove)\nusing this:\n  b \\<le> 2 ^ p\n  real br / 2 ^ r = real b / 2 ^ p\n\ngoal (1 subgoal):\n 1. ar \\<le> br \\<Longrightarrow> br \\<le> 2 ^ r", "apply (auto simp add: divide_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ar \\<le> br; b \\<le> 2 ^ p;\n     real br * 2 ^ p = real b * 2 ^ r\\<rbrakk>\n    \\<Longrightarrow> br \\<le> 2 ^ r", "by (metis br_def le_add_diff_inverse2 max.cobounded2 mult.commute mult_le_mono2 r_def semiring_normalization_rules(26))"], ["proof (state)\nthis:\n  dist (geod r ar) (geod r br) = (real br - real ar) * dist x0 y0 / 2 ^ r\n\ngoal (1 subgoal):\n 1. dist (geod n a) (geod p b) =\n    (real b / 2 ^ p - real a / 2 ^ n) * dist x0 y0", "also"], ["proof (state)\nthis:\n  dist (geod r ar) (geod r br) = (real br - real ar) * dist x0 y0 / 2 ^ r\n\ngoal (1 subgoal):\n 1. dist (geod n a) (geod p b) =\n    (real b / 2 ^ p - real a / 2 ^ n) * dist x0 y0", "have \"... = (real br / 2^r - real ar / 2^r) * dist x0 y0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (real br - real ar) * dist x0 y0 / 2 ^ r =\n    (real br / 2 ^ r - real ar / 2 ^ r) * dist x0 y0", "by (auto simp add: algebra_simps divide_simps)"], ["proof (state)\nthis:\n  (real br - real ar) * dist x0 y0 / 2 ^ r =\n  (real br / 2 ^ r - real ar / 2 ^ r) * dist x0 y0\n\ngoal (1 subgoal):\n 1. dist (geod n a) (geod p b) =\n    (real b / 2 ^ p - real a / 2 ^ n) * dist x0 y0", "finally"], ["proof (chain)\npicking this:\n  dist (geod n a) (geod p b) =\n  (real br / 2 ^ r - real ar / 2 ^ r) * dist x0 y0", "show ?thesis"], ["proof (prove)\nusing this:\n  dist (geod n a) (geod p b) =\n  (real br / 2 ^ r - real ar / 2 ^ r) * dist x0 y0\n\ngoal (1 subgoal):\n 1. dist (geod n a) (geod p b) =\n    (real b / 2 ^ p - real a / 2 ^ n) * dist x0 y0", "using a b"], ["proof (prove)\nusing this:\n  dist (geod n a) (geod p b) =\n  (real br / 2 ^ r - real ar / 2 ^ r) * dist x0 y0\n  real ar / 2 ^ r = real a / 2 ^ n\n  real br / 2 ^ r = real b / 2 ^ p\n\ngoal (1 subgoal):\n 1. dist (geod n a) (geod p b) =\n    (real b / 2 ^ p - real a / 2 ^ n) * dist x0 y0", "by auto"], ["proof (state)\nthis:\n  dist (geod n a) (geod p b) =\n  (real b / 2 ^ p - real a / 2 ^ n) * dist x0 y0\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Same thing but without a priori ordering of the points.\\<close>"], ["", "lemma geod_dist3:\n  assumes \"a \\<le> 2^n\" \"b \\<le> 2^p\"\n  shows \"dist (geod n a) (geod p b) = abs(b/2^p - a/2^n) * dist x0 y0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (geod n a) (geod p b) =\n    \\<bar>real b / 2 ^ p - real a / 2 ^ n\\<bar> * dist x0 y0", "apply (cases \"a /2^n \\<le> b/2^p\", auto)"], ["proof (prove)\ngoal (2 subgoals):\n 1. real a / 2 ^ n \\<le> real b / 2 ^ p \\<Longrightarrow>\n    dist (geod n a) (geod p b) =\n    (real b / 2 ^ p - real a / 2 ^ n) * dist x0 y0\n 2. \\<not> real a / 2 ^ n \\<le> real b / 2 ^ p \\<Longrightarrow>\n    dist (geod n a) (geod p b) =\n    (real a / 2 ^ n - real b / 2 ^ p) * dist x0 y0", "apply (rule geod_dist2[OF assms], auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> real a / 2 ^ n \\<le> real b / 2 ^ p \\<Longrightarrow>\n    dist (geod n a) (geod p b) =\n    (real a / 2 ^ n - real b / 2 ^ p) * dist x0 y0", "apply (subst dist_commute, rule geod_dist2[OF assms(2) assms(1)], auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text \\<open>Finally, we define a geodesic by extending what we have already defined on dyadic points,\nthanks to the result of isometric extension of isometries taking their values\nin complete spaces.\\<close>"], ["", "lemma geod:\n  shows \"\\<exists>g. isometry_on {0..dist x0 y0} g \\<and> g 0 = x0 \\<and> g (dist x0 y0) = y0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>g.\n       isometry_on {0..dist x0 y0} g \\<and>\n       g 0 = x0 \\<and> g (dist x0 y0) = y0", "proof (cases \"x0 = y0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x0 = y0 \\<Longrightarrow>\n    \\<exists>g.\n       isometry_on {0..dist x0 y0} g \\<and>\n       g 0 = x0 \\<and> g (dist x0 y0) = y0\n 2. x0 \\<noteq> y0 \\<Longrightarrow>\n    \\<exists>g.\n       isometry_on {0..dist x0 y0} g \\<and>\n       g 0 = x0 \\<and> g (dist x0 y0) = y0", "case True"], ["proof (state)\nthis:\n  x0 = y0\n\ngoal (2 subgoals):\n 1. x0 = y0 \\<Longrightarrow>\n    \\<exists>g.\n       isometry_on {0..dist x0 y0} g \\<and>\n       g 0 = x0 \\<and> g (dist x0 y0) = y0\n 2. x0 \\<noteq> y0 \\<Longrightarrow>\n    \\<exists>g.\n       isometry_on {0..dist x0 y0} g \\<and>\n       g 0 = x0 \\<and> g (dist x0 y0) = y0", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>g.\n       isometry_on {0..dist x0 y0} g \\<and>\n       g 0 = x0 \\<and> g (dist x0 y0) = y0", "apply (rule exI[of _ \"\\<lambda>_. x0\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. isometry_on {0..dist x0 y0} (\\<lambda>_. x0) \\<and>\n    x0 = x0 \\<and> x0 = y0", "unfolding isometry_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>{0..dist x0 y0}.\n        \\<forall>y\\<in>{0..dist x0 y0}. dist x0 x0 = dist x y) \\<and>\n    x0 = x0 \\<and> x0 = y0", "using True"], ["proof (prove)\nusing this:\n  x0 = y0\n\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>{0..dist x0 y0}.\n        \\<forall>y\\<in>{0..dist x0 y0}. dist x0 x0 = dist x y) \\<and>\n    x0 = x0 \\<and> x0 = y0", "by auto"], ["proof (state)\nthis:\n  \\<exists>g.\n     isometry_on {0..dist x0 y0} g \\<and>\n     g 0 = x0 \\<and> g (dist x0 y0) = y0\n\ngoal (1 subgoal):\n 1. x0 \\<noteq> y0 \\<Longrightarrow>\n    \\<exists>g.\n       isometry_on {0..dist x0 y0} g \\<and>\n       g 0 = x0 \\<and> g (dist x0 y0) = y0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x0 \\<noteq> y0 \\<Longrightarrow>\n    \\<exists>g.\n       isometry_on {0..dist x0 y0} g \\<and>\n       g 0 = x0 \\<and> g (dist x0 y0) = y0", "case False"], ["proof (state)\nthis:\n  x0 \\<noteq> y0\n\ngoal (1 subgoal):\n 1. x0 \\<noteq> y0 \\<Longrightarrow>\n    \\<exists>g.\n       isometry_on {0..dist x0 y0} g \\<and>\n       g 0 = x0 \\<and> g (dist x0 y0) = y0", "define A where \"A = {(real k/2^n) * dist x0 y0 |k n. k \\<le> 2^n}\""], ["proof (state)\nthis:\n  A = {real k / 2 ^ n * dist x0 y0 |k n. k \\<le> 2 ^ n}\n\ngoal (1 subgoal):\n 1. x0 \\<noteq> y0 \\<Longrightarrow>\n    \\<exists>g.\n       isometry_on {0..dist x0 y0} g \\<and>\n       g 0 = x0 \\<and> g (dist x0 y0) = y0", "have \"{0..dist x0 y0} \\<subseteq> closure A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0..dist x0 y0} \\<subseteq> closure A", "proof (auto simp add: closure_approachable dist_real_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 \\<le> x; x \\<le> dist x0 y0; 0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>A. \\<bar>y - x\\<bar> < e", "fix t::real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 \\<le> x; x \\<le> dist x0 y0; 0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>A. \\<bar>y - x\\<bar> < e", "assume t: \"0 \\<le> t\" \"t \\<le> dist x0 y0\""], ["proof (state)\nthis:\n  0 \\<le> t\n  t \\<le> dist x0 y0\n\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 \\<le> x; x \\<le> dist x0 y0; 0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>A. \\<bar>y - x\\<bar> < e", "fix e:: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 \\<le> x; x \\<le> dist x0 y0; 0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>A. \\<bar>y - x\\<bar> < e", "assume \"e > 0\""], ["proof (state)\nthis:\n  0 < e\n\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 \\<le> x; x \\<le> dist x0 y0; 0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>A. \\<bar>y - x\\<bar> < e", "then"], ["proof (chain)\npicking this:\n  0 < e", "obtain n::nat where n: \"dist x0 y0/e < 2^n\""], ["proof (prove)\nusing this:\n  0 < e\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        dist x0 y0 / e < 2 ^ n \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using one_less_numeral_iff real_arch_pow semiring_norm(76)"], ["proof (prove)\nusing this:\n  0 < e\n  ((1::?'a) < numeral ?n) = (num.One < ?n)\n  1 < ?x \\<Longrightarrow> \\<exists>n. ?y < ?x ^ n\n  (num.One < num.Bit0 ?n) = True\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        dist x0 y0 / e < 2 ^ n \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  dist x0 y0 / e < 2 ^ n\n\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 \\<le> x; x \\<le> dist x0 y0; 0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>A. \\<bar>y - x\\<bar> < e", "define k where \"k = floor (2^n * t/ dist x0 y0)\""], ["proof (state)\nthis:\n  k = \\<lfloor>2 ^ n * t / dist x0 y0\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 \\<le> x; x \\<le> dist x0 y0; 0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>A. \\<bar>y - x\\<bar> < e", "have \"k \\<le> 2^n * t/ dist x0 y0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int k \\<le> 2 ^ n * t / dist x0 y0", "unfolding k_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int \\<lfloor>2 ^ n * t / dist x0 y0\\<rfloor>\n    \\<le> 2 ^ n * t / dist x0 y0", "by auto"], ["proof (state)\nthis:\n  real_of_int k \\<le> 2 ^ n * t / dist x0 y0\n\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 \\<le> x; x \\<le> dist x0 y0; 0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>A. \\<bar>y - x\\<bar> < e", "also"], ["proof (state)\nthis:\n  real_of_int k \\<le> 2 ^ n * t / dist x0 y0\n\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 \\<le> x; x \\<le> dist x0 y0; 0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>A. \\<bar>y - x\\<bar> < e", "have \"... \\<le> 2^n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ n * t / dist x0 y0 \\<le> 2 ^ n", "using t False"], ["proof (prove)\nusing this:\n  0 \\<le> t\n  t \\<le> dist x0 y0\n  x0 \\<noteq> y0\n\ngoal (1 subgoal):\n 1. 2 ^ n * t / dist x0 y0 \\<le> 2 ^ n", "by (auto simp add: algebra_simps divide_simps)"], ["proof (state)\nthis:\n  2 ^ n * t / dist x0 y0 \\<le> 2 ^ n\n\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 \\<le> x; x \\<le> dist x0 y0; 0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>A. \\<bar>y - x\\<bar> < e", "finally"], ["proof (chain)\npicking this:\n  real_of_int k \\<le> 2 ^ n", "have \"k \\<le> 2^n\""], ["proof (prove)\nusing this:\n  real_of_int k \\<le> 2 ^ n\n\ngoal (1 subgoal):\n 1. k \\<le> 2 ^ n", "by auto"], ["proof (state)\nthis:\n  k \\<le> 2 ^ n\n\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 \\<le> x; x \\<le> dist x0 y0; 0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>A. \\<bar>y - x\\<bar> < e", "have \"k \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> k", "using t False"], ["proof (prove)\nusing this:\n  0 \\<le> t\n  t \\<le> dist x0 y0\n  x0 \\<noteq> y0\n\ngoal (1 subgoal):\n 1. 0 \\<le> k", "unfolding k_def"], ["proof (prove)\nusing this:\n  0 \\<le> t\n  t \\<le> dist x0 y0\n  x0 \\<noteq> y0\n\ngoal (1 subgoal):\n 1. 0 \\<le> \\<lfloor>2 ^ n * t / dist x0 y0\\<rfloor>", "by auto"], ["proof (state)\nthis:\n  0 \\<le> k\n\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 \\<le> x; x \\<le> dist x0 y0; 0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>A. \\<bar>y - x\\<bar> < e", "define l where \"l = nat k\""], ["proof (state)\nthis:\n  l = nat k\n\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 \\<le> x; x \\<le> dist x0 y0; 0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>A. \\<bar>y - x\\<bar> < e", "have \"k = int l\" \"l \\<le> 2^n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k = int l &&& l \\<le> 2 ^ n", "using \\<open>k \\<ge> 0\\<close> \\<open>k \\<le> 2^n\\<close> nat_le_iff"], ["proof (prove)\nusing this:\n  0 \\<le> k\n  k \\<le> 2 ^ n\n  (nat ?x \\<le> ?n) = (?x \\<le> int ?n)\n\ngoal (1 subgoal):\n 1. k = int l &&& l \\<le> 2 ^ n", "unfolding l_def"], ["proof (prove)\nusing this:\n  0 \\<le> k\n  k \\<le> 2 ^ n\n  (nat ?x \\<le> ?n) = (?x \\<le> int ?n)\n\ngoal (1 subgoal):\n 1. k = int (nat k) &&& nat k \\<le> 2 ^ n", "by auto"], ["proof (state)\nthis:\n  k = int l\n  l \\<le> 2 ^ n\n\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 \\<le> x; x \\<le> dist x0 y0; 0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>A. \\<bar>y - x\\<bar> < e", "have \"abs (2^n * t/dist x0 y0 - k) \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>2 ^ n * t / dist x0 y0 - real_of_int k\\<bar> \\<le> 1", "unfolding k_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>2 ^ n * t / dist x0 y0 -\n          real_of_int \\<lfloor>2 ^ n * t / dist x0 y0\\<rfloor>\\<bar>\n    \\<le> 1", "by linarith"], ["proof (state)\nthis:\n  \\<bar>2 ^ n * t / dist x0 y0 - real_of_int k\\<bar> \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 \\<le> x; x \\<le> dist x0 y0; 0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>A. \\<bar>y - x\\<bar> < e", "then"], ["proof (chain)\npicking this:\n  \\<bar>2 ^ n * t / dist x0 y0 - real_of_int k\\<bar> \\<le> 1", "have \"abs(t - k/2^n * dist x0 y0) \\<le> dist x0 y0 / 2^n\""], ["proof (prove)\nusing this:\n  \\<bar>2 ^ n * t / dist x0 y0 - real_of_int k\\<bar> \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<bar>t - real_of_int k / 2 ^ n * dist x0 y0\\<bar>\n    \\<le> dist x0 y0 / 2 ^ n", "by (auto simp add: algebra_simps divide_simps False)"], ["proof (state)\nthis:\n  \\<bar>t - real_of_int k / 2 ^ n * dist x0 y0\\<bar>\n  \\<le> dist x0 y0 / 2 ^ n\n\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 \\<le> x; x \\<le> dist x0 y0; 0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>A. \\<bar>y - x\\<bar> < e", "also"], ["proof (state)\nthis:\n  \\<bar>t - real_of_int k / 2 ^ n * dist x0 y0\\<bar>\n  \\<le> dist x0 y0 / 2 ^ n\n\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 \\<le> x; x \\<le> dist x0 y0; 0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>A. \\<bar>y - x\\<bar> < e", "have \"... < e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x0 y0 / 2 ^ n < e", "using n \\<open>e > 0\\<close>"], ["proof (prove)\nusing this:\n  dist x0 y0 / e < 2 ^ n\n  0 < e\n\ngoal (1 subgoal):\n 1. dist x0 y0 / 2 ^ n < e", "by (auto simp add: algebra_simps divide_simps)"], ["proof (state)\nthis:\n  dist x0 y0 / 2 ^ n < e\n\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 \\<le> x; x \\<le> dist x0 y0; 0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>A. \\<bar>y - x\\<bar> < e", "finally"], ["proof (chain)\npicking this:\n  \\<bar>t - real_of_int k / 2 ^ n * dist x0 y0\\<bar> < e", "have \"abs(t - k/2^n * dist x0 y0) < e\""], ["proof (prove)\nusing this:\n  \\<bar>t - real_of_int k / 2 ^ n * dist x0 y0\\<bar> < e\n\ngoal (1 subgoal):\n 1. \\<bar>t - real_of_int k / 2 ^ n * dist x0 y0\\<bar> < e", "by auto"], ["proof (state)\nthis:\n  \\<bar>t - real_of_int k / 2 ^ n * dist x0 y0\\<bar> < e\n\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 \\<le> x; x \\<le> dist x0 y0; 0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>A. \\<bar>y - x\\<bar> < e", "then"], ["proof (chain)\npicking this:\n  \\<bar>t - real_of_int k / 2 ^ n * dist x0 y0\\<bar> < e", "have \"abs(t - l/2^n * dist x0 y0) < e\""], ["proof (prove)\nusing this:\n  \\<bar>t - real_of_int k / 2 ^ n * dist x0 y0\\<bar> < e\n\ngoal (1 subgoal):\n 1. \\<bar>t - real l / 2 ^ n * dist x0 y0\\<bar> < e", "using \\<open>k = int l\\<close>"], ["proof (prove)\nusing this:\n  \\<bar>t - real_of_int k / 2 ^ n * dist x0 y0\\<bar> < e\n  k = int l\n\ngoal (1 subgoal):\n 1. \\<bar>t - real l / 2 ^ n * dist x0 y0\\<bar> < e", "by auto"], ["proof (state)\nthis:\n  \\<bar>t - real l / 2 ^ n * dist x0 y0\\<bar> < e\n\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 \\<le> x; x \\<le> dist x0 y0; 0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>A. \\<bar>y - x\\<bar> < e", "moreover"], ["proof (state)\nthis:\n  \\<bar>t - real l / 2 ^ n * dist x0 y0\\<bar> < e\n\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 \\<le> x; x \\<le> dist x0 y0; 0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>A. \\<bar>y - x\\<bar> < e", "have \"l/2^n * dist x0 y0 \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real l / 2 ^ n * dist x0 y0 \\<in> A", "unfolding A_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. real l / 2 ^ n * dist x0 y0\n    \\<in> {real k / 2 ^ n * dist x0 y0 |k n. k \\<le> 2 ^ n}", "using \\<open>l \\<le> 2^n\\<close>"], ["proof (prove)\nusing this:\n  l \\<le> 2 ^ n\n\ngoal (1 subgoal):\n 1. real l / 2 ^ n * dist x0 y0\n    \\<in> {real k / 2 ^ n * dist x0 y0 |k n. k \\<le> 2 ^ n}", "by auto"], ["proof (state)\nthis:\n  real l / 2 ^ n * dist x0 y0 \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 \\<le> x; x \\<le> dist x0 y0; 0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y\\<in>A. \\<bar>y - x\\<bar> < e", "ultimately"], ["proof (chain)\npicking this:\n  \\<bar>t - real l / 2 ^ n * dist x0 y0\\<bar> < e\n  real l / 2 ^ n * dist x0 y0 \\<in> A", "show \"\\<exists>u\\<in>A. abs(u - t) < e\""], ["proof (prove)\nusing this:\n  \\<bar>t - real l / 2 ^ n * dist x0 y0\\<bar> < e\n  real l / 2 ^ n * dist x0 y0 \\<in> A\n\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>A. \\<bar>u - t\\<bar> < e", "by force"], ["proof (state)\nthis:\n  \\<exists>u\\<in>A. \\<bar>u - t\\<bar> < e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {0..dist x0 y0} \\<subseteq> closure A\n\ngoal (1 subgoal):\n 1. x0 \\<noteq> y0 \\<Longrightarrow>\n    \\<exists>g.\n       isometry_on {0..dist x0 y0} g \\<and>\n       g 0 = x0 \\<and> g (dist x0 y0) = y0", "text \\<open>For each dyadic point, we choose one representation of the form $K/2^N$, it is not important\n  for us that it is the minimal one.\\<close>"], ["proof (state)\nthis:\n  {0..dist x0 y0} \\<subseteq> closure A\n\ngoal (1 subgoal):\n 1. x0 \\<noteq> y0 \\<Longrightarrow>\n    \\<exists>g.\n       isometry_on {0..dist x0 y0} g \\<and>\n       g 0 = x0 \\<and> g (dist x0 y0) = y0", "define index where \"index = (\\<lambda>t. SOME i. t = real (fst i)/2^(snd i) * dist x0 y0 \\<and> (fst i) \\<le> 2^(snd i))\""], ["proof (state)\nthis:\n  index =\n  (\\<lambda>t.\n      SOME i.\n         t = real (fst i) / 2 ^ snd i * dist x0 y0 \\<and>\n         fst i \\<le> 2 ^ snd i)\n\ngoal (1 subgoal):\n 1. x0 \\<noteq> y0 \\<Longrightarrow>\n    \\<exists>g.\n       isometry_on {0..dist x0 y0} g \\<and>\n       g 0 = x0 \\<and> g (dist x0 y0) = y0", "define K where \"K = (\\<lambda>t. fst (index t))\""], ["proof (state)\nthis:\n  K = (\\<lambda>t. fst (index t))\n\ngoal (1 subgoal):\n 1. x0 \\<noteq> y0 \\<Longrightarrow>\n    \\<exists>g.\n       isometry_on {0..dist x0 y0} g \\<and>\n       g 0 = x0 \\<and> g (dist x0 y0) = y0", "define N where \"N = (\\<lambda>t. snd (index t))\""], ["proof (state)\nthis:\n  N = (\\<lambda>t. snd (index t))\n\ngoal (1 subgoal):\n 1. x0 \\<noteq> y0 \\<Longrightarrow>\n    \\<exists>g.\n       isometry_on {0..dist x0 y0} g \\<and>\n       g 0 = x0 \\<and> g (dist x0 y0) = y0", "have t: \"t = K t/ 2^(N t) * dist x0 y0 \\<and> K t \\<le> 2^(N t)\" if \"t \\<in> A\" for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. t = real (K t) / 2 ^ N t * dist x0 y0 \\<and> K t \\<le> 2 ^ N t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. t = real (K t) / 2 ^ N t * dist x0 y0 \\<and> K t \\<le> 2 ^ N t", "obtain n k::nat where \"t = k/2^n * dist x0 y0\" \"k \\<le> 2^n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k n.\n        \\<lbrakk>t = real k / 2 ^ n * dist x0 y0; k \\<le> 2 ^ n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>t\\<in> A\\<close>"], ["proof (prove)\nusing this:\n  t \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>k n.\n        \\<lbrakk>t = real k / 2 ^ n * dist x0 y0; k \\<le> 2 ^ n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding A_def"], ["proof (prove)\nusing this:\n  t \\<in> {real k / 2 ^ n * dist x0 y0 |k n. k \\<le> 2 ^ n}\n\ngoal (1 subgoal):\n 1. (\\<And>k n.\n        \\<lbrakk>t = real k / 2 ^ n * dist x0 y0; k \\<le> 2 ^ n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  t = real k / 2 ^ n * dist x0 y0\n  k \\<le> 2 ^ n\n\ngoal (1 subgoal):\n 1. t = real (K t) / 2 ^ N t * dist x0 y0 \\<and> K t \\<le> 2 ^ N t", "then"], ["proof (chain)\npicking this:\n  t = real k / 2 ^ n * dist x0 y0\n  k \\<le> 2 ^ n", "have *: \"\\<exists>i. t = real (fst i)/2^(snd i) * dist x0 y0 \\<and> (fst i) \\<le> 2^(snd i)\""], ["proof (prove)\nusing this:\n  t = real k / 2 ^ n * dist x0 y0\n  k \\<le> 2 ^ n\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       t = real (fst i) / 2 ^ snd i * dist x0 y0 \\<and>\n       fst i \\<le> 2 ^ snd i", "by auto"], ["proof (state)\nthis:\n  \\<exists>i.\n     t = real (fst i) / 2 ^ snd i * dist x0 y0 \\<and> fst i \\<le> 2 ^ snd i\n\ngoal (1 subgoal):\n 1. t = real (K t) / 2 ^ N t * dist x0 y0 \\<and> K t \\<le> 2 ^ N t", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. t = real (K t) / 2 ^ N t * dist x0 y0 \\<and> K t \\<le> 2 ^ N t", "unfolding K_def N_def index_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. t =\n    real\n     (fst (SOME i.\n              t = real (fst i) / 2 ^ snd i * dist x0 y0 \\<and>\n              fst i \\<le> 2 ^ snd i)) /\n    2 ^\n    snd (SOME i.\n            t = real (fst i) / 2 ^ snd i * dist x0 y0 \\<and>\n            fst i \\<le> 2 ^ snd i) *\n    dist x0 y0 \\<and>\n    fst (SOME i.\n            t = real (fst i) / 2 ^ snd i * dist x0 y0 \\<and>\n            fst i \\<le> 2 ^ snd i)\n    \\<le> 2 ^\n          snd (SOME i.\n                  t = real (fst i) / 2 ^ snd i * dist x0 y0 \\<and>\n                  fst i \\<le> 2 ^ snd i)", "using someI_ex[OF *]"], ["proof (prove)\nusing this:\n  t =\n  real\n   (fst (SOME x.\n            t = real (fst x) / 2 ^ snd x * dist x0 y0 \\<and>\n            fst x \\<le> 2 ^ snd x)) /\n  2 ^\n  snd (SOME x.\n          t = real (fst x) / 2 ^ snd x * dist x0 y0 \\<and>\n          fst x \\<le> 2 ^ snd x) *\n  dist x0 y0 \\<and>\n  fst (SOME x.\n          t = real (fst x) / 2 ^ snd x * dist x0 y0 \\<and>\n          fst x \\<le> 2 ^ snd x)\n  \\<le> 2 ^\n        snd (SOME x.\n                t = real (fst x) / 2 ^ snd x * dist x0 y0 \\<and>\n                fst x \\<le> 2 ^ snd x)\n\ngoal (1 subgoal):\n 1. t =\n    real\n     (fst (SOME i.\n              t = real (fst i) / 2 ^ snd i * dist x0 y0 \\<and>\n              fst i \\<le> 2 ^ snd i)) /\n    2 ^\n    snd (SOME i.\n            t = real (fst i) / 2 ^ snd i * dist x0 y0 \\<and>\n            fst i \\<le> 2 ^ snd i) *\n    dist x0 y0 \\<and>\n    fst (SOME i.\n            t = real (fst i) / 2 ^ snd i * dist x0 y0 \\<and>\n            fst i \\<le> 2 ^ snd i)\n    \\<le> 2 ^\n          snd (SOME i.\n                  t = real (fst i) / 2 ^ snd i * dist x0 y0 \\<and>\n                  fst i \\<le> 2 ^ snd i)", "by auto"], ["proof (state)\nthis:\n  t = real (K t) / 2 ^ N t * dist x0 y0 \\<and> K t \\<le> 2 ^ N t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?t \\<in> A \\<Longrightarrow>\n  ?t = real (K ?t) / 2 ^ N ?t * dist x0 y0 \\<and> K ?t \\<le> 2 ^ N ?t\n\ngoal (1 subgoal):\n 1. x0 \\<noteq> y0 \\<Longrightarrow>\n    \\<exists>g.\n       isometry_on {0..dist x0 y0} g \\<and>\n       g 0 = x0 \\<and> g (dist x0 y0) = y0", "text \\<open>We can now define our function on dyadic points.\\<close>"], ["proof (state)\nthis:\n  ?t \\<in> A \\<Longrightarrow>\n  ?t = real (K ?t) / 2 ^ N ?t * dist x0 y0 \\<and> K ?t \\<le> 2 ^ N ?t\n\ngoal (1 subgoal):\n 1. x0 \\<noteq> y0 \\<Longrightarrow>\n    \\<exists>g.\n       isometry_on {0..dist x0 y0} g \\<and>\n       g 0 = x0 \\<and> g (dist x0 y0) = y0", "define f where \"f = (\\<lambda>t. geod (N t) (K t))\""], ["proof (state)\nthis:\n  f = (\\<lambda>t. geod (N t) (K t))\n\ngoal (1 subgoal):\n 1. x0 \\<noteq> y0 \\<Longrightarrow>\n    \\<exists>g.\n       isometry_on {0..dist x0 y0} g \\<and>\n       g 0 = x0 \\<and> g (dist x0 y0) = y0", "have \"0 \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<in> A", "unfolding A_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<in> {real k / 2 ^ n * dist x0 y0 |k n. k \\<le> 2 ^ n}", "by auto"], ["proof (state)\nthis:\n  0 \\<in> A\n\ngoal (1 subgoal):\n 1. x0 \\<noteq> y0 \\<Longrightarrow>\n    \\<exists>g.\n       isometry_on {0..dist x0 y0} g \\<and>\n       g 0 = x0 \\<and> g (dist x0 y0) = y0", "have \"f 0 = x0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f 0 = x0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f 0 = x0", "have \"0 = K 0 /2^(N 0) * dist x0 y0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 = real (K 0) / 2 ^ N 0 * dist x0 y0", "using t \\<open>0 \\<in> A\\<close>"], ["proof (prove)\nusing this:\n  ?t \\<in> A \\<Longrightarrow>\n  ?t = real (K ?t) / 2 ^ N ?t * dist x0 y0 \\<and> K ?t \\<le> 2 ^ N ?t\n  0 \\<in> A\n\ngoal (1 subgoal):\n 1. 0 = real (K 0) / 2 ^ N 0 * dist x0 y0", "by auto"], ["proof (state)\nthis:\n  0 = real (K 0) / 2 ^ N 0 * dist x0 y0\n\ngoal (1 subgoal):\n 1. f 0 = x0", "then"], ["proof (chain)\npicking this:\n  0 = real (K 0) / 2 ^ N 0 * dist x0 y0", "have \"K 0 = 0\""], ["proof (prove)\nusing this:\n  0 = real (K 0) / 2 ^ N 0 * dist x0 y0\n\ngoal (1 subgoal):\n 1. K 0 = 0", "using False"], ["proof (prove)\nusing this:\n  0 = real (K 0) / 2 ^ N 0 * dist x0 y0\n  x0 \\<noteq> y0\n\ngoal (1 subgoal):\n 1. K 0 = 0", "by auto"], ["proof (state)\nthis:\n  K 0 = 0\n\ngoal (1 subgoal):\n 1. f 0 = x0", "then"], ["proof (chain)\npicking this:\n  K 0 = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  K 0 = 0\n\ngoal (1 subgoal):\n 1. f 0 = x0", "unfolding f_def"], ["proof (prove)\nusing this:\n  K 0 = 0\n\ngoal (1 subgoal):\n 1. geod (N 0) (K 0) = x0", "using geod_0"], ["proof (prove)\nusing this:\n  K 0 = 0\n  geod ?n 0 = x0\n\ngoal (1 subgoal):\n 1. geod (N 0) (K 0) = x0", "by auto"], ["proof (state)\nthis:\n  f 0 = x0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f 0 = x0\n\ngoal (1 subgoal):\n 1. x0 \\<noteq> y0 \\<Longrightarrow>\n    \\<exists>g.\n       isometry_on {0..dist x0 y0} g \\<and>\n       g 0 = x0 \\<and> g (dist x0 y0) = y0", "have \"dist x0 y0 = (real 1/2^0) * dist x0 y0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x0 y0 = real 1 / 2 ^ 0 * dist x0 y0", "by auto"], ["proof (state)\nthis:\n  dist x0 y0 = real 1 / 2 ^ 0 * dist x0 y0\n\ngoal (1 subgoal):\n 1. x0 \\<noteq> y0 \\<Longrightarrow>\n    \\<exists>g.\n       isometry_on {0..dist x0 y0} g \\<and>\n       g 0 = x0 \\<and> g (dist x0 y0) = y0", "then"], ["proof (chain)\npicking this:\n  dist x0 y0 = real 1 / 2 ^ 0 * dist x0 y0", "have \"dist x0 y0 \\<in> A\""], ["proof (prove)\nusing this:\n  dist x0 y0 = real 1 / 2 ^ 0 * dist x0 y0\n\ngoal (1 subgoal):\n 1. dist x0 y0 \\<in> A", "unfolding A_def"], ["proof (prove)\nusing this:\n  dist x0 y0 = real 1 / 2 ^ 0 * dist x0 y0\n\ngoal (1 subgoal):\n 1. dist x0 y0 \\<in> {real k / 2 ^ n * dist x0 y0 |k n. k \\<le> 2 ^ n}", "by force"], ["proof (state)\nthis:\n  dist x0 y0 \\<in> A\n\ngoal (1 subgoal):\n 1. x0 \\<noteq> y0 \\<Longrightarrow>\n    \\<exists>g.\n       isometry_on {0..dist x0 y0} g \\<and>\n       g 0 = x0 \\<and> g (dist x0 y0) = y0", "have \"f (dist x0 y0) = y0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (dist x0 y0) = y0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f (dist x0 y0) = y0", "have \"dist x0 y0 = K (dist x0 y0) / 2^(N (dist x0 y0)) * dist x0 y0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x0 y0 = real (K (dist x0 y0)) / 2 ^ N (dist x0 y0) * dist x0 y0", "using t \\<open>dist x0 y0 \\<in> A\\<close>"], ["proof (prove)\nusing this:\n  ?t \\<in> A \\<Longrightarrow>\n  ?t = real (K ?t) / 2 ^ N ?t * dist x0 y0 \\<and> K ?t \\<le> 2 ^ N ?t\n  dist x0 y0 \\<in> A\n\ngoal (1 subgoal):\n 1. dist x0 y0 = real (K (dist x0 y0)) / 2 ^ N (dist x0 y0) * dist x0 y0", "by auto"], ["proof (state)\nthis:\n  dist x0 y0 = real (K (dist x0 y0)) / 2 ^ N (dist x0 y0) * dist x0 y0\n\ngoal (1 subgoal):\n 1. f (dist x0 y0) = y0", "then"], ["proof (chain)\npicking this:\n  dist x0 y0 = real (K (dist x0 y0)) / 2 ^ N (dist x0 y0) * dist x0 y0", "have \"K (dist x0 y0) = 2^(N(dist x0 y0))\""], ["proof (prove)\nusing this:\n  dist x0 y0 = real (K (dist x0 y0)) / 2 ^ N (dist x0 y0) * dist x0 y0\n\ngoal (1 subgoal):\n 1. K (dist x0 y0) = 2 ^ N (dist x0 y0)", "using False"], ["proof (prove)\nusing this:\n  dist x0 y0 = real (K (dist x0 y0)) / 2 ^ N (dist x0 y0) * dist x0 y0\n  x0 \\<noteq> y0\n\ngoal (1 subgoal):\n 1. K (dist x0 y0) = 2 ^ N (dist x0 y0)", "by (auto simp add: divide_simps)"], ["proof (state)\nthis:\n  K (dist x0 y0) = 2 ^ N (dist x0 y0)\n\ngoal (1 subgoal):\n 1. f (dist x0 y0) = y0", "then"], ["proof (chain)\npicking this:\n  K (dist x0 y0) = 2 ^ N (dist x0 y0)", "show ?thesis"], ["proof (prove)\nusing this:\n  K (dist x0 y0) = 2 ^ N (dist x0 y0)\n\ngoal (1 subgoal):\n 1. f (dist x0 y0) = y0", "unfolding f_def"], ["proof (prove)\nusing this:\n  K (dist x0 y0) = 2 ^ N (dist x0 y0)\n\ngoal (1 subgoal):\n 1. geod (N (dist x0 y0)) (K (dist x0 y0)) = y0", "using geod_end"], ["proof (prove)\nusing this:\n  K (dist x0 y0) = 2 ^ N (dist x0 y0)\n  geod ?n (2 ^ ?n) = y0\n\ngoal (1 subgoal):\n 1. geod (N (dist x0 y0)) (K (dist x0 y0)) = y0", "by auto"], ["proof (state)\nthis:\n  f (dist x0 y0) = y0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f (dist x0 y0) = y0\n\ngoal (1 subgoal):\n 1. x0 \\<noteq> y0 \\<Longrightarrow>\n    \\<exists>g.\n       isometry_on {0..dist x0 y0} g \\<and>\n       g 0 = x0 \\<and> g (dist x0 y0) = y0", "text \\<open>By construction, it is an isometry on dyadic points.\\<close>"], ["proof (state)\nthis:\n  f (dist x0 y0) = y0\n\ngoal (1 subgoal):\n 1. x0 \\<noteq> y0 \\<Longrightarrow>\n    \\<exists>g.\n       isometry_on {0..dist x0 y0} g \\<and>\n       g 0 = x0 \\<and> g (dist x0 y0) = y0", "have \"isometry_on A f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isometry_on A f", "proof (rule isometry_onI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> dist (f x) (f y) = dist x y", "fix s t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> dist (f x) (f y) = dist x y", "assume inA: \"s \\<in> A\" \"t \\<in> A\""], ["proof (state)\nthis:\n  s \\<in> A\n  t \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> dist (f x) (f y) = dist x y", "have \"dist (f s) (f t) = abs (K t/2^(N t) - K s/2^(N s)) * dist x0 y0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (f s) (f t) =\n    \\<bar>real (K t) / 2 ^ N t - real (K s) / 2 ^ N s\\<bar> * dist x0 y0", "unfolding f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (geod (N s) (K s)) (geod (N t) (K t)) =\n    \\<bar>real (K t) / 2 ^ N t - real (K s) / 2 ^ N s\\<bar> * dist x0 y0", "apply (rule geod_dist3)"], ["proof (prove)\ngoal (2 subgoals):\n 1. K s \\<le> 2 ^ N s\n 2. K t \\<le> 2 ^ N t", "using t inA"], ["proof (prove)\nusing this:\n  ?t \\<in> A \\<Longrightarrow>\n  ?t = real (K ?t) / 2 ^ N ?t * dist x0 y0 \\<and> K ?t \\<le> 2 ^ N ?t\n  s \\<in> A\n  t \\<in> A\n\ngoal (2 subgoals):\n 1. K s \\<le> 2 ^ N s\n 2. K t \\<le> 2 ^ N t", "by auto"], ["proof (state)\nthis:\n  dist (f s) (f t) =\n  \\<bar>real (K t) / 2 ^ N t - real (K s) / 2 ^ N s\\<bar> * dist x0 y0\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> dist (f x) (f y) = dist x y", "also"], ["proof (state)\nthis:\n  dist (f s) (f t) =\n  \\<bar>real (K t) / 2 ^ N t - real (K s) / 2 ^ N s\\<bar> * dist x0 y0\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> dist (f x) (f y) = dist x y", "have \"... = abs(K t/2^(N t) * dist x0 y0 - K s/2^(N s) * dist x0 y0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>real (K t) / 2 ^ N t - real (K s) / 2 ^ N s\\<bar> * dist x0 y0 =\n    \\<bar>real (K t) / 2 ^ N t * dist x0 y0 -\n          real (K s) / 2 ^ N s * dist x0 y0\\<bar>", "by (auto simp add: abs_mult_pos left_diff_distrib)"], ["proof (state)\nthis:\n  \\<bar>real (K t) / 2 ^ N t - real (K s) / 2 ^ N s\\<bar> * dist x0 y0 =\n  \\<bar>real (K t) / 2 ^ N t * dist x0 y0 -\n        real (K s) / 2 ^ N s * dist x0 y0\\<bar>\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> dist (f x) (f y) = dist x y", "also"], ["proof (state)\nthis:\n  \\<bar>real (K t) / 2 ^ N t - real (K s) / 2 ^ N s\\<bar> * dist x0 y0 =\n  \\<bar>real (K t) / 2 ^ N t * dist x0 y0 -\n        real (K s) / 2 ^ N s * dist x0 y0\\<bar>\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> dist (f x) (f y) = dist x y", "have \"... = abs(t - s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>real (K t) / 2 ^ N t * dist x0 y0 -\n          real (K s) / 2 ^ N s * dist x0 y0\\<bar> =\n    \\<bar>t - s\\<bar>", "using t inA"], ["proof (prove)\nusing this:\n  ?t \\<in> A \\<Longrightarrow>\n  ?t = real (K ?t) / 2 ^ N ?t * dist x0 y0 \\<and> K ?t \\<le> 2 ^ N ?t\n  s \\<in> A\n  t \\<in> A\n\ngoal (1 subgoal):\n 1. \\<bar>real (K t) / 2 ^ N t * dist x0 y0 -\n          real (K s) / 2 ^ N s * dist x0 y0\\<bar> =\n    \\<bar>t - s\\<bar>", "by auto"], ["proof (state)\nthis:\n  \\<bar>real (K t) / 2 ^ N t * dist x0 y0 -\n        real (K s) / 2 ^ N s * dist x0 y0\\<bar> =\n  \\<bar>t - s\\<bar>\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> dist (f x) (f y) = dist x y", "finally"], ["proof (chain)\npicking this:\n  dist (f s) (f t) = \\<bar>t - s\\<bar>", "show \"dist (f s) (f t) = dist s t\""], ["proof (prove)\nusing this:\n  dist (f s) (f t) = \\<bar>t - s\\<bar>\n\ngoal (1 subgoal):\n 1. dist (f s) (f t) = dist s t", "unfolding dist_real_def"], ["proof (prove)\nusing this:\n  dist (f s) (f t) = \\<bar>t - s\\<bar>\n\ngoal (1 subgoal):\n 1. dist (f s) (f t) = \\<bar>s - t\\<bar>", "by auto"], ["proof (state)\nthis:\n  dist (f s) (f t) = dist s t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  isometry_on A f\n\ngoal (1 subgoal):\n 1. x0 \\<noteq> y0 \\<Longrightarrow>\n    \\<exists>g.\n       isometry_on {0..dist x0 y0} g \\<and>\n       g 0 = x0 \\<and> g (dist x0 y0) = y0", "text \\<open>We can thus extend it to an isometry on the closure of dyadic points.\n  It is the desired geodesic.\\<close>"], ["proof (state)\nthis:\n  isometry_on A f\n\ngoal (1 subgoal):\n 1. x0 \\<noteq> y0 \\<Longrightarrow>\n    \\<exists>g.\n       isometry_on {0..dist x0 y0} g \\<and>\n       g 0 = x0 \\<and> g (dist x0 y0) = y0", "then"], ["proof (chain)\npicking this:\n  isometry_on A f", "obtain g where g: \"isometry_on (closure A) g\" \"\\<And>t. t \\<in> A \\<Longrightarrow> g t = f t\""], ["proof (prove)\nusing this:\n  isometry_on A f\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>isometry_on (closure A) g;\n         \\<And>t. t \\<in> A \\<Longrightarrow> g t = f t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using isometry_extend_closure"], ["proof (prove)\nusing this:\n  isometry_on A f\n  isometry_on ?X ?f \\<Longrightarrow>\n  \\<exists>g.\n     isometry_on (closure ?X) g \\<and> (\\<forall>x\\<in>?X. g x = ?f x)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>isometry_on (closure A) g;\n         \\<And>t. t \\<in> A \\<Longrightarrow> g t = f t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  isometry_on (closure A) g\n  ?t \\<in> A \\<Longrightarrow> g ?t = f ?t\n\ngoal (1 subgoal):\n 1. x0 \\<noteq> y0 \\<Longrightarrow>\n    \\<exists>g.\n       isometry_on {0..dist x0 y0} g \\<and>\n       g 0 = x0 \\<and> g (dist x0 y0) = y0", "have \"isometry_on {0..dist x0 y0} g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isometry_on {0..dist x0 y0} g", "by (rule isometry_on_subset[OF \\<open>isometry_on (closure A) g\\<close> \\<open>{0..dist x0 y0} \\<subseteq> closure A\\<close>])"], ["proof (state)\nthis:\n  isometry_on {0..dist x0 y0} g\n\ngoal (1 subgoal):\n 1. x0 \\<noteq> y0 \\<Longrightarrow>\n    \\<exists>g.\n       isometry_on {0..dist x0 y0} g \\<and>\n       g 0 = x0 \\<and> g (dist x0 y0) = y0", "moreover"], ["proof (state)\nthis:\n  isometry_on {0..dist x0 y0} g\n\ngoal (1 subgoal):\n 1. x0 \\<noteq> y0 \\<Longrightarrow>\n    \\<exists>g.\n       isometry_on {0..dist x0 y0} g \\<and>\n       g 0 = x0 \\<and> g (dist x0 y0) = y0", "have \"g 0 = x0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g 0 = x0", "using g(2)[OF \\<open>0 \\<in> A\\<close>] \\<open>f 0 = x0\\<close>"], ["proof (prove)\nusing this:\n  g 0 = f 0\n  f 0 = x0\n\ngoal (1 subgoal):\n 1. g 0 = x0", "by simp"], ["proof (state)\nthis:\n  g 0 = x0\n\ngoal (1 subgoal):\n 1. x0 \\<noteq> y0 \\<Longrightarrow>\n    \\<exists>g.\n       isometry_on {0..dist x0 y0} g \\<and>\n       g 0 = x0 \\<and> g (dist x0 y0) = y0", "moreover"], ["proof (state)\nthis:\n  g 0 = x0\n\ngoal (1 subgoal):\n 1. x0 \\<noteq> y0 \\<Longrightarrow>\n    \\<exists>g.\n       isometry_on {0..dist x0 y0} g \\<and>\n       g 0 = x0 \\<and> g (dist x0 y0) = y0", "have \"g (dist x0 y0) = y0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (dist x0 y0) = y0", "using g(2)[OF \\<open>dist x0 y0 \\<in> A\\<close>] \\<open>f (dist x0 y0) = y0\\<close>"], ["proof (prove)\nusing this:\n  g (dist x0 y0) = f (dist x0 y0)\n  f (dist x0 y0) = y0\n\ngoal (1 subgoal):\n 1. g (dist x0 y0) = y0", "by simp"], ["proof (state)\nthis:\n  g (dist x0 y0) = y0\n\ngoal (1 subgoal):\n 1. x0 \\<noteq> y0 \\<Longrightarrow>\n    \\<exists>g.\n       isometry_on {0..dist x0 y0} g \\<and>\n       g 0 = x0 \\<and> g (dist x0 y0) = y0", "ultimately"], ["proof (chain)\npicking this:\n  isometry_on {0..dist x0 y0} g\n  g 0 = x0\n  g (dist x0 y0) = y0", "show ?thesis"], ["proof (prove)\nusing this:\n  isometry_on {0..dist x0 y0} g\n  g 0 = x0\n  g (dist x0 y0) = y0\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       isometry_on {0..dist x0 y0} g \\<and>\n       g 0 = x0 \\<and> g (dist x0 y0) = y0", "by auto"], ["proof (state)\nthis:\n  \\<exists>g.\n     isometry_on {0..dist x0 y0} g \\<and>\n     g 0 = x0 \\<and> g (dist x0 y0) = y0\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "text \\<open>We can now complete the proof that a complete space with middles is in fact geodesic:\nall the work has been done in the locale \\verb+complete_space_with_middle+, in Lemma~\\verb+geod+.\\<close>"], ["", "theorem complete_with_middles_imp_geodesic:\n  assumes \"\\<And>x y::('a::complete_space). \\<exists>m. dist x m = dist x y /2 \\<and> dist m y = dist x y /2\"\n  shows \"OFCLASS('a, geodesic_space_class)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a, geodesic_space_class)", "proof (standard, rule geodesic_subsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<exists>G.\n                            geodesic_segment_between G x y \\<and>\n                            G \\<subseteq> UNIV", "fix x0 y0::'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<exists>G.\n                            geodesic_segment_between G x y \\<and>\n                            G \\<subseteq> UNIV", "interpret complete_space_with_middle x0 y0"], ["proof (prove)\ngoal (1 subgoal):\n 1. complete_space_with_middle TYPE('a)", "apply standard"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<exists>z. dist x z = dist x y / 2 \\<and> dist z y = dist x y / 2", "using assms"], ["proof (prove)\nusing this:\n  \\<exists>m. dist ?x m = dist ?x ?y / 2 \\<and> dist m ?y = dist ?x ?y / 2\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<exists>z. dist x z = dist x y / 2 \\<and> dist z y = dist x y / 2", "by auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<exists>G.\n                            geodesic_segment_between G x y \\<and>\n                            G \\<subseteq> UNIV", "have \"\\<exists>g. g 0 = x0 \\<and> g (dist x0 y0) = y0 \\<and> isometry_on {0..dist x0 y0} g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>g.\n       g 0 = x0 \\<and>\n       g (dist x0 y0) = y0 \\<and> isometry_on {0..dist x0 y0} g", "using geod"], ["proof (prove)\nusing this:\n  \\<exists>g.\n     isometry_on {0..dist x0 y0} g \\<and>\n     g 0 = x0 \\<and> g (dist x0 y0) = y0\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       g 0 = x0 \\<and>\n       g (dist x0 y0) = y0 \\<and> isometry_on {0..dist x0 y0} g", "by auto"], ["proof (state)\nthis:\n  \\<exists>g.\n     g 0 = x0 \\<and>\n     g (dist x0 y0) = y0 \\<and> isometry_on {0..dist x0 y0} g\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<exists>G.\n                            geodesic_segment_between G x y \\<and>\n                            G \\<subseteq> UNIV", "then"], ["proof (chain)\npicking this:\n  \\<exists>g.\n     g 0 = x0 \\<and>\n     g (dist x0 y0) = y0 \\<and> isometry_on {0..dist x0 y0} g", "show \"\\<exists>G. geodesic_segment_between G x0 y0 \\<and> G \\<subseteq> UNIV\""], ["proof (prove)\nusing this:\n  \\<exists>g.\n     g 0 = x0 \\<and>\n     g (dist x0 y0) = y0 \\<and> isometry_on {0..dist x0 y0} g\n\ngoal (1 subgoal):\n 1. \\<exists>G. geodesic_segment_between G x0 y0 \\<and> G \\<subseteq> UNIV", "unfolding geodesic_segment_between_def"], ["proof (prove)\nusing this:\n  \\<exists>g.\n     g 0 = x0 \\<and>\n     g (dist x0 y0) = y0 \\<and> isometry_on {0..dist x0 y0} g\n\ngoal (1 subgoal):\n 1. \\<exists>G.\n       (\\<exists>g.\n           g 0 = x0 \\<and>\n           g (dist x0 y0) = y0 \\<and>\n           isometry_on {0..dist x0 y0} g \\<and>\n           G = g ` {0..dist x0 y0}) \\<and>\n       G \\<subseteq> UNIV", "by auto"], ["proof (state)\nthis:\n  \\<exists>G. geodesic_segment_between G x0 y0 \\<and> G \\<subseteq> UNIV\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>Quasi-isometries\\<close>"], ["", "text \\<open>A $(\\lambda, C)$ quasi-isometry is a function which behaves like an isometry, up to\nan additive error $C$ and a multiplicative error $\\lambda$. It can be very different from an\nisometry on small scales (for instance, the function integer part is a quasi-isometry between\n$\\mathbb{R}$ and $\\mathbb{Z}$), but on large scales it captures many important features of\nisometries.\n\nWhen the space is unbounded, one checks easily that $C \\geq 0$ and $\\lambda \\geq 1$. As this\nis the only case of interest (any two bounded sets are quasi-isometric), we incorporate\nthis requirement in the definition.\\<close>"], ["", "definition quasi_isometry_on::\"real \\<Rightarrow> real \\<Rightarrow> ('a::metric_space) set \\<Rightarrow> ('a \\<Rightarrow> ('b::metric_space)) \\<Rightarrow> bool\"\n  (\"_ _ -quasi'_isometry'_on\" [1000, 999])\n  where \"lambda C-quasi_isometry_on X f = ((lambda \\<ge> 1) \\<and> (C \\<ge> 0) \\<and>\n    (\\<forall>x \\<in> X. \\<forall>y \\<in> X. (dist (f x) (f y) \\<le> lambda * dist x y + C \\<and> dist (f x) (f y) \\<ge> (1/lambda) * dist x y - C)))\""], ["", "abbreviation quasi_isometry :: \"real \\<Rightarrow> real \\<Rightarrow> ('a::metric_space \\<Rightarrow> 'b::metric_space) \\<Rightarrow> bool\"\n  (\"_ _ -quasi'_isometry\" [1000, 999])\n  where \"quasi_isometry lambda C f \\<equiv> lambda C-quasi_isometry_on UNIV f\""], ["", "subsection \\<open>Basic properties of quasi-isometries\\<close>"], ["", "lemma quasi_isometry_onD:\n  assumes \"lambda C-quasi_isometry_on X f\"\n  shows \"\\<And>x y. x \\<in> X \\<Longrightarrow> y \\<in> X \\<Longrightarrow> dist (f x) (f y) \\<le> lambda * dist x y + C\"\n        \"\\<And>x y. x \\<in> X \\<Longrightarrow> y \\<in> X \\<Longrightarrow> dist (f x) (f y) \\<ge> (1/lambda) * dist x y - C\"\n        \"lambda \\<ge> 1\" \"C \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<And>x y.\n         \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n         \\<Longrightarrow> dist (f x) (f y) \\<le> lambda * dist x y + C) &&&\n     (\\<And>x y.\n         \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n         \\<Longrightarrow> 1 / lambda * dist x y - C\n                           \\<le> dist (f x) (f y))) &&&\n    1 \\<le> lambda &&& 0 \\<le> C", "using assms"], ["proof (prove)\nusing this:\n  lambda C -quasi_isometry_on X f\n\ngoal (1 subgoal):\n 1. ((\\<And>x y.\n         \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n         \\<Longrightarrow> dist (f x) (f y) \\<le> lambda * dist x y + C) &&&\n     (\\<And>x y.\n         \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n         \\<Longrightarrow> 1 / lambda * dist x y - C\n                           \\<le> dist (f x) (f y))) &&&\n    1 \\<le> lambda &&& 0 \\<le> C", "unfolding quasi_isometry_on_def"], ["proof (prove)\nusing this:\n  1 \\<le> lambda \\<and>\n  0 \\<le> C \\<and>\n  (\\<forall>x\\<in>X.\n      \\<forall>y\\<in>X.\n         dist (f x) (f y) \\<le> lambda * dist x y + C \\<and>\n         1 / lambda * dist x y - C \\<le> dist (f x) (f y))\n\ngoal (1 subgoal):\n 1. ((\\<And>x y.\n         \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n         \\<Longrightarrow> dist (f x) (f y) \\<le> lambda * dist x y + C) &&&\n     (\\<And>x y.\n         \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n         \\<Longrightarrow> 1 / lambda * dist x y - C\n                           \\<le> dist (f x) (f y))) &&&\n    1 \\<le> lambda &&& 0 \\<le> C", "by auto"], ["", "lemma quasi_isometry_onI [intro]:\n  assumes \"\\<And>x y. x \\<in> X \\<Longrightarrow> y \\<in> X \\<Longrightarrow> dist (f x) (f y) \\<le> lambda * dist x y + C\"\n          \"\\<And>x y. x \\<in> X \\<Longrightarrow> y \\<in> X \\<Longrightarrow> dist (f x) (f y) \\<ge> (1/lambda) * dist x y - C\"\n          \"lambda \\<ge> 1\" \"C \\<ge> 0\"\n  shows \"lambda C-quasi_isometry_on X f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda C -quasi_isometry_on X f", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> X; ?y \\<in> X\\<rbrakk>\n  \\<Longrightarrow> dist (f ?x) (f ?y) \\<le> lambda * dist ?x ?y + C\n  \\<lbrakk>?x \\<in> X; ?y \\<in> X\\<rbrakk>\n  \\<Longrightarrow> 1 / lambda * dist ?x ?y - C \\<le> dist (f ?x) (f ?y)\n  1 \\<le> lambda\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. lambda C -quasi_isometry_on X f", "unfolding quasi_isometry_on_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> X; ?y \\<in> X\\<rbrakk>\n  \\<Longrightarrow> dist (f ?x) (f ?y) \\<le> lambda * dist ?x ?y + C\n  \\<lbrakk>?x \\<in> X; ?y \\<in> X\\<rbrakk>\n  \\<Longrightarrow> 1 / lambda * dist ?x ?y - C \\<le> dist (f ?x) (f ?y)\n  1 \\<le> lambda\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. 1 \\<le> lambda \\<and>\n    0 \\<le> C \\<and>\n    (\\<forall>x\\<in>X.\n        \\<forall>y\\<in>X.\n           dist (f x) (f y) \\<le> lambda * dist x y + C \\<and>\n           1 / lambda * dist x y - C \\<le> dist (f x) (f y))", "by auto"], ["", "lemma isometry_quasi_isometry_on:\n  assumes \"isometry_on X f\"\n  shows \"1 0-quasi_isometry_on X f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 0 -quasi_isometry_on X f", "using assms"], ["proof (prove)\nusing this:\n  isometry_on X f\n\ngoal (1 subgoal):\n 1. 1 0 -quasi_isometry_on X f", "unfolding isometry_on_def quasi_isometry_on_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>X. \\<forall>y\\<in>X. dist (f x) (f y) = dist x y\n\ngoal (1 subgoal):\n 1. 1 \\<le> 1 \\<and>\n    0 \\<le> 0 \\<and>\n    (\\<forall>x\\<in>X.\n        \\<forall>y\\<in>X.\n           dist (f x) (f y) \\<le> 1 * dist x y + 0 \\<and>\n           1 / 1 * dist x y - 0 \\<le> dist (f x) (f y))", "by auto"], ["", "lemma quasi_isometry_on_change_params:\n  assumes \"lambda C-quasi_isometry_on X f\" \"mu \\<ge> lambda\" \"D \\<ge> C\"\n  shows \"mu D-quasi_isometry_on X f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mu D -quasi_isometry_on X f", "proof (rule quasi_isometry_onI)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> dist (f x) (f y) \\<le> mu * dist x y + D\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / mu * dist x y - D \\<le> dist (f x) (f y)\n 3. 1 \\<le> mu\n 4. 0 \\<le> D", "have P1: \"lambda \\<ge> 1\" \"C \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> lambda &&& 0 \\<le> C", "using quasi_isometry_onD[OF assms(1)]"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> X; ?y \\<in> X\\<rbrakk>\n  \\<Longrightarrow> dist (f ?x) (f ?y) \\<le> lambda * dist ?x ?y + C\n  \\<lbrakk>?x \\<in> X; ?y \\<in> X\\<rbrakk>\n  \\<Longrightarrow> 1 / lambda * dist ?x ?y - C \\<le> dist (f ?x) (f ?y)\n  1 \\<le> lambda\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. 1 \\<le> lambda &&& 0 \\<le> C", "by auto"], ["proof (state)\nthis:\n  1 \\<le> lambda\n  0 \\<le> C\n\ngoal (4 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> dist (f x) (f y) \\<le> mu * dist x y + D\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / mu * dist x y - D \\<le> dist (f x) (f y)\n 3. 1 \\<le> mu\n 4. 0 \\<le> D", "then"], ["proof (chain)\npicking this:\n  1 \\<le> lambda\n  0 \\<le> C", "show P2: \"mu \\<ge> 1\" \"D \\<ge> 0\""], ["proof (prove)\nusing this:\n  1 \\<le> lambda\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. 1 \\<le> mu &&& 0 \\<le> D", "using assms"], ["proof (prove)\nusing this:\n  1 \\<le> lambda\n  0 \\<le> C\n  lambda C -quasi_isometry_on X f\n  lambda \\<le> mu\n  C \\<le> D\n\ngoal (1 subgoal):\n 1. 1 \\<le> mu &&& 0 \\<le> D", "by auto"], ["proof (state)\nthis:\n  1 \\<le> mu\n  0 \\<le> D\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> dist (f x) (f y) \\<le> mu * dist x y + D\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / mu * dist x y - D \\<le> dist (f x) (f y)", "fix x y"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> dist (f x) (f y) \\<le> mu * dist x y + D\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / mu * dist x y - D \\<le> dist (f x) (f y)", "assume inX: \"x \\<in> X\" \"y \\<in> X\""], ["proof (state)\nthis:\n  x \\<in> X\n  y \\<in> X\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> dist (f x) (f y) \\<le> mu * dist x y + D\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / mu * dist x y - D \\<le> dist (f x) (f y)", "have \"dist (f x) (f y) \\<le> lambda * dist x y + C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (f x) (f y) \\<le> lambda * dist x y + C", "using quasi_isometry_onD[OF assms(1)] inX"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> X; ?y \\<in> X\\<rbrakk>\n  \\<Longrightarrow> dist (f ?x) (f ?y) \\<le> lambda * dist ?x ?y + C\n  \\<lbrakk>?x \\<in> X; ?y \\<in> X\\<rbrakk>\n  \\<Longrightarrow> 1 / lambda * dist ?x ?y - C \\<le> dist (f ?x) (f ?y)\n  1 \\<le> lambda\n  0 \\<le> C\n  x \\<in> X\n  y \\<in> X\n\ngoal (1 subgoal):\n 1. dist (f x) (f y) \\<le> lambda * dist x y + C", "by auto"], ["proof (state)\nthis:\n  dist (f x) (f y) \\<le> lambda * dist x y + C\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> dist (f x) (f y) \\<le> mu * dist x y + D\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / mu * dist x y - D \\<le> dist (f x) (f y)", "also"], ["proof (state)\nthis:\n  dist (f x) (f y) \\<le> lambda * dist x y + C\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> dist (f x) (f y) \\<le> mu * dist x y + D\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / mu * dist x y - D \\<le> dist (f x) (f y)", "have \"... \\<le> mu * dist x y + D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda * dist x y + C \\<le> mu * dist x y + D", "using assms"], ["proof (prove)\nusing this:\n  lambda C -quasi_isometry_on X f\n  lambda \\<le> mu\n  C \\<le> D\n\ngoal (1 subgoal):\n 1. lambda * dist x y + C \\<le> mu * dist x y + D", "by (auto intro!: mono_intros)"], ["proof (state)\nthis:\n  lambda * dist x y + C \\<le> mu * dist x y + D\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> dist (f x) (f y) \\<le> mu * dist x y + D\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / mu * dist x y - D \\<le> dist (f x) (f y)", "finally"], ["proof (chain)\npicking this:\n  dist (f x) (f y) \\<le> mu * dist x y + D", "show \"dist (f x) (f y) \\<le> mu * dist x y + D\""], ["proof (prove)\nusing this:\n  dist (f x) (f y) \\<le> mu * dist x y + D\n\ngoal (1 subgoal):\n 1. dist (f x) (f y) \\<le> mu * dist x y + D", "by simp"], ["proof (state)\nthis:\n  dist (f x) (f y) \\<le> mu * dist x y + D\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / mu * dist x y - D \\<le> dist (f x) (f y)", "have \"dist (f x) (f y) \\<ge> (1/lambda) * dist x y - C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - C \\<le> dist (f x) (f y)", "using quasi_isometry_onD[OF assms(1)] inX"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> X; ?y \\<in> X\\<rbrakk>\n  \\<Longrightarrow> dist (f ?x) (f ?y) \\<le> lambda * dist ?x ?y + C\n  \\<lbrakk>?x \\<in> X; ?y \\<in> X\\<rbrakk>\n  \\<Longrightarrow> 1 / lambda * dist ?x ?y - C \\<le> dist (f ?x) (f ?y)\n  1 \\<le> lambda\n  0 \\<le> C\n  x \\<in> X\n  y \\<in> X\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - C \\<le> dist (f x) (f y)", "by auto"], ["proof (state)\nthis:\n  1 / lambda * dist x y - C \\<le> dist (f x) (f y)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / mu * dist x y - D \\<le> dist (f x) (f y)", "moreover"], ["proof (state)\nthis:\n  1 / lambda * dist x y - C \\<le> dist (f x) (f y)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / mu * dist x y - D \\<le> dist (f x) (f y)", "have \"(1/lambda) * dist x y + (- C) \\<ge> (1/mu) * dist x y + (- D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / mu * dist x y + - D \\<le> 1 / lambda * dist x y + - C", "apply (intro mono_intros)"], ["proof (prove)\ngoal (3 subgoals):\n 1. 1 / mu \\<le> 1 / lambda\n 2. 0 \\<le> dist x y\n 3. C \\<le> D", "using P1 P2 assms"], ["proof (prove)\nusing this:\n  1 \\<le> lambda\n  0 \\<le> C\n  1 \\<le> mu\n  0 \\<le> D\n  lambda C -quasi_isometry_on X f\n  lambda \\<le> mu\n  C \\<le> D\n\ngoal (3 subgoals):\n 1. 1 / mu \\<le> 1 / lambda\n 2. 0 \\<le> dist x y\n 3. C \\<le> D", "by (auto simp add: divide_simps)"], ["proof (state)\nthis:\n  1 / mu * dist x y + - D \\<le> 1 / lambda * dist x y + - C\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / mu * dist x y - D \\<le> dist (f x) (f y)", "ultimately"], ["proof (chain)\npicking this:\n  1 / lambda * dist x y - C \\<le> dist (f x) (f y)\n  1 / mu * dist x y + - D \\<le> 1 / lambda * dist x y + - C", "show \"dist (f x) (f y) \\<ge> (1/mu) * dist x y - D\""], ["proof (prove)\nusing this:\n  1 / lambda * dist x y - C \\<le> dist (f x) (f y)\n  1 / mu * dist x y + - D \\<le> 1 / lambda * dist x y + - C\n\ngoal (1 subgoal):\n 1. 1 / mu * dist x y - D \\<le> dist (f x) (f y)", "by simp"], ["proof (state)\nthis:\n  1 / mu * dist x y - D \\<le> dist (f x) (f y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma quasi_isometry_on_subset:\n  assumes \"lambda C-quasi_isometry_on X f\"\n          \"Y \\<subseteq> X\"\n  shows \"lambda C-quasi_isometry_on Y f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda C -quasi_isometry_on Y f", "using assms"], ["proof (prove)\nusing this:\n  lambda C -quasi_isometry_on X f\n  Y \\<subseteq> X\n\ngoal (1 subgoal):\n 1. lambda C -quasi_isometry_on Y f", "unfolding quasi_isometry_on_def"], ["proof (prove)\nusing this:\n  1 \\<le> lambda \\<and>\n  0 \\<le> C \\<and>\n  (\\<forall>x\\<in>X.\n      \\<forall>y\\<in>X.\n         dist (f x) (f y) \\<le> lambda * dist x y + C \\<and>\n         1 / lambda * dist x y - C \\<le> dist (f x) (f y))\n  Y \\<subseteq> X\n\ngoal (1 subgoal):\n 1. 1 \\<le> lambda \\<and>\n    0 \\<le> C \\<and>\n    (\\<forall>x\\<in>Y.\n        \\<forall>y\\<in>Y.\n           dist (f x) (f y) \\<le> lambda * dist x y + C \\<and>\n           1 / lambda * dist x y - C \\<le> dist (f x) (f y))", "by auto"], ["", "lemma quasi_isometry_on_perturb:\n  assumes \"lambda C-quasi_isometry_on X f\"\n          \"D \\<ge> 0\"\n          \"\\<And>x. x \\<in> X \\<Longrightarrow> dist (f x) (g x) \\<le> D\"\n  shows \"lambda (C + 2 * D)-quasi_isometry_on X g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda (C + 2 * D) -quasi_isometry_on X g", "proof (rule quasi_isometry_onI)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> dist (g x) (g y)\n                         \\<le> lambda * dist x y + (C + 2 * D)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / lambda * dist x y - (C + 2 * D)\n                         \\<le> dist (g x) (g y)\n 3. 1 \\<le> lambda\n 4. 0 \\<le> C + 2 * D", "show \"lambda \\<ge> 1\" \"C + 2 * D \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> lambda &&& 0 \\<le> C + 2 * D", "using \\<open>D \\<ge> 0\\<close> quasi_isometry_onD[OF assms(1)]"], ["proof (prove)\nusing this:\n  0 \\<le> D\n  \\<lbrakk>?x \\<in> X; ?y \\<in> X\\<rbrakk>\n  \\<Longrightarrow> dist (f ?x) (f ?y) \\<le> lambda * dist ?x ?y + C\n  \\<lbrakk>?x \\<in> X; ?y \\<in> X\\<rbrakk>\n  \\<Longrightarrow> 1 / lambda * dist ?x ?y - C \\<le> dist (f ?x) (f ?y)\n  1 \\<le> lambda\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. 1 \\<le> lambda &&& 0 \\<le> C + 2 * D", "by auto"], ["proof (state)\nthis:\n  1 \\<le> lambda\n  0 \\<le> C + 2 * D\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> dist (g x) (g y)\n                         \\<le> lambda * dist x y + (C + 2 * D)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / lambda * dist x y - (C + 2 * D)\n                         \\<le> dist (g x) (g y)", "fix x y"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> dist (g x) (g y)\n                         \\<le> lambda * dist x y + (C + 2 * D)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / lambda * dist x y - (C + 2 * D)\n                         \\<le> dist (g x) (g y)", "assume *: \"x \\<in> X\" \"y \\<in> X\""], ["proof (state)\nthis:\n  x \\<in> X\n  y \\<in> X\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> dist (g x) (g y)\n                         \\<le> lambda * dist x y + (C + 2 * D)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / lambda * dist x y - (C + 2 * D)\n                         \\<le> dist (g x) (g y)", "have \"dist (g x) (g y) \\<le> dist (f x) (f y) + 2 * D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (g x) (g y) \\<le> dist (f x) (f y) + 2 * D", "using assms(3)[OF *(1)] assms(3)[OF *(2)] dist_triangle4[of \"g x\" \"g y\" \"f x\" \"f y\"]"], ["proof (prove)\nusing this:\n  dist (f x) (g x) \\<le> D\n  dist (f y) (g y) \\<le> D\n  dist (g x) (g y)\n  \\<le> dist (g x) (f x) + dist (f x) (f y) + dist (f y) (g y)\n\ngoal (1 subgoal):\n 1. dist (g x) (g y) \\<le> dist (f x) (f y) + 2 * D", "by (simp add: dist_commute)"], ["proof (state)\nthis:\n  dist (g x) (g y) \\<le> dist (f x) (f y) + 2 * D\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> dist (g x) (g y)\n                         \\<le> lambda * dist x y + (C + 2 * D)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / lambda * dist x y - (C + 2 * D)\n                         \\<le> dist (g x) (g y)", "then"], ["proof (chain)\npicking this:\n  dist (g x) (g y) \\<le> dist (f x) (f y) + 2 * D", "show \"dist (g x) (g y) \\<le> lambda * dist x y + (C + 2 * D)\""], ["proof (prove)\nusing this:\n  dist (g x) (g y) \\<le> dist (f x) (f y) + 2 * D\n\ngoal (1 subgoal):\n 1. dist (g x) (g y) \\<le> lambda * dist x y + (C + 2 * D)", "using quasi_isometry_onD(1)[OF assms(1) *]"], ["proof (prove)\nusing this:\n  dist (g x) (g y) \\<le> dist (f x) (f y) + 2 * D\n  dist (f x) (f y) \\<le> lambda * dist x y + C\n\ngoal (1 subgoal):\n 1. dist (g x) (g y) \\<le> lambda * dist x y + (C + 2 * D)", "by auto"], ["proof (state)\nthis:\n  dist (g x) (g y) \\<le> lambda * dist x y + (C + 2 * D)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / lambda * dist x y - (C + 2 * D)\n                         \\<le> dist (g x) (g y)", "have \"dist (g x) (g y) \\<ge> dist (f x) (f y) - 2 * D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (f x) (f y) - 2 * D \\<le> dist (g x) (g y)", "using assms(3)[OF *(1)] assms(3)[OF *(2)] dist_triangle4[of \"f x\" \"f y\" \"g x\" \"g y\"]"], ["proof (prove)\nusing this:\n  dist (f x) (g x) \\<le> D\n  dist (f y) (g y) \\<le> D\n  dist (f x) (f y)\n  \\<le> dist (f x) (g x) + dist (g x) (g y) + dist (g y) (f y)\n\ngoal (1 subgoal):\n 1. dist (f x) (f y) - 2 * D \\<le> dist (g x) (g y)", "by (simp add: dist_commute)"], ["proof (state)\nthis:\n  dist (f x) (f y) - 2 * D \\<le> dist (g x) (g y)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / lambda * dist x y - (C + 2 * D)\n                         \\<le> dist (g x) (g y)", "then"], ["proof (chain)\npicking this:\n  dist (f x) (f y) - 2 * D \\<le> dist (g x) (g y)", "show \"dist (g x) (g y) \\<ge> (1/lambda) * dist x y - (C + 2 * D)\""], ["proof (prove)\nusing this:\n  dist (f x) (f y) - 2 * D \\<le> dist (g x) (g y)\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - (C + 2 * D) \\<le> dist (g x) (g y)", "using quasi_isometry_onD(2)[OF assms(1) *]"], ["proof (prove)\nusing this:\n  dist (f x) (f y) - 2 * D \\<le> dist (g x) (g y)\n  1 / lambda * dist x y - C \\<le> dist (f x) (f y)\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - (C + 2 * D) \\<le> dist (g x) (g y)", "by auto"], ["proof (state)\nthis:\n  1 / lambda * dist x y - (C + 2 * D) \\<le> dist (g x) (g y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma quasi_isometry_on_compose:\n  assumes \"lambda C-quasi_isometry_on X f\"\n          \"mu D-quasi_isometry_on Y g\"\n          \"f`X \\<subseteq> Y\"\n  shows \"(lambda * mu) (C * mu + D)-quasi_isometry_on X (g o f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (lambda * mu) (C * mu + D) -quasi_isometry_on X (g \\<circ> f)", "proof (rule quasi_isometry_onI)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> dist ((g \\<circ> f) x) ((g \\<circ> f) y)\n                         \\<le> lambda * mu * dist x y + (C * mu + D)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / (lambda * mu) * dist x y - (C * mu + D)\n                         \\<le> dist ((g \\<circ> f) x) ((g \\<circ> f) y)\n 3. 1 \\<le> lambda * mu\n 4. 0 \\<le> C * mu + D", "have I: \"lambda \\<ge> 1\" \"C \\<ge> 0\" \"mu \\<ge> 1\" \"D \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 \\<le> lambda &&& 0 \\<le> C) &&& 1 \\<le> mu &&& 0 \\<le> D", "using quasi_isometry_onD[OF assms(1)] quasi_isometry_onD[OF assms(2)]"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> X; ?y \\<in> X\\<rbrakk>\n  \\<Longrightarrow> dist (f ?x) (f ?y) \\<le> lambda * dist ?x ?y + C\n  \\<lbrakk>?x \\<in> X; ?y \\<in> X\\<rbrakk>\n  \\<Longrightarrow> 1 / lambda * dist ?x ?y - C \\<le> dist (f ?x) (f ?y)\n  1 \\<le> lambda\n  0 \\<le> C\n  \\<lbrakk>?x \\<in> Y; ?y \\<in> Y\\<rbrakk>\n  \\<Longrightarrow> dist (g ?x) (g ?y) \\<le> mu * dist ?x ?y + D\n  \\<lbrakk>?x \\<in> Y; ?y \\<in> Y\\<rbrakk>\n  \\<Longrightarrow> 1 / mu * dist ?x ?y - D \\<le> dist (g ?x) (g ?y)\n  1 \\<le> mu\n  0 \\<le> D\n\ngoal (1 subgoal):\n 1. (1 \\<le> lambda &&& 0 \\<le> C) &&& 1 \\<le> mu &&& 0 \\<le> D", "by auto"], ["proof (state)\nthis:\n  1 \\<le> lambda\n  0 \\<le> C\n  1 \\<le> mu\n  0 \\<le> D\n\ngoal (4 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> dist ((g \\<circ> f) x) ((g \\<circ> f) y)\n                         \\<le> lambda * mu * dist x y + (C * mu + D)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / (lambda * mu) * dist x y - (C * mu + D)\n                         \\<le> dist ((g \\<circ> f) x) ((g \\<circ> f) y)\n 3. 1 \\<le> lambda * mu\n 4. 0 \\<le> C * mu + D", "then"], ["proof (chain)\npicking this:\n  1 \\<le> lambda\n  0 \\<le> C\n  1 \\<le> mu\n  0 \\<le> D", "show \"lambda * mu \\<ge> 1\" \"C * mu + D \\<ge> 0\""], ["proof (prove)\nusing this:\n  1 \\<le> lambda\n  0 \\<le> C\n  1 \\<le> mu\n  0 \\<le> D\n\ngoal (1 subgoal):\n 1. 1 \\<le> lambda * mu &&& 0 \\<le> C * mu + D", "by (auto, metis dual_order.order_iff_strict le_numeral_extra(2) mult_le_cancel_right1 order.strict_trans1)"], ["proof (state)\nthis:\n  1 \\<le> lambda * mu\n  0 \\<le> C * mu + D\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> dist ((g \\<circ> f) x) ((g \\<circ> f) y)\n                         \\<le> lambda * mu * dist x y + (C * mu + D)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / (lambda * mu) * dist x y - (C * mu + D)\n                         \\<le> dist ((g \\<circ> f) x) ((g \\<circ> f) y)", "fix x y"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> dist ((g \\<circ> f) x) ((g \\<circ> f) y)\n                         \\<le> lambda * mu * dist x y + (C * mu + D)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / (lambda * mu) * dist x y - (C * mu + D)\n                         \\<le> dist ((g \\<circ> f) x) ((g \\<circ> f) y)", "assume inX: \"x \\<in> X\" \"y \\<in> X\""], ["proof (state)\nthis:\n  x \\<in> X\n  y \\<in> X\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> dist ((g \\<circ> f) x) ((g \\<circ> f) y)\n                         \\<le> lambda * mu * dist x y + (C * mu + D)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / (lambda * mu) * dist x y - (C * mu + D)\n                         \\<le> dist ((g \\<circ> f) x) ((g \\<circ> f) y)", "then"], ["proof (chain)\npicking this:\n  x \\<in> X\n  y \\<in> X", "have inY: \"f x \\<in> Y\" \"f y \\<in> Y\""], ["proof (prove)\nusing this:\n  x \\<in> X\n  y \\<in> X\n\ngoal (1 subgoal):\n 1. f x \\<in> Y &&& f y \\<in> Y", "using \\<open>f`X \\<subseteq> Y\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> X\n  y \\<in> X\n  f ` X \\<subseteq> Y\n\ngoal (1 subgoal):\n 1. f x \\<in> Y &&& f y \\<in> Y", "by auto"], ["proof (state)\nthis:\n  f x \\<in> Y\n  f y \\<in> Y\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> dist ((g \\<circ> f) x) ((g \\<circ> f) y)\n                         \\<le> lambda * mu * dist x y + (C * mu + D)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / (lambda * mu) * dist x y - (C * mu + D)\n                         \\<le> dist ((g \\<circ> f) x) ((g \\<circ> f) y)", "have \"dist ((g o f) x) ((g o f) y) \\<le> mu * dist (f x) (f y) + D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist ((g \\<circ> f) x) ((g \\<circ> f) y) \\<le> mu * dist (f x) (f y) + D", "using quasi_isometry_onD(1)[OF assms(2) inY]"], ["proof (prove)\nusing this:\n  dist (g (f x)) (g (f y)) \\<le> mu * dist (f x) (f y) + D\n\ngoal (1 subgoal):\n 1. dist ((g \\<circ> f) x) ((g \\<circ> f) y) \\<le> mu * dist (f x) (f y) + D", "by simp"], ["proof (state)\nthis:\n  dist ((g \\<circ> f) x) ((g \\<circ> f) y) \\<le> mu * dist (f x) (f y) + D\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> dist ((g \\<circ> f) x) ((g \\<circ> f) y)\n                         \\<le> lambda * mu * dist x y + (C * mu + D)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / (lambda * mu) * dist x y - (C * mu + D)\n                         \\<le> dist ((g \\<circ> f) x) ((g \\<circ> f) y)", "also"], ["proof (state)\nthis:\n  dist ((g \\<circ> f) x) ((g \\<circ> f) y) \\<le> mu * dist (f x) (f y) + D\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> dist ((g \\<circ> f) x) ((g \\<circ> f) y)\n                         \\<le> lambda * mu * dist x y + (C * mu + D)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / (lambda * mu) * dist x y - (C * mu + D)\n                         \\<le> dist ((g \\<circ> f) x) ((g \\<circ> f) y)", "have \"... \\<le> mu * (lambda * dist x y + C) + D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mu * dist (f x) (f y) + D \\<le> mu * (lambda * dist x y + C) + D", "using \\<open>mu \\<ge> 1\\<close> quasi_isometry_onD(1)[OF assms(1) inX]"], ["proof (prove)\nusing this:\n  1 \\<le> mu\n  dist (f x) (f y) \\<le> lambda * dist x y + C\n\ngoal (1 subgoal):\n 1. mu * dist (f x) (f y) + D \\<le> mu * (lambda * dist x y + C) + D", "by auto"], ["proof (state)\nthis:\n  mu * dist (f x) (f y) + D \\<le> mu * (lambda * dist x y + C) + D\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> dist ((g \\<circ> f) x) ((g \\<circ> f) y)\n                         \\<le> lambda * mu * dist x y + (C * mu + D)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / (lambda * mu) * dist x y - (C * mu + D)\n                         \\<le> dist ((g \\<circ> f) x) ((g \\<circ> f) y)", "finally"], ["proof (chain)\npicking this:\n  dist ((g \\<circ> f) x) ((g \\<circ> f) y)\n  \\<le> mu * (lambda * dist x y + C) + D", "show \"dist ((g o f) x) ((g o f) y) \\<le> (lambda * mu) * dist x y + (C * mu + D)\""], ["proof (prove)\nusing this:\n  dist ((g \\<circ> f) x) ((g \\<circ> f) y)\n  \\<le> mu * (lambda * dist x y + C) + D\n\ngoal (1 subgoal):\n 1. dist ((g \\<circ> f) x) ((g \\<circ> f) y)\n    \\<le> lambda * mu * dist x y + (C * mu + D)", "by (auto simp add: algebra_simps)"], ["proof (state)\nthis:\n  dist ((g \\<circ> f) x) ((g \\<circ> f) y)\n  \\<le> lambda * mu * dist x y + (C * mu + D)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / (lambda * mu) * dist x y - (C * mu + D)\n                         \\<le> dist ((g \\<circ> f) x) ((g \\<circ> f) y)", "have \"(1/(lambda * mu)) * dist x y - (C * mu + D) \\<le> (1/(lambda * mu)) * dist x y - (C/mu + D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / (lambda * mu) * dist x y - (C * mu + D)\n    \\<le> 1 / (lambda * mu) * dist x y - (C / mu + D)", "using \\<open>mu \\<ge> 1\\<close> \\<open>C \\<ge> 0\\<close>"], ["proof (prove)\nusing this:\n  1 \\<le> mu\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. 1 / (lambda * mu) * dist x y - (C * mu + D)\n    \\<le> 1 / (lambda * mu) * dist x y - (C / mu + D)", "apply (auto, auto simp add: divide_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> mu; 0 \\<le> C\\<rbrakk>\n    \\<Longrightarrow> C \\<le> C * mu * mu", "by (metis eq_iff less_eq_real_def mult.commute mult_eq_0_iff mult_le_cancel_right1 order.trans)"], ["proof (state)\nthis:\n  1 / (lambda * mu) * dist x y - (C * mu + D)\n  \\<le> 1 / (lambda * mu) * dist x y - (C / mu + D)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / (lambda * mu) * dist x y - (C * mu + D)\n                         \\<le> dist ((g \\<circ> f) x) ((g \\<circ> f) y)", "also"], ["proof (state)\nthis:\n  1 / (lambda * mu) * dist x y - (C * mu + D)\n  \\<le> 1 / (lambda * mu) * dist x y - (C / mu + D)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / (lambda * mu) * dist x y - (C * mu + D)\n                         \\<le> dist ((g \\<circ> f) x) ((g \\<circ> f) y)", "have \"... = (1/mu) * ((1/lambda) * dist x y - C) - D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / (lambda * mu) * dist x y - (C / mu + D) =\n    1 / mu * (1 / lambda * dist x y - C) - D", "by (auto simp add: algebra_simps)"], ["proof (state)\nthis:\n  1 / (lambda * mu) * dist x y - (C / mu + D) =\n  1 / mu * (1 / lambda * dist x y - C) - D\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / (lambda * mu) * dist x y - (C * mu + D)\n                         \\<le> dist ((g \\<circ> f) x) ((g \\<circ> f) y)", "also"], ["proof (state)\nthis:\n  1 / (lambda * mu) * dist x y - (C / mu + D) =\n  1 / mu * (1 / lambda * dist x y - C) - D\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / (lambda * mu) * dist x y - (C * mu + D)\n                         \\<le> dist ((g \\<circ> f) x) ((g \\<circ> f) y)", "have \"... \\<le> (1/mu) * dist (f x) (f y) - D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / mu * (1 / lambda * dist x y - C) - D\n    \\<le> 1 / mu * dist (f x) (f y) - D", "using \\<open>mu \\<ge> 1\\<close> quasi_isometry_onD(2)[OF assms(1) inX]"], ["proof (prove)\nusing this:\n  1 \\<le> mu\n  1 / lambda * dist x y - C \\<le> dist (f x) (f y)\n\ngoal (1 subgoal):\n 1. 1 / mu * (1 / lambda * dist x y - C) - D\n    \\<le> 1 / mu * dist (f x) (f y) - D", "by (auto simp add: divide_simps)"], ["proof (state)\nthis:\n  1 / mu * (1 / lambda * dist x y - C) - D\n  \\<le> 1 / mu * dist (f x) (f y) - D\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / (lambda * mu) * dist x y - (C * mu + D)\n                         \\<le> dist ((g \\<circ> f) x) ((g \\<circ> f) y)", "also"], ["proof (state)\nthis:\n  1 / mu * (1 / lambda * dist x y - C) - D\n  \\<le> 1 / mu * dist (f x) (f y) - D\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / (lambda * mu) * dist x y - (C * mu + D)\n                         \\<le> dist ((g \\<circ> f) x) ((g \\<circ> f) y)", "have \"... \\<le> dist ((g o f) x) ((g o f) y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / mu * dist (f x) (f y) - D\n    \\<le> dist ((g \\<circ> f) x) ((g \\<circ> f) y)", "using quasi_isometry_onD(2)[OF assms(2) inY]"], ["proof (prove)\nusing this:\n  1 / mu * dist (f x) (f y) - D \\<le> dist (g (f x)) (g (f y))\n\ngoal (1 subgoal):\n 1. 1 / mu * dist (f x) (f y) - D\n    \\<le> dist ((g \\<circ> f) x) ((g \\<circ> f) y)", "by auto"], ["proof (state)\nthis:\n  1 / mu * dist (f x) (f y) - D\n  \\<le> dist ((g \\<circ> f) x) ((g \\<circ> f) y)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> 1 / (lambda * mu) * dist x y - (C * mu + D)\n                         \\<le> dist ((g \\<circ> f) x) ((g \\<circ> f) y)", "finally"], ["proof (chain)\npicking this:\n  1 / (lambda * mu) * dist x y - (C * mu + D)\n  \\<le> dist ((g \\<circ> f) x) ((g \\<circ> f) y)", "show \"1 / (lambda * mu) * dist x y - (C * mu + D) \\<le> dist ((g \\<circ> f) x) ((g \\<circ> f) y)\""], ["proof (prove)\nusing this:\n  1 / (lambda * mu) * dist x y - (C * mu + D)\n  \\<le> dist ((g \\<circ> f) x) ((g \\<circ> f) y)\n\ngoal (1 subgoal):\n 1. 1 / (lambda * mu) * dist x y - (C * mu + D)\n    \\<le> dist ((g \\<circ> f) x) ((g \\<circ> f) y)", "by auto"], ["proof (state)\nthis:\n  1 / (lambda * mu) * dist x y - (C * mu + D)\n  \\<le> dist ((g \\<circ> f) x) ((g \\<circ> f) y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma quasi_isometry_on_bounded:\n  assumes \"lambda C-quasi_isometry_on X f\"\n          \"bounded X\"\n  shows \"bounded (f`X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded (f ` X)", "proof (cases \"X = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. X = {} \\<Longrightarrow> bounded (f ` X)\n 2. X \\<noteq> {} \\<Longrightarrow> bounded (f ` X)", "case True"], ["proof (state)\nthis:\n  X = {}\n\ngoal (2 subgoals):\n 1. X = {} \\<Longrightarrow> bounded (f ` X)\n 2. X \\<noteq> {} \\<Longrightarrow> bounded (f ` X)", "then"], ["proof (chain)\npicking this:\n  X = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  X = {}\n\ngoal (1 subgoal):\n 1. bounded (f ` X)", "by auto"], ["proof (state)\nthis:\n  bounded (f ` X)\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow> bounded (f ` X)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow> bounded (f ` X)", "case False"], ["proof (state)\nthis:\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow> bounded (f ` X)", "obtain x where \"x \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x. x \\<in> X \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using False"], ["proof (prove)\nusing this:\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>x. x \\<in> X \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow> bounded (f ` X)", "obtain e where e: \"\\<And>z. z \\<in> X \\<Longrightarrow> dist x z \\<le> e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>e.\n        (\\<And>z.\n            z \\<in> X \\<Longrightarrow> dist x z \\<le> e) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using bounded_any_center assms(2)"], ["proof (prove)\nusing this:\n  bounded ?S = (\\<exists>e. \\<forall>y\\<in>?S. dist ?a y \\<le> e)\n  bounded X\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        (\\<And>z.\n            z \\<in> X \\<Longrightarrow> dist x z \\<le> e) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  ?z \\<in> X \\<Longrightarrow> dist x ?z \\<le> e\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow> bounded (f ` X)", "have \"dist (f x) y \\<le> C + lambda * e\" if \"y \\<in> f`X\" for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (f x) y \\<le> C + lambda * e", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist (f x) y \\<le> C + lambda * e", "obtain z where *: \"z \\<in> X\" \"y = f z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>z \\<in> X; y = f z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>y \\<in> f`X\\<close>"], ["proof (prove)\nusing this:\n  y \\<in> f ` X\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>z \\<in> X; y = f z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  z \\<in> X\n  y = f z\n\ngoal (1 subgoal):\n 1. dist (f x) y \\<le> C + lambda * e", "have \"dist (f x) y \\<le> lambda * dist x z + C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (f x) y \\<le> lambda * dist x z + C", "unfolding \\<open>y = f z\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (f x) (f z) \\<le> lambda * dist x z + C", "using * quasi_isometry_onD(1)[OF assms(1) \\<open>x \\<in> X\\<close> \\<open>z \\<in> X\\<close>]"], ["proof (prove)\nusing this:\n  z \\<in> X\n  y = f z\n  dist (f x) (f z) \\<le> lambda * dist x z + C\n\ngoal (1 subgoal):\n 1. dist (f x) (f z) \\<le> lambda * dist x z + C", "by (auto simp add: add_mono)"], ["proof (state)\nthis:\n  dist (f x) y \\<le> lambda * dist x z + C\n\ngoal (1 subgoal):\n 1. dist (f x) y \\<le> C + lambda * e", "also"], ["proof (state)\nthis:\n  dist (f x) y \\<le> lambda * dist x z + C\n\ngoal (1 subgoal):\n 1. dist (f x) y \\<le> C + lambda * e", "have \"... \\<le> C + lambda * e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda * dist x z + C \\<le> C + lambda * e", "using e[OF \\<open>z \\<in> X\\<close>] quasi_isometry_onD(3)[OF assms(1)]"], ["proof (prove)\nusing this:\n  dist x z \\<le> e\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. lambda * dist x z + C \\<le> C + lambda * e", "by auto"], ["proof (state)\nthis:\n  lambda * dist x z + C \\<le> C + lambda * e\n\ngoal (1 subgoal):\n 1. dist (f x) y \\<le> C + lambda * e", "finally"], ["proof (chain)\npicking this:\n  dist (f x) y \\<le> C + lambda * e", "show ?thesis"], ["proof (prove)\nusing this:\n  dist (f x) y \\<le> C + lambda * e\n\ngoal (1 subgoal):\n 1. dist (f x) y \\<le> C + lambda * e", "by simp"], ["proof (state)\nthis:\n  dist (f x) y \\<le> C + lambda * e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?y \\<in> f ` X \\<Longrightarrow> dist (f x) ?y \\<le> C + lambda * e\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow> bounded (f ` X)", "then"], ["proof (chain)\npicking this:\n  ?y \\<in> f ` X \\<Longrightarrow> dist (f x) ?y \\<le> C + lambda * e", "show ?thesis"], ["proof (prove)\nusing this:\n  ?y \\<in> f ` X \\<Longrightarrow> dist (f x) ?y \\<le> C + lambda * e\n\ngoal (1 subgoal):\n 1. bounded (f ` X)", "unfolding bounded_def"], ["proof (prove)\nusing this:\n  ?y \\<in> f ` X \\<Longrightarrow> dist (f x) ?y \\<le> C + lambda * e\n\ngoal (1 subgoal):\n 1. \\<exists>x e. \\<forall>y\\<in>f ` X. dist x y \\<le> e", "by auto"], ["proof (state)\nthis:\n  bounded (f ` X)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma quasi_isometry_on_empty:\n  assumes \"C \\<ge> 0\" \"lambda \\<ge> 1\"\n  shows \"lambda C-quasi_isometry_on {} f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda C -quasi_isometry_on {} f", "using assms"], ["proof (prove)\nusing this:\n  0 \\<le> C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. lambda C -quasi_isometry_on {} f", "unfolding quasi_isometry_on_def"], ["proof (prove)\nusing this:\n  0 \\<le> C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. 1 \\<le> lambda \\<and>\n    0 \\<le> C \\<and>\n    (\\<forall>x\\<in>{}.\n        \\<forall>y\\<in>{}.\n           dist (f x) (f y) \\<le> lambda * dist x y + C \\<and>\n           1 / lambda * dist x y - C \\<le> dist (f x) (f y))", "by auto"], ["", "text \\<open>Quasi-isometries change the distance to a set by at most $\\lambda \\cdot + C$, this follows\nreadily from the fact that this inequality holds pointwise.\\<close>"], ["", "lemma quasi_isometry_on_infdist:\n  assumes \"lambda C-quasi_isometry_on X f\"\n          \"w \\<in> X\"\n          \"S \\<subseteq> X\"\n  shows \"infdist (f w) (f`S) \\<le> lambda * infdist w S + C\"\n        \"infdist (f w) (f`S) \\<ge> (1/lambda) * infdist w S - C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infdist (f w) (f ` S) \\<le> lambda * infdist w S + C &&&\n    1 / lambda * infdist w S - C \\<le> infdist (f w) (f ` S)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. infdist (f w) (f ` S) \\<le> lambda * infdist w S + C\n 2. 1 / lambda * infdist w S - C \\<le> infdist (f w) (f ` S)", "have \"lambda \\<ge> 1\" \"C \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> lambda &&& 0 \\<le> C", "using quasi_isometry_onD[OF assms(1)]"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> X; ?y \\<in> X\\<rbrakk>\n  \\<Longrightarrow> dist (f ?x) (f ?y) \\<le> lambda * dist ?x ?y + C\n  \\<lbrakk>?x \\<in> X; ?y \\<in> X\\<rbrakk>\n  \\<Longrightarrow> 1 / lambda * dist ?x ?y - C \\<le> dist (f ?x) (f ?y)\n  1 \\<le> lambda\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. 1 \\<le> lambda &&& 0 \\<le> C", "by auto"], ["proof (state)\nthis:\n  1 \\<le> lambda\n  0 \\<le> C\n\ngoal (2 subgoals):\n 1. infdist (f w) (f ` S) \\<le> lambda * infdist w S + C\n 2. 1 / lambda * infdist w S - C \\<le> infdist (f w) (f ` S)", "show \"infdist (f w) (f`S) \\<le> lambda * infdist w S + C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infdist (f w) (f ` S) \\<le> lambda * infdist w S + C", "proof (cases \"S = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. S = {} \\<Longrightarrow>\n    infdist (f w) (f ` S) \\<le> lambda * infdist w S + C\n 2. S \\<noteq> {} \\<Longrightarrow>\n    infdist (f w) (f ` S) \\<le> lambda * infdist w S + C", "case True"], ["proof (state)\nthis:\n  S = {}\n\ngoal (2 subgoals):\n 1. S = {} \\<Longrightarrow>\n    infdist (f w) (f ` S) \\<le> lambda * infdist w S + C\n 2. S \\<noteq> {} \\<Longrightarrow>\n    infdist (f w) (f ` S) \\<le> lambda * infdist w S + C", "then"], ["proof (chain)\npicking this:\n  S = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  S = {}\n\ngoal (1 subgoal):\n 1. infdist (f w) (f ` S) \\<le> lambda * infdist w S + C", "using \\<open>C \\<ge> 0\\<close>"], ["proof (prove)\nusing this:\n  S = {}\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. infdist (f w) (f ` S) \\<le> lambda * infdist w S + C", "unfolding infdist_def"], ["proof (prove)\nusing this:\n  S = {}\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. (if f ` S = {} then 0 else Inf (dist (f w) ` f ` S))\n    \\<le> lambda * (if S = {} then 0 else Inf (dist w ` S)) + C", "by auto"], ["proof (state)\nthis:\n  infdist (f w) (f ` S) \\<le> lambda * infdist w S + C\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    infdist (f w) (f ` S) \\<le> lambda * infdist w S + C", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    infdist (f w) (f ` S) \\<le> lambda * infdist w S + C", "case False"], ["proof (state)\nthis:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    infdist (f w) (f ` S) \\<le> lambda * infdist w S + C", "then"], ["proof (chain)\npicking this:\n  S \\<noteq> {}", "have \"(INF x\\<in>S. dist (f w) (f x)) \\<le> (INF x\\<in>S. lambda * dist w x + C)\""], ["proof (prove)\nusing this:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (INF x\\<in>S. dist (f w) (f x))\n    \\<le> (INF x\\<in>S. lambda * dist w x + C)", "apply (rule cINF_superset_mono)"], ["proof (prove)\ngoal (3 subgoals):\n 1. bdd_below ((\\<lambda>x. dist (f w) (f x)) ` S)\n 2. S \\<subseteq> S\n 3. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       dist (f w) (f x) \\<le> lambda * dist w x + C", "apply (meson bdd_belowI2 zero_le_dist)"], ["proof (prove)\ngoal (2 subgoals):\n 1. S \\<subseteq> S\n 2. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       dist (f w) (f x) \\<le> lambda * dist w x + C", "using assms"], ["proof (prove)\nusing this:\n  lambda C -quasi_isometry_on X f\n  w \\<in> X\n  S \\<subseteq> X\n\ngoal (2 subgoals):\n 1. S \\<subseteq> S\n 2. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       dist (f w) (f x) \\<le> lambda * dist w x + C", "by (auto intro!: quasi_isometry_onD(1)[OF assms(1)])"], ["proof (state)\nthis:\n  (INF x\\<in>S. dist (f w) (f x)) \\<le> (INF x\\<in>S. lambda * dist w x + C)\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    infdist (f w) (f ` S) \\<le> lambda * infdist w S + C", "also"], ["proof (state)\nthis:\n  (INF x\\<in>S. dist (f w) (f x)) \\<le> (INF x\\<in>S. lambda * dist w x + C)\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    infdist (f w) (f ` S) \\<le> lambda * infdist w S + C", "have \"... = (INF t\\<in>(dist w)`S. lambda * t + C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (INF x\\<in>S. lambda * dist w x + C) =\n    (INF t\\<in>dist w ` S. lambda * t + C)", "by (auto simp add: image_comp)"], ["proof (state)\nthis:\n  (INF x\\<in>S. lambda * dist w x + C) =\n  (INF t\\<in>dist w ` S. lambda * t + C)\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    infdist (f w) (f ` S) \\<le> lambda * infdist w S + C", "also"], ["proof (state)\nthis:\n  (INF x\\<in>S. lambda * dist w x + C) =\n  (INF t\\<in>dist w ` S. lambda * t + C)\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    infdist (f w) (f ` S) \\<le> lambda * infdist w S + C", "have \"... = lambda * Inf ((dist w)`S) + C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (INF t\\<in>dist w ` S. lambda * t + C) = lambda * Inf (dist w ` S) + C", "apply (rule continuous_at_Inf_mono[symmetric])"], ["proof (prove)\ngoal (4 subgoals):\n 1. mono (\\<lambda>s. lambda * s + C)\n 2. continuous (at_right (Inf (dist w ` S))) (\\<lambda>s. lambda * s + C)\n 3. dist w ` S \\<noteq> {}\n 4. bdd_below (dist w ` S)", "unfolding mono_def"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<forall>x y.\n       x \\<le> y \\<longrightarrow> lambda * x + C \\<le> lambda * y + C\n 2. continuous (at_right (Inf (dist w ` S))) (\\<lambda>s. lambda * s + C)\n 3. dist w ` S \\<noteq> {}\n 4. bdd_below (dist w ` S)", "using \\<open>lambda \\<ge> 1\\<close> False"], ["proof (prove)\nusing this:\n  1 \\<le> lambda\n  S \\<noteq> {}\n\ngoal (4 subgoals):\n 1. \\<forall>x y.\n       x \\<le> y \\<longrightarrow> lambda * x + C \\<le> lambda * y + C\n 2. continuous (at_right (Inf (dist w ` S))) (\\<lambda>s. lambda * s + C)\n 3. dist w ` S \\<noteq> {}\n 4. bdd_below (dist w ` S)", "by (auto intro!: continuous_intros)"], ["proof (state)\nthis:\n  (INF t\\<in>dist w ` S. lambda * t + C) = lambda * Inf (dist w ` S) + C\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    infdist (f w) (f ` S) \\<le> lambda * infdist w S + C", "finally"], ["proof (chain)\npicking this:\n  (INF x\\<in>S. dist (f w) (f x)) \\<le> lambda * Inf (dist w ` S) + C", "show ?thesis"], ["proof (prove)\nusing this:\n  (INF x\\<in>S. dist (f w) (f x)) \\<le> lambda * Inf (dist w ` S) + C\n\ngoal (1 subgoal):\n 1. infdist (f w) (f ` S) \\<le> lambda * infdist w S + C", "unfolding infdist_def"], ["proof (prove)\nusing this:\n  (INF x\\<in>S. dist (f w) (f x)) \\<le> lambda * Inf (dist w ` S) + C\n\ngoal (1 subgoal):\n 1. (if f ` S = {} then 0 else Inf (dist (f w) ` f ` S))\n    \\<le> lambda * (if S = {} then 0 else Inf (dist w ` S)) + C", "using False"], ["proof (prove)\nusing this:\n  (INF x\\<in>S. dist (f w) (f x)) \\<le> lambda * Inf (dist w ` S) + C\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (if f ` S = {} then 0 else Inf (dist (f w) ` f ` S))\n    \\<le> lambda * (if S = {} then 0 else Inf (dist w ` S)) + C", "by (auto simp add: image_comp)"], ["proof (state)\nthis:\n  infdist (f w) (f ` S) \\<le> lambda * infdist w S + C\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  infdist (f w) (f ` S) \\<le> lambda * infdist w S + C\n\ngoal (1 subgoal):\n 1. 1 / lambda * infdist w S - C \\<le> infdist (f w) (f ` S)", "show \"1 / lambda * infdist w S - C \\<le> infdist (f w) (f ` S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * infdist w S - C \\<le> infdist (f w) (f ` S)", "proof (cases \"S = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. S = {} \\<Longrightarrow>\n    1 / lambda * infdist w S - C \\<le> infdist (f w) (f ` S)\n 2. S \\<noteq> {} \\<Longrightarrow>\n    1 / lambda * infdist w S - C \\<le> infdist (f w) (f ` S)", "case True"], ["proof (state)\nthis:\n  S = {}\n\ngoal (2 subgoals):\n 1. S = {} \\<Longrightarrow>\n    1 / lambda * infdist w S - C \\<le> infdist (f w) (f ` S)\n 2. S \\<noteq> {} \\<Longrightarrow>\n    1 / lambda * infdist w S - C \\<le> infdist (f w) (f ` S)", "then"], ["proof (chain)\npicking this:\n  S = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  S = {}\n\ngoal (1 subgoal):\n 1. 1 / lambda * infdist w S - C \\<le> infdist (f w) (f ` S)", "using \\<open>C \\<ge> 0\\<close>"], ["proof (prove)\nusing this:\n  S = {}\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. 1 / lambda * infdist w S - C \\<le> infdist (f w) (f ` S)", "unfolding infdist_def"], ["proof (prove)\nusing this:\n  S = {}\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. 1 / lambda * (if S = {} then 0 else Inf (dist w ` S)) - C\n    \\<le> (if f ` S = {} then 0 else Inf (dist (f w) ` f ` S))", "by auto"], ["proof (state)\nthis:\n  1 / lambda * infdist w S - C \\<le> infdist (f w) (f ` S)\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    1 / lambda * infdist w S - C \\<le> infdist (f w) (f ` S)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    1 / lambda * infdist w S - C \\<le> infdist (f w) (f ` S)", "case False"], ["proof (state)\nthis:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    1 / lambda * infdist w S - C \\<le> infdist (f w) (f ` S)", "then"], ["proof (chain)\npicking this:\n  S \\<noteq> {}", "have \"(1/lambda) * infdist w S - C = (1/lambda) * Inf ((dist w)`S) - C\""], ["proof (prove)\nusing this:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. 1 / lambda * infdist w S - C = 1 / lambda * Inf (dist w ` S) - C", "unfolding infdist_def"], ["proof (prove)\nusing this:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. 1 / lambda * (if S = {} then 0 else Inf (dist w ` S)) - C =\n    1 / lambda * Inf (dist w ` S) - C", "by auto"], ["proof (state)\nthis:\n  1 / lambda * infdist w S - C = 1 / lambda * Inf (dist w ` S) - C\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    1 / lambda * infdist w S - C \\<le> infdist (f w) (f ` S)", "also"], ["proof (state)\nthis:\n  1 / lambda * infdist w S - C = 1 / lambda * Inf (dist w ` S) - C\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    1 / lambda * infdist w S - C \\<le> infdist (f w) (f ` S)", "have \"... = (INF t\\<in>(dist w)`S. (1/lambda) * t - C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * Inf (dist w ` S) - C =\n    (INF t\\<in>dist w ` S. 1 / lambda * t - C)", "apply (rule continuous_at_Inf_mono)"], ["proof (prove)\ngoal (4 subgoals):\n 1. mono (\\<lambda>s. 1 / lambda * s - C)\n 2. continuous (at_right (Inf (dist w ` S)))\n     (\\<lambda>s. 1 / lambda * s - C)\n 3. dist w ` S \\<noteq> {}\n 4. bdd_below (dist w ` S)", "unfolding mono_def"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<forall>x y.\n       x \\<le> y \\<longrightarrow>\n       1 / lambda * x - C \\<le> 1 / lambda * y - C\n 2. continuous (at_right (Inf (dist w ` S)))\n     (\\<lambda>s. 1 / lambda * s - C)\n 3. dist w ` S \\<noteq> {}\n 4. bdd_below (dist w ` S)", "using \\<open>lambda \\<ge> 1\\<close> False"], ["proof (prove)\nusing this:\n  1 \\<le> lambda\n  S \\<noteq> {}\n\ngoal (4 subgoals):\n 1. \\<forall>x y.\n       x \\<le> y \\<longrightarrow>\n       1 / lambda * x - C \\<le> 1 / lambda * y - C\n 2. continuous (at_right (Inf (dist w ` S)))\n     (\\<lambda>s. 1 / lambda * s - C)\n 3. dist w ` S \\<noteq> {}\n 4. bdd_below (dist w ` S)", "by (auto simp add: divide_simps intro!: continuous_intros)"], ["proof (state)\nthis:\n  1 / lambda * Inf (dist w ` S) - C =\n  (INF t\\<in>dist w ` S. 1 / lambda * t - C)\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    1 / lambda * infdist w S - C \\<le> infdist (f w) (f ` S)", "also"], ["proof (state)\nthis:\n  1 / lambda * Inf (dist w ` S) - C =\n  (INF t\\<in>dist w ` S. 1 / lambda * t - C)\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    1 / lambda * infdist w S - C \\<le> infdist (f w) (f ` S)", "have \"... = (INF x\\<in>S. (1/lambda) * dist w x - C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (INF t\\<in>dist w ` S. 1 / lambda * t - C) =\n    (INF x\\<in>S. 1 / lambda * dist w x - C)", "by (auto simp add: image_comp)"], ["proof (state)\nthis:\n  (INF t\\<in>dist w ` S. 1 / lambda * t - C) =\n  (INF x\\<in>S. 1 / lambda * dist w x - C)\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    1 / lambda * infdist w S - C \\<le> infdist (f w) (f ` S)", "also"], ["proof (state)\nthis:\n  (INF t\\<in>dist w ` S. 1 / lambda * t - C) =\n  (INF x\\<in>S. 1 / lambda * dist w x - C)\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    1 / lambda * infdist w S - C \\<le> infdist (f w) (f ` S)", "have \"... \\<le> (INF x\\<in>S. dist (f w) (f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (INF x\\<in>S. 1 / lambda * dist w x - C)\n    \\<le> (INF x\\<in>S. dist (f w) (f x))", "apply (rule cINF_superset_mono[OF False])"], ["proof (prove)\ngoal (3 subgoals):\n 1. bdd_below ((\\<lambda>x. 1 / lambda * dist w x - C) ` S)\n 2. S \\<subseteq> S\n 3. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       1 / lambda * dist w x - C \\<le> dist (f w) (f x)", "apply (rule bdd_belowI2[of _ \"-C\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x. x \\<in> S \\<Longrightarrow> - C \\<le> 1 / lambda * dist w x - C\n 2. S \\<subseteq> S\n 3. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       1 / lambda * dist w x - C \\<le> dist (f w) (f x)", "using assms \\<open>lambda \\<ge> 1\\<close>"], ["proof (prove)\nusing this:\n  lambda C -quasi_isometry_on X f\n  w \\<in> X\n  S \\<subseteq> X\n  1 \\<le> lambda\n\ngoal (3 subgoals):\n 1. \\<And>x. x \\<in> S \\<Longrightarrow> - C \\<le> 1 / lambda * dist w x - C\n 2. S \\<subseteq> S\n 3. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       1 / lambda * dist w x - C \\<le> dist (f w) (f x)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. S \\<subseteq> S\n 2. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       1 / lambda * dist w x - C \\<le> dist (f w) (f x)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       1 / lambda * dist w x - C \\<le> dist (f w) (f x)", "apply (rule quasi_isometry_onD(2)[OF assms(1)])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> S \\<Longrightarrow> w \\<in> X\n 2. \\<And>x. x \\<in> S \\<Longrightarrow> x \\<in> X", "using assms"], ["proof (prove)\nusing this:\n  lambda C -quasi_isometry_on X f\n  w \\<in> X\n  S \\<subseteq> X\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> S \\<Longrightarrow> w \\<in> X\n 2. \\<And>x. x \\<in> S \\<Longrightarrow> x \\<in> X", "by auto"], ["proof (state)\nthis:\n  (INF x\\<in>S. 1 / lambda * dist w x - C)\n  \\<le> (INF x\\<in>S. dist (f w) (f x))\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    1 / lambda * infdist w S - C \\<le> infdist (f w) (f ` S)", "finally"], ["proof (chain)\npicking this:\n  1 / lambda * infdist w S - C \\<le> (INF x\\<in>S. dist (f w) (f x))", "show ?thesis"], ["proof (prove)\nusing this:\n  1 / lambda * infdist w S - C \\<le> (INF x\\<in>S. dist (f w) (f x))\n\ngoal (1 subgoal):\n 1. 1 / lambda * infdist w S - C \\<le> infdist (f w) (f ` S)", "unfolding infdist_def"], ["proof (prove)\nusing this:\n  1 / lambda * (if S = {} then 0 else Inf (dist w ` S)) - C\n  \\<le> (INF x\\<in>S. dist (f w) (f x))\n\ngoal (1 subgoal):\n 1. 1 / lambda * (if S = {} then 0 else Inf (dist w ` S)) - C\n    \\<le> (if f ` S = {} then 0 else Inf (dist (f w) ` f ` S))", "using False"], ["proof (prove)\nusing this:\n  1 / lambda * (if S = {} then 0 else Inf (dist w ` S)) - C\n  \\<le> (INF x\\<in>S. dist (f w) (f x))\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. 1 / lambda * (if S = {} then 0 else Inf (dist w ` S)) - C\n    \\<le> (if f ` S = {} then 0 else Inf (dist (f w) ` f ` S))", "by (auto simp add: image_comp)"], ["proof (state)\nthis:\n  1 / lambda * infdist w S - C \\<le> infdist (f w) (f ` S)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  1 / lambda * infdist w S - C \\<le> infdist (f w) (f ` S)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Quasi-isometric isomorphisms\\<close>"], ["", "text \\<open>The notion of isomorphism for quasi-isometries is not that it should be a bijection, as it is\na coarse notion, but that it is a bijection up to a bounded displacement. For instance, the\ninclusion of $\\mathbb{Z}$ in $\\mathbb{R}$ is a quasi-isometric isomorphism between these spaces,\nwhose (quasi)-inverse (which is non-unique) is given by the function integer part. This is\nformalized in the next definition.\\<close>"], ["", "definition quasi_isometry_between::\"real \\<Rightarrow> real \\<Rightarrow> ('a::metric_space) set \\<Rightarrow> ('b::metric_space) set \\<Rightarrow> ('a \\<Rightarrow> 'b) \\<Rightarrow> bool\"\n  (\"_ _ -quasi'_isometry'_between\" [1000, 999])\n  where \"lambda C-quasi_isometry_between X Y f = ((lambda C-quasi_isometry_on X f) \\<and> (f`X \\<subseteq> Y) \\<and> (\\<forall>y\\<in>Y. \\<exists>x\\<in>X. dist (f x) y \\<le> C))\""], ["", "definition quasi_isometric::\"('a::metric_space) set \\<Rightarrow> ('b::metric_space) set \\<Rightarrow> bool\"\n  where \"quasi_isometric X Y = (\\<exists>lambda C f. lambda C-quasi_isometry_between X Y f)\""], ["", "lemma quasi_isometry_betweenD:\n  assumes \"lambda C-quasi_isometry_between X Y f\"\n  shows \"lambda C-quasi_isometry_on X f\"\n        \"f`X \\<subseteq> Y\"\n        \"\\<And>y. y \\<in> Y \\<Longrightarrow> \\<exists>x\\<in>X. dist (f x) y \\<le> C\"\n        \"\\<And>x y. x \\<in> X \\<Longrightarrow> y \\<in> X \\<Longrightarrow> dist (f x) (f y) \\<le> lambda * dist x y + C\"\n        \"\\<And>x y. x \\<in> X \\<Longrightarrow> y \\<in> X \\<Longrightarrow> dist (f x) (f y) \\<ge> (1/lambda) * dist x y - C\"\n        \"lambda \\<ge> 1\" \"C \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (lambda C -quasi_isometry_on X f &&&\n     f ` X \\<subseteq> Y &&&\n     (\\<And>y.\n         y \\<in> Y \\<Longrightarrow>\n         \\<exists>x\\<in>X. dist (f x) y \\<le> C)) &&&\n    ((\\<And>x y.\n         \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n         \\<Longrightarrow> dist (f x) (f y) \\<le> lambda * dist x y + C) &&&\n     (\\<And>x y.\n         \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n         \\<Longrightarrow> 1 / lambda * dist x y - C\n                           \\<le> dist (f x) (f y))) &&&\n    1 \\<le> lambda &&& 0 \\<le> C", "using assms"], ["proof (prove)\nusing this:\n  lambda C -quasi_isometry_between X Y f\n\ngoal (1 subgoal):\n 1. (lambda C -quasi_isometry_on X f &&&\n     f ` X \\<subseteq> Y &&&\n     (\\<And>y.\n         y \\<in> Y \\<Longrightarrow>\n         \\<exists>x\\<in>X. dist (f x) y \\<le> C)) &&&\n    ((\\<And>x y.\n         \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n         \\<Longrightarrow> dist (f x) (f y) \\<le> lambda * dist x y + C) &&&\n     (\\<And>x y.\n         \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n         \\<Longrightarrow> 1 / lambda * dist x y - C\n                           \\<le> dist (f x) (f y))) &&&\n    1 \\<le> lambda &&& 0 \\<le> C", "unfolding quasi_isometry_between_def quasi_isometry_on_def"], ["proof (prove)\nusing this:\n  (1 \\<le> lambda \\<and>\n   0 \\<le> C \\<and>\n   (\\<forall>x\\<in>X.\n       \\<forall>y\\<in>X.\n          dist (f x) (f y) \\<le> lambda * dist x y + C \\<and>\n          1 / lambda * dist x y - C \\<le> dist (f x) (f y))) \\<and>\n  f ` X \\<subseteq> Y \\<and>\n  (\\<forall>y\\<in>Y. \\<exists>x\\<in>X. dist (f x) y \\<le> C)\n\ngoal (1 subgoal):\n 1. (1 \\<le> lambda \\<and>\n     0 \\<le> C \\<and>\n     (\\<forall>x\\<in>X.\n         \\<forall>y\\<in>X.\n            dist (f x) (f y) \\<le> lambda * dist x y + C \\<and>\n            1 / lambda * dist x y - C \\<le> dist (f x) (f y)) &&&\n     f ` X \\<subseteq> Y &&&\n     (\\<And>y.\n         y \\<in> Y \\<Longrightarrow>\n         \\<exists>x\\<in>X. dist (f x) y \\<le> C)) &&&\n    ((\\<And>x y.\n         \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n         \\<Longrightarrow> dist (f x) (f y) \\<le> lambda * dist x y + C) &&&\n     (\\<And>x y.\n         \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n         \\<Longrightarrow> 1 / lambda * dist x y - C\n                           \\<le> dist (f x) (f y))) &&&\n    1 \\<le> lambda &&& 0 \\<le> C", "by auto"], ["", "lemma quasi_isometry_betweenI:\n  assumes \"lambda C-quasi_isometry_on X f\"\n          \"f`X \\<subseteq> Y\"\n          \"\\<And>y. y \\<in> Y \\<Longrightarrow> \\<exists>x\\<in>X. dist (f x) y \\<le> C\"\n  shows \"lambda C-quasi_isometry_between X Y f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda C -quasi_isometry_between X Y f", "using assms"], ["proof (prove)\nusing this:\n  lambda C -quasi_isometry_on X f\n  f ` X \\<subseteq> Y\n  ?y \\<in> Y \\<Longrightarrow> \\<exists>x\\<in>X. dist (f x) ?y \\<le> C\n\ngoal (1 subgoal):\n 1. lambda C -quasi_isometry_between X Y f", "unfolding quasi_isometry_between_def"], ["proof (prove)\nusing this:\n  lambda C -quasi_isometry_on X f\n  f ` X \\<subseteq> Y\n  ?y \\<in> Y \\<Longrightarrow> \\<exists>x\\<in>X. dist (f x) ?y \\<le> C\n\ngoal (1 subgoal):\n 1. lambda C -quasi_isometry_on X f \\<and>\n    f ` X \\<subseteq> Y \\<and>\n    (\\<forall>y\\<in>Y. \\<exists>x\\<in>X. dist (f x) y \\<le> C)", "by auto"], ["", "lemma quasi_isometry_on_between:\n  assumes \"lambda C-quasi_isometry_on X f\"\n  shows \"lambda C-quasi_isometry_between X (f`X) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda C -quasi_isometry_between X (f ` X) f", "using assms"], ["proof (prove)\nusing this:\n  lambda C -quasi_isometry_on X f\n\ngoal (1 subgoal):\n 1. lambda C -quasi_isometry_between X (f ` X) f", "unfolding quasi_isometry_between_def quasi_isometry_on_def"], ["proof (prove)\nusing this:\n  1 \\<le> lambda \\<and>\n  0 \\<le> C \\<and>\n  (\\<forall>x\\<in>X.\n      \\<forall>y\\<in>X.\n         dist (f x) (f y) \\<le> lambda * dist x y + C \\<and>\n         1 / lambda * dist x y - C \\<le> dist (f x) (f y))\n\ngoal (1 subgoal):\n 1. (1 \\<le> lambda \\<and>\n     0 \\<le> C \\<and>\n     (\\<forall>x\\<in>X.\n         \\<forall>y\\<in>X.\n            dist (f x) (f y) \\<le> lambda * dist x y + C \\<and>\n            1 / lambda * dist x y - C \\<le> dist (f x) (f y))) \\<and>\n    f ` X \\<subseteq> f ` X \\<and>\n    (\\<forall>y\\<in>f ` X. \\<exists>x\\<in>X. dist (f x) y \\<le> C)", "by force"], ["", "lemma quasi_isometry_between_change_params:\n  assumes \"lambda C-quasi_isometry_between X Y f\" \"mu \\<ge> lambda\" \"D \\<ge> C\"\n  shows \"mu D-quasi_isometry_between X Y f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mu D -quasi_isometry_between X Y f", "proof (rule quasi_isometry_betweenI)"], ["proof (state)\ngoal (3 subgoals):\n 1. mu D -quasi_isometry_on X f\n 2. f ` X \\<subseteq> Y\n 3. \\<And>y.\n       y \\<in> Y \\<Longrightarrow> \\<exists>x\\<in>X. dist (f x) y \\<le> D", "show \"mu D-quasi_isometry_on X f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mu D -quasi_isometry_on X f", "by (rule quasi_isometry_on_change_params[OF quasi_isometry_betweenD(1)[OF assms(1)] assms(2) assms(3)])"], ["proof (state)\nthis:\n  mu D -quasi_isometry_on X f\n\ngoal (2 subgoals):\n 1. f ` X \\<subseteq> Y\n 2. \\<And>y.\n       y \\<in> Y \\<Longrightarrow> \\<exists>x\\<in>X. dist (f x) y \\<le> D", "show \"f`X \\<subseteq> Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` X \\<subseteq> Y", "using quasi_isometry_betweenD[OF assms(1)]"], ["proof (prove)\nusing this:\n  lambda C -quasi_isometry_on X f\n  f ` X \\<subseteq> Y\n  ?y \\<in> Y \\<Longrightarrow> \\<exists>x\\<in>X. dist (f x) ?y \\<le> C\n  \\<lbrakk>?x \\<in> X; ?y \\<in> X\\<rbrakk>\n  \\<Longrightarrow> dist (f ?x) (f ?y) \\<le> lambda * dist ?x ?y + C\n  \\<lbrakk>?x \\<in> X; ?y \\<in> X\\<rbrakk>\n  \\<Longrightarrow> 1 / lambda * dist ?x ?y - C \\<le> dist (f ?x) (f ?y)\n  1 \\<le> lambda\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. f ` X \\<subseteq> Y", "by auto"], ["proof (state)\nthis:\n  f ` X \\<subseteq> Y\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> Y \\<Longrightarrow> \\<exists>x\\<in>X. dist (f x) y \\<le> D", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> Y \\<Longrightarrow> \\<exists>x\\<in>X. dist (f x) y \\<le> D", "assume \"y \\<in> Y\""], ["proof (state)\nthis:\n  y \\<in> Y\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> Y \\<Longrightarrow> \\<exists>x\\<in>X. dist (f x) y \\<le> D", "show \"\\<exists>x\\<in>X. dist (f x) y \\<le> D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>X. dist (f x) y \\<le> D", "using quasi_isometry_betweenD(3)[OF assms(1) \\<open>y \\<in> Y\\<close>] \\<open>D \\<ge> C\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>X. dist (f x) y \\<le> C\n  C \\<le> D\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>X. dist (f x) y \\<le> D", "by force"], ["proof (state)\nthis:\n  \\<exists>x\\<in>X. dist (f x) y \\<le> D\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma quasi_isometry_subset:\n  assumes \"X \\<subseteq> Y\" \"\\<And>y. y \\<in> Y \\<Longrightarrow> \\<exists>x\\<in>X. dist x y \\<le> C\" \"C \\<ge> 0\"\n  shows \"1 C-quasi_isometry_between X Y (\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 C -quasi_isometry_between X Y (\\<lambda>x. x)", "unfolding quasi_isometry_between_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 C -quasi_isometry_on X (\\<lambda>x. x) \\<and>\n    (\\<lambda>x. x) ` X \\<subseteq> Y \\<and>\n    (\\<forall>y\\<in>Y. \\<exists>x\\<in>X. dist x y \\<le> C)", "using assms"], ["proof (prove)\nusing this:\n  X \\<subseteq> Y\n  ?y \\<in> Y \\<Longrightarrow> \\<exists>x\\<in>X. dist x ?y \\<le> C\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. 1 C -quasi_isometry_on X (\\<lambda>x. x) \\<and>\n    (\\<lambda>x. x) ` X \\<subseteq> Y \\<and>\n    (\\<forall>y\\<in>Y. \\<exists>x\\<in>X. dist x y \\<le> C)", "by auto"], ["", "lemma isometry_quasi_isometry_between:\n  assumes \"isometry f\"\n  shows \"1 0-quasi_isometry_between UNIV UNIV f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 0 -quasi_isometry_between UNIV UNIV f", "using assms"], ["proof (prove)\nusing this:\n  isometry f\n\ngoal (1 subgoal):\n 1. 1 0 -quasi_isometry_between UNIV UNIV f", "unfolding quasi_isometry_between_def quasi_isometry_on_def isometry_def isometry_on_def surj_def"], ["proof (prove)\nusing this:\n  (\\<forall>x\\<in>UNIV.\n      \\<forall>y\\<in>UNIV. dist (f x) (f y) = dist x y) \\<and>\n  (\\<forall>y. \\<exists>x. y = f x)\n\ngoal (1 subgoal):\n 1. (1 \\<le> 1 \\<and>\n     0 \\<le> 0 \\<and>\n     (\\<forall>x\\<in>UNIV.\n         \\<forall>y\\<in>UNIV.\n            dist (f x) (f y) \\<le> 1 * dist x y + 0 \\<and>\n            1 / 1 * dist x y - 0 \\<le> dist (f x) (f y))) \\<and>\n    range f \\<subseteq> UNIV \\<and>\n    (\\<forall>y\\<in>UNIV. \\<exists>x\\<in>UNIV. dist (f x) y \\<le> 0)", "by (auto) metis"], ["", "proposition quasi_isometry_inverse:\n  assumes \"lambda C-quasi_isometry_between X Y f\"\n  shows \"\\<exists>g. lambda (3 * C * lambda)-quasi_isometry_between Y X g\n          \\<and> (\\<forall>x\\<in>X. dist x (g (f x)) \\<le> 3 * C * lambda)\n          \\<and> (\\<forall>y\\<in>Y. dist y (f (g y)) \\<le> 3 * C * lambda)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>g.\n       lambda (3 * C * lambda) -quasi_isometry_between Y X g \\<and>\n       (\\<forall>x\\<in>X. dist x (g (f x)) \\<le> 3 * C * lambda) \\<and>\n       (\\<forall>y\\<in>Y. dist y (f (g y)) \\<le> 3 * C * lambda)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>g.\n       lambda (3 * C * lambda) -quasi_isometry_between Y X g \\<and>\n       (\\<forall>x\\<in>X. dist x (g (f x)) \\<le> 3 * C * lambda) \\<and>\n       (\\<forall>y\\<in>Y. dist y (f (g y)) \\<le> 3 * C * lambda)", "define g where \"g = (\\<lambda>y. SOME x. x \\<in> X \\<and> dist (f x) y \\<le> C)\""], ["proof (state)\nthis:\n  g = (\\<lambda>y. SOME x. x \\<in> X \\<and> dist (f x) y \\<le> C)\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       lambda (3 * C * lambda) -quasi_isometry_between Y X g \\<and>\n       (\\<forall>x\\<in>X. dist x (g (f x)) \\<le> 3 * C * lambda) \\<and>\n       (\\<forall>y\\<in>Y. dist y (f (g y)) \\<le> 3 * C * lambda)", "have *: \"g y \\<in> X \\<and> dist (f (g y)) y \\<le> C\" if \"y \\<in> Y\" for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. g y \\<in> X \\<and> dist (f (g y)) y \\<le> C", "unfolding g_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (SOME x. x \\<in> X \\<and> dist (f x) y \\<le> C) \\<in> X \\<and>\n    dist (f (SOME x. x \\<in> X \\<and> dist (f x) y \\<le> C)) y \\<le> C", "using quasi_isometry_betweenD(3)[OF assms that]"], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>X. dist (f x) y \\<le> C\n\ngoal (1 subgoal):\n 1. (SOME x. x \\<in> X \\<and> dist (f x) y \\<le> C) \\<in> X \\<and>\n    dist (f (SOME x. x \\<in> X \\<and> dist (f x) y \\<le> C)) y \\<le> C", "by (metis (no_types, lifting) someI_ex)"], ["proof (state)\nthis:\n  ?y \\<in> Y \\<Longrightarrow>\n  g ?y \\<in> X \\<and> dist (f (g ?y)) ?y \\<le> C\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       lambda (3 * C * lambda) -quasi_isometry_between Y X g \\<and>\n       (\\<forall>x\\<in>X. dist x (g (f x)) \\<le> 3 * C * lambda) \\<and>\n       (\\<forall>y\\<in>Y. dist y (f (g y)) \\<le> 3 * C * lambda)", "have \"lambda \\<ge> 1\" \"C \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> lambda &&& 0 \\<le> C", "using quasi_isometry_betweenD[OF assms]"], ["proof (prove)\nusing this:\n  lambda C -quasi_isometry_on X f\n  f ` X \\<subseteq> Y\n  ?y \\<in> Y \\<Longrightarrow> \\<exists>x\\<in>X. dist (f x) ?y \\<le> C\n  \\<lbrakk>?x \\<in> X; ?y \\<in> X\\<rbrakk>\n  \\<Longrightarrow> dist (f ?x) (f ?y) \\<le> lambda * dist ?x ?y + C\n  \\<lbrakk>?x \\<in> X; ?y \\<in> X\\<rbrakk>\n  \\<Longrightarrow> 1 / lambda * dist ?x ?y - C \\<le> dist (f ?x) (f ?y)\n  1 \\<le> lambda\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. 1 \\<le> lambda &&& 0 \\<le> C", "by auto"], ["proof (state)\nthis:\n  1 \\<le> lambda\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       lambda (3 * C * lambda) -quasi_isometry_between Y X g \\<and>\n       (\\<forall>x\\<in>X. dist x (g (f x)) \\<le> 3 * C * lambda) \\<and>\n       (\\<forall>y\\<in>Y. dist y (f (g y)) \\<le> 3 * C * lambda)", "have \"C \\<le> 3 * C * lambda\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<le> 3 * C * lambda", "using \\<open>lambda \\<ge> 1\\<close> \\<open>C \\<ge> 0\\<close>"], ["proof (prove)\nusing this:\n  1 \\<le> lambda\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. C \\<le> 3 * C * lambda", "by (simp add: algebra_simps mult_ge1_mono)"], ["proof (state)\nthis:\n  C \\<le> 3 * C * lambda\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       lambda (3 * C * lambda) -quasi_isometry_between Y X g \\<and>\n       (\\<forall>x\\<in>X. dist x (g (f x)) \\<le> 3 * C * lambda) \\<and>\n       (\\<forall>y\\<in>Y. dist y (f (g y)) \\<le> 3 * C * lambda)", "then"], ["proof (chain)\npicking this:\n  C \\<le> 3 * C * lambda", "have A: \"dist y (f (g y)) \\<le> 3 * C * lambda\" if \"y \\<in> Y\" for y"], ["proof (prove)\nusing this:\n  C \\<le> 3 * C * lambda\n\ngoal (1 subgoal):\n 1. dist y (f (g y)) \\<le> 3 * C * lambda", "using *[OF that]"], ["proof (prove)\nusing this:\n  C \\<le> 3 * C * lambda\n  g y \\<in> X \\<and> dist (f (g y)) y \\<le> C\n\ngoal (1 subgoal):\n 1. dist y (f (g y)) \\<le> 3 * C * lambda", "by (simp add: dist_commute)"], ["proof (state)\nthis:\n  ?y \\<in> Y \\<Longrightarrow> dist ?y (f (g ?y)) \\<le> 3 * C * lambda\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       lambda (3 * C * lambda) -quasi_isometry_between Y X g \\<and>\n       (\\<forall>x\\<in>X. dist x (g (f x)) \\<le> 3 * C * lambda) \\<and>\n       (\\<forall>y\\<in>Y. dist y (f (g y)) \\<le> 3 * C * lambda)", "have B: \"dist x (g (f x)) \\<le> 3 * C * lambda\" if \"x \\<in> X\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x (g (f x)) \\<le> 3 * C * lambda", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist x (g (f x)) \\<le> 3 * C * lambda", "have \"f x \\<in> Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x \\<in> Y", "using that quasi_isometry_betweenD(2)[OF assms]"], ["proof (prove)\nusing this:\n  x \\<in> X\n  f ` X \\<subseteq> Y\n\ngoal (1 subgoal):\n 1. f x \\<in> Y", "by auto"], ["proof (state)\nthis:\n  f x \\<in> Y\n\ngoal (1 subgoal):\n 1. dist x (g (f x)) \\<le> 3 * C * lambda", "have \"(1/lambda) * dist x (g (f x)) - C \\<le> dist (f x) (f (g (f x)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * dist x (g (f x)) - C \\<le> dist (f x) (f (g (f x)))", "apply (rule quasi_isometry_betweenD(5)[OF assms])"], ["proof (prove)\ngoal (2 subgoals):\n 1. x \\<in> X\n 2. g (f x) \\<in> X", "using that *[OF \\<open>f x \\<in> Y\\<close>]"], ["proof (prove)\nusing this:\n  x \\<in> X\n  g (f x) \\<in> X \\<and> dist (f (g (f x))) (f x) \\<le> C\n\ngoal (2 subgoals):\n 1. x \\<in> X\n 2. g (f x) \\<in> X", "by auto"], ["proof (state)\nthis:\n  1 / lambda * dist x (g (f x)) - C \\<le> dist (f x) (f (g (f x)))\n\ngoal (1 subgoal):\n 1. dist x (g (f x)) \\<le> 3 * C * lambda", "also"], ["proof (state)\nthis:\n  1 / lambda * dist x (g (f x)) - C \\<le> dist (f x) (f (g (f x)))\n\ngoal (1 subgoal):\n 1. dist x (g (f x)) \\<le> 3 * C * lambda", "have \"... \\<le> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (f x) (f (g (f x))) \\<le> C", "using *[OF \\<open>f x \\<in> Y\\<close>]"], ["proof (prove)\nusing this:\n  g (f x) \\<in> X \\<and> dist (f (g (f x))) (f x) \\<le> C\n\ngoal (1 subgoal):\n 1. dist (f x) (f (g (f x))) \\<le> C", "by (simp add: dist_commute)"], ["proof (state)\nthis:\n  dist (f x) (f (g (f x))) \\<le> C\n\ngoal (1 subgoal):\n 1. dist x (g (f x)) \\<le> 3 * C * lambda", "finally"], ["proof (chain)\npicking this:\n  1 / lambda * dist x (g (f x)) - C \\<le> C", "have \"dist x (g (f x)) \\<le> 2 * C * lambda\""], ["proof (prove)\nusing this:\n  1 / lambda * dist x (g (f x)) - C \\<le> C\n\ngoal (1 subgoal):\n 1. dist x (g (f x)) \\<le> 2 * C * lambda", "using \\<open>lambda \\<ge> 1\\<close> \\<open>C \\<ge> 0\\<close>"], ["proof (prove)\nusing this:\n  1 / lambda * dist x (g (f x)) - C \\<le> C\n  1 \\<le> lambda\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. dist x (g (f x)) \\<le> 2 * C * lambda", "by (simp add: divide_simps)"], ["proof (state)\nthis:\n  dist x (g (f x)) \\<le> 2 * C * lambda\n\ngoal (1 subgoal):\n 1. dist x (g (f x)) \\<le> 3 * C * lambda", "also"], ["proof (state)\nthis:\n  dist x (g (f x)) \\<le> 2 * C * lambda\n\ngoal (1 subgoal):\n 1. dist x (g (f x)) \\<le> 3 * C * lambda", "have \"... \\<le> 3 * C * lambda\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * C * lambda \\<le> 3 * C * lambda", "using \\<open>lambda \\<ge> 1\\<close> \\<open>C \\<ge> 0\\<close>"], ["proof (prove)\nusing this:\n  1 \\<le> lambda\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. 2 * C * lambda \\<le> 3 * C * lambda", "by (simp add: divide_simps)"], ["proof (state)\nthis:\n  2 * C * lambda \\<le> 3 * C * lambda\n\ngoal (1 subgoal):\n 1. dist x (g (f x)) \\<le> 3 * C * lambda", "finally"], ["proof (chain)\npicking this:\n  dist x (g (f x)) \\<le> 3 * C * lambda", "show ?thesis"], ["proof (prove)\nusing this:\n  dist x (g (f x)) \\<le> 3 * C * lambda\n\ngoal (1 subgoal):\n 1. dist x (g (f x)) \\<le> 3 * C * lambda", "by auto"], ["proof (state)\nthis:\n  dist x (g (f x)) \\<le> 3 * C * lambda\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x \\<in> X \\<Longrightarrow> dist ?x (g (f ?x)) \\<le> 3 * C * lambda\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       lambda (3 * C * lambda) -quasi_isometry_between Y X g \\<and>\n       (\\<forall>x\\<in>X. dist x (g (f x)) \\<le> 3 * C * lambda) \\<and>\n       (\\<forall>y\\<in>Y. dist y (f (g y)) \\<le> 3 * C * lambda)", "have \"lambda (3 * C * lambda)-quasi_isometry_on Y g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda (3 * C * lambda) -quasi_isometry_on Y g", "proof (rule quasi_isometry_onI)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Y; y \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> dist (g x) (g y)\n                         \\<le> lambda * dist x y + 3 * C * lambda\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> Y; y \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> 1 / lambda * dist x y - 3 * C * lambda\n                         \\<le> dist (g x) (g y)\n 3. 1 \\<le> lambda\n 4. 0 \\<le> 3 * C * lambda", "show \"lambda \\<ge> 1\" \"3 * C * lambda \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> lambda &&& 0 \\<le> 3 * C * lambda", "using \\<open>lambda \\<ge> 1\\<close> \\<open>C \\<ge> 0\\<close>"], ["proof (prove)\nusing this:\n  1 \\<le> lambda\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. 1 \\<le> lambda &&& 0 \\<le> 3 * C * lambda", "by auto"], ["proof (state)\nthis:\n  1 \\<le> lambda\n  0 \\<le> 3 * C * lambda\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Y; y \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> dist (g x) (g y)\n                         \\<le> lambda * dist x y + 3 * C * lambda\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> Y; y \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> 1 / lambda * dist x y - 3 * C * lambda\n                         \\<le> dist (g x) (g y)", "fix y1 y2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Y; y \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> dist (g x) (g y)\n                         \\<le> lambda * dist x y + 3 * C * lambda\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> Y; y \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> 1 / lambda * dist x y - 3 * C * lambda\n                         \\<le> dist (g x) (g y)", "assume inY: \"y1 \\<in> Y\" \"y2 \\<in> Y\""], ["proof (state)\nthis:\n  y1 \\<in> Y\n  y2 \\<in> Y\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Y; y \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> dist (g x) (g y)\n                         \\<le> lambda * dist x y + 3 * C * lambda\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> Y; y \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> 1 / lambda * dist x y - 3 * C * lambda\n                         \\<le> dist (g x) (g y)", "then"], ["proof (chain)\npicking this:\n  y1 \\<in> Y\n  y2 \\<in> Y", "have inX: \"g y1 \\<in> X\" \"g y2 \\<in> X\""], ["proof (prove)\nusing this:\n  y1 \\<in> Y\n  y2 \\<in> Y\n\ngoal (1 subgoal):\n 1. g y1 \\<in> X &&& g y2 \\<in> X", "using *"], ["proof (prove)\nusing this:\n  y1 \\<in> Y\n  y2 \\<in> Y\n  ?y \\<in> Y \\<Longrightarrow>\n  g ?y \\<in> X \\<and> dist (f (g ?y)) ?y \\<le> C\n\ngoal (1 subgoal):\n 1. g y1 \\<in> X &&& g y2 \\<in> X", "by auto"], ["proof (state)\nthis:\n  g y1 \\<in> X\n  g y2 \\<in> X\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Y; y \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> dist (g x) (g y)\n                         \\<le> lambda * dist x y + 3 * C * lambda\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> Y; y \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> 1 / lambda * dist x y - 3 * C * lambda\n                         \\<le> dist (g x) (g y)", "have \"dist y1 y2 \\<le> dist y1 (f (g y1)) + dist (f (g y1)) (f (g y2)) + dist (f (g y2)) y2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist y1 y2\n    \\<le> dist y1 (f (g y1)) + dist (f (g y1)) (f (g y2)) +\n          dist (f (g y2)) y2", "using dist_triangle4"], ["proof (prove)\nusing this:\n  dist ?x ?t \\<le> dist ?x ?y + dist ?y ?z + dist ?z ?t\n\ngoal (1 subgoal):\n 1. dist y1 y2\n    \\<le> dist y1 (f (g y1)) + dist (f (g y1)) (f (g y2)) +\n          dist (f (g y2)) y2", "by auto"], ["proof (state)\nthis:\n  dist y1 y2\n  \\<le> dist y1 (f (g y1)) + dist (f (g y1)) (f (g y2)) + dist (f (g y2)) y2\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Y; y \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> dist (g x) (g y)\n                         \\<le> lambda * dist x y + 3 * C * lambda\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> Y; y \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> 1 / lambda * dist x y - 3 * C * lambda\n                         \\<le> dist (g x) (g y)", "also"], ["proof (state)\nthis:\n  dist y1 y2\n  \\<le> dist y1 (f (g y1)) + dist (f (g y1)) (f (g y2)) + dist (f (g y2)) y2\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Y; y \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> dist (g x) (g y)\n                         \\<le> lambda * dist x y + 3 * C * lambda\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> Y; y \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> 1 / lambda * dist x y - 3 * C * lambda\n                         \\<le> dist (g x) (g y)", "have \"... \\<le> C + dist (f (g y1)) (f (g y2)) + C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist y1 (f (g y1)) + dist (f (g y1)) (f (g y2)) + dist (f (g y2)) y2\n    \\<le> C + dist (f (g y1)) (f (g y2)) + C", "using *[OF inY(1)] *[OF inY(2)]"], ["proof (prove)\nusing this:\n  g y1 \\<in> X \\<and> dist (f (g y1)) y1 \\<le> C\n  g y2 \\<in> X \\<and> dist (f (g y2)) y2 \\<le> C\n\ngoal (1 subgoal):\n 1. dist y1 (f (g y1)) + dist (f (g y1)) (f (g y2)) + dist (f (g y2)) y2\n    \\<le> C + dist (f (g y1)) (f (g y2)) + C", "by (auto simp add: dist_commute intro: add_mono)"], ["proof (state)\nthis:\n  dist y1 (f (g y1)) + dist (f (g y1)) (f (g y2)) + dist (f (g y2)) y2\n  \\<le> C + dist (f (g y1)) (f (g y2)) + C\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Y; y \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> dist (g x) (g y)\n                         \\<le> lambda * dist x y + 3 * C * lambda\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> Y; y \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> 1 / lambda * dist x y - 3 * C * lambda\n                         \\<le> dist (g x) (g y)", "also"], ["proof (state)\nthis:\n  dist y1 (f (g y1)) + dist (f (g y1)) (f (g y2)) + dist (f (g y2)) y2\n  \\<le> C + dist (f (g y1)) (f (g y2)) + C\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Y; y \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> dist (g x) (g y)\n                         \\<le> lambda * dist x y + 3 * C * lambda\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> Y; y \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> 1 / lambda * dist x y - 3 * C * lambda\n                         \\<le> dist (g x) (g y)", "have \"... \\<le> C + (lambda * dist (g y1) (g y2) + C) + C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C + dist (f (g y1)) (f (g y2)) + C\n    \\<le> C + (lambda * dist (g y1) (g y2) + C) + C", "using quasi_isometry_betweenD(4)[OF assms inX]"], ["proof (prove)\nusing this:\n  dist (f (g y1)) (f (g y2)) \\<le> lambda * dist (g y1) (g y2) + C\n\ngoal (1 subgoal):\n 1. C + dist (f (g y1)) (f (g y2)) + C\n    \\<le> C + (lambda * dist (g y1) (g y2) + C) + C", "by (auto intro: add_mono)"], ["proof (state)\nthis:\n  C + dist (f (g y1)) (f (g y2)) + C\n  \\<le> C + (lambda * dist (g y1) (g y2) + C) + C\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Y; y \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> dist (g x) (g y)\n                         \\<le> lambda * dist x y + 3 * C * lambda\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> Y; y \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> 1 / lambda * dist x y - 3 * C * lambda\n                         \\<le> dist (g x) (g y)", "finally"], ["proof (chain)\npicking this:\n  dist y1 y2 \\<le> C + (lambda * dist (g y1) (g y2) + C) + C", "have \"dist y1 y2 - 3 * C \\<le> lambda * dist (g y1) (g y2)\""], ["proof (prove)\nusing this:\n  dist y1 y2 \\<le> C + (lambda * dist (g y1) (g y2) + C) + C\n\ngoal (1 subgoal):\n 1. dist y1 y2 - 3 * C \\<le> lambda * dist (g y1) (g y2)", "by auto"], ["proof (state)\nthis:\n  dist y1 y2 - 3 * C \\<le> lambda * dist (g y1) (g y2)\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Y; y \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> dist (g x) (g y)\n                         \\<le> lambda * dist x y + 3 * C * lambda\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> Y; y \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> 1 / lambda * dist x y - 3 * C * lambda\n                         \\<le> dist (g x) (g y)", "then"], ["proof (chain)\npicking this:\n  dist y1 y2 - 3 * C \\<le> lambda * dist (g y1) (g y2)", "have \"dist (g y1) (g y2) \\<ge> (1/lambda) * dist y1 y2 - 3 * C / lambda\""], ["proof (prove)\nusing this:\n  dist y1 y2 - 3 * C \\<le> lambda * dist (g y1) (g y2)\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist y1 y2 - 3 * C / lambda \\<le> dist (g y1) (g y2)", "using \\<open>lambda \\<ge> 1\\<close>"], ["proof (prove)\nusing this:\n  dist y1 y2 - 3 * C \\<le> lambda * dist (g y1) (g y2)\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist y1 y2 - 3 * C / lambda \\<le> dist (g y1) (g y2)", "by (auto simp add: divide_simps mult.commute)"], ["proof (state)\nthis:\n  1 / lambda * dist y1 y2 - 3 * C / lambda \\<le> dist (g y1) (g y2)\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Y; y \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> dist (g x) (g y)\n                         \\<le> lambda * dist x y + 3 * C * lambda\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> Y; y \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> 1 / lambda * dist x y - 3 * C * lambda\n                         \\<le> dist (g x) (g y)", "moreover"], ["proof (state)\nthis:\n  1 / lambda * dist y1 y2 - 3 * C / lambda \\<le> dist (g y1) (g y2)\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Y; y \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> dist (g x) (g y)\n                         \\<le> lambda * dist x y + 3 * C * lambda\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> Y; y \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> 1 / lambda * dist x y - 3 * C * lambda\n                         \\<le> dist (g x) (g y)", "have \"3 * C / lambda \\<le> 3 * C * lambda\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 3 * C / lambda \\<le> 3 * C * lambda", "using \\<open>lambda \\<ge> 1\\<close> \\<open>C \\<ge> 0\\<close>"], ["proof (prove)\nusing this:\n  1 \\<le> lambda\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. 3 * C / lambda \\<le> 3 * C * lambda", "apply (auto simp add: divide_simps mult_le_cancel_left1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> lambda; 0 < C\\<rbrakk>\n    \\<Longrightarrow> 1 \\<le> lambda * lambda", "by (metis dual_order.order_iff_strict less_1_mult mult.left_neutral)"], ["proof (state)\nthis:\n  3 * C / lambda \\<le> 3 * C * lambda\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Y; y \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> dist (g x) (g y)\n                         \\<le> lambda * dist x y + 3 * C * lambda\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> Y; y \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> 1 / lambda * dist x y - 3 * C * lambda\n                         \\<le> dist (g x) (g y)", "ultimately"], ["proof (chain)\npicking this:\n  1 / lambda * dist y1 y2 - 3 * C / lambda \\<le> dist (g y1) (g y2)\n  3 * C / lambda \\<le> 3 * C * lambda", "show \"dist (g y1) (g y2) \\<ge> (1/lambda) * dist y1 y2 - 3 * C * lambda\""], ["proof (prove)\nusing this:\n  1 / lambda * dist y1 y2 - 3 * C / lambda \\<le> dist (g y1) (g y2)\n  3 * C / lambda \\<le> 3 * C * lambda\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist y1 y2 - 3 * C * lambda \\<le> dist (g y1) (g y2)", "by auto"], ["proof (state)\nthis:\n  1 / lambda * dist y1 y2 - 3 * C * lambda \\<le> dist (g y1) (g y2)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Y; y \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> dist (g x) (g y)\n                         \\<le> lambda * dist x y + 3 * C * lambda", "have \"(1/lambda) * dist (g y1) (g y2) - C \\<le> dist (f (g y1)) (f (g y2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * dist (g y1) (g y2) - C \\<le> dist (f (g y1)) (f (g y2))", "using quasi_isometry_betweenD(5)[OF assms inX]"], ["proof (prove)\nusing this:\n  1 / lambda * dist (g y1) (g y2) - C \\<le> dist (f (g y1)) (f (g y2))\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist (g y1) (g y2) - C \\<le> dist (f (g y1)) (f (g y2))", "by auto"], ["proof (state)\nthis:\n  1 / lambda * dist (g y1) (g y2) - C \\<le> dist (f (g y1)) (f (g y2))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Y; y \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> dist (g x) (g y)\n                         \\<le> lambda * dist x y + 3 * C * lambda", "also"], ["proof (state)\nthis:\n  1 / lambda * dist (g y1) (g y2) - C \\<le> dist (f (g y1)) (f (g y2))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Y; y \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> dist (g x) (g y)\n                         \\<le> lambda * dist x y + 3 * C * lambda", "have \"... \\<le> dist (f (g y1)) y1 + dist y1 y2 + dist y2 (f (g y2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (f (g y1)) (f (g y2))\n    \\<le> dist (f (g y1)) y1 + dist y1 y2 + dist y2 (f (g y2))", "using dist_triangle4"], ["proof (prove)\nusing this:\n  dist ?x ?t \\<le> dist ?x ?y + dist ?y ?z + dist ?z ?t\n\ngoal (1 subgoal):\n 1. dist (f (g y1)) (f (g y2))\n    \\<le> dist (f (g y1)) y1 + dist y1 y2 + dist y2 (f (g y2))", "by auto"], ["proof (state)\nthis:\n  dist (f (g y1)) (f (g y2))\n  \\<le> dist (f (g y1)) y1 + dist y1 y2 + dist y2 (f (g y2))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Y; y \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> dist (g x) (g y)\n                         \\<le> lambda * dist x y + 3 * C * lambda", "also"], ["proof (state)\nthis:\n  dist (f (g y1)) (f (g y2))\n  \\<le> dist (f (g y1)) y1 + dist y1 y2 + dist y2 (f (g y2))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Y; y \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> dist (g x) (g y)\n                         \\<le> lambda * dist x y + 3 * C * lambda", "have \"... \\<le> C + dist y1 y2 + C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (f (g y1)) y1 + dist y1 y2 + dist y2 (f (g y2))\n    \\<le> C + dist y1 y2 + C", "using *[OF inY(1)] *[OF inY(2)]"], ["proof (prove)\nusing this:\n  g y1 \\<in> X \\<and> dist (f (g y1)) y1 \\<le> C\n  g y2 \\<in> X \\<and> dist (f (g y2)) y2 \\<le> C\n\ngoal (1 subgoal):\n 1. dist (f (g y1)) y1 + dist y1 y2 + dist y2 (f (g y2))\n    \\<le> C + dist y1 y2 + C", "by (auto simp add: dist_commute intro: add_mono)"], ["proof (state)\nthis:\n  dist (f (g y1)) y1 + dist y1 y2 + dist y2 (f (g y2))\n  \\<le> C + dist y1 y2 + C\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> Y; y \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> dist (g x) (g y)\n                         \\<le> lambda * dist x y + 3 * C * lambda", "finally"], ["proof (chain)\npicking this:\n  1 / lambda * dist (g y1) (g y2) - C \\<le> C + dist y1 y2 + C", "show \"dist (g y1) (g y2) \\<le> lambda * dist y1 y2 + 3 * C * lambda\""], ["proof (prove)\nusing this:\n  1 / lambda * dist (g y1) (g y2) - C \\<le> C + dist y1 y2 + C\n\ngoal (1 subgoal):\n 1. dist (g y1) (g y2) \\<le> lambda * dist y1 y2 + 3 * C * lambda", "using \\<open>lambda \\<ge> 1\\<close>"], ["proof (prove)\nusing this:\n  1 / lambda * dist (g y1) (g y2) - C \\<le> C + dist y1 y2 + C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. dist (g y1) (g y2) \\<le> lambda * dist y1 y2 + 3 * C * lambda", "by (auto simp add: divide_simps algebra_simps)"], ["proof (state)\nthis:\n  dist (g y1) (g y2) \\<le> lambda * dist y1 y2 + 3 * C * lambda\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lambda (3 * C * lambda) -quasi_isometry_on Y g\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       lambda (3 * C * lambda) -quasi_isometry_between Y X g \\<and>\n       (\\<forall>x\\<in>X. dist x (g (f x)) \\<le> 3 * C * lambda) \\<and>\n       (\\<forall>y\\<in>Y. dist y (f (g y)) \\<le> 3 * C * lambda)", "then"], ["proof (chain)\npicking this:\n  lambda (3 * C * lambda) -quasi_isometry_on Y g", "have \"lambda (3 * C * lambda)-quasi_isometry_between Y X g\""], ["proof (prove)\nusing this:\n  lambda (3 * C * lambda) -quasi_isometry_on Y g\n\ngoal (1 subgoal):\n 1. lambda (3 * C * lambda) -quasi_isometry_between Y X g", "proof (rule quasi_isometry_betweenI)"], ["proof (state)\ngoal (2 subgoals):\n 1. g ` Y \\<subseteq> X\n 2. \\<And>y.\n       y \\<in> X \\<Longrightarrow>\n       \\<exists>x\\<in>Y. dist (g x) y \\<le> 3 * C * lambda", "show \"g ` Y \\<subseteq> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g ` Y \\<subseteq> X", "using *"], ["proof (prove)\nusing this:\n  ?y \\<in> Y \\<Longrightarrow>\n  g ?y \\<in> X \\<and> dist (f (g ?y)) ?y \\<le> C\n\ngoal (1 subgoal):\n 1. g ` Y \\<subseteq> X", "by auto"], ["proof (state)\nthis:\n  g ` Y \\<subseteq> X\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> X \\<Longrightarrow>\n       \\<exists>x\\<in>Y. dist (g x) y \\<le> 3 * C * lambda", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> X \\<Longrightarrow>\n       \\<exists>x\\<in>Y. dist (g x) y \\<le> 3 * C * lambda", "assume \"x \\<in> X\""], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> X \\<Longrightarrow>\n       \\<exists>x\\<in>Y. dist (g x) y \\<le> 3 * C * lambda", "have \"f x \\<in> Y\" \"dist (g (f x)) x \\<le> 3 * C * lambda\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x \\<in> Y &&& dist (g (f x)) x \\<le> 3 * C * lambda", "using B[OF \\<open>x \\<in> X\\<close>] quasi_isometry_betweenD(2)[OF assms] \\<open>x \\<in> X\\<close>"], ["proof (prove)\nusing this:\n  dist x (g (f x)) \\<le> 3 * C * lambda\n  f ` X \\<subseteq> Y\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. f x \\<in> Y &&& dist (g (f x)) x \\<le> 3 * C * lambda", "by (auto simp add: dist_commute)"], ["proof (state)\nthis:\n  f x \\<in> Y\n  dist (g (f x)) x \\<le> 3 * C * lambda\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> X \\<Longrightarrow>\n       \\<exists>x\\<in>Y. dist (g x) y \\<le> 3 * C * lambda", "then"], ["proof (chain)\npicking this:\n  f x \\<in> Y\n  dist (g (f x)) x \\<le> 3 * C * lambda", "show \"\\<exists>y\\<in>Y. dist (g y) x \\<le> 3 * C * lambda\""], ["proof (prove)\nusing this:\n  f x \\<in> Y\n  dist (g (f x)) x \\<le> 3 * C * lambda\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>Y. dist (g y) x \\<le> 3 * C * lambda", "by blast"], ["proof (state)\nthis:\n  \\<exists>y\\<in>Y. dist (g y) x \\<le> 3 * C * lambda\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lambda (3 * C * lambda) -quasi_isometry_between Y X g\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       lambda (3 * C * lambda) -quasi_isometry_between Y X g \\<and>\n       (\\<forall>x\\<in>X. dist x (g (f x)) \\<le> 3 * C * lambda) \\<and>\n       (\\<forall>y\\<in>Y. dist y (f (g y)) \\<le> 3 * C * lambda)", "then"], ["proof (chain)\npicking this:\n  lambda (3 * C * lambda) -quasi_isometry_between Y X g", "show ?thesis"], ["proof (prove)\nusing this:\n  lambda (3 * C * lambda) -quasi_isometry_between Y X g\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       lambda (3 * C * lambda) -quasi_isometry_between Y X g \\<and>\n       (\\<forall>x\\<in>X. dist x (g (f x)) \\<le> 3 * C * lambda) \\<and>\n       (\\<forall>y\\<in>Y. dist y (f (g y)) \\<le> 3 * C * lambda)", "using A B"], ["proof (prove)\nusing this:\n  lambda (3 * C * lambda) -quasi_isometry_between Y X g\n  ?y \\<in> Y \\<Longrightarrow> dist ?y (f (g ?y)) \\<le> 3 * C * lambda\n  ?x \\<in> X \\<Longrightarrow> dist ?x (g (f ?x)) \\<le> 3 * C * lambda\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       lambda (3 * C * lambda) -quasi_isometry_between Y X g \\<and>\n       (\\<forall>x\\<in>X. dist x (g (f x)) \\<le> 3 * C * lambda) \\<and>\n       (\\<forall>y\\<in>Y. dist y (f (g y)) \\<le> 3 * C * lambda)", "by blast"], ["proof (state)\nthis:\n  \\<exists>g.\n     lambda (3 * C * lambda) -quasi_isometry_between Y X g \\<and>\n     (\\<forall>x\\<in>X. dist x (g (f x)) \\<le> 3 * C * lambda) \\<and>\n     (\\<forall>y\\<in>Y. dist y (f (g y)) \\<le> 3 * C * lambda)\n\ngoal:\nNo subgoals!", "qed"], ["", "proposition quasi_isometry_compose:\n  assumes \"lambda C-quasi_isometry_between X Y f\"\n          \"mu D-quasi_isometry_between Y Z g\"\n  shows \"(lambda * mu) (C * mu + 2 * D)-quasi_isometry_between X Z (g o f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (lambda * mu) (C * mu + 2 * D) -quasi_isometry_between X Z (g \\<circ> f)", "proof (rule quasi_isometry_betweenI)"], ["proof (state)\ngoal (3 subgoals):\n 1. (lambda * mu) (C * mu + 2 * D) -quasi_isometry_on X (g \\<circ> f)\n 2. (g \\<circ> f) ` X \\<subseteq> Z\n 3. \\<And>y.\n       y \\<in> Z \\<Longrightarrow>\n       \\<exists>x\\<in>X. dist ((g \\<circ> f) x) y \\<le> C * mu + 2 * D", "have \"(lambda * mu) (C * mu + D)-quasi_isometry_on X (g \\<circ> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (lambda * mu) (C * mu + D) -quasi_isometry_on X (g \\<circ> f)", "by (rule quasi_isometry_on_compose[OF quasi_isometry_betweenD(1)[OF assms(1)]\n        quasi_isometry_betweenD(1)[OF assms(2)] quasi_isometry_betweenD(2)[OF assms(1)]])"], ["proof (state)\nthis:\n  (lambda * mu) (C * mu + D) -quasi_isometry_on X (g \\<circ> f)\n\ngoal (3 subgoals):\n 1. (lambda * mu) (C * mu + 2 * D) -quasi_isometry_on X (g \\<circ> f)\n 2. (g \\<circ> f) ` X \\<subseteq> Z\n 3. \\<And>y.\n       y \\<in> Z \\<Longrightarrow>\n       \\<exists>x\\<in>X. dist ((g \\<circ> f) x) y \\<le> C * mu + 2 * D", "then"], ["proof (chain)\npicking this:\n  (lambda * mu) (C * mu + D) -quasi_isometry_on X (g \\<circ> f)", "show \"(lambda * mu) (C * mu + 2 * D)-quasi_isometry_on X (g \\<circ> f)\""], ["proof (prove)\nusing this:\n  (lambda * mu) (C * mu + D) -quasi_isometry_on X (g \\<circ> f)\n\ngoal (1 subgoal):\n 1. (lambda * mu) (C * mu + 2 * D) -quasi_isometry_on X (g \\<circ> f)", "apply (rule quasi_isometry_on_change_params)"], ["proof (prove)\ngoal (2 subgoals):\n 1. lambda * mu \\<le> lambda * mu\n 2. C * mu + D \\<le> C * mu + 2 * D", "using quasi_isometry_betweenD(7)[OF assms(2)]"], ["proof (prove)\nusing this:\n  0 \\<le> D\n\ngoal (2 subgoals):\n 1. lambda * mu \\<le> lambda * mu\n 2. C * mu + D \\<le> C * mu + 2 * D", "by auto"], ["proof (state)\nthis:\n  (lambda * mu) (C * mu + 2 * D) -quasi_isometry_on X (g \\<circ> f)\n\ngoal (2 subgoals):\n 1. (g \\<circ> f) ` X \\<subseteq> Z\n 2. \\<And>y.\n       y \\<in> Z \\<Longrightarrow>\n       \\<exists>x\\<in>X. dist ((g \\<circ> f) x) y \\<le> C * mu + 2 * D", "show \"(g \\<circ> f) ` X \\<subseteq> Z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (g \\<circ> f) ` X \\<subseteq> Z", "using quasi_isometry_betweenD(2)[OF assms(1)] quasi_isometry_betweenD(2)[OF assms(2)]"], ["proof (prove)\nusing this:\n  f ` X \\<subseteq> Y\n  g ` Y \\<subseteq> Z\n\ngoal (1 subgoal):\n 1. (g \\<circ> f) ` X \\<subseteq> Z", "by auto"], ["proof (state)\nthis:\n  (g \\<circ> f) ` X \\<subseteq> Z\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> Z \\<Longrightarrow>\n       \\<exists>x\\<in>X. dist ((g \\<circ> f) x) y \\<le> C * mu + 2 * D", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> Z \\<Longrightarrow>\n       \\<exists>x\\<in>X. dist ((g \\<circ> f) x) y \\<le> C * mu + 2 * D", "assume \"z \\<in> Z\""], ["proof (state)\nthis:\n  z \\<in> Z\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> Z \\<Longrightarrow>\n       \\<exists>x\\<in>X. dist ((g \\<circ> f) x) y \\<le> C * mu + 2 * D", "obtain y where y: \"y \\<in> Y\" \"dist (g y) z \\<le> D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> Y; dist (g y) z \\<le> D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using quasi_isometry_betweenD(3)[OF assms(2) \\<open>z \\<in> Z\\<close>]"], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>Y. dist (g x) z \\<le> D\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> Y; dist (g y) z \\<le> D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  y \\<in> Y\n  dist (g y) z \\<le> D\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> Z \\<Longrightarrow>\n       \\<exists>x\\<in>X. dist ((g \\<circ> f) x) y \\<le> C * mu + 2 * D", "obtain x where x: \"x \\<in> X\" \"dist (f x) y \\<le> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> X; dist (f x) y \\<le> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using quasi_isometry_betweenD(3)[OF assms(1) \\<open>y \\<in> Y\\<close>]"], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>X. dist (f x) y \\<le> C\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> X; dist (f x) y \\<le> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> X\n  dist (f x) y \\<le> C\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> Z \\<Longrightarrow>\n       \\<exists>x\\<in>X. dist ((g \\<circ> f) x) y \\<le> C * mu + 2 * D", "have \"dist ((g o f) x) z \\<le> dist (g (f x)) (g y) + dist (g y) z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist ((g \\<circ> f) x) z \\<le> dist (g (f x)) (g y) + dist (g y) z", "using dist_triangle"], ["proof (prove)\nusing this:\n  dist ?x ?z \\<le> dist ?x ?y + dist ?y ?z\n\ngoal (1 subgoal):\n 1. dist ((g \\<circ> f) x) z \\<le> dist (g (f x)) (g y) + dist (g y) z", "by auto"], ["proof (state)\nthis:\n  dist ((g \\<circ> f) x) z \\<le> dist (g (f x)) (g y) + dist (g y) z\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> Z \\<Longrightarrow>\n       \\<exists>x\\<in>X. dist ((g \\<circ> f) x) y \\<le> C * mu + 2 * D", "also"], ["proof (state)\nthis:\n  dist ((g \\<circ> f) x) z \\<le> dist (g (f x)) (g y) + dist (g y) z\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> Z \\<Longrightarrow>\n       \\<exists>x\\<in>X. dist ((g \\<circ> f) x) y \\<le> C * mu + 2 * D", "have \"... \\<le> (mu * dist (f x) y + D) + D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (g (f x)) (g y) + dist (g y) z \\<le> mu * dist (f x) y + D + D", "apply (rule add_mono, rule quasi_isometry_betweenD(4)[OF assms(2)])"], ["proof (prove)\ngoal (3 subgoals):\n 1. f x \\<in> Y\n 2. y \\<in> Y\n 3. dist (g y) z \\<le> D", "using x y quasi_isometry_betweenD(2)[OF assms(1)]"], ["proof (prove)\nusing this:\n  x \\<in> X\n  dist (f x) y \\<le> C\n  y \\<in> Y\n  dist (g y) z \\<le> D\n  f ` X \\<subseteq> Y\n\ngoal (3 subgoals):\n 1. f x \\<in> Y\n 2. y \\<in> Y\n 3. dist (g y) z \\<le> D", "by auto"], ["proof (state)\nthis:\n  dist (g (f x)) (g y) + dist (g y) z \\<le> mu * dist (f x) y + D + D\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> Z \\<Longrightarrow>\n       \\<exists>x\\<in>X. dist ((g \\<circ> f) x) y \\<le> C * mu + 2 * D", "also"], ["proof (state)\nthis:\n  dist (g (f x)) (g y) + dist (g y) z \\<le> mu * dist (f x) y + D + D\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> Z \\<Longrightarrow>\n       \\<exists>x\\<in>X. dist ((g \\<circ> f) x) y \\<le> C * mu + 2 * D", "have \"... \\<le> C * mu + 2 * D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mu * dist (f x) y + D + D \\<le> C * mu + 2 * D", "using x(2) quasi_isometry_betweenD(6)[OF assms(2)]"], ["proof (prove)\nusing this:\n  dist (f x) y \\<le> C\n  1 \\<le> mu\n\ngoal (1 subgoal):\n 1. mu * dist (f x) y + D + D \\<le> C * mu + 2 * D", "by auto"], ["proof (state)\nthis:\n  mu * dist (f x) y + D + D \\<le> C * mu + 2 * D\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> Z \\<Longrightarrow>\n       \\<exists>x\\<in>X. dist ((g \\<circ> f) x) y \\<le> C * mu + 2 * D", "finally"], ["proof (chain)\npicking this:\n  dist ((g \\<circ> f) x) z \\<le> C * mu + 2 * D", "show \"\\<exists>x\\<in>X. dist ((g \\<circ> f) x) z \\<le> C * mu + 2 * D\""], ["proof (prove)\nusing this:\n  dist ((g \\<circ> f) x) z \\<le> C * mu + 2 * D\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>X. dist ((g \\<circ> f) x) z \\<le> C * mu + 2 * D", "using x(1)"], ["proof (prove)\nusing this:\n  dist ((g \\<circ> f) x) z \\<le> C * mu + 2 * D\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>X. dist ((g \\<circ> f) x) z \\<le> C * mu + 2 * D", "by auto"], ["proof (state)\nthis:\n  \\<exists>x\\<in>X. dist ((g \\<circ> f) x) z \\<le> C * mu + 2 * D\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem quasi_isometric_equiv_rel:\n  \"quasi_isometric X X\"\n  \"quasi_isometric X Y \\<Longrightarrow> quasi_isometric Y Z \\<Longrightarrow> quasi_isometric X Z\"\n  \"quasi_isometric X Y \\<Longrightarrow> quasi_isometric Y X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. quasi_isometric X X &&&\n    (\\<lbrakk>quasi_isometric X Y; quasi_isometric Y Z\\<rbrakk>\n     \\<Longrightarrow> quasi_isometric X Z) &&&\n    (quasi_isometric X Y \\<Longrightarrow> quasi_isometric Y X)", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. quasi_isometric X X\n 2. \\<lbrakk>quasi_isometric X Y; quasi_isometric Y Z\\<rbrakk>\n    \\<Longrightarrow> quasi_isometric X Z\n 3. quasi_isometric X Y \\<Longrightarrow> quasi_isometric Y X", "show \"quasi_isometric X X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. quasi_isometric X X", "unfolding quasi_isometric_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>lambda C. Ex (lambda C -quasi_isometry_between X X)", "using quasi_isometry_subset[of X X 0]"], ["proof (prove)\nusing this:\n  \\<lbrakk>X \\<subseteq> X;\n   \\<And>y. y \\<in> X \\<Longrightarrow> \\<exists>x\\<in>X. dist x y \\<le> 0;\n   0 \\<le> 0\\<rbrakk>\n  \\<Longrightarrow> 1 0 -quasi_isometry_between X X (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. \\<exists>lambda C. Ex (lambda C -quasi_isometry_between X X)", "by auto"], ["proof (state)\nthis:\n  quasi_isometric X X\n\ngoal (2 subgoals):\n 1. \\<lbrakk>quasi_isometric X Y; quasi_isometric Y Z\\<rbrakk>\n    \\<Longrightarrow> quasi_isometric X Z\n 2. quasi_isometric X Y \\<Longrightarrow> quasi_isometric Y X", "assume H: \"quasi_isometric X Y\""], ["proof (state)\nthis:\n  quasi_isometric X Y\n\ngoal (2 subgoals):\n 1. \\<lbrakk>quasi_isometric X Y; quasi_isometric Y Z\\<rbrakk>\n    \\<Longrightarrow> quasi_isometric X Z\n 2. quasi_isometric X Y \\<Longrightarrow> quasi_isometric Y X", "then"], ["proof (chain)\npicking this:\n  quasi_isometric X Y", "show \"quasi_isometric Y X\""], ["proof (prove)\nusing this:\n  quasi_isometric X Y\n\ngoal (1 subgoal):\n 1. quasi_isometric Y X", "unfolding quasi_isometric_def"], ["proof (prove)\nusing this:\n  \\<exists>lambda C. Ex (lambda C -quasi_isometry_between X Y)\n\ngoal (1 subgoal):\n 1. \\<exists>lambda C. Ex (lambda C -quasi_isometry_between Y X)", "using quasi_isometry_inverse"], ["proof (prove)\nusing this:\n  \\<exists>lambda C. Ex (lambda C -quasi_isometry_between X Y)\n  ?lambda ?C -quasi_isometry_between ?X ?Y ?f \\<Longrightarrow>\n  \\<exists>g.\n     ?lambda (3 * ?C * ?lambda) -quasi_isometry_between ?Y ?X g \\<and>\n     (\\<forall>x\\<in>?X. dist x (g (?f x)) \\<le> 3 * ?C * ?lambda) \\<and>\n     (\\<forall>y\\<in>?Y. dist y (?f (g y)) \\<le> 3 * ?C * ?lambda)\n\ngoal (1 subgoal):\n 1. \\<exists>lambda C. Ex (lambda C -quasi_isometry_between Y X)", "by blast"], ["proof (state)\nthis:\n  quasi_isometric Y X\n\ngoal (1 subgoal):\n 1. \\<lbrakk>quasi_isometric X Y; quasi_isometric Y Z\\<rbrakk>\n    \\<Longrightarrow> quasi_isometric X Z", "assume \"quasi_isometric Y Z\""], ["proof (state)\nthis:\n  quasi_isometric Y Z\n\ngoal (1 subgoal):\n 1. \\<lbrakk>quasi_isometric X Y; quasi_isometric Y Z\\<rbrakk>\n    \\<Longrightarrow> quasi_isometric X Z", "then"], ["proof (chain)\npicking this:\n  quasi_isometric Y Z", "show \"quasi_isometric X Z\""], ["proof (prove)\nusing this:\n  quasi_isometric Y Z\n\ngoal (1 subgoal):\n 1. quasi_isometric X Z", "using H"], ["proof (prove)\nusing this:\n  quasi_isometric Y Z\n  quasi_isometric X Y\n\ngoal (1 subgoal):\n 1. quasi_isometric X Z", "unfolding quasi_isometric_def"], ["proof (prove)\nusing this:\n  \\<exists>lambda C. Ex (lambda C -quasi_isometry_between Y Z)\n  \\<exists>lambda C. Ex (lambda C -quasi_isometry_between X Y)\n\ngoal (1 subgoal):\n 1. \\<exists>lambda C. Ex (lambda C -quasi_isometry_between X Z)", "using quasi_isometry_compose"], ["proof (prove)\nusing this:\n  \\<exists>lambda C. Ex (lambda C -quasi_isometry_between Y Z)\n  \\<exists>lambda C. Ex (lambda C -quasi_isometry_between X Y)\n  \\<lbrakk>?lambda ?C -quasi_isometry_between ?X ?Y ?f;\n   ?mu ?D -quasi_isometry_between ?Y ?Z ?g\\<rbrakk>\n  \\<Longrightarrow> (?lambda *\n                     ?mu) (?C * ?mu + 2 * ?D) -quasi_isometry_between\n                     ?X ?Z (?g \\<circ> ?f)\n\ngoal (1 subgoal):\n 1. \\<exists>lambda C. Ex (lambda C -quasi_isometry_between X Z)", "by blast"], ["proof (state)\nthis:\n  quasi_isometric X Z\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Many interesting properties in geometric group theory are invariant under quasi-isometry.\nWe prove the most basic ones here.\\<close>"], ["", "lemma quasi_isometric_empty:\n  assumes \"X = {}\" \"quasi_isometric X Y\"\n  shows \"Y = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Y = {}", "using assms"], ["proof (prove)\nusing this:\n  X = {}\n  quasi_isometric X Y\n\ngoal (1 subgoal):\n 1. Y = {}", "unfolding quasi_isometric_def quasi_isometry_between_def quasi_isometry_on_def"], ["proof (prove)\nusing this:\n  X = {}\n  \\<exists>lambda C f.\n     (1 \\<le> lambda \\<and>\n      0 \\<le> C \\<and>\n      (\\<forall>x\\<in>X.\n          \\<forall>y\\<in>X.\n             dist (f x) (f y) \\<le> lambda * dist x y + C \\<and>\n             1 / lambda * dist x y - C \\<le> dist (f x) (f y))) \\<and>\n     f ` X \\<subseteq> Y \\<and>\n     (\\<forall>y\\<in>Y. \\<exists>x\\<in>X. dist (f x) y \\<le> C)\n\ngoal (1 subgoal):\n 1. Y = {}", "by blast"], ["", "lemma quasi_isometric_bounded:\n  assumes \"bounded X\" \"quasi_isometric X Y\"\n  shows \"bounded Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded Y", "proof (cases \"X = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. X = {} \\<Longrightarrow> bounded Y\n 2. X \\<noteq> {} \\<Longrightarrow> bounded Y", "case True"], ["proof (state)\nthis:\n  X = {}\n\ngoal (2 subgoals):\n 1. X = {} \\<Longrightarrow> bounded Y\n 2. X \\<noteq> {} \\<Longrightarrow> bounded Y", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded Y", "using quasi_isometric_empty[OF True assms(2)]"], ["proof (prove)\nusing this:\n  Y = {}\n\ngoal (1 subgoal):\n 1. bounded Y", "by auto"], ["proof (state)\nthis:\n  bounded Y\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow> bounded Y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow> bounded Y", "case False"], ["proof (state)\nthis:\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow> bounded Y", "obtain lambda C f where QI: \"lambda C-quasi_isometry_between X Y f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>lambda C f.\n        lambda C -quasi_isometry_between X Y f \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms(2)"], ["proof (prove)\nusing this:\n  quasi_isometric X Y\n\ngoal (1 subgoal):\n 1. (\\<And>lambda C f.\n        lambda C -quasi_isometry_between X Y f \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding quasi_isometric_def"], ["proof (prove)\nusing this:\n  \\<exists>lambda C. Ex (lambda C -quasi_isometry_between X Y)\n\ngoal (1 subgoal):\n 1. (\\<And>lambda C f.\n        lambda C -quasi_isometry_between X Y f \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  lambda C -quasi_isometry_between X Y f\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow> bounded Y", "obtain x where \"x \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x. x \\<in> X \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using False"], ["proof (prove)\nusing this:\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>x. x \\<in> X \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow> bounded Y", "obtain e where e: \"\\<And>z. z \\<in> X \\<Longrightarrow> dist x z \\<le> e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>e.\n        (\\<And>z.\n            z \\<in> X \\<Longrightarrow> dist x z \\<le> e) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using bounded_any_center assms(1)"], ["proof (prove)\nusing this:\n  bounded ?S = (\\<exists>e. \\<forall>y\\<in>?S. dist ?a y \\<le> e)\n  bounded X\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        (\\<And>z.\n            z \\<in> X \\<Longrightarrow> dist x z \\<le> e) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  ?z \\<in> X \\<Longrightarrow> dist x ?z \\<le> e\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow> bounded Y", "have \"dist (f x) y \\<le> 2 * C + lambda * e\" if \"y \\<in> Y\" for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (f x) y \\<le> 2 * C + lambda * e", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist (f x) y \\<le> 2 * C + lambda * e", "obtain z where *: \"z \\<in> X\" \"dist (f z) y \\<le> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>z \\<in> X; dist (f z) y \\<le> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using quasi_isometry_betweenD(3)[OF QI \\<open>y \\<in> Y\\<close>]"], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>X. dist (f x) y \\<le> C\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>z \\<in> X; dist (f z) y \\<le> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  z \\<in> X\n  dist (f z) y \\<le> C\n\ngoal (1 subgoal):\n 1. dist (f x) y \\<le> 2 * C + lambda * e", "have \"dist (f x) y \\<le> dist (f x) (f z) + dist (f z) y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (f x) y \\<le> dist (f x) (f z) + dist (f z) y", "using dist_triangle"], ["proof (prove)\nusing this:\n  dist ?x ?z \\<le> dist ?x ?y + dist ?y ?z\n\ngoal (1 subgoal):\n 1. dist (f x) y \\<le> dist (f x) (f z) + dist (f z) y", "by auto"], ["proof (state)\nthis:\n  dist (f x) y \\<le> dist (f x) (f z) + dist (f z) y\n\ngoal (1 subgoal):\n 1. dist (f x) y \\<le> 2 * C + lambda * e", "also"], ["proof (state)\nthis:\n  dist (f x) y \\<le> dist (f x) (f z) + dist (f z) y\n\ngoal (1 subgoal):\n 1. dist (f x) y \\<le> 2 * C + lambda * e", "have \"... \\<le> (lambda * dist x z + C) + C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (f x) (f z) + dist (f z) y \\<le> lambda * dist x z + C + C", "using * quasi_isometry_betweenD(4)[OF QI \\<open>x \\<in> X\\<close> \\<open>z \\<in> X\\<close>]"], ["proof (prove)\nusing this:\n  z \\<in> X\n  dist (f z) y \\<le> C\n  dist (f x) (f z) \\<le> lambda * dist x z + C\n\ngoal (1 subgoal):\n 1. dist (f x) (f z) + dist (f z) y \\<le> lambda * dist x z + C + C", "by (auto simp add: add_mono)"], ["proof (state)\nthis:\n  dist (f x) (f z) + dist (f z) y \\<le> lambda * dist x z + C + C\n\ngoal (1 subgoal):\n 1. dist (f x) y \\<le> 2 * C + lambda * e", "also"], ["proof (state)\nthis:\n  dist (f x) (f z) + dist (f z) y \\<le> lambda * dist x z + C + C\n\ngoal (1 subgoal):\n 1. dist (f x) y \\<le> 2 * C + lambda * e", "have \"... \\<le> 2 * C + lambda * e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda * dist x z + C + C \\<le> 2 * C + lambda * e", "using quasi_isometry_betweenD(6)[OF QI] e[OF \\<open>z \\<in> X\\<close>]"], ["proof (prove)\nusing this:\n  1 \\<le> lambda\n  dist x z \\<le> e\n\ngoal (1 subgoal):\n 1. lambda * dist x z + C + C \\<le> 2 * C + lambda * e", "by (auto simp add: algebra_simps)"], ["proof (state)\nthis:\n  lambda * dist x z + C + C \\<le> 2 * C + lambda * e\n\ngoal (1 subgoal):\n 1. dist (f x) y \\<le> 2 * C + lambda * e", "finally"], ["proof (chain)\npicking this:\n  dist (f x) y \\<le> 2 * C + lambda * e", "show ?thesis"], ["proof (prove)\nusing this:\n  dist (f x) y \\<le> 2 * C + lambda * e\n\ngoal (1 subgoal):\n 1. dist (f x) y \\<le> 2 * C + lambda * e", "by simp"], ["proof (state)\nthis:\n  dist (f x) y \\<le> 2 * C + lambda * e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?y \\<in> Y \\<Longrightarrow> dist (f x) ?y \\<le> 2 * C + lambda * e\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow> bounded Y", "then"], ["proof (chain)\npicking this:\n  ?y \\<in> Y \\<Longrightarrow> dist (f x) ?y \\<le> 2 * C + lambda * e", "show ?thesis"], ["proof (prove)\nusing this:\n  ?y \\<in> Y \\<Longrightarrow> dist (f x) ?y \\<le> 2 * C + lambda * e\n\ngoal (1 subgoal):\n 1. bounded Y", "unfolding bounded_def"], ["proof (prove)\nusing this:\n  ?y \\<in> Y \\<Longrightarrow> dist (f x) ?y \\<le> 2 * C + lambda * e\n\ngoal (1 subgoal):\n 1. \\<exists>x e. \\<forall>y\\<in>Y. dist x y \\<le> e", "by auto"], ["proof (state)\nthis:\n  bounded Y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma quasi_isometric_bounded_iff:\n  assumes \"bounded X\" \"X \\<noteq> {}\" \"bounded Y\" \"Y \\<noteq> {}\"\n  shows \"quasi_isometric X Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. quasi_isometric X Y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. quasi_isometric X Y", "obtain x y where \"x \\<in> X\" \"y \\<in> Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        \\<lbrakk>x \\<in> X; y \\<in> Y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  bounded X\n  X \\<noteq> {}\n  bounded Y\n  Y \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        \\<lbrakk>x \\<in> X; y \\<in> Y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> X\n  y \\<in> Y\n\ngoal (1 subgoal):\n 1. quasi_isometric X Y", "obtain C where C: \"\\<And>z. z \\<in> Y \\<Longrightarrow> dist y z \\<le> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>C.\n        (\\<And>z.\n            z \\<in> Y \\<Longrightarrow> dist y z \\<le> C) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using \\<open>bounded Y\\<close> bounded_any_center"], ["proof (prove)\nusing this:\n  bounded Y\n  bounded ?S = (\\<exists>e. \\<forall>y\\<in>?S. dist ?a y \\<le> e)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        (\\<And>z.\n            z \\<in> Y \\<Longrightarrow> dist y z \\<le> C) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  ?z \\<in> Y \\<Longrightarrow> dist y ?z \\<le> C\n\ngoal (1 subgoal):\n 1. quasi_isometric X Y", "have \"C \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> C", "using C[OF \\<open>y \\<in> Y\\<close>]"], ["proof (prove)\nusing this:\n  dist y y \\<le> C\n\ngoal (1 subgoal):\n 1. 0 \\<le> C", "by auto"], ["proof (state)\nthis:\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. quasi_isometric X Y", "obtain D where D: \"\\<And>z. z \\<in> X \\<Longrightarrow> dist x z \\<le> D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>D.\n        (\\<And>z.\n            z \\<in> X \\<Longrightarrow> dist x z \\<le> D) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using \\<open>bounded X\\<close> bounded_any_center"], ["proof (prove)\nusing this:\n  bounded X\n  bounded ?S = (\\<exists>e. \\<forall>y\\<in>?S. dist ?a y \\<le> e)\n\ngoal (1 subgoal):\n 1. (\\<And>D.\n        (\\<And>z.\n            z \\<in> X \\<Longrightarrow> dist x z \\<le> D) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  ?z \\<in> X \\<Longrightarrow> dist x ?z \\<le> D\n\ngoal (1 subgoal):\n 1. quasi_isometric X Y", "have \"D \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> D", "using D[OF \\<open>x \\<in> X\\<close>]"], ["proof (prove)\nusing this:\n  dist x x \\<le> D\n\ngoal (1 subgoal):\n 1. 0 \\<le> D", "by auto"], ["proof (state)\nthis:\n  0 \\<le> D\n\ngoal (1 subgoal):\n 1. quasi_isometric X Y", "define f::\"'a \\<Rightarrow> 'b\" where \"f = (\\<lambda>_. y)\""], ["proof (state)\nthis:\n  f = (\\<lambda>_. y)\n\ngoal (1 subgoal):\n 1. quasi_isometric X Y", "have \"1 (C + 2 * D)-quasi_isometry_between X Y f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 (C + 2 * D) -quasi_isometry_between X Y f", "proof (rule quasi_isometry_betweenI)"], ["proof (state)\ngoal (3 subgoals):\n 1. 1 (C + 2 * D) -quasi_isometry_on X f\n 2. f ` X \\<subseteq> Y\n 3. \\<And>y.\n       y \\<in> Y \\<Longrightarrow>\n       \\<exists>x\\<in>X. dist (f x) y \\<le> C + 2 * D", "show \"f`X \\<subseteq> Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` X \\<subseteq> Y", "unfolding f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>_. y) ` X \\<subseteq> Y", "using \\<open>y \\<in> Y\\<close>"], ["proof (prove)\nusing this:\n  y \\<in> Y\n\ngoal (1 subgoal):\n 1. (\\<lambda>_. y) ` X \\<subseteq> Y", "by auto"], ["proof (state)\nthis:\n  f ` X \\<subseteq> Y\n\ngoal (2 subgoals):\n 1. 1 (C + 2 * D) -quasi_isometry_on X f\n 2. \\<And>y.\n       y \\<in> Y \\<Longrightarrow>\n       \\<exists>x\\<in>X. dist (f x) y \\<le> C + 2 * D", "show \"1 (C + 2 * D)-quasi_isometry_on X f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 (C + 2 * D) -quasi_isometry_on X f", "proof (rule quasi_isometry_onI, auto simp add: \\<open>C \\<ge> 0\\<close> \\<open>D \\<ge> 0\\<close> f_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> dist x y \\<le> C + 2 * D", "fix a b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> dist x y \\<le> C + 2 * D", "assume \"a \\<in> X\" \"b \\<in> X\""], ["proof (state)\nthis:\n  a \\<in> X\n  b \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> dist x y \\<le> C + 2 * D", "have \"dist a b \\<le> dist a x + dist x b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist a b \\<le> dist a x + dist x b", "using dist_triangle"], ["proof (prove)\nusing this:\n  dist ?x ?z \\<le> dist ?x ?y + dist ?y ?z\n\ngoal (1 subgoal):\n 1. dist a b \\<le> dist a x + dist x b", "by auto"], ["proof (state)\nthis:\n  dist a b \\<le> dist a x + dist x b\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> dist x y \\<le> C + 2 * D", "also"], ["proof (state)\nthis:\n  dist a b \\<le> dist a x + dist x b\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> dist x y \\<le> C + 2 * D", "have \"... \\<le> D + D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist a x + dist x b \\<le> D + D", "using D[OF \\<open>a \\<in> X\\<close>] D[OF \\<open>b \\<in> X\\<close>]"], ["proof (prove)\nusing this:\n  dist x a \\<le> D\n  dist x b \\<le> D\n\ngoal (1 subgoal):\n 1. dist a x + dist x b \\<le> D + D", "by (auto simp add: dist_commute)"], ["proof (state)\nthis:\n  dist a x + dist x b \\<le> D + D\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> X; y \\<in> X\\<rbrakk>\n       \\<Longrightarrow> dist x y \\<le> C + 2 * D", "finally"], ["proof (chain)\npicking this:\n  dist a b \\<le> D + D", "show \"dist a b \\<le> C + 2 * D\""], ["proof (prove)\nusing this:\n  dist a b \\<le> D + D\n\ngoal (1 subgoal):\n 1. dist a b \\<le> C + 2 * D", "using \\<open>C \\<ge> 0\\<close>"], ["proof (prove)\nusing this:\n  dist a b \\<le> D + D\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. dist a b \\<le> C + 2 * D", "by auto"], ["proof (state)\nthis:\n  dist a b \\<le> C + 2 * D\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  1 (C + 2 * D) -quasi_isometry_on X f\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> Y \\<Longrightarrow>\n       \\<exists>x\\<in>X. dist (f x) y \\<le> C + 2 * D", "show \"\\<exists>a\\<in>X. dist (f a) z \\<le> C + 2 * D\" if \"z \\<in> Y\" for z"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a\\<in>X. dist (f a) z \\<le> C + 2 * D", "unfolding f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a\\<in>X. dist y z \\<le> C + 2 * D", "using \\<open>x \\<in> X\\<close> C[OF \\<open>z \\<in> Y\\<close>] \\<open>D \\<ge> 0\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> X\n  dist y z \\<le> C\n  0 \\<le> D\n\ngoal (1 subgoal):\n 1. \\<exists>a\\<in>X. dist y z \\<le> C + 2 * D", "by auto"], ["proof (state)\nthis:\n  ?z \\<in> Y \\<Longrightarrow>\n  \\<exists>a\\<in>X. dist (f a) ?z \\<le> C + 2 * D\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  1 (C + 2 * D) -quasi_isometry_between X Y f\n\ngoal (1 subgoal):\n 1. quasi_isometric X Y", "then"], ["proof (chain)\npicking this:\n  1 (C + 2 * D) -quasi_isometry_between X Y f", "show ?thesis"], ["proof (prove)\nusing this:\n  1 (C + 2 * D) -quasi_isometry_between X Y f\n\ngoal (1 subgoal):\n 1. quasi_isometric X Y", "unfolding quasi_isometric_def"], ["proof (prove)\nusing this:\n  1 (C + 2 * D) -quasi_isometry_between X Y f\n\ngoal (1 subgoal):\n 1. \\<exists>lambda C. Ex (lambda C -quasi_isometry_between X Y)", "by auto"], ["proof (state)\nthis:\n  quasi_isometric X Y\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Quasi-isometries of Euclidean spaces.\\<close>"], ["", "text \\<open>A less trivial fact is that the dimension of euclidean spaces is invariant under\nquasi-isometries. It is proved below using growth argument, as quasi-isometries preserve the\ngrowth rate.\n\nThe growth of the space is asymptotic behavior of the number of well-separated points that\nfit in a ball of radius $R$, when $R$ tends to infinity. Up to a suitable equivalence, it is\nclearly a quasi-isometry invariance. We show below that, in a Euclidean space of dimension $d$,\nthe growth is like $R^d$: the upper bound is obtained by using the fact that we have disjoint balls\ninside a big ball, hence volume controls conclude the argument, while the lower bound is obtained\nby considering integer points.\\<close>"], ["", "text \\<open>First, we show that the growth rate of a Euclidean space of dimension $d$ is bounded\nfrom above by $R^d$, using the control on measure of disjoint balls and a volume argument.\\<close>"], ["", "proposition growth_rate_euclidean_above:\n  fixes D::real\n  assumes \"D > (0::real)\"\n      and H: \"F \\<subseteq> cball (0::'a::euclidean_space) R\" \"R \\<ge> 0\"\n          \"\\<And>x y. x \\<in> F \\<Longrightarrow> y \\<in> F \\<Longrightarrow> x \\<noteq> y \\<Longrightarrow> dist x y \\<ge> D\"\n  shows \"finite F \\<and> card F \\<le> 1 + ((6/D)^(DIM('a))) * R^(DIM('a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite F \\<and> real (card F) \\<le> 1 + (6 / D) ^ DIM('a) * R ^ DIM('a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite F \\<and> real (card F) \\<le> 1 + (6 / D) ^ DIM('a) * R ^ DIM('a)", "define C::real where \"C = ((6/D)^(DIM('a)))\""], ["proof (state)\nthis:\n  C = (6 / D) ^ DIM('a)\n\ngoal (1 subgoal):\n 1. finite F \\<and> real (card F) \\<le> 1 + (6 / D) ^ DIM('a) * R ^ DIM('a)", "have \"C \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> C", "unfolding C_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> (6 / D) ^ DIM('a)", "using \\<open>D > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < D\n\ngoal (1 subgoal):\n 1. 0 \\<le> (6 / D) ^ DIM('a)", "by auto"], ["proof (state)\nthis:\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. finite F \\<and> real (card F) \\<le> 1 + (6 / D) ^ DIM('a) * R ^ DIM('a)", "have \"D/3 \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> D / 3", "using assms"], ["proof (prove)\nusing this:\n  0 < D\n  F \\<subseteq> cball (0::'a) R\n  0 \\<le> R\n  \\<lbrakk>?x \\<in> F; ?y \\<in> F; ?x \\<noteq> ?y\\<rbrakk>\n  \\<Longrightarrow> D \\<le> dist ?x ?y\n\ngoal (1 subgoal):\n 1. 0 \\<le> D / 3", "by auto"], ["proof (state)\nthis:\n  0 \\<le> D / 3\n\ngoal (1 subgoal):\n 1. finite F \\<and> real (card F) \\<le> 1 + (6 / D) ^ DIM('a) * R ^ DIM('a)", "have \"finite F \\<and> card F \\<le> 1 + C * R^(DIM('a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite F \\<and> real (card F) \\<le> 1 + C * R ^ DIM('a)", "proof (cases \"R < D/2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. R < D / 2 \\<Longrightarrow>\n    finite F \\<and> real (card F) \\<le> 1 + C * R ^ DIM('a)\n 2. \\<not> R < D / 2 \\<Longrightarrow>\n    finite F \\<and> real (card F) \\<le> 1 + C * R ^ DIM('a)", "case True"], ["proof (state)\nthis:\n  R < D / 2\n\ngoal (2 subgoals):\n 1. R < D / 2 \\<Longrightarrow>\n    finite F \\<and> real (card F) \\<le> 1 + C * R ^ DIM('a)\n 2. \\<not> R < D / 2 \\<Longrightarrow>\n    finite F \\<and> real (card F) \\<le> 1 + C * R ^ DIM('a)", "have \"x = y\" if \"x \\<in> F\" \"y \\<in> F\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = y", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> False", "assume \"\\<not>(x = y)\""], ["proof (state)\nthis:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  x \\<noteq> y", "have \"D \\<le> dist x y\""], ["proof (prove)\nusing this:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. D \\<le> dist x y", "using H \\<open>x \\<in> F\\<close> \\<open>y \\<in> F\\<close>"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  F \\<subseteq> cball (0::'a) R\n  0 \\<le> R\n  \\<lbrakk>?x \\<in> F; ?y \\<in> F; ?x \\<noteq> ?y\\<rbrakk>\n  \\<Longrightarrow> D \\<le> dist ?x ?y\n  x \\<in> F\n  y \\<in> F\n\ngoal (1 subgoal):\n 1. D \\<le> dist x y", "by auto"], ["proof (state)\nthis:\n  D \\<le> dist x y\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  D \\<le> dist x y\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> False", "have \"... \\<le> dist x 0 + dist 0 y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x y \\<le> dist x (0::'a) + dist (0::'a) y", "by (rule dist_triangle)"], ["proof (state)\nthis:\n  dist x y \\<le> dist x (0::'a) + dist (0::'a) y\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  dist x y \\<le> dist x (0::'a) + dist (0::'a) y\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> False", "have \"... \\<le> R + R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x (0::'a) + dist (0::'a) y \\<le> R + R", "using H(1) \\<open>x \\<in> F\\<close> \\<open>y \\<in> F\\<close>"], ["proof (prove)\nusing this:\n  F \\<subseteq> cball (0::'a) R\n  x \\<in> F\n  y \\<in> F\n\ngoal (1 subgoal):\n 1. dist x (0::'a) + dist (0::'a) y \\<le> R + R", "by (intro add_mono, auto)"], ["proof (state)\nthis:\n  dist x (0::'a) + dist (0::'a) y \\<le> R + R\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  dist x (0::'a) + dist (0::'a) y \\<le> R + R\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> False", "have \"... < D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R + R < D", "using \\<open>R < D/2\\<close>"], ["proof (prove)\nusing this:\n  R < D / 2\n\ngoal (1 subgoal):\n 1. R + R < D", "by auto"], ["proof (state)\nthis:\n  R + R < D\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  D < D", "show False"], ["proof (prove)\nusing this:\n  D < D\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> F; ?y \\<in> F\\<rbrakk> \\<Longrightarrow> ?x = ?y\n\ngoal (2 subgoals):\n 1. R < D / 2 \\<Longrightarrow>\n    finite F \\<and> real (card F) \\<le> 1 + C * R ^ DIM('a)\n 2. \\<not> R < D / 2 \\<Longrightarrow>\n    finite F \\<and> real (card F) \\<le> 1 + C * R ^ DIM('a)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?x \\<in> F; ?y \\<in> F\\<rbrakk> \\<Longrightarrow> ?x = ?y", "have \"finite F \\<and> card F \\<le> 1\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> F; ?y \\<in> F\\<rbrakk> \\<Longrightarrow> ?x = ?y\n\ngoal (1 subgoal):\n 1. finite F \\<and> card F \\<le> 1", "using finite_at_most_singleton"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> F; ?y \\<in> F\\<rbrakk> \\<Longrightarrow> ?x = ?y\n  (\\<And>x y.\n      \\<lbrakk>x \\<in> ?F; y \\<in> ?F\\<rbrakk>\n      \\<Longrightarrow> x = y) \\<Longrightarrow>\n  finite ?F \\<and> card ?F \\<le> 1\n\ngoal (1 subgoal):\n 1. finite F \\<and> card F \\<le> 1", "by auto"], ["proof (state)\nthis:\n  finite F \\<and> card F \\<le> 1\n\ngoal (2 subgoals):\n 1. R < D / 2 \\<Longrightarrow>\n    finite F \\<and> real (card F) \\<le> 1 + C * R ^ DIM('a)\n 2. \\<not> R < D / 2 \\<Longrightarrow>\n    finite F \\<and> real (card F) \\<le> 1 + C * R ^ DIM('a)", "moreover"], ["proof (state)\nthis:\n  finite F \\<and> card F \\<le> 1\n\ngoal (2 subgoals):\n 1. R < D / 2 \\<Longrightarrow>\n    finite F \\<and> real (card F) \\<le> 1 + C * R ^ DIM('a)\n 2. \\<not> R < D / 2 \\<Longrightarrow>\n    finite F \\<and> real (card F) \\<le> 1 + C * R ^ DIM('a)", "have \"1 + 0 * R^(DIM('a)) \\<le> 1 + C * R^(DIM('a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + 0 * R ^ DIM('a) \\<le> 1 + C * R ^ DIM('a)", "using \\<open>C \\<ge> 0\\<close> \\<open>R \\<ge> 0\\<close>"], ["proof (prove)\nusing this:\n  0 \\<le> C\n  0 \\<le> R\n\ngoal (1 subgoal):\n 1. 1 + 0 * R ^ DIM('a) \\<le> 1 + C * R ^ DIM('a)", "by (auto intro: mono_intros)"], ["proof (state)\nthis:\n  1 + 0 * R ^ DIM('a) \\<le> 1 + C * R ^ DIM('a)\n\ngoal (2 subgoals):\n 1. R < D / 2 \\<Longrightarrow>\n    finite F \\<and> real (card F) \\<le> 1 + C * R ^ DIM('a)\n 2. \\<not> R < D / 2 \\<Longrightarrow>\n    finite F \\<and> real (card F) \\<le> 1 + C * R ^ DIM('a)", "ultimately"], ["proof (chain)\npicking this:\n  finite F \\<and> card F \\<le> 1\n  1 + 0 * R ^ DIM('a) \\<le> 1 + C * R ^ DIM('a)", "show ?thesis"], ["proof (prove)\nusing this:\n  finite F \\<and> card F \\<le> 1\n  1 + 0 * R ^ DIM('a) \\<le> 1 + C * R ^ DIM('a)\n\ngoal (1 subgoal):\n 1. finite F \\<and> real (card F) \\<le> 1 + C * R ^ DIM('a)", "by auto"], ["proof (state)\nthis:\n  finite F \\<and> real (card F) \\<le> 1 + C * R ^ DIM('a)\n\ngoal (1 subgoal):\n 1. \\<not> R < D / 2 \\<Longrightarrow>\n    finite F \\<and> real (card F) \\<le> 1 + C * R ^ DIM('a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> R < D / 2 \\<Longrightarrow>\n    finite F \\<and> real (card F) \\<le> 1 + C * R ^ DIM('a)", "case False"], ["proof (state)\nthis:\n  \\<not> R < D / 2\n\ngoal (1 subgoal):\n 1. \\<not> R < D / 2 \\<Longrightarrow>\n    finite F \\<and> real (card F) \\<le> 1 + C * R ^ DIM('a)", "have \"card G \\<le> 1 + C * R^(DIM('a))\" if \"G \\<subseteq> F\" \"finite G\" for G"], ["proof (prove)\ngoal (1 subgoal):\n 1. real (card G) \\<le> 1 + C * R ^ DIM('a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. real (card G) \\<le> 1 + C * R ^ DIM('a)", "have \"norm y \\<le> 2*R\" if \"y \\<in> cball x (D/3)\" \"x \\<in> G\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm y \\<le> 2 * R", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. norm y \\<le> 2 * R", "have \"norm y = dist 0 y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm y = dist (0::'a) y", "by auto"], ["proof (state)\nthis:\n  norm y = dist (0::'a) y\n\ngoal (1 subgoal):\n 1. norm y \\<le> 2 * R", "also"], ["proof (state)\nthis:\n  norm y = dist (0::'a) y\n\ngoal (1 subgoal):\n 1. norm y \\<le> 2 * R", "have \"... \\<le> dist 0 x + dist x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (0::'a) y \\<le> dist (0::'a) x + dist x y", "by (rule dist_triangle)"], ["proof (state)\nthis:\n  dist (0::'a) y \\<le> dist (0::'a) x + dist x y\n\ngoal (1 subgoal):\n 1. norm y \\<le> 2 * R", "also"], ["proof (state)\nthis:\n  dist (0::'a) y \\<le> dist (0::'a) x + dist x y\n\ngoal (1 subgoal):\n 1. norm y \\<le> 2 * R", "have \"... \\<le> R + D/3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (0::'a) x + dist x y \\<le> R + D / 3", "using \\<open>x \\<in> G\\<close> \\<open>G \\<subseteq> F\\<close> \\<open>y \\<in> cball x (D/3)\\<close> \\<open>F \\<subseteq> cball 0 R\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> G\n  G \\<subseteq> F\n  y \\<in> cball x (D / 3)\n  F \\<subseteq> cball (0::'a) R\n\ngoal (1 subgoal):\n 1. dist (0::'a) x + dist x y \\<le> R + D / 3", "by (auto intro: add_mono)"], ["proof (state)\nthis:\n  dist (0::'a) x + dist x y \\<le> R + D / 3\n\ngoal (1 subgoal):\n 1. norm y \\<le> 2 * R", "finally"], ["proof (chain)\npicking this:\n  norm y \\<le> R + D / 3", "show ?thesis"], ["proof (prove)\nusing this:\n  norm y \\<le> R + D / 3\n\ngoal (1 subgoal):\n 1. norm y \\<le> 2 * R", "using False \\<open>D > 0\\<close>"], ["proof (prove)\nusing this:\n  norm y \\<le> R + D / 3\n  \\<not> R < D / 2\n  0 < D\n\ngoal (1 subgoal):\n 1. norm y \\<le> 2 * R", "by auto"], ["proof (state)\nthis:\n  norm y \\<le> 2 * R\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?y \\<in> cball ?x (D / 3); ?x \\<in> G\\<rbrakk>\n  \\<Longrightarrow> norm ?y \\<le> 2 * R\n\ngoal (1 subgoal):\n 1. real (card G) \\<le> 1 + C * R ^ DIM('a)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?y \\<in> cball ?x (D / 3); ?x \\<in> G\\<rbrakk>\n  \\<Longrightarrow> norm ?y \\<le> 2 * R", "have I: \"(\\<Union>x\\<in>G. cball x (D/3)) \\<subseteq> cball 0 (2*R)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?y \\<in> cball ?x (D / 3); ?x \\<in> G\\<rbrakk>\n  \\<Longrightarrow> norm ?y \\<le> 2 * R\n\ngoal (1 subgoal):\n 1. (\\<Union>x\\<in>G. cball x (D / 3)) \\<subseteq> cball (0::'a) (2 * R)", "by auto"], ["proof (state)\nthis:\n  (\\<Union>x\\<in>G. cball x (D / 3)) \\<subseteq> cball (0::'a) (2 * R)\n\ngoal (1 subgoal):\n 1. real (card G) \\<le> 1 + C * R ^ DIM('a)", "have \"disjoint_family_on (\\<lambda>x. cball x (D/3)) G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disjoint_family_on (\\<lambda>x. cball x (D / 3)) G", "unfolding disjoint_family_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m\\<in>G.\n       \\<forall>n\\<in>G.\n          m \\<noteq> n \\<longrightarrow>\n          cball m (D / 3) \\<inter> cball n (D / 3) = {}", "proof (auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m n x.\n       \\<lbrakk>m \\<in> G; n \\<in> G; m \\<noteq> n; dist m x * 3 \\<le> D;\n        dist n x * 3 \\<le> D\\<rbrakk>\n       \\<Longrightarrow> False", "fix a b x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m n x.\n       \\<lbrakk>m \\<in> G; n \\<in> G; m \\<noteq> n; dist m x * 3 \\<le> D;\n        dist n x * 3 \\<le> D\\<rbrakk>\n       \\<Longrightarrow> False", "assume *: \"a \\<in> G\" \"b \\<in> G\" \"a \\<noteq> b\" \"dist a x * 3 \\<le> D\" \"dist b x * 3 \\<le> D\""], ["proof (state)\nthis:\n  a \\<in> G\n  b \\<in> G\n  a \\<noteq> b\n  dist a x * 3 \\<le> D\n  dist b x * 3 \\<le> D\n\ngoal (1 subgoal):\n 1. \\<And>m n x.\n       \\<lbrakk>m \\<in> G; n \\<in> G; m \\<noteq> n; dist m x * 3 \\<le> D;\n        dist n x * 3 \\<le> D\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  a \\<in> G\n  b \\<in> G\n  a \\<noteq> b\n  dist a x * 3 \\<le> D\n  dist b x * 3 \\<le> D", "have \"D \\<le> dist a b\""], ["proof (prove)\nusing this:\n  a \\<in> G\n  b \\<in> G\n  a \\<noteq> b\n  dist a x * 3 \\<le> D\n  dist b x * 3 \\<le> D\n\ngoal (1 subgoal):\n 1. D \\<le> dist a b", "using H \\<open>G \\<subseteq> F\\<close>"], ["proof (prove)\nusing this:\n  a \\<in> G\n  b \\<in> G\n  a \\<noteq> b\n  dist a x * 3 \\<le> D\n  dist b x * 3 \\<le> D\n  F \\<subseteq> cball (0::'a) R\n  0 \\<le> R\n  \\<lbrakk>?x \\<in> F; ?y \\<in> F; ?x \\<noteq> ?y\\<rbrakk>\n  \\<Longrightarrow> D \\<le> dist ?x ?y\n  G \\<subseteq> F\n\ngoal (1 subgoal):\n 1. D \\<le> dist a b", "by auto"], ["proof (state)\nthis:\n  D \\<le> dist a b\n\ngoal (1 subgoal):\n 1. \\<And>m n x.\n       \\<lbrakk>m \\<in> G; n \\<in> G; m \\<noteq> n; dist m x * 3 \\<le> D;\n        dist n x * 3 \\<le> D\\<rbrakk>\n       \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  D \\<le> dist a b\n\ngoal (1 subgoal):\n 1. \\<And>m n x.\n       \\<lbrakk>m \\<in> G; n \\<in> G; m \\<noteq> n; dist m x * 3 \\<le> D;\n        dist n x * 3 \\<le> D\\<rbrakk>\n       \\<Longrightarrow> False", "have \"... \\<le> dist a x + dist x b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist a b \\<le> dist a x + dist x b", "by (rule dist_triangle)"], ["proof (state)\nthis:\n  dist a b \\<le> dist a x + dist x b\n\ngoal (1 subgoal):\n 1. \\<And>m n x.\n       \\<lbrakk>m \\<in> G; n \\<in> G; m \\<noteq> n; dist m x * 3 \\<le> D;\n        dist n x * 3 \\<le> D\\<rbrakk>\n       \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  dist a b \\<le> dist a x + dist x b\n\ngoal (1 subgoal):\n 1. \\<And>m n x.\n       \\<lbrakk>m \\<in> G; n \\<in> G; m \\<noteq> n; dist m x * 3 \\<le> D;\n        dist n x * 3 \\<le> D\\<rbrakk>\n       \\<Longrightarrow> False", "have \"... \\<le> D/3 + D/3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist a x + dist x b \\<le> D / 3 + D / 3", "using *"], ["proof (prove)\nusing this:\n  a \\<in> G\n  b \\<in> G\n  a \\<noteq> b\n  dist a x * 3 \\<le> D\n  dist b x * 3 \\<le> D\n\ngoal (1 subgoal):\n 1. dist a x + dist x b \\<le> D / 3 + D / 3", "by (auto simp add: dist_commute intro: mono_intros)"], ["proof (state)\nthis:\n  dist a x + dist x b \\<le> D / 3 + D / 3\n\ngoal (1 subgoal):\n 1. \\<And>m n x.\n       \\<lbrakk>m \\<in> G; n \\<in> G; m \\<noteq> n; dist m x * 3 \\<le> D;\n        dist n x * 3 \\<le> D\\<rbrakk>\n       \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  dist a x + dist x b \\<le> D / 3 + D / 3\n\ngoal (1 subgoal):\n 1. \\<And>m n x.\n       \\<lbrakk>m \\<in> G; n \\<in> G; m \\<noteq> n; dist m x * 3 \\<le> D;\n        dist n x * 3 \\<le> D\\<rbrakk>\n       \\<Longrightarrow> False", "have \"... < D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D / 3 + D / 3 < D", "using \\<open>D > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < D\n\ngoal (1 subgoal):\n 1. D / 3 + D / 3 < D", "by auto"], ["proof (state)\nthis:\n  D / 3 + D / 3 < D\n\ngoal (1 subgoal):\n 1. \\<And>m n x.\n       \\<lbrakk>m \\<in> G; n \\<in> G; m \\<noteq> n; dist m x * 3 \\<le> D;\n        dist n x * 3 \\<le> D\\<rbrakk>\n       \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  D < D", "show False"], ["proof (prove)\nusing this:\n  D < D\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  disjoint_family_on (\\<lambda>x. cball x (D / 3)) G\n\ngoal (1 subgoal):\n 1. real (card G) \\<le> 1 + C * R ^ DIM('a)", "have \"2 * R \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> 2 * R", "using \\<open>R \\<ge> 0\\<close>"], ["proof (prove)\nusing this:\n  0 \\<le> R\n\ngoal (1 subgoal):\n 1. 0 \\<le> 2 * R", "by auto"], ["proof (state)\nthis:\n  0 \\<le> 2 * R\n\ngoal (1 subgoal):\n 1. real (card G) \\<le> 1 + C * R ^ DIM('a)", "define A where \"A = measure lborel (cball (0::'a) 1)\""], ["proof (state)\nthis:\n  A = content (cball (0::'a) 1)\n\ngoal (1 subgoal):\n 1. real (card G) \\<le> 1 + C * R ^ DIM('a)", "have \"A > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < A", "unfolding A_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < content (cball (0::'a) 1)", "using lebesgue_measure_ball_pos"], ["proof (prove)\nusing this:\n  0 < emeasure lborel (cball (0::?'a) 1)\n  0 < content (cball (0::?'a) 1)\n\ngoal (1 subgoal):\n 1. 0 < content (cball (0::'a) 1)", "by auto"], ["proof (state)\nthis:\n  0 < A\n\ngoal (1 subgoal):\n 1. real (card G) \\<le> 1 + C * R ^ DIM('a)", "have \"card G * ((D/3)^(DIM('a)) * A) = (\\<Sum>x\\<in>G. ((D/3)^(DIM('a)) * A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (card G) * ((D / 3) ^ DIM('a) * A) =\n    (\\<Sum>x\\<in>G. (D / 3) ^ DIM('a) * A)", "by auto"], ["proof (state)\nthis:\n  real (card G) * ((D / 3) ^ DIM('a) * A) =\n  (\\<Sum>x\\<in>G. (D / 3) ^ DIM('a) * A)\n\ngoal (1 subgoal):\n 1. real (card G) \\<le> 1 + C * R ^ DIM('a)", "also"], ["proof (state)\nthis:\n  real (card G) * ((D / 3) ^ DIM('a) * A) =\n  (\\<Sum>x\\<in>G. (D / 3) ^ DIM('a) * A)\n\ngoal (1 subgoal):\n 1. real (card G) \\<le> 1 + C * R ^ DIM('a)", "have \"... = (\\<Sum>x\\<in>G. measure lborel (cball x (D/3)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>G. (D / 3) ^ DIM('a) * A) =\n    (\\<Sum>x\\<in>G. content (cball x (D / 3)))", "unfolding lebesgue_measure_ball[OF \\<open>D/3 \\<ge> 0\\<close>] A_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>G. (D / 3) ^ DIM('a) * content (cball (0::'a) 1)) =\n    (\\<Sum>x\\<in>G. (D / 3) ^ DIM('a) * content (cball (0::'a) 1))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>G. (D / 3) ^ DIM('a) * A) =\n  (\\<Sum>x\\<in>G. content (cball x (D / 3)))\n\ngoal (1 subgoal):\n 1. real (card G) \\<le> 1 + C * R ^ DIM('a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>G. (D / 3) ^ DIM('a) * A) =\n  (\\<Sum>x\\<in>G. content (cball x (D / 3)))\n\ngoal (1 subgoal):\n 1. real (card G) \\<le> 1 + C * R ^ DIM('a)", "have \"... = measure lborel (\\<Union>x\\<in>G. cball x (D/3))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>G. content (cball x (D / 3))) =\n    content (\\<Union>x\\<in>G. cball x (D / 3))", "apply (rule measure_finite_Union[symmetric, OF \\<open>finite G\\<close> _ \\<open>disjoint_family_on (\\<lambda>x. cball x (D/3)) G\\<close>])"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<lambda>x. cball x (D / 3)) ` G \\<subseteq> sets lborel\n 2. \\<And>x.\n       x \\<in> G \\<Longrightarrow>\n       emeasure lborel (cball x (D / 3)) \\<noteq> \\<infinity>", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> G; emeasure lborel (cball x (D / 3)) = top\\<rbrakk>\n       \\<Longrightarrow> False", "using emeasure_bounded_finite less_imp_neq"], ["proof (prove)\nusing this:\n  bounded ?A \\<Longrightarrow> emeasure lborel ?A < \\<infinity>\n  ?x < ?y \\<Longrightarrow> ?x \\<noteq> ?y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> G; emeasure lborel (cball x (D / 3)) = top\\<rbrakk>\n       \\<Longrightarrow> False", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>G. content (cball x (D / 3))) =\n  content (\\<Union>x\\<in>G. cball x (D / 3))\n\ngoal (1 subgoal):\n 1. real (card G) \\<le> 1 + C * R ^ DIM('a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>G. content (cball x (D / 3))) =\n  content (\\<Union>x\\<in>G. cball x (D / 3))\n\ngoal (1 subgoal):\n 1. real (card G) \\<le> 1 + C * R ^ DIM('a)", "have \"... \\<le> measure lborel (cball (0::'a) (2*R))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. content (\\<Union>x\\<in>G. cball x (D / 3))\n    \\<le> content (cball (0::'a) (2 * R))", "apply (rule measure_mono_fmeasurable)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (\\<Union>x\\<in>G. cball x (D / 3)) \\<subseteq> cball (0::'a) (2 * R)\n 2. (\\<Union>x\\<in>G. cball x (D / 3)) \\<in> sets lborel\n 3. cball (0::'a) (2 * R) \\<in> fmeasurable lborel", "using I \\<open>finite G\\<close> emeasure_bounded_finite"], ["proof (prove)\nusing this:\n  (\\<Union>x\\<in>G. cball x (D / 3)) \\<subseteq> cball (0::'a) (2 * R)\n  finite G\n  bounded ?A \\<Longrightarrow> emeasure lborel ?A < \\<infinity>\n\ngoal (3 subgoals):\n 1. (\\<Union>x\\<in>G. cball x (D / 3)) \\<subseteq> cball (0::'a) (2 * R)\n 2. (\\<Union>x\\<in>G. cball x (D / 3)) \\<in> sets lborel\n 3. cball (0::'a) (2 * R) \\<in> fmeasurable lborel", "unfolding fmeasurable_def"], ["proof (prove)\nusing this:\n  (\\<Union>x\\<in>G. cball x (D / 3)) \\<subseteq> cball (0::'a) (2 * R)\n  finite G\n  bounded ?A \\<Longrightarrow> emeasure lborel ?A < \\<infinity>\n\ngoal (3 subgoals):\n 1. (\\<Union>x\\<in>G. cball x (D / 3)) \\<subseteq> cball (0::'a) (2 * R)\n 2. (\\<Union>x\\<in>G. cball x (D / 3)) \\<in> sets lborel\n 3. cball (0::'a) (2 * R)\n    \\<in> {A \\<in> sets lborel. emeasure lborel A < \\<infinity>}", "by auto"], ["proof (state)\nthis:\n  content (\\<Union>x\\<in>G. cball x (D / 3))\n  \\<le> content (cball (0::'a) (2 * R))\n\ngoal (1 subgoal):\n 1. real (card G) \\<le> 1 + C * R ^ DIM('a)", "also"], ["proof (state)\nthis:\n  content (\\<Union>x\\<in>G. cball x (D / 3))\n  \\<le> content (cball (0::'a) (2 * R))\n\ngoal (1 subgoal):\n 1. real (card G) \\<le> 1 + C * R ^ DIM('a)", "have \"... = (2*R)^(DIM('a)) * A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. content (cball (0::'a) (2 * R)) = (2 * R) ^ DIM('a) * A", "unfolding A_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. content (cball (0::'a) (2 * R)) =\n    (2 * R) ^ DIM('a) * content (cball (0::'a) 1)", "using lebesgue_measure_ball[OF \\<open>2*R \\<ge> 0\\<close>]"], ["proof (prove)\nusing this:\n  content (cball ?x (2 * R)) =\n  (2 * R) ^ DIM(?'a) * content (cball (0::?'a) 1)\n  emeasure lborel (cball ?x (2 * R)) =\n  ennreal (2 * R) ^ DIM(?'a) * emeasure lborel (cball (0::?'a) 1)\n\ngoal (1 subgoal):\n 1. content (cball (0::'a) (2 * R)) =\n    (2 * R) ^ DIM('a) * content (cball (0::'a) 1)", "by auto"], ["proof (state)\nthis:\n  content (cball (0::'a) (2 * R)) = (2 * R) ^ DIM('a) * A\n\ngoal (1 subgoal):\n 1. real (card G) \\<le> 1 + C * R ^ DIM('a)", "finally"], ["proof (chain)\npicking this:\n  real (card G) * ((D / 3) ^ DIM('a) * A) \\<le> (2 * R) ^ DIM('a) * A", "have \"card G * (D/3)^(DIM('a)) \\<le> (2*R)^(DIM('a))\""], ["proof (prove)\nusing this:\n  real (card G) * ((D / 3) ^ DIM('a) * A) \\<le> (2 * R) ^ DIM('a) * A\n\ngoal (1 subgoal):\n 1. real (card G) * (D / 3) ^ DIM('a) \\<le> (2 * R) ^ DIM('a)", "using \\<open>A > 0\\<close>"], ["proof (prove)\nusing this:\n  real (card G) * ((D / 3) ^ DIM('a) * A) \\<le> (2 * R) ^ DIM('a) * A\n  0 < A\n\ngoal (1 subgoal):\n 1. real (card G) * (D / 3) ^ DIM('a) \\<le> (2 * R) ^ DIM('a)", "by (auto simp add: divide_simps)"], ["proof (state)\nthis:\n  real (card G) * (D / 3) ^ DIM('a) \\<le> (2 * R) ^ DIM('a)\n\ngoal (1 subgoal):\n 1. real (card G) \\<le> 1 + C * R ^ DIM('a)", "then"], ["proof (chain)\npicking this:\n  real (card G) * (D / 3) ^ DIM('a) \\<le> (2 * R) ^ DIM('a)", "have \"card G \\<le> C * R^(DIM('a))\""], ["proof (prove)\nusing this:\n  real (card G) * (D / 3) ^ DIM('a) \\<le> (2 * R) ^ DIM('a)\n\ngoal (1 subgoal):\n 1. real (card G) \\<le> C * R ^ DIM('a)", "unfolding C_def"], ["proof (prove)\nusing this:\n  real (card G) * (D / 3) ^ DIM('a) \\<le> (2 * R) ^ DIM('a)\n\ngoal (1 subgoal):\n 1. real (card G) \\<le> (6 / D) ^ DIM('a) * R ^ DIM('a)", "using \\<open>D > 0\\<close>"], ["proof (prove)\nusing this:\n  real (card G) * (D / 3) ^ DIM('a) \\<le> (2 * R) ^ DIM('a)\n  0 < D\n\ngoal (1 subgoal):\n 1. real (card G) \\<le> (6 / D) ^ DIM('a) * R ^ DIM('a)", "apply (auto simp add: algebra_simps divide_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>real (card G) * D ^ DIM('a)\n             \\<le> R ^ DIM('a) * (2 ^ DIM('a) * 3 ^ DIM('a));\n     0 < D\\<rbrakk>\n    \\<Longrightarrow> real (card G) * D ^ DIM('a)\n                      \\<le> R ^ DIM('a) * 6 ^ DIM('a)", "by (metis numeral_times_numeral power_mult_distrib semiring_norm(12) semiring_norm(14))"], ["proof (state)\nthis:\n  real (card G) \\<le> C * R ^ DIM('a)\n\ngoal (1 subgoal):\n 1. real (card G) \\<le> 1 + C * R ^ DIM('a)", "then"], ["proof (chain)\npicking this:\n  real (card G) \\<le> C * R ^ DIM('a)", "show ?thesis"], ["proof (prove)\nusing this:\n  real (card G) \\<le> C * R ^ DIM('a)\n\ngoal (1 subgoal):\n 1. real (card G) \\<le> 1 + C * R ^ DIM('a)", "by auto"], ["proof (state)\nthis:\n  real (card G) \\<le> 1 + C * R ^ DIM('a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?G \\<subseteq> F; finite ?G\\<rbrakk>\n  \\<Longrightarrow> real (card ?G) \\<le> 1 + C * R ^ DIM('a)\n\ngoal (1 subgoal):\n 1. \\<not> R < D / 2 \\<Longrightarrow>\n    finite F \\<and> real (card F) \\<le> 1 + C * R ^ DIM('a)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?G \\<subseteq> F; finite ?G\\<rbrakk>\n  \\<Longrightarrow> real (card ?G) \\<le> 1 + C * R ^ DIM('a)", "show \"finite F \\<and> card F \\<le> 1 + C * R^(DIM('a))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?G \\<subseteq> F; finite ?G\\<rbrakk>\n  \\<Longrightarrow> real (card ?G) \\<le> 1 + C * R ^ DIM('a)\n\ngoal (1 subgoal):\n 1. finite F \\<and> real (card F) \\<le> 1 + C * R ^ DIM('a)", "by (rule finite_finite_subset_caract')"], ["proof (state)\nthis:\n  finite F \\<and> real (card F) \\<le> 1 + C * R ^ DIM('a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite F \\<and> real (card F) \\<le> 1 + C * R ^ DIM('a)\n\ngoal (1 subgoal):\n 1. finite F \\<and> real (card F) \\<le> 1 + (6 / D) ^ DIM('a) * R ^ DIM('a)", "then"], ["proof (chain)\npicking this:\n  finite F \\<and> real (card F) \\<le> 1 + C * R ^ DIM('a)", "show ?thesis"], ["proof (prove)\nusing this:\n  finite F \\<and> real (card F) \\<le> 1 + C * R ^ DIM('a)\n\ngoal (1 subgoal):\n 1. finite F \\<and> real (card F) \\<le> 1 + (6 / D) ^ DIM('a) * R ^ DIM('a)", "unfolding C_def"], ["proof (prove)\nusing this:\n  finite F \\<and> real (card F) \\<le> 1 + (6 / D) ^ DIM('a) * R ^ DIM('a)\n\ngoal (1 subgoal):\n 1. finite F \\<and> real (card F) \\<le> 1 + (6 / D) ^ DIM('a) * R ^ DIM('a)", "by blast"], ["proof (state)\nthis:\n  finite F \\<and> real (card F) \\<le> 1 + (6 / D) ^ DIM('a) * R ^ DIM('a)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Then, we show that the growth rate of a Euclidean space of dimension $d$ is bounded\nfrom below by $R^d$, using integer points.\\<close>"], ["", "proposition growth_rate_euclidean_below:\n  fixes D::real\n  assumes \"R \\<ge> 0\"\n  shows \"\\<exists>F. (F \\<subseteq> cball (0::'a::euclidean_space) R\n            \\<and> (\\<forall>x\\<in>F. \\<forall>y\\<in>F. x = y \\<or> dist x y \\<ge> D) \\<and> finite F \\<and> card F \\<ge> (1/((max D 1) * DIM('a)))^(DIM('a)) * R^(DIM('a)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>F\\<subseteq>cball (0::'a) R.\n       (\\<forall>x\\<in>F.\n           \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n       finite F \\<and>\n       (1 / (max D 1 * real DIM('a))) ^ DIM('a) * R ^ DIM('a)\n       \\<le> real (card F)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>F\\<subseteq>cball (0::'a) R.\n       (\\<forall>x\\<in>F.\n           \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n       finite F \\<and>\n       (1 / (max D 1 * real DIM('a))) ^ DIM('a) * R ^ DIM('a)\n       \\<le> real (card F)", "define E where \"E = max D 1\""], ["proof (state)\nthis:\n  E = max D 1\n\ngoal (1 subgoal):\n 1. \\<exists>F\\<subseteq>cball (0::'a) R.\n       (\\<forall>x\\<in>F.\n           \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n       finite F \\<and>\n       (1 / (max D 1 * real DIM('a))) ^ DIM('a) * R ^ DIM('a)\n       \\<le> real (card F)", "have \"E > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < E", "unfolding E_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < max D 1", "by auto"], ["proof (state)\nthis:\n  0 < E\n\ngoal (1 subgoal):\n 1. \\<exists>F\\<subseteq>cball (0::'a) R.\n       (\\<forall>x\\<in>F.\n           \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n       finite F \\<and>\n       (1 / (max D 1 * real DIM('a))) ^ DIM('a) * R ^ DIM('a)\n       \\<le> real (card F)", "define c where \"c = (1/(E * DIM('a)))^(DIM('a))\""], ["proof (state)\nthis:\n  c = (1 / (E * real DIM('a))) ^ DIM('a)\n\ngoal (1 subgoal):\n 1. \\<exists>F\\<subseteq>cball (0::'a) R.\n       (\\<forall>x\\<in>F.\n           \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n       finite F \\<and>\n       (1 / (max D 1 * real DIM('a))) ^ DIM('a) * R ^ DIM('a)\n       \\<le> real (card F)", "have \"c > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < c", "unfolding c_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < (1 / (E * real DIM('a))) ^ DIM('a)", "using \\<open>E > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < E\n\ngoal (1 subgoal):\n 1. 0 < (1 / (E * real DIM('a))) ^ DIM('a)", "by auto"], ["proof (state)\nthis:\n  0 < c\n\ngoal (1 subgoal):\n 1. \\<exists>F\\<subseteq>cball (0::'a) R.\n       (\\<forall>x\\<in>F.\n           \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n       finite F \\<and>\n       (1 / (max D 1 * real DIM('a))) ^ DIM('a) * R ^ DIM('a)\n       \\<le> real (card F)", "define n where \"n = nat (floor (R/(E * DIM('a)))) + 1\""], ["proof (state)\nthis:\n  n = nat \\<lfloor>R / (E * real DIM('a))\\<rfloor> + 1\n\ngoal (1 subgoal):\n 1. \\<exists>F\\<subseteq>cball (0::'a) R.\n       (\\<forall>x\\<in>F.\n           \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n       finite F \\<and>\n       (1 / (max D 1 * real DIM('a))) ^ DIM('a) * R ^ DIM('a)\n       \\<le> real (card F)", "then"], ["proof (chain)\npicking this:\n  n = nat \\<lfloor>R / (E * real DIM('a))\\<rfloor> + 1", "have \"n > 0\""], ["proof (prove)\nusing this:\n  n = nat \\<lfloor>R / (E * real DIM('a))\\<rfloor> + 1\n\ngoal (1 subgoal):\n 1. 0 < n", "using \\<open>R \\<ge> 0\\<close>"], ["proof (prove)\nusing this:\n  n = nat \\<lfloor>R / (E * real DIM('a))\\<rfloor> + 1\n  0 \\<le> R\n\ngoal (1 subgoal):\n 1. 0 < n", "by auto"], ["proof (state)\nthis:\n  0 < n\n\ngoal (1 subgoal):\n 1. \\<exists>F\\<subseteq>cball (0::'a) R.\n       (\\<forall>x\\<in>F.\n           \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n       finite F \\<and>\n       (1 / (max D 1 * real DIM('a))) ^ DIM('a) * R ^ DIM('a)\n       \\<le> real (card F)", "have \"R/(E * DIM('a)) \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R / (E * real DIM('a)) \\<le> real n", "unfolding n_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. R / (E * real DIM('a))\n    \\<le> real (nat \\<lfloor>R / (E * real DIM('a))\\<rfloor> + 1)", "by linarith"], ["proof (state)\nthis:\n  R / (E * real DIM('a)) \\<le> real n\n\ngoal (1 subgoal):\n 1. \\<exists>F\\<subseteq>cball (0::'a) R.\n       (\\<forall>x\\<in>F.\n           \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n       finite F \\<and>\n       (1 / (max D 1 * real DIM('a))) ^ DIM('a) * R ^ DIM('a)\n       \\<le> real (card F)", "then"], ["proof (chain)\npicking this:\n  R / (E * real DIM('a)) \\<le> real n", "have \"c * R^(DIM('a)) \\<le> n^(DIM('a))\""], ["proof (prove)\nusing this:\n  R / (E * real DIM('a)) \\<le> real n\n\ngoal (1 subgoal):\n 1. c * R ^ DIM('a) \\<le> real (n ^ DIM('a))", "unfolding c_def power_mult_distrib[symmetric]"], ["proof (prove)\nusing this:\n  R / (E * real DIM('a)) \\<le> real n\n\ngoal (1 subgoal):\n 1. (1 / (E * real DIM('a)) * R) ^ DIM('a) \\<le> real (n ^ DIM('a))", "by (auto simp add: \\<open>0 < E\\<close> \\<open>0 \\<le> R\\<close> less_imp_le power_mono)"], ["proof (state)\nthis:\n  c * R ^ DIM('a) \\<le> real (n ^ DIM('a))\n\ngoal (1 subgoal):\n 1. \\<exists>F\\<subseteq>cball (0::'a) R.\n       (\\<forall>x\\<in>F.\n           \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n       finite F \\<and>\n       (1 / (max D 1 * real DIM('a))) ^ DIM('a) * R ^ DIM('a)\n       \\<le> real (card F)", "have \"n-1 \\<le> R/(E * DIM('a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (n - 1) \\<le> R / (E * real DIM('a))", "unfolding n_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. real (nat \\<lfloor>R / (E * real DIM('a))\\<rfloor> + 1 - 1)\n    \\<le> R / (E * real DIM('a))", "using \\<open>R \\<ge> 0\\<close> \\<open>E > 0\\<close>"], ["proof (prove)\nusing this:\n  0 \\<le> R\n  0 < E\n\ngoal (1 subgoal):\n 1. real (nat \\<lfloor>R / (E * real DIM('a))\\<rfloor> + 1 - 1)\n    \\<le> R / (E * real DIM('a))", "by auto"], ["proof (state)\nthis:\n  real (n - 1) \\<le> R / (E * real DIM('a))\n\ngoal (1 subgoal):\n 1. \\<exists>F\\<subseteq>cball (0::'a) R.\n       (\\<forall>x\\<in>F.\n           \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n       finite F \\<and>\n       (1 / (max D 1 * real DIM('a))) ^ DIM('a) * R ^ DIM('a)\n       \\<le> real (card F)", "then"], ["proof (chain)\npicking this:\n  real (n - 1) \\<le> R / (E * real DIM('a))", "have \"E * DIM('a) * (n-1) \\<le> R\""], ["proof (prove)\nusing this:\n  real (n - 1) \\<le> R / (E * real DIM('a))\n\ngoal (1 subgoal):\n 1. E * real DIM('a) * real (n - 1) \\<le> R", "using \\<open>R \\<ge> 0\\<close> \\<open>E > 0\\<close>"], ["proof (prove)\nusing this:\n  real (n - 1) \\<le> R / (E * real DIM('a))\n  0 \\<le> R\n  0 < E\n\ngoal (1 subgoal):\n 1. E * real DIM('a) * real (n - 1) \\<le> R", "by (simp add: mult.commute pos_le_divide_eq)"], ["proof (state)\nthis:\n  E * real DIM('a) * real (n - 1) \\<le> R\n\ngoal (1 subgoal):\n 1. \\<exists>F\\<subseteq>cball (0::'a) R.\n       (\\<forall>x\\<in>F.\n           \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n       finite F \\<and>\n       (1 / (max D 1 * real DIM('a))) ^ DIM('a) * R ^ DIM('a)\n       \\<le> real (card F)", "text \\<open>We want to consider the set of linear combinations of basis elements with integer\n  coefficients bounded by $n$ (multiplied by $E$ to guarantee the $D$ separation).\n  The formal way to write these elements is to consider all\n  the functions from the basis to $\\{0,\\dotsc, n-1\\}$, and associate to such a function\n  $f$ the point $\\sum E f(i) \\cdot i$ where the sum is over all basis elements $i$. This is\n  what the next definition does.\\<close>"], ["proof (state)\nthis:\n  E * real DIM('a) * real (n - 1) \\<le> R\n\ngoal (1 subgoal):\n 1. \\<exists>F\\<subseteq>cball (0::'a) R.\n       (\\<forall>x\\<in>F.\n           \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n       finite F \\<and>\n       (1 / (max D 1 * real DIM('a))) ^ DIM('a) * R ^ DIM('a)\n       \\<le> real (card F)", "define F::\"'a set\" where \"F = (\\<lambda>f. (\\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i))`((Basis::('a set)) \\<rightarrow>\\<^sub>E {0..<n})\""], ["proof (state)\nthis:\n  F =\n  (\\<lambda>f. \\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i) `\n  (Basis \\<rightarrow>\\<^sub>E {0..<n})\n\ngoal (1 subgoal):\n 1. \\<exists>F\\<subseteq>cball (0::'a) R.\n       (\\<forall>x\\<in>F.\n           \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n       finite F \\<and>\n       (1 / (max D 1 * real DIM('a))) ^ DIM('a) * R ^ DIM('a)\n       \\<le> real (card F)", "have \"f = g\" if \"f \\<in> (Basis::('a set)) \\<rightarrow>\\<^sub>E {0..<n}\" \"g \\<in> Basis \\<rightarrow>\\<^sub>E {0..<n}\"\n                  \"(\\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i) = (\\<Sum>i\\<in>Basis. (E * real (g i)) *\\<^sub>R i)\" for f g"], ["proof (prove)\ngoal (1 subgoal):\n 1. f = g", "proof (rule ext)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. f x = g x", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. f x = g x", "show \"f i = g i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f i = g i", "proof (cases \"i \\<in> Basis\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i \\<in> Basis \\<Longrightarrow> f i = g i\n 2. i \\<notin> Basis \\<Longrightarrow> f i = g i", "case True"], ["proof (state)\nthis:\n  i \\<in> Basis\n\ngoal (2 subgoals):\n 1. i \\<in> Basis \\<Longrightarrow> f i = g i\n 2. i \\<notin> Basis \\<Longrightarrow> f i = g i", "then"], ["proof (chain)\npicking this:\n  i \\<in> Basis", "have \"E * real(f i) = E * real(g i)\""], ["proof (prove)\nusing this:\n  i \\<in> Basis\n\ngoal (1 subgoal):\n 1. E * real (f i) = E * real (g i)", "using inner_sum_left_Basis[OF True, of \"\\<lambda>i. E * real(f i)\"] inner_sum_left_Basis[OF True, of \"\\<lambda>i. E * real(g i)\"] that(3)"], ["proof (prove)\nusing this:\n  i \\<in> Basis\n  (\\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i) \\<bullet> i =\n  E * real (f i)\n  (\\<Sum>i\\<in>Basis. (E * real (g i)) *\\<^sub>R i) \\<bullet> i =\n  E * real (g i)\n  (\\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i) =\n  (\\<Sum>i\\<in>Basis. (E * real (g i)) *\\<^sub>R i)\n\ngoal (1 subgoal):\n 1. E * real (f i) = E * real (g i)", "by auto"], ["proof (state)\nthis:\n  E * real (f i) = E * real (g i)\n\ngoal (2 subgoals):\n 1. i \\<in> Basis \\<Longrightarrow> f i = g i\n 2. i \\<notin> Basis \\<Longrightarrow> f i = g i", "then"], ["proof (chain)\npicking this:\n  E * real (f i) = E * real (g i)", "show \"f i = g i\""], ["proof (prove)\nusing this:\n  E * real (f i) = E * real (g i)\n\ngoal (1 subgoal):\n 1. f i = g i", "using \\<open>E > 0\\<close>"], ["proof (prove)\nusing this:\n  E * real (f i) = E * real (g i)\n  0 < E\n\ngoal (1 subgoal):\n 1. f i = g i", "by auto"], ["proof (state)\nthis:\n  f i = g i\n\ngoal (1 subgoal):\n 1. i \\<notin> Basis \\<Longrightarrow> f i = g i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<notin> Basis \\<Longrightarrow> f i = g i", "case False"], ["proof (state)\nthis:\n  i \\<notin> Basis\n\ngoal (1 subgoal):\n 1. i \\<notin> Basis \\<Longrightarrow> f i = g i", "then"], ["proof (chain)\npicking this:\n  i \\<notin> Basis", "have \"f i = undefined\" \"g i = undefined\""], ["proof (prove)\nusing this:\n  i \\<notin> Basis\n\ngoal (1 subgoal):\n 1. f i = undefined &&& g i = undefined", "using that"], ["proof (prove)\nusing this:\n  i \\<notin> Basis\n  f \\<in> Basis \\<rightarrow>\\<^sub>E {0..<n}\n  g \\<in> Basis \\<rightarrow>\\<^sub>E {0..<n}\n  (\\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i) =\n  (\\<Sum>i\\<in>Basis. (E * real (g i)) *\\<^sub>R i)\n\ngoal (1 subgoal):\n 1. f i = undefined &&& g i = undefined", "by auto"], ["proof (state)\nthis:\n  f i = undefined\n  g i = undefined\n\ngoal (1 subgoal):\n 1. i \\<notin> Basis \\<Longrightarrow> f i = g i", "then"], ["proof (chain)\npicking this:\n  f i = undefined\n  g i = undefined", "show \"f i = g i\""], ["proof (prove)\nusing this:\n  f i = undefined\n  g i = undefined\n\ngoal (1 subgoal):\n 1. f i = g i", "by auto"], ["proof (state)\nthis:\n  f i = g i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f i = g i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?f \\<in> Basis \\<rightarrow>\\<^sub>E {0..<n};\n   ?g \\<in> Basis \\<rightarrow>\\<^sub>E {0..<n};\n   (\\<Sum>i\\<in>Basis. (E * real (?f i)) *\\<^sub>R i) =\n   (\\<Sum>i\\<in>Basis. (E * real (?g i)) *\\<^sub>R i)\\<rbrakk>\n  \\<Longrightarrow> ?f = ?g\n\ngoal (1 subgoal):\n 1. \\<exists>F\\<subseteq>cball (0::'a) R.\n       (\\<forall>x\\<in>F.\n           \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n       finite F \\<and>\n       (1 / (max D 1 * real DIM('a))) ^ DIM('a) * R ^ DIM('a)\n       \\<le> real (card F)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?f \\<in> Basis \\<rightarrow>\\<^sub>E {0..<n};\n   ?g \\<in> Basis \\<rightarrow>\\<^sub>E {0..<n};\n   (\\<Sum>i\\<in>Basis. (E * real (?f i)) *\\<^sub>R i) =\n   (\\<Sum>i\\<in>Basis. (E * real (?g i)) *\\<^sub>R i)\\<rbrakk>\n  \\<Longrightarrow> ?f = ?g", "have \"inj_on (\\<lambda>f. (\\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i)) ((Basis::('a set)) \\<rightarrow>\\<^sub>E {0..<n})\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?f \\<in> Basis \\<rightarrow>\\<^sub>E {0..<n};\n   ?g \\<in> Basis \\<rightarrow>\\<^sub>E {0..<n};\n   (\\<Sum>i\\<in>Basis. (E * real (?f i)) *\\<^sub>R i) =\n   (\\<Sum>i\\<in>Basis. (E * real (?g i)) *\\<^sub>R i)\\<rbrakk>\n  \\<Longrightarrow> ?f = ?g\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>f. \\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i)\n     (Basis \\<rightarrow>\\<^sub>E {0..<n})", "by (simp add: inj_onI)"], ["proof (state)\nthis:\n  inj_on (\\<lambda>f. \\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i)\n   (Basis \\<rightarrow>\\<^sub>E {0..<n})\n\ngoal (1 subgoal):\n 1. \\<exists>F\\<subseteq>cball (0::'a) R.\n       (\\<forall>x\\<in>F.\n           \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n       finite F \\<and>\n       (1 / (max D 1 * real DIM('a))) ^ DIM('a) * R ^ DIM('a)\n       \\<le> real (card F)", "then"], ["proof (chain)\npicking this:\n  inj_on (\\<lambda>f. \\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i)\n   (Basis \\<rightarrow>\\<^sub>E {0..<n})", "have \"card F = card ((Basis::('a set)) \\<rightarrow>\\<^sub>E {0..<n})\""], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>f. \\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i)\n   (Basis \\<rightarrow>\\<^sub>E {0..<n})\n\ngoal (1 subgoal):\n 1. card F = card (Basis \\<rightarrow>\\<^sub>E {0..<n})", "unfolding F_def"], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>f. \\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i)\n   (Basis \\<rightarrow>\\<^sub>E {0..<n})\n\ngoal (1 subgoal):\n 1. card\n     ((\\<lambda>f. \\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i) `\n      (Basis \\<rightarrow>\\<^sub>E {0..<n})) =\n    card (Basis \\<rightarrow>\\<^sub>E {0..<n})", "using card_image"], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>f. \\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i)\n   (Basis \\<rightarrow>\\<^sub>E {0..<n})\n  inj_on ?f ?A \\<Longrightarrow> card (?f ` ?A) = card ?A\n\ngoal (1 subgoal):\n 1. card\n     ((\\<lambda>f. \\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i) `\n      (Basis \\<rightarrow>\\<^sub>E {0..<n})) =\n    card (Basis \\<rightarrow>\\<^sub>E {0..<n})", "by blast"], ["proof (state)\nthis:\n  card F = card (Basis \\<rightarrow>\\<^sub>E {0..<n})\n\ngoal (1 subgoal):\n 1. \\<exists>F\\<subseteq>cball (0::'a) R.\n       (\\<forall>x\\<in>F.\n           \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n       finite F \\<and>\n       (1 / (max D 1 * real DIM('a))) ^ DIM('a) * R ^ DIM('a)\n       \\<le> real (card F)", "also"], ["proof (state)\nthis:\n  card F = card (Basis \\<rightarrow>\\<^sub>E {0..<n})\n\ngoal (1 subgoal):\n 1. \\<exists>F\\<subseteq>cball (0::'a) R.\n       (\\<forall>x\\<in>F.\n           \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n       finite F \\<and>\n       (1 / (max D 1 * real DIM('a))) ^ DIM('a) * R ^ DIM('a)\n       \\<le> real (card F)", "have \"... = n^(DIM('a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (Basis \\<rightarrow>\\<^sub>E {0..<n}) = n ^ DIM('a)", "unfolding card_PiE[OF finite_Basis]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i\\<in>Basis. card {0..<n}) = n ^ DIM('a)", "by (auto simp add: prod_constant)"], ["proof (state)\nthis:\n  card (Basis \\<rightarrow>\\<^sub>E {0..<n}) = n ^ DIM('a)\n\ngoal (1 subgoal):\n 1. \\<exists>F\\<subseteq>cball (0::'a) R.\n       (\\<forall>x\\<in>F.\n           \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n       finite F \\<and>\n       (1 / (max D 1 * real DIM('a))) ^ DIM('a) * R ^ DIM('a)\n       \\<le> real (card F)", "finally"], ["proof (chain)\npicking this:\n  card F = n ^ DIM('a)", "have \"card F = n^(DIM('a))\""], ["proof (prove)\nusing this:\n  card F = n ^ DIM('a)\n\ngoal (1 subgoal):\n 1. card F = n ^ DIM('a)", "by auto"], ["proof (state)\nthis:\n  card F = n ^ DIM('a)\n\ngoal (1 subgoal):\n 1. \\<exists>F\\<subseteq>cball (0::'a) R.\n       (\\<forall>x\\<in>F.\n           \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n       finite F \\<and>\n       (1 / (max D 1 * real DIM('a))) ^ DIM('a) * R ^ DIM('a)\n       \\<le> real (card F)", "then"], ["proof (chain)\npicking this:\n  card F = n ^ DIM('a)", "have \"finite F\""], ["proof (prove)\nusing this:\n  card F = n ^ DIM('a)\n\ngoal (1 subgoal):\n 1. finite F", "using \\<open>n > 0\\<close>"], ["proof (prove)\nusing this:\n  card F = n ^ DIM('a)\n  0 < n\n\ngoal (1 subgoal):\n 1. finite F", "using card.infinite"], ["proof (prove)\nusing this:\n  card F = n ^ DIM('a)\n  0 < n\n  infinite ?A \\<Longrightarrow> card ?A = 0\n\ngoal (1 subgoal):\n 1. finite F", "by force"], ["proof (state)\nthis:\n  finite F\n\ngoal (1 subgoal):\n 1. \\<exists>F\\<subseteq>cball (0::'a) R.\n       (\\<forall>x\\<in>F.\n           \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n       finite F \\<and>\n       (1 / (max D 1 * real DIM('a))) ^ DIM('a) * R ^ DIM('a)\n       \\<le> real (card F)", "have \"card F \\<ge> c * R^(DIM('a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c * R ^ DIM('a) \\<le> real (card F)", "using \\<open>c * R^(DIM('a)) \\<le> n^(DIM('a))\\<close> \\<open>card F = n^(DIM('a))\\<close>"], ["proof (prove)\nusing this:\n  c * R ^ DIM('a) \\<le> real (n ^ DIM('a))\n  card F = n ^ DIM('a)\n\ngoal (1 subgoal):\n 1. c * R ^ DIM('a) \\<le> real (card F)", "by auto"], ["proof (state)\nthis:\n  c * R ^ DIM('a) \\<le> real (card F)\n\ngoal (1 subgoal):\n 1. \\<exists>F\\<subseteq>cball (0::'a) R.\n       (\\<forall>x\\<in>F.\n           \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n       finite F \\<and>\n       (1 / (max D 1 * real DIM('a))) ^ DIM('a) * R ^ DIM('a)\n       \\<le> real (card F)", "have separation: \"dist x y \\<ge> D\" if \"x \\<in> F\" \"y \\<in> F\" \"x \\<noteq> y\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. D \\<le> dist x y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. D \\<le> dist x y", "obtain f where x: \"f \\<in> (Basis::('a set)) \\<rightarrow>\\<^sub>E {0..<n}\" \"x = (\\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> Basis \\<rightarrow>\\<^sub>E {0..<n};\n         x = (\\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>x \\<in> F\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> F\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> Basis \\<rightarrow>\\<^sub>E {0..<n};\n         x = (\\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding F_def"], ["proof (prove)\nusing this:\n  x \\<in> (\\<lambda>f. \\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i) `\n          (Basis \\<rightarrow>\\<^sub>E {0..<n})\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> Basis \\<rightarrow>\\<^sub>E {0..<n};\n         x = (\\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  f \\<in> Basis \\<rightarrow>\\<^sub>E {0..<n}\n  x = (\\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i)\n\ngoal (1 subgoal):\n 1. D \\<le> dist x y", "obtain g where y: \"g \\<in> (Basis::('a set)) \\<rightarrow>\\<^sub>E {0..<n}\" \"y = (\\<Sum>i\\<in>Basis. (E * real (g i)) *\\<^sub>R i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> Basis \\<rightarrow>\\<^sub>E {0..<n};\n         y = (\\<Sum>i\\<in>Basis. (E * real (g i)) *\\<^sub>R i)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>y \\<in> F\\<close>"], ["proof (prove)\nusing this:\n  y \\<in> F\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> Basis \\<rightarrow>\\<^sub>E {0..<n};\n         y = (\\<Sum>i\\<in>Basis. (E * real (g i)) *\\<^sub>R i)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding F_def"], ["proof (prove)\nusing this:\n  y \\<in> (\\<lambda>f. \\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i) `\n          (Basis \\<rightarrow>\\<^sub>E {0..<n})\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> Basis \\<rightarrow>\\<^sub>E {0..<n};\n         y = (\\<Sum>i\\<in>Basis. (E * real (g i)) *\\<^sub>R i)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  g \\<in> Basis \\<rightarrow>\\<^sub>E {0..<n}\n  y = (\\<Sum>i\\<in>Basis. (E * real (g i)) *\\<^sub>R i)\n\ngoal (1 subgoal):\n 1. D \\<le> dist x y", "obtain i where \"f i \\<noteq> g i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i. f i \\<noteq> g i \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using x y \\<open>x \\<noteq>y\\<close>"], ["proof (prove)\nusing this:\n  f \\<in> Basis \\<rightarrow>\\<^sub>E {0..<n}\n  x = (\\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i)\n  g \\<in> Basis \\<rightarrow>\\<^sub>E {0..<n}\n  y = (\\<Sum>i\\<in>Basis. (E * real (g i)) *\\<^sub>R i)\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. (\\<And>i. f i \\<noteq> g i \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  f i \\<noteq> g i\n\ngoal (1 subgoal):\n 1. D \\<le> dist x y", "moreover"], ["proof (state)\nthis:\n  f i \\<noteq> g i\n\ngoal (1 subgoal):\n 1. D \\<le> dist x y", "have \"f j = g j\" if \"j \\<notin> Basis\" for j"], ["proof (prove)\ngoal (1 subgoal):\n 1. f j = g j", "using x(1) y(1) that"], ["proof (prove)\nusing this:\n  f \\<in> Basis \\<rightarrow>\\<^sub>E {0..<n}\n  g \\<in> Basis \\<rightarrow>\\<^sub>E {0..<n}\n  j \\<notin> Basis\n\ngoal (1 subgoal):\n 1. f j = g j", "by fastforce"], ["proof (state)\nthis:\n  ?j \\<notin> Basis \\<Longrightarrow> f ?j = g ?j\n\ngoal (1 subgoal):\n 1. D \\<le> dist x y", "ultimately"], ["proof (chain)\npicking this:\n  f i \\<noteq> g i\n  ?j \\<notin> Basis \\<Longrightarrow> f ?j = g ?j", "have \"i \\<in> Basis\""], ["proof (prove)\nusing this:\n  f i \\<noteq> g i\n  ?j \\<notin> Basis \\<Longrightarrow> f ?j = g ?j\n\ngoal (1 subgoal):\n 1. i \\<in> Basis", "by auto"], ["proof (state)\nthis:\n  i \\<in> Basis\n\ngoal (1 subgoal):\n 1. D \\<le> dist x y", "have \"D \\<le> E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D \\<le> E", "unfolding E_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. D \\<le> max D 1", "by auto"], ["proof (state)\nthis:\n  D \\<le> E\n\ngoal (1 subgoal):\n 1. D \\<le> dist x y", "also"], ["proof (state)\nthis:\n  D \\<le> E\n\ngoal (1 subgoal):\n 1. D \\<le> dist x y", "have \"... \\<le> abs(E * (real (f i) - real (g i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. E \\<le> \\<bar>E * (real (f i) - real (g i))\\<bar>", "using \\<open>E > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < E\n\ngoal (1 subgoal):\n 1. E \\<le> \\<bar>E * (real (f i) - real (g i))\\<bar>", "using \\<open>f i \\<noteq> g i\\<close>"], ["proof (prove)\nusing this:\n  0 < E\n  f i \\<noteq> g i\n\ngoal (1 subgoal):\n 1. E \\<le> \\<bar>E * (real (f i) - real (g i))\\<bar>", "by (auto simp add: divide_simps abs_mult)"], ["proof (state)\nthis:\n  E \\<le> \\<bar>E * (real (f i) - real (g i))\\<bar>\n\ngoal (1 subgoal):\n 1. D \\<le> dist x y", "also"], ["proof (state)\nthis:\n  E \\<le> \\<bar>E * (real (f i) - real (g i))\\<bar>\n\ngoal (1 subgoal):\n 1. D \\<le> dist x y", "have \"... = abs(inner x i - inner y i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>E * (real (f i) - real (g i))\\<bar> =\n    \\<bar>x \\<bullet> i - y \\<bullet> i\\<bar>", "unfolding x(2) y(2) inner_sum_left_Basis[OF \\<open>i \\<in> Basis\\<close>]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>E * (real (f i) - real (g i))\\<bar> =\n    \\<bar>E * real (f i) - E * real (g i)\\<bar>", "by (auto simp add: algebra_simps)"], ["proof (state)\nthis:\n  \\<bar>E * (real (f i) - real (g i))\\<bar> =\n  \\<bar>x \\<bullet> i - y \\<bullet> i\\<bar>\n\ngoal (1 subgoal):\n 1. D \\<le> dist x y", "also"], ["proof (state)\nthis:\n  \\<bar>E * (real (f i) - real (g i))\\<bar> =\n  \\<bar>x \\<bullet> i - y \\<bullet> i\\<bar>\n\ngoal (1 subgoal):\n 1. D \\<le> dist x y", "have \"... = abs(inner (x-y) i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>x \\<bullet> i - y \\<bullet> i\\<bar> =\n    \\<bar>(x - y) \\<bullet> i\\<bar>", "by (simp add: inner_diff_left)"], ["proof (state)\nthis:\n  \\<bar>x \\<bullet> i - y \\<bullet> i\\<bar> =\n  \\<bar>(x - y) \\<bullet> i\\<bar>\n\ngoal (1 subgoal):\n 1. D \\<le> dist x y", "also"], ["proof (state)\nthis:\n  \\<bar>x \\<bullet> i - y \\<bullet> i\\<bar> =\n  \\<bar>(x - y) \\<bullet> i\\<bar>\n\ngoal (1 subgoal):\n 1. D \\<le> dist x y", "have \"... \\<le> norm (x-y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>(x - y) \\<bullet> i\\<bar> \\<le> norm (x - y)", "using Basis_le_norm[OF \\<open>i \\<in> Basis\\<close>]"], ["proof (prove)\nusing this:\n  \\<bar>?x \\<bullet> i\\<bar> \\<le> norm ?x\n\ngoal (1 subgoal):\n 1. \\<bar>(x - y) \\<bullet> i\\<bar> \\<le> norm (x - y)", "by blast"], ["proof (state)\nthis:\n  \\<bar>(x - y) \\<bullet> i\\<bar> \\<le> norm (x - y)\n\ngoal (1 subgoal):\n 1. D \\<le> dist x y", "finally"], ["proof (chain)\npicking this:\n  D \\<le> norm (x - y)", "show \"dist x y \\<ge> D\""], ["proof (prove)\nusing this:\n  D \\<le> norm (x - y)\n\ngoal (1 subgoal):\n 1. D \\<le> dist x y", "by (simp add: dist_norm)"], ["proof (state)\nthis:\n  D \\<le> dist x y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> F; ?y \\<in> F; ?x \\<noteq> ?y\\<rbrakk>\n  \\<Longrightarrow> D \\<le> dist ?x ?y\n\ngoal (1 subgoal):\n 1. \\<exists>F\\<subseteq>cball (0::'a) R.\n       (\\<forall>x\\<in>F.\n           \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n       finite F \\<and>\n       (1 / (max D 1 * real DIM('a))) ^ DIM('a) * R ^ DIM('a)\n       \\<le> real (card F)", "have \"norm x \\<le> R\" if \"x \\<in> F\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm x \\<le> R", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. norm x \\<le> R", "obtain f where x: \"f \\<in> (Basis::('a set)) \\<rightarrow>\\<^sub>E {0..<n}\" \"x = (\\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> Basis \\<rightarrow>\\<^sub>E {0..<n};\n         x = (\\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>x \\<in> F\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> F\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> Basis \\<rightarrow>\\<^sub>E {0..<n};\n         x = (\\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding F_def"], ["proof (prove)\nusing this:\n  x \\<in> (\\<lambda>f. \\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i) `\n          (Basis \\<rightarrow>\\<^sub>E {0..<n})\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> Basis \\<rightarrow>\\<^sub>E {0..<n};\n         x = (\\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  f \\<in> Basis \\<rightarrow>\\<^sub>E {0..<n}\n  x = (\\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i)\n\ngoal (1 subgoal):\n 1. norm x \\<le> R", "then"], ["proof (chain)\npicking this:\n  f \\<in> Basis \\<rightarrow>\\<^sub>E {0..<n}\n  x = (\\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i)", "have \"norm x = norm (\\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i)\""], ["proof (prove)\nusing this:\n  f \\<in> Basis \\<rightarrow>\\<^sub>E {0..<n}\n  x = (\\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i)\n\ngoal (1 subgoal):\n 1. norm x = norm (\\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i)", "by simp"], ["proof (state)\nthis:\n  norm x = norm (\\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i)\n\ngoal (1 subgoal):\n 1. norm x \\<le> R", "also"], ["proof (state)\nthis:\n  norm x = norm (\\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i)\n\ngoal (1 subgoal):\n 1. norm x \\<le> R", "have \"... \\<le> (\\<Sum>i\\<in>Basis. norm((E * real (f i)) *\\<^sub>R i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (\\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i)\n    \\<le> (\\<Sum>i\\<in>Basis. norm ((E * real (f i)) *\\<^sub>R i))", "by (rule norm_sum)"], ["proof (state)\nthis:\n  norm (\\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i)\n  \\<le> (\\<Sum>i\\<in>Basis. norm ((E * real (f i)) *\\<^sub>R i))\n\ngoal (1 subgoal):\n 1. norm x \\<le> R", "also"], ["proof (state)\nthis:\n  norm (\\<Sum>i\\<in>Basis. (E * real (f i)) *\\<^sub>R i)\n  \\<le> (\\<Sum>i\\<in>Basis. norm ((E * real (f i)) *\\<^sub>R i))\n\ngoal (1 subgoal):\n 1. norm x \\<le> R", "have \"... = (\\<Sum>i\\<in>Basis. abs(E * real (f i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>Basis. norm ((E * real (f i)) *\\<^sub>R i)) =\n    (\\<Sum>i\\<in>Basis. \\<bar>E * real (f i)\\<bar>)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>Basis. norm ((E * real (f i)) *\\<^sub>R i)) =\n  (\\<Sum>i\\<in>Basis. \\<bar>E * real (f i)\\<bar>)\n\ngoal (1 subgoal):\n 1. norm x \\<le> R", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>Basis. norm ((E * real (f i)) *\\<^sub>R i)) =\n  (\\<Sum>i\\<in>Basis. \\<bar>E * real (f i)\\<bar>)\n\ngoal (1 subgoal):\n 1. norm x \\<le> R", "have \"... = (\\<Sum>i\\<in>Basis. E * real (f i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>Basis. \\<bar>E * real (f i)\\<bar>) =\n    (\\<Sum>i\\<in>Basis. E * real (f i))", "using \\<open>E > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < E\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>Basis. \\<bar>E * real (f i)\\<bar>) =\n    (\\<Sum>i\\<in>Basis. E * real (f i))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>Basis. \\<bar>E * real (f i)\\<bar>) =\n  (\\<Sum>i\\<in>Basis. E * real (f i))\n\ngoal (1 subgoal):\n 1. norm x \\<le> R", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>Basis. \\<bar>E * real (f i)\\<bar>) =\n  (\\<Sum>i\\<in>Basis. E * real (f i))\n\ngoal (1 subgoal):\n 1. norm x \\<le> R", "have \"... \\<le> (\\<Sum>i\\<in>(Basis::'a set). E * (n-1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>Basis. E * real (f i))\n    \\<le> (\\<Sum>i\\<in>Basis. E * real (n - 1))", "apply (rule sum_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> Basis \\<Longrightarrow> E * real (f i) \\<le> E * real (n - 1)", "using PiE_mem[OF x(1)] \\<open>E > 0\\<close>"], ["proof (prove)\nusing this:\n  ?x \\<in> Basis \\<Longrightarrow> f ?x \\<in> {0..<n}\n  0 < E\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> Basis \\<Longrightarrow> E * real (f i) \\<le> E * real (n - 1)", "apply (auto simp add: divide_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<in> Basis;\n        \\<And>x. x \\<in> Basis \\<Longrightarrow> f x < n; 0 < E\\<rbrakk>\n       \\<Longrightarrow> f i \\<le> n - Suc 0", "using \\<open>n > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<in> Basis;\n        \\<And>x. x \\<in> Basis \\<Longrightarrow> f x < n; 0 < E\\<rbrakk>\n       \\<Longrightarrow> f i \\<le> n - Suc 0", "by fastforce"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>Basis. E * real (f i))\n  \\<le> (\\<Sum>i\\<in>Basis. E * real (n - 1))\n\ngoal (1 subgoal):\n 1. norm x \\<le> R", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>Basis. E * real (f i))\n  \\<le> (\\<Sum>i\\<in>Basis. E * real (n - 1))\n\ngoal (1 subgoal):\n 1. norm x \\<le> R", "have \"... = DIM('a) * E * (n-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>Basis. E * real (n - 1)) = real DIM('a) * E * real (n - 1)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>Basis. E * real (n - 1)) = real DIM('a) * E * real (n - 1)\n\ngoal (1 subgoal):\n 1. norm x \\<le> R", "finally"], ["proof (chain)\npicking this:\n  norm x \\<le> real DIM('a) * E * real (n - 1)", "show \"norm x \\<le> R\""], ["proof (prove)\nusing this:\n  norm x \\<le> real DIM('a) * E * real (n - 1)\n\ngoal (1 subgoal):\n 1. norm x \\<le> R", "using \\<open>E * DIM('a) * (n-1) \\<le> R\\<close>"], ["proof (prove)\nusing this:\n  norm x \\<le> real DIM('a) * E * real (n - 1)\n  E * real DIM('a) * real (n - 1) \\<le> R\n\ngoal (1 subgoal):\n 1. norm x \\<le> R", "by (auto simp add: algebra_simps)"], ["proof (state)\nthis:\n  norm x \\<le> R\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x \\<in> F \\<Longrightarrow> norm ?x \\<le> R\n\ngoal (1 subgoal):\n 1. \\<exists>F\\<subseteq>cball (0::'a) R.\n       (\\<forall>x\\<in>F.\n           \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n       finite F \\<and>\n       (1 / (max D 1 * real DIM('a))) ^ DIM('a) * R ^ DIM('a)\n       \\<le> real (card F)", "then"], ["proof (chain)\npicking this:\n  ?x \\<in> F \\<Longrightarrow> norm ?x \\<le> R", "have \"F \\<subseteq> cball 0 R\""], ["proof (prove)\nusing this:\n  ?x \\<in> F \\<Longrightarrow> norm ?x \\<le> R\n\ngoal (1 subgoal):\n 1. F \\<subseteq> cball (0::'a) R", "by auto"], ["proof (state)\nthis:\n  F \\<subseteq> cball (0::'a) R\n\ngoal (1 subgoal):\n 1. \\<exists>F\\<subseteq>cball (0::'a) R.\n       (\\<forall>x\\<in>F.\n           \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n       finite F \\<and>\n       (1 / (max D 1 * real DIM('a))) ^ DIM('a) * R ^ DIM('a)\n       \\<le> real (card F)", "then"], ["proof (chain)\npicking this:\n  F \\<subseteq> cball (0::'a) R", "show ?thesis"], ["proof (prove)\nusing this:\n  F \\<subseteq> cball (0::'a) R\n\ngoal (1 subgoal):\n 1. \\<exists>F\\<subseteq>cball (0::'a) R.\n       (\\<forall>x\\<in>F.\n           \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n       finite F \\<and>\n       (1 / (max D 1 * real DIM('a))) ^ DIM('a) * R ^ DIM('a)\n       \\<le> real (card F)", "using \\<open>card F \\<ge> c * R^(DIM('a))\\<close> \\<open>finite F\\<close> separation c_def E_def"], ["proof (prove)\nusing this:\n  F \\<subseteq> cball (0::'a) R\n  c * R ^ DIM('a) \\<le> real (card F)\n  finite F\n  \\<lbrakk>?x \\<in> F; ?y \\<in> F; ?x \\<noteq> ?y\\<rbrakk>\n  \\<Longrightarrow> D \\<le> dist ?x ?y\n  c = (1 / (E * real DIM('a))) ^ DIM('a)\n  E = max D 1\n\ngoal (1 subgoal):\n 1. \\<exists>F\\<subseteq>cball (0::'a) R.\n       (\\<forall>x\\<in>F.\n           \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n       finite F \\<and>\n       (1 / (max D 1 * real DIM('a))) ^ DIM('a) * R ^ DIM('a)\n       \\<le> real (card F)", "by blast"], ["proof (state)\nthis:\n  \\<exists>F\\<subseteq>cball (0::'a) R.\n     (\\<forall>x\\<in>F.\n         \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n     finite F \\<and>\n     (1 / (max D 1 * real DIM('a))) ^ DIM('a) * R ^ DIM('a)\n     \\<le> real (card F)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>As the growth is invariant under quasi-isometries, we deduce that it is impossible\nto map quasi-isometrically a Euclidean space in a space of strictly smaller dimension.\\<close>"], ["", "proposition quasi_isometry_on_euclidean:\n  fixes f::\"'a::euclidean_space\\<Rightarrow>'b::euclidean_space\"\n  assumes \"lambda C-quasi_isometry_on UNIV f\"\n  shows \"DIM('a) \\<le> DIM('b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. DIM('a) \\<le> DIM('b)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. DIM('a) \\<le> DIM('b)", "have C: \"lambda \\<ge> 1\" \"C \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> lambda &&& 0 \\<le> C", "using quasi_isometry_onD[OF assms]"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> UNIV; ?y \\<in> UNIV\\<rbrakk>\n  \\<Longrightarrow> dist (f ?x) (f ?y) \\<le> lambda * dist ?x ?y + C\n  \\<lbrakk>?x \\<in> UNIV; ?y \\<in> UNIV\\<rbrakk>\n  \\<Longrightarrow> 1 / lambda * dist ?x ?y - C \\<le> dist (f ?x) (f ?y)\n  1 \\<le> lambda\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. 1 \\<le> lambda &&& 0 \\<le> C", "by auto"], ["proof (state)\nthis:\n  1 \\<le> lambda\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. DIM('a) \\<le> DIM('b)", "define D where \"D = lambda * (C+1)\""], ["proof (state)\nthis:\n  D = lambda * (C + 1)\n\ngoal (1 subgoal):\n 1. DIM('a) \\<le> DIM('b)", "define Ca where \"Ca = (1/((max D 1) * DIM('a)))^(DIM('a))\""], ["proof (state)\nthis:\n  Ca = (1 / (max D 1 * real DIM('a))) ^ DIM('a)\n\ngoal (1 subgoal):\n 1. DIM('a) \\<le> DIM('b)", "have \"Ca > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < Ca", "unfolding Ca_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < (1 / (max D 1 * real DIM('a))) ^ DIM('a)", "by auto"], ["proof (state)\nthis:\n  0 < Ca\n\ngoal (1 subgoal):\n 1. DIM('a) \\<le> DIM('b)", "have A: \"\\<And>R::real. R \\<ge> 0 \\<Longrightarrow> (\\<exists>F. (F \\<subseteq> cball (0::'a::euclidean_space) R\n        \\<and> (\\<forall>x\\<in>F. \\<forall>y\\<in>F. x = y \\<or> dist x y \\<ge> D) \\<and> finite F \\<and> card F \\<ge> Ca * R^(DIM('a))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>R.\n       0 \\<le> R \\<Longrightarrow>\n       \\<exists>F\\<subseteq>cball (0::'a) R.\n          (\\<forall>x\\<in>F.\n              \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n          finite F \\<and> Ca * R ^ DIM('a) \\<le> real (card F)", "using growth_rate_euclidean_below[of _ D]"], ["proof (prove)\nusing this:\n  0 \\<le> ?R \\<Longrightarrow>\n  \\<exists>F\\<subseteq>cball (0::?'a) ?R.\n     (\\<forall>x\\<in>F.\n         \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n     finite F \\<and>\n     (1 / (max D 1 * real DIM(?'a))) ^ DIM(?'a) * ?R ^ DIM(?'a)\n     \\<le> real (card F)\n\ngoal (1 subgoal):\n 1. \\<And>R.\n       0 \\<le> R \\<Longrightarrow>\n       \\<exists>F\\<subseteq>cball (0::'a) R.\n          (\\<forall>x\\<in>F.\n              \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n          finite F \\<and> Ca * R ^ DIM('a) \\<le> real (card F)", "unfolding Ca_def"], ["proof (prove)\nusing this:\n  0 \\<le> ?R \\<Longrightarrow>\n  \\<exists>F\\<subseteq>cball (0::?'a) ?R.\n     (\\<forall>x\\<in>F.\n         \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n     finite F \\<and>\n     (1 / (max D 1 * real DIM(?'a))) ^ DIM(?'a) * ?R ^ DIM(?'a)\n     \\<le> real (card F)\n\ngoal (1 subgoal):\n 1. \\<And>R.\n       0 \\<le> R \\<Longrightarrow>\n       \\<exists>F\\<subseteq>cball (0::'a) R.\n          (\\<forall>x\\<in>F.\n              \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n          finite F \\<and>\n          (1 / (max D 1 * real DIM('a))) ^ DIM('a) * R ^ DIM('a)\n          \\<le> real (card F)", "by blast"], ["proof (state)\nthis:\n  0 \\<le> ?R \\<Longrightarrow>\n  \\<exists>F\\<subseteq>cball (0::'a) ?R.\n     (\\<forall>x\\<in>F.\n         \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n     finite F \\<and> Ca * ?R ^ DIM('a) \\<le> real (card F)\n\ngoal (1 subgoal):\n 1. DIM('a) \\<le> DIM('b)", "define Cb::real where \"Cb = ((6/1)^(DIM('b)))\""], ["proof (state)\nthis:\n  Cb = (6 / 1) ^ DIM('b)\n\ngoal (1 subgoal):\n 1. DIM('a) \\<le> DIM('b)", "have B: \"\\<And>F (R::real). (F \\<subseteq> cball (0::'b::euclidean_space) R \\<Longrightarrow> R \\<ge> 0 \\<Longrightarrow> (\\<forall>x\\<in>F. \\<forall>y\\<in>F. x = y \\<or> dist x y \\<ge> 1) \\<Longrightarrow> (finite F \\<and> card F \\<le> 1 + Cb * R^(DIM('b))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>F R.\n       \\<lbrakk>F \\<subseteq> cball (0::'b) R; 0 \\<le> R;\n        \\<forall>x\\<in>F.\n           \\<forall>y\\<in>F. x = y \\<or> 1 \\<le> dist x y\\<rbrakk>\n       \\<Longrightarrow> finite F \\<and>\n                         real (card F) \\<le> 1 + Cb * R ^ DIM('b)", "using growth_rate_euclidean_above[of 1]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < 1; ?F \\<subseteq> cball (0::?'a) ?R; 0 \\<le> ?R;\n   \\<And>x y.\n      \\<lbrakk>x \\<in> ?F; y \\<in> ?F; x \\<noteq> y\\<rbrakk>\n      \\<Longrightarrow> 1 \\<le> dist x y\\<rbrakk>\n  \\<Longrightarrow> finite ?F \\<and>\n                    real (card ?F)\n                    \\<le> 1 + (6 / 1) ^ DIM(?'a) * ?R ^ DIM(?'a)\n\ngoal (1 subgoal):\n 1. \\<And>F R.\n       \\<lbrakk>F \\<subseteq> cball (0::'b) R; 0 \\<le> R;\n        \\<forall>x\\<in>F.\n           \\<forall>y\\<in>F. x = y \\<or> 1 \\<le> dist x y\\<rbrakk>\n       \\<Longrightarrow> finite F \\<and>\n                         real (card F) \\<le> 1 + Cb * R ^ DIM('b)", "unfolding Cb_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < 1; ?F \\<subseteq> cball (0::?'a) ?R; 0 \\<le> ?R;\n   \\<And>x y.\n      \\<lbrakk>x \\<in> ?F; y \\<in> ?F; x \\<noteq> y\\<rbrakk>\n      \\<Longrightarrow> 1 \\<le> dist x y\\<rbrakk>\n  \\<Longrightarrow> finite ?F \\<and>\n                    real (card ?F)\n                    \\<le> 1 + (6 / 1) ^ DIM(?'a) * ?R ^ DIM(?'a)\n\ngoal (1 subgoal):\n 1. \\<And>F R.\n       \\<lbrakk>F \\<subseteq> cball (0::'b) R; 0 \\<le> R;\n        \\<forall>x\\<in>F.\n           \\<forall>y\\<in>F. x = y \\<or> 1 \\<le> dist x y\\<rbrakk>\n       \\<Longrightarrow> finite F \\<and>\n                         real (card F)\n                         \\<le> 1 + (6 / 1) ^ DIM('b) * R ^ DIM('b)", "by fastforce"], ["proof (state)\nthis:\n  \\<lbrakk>?F \\<subseteq> cball (0::'b) ?R; 0 \\<le> ?R;\n   \\<forall>x\\<in>?F.\n      \\<forall>y\\<in>?F. x = y \\<or> 1 \\<le> dist x y\\<rbrakk>\n  \\<Longrightarrow> finite ?F \\<and>\n                    real (card ?F) \\<le> 1 + Cb * ?R ^ DIM('b)\n\ngoal (1 subgoal):\n 1. DIM('a) \\<le> DIM('b)", "have M: \"Ca * R^(DIM('a)) \\<le> 1 + Cb * (lambda * R + C + norm(f 0))^(DIM('b))\" if \"R \\<ge> 0\" for R::real"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ca * R ^ DIM('a)\n    \\<le> 1 + Cb * (lambda * R + C + norm (f (0::'a))) ^ DIM('b)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Ca * R ^ DIM('a)\n    \\<le> 1 + Cb * (lambda * R + C + norm (f (0::'a))) ^ DIM('b)", "obtain F::\"'a set\" where F: \"F \\<subseteq> cball 0 R\" \"\\<forall>x\\<in>F. \\<forall>y\\<in>F. x = y \\<or> dist x y \\<ge> D\"\n                                \"finite F\" \"card F \\<ge> Ca * R^(DIM('a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>F.\n        \\<lbrakk>F \\<subseteq> cball (0::'a) R;\n         \\<forall>x\\<in>F. \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y;\n         finite F; Ca * R ^ DIM('a) \\<le> real (card F)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using A[OF \\<open>R \\<ge> 0\\<close>]"], ["proof (prove)\nusing this:\n  \\<exists>F\\<subseteq>cball (0::'a) R.\n     (\\<forall>x\\<in>F.\n         \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y) \\<and>\n     finite F \\<and> Ca * R ^ DIM('a) \\<le> real (card F)\n\ngoal (1 subgoal):\n 1. (\\<And>F.\n        \\<lbrakk>F \\<subseteq> cball (0::'a) R;\n         \\<forall>x\\<in>F. \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y;\n         finite F; Ca * R ^ DIM('a) \\<le> real (card F)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  F \\<subseteq> cball (0::'a) R\n  \\<forall>x\\<in>F. \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y\n  finite F\n  Ca * R ^ DIM('a) \\<le> real (card F)\n\ngoal (1 subgoal):\n 1. Ca * R ^ DIM('a)\n    \\<le> 1 + Cb * (lambda * R + C + norm (f (0::'a))) ^ DIM('b)", "define G where \"G = f`F\""], ["proof (state)\nthis:\n  G = f ` F\n\ngoal (1 subgoal):\n 1. Ca * R ^ DIM('a)\n    \\<le> 1 + Cb * (lambda * R + C + norm (f (0::'a))) ^ DIM('b)", "have *: \"dist (f x) (f y) \\<ge> 1\" if \"x \\<noteq> y\" \"x \\<in> F\" \"y \\<in> F\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> dist (f x) (f y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 \\<le> dist (f x) (f y)", "have \"dist x y \\<ge> D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D \\<le> dist x y", "using that F(2)"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  x \\<in> F\n  y \\<in> F\n  \\<forall>x\\<in>F. \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y\n\ngoal (1 subgoal):\n 1. D \\<le> dist x y", "by auto"], ["proof (state)\nthis:\n  D \\<le> dist x y\n\ngoal (1 subgoal):\n 1. 1 \\<le> dist (f x) (f y)", "have \"1 = (1/lambda) * D - C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 = 1 / lambda * D - C", "using \\<open>lambda \\<ge> 1\\<close>"], ["proof (prove)\nusing this:\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. 1 = 1 / lambda * D - C", "unfolding D_def"], ["proof (prove)\nusing this:\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. 1 = 1 / lambda * (lambda * (C + 1)) - C", "by auto"], ["proof (state)\nthis:\n  1 = 1 / lambda * D - C\n\ngoal (1 subgoal):\n 1. 1 \\<le> dist (f x) (f y)", "also"], ["proof (state)\nthis:\n  1 = 1 / lambda * D - C\n\ngoal (1 subgoal):\n 1. 1 \\<le> dist (f x) (f y)", "have \"... \\<le> (1/lambda) * dist x y - C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * D - C \\<le> 1 / lambda * dist x y - C", "using \\<open>dist x y \\<ge> D\\<close> \\<open>lambda \\<ge> 1\\<close>"], ["proof (prove)\nusing this:\n  D \\<le> dist x y\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. 1 / lambda * D - C \\<le> 1 / lambda * dist x y - C", "by (auto simp add: divide_simps)"], ["proof (state)\nthis:\n  1 / lambda * D - C \\<le> 1 / lambda * dist x y - C\n\ngoal (1 subgoal):\n 1. 1 \\<le> dist (f x) (f y)", "also"], ["proof (state)\nthis:\n  1 / lambda * D - C \\<le> 1 / lambda * dist x y - C\n\ngoal (1 subgoal):\n 1. 1 \\<le> dist (f x) (f y)", "have \"... \\<le> dist (f x) (f y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - C \\<le> dist (f x) (f y)", "using quasi_isometry_onD[OF assms]"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> UNIV; ?y \\<in> UNIV\\<rbrakk>\n  \\<Longrightarrow> dist (f ?x) (f ?y) \\<le> lambda * dist ?x ?y + C\n  \\<lbrakk>?x \\<in> UNIV; ?y \\<in> UNIV\\<rbrakk>\n  \\<Longrightarrow> 1 / lambda * dist ?x ?y - C \\<le> dist (f ?x) (f ?y)\n  1 \\<le> lambda\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - C \\<le> dist (f x) (f y)", "by auto"], ["proof (state)\nthis:\n  1 / lambda * dist x y - C \\<le> dist (f x) (f y)\n\ngoal (1 subgoal):\n 1. 1 \\<le> dist (f x) (f y)", "finally"], ["proof (chain)\npicking this:\n  1 \\<le> dist (f x) (f y)", "show ?thesis"], ["proof (prove)\nusing this:\n  1 \\<le> dist (f x) (f y)\n\ngoal (1 subgoal):\n 1. 1 \\<le> dist (f x) (f y)", "by simp"], ["proof (state)\nthis:\n  1 \\<le> dist (f x) (f y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<noteq> ?y; ?x \\<in> F; ?y \\<in> F\\<rbrakk>\n  \\<Longrightarrow> 1 \\<le> dist (f ?x) (f ?y)\n\ngoal (1 subgoal):\n 1. Ca * R ^ DIM('a)\n    \\<le> 1 + Cb * (lambda * R + C + norm (f (0::'a))) ^ DIM('b)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?x \\<noteq> ?y; ?x \\<in> F; ?y \\<in> F\\<rbrakk>\n  \\<Longrightarrow> 1 \\<le> dist (f ?x) (f ?y)", "have \"inj_on f F\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<noteq> ?y; ?x \\<in> F; ?y \\<in> F\\<rbrakk>\n  \\<Longrightarrow> 1 \\<le> dist (f ?x) (f ?y)\n\ngoal (1 subgoal):\n 1. inj_on f F", "unfolding inj_on_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<noteq> ?y; ?x \\<in> F; ?y \\<in> F\\<rbrakk>\n  \\<Longrightarrow> 1 \\<le> dist (f ?x) (f ?y)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>F. \\<forall>y\\<in>F. f x = f y \\<longrightarrow> x = y", "by force"], ["proof (state)\nthis:\n  inj_on f F\n\ngoal (1 subgoal):\n 1. Ca * R ^ DIM('a)\n    \\<le> 1 + Cb * (lambda * R + C + norm (f (0::'a))) ^ DIM('b)", "then"], ["proof (chain)\npicking this:\n  inj_on f F", "have \"card G = card F\""], ["proof (prove)\nusing this:\n  inj_on f F\n\ngoal (1 subgoal):\n 1. card G = card F", "unfolding G_def"], ["proof (prove)\nusing this:\n  inj_on f F\n\ngoal (1 subgoal):\n 1. card (f ` F) = card F", "by (simp add: card_image)"], ["proof (state)\nthis:\n  card G = card F\n\ngoal (1 subgoal):\n 1. Ca * R ^ DIM('a)\n    \\<le> 1 + Cb * (lambda * R + C + norm (f (0::'a))) ^ DIM('b)", "then"], ["proof (chain)\npicking this:\n  card G = card F", "have \"card G \\<ge> Ca * R^(DIM('a))\""], ["proof (prove)\nusing this:\n  card G = card F\n\ngoal (1 subgoal):\n 1. Ca * R ^ DIM('a) \\<le> real (card G)", "using F"], ["proof (prove)\nusing this:\n  card G = card F\n  F \\<subseteq> cball (0::'a) R\n  \\<forall>x\\<in>F. \\<forall>y\\<in>F. x = y \\<or> D \\<le> dist x y\n  finite F\n  Ca * R ^ DIM('a) \\<le> real (card F)\n\ngoal (1 subgoal):\n 1. Ca * R ^ DIM('a) \\<le> real (card G)", "by auto"], ["proof (state)\nthis:\n  Ca * R ^ DIM('a) \\<le> real (card G)\n\ngoal (1 subgoal):\n 1. Ca * R ^ DIM('a)\n    \\<le> 1 + Cb * (lambda * R + C + norm (f (0::'a))) ^ DIM('b)", "moreover"], ["proof (state)\nthis:\n  Ca * R ^ DIM('a) \\<le> real (card G)\n\ngoal (1 subgoal):\n 1. Ca * R ^ DIM('a)\n    \\<le> 1 + Cb * (lambda * R + C + norm (f (0::'a))) ^ DIM('b)", "have \"finite G \\<and> card G \\<le> 1 + Cb * (lambda * R + C + norm(f 0))^(DIM('b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite G \\<and>\n    real (card G)\n    \\<le> 1 + Cb * (lambda * R + C + norm (f (0::'a))) ^ DIM('b)", "proof (rule B)"], ["proof (state)\ngoal (3 subgoals):\n 1. G \\<subseteq> cball (0::'b) (lambda * R + C + norm (f (0::'a)))\n 2. 0 \\<le> lambda * R + C + norm (f (0::'a))\n 3. \\<forall>x\\<in>G. \\<forall>y\\<in>G. x = y \\<or> 1 \\<le> dist x y", "show \"0 \\<le> lambda * R + C + norm (f 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> lambda * R + C + norm (f (0::'a))", "using \\<open>R \\<ge> 0\\<close> \\<open>C \\<ge> 0\\<close> \\<open>lambda \\<ge> 1\\<close>"], ["proof (prove)\nusing this:\n  0 \\<le> R\n  0 \\<le> C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. 0 \\<le> lambda * R + C + norm (f (0::'a))", "by auto"], ["proof (state)\nthis:\n  0 \\<le> lambda * R + C + norm (f (0::'a))\n\ngoal (2 subgoals):\n 1. G \\<subseteq> cball (0::'b) (lambda * R + C + norm (f (0::'a)))\n 2. \\<forall>x\\<in>G. \\<forall>y\\<in>G. x = y \\<or> 1 \\<le> dist x y", "show \"\\<forall>x\\<in>G. \\<forall>y\\<in>G. x = y \\<or> 1 \\<le> dist x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>G. \\<forall>y\\<in>G. x = y \\<or> 1 \\<le> dist x y", "using *"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<noteq> ?y; ?x \\<in> F; ?y \\<in> F\\<rbrakk>\n  \\<Longrightarrow> 1 \\<le> dist (f ?x) (f ?y)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>G. \\<forall>y\\<in>G. x = y \\<or> 1 \\<le> dist x y", "unfolding G_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<noteq> ?y; ?x \\<in> F; ?y \\<in> F\\<rbrakk>\n  \\<Longrightarrow> 1 \\<le> dist (f ?x) (f ?y)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>f ` F. \\<forall>y\\<in>f ` F. x = y \\<or> 1 \\<le> dist x y", "by (auto, metis)"], ["proof (state)\nthis:\n  \\<forall>x\\<in>G. \\<forall>y\\<in>G. x = y \\<or> 1 \\<le> dist x y\n\ngoal (1 subgoal):\n 1. G \\<subseteq> cball (0::'b) (lambda * R + C + norm (f (0::'a)))", "show \"G \\<subseteq> cball 0 (lambda * R + C + norm (f 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<subseteq> cball (0::'b) (lambda * R + C + norm (f (0::'a)))", "unfolding G_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` F \\<subseteq> cball (0::'b) (lambda * R + C + norm (f (0::'a)))", "proof (auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> F \\<Longrightarrow>\n       norm (f xa) \\<le> lambda * R + C + norm (f (0::'a))", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> F \\<Longrightarrow>\n       norm (f xa) \\<le> lambda * R + C + norm (f (0::'a))", "assume \"x \\<in> F\""], ["proof (state)\nthis:\n  x \\<in> F\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> F \\<Longrightarrow>\n       norm (f xa) \\<le> lambda * R + C + norm (f (0::'a))", "have \"norm (f x) \\<le> norm (f 0) + dist (f x) (f 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (f x) \\<le> norm (f (0::'a)) + dist (f x) (f (0::'a))", "by (metis dist_0_norm dist_triangle2)"], ["proof (state)\nthis:\n  norm (f x) \\<le> norm (f (0::'a)) + dist (f x) (f (0::'a))\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> F \\<Longrightarrow>\n       norm (f xa) \\<le> lambda * R + C + norm (f (0::'a))", "also"], ["proof (state)\nthis:\n  norm (f x) \\<le> norm (f (0::'a)) + dist (f x) (f (0::'a))\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> F \\<Longrightarrow>\n       norm (f xa) \\<le> lambda * R + C + norm (f (0::'a))", "have \"... \\<le> norm (f 0) + (lambda * dist x 0 + C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (f (0::'a)) + dist (f x) (f (0::'a))\n    \\<le> norm (f (0::'a)) + (lambda * dist x (0::'a) + C)", "by (intro mono_intros quasi_isometry_onD(1)[OF assms]) auto"], ["proof (state)\nthis:\n  norm (f (0::'a)) + dist (f x) (f (0::'a))\n  \\<le> norm (f (0::'a)) + (lambda * dist x (0::'a) + C)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> F \\<Longrightarrow>\n       norm (f xa) \\<le> lambda * R + C + norm (f (0::'a))", "also"], ["proof (state)\nthis:\n  norm (f (0::'a)) + dist (f x) (f (0::'a))\n  \\<le> norm (f (0::'a)) + (lambda * dist x (0::'a) + C)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> F \\<Longrightarrow>\n       norm (f xa) \\<le> lambda * R + C + norm (f (0::'a))", "have \"... \\<le> norm (f 0) + lambda * R + C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (f (0::'a)) + (lambda * dist x (0::'a) + C)\n    \\<le> norm (f (0::'a)) + lambda * R + C", "using \\<open>x \\<in> F\\<close> \\<open>F \\<subseteq> cball 0 R\\<close> \\<open>lambda \\<ge> 1\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> F\n  F \\<subseteq> cball (0::'a) R\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. norm (f (0::'a)) + (lambda * dist x (0::'a) + C)\n    \\<le> norm (f (0::'a)) + lambda * R + C", "by auto"], ["proof (state)\nthis:\n  norm (f (0::'a)) + (lambda * dist x (0::'a) + C)\n  \\<le> norm (f (0::'a)) + lambda * R + C\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> F \\<Longrightarrow>\n       norm (f xa) \\<le> lambda * R + C + norm (f (0::'a))", "finally"], ["proof (chain)\npicking this:\n  norm (f x) \\<le> norm (f (0::'a)) + lambda * R + C", "show \"norm (f x) \\<le> lambda * R + C + norm (f 0)\""], ["proof (prove)\nusing this:\n  norm (f x) \\<le> norm (f (0::'a)) + lambda * R + C\n\ngoal (1 subgoal):\n 1. norm (f x) \\<le> lambda * R + C + norm (f (0::'a))", "by auto"], ["proof (state)\nthis:\n  norm (f x) \\<le> lambda * R + C + norm (f (0::'a))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  G \\<subseteq> cball (0::'b) (lambda * R + C + norm (f (0::'a)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite G \\<and>\n  real (card G) \\<le> 1 + Cb * (lambda * R + C + norm (f (0::'a))) ^ DIM('b)\n\ngoal (1 subgoal):\n 1. Ca * R ^ DIM('a)\n    \\<le> 1 + Cb * (lambda * R + C + norm (f (0::'a))) ^ DIM('b)", "ultimately"], ["proof (chain)\npicking this:\n  Ca * R ^ DIM('a) \\<le> real (card G)\n  finite G \\<and>\n  real (card G) \\<le> 1 + Cb * (lambda * R + C + norm (f (0::'a))) ^ DIM('b)", "show \"Ca * R^(DIM('a)) \\<le> 1 + Cb * (lambda * R + C + norm(f 0))^(DIM('b))\""], ["proof (prove)\nusing this:\n  Ca * R ^ DIM('a) \\<le> real (card G)\n  finite G \\<and>\n  real (card G) \\<le> 1 + Cb * (lambda * R + C + norm (f (0::'a))) ^ DIM('b)\n\ngoal (1 subgoal):\n 1. Ca * R ^ DIM('a)\n    \\<le> 1 + Cb * (lambda * R + C + norm (f (0::'a))) ^ DIM('b)", "by auto"], ["proof (state)\nthis:\n  Ca * R ^ DIM('a)\n  \\<le> 1 + Cb * (lambda * R + C + norm (f (0::'a))) ^ DIM('b)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 \\<le> ?R \\<Longrightarrow>\n  Ca * ?R ^ DIM('a)\n  \\<le> 1 + Cb * (lambda * ?R + C + norm (f (0::'a))) ^ DIM('b)\n\ngoal (1 subgoal):\n 1. DIM('a) \\<le> DIM('b)", "define CB where \"CB = max Cb 0\""], ["proof (state)\nthis:\n  CB = max Cb 0\n\ngoal (1 subgoal):\n 1. DIM('a) \\<le> DIM('b)", "have \"CB \\<ge> 0\" \"CB \\<ge> Cb\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> CB &&& Cb \\<le> CB", "unfolding CB_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> max Cb 0 &&& Cb \\<le> max Cb 0", "by auto"], ["proof (state)\nthis:\n  0 \\<le> CB\n  Cb \\<le> CB\n\ngoal (1 subgoal):\n 1. DIM('a) \\<le> DIM('b)", "define D::real where \"D = (1 + CB * (lambda + C + norm(f 0))^(DIM('b)))/Ca\""], ["proof (state)\nthis:\n  D = (1 + CB * (lambda + C + norm (f (0::'a))) ^ DIM('b)) / Ca\n\ngoal (1 subgoal):\n 1. DIM('a) \\<le> DIM('b)", "have Rineq: \"R^(DIM('a)) \\<le> D * R^(DIM('b))\" if \"R \\<ge> 1\" for R::real"], ["proof (prove)\ngoal (1 subgoal):\n 1. R ^ DIM('a) \\<le> D * R ^ DIM('b)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. R ^ DIM('a) \\<le> D * R ^ DIM('b)", "have \"Ca * R^(DIM('a)) \\<le> 1 + Cb * (lambda * R + C + norm(f 0))^(DIM('b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ca * R ^ DIM('a)\n    \\<le> 1 + Cb * (lambda * R + C + norm (f (0::'a))) ^ DIM('b)", "using M \\<open>R \\<ge> 1\\<close>"], ["proof (prove)\nusing this:\n  0 \\<le> ?R \\<Longrightarrow>\n  Ca * ?R ^ DIM('a)\n  \\<le> 1 + Cb * (lambda * ?R + C + norm (f (0::'a))) ^ DIM('b)\n  1 \\<le> R\n\ngoal (1 subgoal):\n 1. Ca * R ^ DIM('a)\n    \\<le> 1 + Cb * (lambda * R + C + norm (f (0::'a))) ^ DIM('b)", "by auto"], ["proof (state)\nthis:\n  Ca * R ^ DIM('a)\n  \\<le> 1 + Cb * (lambda * R + C + norm (f (0::'a))) ^ DIM('b)\n\ngoal (1 subgoal):\n 1. R ^ DIM('a) \\<le> D * R ^ DIM('b)", "also"], ["proof (state)\nthis:\n  Ca * R ^ DIM('a)\n  \\<le> 1 + Cb * (lambda * R + C + norm (f (0::'a))) ^ DIM('b)\n\ngoal (1 subgoal):\n 1. R ^ DIM('a) \\<le> D * R ^ DIM('b)", "have \"... \\<le> 1 + CB * (lambda * R + C + norm(f 0))^(DIM('b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + Cb * (lambda * R + C + norm (f (0::'a))) ^ DIM('b)\n    \\<le> 1 + CB * (lambda * R + C + norm (f (0::'a))) ^ DIM('b)", "using \\<open>CB \\<ge> Cb\\<close> \\<open>lambda \\<ge> 1\\<close> \\<open>R \\<ge> 1\\<close> \\<open>C \\<ge> 0\\<close>"], ["proof (prove)\nusing this:\n  Cb \\<le> CB\n  1 \\<le> lambda\n  1 \\<le> R\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. 1 + Cb * (lambda * R + C + norm (f (0::'a))) ^ DIM('b)\n    \\<le> 1 + CB * (lambda * R + C + norm (f (0::'a))) ^ DIM('b)", "by (auto intro!: mult_right_mono)"], ["proof (state)\nthis:\n  1 + Cb * (lambda * R + C + norm (f (0::'a))) ^ DIM('b)\n  \\<le> 1 + CB * (lambda * R + C + norm (f (0::'a))) ^ DIM('b)\n\ngoal (1 subgoal):\n 1. R ^ DIM('a) \\<le> D * R ^ DIM('b)", "also"], ["proof (state)\nthis:\n  1 + Cb * (lambda * R + C + norm (f (0::'a))) ^ DIM('b)\n  \\<le> 1 + CB * (lambda * R + C + norm (f (0::'a))) ^ DIM('b)\n\ngoal (1 subgoal):\n 1. R ^ DIM('a) \\<le> D * R ^ DIM('b)", "have \"... \\<le> R^(DIM('b)) + CB * (lambda * R + C * R + norm(f 0) * R)^(DIM('b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + CB * (lambda * R + C + norm (f (0::'a))) ^ DIM('b)\n    \\<le> R ^ DIM('b) +\n          CB * (lambda * R + C * R + norm (f (0::'a)) * R) ^ DIM('b)", "using \\<open>lambda \\<ge> 1\\<close> \\<open>R \\<ge> 1\\<close> \\<open>C \\<ge> 0\\<close> \\<open>CB \\<ge> 0\\<close>"], ["proof (prove)\nusing this:\n  1 \\<le> lambda\n  1 \\<le> R\n  0 \\<le> C\n  0 \\<le> CB\n\ngoal (1 subgoal):\n 1. 1 + CB * (lambda * R + C + norm (f (0::'a))) ^ DIM('b)\n    \\<le> R ^ DIM('b) +\n          CB * (lambda * R + C * R + norm (f (0::'a)) * R) ^ DIM('b)", "by (auto intro!: mono_intros)"], ["proof (state)\nthis:\n  1 + CB * (lambda * R + C + norm (f (0::'a))) ^ DIM('b)\n  \\<le> R ^ DIM('b) +\n        CB * (lambda * R + C * R + norm (f (0::'a)) * R) ^ DIM('b)\n\ngoal (1 subgoal):\n 1. R ^ DIM('a) \\<le> D * R ^ DIM('b)", "also"], ["proof (state)\nthis:\n  1 + CB * (lambda * R + C + norm (f (0::'a))) ^ DIM('b)\n  \\<le> R ^ DIM('b) +\n        CB * (lambda * R + C * R + norm (f (0::'a)) * R) ^ DIM('b)\n\ngoal (1 subgoal):\n 1. R ^ DIM('a) \\<le> D * R ^ DIM('b)", "have \"... = (1 + CB * (lambda + C + norm(f 0))^(DIM('b))) * R^(DIM('b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R ^ DIM('b) +\n    CB * (lambda * R + C * R + norm (f (0::'a)) * R) ^ DIM('b) =\n    (1 + CB * (lambda + C + norm (f (0::'a))) ^ DIM('b)) * R ^ DIM('b)", "by (auto simp add: algebra_simps power_mult_distrib[symmetric])"], ["proof (state)\nthis:\n  R ^ DIM('b) + CB * (lambda * R + C * R + norm (f (0::'a)) * R) ^ DIM('b) =\n  (1 + CB * (lambda + C + norm (f (0::'a))) ^ DIM('b)) * R ^ DIM('b)\n\ngoal (1 subgoal):\n 1. R ^ DIM('a) \\<le> D * R ^ DIM('b)", "finally"], ["proof (chain)\npicking this:\n  Ca * R ^ DIM('a)\n  \\<le> (1 + CB * (lambda + C + norm (f (0::'a))) ^ DIM('b)) * R ^ DIM('b)", "show ?thesis"], ["proof (prove)\nusing this:\n  Ca * R ^ DIM('a)\n  \\<le> (1 + CB * (lambda + C + norm (f (0::'a))) ^ DIM('b)) * R ^ DIM('b)\n\ngoal (1 subgoal):\n 1. R ^ DIM('a) \\<le> D * R ^ DIM('b)", "using \\<open>Ca > 0\\<close>"], ["proof (prove)\nusing this:\n  Ca * R ^ DIM('a)\n  \\<le> (1 + CB * (lambda + C + norm (f (0::'a))) ^ DIM('b)) * R ^ DIM('b)\n  0 < Ca\n\ngoal (1 subgoal):\n 1. R ^ DIM('a) \\<le> D * R ^ DIM('b)", "unfolding D_def"], ["proof (prove)\nusing this:\n  Ca * R ^ DIM('a)\n  \\<le> (1 + CB * (lambda + C + norm (f (0::'a))) ^ DIM('b)) * R ^ DIM('b)\n  0 < Ca\n\ngoal (1 subgoal):\n 1. R ^ DIM('a)\n    \\<le> (1 + CB * (lambda + C + norm (f (0::'a))) ^ DIM('b)) / Ca *\n          R ^ DIM('b)", "by (auto simp add: divide_simps algebra_simps)"], ["proof (state)\nthis:\n  R ^ DIM('a) \\<le> D * R ^ DIM('b)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  1 \\<le> ?R \\<Longrightarrow> ?R ^ DIM('a) \\<le> D * ?R ^ DIM('b)\n\ngoal (1 subgoal):\n 1. DIM('a) \\<le> DIM('b)", "show \"DIM('a) \\<le> DIM('b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. DIM('a) \\<le> DIM('b)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> DIM('a) \\<le> DIM('b) \\<Longrightarrow> False", "assume \"\\<not>(DIM('a) \\<le> DIM('b))\""], ["proof (state)\nthis:\n  \\<not> DIM('a) \\<le> DIM('b)\n\ngoal (1 subgoal):\n 1. \\<not> DIM('a) \\<le> DIM('b) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> DIM('a) \\<le> DIM('b)", "obtain n where \"DIM('a) = DIM('b) + n\" \"n > 0\""], ["proof (prove)\nusing this:\n  \\<not> DIM('a) \\<le> DIM('b)\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>DIM('a) = DIM('b) + n; 0 < n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis less_imp_add_positive not_le)"], ["proof (state)\nthis:\n  DIM('a) = DIM('b) + n\n  0 < n\n\ngoal (1 subgoal):\n 1. \\<not> DIM('a) \\<le> DIM('b) \\<Longrightarrow> False", "have \"D \\<ge> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> D", "using Rineq[of 1]"], ["proof (prove)\nusing this:\n  1 \\<le> 1 \\<Longrightarrow> 1 ^ DIM('a) \\<le> D * 1 ^ DIM('b)\n\ngoal (1 subgoal):\n 1. 1 \\<le> D", "by auto"], ["proof (state)\nthis:\n  1 \\<le> D\n\ngoal (1 subgoal):\n 1. \\<not> DIM('a) \\<le> DIM('b) \\<Longrightarrow> False", "define R where \"R = 2 * D\""], ["proof (state)\nthis:\n  R = 2 * D\n\ngoal (1 subgoal):\n 1. \\<not> DIM('a) \\<le> DIM('b) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  R = 2 * D", "have \"R \\<ge> 1\""], ["proof (prove)\nusing this:\n  R = 2 * D\n\ngoal (1 subgoal):\n 1. 1 \\<le> R", "using \\<open>D \\<ge> 1\\<close>"], ["proof (prove)\nusing this:\n  R = 2 * D\n  1 \\<le> D\n\ngoal (1 subgoal):\n 1. 1 \\<le> R", "by auto"], ["proof (state)\nthis:\n  1 \\<le> R\n\ngoal (1 subgoal):\n 1. \\<not> DIM('a) \\<le> DIM('b) \\<Longrightarrow> False", "have \"R^n * R^(DIM('b)) = R^(DIM('a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R ^ n * R ^ DIM('b) = R ^ DIM('a)", "unfolding \\<open>DIM('a) = DIM('b) + n\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. R ^ n * R ^ DIM('b) = R ^ (DIM('b) + n)", "by (auto simp add: power_add)"], ["proof (state)\nthis:\n  R ^ n * R ^ DIM('b) = R ^ DIM('a)\n\ngoal (1 subgoal):\n 1. \\<not> DIM('a) \\<le> DIM('b) \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  R ^ n * R ^ DIM('b) = R ^ DIM('a)\n\ngoal (1 subgoal):\n 1. \\<not> DIM('a) \\<le> DIM('b) \\<Longrightarrow> False", "have \"... \\<le> D * R^(DIM('b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R ^ DIM('a) \\<le> D * R ^ DIM('b)", "using Rineq[OF \\<open>R \\<ge> 1\\<close>]"], ["proof (prove)\nusing this:\n  R ^ DIM('a) \\<le> D * R ^ DIM('b)\n\ngoal (1 subgoal):\n 1. R ^ DIM('a) \\<le> D * R ^ DIM('b)", "by auto"], ["proof (state)\nthis:\n  R ^ DIM('a) \\<le> D * R ^ DIM('b)\n\ngoal (1 subgoal):\n 1. \\<not> DIM('a) \\<le> DIM('b) \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  R ^ n * R ^ DIM('b) \\<le> D * R ^ DIM('b)", "have \"R^n \\<le> D\""], ["proof (prove)\nusing this:\n  R ^ n * R ^ DIM('b) \\<le> D * R ^ DIM('b)\n\ngoal (1 subgoal):\n 1. R ^ n \\<le> D", "using \\<open>R \\<ge> 1\\<close>"], ["proof (prove)\nusing this:\n  R ^ n * R ^ DIM('b) \\<le> D * R ^ DIM('b)\n  1 \\<le> R\n\ngoal (1 subgoal):\n 1. R ^ n \\<le> D", "by auto"], ["proof (state)\nthis:\n  R ^ n \\<le> D\n\ngoal (1 subgoal):\n 1. \\<not> DIM('a) \\<le> DIM('b) \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  R ^ n \\<le> D\n\ngoal (1 subgoal):\n 1. \\<not> DIM('a) \\<le> DIM('b) \\<Longrightarrow> False", "have \"2 * D \\<le> R^n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * D \\<le> R ^ n", "unfolding R_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * D \\<le> (2 * D) ^ n", "using \\<open>D \\<ge> 1\\<close> \\<open>n > 0\\<close>"], ["proof (prove)\nusing this:\n  1 \\<le> D\n  0 < n\n\ngoal (1 subgoal):\n 1. 2 * D \\<le> (2 * D) ^ n", "by (metis One_nat_def Suc_leI \\<open>1 \\<le> R\\<close> \\<open>R \\<equiv> 2 * D\\<close> less_eq_real_def power_increasing_iff power_one power_one_right)"], ["proof (state)\nthis:\n  2 * D \\<le> R ^ n\n\ngoal (1 subgoal):\n 1. \\<not> DIM('a) \\<le> DIM('b) \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  R ^ n \\<le> D\n  2 * D \\<le> R ^ n", "show False"], ["proof (prove)\nusing this:\n  R ^ n \\<le> D\n  2 * D \\<le> R ^ n\n\ngoal (1 subgoal):\n 1. False", "using \\<open>D \\<ge> 1\\<close>"], ["proof (prove)\nusing this:\n  R ^ n \\<le> D\n  2 * D \\<le> R ^ n\n  1 \\<le> D\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  DIM('a) \\<le> DIM('b)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>As a particular case, we deduce that two quasi-isometric Euclidean spaces have the\nsame dimension.\\<close>"], ["", "theorem quasi_isometric_euclidean:\n  assumes \"quasi_isometric (UNIV::'a::euclidean_space set) (UNIV::'b::euclidean_space set)\"\n  shows \"DIM('a) = DIM('b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. DIM('a) = DIM('b)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. DIM('a) = DIM('b)", "obtain lambda C and f::\"'a \\<Rightarrow>'b\" where \"lambda C-quasi_isometry_on UNIV f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>lambda C f.\n        lambda C -quasi_isometry f \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  quasi_isometric UNIV UNIV\n\ngoal (1 subgoal):\n 1. (\\<And>lambda C f.\n        lambda C -quasi_isometry f \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding quasi_isometric_def quasi_isometry_between_def"], ["proof (prove)\nusing this:\n  \\<exists>lambda C f.\n     lambda C -quasi_isometry f \\<and>\n     range f \\<subseteq> UNIV \\<and>\n     (\\<forall>y\\<in>UNIV. \\<exists>x\\<in>UNIV. dist (f x) y \\<le> C)\n\ngoal (1 subgoal):\n 1. (\\<And>lambda C f.\n        lambda C -quasi_isometry f \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  lambda C -quasi_isometry f\n\ngoal (1 subgoal):\n 1. DIM('a) = DIM('b)", "then"], ["proof (chain)\npicking this:\n  lambda C -quasi_isometry f", "have *: \"DIM('a) \\<le> DIM('b)\""], ["proof (prove)\nusing this:\n  lambda C -quasi_isometry f\n\ngoal (1 subgoal):\n 1. DIM('a) \\<le> DIM('b)", "using quasi_isometry_on_euclidean"], ["proof (prove)\nusing this:\n  lambda C -quasi_isometry f\n  ?lambda ?C -quasi_isometry ?f \\<Longrightarrow> DIM(?'a) \\<le> DIM(?'b)\n\ngoal (1 subgoal):\n 1. DIM('a) \\<le> DIM('b)", "by auto"], ["proof (state)\nthis:\n  DIM('a) \\<le> DIM('b)\n\ngoal (1 subgoal):\n 1. DIM('a) = DIM('b)", "have \"quasi_isometric (UNIV::'b::euclidean_space set) (UNIV::'a::euclidean_space set)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. quasi_isometric UNIV UNIV", "using quasi_isometric_equiv_rel(3)[OF assms]"], ["proof (prove)\nusing this:\n  quasi_isometric UNIV UNIV\n\ngoal (1 subgoal):\n 1. quasi_isometric UNIV UNIV", "by auto"], ["proof (state)\nthis:\n  quasi_isometric UNIV UNIV\n\ngoal (1 subgoal):\n 1. DIM('a) = DIM('b)", "then"], ["proof (chain)\npicking this:\n  quasi_isometric UNIV UNIV", "obtain lambda C and f::\"'b \\<Rightarrow>'a\" where \"lambda C-quasi_isometry_on UNIV f\""], ["proof (prove)\nusing this:\n  quasi_isometric UNIV UNIV\n\ngoal (1 subgoal):\n 1. (\\<And>lambda C f.\n        lambda C -quasi_isometry f \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding quasi_isometric_def quasi_isometry_between_def"], ["proof (prove)\nusing this:\n  \\<exists>lambda C f.\n     lambda C -quasi_isometry f \\<and>\n     range f \\<subseteq> UNIV \\<and>\n     (\\<forall>y\\<in>UNIV. \\<exists>x\\<in>UNIV. dist (f x) y \\<le> C)\n\ngoal (1 subgoal):\n 1. (\\<And>lambda C f.\n        lambda C -quasi_isometry f \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  lambda C -quasi_isometry f\n\ngoal (1 subgoal):\n 1. DIM('a) = DIM('b)", "then"], ["proof (chain)\npicking this:\n  lambda C -quasi_isometry f", "have \"DIM('b) \\<le> DIM('a)\""], ["proof (prove)\nusing this:\n  lambda C -quasi_isometry f\n\ngoal (1 subgoal):\n 1. DIM('b) \\<le> DIM('a)", "using quasi_isometry_on_euclidean"], ["proof (prove)\nusing this:\n  lambda C -quasi_isometry f\n  ?lambda ?C -quasi_isometry ?f \\<Longrightarrow> DIM(?'a) \\<le> DIM(?'b)\n\ngoal (1 subgoal):\n 1. DIM('b) \\<le> DIM('a)", "by auto"], ["proof (state)\nthis:\n  DIM('b) \\<le> DIM('a)\n\ngoal (1 subgoal):\n 1. DIM('a) = DIM('b)", "then"], ["proof (chain)\npicking this:\n  DIM('b) \\<le> DIM('a)", "show ?thesis"], ["proof (prove)\nusing this:\n  DIM('b) \\<le> DIM('a)\n\ngoal (1 subgoal):\n 1. DIM('a) = DIM('b)", "using *"], ["proof (prove)\nusing this:\n  DIM('b) \\<le> DIM('a)\n  DIM('a) \\<le> DIM('b)\n\ngoal (1 subgoal):\n 1. DIM('a) = DIM('b)", "by auto"], ["proof (state)\nthis:\n  DIM('a) = DIM('b)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>A different (and important) way to prove the above statement would be to use asymptotic\ncones. Here, it can be done in an elementary way: start with a quasi-isometric map $f$, and\nconsider a limit (defined with a ultrafilter) of $x\\mapsto f(n x)/n$. This is a map which\ncontracts and expands the distances by at most $\\lambda$. In particular, it is a homeomorphism\non its image. No such map exists if the dimension of the target is smaller than the dimension\nof the source (invariance of domain theorem, already available in the library).\n\nThe above argument using growth is more elementary to write, though.\\<close>"], ["", "subsection \\<open>Quasi-geodesics\\<close>"], ["", "text \\<open>A quasi-geodesic is a quasi-isometric embedding of a real segment into a metric space. As the\nembedding need not be continuous, a quasi-geodesic does not have to be compact, nor connected, which\ncan be a problem. However, in a geodesic space, it is always possible to deform a quasi-geodesic\ninto a continuous one (at the price of worsening the quasi-isometry constants). This is the content\nof the proposition \\verb+quasi_geodesic_made_lipschitz+ below, which is a variation around Lemma\nIII.H.1.11 in~\\cite{bridson_haefliger}. The strategy of the proof is simple: assume that the\nquasi-geodesic $c$ is defined on $[a,b]$. Then, on the points $a$, $a+C/\\lambda$, $\\cdots$,\n$a+ N \\cdot C/\\lambda$, $b$, take $d$ equal to $c$, where $N$ is chosen so that the distance\nbetween the last point and $b$ is in $[C/\\lambda, 2C/\\lambda)$. In the intervals, take $d$ to\nbe geodesic.\\<close>"], ["", "proposition (in geodesic_space) quasi_geodesic_made_lipschitz:\n  fixes c::\"real \\<Rightarrow> 'a\"\n  assumes \"lambda C-quasi_isometry_on {a..b} c\" \"dist (c a) (c b) \\<ge> 2 * C\"\n  shows \"\\<exists>d. continuous_on {a..b} d \\<and> d a = c a \\<and> d b = c b\n              \\<and> (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C)\n              \\<and> lambda (4 * C)-quasi_isometry_on {a..b} d\n              \\<and> (2 * lambda)-lipschitz_on {a..b} d\n              \\<and> hausdorff_distance (c`{a..b}) (d`{a..b}) \\<le> 2 * C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "consider \"C = 0\" | \"C > 0 \\<and> b \\<le> a\" | \"C > 0 \\<and> a < b \\<and> b \\<le> a + 2 * C/lambda\" | \"C > 0 \\<and> a +2 * C/lambda < b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>C = 0 \\<Longrightarrow> thesis;\n     0 < C \\<and> b \\<le> a \\<Longrightarrow> thesis;\n     0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n     thesis;\n     0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using quasi_isometry_onD(4)[OF assms(1)]"], ["proof (prove)\nusing this:\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. \\<lbrakk>C = 0 \\<Longrightarrow> thesis;\n     0 < C \\<and> b \\<le> a \\<Longrightarrow> thesis;\n     0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n     thesis;\n     0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by fastforce"], ["proof (state)\nthis:\n  \\<lbrakk>C = 0 \\<Longrightarrow> ?thesis;\n   0 < C \\<and> b \\<le> a \\<Longrightarrow> ?thesis;\n   0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n   ?thesis;\n   0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>C = 0 \\<Longrightarrow> ?thesis;\n   0 < C \\<and> b \\<le> a \\<Longrightarrow> ?thesis;\n   0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n   ?thesis;\n   0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>C = 0 \\<Longrightarrow> ?thesis;\n   0 < C \\<and> b \\<le> a \\<Longrightarrow> ?thesis;\n   0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n   ?thesis;\n   0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "proof (cases)"], ["proof (state)\ngoal (4 subgoals):\n 1. C = 0 \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> b \\<le> a \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 3. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 4. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "text \\<open>If the original function is Lipschitz, we can use it directly.\\<close>"], ["proof (state)\ngoal (4 subgoals):\n 1. C = 0 \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> b \\<le> a \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 3. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 4. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "case 1"], ["proof (state)\nthis:\n  C = 0\n\ngoal (4 subgoals):\n 1. C = 0 \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> b \\<le> a \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 3. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 4. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have \"lambda-lipschitz_on {a..b} c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda-lipschitz_on {a..b} c", "apply (rule lipschitz_onI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {a..b}; y \\<in> {a..b}\\<rbrakk>\n       \\<Longrightarrow> dist (c x) (c y) \\<le> lambda * dist x y\n 2. 0 \\<le> lambda", "using 1 quasi_isometry_onD[OF assms(1)]"], ["proof (prove)\nusing this:\n  C = 0\n  \\<lbrakk>?x \\<in> {a..b}; ?y \\<in> {a..b}\\<rbrakk>\n  \\<Longrightarrow> dist (c ?x) (c ?y) \\<le> lambda * dist ?x ?y + C\n  \\<lbrakk>?x \\<in> {a..b}; ?y \\<in> {a..b}\\<rbrakk>\n  \\<Longrightarrow> 1 / lambda * dist ?x ?y - C \\<le> dist (c ?x) (c ?y)\n  1 \\<le> lambda\n  0 \\<le> C\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {a..b}; y \\<in> {a..b}\\<rbrakk>\n       \\<Longrightarrow> dist (c x) (c y) \\<le> lambda * dist x y\n 2. 0 \\<le> lambda", "by auto"], ["proof (state)\nthis:\n  lambda-lipschitz_on {a..b} c\n\ngoal (4 subgoals):\n 1. C = 0 \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> b \\<le> a \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 3. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 4. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  lambda-lipschitz_on {a..b} c", "have a: \"(2 * lambda)-lipschitz_on {a..b} c\""], ["proof (prove)\nusing this:\n  lambda-lipschitz_on {a..b} c\n\ngoal (1 subgoal):\n 1. (2 * lambda)-lipschitz_on {a..b} c", "apply (rule lipschitz_on_mono)"], ["proof (prove)\ngoal (2 subgoals):\n 1. {a..b} \\<subseteq> {a..b}\n 2. lambda \\<le> 2 * lambda", "using quasi_isometry_onD[OF assms(1)] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> {a..b}; ?y \\<in> {a..b}\\<rbrakk>\n  \\<Longrightarrow> dist (c ?x) (c ?y) \\<le> lambda * dist ?x ?y + C\n  \\<lbrakk>?x \\<in> {a..b}; ?y \\<in> {a..b}\\<rbrakk>\n  \\<Longrightarrow> 1 / lambda * dist ?x ?y - C \\<le> dist (c ?x) (c ?y)\n  1 \\<le> lambda\n  0 \\<le> C\n  lambda C -quasi_isometry_on {a..b} c\n  2 * C \\<le> dist (c a) (c b)\n\ngoal (2 subgoals):\n 1. {a..b} \\<subseteq> {a..b}\n 2. lambda \\<le> 2 * lambda", "by (auto simp add: divide_simps)"], ["proof (state)\nthis:\n  (2 * lambda)-lipschitz_on {a..b} c\n\ngoal (4 subgoals):\n 1. C = 0 \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> b \\<le> a \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 3. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 4. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  (2 * lambda)-lipschitz_on {a..b} c", "have b: \"continuous_on {a..b} c\""], ["proof (prove)\nusing this:\n  (2 * lambda)-lipschitz_on {a..b} c\n\ngoal (1 subgoal):\n 1. continuous_on {a..b} c", "using lipschitz_on_continuous_on"], ["proof (prove)\nusing this:\n  (2 * lambda)-lipschitz_on {a..b} c\n  ?L-lipschitz_on ?X ?f \\<Longrightarrow> continuous_on ?X ?f\n\ngoal (1 subgoal):\n 1. continuous_on {a..b} c", "by blast"], ["proof (state)\nthis:\n  continuous_on {a..b} c\n\ngoal (4 subgoals):\n 1. C = 0 \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> b \\<le> a \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 3. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 4. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have \"continuous_on {a..b} c \\<and> c a = c a \\<and> c b = c b\n                \\<and> (\\<forall>x\\<in>{a..b}. dist (c x) (c x) \\<le> 4 * C)\n                \\<and> lambda (4 * C)-quasi_isometry_on {a..b} c\n                \\<and> (2 * lambda)-lipschitz_on {a..b} c\n                \\<and> hausdorff_distance (c`{a..b}) (c`{a..b}) \\<le> 2 * C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on {a..b} c \\<and>\n    c a = c a \\<and>\n    c b = c b \\<and>\n    (\\<forall>x\\<in>{a..b}. dist (c x) (c x) \\<le> 4 * C) \\<and>\n    lambda (4 * C) -quasi_isometry_on {a..b} c \\<and>\n    (2 * lambda)-lipschitz_on {a..b} c \\<and>\n    hausdorff_distance (c ` {a..b}) (c ` {a..b}) \\<le> 2 * C", "using 1 a b assms(1)"], ["proof (prove)\nusing this:\n  C = 0\n  (2 * lambda)-lipschitz_on {a..b} c\n  continuous_on {a..b} c\n  lambda C -quasi_isometry_on {a..b} c\n\ngoal (1 subgoal):\n 1. continuous_on {a..b} c \\<and>\n    c a = c a \\<and>\n    c b = c b \\<and>\n    (\\<forall>x\\<in>{a..b}. dist (c x) (c x) \\<le> 4 * C) \\<and>\n    lambda (4 * C) -quasi_isometry_on {a..b} c \\<and>\n    (2 * lambda)-lipschitz_on {a..b} c \\<and>\n    hausdorff_distance (c ` {a..b}) (c ` {a..b}) \\<le> 2 * C", "by auto"], ["proof (state)\nthis:\n  continuous_on {a..b} c \\<and>\n  c a = c a \\<and>\n  c b = c b \\<and>\n  (\\<forall>x\\<in>{a..b}. dist (c x) (c x) \\<le> 4 * C) \\<and>\n  lambda (4 * C) -quasi_isometry_on {a..b} c \\<and>\n  (2 * lambda)-lipschitz_on {a..b} c \\<and>\n  hausdorff_distance (c ` {a..b}) (c ` {a..b}) \\<le> 2 * C\n\ngoal (4 subgoals):\n 1. C = 0 \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> b \\<le> a \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 3. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 4. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  continuous_on {a..b} c \\<and>\n  c a = c a \\<and>\n  c b = c b \\<and>\n  (\\<forall>x\\<in>{a..b}. dist (c x) (c x) \\<le> 4 * C) \\<and>\n  lambda (4 * C) -quasi_isometry_on {a..b} c \\<and>\n  (2 * lambda)-lipschitz_on {a..b} c \\<and>\n  hausdorff_distance (c ` {a..b}) (c ` {a..b}) \\<le> 2 * C", "show ?thesis"], ["proof (prove)\nusing this:\n  continuous_on {a..b} c \\<and>\n  c a = c a \\<and>\n  c b = c b \\<and>\n  (\\<forall>x\\<in>{a..b}. dist (c x) (c x) \\<le> 4 * C) \\<and>\n  lambda (4 * C) -quasi_isometry_on {a..b} c \\<and>\n  (2 * lambda)-lipschitz_on {a..b} c \\<and>\n  hausdorff_distance (c ` {a..b}) (c ` {a..b}) \\<le> 2 * C\n\ngoal (1 subgoal):\n 1. \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "by blast"], ["proof (state)\nthis:\n  \\<exists>d.\n     continuous_on {a..b} d \\<and>\n     d a = c a \\<and>\n     d b = c b \\<and>\n     (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n     lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n     (2 * lambda)-lipschitz_on {a..b} d \\<and>\n     hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n\ngoal (3 subgoals):\n 1. 0 < C \\<and> b \\<le> a \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 3. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. 0 < C \\<and> b \\<le> a \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 3. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "text \\<open>If the original interval is empty, anything will do.\\<close>"], ["proof (state)\ngoal (3 subgoals):\n 1. 0 < C \\<and> b \\<le> a \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 3. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "case 2"], ["proof (state)\nthis:\n  0 < C \\<and> b \\<le> a\n\ngoal (3 subgoals):\n 1. 0 < C \\<and> b \\<le> a \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 3. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  0 < C \\<and> b \\<le> a", "have \"b < a\""], ["proof (prove)\nusing this:\n  0 < C \\<and> b \\<le> a\n\ngoal (1 subgoal):\n 1. b < a", "using assms(2) less_eq_real_def"], ["proof (prove)\nusing this:\n  0 < C \\<and> b \\<le> a\n  2 * C \\<le> dist (c a) (c b)\n  (?x \\<le> ?y) = (?x < ?y \\<or> ?x = ?y)\n\ngoal (1 subgoal):\n 1. b < a", "by auto"], ["proof (state)\nthis:\n  b < a\n\ngoal (3 subgoals):\n 1. 0 < C \\<and> b \\<le> a \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 3. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  b < a", "have *: \"{a..b} = {}\""], ["proof (prove)\nusing this:\n  b < a\n\ngoal (1 subgoal):\n 1. {a..b} = {}", "by auto"], ["proof (state)\nthis:\n  {a..b} = {}\n\ngoal (3 subgoals):\n 1. 0 < C \\<and> b \\<le> a \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 3. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have a: \"(2 * lambda)-lipschitz_on {a..b} c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 * lambda)-lipschitz_on {a..b} c", "unfolding *"], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 * lambda)-lipschitz_on {} c", "apply (rule lipschitz_intros)"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> 2 * lambda", "using quasi_isometry_onD[OF assms(1)] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> {a..b}; ?y \\<in> {a..b}\\<rbrakk>\n  \\<Longrightarrow> dist (c ?x) (c ?y) \\<le> lambda * dist ?x ?y + C\n  \\<lbrakk>?x \\<in> {a..b}; ?y \\<in> {a..b}\\<rbrakk>\n  \\<Longrightarrow> 1 / lambda * dist ?x ?y - C \\<le> dist (c ?x) (c ?y)\n  1 \\<le> lambda\n  0 \\<le> C\n  lambda C -quasi_isometry_on {a..b} c\n  2 * C \\<le> dist (c a) (c b)\n\ngoal (1 subgoal):\n 1. 0 \\<le> 2 * lambda", "by (auto simp add: divide_simps)"], ["proof (state)\nthis:\n  (2 * lambda)-lipschitz_on {a..b} c\n\ngoal (3 subgoals):\n 1. 0 < C \\<and> b \\<le> a \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 3. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  (2 * lambda)-lipschitz_on {a..b} c", "have b: \"continuous_on {a..b} c\""], ["proof (prove)\nusing this:\n  (2 * lambda)-lipschitz_on {a..b} c\n\ngoal (1 subgoal):\n 1. continuous_on {a..b} c", "using lipschitz_on_continuous_on"], ["proof (prove)\nusing this:\n  (2 * lambda)-lipschitz_on {a..b} c\n  ?L-lipschitz_on ?X ?f \\<Longrightarrow> continuous_on ?X ?f\n\ngoal (1 subgoal):\n 1. continuous_on {a..b} c", "by blast"], ["proof (state)\nthis:\n  continuous_on {a..b} c\n\ngoal (3 subgoals):\n 1. 0 < C \\<and> b \\<le> a \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 3. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have \"continuous_on {a..b} c \\<and> c a = c a \\<and> c b = c b\n                \\<and> (\\<forall>x\\<in>{a..b}. dist (c x) (c x) \\<le> 4 * C)\n                \\<and> lambda (4 * C)-quasi_isometry_on {a..b} c\n                \\<and> (2 * lambda)-lipschitz_on {a..b} c\n                \\<and> hausdorff_distance (c`{a..b}) (c`{a..b}) \\<le> 2 * C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on {a..b} c \\<and>\n    c a = c a \\<and>\n    c b = c b \\<and>\n    (\\<forall>x\\<in>{a..b}. dist (c x) (c x) \\<le> 4 * C) \\<and>\n    lambda (4 * C) -quasi_isometry_on {a..b} c \\<and>\n    (2 * lambda)-lipschitz_on {a..b} c \\<and>\n    hausdorff_distance (c ` {a..b}) (c ` {a..b}) \\<le> 2 * C", "using a b quasi_isometry_on_empty assms(1) quasi_isometry_onD[OF assms(1)] * assms"], ["proof (prove)\nusing this:\n  (2 * lambda)-lipschitz_on {a..b} c\n  continuous_on {a..b} c\n  \\<lbrakk>0 \\<le> ?C; 1 \\<le> ?lambda\\<rbrakk>\n  \\<Longrightarrow> ?lambda ?C -quasi_isometry_on {} ?f\n  lambda C -quasi_isometry_on {a..b} c\n  \\<lbrakk>?x \\<in> {a..b}; ?y \\<in> {a..b}\\<rbrakk>\n  \\<Longrightarrow> dist (c ?x) (c ?y) \\<le> lambda * dist ?x ?y + C\n  \\<lbrakk>?x \\<in> {a..b}; ?y \\<in> {a..b}\\<rbrakk>\n  \\<Longrightarrow> 1 / lambda * dist ?x ?y - C \\<le> dist (c ?x) (c ?y)\n  1 \\<le> lambda\n  0 \\<le> C\n  {a..b} = {}\n  lambda C -quasi_isometry_on {a..b} c\n  2 * C \\<le> dist (c a) (c b)\n\ngoal (1 subgoal):\n 1. continuous_on {a..b} c \\<and>\n    c a = c a \\<and>\n    c b = c b \\<and>\n    (\\<forall>x\\<in>{a..b}. dist (c x) (c x) \\<le> 4 * C) \\<and>\n    lambda (4 * C) -quasi_isometry_on {a..b} c \\<and>\n    (2 * lambda)-lipschitz_on {a..b} c \\<and>\n    hausdorff_distance (c ` {a..b}) (c ` {a..b}) \\<le> 2 * C", "by auto"], ["proof (state)\nthis:\n  continuous_on {a..b} c \\<and>\n  c a = c a \\<and>\n  c b = c b \\<and>\n  (\\<forall>x\\<in>{a..b}. dist (c x) (c x) \\<le> 4 * C) \\<and>\n  lambda (4 * C) -quasi_isometry_on {a..b} c \\<and>\n  (2 * lambda)-lipschitz_on {a..b} c \\<and>\n  hausdorff_distance (c ` {a..b}) (c ` {a..b}) \\<le> 2 * C\n\ngoal (3 subgoals):\n 1. 0 < C \\<and> b \\<le> a \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 3. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  continuous_on {a..b} c \\<and>\n  c a = c a \\<and>\n  c b = c b \\<and>\n  (\\<forall>x\\<in>{a..b}. dist (c x) (c x) \\<le> 4 * C) \\<and>\n  lambda (4 * C) -quasi_isometry_on {a..b} c \\<and>\n  (2 * lambda)-lipschitz_on {a..b} c \\<and>\n  hausdorff_distance (c ` {a..b}) (c ` {a..b}) \\<le> 2 * C", "show ?thesis"], ["proof (prove)\nusing this:\n  continuous_on {a..b} c \\<and>\n  c a = c a \\<and>\n  c b = c b \\<and>\n  (\\<forall>x\\<in>{a..b}. dist (c x) (c x) \\<le> 4 * C) \\<and>\n  lambda (4 * C) -quasi_isometry_on {a..b} c \\<and>\n  (2 * lambda)-lipschitz_on {a..b} c \\<and>\n  hausdorff_distance (c ` {a..b}) (c ` {a..b}) \\<le> 2 * C\n\ngoal (1 subgoal):\n 1. \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "by blast"], ["proof (state)\nthis:\n  \\<exists>d.\n     continuous_on {a..b} d \\<and>\n     d a = c a \\<and>\n     d b = c b \\<and>\n     (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n     lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n     (2 * lambda)-lipschitz_on {a..b} d \\<and>\n     hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n\ngoal (2 subgoals):\n 1. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "text \\<open>If the original interval is short, we can use a direct geodesic interpolation between\n    its endpoints\\<close>"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "case 3"], ["proof (state)\nthis:\n  0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda\n\ngoal (2 subgoals):\n 1. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda", "have C: \"C > 0\" \"lambda \\<ge> 1\""], ["proof (prove)\nusing this:\n  0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda\n\ngoal (1 subgoal):\n 1. 0 < C &&& 1 \\<le> lambda", "using quasi_isometry_onD[OF assms(1)]"], ["proof (prove)\nusing this:\n  0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda\n  \\<lbrakk>?x \\<in> {a..b}; ?y \\<in> {a..b}\\<rbrakk>\n  \\<Longrightarrow> dist (c ?x) (c ?y) \\<le> lambda * dist ?x ?y + C\n  \\<lbrakk>?x \\<in> {a..b}; ?y \\<in> {a..b}\\<rbrakk>\n  \\<Longrightarrow> 1 / lambda * dist ?x ?y - C \\<le> dist (c ?x) (c ?y)\n  1 \\<le> lambda\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. 0 < C &&& 1 \\<le> lambda", "by auto"], ["proof (state)\nthis:\n  0 < C\n  1 \\<le> lambda\n\ngoal (2 subgoals):\n 1. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have [mono_intros]: \"1/lambda \\<le> lambda\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda \\<le> lambda", "using C"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. 1 / lambda \\<le> lambda", "by (simp add: divide_simps mult_ge1_powers(1))"], ["proof (state)\nthis:\n  1 / lambda \\<le> lambda\n\ngoal (2 subgoals):\n 1. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have \"a < b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a < b", "using 3"], ["proof (prove)\nusing this:\n  0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda\n\ngoal (1 subgoal):\n 1. a < b", "by simp"], ["proof (state)\nthis:\n  a < b\n\ngoal (2 subgoals):\n 1. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have \"2 * C \\<le> dist (c a) (c b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * C \\<le> dist (c a) (c b)", "using assms"], ["proof (prove)\nusing this:\n  lambda C -quasi_isometry_on {a..b} c\n  2 * C \\<le> dist (c a) (c b)\n\ngoal (1 subgoal):\n 1. 2 * C \\<le> dist (c a) (c b)", "by auto"], ["proof (state)\nthis:\n  2 * C \\<le> dist (c a) (c b)\n\ngoal (2 subgoals):\n 1. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "also"], ["proof (state)\nthis:\n  2 * C \\<le> dist (c a) (c b)\n\ngoal (2 subgoals):\n 1. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have \"... \\<le> lambda * dist a b + C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (c a) (c b) \\<le> lambda * dist a b + C", "using quasi_isometry_onD[OF assms(1)] \\<open>a < b\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> {a..b}; ?y \\<in> {a..b}\\<rbrakk>\n  \\<Longrightarrow> dist (c ?x) (c ?y) \\<le> lambda * dist ?x ?y + C\n  \\<lbrakk>?x \\<in> {a..b}; ?y \\<in> {a..b}\\<rbrakk>\n  \\<Longrightarrow> 1 / lambda * dist ?x ?y - C \\<le> dist (c ?x) (c ?y)\n  1 \\<le> lambda\n  0 \\<le> C\n  a < b\n\ngoal (1 subgoal):\n 1. dist (c a) (c b) \\<le> lambda * dist a b + C", "by auto"], ["proof (state)\nthis:\n  dist (c a) (c b) \\<le> lambda * dist a b + C\n\ngoal (2 subgoals):\n 1. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "also"], ["proof (state)\nthis:\n  dist (c a) (c b) \\<le> lambda * dist a b + C\n\ngoal (2 subgoals):\n 1. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have \"... = lambda * (b-a) + C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda * dist a b + C = lambda * (b - a) + C", "using \\<open>a < b\\<close> dist_real_def"], ["proof (prove)\nusing this:\n  a < b\n  dist ?x ?y = \\<bar>?x - ?y\\<bar>\n\ngoal (1 subgoal):\n 1. lambda * dist a b + C = lambda * (b - a) + C", "by auto"], ["proof (state)\nthis:\n  lambda * dist a b + C = lambda * (b - a) + C\n\ngoal (2 subgoals):\n 1. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "finally"], ["proof (chain)\npicking this:\n  2 * C \\<le> lambda * (b - a) + C", "have *: \"C \\<le> (b-a) * lambda\""], ["proof (prove)\nusing this:\n  2 * C \\<le> lambda * (b - a) + C\n\ngoal (1 subgoal):\n 1. C \\<le> (b - a) * lambda", "by (auto simp add: algebra_simps)"], ["proof (state)\nthis:\n  C \\<le> (b - a) * lambda\n\ngoal (2 subgoals):\n 1. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "define d where \"d = (\\<lambda>x. geodesic_segment_param {(c a)--(c b)} (c a) ((dist (c a) (c b) /(b-a)) * (x-a)))\""], ["proof (state)\nthis:\n  d =\n  (\\<lambda>x.\n      geodesic_segment_param {c a--c b} (c a)\n       (dist (c a) (c b) / (b - a) * (x - a)))\n\ngoal (2 subgoals):\n 1. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have dend: \"d a = c a\" \"d b = c b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d a = c a &&& d b = c b", "unfolding d_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. geodesic_segment_param {c a--c b} (c a)\n     (dist (c a) (c b) / (b - a) * (a - a)) =\n    c a &&&\n    geodesic_segment_param {c a--c b} (c a)\n     (dist (c a) (c b) / (b - a) * (b - a)) =\n    c b", "using \\<open>a < b\\<close>"], ["proof (prove)\nusing this:\n  a < b\n\ngoal (1 subgoal):\n 1. geodesic_segment_param {c a--c b} (c a)\n     (dist (c a) (c b) / (b - a) * (a - a)) =\n    c a &&&\n    geodesic_segment_param {c a--c b} (c a)\n     (dist (c a) (c b) / (b - a) * (b - a)) =\n    c b", "by auto"], ["proof (state)\nthis:\n  d a = c a\n  d b = c b\n\ngoal (2 subgoals):\n 1. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have Lip: \"(2 * lambda)-lipschitz_on {a..b} d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 * lambda)-lipschitz_on {a..b} d", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (2 * lambda)-lipschitz_on {a..b} d", "have \"(1 * (((2 * lambda)) * (1+0)))-lipschitz_on {a..b} (\\<lambda>x. geodesic_segment_param {(c a)--(c b)} (c a) ((dist (c a) (c b) /(b-a)) * (x-a)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 * (2 * lambda * (1 + 0)))-lipschitz_on {a..b}\n     (\\<lambda>x.\n         geodesic_segment_param {c a--c b} (c a)\n          (dist (c a) (c b) / (b - a) * (x - a)))", "proof (rule lipschitz_on_compose2[of _ _ \"\\<lambda>x. ((dist (c a) (c b) /(b-a)) * (x-a))\"], intro lipschitz_intros)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<bar>dist (c a) (c b) / (b - a)\\<bar> \\<le> 2 * lambda\n 2. 1-lipschitz_on\n     ((\\<lambda>x. dist (c a) (c b) / (b - a) * (x - a)) ` {a..b})\n     (geodesic_segment_param {c a--c b} (c a))", "have \"(\\<lambda>x. dist (c a) (c b) / (b-a) * (x - a)) ` {a..b} \\<subseteq> {0..dist (c a) (c b)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. dist (c a) (c b) / (b - a) * (x - a)) ` {a..b}\n    \\<subseteq> {0..dist (c a) (c b)}", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>a \\<le> xa; xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> dist (c a) (c b) * (xa - a) / (b - a)\n                         \\<le> dist (c a) (c b)", "using \\<open>a < b\\<close>"], ["proof (prove)\nusing this:\n  a < b\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>a \\<le> xa; xa \\<le> b\\<rbrakk>\n       \\<Longrightarrow> dist (c a) (c b) * (xa - a) / (b - a)\n                         \\<le> dist (c a) (c b)", "by (auto simp add: algebra_simps divide_simps intro: mult_right_mono)"], ["proof (state)\nthis:\n  (\\<lambda>x. dist (c a) (c b) / (b - a) * (x - a)) ` {a..b}\n  \\<subseteq> {0..dist (c a) (c b)}\n\ngoal (2 subgoals):\n 1. \\<bar>dist (c a) (c b) / (b - a)\\<bar> \\<le> 2 * lambda\n 2. 1-lipschitz_on\n     ((\\<lambda>x. dist (c a) (c b) / (b - a) * (x - a)) ` {a..b})\n     (geodesic_segment_param {c a--c b} (c a))", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>x. dist (c a) (c b) / (b - a) * (x - a)) ` {a..b}\n  \\<subseteq> {0..dist (c a) (c b)}\n\ngoal (2 subgoals):\n 1. \\<bar>dist (c a) (c b) / (b - a)\\<bar> \\<le> 2 * lambda\n 2. 1-lipschitz_on\n     ((\\<lambda>x. dist (c a) (c b) / (b - a) * (x - a)) ` {a..b})\n     (geodesic_segment_param {c a--c b} (c a))", "have \"1-lipschitz_on {0..dist (c a) (c b)} (geodesic_segment_param {c a--c b} (c a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1-lipschitz_on {0..dist (c a) (c b)}\n     (geodesic_segment_param {c a--c b} (c a))", "by (rule isometry_on_lipschitz, simp)"], ["proof (state)\nthis:\n  1-lipschitz_on {0..dist (c a) (c b)}\n   (geodesic_segment_param {c a--c b} (c a))\n\ngoal (2 subgoals):\n 1. \\<bar>dist (c a) (c b) / (b - a)\\<bar> \\<le> 2 * lambda\n 2. 1-lipschitz_on\n     ((\\<lambda>x. dist (c a) (c b) / (b - a) * (x - a)) ` {a..b})\n     (geodesic_segment_param {c a--c b} (c a))", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>x. dist (c a) (c b) / (b - a) * (x - a)) ` {a..b}\n  \\<subseteq> {0..dist (c a) (c b)}\n  1-lipschitz_on {0..dist (c a) (c b)}\n   (geodesic_segment_param {c a--c b} (c a))", "show \"1-lipschitz_on ((\\<lambda>x. dist (c a) (c b) / (b-a) * (x - a)) ` {a..b}) (geodesic_segment_param {c a--c b} (c a))\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. dist (c a) (c b) / (b - a) * (x - a)) ` {a..b}\n  \\<subseteq> {0..dist (c a) (c b)}\n  1-lipschitz_on {0..dist (c a) (c b)}\n   (geodesic_segment_param {c a--c b} (c a))\n\ngoal (1 subgoal):\n 1. 1-lipschitz_on\n     ((\\<lambda>x. dist (c a) (c b) / (b - a) * (x - a)) ` {a..b})\n     (geodesic_segment_param {c a--c b} (c a))", "using lipschitz_on_subset"], ["proof (prove)\nusing this:\n  (\\<lambda>x. dist (c a) (c b) / (b - a) * (x - a)) ` {a..b}\n  \\<subseteq> {0..dist (c a) (c b)}\n  1-lipschitz_on {0..dist (c a) (c b)}\n   (geodesic_segment_param {c a--c b} (c a))\n  \\<lbrakk>?L-lipschitz_on ?E ?f; ?D \\<subseteq> ?E\\<rbrakk>\n  \\<Longrightarrow> ?L-lipschitz_on ?D ?f\n\ngoal (1 subgoal):\n 1. 1-lipschitz_on\n     ((\\<lambda>x. dist (c a) (c b) / (b - a) * (x - a)) ` {a..b})\n     (geodesic_segment_param {c a--c b} (c a))", "by auto"], ["proof (state)\nthis:\n  1-lipschitz_on\n   ((\\<lambda>x. dist (c a) (c b) / (b - a) * (x - a)) ` {a..b})\n   (geodesic_segment_param {c a--c b} (c a))\n\ngoal (1 subgoal):\n 1. \\<bar>dist (c a) (c b) / (b - a)\\<bar> \\<le> 2 * lambda", "have \"dist (c a) (c b) \\<le> lambda * dist a b + C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (c a) (c b) \\<le> lambda * dist a b + C", "apply (rule quasi_isometry_onD(1)[OF assms(1)])"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<in> {a..b}\n 2. b \\<in> {a..b}", "using \\<open>a < b\\<close>"], ["proof (prove)\nusing this:\n  a < b\n\ngoal (2 subgoals):\n 1. a \\<in> {a..b}\n 2. b \\<in> {a..b}", "by auto"], ["proof (state)\nthis:\n  dist (c a) (c b) \\<le> lambda * dist a b + C\n\ngoal (1 subgoal):\n 1. \\<bar>dist (c a) (c b) / (b - a)\\<bar> \\<le> 2 * lambda", "also"], ["proof (state)\nthis:\n  dist (c a) (c b) \\<le> lambda * dist a b + C\n\ngoal (1 subgoal):\n 1. \\<bar>dist (c a) (c b) / (b - a)\\<bar> \\<le> 2 * lambda", "have \"... = lambda * (b - a) + C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda * dist a b + C = lambda * (b - a) + C", "unfolding dist_real_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda * \\<bar>a - b\\<bar> + C = lambda * (b - a) + C", "using \\<open>a < b\\<close>"], ["proof (prove)\nusing this:\n  a < b\n\ngoal (1 subgoal):\n 1. lambda * \\<bar>a - b\\<bar> + C = lambda * (b - a) + C", "by auto"], ["proof (state)\nthis:\n  lambda * dist a b + C = lambda * (b - a) + C\n\ngoal (1 subgoal):\n 1. \\<bar>dist (c a) (c b) / (b - a)\\<bar> \\<le> 2 * lambda", "also"], ["proof (state)\nthis:\n  lambda * dist a b + C = lambda * (b - a) + C\n\ngoal (1 subgoal):\n 1. \\<bar>dist (c a) (c b) / (b - a)\\<bar> \\<le> 2 * lambda", "have \"... \\<le> 2 * lambda * (b-a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda * (b - a) + C \\<le> 2 * lambda * (b - a)", "using *"], ["proof (prove)\nusing this:\n  C \\<le> (b - a) * lambda\n\ngoal (1 subgoal):\n 1. lambda * (b - a) + C \\<le> 2 * lambda * (b - a)", "by (auto simp add: algebra_simps)"], ["proof (state)\nthis:\n  lambda * (b - a) + C \\<le> 2 * lambda * (b - a)\n\ngoal (1 subgoal):\n 1. \\<bar>dist (c a) (c b) / (b - a)\\<bar> \\<le> 2 * lambda", "finally"], ["proof (chain)\npicking this:\n  dist (c a) (c b) \\<le> 2 * lambda * (b - a)", "show \"\\<bar>dist (c a) (c b) / (b - a)\\<bar> \\<le> 2 * lambda\""], ["proof (prove)\nusing this:\n  dist (c a) (c b) \\<le> 2 * lambda * (b - a)\n\ngoal (1 subgoal):\n 1. \\<bar>dist (c a) (c b) / (b - a)\\<bar> \\<le> 2 * lambda", "using \\<open>a < b\\<close>"], ["proof (prove)\nusing this:\n  dist (c a) (c b) \\<le> 2 * lambda * (b - a)\n  a < b\n\ngoal (1 subgoal):\n 1. \\<bar>dist (c a) (c b) / (b - a)\\<bar> \\<le> 2 * lambda", "by (auto simp add: divide_simps)"], ["proof (state)\nthis:\n  \\<bar>dist (c a) (c b) / (b - a)\\<bar> \\<le> 2 * lambda\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (1 * (2 * lambda * (1 + 0)))-lipschitz_on {a..b}\n   (\\<lambda>x.\n       geodesic_segment_param {c a--c b} (c a)\n        (dist (c a) (c b) / (b - a) * (x - a)))\n\ngoal (1 subgoal):\n 1. (2 * lambda)-lipschitz_on {a..b} d", "then"], ["proof (chain)\npicking this:\n  (1 * (2 * lambda * (1 + 0)))-lipschitz_on {a..b}\n   (\\<lambda>x.\n       geodesic_segment_param {c a--c b} (c a)\n        (dist (c a) (c b) / (b - a) * (x - a)))", "show ?thesis"], ["proof (prove)\nusing this:\n  (1 * (2 * lambda * (1 + 0)))-lipschitz_on {a..b}\n   (\\<lambda>x.\n       geodesic_segment_param {c a--c b} (c a)\n        (dist (c a) (c b) / (b - a) * (x - a)))\n\ngoal (1 subgoal):\n 1. (2 * lambda)-lipschitz_on {a..b} d", "unfolding d_def"], ["proof (prove)\nusing this:\n  (1 * (2 * lambda * (1 + 0)))-lipschitz_on {a..b}\n   (\\<lambda>x.\n       geodesic_segment_param {c a--c b} (c a)\n        (dist (c a) (c b) / (b - a) * (x - a)))\n\ngoal (1 subgoal):\n 1. (2 * lambda)-lipschitz_on {a..b}\n     (\\<lambda>x.\n         geodesic_segment_param {c a--c b} (c a)\n          (dist (c a) (c b) / (b - a) * (x - a)))", "by auto"], ["proof (state)\nthis:\n  (2 * lambda)-lipschitz_on {a..b} d\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (2 * lambda)-lipschitz_on {a..b} d\n\ngoal (2 subgoals):\n 1. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have dist_c_d: \"dist (c x) (d x) \\<le> 4 * C\" if H: \"x \\<in> {a..b}\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (c x) (d x) \\<le> 4 * C", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist (c x) (d x) \\<le> 4 * C", "have \"(x-a) + (b - x) \\<le> 2 * C/lambda\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x - a + (b - x) \\<le> 2 * C / lambda", "using that 3"], ["proof (prove)\nusing this:\n  x \\<in> {a..b}\n  0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda\n\ngoal (1 subgoal):\n 1. x - a + (b - x) \\<le> 2 * C / lambda", "by auto"], ["proof (state)\nthis:\n  x - a + (b - x) \\<le> 2 * C / lambda\n\ngoal (1 subgoal):\n 1. dist (c x) (d x) \\<le> 4 * C", "then"], ["proof (chain)\npicking this:\n  x - a + (b - x) \\<le> 2 * C / lambda", "consider \"x-a \\<le> C/lambda\" | \"b - x \\<le> C/lambda\""], ["proof (prove)\nusing this:\n  x - a + (b - x) \\<le> 2 * C / lambda\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x - a \\<le> C / lambda \\<Longrightarrow> thesis;\n     b - x \\<le> C / lambda \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by linarith"], ["proof (state)\nthis:\n  \\<lbrakk>x - a \\<le> C / lambda \\<Longrightarrow> ?thesis;\n   b - x \\<le> C / lambda \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. dist (c x) (d x) \\<le> 4 * C", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>x - a \\<le> C / lambda \\<Longrightarrow> ?thesis;\n   b - x \\<le> C / lambda \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "have \"\\<exists>v\\<in>{a,b}. dist x v \\<le> C/lambda\""], ["proof (prove)\nusing this:\n  \\<lbrakk>x - a \\<le> C / lambda \\<Longrightarrow> ?thesis;\n   b - x \\<le> C / lambda \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. x - a \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda\n 2. b - x \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda", "case 1"], ["proof (state)\nthis:\n  x - a \\<le> C / lambda\n\ngoal (2 subgoals):\n 1. x - a \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda\n 2. b - x \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda", "apply (rule bexI[of _ a])"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist x a \\<le> C / lambda\n 2. a \\<in> {a, b}", "using 1 H"], ["proof (prove)\nusing this:\n  x - a \\<le> C / lambda\n  x \\<in> {a..b}\n\ngoal (2 subgoals):\n 1. dist x a \\<le> C / lambda\n 2. a \\<in> {a, b}", "by (auto simp add: dist_real_def)"], ["proof (state)\nthis:\n  \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda\n\ngoal (1 subgoal):\n 1. b - x \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. b - x \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda", "case 2"], ["proof (state)\nthis:\n  b - x \\<le> C / lambda\n\ngoal (1 subgoal):\n 1. b - x \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda", "apply (rule bexI[of _ b])"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist x b \\<le> C / lambda\n 2. b \\<in> {a, b}", "using 2 H"], ["proof (prove)\nusing this:\n  b - x \\<le> C / lambda\n  x \\<in> {a..b}\n\ngoal (2 subgoals):\n 1. dist x b \\<le> C / lambda\n 2. b \\<in> {a, b}", "by (auto simp add: dist_real_def)"], ["proof (state)\nthis:\n  \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda\n\ngoal (1 subgoal):\n 1. dist (c x) (d x) \\<le> 4 * C", "then"], ["proof (chain)\npicking this:\n  \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda", "obtain v where v: \"v \\<in> {a,b}\" \"dist x v \\<le> C/lambda\""], ["proof (prove)\nusing this:\n  \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<in> {a, b}; dist x v \\<le> C / lambda\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  v \\<in> {a, b}\n  dist x v \\<le> C / lambda\n\ngoal (1 subgoal):\n 1. dist (c x) (d x) \\<le> 4 * C", "have \"dist (c x) (d x) \\<le> dist (c x) (c v) + dist (c v) (d v) + dist (d v) (d x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (c x) (d x)\n    \\<le> dist (c x) (c v) + dist (c v) (d v) + dist (d v) (d x)", "by (intro mono_intros)"], ["proof (state)\nthis:\n  dist (c x) (d x)\n  \\<le> dist (c x) (c v) + dist (c v) (d v) + dist (d v) (d x)\n\ngoal (1 subgoal):\n 1. dist (c x) (d x) \\<le> 4 * C", "also"], ["proof (state)\nthis:\n  dist (c x) (d x)\n  \\<le> dist (c x) (c v) + dist (c v) (d v) + dist (d v) (d x)\n\ngoal (1 subgoal):\n 1. dist (c x) (d x) \\<le> 4 * C", "have \"... \\<le> (lambda * dist x v + C) + 0 + ((2 * lambda) * dist v x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (c x) (c v) + dist (c v) (d v) + dist (d v) (d x)\n    \\<le> lambda * dist x v + C + 0 + 2 * lambda * dist v x", "apply (intro mono_intros quasi_isometry_onD(1)[OF assms(1)] that lipschitz_onD[OF Lip])"], ["proof (prove)\ngoal (3 subgoals):\n 1. v \\<in> {a..b}\n 2. dist (c v) (d v) \\<le> 0\n 3. v \\<in> {a..b}", "using v \\<open>a < b\\<close> dend"], ["proof (prove)\nusing this:\n  v \\<in> {a, b}\n  dist x v \\<le> C / lambda\n  a < b\n  d a = c a\n  d b = c b\n\ngoal (3 subgoals):\n 1. v \\<in> {a..b}\n 2. dist (c v) (d v) \\<le> 0\n 3. v \\<in> {a..b}", "by auto"], ["proof (state)\nthis:\n  dist (c x) (c v) + dist (c v) (d v) + dist (d v) (d x)\n  \\<le> lambda * dist x v + C + 0 + 2 * lambda * dist v x\n\ngoal (1 subgoal):\n 1. dist (c x) (d x) \\<le> 4 * C", "also"], ["proof (state)\nthis:\n  dist (c x) (c v) + dist (c v) (d v) + dist (d v) (d x)\n  \\<le> lambda * dist x v + C + 0 + 2 * lambda * dist v x\n\ngoal (1 subgoal):\n 1. dist (c x) (d x) \\<le> 4 * C", "have \"... \\<le> (lambda * (C/lambda) + C) + 0 + ((2 * lambda) * (C/lambda))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda * dist x v + C + 0 + 2 * lambda * dist v x\n    \\<le> lambda * (C / lambda) + C + 0 + 2 * lambda * (C / lambda)", "apply (intro mono_intros)"], ["proof (prove)\ngoal (4 subgoals):\n 1. dist x v \\<le> C / lambda\n 2. 0 \\<le> lambda\n 3. dist v x \\<le> C / lambda\n 4. 0 \\<le> 2 * lambda", "using C v"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n  v \\<in> {a, b}\n  dist x v \\<le> C / lambda\n\ngoal (4 subgoals):\n 1. dist x v \\<le> C / lambda\n 2. 0 \\<le> lambda\n 3. dist v x \\<le> C / lambda\n 4. 0 \\<le> 2 * lambda", "by (auto simp add: metric_space_class.dist_commute)"], ["proof (state)\nthis:\n  lambda * dist x v + C + 0 + 2 * lambda * dist v x\n  \\<le> lambda * (C / lambda) + C + 0 + 2 * lambda * (C / lambda)\n\ngoal (1 subgoal):\n 1. dist (c x) (d x) \\<le> 4 * C", "finally"], ["proof (chain)\npicking this:\n  dist (c x) (d x)\n  \\<le> lambda * (C / lambda) + C + 0 + 2 * lambda * (C / lambda)", "show ?thesis"], ["proof (prove)\nusing this:\n  dist (c x) (d x)\n  \\<le> lambda * (C / lambda) + C + 0 + 2 * lambda * (C / lambda)\n\ngoal (1 subgoal):\n 1. dist (c x) (d x) \\<le> 4 * C", "using C"], ["proof (prove)\nusing this:\n  dist (c x) (d x)\n  \\<le> lambda * (C / lambda) + C + 0 + 2 * lambda * (C / lambda)\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. dist (c x) (d x) \\<le> 4 * C", "by (auto simp add: algebra_simps divide_simps)"], ["proof (state)\nthis:\n  dist (c x) (d x) \\<le> 4 * C\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x \\<in> {a..b} \\<Longrightarrow> dist (c ?x) (d ?x) \\<le> 4 * C\n\ngoal (2 subgoals):\n 1. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "text \\<open>A similar argument shows that the Hausdorff distance between the images is bounded by $2C$.\\<close>"], ["proof (state)\nthis:\n  ?x \\<in> {a..b} \\<Longrightarrow> dist (c ?x) (d ?x) \\<le> 4 * C\n\ngoal (2 subgoals):\n 1. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have \"hausdorff_distance (c`{a..b}) (d`{a..b}) \\<le> 2 * C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "proof (rule hausdorff_distanceI2)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C\n 3. 0 \\<le> 2 * C", "show \"0 \\<le> 2 * C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> 2 * C", "using C"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. 0 \\<le> 2 * C", "by auto"], ["proof (state)\nthis:\n  0 \\<le> 2 * C\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "fix z"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "assume \"z \\<in> c`{a..b}\""], ["proof (state)\nthis:\n  z \\<in> c ` {a..b}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  z \\<in> c ` {a..b}", "obtain x where x: \"x \\<in> {a..b}\" \"z = c x\""], ["proof (prove)\nusing this:\n  z \\<in> c ` {a..b}\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> {a..b}; z = c x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> {a..b}\n  z = c x\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "have \"(x-a) + (b - x) \\<le> 2 * C/lambda\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x - a + (b - x) \\<le> 2 * C / lambda", "using x 3"], ["proof (prove)\nusing this:\n  x \\<in> {a..b}\n  z = c x\n  0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda\n\ngoal (1 subgoal):\n 1. x - a + (b - x) \\<le> 2 * C / lambda", "by auto"], ["proof (state)\nthis:\n  x - a + (b - x) \\<le> 2 * C / lambda\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  x - a + (b - x) \\<le> 2 * C / lambda", "consider \"x-a \\<le> C/lambda\" | \"b - x \\<le> C/lambda\""], ["proof (prove)\nusing this:\n  x - a + (b - x) \\<le> 2 * C / lambda\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x - a \\<le> C / lambda \\<Longrightarrow> thesis;\n     b - x \\<le> C / lambda \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by linarith"], ["proof (state)\nthis:\n  \\<lbrakk>x - a \\<le> C / lambda \\<Longrightarrow> ?thesis;\n   b - x \\<le> C / lambda \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>x - a \\<le> C / lambda \\<Longrightarrow> ?thesis;\n   b - x \\<le> C / lambda \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "have \"\\<exists>v\\<in>{a,b}. dist x v \\<le> C/lambda\""], ["proof (prove)\nusing this:\n  \\<lbrakk>x - a \\<le> C / lambda \\<Longrightarrow> ?thesis;\n   b - x \\<le> C / lambda \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. x - a \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda\n 2. b - x \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda", "case 1"], ["proof (state)\nthis:\n  x - a \\<le> C / lambda\n\ngoal (2 subgoals):\n 1. x - a \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda\n 2. b - x \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda", "apply (rule bexI[of _ a])"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist x a \\<le> C / lambda\n 2. a \\<in> {a, b}", "using 1 x"], ["proof (prove)\nusing this:\n  x - a \\<le> C / lambda\n  x \\<in> {a..b}\n  z = c x\n\ngoal (2 subgoals):\n 1. dist x a \\<le> C / lambda\n 2. a \\<in> {a, b}", "by (auto simp add: dist_real_def)"], ["proof (state)\nthis:\n  \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda\n\ngoal (1 subgoal):\n 1. b - x \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. b - x \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda", "case 2"], ["proof (state)\nthis:\n  b - x \\<le> C / lambda\n\ngoal (1 subgoal):\n 1. b - x \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda", "apply (rule bexI[of _ b])"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist x b \\<le> C / lambda\n 2. b \\<in> {a, b}", "using 2 x"], ["proof (prove)\nusing this:\n  b - x \\<le> C / lambda\n  x \\<in> {a..b}\n  z = c x\n\ngoal (2 subgoals):\n 1. dist x b \\<le> C / lambda\n 2. b \\<in> {a, b}", "by (auto simp add: dist_real_def)"], ["proof (state)\nthis:\n  \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda", "obtain v where v: \"v \\<in> {a,b}\" \"dist x v \\<le> C/lambda\""], ["proof (prove)\nusing this:\n  \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<in> {a, b}; dist x v \\<le> C / lambda\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  v \\<in> {a, b}\n  dist x v \\<le> C / lambda\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "have \"dist z (d v) = dist (c x) (c v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist z (d v) = dist (c x) (c v)", "unfolding x(2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (c x) (d v) = dist (c x) (c v)", "using v dend"], ["proof (prove)\nusing this:\n  v \\<in> {a, b}\n  dist x v \\<le> C / lambda\n  d a = c a\n  d b = c b\n\ngoal (1 subgoal):\n 1. dist (c x) (d v) = dist (c x) (c v)", "by auto"], ["proof (state)\nthis:\n  dist z (d v) = dist (c x) (c v)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "also"], ["proof (state)\nthis:\n  dist z (d v) = dist (c x) (c v)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "have \"... \\<le> lambda * dist x v + C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (c x) (c v) \\<le> lambda * dist x v + C", "apply (rule quasi_isometry_onD(1)[OF assms(1)])"], ["proof (prove)\ngoal (2 subgoals):\n 1. x \\<in> {a..b}\n 2. v \\<in> {a..b}", "using v(1) x(1)"], ["proof (prove)\nusing this:\n  v \\<in> {a, b}\n  x \\<in> {a..b}\n\ngoal (2 subgoals):\n 1. x \\<in> {a..b}\n 2. v \\<in> {a..b}", "by auto"], ["proof (state)\nthis:\n  dist (c x) (c v) \\<le> lambda * dist x v + C\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "also"], ["proof (state)\nthis:\n  dist (c x) (c v) \\<le> lambda * dist x v + C\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "have \"... \\<le> lambda * (C/lambda) + C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda * dist x v + C \\<le> lambda * (C / lambda) + C", "apply (intro mono_intros)"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist x v \\<le> C / lambda\n 2. 0 \\<le> lambda", "using C v(2)"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n  dist x v \\<le> C / lambda\n\ngoal (2 subgoals):\n 1. dist x v \\<le> C / lambda\n 2. 0 \\<le> lambda", "by auto"], ["proof (state)\nthis:\n  lambda * dist x v + C \\<le> lambda * (C / lambda) + C\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "also"], ["proof (state)\nthis:\n  lambda * dist x v + C \\<le> lambda * (C / lambda) + C\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "have \"... = 2 * C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda * (C / lambda) + C = 2 * C", "using C"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. lambda * (C / lambda) + C = 2 * C", "by (simp add: divide_simps)"], ["proof (state)\nthis:\n  lambda * (C / lambda) + C = 2 * C\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "finally"], ["proof (chain)\npicking this:\n  dist z (d v) \\<le> 2 * C", "have *: \"dist z (d v) \\<le> 2 * C\""], ["proof (prove)\nusing this:\n  dist z (d v) \\<le> 2 * C\n\ngoal (1 subgoal):\n 1. dist z (d v) \\<le> 2 * C", "by simp"], ["proof (state)\nthis:\n  dist z (d v) \\<le> 2 * C\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "show \"\\<exists>y\\<in>d ` {a..b}. dist z y \\<le> 2 * C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>d ` {a..b}. dist z y \\<le> 2 * C", "apply (rule bexI[of _ \"d v\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist z (d v) \\<le> 2 * C\n 2. d v \\<in> d ` {a..b}", "using * v(1) \\<open>a < b\\<close>"], ["proof (prove)\nusing this:\n  dist z (d v) \\<le> 2 * C\n  v \\<in> {a, b}\n  a < b\n\ngoal (2 subgoals):\n 1. dist z (d v) \\<le> 2 * C\n 2. d v \\<in> d ` {a..b}", "by auto"], ["proof (state)\nthis:\n  \\<exists>y\\<in>d ` {a..b}. dist z y \\<le> 2 * C\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "assume \"z \\<in> d`{a..b}\""], ["proof (state)\nthis:\n  z \\<in> d ` {a..b}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  z \\<in> d ` {a..b}", "obtain x where x: \"x \\<in> {a..b}\" \"z = d x\""], ["proof (prove)\nusing this:\n  z \\<in> d ` {a..b}\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> {a..b}; z = d x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> {a..b}\n  z = d x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "have \"(x-a) + (b - x) \\<le> 2 * C/lambda\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x - a + (b - x) \\<le> 2 * C / lambda", "using x 3"], ["proof (prove)\nusing this:\n  x \\<in> {a..b}\n  z = d x\n  0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda\n\ngoal (1 subgoal):\n 1. x - a + (b - x) \\<le> 2 * C / lambda", "by auto"], ["proof (state)\nthis:\n  x - a + (b - x) \\<le> 2 * C / lambda\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  x - a + (b - x) \\<le> 2 * C / lambda", "consider \"x-a \\<le> C/lambda\" | \"b - x \\<le> C/lambda\""], ["proof (prove)\nusing this:\n  x - a + (b - x) \\<le> 2 * C / lambda\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x - a \\<le> C / lambda \\<Longrightarrow> thesis;\n     b - x \\<le> C / lambda \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by linarith"], ["proof (state)\nthis:\n  \\<lbrakk>x - a \\<le> C / lambda \\<Longrightarrow> ?thesis;\n   b - x \\<le> C / lambda \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>x - a \\<le> C / lambda \\<Longrightarrow> ?thesis;\n   b - x \\<le> C / lambda \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "have \"\\<exists>v\\<in>{a,b}. dist x v \\<le> C/lambda\""], ["proof (prove)\nusing this:\n  \\<lbrakk>x - a \\<le> C / lambda \\<Longrightarrow> ?thesis;\n   b - x \\<le> C / lambda \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. x - a \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda\n 2. b - x \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda", "case 1"], ["proof (state)\nthis:\n  x - a \\<le> C / lambda\n\ngoal (2 subgoals):\n 1. x - a \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda\n 2. b - x \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda", "apply (rule bexI[of _ a])"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist x a \\<le> C / lambda\n 2. a \\<in> {a, b}", "using 1 x"], ["proof (prove)\nusing this:\n  x - a \\<le> C / lambda\n  x \\<in> {a..b}\n  z = d x\n\ngoal (2 subgoals):\n 1. dist x a \\<le> C / lambda\n 2. a \\<in> {a, b}", "by (auto simp add: dist_real_def)"], ["proof (state)\nthis:\n  \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda\n\ngoal (1 subgoal):\n 1. b - x \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. b - x \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda", "case 2"], ["proof (state)\nthis:\n  b - x \\<le> C / lambda\n\ngoal (1 subgoal):\n 1. b - x \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda", "apply (rule bexI[of _ b])"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist x b \\<le> C / lambda\n 2. b \\<in> {a, b}", "using 2 x"], ["proof (prove)\nusing this:\n  b - x \\<le> C / lambda\n  x \\<in> {a..b}\n  z = d x\n\ngoal (2 subgoals):\n 1. dist x b \\<le> C / lambda\n 2. b \\<in> {a, b}", "by (auto simp add: dist_real_def)"], ["proof (state)\nthis:\n  \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda", "obtain v where v: \"v \\<in> {a,b}\" \"dist x v \\<le> C/lambda\""], ["proof (prove)\nusing this:\n  \\<exists>v\\<in>{a, b}. dist x v \\<le> C / lambda\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<in> {a, b}; dist x v \\<le> C / lambda\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  v \\<in> {a, b}\n  dist x v \\<le> C / lambda\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "have \"dist z (c v) = dist (d x) (d v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist z (c v) = dist (d x) (d v)", "unfolding x(2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (d x) (c v) = dist (d x) (d v)", "using v dend"], ["proof (prove)\nusing this:\n  v \\<in> {a, b}\n  dist x v \\<le> C / lambda\n  d a = c a\n  d b = c b\n\ngoal (1 subgoal):\n 1. dist (d x) (c v) = dist (d x) (d v)", "by auto"], ["proof (state)\nthis:\n  dist z (c v) = dist (d x) (d v)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "also"], ["proof (state)\nthis:\n  dist z (c v) = dist (d x) (d v)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "have \"... \\<le> 2 * lambda * dist x v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (d x) (d v) \\<le> 2 * lambda * dist x v", "apply (rule lipschitz_onD(1)[OF Lip])"], ["proof (prove)\ngoal (2 subgoals):\n 1. x \\<in> {a..b}\n 2. v \\<in> {a..b}", "using v(1) x(1)"], ["proof (prove)\nusing this:\n  v \\<in> {a, b}\n  x \\<in> {a..b}\n\ngoal (2 subgoals):\n 1. x \\<in> {a..b}\n 2. v \\<in> {a..b}", "by auto"], ["proof (state)\nthis:\n  dist (d x) (d v) \\<le> 2 * lambda * dist x v\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "also"], ["proof (state)\nthis:\n  dist (d x) (d v) \\<le> 2 * lambda * dist x v\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "have \"... \\<le> 2 * lambda * (C/lambda)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * lambda * dist x v \\<le> 2 * lambda * (C / lambda)", "apply (intro mono_intros)"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist x v \\<le> C / lambda\n 2. 0 \\<le> 2 * lambda", "using C v(2)"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n  dist x v \\<le> C / lambda\n\ngoal (2 subgoals):\n 1. dist x v \\<le> C / lambda\n 2. 0 \\<le> 2 * lambda", "by auto"], ["proof (state)\nthis:\n  2 * lambda * dist x v \\<le> 2 * lambda * (C / lambda)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "also"], ["proof (state)\nthis:\n  2 * lambda * dist x v \\<le> 2 * lambda * (C / lambda)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "have \"... = 2 * C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * lambda * (C / lambda) = 2 * C", "using C"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. 2 * lambda * (C / lambda) = 2 * C", "by (simp add: divide_simps)"], ["proof (state)\nthis:\n  2 * lambda * (C / lambda) = 2 * C\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "finally"], ["proof (chain)\npicking this:\n  dist z (c v) \\<le> 2 * C", "have *: \"dist z (c v) \\<le> 2 * C\""], ["proof (prove)\nusing this:\n  dist z (c v) \\<le> 2 * C\n\ngoal (1 subgoal):\n 1. dist z (c v) \\<le> 2 * C", "by simp"], ["proof (state)\nthis:\n  dist z (c v) \\<le> 2 * C\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "show \"\\<exists>y\\<in>c`{a..b}. dist z y \\<le> 2 * C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>c ` {a..b}. dist z y \\<le> 2 * C", "apply (rule bexI[of _ \"c v\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist z (c v) \\<le> 2 * C\n 2. c v \\<in> c ` {a..b}", "using * v(1) \\<open>a < b\\<close>"], ["proof (prove)\nusing this:\n  dist z (c v) \\<le> 2 * C\n  v \\<in> {a, b}\n  a < b\n\ngoal (2 subgoals):\n 1. dist z (c v) \\<le> 2 * C\n 2. c v \\<in> c ` {a..b}", "by auto"], ["proof (state)\nthis:\n  \\<exists>y\\<in>c ` {a..b}. dist z y \\<le> 2 * C\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n\ngoal (2 subgoals):\n 1. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have \"lambda (4 * C)-quasi_isometry_on {a..b} d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda (4 * C) -quasi_isometry_on {a..b} d", "proof"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {a..b}; y \\<in> {a..b}\\<rbrakk>\n       \\<Longrightarrow> dist (d x) (d y) \\<le> lambda * dist x y + 4 * C\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> {a..b}; y \\<in> {a..b}\\<rbrakk>\n       \\<Longrightarrow> 1 / lambda * dist x y - 4 * C\n                         \\<le> dist (d x) (d y)\n 3. 1 \\<le> lambda\n 4. 0 \\<le> 4 * C", "show \"1 \\<le> lambda\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> lambda", "using C"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. 1 \\<le> lambda", "by auto"], ["proof (state)\nthis:\n  1 \\<le> lambda\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {a..b}; y \\<in> {a..b}\\<rbrakk>\n       \\<Longrightarrow> dist (d x) (d y) \\<le> lambda * dist x y + 4 * C\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> {a..b}; y \\<in> {a..b}\\<rbrakk>\n       \\<Longrightarrow> 1 / lambda * dist x y - 4 * C\n                         \\<le> dist (d x) (d y)\n 3. 0 \\<le> 4 * C", "show \"0 \\<le> 4 * C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> 4 * C", "using C"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. 0 \\<le> 4 * C", "by auto"], ["proof (state)\nthis:\n  0 \\<le> 4 * C\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {a..b}; y \\<in> {a..b}\\<rbrakk>\n       \\<Longrightarrow> dist (d x) (d y) \\<le> lambda * dist x y + 4 * C\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> {a..b}; y \\<in> {a..b}\\<rbrakk>\n       \\<Longrightarrow> 1 / lambda * dist x y - 4 * C\n                         \\<le> dist (d x) (d y)", "show \"dist (d x) (d y) \\<le> lambda * dist x y + 4 * C\" if \"x \\<in> {a..b}\" \"y \\<in> {a..b}\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "have \"dist (d x) (d y) \\<le> 2 * lambda * dist x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> 2 * lambda * dist x y", "apply (rule lipschitz_onD[OF Lip])"], ["proof (prove)\ngoal (2 subgoals):\n 1. x \\<in> {a..b}\n 2. y \\<in> {a..b}", "using that"], ["proof (prove)\nusing this:\n  x \\<in> {a..b}\n  y \\<in> {a..b}\n\ngoal (2 subgoals):\n 1. x \\<in> {a..b}\n 2. y \\<in> {a..b}", "by auto"], ["proof (state)\nthis:\n  dist (d x) (d y) \\<le> 2 * lambda * dist x y\n\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "also"], ["proof (state)\nthis:\n  dist (d x) (d y) \\<le> 2 * lambda * dist x y\n\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "have \"... = lambda * dist x y + lambda * dist x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * lambda * dist x y = lambda * dist x y + lambda * dist x y", "by auto"], ["proof (state)\nthis:\n  2 * lambda * dist x y = lambda * dist x y + lambda * dist x y\n\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "also"], ["proof (state)\nthis:\n  2 * lambda * dist x y = lambda * dist x y + lambda * dist x y\n\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "have \"... \\<le> lambda * dist x y + lambda * (2 * C/lambda)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda * dist x y + lambda * dist x y\n    \\<le> lambda * dist x y + lambda * (2 * C / lambda)", "apply (intro mono_intros)"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist x y \\<le> 2 * C / lambda\n 2. 0 \\<le> lambda", "using 3 that C"], ["proof (prove)\nusing this:\n  0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda\n  x \\<in> {a..b}\n  y \\<in> {a..b}\n  0 < C\n  1 \\<le> lambda\n\ngoal (2 subgoals):\n 1. dist x y \\<le> 2 * C / lambda\n 2. 0 \\<le> lambda", "unfolding dist_real_def"], ["proof (prove)\nusing this:\n  0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda\n  x \\<in> {a..b}\n  y \\<in> {a..b}\n  0 < C\n  1 \\<le> lambda\n\ngoal (2 subgoals):\n 1. \\<bar>x - y\\<bar> \\<le> 2 * C / lambda\n 2. 0 \\<le> lambda", "by auto"], ["proof (state)\nthis:\n  lambda * dist x y + lambda * dist x y\n  \\<le> lambda * dist x y + lambda * (2 * C / lambda)\n\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "also"], ["proof (state)\nthis:\n  lambda * dist x y + lambda * dist x y\n  \\<le> lambda * dist x y + lambda * (2 * C / lambda)\n\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "have \"... = lambda * dist x y + 2 * C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda * dist x y + lambda * (2 * C / lambda) =\n    lambda * dist x y + 2 * C", "using C"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. lambda * dist x y + lambda * (2 * C / lambda) =\n    lambda * dist x y + 2 * C", "by (simp add: algebra_simps divide_simps)"], ["proof (state)\nthis:\n  lambda * dist x y + lambda * (2 * C / lambda) = lambda * dist x y + 2 * C\n\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "finally"], ["proof (chain)\npicking this:\n  dist (d x) (d y) \\<le> lambda * dist x y + 2 * C", "show ?thesis"], ["proof (prove)\nusing this:\n  dist (d x) (d y) \\<le> lambda * dist x y + 2 * C\n\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "using C"], ["proof (prove)\nusing this:\n  dist (d x) (d y) \\<le> lambda * dist x y + 2 * C\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "by auto"], ["proof (state)\nthis:\n  dist (d x) (d y) \\<le> lambda * dist x y + 4 * C\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> {a..b}; ?y \\<in> {a..b}\\<rbrakk>\n  \\<Longrightarrow> dist (d ?x) (d ?y) \\<le> lambda * dist ?x ?y + 4 * C\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {a..b}; y \\<in> {a..b}\\<rbrakk>\n       \\<Longrightarrow> 1 / lambda * dist x y - 4 * C\n                         \\<le> dist (d x) (d y)", "show \"1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\" if \"x \\<in> {a..b}\" \"y \\<in> {a..b}\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"1/lambda * dist x y - 4 * C \\<le> lambda * dist x y - 2 * C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> lambda * dist x y - 2 * C", "apply (intro mono_intros)"], ["proof (prove)\ngoal (3 subgoals):\n 1. 0 \\<le> dist x y\n 2. 2 \\<le> 4\n 3. 0 \\<le> C", "using C"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n\ngoal (3 subgoals):\n 1. 0 \\<le> dist x y\n 2. 2 \\<le> 4\n 3. 0 \\<le> C", "by auto"], ["proof (state)\nthis:\n  1 / lambda * dist x y - 4 * C \\<le> lambda * dist x y - 2 * C\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  1 / lambda * dist x y - 4 * C \\<le> lambda * dist x y - 2 * C\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... \\<le> lambda * (2 * C/lambda) - 2 * C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda * dist x y - 2 * C \\<le> lambda * (2 * C / lambda) - 2 * C", "apply (intro mono_intros)"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist x y \\<le> 2 * C / lambda\n 2. 0 \\<le> lambda", "using that 3 C"], ["proof (prove)\nusing this:\n  x \\<in> {a..b}\n  y \\<in> {a..b}\n  0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda\n  0 < C\n  1 \\<le> lambda\n\ngoal (2 subgoals):\n 1. dist x y \\<le> 2 * C / lambda\n 2. 0 \\<le> lambda", "unfolding dist_real_def"], ["proof (prove)\nusing this:\n  x \\<in> {a..b}\n  y \\<in> {a..b}\n  0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda\n  0 < C\n  1 \\<le> lambda\n\ngoal (2 subgoals):\n 1. \\<bar>x - y\\<bar> \\<le> 2 * C / lambda\n 2. 0 \\<le> lambda", "by auto"], ["proof (state)\nthis:\n  lambda * dist x y - 2 * C \\<le> lambda * (2 * C / lambda) - 2 * C\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  lambda * dist x y - 2 * C \\<le> lambda * (2 * C / lambda) - 2 * C\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda * (2 * C / lambda) - 2 * C = 0", "using C"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. lambda * (2 * C / lambda) - 2 * C = 0", "by (auto simp add: algebra_simps divide_simps)"], ["proof (state)\nthis:\n  lambda * (2 * C / lambda) - 2 * C = 0\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  lambda * (2 * C / lambda) - 2 * C = 0\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... \\<le> dist (d x) (d y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> dist (d x) (d y)", "by auto"], ["proof (state)\nthis:\n  0 \\<le> dist (d x) (d y)\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "finally"], ["proof (chain)\npicking this:\n  1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "show ?thesis"], ["proof (prove)\nusing this:\n  1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "by simp"], ["proof (state)\nthis:\n  1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> {a..b}; ?y \\<in> {a..b}\\<rbrakk>\n  \\<Longrightarrow> 1 / lambda * dist ?x ?y - 4 * C \\<le> dist (d ?x) (d ?y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lambda (4 * C) -quasi_isometry_on {a..b} d\n\ngoal (2 subgoals):\n 1. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  lambda (4 * C) -quasi_isometry_on {a..b} d", "have \"continuous_on {a..b} d \\<and> d a = c a \\<and> d b = c b\n          \\<and> lambda (4 * C)-quasi_isometry_on {a..b} d\n          \\<and> (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 *C)\n          \\<and> (2*lambda)-lipschitz_on {a..b} d\n          \\<and> hausdorff_distance (c`{a..b}) (d`{a..b}) \\<le> 2 * C\""], ["proof (prove)\nusing this:\n  lambda (4 * C) -quasi_isometry_on {a..b} d\n\ngoal (1 subgoal):\n 1. continuous_on {a..b} d \\<and>\n    d a = c a \\<and>\n    d b = c b \\<and>\n    lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n    (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n    (2 * lambda)-lipschitz_on {a..b} d \\<and>\n    hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "using dist_c_d \\<open>d a = c a\\<close> \\<open>d b = c b\\<close> \\<open>(2*lambda)-lipschitz_on {a..b} d\\<close>\n            \\<open>hausdorff_distance (c`{a..b}) (d`{a..b}) \\<le> 2 * C\\<close> lipschitz_on_continuous_on"], ["proof (prove)\nusing this:\n  lambda (4 * C) -quasi_isometry_on {a..b} d\n  ?x \\<in> {a..b} \\<Longrightarrow> dist (c ?x) (d ?x) \\<le> 4 * C\n  d a = c a\n  d b = c b\n  (2 * lambda)-lipschitz_on {a..b} d\n  hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n  ?L-lipschitz_on ?X ?f \\<Longrightarrow> continuous_on ?X ?f\n\ngoal (1 subgoal):\n 1. continuous_on {a..b} d \\<and>\n    d a = c a \\<and>\n    d b = c b \\<and>\n    lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n    (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n    (2 * lambda)-lipschitz_on {a..b} d \\<and>\n    hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "by auto"], ["proof (state)\nthis:\n  continuous_on {a..b} d \\<and>\n  d a = c a \\<and>\n  d b = c b \\<and>\n  lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n  (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n  (2 * lambda)-lipschitz_on {a..b} d \\<and>\n  hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n\ngoal (2 subgoals):\n 1. 0 < C \\<and> a < b \\<and> b \\<le> a + 2 * C / lambda \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n 2. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  continuous_on {a..b} d \\<and>\n  d a = c a \\<and>\n  d b = c b \\<and>\n  lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n  (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n  (2 * lambda)-lipschitz_on {a..b} d \\<and>\n  hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "show ?thesis"], ["proof (prove)\nusing this:\n  continuous_on {a..b} d \\<and>\n  d a = c a \\<and>\n  d b = c b \\<and>\n  lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n  (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n  (2 * lambda)-lipschitz_on {a..b} d \\<and>\n  hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n\ngoal (1 subgoal):\n 1. \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "by auto"], ["proof (state)\nthis:\n  \\<exists>d.\n     continuous_on {a..b} d \\<and>\n     d a = c a \\<and>\n     d b = c b \\<and>\n     (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n     lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n     (2 * lambda)-lipschitz_on {a..b} d \\<and>\n     hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "text \\<open>Now, for the only nontrivial case, we use geodesic interpolation between the points\n    $a$, $a + C/\\lambda$, $\\cdots$, $a+N\\cdot C/\\lambda$, $b'$, $b$ where $N$ is chosen so that\n    the distance between $a+N C/\\lambda$ and $b$ belongs to $[2C/\\lambda, 3C/\\lambda)$, and\n    $b'$ is the middle of this interval. This gives a decomposition into intervals of length\n    at most $3/2\\cdot C/\\lambda$.\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "case 4"], ["proof (state)\nthis:\n  0 < C \\<and> a + 2 * C / lambda < b\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  0 < C \\<and> a + 2 * C / lambda < b", "have C: \"C > 0\" \"lambda \\<ge> 1\""], ["proof (prove)\nusing this:\n  0 < C \\<and> a + 2 * C / lambda < b\n\ngoal (1 subgoal):\n 1. 0 < C &&& 1 \\<le> lambda", "using quasi_isometry_onD[OF assms(1)]"], ["proof (prove)\nusing this:\n  0 < C \\<and> a + 2 * C / lambda < b\n  \\<lbrakk>?x \\<in> {a..b}; ?y \\<in> {a..b}\\<rbrakk>\n  \\<Longrightarrow> dist (c ?x) (c ?y) \\<le> lambda * dist ?x ?y + C\n  \\<lbrakk>?x \\<in> {a..b}; ?y \\<in> {a..b}\\<rbrakk>\n  \\<Longrightarrow> 1 / lambda * dist ?x ?y - C \\<le> dist (c ?x) (c ?y)\n  1 \\<le> lambda\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. 0 < C &&& 1 \\<le> lambda", "by auto"], ["proof (state)\nthis:\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have \"a < b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a < b", "using 4 C"], ["proof (prove)\nusing this:\n  0 < C \\<and> a + 2 * C / lambda < b\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. a < b", "by (smt divide_pos_pos)"], ["proof (state)\nthis:\n  a < b\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have [mono_intros]: \"1/lambda \\<le> lambda\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda \\<le> lambda", "using C"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. 1 / lambda \\<le> lambda", "by (simp add: divide_simps mult_ge1_powers(1))"], ["proof (state)\nthis:\n  1 / lambda \\<le> lambda\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "define N where \"N = floor((b-a)/(C/lambda)) - 2\""], ["proof (state)\nthis:\n  N = \\<lfloor>(b - a) / (C / lambda)\\<rfloor> - 2\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have N: \"N \\<le> (b-a)/(C/lambda)-2\" \"(b-a)/(C/lambda) \\<le> N + (3::real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int N \\<le> (b - a) / (C / lambda) - 2 &&&\n    (b - a) / (C / lambda) \\<le> real_of_int N + 3", "unfolding N_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int (\\<lfloor>(b - a) / (C / lambda)\\<rfloor> - 2)\n    \\<le> (b - a) / (C / lambda) - 2 &&&\n    (b - a) / (C / lambda)\n    \\<le> real_of_int (\\<lfloor>(b - a) / (C / lambda)\\<rfloor> - 2) + 3", "by linarith+"], ["proof (state)\nthis:\n  real_of_int N \\<le> (b - a) / (C / lambda) - 2\n  (b - a) / (C / lambda) \\<le> real_of_int N + 3\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have \"2 < (b-a)/(C/lambda)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 < (b - a) / (C / lambda)", "using C 4"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n  0 < C \\<and> a + 2 * C / lambda < b\n\ngoal (1 subgoal):\n 1. 2 < (b - a) / (C / lambda)", "by (auto simp add: divide_simps algebra_simps)"], ["proof (state)\nthis:\n  2 < (b - a) / (C / lambda)\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  2 < (b - a) / (C / lambda)", "have N0 : \"0 \\<le> N\""], ["proof (prove)\nusing this:\n  2 < (b - a) / (C / lambda)\n\ngoal (1 subgoal):\n 1. 0 \\<le> N", "unfolding N_def"], ["proof (prove)\nusing this:\n  2 < (b - a) / (C / lambda)\n\ngoal (1 subgoal):\n 1. 0 \\<le> \\<lfloor>(b - a) / (C / lambda)\\<rfloor> - 2", "by auto"], ["proof (state)\nthis:\n  0 \\<le> N\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "define p where \"p = (\\<lambda>t::int. a + (C/lambda) * t)\""], ["proof (state)\nthis:\n  p = (\\<lambda>x. a + C / lambda * real_of_int x)\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have pmono: \"p i \\<le> p j\" if \"i \\<le> j\" for i j"], ["proof (prove)\ngoal (1 subgoal):\n 1. p i \\<le> p j", "unfolding p_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. a + C / lambda * real_of_int i \\<le> a + C / lambda * real_of_int j", "using that C"], ["proof (prove)\nusing this:\n  i \\<le> j\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. a + C / lambda * real_of_int i \\<le> a + C / lambda * real_of_int j", "by (auto simp add: algebra_simps divide_simps)"], ["proof (state)\nthis:\n  ?i \\<le> ?j \\<Longrightarrow> p ?i \\<le> p ?j\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have pmono': \"p i < p j\" if \"i < j\" for i j"], ["proof (prove)\ngoal (1 subgoal):\n 1. p i < p j", "unfolding p_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. a + C / lambda * real_of_int i < a + C / lambda * real_of_int j", "using that C"], ["proof (prove)\nusing this:\n  i < j\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. a + C / lambda * real_of_int i < a + C / lambda * real_of_int j", "by (auto simp add: algebra_simps divide_simps)"], ["proof (state)\nthis:\n  ?i < ?j \\<Longrightarrow> p ?i < p ?j\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have \"p (N+1) \\<le> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p (N + 1) \\<le> b", "unfolding p_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. a + C / lambda * real_of_int (N + 1) \\<le> b", "using C N"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n  real_of_int N \\<le> (b - a) / (C / lambda) - 2\n  (b - a) / (C / lambda) \\<le> real_of_int N + 3\n\ngoal (1 subgoal):\n 1. a + C / lambda * real_of_int (N + 1) \\<le> b", "by (auto simp add: algebra_simps divide_simps)"], ["proof (state)\nthis:\n  p (N + 1) \\<le> b\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  p (N + 1) \\<le> b", "have pb: \"p i \\<le> b\" if \"i \\<in> {0..N}\" for i"], ["proof (prove)\nusing this:\n  p (N + 1) \\<le> b\n\ngoal (1 subgoal):\n 1. p i \\<le> b", "using that pmono"], ["proof (prove)\nusing this:\n  p (N + 1) \\<le> b\n  i \\<in> {0..N}\n  ?i \\<le> ?j \\<Longrightarrow> p ?i \\<le> p ?j\n\ngoal (1 subgoal):\n 1. p i \\<le> b", "by (meson atLeastAtMost_iff linear not_le order_trans zle_add1_eq_le)"], ["proof (state)\nthis:\n  ?i \\<in> {0..N} \\<Longrightarrow> p ?i \\<le> b\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have bpN: \"b - p N \\<in> {2 * C/lambda .. 3 * C/lambda}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b - p N \\<in> {2 * C / lambda..3 * C / lambda}", "unfolding p_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. b - (a + C / lambda * real_of_int N)\n    \\<in> {2 * C / lambda..3 * C / lambda}", "using C N"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n  real_of_int N \\<le> (b - a) / (C / lambda) - 2\n  (b - a) / (C / lambda) \\<le> real_of_int N + 3\n\ngoal (1 subgoal):\n 1. b - (a + C / lambda * real_of_int N)\n    \\<in> {2 * C / lambda..3 * C / lambda}", "apply (auto simp add: divide_simps)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < C; 1 \\<le> lambda;\n     real_of_int N * C \\<le> (b - a) * lambda - 2 * C;\n     (b - a) * lambda \\<le> (real_of_int N + 3) * C\\<rbrakk>\n    \\<Longrightarrow> 2 * C\n                      \\<le> b * lambda - (a * lambda + C * real_of_int N)\n 2. \\<lbrakk>0 < C; 1 \\<le> lambda;\n     real_of_int N * C \\<le> (b - a) * lambda - 2 * C;\n     (b - a) * lambda \\<le> (real_of_int N + 3) * C\\<rbrakk>\n    \\<Longrightarrow> b * lambda - (a * lambda + C * real_of_int N)\n                      \\<le> 3 * C", "by (auto simp add: algebra_simps)"], ["proof (state)\nthis:\n  b - p N \\<in> {2 * C / lambda..3 * C / lambda}\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have \"p N < b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p N < b", "using pmono'[of N \"N+1\"] \\<open>p (N+1) \\<le> b\\<close>"], ["proof (prove)\nusing this:\n  N < N + 1 \\<Longrightarrow> p N < p (N + 1)\n  p (N + 1) \\<le> b\n\ngoal (1 subgoal):\n 1. p N < b", "by auto"], ["proof (state)\nthis:\n  p N < b\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "define b' where \"b' = (b + p N)/2\""], ["proof (state)\nthis:\n  b' = (b + p N) / 2\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have b': \"p N < b'\" \"b' < b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p N < b' &&& b' < b", "using \\<open>p N < b\\<close>"], ["proof (prove)\nusing this:\n  p N < b\n\ngoal (1 subgoal):\n 1. p N < b' &&& b' < b", "unfolding b'_def"], ["proof (prove)\nusing this:\n  p N < b\n\ngoal (1 subgoal):\n 1. p N < (b + p N) / 2 &&& (b + p N) / 2 < b", "by auto"], ["proof (state)\nthis:\n  p N < b'\n  b' < b\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have pb': \"p i \\<le> b'\" if \"i \\<in> {0..N}\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. p i \\<le> b'", "using pmono[of i N] b' that"], ["proof (prove)\nusing this:\n  i \\<le> N \\<Longrightarrow> p i \\<le> p N\n  p N < b'\n  b' < b\n  i \\<in> {0..N}\n\ngoal (1 subgoal):\n 1. p i \\<le> b'", "by auto"], ["proof (state)\nthis:\n  ?i \\<in> {0..N} \\<Longrightarrow> p ?i \\<le> b'\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "text \\<open>Introduce the set $A$ along which one will discretize.\\<close>"], ["proof (state)\nthis:\n  ?i \\<in> {0..N} \\<Longrightarrow> p ?i \\<le> b'\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "define A where \"A = p`{0..N} \\<union> {b', b}\""], ["proof (state)\nthis:\n  A = p ` {0..N} \\<union> {b', b}\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have \"finite A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite A", "unfolding A_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (p ` {0..N} \\<union> {b', b})", "by auto"], ["proof (state)\nthis:\n  finite A\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have \"b \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<in> A", "unfolding A_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<in> p ` {0..N} \\<union> {b', b}", "by auto"], ["proof (state)\nthis:\n  b \\<in> A\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have \"p 0 \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p 0 \\<in> A", "unfolding A_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. p 0 \\<in> p ` {0..N} \\<union> {b', b}", "using \\<open>0 \\<le> N\\<close>"], ["proof (prove)\nusing this:\n  0 \\<le> N\n\ngoal (1 subgoal):\n 1. p 0 \\<in> p ` {0..N} \\<union> {b', b}", "by auto"], ["proof (state)\nthis:\n  p 0 \\<in> A\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "moreover"], ["proof (state)\nthis:\n  p 0 \\<in> A\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have pa: \"p 0 = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p 0 = a", "unfolding p_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. a + C / lambda * real_of_int 0 = a", "by auto"], ["proof (state)\nthis:\n  p 0 = a\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "ultimately"], ["proof (chain)\npicking this:\n  p 0 \\<in> A\n  p 0 = a", "have \"a \\<in> A\""], ["proof (prove)\nusing this:\n  p 0 \\<in> A\n  p 0 = a\n\ngoal (1 subgoal):\n 1. a \\<in> A", "by auto"], ["proof (state)\nthis:\n  a \\<in> A\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have \"A \\<subseteq> {a..b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> {a..b}", "unfolding A_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. p ` {0..N} \\<union> {b', b} \\<subseteq> {a..b}", "using \\<open>a < b\\<close> b' pa pb pmono N0"], ["proof (prove)\nusing this:\n  a < b\n  p N < b'\n  b' < b\n  p 0 = a\n  ?i \\<in> {0..N} \\<Longrightarrow> p ?i \\<le> b\n  ?i \\<le> ?j \\<Longrightarrow> p ?i \\<le> p ?j\n  0 \\<le> N\n\ngoal (1 subgoal):\n 1. p ` {0..N} \\<union> {b', b} \\<subseteq> {a..b}", "by fastforce"], ["proof (state)\nthis:\n  A \\<subseteq> {a..b}\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  A \\<subseteq> {a..b}", "have \"b' \\<in> {a..<b}\""], ["proof (prove)\nusing this:\n  A \\<subseteq> {a..b}\n\ngoal (1 subgoal):\n 1. b' \\<in> {a..<b}", "unfolding A_def"], ["proof (prove)\nusing this:\n  p ` {0..N} \\<union> {b', b} \\<subseteq> {a..b}\n\ngoal (1 subgoal):\n 1. b' \\<in> {a..<b}", "using \\<open>b' < b\\<close>"], ["proof (prove)\nusing this:\n  p ` {0..N} \\<union> {b', b} \\<subseteq> {a..b}\n  b' < b\n\ngoal (1 subgoal):\n 1. b' \\<in> {a..<b}", "by auto"], ["proof (state)\nthis:\n  b' \\<in> {a..<b}\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have A : \"finite A\" \"A \\<subseteq> {a..b}\" \"a \\<in> A\" \"b \\<in> A\" \"a < b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (finite A &&& A \\<subseteq> {a..b}) &&&\n    a \\<in> A &&& b \\<in> A &&& a < b", "by fact+"], ["proof (state)\nthis:\n  finite A\n  A \\<subseteq> {a..b}\n  a \\<in> A\n  b \\<in> A\n  a < b\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have nx: \"next_in A x = x + C/lambda\" if \"x \\<in> A\" \"x \\<noteq> b\" \"x \\<noteq> b'\" \"x \\<noteq> p N\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. next_in A x = x + C / lambda", "proof (rule next_inI[OF A])"], ["proof (state)\ngoal (4 subgoals):\n 1. x \\<in> {a..<b}\n 2. x + C / lambda \\<in> A\n 3. x < x + C / lambda\n 4. {x<..<x + C / lambda} \\<inter> A = {}", "show \"x \\<in> {a..<b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {a..<b}", "using \\<open>x \\<in> A\\<close> \\<open>A \\<subseteq> {a..b}\\<close> \\<open>x \\<noteq> b\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> A\n  A \\<subseteq> {a..b}\n  x \\<noteq> b\n\ngoal (1 subgoal):\n 1. x \\<in> {a..<b}", "by auto"], ["proof (state)\nthis:\n  x \\<in> {a..<b}\n\ngoal (3 subgoals):\n 1. x + C / lambda \\<in> A\n 2. x < x + C / lambda\n 3. {x<..<x + C / lambda} \\<inter> A = {}", "obtain i where i: \"x = p i\" \"i \\<in> {0..N}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>x = p i; i \\<in> {0..N}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>x \\<in> A\\<close> \\<open>x \\<noteq> b\\<close> \\<open>x \\<noteq> b'\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> A\n  x \\<noteq> b\n  x \\<noteq> b'\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>x = p i; i \\<in> {0..N}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding A_def"], ["proof (prove)\nusing this:\n  x \\<in> p ` {0..N} \\<union> {b', b}\n  x \\<noteq> b\n  x \\<noteq> b'\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>x = p i; i \\<in> {0..N}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x = p i\n  i \\<in> {0..N}\n\ngoal (3 subgoals):\n 1. x + C / lambda \\<in> A\n 2. x < x + C / lambda\n 3. {x<..<x + C / lambda} \\<inter> A = {}", "have *: \"p (i+1) = x + C/lambda\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p (i + 1) = x + C / lambda", "unfolding i(1) p_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. a + C / lambda * real_of_int (i + 1) =\n    a + C / lambda * real_of_int i + C / lambda", "by (auto simp add: algebra_simps)"], ["proof (state)\nthis:\n  p (i + 1) = x + C / lambda\n\ngoal (3 subgoals):\n 1. x + C / lambda \\<in> A\n 2. x < x + C / lambda\n 3. {x<..<x + C / lambda} \\<inter> A = {}", "have \"i \\<noteq> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<noteq> N", "using that i"], ["proof (prove)\nusing this:\n  x \\<in> A\n  x \\<noteq> b\n  x \\<noteq> b'\n  x \\<noteq> p N\n  x = p i\n  i \\<in> {0..N}\n\ngoal (1 subgoal):\n 1. i \\<noteq> N", "by auto"], ["proof (state)\nthis:\n  i \\<noteq> N\n\ngoal (3 subgoals):\n 1. x + C / lambda \\<in> A\n 2. x < x + C / lambda\n 3. {x<..<x + C / lambda} \\<inter> A = {}", "then"], ["proof (chain)\npicking this:\n  i \\<noteq> N", "have \"i + 1 \\<in> {0..N}\""], ["proof (prove)\nusing this:\n  i \\<noteq> N\n\ngoal (1 subgoal):\n 1. i + 1 \\<in> {0..N}", "using \\<open>i \\<in> {0..N}\\<close>"], ["proof (prove)\nusing this:\n  i \\<noteq> N\n  i \\<in> {0..N}\n\ngoal (1 subgoal):\n 1. i + 1 \\<in> {0..N}", "by auto"], ["proof (state)\nthis:\n  i + 1 \\<in> {0..N}\n\ngoal (3 subgoals):\n 1. x + C / lambda \\<in> A\n 2. x < x + C / lambda\n 3. {x<..<x + C / lambda} \\<inter> A = {}", "then"], ["proof (chain)\npicking this:\n  i + 1 \\<in> {0..N}", "have \"p (i+1) \\<in> A\""], ["proof (prove)\nusing this:\n  i + 1 \\<in> {0..N}\n\ngoal (1 subgoal):\n 1. p (i + 1) \\<in> A", "unfolding A_def"], ["proof (prove)\nusing this:\n  i + 1 \\<in> {0..N}\n\ngoal (1 subgoal):\n 1. p (i + 1) \\<in> p ` {0..N} \\<union> {b', b}", "by fastforce"], ["proof (state)\nthis:\n  p (i + 1) \\<in> A\n\ngoal (3 subgoals):\n 1. x + C / lambda \\<in> A\n 2. x < x + C / lambda\n 3. {x<..<x + C / lambda} \\<inter> A = {}", "then"], ["proof (chain)\npicking this:\n  p (i + 1) \\<in> A", "show \"x + C/lambda \\<in> A\""], ["proof (prove)\nusing this:\n  p (i + 1) \\<in> A\n\ngoal (1 subgoal):\n 1. x + C / lambda \\<in> A", "unfolding *"], ["proof (prove)\nusing this:\n  x + C / lambda \\<in> A\n\ngoal (1 subgoal):\n 1. x + C / lambda \\<in> A", "by auto"], ["proof (state)\nthis:\n  x + C / lambda \\<in> A\n\ngoal (2 subgoals):\n 1. x < x + C / lambda\n 2. {x<..<x + C / lambda} \\<inter> A = {}", "show \"x < x + C / lambda\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x < x + C / lambda", "using C"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. x < x + C / lambda", "by auto"], ["proof (state)\nthis:\n  x < x + C / lambda\n\ngoal (1 subgoal):\n 1. {x<..<x + C / lambda} \\<inter> A = {}", "show \"{x<..<x + C / lambda} \\<inter> A = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x<..<x + C / lambda} \\<inter> A = {}", "proof (auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>xa \\<in> A; x < xa; xa < x + C / lambda\\<rbrakk>\n       \\<Longrightarrow> False", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>xa \\<in> A; x < xa; xa < x + C / lambda\\<rbrakk>\n       \\<Longrightarrow> False", "assume y: \"y \\<in> A\" \"x < y\" \"y < x + C/lambda\""], ["proof (state)\nthis:\n  y \\<in> A\n  x < y\n  y < x + C / lambda\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>xa \\<in> A; x < xa; xa < x + C / lambda\\<rbrakk>\n       \\<Longrightarrow> False", "consider \"y = b\" | \"y = b'\" | \"\\<exists>j\\<le>i. y = p j\" | \"\\<exists>j>i. y = p j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>y = b \\<Longrightarrow> thesis;\n     y = b' \\<Longrightarrow> thesis;\n     \\<exists>j\\<le>i. y = p j \\<Longrightarrow> thesis;\n     \\<exists>j>i. y = p j \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using \\<open>y \\<in> A\\<close> not_less"], ["proof (prove)\nusing this:\n  y \\<in> A\n  (\\<not> ?x < ?y) = (?y \\<le> ?x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y = b \\<Longrightarrow> thesis;\n     y = b' \\<Longrightarrow> thesis;\n     \\<exists>j\\<le>i. y = p j \\<Longrightarrow> thesis;\n     \\<exists>j>i. y = p j \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "unfolding A_def"], ["proof (prove)\nusing this:\n  y \\<in> p ` {0..N} \\<union> {b', b}\n  (\\<not> ?x < ?y) = (?y \\<le> ?x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y = b \\<Longrightarrow> thesis;\n     y = b' \\<Longrightarrow> thesis;\n     \\<exists>j\\<le>i. y = p j \\<Longrightarrow> thesis;\n     \\<exists>j>i. y = p j \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>y = b \\<Longrightarrow> ?thesis;\n   y = b' \\<Longrightarrow> ?thesis;\n   \\<exists>j\\<le>i. y = p j \\<Longrightarrow> ?thesis;\n   \\<exists>j>i. y = p j \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>xa \\<in> A; x < xa; xa < x + C / lambda\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>y = b \\<Longrightarrow> ?thesis;\n   y = b' \\<Longrightarrow> ?thesis;\n   \\<exists>j\\<le>i. y = p j \\<Longrightarrow> ?thesis;\n   \\<exists>j>i. y = p j \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show False"], ["proof (prove)\nusing this:\n  \\<lbrakk>y = b \\<Longrightarrow> ?thesis;\n   y = b' \\<Longrightarrow> ?thesis;\n   \\<exists>j\\<le>i. y = p j \\<Longrightarrow> ?thesis;\n   \\<exists>j>i. y = p j \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. False", "proof (cases)"], ["proof (state)\ngoal (4 subgoals):\n 1. y = b \\<Longrightarrow> False\n 2. y = b' \\<Longrightarrow> False\n 3. \\<exists>j\\<le>i. y = p j \\<Longrightarrow> False\n 4. \\<exists>j>i. y = p j \\<Longrightarrow> False", "case 1"], ["proof (state)\nthis:\n  y = b\n\ngoal (4 subgoals):\n 1. y = b \\<Longrightarrow> False\n 2. y = b' \\<Longrightarrow> False\n 3. \\<exists>j\\<le>i. y = p j \\<Longrightarrow> False\n 4. \\<exists>j>i. y = p j \\<Longrightarrow> False", "have \"x + C/lambda \\<le> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x + C / lambda \\<le> b", "unfolding *[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. p (i + 1) \\<le> b", "using \\<open>i + 1 \\<in> {0..N}\\<close> pb"], ["proof (prove)\nusing this:\n  i + 1 \\<in> {0..N}\n  ?i \\<in> {0..N} \\<Longrightarrow> p ?i \\<le> b\n\ngoal (1 subgoal):\n 1. p (i + 1) \\<le> b", "by auto"], ["proof (state)\nthis:\n  x + C / lambda \\<le> b\n\ngoal (4 subgoals):\n 1. y = b \\<Longrightarrow> False\n 2. y = b' \\<Longrightarrow> False\n 3. \\<exists>j\\<le>i. y = p j \\<Longrightarrow> False\n 4. \\<exists>j>i. y = p j \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  x + C / lambda \\<le> b", "show False"], ["proof (prove)\nusing this:\n  x + C / lambda \\<le> b\n\ngoal (1 subgoal):\n 1. False", "using y(3)"], ["proof (prove)\nusing this:\n  x + C / lambda \\<le> b\n  y < x + C / lambda\n\ngoal (1 subgoal):\n 1. False", "unfolding 1 i(1)"], ["proof (prove)\nusing this:\n  p i + C / lambda \\<le> b\n  b < p i + C / lambda\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (3 subgoals):\n 1. y = b' \\<Longrightarrow> False\n 2. \\<exists>j\\<le>i. y = p j \\<Longrightarrow> False\n 3. \\<exists>j>i. y = p j \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. y = b' \\<Longrightarrow> False\n 2. \\<exists>j\\<le>i. y = p j \\<Longrightarrow> False\n 3. \\<exists>j>i. y = p j \\<Longrightarrow> False", "case 2"], ["proof (state)\nthis:\n  y = b'\n\ngoal (3 subgoals):\n 1. y = b' \\<Longrightarrow> False\n 2. \\<exists>j\\<le>i. y = p j \\<Longrightarrow> False\n 3. \\<exists>j>i. y = p j \\<Longrightarrow> False", "have \"x + C/lambda \\<le> b'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x + C / lambda \\<le> b'", "unfolding *[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. p (i + 1) \\<le> b'", "using \\<open>i + 1 \\<in> {0..N}\\<close> pb'"], ["proof (prove)\nusing this:\n  i + 1 \\<in> {0..N}\n  ?i \\<in> {0..N} \\<Longrightarrow> p ?i \\<le> b'\n\ngoal (1 subgoal):\n 1. p (i + 1) \\<le> b'", "by auto"], ["proof (state)\nthis:\n  x + C / lambda \\<le> b'\n\ngoal (3 subgoals):\n 1. y = b' \\<Longrightarrow> False\n 2. \\<exists>j\\<le>i. y = p j \\<Longrightarrow> False\n 3. \\<exists>j>i. y = p j \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  x + C / lambda \\<le> b'", "show False"], ["proof (prove)\nusing this:\n  x + C / lambda \\<le> b'\n\ngoal (1 subgoal):\n 1. False", "using y(3)"], ["proof (prove)\nusing this:\n  x + C / lambda \\<le> b'\n  y < x + C / lambda\n\ngoal (1 subgoal):\n 1. False", "unfolding 2 i(1)"], ["proof (prove)\nusing this:\n  p i + C / lambda \\<le> b'\n  b' < p i + C / lambda\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. \\<exists>j\\<le>i. y = p j \\<Longrightarrow> False\n 2. \\<exists>j>i. y = p j \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>j\\<le>i. y = p j \\<Longrightarrow> False\n 2. \\<exists>j>i. y = p j \\<Longrightarrow> False", "case 3"], ["proof (state)\nthis:\n  \\<exists>j\\<le>i. y = p j\n\ngoal (2 subgoals):\n 1. \\<exists>j\\<le>i. y = p j \\<Longrightarrow> False\n 2. \\<exists>j>i. y = p j \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>j\\<le>i. y = p j", "obtain j where j: \"j \\<le> i\" \"y = p j\""], ["proof (prove)\nusing this:\n  \\<exists>j\\<le>i. y = p j\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        \\<lbrakk>j \\<le> i; y = p j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  j \\<le> i\n  y = p j\n\ngoal (2 subgoals):\n 1. \\<exists>j\\<le>i. y = p j \\<Longrightarrow> False\n 2. \\<exists>j>i. y = p j \\<Longrightarrow> False", "have \"y \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<le> x", "unfolding j(2) i(1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. p j \\<le> p i", "using pmono[OF \\<open>j \\<le> i\\<close>]"], ["proof (prove)\nusing this:\n  p j \\<le> p i\n\ngoal (1 subgoal):\n 1. p j \\<le> p i", "by simp"], ["proof (state)\nthis:\n  y \\<le> x\n\ngoal (2 subgoals):\n 1. \\<exists>j\\<le>i. y = p j \\<Longrightarrow> False\n 2. \\<exists>j>i. y = p j \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  y \\<le> x", "show False"], ["proof (prove)\nusing this:\n  y \\<le> x\n\ngoal (1 subgoal):\n 1. False", "using \\<open>x < y\\<close>"], ["proof (prove)\nusing this:\n  y \\<le> x\n  x < y\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>j>i. y = p j \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>j>i. y = p j \\<Longrightarrow> False", "case 4"], ["proof (state)\nthis:\n  \\<exists>j>i. y = p j\n\ngoal (1 subgoal):\n 1. \\<exists>j>i. y = p j \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>j>i. y = p j", "obtain j where j: \"j > i\" \"y = p j\""], ["proof (prove)\nusing this:\n  \\<exists>j>i. y = p j\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        \\<lbrakk>i < j; y = p j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  i < j\n  y = p j\n\ngoal (1 subgoal):\n 1. \\<exists>j>i. y = p j \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  i < j\n  y = p j", "have \"i+1 \\<le> j\""], ["proof (prove)\nusing this:\n  i < j\n  y = p j\n\ngoal (1 subgoal):\n 1. i + 1 \\<le> j", "by auto"], ["proof (state)\nthis:\n  i + 1 \\<le> j\n\ngoal (1 subgoal):\n 1. \\<exists>j>i. y = p j \\<Longrightarrow> False", "have \"x + C/lambda \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x + C / lambda \\<le> y", "unfolding j(2) *[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. p (i + 1) \\<le> p j", "using pmono[OF \\<open>i+1 \\<le> j\\<close>]"], ["proof (prove)\nusing this:\n  p (i + 1) \\<le> p j\n\ngoal (1 subgoal):\n 1. p (i + 1) \\<le> p j", "by auto"], ["proof (state)\nthis:\n  x + C / lambda \\<le> y\n\ngoal (1 subgoal):\n 1. \\<exists>j>i. y = p j \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  x + C / lambda \\<le> y", "show False"], ["proof (prove)\nusing this:\n  x + C / lambda \\<le> y\n\ngoal (1 subgoal):\n 1. False", "using \\<open>y < x + C/lambda\\<close>"], ["proof (prove)\nusing this:\n  x + C / lambda \\<le> y\n  y < x + C / lambda\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {x<..<x + C / lambda} \\<inter> A = {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> A; ?x \\<noteq> b; ?x \\<noteq> b';\n   ?x \\<noteq> p N\\<rbrakk>\n  \\<Longrightarrow> next_in A ?x = ?x + C / lambda\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have npN: \"next_in A (p N) = b'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next_in A (p N) = b'", "proof (rule next_inI[OF A])"], ["proof (state)\ngoal (4 subgoals):\n 1. p N \\<in> {a..<b}\n 2. b' \\<in> A\n 3. p N < b'\n 4. {p N<..<b'} \\<inter> A = {}", "show \"p N \\<in> {a..<b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p N \\<in> {a..<b}", "using pa pmono \\<open>0 \\<le> N\\<close> \\<open>p N < b\\<close>"], ["proof (prove)\nusing this:\n  p 0 = a\n  ?i \\<le> ?j \\<Longrightarrow> p ?i \\<le> p ?j\n  0 \\<le> N\n  p N < b\n\ngoal (1 subgoal):\n 1. p N \\<in> {a..<b}", "by auto"], ["proof (state)\nthis:\n  p N \\<in> {a..<b}\n\ngoal (3 subgoals):\n 1. b' \\<in> A\n 2. p N < b'\n 3. {p N<..<b'} \\<inter> A = {}", "show \"p N < b'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p N < b'", "by fact"], ["proof (state)\nthis:\n  p N < b'\n\ngoal (2 subgoals):\n 1. b' \\<in> A\n 2. {p N<..<b'} \\<inter> A = {}", "show \"b' \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b' \\<in> A", "unfolding A_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. b' \\<in> p ` {0..N} \\<union> {b', b}", "by auto"], ["proof (state)\nthis:\n  b' \\<in> A\n\ngoal (1 subgoal):\n 1. {p N<..<b'} \\<inter> A = {}", "show \"{p N<..<b'} \\<inter> A = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {p N<..<b'} \\<inter> A = {}", "unfolding A_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {p N<..<b'} \\<inter> (p ` {0..N} \\<union> {b', b}) = {}", "using pmono b'"], ["proof (prove)\nusing this:\n  ?i \\<le> ?j \\<Longrightarrow> p ?i \\<le> p ?j\n  p N < b'\n  b' < b\n\ngoal (1 subgoal):\n 1. {p N<..<b'} \\<inter> (p ` {0..N} \\<union> {b', b}) = {}", "by force"], ["proof (state)\nthis:\n  {p N<..<b'} \\<inter> A = {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  next_in A (p N) = b'\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have nb': \"next_in A (b') = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next_in A b' = b", "proof (rule next_inI[OF A])"], ["proof (state)\ngoal (4 subgoals):\n 1. b' \\<in> {a..<b}\n 2. b \\<in> A\n 3. b' < b\n 4. {b'<..<b} \\<inter> A = {}", "show \"b' \\<in> {a..<b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b' \\<in> {a..<b}", "using A_def A \\<open>b' < b\\<close>"], ["proof (prove)\nusing this:\n  A = p ` {0..N} \\<union> {b', b}\n  finite A\n  A \\<subseteq> {a..b}\n  a \\<in> A\n  b \\<in> A\n  a < b\n  b' < b\n\ngoal (1 subgoal):\n 1. b' \\<in> {a..<b}", "by auto"], ["proof (state)\nthis:\n  b' \\<in> {a..<b}\n\ngoal (3 subgoals):\n 1. b \\<in> A\n 2. b' < b\n 3. {b'<..<b} \\<inter> A = {}", "show \"b' < b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b' < b", "by fact"], ["proof (state)\nthis:\n  b' < b\n\ngoal (2 subgoals):\n 1. b \\<in> A\n 2. {b'<..<b} \\<inter> A = {}", "show \"b \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<in> A", "by fact"], ["proof (state)\nthis:\n  b \\<in> A\n\ngoal (1 subgoal):\n 1. {b'<..<b} \\<inter> A = {}", "show \"{b'<..<b} \\<inter> A = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {b'<..<b} \\<inter> A = {}", "unfolding A_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {b'<..<b} \\<inter> (p ` {0..N} \\<union> {b', b}) = {}", "using pmono b'"], ["proof (prove)\nusing this:\n  ?i \\<le> ?j \\<Longrightarrow> p ?i \\<le> p ?j\n  p N < b'\n  b' < b\n\ngoal (1 subgoal):\n 1. {b'<..<b} \\<inter> (p ` {0..N} \\<union> {b', b}) = {}", "by force"], ["proof (state)\nthis:\n  {b'<..<b} \\<inter> A = {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  next_in A b' = b\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have gap: \"next_in A x - x \\<in> {C/lambda.. 3/2 * C/lambda}\" if \"x \\<in> A - {b}\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. next_in A x - x \\<in> {C / lambda..3 / 2 * C / lambda}", "proof (cases \"x = p N \\<or> x = b'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = p N \\<or> x = b' \\<Longrightarrow>\n    next_in A x - x \\<in> {C / lambda..3 / 2 * C / lambda}\n 2. \\<not> (x = p N \\<or> x = b') \\<Longrightarrow>\n    next_in A x - x \\<in> {C / lambda..3 / 2 * C / lambda}", "case True"], ["proof (state)\nthis:\n  x = p N \\<or> x = b'\n\ngoal (2 subgoals):\n 1. x = p N \\<or> x = b' \\<Longrightarrow>\n    next_in A x - x \\<in> {C / lambda..3 / 2 * C / lambda}\n 2. \\<not> (x = p N \\<or> x = b') \\<Longrightarrow>\n    next_in A x - x \\<in> {C / lambda..3 / 2 * C / lambda}", "then"], ["proof (chain)\npicking this:\n  x = p N \\<or> x = b'", "show ?thesis"], ["proof (prove)\nusing this:\n  x = p N \\<or> x = b'\n\ngoal (1 subgoal):\n 1. next_in A x - x \\<in> {C / lambda..3 / 2 * C / lambda}", "using npN nb' bpN b'_def"], ["proof (prove)\nusing this:\n  x = p N \\<or> x = b'\n  next_in A (p N) = b'\n  next_in A b' = b\n  b - p N \\<in> {2 * C / lambda..3 * C / lambda}\n  b' = (b + p N) / 2\n\ngoal (1 subgoal):\n 1. next_in A x - x \\<in> {C / lambda..3 / 2 * C / lambda}", "by force"], ["proof (state)\nthis:\n  next_in A x - x \\<in> {C / lambda..3 / 2 * C / lambda}\n\ngoal (1 subgoal):\n 1. \\<not> (x = p N \\<or> x = b') \\<Longrightarrow>\n    next_in A x - x \\<in> {C / lambda..3 / 2 * C / lambda}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (x = p N \\<or> x = b') \\<Longrightarrow>\n    next_in A x - x \\<in> {C / lambda..3 / 2 * C / lambda}", "case False"], ["proof (state)\nthis:\n  \\<not> (x = p N \\<or> x = b')\n\ngoal (1 subgoal):\n 1. \\<not> (x = p N \\<or> x = b') \\<Longrightarrow>\n    next_in A x - x \\<in> {C / lambda..3 / 2 * C / lambda}", "have *: \"next_in A x = x + C/lambda\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next_in A x = x + C / lambda", "apply (rule nx)"], ["proof (prove)\ngoal (4 subgoals):\n 1. x \\<in> A\n 2. x \\<noteq> b\n 3. x \\<noteq> b'\n 4. x \\<noteq> p N", "using that False"], ["proof (prove)\nusing this:\n  x \\<in> A - {b}\n  \\<not> (x = p N \\<or> x = b')\n\ngoal (4 subgoals):\n 1. x \\<in> A\n 2. x \\<noteq> b\n 3. x \\<noteq> b'\n 4. x \\<noteq> p N", "by auto"], ["proof (state)\nthis:\n  next_in A x = x + C / lambda\n\ngoal (1 subgoal):\n 1. \\<not> (x = p N \\<or> x = b') \\<Longrightarrow>\n    next_in A x - x \\<in> {C / lambda..3 / 2 * C / lambda}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. next_in A x - x \\<in> {C / lambda..3 / 2 * C / lambda}", "unfolding *"], ["proof (prove)\ngoal (1 subgoal):\n 1. x + C / lambda - x \\<in> {C / lambda..3 / 2 * C / lambda}", "using C"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. x + C / lambda - x \\<in> {C / lambda..3 / 2 * C / lambda}", "by (auto simp add: algebra_simps divide_simps)"], ["proof (state)\nthis:\n  next_in A x - x \\<in> {C / lambda..3 / 2 * C / lambda}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x \\<in> A - {b} \\<Longrightarrow>\n  next_in A ?x - ?x \\<in> {C / lambda..3 / 2 * C / lambda}\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "text \\<open>We can now define the function $d$, by geodesic interpolation between points in $A$.\\<close>"], ["proof (state)\nthis:\n  ?x \\<in> A - {b} \\<Longrightarrow>\n  next_in A ?x - ?x \\<in> {C / lambda..3 / 2 * C / lambda}\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "define d where \"d x = (if x \\<in> A then c x\n        else geodesic_segment_param {c (prev_in A x) -- c (next_in A x)} (c (prev_in A x))\n            ((x - prev_in A x)/(next_in A x - prev_in A x) * dist (c(prev_in A x)) (c(next_in A x))))\" for x"], ["proof (state)\nthis:\n  d ?x =\n  (if ?x \\<in> A then c ?x\n   else geodesic_segment_param {c (prev_in A ?x)--c (next_in A ?x)}\n         (c (prev_in A ?x))\n         ((?x - prev_in A ?x) / (next_in A ?x - prev_in A ?x) *\n          dist (c (prev_in A ?x)) (c (next_in A ?x))))\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have \"d a = c a\" \"d b = c b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d a = c a &&& d b = c b", "unfolding d_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if a \\<in> A then c a\n     else geodesic_segment_param {c (prev_in A a)--c (next_in A a)}\n           (c (prev_in A a))\n           ((a - prev_in A a) / (next_in A a - prev_in A a) *\n            dist (c (prev_in A a)) (c (next_in A a)))) =\n    c a &&&\n    (if b \\<in> A then c b\n     else geodesic_segment_param {c (prev_in A b)--c (next_in A b)}\n           (c (prev_in A b))\n           ((b - prev_in A b) / (next_in A b - prev_in A b) *\n            dist (c (prev_in A b)) (c (next_in A b)))) =\n    c b", "using \\<open>a \\<in> A\\<close> \\<open>b \\<in> A\\<close>"], ["proof (prove)\nusing this:\n  a \\<in> A\n  b \\<in> A\n\ngoal (1 subgoal):\n 1. (if a \\<in> A then c a\n     else geodesic_segment_param {c (prev_in A a)--c (next_in A a)}\n           (c (prev_in A a))\n           ((a - prev_in A a) / (next_in A a - prev_in A a) *\n            dist (c (prev_in A a)) (c (next_in A a)))) =\n    c a &&&\n    (if b \\<in> A then c b\n     else geodesic_segment_param {c (prev_in A b)--c (next_in A b)}\n           (c (prev_in A b))\n           ((b - prev_in A b) / (next_in A b - prev_in A b) *\n            dist (c (prev_in A b)) (c (next_in A b)))) =\n    c b", "by auto"], ["proof (state)\nthis:\n  d a = c a\n  d b = c b\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "text \\<open>To prove the Lipschitz continuity, we argue that $d$ is Lipschitz on finitely many intervals,\n    that cover the interval $[a,b]$, the intervals between points in $A$.\n    There is a formula for $d$ on them (the nontrivial point is that the above formulas for $d$\n    match at the boundaries).\\<close>"], ["proof (state)\nthis:\n  d a = c a\n  d b = c b\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have *: \"d x = geodesic_segment_param {(c u)--(c v)} (c u) ((dist (c u) (c v) /(v-u)) * (x-u))\"\n      if \"u \\<in> A - {b}\" \"v = next_in A u\" \"x \\<in> {u..v}\" for x u v"], ["proof (prove)\ngoal (1 subgoal):\n 1. d x =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (x - u))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. d x =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (x - u))", "have \"u \\<in> {a..<b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> {a..<b}", "using that \\<open>A \\<subseteq> {a..b}\\<close>"], ["proof (prove)\nusing this:\n  u \\<in> A - {b}\n  v = next_in A u\n  x \\<in> {u..v}\n  A \\<subseteq> {a..b}\n\ngoal (1 subgoal):\n 1. u \\<in> {a..<b}", "by fastforce"], ["proof (state)\nthis:\n  u \\<in> {a..<b}\n\ngoal (1 subgoal):\n 1. d x =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (x - u))", "have H: \"u \\<in> A\" \"v \\<in> A\" \"u < v\" \"A \\<inter> {u<..<v} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u \\<in> A &&& v \\<in> A) &&& u < v &&& A \\<inter> {u<..<v} = {}", "using that next_in_basics[OF A \\<open>u \\<in> {a..<b}\\<close>]"], ["proof (prove)\nusing this:\n  u \\<in> A - {b}\n  v = next_in A u\n  x \\<in> {u..v}\n  next_in A u \\<in> A\n  u < next_in A u\n  A \\<inter> {u<..<next_in A u} = {}\n\ngoal (1 subgoal):\n 1. (u \\<in> A &&& v \\<in> A) &&& u < v &&& A \\<inter> {u<..<v} = {}", "by auto"], ["proof (state)\nthis:\n  u \\<in> A\n  v \\<in> A\n  u < v\n  A \\<inter> {u<..<v} = {}\n\ngoal (1 subgoal):\n 1. d x =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (x - u))", "consider \"x = u\" | \"x = v\" | \"x \\<in> {u<..<v}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x = u \\<Longrightarrow> thesis; x = v \\<Longrightarrow> thesis;\n     x \\<in> {u<..<v} \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using \\<open>x \\<in> {u..v}\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> {u..v}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x = u \\<Longrightarrow> thesis; x = v \\<Longrightarrow> thesis;\n     x \\<in> {u<..<v} \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by fastforce"], ["proof (state)\nthis:\n  \\<lbrakk>x = u \\<Longrightarrow> ?thesis; x = v \\<Longrightarrow> ?thesis;\n   x \\<in> {u<..<v} \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. d x =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (x - u))", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>x = u \\<Longrightarrow> ?thesis; x = v \\<Longrightarrow> ?thesis;\n   x \\<in> {u<..<v} \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>x = u \\<Longrightarrow> ?thesis; x = v \\<Longrightarrow> ?thesis;\n   x \\<in> {u<..<v} \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. d x =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (x - u))", "proof (cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. x = u \\<Longrightarrow>\n    d x =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (x - u))\n 2. x = v \\<Longrightarrow>\n    d x =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (x - u))\n 3. x \\<in> {u<..<v} \\<Longrightarrow>\n    d x =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (x - u))", "case 1"], ["proof (state)\nthis:\n  x = u\n\ngoal (3 subgoals):\n 1. x = u \\<Longrightarrow>\n    d x =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (x - u))\n 2. x = v \\<Longrightarrow>\n    d x =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (x - u))\n 3. x \\<in> {u<..<v} \\<Longrightarrow>\n    d x =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (x - u))", "then"], ["proof (chain)\npicking this:\n  x = u", "have \"d x = c u\""], ["proof (prove)\nusing this:\n  x = u\n\ngoal (1 subgoal):\n 1. d x = c u", "unfolding d_def"], ["proof (prove)\nusing this:\n  x = u\n\ngoal (1 subgoal):\n 1. (if x \\<in> A then c x\n     else geodesic_segment_param {c (prev_in A x)--c (next_in A x)}\n           (c (prev_in A x))\n           ((x - prev_in A x) / (next_in A x - prev_in A x) *\n            dist (c (prev_in A x)) (c (next_in A x)))) =\n    c u", "using \\<open>u \\<in> A- {b}\\<close> \\<open>A \\<subseteq> {a..b}\\<close>"], ["proof (prove)\nusing this:\n  x = u\n  u \\<in> A - {b}\n  A \\<subseteq> {a..b}\n\ngoal (1 subgoal):\n 1. (if x \\<in> A then c x\n     else geodesic_segment_param {c (prev_in A x)--c (next_in A x)}\n           (c (prev_in A x))\n           ((x - prev_in A x) / (next_in A x - prev_in A x) *\n            dist (c (prev_in A x)) (c (next_in A x)))) =\n    c u", "by auto"], ["proof (state)\nthis:\n  d x = c u\n\ngoal (3 subgoals):\n 1. x = u \\<Longrightarrow>\n    d x =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (x - u))\n 2. x = v \\<Longrightarrow>\n    d x =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (x - u))\n 3. x \\<in> {u<..<v} \\<Longrightarrow>\n    d x =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (x - u))", "then"], ["proof (chain)\npicking this:\n  d x = c u", "show ?thesis"], ["proof (prove)\nusing this:\n  d x = c u\n\ngoal (1 subgoal):\n 1. d x =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (x - u))", "unfolding 1"], ["proof (prove)\nusing this:\n  d u = c u\n\ngoal (1 subgoal):\n 1. d u =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (u - u))", "by auto"], ["proof (state)\nthis:\n  d x =\n  geodesic_segment_param {c u--c v} (c u)\n   (dist (c u) (c v) / (v - u) * (x - u))\n\ngoal (2 subgoals):\n 1. x = v \\<Longrightarrow>\n    d x =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (x - u))\n 2. x \\<in> {u<..<v} \\<Longrightarrow>\n    d x =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (x - u))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. x = v \\<Longrightarrow>\n    d x =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (x - u))\n 2. x \\<in> {u<..<v} \\<Longrightarrow>\n    d x =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (x - u))", "case 2"], ["proof (state)\nthis:\n  x = v\n\ngoal (2 subgoals):\n 1. x = v \\<Longrightarrow>\n    d x =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (x - u))\n 2. x \\<in> {u<..<v} \\<Longrightarrow>\n    d x =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (x - u))", "then"], ["proof (chain)\npicking this:\n  x = v", "have \"d x = c v\""], ["proof (prove)\nusing this:\n  x = v\n\ngoal (1 subgoal):\n 1. d x = c v", "unfolding d_def"], ["proof (prove)\nusing this:\n  x = v\n\ngoal (1 subgoal):\n 1. (if x \\<in> A then c x\n     else geodesic_segment_param {c (prev_in A x)--c (next_in A x)}\n           (c (prev_in A x))\n           ((x - prev_in A x) / (next_in A x - prev_in A x) *\n            dist (c (prev_in A x)) (c (next_in A x)))) =\n    c v", "using \\<open>v \\<in> A\\<close> \\<open>A \\<subseteq> {a..b}\\<close>"], ["proof (prove)\nusing this:\n  x = v\n  v \\<in> A\n  A \\<subseteq> {a..b}\n\ngoal (1 subgoal):\n 1. (if x \\<in> A then c x\n     else geodesic_segment_param {c (prev_in A x)--c (next_in A x)}\n           (c (prev_in A x))\n           ((x - prev_in A x) / (next_in A x - prev_in A x) *\n            dist (c (prev_in A x)) (c (next_in A x)))) =\n    c v", "by auto"], ["proof (state)\nthis:\n  d x = c v\n\ngoal (2 subgoals):\n 1. x = v \\<Longrightarrow>\n    d x =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (x - u))\n 2. x \\<in> {u<..<v} \\<Longrightarrow>\n    d x =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (x - u))", "then"], ["proof (chain)\npicking this:\n  d x = c v", "show ?thesis"], ["proof (prove)\nusing this:\n  d x = c v\n\ngoal (1 subgoal):\n 1. d x =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (x - u))", "unfolding 2"], ["proof (prove)\nusing this:\n  d v = c v\n\ngoal (1 subgoal):\n 1. d v =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (v - u))", "using \\<open>u < v\\<close>"], ["proof (prove)\nusing this:\n  d v = c v\n  u < v\n\ngoal (1 subgoal):\n 1. d v =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (v - u))", "by auto"], ["proof (state)\nthis:\n  d x =\n  geodesic_segment_param {c u--c v} (c u)\n   (dist (c u) (c v) / (v - u) * (x - u))\n\ngoal (1 subgoal):\n 1. x \\<in> {u<..<v} \\<Longrightarrow>\n    d x =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (x - u))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> {u<..<v} \\<Longrightarrow>\n    d x =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (x - u))", "case 3"], ["proof (state)\nthis:\n  x \\<in> {u<..<v}\n\ngoal (1 subgoal):\n 1. x \\<in> {u<..<v} \\<Longrightarrow>\n    d x =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (x - u))", "have *: \"prev_in A x = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prev_in A x = u", "apply (rule prev_inI[OF A])"], ["proof (prove)\ngoal (4 subgoals):\n 1. x \\<in> {a<..b}\n 2. u \\<in> A\n 3. u < x\n 4. {u<..<x} \\<inter> A = {}", "using 3 H \\<open>A \\<subseteq> {a..b}\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> {u<..<v}\n  u \\<in> A\n  v \\<in> A\n  u < v\n  A \\<inter> {u<..<v} = {}\n  A \\<subseteq> {a..b}\n\ngoal (4 subgoals):\n 1. x \\<in> {a<..b}\n 2. u \\<in> A\n 3. u < x\n 4. {u<..<x} \\<inter> A = {}", "by auto"], ["proof (state)\nthis:\n  prev_in A x = u\n\ngoal (1 subgoal):\n 1. x \\<in> {u<..<v} \\<Longrightarrow>\n    d x =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (x - u))", "have **: \"next_in A x = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next_in A x = v", "apply (rule next_inI[OF A])"], ["proof (prove)\ngoal (4 subgoals):\n 1. x \\<in> {a..<b}\n 2. v \\<in> A\n 3. x < v\n 4. {x<..<v} \\<inter> A = {}", "using 3 H \\<open>A \\<subseteq> {a..b}\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> {u<..<v}\n  u \\<in> A\n  v \\<in> A\n  u < v\n  A \\<inter> {u<..<v} = {}\n  A \\<subseteq> {a..b}\n\ngoal (4 subgoals):\n 1. x \\<in> {a..<b}\n 2. v \\<in> A\n 3. x < v\n 4. {x<..<v} \\<inter> A = {}", "by auto"], ["proof (state)\nthis:\n  next_in A x = v\n\ngoal (1 subgoal):\n 1. x \\<in> {u<..<v} \\<Longrightarrow>\n    d x =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (x - u))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. d x =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (x - u))", "unfolding d_def * **"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if x \\<in> A then c x\n     else geodesic_segment_param {c u--c v} (c u)\n           ((x - u) / (v - u) * dist (c u) (c v))) =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (x - u))", "using 3 H \\<open>A \\<inter> {u<..<v} = {}\\<close> \\<open>A \\<subseteq> {a..b}\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> {u<..<v}\n  u \\<in> A\n  v \\<in> A\n  u < v\n  A \\<inter> {u<..<v} = {}\n  A \\<inter> {u<..<v} = {}\n  A \\<subseteq> {a..b}\n\ngoal (1 subgoal):\n 1. (if x \\<in> A then c x\n     else geodesic_segment_param {c u--c v} (c u)\n           ((x - u) / (v - u) * dist (c u) (c v))) =\n    geodesic_segment_param {c u--c v} (c u)\n     (dist (c u) (c v) / (v - u) * (x - u))", "by (auto simp add: algebra_simps)"], ["proof (state)\nthis:\n  d x =\n  geodesic_segment_param {c u--c v} (c u)\n   (dist (c u) (c v) / (v - u) * (x - u))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  d x =\n  geodesic_segment_param {c u--c v} (c u)\n   (dist (c u) (c v) / (v - u) * (x - u))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?u \\<in> A - {b}; ?v = next_in A ?u; ?x \\<in> {?u..?v}\\<rbrakk>\n  \\<Longrightarrow> d ?x =\n                    geodesic_segment_param {c ?u--c ?v} (c ?u)\n                     (dist (c ?u) (c ?v) / (?v - ?u) * (?x - ?u))\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "text \\<open>From the above formula, we deduce that $d$ is Lipschitz on those intervals.\\<close>"], ["proof (state)\nthis:\n  \\<lbrakk>?u \\<in> A - {b}; ?v = next_in A ?u; ?x \\<in> {?u..?v}\\<rbrakk>\n  \\<Longrightarrow> d ?x =\n                    geodesic_segment_param {c ?u--c ?v} (c ?u)\n                     (dist (c ?u) (c ?v) / (?v - ?u) * (?x - ?u))\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have lip0: \"(lambda + C / (next_in A u - u))-lipschitz_on {u..next_in A u} d\" if \"u \\<in> A - {b}\" for u"], ["proof (prove)\ngoal (1 subgoal):\n 1. (lambda + C / (next_in A u - u))-lipschitz_on {u..next_in A u} d", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (lambda + C / (next_in A u - u))-lipschitz_on {u..next_in A u} d", "define v where \"v = next_in A u\""], ["proof (state)\nthis:\n  v = next_in A u\n\ngoal (1 subgoal):\n 1. (lambda + C / (next_in A u - u))-lipschitz_on {u..next_in A u} d", "have \"u \\<in> {a..<b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> {a..<b}", "using that \\<open>A \\<subseteq> {a..b}\\<close>"], ["proof (prove)\nusing this:\n  u \\<in> A - {b}\n  A \\<subseteq> {a..b}\n\ngoal (1 subgoal):\n 1. u \\<in> {a..<b}", "by fastforce"], ["proof (state)\nthis:\n  u \\<in> {a..<b}\n\ngoal (1 subgoal):\n 1. (lambda + C / (next_in A u - u))-lipschitz_on {u..next_in A u} d", "have \"u \\<in> A\" \"v \\<in> A\" \"u < v\" \"A \\<inter> {u<..<v} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u \\<in> A &&& v \\<in> A) &&& u < v &&& A \\<inter> {u<..<v} = {}", "unfolding v_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (u \\<in> A &&& next_in A u \\<in> A) &&&\n    u < next_in A u &&& A \\<inter> {u<..<next_in A u} = {}", "using that next_in_basics[OF A \\<open>u \\<in> {a..<b}\\<close>]"], ["proof (prove)\nusing this:\n  u \\<in> A - {b}\n  next_in A u \\<in> A\n  u < next_in A u\n  A \\<inter> {u<..<next_in A u} = {}\n\ngoal (1 subgoal):\n 1. (u \\<in> A &&& next_in A u \\<in> A) &&&\n    u < next_in A u &&& A \\<inter> {u<..<next_in A u} = {}", "by auto"], ["proof (state)\nthis:\n  u \\<in> A\n  v \\<in> A\n  u < v\n  A \\<inter> {u<..<v} = {}\n\ngoal (1 subgoal):\n 1. (lambda + C / (next_in A u - u))-lipschitz_on {u..next_in A u} d", "have \"(1 * (((lambda + C / (next_in A u - u))) * (1+0)))-lipschitz_on {u..v} (\\<lambda>x. geodesic_segment_param {(c u)--(c v)} (c u) ((dist (c u) (c v) /(v-u)) * (x-u)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 * ((lambda + C / (next_in A u - u)) * (1 + 0)))-lipschitz_on {u..v}\n     (\\<lambda>x.\n         geodesic_segment_param {c u--c v} (c u)\n          (dist (c u) (c v) / (v - u) * (x - u)))", "proof (rule lipschitz_on_compose2[of _ _ \"\\<lambda>x. ((dist (c u) (c v) /(v-u)) * (x-u))\"], intro lipschitz_intros)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<bar>dist (c u) (c v) / (v - u)\\<bar>\n    \\<le> lambda + C / (next_in A u - u)\n 2. 1-lipschitz_on\n     ((\\<lambda>x. dist (c u) (c v) / (v - u) * (x - u)) ` {u..v})\n     (geodesic_segment_param {c u--c v} (c u))", "have \"(\\<lambda>x. dist (c u) (c v) / (v - u) * (x - u)) ` {u..v} \\<subseteq> {0..dist (c u) (c v)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. dist (c u) (c v) / (v - u) * (x - u)) ` {u..v}\n    \\<subseteq> {0..dist (c u) (c v)}", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>u \\<le> xa; xa \\<le> v\\<rbrakk>\n       \\<Longrightarrow> dist (c u) (c v) * (xa - u) / (v - u)\n                         \\<le> dist (c u) (c v)", "using \\<open>u < v\\<close>"], ["proof (prove)\nusing this:\n  u < v\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>u \\<le> xa; xa \\<le> v\\<rbrakk>\n       \\<Longrightarrow> dist (c u) (c v) * (xa - u) / (v - u)\n                         \\<le> dist (c u) (c v)", "by (auto simp add: algebra_simps divide_simps intro: mult_right_mono)"], ["proof (state)\nthis:\n  (\\<lambda>x. dist (c u) (c v) / (v - u) * (x - u)) ` {u..v}\n  \\<subseteq> {0..dist (c u) (c v)}\n\ngoal (2 subgoals):\n 1. \\<bar>dist (c u) (c v) / (v - u)\\<bar>\n    \\<le> lambda + C / (next_in A u - u)\n 2. 1-lipschitz_on\n     ((\\<lambda>x. dist (c u) (c v) / (v - u) * (x - u)) ` {u..v})\n     (geodesic_segment_param {c u--c v} (c u))", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>x. dist (c u) (c v) / (v - u) * (x - u)) ` {u..v}\n  \\<subseteq> {0..dist (c u) (c v)}\n\ngoal (2 subgoals):\n 1. \\<bar>dist (c u) (c v) / (v - u)\\<bar>\n    \\<le> lambda + C / (next_in A u - u)\n 2. 1-lipschitz_on\n     ((\\<lambda>x. dist (c u) (c v) / (v - u) * (x - u)) ` {u..v})\n     (geodesic_segment_param {c u--c v} (c u))", "have \"1-lipschitz_on {0..dist (c u) (c v)} (geodesic_segment_param {c u--c v} (c u))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1-lipschitz_on {0..dist (c u) (c v)}\n     (geodesic_segment_param {c u--c v} (c u))", "by (rule isometry_on_lipschitz, simp)"], ["proof (state)\nthis:\n  1-lipschitz_on {0..dist (c u) (c v)}\n   (geodesic_segment_param {c u--c v} (c u))\n\ngoal (2 subgoals):\n 1. \\<bar>dist (c u) (c v) / (v - u)\\<bar>\n    \\<le> lambda + C / (next_in A u - u)\n 2. 1-lipschitz_on\n     ((\\<lambda>x. dist (c u) (c v) / (v - u) * (x - u)) ` {u..v})\n     (geodesic_segment_param {c u--c v} (c u))", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>x. dist (c u) (c v) / (v - u) * (x - u)) ` {u..v}\n  \\<subseteq> {0..dist (c u) (c v)}\n  1-lipschitz_on {0..dist (c u) (c v)}\n   (geodesic_segment_param {c u--c v} (c u))", "show \"1-lipschitz_on ((\\<lambda>x. dist (c u) (c v) / (v - u) * (x - u)) ` {u..v}) (geodesic_segment_param {c u--c v} (c u))\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. dist (c u) (c v) / (v - u) * (x - u)) ` {u..v}\n  \\<subseteq> {0..dist (c u) (c v)}\n  1-lipschitz_on {0..dist (c u) (c v)}\n   (geodesic_segment_param {c u--c v} (c u))\n\ngoal (1 subgoal):\n 1. 1-lipschitz_on\n     ((\\<lambda>x. dist (c u) (c v) / (v - u) * (x - u)) ` {u..v})\n     (geodesic_segment_param {c u--c v} (c u))", "using lipschitz_on_subset"], ["proof (prove)\nusing this:\n  (\\<lambda>x. dist (c u) (c v) / (v - u) * (x - u)) ` {u..v}\n  \\<subseteq> {0..dist (c u) (c v)}\n  1-lipschitz_on {0..dist (c u) (c v)}\n   (geodesic_segment_param {c u--c v} (c u))\n  \\<lbrakk>?L-lipschitz_on ?E ?f; ?D \\<subseteq> ?E\\<rbrakk>\n  \\<Longrightarrow> ?L-lipschitz_on ?D ?f\n\ngoal (1 subgoal):\n 1. 1-lipschitz_on\n     ((\\<lambda>x. dist (c u) (c v) / (v - u) * (x - u)) ` {u..v})\n     (geodesic_segment_param {c u--c v} (c u))", "by auto"], ["proof (state)\nthis:\n  1-lipschitz_on\n   ((\\<lambda>x. dist (c u) (c v) / (v - u) * (x - u)) ` {u..v})\n   (geodesic_segment_param {c u--c v} (c u))\n\ngoal (1 subgoal):\n 1. \\<bar>dist (c u) (c v) / (v - u)\\<bar>\n    \\<le> lambda + C / (next_in A u - u)", "have \"dist (c u) (c v) \\<le> lambda * dist u v + C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (c u) (c v) \\<le> lambda * dist u v + C", "apply (rule quasi_isometry_onD(1)[OF assms(1)])"], ["proof (prove)\ngoal (2 subgoals):\n 1. u \\<in> {a..b}\n 2. v \\<in> {a..b}", "using \\<open>u \\<in> A\\<close> \\<open>v \\<in> A\\<close> \\<open>A \\<subseteq> {a..b}\\<close>"], ["proof (prove)\nusing this:\n  u \\<in> A\n  v \\<in> A\n  A \\<subseteq> {a..b}\n\ngoal (2 subgoals):\n 1. u \\<in> {a..b}\n 2. v \\<in> {a..b}", "by auto"], ["proof (state)\nthis:\n  dist (c u) (c v) \\<le> lambda * dist u v + C\n\ngoal (1 subgoal):\n 1. \\<bar>dist (c u) (c v) / (v - u)\\<bar>\n    \\<le> lambda + C / (next_in A u - u)", "also"], ["proof (state)\nthis:\n  dist (c u) (c v) \\<le> lambda * dist u v + C\n\ngoal (1 subgoal):\n 1. \\<bar>dist (c u) (c v) / (v - u)\\<bar>\n    \\<le> lambda + C / (next_in A u - u)", "have \"... = lambda * (v - u) + C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda * dist u v + C = lambda * (v - u) + C", "unfolding dist_real_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda * \\<bar>u - v\\<bar> + C = lambda * (v - u) + C", "using \\<open>u < v\\<close>"], ["proof (prove)\nusing this:\n  u < v\n\ngoal (1 subgoal):\n 1. lambda * \\<bar>u - v\\<bar> + C = lambda * (v - u) + C", "by auto"], ["proof (state)\nthis:\n  lambda * dist u v + C = lambda * (v - u) + C\n\ngoal (1 subgoal):\n 1. \\<bar>dist (c u) (c v) / (v - u)\\<bar>\n    \\<le> lambda + C / (next_in A u - u)", "finally"], ["proof (chain)\npicking this:\n  dist (c u) (c v) \\<le> lambda * (v - u) + C", "show \"\\<bar>dist (c u) (c v) / (v - u)\\<bar> \\<le> lambda + C / (next_in A u - u)\""], ["proof (prove)\nusing this:\n  dist (c u) (c v) \\<le> lambda * (v - u) + C\n\ngoal (1 subgoal):\n 1. \\<bar>dist (c u) (c v) / (v - u)\\<bar>\n    \\<le> lambda + C / (next_in A u - u)", "using \\<open>u < v\\<close>"], ["proof (prove)\nusing this:\n  dist (c u) (c v) \\<le> lambda * (v - u) + C\n  u < v\n\ngoal (1 subgoal):\n 1. \\<bar>dist (c u) (c v) / (v - u)\\<bar>\n    \\<le> lambda + C / (next_in A u - u)", "unfolding v_def"], ["proof (prove)\nusing this:\n  dist (c u) (c (next_in A u)) \\<le> lambda * (next_in A u - u) + C\n  u < next_in A u\n\ngoal (1 subgoal):\n 1. \\<bar>dist (c u) (c (next_in A u)) / (next_in A u - u)\\<bar>\n    \\<le> lambda + C / (next_in A u - u)", "by (auto simp add: divide_simps)"], ["proof (state)\nthis:\n  \\<bar>dist (c u) (c v) / (v - u)\\<bar>\n  \\<le> lambda + C / (next_in A u - u)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (1 * ((lambda + C / (next_in A u - u)) * (1 + 0)))-lipschitz_on {u..v}\n   (\\<lambda>x.\n       geodesic_segment_param {c u--c v} (c u)\n        (dist (c u) (c v) / (v - u) * (x - u)))\n\ngoal (1 subgoal):\n 1. (lambda + C / (next_in A u - u))-lipschitz_on {u..next_in A u} d", "then"], ["proof (chain)\npicking this:\n  (1 * ((lambda + C / (next_in A u - u)) * (1 + 0)))-lipschitz_on {u..v}\n   (\\<lambda>x.\n       geodesic_segment_param {c u--c v} (c u)\n        (dist (c u) (c v) / (v - u) * (x - u)))", "show ?thesis"], ["proof (prove)\nusing this:\n  (1 * ((lambda + C / (next_in A u - u)) * (1 + 0)))-lipschitz_on {u..v}\n   (\\<lambda>x.\n       geodesic_segment_param {c u--c v} (c u)\n        (dist (c u) (c v) / (v - u) * (x - u)))\n\ngoal (1 subgoal):\n 1. (lambda + C / (next_in A u - u))-lipschitz_on {u..next_in A u} d", "using *[OF \\<open>u \\<in> A -{b}\\<close> \\<open>v = next_in A u\\<close>]"], ["proof (prove)\nusing this:\n  (1 * ((lambda + C / (next_in A u - u)) * (1 + 0)))-lipschitz_on {u..v}\n   (\\<lambda>x.\n       geodesic_segment_param {c u--c v} (c u)\n        (dist (c u) (c v) / (v - u) * (x - u)))\n  ?x \\<in> {u..v} \\<Longrightarrow>\n  d ?x =\n  geodesic_segment_param {c u--c v} (c u)\n   (dist (c u) (c v) / (v - u) * (?x - u))\n\ngoal (1 subgoal):\n 1. (lambda + C / (next_in A u - u))-lipschitz_on {u..next_in A u} d", "unfolding v_def"], ["proof (prove)\nusing this:\n  (1 * ((lambda + C / (next_in A u - u)) * (1 + 0)))-lipschitz_on\n   {u..next_in A u}\n   (\\<lambda>x.\n       geodesic_segment_param {c u--c (next_in A u)} (c u)\n        (dist (c u) (c (next_in A u)) / (next_in A u - u) * (x - u)))\n  ?x \\<in> {u..next_in A u} \\<Longrightarrow>\n  d ?x =\n  geodesic_segment_param {c u--c (next_in A u)} (c u)\n   (dist (c u) (c (next_in A u)) / (next_in A u - u) * (?x - u))\n\ngoal (1 subgoal):\n 1. (lambda + C / (next_in A u - u))-lipschitz_on {u..next_in A u} d", "by (auto intro: lipschitz_on_transform)"], ["proof (state)\nthis:\n  (lambda + C / (next_in A u - u))-lipschitz_on {u..next_in A u} d\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?u \\<in> A - {b} \\<Longrightarrow>\n  (lambda + C / (next_in A ?u - ?u))-lipschitz_on {?u..next_in A ?u} d\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have lip: \"(2 * lambda)-lipschitz_on {u..next_in A u} d\" if \"u \\<in> A - {b}\" for u"], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 * lambda)-lipschitz_on {u..next_in A u} d", "proof (rule lipschitz_on_mono[OF lip0[OF that]], auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. C / (next_in A u - u) \\<le> lambda", "define v where \"v = next_in A u\""], ["proof (state)\nthis:\n  v = next_in A u\n\ngoal (1 subgoal):\n 1. C / (next_in A u - u) \\<le> lambda", "have \"u \\<in> {a..<b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> {a..<b}", "using that \\<open>A \\<subseteq> {a..b}\\<close>"], ["proof (prove)\nusing this:\n  u \\<in> A - {b}\n  A \\<subseteq> {a..b}\n\ngoal (1 subgoal):\n 1. u \\<in> {a..<b}", "by fastforce"], ["proof (state)\nthis:\n  u \\<in> {a..<b}\n\ngoal (1 subgoal):\n 1. C / (next_in A u - u) \\<le> lambda", "have \"u \\<in> A\" \"v \\<in> A\" \"u < v\" \"A \\<inter> {u<..<v} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u \\<in> A &&& v \\<in> A) &&& u < v &&& A \\<inter> {u<..<v} = {}", "unfolding v_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (u \\<in> A &&& next_in A u \\<in> A) &&&\n    u < next_in A u &&& A \\<inter> {u<..<next_in A u} = {}", "using that next_in_basics[OF A \\<open>u \\<in> {a..<b}\\<close>]"], ["proof (prove)\nusing this:\n  u \\<in> A - {b}\n  next_in A u \\<in> A\n  u < next_in A u\n  A \\<inter> {u<..<next_in A u} = {}\n\ngoal (1 subgoal):\n 1. (u \\<in> A &&& next_in A u \\<in> A) &&&\n    u < next_in A u &&& A \\<inter> {u<..<next_in A u} = {}", "by auto"], ["proof (state)\nthis:\n  u \\<in> A\n  v \\<in> A\n  u < v\n  A \\<inter> {u<..<v} = {}\n\ngoal (1 subgoal):\n 1. C / (next_in A u - u) \\<le> lambda", "have Duv: \"v - u \\<in> {C/lambda .. 2 * C/lambda}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v - u \\<in> {C / lambda..2 * C / lambda}", "unfolding v_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. next_in A u - u \\<in> {C / lambda..2 * C / lambda}", "using gap[OF \\<open>u \\<in> A - {b}\\<close>]"], ["proof (prove)\nusing this:\n  next_in A u - u \\<in> {C / lambda..3 / 2 * C / lambda}\n\ngoal (1 subgoal):\n 1. next_in A u - u \\<in> {C / lambda..2 * C / lambda}", "by simp"], ["proof (state)\nthis:\n  v - u \\<in> {C / lambda..2 * C / lambda}\n\ngoal (1 subgoal):\n 1. C / (next_in A u - u) \\<le> lambda", "then"], ["proof (chain)\npicking this:\n  v - u \\<in> {C / lambda..2 * C / lambda}", "show \" C / (next_in A u - u) \\<le> lambda\""], ["proof (prove)\nusing this:\n  v - u \\<in> {C / lambda..2 * C / lambda}\n\ngoal (1 subgoal):\n 1. C / (next_in A u - u) \\<le> lambda", "using \\<open>u < v\\<close> C"], ["proof (prove)\nusing this:\n  v - u \\<in> {C / lambda..2 * C / lambda}\n  u < v\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. C / (next_in A u - u) \\<le> lambda", "unfolding v_def"], ["proof (prove)\nusing this:\n  next_in A u - u \\<in> {C / lambda..2 * C / lambda}\n  u < next_in A u\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. C / (next_in A u - u) \\<le> lambda", "by (auto simp add: algebra_simps divide_simps)"], ["proof (state)\nthis:\n  C / (next_in A u - u) \\<le> lambda\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?u \\<in> A - {b} \\<Longrightarrow>\n  (2 * lambda)-lipschitz_on {?u..next_in A ?u} d\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "text \\<open>The Lipschitz continuity of $d$ now follows from its Lipschitz continuity on each\n    subinterval in $I$.\\<close>"], ["proof (state)\nthis:\n  ?u \\<in> A - {b} \\<Longrightarrow>\n  (2 * lambda)-lipschitz_on {?u..next_in A ?u} d\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have Lip: \"(2 * lambda)-lipschitz_on {a..b} d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 * lambda)-lipschitz_on {a..b} d", "apply (rule lipschitz_on_closed_Union[of \"{{u..next_in A u} |u. u \\<in> A - {b}}\" _ \"\\<lambda>x. x\"])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>i.\n       i \\<in> {{u..next_in A u} |u. u \\<in> A - {b}} \\<Longrightarrow>\n       (2 * lambda)-lipschitz_on i d\n 2. \\<And>i.\n       i \\<in> {{u..next_in A u} |u. u \\<in> A - {b}} \\<Longrightarrow>\n       closed i\n 3. finite {{u..next_in A u} |u. u \\<in> A - {b}}\n 4. 0 \\<le> 2 * lambda\n 5. {a..b}\n    \\<subseteq> (\\<Union>i\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. i)", "using lip \\<open>finite A\\<close> C intervals_decomposition[OF A]"], ["proof (prove)\nusing this:\n  ?u \\<in> A - {b} \\<Longrightarrow>\n  (2 * lambda)-lipschitz_on {?u..next_in A ?u} d\n  finite A\n  0 < C\n  1 \\<le> lambda\n  (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U) = {a..b}\n\ngoal (5 subgoals):\n 1. \\<And>i.\n       i \\<in> {{u..next_in A u} |u. u \\<in> A - {b}} \\<Longrightarrow>\n       (2 * lambda)-lipschitz_on i d\n 2. \\<And>i.\n       i \\<in> {{u..next_in A u} |u. u \\<in> A - {b}} \\<Longrightarrow>\n       closed i\n 3. finite {{u..next_in A u} |u. u \\<in> A - {b}}\n 4. 0 \\<le> 2 * lambda\n 5. {a..b}\n    \\<subseteq> (\\<Union>i\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. i)", "using assms"], ["proof (prove)\nusing this:\n  ?u \\<in> A - {b} \\<Longrightarrow>\n  (2 * lambda)-lipschitz_on {?u..next_in A ?u} d\n  finite A\n  0 < C\n  1 \\<le> lambda\n  (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U) = {a..b}\n  lambda C -quasi_isometry_on {a..b} c\n  2 * C \\<le> dist (c a) (c b)\n\ngoal (5 subgoals):\n 1. \\<And>i.\n       i \\<in> {{u..next_in A u} |u. u \\<in> A - {b}} \\<Longrightarrow>\n       (2 * lambda)-lipschitz_on i d\n 2. \\<And>i.\n       i \\<in> {{u..next_in A u} |u. u \\<in> A - {b}} \\<Longrightarrow>\n       closed i\n 3. finite {{u..next_in A u} |u. u \\<in> A - {b}}\n 4. 0 \\<le> 2 * lambda\n 5. {a..b}\n    \\<subseteq> (\\<Union>i\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. i)", "by auto"], ["proof (state)\nthis:\n  (2 * lambda)-lipschitz_on {a..b} d\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  (2 * lambda)-lipschitz_on {a..b} d", "have \"continuous_on {a..b} d\""], ["proof (prove)\nusing this:\n  (2 * lambda)-lipschitz_on {a..b} d\n\ngoal (1 subgoal):\n 1. continuous_on {a..b} d", "using lipschitz_on_continuous_on"], ["proof (prove)\nusing this:\n  (2 * lambda)-lipschitz_on {a..b} d\n  ?L-lipschitz_on ?X ?f \\<Longrightarrow> continuous_on ?X ?f\n\ngoal (1 subgoal):\n 1. continuous_on {a..b} d", "by auto"], ["proof (state)\nthis:\n  continuous_on {a..b} d\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "text \\<open>$d$ has good upper controls on each basic interval.\\<close>"], ["proof (state)\nthis:\n  continuous_on {a..b} d\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have QI0: \"dist (d x) (d y) \\<le> lambda * dist x y + C\"\n      if H: \"u \\<in> A - {b}\" \"x \\<in> {u..next_in A u}\" \"y \\<in> {u..next_in A u}\" for u x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + C", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + C", "have \"u < next_in A u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u < next_in A u", "using H(1) A next_in_basics(2)[OF A]"], ["proof (prove)\nusing this:\n  u \\<in> A - {b}\n  finite A\n  A \\<subseteq> {a..b}\n  a \\<in> A\n  b \\<in> A\n  a < b\n  ?u \\<in> {a..<b} \\<Longrightarrow> ?u < next_in A ?u\n\ngoal (1 subgoal):\n 1. u < next_in A u", "by auto"], ["proof (state)\nthis:\n  u < next_in A u\n\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + C", "moreover"], ["proof (state)\nthis:\n  u < next_in A u\n\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + C", "have \"dist x y \\<le> next_in A u - u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x y \\<le> next_in A u - u", "unfolding dist_real_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>x - y\\<bar> \\<le> next_in A u - u", "using H"], ["proof (prove)\nusing this:\n  u \\<in> A - {b}\n  x \\<in> {u..next_in A u}\n  y \\<in> {u..next_in A u}\n\ngoal (1 subgoal):\n 1. \\<bar>x - y\\<bar> \\<le> next_in A u - u", "by auto"], ["proof (state)\nthis:\n  dist x y \\<le> next_in A u - u\n\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + C", "ultimately"], ["proof (chain)\npicking this:\n  u < next_in A u\n  dist x y \\<le> next_in A u - u", "have *: \"dist x y / (next_in A u - u) \\<le> 1\""], ["proof (prove)\nusing this:\n  u < next_in A u\n  dist x y \\<le> next_in A u - u\n\ngoal (1 subgoal):\n 1. dist x y / (next_in A u - u) \\<le> 1", "by (simp add: divide_simps)"], ["proof (state)\nthis:\n  dist x y / (next_in A u - u) \\<le> 1\n\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + C", "have \"dist (d x) (d y) \\<le> (lambda + C / (next_in A u - u)) * dist x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> (lambda + C / (next_in A u - u)) * dist x y", "by (rule lipschitz_onD[OF lip0[OF H(1)] H(2) H(3)])"], ["proof (state)\nthis:\n  dist (d x) (d y) \\<le> (lambda + C / (next_in A u - u)) * dist x y\n\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + C", "also"], ["proof (state)\nthis:\n  dist (d x) (d y) \\<le> (lambda + C / (next_in A u - u)) * dist x y\n\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + C", "have \"... = lambda * dist x y + C * (dist x y / (next_in A u - u))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (lambda + C / (next_in A u - u)) * dist x y =\n    lambda * dist x y + C * (dist x y / (next_in A u - u))", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  (lambda + C / (next_in A u - u)) * dist x y =\n  lambda * dist x y + C * (dist x y / (next_in A u - u))\n\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + C", "also"], ["proof (state)\nthis:\n  (lambda + C / (next_in A u - u)) * dist x y =\n  lambda * dist x y + C * (dist x y / (next_in A u - u))\n\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + C", "have \"... \\<le> lambda * dist x y + C * 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda * dist x y + C * (dist x y / (next_in A u - u))\n    \\<le> lambda * dist x y + C * 1", "apply (intro mono_intros)"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist x y / (next_in A u - u) \\<le> 1\n 2. 0 \\<le> C", "using C *"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n  dist x y / (next_in A u - u) \\<le> 1\n\ngoal (2 subgoals):\n 1. dist x y / (next_in A u - u) \\<le> 1\n 2. 0 \\<le> C", "by auto"], ["proof (state)\nthis:\n  lambda * dist x y + C * (dist x y / (next_in A u - u))\n  \\<le> lambda * dist x y + C * 1\n\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + C", "finally"], ["proof (chain)\npicking this:\n  dist (d x) (d y) \\<le> lambda * dist x y + C * 1", "show ?thesis"], ["proof (prove)\nusing this:\n  dist (d x) (d y) \\<le> lambda * dist x y + C * 1\n\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + C", "by simp"], ["proof (state)\nthis:\n  dist (d x) (d y) \\<le> lambda * dist x y + C\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?u \\<in> A - {b}; ?x \\<in> {?u..next_in A ?u};\n   ?y \\<in> {?u..next_in A ?u}\\<rbrakk>\n  \\<Longrightarrow> dist (d ?x) (d ?y) \\<le> lambda * dist ?x ?y + C\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "text \\<open>We can now show that $c$ and $d$ are pointwise close. This follows from the fact that they\n    coincide on $A$ and are well controlled in between (for $c$, this is a consequence of the choice\n    of $A$. For $d$, it follows from the fact that it is geodesic in the intervals).\\<close>"], ["proof (state)\nthis:\n  \\<lbrakk>?u \\<in> A - {b}; ?x \\<in> {?u..next_in A ?u};\n   ?y \\<in> {?u..next_in A ?u}\\<rbrakk>\n  \\<Longrightarrow> dist (d ?x) (d ?y) \\<le> lambda * dist ?x ?y + C\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have dist_c_d: \"dist (c x) (d x) \\<le> 4 * C\" if \"x \\<in> {a..b}\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (c x) (d x) \\<le> 4 * C", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist (c x) (d x) \\<le> 4 * C", "obtain u where u: \"u \\<in> A - {b}\" \"x \\<in> {u..next_in A u}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<in> A - {b}; x \\<in> {u..next_in A u}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>x \\<in> {a..b}\\<close> intervals_decomposition[OF A]"], ["proof (prove)\nusing this:\n  x \\<in> {a..b}\n  (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U) = {a..b}\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<in> A - {b}; x \\<in> {u..next_in A u}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  u \\<in> A - {b}\n  x \\<in> {u..next_in A u}\n\ngoal (1 subgoal):\n 1. dist (c x) (d x) \\<le> 4 * C", "have \"(x-u) + (next_in A u - x) \\<le> 2 * C/lambda\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x - u + (next_in A u - x) \\<le> 2 * C / lambda", "using gap[OF u(1)]"], ["proof (prove)\nusing this:\n  next_in A u - u \\<in> {C / lambda..3 / 2 * C / lambda}\n\ngoal (1 subgoal):\n 1. x - u + (next_in A u - x) \\<le> 2 * C / lambda", "by auto"], ["proof (state)\nthis:\n  x - u + (next_in A u - x) \\<le> 2 * C / lambda\n\ngoal (1 subgoal):\n 1. dist (c x) (d x) \\<le> 4 * C", "then"], ["proof (chain)\npicking this:\n  x - u + (next_in A u - x) \\<le> 2 * C / lambda", "consider \"x-u \\<le> C/lambda\" | \"next_in A u - x \\<le> C/lambda\""], ["proof (prove)\nusing this:\n  x - u + (next_in A u - x) \\<le> 2 * C / lambda\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x - u \\<le> C / lambda \\<Longrightarrow> thesis;\n     next_in A u - x \\<le> C / lambda \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by linarith"], ["proof (state)\nthis:\n  \\<lbrakk>x - u \\<le> C / lambda \\<Longrightarrow> ?thesis;\n   next_in A u - x \\<le> C / lambda \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. dist (c x) (d x) \\<le> 4 * C", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>x - u \\<le> C / lambda \\<Longrightarrow> ?thesis;\n   next_in A u - x \\<le> C / lambda \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "have \"\\<exists>v\\<in>A. dist x v \\<le> C/lambda\""], ["proof (prove)\nusing this:\n  \\<lbrakk>x - u \\<le> C / lambda \\<Longrightarrow> ?thesis;\n   next_in A u - x \\<le> C / lambda \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<exists>v\\<in>A. dist x v \\<le> C / lambda", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. x - u \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>A. dist x v \\<le> C / lambda\n 2. next_in A u - x \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>A. dist x v \\<le> C / lambda", "case 1"], ["proof (state)\nthis:\n  x - u \\<le> C / lambda\n\ngoal (2 subgoals):\n 1. x - u \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>A. dist x v \\<le> C / lambda\n 2. next_in A u - x \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>A. dist x v \\<le> C / lambda", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>v\\<in>A. dist x v \\<le> C / lambda", "apply (rule bexI[of _ u])"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist x u \\<le> C / lambda\n 2. u \\<in> A", "using 1 u"], ["proof (prove)\nusing this:\n  x - u \\<le> C / lambda\n  u \\<in> A - {b}\n  x \\<in> {u..next_in A u}\n\ngoal (2 subgoals):\n 1. dist x u \\<le> C / lambda\n 2. u \\<in> A", "by (auto simp add: dist_real_def)"], ["proof (state)\nthis:\n  \\<exists>v\\<in>A. dist x v \\<le> C / lambda\n\ngoal (1 subgoal):\n 1. next_in A u - x \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>A. dist x v \\<le> C / lambda", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. next_in A u - x \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>A. dist x v \\<le> C / lambda", "case 2"], ["proof (state)\nthis:\n  next_in A u - x \\<le> C / lambda\n\ngoal (1 subgoal):\n 1. next_in A u - x \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>A. dist x v \\<le> C / lambda", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>v\\<in>A. dist x v \\<le> C / lambda", "apply (rule bexI[of _ \"next_in A u\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist x (next_in A u) \\<le> C / lambda\n 2. next_in A u \\<in> A", "using 2 u A(2)"], ["proof (prove)\nusing this:\n  next_in A u - x \\<le> C / lambda\n  u \\<in> A - {b}\n  x \\<in> {u..next_in A u}\n  A \\<subseteq> {a..b}\n\ngoal (2 subgoals):\n 1. dist x (next_in A u) \\<le> C / lambda\n 2. next_in A u \\<in> A", "by (auto simp add: dist_real_def intro!:next_in_basics[OF A])"], ["proof (state)\nthis:\n  \\<exists>v\\<in>A. dist x v \\<le> C / lambda\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>v\\<in>A. dist x v \\<le> C / lambda\n\ngoal (1 subgoal):\n 1. dist (c x) (d x) \\<le> 4 * C", "then"], ["proof (chain)\npicking this:\n  \\<exists>v\\<in>A. dist x v \\<le> C / lambda", "obtain v where v: \"v \\<in> A\" \"dist x v \\<le> C/lambda\""], ["proof (prove)\nusing this:\n  \\<exists>v\\<in>A. dist x v \\<le> C / lambda\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<in> A; dist x v \\<le> C / lambda\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  v \\<in> A\n  dist x v \\<le> C / lambda\n\ngoal (1 subgoal):\n 1. dist (c x) (d x) \\<le> 4 * C", "have \"dist (c x) (d x) \\<le> dist (c x) (c v) + dist (c v) (d v) + dist (d v) (d x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (c x) (d x)\n    \\<le> dist (c x) (c v) + dist (c v) (d v) + dist (d v) (d x)", "by (intro mono_intros)"], ["proof (state)\nthis:\n  dist (c x) (d x)\n  \\<le> dist (c x) (c v) + dist (c v) (d v) + dist (d v) (d x)\n\ngoal (1 subgoal):\n 1. dist (c x) (d x) \\<le> 4 * C", "also"], ["proof (state)\nthis:\n  dist (c x) (d x)\n  \\<le> dist (c x) (c v) + dist (c v) (d v) + dist (d v) (d x)\n\ngoal (1 subgoal):\n 1. dist (c x) (d x) \\<le> 4 * C", "have \"... \\<le> (lambda * dist x v + C) + 0 + ((2 * lambda) * dist v x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (c x) (c v) + dist (c v) (d v) + dist (d v) (d x)\n    \\<le> lambda * dist x v + C + 0 + 2 * lambda * dist v x", "apply (intro mono_intros quasi_isometry_onD(1)[OF assms(1)] that lipschitz_onD[OF Lip])"], ["proof (prove)\ngoal (3 subgoals):\n 1. v \\<in> {a..b}\n 2. dist (c v) (d v) \\<le> 0\n 3. v \\<in> {a..b}", "using A(2) \\<open>v \\<in> A\\<close>"], ["proof (prove)\nusing this:\n  A \\<subseteq> {a..b}\n  v \\<in> A\n\ngoal (3 subgoals):\n 1. v \\<in> {a..b}\n 2. dist (c v) (d v) \\<le> 0\n 3. v \\<in> {a..b}", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist (c v) (d v) \\<le> 0\n 2. v \\<in> {a..b}", "using \\<open>v \\<in> A\\<close> d_def"], ["proof (prove)\nusing this:\n  v \\<in> A\n  d ?x =\n  (if ?x \\<in> A then c ?x\n   else geodesic_segment_param {c (prev_in A ?x)--c (next_in A ?x)}\n         (c (prev_in A ?x))\n         ((?x - prev_in A ?x) / (next_in A ?x - prev_in A ?x) *\n          dist (c (prev_in A ?x)) (c (next_in A ?x))))\n\ngoal (2 subgoals):\n 1. dist (c v) (d v) \\<le> 0\n 2. v \\<in> {a..b}", "apply auto[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> {a..b}", "using A(2) \\<open>v \\<in> A\\<close>"], ["proof (prove)\nusing this:\n  A \\<subseteq> {a..b}\n  v \\<in> A\n\ngoal (1 subgoal):\n 1. v \\<in> {a..b}", "by blast"], ["proof (state)\nthis:\n  dist (c x) (c v) + dist (c v) (d v) + dist (d v) (d x)\n  \\<le> lambda * dist x v + C + 0 + 2 * lambda * dist v x\n\ngoal (1 subgoal):\n 1. dist (c x) (d x) \\<le> 4 * C", "also"], ["proof (state)\nthis:\n  dist (c x) (c v) + dist (c v) (d v) + dist (d v) (d x)\n  \\<le> lambda * dist x v + C + 0 + 2 * lambda * dist v x\n\ngoal (1 subgoal):\n 1. dist (c x) (d x) \\<le> 4 * C", "have \"... \\<le> (lambda * (C/lambda) + C) + 0 + ((2 * lambda) * (C/lambda))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda * dist x v + C + 0 + 2 * lambda * dist v x\n    \\<le> lambda * (C / lambda) + C + 0 + 2 * lambda * (C / lambda)", "apply (intro mono_intros)"], ["proof (prove)\ngoal (4 subgoals):\n 1. dist x v \\<le> C / lambda\n 2. 0 \\<le> lambda\n 3. dist v x \\<le> C / lambda\n 4. 0 \\<le> 2 * lambda", "using v(2) C"], ["proof (prove)\nusing this:\n  dist x v \\<le> C / lambda\n  0 < C\n  1 \\<le> lambda\n\ngoal (4 subgoals):\n 1. dist x v \\<le> C / lambda\n 2. 0 \\<le> lambda\n 3. dist v x \\<le> C / lambda\n 4. 0 \\<le> 2 * lambda", "by (auto simp add: metric_space_class.dist_commute)"], ["proof (state)\nthis:\n  lambda * dist x v + C + 0 + 2 * lambda * dist v x\n  \\<le> lambda * (C / lambda) + C + 0 + 2 * lambda * (C / lambda)\n\ngoal (1 subgoal):\n 1. dist (c x) (d x) \\<le> 4 * C", "finally"], ["proof (chain)\npicking this:\n  dist (c x) (d x)\n  \\<le> lambda * (C / lambda) + C + 0 + 2 * lambda * (C / lambda)", "show ?thesis"], ["proof (prove)\nusing this:\n  dist (c x) (d x)\n  \\<le> lambda * (C / lambda) + C + 0 + 2 * lambda * (C / lambda)\n\ngoal (1 subgoal):\n 1. dist (c x) (d x) \\<le> 4 * C", "using C"], ["proof (prove)\nusing this:\n  dist (c x) (d x)\n  \\<le> lambda * (C / lambda) + C + 0 + 2 * lambda * (C / lambda)\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. dist (c x) (d x) \\<le> 4 * C", "by (auto simp add: algebra_simps divide_simps)"], ["proof (state)\nthis:\n  dist (c x) (d x) \\<le> 4 * C\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x \\<in> {a..b} \\<Longrightarrow> dist (c ?x) (d ?x) \\<le> 4 * C\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "text \\<open>A similar argument shows that the Hausdorff distance between the images is bounded by $2C$.\\<close>"], ["proof (state)\nthis:\n  ?x \\<in> {a..b} \\<Longrightarrow> dist (c ?x) (d ?x) \\<le> 4 * C\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have \"hausdorff_distance (c`{a..b}) (d`{a..b}) \\<le> 2 * C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "proof (rule hausdorff_distanceI2)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C\n 3. 0 \\<le> 2 * C", "show \"0 \\<le> 2 * C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> 2 * C", "using C"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. 0 \\<le> 2 * C", "by auto"], ["proof (state)\nthis:\n  0 \\<le> 2 * C\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "fix z"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "assume \"z \\<in> c`{a..b}\""], ["proof (state)\nthis:\n  z \\<in> c ` {a..b}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  z \\<in> c ` {a..b}", "obtain x where x: \"x \\<in> {a..b}\" \"z = c x\""], ["proof (prove)\nusing this:\n  z \\<in> c ` {a..b}\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> {a..b}; z = c x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> {a..b}\n  z = c x\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  x \\<in> {a..b}\n  z = c x", "obtain u where u: \"u \\<in> A - {b}\" \"x \\<in> {u..next_in A u}\""], ["proof (prove)\nusing this:\n  x \\<in> {a..b}\n  z = c x\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<in> A - {b}; x \\<in> {u..next_in A u}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using intervals_decomposition[OF A]"], ["proof (prove)\nusing this:\n  x \\<in> {a..b}\n  z = c x\n  (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U) = {a..b}\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<in> A - {b}; x \\<in> {u..next_in A u}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  u \\<in> A - {b}\n  x \\<in> {u..next_in A u}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "have \"(x-u) + (next_in A u - x) \\<le> 2 * C/lambda\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x - u + (next_in A u - x) \\<le> 2 * C / lambda", "using gap[OF u(1)]"], ["proof (prove)\nusing this:\n  next_in A u - u \\<in> {C / lambda..3 / 2 * C / lambda}\n\ngoal (1 subgoal):\n 1. x - u + (next_in A u - x) \\<le> 2 * C / lambda", "by auto"], ["proof (state)\nthis:\n  x - u + (next_in A u - x) \\<le> 2 * C / lambda\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  x - u + (next_in A u - x) \\<le> 2 * C / lambda", "consider \"x-u \\<le> C/lambda\" | \"next_in A u - x \\<le> C/lambda\""], ["proof (prove)\nusing this:\n  x - u + (next_in A u - x) \\<le> 2 * C / lambda\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x - u \\<le> C / lambda \\<Longrightarrow> thesis;\n     next_in A u - x \\<le> C / lambda \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by linarith"], ["proof (state)\nthis:\n  \\<lbrakk>x - u \\<le> C / lambda \\<Longrightarrow> ?thesis;\n   next_in A u - x \\<le> C / lambda \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>x - u \\<le> C / lambda \\<Longrightarrow> ?thesis;\n   next_in A u - x \\<le> C / lambda \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "have \"\\<exists>v\\<in>A. dist x v \\<le> C/lambda\""], ["proof (prove)\nusing this:\n  \\<lbrakk>x - u \\<le> C / lambda \\<Longrightarrow> ?thesis;\n   next_in A u - x \\<le> C / lambda \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<exists>v\\<in>A. dist x v \\<le> C / lambda", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. x - u \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>A. dist x v \\<le> C / lambda\n 2. next_in A u - x \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>A. dist x v \\<le> C / lambda", "case 1"], ["proof (state)\nthis:\n  x - u \\<le> C / lambda\n\ngoal (2 subgoals):\n 1. x - u \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>A. dist x v \\<le> C / lambda\n 2. next_in A u - x \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>A. dist x v \\<le> C / lambda", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>v\\<in>A. dist x v \\<le> C / lambda", "apply (rule bexI[of _ u])"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist x u \\<le> C / lambda\n 2. u \\<in> A", "using 1 u"], ["proof (prove)\nusing this:\n  x - u \\<le> C / lambda\n  u \\<in> A - {b}\n  x \\<in> {u..next_in A u}\n\ngoal (2 subgoals):\n 1. dist x u \\<le> C / lambda\n 2. u \\<in> A", "by (auto simp add: dist_real_def)"], ["proof (state)\nthis:\n  \\<exists>v\\<in>A. dist x v \\<le> C / lambda\n\ngoal (1 subgoal):\n 1. next_in A u - x \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>A. dist x v \\<le> C / lambda", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. next_in A u - x \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>A. dist x v \\<le> C / lambda", "case 2"], ["proof (state)\nthis:\n  next_in A u - x \\<le> C / lambda\n\ngoal (1 subgoal):\n 1. next_in A u - x \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>A. dist x v \\<le> C / lambda", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>v\\<in>A. dist x v \\<le> C / lambda", "apply (rule bexI[of _ \"next_in A u\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist x (next_in A u) \\<le> C / lambda\n 2. next_in A u \\<in> A", "using 2 u A(2)"], ["proof (prove)\nusing this:\n  next_in A u - x \\<le> C / lambda\n  u \\<in> A - {b}\n  x \\<in> {u..next_in A u}\n  A \\<subseteq> {a..b}\n\ngoal (2 subgoals):\n 1. dist x (next_in A u) \\<le> C / lambda\n 2. next_in A u \\<in> A", "by (auto simp add: dist_real_def intro!:next_in_basics[OF A])"], ["proof (state)\nthis:\n  \\<exists>v\\<in>A. dist x v \\<le> C / lambda\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>v\\<in>A. dist x v \\<le> C / lambda\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  \\<exists>v\\<in>A. dist x v \\<le> C / lambda", "obtain v where v: \"v \\<in> A\" \"dist x v \\<le> C/lambda\""], ["proof (prove)\nusing this:\n  \\<exists>v\\<in>A. dist x v \\<le> C / lambda\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<in> A; dist x v \\<le> C / lambda\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  v \\<in> A\n  dist x v \\<le> C / lambda\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "have \"dist z (d v) = dist (c x) (c v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist z (d v) = dist (c x) (c v)", "unfolding x(2) d_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (c x)\n     (if v \\<in> A then c v\n      else geodesic_segment_param {c (prev_in A v)--c (next_in A v)}\n            (c (prev_in A v))\n            ((v - prev_in A v) / (next_in A v - prev_in A v) *\n             dist (c (prev_in A v)) (c (next_in A v)))) =\n    dist (c x) (c v)", "using \\<open>v \\<in> A\\<close>"], ["proof (prove)\nusing this:\n  v \\<in> A\n\ngoal (1 subgoal):\n 1. dist (c x)\n     (if v \\<in> A then c v\n      else geodesic_segment_param {c (prev_in A v)--c (next_in A v)}\n            (c (prev_in A v))\n            ((v - prev_in A v) / (next_in A v - prev_in A v) *\n             dist (c (prev_in A v)) (c (next_in A v)))) =\n    dist (c x) (c v)", "by auto"], ["proof (state)\nthis:\n  dist z (d v) = dist (c x) (c v)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "also"], ["proof (state)\nthis:\n  dist z (d v) = dist (c x) (c v)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "have \"... \\<le> lambda * dist x v + C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (c x) (c v) \\<le> lambda * dist x v + C", "apply (rule quasi_isometry_onD(1)[OF assms(1)])"], ["proof (prove)\ngoal (2 subgoals):\n 1. x \\<in> {a..b}\n 2. v \\<in> {a..b}", "using v(1) A(2) x(1)"], ["proof (prove)\nusing this:\n  v \\<in> A\n  A \\<subseteq> {a..b}\n  x \\<in> {a..b}\n\ngoal (2 subgoals):\n 1. x \\<in> {a..b}\n 2. v \\<in> {a..b}", "by auto"], ["proof (state)\nthis:\n  dist (c x) (c v) \\<le> lambda * dist x v + C\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "also"], ["proof (state)\nthis:\n  dist (c x) (c v) \\<le> lambda * dist x v + C\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "have \"... \\<le> lambda * (C/lambda) + C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda * dist x v + C \\<le> lambda * (C / lambda) + C", "apply (intro mono_intros)"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist x v \\<le> C / lambda\n 2. 0 \\<le> lambda", "using C v(2)"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n  dist x v \\<le> C / lambda\n\ngoal (2 subgoals):\n 1. dist x v \\<le> C / lambda\n 2. 0 \\<le> lambda", "by auto"], ["proof (state)\nthis:\n  lambda * dist x v + C \\<le> lambda * (C / lambda) + C\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "also"], ["proof (state)\nthis:\n  lambda * dist x v + C \\<le> lambda * (C / lambda) + C\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "have \"... = 2 * C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda * (C / lambda) + C = 2 * C", "using C"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. lambda * (C / lambda) + C = 2 * C", "by (simp add: divide_simps)"], ["proof (state)\nthis:\n  lambda * (C / lambda) + C = 2 * C\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "finally"], ["proof (chain)\npicking this:\n  dist z (d v) \\<le> 2 * C", "have *: \"dist z (d v) \\<le> 2 * C\""], ["proof (prove)\nusing this:\n  dist z (d v) \\<le> 2 * C\n\ngoal (1 subgoal):\n 1. dist z (d v) \\<le> 2 * C", "by simp"], ["proof (state)\nthis:\n  dist z (d v) \\<le> 2 * C\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> c ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>d ` {a..b}. dist x y \\<le> 2 * C\n 2. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "show \"\\<exists>y\\<in>d ` {a..b}. dist z y \\<le> 2 * C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>d ` {a..b}. dist z y \\<le> 2 * C", "apply (rule bexI[of _ \"d v\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist z (d v) \\<le> 2 * C\n 2. d v \\<in> d ` {a..b}", "using * v(1) A(2)"], ["proof (prove)\nusing this:\n  dist z (d v) \\<le> 2 * C\n  v \\<in> A\n  A \\<subseteq> {a..b}\n\ngoal (2 subgoals):\n 1. dist z (d v) \\<le> 2 * C\n 2. d v \\<in> d ` {a..b}", "by auto"], ["proof (state)\nthis:\n  \\<exists>y\\<in>d ` {a..b}. dist z y \\<le> 2 * C\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "assume \"z \\<in> d`{a..b}\""], ["proof (state)\nthis:\n  z \\<in> d ` {a..b}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  z \\<in> d ` {a..b}", "obtain x where x: \"x \\<in> {a..b}\" \"z = d x\""], ["proof (prove)\nusing this:\n  z \\<in> d ` {a..b}\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> {a..b}; z = d x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> {a..b}\n  z = d x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  x \\<in> {a..b}\n  z = d x", "obtain u where u: \"u \\<in> A - {b}\" \"x \\<in> {u..next_in A u}\""], ["proof (prove)\nusing this:\n  x \\<in> {a..b}\n  z = d x\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<in> A - {b}; x \\<in> {u..next_in A u}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using intervals_decomposition[OF A]"], ["proof (prove)\nusing this:\n  x \\<in> {a..b}\n  z = d x\n  (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U) = {a..b}\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<in> A - {b}; x \\<in> {u..next_in A u}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  u \\<in> A - {b}\n  x \\<in> {u..next_in A u}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "have \"(x-u) + (next_in A u - x) \\<le> 2 * C/lambda\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x - u + (next_in A u - x) \\<le> 2 * C / lambda", "using gap[OF u(1)]"], ["proof (prove)\nusing this:\n  next_in A u - u \\<in> {C / lambda..3 / 2 * C / lambda}\n\ngoal (1 subgoal):\n 1. x - u + (next_in A u - x) \\<le> 2 * C / lambda", "by auto"], ["proof (state)\nthis:\n  x - u + (next_in A u - x) \\<le> 2 * C / lambda\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  x - u + (next_in A u - x) \\<le> 2 * C / lambda", "consider \"x-u \\<le> C/lambda\" | \"next_in A u - x \\<le> C/lambda\""], ["proof (prove)\nusing this:\n  x - u + (next_in A u - x) \\<le> 2 * C / lambda\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x - u \\<le> C / lambda \\<Longrightarrow> thesis;\n     next_in A u - x \\<le> C / lambda \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by linarith"], ["proof (state)\nthis:\n  \\<lbrakk>x - u \\<le> C / lambda \\<Longrightarrow> ?thesis;\n   next_in A u - x \\<le> C / lambda \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>x - u \\<le> C / lambda \\<Longrightarrow> ?thesis;\n   next_in A u - x \\<le> C / lambda \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "have \"\\<exists>v\\<in>A. dist x v \\<le> C/lambda\""], ["proof (prove)\nusing this:\n  \\<lbrakk>x - u \\<le> C / lambda \\<Longrightarrow> ?thesis;\n   next_in A u - x \\<le> C / lambda \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<exists>v\\<in>A. dist x v \\<le> C / lambda", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. x - u \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>A. dist x v \\<le> C / lambda\n 2. next_in A u - x \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>A. dist x v \\<le> C / lambda", "case 1"], ["proof (state)\nthis:\n  x - u \\<le> C / lambda\n\ngoal (2 subgoals):\n 1. x - u \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>A. dist x v \\<le> C / lambda\n 2. next_in A u - x \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>A. dist x v \\<le> C / lambda", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>v\\<in>A. dist x v \\<le> C / lambda", "apply (rule bexI[of _ u])"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist x u \\<le> C / lambda\n 2. u \\<in> A", "using 1 u"], ["proof (prove)\nusing this:\n  x - u \\<le> C / lambda\n  u \\<in> A - {b}\n  x \\<in> {u..next_in A u}\n\ngoal (2 subgoals):\n 1. dist x u \\<le> C / lambda\n 2. u \\<in> A", "by (auto simp add: dist_real_def)"], ["proof (state)\nthis:\n  \\<exists>v\\<in>A. dist x v \\<le> C / lambda\n\ngoal (1 subgoal):\n 1. next_in A u - x \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>A. dist x v \\<le> C / lambda", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. next_in A u - x \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>A. dist x v \\<le> C / lambda", "case 2"], ["proof (state)\nthis:\n  next_in A u - x \\<le> C / lambda\n\ngoal (1 subgoal):\n 1. next_in A u - x \\<le> C / lambda \\<Longrightarrow>\n    \\<exists>v\\<in>A. dist x v \\<le> C / lambda", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>v\\<in>A. dist x v \\<le> C / lambda", "apply (rule bexI[of _ \"next_in A u\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist x (next_in A u) \\<le> C / lambda\n 2. next_in A u \\<in> A", "using 2 u A(2)"], ["proof (prove)\nusing this:\n  next_in A u - x \\<le> C / lambda\n  u \\<in> A - {b}\n  x \\<in> {u..next_in A u}\n  A \\<subseteq> {a..b}\n\ngoal (2 subgoals):\n 1. dist x (next_in A u) \\<le> C / lambda\n 2. next_in A u \\<in> A", "by (auto simp add: dist_real_def intro!:next_in_basics[OF A])"], ["proof (state)\nthis:\n  \\<exists>v\\<in>A. dist x v \\<le> C / lambda\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>v\\<in>A. dist x v \\<le> C / lambda\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  \\<exists>v\\<in>A. dist x v \\<le> C / lambda", "obtain v where v: \"v \\<in> A\" \"dist x v \\<le> C/lambda\""], ["proof (prove)\nusing this:\n  \\<exists>v\\<in>A. dist x v \\<le> C / lambda\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<in> A; dist x v \\<le> C / lambda\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  v \\<in> A\n  dist x v \\<le> C / lambda\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "have \"dist z (c v) = dist (d x) (d v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist z (c v) = dist (d x) (d v)", "unfolding x(2) d_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist\n     (if x \\<in> A then c x\n      else geodesic_segment_param {c (prev_in A x)--c (next_in A x)}\n            (c (prev_in A x))\n            ((x - prev_in A x) / (next_in A x - prev_in A x) *\n             dist (c (prev_in A x)) (c (next_in A x))))\n     (c v) =\n    dist\n     (if x \\<in> A then c x\n      else geodesic_segment_param {c (prev_in A x)--c (next_in A x)}\n            (c (prev_in A x))\n            ((x - prev_in A x) / (next_in A x - prev_in A x) *\n             dist (c (prev_in A x)) (c (next_in A x))))\n     (if v \\<in> A then c v\n      else geodesic_segment_param {c (prev_in A v)--c (next_in A v)}\n            (c (prev_in A v))\n            ((v - prev_in A v) / (next_in A v - prev_in A v) *\n             dist (c (prev_in A v)) (c (next_in A v))))", "using \\<open>v \\<in> A\\<close>"], ["proof (prove)\nusing this:\n  v \\<in> A\n\ngoal (1 subgoal):\n 1. dist\n     (if x \\<in> A then c x\n      else geodesic_segment_param {c (prev_in A x)--c (next_in A x)}\n            (c (prev_in A x))\n            ((x - prev_in A x) / (next_in A x - prev_in A x) *\n             dist (c (prev_in A x)) (c (next_in A x))))\n     (c v) =\n    dist\n     (if x \\<in> A then c x\n      else geodesic_segment_param {c (prev_in A x)--c (next_in A x)}\n            (c (prev_in A x))\n            ((x - prev_in A x) / (next_in A x - prev_in A x) *\n             dist (c (prev_in A x)) (c (next_in A x))))\n     (if v \\<in> A then c v\n      else geodesic_segment_param {c (prev_in A v)--c (next_in A v)}\n            (c (prev_in A v))\n            ((v - prev_in A v) / (next_in A v - prev_in A v) *\n             dist (c (prev_in A v)) (c (next_in A v))))", "by auto"], ["proof (state)\nthis:\n  dist z (c v) = dist (d x) (d v)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "also"], ["proof (state)\nthis:\n  dist z (c v) = dist (d x) (d v)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "have \"... \\<le> 2 * lambda * dist x v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (d x) (d v) \\<le> 2 * lambda * dist x v", "apply (rule lipschitz_onD(1)[OF Lip])"], ["proof (prove)\ngoal (2 subgoals):\n 1. x \\<in> {a..b}\n 2. v \\<in> {a..b}", "using v(1) A(2) x(1)"], ["proof (prove)\nusing this:\n  v \\<in> A\n  A \\<subseteq> {a..b}\n  x \\<in> {a..b}\n\ngoal (2 subgoals):\n 1. x \\<in> {a..b}\n 2. v \\<in> {a..b}", "by auto"], ["proof (state)\nthis:\n  dist (d x) (d v) \\<le> 2 * lambda * dist x v\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "also"], ["proof (state)\nthis:\n  dist (d x) (d v) \\<le> 2 * lambda * dist x v\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "have \"... \\<le> 2 * lambda * (C/lambda)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * lambda * dist x v \\<le> 2 * lambda * (C / lambda)", "apply (intro mono_intros)"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist x v \\<le> C / lambda\n 2. 0 \\<le> 2 * lambda", "using C v(2)"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n  dist x v \\<le> C / lambda\n\ngoal (2 subgoals):\n 1. dist x v \\<le> C / lambda\n 2. 0 \\<le> 2 * lambda", "by auto"], ["proof (state)\nthis:\n  2 * lambda * dist x v \\<le> 2 * lambda * (C / lambda)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "also"], ["proof (state)\nthis:\n  2 * lambda * dist x v \\<le> 2 * lambda * (C / lambda)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "have \"... = 2 * C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * lambda * (C / lambda) = 2 * C", "using C"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. 2 * lambda * (C / lambda) = 2 * C", "by (simp add: divide_simps)"], ["proof (state)\nthis:\n  2 * lambda * (C / lambda) = 2 * C\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "finally"], ["proof (chain)\npicking this:\n  dist z (c v) \\<le> 2 * C", "have *: \"dist z (c v) \\<le> 2 * C\""], ["proof (prove)\nusing this:\n  dist z (c v) \\<le> 2 * C\n\ngoal (1 subgoal):\n 1. dist z (c v) \\<le> 2 * C", "by simp"], ["proof (state)\nthis:\n  dist z (c v) \\<le> 2 * C\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> d ` {a..b} \\<Longrightarrow>\n       \\<exists>y\\<in>c ` {a..b}. dist x y \\<le> 2 * C", "show \"\\<exists>y\\<in>c`{a..b}. dist z y \\<le> 2 * C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>c ` {a..b}. dist z y \\<le> 2 * C", "apply (rule bexI[of _ \"c v\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist z (c v) \\<le> 2 * C\n 2. c v \\<in> c ` {a..b}", "using * v(1) A(2)"], ["proof (prove)\nusing this:\n  dist z (c v) \\<le> 2 * C\n  v \\<in> A\n  A \\<subseteq> {a..b}\n\ngoal (2 subgoals):\n 1. dist z (c v) \\<le> 2 * C\n 2. c v \\<in> c ` {a..b}", "by auto"], ["proof (state)\nthis:\n  \\<exists>y\\<in>c ` {a..b}. dist z y \\<le> 2 * C\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "text \\<open>From the above controls, we check that $d$ is a quasi-isometry, with explicit constants.\\<close>"], ["proof (state)\nthis:\n  hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "have \"lambda (4 * C)-quasi_isometry_on {a..b} d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda (4 * C) -quasi_isometry_on {a..b} d", "proof"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {a..b}; y \\<in> {a..b}\\<rbrakk>\n       \\<Longrightarrow> dist (d x) (d y) \\<le> lambda * dist x y + 4 * C\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> {a..b}; y \\<in> {a..b}\\<rbrakk>\n       \\<Longrightarrow> 1 / lambda * dist x y - 4 * C\n                         \\<le> dist (d x) (d y)\n 3. 1 \\<le> lambda\n 4. 0 \\<le> 4 * C", "show \"1 \\<le> lambda\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> lambda", "using C"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. 1 \\<le> lambda", "by auto"], ["proof (state)\nthis:\n  1 \\<le> lambda\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {a..b}; y \\<in> {a..b}\\<rbrakk>\n       \\<Longrightarrow> dist (d x) (d y) \\<le> lambda * dist x y + 4 * C\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> {a..b}; y \\<in> {a..b}\\<rbrakk>\n       \\<Longrightarrow> 1 / lambda * dist x y - 4 * C\n                         \\<le> dist (d x) (d y)\n 3. 0 \\<le> 4 * C", "show \"0 \\<le> 4 * C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> 4 * C", "using C"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. 0 \\<le> 4 * C", "by auto"], ["proof (state)\nthis:\n  0 \\<le> 4 * C\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {a..b}; y \\<in> {a..b}\\<rbrakk>\n       \\<Longrightarrow> dist (d x) (d y) \\<le> lambda * dist x y + 4 * C\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> {a..b}; y \\<in> {a..b}\\<rbrakk>\n       \\<Longrightarrow> 1 / lambda * dist x y - 4 * C\n                         \\<le> dist (d x) (d y)", "have I : \"dist (d x) (d y) \\<le> lambda * dist x y + 4 * C\" if H: \"x \\<in> {a..b}\" \"y \\<in> {a..b}\" \"x < y\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "obtain u where u: \"u \\<in> A - {b}\" \"x \\<in> {u..next_in A u}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<in> A - {b}; x \\<in> {u..next_in A u}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using intervals_decomposition[OF A] H(1)"], ["proof (prove)\nusing this:\n  (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U) = {a..b}\n  x \\<in> {a..b}\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<in> A - {b}; x \\<in> {u..next_in A u}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  u \\<in> A - {b}\n  x \\<in> {u..next_in A u}\n\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "have \"u \\<in> {a..<b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> {a..<b}", "using u(1) A"], ["proof (prove)\nusing this:\n  u \\<in> A - {b}\n  finite A\n  A \\<subseteq> {a..b}\n  a \\<in> A\n  b \\<in> A\n  a < b\n\ngoal (1 subgoal):\n 1. u \\<in> {a..<b}", "by auto"], ["proof (state)\nthis:\n  u \\<in> {a..<b}\n\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "have \"next_in A u \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next_in A u \\<in> A", "using next_in_basics(1)[OF A \\<open>u \\<in> {a..<b}\\<close>]"], ["proof (prove)\nusing this:\n  next_in A u \\<in> A\n\ngoal (1 subgoal):\n 1. next_in A u \\<in> A", "by auto"], ["proof (state)\nthis:\n  next_in A u \\<in> A\n\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "obtain v where v: \"v \\<in> A - {b}\" \"y \\<in> {v..next_in A v}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<in> A - {b}; y \\<in> {v..next_in A v}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using intervals_decomposition[OF A] H(2)"], ["proof (prove)\nusing this:\n  (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U) = {a..b}\n  y \\<in> {a..b}\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<in> A - {b}; y \\<in> {v..next_in A v}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  v \\<in> A - {b}\n  y \\<in> {v..next_in A v}\n\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "have \"v \\<in> {a..<b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> {a..<b}", "using v(1) A"], ["proof (prove)\nusing this:\n  v \\<in> A - {b}\n  finite A\n  A \\<subseteq> {a..b}\n  a \\<in> A\n  b \\<in> A\n  a < b\n\ngoal (1 subgoal):\n 1. v \\<in> {a..<b}", "by auto"], ["proof (state)\nthis:\n  v \\<in> {a..<b}\n\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "have \"u < next_in A v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u < next_in A v", "using H(3) u(2) v(2)"], ["proof (prove)\nusing this:\n  x < y\n  x \\<in> {u..next_in A u}\n  y \\<in> {v..next_in A v}\n\ngoal (1 subgoal):\n 1. u < next_in A v", "by auto"], ["proof (state)\nthis:\n  u < next_in A v\n\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "then"], ["proof (chain)\npicking this:\n  u < next_in A v", "have \"u \\<le> v\""], ["proof (prove)\nusing this:\n  u < next_in A v\n\ngoal (1 subgoal):\n 1. u \\<le> v", "using u(1) next_in_basics(3)[OF A, OF \\<open>v \\<in> {a..<b}\\<close>]"], ["proof (prove)\nusing this:\n  u < next_in A v\n  u \\<in> A - {b}\n  A \\<inter> {v<..<next_in A v} = {}\n\ngoal (1 subgoal):\n 1. u \\<le> v", "by auto"], ["proof (state)\nthis:\n  u \\<le> v\n\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "proof (cases \"u = v\")"], ["proof (state)\ngoal (2 subgoals):\n 1. u = v \\<Longrightarrow> dist (d x) (d y) \\<le> lambda * dist x y + 4 * C\n 2. u \\<noteq> v \\<Longrightarrow>\n    dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "case True"], ["proof (state)\nthis:\n  u = v\n\ngoal (2 subgoals):\n 1. u = v \\<Longrightarrow> dist (d x) (d y) \\<le> lambda * dist x y + 4 * C\n 2. u \\<noteq> v \\<Longrightarrow>\n    dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "have \"dist (d x) (d y) \\<le> lambda * dist x y + C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + C", "apply (rule QI0[OF u])"], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> {u..next_in A u}", "using v(2) True"], ["proof (prove)\nusing this:\n  y \\<in> {v..next_in A v}\n  u = v\n\ngoal (1 subgoal):\n 1. y \\<in> {u..next_in A u}", "by auto"], ["proof (state)\nthis:\n  dist (d x) (d y) \\<le> lambda * dist x y + C\n\ngoal (2 subgoals):\n 1. u = v \\<Longrightarrow> dist (d x) (d y) \\<le> lambda * dist x y + 4 * C\n 2. u \\<noteq> v \\<Longrightarrow>\n    dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "also"], ["proof (state)\nthis:\n  dist (d x) (d y) \\<le> lambda * dist x y + C\n\ngoal (2 subgoals):\n 1. u = v \\<Longrightarrow> dist (d x) (d y) \\<le> lambda * dist x y + 4 * C\n 2. u \\<noteq> v \\<Longrightarrow>\n    dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "have \"... \\<le> lambda * dist x y + 4 * C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda * dist x y + C \\<le> lambda * dist x y + 4 * C", "using C"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. lambda * dist x y + C \\<le> lambda * dist x y + 4 * C", "by auto"], ["proof (state)\nthis:\n  lambda * dist x y + C \\<le> lambda * dist x y + 4 * C\n\ngoal (2 subgoals):\n 1. u = v \\<Longrightarrow> dist (d x) (d y) \\<le> lambda * dist x y + 4 * C\n 2. u \\<noteq> v \\<Longrightarrow>\n    dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "finally"], ["proof (chain)\npicking this:\n  dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "show ?thesis"], ["proof (prove)\nusing this:\n  dist (d x) (d y) \\<le> lambda * dist x y + 4 * C\n\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "by simp"], ["proof (state)\nthis:\n  dist (d x) (d y) \\<le> lambda * dist x y + 4 * C\n\ngoal (1 subgoal):\n 1. u \\<noteq> v \\<Longrightarrow>\n    dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. u \\<noteq> v \\<Longrightarrow>\n    dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "case False"], ["proof (state)\nthis:\n  u \\<noteq> v\n\ngoal (1 subgoal):\n 1. u \\<noteq> v \\<Longrightarrow>\n    dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "then"], ["proof (chain)\npicking this:\n  u \\<noteq> v", "have \"u < v\""], ["proof (prove)\nusing this:\n  u \\<noteq> v\n\ngoal (1 subgoal):\n 1. u < v", "using \\<open>u \\<le> v\\<close>"], ["proof (prove)\nusing this:\n  u \\<noteq> v\n  u \\<le> v\n\ngoal (1 subgoal):\n 1. u < v", "by auto"], ["proof (state)\nthis:\n  u < v\n\ngoal (1 subgoal):\n 1. u \\<noteq> v \\<Longrightarrow>\n    dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "then"], ["proof (chain)\npicking this:\n  u < v", "have \"next_in A u \\<le> v\""], ["proof (prove)\nusing this:\n  u < v\n\ngoal (1 subgoal):\n 1. next_in A u \\<le> v", "using v(1) next_in_basics(3)[OF A, OF \\<open>u \\<in> {a..<b}\\<close>]"], ["proof (prove)\nusing this:\n  u < v\n  v \\<in> A - {b}\n  A \\<inter> {u<..<next_in A u} = {}\n\ngoal (1 subgoal):\n 1. next_in A u \\<le> v", "by auto"], ["proof (state)\nthis:\n  next_in A u \\<le> v\n\ngoal (1 subgoal):\n 1. u \\<noteq> v \\<Longrightarrow>\n    dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "have d1: \"d (next_in A u) = c (next_in A u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (next_in A u) = c (next_in A u)", "using \\<open>next_in A u \\<in> A\\<close>"], ["proof (prove)\nusing this:\n  next_in A u \\<in> A\n\ngoal (1 subgoal):\n 1. d (next_in A u) = c (next_in A u)", "unfolding d_def"], ["proof (prove)\nusing this:\n  next_in A u \\<in> A\n\ngoal (1 subgoal):\n 1. (if next_in A u \\<in> A then c (next_in A u)\n     else geodesic_segment_param\n           {c (prev_in A (next_in A u))--c (next_in A (next_in A u))}\n           (c (prev_in A (next_in A u)))\n           ((next_in A u - prev_in A (next_in A u)) /\n            (next_in A (next_in A u) - prev_in A (next_in A u)) *\n            dist (c (prev_in A (next_in A u)))\n             (c (next_in A (next_in A u))))) =\n    c (next_in A u)", "by auto"], ["proof (state)\nthis:\n  d (next_in A u) = c (next_in A u)\n\ngoal (1 subgoal):\n 1. u \\<noteq> v \\<Longrightarrow>\n    dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "have d2: \"d v = c v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d v = c v", "using v(1)"], ["proof (prove)\nusing this:\n  v \\<in> A - {b}\n\ngoal (1 subgoal):\n 1. d v = c v", "unfolding d_def"], ["proof (prove)\nusing this:\n  v \\<in> A - {b}\n\ngoal (1 subgoal):\n 1. (if v \\<in> A then c v\n     else geodesic_segment_param {c (prev_in A v)--c (next_in A v)}\n           (c (prev_in A v))\n           ((v - prev_in A v) / (next_in A v - prev_in A v) *\n            dist (c (prev_in A v)) (c (next_in A v)))) =\n    c v", "by auto"], ["proof (state)\nthis:\n  d v = c v\n\ngoal (1 subgoal):\n 1. u \\<noteq> v \\<Longrightarrow>\n    dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "have \"dist (d x) (d y) \\<le> dist (d x) (d (next_in A u)) + dist (d (next_in A u)) (d v) + dist (d v) (d y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (d x) (d y)\n    \\<le> dist (d x) (d (next_in A u)) + dist (d (next_in A u)) (d v) +\n          dist (d v) (d y)", "by (intro mono_intros)"], ["proof (state)\nthis:\n  dist (d x) (d y)\n  \\<le> dist (d x) (d (next_in A u)) + dist (d (next_in A u)) (d v) +\n        dist (d v) (d y)\n\ngoal (1 subgoal):\n 1. u \\<noteq> v \\<Longrightarrow>\n    dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "also"], ["proof (state)\nthis:\n  dist (d x) (d y)\n  \\<le> dist (d x) (d (next_in A u)) + dist (d (next_in A u)) (d v) +\n        dist (d v) (d y)\n\ngoal (1 subgoal):\n 1. u \\<noteq> v \\<Longrightarrow>\n    dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "have \"... \\<le> (lambda * dist x (next_in A u) + C) + (lambda * dist (next_in A u) v + C)\n                            + (lambda * dist v y + C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (d x) (d (next_in A u)) + dist (d (next_in A u)) (d v) +\n    dist (d v) (d y)\n    \\<le> lambda * dist x (next_in A u) + C +\n          (lambda * dist (next_in A u) v + C) +\n          (lambda * dist v y + C)", "apply (intro mono_intros)"], ["proof (prove)\ngoal (3 subgoals):\n 1. dist (d x) (d (next_in A u)) \\<le> lambda * dist x (next_in A u) + C\n 2. dist (d (next_in A u)) (d v) \\<le> lambda * dist (next_in A u) v + C\n 3. dist (d v) (d y) \\<le> lambda * dist v y + C", "apply (rule QI0[OF u])"], ["proof (prove)\ngoal (3 subgoals):\n 1. next_in A u \\<in> {u..next_in A u}\n 2. dist (d (next_in A u)) (d v) \\<le> lambda * dist (next_in A u) v + C\n 3. dist (d v) (d y) \\<le> lambda * dist v y + C", "using u(2)"], ["proof (prove)\nusing this:\n  x \\<in> {u..next_in A u}\n\ngoal (3 subgoals):\n 1. next_in A u \\<in> {u..next_in A u}\n 2. dist (d (next_in A u)) (d v) \\<le> lambda * dist (next_in A u) v + C\n 3. dist (d v) (d y) \\<le> lambda * dist v y + C", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist (d (next_in A u)) (d v) \\<le> lambda * dist (next_in A u) v + C\n 2. dist (d v) (d y) \\<le> lambda * dist v y + C", "apply (simp add: d1 d2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist (c (next_in A u)) (c v) \\<le> lambda * dist (next_in A u) v + C\n 2. dist (d v) (d y) \\<le> lambda * dist v y + C", "apply (rule quasi_isometry_onD(1)[OF assms(1)])"], ["proof (prove)\ngoal (3 subgoals):\n 1. next_in A u \\<in> {a..b}\n 2. v \\<in> {a..b}\n 3. dist (d v) (d y) \\<le> lambda * dist v y + C", "using \\<open>next_in A u \\<in> A\\<close> \\<open>A \\<subseteq> {a..b}\\<close>"], ["proof (prove)\nusing this:\n  next_in A u \\<in> A\n  A \\<subseteq> {a..b}\n\ngoal (3 subgoals):\n 1. next_in A u \\<in> {a..b}\n 2. v \\<in> {a..b}\n 3. dist (d v) (d y) \\<le> lambda * dist v y + C", "apply auto[1]"], ["proof (prove)\ngoal (2 subgoals):\n 1. v \\<in> {a..b}\n 2. dist (d v) (d y) \\<le> lambda * dist v y + C", "using \\<open>v \\<in> A - {b}\\<close> \\<open>A \\<subseteq> {a..b}\\<close>"], ["proof (prove)\nusing this:\n  v \\<in> A - {b}\n  A \\<subseteq> {a..b}\n\ngoal (2 subgoals):\n 1. v \\<in> {a..b}\n 2. dist (d v) (d y) \\<le> lambda * dist v y + C", "apply auto[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (d v) (d y) \\<le> lambda * dist v y + C", "apply (rule QI0[OF v(1)])"], ["proof (prove)\ngoal (2 subgoals):\n 1. v \\<in> {v..next_in A v}\n 2. y \\<in> {v..next_in A v}", "using v(2)"], ["proof (prove)\nusing this:\n  y \\<in> {v..next_in A v}\n\ngoal (2 subgoals):\n 1. v \\<in> {v..next_in A v}\n 2. y \\<in> {v..next_in A v}", "by auto"], ["proof (state)\nthis:\n  dist (d x) (d (next_in A u)) + dist (d (next_in A u)) (d v) +\n  dist (d v) (d y)\n  \\<le> lambda * dist x (next_in A u) + C +\n        (lambda * dist (next_in A u) v + C) +\n        (lambda * dist v y + C)\n\ngoal (1 subgoal):\n 1. u \\<noteq> v \\<Longrightarrow>\n    dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "also"], ["proof (state)\nthis:\n  dist (d x) (d (next_in A u)) + dist (d (next_in A u)) (d v) +\n  dist (d v) (d y)\n  \\<le> lambda * dist x (next_in A u) + C +\n        (lambda * dist (next_in A u) v + C) +\n        (lambda * dist v y + C)\n\ngoal (1 subgoal):\n 1. u \\<noteq> v \\<Longrightarrow>\n    dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "have \"... = lambda * dist x y + 3 * C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda * dist x (next_in A u) + C +\n    (lambda * dist (next_in A u) v + C) +\n    (lambda * dist v y + C) =\n    lambda * dist x y + 3 * C", "unfolding dist_real_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda * \\<bar>x - next_in A u\\<bar> + C +\n    (lambda * \\<bar>next_in A u - v\\<bar> + C) +\n    (lambda * \\<bar>v - y\\<bar> + C) =\n    lambda * \\<bar>x - y\\<bar> + 3 * C", "using \\<open>x \\<in> {u..next_in A u}\\<close> \\<open>y \\<in> {v..next_in A v}\\<close> \\<open>x < y\\<close> \\<open>next_in A u \\<le> v\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> {u..next_in A u}\n  y \\<in> {v..next_in A v}\n  x < y\n  next_in A u \\<le> v\n\ngoal (1 subgoal):\n 1. lambda * \\<bar>x - next_in A u\\<bar> + C +\n    (lambda * \\<bar>next_in A u - v\\<bar> + C) +\n    (lambda * \\<bar>v - y\\<bar> + C) =\n    lambda * \\<bar>x - y\\<bar> + 3 * C", "by (auto simp add: algebra_simps)"], ["proof (state)\nthis:\n  lambda * dist x (next_in A u) + C + (lambda * dist (next_in A u) v + C) +\n  (lambda * dist v y + C) =\n  lambda * dist x y + 3 * C\n\ngoal (1 subgoal):\n 1. u \\<noteq> v \\<Longrightarrow>\n    dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "finally"], ["proof (chain)\npicking this:\n  dist (d x) (d y) \\<le> lambda * dist x y + 3 * C", "show ?thesis"], ["proof (prove)\nusing this:\n  dist (d x) (d y) \\<le> lambda * dist x y + 3 * C\n\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "using C"], ["proof (prove)\nusing this:\n  dist (d x) (d y) \\<le> lambda * dist x y + 3 * C\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "by simp"], ["proof (state)\nthis:\n  dist (d x) (d y) \\<le> lambda * dist x y + 4 * C\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dist (d x) (d y) \\<le> lambda * dist x y + 4 * C\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> {a..b}; ?y \\<in> {a..b}; ?x < ?y\\<rbrakk>\n  \\<Longrightarrow> dist (d ?x) (d ?y) \\<le> lambda * dist ?x ?y + 4 * C\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {a..b}; y \\<in> {a..b}\\<rbrakk>\n       \\<Longrightarrow> dist (d x) (d y) \\<le> lambda * dist x y + 4 * C\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> {a..b}; y \\<in> {a..b}\\<rbrakk>\n       \\<Longrightarrow> 1 / lambda * dist x y - 4 * C\n                         \\<le> dist (d x) (d y)", "show \"dist (d x) (d y) \\<le> lambda * dist x y + 4 * C\" if H: \"x \\<in> {a..b}\" \"y \\<in> {a..b}\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "consider \"x < y\" | \"x = y\" | \"x > y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < y \\<Longrightarrow> thesis; x = y \\<Longrightarrow> thesis;\n     y < x \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by linarith"], ["proof (state)\nthis:\n  \\<lbrakk>x < y \\<Longrightarrow> ?thesis; x = y \\<Longrightarrow> ?thesis;\n   y < x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>x < y \\<Longrightarrow> ?thesis; x = y \\<Longrightarrow> ?thesis;\n   y < x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>x < y \\<Longrightarrow> ?thesis; x = y \\<Longrightarrow> ?thesis;\n   y < x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "proof (cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow> dist (d x) (d y) \\<le> lambda * dist x y + 4 * C\n 2. x = y \\<Longrightarrow> dist (d x) (d y) \\<le> lambda * dist x y + 4 * C\n 3. y < x \\<Longrightarrow> dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "case 1"], ["proof (state)\nthis:\n  x < y\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow> dist (d x) (d y) \\<le> lambda * dist x y + 4 * C\n 2. x = y \\<Longrightarrow> dist (d x) (d y) \\<le> lambda * dist x y + 4 * C\n 3. y < x \\<Longrightarrow> dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "then"], ["proof (chain)\npicking this:\n  x < y", "show ?thesis"], ["proof (prove)\nusing this:\n  x < y\n\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "using I[OF H(1) H(2) 1]"], ["proof (prove)\nusing this:\n  x < y\n  dist (d x) (d y) \\<le> lambda * dist x y + 4 * C\n\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "by simp"], ["proof (state)\nthis:\n  dist (d x) (d y) \\<le> lambda * dist x y + 4 * C\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow> dist (d x) (d y) \\<le> lambda * dist x y + 4 * C\n 2. y < x \\<Longrightarrow> dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow> dist (d x) (d y) \\<le> lambda * dist x y + 4 * C\n 2. y < x \\<Longrightarrow> dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "case 2"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow> dist (d x) (d y) \\<le> lambda * dist x y + 4 * C\n 2. y < x \\<Longrightarrow> dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "unfolding 2"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (d y) (d y) \\<le> lambda * dist y y + 4 * C", "using C"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. dist (d y) (d y) \\<le> lambda * dist y y + 4 * C", "by auto"], ["proof (state)\nthis:\n  dist (d x) (d y) \\<le> lambda * dist x y + 4 * C\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "case 3"], ["proof (state)\nthis:\n  y < x\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "using I [OF H(2) H(1) 3]"], ["proof (prove)\nusing this:\n  dist (d y) (d x) \\<le> lambda * dist y x + 4 * C\n\ngoal (1 subgoal):\n 1. dist (d x) (d y) \\<le> lambda * dist x y + 4 * C", "by (simp add: metric_space_class.dist_commute)"], ["proof (state)\nthis:\n  dist (d x) (d y) \\<le> lambda * dist x y + 4 * C\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dist (d x) (d y) \\<le> lambda * dist x y + 4 * C\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> {a..b}; ?y \\<in> {a..b}\\<rbrakk>\n  \\<Longrightarrow> dist (d ?x) (d ?y) \\<le> lambda * dist ?x ?y + 4 * C\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {a..b}; y \\<in> {a..b}\\<rbrakk>\n       \\<Longrightarrow> 1 / lambda * dist x y - 4 * C\n                         \\<le> dist (d x) (d y)", "text \\<open>The lower bound is more tricky. We separate the case where $x$ and $y$ are in the same\n      interval, when they are in different nearby intervals, and when they are in different\n      separated intervals. The latter case is more difficult. In this case, one of the intervals\n      has length $C/\\lambda$ and the other one has length at most $3/2\\cdot C/\\lambda$. There,\n      we approximate $dist (d x) (d y)$ by $dist (d u') (d v')$ where $u'$ and $v'$ are suitable\n      endpoints of the intervals containing respectively $x$ and $y$. We use the inner endpoint\n      (between $x$ and $y$) if the distance between $x$ or $y$ and this point is less than $2/5$\n      of the length of the interval, and the outer endpoint otherwise. The reason is that, with\n      the outer endpoints, we get right away an upper bound for the distance between $x$ and $y$,\n      while this is not the case with the inner endpoints where there is an additional error.\n      The equilibrium is reached at proportion $2/5$. \\<close>"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> {a..b}; ?y \\<in> {a..b}\\<rbrakk>\n  \\<Longrightarrow> dist (d ?x) (d ?y) \\<le> lambda * dist ?x ?y + 4 * C\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {a..b}; y \\<in> {a..b}\\<rbrakk>\n       \\<Longrightarrow> 1 / lambda * dist x y - 4 * C\n                         \\<le> dist (d x) (d y)", "have J : \"dist (d x) (d y) \\<ge> (1/lambda) * dist x y - 4 * C\" if H: \"x \\<in> {a..b}\" \"y \\<in> {a..b}\" \"x < y\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "obtain u where u: \"u \\<in> A - {b}\" \"x \\<in> {u..next_in A u}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<in> A - {b}; x \\<in> {u..next_in A u}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using intervals_decomposition[OF A] H(1)"], ["proof (prove)\nusing this:\n  (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U) = {a..b}\n  x \\<in> {a..b}\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<in> A - {b}; x \\<in> {u..next_in A u}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  u \\<in> A - {b}\n  x \\<in> {u..next_in A u}\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"u \\<in> {a..<b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> {a..<b}", "using u(1) A"], ["proof (prove)\nusing this:\n  u \\<in> A - {b}\n  finite A\n  A \\<subseteq> {a..b}\n  a \\<in> A\n  b \\<in> A\n  a < b\n\ngoal (1 subgoal):\n 1. u \\<in> {a..<b}", "by auto"], ["proof (state)\nthis:\n  u \\<in> {a..<b}\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"next_in A u \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next_in A u \\<in> A", "using next_in_basics(1)[OF A \\<open>u \\<in> {a..<b}\\<close>]"], ["proof (prove)\nusing this:\n  next_in A u \\<in> A\n\ngoal (1 subgoal):\n 1. next_in A u \\<in> A", "by auto"], ["proof (state)\nthis:\n  next_in A u \\<in> A\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "obtain v where v: \"v \\<in> A - {b}\" \"y \\<in> {v..next_in A v}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<in> A - {b}; y \\<in> {v..next_in A v}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using intervals_decomposition[OF A] H(2)"], ["proof (prove)\nusing this:\n  (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U) = {a..b}\n  y \\<in> {a..b}\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<in> A - {b}; y \\<in> {v..next_in A v}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  v \\<in> A - {b}\n  y \\<in> {v..next_in A v}\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"v \\<in> {a..<b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> {a..<b}", "using v(1) A"], ["proof (prove)\nusing this:\n  v \\<in> A - {b}\n  finite A\n  A \\<subseteq> {a..b}\n  a \\<in> A\n  b \\<in> A\n  a < b\n\ngoal (1 subgoal):\n 1. v \\<in> {a..<b}", "by auto"], ["proof (state)\nthis:\n  v \\<in> {a..<b}\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"next_in A v \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next_in A v \\<in> A", "using next_in_basics(1)[OF A \\<open>v \\<in> {a..<b}\\<close>]"], ["proof (prove)\nusing this:\n  next_in A v \\<in> A\n\ngoal (1 subgoal):\n 1. next_in A v \\<in> A", "by auto"], ["proof (state)\nthis:\n  next_in A v \\<in> A\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"u < next_in A v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u < next_in A v", "using H(3) u(2) v(2)"], ["proof (prove)\nusing this:\n  x < y\n  x \\<in> {u..next_in A u}\n  y \\<in> {v..next_in A v}\n\ngoal (1 subgoal):\n 1. u < next_in A v", "by auto"], ["proof (state)\nthis:\n  u < next_in A v\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "then"], ["proof (chain)\npicking this:\n  u < next_in A v", "have \"u \\<le> v\""], ["proof (prove)\nusing this:\n  u < next_in A v\n\ngoal (1 subgoal):\n 1. u \\<le> v", "using u(1) next_in_basics(3)[OF A, OF \\<open>v \\<in> {a..<b}\\<close>]"], ["proof (prove)\nusing this:\n  u < next_in A v\n  u \\<in> A - {b}\n  A \\<inter> {v<..<next_in A v} = {}\n\ngoal (1 subgoal):\n 1. u \\<le> v", "by auto"], ["proof (state)\nthis:\n  u \\<le> v\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "consider \"v = u\" | \"v = next_in A u\" | \"v \\<noteq> u \\<and> v \\<noteq> next_in A u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>v = u \\<Longrightarrow> thesis;\n     v = next_in A u \\<Longrightarrow> thesis;\n     v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>v = u \\<Longrightarrow> ?thesis;\n   v = next_in A u \\<Longrightarrow> ?thesis;\n   v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>v = u \\<Longrightarrow> ?thesis;\n   v = next_in A u \\<Longrightarrow> ?thesis;\n   v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>v = u \\<Longrightarrow> ?thesis;\n   v = next_in A u \\<Longrightarrow> ?thesis;\n   v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "proof (cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. v = u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. v = next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "case 1"], ["proof (state)\nthis:\n  v = u\n\ngoal (3 subgoals):\n 1. v = u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. v = next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"(1/lambda) * dist x y - 4 * C \\<le> lambda * dist x y - 4 * C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> lambda * dist x y - 4 * C", "apply (intro mono_intros)"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> dist x y", "by auto"], ["proof (state)\nthis:\n  1 / lambda * dist x y - 4 * C \\<le> lambda * dist x y - 4 * C\n\ngoal (3 subgoals):\n 1. v = u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. v = next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  1 / lambda * dist x y - 4 * C \\<le> lambda * dist x y - 4 * C\n\ngoal (3 subgoals):\n 1. v = u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. v = next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... \\<le> lambda * (3/2 * C/lambda) - 3/2 * C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda * dist x y - 4 * C\n    \\<le> lambda * (3 / 2 * C / lambda) - 3 / 2 * C", "apply (intro mono_intros)"], ["proof (prove)\ngoal (4 subgoals):\n 1. dist x y \\<le> 3 / 2 * C / lambda\n 2. 0 \\<le> lambda\n 3. 3 / 2 \\<le> 4\n 4. 0 \\<le> C", "using u(2) v(2)"], ["proof (prove)\nusing this:\n  x \\<in> {u..next_in A u}\n  y \\<in> {v..next_in A v}\n\ngoal (4 subgoals):\n 1. dist x y \\<le> 3 / 2 * C / lambda\n 2. 0 \\<le> lambda\n 3. 3 / 2 \\<le> 4\n 4. 0 \\<le> C", "unfolding 1"], ["proof (prove)\nusing this:\n  x \\<in> {u..next_in A u}\n  y \\<in> {u..next_in A u}\n\ngoal (4 subgoals):\n 1. dist x y \\<le> 3 / 2 * C / lambda\n 2. 0 \\<le> lambda\n 3. 3 / 2 \\<le> 4\n 4. 0 \\<le> C", "using C gap[OF u(1)] dist_real_def \\<open>x < y\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> {u..next_in A u}\n  y \\<in> {u..next_in A u}\n  0 < C\n  1 \\<le> lambda\n  next_in A u - u \\<in> {C / lambda..3 / 2 * C / lambda}\n  dist ?x ?y = \\<bar>?x - ?y\\<bar>\n  x < y\n\ngoal (4 subgoals):\n 1. dist x y \\<le> 3 / 2 * C / lambda\n 2. 0 \\<le> lambda\n 3. 3 / 2 \\<le> 4\n 4. 0 \\<le> C", "by auto"], ["proof (state)\nthis:\n  lambda * dist x y - 4 * C \\<le> lambda * (3 / 2 * C / lambda) - 3 / 2 * C\n\ngoal (3 subgoals):\n 1. v = u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. v = next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  lambda * dist x y - 4 * C \\<le> lambda * (3 / 2 * C / lambda) - 3 / 2 * C\n\ngoal (3 subgoals):\n 1. v = u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. v = next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda * (3 / 2 * C / lambda) - 3 / 2 * C = 0", "using C"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. lambda * (3 / 2 * C / lambda) - 3 / 2 * C = 0", "by auto"], ["proof (state)\nthis:\n  lambda * (3 / 2 * C / lambda) - 3 / 2 * C = 0\n\ngoal (3 subgoals):\n 1. v = u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. v = next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  lambda * (3 / 2 * C / lambda) - 3 / 2 * C = 0\n\ngoal (3 subgoals):\n 1. v = u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. v = next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... \\<le> dist (d x) (d y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> dist (d x) (d y)", "by auto"], ["proof (state)\nthis:\n  0 \\<le> dist (d x) (d y)\n\ngoal (3 subgoals):\n 1. v = u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. v = next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "finally"], ["proof (chain)\npicking this:\n  1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "show ?thesis"], ["proof (prove)\nusing this:\n  1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "by simp"], ["proof (state)\nthis:\n  1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n\ngoal (2 subgoals):\n 1. v = next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. v = next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "case 2"], ["proof (state)\nthis:\n  v = next_in A u\n\ngoal (2 subgoals):\n 1. v = next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"dist x y \\<le> dist x (next_in A u) + dist v y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x y \\<le> dist x (next_in A u) + dist v y", "unfolding 2"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x y \\<le> dist x (next_in A u) + dist (next_in A u) y", "by (intro mono_intros)"], ["proof (state)\nthis:\n  dist x y \\<le> dist x (next_in A u) + dist v y\n\ngoal (2 subgoals):\n 1. v = next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  dist x y \\<le> dist x (next_in A u) + dist v y\n\ngoal (2 subgoals):\n 1. v = next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... \\<le> 3/2 * C/lambda + 3/2 * C/lambda\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x (next_in A u) + dist v y\n    \\<le> 3 / 2 * C / lambda + 3 / 2 * C / lambda", "apply (intro mono_intros)"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist x (next_in A u) \\<le> 3 / 2 * C / lambda\n 2. dist v y \\<le> 3 / 2 * C / lambda", "unfolding dist_real_def"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<bar>x - next_in A u\\<bar> \\<le> 3 / 2 * C / lambda\n 2. \\<bar>v - y\\<bar> \\<le> 3 / 2 * C / lambda", "using u(2) v(2) gap[OF u(1)] gap[OF v(1)]"], ["proof (prove)\nusing this:\n  x \\<in> {u..next_in A u}\n  y \\<in> {v..next_in A v}\n  next_in A u - u \\<in> {C / lambda..3 / 2 * C / lambda}\n  next_in A v - v \\<in> {C / lambda..3 / 2 * C / lambda}\n\ngoal (2 subgoals):\n 1. \\<bar>x - next_in A u\\<bar> \\<le> 3 / 2 * C / lambda\n 2. \\<bar>v - y\\<bar> \\<le> 3 / 2 * C / lambda", "by auto"], ["proof (state)\nthis:\n  dist x (next_in A u) + dist v y\n  \\<le> 3 / 2 * C / lambda + 3 / 2 * C / lambda\n\ngoal (2 subgoals):\n 1. v = next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "finally"], ["proof (chain)\npicking this:\n  dist x y \\<le> 3 / 2 * C / lambda + 3 / 2 * C / lambda", "have *: \"dist x y \\<le> 3 * C/lambda\""], ["proof (prove)\nusing this:\n  dist x y \\<le> 3 / 2 * C / lambda + 3 / 2 * C / lambda\n\ngoal (1 subgoal):\n 1. dist x y \\<le> 3 * C / lambda", "by auto"], ["proof (state)\nthis:\n  dist x y \\<le> 3 * C / lambda\n\ngoal (2 subgoals):\n 1. v = next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"(1/lambda) * dist x y - 4 * C \\<le> lambda * dist x y - 4 * C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> lambda * dist x y - 4 * C", "apply (intro mono_intros)"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> dist x y", "by auto"], ["proof (state)\nthis:\n  1 / lambda * dist x y - 4 * C \\<le> lambda * dist x y - 4 * C\n\ngoal (2 subgoals):\n 1. v = next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  1 / lambda * dist x y - 4 * C \\<le> lambda * dist x y - 4 * C\n\ngoal (2 subgoals):\n 1. v = next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... \\<le> lambda * (3 * C/lambda) - 3 * C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda * dist x y - 4 * C \\<le> lambda * (3 * C / lambda) - 3 * C", "apply (intro mono_intros)"], ["proof (prove)\ngoal (4 subgoals):\n 1. dist x y \\<le> 3 * C / lambda\n 2. 0 \\<le> lambda\n 3. 3 \\<le> 4\n 4. 0 \\<le> C", "using * C"], ["proof (prove)\nusing this:\n  dist x y \\<le> 3 * C / lambda\n  0 < C\n  1 \\<le> lambda\n\ngoal (4 subgoals):\n 1. dist x y \\<le> 3 * C / lambda\n 2. 0 \\<le> lambda\n 3. 3 \\<le> 4\n 4. 0 \\<le> C", "by auto"], ["proof (state)\nthis:\n  lambda * dist x y - 4 * C \\<le> lambda * (3 * C / lambda) - 3 * C\n\ngoal (2 subgoals):\n 1. v = next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  lambda * dist x y - 4 * C \\<le> lambda * (3 * C / lambda) - 3 * C\n\ngoal (2 subgoals):\n 1. v = next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lambda * (3 * C / lambda) - 3 * C = 0", "using C"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. lambda * (3 * C / lambda) - 3 * C = 0", "by auto"], ["proof (state)\nthis:\n  lambda * (3 * C / lambda) - 3 * C = 0\n\ngoal (2 subgoals):\n 1. v = next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  lambda * (3 * C / lambda) - 3 * C = 0\n\ngoal (2 subgoals):\n 1. v = next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... \\<le> dist (d x) (d y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> dist (d x) (d y)", "by auto"], ["proof (state)\nthis:\n  0 \\<le> dist (d x) (d y)\n\ngoal (2 subgoals):\n 1. v = next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "finally"], ["proof (chain)\npicking this:\n  1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "show ?thesis"], ["proof (prove)\nusing this:\n  1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "by simp"], ["proof (state)\nthis:\n  1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n\ngoal (1 subgoal):\n 1. v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "case 3"], ["proof (state)\nthis:\n  v \\<noteq> u \\<and> v \\<noteq> next_in A u\n\ngoal (1 subgoal):\n 1. v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "then"], ["proof (chain)\npicking this:\n  v \\<noteq> u \\<and> v \\<noteq> next_in A u", "have \"u < v\""], ["proof (prove)\nusing this:\n  v \\<noteq> u \\<and> v \\<noteq> next_in A u\n\ngoal (1 subgoal):\n 1. u < v", "using \\<open>u \\<le> v\\<close>"], ["proof (prove)\nusing this:\n  v \\<noteq> u \\<and> v \\<noteq> next_in A u\n  u \\<le> v\n\ngoal (1 subgoal):\n 1. u < v", "by auto"], ["proof (state)\nthis:\n  u < v\n\ngoal (1 subgoal):\n 1. v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "then"], ["proof (chain)\npicking this:\n  u < v", "have *: \"next_in A u < v\""], ["proof (prove)\nusing this:\n  u < v\n\ngoal (1 subgoal):\n 1. next_in A u < v", "using v(1) next_in_basics(3)[OF A \\<open>u \\<in> {a..<b}\\<close>] 3"], ["proof (prove)\nusing this:\n  u < v\n  v \\<in> A - {b}\n  A \\<inter> {u<..<next_in A u} = {}\n  v \\<noteq> u \\<and> v \\<noteq> next_in A u\n\ngoal (1 subgoal):\n 1. next_in A u < v", "by auto"], ["proof (state)\nthis:\n  next_in A u < v\n\ngoal (1 subgoal):\n 1. v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have nu: \"next_in A u = u + C/lambda\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next_in A u = u + C / lambda", "proof (rule nx)"], ["proof (state)\ngoal (4 subgoals):\n 1. u \\<in> A\n 2. u \\<noteq> b\n 3. u \\<noteq> b'\n 4. u \\<noteq> p N", "show \"u \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> A", "using u(1)"], ["proof (prove)\nusing this:\n  u \\<in> A - {b}\n\ngoal (1 subgoal):\n 1. u \\<in> A", "by auto"], ["proof (state)\nthis:\n  u \\<in> A\n\ngoal (3 subgoals):\n 1. u \\<noteq> b\n 2. u \\<noteq> b'\n 3. u \\<noteq> p N", "show \"u \\<noteq> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<noteq> b", "using u(1)"], ["proof (prove)\nusing this:\n  u \\<in> A - {b}\n\ngoal (1 subgoal):\n 1. u \\<noteq> b", "by auto"], ["proof (state)\nthis:\n  u \\<noteq> b\n\ngoal (2 subgoals):\n 1. u \\<noteq> b'\n 2. u \\<noteq> p N", "show \"u \\<noteq> b'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<noteq> b'", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. u = b' \\<Longrightarrow> False", "assume H: \"u = b'\""], ["proof (state)\nthis:\n  u = b'\n\ngoal (1 subgoal):\n 1. u = b' \\<Longrightarrow> False", "have \"b < v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b < v", "using *"], ["proof (prove)\nusing this:\n  next_in A u < v\n\ngoal (1 subgoal):\n 1. b < v", "unfolding H nb'"], ["proof (prove)\nusing this:\n  b < v\n\ngoal (1 subgoal):\n 1. b < v", "by simp"], ["proof (state)\nthis:\n  b < v\n\ngoal (1 subgoal):\n 1. u = b' \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  b < v", "show False"], ["proof (prove)\nusing this:\n  b < v\n\ngoal (1 subgoal):\n 1. False", "using \\<open>v \\<in> {a..<b}\\<close>"], ["proof (prove)\nusing this:\n  b < v\n  v \\<in> {a..<b}\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  u \\<noteq> b'\n\ngoal (1 subgoal):\n 1. u \\<noteq> p N", "show \"u \\<noteq> p N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<noteq> p N", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. u = p N \\<Longrightarrow> False", "assume H: \"u = p N\""], ["proof (state)\nthis:\n  u = p N\n\ngoal (1 subgoal):\n 1. u = p N \\<Longrightarrow> False", "have \"b' < v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b' < v", "using *"], ["proof (prove)\nusing this:\n  next_in A u < v\n\ngoal (1 subgoal):\n 1. b' < v", "unfolding H npN"], ["proof (prove)\nusing this:\n  b' < v\n\ngoal (1 subgoal):\n 1. b' < v", "by simp"], ["proof (state)\nthis:\n  b' < v\n\ngoal (1 subgoal):\n 1. u = p N \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  b' < v", "have \"next_in A b' \\<le> v\""], ["proof (prove)\nusing this:\n  b' < v\n\ngoal (1 subgoal):\n 1. next_in A b' \\<le> v", "using next_in_basics(3)[OF A \\<open>b' \\<in> {a..<b}\\<close>] v"], ["proof (prove)\nusing this:\n  b' < v\n  A \\<inter> {b'<..<next_in A b'} = {}\n  v \\<in> A - {b}\n  y \\<in> {v..next_in A v}\n\ngoal (1 subgoal):\n 1. next_in A b' \\<le> v", "by force"], ["proof (state)\nthis:\n  next_in A b' \\<le> v\n\ngoal (1 subgoal):\n 1. u = p N \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  next_in A b' \\<le> v", "show False"], ["proof (prove)\nusing this:\n  next_in A b' \\<le> v\n\ngoal (1 subgoal):\n 1. False", "unfolding nb'"], ["proof (prove)\nusing this:\n  b \\<le> v\n\ngoal (1 subgoal):\n 1. False", "using \\<open>v \\<in> {a..<b}\\<close>"], ["proof (prove)\nusing this:\n  b \\<le> v\n  v \\<in> {a..<b}\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  u \\<noteq> p N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  next_in A u = u + C / lambda\n\ngoal (1 subgoal):\n 1. v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have nv: \"next_in A v \\<le> v + 3/2 * C/lambda\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next_in A v \\<le> v + 3 / 2 * C / lambda", "using gap[OF v(1)]"], ["proof (prove)\nusing this:\n  next_in A v - v \\<in> {C / lambda..3 / 2 * C / lambda}\n\ngoal (1 subgoal):\n 1. next_in A v \\<le> v + 3 / 2 * C / lambda", "by auto"], ["proof (state)\nthis:\n  next_in A v \\<le> v + 3 / 2 * C / lambda\n\ngoal (1 subgoal):\n 1. v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have d: \"d u = c u\" \"d (next_in A u) = c (next_in A u)\" \"d v = c v\" \"d (next_in A v) = c (next_in A v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (d u = c u &&& d (next_in A u) = c (next_in A u)) &&&\n    d v = c v &&& d (next_in A v) = c (next_in A v)", "using \\<open>u \\<in> A - {b}\\<close> \\<open>next_in A u \\<in> A\\<close> \\<open>v \\<in> A - {b}\\<close> \\<open>next_in A v \\<in> A\\<close>"], ["proof (prove)\nusing this:\n  u \\<in> A - {b}\n  next_in A u \\<in> A\n  v \\<in> A - {b}\n  next_in A v \\<in> A\n\ngoal (1 subgoal):\n 1. (d u = c u &&& d (next_in A u) = c (next_in A u)) &&&\n    d v = c v &&& d (next_in A v) = c (next_in A v)", "unfolding d_def"], ["proof (prove)\nusing this:\n  u \\<in> A - {b}\n  next_in A u \\<in> A\n  v \\<in> A - {b}\n  next_in A v \\<in> A\n\ngoal (1 subgoal):\n 1. ((if u \\<in> A then c u\n      else geodesic_segment_param {c (prev_in A u)--c (next_in A u)}\n            (c (prev_in A u))\n            ((u - prev_in A u) / (next_in A u - prev_in A u) *\n             dist (c (prev_in A u)) (c (next_in A u)))) =\n     c u &&&\n     (if next_in A u \\<in> A then c (next_in A u)\n      else geodesic_segment_param\n            {c (prev_in A (next_in A u))--c (next_in A (next_in A u))}\n            (c (prev_in A (next_in A u)))\n            ((next_in A u - prev_in A (next_in A u)) /\n             (next_in A (next_in A u) - prev_in A (next_in A u)) *\n             dist (c (prev_in A (next_in A u)))\n              (c (next_in A (next_in A u))))) =\n     c (next_in A u)) &&&\n    (if v \\<in> A then c v\n     else geodesic_segment_param {c (prev_in A v)--c (next_in A v)}\n           (c (prev_in A v))\n           ((v - prev_in A v) / (next_in A v - prev_in A v) *\n            dist (c (prev_in A v)) (c (next_in A v)))) =\n    c v &&&\n    (if next_in A v \\<in> A then c (next_in A v)\n     else geodesic_segment_param\n           {c (prev_in A (next_in A v))--c (next_in A (next_in A v))}\n           (c (prev_in A (next_in A v)))\n           ((next_in A v - prev_in A (next_in A v)) /\n            (next_in A (next_in A v) - prev_in A (next_in A v)) *\n            dist (c (prev_in A (next_in A v)))\n             (c (next_in A (next_in A v))))) =\n    c (next_in A v)", "by auto"], ["proof (state)\nthis:\n  d u = c u\n  d (next_in A u) = c (next_in A u)\n  d v = c v\n  d (next_in A v) = c (next_in A v)\n\ngoal (1 subgoal):\n 1. v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "text \\<open>The interval containing $x$ has length $C/\\lambda$, while the interval containing\n          $y$ has length at most $\\leq 3/2 C/\\lambda$. Therefore, $x$ is at proportion $2/5$ of the inner point\n          if $x > u + (3/5) C/\\lambda$, and $y$ is at proportion $2/5$ of the inner point if\n          $y < v + (2/5) \\cdot 3/2 \\cdot C/\\lambda = v + (3/5)C/\\lambda$.\\<close>"], ["proof (state)\nthis:\n  d u = c u\n  d (next_in A u) = c (next_in A u)\n  d v = c v\n  d (next_in A v) = c (next_in A v)\n\ngoal (1 subgoal):\n 1. v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "consider \"x \\<le> u + (3/5) * C/lambda \\<and> y \\<le> v + (3/5) * C/lambda\"\n                 | \"x \\<ge> u + (3/5) * C/lambda \\<and> y \\<le> v + (3/5) * C/lambda\"\n                 | \"x \\<le> u + (3/5) * C/lambda \\<and> y \\<ge> v + (3/5) * C/lambda\"\n                 | \"x \\<ge> u + (3/5) * C/lambda \\<and> y \\<ge> v + (3/5) * C/lambda\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<le> u + 3 / 5 * C / lambda \\<and>\n             y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n             thesis;\n     u + 3 / 5 * C / lambda \\<le> x \\<and>\n     y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n     thesis;\n     x \\<le> u + 3 / 5 * C / lambda \\<and>\n     v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n     thesis;\n     u + 3 / 5 * C / lambda \\<le> x \\<and>\n     v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by linarith"], ["proof (state)\nthis:\n  \\<lbrakk>x \\<le> u + 3 / 5 * C / lambda \\<and>\n           y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n           ?thesis;\n   u + 3 / 5 * C / lambda \\<le> x \\<and>\n   y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n   ?thesis;\n   x \\<le> u + 3 / 5 * C / lambda \\<and>\n   v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n   ?thesis;\n   u + 3 / 5 * C / lambda \\<le> x \\<and>\n   v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. v \\<noteq> u \\<and> v \\<noteq> next_in A u \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>x \\<le> u + 3 / 5 * C / lambda \\<and>\n           y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n           ?thesis;\n   u + 3 / 5 * C / lambda \\<le> x \\<and>\n   y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n   ?thesis;\n   x \\<le> u + 3 / 5 * C / lambda \\<and>\n   v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n   ?thesis;\n   u + 3 / 5 * C / lambda \\<le> x \\<and>\n   v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>x \\<le> u + 3 / 5 * C / lambda \\<and>\n           y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n           ?thesis;\n   u + 3 / 5 * C / lambda \\<le> x \\<and>\n   y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n   ?thesis;\n   x \\<le> u + 3 / 5 * C / lambda \\<and>\n   v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n   ?thesis;\n   u + 3 / 5 * C / lambda \\<le> x \\<and>\n   v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "proof (cases)"], ["proof (state)\ngoal (4 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 4. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "case 1"], ["proof (state)\nthis:\n  x \\<le> u + 3 / 5 * C / lambda \\<and> y \\<le> v + 3 / 5 * C / lambda\n\ngoal (4 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 4. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"(1/lambda) * dist u v - C \\<le> dist (c u) (c v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * dist u v - C \\<le> dist (c u) (c v)", "apply (rule quasi_isometry_onD(2)[OF assms(1)])"], ["proof (prove)\ngoal (2 subgoals):\n 1. u \\<in> {a..b}\n 2. v \\<in> {a..b}", "using \\<open>u \\<in> A - {b}\\<close> \\<open>v \\<in> A - {b}\\<close> \\<open>A \\<subseteq> {a..b}\\<close>"], ["proof (prove)\nusing this:\n  u \\<in> A - {b}\n  v \\<in> A - {b}\n  A \\<subseteq> {a..b}\n\ngoal (2 subgoals):\n 1. u \\<in> {a..b}\n 2. v \\<in> {a..b}", "by auto"], ["proof (state)\nthis:\n  1 / lambda * dist u v - C \\<le> dist (c u) (c v)\n\ngoal (4 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 4. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  1 / lambda * dist u v - C \\<le> dist (c u) (c v)\n\ngoal (4 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 4. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... = dist (d u) (d v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (c u) (c v) = dist (d u) (d v)", "using d"], ["proof (prove)\nusing this:\n  d u = c u\n  d (next_in A u) = c (next_in A u)\n  d v = c v\n  d (next_in A v) = c (next_in A v)\n\ngoal (1 subgoal):\n 1. dist (c u) (c v) = dist (d u) (d v)", "by auto"], ["proof (state)\nthis:\n  dist (c u) (c v) = dist (d u) (d v)\n\ngoal (4 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 4. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  dist (c u) (c v) = dist (d u) (d v)\n\ngoal (4 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 4. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... \\<le> dist (d u) (d x) + dist (d x) (d y) + dist (d y) (d v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (d u) (d v)\n    \\<le> dist (d u) (d x) + dist (d x) (d y) + dist (d y) (d v)", "by (intro mono_intros)"], ["proof (state)\nthis:\n  dist (d u) (d v)\n  \\<le> dist (d u) (d x) + dist (d x) (d y) + dist (d y) (d v)\n\ngoal (4 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 4. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  dist (d u) (d v)\n  \\<le> dist (d u) (d x) + dist (d x) (d y) + dist (d y) (d v)\n\ngoal (4 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 4. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... \\<le> (2 * lambda * dist u x) + dist (d x) (d y) + (2 * lambda * dist y v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (d u) (d x) + dist (d x) (d y) + dist (d y) (d v)\n    \\<le> 2 * lambda * dist u x + dist (d x) (d y) + 2 * lambda * dist y v", "apply (intro mono_intros)"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist (d u) (d x) \\<le> 2 * lambda * dist u x\n 2. dist (d y) (d v) \\<le> 2 * lambda * dist y v", "apply (rule lipschitz_onD[OF lip[OF u(1)]])"], ["proof (prove)\ngoal (3 subgoals):\n 1. u \\<in> {u..next_in A u}\n 2. x \\<in> {u..next_in A u}\n 3. dist (d y) (d v) \\<le> 2 * lambda * dist y v", "using u(2)"], ["proof (prove)\nusing this:\n  x \\<in> {u..next_in A u}\n\ngoal (3 subgoals):\n 1. u \\<in> {u..next_in A u}\n 2. x \\<in> {u..next_in A u}\n 3. dist (d y) (d v) \\<le> 2 * lambda * dist y v", "apply auto[1]"], ["proof (prove)\ngoal (2 subgoals):\n 1. x \\<in> {u..next_in A u}\n 2. dist (d y) (d v) \\<le> 2 * lambda * dist y v", "using u(2)"], ["proof (prove)\nusing this:\n  x \\<in> {u..next_in A u}\n\ngoal (2 subgoals):\n 1. x \\<in> {u..next_in A u}\n 2. dist (d y) (d v) \\<le> 2 * lambda * dist y v", "apply auto[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (d y) (d v) \\<le> 2 * lambda * dist y v", "apply (rule lipschitz_onD[OF lip[OF v(1)]])"], ["proof (prove)\ngoal (2 subgoals):\n 1. y \\<in> {v..next_in A v}\n 2. v \\<in> {v..next_in A v}", "using v(2)"], ["proof (prove)\nusing this:\n  y \\<in> {v..next_in A v}\n\ngoal (2 subgoals):\n 1. y \\<in> {v..next_in A v}\n 2. v \\<in> {v..next_in A v}", "by auto"], ["proof (state)\nthis:\n  dist (d u) (d x) + dist (d x) (d y) + dist (d y) (d v)\n  \\<le> 2 * lambda * dist u x + dist (d x) (d y) + 2 * lambda * dist y v\n\ngoal (4 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 4. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  dist (d u) (d x) + dist (d x) (d y) + dist (d y) (d v)\n  \\<le> 2 * lambda * dist u x + dist (d x) (d y) + 2 * lambda * dist y v\n\ngoal (4 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 4. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... \\<le> (2 * lambda * (3/5 * C/lambda)) + dist (d x) (d y) + (2 * lambda * (3/5 * C/lambda))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * lambda * dist u x + dist (d x) (d y) + 2 * lambda * dist y v\n    \\<le> 2 * lambda * (3 / 5 * C / lambda) + dist (d x) (d y) +\n          2 * lambda * (3 / 5 * C / lambda)", "apply (intro mono_intros)"], ["proof (prove)\ngoal (4 subgoals):\n 1. dist u x \\<le> 3 / 5 * C / lambda\n 2. 0 \\<le> 2 * lambda\n 3. dist y v \\<le> 3 / 5 * C / lambda\n 4. 0 \\<le> 2 * lambda", "unfolding dist_real_def"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<bar>u - x\\<bar> \\<le> 3 / 5 * C / lambda\n 2. 0 \\<le> 2 * lambda\n 3. \\<bar>y - v\\<bar> \\<le> 3 / 5 * C / lambda\n 4. 0 \\<le> 2 * lambda", "using 1 u v C"], ["proof (prove)\nusing this:\n  x \\<le> u + 3 / 5 * C / lambda \\<and> y \\<le> v + 3 / 5 * C / lambda\n  u \\<in> A - {b}\n  x \\<in> {u..next_in A u}\n  v \\<in> A - {b}\n  y \\<in> {v..next_in A v}\n  0 < C\n  1 \\<le> lambda\n\ngoal (4 subgoals):\n 1. \\<bar>u - x\\<bar> \\<le> 3 / 5 * C / lambda\n 2. 0 \\<le> 2 * lambda\n 3. \\<bar>y - v\\<bar> \\<le> 3 / 5 * C / lambda\n 4. 0 \\<le> 2 * lambda", "by auto"], ["proof (state)\nthis:\n  2 * lambda * dist u x + dist (d x) (d y) + 2 * lambda * dist y v\n  \\<le> 2 * lambda * (3 / 5 * C / lambda) + dist (d x) (d y) +\n        2 * lambda * (3 / 5 * C / lambda)\n\ngoal (4 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 4. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  2 * lambda * dist u x + dist (d x) (d y) + 2 * lambda * dist y v\n  \\<le> 2 * lambda * (3 / 5 * C / lambda) + dist (d x) (d y) +\n        2 * lambda * (3 / 5 * C / lambda)\n\ngoal (4 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 4. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... = 12/5 * C + dist (d x) (d y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * lambda * (3 / 5 * C / lambda) + dist (d x) (d y) +\n    2 * lambda * (3 / 5 * C / lambda) =\n    12 / 5 * C + dist (d x) (d y)", "using C"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. 2 * lambda * (3 / 5 * C / lambda) + dist (d x) (d y) +\n    2 * lambda * (3 / 5 * C / lambda) =\n    12 / 5 * C + dist (d x) (d y)", "by (auto simp add: algebra_simps divide_simps)"], ["proof (state)\nthis:\n  2 * lambda * (3 / 5 * C / lambda) + dist (d x) (d y) +\n  2 * lambda * (3 / 5 * C / lambda) =\n  12 / 5 * C + dist (d x) (d y)\n\ngoal (4 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 4. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "finally"], ["proof (chain)\npicking this:\n  1 / lambda * dist u v - C \\<le> 12 / 5 * C + dist (d x) (d y)", "have *: \"(1/lambda) * dist u v \\<le> dist (d x) (d y) + 17/5 * C\""], ["proof (prove)\nusing this:\n  1 / lambda * dist u v - C \\<le> 12 / 5 * C + dist (d x) (d y)\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist u v \\<le> dist (d x) (d y) + 17 / 5 * C", "by auto"], ["proof (state)\nthis:\n  1 / lambda * dist u v \\<le> dist (d x) (d y) + 17 / 5 * C\n\ngoal (4 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 4. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"(1/lambda) * dist x y \\<le> (1/lambda) * (dist u v + dist v y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y \\<le> 1 / lambda * (dist u v + dist v y)", "apply (intro mono_intros)"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist x y \\<le> dist u v + dist v y\n 2. 0 \\<le> 1 / lambda", "unfolding dist_real_def"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<bar>x - y\\<bar> \\<le> \\<bar>u - v\\<bar> + \\<bar>v - y\\<bar>\n 2. 0 \\<le> 1 / lambda", "using C u(2) v(2) \\<open>x < y\\<close>"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n  x \\<in> {u..next_in A u}\n  y \\<in> {v..next_in A v}\n  x < y\n\ngoal (2 subgoals):\n 1. \\<bar>x - y\\<bar> \\<le> \\<bar>u - v\\<bar> + \\<bar>v - y\\<bar>\n 2. 0 \\<le> 1 / lambda", "by auto"], ["proof (state)\nthis:\n  1 / lambda * dist x y \\<le> 1 / lambda * (dist u v + dist v y)\n\ngoal (4 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 4. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  1 / lambda * dist x y \\<le> 1 / lambda * (dist u v + dist v y)\n\ngoal (4 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 4. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... \\<le> (1/lambda) * (dist u v + 3/5 * C/lambda)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * (dist u v + dist v y)\n    \\<le> 1 / lambda * (dist u v + 3 / 5 * C / lambda)", "apply (intro mono_intros)"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist v y \\<le> 3 / 5 * C / lambda\n 2. 0 \\<le> 1 / lambda", "unfolding dist_real_def"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<bar>v - y\\<bar> \\<le> 3 / 5 * C / lambda\n 2. 0 \\<le> 1 / lambda", "using 1 v(2) C"], ["proof (prove)\nusing this:\n  x \\<le> u + 3 / 5 * C / lambda \\<and> y \\<le> v + 3 / 5 * C / lambda\n  y \\<in> {v..next_in A v}\n  0 < C\n  1 \\<le> lambda\n\ngoal (2 subgoals):\n 1. \\<bar>v - y\\<bar> \\<le> 3 / 5 * C / lambda\n 2. 0 \\<le> 1 / lambda", "by auto"], ["proof (state)\nthis:\n  1 / lambda * (dist u v + dist v y)\n  \\<le> 1 / lambda * (dist u v + 3 / 5 * C / lambda)\n\ngoal (4 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 4. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  1 / lambda * (dist u v + dist v y)\n  \\<le> 1 / lambda * (dist u v + 3 / 5 * C / lambda)\n\ngoal (4 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 4. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... = (1/lambda) * dist u v + 3/5 * C * (1/(lambda * lambda))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * (dist u v + 3 / 5 * C / lambda) =\n    1 / lambda * dist u v + 3 / 5 * C * (1 / (lambda * lambda))", "using C"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. 1 / lambda * (dist u v + 3 / 5 * C / lambda) =\n    1 / lambda * dist u v + 3 / 5 * C * (1 / (lambda * lambda))", "by (auto simp add: algebra_simps divide_simps)"], ["proof (state)\nthis:\n  1 / lambda * (dist u v + 3 / 5 * C / lambda) =\n  1 / lambda * dist u v + 3 / 5 * C * (1 / (lambda * lambda))\n\ngoal (4 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 4. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  1 / lambda * (dist u v + 3 / 5 * C / lambda) =\n  1 / lambda * dist u v + 3 / 5 * C * (1 / (lambda * lambda))\n\ngoal (4 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 4. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... \\<le> (1/lambda) * dist u v + 3/5 * C * 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * dist u v + 3 / 5 * C * (1 / (lambda * lambda))\n    \\<le> 1 / lambda * dist u v + 3 / 5 * C * 1", "apply (intro mono_intros)"], ["proof (prove)\ngoal (2 subgoals):\n 1. 1 / (lambda * lambda) \\<le> 1\n 2. 0 \\<le> 3 / 5 * C", "using C"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n\ngoal (2 subgoals):\n 1. 1 / (lambda * lambda) \\<le> 1\n 2. 0 \\<le> 3 / 5 * C", "by (auto simp add: divide_simps algebra_simps mult_ge1_powers(1))"], ["proof (state)\nthis:\n  1 / lambda * dist u v + 3 / 5 * C * (1 / (lambda * lambda))\n  \\<le> 1 / lambda * dist u v + 3 / 5 * C * 1\n\ngoal (4 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 4. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  1 / lambda * dist u v + 3 / 5 * C * (1 / (lambda * lambda))\n  \\<le> 1 / lambda * dist u v + 3 / 5 * C * 1\n\ngoal (4 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 4. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... \\<le> (dist (d x) (d y) + 17/5 * C) + 3/5 * C * 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * dist u v + 3 / 5 * C * 1\n    \\<le> dist (d x) (d y) + 17 / 5 * C + 3 / 5 * C * 1", "using *"], ["proof (prove)\nusing this:\n  1 / lambda * dist u v \\<le> dist (d x) (d y) + 17 / 5 * C\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist u v + 3 / 5 * C * 1\n    \\<le> dist (d x) (d y) + 17 / 5 * C + 3 / 5 * C * 1", "by auto"], ["proof (state)\nthis:\n  1 / lambda * dist u v + 3 / 5 * C * 1\n  \\<le> dist (d x) (d y) + 17 / 5 * C + 3 / 5 * C * 1\n\ngoal (4 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 4. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "finally"], ["proof (chain)\npicking this:\n  1 / lambda * dist x y \\<le> dist (d x) (d y) + 17 / 5 * C + 3 / 5 * C * 1", "show ?thesis"], ["proof (prove)\nusing this:\n  1 / lambda * dist x y \\<le> dist (d x) (d y) + 17 / 5 * C + 3 / 5 * C * 1\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "by auto"], ["proof (state)\nthis:\n  1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n\ngoal (3 subgoals):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "case 2"], ["proof (state)\nthis:\n  u + 3 / 5 * C / lambda \\<le> x \\<and> y \\<le> v + 3 / 5 * C / lambda\n\ngoal (3 subgoals):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"(1/lambda) * dist (next_in A u) v - C \\<le> dist (c (next_in A u)) (c v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * dist (next_in A u) v - C \\<le> dist (c (next_in A u)) (c v)", "apply (rule quasi_isometry_onD(2)[OF assms(1)])"], ["proof (prove)\ngoal (2 subgoals):\n 1. next_in A u \\<in> {a..b}\n 2. v \\<in> {a..b}", "using \\<open>next_in A u \\<in> A\\<close> \\<open>v \\<in> A - {b}\\<close> \\<open>A \\<subseteq> {a..b}\\<close>"], ["proof (prove)\nusing this:\n  next_in A u \\<in> A\n  v \\<in> A - {b}\n  A \\<subseteq> {a..b}\n\ngoal (2 subgoals):\n 1. next_in A u \\<in> {a..b}\n 2. v \\<in> {a..b}", "by auto"], ["proof (state)\nthis:\n  1 / lambda * dist (next_in A u) v - C \\<le> dist (c (next_in A u)) (c v)\n\ngoal (3 subgoals):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  1 / lambda * dist (next_in A u) v - C \\<le> dist (c (next_in A u)) (c v)\n\ngoal (3 subgoals):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... = dist (d (next_in A u)) (d v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (c (next_in A u)) (c v) = dist (d (next_in A u)) (d v)", "using d"], ["proof (prove)\nusing this:\n  d u = c u\n  d (next_in A u) = c (next_in A u)\n  d v = c v\n  d (next_in A v) = c (next_in A v)\n\ngoal (1 subgoal):\n 1. dist (c (next_in A u)) (c v) = dist (d (next_in A u)) (d v)", "by auto"], ["proof (state)\nthis:\n  dist (c (next_in A u)) (c v) = dist (d (next_in A u)) (d v)\n\ngoal (3 subgoals):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  dist (c (next_in A u)) (c v) = dist (d (next_in A u)) (d v)\n\ngoal (3 subgoals):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... \\<le> dist (d (next_in A u)) (d x) + dist (d x) (d y) + dist (d y) (d v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (d (next_in A u)) (d v)\n    \\<le> dist (d (next_in A u)) (d x) + dist (d x) (d y) + dist (d y) (d v)", "by (intro mono_intros)"], ["proof (state)\nthis:\n  dist (d (next_in A u)) (d v)\n  \\<le> dist (d (next_in A u)) (d x) + dist (d x) (d y) + dist (d y) (d v)\n\ngoal (3 subgoals):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  dist (d (next_in A u)) (d v)\n  \\<le> dist (d (next_in A u)) (d x) + dist (d x) (d y) + dist (d y) (d v)\n\ngoal (3 subgoals):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... \\<le> (2 * lambda * dist (next_in A u) x) + dist (d x) (d y) + (2 * lambda * dist y v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (d (next_in A u)) (d x) + dist (d x) (d y) + dist (d y) (d v)\n    \\<le> 2 * lambda * dist (next_in A u) x + dist (d x) (d y) +\n          2 * lambda * dist y v", "apply (intro mono_intros)"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist (d (next_in A u)) (d x) \\<le> 2 * lambda * dist (next_in A u) x\n 2. dist (d y) (d v) \\<le> 2 * lambda * dist y v", "apply (rule lipschitz_onD[OF lip[OF u(1)]])"], ["proof (prove)\ngoal (3 subgoals):\n 1. next_in A u \\<in> {u..next_in A u}\n 2. x \\<in> {u..next_in A u}\n 3. dist (d y) (d v) \\<le> 2 * lambda * dist y v", "using u(2)"], ["proof (prove)\nusing this:\n  x \\<in> {u..next_in A u}\n\ngoal (3 subgoals):\n 1. next_in A u \\<in> {u..next_in A u}\n 2. x \\<in> {u..next_in A u}\n 3. dist (d y) (d v) \\<le> 2 * lambda * dist y v", "apply auto[1]"], ["proof (prove)\ngoal (2 subgoals):\n 1. x \\<in> {u..next_in A u}\n 2. dist (d y) (d v) \\<le> 2 * lambda * dist y v", "using u(2)"], ["proof (prove)\nusing this:\n  x \\<in> {u..next_in A u}\n\ngoal (2 subgoals):\n 1. x \\<in> {u..next_in A u}\n 2. dist (d y) (d v) \\<le> 2 * lambda * dist y v", "apply auto[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (d y) (d v) \\<le> 2 * lambda * dist y v", "apply (rule lipschitz_onD[OF lip[OF v(1)]])"], ["proof (prove)\ngoal (2 subgoals):\n 1. y \\<in> {v..next_in A v}\n 2. v \\<in> {v..next_in A v}", "using v(2)"], ["proof (prove)\nusing this:\n  y \\<in> {v..next_in A v}\n\ngoal (2 subgoals):\n 1. y \\<in> {v..next_in A v}\n 2. v \\<in> {v..next_in A v}", "by auto"], ["proof (state)\nthis:\n  dist (d (next_in A u)) (d x) + dist (d x) (d y) + dist (d y) (d v)\n  \\<le> 2 * lambda * dist (next_in A u) x + dist (d x) (d y) +\n        2 * lambda * dist y v\n\ngoal (3 subgoals):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  dist (d (next_in A u)) (d x) + dist (d x) (d y) + dist (d y) (d v)\n  \\<le> 2 * lambda * dist (next_in A u) x + dist (d x) (d y) +\n        2 * lambda * dist y v\n\ngoal (3 subgoals):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... \\<le> (2 * lambda * (2/5 * C/lambda)) + dist (d x) (d y) + (2 * lambda * (3/5 * C/lambda))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * lambda * dist (next_in A u) x + dist (d x) (d y) +\n    2 * lambda * dist y v\n    \\<le> 2 * lambda * (2 / 5 * C / lambda) + dist (d x) (d y) +\n          2 * lambda * (3 / 5 * C / lambda)", "apply (intro mono_intros)"], ["proof (prove)\ngoal (4 subgoals):\n 1. dist (next_in A u) x \\<le> 2 / 5 * C / lambda\n 2. 0 \\<le> 2 * lambda\n 3. dist y v \\<le> 3 / 5 * C / lambda\n 4. 0 \\<le> 2 * lambda", "unfolding dist_real_def"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<bar>next_in A u - x\\<bar> \\<le> 2 / 5 * C / lambda\n 2. 0 \\<le> 2 * lambda\n 3. \\<bar>y - v\\<bar> \\<le> 3 / 5 * C / lambda\n 4. 0 \\<le> 2 * lambda", "using 2 u v C nu"], ["proof (prove)\nusing this:\n  u + 3 / 5 * C / lambda \\<le> x \\<and> y \\<le> v + 3 / 5 * C / lambda\n  u \\<in> A - {b}\n  x \\<in> {u..next_in A u}\n  v \\<in> A - {b}\n  y \\<in> {v..next_in A v}\n  0 < C\n  1 \\<le> lambda\n  next_in A u = u + C / lambda\n\ngoal (4 subgoals):\n 1. \\<bar>next_in A u - x\\<bar> \\<le> 2 / 5 * C / lambda\n 2. 0 \\<le> 2 * lambda\n 3. \\<bar>y - v\\<bar> \\<le> 3 / 5 * C / lambda\n 4. 0 \\<le> 2 * lambda", "by auto"], ["proof (state)\nthis:\n  2 * lambda * dist (next_in A u) x + dist (d x) (d y) +\n  2 * lambda * dist y v\n  \\<le> 2 * lambda * (2 / 5 * C / lambda) + dist (d x) (d y) +\n        2 * lambda * (3 / 5 * C / lambda)\n\ngoal (3 subgoals):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  2 * lambda * dist (next_in A u) x + dist (d x) (d y) +\n  2 * lambda * dist y v\n  \\<le> 2 * lambda * (2 / 5 * C / lambda) + dist (d x) (d y) +\n        2 * lambda * (3 / 5 * C / lambda)\n\ngoal (3 subgoals):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... = 2 * C + dist (d x) (d y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * lambda * (2 / 5 * C / lambda) + dist (d x) (d y) +\n    2 * lambda * (3 / 5 * C / lambda) =\n    2 * C + dist (d x) (d y)", "using C"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. 2 * lambda * (2 / 5 * C / lambda) + dist (d x) (d y) +\n    2 * lambda * (3 / 5 * C / lambda) =\n    2 * C + dist (d x) (d y)", "by (auto simp add: algebra_simps divide_simps)"], ["proof (state)\nthis:\n  2 * lambda * (2 / 5 * C / lambda) + dist (d x) (d y) +\n  2 * lambda * (3 / 5 * C / lambda) =\n  2 * C + dist (d x) (d y)\n\ngoal (3 subgoals):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "finally"], ["proof (chain)\npicking this:\n  1 / lambda * dist (next_in A u) v - C \\<le> 2 * C + dist (d x) (d y)", "have *: \"(1/lambda) * dist (next_in A u) v \\<le> dist (d x) (d y) + 3 * C\""], ["proof (prove)\nusing this:\n  1 / lambda * dist (next_in A u) v - C \\<le> 2 * C + dist (d x) (d y)\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist (next_in A u) v \\<le> dist (d x) (d y) + 3 * C", "by auto"], ["proof (state)\nthis:\n  1 / lambda * dist (next_in A u) v \\<le> dist (d x) (d y) + 3 * C\n\ngoal (3 subgoals):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"(1/lambda) * dist x y \\<le> (1/lambda) * (dist x (next_in A u) + dist (next_in A u) v + dist v y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y\n    \\<le> 1 / lambda *\n          (dist x (next_in A u) + dist (next_in A u) v + dist v y)", "apply (intro mono_intros)"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> 1 / lambda", "unfolding dist_real_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> 1 / lambda", "using C u(2) v(2) \\<open>x < y\\<close>"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n  x \\<in> {u..next_in A u}\n  y \\<in> {v..next_in A v}\n  x < y\n\ngoal (1 subgoal):\n 1. 0 \\<le> 1 / lambda", "by auto"], ["proof (state)\nthis:\n  1 / lambda * dist x y\n  \\<le> 1 / lambda *\n        (dist x (next_in A u) + dist (next_in A u) v + dist v y)\n\ngoal (3 subgoals):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  1 / lambda * dist x y\n  \\<le> 1 / lambda *\n        (dist x (next_in A u) + dist (next_in A u) v + dist v y)\n\ngoal (3 subgoals):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... \\<le> (1/lambda) * ((2/5 * C/lambda) + dist (next_in A u) v  + (3/5 * C/lambda))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * (dist x (next_in A u) + dist (next_in A u) v + dist v y)\n    \\<le> 1 / lambda *\n          (2 / 5 * C / lambda + dist (next_in A u) v + 3 / 5 * C / lambda)", "apply (intro mono_intros)"], ["proof (prove)\ngoal (3 subgoals):\n 1. dist x (next_in A u) \\<le> 2 / 5 * C / lambda\n 2. dist v y \\<le> 3 / 5 * C / lambda\n 3. 0 \\<le> 1 / lambda", "unfolding dist_real_def"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<bar>x - next_in A u\\<bar> \\<le> 2 / 5 * C / lambda\n 2. \\<bar>v - y\\<bar> \\<le> 3 / 5 * C / lambda\n 3. 0 \\<le> 1 / lambda", "using 2 u(2) v(2) C nu"], ["proof (prove)\nusing this:\n  u + 3 / 5 * C / lambda \\<le> x \\<and> y \\<le> v + 3 / 5 * C / lambda\n  x \\<in> {u..next_in A u}\n  y \\<in> {v..next_in A v}\n  0 < C\n  1 \\<le> lambda\n  next_in A u = u + C / lambda\n\ngoal (3 subgoals):\n 1. \\<bar>x - next_in A u\\<bar> \\<le> 2 / 5 * C / lambda\n 2. \\<bar>v - y\\<bar> \\<le> 3 / 5 * C / lambda\n 3. 0 \\<le> 1 / lambda", "by auto"], ["proof (state)\nthis:\n  1 / lambda * (dist x (next_in A u) + dist (next_in A u) v + dist v y)\n  \\<le> 1 / lambda *\n        (2 / 5 * C / lambda + dist (next_in A u) v + 3 / 5 * C / lambda)\n\ngoal (3 subgoals):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  1 / lambda * (dist x (next_in A u) + dist (next_in A u) v + dist v y)\n  \\<le> 1 / lambda *\n        (2 / 5 * C / lambda + dist (next_in A u) v + 3 / 5 * C / lambda)\n\ngoal (3 subgoals):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... = (1/lambda) * dist (next_in A u) v + C * (1/(lambda * lambda))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda *\n    (2 / 5 * C / lambda + dist (next_in A u) v + 3 / 5 * C / lambda) =\n    1 / lambda * dist (next_in A u) v + C * (1 / (lambda * lambda))", "using C"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. 1 / lambda *\n    (2 / 5 * C / lambda + dist (next_in A u) v + 3 / 5 * C / lambda) =\n    1 / lambda * dist (next_in A u) v + C * (1 / (lambda * lambda))", "by (auto simp add: algebra_simps divide_simps)"], ["proof (state)\nthis:\n  1 / lambda *\n  (2 / 5 * C / lambda + dist (next_in A u) v + 3 / 5 * C / lambda) =\n  1 / lambda * dist (next_in A u) v + C * (1 / (lambda * lambda))\n\ngoal (3 subgoals):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  1 / lambda *\n  (2 / 5 * C / lambda + dist (next_in A u) v + 3 / 5 * C / lambda) =\n  1 / lambda * dist (next_in A u) v + C * (1 / (lambda * lambda))\n\ngoal (3 subgoals):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... \\<le> (1/lambda) * dist (next_in A u) v + C * 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * dist (next_in A u) v + C * (1 / (lambda * lambda))\n    \\<le> 1 / lambda * dist (next_in A u) v + C * 1", "apply (intro mono_intros)"], ["proof (prove)\ngoal (2 subgoals):\n 1. 1 / (lambda * lambda) \\<le> 1\n 2. 0 \\<le> C", "using C"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n\ngoal (2 subgoals):\n 1. 1 / (lambda * lambda) \\<le> 1\n 2. 0 \\<le> C", "by (auto simp add: divide_simps algebra_simps mult_ge1_powers(1))"], ["proof (state)\nthis:\n  1 / lambda * dist (next_in A u) v + C * (1 / (lambda * lambda))\n  \\<le> 1 / lambda * dist (next_in A u) v + C * 1\n\ngoal (3 subgoals):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  1 / lambda * dist (next_in A u) v + C * (1 / (lambda * lambda))\n  \\<le> 1 / lambda * dist (next_in A u) v + C * 1\n\ngoal (3 subgoals):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... \\<le> (dist (d x) (d y) + 3 * C) + C * 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * dist (next_in A u) v + C * 1\n    \\<le> dist (d x) (d y) + 3 * C + C * 1", "using *"], ["proof (prove)\nusing this:\n  1 / lambda * dist (next_in A u) v \\<le> dist (d x) (d y) + 3 * C\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist (next_in A u) v + C * 1\n    \\<le> dist (d x) (d y) + 3 * C + C * 1", "by auto"], ["proof (state)\nthis:\n  1 / lambda * dist (next_in A u) v + C * 1\n  \\<le> dist (d x) (d y) + 3 * C + C * 1\n\ngoal (3 subgoals):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    y \\<le> v + 3 / 5 * C / lambda \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "finally"], ["proof (chain)\npicking this:\n  1 / lambda * dist x y \\<le> dist (d x) (d y) + 3 * C + C * 1", "show ?thesis"], ["proof (prove)\nusing this:\n  1 / lambda * dist x y \\<le> dist (d x) (d y) + 3 * C + C * 1\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "by auto"], ["proof (state)\nthis:\n  1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n\ngoal (2 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "case 3"], ["proof (state)\nthis:\n  x \\<le> u + 3 / 5 * C / lambda \\<and> v + 3 / 5 * C / lambda \\<le> y\n\ngoal (2 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"(1/lambda) * dist u (next_in A v) - C \\<le> dist (c u) (c (next_in A v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * dist u (next_in A v) - C \\<le> dist (c u) (c (next_in A v))", "apply (rule quasi_isometry_onD(2)[OF assms(1)])"], ["proof (prove)\ngoal (2 subgoals):\n 1. u \\<in> {a..b}\n 2. next_in A v \\<in> {a..b}", "using \\<open>u \\<in> A - {b}\\<close> \\<open>next_in A v \\<in> A\\<close> \\<open>A \\<subseteq> {a..b}\\<close>"], ["proof (prove)\nusing this:\n  u \\<in> A - {b}\n  next_in A v \\<in> A\n  A \\<subseteq> {a..b}\n\ngoal (2 subgoals):\n 1. u \\<in> {a..b}\n 2. next_in A v \\<in> {a..b}", "by auto"], ["proof (state)\nthis:\n  1 / lambda * dist u (next_in A v) - C \\<le> dist (c u) (c (next_in A v))\n\ngoal (2 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  1 / lambda * dist u (next_in A v) - C \\<le> dist (c u) (c (next_in A v))\n\ngoal (2 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... = dist (d u) (d (next_in A v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (c u) (c (next_in A v)) = dist (d u) (d (next_in A v))", "using d"], ["proof (prove)\nusing this:\n  d u = c u\n  d (next_in A u) = c (next_in A u)\n  d v = c v\n  d (next_in A v) = c (next_in A v)\n\ngoal (1 subgoal):\n 1. dist (c u) (c (next_in A v)) = dist (d u) (d (next_in A v))", "by auto"], ["proof (state)\nthis:\n  dist (c u) (c (next_in A v)) = dist (d u) (d (next_in A v))\n\ngoal (2 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  dist (c u) (c (next_in A v)) = dist (d u) (d (next_in A v))\n\ngoal (2 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... \\<le> dist (d u) (d x) + dist (d x) (d y) + dist (d y) (d (next_in A v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (d u) (d (next_in A v))\n    \\<le> dist (d u) (d x) + dist (d x) (d y) + dist (d y) (d (next_in A v))", "by (intro mono_intros)"], ["proof (state)\nthis:\n  dist (d u) (d (next_in A v))\n  \\<le> dist (d u) (d x) + dist (d x) (d y) + dist (d y) (d (next_in A v))\n\ngoal (2 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  dist (d u) (d (next_in A v))\n  \\<le> dist (d u) (d x) + dist (d x) (d y) + dist (d y) (d (next_in A v))\n\ngoal (2 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... \\<le> (2 * lambda * dist u x) + dist (d x) (d y) + (2 * lambda * dist y (next_in A v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (d u) (d x) + dist (d x) (d y) + dist (d y) (d (next_in A v))\n    \\<le> 2 * lambda * dist u x + dist (d x) (d y) +\n          2 * lambda * dist y (next_in A v)", "apply (intro mono_intros)"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist (d u) (d x) \\<le> 2 * lambda * dist u x\n 2. dist (d y) (d (next_in A v)) \\<le> 2 * lambda * dist y (next_in A v)", "apply (rule lipschitz_onD[OF lip[OF u(1)]])"], ["proof (prove)\ngoal (3 subgoals):\n 1. u \\<in> {u..next_in A u}\n 2. x \\<in> {u..next_in A u}\n 3. dist (d y) (d (next_in A v)) \\<le> 2 * lambda * dist y (next_in A v)", "using u(2)"], ["proof (prove)\nusing this:\n  x \\<in> {u..next_in A u}\n\ngoal (3 subgoals):\n 1. u \\<in> {u..next_in A u}\n 2. x \\<in> {u..next_in A u}\n 3. dist (d y) (d (next_in A v)) \\<le> 2 * lambda * dist y (next_in A v)", "apply auto[1]"], ["proof (prove)\ngoal (2 subgoals):\n 1. x \\<in> {u..next_in A u}\n 2. dist (d y) (d (next_in A v)) \\<le> 2 * lambda * dist y (next_in A v)", "using u(2)"], ["proof (prove)\nusing this:\n  x \\<in> {u..next_in A u}\n\ngoal (2 subgoals):\n 1. x \\<in> {u..next_in A u}\n 2. dist (d y) (d (next_in A v)) \\<le> 2 * lambda * dist y (next_in A v)", "apply auto[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (d y) (d (next_in A v)) \\<le> 2 * lambda * dist y (next_in A v)", "apply (rule lipschitz_onD[OF lip[OF v(1)]])"], ["proof (prove)\ngoal (2 subgoals):\n 1. y \\<in> {v..next_in A v}\n 2. next_in A v \\<in> {v..next_in A v}", "using v(2)"], ["proof (prove)\nusing this:\n  y \\<in> {v..next_in A v}\n\ngoal (2 subgoals):\n 1. y \\<in> {v..next_in A v}\n 2. next_in A v \\<in> {v..next_in A v}", "by auto"], ["proof (state)\nthis:\n  dist (d u) (d x) + dist (d x) (d y) + dist (d y) (d (next_in A v))\n  \\<le> 2 * lambda * dist u x + dist (d x) (d y) +\n        2 * lambda * dist y (next_in A v)\n\ngoal (2 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  dist (d u) (d x) + dist (d x) (d y) + dist (d y) (d (next_in A v))\n  \\<le> 2 * lambda * dist u x + dist (d x) (d y) +\n        2 * lambda * dist y (next_in A v)\n\ngoal (2 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... \\<le> (2 * lambda * (3/5 * C/lambda)) + dist (d x) (d y) + (2 * lambda * (9/10 * C/lambda))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * lambda * dist u x + dist (d x) (d y) +\n    2 * lambda * dist y (next_in A v)\n    \\<le> 2 * lambda * (3 / 5 * C / lambda) + dist (d x) (d y) +\n          2 * lambda * (9 / 10 * C / lambda)", "apply (intro mono_intros)"], ["proof (prove)\ngoal (4 subgoals):\n 1. dist u x \\<le> 3 / 5 * C / lambda\n 2. 0 \\<le> 2 * lambda\n 3. dist y (next_in A v) \\<le> 9 / 10 * C / lambda\n 4. 0 \\<le> 2 * lambda", "unfolding dist_real_def"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<bar>u - x\\<bar> \\<le> 3 / 5 * C / lambda\n 2. 0 \\<le> 2 * lambda\n 3. \\<bar>y - next_in A v\\<bar> \\<le> 9 / 10 * C / lambda\n 4. 0 \\<le> 2 * lambda", "using 3 u v C nv"], ["proof (prove)\nusing this:\n  x \\<le> u + 3 / 5 * C / lambda \\<and> v + 3 / 5 * C / lambda \\<le> y\n  u \\<in> A - {b}\n  x \\<in> {u..next_in A u}\n  v \\<in> A - {b}\n  y \\<in> {v..next_in A v}\n  0 < C\n  1 \\<le> lambda\n  next_in A v \\<le> v + 3 / 2 * C / lambda\n\ngoal (4 subgoals):\n 1. \\<bar>u - x\\<bar> \\<le> 3 / 5 * C / lambda\n 2. 0 \\<le> 2 * lambda\n 3. \\<bar>y - next_in A v\\<bar> \\<le> 9 / 10 * C / lambda\n 4. 0 \\<le> 2 * lambda", "by auto"], ["proof (state)\nthis:\n  2 * lambda * dist u x + dist (d x) (d y) +\n  2 * lambda * dist y (next_in A v)\n  \\<le> 2 * lambda * (3 / 5 * C / lambda) + dist (d x) (d y) +\n        2 * lambda * (9 / 10 * C / lambda)\n\ngoal (2 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  2 * lambda * dist u x + dist (d x) (d y) +\n  2 * lambda * dist y (next_in A v)\n  \\<le> 2 * lambda * (3 / 5 * C / lambda) + dist (d x) (d y) +\n        2 * lambda * (9 / 10 * C / lambda)\n\ngoal (2 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... = 3 * C + dist (d x) (d y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * lambda * (3 / 5 * C / lambda) + dist (d x) (d y) +\n    2 * lambda * (9 / 10 * C / lambda) =\n    3 * C + dist (d x) (d y)", "using C"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. 2 * lambda * (3 / 5 * C / lambda) + dist (d x) (d y) +\n    2 * lambda * (9 / 10 * C / lambda) =\n    3 * C + dist (d x) (d y)", "by (auto simp add: algebra_simps divide_simps)"], ["proof (state)\nthis:\n  2 * lambda * (3 / 5 * C / lambda) + dist (d x) (d y) +\n  2 * lambda * (9 / 10 * C / lambda) =\n  3 * C + dist (d x) (d y)\n\ngoal (2 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "finally"], ["proof (chain)\npicking this:\n  1 / lambda * dist u (next_in A v) - C \\<le> 3 * C + dist (d x) (d y)", "have *: \"(1/lambda) * dist u (next_in A v) \\<le> dist (d x) (d y) + 4 * C\""], ["proof (prove)\nusing this:\n  1 / lambda * dist u (next_in A v) - C \\<le> 3 * C + dist (d x) (d y)\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist u (next_in A v) \\<le> dist (d x) (d y) + 4 * C", "by auto"], ["proof (state)\nthis:\n  1 / lambda * dist u (next_in A v) \\<le> dist (d x) (d y) + 4 * C\n\ngoal (2 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"(1/lambda) * dist x y \\<le> (1/lambda) * dist u (next_in A v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y \\<le> 1 / lambda * dist u (next_in A v)", "apply (intro mono_intros)"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist x y \\<le> dist u (next_in A v)\n 2. 0 \\<le> 1 / lambda", "unfolding dist_real_def"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<bar>x - y\\<bar> \\<le> \\<bar>u - next_in A v\\<bar>\n 2. 0 \\<le> 1 / lambda", "using C u(2) v(2) \\<open>x < y\\<close>"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n  x \\<in> {u..next_in A u}\n  y \\<in> {v..next_in A v}\n  x < y\n\ngoal (2 subgoals):\n 1. \\<bar>x - y\\<bar> \\<le> \\<bar>u - next_in A v\\<bar>\n 2. 0 \\<le> 1 / lambda", "by auto"], ["proof (state)\nthis:\n  1 / lambda * dist x y \\<le> 1 / lambda * dist u (next_in A v)\n\ngoal (2 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  1 / lambda * dist x y \\<le> 1 / lambda * dist u (next_in A v)\n\ngoal (2 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... \\<le> dist (d x) (d y) + 4 * C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * dist u (next_in A v) \\<le> dist (d x) (d y) + 4 * C", "using *"], ["proof (prove)\nusing this:\n  1 / lambda * dist u (next_in A v) \\<le> dist (d x) (d y) + 4 * C\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist u (next_in A v) \\<le> dist (d x) (d y) + 4 * C", "by auto"], ["proof (state)\nthis:\n  1 / lambda * dist u (next_in A v) \\<le> dist (d x) (d y) + 4 * C\n\ngoal (2 subgoals):\n 1. x \\<le> u + 3 / 5 * C / lambda \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "finally"], ["proof (chain)\npicking this:\n  1 / lambda * dist x y \\<le> dist (d x) (d y) + 4 * C", "show ?thesis"], ["proof (prove)\nusing this:\n  1 / lambda * dist x y \\<le> dist (d x) (d y) + 4 * C\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "by auto"], ["proof (state)\nthis:\n  1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n\ngoal (1 subgoal):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "case 4"], ["proof (state)\nthis:\n  u + 3 / 5 * C / lambda \\<le> x \\<and> v + 3 / 5 * C / lambda \\<le> y\n\ngoal (1 subgoal):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"(1/lambda) * dist (next_in A u) (next_in A v) - C \\<le> dist (c (next_in A u)) (c (next_in A v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * dist (next_in A u) (next_in A v) - C\n    \\<le> dist (c (next_in A u)) (c (next_in A v))", "apply (rule quasi_isometry_onD(2)[OF assms(1)])"], ["proof (prove)\ngoal (2 subgoals):\n 1. next_in A u \\<in> {a..b}\n 2. next_in A v \\<in> {a..b}", "using \\<open>next_in A u \\<in> A\\<close> \\<open>next_in A v \\<in> A\\<close> \\<open>A \\<subseteq> {a..b}\\<close>"], ["proof (prove)\nusing this:\n  next_in A u \\<in> A\n  next_in A v \\<in> A\n  A \\<subseteq> {a..b}\n\ngoal (2 subgoals):\n 1. next_in A u \\<in> {a..b}\n 2. next_in A v \\<in> {a..b}", "by auto"], ["proof (state)\nthis:\n  1 / lambda * dist (next_in A u) (next_in A v) - C\n  \\<le> dist (c (next_in A u)) (c (next_in A v))\n\ngoal (1 subgoal):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  1 / lambda * dist (next_in A u) (next_in A v) - C\n  \\<le> dist (c (next_in A u)) (c (next_in A v))\n\ngoal (1 subgoal):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... = dist (d (next_in A u)) (d (next_in A v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (c (next_in A u)) (c (next_in A v)) =\n    dist (d (next_in A u)) (d (next_in A v))", "using d"], ["proof (prove)\nusing this:\n  d u = c u\n  d (next_in A u) = c (next_in A u)\n  d v = c v\n  d (next_in A v) = c (next_in A v)\n\ngoal (1 subgoal):\n 1. dist (c (next_in A u)) (c (next_in A v)) =\n    dist (d (next_in A u)) (d (next_in A v))", "by auto"], ["proof (state)\nthis:\n  dist (c (next_in A u)) (c (next_in A v)) =\n  dist (d (next_in A u)) (d (next_in A v))\n\ngoal (1 subgoal):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  dist (c (next_in A u)) (c (next_in A v)) =\n  dist (d (next_in A u)) (d (next_in A v))\n\ngoal (1 subgoal):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... \\<le> dist (d (next_in A u)) (d x) + dist (d x) (d y) + dist (d y) (d (next_in A v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (d (next_in A u)) (d (next_in A v))\n    \\<le> dist (d (next_in A u)) (d x) + dist (d x) (d y) +\n          dist (d y) (d (next_in A v))", "by (intro mono_intros)"], ["proof (state)\nthis:\n  dist (d (next_in A u)) (d (next_in A v))\n  \\<le> dist (d (next_in A u)) (d x) + dist (d x) (d y) +\n        dist (d y) (d (next_in A v))\n\ngoal (1 subgoal):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  dist (d (next_in A u)) (d (next_in A v))\n  \\<le> dist (d (next_in A u)) (d x) + dist (d x) (d y) +\n        dist (d y) (d (next_in A v))\n\ngoal (1 subgoal):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... \\<le> (2 * lambda * dist (next_in A u) x) + dist (d x) (d y) + (2 * lambda * dist y (next_in A v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (d (next_in A u)) (d x) + dist (d x) (d y) +\n    dist (d y) (d (next_in A v))\n    \\<le> 2 * lambda * dist (next_in A u) x + dist (d x) (d y) +\n          2 * lambda * dist y (next_in A v)", "apply (intro mono_intros)"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist (d (next_in A u)) (d x) \\<le> 2 * lambda * dist (next_in A u) x\n 2. dist (d y) (d (next_in A v)) \\<le> 2 * lambda * dist y (next_in A v)", "apply (rule lipschitz_onD[OF lip[OF u(1)]])"], ["proof (prove)\ngoal (3 subgoals):\n 1. next_in A u \\<in> {u..next_in A u}\n 2. x \\<in> {u..next_in A u}\n 3. dist (d y) (d (next_in A v)) \\<le> 2 * lambda * dist y (next_in A v)", "using u(2)"], ["proof (prove)\nusing this:\n  x \\<in> {u..next_in A u}\n\ngoal (3 subgoals):\n 1. next_in A u \\<in> {u..next_in A u}\n 2. x \\<in> {u..next_in A u}\n 3. dist (d y) (d (next_in A v)) \\<le> 2 * lambda * dist y (next_in A v)", "apply auto[1]"], ["proof (prove)\ngoal (2 subgoals):\n 1. x \\<in> {u..next_in A u}\n 2. dist (d y) (d (next_in A v)) \\<le> 2 * lambda * dist y (next_in A v)", "using u(2)"], ["proof (prove)\nusing this:\n  x \\<in> {u..next_in A u}\n\ngoal (2 subgoals):\n 1. x \\<in> {u..next_in A u}\n 2. dist (d y) (d (next_in A v)) \\<le> 2 * lambda * dist y (next_in A v)", "apply auto[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (d y) (d (next_in A v)) \\<le> 2 * lambda * dist y (next_in A v)", "apply (rule lipschitz_onD[OF lip[OF v(1)]])"], ["proof (prove)\ngoal (2 subgoals):\n 1. y \\<in> {v..next_in A v}\n 2. next_in A v \\<in> {v..next_in A v}", "using v(2)"], ["proof (prove)\nusing this:\n  y \\<in> {v..next_in A v}\n\ngoal (2 subgoals):\n 1. y \\<in> {v..next_in A v}\n 2. next_in A v \\<in> {v..next_in A v}", "by auto"], ["proof (state)\nthis:\n  dist (d (next_in A u)) (d x) + dist (d x) (d y) +\n  dist (d y) (d (next_in A v))\n  \\<le> 2 * lambda * dist (next_in A u) x + dist (d x) (d y) +\n        2 * lambda * dist y (next_in A v)\n\ngoal (1 subgoal):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  dist (d (next_in A u)) (d x) + dist (d x) (d y) +\n  dist (d y) (d (next_in A v))\n  \\<le> 2 * lambda * dist (next_in A u) x + dist (d x) (d y) +\n        2 * lambda * dist y (next_in A v)\n\ngoal (1 subgoal):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... \\<le> (2 * lambda * (2/5 * C/lambda)) + dist (d x) (d y) + (2 * lambda * (9/10 * C/lambda))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * lambda * dist (next_in A u) x + dist (d x) (d y) +\n    2 * lambda * dist y (next_in A v)\n    \\<le> 2 * lambda * (2 / 5 * C / lambda) + dist (d x) (d y) +\n          2 * lambda * (9 / 10 * C / lambda)", "apply (intro mono_intros)"], ["proof (prove)\ngoal (4 subgoals):\n 1. dist (next_in A u) x \\<le> 2 / 5 * C / lambda\n 2. 0 \\<le> 2 * lambda\n 3. dist y (next_in A v) \\<le> 9 / 10 * C / lambda\n 4. 0 \\<le> 2 * lambda", "unfolding dist_real_def"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<bar>next_in A u - x\\<bar> \\<le> 2 / 5 * C / lambda\n 2. 0 \\<le> 2 * lambda\n 3. \\<bar>y - next_in A v\\<bar> \\<le> 9 / 10 * C / lambda\n 4. 0 \\<le> 2 * lambda", "using 4 u v C nu nv"], ["proof (prove)\nusing this:\n  u + 3 / 5 * C / lambda \\<le> x \\<and> v + 3 / 5 * C / lambda \\<le> y\n  u \\<in> A - {b}\n  x \\<in> {u..next_in A u}\n  v \\<in> A - {b}\n  y \\<in> {v..next_in A v}\n  0 < C\n  1 \\<le> lambda\n  next_in A u = u + C / lambda\n  next_in A v \\<le> v + 3 / 2 * C / lambda\n\ngoal (4 subgoals):\n 1. \\<bar>next_in A u - x\\<bar> \\<le> 2 / 5 * C / lambda\n 2. 0 \\<le> 2 * lambda\n 3. \\<bar>y - next_in A v\\<bar> \\<le> 9 / 10 * C / lambda\n 4. 0 \\<le> 2 * lambda", "by auto"], ["proof (state)\nthis:\n  2 * lambda * dist (next_in A u) x + dist (d x) (d y) +\n  2 * lambda * dist y (next_in A v)\n  \\<le> 2 * lambda * (2 / 5 * C / lambda) + dist (d x) (d y) +\n        2 * lambda * (9 / 10 * C / lambda)\n\ngoal (1 subgoal):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  2 * lambda * dist (next_in A u) x + dist (d x) (d y) +\n  2 * lambda * dist y (next_in A v)\n  \\<le> 2 * lambda * (2 / 5 * C / lambda) + dist (d x) (d y) +\n        2 * lambda * (9 / 10 * C / lambda)\n\ngoal (1 subgoal):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... = 13/5 * C + dist (d x) (d y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * lambda * (2 / 5 * C / lambda) + dist (d x) (d y) +\n    2 * lambda * (9 / 10 * C / lambda) =\n    13 / 5 * C + dist (d x) (d y)", "using C"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. 2 * lambda * (2 / 5 * C / lambda) + dist (d x) (d y) +\n    2 * lambda * (9 / 10 * C / lambda) =\n    13 / 5 * C + dist (d x) (d y)", "by (auto simp add: algebra_simps divide_simps)"], ["proof (state)\nthis:\n  2 * lambda * (2 / 5 * C / lambda) + dist (d x) (d y) +\n  2 * lambda * (9 / 10 * C / lambda) =\n  13 / 5 * C + dist (d x) (d y)\n\ngoal (1 subgoal):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "finally"], ["proof (chain)\npicking this:\n  1 / lambda * dist (next_in A u) (next_in A v) - C\n  \\<le> 13 / 5 * C + dist (d x) (d y)", "have *: \"(1/lambda) * dist (next_in A u) (next_in A v) \\<le> dist (d x) (d y) + 18/5 * C\""], ["proof (prove)\nusing this:\n  1 / lambda * dist (next_in A u) (next_in A v) - C\n  \\<le> 13 / 5 * C + dist (d x) (d y)\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist (next_in A u) (next_in A v)\n    \\<le> dist (d x) (d y) + 18 / 5 * C", "by auto"], ["proof (state)\nthis:\n  1 / lambda * dist (next_in A u) (next_in A v)\n  \\<le> dist (d x) (d y) + 18 / 5 * C\n\ngoal (1 subgoal):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"(1/lambda) * dist x y \\<le> (1/lambda) * (dist x (next_in A u) + dist (next_in A u) (next_in A v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y\n    \\<le> 1 / lambda *\n          (dist x (next_in A u) + dist (next_in A u) (next_in A v))", "apply (intro mono_intros)"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist x y \\<le> dist x (next_in A u) + dist (next_in A u) (next_in A v)\n 2. 0 \\<le> 1 / lambda", "unfolding dist_real_def"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<bar>x - y\\<bar>\n    \\<le> \\<bar>x - next_in A u\\<bar> +\n          \\<bar>next_in A u - next_in A v\\<bar>\n 2. 0 \\<le> 1 / lambda", "using C u(2) v(2) \\<open>x < y\\<close>"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n  x \\<in> {u..next_in A u}\n  y \\<in> {v..next_in A v}\n  x < y\n\ngoal (2 subgoals):\n 1. \\<bar>x - y\\<bar>\n    \\<le> \\<bar>x - next_in A u\\<bar> +\n          \\<bar>next_in A u - next_in A v\\<bar>\n 2. 0 \\<le> 1 / lambda", "by auto"], ["proof (state)\nthis:\n  1 / lambda * dist x y\n  \\<le> 1 / lambda *\n        (dist x (next_in A u) + dist (next_in A u) (next_in A v))\n\ngoal (1 subgoal):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  1 / lambda * dist x y\n  \\<le> 1 / lambda *\n        (dist x (next_in A u) + dist (next_in A u) (next_in A v))\n\ngoal (1 subgoal):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... \\<le> (1/lambda) * ((2/5 *C/lambda) + dist (next_in A u) (next_in A v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * (dist x (next_in A u) + dist (next_in A u) (next_in A v))\n    \\<le> 1 / lambda *\n          (2 / 5 * C / lambda + dist (next_in A u) (next_in A v))", "apply (intro mono_intros)"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist x (next_in A u) \\<le> 2 / 5 * C / lambda\n 2. 0 \\<le> 1 / lambda", "unfolding dist_real_def"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<bar>x - next_in A u\\<bar> \\<le> 2 / 5 * C / lambda\n 2. 0 \\<le> 1 / lambda", "using 4 u(2) v(2) C nu"], ["proof (prove)\nusing this:\n  u + 3 / 5 * C / lambda \\<le> x \\<and> v + 3 / 5 * C / lambda \\<le> y\n  x \\<in> {u..next_in A u}\n  y \\<in> {v..next_in A v}\n  0 < C\n  1 \\<le> lambda\n  next_in A u = u + C / lambda\n\ngoal (2 subgoals):\n 1. \\<bar>x - next_in A u\\<bar> \\<le> 2 / 5 * C / lambda\n 2. 0 \\<le> 1 / lambda", "by auto"], ["proof (state)\nthis:\n  1 / lambda * (dist x (next_in A u) + dist (next_in A u) (next_in A v))\n  \\<le> 1 / lambda * (2 / 5 * C / lambda + dist (next_in A u) (next_in A v))\n\ngoal (1 subgoal):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  1 / lambda * (dist x (next_in A u) + dist (next_in A u) (next_in A v))\n  \\<le> 1 / lambda * (2 / 5 * C / lambda + dist (next_in A u) (next_in A v))\n\ngoal (1 subgoal):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... = (1/lambda) * dist (next_in A u) (next_in A v) + 2/5 * C * (1/(lambda * lambda))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * (2 / 5 * C / lambda + dist (next_in A u) (next_in A v)) =\n    1 / lambda * dist (next_in A u) (next_in A v) +\n    2 / 5 * C * (1 / (lambda * lambda))", "using C"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. 1 / lambda * (2 / 5 * C / lambda + dist (next_in A u) (next_in A v)) =\n    1 / lambda * dist (next_in A u) (next_in A v) +\n    2 / 5 * C * (1 / (lambda * lambda))", "by (auto simp add: algebra_simps divide_simps)"], ["proof (state)\nthis:\n  1 / lambda * (2 / 5 * C / lambda + dist (next_in A u) (next_in A v)) =\n  1 / lambda * dist (next_in A u) (next_in A v) +\n  2 / 5 * C * (1 / (lambda * lambda))\n\ngoal (1 subgoal):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  1 / lambda * (2 / 5 * C / lambda + dist (next_in A u) (next_in A v)) =\n  1 / lambda * dist (next_in A u) (next_in A v) +\n  2 / 5 * C * (1 / (lambda * lambda))\n\ngoal (1 subgoal):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... \\<le> (1/lambda) * dist (next_in A u) (next_in A v) + 2/5 * C * 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * dist (next_in A u) (next_in A v) +\n    2 / 5 * C * (1 / (lambda * lambda))\n    \\<le> 1 / lambda * dist (next_in A u) (next_in A v) + 2 / 5 * C * 1", "apply (intro mono_intros)"], ["proof (prove)\ngoal (2 subgoals):\n 1. 1 / (lambda * lambda) \\<le> 1\n 2. 0 \\<le> 2 / 5 * C", "using C"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n\ngoal (2 subgoals):\n 1. 1 / (lambda * lambda) \\<le> 1\n 2. 0 \\<le> 2 / 5 * C", "by (auto simp add: divide_simps algebra_simps mult_ge1_powers(1))"], ["proof (state)\nthis:\n  1 / lambda * dist (next_in A u) (next_in A v) +\n  2 / 5 * C * (1 / (lambda * lambda))\n  \\<le> 1 / lambda * dist (next_in A u) (next_in A v) + 2 / 5 * C * 1\n\ngoal (1 subgoal):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "also"], ["proof (state)\nthis:\n  1 / lambda * dist (next_in A u) (next_in A v) +\n  2 / 5 * C * (1 / (lambda * lambda))\n  \\<le> 1 / lambda * dist (next_in A u) (next_in A v) + 2 / 5 * C * 1\n\ngoal (1 subgoal):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "have \"... \\<le> (dist (d x) (d y) + 18/5 * C) + 2/5 * C * 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * dist (next_in A u) (next_in A v) + 2 / 5 * C * 1\n    \\<le> dist (d x) (d y) + 18 / 5 * C + 2 / 5 * C * 1", "using *"], ["proof (prove)\nusing this:\n  1 / lambda * dist (next_in A u) (next_in A v)\n  \\<le> dist (d x) (d y) + 18 / 5 * C\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist (next_in A u) (next_in A v) + 2 / 5 * C * 1\n    \\<le> dist (d x) (d y) + 18 / 5 * C + 2 / 5 * C * 1", "by auto"], ["proof (state)\nthis:\n  1 / lambda * dist (next_in A u) (next_in A v) + 2 / 5 * C * 1\n  \\<le> dist (d x) (d y) + 18 / 5 * C + 2 / 5 * C * 1\n\ngoal (1 subgoal):\n 1. u + 3 / 5 * C / lambda \\<le> x \\<and>\n    v + 3 / 5 * C / lambda \\<le> y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "finally"], ["proof (chain)\npicking this:\n  1 / lambda * dist x y \\<le> dist (d x) (d y) + 18 / 5 * C + 2 / 5 * C * 1", "show ?thesis"], ["proof (prove)\nusing this:\n  1 / lambda * dist x y \\<le> dist (d x) (d y) + 18 / 5 * C + 2 / 5 * C * 1\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "by auto"], ["proof (state)\nthis:\n  1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> {a..b}; ?y \\<in> {a..b}; ?x < ?y\\<rbrakk>\n  \\<Longrightarrow> 1 / lambda * dist ?x ?y - 4 * C \\<le> dist (d ?x) (d ?y)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {a..b}; y \\<in> {a..b}\\<rbrakk>\n       \\<Longrightarrow> 1 / lambda * dist x y - 4 * C\n                         \\<le> dist (d x) (d y)", "show \"dist (d x) (d y) \\<ge> (1/lambda) * dist x y - 4 * C\" if H: \"x \\<in> {a..b}\" \"y \\<in> {a..b}\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "consider \"x < y\" | \"x = y\" | \"x > y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < y \\<Longrightarrow> thesis; x = y \\<Longrightarrow> thesis;\n     y < x \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by linarith"], ["proof (state)\nthis:\n  \\<lbrakk>x < y \\<Longrightarrow> ?thesis; x = y \\<Longrightarrow> ?thesis;\n   y < x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>x < y \\<Longrightarrow> ?thesis; x = y \\<Longrightarrow> ?thesis;\n   y < x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>x < y \\<Longrightarrow> ?thesis; x = y \\<Longrightarrow> ?thesis;\n   y < x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "proof (cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. x = y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. y < x \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "case 1"], ["proof (state)\nthis:\n  x < y\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. x = y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 3. y < x \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "then"], ["proof (chain)\npicking this:\n  x < y", "show ?thesis"], ["proof (prove)\nusing this:\n  x < y\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "using J[OF H(1) H(2) 1]"], ["proof (prove)\nusing this:\n  x < y\n  1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "by simp"], ["proof (state)\nthis:\n  1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. y < x \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. y < x \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "case 2"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n 2. y < x \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "unfolding 2"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * dist y y - 4 * C \\<le> dist (d y) (d y)", "using C"], ["proof (prove)\nusing this:\n  0 < C\n  1 \\<le> lambda\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist y y - 4 * C \\<le> dist (d y) (d y)", "by auto"], ["proof (state)\nthis:\n  1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "case 3"], ["proof (state)\nthis:\n  y < x\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "using J[OF H(2) H(1) 3]"], ["proof (prove)\nusing this:\n  1 / lambda * dist y x - 4 * C \\<le> dist (d y) (d x)\n\ngoal (1 subgoal):\n 1. 1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)", "by (simp add: metric_space_class.dist_commute)"], ["proof (state)\nthis:\n  1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  1 / lambda * dist x y - 4 * C \\<le> dist (d x) (d y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> {a..b}; ?y \\<in> {a..b}\\<rbrakk>\n  \\<Longrightarrow> 1 / lambda * dist ?x ?y - 4 * C \\<le> dist (d ?x) (d ?y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lambda (4 * C) -quasi_isometry_on {a..b} d\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "text \\<open>We have proved that $d$ has all the properties we wanted.\\<close>"], ["proof (state)\nthis:\n  lambda (4 * C) -quasi_isometry_on {a..b} d\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  lambda (4 * C) -quasi_isometry_on {a..b} d", "have \"continuous_on {a..b} d \\<and> d a = c a \\<and> d b = c b\n          \\<and> lambda (4 * C)-quasi_isometry_on {a..b} d\n          \\<and> (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 *C)\n          \\<and> (2*lambda)-lipschitz_on {a..b} d\n          \\<and> hausdorff_distance (c`{a..b}) (d`{a..b}) \\<le> 2 * C\""], ["proof (prove)\nusing this:\n  lambda (4 * C) -quasi_isometry_on {a..b} d\n\ngoal (1 subgoal):\n 1. continuous_on {a..b} d \\<and>\n    d a = c a \\<and>\n    d b = c b \\<and>\n    lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n    (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n    (2 * lambda)-lipschitz_on {a..b} d \\<and>\n    hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "using dist_c_d \\<open>continuous_on {a..b} d\\<close> \\<open>d a = c a\\<close> \\<open>d b = c b\\<close> \\<open>(2*lambda)-lipschitz_on {a..b} d\\<close>\n            \\<open>hausdorff_distance (c`{a..b}) (d`{a..b}) \\<le> 2 * C\\<close>"], ["proof (prove)\nusing this:\n  lambda (4 * C) -quasi_isometry_on {a..b} d\n  ?x \\<in> {a..b} \\<Longrightarrow> dist (c ?x) (d ?x) \\<le> 4 * C\n  continuous_on {a..b} d\n  d a = c a\n  d b = c b\n  (2 * lambda)-lipschitz_on {a..b} d\n  hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n\ngoal (1 subgoal):\n 1. continuous_on {a..b} d \\<and>\n    d a = c a \\<and>\n    d b = c b \\<and>\n    lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n    (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n    (2 * lambda)-lipschitz_on {a..b} d \\<and>\n    hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "by auto"], ["proof (state)\nthis:\n  continuous_on {a..b} d \\<and>\n  d a = c a \\<and>\n  d b = c b \\<and>\n  lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n  (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n  (2 * lambda)-lipschitz_on {a..b} d \\<and>\n  hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n\ngoal (1 subgoal):\n 1. 0 < C \\<and> a + 2 * C / lambda < b \\<Longrightarrow>\n    \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "then"], ["proof (chain)\npicking this:\n  continuous_on {a..b} d \\<and>\n  d a = c a \\<and>\n  d b = c b \\<and>\n  lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n  (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n  (2 * lambda)-lipschitz_on {a..b} d \\<and>\n  hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "show ?thesis"], ["proof (prove)\nusing this:\n  continuous_on {a..b} d \\<and>\n  d a = c a \\<and>\n  d b = c b \\<and>\n  lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n  (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n  (2 * lambda)-lipschitz_on {a..b} d \\<and>\n  hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n\ngoal (1 subgoal):\n 1. \\<exists>d.\n       continuous_on {a..b} d \\<and>\n       d a = c a \\<and>\n       d b = c b \\<and>\n       (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n       lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n       (2 * lambda)-lipschitz_on {a..b} d \\<and>\n       hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C", "by auto"], ["proof (state)\nthis:\n  \\<exists>d.\n     continuous_on {a..b} d \\<and>\n     d a = c a \\<and>\n     d b = c b \\<and>\n     (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n     lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n     (2 * lambda)-lipschitz_on {a..b} d \\<and>\n     hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>d.\n     continuous_on {a..b} d \\<and>\n     d a = c a \\<and>\n     d b = c b \\<and>\n     (\\<forall>x\\<in>{a..b}. dist (c x) (d x) \\<le> 4 * C) \\<and>\n     lambda (4 * C) -quasi_isometry_on {a..b} d \\<and>\n     (2 * lambda)-lipschitz_on {a..b} d \\<and>\n     hausdorff_distance (c ` {a..b}) (d ` {a..b}) \\<le> 2 * C\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(*of theory Isometries*)"]]}