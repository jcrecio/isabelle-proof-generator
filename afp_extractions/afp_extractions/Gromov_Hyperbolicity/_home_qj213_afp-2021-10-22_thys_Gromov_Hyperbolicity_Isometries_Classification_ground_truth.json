{"file_name": "/home/qj213/afp-2021-10-22/thys/Gromov_Hyperbolicity/Isometries_Classification.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Gromov_Hyperbolicity", "problem_names": ["lemma translation_length_nonneg [simp, mono_intros]:\n  \"translation_length f \\<ge> 0\"", "lemma translation_length_le [mono_intros]:\n  \"translation_length f \\<le> dist x (f x)\"", "lemma stable_translation_length_nonneg [simp]:\n  \"stable_translation_length f \\<ge> 0\"", "lemma stable_translation_length_le_translation_length [mono_intros]:\n  \"n * stable_translation_length f \\<le> translation_length (f^^n)\"", "lemma semicontraction_iterates:\n  fixes f::\"('a::metric_space) \\<Rightarrow> 'a\"\n  assumes \"1-lipschitz_on UNIV f\"\n  shows \"1-lipschitz_on UNIV (f^^n)\"", "lemma stable_translation_length_inv:\n  assumes \"isometry f\"\n  shows \"stable_translation_length (inv f) = stable_translation_length f\"", "lemma Busemann_function_eq_additive_strength:\n  assumes \"isometry f\" \"Gromov_extension f xi = xi\"\n  shows \"\\<bar>Busemann_function_at xi ((f^^n) x) (x::'a::Gromov_hyperbolic_space) - real n * additive_strength f xi\\<bar> \\<le> 2 * deltaG(TYPE('a))\"", "lemma additive_strength_as_limit [tendsto_intros]:\n  assumes \"isometry f\" \"Gromov_extension f xi = xi\"\n  shows \"(\\<lambda>n. Busemann_function_at xi ((f^^n) x) x/n) \\<longlonglongrightarrow> additive_strength f xi\"", "lemma dist_le_additive_strength:\n  assumes \"isometry (f::'a::Gromov_hyperbolic_space \\<Rightarrow> 'a)\" \"Gromov_extension f xi = xi\" \"additive_strength f xi \\<ge> 0\" \"n \\<ge> 1\"\n  shows \"dist x ((f^^n) x) \\<le> dist x (f x) + real n * additive_strength f xi + ceiling (log 2 n) * 16 * deltaG(TYPE('a))\"", "lemma additive_strength_inv:\n  assumes \"isometry (f::'a::Gromov_hyperbolic_space \\<Rightarrow> 'a)\" \"Gromov_extension f xi = xi\"\n  shows \"additive_strength (inv f) xi = - additive_strength f xi\"", "lemma stable_translation_length_eq_additive_strength_aux:\n  assumes \"isometry (f::'a::Gromov_hyperbolic_space \\<Rightarrow> 'a)\" \"Gromov_extension f xi = xi\" \"additive_strength f xi \\<ge> 0\"\n  shows \"stable_translation_length f = additive_strength f xi\"", "lemma stable_translation_length_eq_additive_strength:\n  assumes \"isometry (f::'a::Gromov_hyperbolic_space \\<Rightarrow> 'a)\" \"Gromov_extension f xi = xi\"\n  shows \"stable_translation_length f = abs(additive_strength f xi)\"", "lemma elliptic_isometryD:\n  assumes \"elliptic_isometry f\"\n  shows \"bounded {(f^^n) x |n. True}\"\n        \"isometry f\"", "lemma elliptic_isometryI [intro]:\n  assumes \"bounded {(f^^n) x |n. True}\"\n          \"isometry f\"\n  shows \"elliptic_isometry f\"", "lemma elliptic_isometry_inv:\n  assumes \"elliptic_isometry f\"\n  shows \"elliptic_isometry (inv f)\"", "lemma elliptic_isometry_inv_iff:\n  assumes \"bij f\"\n  shows \"elliptic_isometry (inv f) \\<longleftrightarrow> elliptic_isometry f\"", "lemma elliptic_isometry_id:\n  \"elliptic_isometry id\"", "lemma elliptic_isometry_stable_translation_length:\n  assumes \"elliptic_isometry f\"\n  shows \"stable_translation_length f = 0\"", "lemma isometry_with_fixed_point_is_elliptic:\n  assumes \"isometry f\" \"f x = x\"\n  shows \"elliptic_isometry f\"", "lemma parabolic_isometryD:\n  assumes \"parabolic_isometry f\"\n  shows \"isometry f\"\n        \"\\<not>bounded {(f^^n) x|n. True}\"\n        \"stable_translation_length f = 0\"\n        \"\\<not>elliptic_isometry f\"", "lemma parabolic_isometryI:\n  assumes \"isometry f\"\n          \"\\<not>bounded {(f^^n) x|n. True}\"\n          \"stable_translation_length f = 0\"\n  shows \"parabolic_isometry f\"", "lemma loxodromic_isometryD:\n  assumes \"loxodromic_isometry f\"\n  shows \"isometry f\"\n        \"\\<not>bounded {(f^^n) x|n. True}\"\n        \"stable_translation_length f > 0\"\n        \"\\<not>elliptic_isometry f\"", "lemma loxodromic_isometryI:\n  assumes \"isometry f\"\n          \"stable_translation_length f \\<noteq> 0\"\n  shows \"loxodromic_isometry f\"", "lemma elliptic_or_parabolic_or_loxodromic:\n  assumes \"isometry f\"\n  shows \"elliptic_isometry f \\<or> parabolic_isometry f \\<or> loxodromic_isometry f\"", "lemma elliptic_imp_not_parabolic_loxodromic:\n  assumes \"elliptic_isometry f\"\n  shows \"\\<not>parabolic_isometry f\"\n        \"\\<not>loxodromic_isometry f\"", "lemma parabolic_imp_not_elliptic_loxodromic:\n  assumes \"parabolic_isometry f\"\n  shows \"\\<not>elliptic_isometry f\"\n        \"\\<not>loxodromic_isometry f\"", "lemma loxodromic_imp_not_elliptic_parabolic:\n  assumes \"loxodromic_isometry f\"\n  shows \"\\<not>elliptic_isometry f\"\n        \"\\<not>parabolic_isometry f\"", "lemma parabolic_isometry_inv:\n  assumes \"parabolic_isometry f\"\n  shows \"parabolic_isometry (inv f)\"", "lemma loxodromic_isometry_inv:\n  assumes \"loxodromic_isometry f\"\n  shows \"loxodromic_isometry (inv f)\"", "lemma high_scores:\n  fixes u::\"nat \\<Rightarrow> real\" and i::nat and C::real\n  assumes \"\\<not>(bdd_above (range u))\"\n  shows \"\\<exists>n. (\\<forall>l \\<le> n. u l \\<le> u n) \\<and> u n \\<ge> C \\<and> n \\<ge> i\"", "lemma isometry_not_elliptic_has_attracting_fixed_point:\n  assumes \"isometry f\"\n          \"\\<not>(elliptic_isometry f)\"\n  shows \"\\<exists>xi \\<in> Gromov_boundary. Gromov_extension f xi = xi \\<and> additive_strength f xi \\<le> 0\"", "lemma isometry_not_elliptic_has_repelling_fixed_point:\n  assumes \"isometry f\"\n          \"\\<not>(elliptic_isometry f)\"\n  shows \"\\<exists>xi \\<in> Gromov_boundary. Gromov_extension f xi = xi \\<and> additive_strength f xi \\<ge> 0\"", "lemma parabolic_fixed_point:\n  assumes \"parabolic_isometry f\"\n  shows \"neutral_fixed_point f \\<in> Gromov_boundary\"\n        \"Gromov_extension f (neutral_fixed_point f) = neutral_fixed_point f\"\n        \"additive_strength f (neutral_fixed_point f) = 0\"", "theorem parabolic_unique_fixed_point:\n  assumes \"parabolic_isometry f\"\n  shows \"Gromov_extension f xi = xi \\<longleftrightarrow> xi = neutral_fixed_point f\"", "lemma parabolic_logarithmic_growth:\n  assumes \"parabolic_isometry (f::'a::Gromov_hyperbolic_space \\<Rightarrow> 'a)\" \"n \\<ge> 1\"\n  shows \"dist x ((f^^n) x) \\<le> dist x (f x) + ceiling (log 2 n) * 16 * deltaG(TYPE('a))\"", "lemma tree_no_parabolic_isometry:\n  assumes \"isometry (f::'a::Gromov_hyperbolic_space_0 \\<Rightarrow> 'a)\"\n  shows \"elliptic_isometry f \\<or> loxodromic_isometry f\"", "lemma loxodromic_attracting_fixed_point:\n  assumes \"loxodromic_isometry f\"\n  shows \"attracting_fixed_point f \\<in> Gromov_boundary\"\n        \"Gromov_extension f (attracting_fixed_point f) = attracting_fixed_point f\"\n        \"additive_strength f (attracting_fixed_point f) < 0\"", "lemma loxodromic_repelling_fixed_point:\n  assumes \"loxodromic_isometry f\"\n  shows \"repelling_fixed_point f \\<in> Gromov_boundary\"\n        \"Gromov_extension f (repelling_fixed_point f) = repelling_fixed_point f\"\n        \"additive_strength f (repelling_fixed_point f) > 0\"", "lemma attracting_fixed_point_neq_repelling_fixed_point:\n  assumes \"loxodromic_isometry f\"\n  shows \"attracting_fixed_point f \\<noteq> repelling_fixed_point f\"", "lemma loxodromic_attracting_fixed_point_attracts:\n  assumes \"loxodromic_isometry f\"\n          \"xi \\<noteq> repelling_fixed_point f\"\n  shows \"(\\<lambda>n. ((Gromov_extension f)^^n) xi) \\<longlonglongrightarrow> attracting_fixed_point f\"", "theorem loxodromic_unique_fixed_points:\n  assumes \"loxodromic_isometry f\"\n  shows \"Gromov_extension f xi = xi \\<longleftrightarrow> xi = attracting_fixed_point f \\<or> xi = repelling_fixed_point f\""], "translations": [["", "lemma translation_length_nonneg [simp, mono_intros]:\n  \"translation_length f \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> translation_length f", "unfolding translation_length_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> Inf {dist x (f x) |x. True}", "by (rule cInf_greatest, auto)"], ["", "lemma translation_length_le [mono_intros]:\n  \"translation_length f \\<le> dist x (f x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. translation_length f \\<le> dist x (f x)", "unfolding translation_length_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf {dist x (f x) |x. True} \\<le> dist x (f x)", "apply (rule cInf_lower)"], ["proof (prove)\ngoal (2 subgoals):\n 1. dist x (f x) \\<in> {dist x (f x) |x. True}\n 2. bdd_below {dist x (f x) |x. True}", "by (auto intro: bdd_belowI[of _ 0])"], ["", "definition stable_translation_length::\"(('a::metric_space) \\<Rightarrow> 'a) \\<Rightarrow> real\"\n  where \"stable_translation_length f = Inf {translation_length (f^^n)/n |n. n > 0}\""], ["", "lemma stable_translation_length_nonneg [simp]:\n  \"stable_translation_length f \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> stable_translation_length f", "unfolding stable_translation_length_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> Inf {translation_length (f ^^ n) / real n |n. 0 < n}", "by (rule cInf_greatest, auto)"], ["", "lemma stable_translation_length_le_translation_length [mono_intros]:\n  \"n * stable_translation_length f \\<le> translation_length (f^^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real n * stable_translation_length f \\<le> translation_length (f ^^ n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. real n * stable_translation_length f \\<le> translation_length (f ^^ n)", "have *: \"stable_translation_length f \\<le> translation_length (f^^n)/n\" if \"n > 0\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. stable_translation_length f \\<le> translation_length (f ^^ n) / real n", "unfolding stable_translation_length_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf {translation_length (f ^^ n) / real n |n. 0 < n}\n    \\<le> translation_length (f ^^ n) / real n", "apply (rule cInf_lower)"], ["proof (prove)\ngoal (2 subgoals):\n 1. translation_length (f ^^ n) / real n\n    \\<in> {translation_length (f ^^ n) / real n |n. 0 < n}\n 2. bdd_below {translation_length (f ^^ n) / real n |n. 0 < n}", "using that"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (2 subgoals):\n 1. translation_length (f ^^ n) / real n\n    \\<in> {translation_length (f ^^ n) / real n |n. 0 < n}\n 2. bdd_below {translation_length (f ^^ n) / real n |n. 0 < n}", "by (auto intro: bdd_belowI[of _ 0])"], ["proof (state)\nthis:\n  0 < ?n \\<Longrightarrow>\n  stable_translation_length f \\<le> translation_length (f ^^ ?n) / real ?n\n\ngoal (1 subgoal):\n 1. real n * stable_translation_length f \\<le> translation_length (f ^^ n)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. real n * stable_translation_length f \\<le> translation_length (f ^^ n)", "apply (cases \"n = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    real n * stable_translation_length f \\<le> translation_length (f ^^ n)\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    real n * stable_translation_length f \\<le> translation_length (f ^^ n)", "using *"], ["proof (prove)\nusing this:\n  0 < ?n \\<Longrightarrow>\n  stable_translation_length f \\<le> translation_length (f ^^ ?n) / real ?n\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    real n * stable_translation_length f \\<le> translation_length (f ^^ n)\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    real n * stable_translation_length f \\<le> translation_length (f ^^ n)", "by (auto simp add: divide_simps algebra_simps)"], ["proof (state)\nthis:\n  real n * stable_translation_length f \\<le> translation_length (f ^^ n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma semicontraction_iterates:\n  fixes f::\"('a::metric_space) \\<Rightarrow> 'a\"\n  assumes \"1-lipschitz_on UNIV f\"\n  shows \"1-lipschitz_on UNIV (f^^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1-lipschitz_on UNIV (f ^^ n)", "by (induction n, auto intro!: lipschitz_onI lipschitz_on_compose2[of 1 UNIV _ 1 f, simplified] lipschitz_on_subset[OF assms])"], ["", "text \\<open>If $f$ is a semicontraction, then its stable translation length is the limit of $d(x, f^n x)/n$\nfor any $n$. While it is obvious that the liminf of this quantity is at least the stable translation\nlength (which is defined as an inf over all points and all times), the opposite inequality is more\ninteresting. One may find a point $y$ and a time $k$ for which $d(y, f^k y)/k$ is very close to the\nstable translation length. By subadditivity of the sequence $n \\mapsto f(y, f^n y)$ and Fekete's\nLemma, it follows that, for any large $n$, then $d(y, f^n y)/n$ is also very close to the stable\ntranslation length. Since this is equal to $d(x, f^n x)/n$ up to $\\pm 2 d(x,y)/n$, the result\nfollows.\\<close>"], ["", "proposition stable_translation_length_as_pointwise_limit:\n  assumes \"1-lipschitz_on UNIV f\"\n  shows \"(\\<lambda>n. dist x ((f^^n) x)/n) \\<longlonglongrightarrow> stable_translation_length f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. dist x ((f ^^ n) x) / real n)\n    \\<longlonglongrightarrow> stable_translation_length f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n. dist x ((f ^^ n) x) / real n)\n    \\<longlonglongrightarrow> stable_translation_length f", "have *: \"subadditive (\\<lambda>n. dist y ((f^^n) y))\" for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. Fekete.subadditive (\\<lambda>n. dist y ((f ^^ n) y))", "proof (rule subadditiveI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m n.\n       dist y ((f ^^ (m + n)) y)\n       \\<le> dist y ((f ^^ m) y) + dist y ((f ^^ n) y)", "fix m n::nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m n.\n       dist y ((f ^^ (m + n)) y)\n       \\<le> dist y ((f ^^ m) y) + dist y ((f ^^ n) y)", "have \"dist y ((f ^^ (m + n)) y) \\<le> dist y ((f^^m) y) + dist ((f^^m) y) ((f^^(m+n)) y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist y ((f ^^ (m + n)) y)\n    \\<le> dist y ((f ^^ m) y) + dist ((f ^^ m) y) ((f ^^ (m + n)) y)", "by (rule dist_triangle)"], ["proof (state)\nthis:\n  dist y ((f ^^ (m + n)) y)\n  \\<le> dist y ((f ^^ m) y) + dist ((f ^^ m) y) ((f ^^ (m + n)) y)\n\ngoal (1 subgoal):\n 1. \\<And>m n.\n       dist y ((f ^^ (m + n)) y)\n       \\<le> dist y ((f ^^ m) y) + dist y ((f ^^ n) y)", "also"], ["proof (state)\nthis:\n  dist y ((f ^^ (m + n)) y)\n  \\<le> dist y ((f ^^ m) y) + dist ((f ^^ m) y) ((f ^^ (m + n)) y)\n\ngoal (1 subgoal):\n 1. \\<And>m n.\n       dist y ((f ^^ (m + n)) y)\n       \\<le> dist y ((f ^^ m) y) + dist y ((f ^^ n) y)", "have \"... = dist y ((f^^m) y) + dist ((f^^m) y) ((f^^m) ((f^^n) y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist y ((f ^^ m) y) + dist ((f ^^ m) y) ((f ^^ (m + n)) y) =\n    dist y ((f ^^ m) y) + dist ((f ^^ m) y) ((f ^^ m) ((f ^^ n) y))", "by (auto simp add: funpow_add)"], ["proof (state)\nthis:\n  dist y ((f ^^ m) y) + dist ((f ^^ m) y) ((f ^^ (m + n)) y) =\n  dist y ((f ^^ m) y) + dist ((f ^^ m) y) ((f ^^ m) ((f ^^ n) y))\n\ngoal (1 subgoal):\n 1. \\<And>m n.\n       dist y ((f ^^ (m + n)) y)\n       \\<le> dist y ((f ^^ m) y) + dist y ((f ^^ n) y)", "also"], ["proof (state)\nthis:\n  dist y ((f ^^ m) y) + dist ((f ^^ m) y) ((f ^^ (m + n)) y) =\n  dist y ((f ^^ m) y) + dist ((f ^^ m) y) ((f ^^ m) ((f ^^ n) y))\n\ngoal (1 subgoal):\n 1. \\<And>m n.\n       dist y ((f ^^ (m + n)) y)\n       \\<le> dist y ((f ^^ m) y) + dist y ((f ^^ n) y)", "have \"... \\<le> dist y ((f^^m) y) + dist y ((f^^n) y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist y ((f ^^ m) y) + dist ((f ^^ m) y) ((f ^^ m) ((f ^^ n) y))\n    \\<le> dist y ((f ^^ m) y) + dist y ((f ^^ n) y)", "using semicontraction_iterates[OF assms, of m]"], ["proof (prove)\nusing this:\n  1-lipschitz_on UNIV (f ^^ m)\n\ngoal (1 subgoal):\n 1. dist y ((f ^^ m) y) + dist ((f ^^ m) y) ((f ^^ m) ((f ^^ n) y))\n    \\<le> dist y ((f ^^ m) y) + dist y ((f ^^ n) y)", "unfolding lipschitz_on_def"], ["proof (prove)\nusing this:\n  0 \\<le> 1 \\<and>\n  (\\<forall>x\\<in>UNIV.\n      \\<forall>y\\<in>UNIV.\n         dist ((f ^^ m) x) ((f ^^ m) y) \\<le> 1 * dist x y)\n\ngoal (1 subgoal):\n 1. dist y ((f ^^ m) y) + dist ((f ^^ m) y) ((f ^^ m) ((f ^^ n) y))\n    \\<le> dist y ((f ^^ m) y) + dist y ((f ^^ n) y)", "by auto"], ["proof (state)\nthis:\n  dist y ((f ^^ m) y) + dist ((f ^^ m) y) ((f ^^ m) ((f ^^ n) y))\n  \\<le> dist y ((f ^^ m) y) + dist y ((f ^^ n) y)\n\ngoal (1 subgoal):\n 1. \\<And>m n.\n       dist y ((f ^^ (m + n)) y)\n       \\<le> dist y ((f ^^ m) y) + dist y ((f ^^ n) y)", "finally"], ["proof (chain)\npicking this:\n  dist y ((f ^^ (m + n)) y) \\<le> dist y ((f ^^ m) y) + dist y ((f ^^ n) y)", "show \"dist y ((f ^^ (m + n)) y) \\<le> dist y ((f ^^ m) y) + dist y ((f ^^ n) y)\""], ["proof (prove)\nusing this:\n  dist y ((f ^^ (m + n)) y) \\<le> dist y ((f ^^ m) y) + dist y ((f ^^ n) y)\n\ngoal (1 subgoal):\n 1. dist y ((f ^^ (m + n)) y)\n    \\<le> dist y ((f ^^ m) y) + dist y ((f ^^ n) y)", "by simp"], ["proof (state)\nthis:\n  dist y ((f ^^ (m + n)) y) \\<le> dist y ((f ^^ m) y) + dist y ((f ^^ n) y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Fekete.subadditive (\\<lambda>n. dist ?y ((f ^^ n) ?y))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. dist x ((f ^^ n) x) / real n)\n    \\<longlonglongrightarrow> stable_translation_length f", "have Ly: \"(\\<lambda>n. dist y ((f^^n) y) / n) \\<longlonglongrightarrow> Inf {dist y ((f^^n) y) / n |n. n > 0}\" for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. dist y ((f ^^ n) y) / real n)\n    \\<longlonglongrightarrow> Inf {dist y ((f ^^ n) y) / real n |n. 0 < n}", "by (auto intro!: bdd_belowI[of _ 0] subadditive_converges_bounded'[OF subadditive_imp_eventually_subadditive[OF *]])"], ["proof (state)\nthis:\n  (\\<lambda>n. dist ?y ((f ^^ n) ?y) / real n)\n  \\<longlonglongrightarrow> Inf {dist ?y ((f ^^ n) ?y) / real n |n. 0 < n}\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. dist x ((f ^^ n) x) / real n)\n    \\<longlonglongrightarrow> stable_translation_length f", "have \"eventually (\\<lambda>n. dist x ((f^^n) x)/n < l) sequentially\" if \"stable_translation_length f < l\" for l"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. dist x ((f ^^ n) x) / real n < l", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. dist x ((f ^^ n) x) / real n < l", "obtain m where m: \"stable_translation_length f < m\" \"m < l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>stable_translation_length f < m; m < l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>stable_translation_length f < l\\<close> dense"], ["proof (prove)\nusing this:\n  stable_translation_length f < l\n  ?x < ?y \\<Longrightarrow> \\<exists>z>?x. z < ?y\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>stable_translation_length f < m; m < l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  stable_translation_length f < m\n  m < l\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. dist x ((f ^^ n) x) / real n < l", "have \"\\<exists>t \\<in> {translation_length (f^^n)/n |n. n > 0}. t < m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t\\<in>{translation_length (f ^^ n) / real n |n. 0 < n}. t < m", "apply (subst cInf_less_iff[symmetric])"], ["proof (prove)\ngoal (3 subgoals):\n 1. {translation_length (f ^^ n) / real n |n. 0 < n} \\<noteq> {}\n 2. bdd_below {translation_length (f ^^ n) / real n |n. 0 < n}\n 3. Inf {translation_length (f ^^ n) / real n |n. 0 < n} < m", "using m"], ["proof (prove)\nusing this:\n  stable_translation_length f < m\n  m < l\n\ngoal (3 subgoals):\n 1. {translation_length (f ^^ n) / real n |n. 0 < n} \\<noteq> {}\n 2. bdd_below {translation_length (f ^^ n) / real n |n. 0 < n}\n 3. Inf {translation_length (f ^^ n) / real n |n. 0 < n} < m", "unfolding stable_translation_length_def"], ["proof (prove)\nusing this:\n  Inf {translation_length (f ^^ n) / real n |n. 0 < n} < m\n  m < l\n\ngoal (3 subgoals):\n 1. {translation_length (f ^^ n) / real n |n. 0 < n} \\<noteq> {}\n 2. bdd_below {translation_length (f ^^ n) / real n |n. 0 < n}\n 3. Inf {translation_length (f ^^ n) / real n |n. 0 < n} < m", "by (auto intro!: bdd_belowI[of _ 0])"], ["proof (state)\nthis:\n  \\<exists>t\\<in>{translation_length (f ^^ n) / real n |n. 0 < n}. t < m\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. dist x ((f ^^ n) x) / real n < l", "then"], ["proof (chain)\npicking this:\n  \\<exists>t\\<in>{translation_length (f ^^ n) / real n |n. 0 < n}. t < m", "obtain k where k: \"k > 0\" \"translation_length (f^^k)/k < m\""], ["proof (prove)\nusing this:\n  \\<exists>t\\<in>{translation_length (f ^^ n) / real n |n. 0 < n}. t < m\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>0 < k; translation_length (f ^^ k) / real k < m\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < k\n  translation_length (f ^^ k) / real k < m\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. dist x ((f ^^ n) x) / real n < l", "have \"translation_length (f^^k) < k * m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. translation_length (f ^^ k) < real k * m", "using k"], ["proof (prove)\nusing this:\n  0 < k\n  translation_length (f ^^ k) / real k < m\n\ngoal (1 subgoal):\n 1. translation_length (f ^^ k) < real k * m", "by (simp add: divide_simps algebra_simps)"], ["proof (state)\nthis:\n  translation_length (f ^^ k) < real k * m\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. dist x ((f ^^ n) x) / real n < l", "then"], ["proof (chain)\npicking this:\n  translation_length (f ^^ k) < real k * m", "have \"\\<exists>t \\<in> {dist y ((f^^k) y) |y. True}. t < k * m\""], ["proof (prove)\nusing this:\n  translation_length (f ^^ k) < real k * m\n\ngoal (1 subgoal):\n 1. \\<exists>t\\<in>{dist y ((f ^^ k) y) |y. True}. t < real k * m", "apply (subst cInf_less_iff[symmetric])"], ["proof (prove)\ngoal (3 subgoals):\n 1. translation_length (f ^^ k) < real k * m \\<Longrightarrow>\n    {dist y ((f ^^ k) y) |y. True} \\<noteq> {}\n 2. translation_length (f ^^ k) < real k * m \\<Longrightarrow>\n    bdd_below {dist y ((f ^^ k) y) |y. True}\n 3. translation_length (f ^^ k) < real k * m \\<Longrightarrow>\n    Inf {dist y ((f ^^ k) y) |y. True} < real k * m", "unfolding translation_length_def"], ["proof (prove)\ngoal (3 subgoals):\n 1. Inf {dist x ((f ^^ k) x) |x. True} < real k * m \\<Longrightarrow>\n    {dist y ((f ^^ k) y) |y. True} \\<noteq> {}\n 2. Inf {dist x ((f ^^ k) x) |x. True} < real k * m \\<Longrightarrow>\n    bdd_below {dist y ((f ^^ k) y) |y. True}\n 3. Inf {dist x ((f ^^ k) x) |x. True} < real k * m \\<Longrightarrow>\n    Inf {dist y ((f ^^ k) y) |y. True} < real k * m", "by (auto intro!: bdd_belowI[of _ 0])"], ["proof (state)\nthis:\n  \\<exists>t\\<in>{dist y ((f ^^ k) y) |y. True}. t < real k * m\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. dist x ((f ^^ n) x) / real n < l", "then"], ["proof (chain)\npicking this:\n  \\<exists>t\\<in>{dist y ((f ^^ k) y) |y. True}. t < real k * m", "obtain y where y: \"dist y ((f^^k) y) < k * m\""], ["proof (prove)\nusing this:\n  \\<exists>t\\<in>{dist y ((f ^^ k) y) |y. True}. t < real k * m\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        dist y ((f ^^ k) y) < real k * m \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  dist y ((f ^^ k) y) < real k * m\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. dist x ((f ^^ n) x) / real n < l", "have A: \"eventually (\\<lambda>n. dist y ((f^^n) y)/n < m) sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. dist y ((f ^^ n) y) / real n < m", "apply (auto intro!: order_tendstoD[OF Ly] iffD2[OF cInf_less_iff] bdd_belowI[of _ 0] exI[of _ \"dist y ((f^^k) y)/k\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<exists>n.\n       dist y ((f ^^ k) y) / real k = dist y ((f ^^ n) y) / real n \\<and>\n       0 < n\n 2. dist y ((f ^^ k) y) / real k < m", "using y k"], ["proof (prove)\nusing this:\n  dist y ((f ^^ k) y) < real k * m\n  0 < k\n  translation_length (f ^^ k) / real k < m\n\ngoal (2 subgoals):\n 1. \\<exists>n.\n       dist y ((f ^^ k) y) / real k = dist y ((f ^^ n) y) / real n \\<and>\n       0 < n\n 2. dist y ((f ^^ k) y) / real k < m", "by (auto simp add: algebra_simps divide_simps)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially. dist y ((f ^^ n) y) / real n < m\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. dist x ((f ^^ n) x) / real n < l", "have B: \"eventually (\\<lambda>n. dist x y * (1/n) < (l-m)/2) sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       dist x y * (1 / real n) < (l - m) / 2", "apply (intro order_tendstoD[of _ \"dist x y * 0\"] tendsto_intros)"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x y * 0 < (l - m) / 2", "using \\<open>m < l\\<close>"], ["proof (prove)\nusing this:\n  m < l\n\ngoal (1 subgoal):\n 1. dist x y * 0 < (l - m) / 2", "by simp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially. dist x y * (1 / real n) < (l - m) / 2\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. dist x ((f ^^ n) x) / real n < l", "have C: \"dist x ((f^^n) x)/n < l\" if \"n > 0\" \"dist y ((f^^n) y)/n < m\" \"dist x y * (1/n) < (l-m)/2\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x) / real n < l", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x) / real n < l", "have \"dist x ((f^^n) x) \\<le> dist x y + dist y ((f^^n) y) + dist ((f^^n) y) ((f^^n) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x)\n    \\<le> dist x y + dist y ((f ^^ n) y) + dist ((f ^^ n) y) ((f ^^ n) x)", "by (intro mono_intros)"], ["proof (state)\nthis:\n  dist x ((f ^^ n) x)\n  \\<le> dist x y + dist y ((f ^^ n) y) + dist ((f ^^ n) y) ((f ^^ n) x)\n\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x) / real n < l", "also"], ["proof (state)\nthis:\n  dist x ((f ^^ n) x)\n  \\<le> dist x y + dist y ((f ^^ n) y) + dist ((f ^^ n) y) ((f ^^ n) x)\n\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x) / real n < l", "have \"... \\<le> dist x y + dist y ((f^^n) y) + dist y x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x y + dist y ((f ^^ n) y) + dist ((f ^^ n) y) ((f ^^ n) x)\n    \\<le> dist x y + dist y ((f ^^ n) y) + dist y x", "using semicontraction_iterates[OF assms, of n]"], ["proof (prove)\nusing this:\n  1-lipschitz_on UNIV (f ^^ n)\n\ngoal (1 subgoal):\n 1. dist x y + dist y ((f ^^ n) y) + dist ((f ^^ n) y) ((f ^^ n) x)\n    \\<le> dist x y + dist y ((f ^^ n) y) + dist y x", "unfolding lipschitz_on_def"], ["proof (prove)\nusing this:\n  0 \\<le> 1 \\<and>\n  (\\<forall>x\\<in>UNIV.\n      \\<forall>y\\<in>UNIV.\n         dist ((f ^^ n) x) ((f ^^ n) y) \\<le> 1 * dist x y)\n\ngoal (1 subgoal):\n 1. dist x y + dist y ((f ^^ n) y) + dist ((f ^^ n) y) ((f ^^ n) x)\n    \\<le> dist x y + dist y ((f ^^ n) y) + dist y x", "by auto"], ["proof (state)\nthis:\n  dist x y + dist y ((f ^^ n) y) + dist ((f ^^ n) y) ((f ^^ n) x)\n  \\<le> dist x y + dist y ((f ^^ n) y) + dist y x\n\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x) / real n < l", "also"], ["proof (state)\nthis:\n  dist x y + dist y ((f ^^ n) y) + dist ((f ^^ n) y) ((f ^^ n) x)\n  \\<le> dist x y + dist y ((f ^^ n) y) + dist y x\n\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x) / real n < l", "have \"... = 2 * dist x y + dist y ((f^^n) y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x y + dist y ((f ^^ n) y) + dist y x =\n    2 * dist x y + dist y ((f ^^ n) y)", "by (simp add: dist_commute)"], ["proof (state)\nthis:\n  dist x y + dist y ((f ^^ n) y) + dist y x =\n  2 * dist x y + dist y ((f ^^ n) y)\n\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x) / real n < l", "also"], ["proof (state)\nthis:\n  dist x y + dist y ((f ^^ n) y) + dist y x =\n  2 * dist x y + dist y ((f ^^ n) y)\n\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x) / real n < l", "have \"... < 2 * real n * (l-m)/2 + n * m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * dist x y + dist y ((f ^^ n) y)\n    < 2 * real n * (l - m) / 2 + real n * m", "apply (intro mono_intros)"], ["proof (prove)\ngoal (2 subgoals):\n 1. 2 * dist x y < 2 * real n * (l - m) / 2\n 2. dist y ((f ^^ n) y) \\<le> real n * m", "using that"], ["proof (prove)\nusing this:\n  0 < n\n  dist y ((f ^^ n) y) / real n < m\n  dist x y * (1 / real n) < (l - m) / 2\n\ngoal (2 subgoals):\n 1. 2 * dist x y < 2 * real n * (l - m) / 2\n 2. dist y ((f ^^ n) y) \\<le> real n * m", "by (auto simp add: algebra_simps divide_simps)"], ["proof (state)\nthis:\n  2 * dist x y + dist y ((f ^^ n) y) < 2 * real n * (l - m) / 2 + real n * m\n\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x) / real n < l", "also"], ["proof (state)\nthis:\n  2 * dist x y + dist y ((f ^^ n) y) < 2 * real n * (l - m) / 2 + real n * m\n\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x) / real n < l", "have \"... = n * l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * real n * (l - m) / 2 + real n * m = real n * l", "by (simp add: algebra_simps divide_simps)"], ["proof (state)\nthis:\n  2 * real n * (l - m) / 2 + real n * m = real n * l\n\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x) / real n < l", "finally"], ["proof (chain)\npicking this:\n  dist x ((f ^^ n) x) < real n * l", "show ?thesis"], ["proof (prove)\nusing this:\n  dist x ((f ^^ n) x) < real n * l\n\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x) / real n < l", "using that"], ["proof (prove)\nusing this:\n  dist x ((f ^^ n) x) < real n * l\n  0 < n\n  dist y ((f ^^ n) y) / real n < m\n  dist x y * (1 / real n) < (l - m) / 2\n\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x) / real n < l", "by (simp add: algebra_simps divide_simps)"], ["proof (state)\nthis:\n  dist x ((f ^^ n) x) / real n < l\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>0 < ?n; dist y ((f ^^ ?n) y) / real ?n < m;\n   dist x y * (1 / real ?n) < (l - m) / 2\\<rbrakk>\n  \\<Longrightarrow> dist x ((f ^^ ?n) x) / real ?n < l\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. dist x ((f ^^ n) x) / real n < l", "show \"eventually (\\<lambda>n. dist x ((f^^n) x)/n < l) sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. dist x ((f ^^ n) x) / real n < l", "by (rule eventually_mono[OF eventually_conj[OF eventually_conj[OF A B] eventually_gt_at_top[of 0]] C], auto)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially. dist x ((f ^^ n) x) / real n < l\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  stable_translation_length f < ?l \\<Longrightarrow>\n  \\<forall>\\<^sub>F n in sequentially. dist x ((f ^^ n) x) / real n < ?l\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. dist x ((f ^^ n) x) / real n)\n    \\<longlonglongrightarrow> stable_translation_length f", "moreover"], ["proof (state)\nthis:\n  stable_translation_length f < ?l \\<Longrightarrow>\n  \\<forall>\\<^sub>F n in sequentially. dist x ((f ^^ n) x) / real n < ?l\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. dist x ((f ^^ n) x) / real n)\n    \\<longlonglongrightarrow> stable_translation_length f", "have \"eventually (\\<lambda>n. dist x ((f^^n) x)/n > l) sequentially\" if \"stable_translation_length f > l\" for l"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. l < dist x ((f ^^ n) x) / real n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. l < dist x ((f ^^ n) x) / real n", "have *: \"dist x ((f^^n) x)/n > l\" if \"n > 0\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. l < dist x ((f ^^ n) x) / real n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. l < dist x ((f ^^ n) x) / real n", "have \"n * l < n * stable_translation_length f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real n * l < real n * stable_translation_length f", "using \\<open>stable_translation_length f > l\\<close> \\<open>n > 0\\<close>"], ["proof (prove)\nusing this:\n  l < stable_translation_length f\n  0 < n\n\ngoal (1 subgoal):\n 1. real n * l < real n * stable_translation_length f", "by auto"], ["proof (state)\nthis:\n  real n * l < real n * stable_translation_length f\n\ngoal (1 subgoal):\n 1. l < dist x ((f ^^ n) x) / real n", "also"], ["proof (state)\nthis:\n  real n * l < real n * stable_translation_length f\n\ngoal (1 subgoal):\n 1. l < dist x ((f ^^ n) x) / real n", "have \"... \\<le> translation_length (f^^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real n * stable_translation_length f \\<le> translation_length (f ^^ n)", "by (intro mono_intros)"], ["proof (state)\nthis:\n  real n * stable_translation_length f \\<le> translation_length (f ^^ n)\n\ngoal (1 subgoal):\n 1. l < dist x ((f ^^ n) x) / real n", "also"], ["proof (state)\nthis:\n  real n * stable_translation_length f \\<le> translation_length (f ^^ n)\n\ngoal (1 subgoal):\n 1. l < dist x ((f ^^ n) x) / real n", "have \"... \\<le> dist x ((f^^n) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. translation_length (f ^^ n) \\<le> dist x ((f ^^ n) x)", "by (intro mono_intros)"], ["proof (state)\nthis:\n  translation_length (f ^^ n) \\<le> dist x ((f ^^ n) x)\n\ngoal (1 subgoal):\n 1. l < dist x ((f ^^ n) x) / real n", "finally"], ["proof (chain)\npicking this:\n  real n * l < dist x ((f ^^ n) x)", "show ?thesis"], ["proof (prove)\nusing this:\n  real n * l < dist x ((f ^^ n) x)\n\ngoal (1 subgoal):\n 1. l < dist x ((f ^^ n) x) / real n", "using \\<open>n > 0\\<close>"], ["proof (prove)\nusing this:\n  real n * l < dist x ((f ^^ n) x)\n  0 < n\n\ngoal (1 subgoal):\n 1. l < dist x ((f ^^ n) x) / real n", "by (auto simp add: algebra_simps divide_simps)"], ["proof (state)\nthis:\n  l < dist x ((f ^^ n) x) / real n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < ?n \\<Longrightarrow> l < dist x ((f ^^ ?n) x) / real ?n\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. l < dist x ((f ^^ n) x) / real n", "then"], ["proof (chain)\npicking this:\n  0 < ?n \\<Longrightarrow> l < dist x ((f ^^ ?n) x) / real ?n", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < ?n \\<Longrightarrow> l < dist x ((f ^^ ?n) x) / real ?n\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. l < dist x ((f ^^ n) x) / real n", "by (rule eventually_mono[rotated], auto)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially. l < dist x ((f ^^ n) x) / real n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?l < stable_translation_length f \\<Longrightarrow>\n  \\<forall>\\<^sub>F n in sequentially. ?l < dist x ((f ^^ n) x) / real n\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. dist x ((f ^^ n) x) / real n)\n    \\<longlonglongrightarrow> stable_translation_length f", "ultimately"], ["proof (chain)\npicking this:\n  stable_translation_length f < ?l \\<Longrightarrow>\n  \\<forall>\\<^sub>F n in sequentially. dist x ((f ^^ n) x) / real n < ?l\n  ?l < stable_translation_length f \\<Longrightarrow>\n  \\<forall>\\<^sub>F n in sequentially. ?l < dist x ((f ^^ n) x) / real n", "show ?thesis"], ["proof (prove)\nusing this:\n  stable_translation_length f < ?l \\<Longrightarrow>\n  \\<forall>\\<^sub>F n in sequentially. dist x ((f ^^ n) x) / real n < ?l\n  ?l < stable_translation_length f \\<Longrightarrow>\n  \\<forall>\\<^sub>F n in sequentially. ?l < dist x ((f ^^ n) x) / real n\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. dist x ((f ^^ n) x) / real n)\n    \\<longlonglongrightarrow> stable_translation_length f", "by (rule order_tendstoI[rotated])"], ["proof (state)\nthis:\n  (\\<lambda>n. dist x ((f ^^ n) x) / real n)\n  \\<longlonglongrightarrow> stable_translation_length f\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>It follows from the previous proposition that the stable translation length is also the limit\nof the renormalized translation length of $f^n$.\\<close>"], ["", "proposition stable_translation_length_as_limit:\n  assumes \"1-lipschitz_on UNIV f\"\n  shows \"(\\<lambda>n. translation_length (f^^n) / n) \\<longlonglongrightarrow> stable_translation_length f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. translation_length (f ^^ n) / real n)\n    \\<longlonglongrightarrow> stable_translation_length f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n. translation_length (f ^^ n) / real n)\n    \\<longlonglongrightarrow> stable_translation_length f", "obtain x::'a where True"], ["proof (prove)\ngoal (1 subgoal):\n 1. (True \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  True\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. translation_length (f ^^ n) / real n)\n    \\<longlonglongrightarrow> stable_translation_length f", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. translation_length (f ^^ n) / real n)\n    \\<longlonglongrightarrow> stable_translation_length f", "proof (rule tendsto_sandwich[of \"\\<lambda>n. stable_translation_length f\" _ _ \"\\<lambda>n. dist x ((f^^n) x)/n\"])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       stable_translation_length f\n       \\<le> translation_length (f ^^ n) / real n\n 2. \\<forall>\\<^sub>F n in sequentially.\n       translation_length (f ^^ n) / real n\n       \\<le> dist x ((f ^^ n) x) / real n\n 3. (\\<lambda>n. stable_translation_length f)\n    \\<longlonglongrightarrow> stable_translation_length f\n 4. (\\<lambda>n. dist x ((f ^^ n) x) / real n)\n    \\<longlonglongrightarrow> stable_translation_length f", "have \"stable_translation_length f \\<le> translation_length (f ^^ n) / real n\" if \"n > 0\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. stable_translation_length f \\<le> translation_length (f ^^ n) / real n", "using stable_translation_length_le_translation_length[of n f] that"], ["proof (prove)\nusing this:\n  real n * stable_translation_length f \\<le> translation_length (f ^^ n)\n  0 < n\n\ngoal (1 subgoal):\n 1. stable_translation_length f \\<le> translation_length (f ^^ n) / real n", "by (simp add: divide_simps algebra_simps)"], ["proof (state)\nthis:\n  0 < ?n \\<Longrightarrow>\n  stable_translation_length f \\<le> translation_length (f ^^ ?n) / real ?n\n\ngoal (4 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       stable_translation_length f\n       \\<le> translation_length (f ^^ n) / real n\n 2. \\<forall>\\<^sub>F n in sequentially.\n       translation_length (f ^^ n) / real n\n       \\<le> dist x ((f ^^ n) x) / real n\n 3. (\\<lambda>n. stable_translation_length f)\n    \\<longlonglongrightarrow> stable_translation_length f\n 4. (\\<lambda>n. dist x ((f ^^ n) x) / real n)\n    \\<longlonglongrightarrow> stable_translation_length f", "then"], ["proof (chain)\npicking this:\n  0 < ?n \\<Longrightarrow>\n  stable_translation_length f \\<le> translation_length (f ^^ ?n) / real ?n", "show \"eventually (\\<lambda>n. stable_translation_length f \\<le> translation_length (f ^^ n) / real n) sequentially\""], ["proof (prove)\nusing this:\n  0 < ?n \\<Longrightarrow>\n  stable_translation_length f \\<le> translation_length (f ^^ ?n) / real ?n\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       stable_translation_length f\n       \\<le> translation_length (f ^^ n) / real n", "by (rule eventually_mono[rotated], auto)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     stable_translation_length f \\<le> translation_length (f ^^ n) / real n\n\ngoal (3 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       translation_length (f ^^ n) / real n\n       \\<le> dist x ((f ^^ n) x) / real n\n 2. (\\<lambda>n. stable_translation_length f)\n    \\<longlonglongrightarrow> stable_translation_length f\n 3. (\\<lambda>n. dist x ((f ^^ n) x) / real n)\n    \\<longlonglongrightarrow> stable_translation_length f", "have \"translation_length (f ^^ n) / real n \\<le> dist x ((f ^^ n) x) / real n\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. translation_length (f ^^ n) / real n \\<le> dist x ((f ^^ n) x) / real n", "using translation_length_le[of \"f^^n\" x]"], ["proof (prove)\nusing this:\n  translation_length (f ^^ n) \\<le> dist x ((f ^^ n) x)\n\ngoal (1 subgoal):\n 1. translation_length (f ^^ n) / real n \\<le> dist x ((f ^^ n) x) / real n", "by (auto simp add: divide_simps)"], ["proof (state)\nthis:\n  translation_length (f ^^ ?n) / real ?n\n  \\<le> dist x ((f ^^ ?n) x) / real ?n\n\ngoal (3 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       translation_length (f ^^ n) / real n\n       \\<le> dist x ((f ^^ n) x) / real n\n 2. (\\<lambda>n. stable_translation_length f)\n    \\<longlonglongrightarrow> stable_translation_length f\n 3. (\\<lambda>n. dist x ((f ^^ n) x) / real n)\n    \\<longlonglongrightarrow> stable_translation_length f", "then"], ["proof (chain)\npicking this:\n  translation_length (f ^^ ?n) / real ?n\n  \\<le> dist x ((f ^^ ?n) x) / real ?n", "show \"eventually (\\<lambda>n. translation_length (f ^^ n) / real n \\<le> dist x ((f ^^ n) x) / real n) sequentially\""], ["proof (prove)\nusing this:\n  translation_length (f ^^ ?n) / real ?n\n  \\<le> dist x ((f ^^ ?n) x) / real ?n\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       translation_length (f ^^ n) / real n\n       \\<le> dist x ((f ^^ n) x) / real n", "by auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     translation_length (f ^^ n) / real n \\<le> dist x ((f ^^ n) x) / real n\n\ngoal (2 subgoals):\n 1. (\\<lambda>n. stable_translation_length f)\n    \\<longlonglongrightarrow> stable_translation_length f\n 2. (\\<lambda>n. dist x ((f ^^ n) x) / real n)\n    \\<longlonglongrightarrow> stable_translation_length f", "qed (auto simp add: stable_translation_length_as_pointwise_limit[OF assms])"], ["proof (state)\nthis:\n  (\\<lambda>n. translation_length (f ^^ n) / real n)\n  \\<longlonglongrightarrow> stable_translation_length f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stable_translation_length_inv:\n  assumes \"isometry f\"\n  shows \"stable_translation_length (inv f) = stable_translation_length f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stable_translation_length (inv f) = stable_translation_length f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. stable_translation_length (inv f) = stable_translation_length f", "have *: \"dist basepoint (((inv f)^^n) basepoint) = dist basepoint ((f^^n) basepoint)\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist basepoint ((inv f ^^ n) basepoint) =\n    dist basepoint ((f ^^ n) basepoint)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist basepoint ((inv f ^^ n) basepoint) =\n    dist basepoint ((f ^^ n) basepoint)", "have \"basepoint = (f^^n) (((inv f)^^n) basepoint)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. basepoint = (f ^^ n) ((inv f ^^ n) basepoint)", "by (metis assms comp_apply fn_o_inv_fn_is_id isometry_inverse(2))"], ["proof (state)\nthis:\n  basepoint = (f ^^ n) ((inv f ^^ n) basepoint)\n\ngoal (1 subgoal):\n 1. dist basepoint ((inv f ^^ n) basepoint) =\n    dist basepoint ((f ^^ n) basepoint)", "then"], ["proof (chain)\npicking this:\n  basepoint = (f ^^ n) ((inv f ^^ n) basepoint)", "have \"dist basepoint ((f^^n) basepoint) = dist ((f^^n) (((inv f)^^n) basepoint)) ((f^^n) basepoint)\""], ["proof (prove)\nusing this:\n  basepoint = (f ^^ n) ((inv f ^^ n) basepoint)\n\ngoal (1 subgoal):\n 1. dist basepoint ((f ^^ n) basepoint) =\n    dist ((f ^^ n) ((inv f ^^ n) basepoint)) ((f ^^ n) basepoint)", "by auto"], ["proof (state)\nthis:\n  dist basepoint ((f ^^ n) basepoint) =\n  dist ((f ^^ n) ((inv f ^^ n) basepoint)) ((f ^^ n) basepoint)\n\ngoal (1 subgoal):\n 1. dist basepoint ((inv f ^^ n) basepoint) =\n    dist basepoint ((f ^^ n) basepoint)", "also"], ["proof (state)\nthis:\n  dist basepoint ((f ^^ n) basepoint) =\n  dist ((f ^^ n) ((inv f ^^ n) basepoint)) ((f ^^ n) basepoint)\n\ngoal (1 subgoal):\n 1. dist basepoint ((inv f ^^ n) basepoint) =\n    dist basepoint ((f ^^ n) basepoint)", "have \"... = dist (((inv f)^^n) basepoint) basepoint\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist ((f ^^ n) ((inv f ^^ n) basepoint)) ((f ^^ n) basepoint) =\n    dist ((inv f ^^ n) basepoint) basepoint", "unfolding isometryD(2)[OF isometry_iterates[OF assms]]"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist ((inv f ^^ n) basepoint) basepoint =\n    dist ((inv f ^^ n) basepoint) basepoint", "by simp"], ["proof (state)\nthis:\n  dist ((f ^^ n) ((inv f ^^ n) basepoint)) ((f ^^ n) basepoint) =\n  dist ((inv f ^^ n) basepoint) basepoint\n\ngoal (1 subgoal):\n 1. dist basepoint ((inv f ^^ n) basepoint) =\n    dist basepoint ((f ^^ n) basepoint)", "finally"], ["proof (chain)\npicking this:\n  dist basepoint ((f ^^ n) basepoint) =\n  dist ((inv f ^^ n) basepoint) basepoint", "show ?thesis"], ["proof (prove)\nusing this:\n  dist basepoint ((f ^^ n) basepoint) =\n  dist ((inv f ^^ n) basepoint) basepoint\n\ngoal (1 subgoal):\n 1. dist basepoint ((inv f ^^ n) basepoint) =\n    dist basepoint ((f ^^ n) basepoint)", "by (simp add: dist_commute)"], ["proof (state)\nthis:\n  dist basepoint ((inv f ^^ n) basepoint) =\n  dist basepoint ((f ^^ n) basepoint)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dist basepoint ((inv f ^^ ?n) basepoint) =\n  dist basepoint ((f ^^ ?n) basepoint)\n\ngoal (1 subgoal):\n 1. stable_translation_length (inv f) = stable_translation_length f", "have \"(\\<lambda>n. dist basepoint ((f^^n) basepoint)/n) \\<longlonglongrightarrow> stable_translation_length f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. dist basepoint ((f ^^ n) basepoint) / real n)\n    \\<longlonglongrightarrow> stable_translation_length f", "using stable_translation_length_as_pointwise_limit[OF isometryD(4)[OF assms]]"], ["proof (prove)\nusing this:\n  (\\<lambda>n. dist ?x ((f ^^ n) ?x) / real n)\n  \\<longlonglongrightarrow> stable_translation_length f\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. dist basepoint ((f ^^ n) basepoint) / real n)\n    \\<longlonglongrightarrow> stable_translation_length f", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>n. dist basepoint ((f ^^ n) basepoint) / real n)\n  \\<longlonglongrightarrow> stable_translation_length f\n\ngoal (1 subgoal):\n 1. stable_translation_length (inv f) = stable_translation_length f", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>n. dist basepoint ((f ^^ n) basepoint) / real n)\n  \\<longlonglongrightarrow> stable_translation_length f\n\ngoal (1 subgoal):\n 1. stable_translation_length (inv f) = stable_translation_length f", "have \"(\\<lambda>n. dist basepoint ((f^^n) basepoint)/n) \\<longlonglongrightarrow> stable_translation_length (inv f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. dist basepoint ((f ^^ n) basepoint) / real n)\n    \\<longlonglongrightarrow> stable_translation_length (inv f)", "unfolding *[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. dist basepoint ((inv f ^^ n) basepoint) / real n)\n    \\<longlonglongrightarrow> stable_translation_length (inv f)", "using stable_translation_length_as_pointwise_limit[OF isometryD(4)[OF isometry_inverse(1)[OF assms]]]"], ["proof (prove)\nusing this:\n  (\\<lambda>n. dist ?x ((inv f ^^ n) ?x) / real n)\n  \\<longlonglongrightarrow> stable_translation_length (inv f)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. dist basepoint ((inv f ^^ n) basepoint) / real n)\n    \\<longlonglongrightarrow> stable_translation_length (inv f)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>n. dist basepoint ((f ^^ n) basepoint) / real n)\n  \\<longlonglongrightarrow> stable_translation_length (inv f)\n\ngoal (1 subgoal):\n 1. stable_translation_length (inv f) = stable_translation_length f", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>n. dist basepoint ((f ^^ n) basepoint) / real n)\n  \\<longlonglongrightarrow> stable_translation_length f\n  (\\<lambda>n. dist basepoint ((f ^^ n) basepoint) / real n)\n  \\<longlonglongrightarrow> stable_translation_length (inv f)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>n. dist basepoint ((f ^^ n) basepoint) / real n)\n  \\<longlonglongrightarrow> stable_translation_length f\n  (\\<lambda>n. dist basepoint ((f ^^ n) basepoint) / real n)\n  \\<longlonglongrightarrow> stable_translation_length (inv f)\n\ngoal (1 subgoal):\n 1. stable_translation_length (inv f) = stable_translation_length f", "using LIMSEQ_unique"], ["proof (prove)\nusing this:\n  (\\<lambda>n. dist basepoint ((f ^^ n) basepoint) / real n)\n  \\<longlonglongrightarrow> stable_translation_length f\n  (\\<lambda>n. dist basepoint ((f ^^ n) basepoint) / real n)\n  \\<longlonglongrightarrow> stable_translation_length (inv f)\n  \\<lbrakk>?X \\<longlonglongrightarrow> ?a;\n   ?X \\<longlonglongrightarrow> ?b\\<rbrakk>\n  \\<Longrightarrow> ?a = ?b\n\ngoal (1 subgoal):\n 1. stable_translation_length (inv f) = stable_translation_length f", "by auto"], ["proof (state)\nthis:\n  stable_translation_length (inv f) = stable_translation_length f\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>The strength of an isometry at a fixed point at infinity\\<close>"], ["", "text \\<open>The additive strength of an isometry at a fixed point at infinity is the asymptotic average\nevery point is moved towards the fixed point at each step. It is measured using the Busemann\nfunction.\\<close>"], ["", "definition additive_strength::\"('a::Gromov_hyperbolic_space \\<Rightarrow> 'a) \\<Rightarrow> ('a Gromov_completion) \\<Rightarrow> real\"\n  where \"additive_strength f xi = lim (\\<lambda>n. (Busemann_function_at xi ((f^^n) basepoint) basepoint)/n)\""], ["", "text \\<open>For additivity reasons, as the Busemann function is a quasi-morphism, the additive strength\nmeasures the deplacement even at finite times. It is also uniform in terms of the basepoint. This\nshows that an isometry sends horoballs centered at a fixed point to horoballs, up to a uniformly\nbounded error depending only on $\\delta$.\\<close>"], ["", "lemma Busemann_function_eq_additive_strength:\n  assumes \"isometry f\" \"Gromov_extension f xi = xi\"\n  shows \"\\<bar>Busemann_function_at xi ((f^^n) x) (x::'a::Gromov_hyperbolic_space) - real n * additive_strength f xi\\<bar> \\<le> 2 * deltaG(TYPE('a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>Busemann_function_at xi ((f ^^ n) x) x -\n          real n * additive_strength f xi\\<bar>\n    \\<le> 2 * deltaG TYPE('a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<bar>Busemann_function_at xi ((f ^^ n) x) x -\n          real n * additive_strength f xi\\<bar>\n    \\<le> 2 * deltaG TYPE('a)", "define u where \"u = (\\<lambda>y n. Busemann_function_at xi ((f^^n) y) y)\""], ["proof (state)\nthis:\n  u = (\\<lambda>y n. Busemann_function_at xi ((f ^^ n) y) y)\n\ngoal (1 subgoal):\n 1. \\<bar>Busemann_function_at xi ((f ^^ n) x) x -\n          real n * additive_strength f xi\\<bar>\n    \\<le> 2 * deltaG TYPE('a)", "have *: \"abs(u y (m+n) - u y m - u y n) \\<le> 2 * deltaG(TYPE('a))\" for n m y"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>u y (m + n) - u y m - u y n\\<bar> \\<le> 2 * deltaG TYPE('a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<bar>u y (m + n) - u y m - u y n\\<bar> \\<le> 2 * deltaG TYPE('a)", "have P: \"Gromov_extension (f^^m) xi = xi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Gromov_extension (f ^^ m) xi = xi", "unfolding Gromov_extension_isometry_iterates[OF assms(1)]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Gromov_extension f ^^ m) xi = xi", "apply (induction m)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (Gromov_extension f ^^ 0) xi = xi\n 2. \\<And>m.\n       (Gromov_extension f ^^ m) xi = xi \\<Longrightarrow>\n       (Gromov_extension f ^^ Suc m) xi = xi", "using assms"], ["proof (prove)\nusing this:\n  isometry f\n  Gromov_extension f xi = xi\n\ngoal (2 subgoals):\n 1. (Gromov_extension f ^^ 0) xi = xi\n 2. \\<And>m.\n       (Gromov_extension f ^^ m) xi = xi \\<Longrightarrow>\n       (Gromov_extension f ^^ Suc m) xi = xi", "by auto"], ["proof (state)\nthis:\n  Gromov_extension (f ^^ m) xi = xi\n\ngoal (1 subgoal):\n 1. \\<bar>u y (m + n) - u y m - u y n\\<bar> \\<le> 2 * deltaG TYPE('a)", "have *: \"u y n = Busemann_function_at xi ((f^^m) ((f^^n) y)) ((f^^m) y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u y n = Busemann_function_at xi ((f ^^ m) ((f ^^ n) y)) ((f ^^ m) y)", "apply (subst P[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. u y n =\n    Busemann_function_at (Gromov_extension (f ^^ m) xi)\n     ((f ^^ m) ((f ^^ n) y)) ((f ^^ m) y)", "unfolding Busemann_function_isometry[OF isometry_iterates[OF \\<open>isometry f\\<close>]] u_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Busemann_function_at xi ((f ^^ n) y) y =\n    Busemann_function_at xi ((f ^^ n) y) y", "by auto"], ["proof (state)\nthis:\n  u y n = Busemann_function_at xi ((f ^^ m) ((f ^^ n) y)) ((f ^^ m) y)\n\ngoal (1 subgoal):\n 1. \\<bar>u y (m + n) - u y m - u y n\\<bar> \\<le> 2 * deltaG TYPE('a)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>u y (m + n) - u y m - u y n\\<bar> \\<le> 2 * deltaG TYPE('a)", "unfolding *"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>u y (m + n) - u y m -\n          Busemann_function_at xi ((f ^^ m) ((f ^^ n) y)) ((f ^^ m) y)\\<bar>\n    \\<le> 2 * deltaG TYPE('a)", "unfolding u_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>Busemann_function_at xi ((f ^^ (m + n)) y) y -\n          Busemann_function_at xi ((f ^^ m) y) y -\n          Busemann_function_at xi ((f ^^ m) ((f ^^ n) y)) ((f ^^ m) y)\\<bar>\n    \\<le> 2 * deltaG TYPE('a)", "using Busemann_function_quasi_morphism[of xi \"(f^^(m+n)) y\" \"(f^^m) y\" y]"], ["proof (prove)\nusing this:\n  \\<bar>Busemann_function_at xi ((f ^^ (m + n)) y) ((f ^^ m) y) +\n        Busemann_function_at xi ((f ^^ m) y) y -\n        Busemann_function_at xi ((f ^^ (m + n)) y) y\\<bar>\n  \\<le> 2 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. \\<bar>Busemann_function_at xi ((f ^^ (m + n)) y) y -\n          Busemann_function_at xi ((f ^^ m) y) y -\n          Busemann_function_at xi ((f ^^ m) ((f ^^ n) y)) ((f ^^ m) y)\\<bar>\n    \\<le> 2 * deltaG TYPE('a)", "unfolding funpow_add comp_def"], ["proof (prove)\nusing this:\n  \\<bar>Busemann_function_at xi ((f ^^ m) ((f ^^ n) y)) ((f ^^ m) y) +\n        Busemann_function_at xi ((f ^^ m) y) y -\n        Busemann_function_at xi ((f ^^ m) ((f ^^ n) y)) y\\<bar>\n  \\<le> 2 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. \\<bar>Busemann_function_at xi ((f ^^ m) ((f ^^ n) y)) y -\n          Busemann_function_at xi ((f ^^ m) y) y -\n          Busemann_function_at xi ((f ^^ m) ((f ^^ n) y)) ((f ^^ m) y)\\<bar>\n    \\<le> 2 * deltaG TYPE('a)", "by auto"], ["proof (state)\nthis:\n  \\<bar>u y (m + n) - u y m - u y n\\<bar> \\<le> 2 * deltaG TYPE('a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<bar>u ?y (?m + ?n) - u ?y ?m - u ?y ?n\\<bar> \\<le> 2 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. \\<bar>Busemann_function_at xi ((f ^^ n) x) x -\n          real n * additive_strength f xi\\<bar>\n    \\<le> 2 * deltaG TYPE('a)", "define l where \"l = (\\<lambda>y. lim (\\<lambda>n. u y n/n))\""], ["proof (state)\nthis:\n  l = (\\<lambda>y. lim (\\<lambda>n. u y n / real n))\n\ngoal (1 subgoal):\n 1. \\<bar>Busemann_function_at xi ((f ^^ n) x) x -\n          real n * additive_strength f xi\\<bar>\n    \\<le> 2 * deltaG TYPE('a)", "have A: \"abs(u y k - k * l y) \\<le> 2 * deltaG(TYPE('a))\" for y k"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>u y k - real k * l y\\<bar> \\<le> 2 * deltaG TYPE('a)", "unfolding l_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>u y k - real k * lim (\\<lambda>n. u y n / real n)\\<bar>\n    \\<le> 2 * deltaG TYPE('a)", "using almost_additive_converges(2) *"], ["proof (prove)\nusing this:\n  (\\<And>m n.\n      \\<bar>?u (m + n) - ?u m - ?u n\\<bar> \\<le> ?C) \\<Longrightarrow>\n  \\<bar>?u ?k - real ?k * lim (\\<lambda>n. ?u n / real n)\\<bar> \\<le> ?C\n  \\<bar>u ?y (?m + ?n) - u ?y ?m - u ?y ?n\\<bar> \\<le> 2 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. \\<bar>u y k - real k * lim (\\<lambda>n. u y n / real n)\\<bar>\n    \\<le> 2 * deltaG TYPE('a)", "by auto"], ["proof (state)\nthis:\n  \\<bar>u ?y ?k - real ?k * l ?y\\<bar> \\<le> 2 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. \\<bar>Busemann_function_at xi ((f ^^ n) x) x -\n          real n * additive_strength f xi\\<bar>\n    \\<le> 2 * deltaG TYPE('a)", "then"], ["proof (chain)\npicking this:\n  \\<bar>u ?y ?k - real ?k * l ?y\\<bar> \\<le> 2 * deltaG TYPE('a)", "have *: \"abs(Busemann_function_at xi ((f^^k) y) y - k * l y) \\<le> 2 * deltaG(TYPE('a))\" for y k"], ["proof (prove)\nusing this:\n  \\<bar>u ?y ?k - real ?k * l ?y\\<bar> \\<le> 2 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. \\<bar>Busemann_function_at xi ((f ^^ k) y) y - real k * l y\\<bar>\n    \\<le> 2 * deltaG TYPE('a)", "unfolding u_def"], ["proof (prove)\nusing this:\n  \\<bar>Busemann_function_at xi ((f ^^ ?k) ?y) ?y - real ?k * l ?y\\<bar>\n  \\<le> 2 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. \\<bar>Busemann_function_at xi ((f ^^ k) y) y - real k * l y\\<bar>\n    \\<le> 2 * deltaG TYPE('a)", "by auto"], ["proof (state)\nthis:\n  \\<bar>Busemann_function_at xi ((f ^^ ?k) ?y) ?y - real ?k * l ?y\\<bar>\n  \\<le> 2 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. \\<bar>Busemann_function_at xi ((f ^^ n) x) x -\n          real n * additive_strength f xi\\<bar>\n    \\<le> 2 * deltaG TYPE('a)", "have \"l basepoint = additive_strength f xi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l basepoint = additive_strength f xi", "unfolding l_def u_def additive_strength_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. lim (\\<lambda>n.\n            Busemann_function_at xi ((f ^^ n) basepoint) basepoint /\n            real n) =\n    lim (\\<lambda>n.\n            Busemann_function_at xi ((f ^^ n) basepoint) basepoint / real n)", "by auto"], ["proof (state)\nthis:\n  l basepoint = additive_strength f xi\n\ngoal (1 subgoal):\n 1. \\<bar>Busemann_function_at xi ((f ^^ n) x) x -\n          real n * additive_strength f xi\\<bar>\n    \\<le> 2 * deltaG TYPE('a)", "have \"abs(k * l basepoint - k * l x) \\<le> 4 * deltaG(TYPE('a)) + 2 * dist basepoint x\" for k::nat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>real k * l basepoint - real k * l x\\<bar>\n    \\<le> 4 * deltaG TYPE('a) + 2 * dist basepoint x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<bar>real k * l basepoint - real k * l x\\<bar>\n    \\<le> 4 * deltaG TYPE('a) + 2 * dist basepoint x", "have \"abs(k * l basepoint - k * l x) = abs((Busemann_function_at xi ((f^^k) x) x - k * l x) - (Busemann_function_at xi ((f^^k) basepoint) basepoint - k * l basepoint)\n                                                + (Busemann_function_at xi ((f^^k) basepoint) basepoint - Busemann_function_at xi ((f^^k) x) x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>real k * l basepoint - real k * l x\\<bar> =\n    \\<bar>Busemann_function_at xi ((f ^^ k) x) x - real k * l x -\n          (Busemann_function_at xi ((f ^^ k) basepoint) basepoint -\n           real k * l basepoint) +\n          (Busemann_function_at xi ((f ^^ k) basepoint) basepoint -\n           Busemann_function_at xi ((f ^^ k) x) x)\\<bar>", "by auto"], ["proof (state)\nthis:\n  \\<bar>real k * l basepoint - real k * l x\\<bar> =\n  \\<bar>Busemann_function_at xi ((f ^^ k) x) x - real k * l x -\n        (Busemann_function_at xi ((f ^^ k) basepoint) basepoint -\n         real k * l basepoint) +\n        (Busemann_function_at xi ((f ^^ k) basepoint) basepoint -\n         Busemann_function_at xi ((f ^^ k) x) x)\\<bar>\n\ngoal (1 subgoal):\n 1. \\<bar>real k * l basepoint - real k * l x\\<bar>\n    \\<le> 4 * deltaG TYPE('a) + 2 * dist basepoint x", "also"], ["proof (state)\nthis:\n  \\<bar>real k * l basepoint - real k * l x\\<bar> =\n  \\<bar>Busemann_function_at xi ((f ^^ k) x) x - real k * l x -\n        (Busemann_function_at xi ((f ^^ k) basepoint) basepoint -\n         real k * l basepoint) +\n        (Busemann_function_at xi ((f ^^ k) basepoint) basepoint -\n         Busemann_function_at xi ((f ^^ k) x) x)\\<bar>\n\ngoal (1 subgoal):\n 1. \\<bar>real k * l basepoint - real k * l x\\<bar>\n    \\<le> 4 * deltaG TYPE('a) + 2 * dist basepoint x", "have \"... \\<le> abs (Busemann_function_at xi ((f^^k) x) x - k * l x) + abs (Busemann_function_at xi ((f^^k) basepoint) basepoint - k * l basepoint)\n                      + abs (Busemann_function_at xi ((f^^k) basepoint) basepoint - Busemann_function_at xi ((f^^k) x) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>Busemann_function_at xi ((f ^^ k) x) x - real k * l x -\n          (Busemann_function_at xi ((f ^^ k) basepoint) basepoint -\n           real k * l basepoint) +\n          (Busemann_function_at xi ((f ^^ k) basepoint) basepoint -\n           Busemann_function_at xi ((f ^^ k) x) x)\\<bar>\n    \\<le> \\<bar>Busemann_function_at xi ((f ^^ k) x) x -\n                real k * l x\\<bar> +\n          \\<bar>Busemann_function_at xi ((f ^^ k) basepoint) basepoint -\n                real k * l basepoint\\<bar> +\n          \\<bar>Busemann_function_at xi ((f ^^ k) basepoint) basepoint -\n                Busemann_function_at xi ((f ^^ k) x) x\\<bar>", "by auto"], ["proof (state)\nthis:\n  \\<bar>Busemann_function_at xi ((f ^^ k) x) x - real k * l x -\n        (Busemann_function_at xi ((f ^^ k) basepoint) basepoint -\n         real k * l basepoint) +\n        (Busemann_function_at xi ((f ^^ k) basepoint) basepoint -\n         Busemann_function_at xi ((f ^^ k) x) x)\\<bar>\n  \\<le> \\<bar>Busemann_function_at xi ((f ^^ k) x) x - real k * l x\\<bar> +\n        \\<bar>Busemann_function_at xi ((f ^^ k) basepoint) basepoint -\n              real k * l basepoint\\<bar> +\n        \\<bar>Busemann_function_at xi ((f ^^ k) basepoint) basepoint -\n              Busemann_function_at xi ((f ^^ k) x) x\\<bar>\n\ngoal (1 subgoal):\n 1. \\<bar>real k * l basepoint - real k * l x\\<bar>\n    \\<le> 4 * deltaG TYPE('a) + 2 * dist basepoint x", "also"], ["proof (state)\nthis:\n  \\<bar>Busemann_function_at xi ((f ^^ k) x) x - real k * l x -\n        (Busemann_function_at xi ((f ^^ k) basepoint) basepoint -\n         real k * l basepoint) +\n        (Busemann_function_at xi ((f ^^ k) basepoint) basepoint -\n         Busemann_function_at xi ((f ^^ k) x) x)\\<bar>\n  \\<le> \\<bar>Busemann_function_at xi ((f ^^ k) x) x - real k * l x\\<bar> +\n        \\<bar>Busemann_function_at xi ((f ^^ k) basepoint) basepoint -\n              real k * l basepoint\\<bar> +\n        \\<bar>Busemann_function_at xi ((f ^^ k) basepoint) basepoint -\n              Busemann_function_at xi ((f ^^ k) x) x\\<bar>\n\ngoal (1 subgoal):\n 1. \\<bar>real k * l basepoint - real k * l x\\<bar>\n    \\<le> 4 * deltaG TYPE('a) + 2 * dist basepoint x", "have \"... \\<le> 2 * deltaG(TYPE('a)) + 2 * deltaG(TYPE('a)) + (dist ((f^^k) basepoint) ((f^^k) x) + dist basepoint x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>Busemann_function_at xi ((f ^^ k) x) x - real k * l x\\<bar> +\n    \\<bar>Busemann_function_at xi ((f ^^ k) basepoint) basepoint -\n          real k * l basepoint\\<bar> +\n    \\<bar>Busemann_function_at xi ((f ^^ k) basepoint) basepoint -\n          Busemann_function_at xi ((f ^^ k) x) x\\<bar>\n    \\<le> 2 * deltaG TYPE('a) + 2 * deltaG TYPE('a) +\n          (dist ((f ^^ k) basepoint) ((f ^^ k) x) + dist basepoint x)", "by (intro mono_intros *)"], ["proof (state)\nthis:\n  \\<bar>Busemann_function_at xi ((f ^^ k) x) x - real k * l x\\<bar> +\n  \\<bar>Busemann_function_at xi ((f ^^ k) basepoint) basepoint -\n        real k * l basepoint\\<bar> +\n  \\<bar>Busemann_function_at xi ((f ^^ k) basepoint) basepoint -\n        Busemann_function_at xi ((f ^^ k) x) x\\<bar>\n  \\<le> 2 * deltaG TYPE('a) + 2 * deltaG TYPE('a) +\n        (dist ((f ^^ k) basepoint) ((f ^^ k) x) + dist basepoint x)\n\ngoal (1 subgoal):\n 1. \\<bar>real k * l basepoint - real k * l x\\<bar>\n    \\<le> 4 * deltaG TYPE('a) + 2 * dist basepoint x", "also"], ["proof (state)\nthis:\n  \\<bar>Busemann_function_at xi ((f ^^ k) x) x - real k * l x\\<bar> +\n  \\<bar>Busemann_function_at xi ((f ^^ k) basepoint) basepoint -\n        real k * l basepoint\\<bar> +\n  \\<bar>Busemann_function_at xi ((f ^^ k) basepoint) basepoint -\n        Busemann_function_at xi ((f ^^ k) x) x\\<bar>\n  \\<le> 2 * deltaG TYPE('a) + 2 * deltaG TYPE('a) +\n        (dist ((f ^^ k) basepoint) ((f ^^ k) x) + dist basepoint x)\n\ngoal (1 subgoal):\n 1. \\<bar>real k * l basepoint - real k * l x\\<bar>\n    \\<le> 4 * deltaG TYPE('a) + 2 * dist basepoint x", "have \"... = 4 * deltaG(TYPE('a)) + 2 * dist basepoint x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * deltaG TYPE('a) + 2 * deltaG TYPE('a) +\n    (dist ((f ^^ k) basepoint) ((f ^^ k) x) + dist basepoint x) =\n    4 * deltaG TYPE('a) + 2 * dist basepoint x", "unfolding isometryD[OF isometry_iterates[OF assms(1)]]"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * deltaG TYPE('a) + 2 * deltaG TYPE('a) +\n    (dist basepoint x + dist basepoint x) =\n    4 * deltaG TYPE('a) + 2 * dist basepoint x", "by auto"], ["proof (state)\nthis:\n  2 * deltaG TYPE('a) + 2 * deltaG TYPE('a) +\n  (dist ((f ^^ k) basepoint) ((f ^^ k) x) + dist basepoint x) =\n  4 * deltaG TYPE('a) + 2 * dist basepoint x\n\ngoal (1 subgoal):\n 1. \\<bar>real k * l basepoint - real k * l x\\<bar>\n    \\<le> 4 * deltaG TYPE('a) + 2 * dist basepoint x", "finally"], ["proof (chain)\npicking this:\n  \\<bar>real k * l basepoint - real k * l x\\<bar>\n  \\<le> 4 * deltaG TYPE('a) + 2 * dist basepoint x", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<bar>real k * l basepoint - real k * l x\\<bar>\n  \\<le> 4 * deltaG TYPE('a) + 2 * dist basepoint x\n\ngoal (1 subgoal):\n 1. \\<bar>real k * l basepoint - real k * l x\\<bar>\n    \\<le> 4 * deltaG TYPE('a) + 2 * dist basepoint x", "by auto"], ["proof (state)\nthis:\n  \\<bar>real k * l basepoint - real k * l x\\<bar>\n  \\<le> 4 * deltaG TYPE('a) + 2 * dist basepoint x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<bar>real ?k * l basepoint - real ?k * l x\\<bar>\n  \\<le> 4 * deltaG TYPE('a) + 2 * dist basepoint x\n\ngoal (1 subgoal):\n 1. \\<bar>Busemann_function_at xi ((f ^^ n) x) x -\n          real n * additive_strength f xi\\<bar>\n    \\<le> 2 * deltaG TYPE('a)", "moreover"], ["proof (state)\nthis:\n  \\<bar>real ?k * l basepoint - real ?k * l x\\<bar>\n  \\<le> 4 * deltaG TYPE('a) + 2 * dist basepoint x\n\ngoal (1 subgoal):\n 1. \\<bar>Busemann_function_at xi ((f ^^ n) x) x -\n          real n * additive_strength f xi\\<bar>\n    \\<le> 2 * deltaG TYPE('a)", "have \"u = v\" if H: \"\\<And>k::nat. abs(k * u - k * v) \\<le> C\" for u v C::real"], ["proof (prove)\ngoal (1 subgoal):\n 1. u = v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. u = v", "have \"(\\<lambda>n. abs(u - v)) \\<longlonglongrightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. \\<bar>u - v\\<bar>) \\<longlonglongrightarrow> 0", "proof (rule tendsto_sandwich[of \"\\<lambda>n. 0\" _ _ \"\\<lambda>n::nat. C/n\"], auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially. \\<bar>u - v\\<bar> \\<le> C / real n\n 2. (\\<lambda>x. C / real x) \\<longlonglongrightarrow> 0", "have \"(\\<lambda>n. C*(1/n)) \\<longlonglongrightarrow> C * 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. C * (1 / real x)) \\<longlonglongrightarrow> C * 0", "by (intro tendsto_intros)"], ["proof (state)\nthis:\n  (\\<lambda>x. C * (1 / real x)) \\<longlonglongrightarrow> C * 0\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially. \\<bar>u - v\\<bar> \\<le> C / real n\n 2. (\\<lambda>x. C / real x) \\<longlonglongrightarrow> 0", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>x. C * (1 / real x)) \\<longlonglongrightarrow> C * 0", "show \"(\\<lambda>n. C/n) \\<longlonglongrightarrow> 0\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. C * (1 / real x)) \\<longlonglongrightarrow> C * 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. C / real x) \\<longlonglongrightarrow> 0", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>x. C / real x) \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. \\<bar>u - v\\<bar> \\<le> C / real n", "have \"\\<bar>u - v\\<bar> \\<le> C / real n\" if \"n \\<ge> 1\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>u - v\\<bar> \\<le> C / real n", "using H[of n] that"], ["proof (prove)\nusing this:\n  \\<bar>real n * u - real n * v\\<bar> \\<le> C\n  1 \\<le> n\n\ngoal (1 subgoal):\n 1. \\<bar>u - v\\<bar> \\<le> C / real n", "apply (simp add: divide_simps algebra_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<bar>u * real n - v * real n\\<bar> \\<le> C;\n     Suc 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> real n * \\<bar>u - v\\<bar> \\<le> C", "by (metis H abs_mult abs_of_nat right_diff_distrib')"], ["proof (state)\nthis:\n  1 \\<le> ?n \\<Longrightarrow> \\<bar>u - v\\<bar> \\<le> C / real ?n\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. \\<bar>u - v\\<bar> \\<le> C / real n", "then"], ["proof (chain)\npicking this:\n  1 \\<le> ?n \\<Longrightarrow> \\<bar>u - v\\<bar> \\<le> C / real ?n", "show \"\\<forall>\\<^sub>F n in sequentially. \\<bar>u - v\\<bar> \\<le> C / real n\""], ["proof (prove)\nusing this:\n  1 \\<le> ?n \\<Longrightarrow> \\<bar>u - v\\<bar> \\<le> C / real ?n\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. \\<bar>u - v\\<bar> \\<le> C / real n", "unfolding eventually_sequentially"], ["proof (prove)\nusing this:\n  1 \\<le> ?n \\<Longrightarrow> \\<bar>u - v\\<bar> \\<le> C / real ?n\n\ngoal (1 subgoal):\n 1. \\<exists>N. \\<forall>n\\<ge>N. \\<bar>u - v\\<bar> \\<le> C / real n", "by auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially. \\<bar>u - v\\<bar> \\<le> C / real n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>n. \\<bar>u - v\\<bar>) \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. u = v", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n. \\<bar>u - v\\<bar>) \\<longlonglongrightarrow> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>n. \\<bar>u - v\\<bar>) \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. u = v", "by (metis LIMSEQ_const_iff abs_0_eq eq_iff_diff_eq_0)"], ["proof (state)\nthis:\n  u = v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<And>x.\n      \\<bar>real x * ?u - real x * ?v\\<bar> \\<le> ?C) \\<Longrightarrow>\n  ?u = ?v\n\ngoal (1 subgoal):\n 1. \\<bar>Busemann_function_at xi ((f ^^ n) x) x -\n          real n * additive_strength f xi\\<bar>\n    \\<le> 2 * deltaG TYPE('a)", "ultimately"], ["proof (chain)\npicking this:\n  \\<bar>real ?k * l basepoint - real ?k * l x\\<bar>\n  \\<le> 4 * deltaG TYPE('a) + 2 * dist basepoint x\n  (\\<And>x.\n      \\<bar>real x * ?u - real x * ?v\\<bar> \\<le> ?C) \\<Longrightarrow>\n  ?u = ?v", "have \"l basepoint = l x\""], ["proof (prove)\nusing this:\n  \\<bar>real ?k * l basepoint - real ?k * l x\\<bar>\n  \\<le> 4 * deltaG TYPE('a) + 2 * dist basepoint x\n  (\\<And>x.\n      \\<bar>real x * ?u - real x * ?v\\<bar> \\<le> ?C) \\<Longrightarrow>\n  ?u = ?v\n\ngoal (1 subgoal):\n 1. l basepoint = l x", "by auto"], ["proof (state)\nthis:\n  l basepoint = l x\n\ngoal (1 subgoal):\n 1. \\<bar>Busemann_function_at xi ((f ^^ n) x) x -\n          real n * additive_strength f xi\\<bar>\n    \\<le> 2 * deltaG TYPE('a)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>Busemann_function_at xi ((f ^^ n) x) x -\n          real n * additive_strength f xi\\<bar>\n    \\<le> 2 * deltaG TYPE('a)", "using A[of x n]"], ["proof (prove)\nusing this:\n  \\<bar>u x n - real n * l x\\<bar> \\<le> 2 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. \\<bar>Busemann_function_at xi ((f ^^ n) x) x -\n          real n * additive_strength f xi\\<bar>\n    \\<le> 2 * deltaG TYPE('a)", "unfolding u_def \\<open>l basepoint = l x\\<close>[symmetric] \\<open>l basepoint = additive_strength f xi\\<close>"], ["proof (prove)\nusing this:\n  \\<bar>Busemann_function_at xi ((f ^^ n) x) x -\n        real n * additive_strength f xi\\<bar>\n  \\<le> 2 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. \\<bar>Busemann_function_at xi ((f ^^ n) x) x -\n          real n * additive_strength f xi\\<bar>\n    \\<le> 2 * deltaG TYPE('a)", "by auto"], ["proof (state)\nthis:\n  \\<bar>Busemann_function_at xi ((f ^^ n) x) x -\n        real n * additive_strength f xi\\<bar>\n  \\<le> 2 * deltaG TYPE('a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma additive_strength_as_limit [tendsto_intros]:\n  assumes \"isometry f\" \"Gromov_extension f xi = xi\"\n  shows \"(\\<lambda>n. Busemann_function_at xi ((f^^n) x) x/n) \\<longlonglongrightarrow> additive_strength f xi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. Busemann_function_at xi ((f ^^ n) x) x / real n)\n    \\<longlonglongrightarrow> additive_strength f xi", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n. Busemann_function_at xi ((f ^^ n) x) x / real n)\n    \\<longlonglongrightarrow> additive_strength f xi", "have \"(\\<lambda>n. abs(Busemann_function_at xi ((f^^n) x) x/n - additive_strength f xi)) \\<longlonglongrightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<bar>Busemann_function_at xi ((f ^^ n) x) x / real n -\n              additive_strength f xi\\<bar>)\n    \\<longlonglongrightarrow> 0", "apply (rule tendsto_sandwich[of \"\\<lambda>n. 0\" _ _ \"\\<lambda>n. (2 * deltaG(TYPE('a))) * (1/real n)\"], auto)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       \\<bar>Busemann_function_at xi ((f ^^ n) x) x / real n -\n             additive_strength f xi\\<bar>\n       \\<le> 2 * deltaG TYPE('a) / real n\n 2. (\\<lambda>n. 2 * deltaG TYPE('a) / real n) \\<longlonglongrightarrow> 0", "unfolding eventually_sequentially"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          \\<bar>Busemann_function_at xi ((f ^^ n) x) x / real n -\n                additive_strength f xi\\<bar>\n          \\<le> 2 * deltaG TYPE('a) / real n\n 2. (\\<lambda>n. 2 * deltaG TYPE('a) / real n) \\<longlonglongrightarrow> 0", "apply (rule exI[of _ 1])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>n\\<ge>1.\n       \\<bar>Busemann_function_at xi ((f ^^ n) x) x / real n -\n             additive_strength f xi\\<bar>\n       \\<le> 2 * deltaG TYPE('a) / real n\n 2. (\\<lambda>n. 2 * deltaG TYPE('a) / real n) \\<longlonglongrightarrow> 0", "using Busemann_function_eq_additive_strength[OF assms]"], ["proof (prove)\nusing this:\n  \\<bar>Busemann_function_at xi ((f ^^ ?n) ?x) ?x -\n        real ?n * additive_strength f xi\\<bar>\n  \\<le> 2 * deltaG TYPE('a)\n\ngoal (2 subgoals):\n 1. \\<forall>n\\<ge>1.\n       \\<bar>Busemann_function_at xi ((f ^^ n) x) x / real n -\n             additive_strength f xi\\<bar>\n       \\<le> 2 * deltaG TYPE('a) / real n\n 2. (\\<lambda>n. 2 * deltaG TYPE('a) / real n) \\<longlonglongrightarrow> 0", "apply (simp add: divide_simps algebra_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. 2 * deltaG TYPE('a) / real n) \\<longlonglongrightarrow> 0", "using tendsto_mult[OF _ lim_1_over_n]"], ["proof (prove)\nusing this:\n  ?f \\<longlonglongrightarrow> ?a \\<Longrightarrow>\n  (\\<lambda>x. ?f x * ((1::?'a1) / of_nat x))\n  \\<longlonglongrightarrow> ?a * (0::?'a1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. 2 * deltaG TYPE('a) / real n) \\<longlonglongrightarrow> 0", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      \\<bar>Busemann_function_at xi ((f ^^ n) x) x / real n -\n            additive_strength f xi\\<bar>)\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Busemann_function_at xi ((f ^^ n) x) x / real n)\n    \\<longlonglongrightarrow> additive_strength f xi", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n.\n      \\<bar>Busemann_function_at xi ((f ^^ n) x) x / real n -\n            additive_strength f xi\\<bar>)\n  \\<longlonglongrightarrow> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      \\<bar>Busemann_function_at xi ((f ^^ n) x) x / real n -\n            additive_strength f xi\\<bar>)\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Busemann_function_at xi ((f ^^ n) x) x / real n)\n    \\<longlonglongrightarrow> additive_strength f xi", "using LIM_zero_iff tendsto_rabs_zero_cancel"], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      \\<bar>Busemann_function_at xi ((f ^^ n) x) x / real n -\n            additive_strength f xi\\<bar>)\n  \\<longlonglongrightarrow> 0\n  ((\\<lambda>x. ?f x - ?l) \\<longlongrightarrow> (0::?'b)) ?F =\n  (?f \\<longlongrightarrow> ?l) ?F\n  ((\\<lambda>x. \\<bar>?f x\\<bar>) \\<longlongrightarrow> 0)\n   ?F \\<Longrightarrow>\n  (?f \\<longlongrightarrow> 0) ?F\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Busemann_function_at xi ((f ^^ n) x) x / real n)\n    \\<longlonglongrightarrow> additive_strength f xi", "by blast"], ["proof (state)\nthis:\n  (\\<lambda>n. Busemann_function_at xi ((f ^^ n) x) x / real n)\n  \\<longlonglongrightarrow> additive_strength f xi\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The additive strength measures the amount of displacement towards a fixed point at infinity.\nTherefore, the distance from $x$ to $f^n x$ is at least $n$ times the additive strength, but one\nmight think that it might be larger, if there is displacement along the horospheres. It turns out\nthat this is not the case: the displacement along the horospheres is at most logarithmic (this is\na classical property of parabolic isometries in hyperbolic spaces), and in fact it is bounded for\nloxodromic elements.\nWe prove here that the growth is at most logarithmic in all cases, using a small computation based\non the hyperbolicity inequality, expressed in Lemma \\verb+dist_minus_Busemann_max_ineq+ above.\nThis lemma will be used below to show that the translation length is the absolute value of the\nadditive strength.\\<close>"], ["", "lemma dist_le_additive_strength:\n  assumes \"isometry (f::'a::Gromov_hyperbolic_space \\<Rightarrow> 'a)\" \"Gromov_extension f xi = xi\" \"additive_strength f xi \\<ge> 0\" \"n \\<ge> 1\"\n  shows \"dist x ((f^^n) x) \\<le> dist x (f x) + real n * additive_strength f xi + ceiling (log 2 n) * 16 * deltaG(TYPE('a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x)\n    \\<le> dist x (f x) + real n * additive_strength f xi +\n          real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) *\n          deltaG TYPE('a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x)\n    \\<le> dist x (f x) + real n * additive_strength f xi +\n          real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) *\n          deltaG TYPE('a)", "have A: \"\\<And>n. n \\<in> {1..2^k} \\<Longrightarrow> dist x ((f^^n) x) - real n * additive_strength f xi \\<le> dist x (f x) + k * 16 * deltaG(TYPE('a))\" for k"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       n \\<in> {1..2 ^ k} \\<Longrightarrow>\n       dist x ((f ^^ n) x) - real n * additive_strength f xi\n       \\<le> dist x (f x) + real k * 16 * deltaG TYPE('a)", "proof (induction k)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>n.\n       n \\<in> {1..2 ^ 0} \\<Longrightarrow>\n       dist x ((f ^^ n) x) - real n * additive_strength f xi\n       \\<le> dist x (f x) + real 0 * 16 * deltaG TYPE('a)\n 2. \\<And>k n.\n       \\<lbrakk>\\<And>n.\n                   n \\<in> {1..2 ^ k} \\<Longrightarrow>\n                   dist x ((f ^^ n) x) - real n * additive_strength f xi\n                   \\<le> dist x (f x) + real k * 16 * deltaG TYPE('a);\n        n \\<in> {1..2 ^ Suc k}\\<rbrakk>\n       \\<Longrightarrow> dist x ((f ^^ n) x) -\n                         real n * additive_strength f xi\n                         \\<le> dist x (f x) +\n                               real (Suc k) * 16 * deltaG TYPE('a)", "case 0"], ["proof (state)\nthis:\n  n \\<in> {1..2 ^ 0}\n\ngoal (2 subgoals):\n 1. \\<And>n.\n       n \\<in> {1..2 ^ 0} \\<Longrightarrow>\n       dist x ((f ^^ n) x) - real n * additive_strength f xi\n       \\<le> dist x (f x) + real 0 * 16 * deltaG TYPE('a)\n 2. \\<And>k n.\n       \\<lbrakk>\\<And>n.\n                   n \\<in> {1..2 ^ k} \\<Longrightarrow>\n                   dist x ((f ^^ n) x) - real n * additive_strength f xi\n                   \\<le> dist x (f x) + real k * 16 * deltaG TYPE('a);\n        n \\<in> {1..2 ^ Suc k}\\<rbrakk>\n       \\<Longrightarrow> dist x ((f ^^ n) x) -\n                         real n * additive_strength f xi\n                         \\<le> dist x (f x) +\n                               real (Suc k) * 16 * deltaG TYPE('a)", "fix n::nat"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>n.\n       n \\<in> {1..2 ^ 0} \\<Longrightarrow>\n       dist x ((f ^^ n) x) - real n * additive_strength f xi\n       \\<le> dist x (f x) + real 0 * 16 * deltaG TYPE('a)\n 2. \\<And>k n.\n       \\<lbrakk>\\<And>n.\n                   n \\<in> {1..2 ^ k} \\<Longrightarrow>\n                   dist x ((f ^^ n) x) - real n * additive_strength f xi\n                   \\<le> dist x (f x) + real k * 16 * deltaG TYPE('a);\n        n \\<in> {1..2 ^ Suc k}\\<rbrakk>\n       \\<Longrightarrow> dist x ((f ^^ n) x) -\n                         real n * additive_strength f xi\n                         \\<le> dist x (f x) +\n                               real (Suc k) * 16 * deltaG TYPE('a)", "assume \"n \\<in> {1..2^0}\""], ["proof (state)\nthis:\n  n \\<in> {1..2 ^ 0}\n\ngoal (2 subgoals):\n 1. \\<And>n.\n       n \\<in> {1..2 ^ 0} \\<Longrightarrow>\n       dist x ((f ^^ n) x) - real n * additive_strength f xi\n       \\<le> dist x (f x) + real 0 * 16 * deltaG TYPE('a)\n 2. \\<And>k n.\n       \\<lbrakk>\\<And>n.\n                   n \\<in> {1..2 ^ k} \\<Longrightarrow>\n                   dist x ((f ^^ n) x) - real n * additive_strength f xi\n                   \\<le> dist x (f x) + real k * 16 * deltaG TYPE('a);\n        n \\<in> {1..2 ^ Suc k}\\<rbrakk>\n       \\<Longrightarrow> dist x ((f ^^ n) x) -\n                         real n * additive_strength f xi\n                         \\<le> dist x (f x) +\n                               real (Suc k) * 16 * deltaG TYPE('a)", "then"], ["proof (chain)\npicking this:\n  n \\<in> {1..2 ^ 0}", "have \"n = 1\""], ["proof (prove)\nusing this:\n  n \\<in> {1..2 ^ 0}\n\ngoal (1 subgoal):\n 1. n = 1", "by auto"], ["proof (state)\nthis:\n  n = 1\n\ngoal (2 subgoals):\n 1. \\<And>n.\n       n \\<in> {1..2 ^ 0} \\<Longrightarrow>\n       dist x ((f ^^ n) x) - real n * additive_strength f xi\n       \\<le> dist x (f x) + real 0 * 16 * deltaG TYPE('a)\n 2. \\<And>k n.\n       \\<lbrakk>\\<And>n.\n                   n \\<in> {1..2 ^ k} \\<Longrightarrow>\n                   dist x ((f ^^ n) x) - real n * additive_strength f xi\n                   \\<le> dist x (f x) + real k * 16 * deltaG TYPE('a);\n        n \\<in> {1..2 ^ Suc k}\\<rbrakk>\n       \\<Longrightarrow> dist x ((f ^^ n) x) -\n                         real n * additive_strength f xi\n                         \\<le> dist x (f x) +\n                               real (Suc k) * 16 * deltaG TYPE('a)", "then"], ["proof (chain)\npicking this:\n  n = 1", "show \"dist x ((f^^n) x) - real n * additive_strength f xi \\<le> dist x (f x) + real 0 * 16 * deltaG(TYPE('a))\""], ["proof (prove)\nusing this:\n  n = 1\n\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x) - real n * additive_strength f xi\n    \\<le> dist x (f x) + real 0 * 16 * deltaG TYPE('a)", "using assms(3)"], ["proof (prove)\nusing this:\n  n = 1\n  0 \\<le> additive_strength f xi\n\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x) - real n * additive_strength f xi\n    \\<le> dist x (f x) + real 0 * 16 * deltaG TYPE('a)", "by auto"], ["proof (state)\nthis:\n  dist x ((f ^^ n) x) - real n * additive_strength f xi\n  \\<le> dist x (f x) + real 0 * 16 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>\\<And>n.\n                   n \\<in> {1..2 ^ k} \\<Longrightarrow>\n                   dist x ((f ^^ n) x) - real n * additive_strength f xi\n                   \\<le> dist x (f x) + real k * 16 * deltaG TYPE('a);\n        n \\<in> {1..2 ^ Suc k}\\<rbrakk>\n       \\<Longrightarrow> dist x ((f ^^ n) x) -\n                         real n * additive_strength f xi\n                         \\<le> dist x (f x) +\n                               real (Suc k) * 16 * deltaG TYPE('a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>\\<And>n.\n                   n \\<in> {1..2 ^ k} \\<Longrightarrow>\n                   dist x ((f ^^ n) x) - real n * additive_strength f xi\n                   \\<le> dist x (f x) + real k * 16 * deltaG TYPE('a);\n        n \\<in> {1..2 ^ Suc k}\\<rbrakk>\n       \\<Longrightarrow> dist x ((f ^^ n) x) -\n                         real n * additive_strength f xi\n                         \\<le> dist x (f x) +\n                               real (Suc k) * 16 * deltaG TYPE('a)", "case (Suc k)"], ["proof (state)\nthis:\n  ?n \\<in> {1..2 ^ k} \\<Longrightarrow>\n  dist x ((f ^^ ?n) x) - real ?n * additive_strength f xi\n  \\<le> dist x (f x) + real k * 16 * deltaG TYPE('a)\n  n \\<in> {1..2 ^ Suc k}\n\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>\\<And>n.\n                   n \\<in> {1..2 ^ k} \\<Longrightarrow>\n                   dist x ((f ^^ n) x) - real n * additive_strength f xi\n                   \\<le> dist x (f x) + real k * 16 * deltaG TYPE('a);\n        n \\<in> {1..2 ^ Suc k}\\<rbrakk>\n       \\<Longrightarrow> dist x ((f ^^ n) x) -\n                         real n * additive_strength f xi\n                         \\<le> dist x (f x) +\n                               real (Suc k) * 16 * deltaG TYPE('a)", "fix N::nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>\\<And>n.\n                   n \\<in> {1..2 ^ k} \\<Longrightarrow>\n                   dist x ((f ^^ n) x) - real n * additive_strength f xi\n                   \\<le> dist x (f x) + real k * 16 * deltaG TYPE('a);\n        n \\<in> {1..2 ^ Suc k}\\<rbrakk>\n       \\<Longrightarrow> dist x ((f ^^ n) x) -\n                         real n * additive_strength f xi\n                         \\<le> dist x (f x) +\n                               real (Suc k) * 16 * deltaG TYPE('a)", "assume \"N \\<in> {1..2^(Suc k)}\""], ["proof (state)\nthis:\n  N \\<in> {1..2 ^ Suc k}\n\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>\\<And>n.\n                   n \\<in> {1..2 ^ k} \\<Longrightarrow>\n                   dist x ((f ^^ n) x) - real n * additive_strength f xi\n                   \\<le> dist x (f x) + real k * 16 * deltaG TYPE('a);\n        n \\<in> {1..2 ^ Suc k}\\<rbrakk>\n       \\<Longrightarrow> dist x ((f ^^ n) x) -\n                         real n * additive_strength f xi\n                         \\<le> dist x (f x) +\n                               real (Suc k) * 16 * deltaG TYPE('a)", "then"], ["proof (chain)\npicking this:\n  N \\<in> {1..2 ^ Suc k}", "consider \"N \\<in> {1..2^k}\" | \"N \\<in> {2^k<..2^(Suc k)}\""], ["proof (prove)\nusing this:\n  N \\<in> {1..2 ^ Suc k}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>N \\<in> {1..2 ^ k} \\<Longrightarrow> thesis;\n     N \\<in> {2 ^ k<..2 ^ Suc k} \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using not_le"], ["proof (prove)\nusing this:\n  N \\<in> {1..2 ^ Suc k}\n  (\\<not> ?x \\<le> ?y) = (?y < ?x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>N \\<in> {1..2 ^ k} \\<Longrightarrow> thesis;\n     N \\<in> {2 ^ k<..2 ^ Suc k} \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>N \\<in> {1..2 ^ k} \\<Longrightarrow> ?thesis;\n   N \\<in> {2 ^ k<..2 ^ Suc k} \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>\\<And>n.\n                   n \\<in> {1..2 ^ k} \\<Longrightarrow>\n                   dist x ((f ^^ n) x) - real n * additive_strength f xi\n                   \\<le> dist x (f x) + real k * 16 * deltaG TYPE('a);\n        n \\<in> {1..2 ^ Suc k}\\<rbrakk>\n       \\<Longrightarrow> dist x ((f ^^ n) x) -\n                         real n * additive_strength f xi\n                         \\<le> dist x (f x) +\n                               real (Suc k) * 16 * deltaG TYPE('a)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>N \\<in> {1..2 ^ k} \\<Longrightarrow> ?thesis;\n   N \\<in> {2 ^ k<..2 ^ Suc k} \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \"dist x ((f ^^ N) x) - real N * additive_strength f xi \\<le> dist x (f x) + real (Suc k) * 16 * deltaG TYPE('a)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>N \\<in> {1..2 ^ k} \\<Longrightarrow> ?thesis;\n   N \\<in> {2 ^ k<..2 ^ Suc k} \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. dist x ((f ^^ N) x) - real N * additive_strength f xi\n    \\<le> dist x (f x) + real (Suc k) * 16 * deltaG TYPE('a)", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. N \\<in> {1..2 ^ k} \\<Longrightarrow>\n    dist x ((f ^^ N) x) - real N * additive_strength f xi\n    \\<le> dist x (f x) + real (Suc k) * 16 * deltaG TYPE('a)\n 2. N \\<in> {2 ^ k<..2 ^ Suc k} \\<Longrightarrow>\n    dist x ((f ^^ N) x) - real N * additive_strength f xi\n    \\<le> dist x (f x) + real (Suc k) * 16 * deltaG TYPE('a)", "case 1"], ["proof (state)\nthis:\n  N \\<in> {1..2 ^ k}\n\ngoal (2 subgoals):\n 1. N \\<in> {1..2 ^ k} \\<Longrightarrow>\n    dist x ((f ^^ N) x) - real N * additive_strength f xi\n    \\<le> dist x (f x) + real (Suc k) * 16 * deltaG TYPE('a)\n 2. N \\<in> {2 ^ k<..2 ^ Suc k} \\<Longrightarrow>\n    dist x ((f ^^ N) x) - real N * additive_strength f xi\n    \\<le> dist x (f x) + real (Suc k) * 16 * deltaG TYPE('a)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x ((f ^^ N) x) - real N * additive_strength f xi\n    \\<le> dist x (f x) + real (Suc k) * 16 * deltaG TYPE('a)", "by (rule order_trans[OF Suc.IH[OF 1]], auto simp add: algebra_simps)"], ["proof (state)\nthis:\n  dist x ((f ^^ N) x) - real N * additive_strength f xi\n  \\<le> dist x (f x) + real (Suc k) * 16 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. N \\<in> {2 ^ k<..2 ^ Suc k} \\<Longrightarrow>\n    dist x ((f ^^ N) x) - real N * additive_strength f xi\n    \\<le> dist x (f x) + real (Suc k) * 16 * deltaG TYPE('a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. N \\<in> {2 ^ k<..2 ^ Suc k} \\<Longrightarrow>\n    dist x ((f ^^ N) x) - real N * additive_strength f xi\n    \\<le> dist x (f x) + real (Suc k) * 16 * deltaG TYPE('a)", "case 2"], ["proof (state)\nthis:\n  N \\<in> {2 ^ k<..2 ^ Suc k}\n\ngoal (1 subgoal):\n 1. N \\<in> {2 ^ k<..2 ^ Suc k} \\<Longrightarrow>\n    dist x ((f ^^ N) x) - real N * additive_strength f xi\n    \\<le> dist x (f x) + real (Suc k) * 16 * deltaG TYPE('a)", "define m::nat where \"m = N - 2^k\""], ["proof (state)\nthis:\n  m = N - 2 ^ k\n\ngoal (1 subgoal):\n 1. N \\<in> {2 ^ k<..2 ^ Suc k} \\<Longrightarrow>\n    dist x ((f ^^ N) x) - real N * additive_strength f xi\n    \\<le> dist x (f x) + real (Suc k) * 16 * deltaG TYPE('a)", "define n::nat where \"n = 2^k\""], ["proof (state)\nthis:\n  n = 2 ^ k\n\ngoal (1 subgoal):\n 1. N \\<in> {2 ^ k<..2 ^ Suc k} \\<Longrightarrow>\n    dist x ((f ^^ N) x) - real N * additive_strength f xi\n    \\<le> dist x (f x) + real (Suc k) * 16 * deltaG TYPE('a)", "have nm: \"N = n+m\" \"m \\<in> {1..2^k}\" \"n \\<in> {1..2^k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N = n + m &&& m \\<in> {1..2 ^ k} &&& n \\<in> {1..2 ^ k}", "unfolding m_def n_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. N = 2 ^ k + (N - 2 ^ k) &&&\n    N - 2 ^ k \\<in> {1..2 ^ k} &&& 2 ^ k \\<in> {1..2 ^ k}", "using 2"], ["proof (prove)\nusing this:\n  N \\<in> {2 ^ k<..2 ^ Suc k}\n\ngoal (1 subgoal):\n 1. N = 2 ^ k + (N - 2 ^ k) &&&\n    N - 2 ^ k \\<in> {1..2 ^ k} &&& 2 ^ k \\<in> {1..2 ^ k}", "by auto"], ["proof (state)\nthis:\n  N = n + m\n  m \\<in> {1..2 ^ k}\n  n \\<in> {1..2 ^ k}\n\ngoal (1 subgoal):\n 1. N \\<in> {2 ^ k<..2 ^ Suc k} \\<Longrightarrow>\n    dist x ((f ^^ N) x) - real N * additive_strength f xi\n    \\<le> dist x (f x) + real (Suc k) * 16 * deltaG TYPE('a)", "have *: \"(f^^(n+m)) x = (f^^n) ((f^^m) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ (n + m)) x = (f ^^ n) ((f ^^ m) x)", "unfolding funpow_add comp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ n) ((f ^^ m) x) = (f ^^ n) ((f ^^ m) x)", "by auto"], ["proof (state)\nthis:\n  (f ^^ (n + m)) x = (f ^^ n) ((f ^^ m) x)\n\ngoal (1 subgoal):\n 1. N \\<in> {2 ^ k<..2 ^ Suc k} \\<Longrightarrow>\n    dist x ((f ^^ N) x) - real N * additive_strength f xi\n    \\<le> dist x (f x) + real (Suc k) * 16 * deltaG TYPE('a)", "have **: \"(f^^(n+m)) x = (f^^m) ((f^^n) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ (n + m)) x = (f ^^ m) ((f ^^ n) x)", "apply (subst add.commute)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ (m + n)) x = (f ^^ m) ((f ^^ n) x)", "unfolding funpow_add comp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ m) ((f ^^ n) x) = (f ^^ m) ((f ^^ n) x)", "by auto"], ["proof (state)\nthis:\n  (f ^^ (n + m)) x = (f ^^ m) ((f ^^ n) x)\n\ngoal (1 subgoal):\n 1. N \\<in> {2 ^ k<..2 ^ Suc k} \\<Longrightarrow>\n    dist x ((f ^^ N) x) - real N * additive_strength f xi\n    \\<le> dist x (f x) + real (Suc k) * 16 * deltaG TYPE('a)", "have \"dist x ((f^^N) x) - N * additive_strength f xi - 2 * deltaG(TYPE('a)) \\<le> dist x ((f^^(n+m)) x) - Busemann_function_at xi ((f^^(n+m)) x) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x ((f ^^ N) x) - real N * additive_strength f xi -\n    2 * deltaG TYPE('a)\n    \\<le> dist x ((f ^^ (n + m)) x) -\n          Busemann_function_at xi ((f ^^ (n + m)) x) x", "unfolding nm(1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x ((f ^^ (n + m)) x) - real (n + m) * additive_strength f xi -\n    2 * deltaG TYPE('a)\n    \\<le> dist x ((f ^^ (n + m)) x) -\n          Busemann_function_at xi ((f ^^ (n + m)) x) x", "using Busemann_function_eq_additive_strength[OF assms(1) assms(2), of \"n+m\" x]"], ["proof (prove)\nusing this:\n  \\<bar>Busemann_function_at xi ((f ^^ (n + m)) x) x -\n        real (n + m) * additive_strength f xi\\<bar>\n  \\<le> 2 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. dist x ((f ^^ (n + m)) x) - real (n + m) * additive_strength f xi -\n    2 * deltaG TYPE('a)\n    \\<le> dist x ((f ^^ (n + m)) x) -\n          Busemann_function_at xi ((f ^^ (n + m)) x) x", "by auto"], ["proof (state)\nthis:\n  dist x ((f ^^ N) x) - real N * additive_strength f xi -\n  2 * deltaG TYPE('a)\n  \\<le> dist x ((f ^^ (n + m)) x) -\n        Busemann_function_at xi ((f ^^ (n + m)) x) x\n\ngoal (1 subgoal):\n 1. N \\<in> {2 ^ k<..2 ^ Suc k} \\<Longrightarrow>\n    dist x ((f ^^ N) x) - real N * additive_strength f xi\n    \\<le> dist x (f x) + real (Suc k) * 16 * deltaG TYPE('a)", "also"], ["proof (state)\nthis:\n  dist x ((f ^^ N) x) - real N * additive_strength f xi -\n  2 * deltaG TYPE('a)\n  \\<le> dist x ((f ^^ (n + m)) x) -\n        Busemann_function_at xi ((f ^^ (n + m)) x) x\n\ngoal (1 subgoal):\n 1. N \\<in> {2 ^ k<..2 ^ Suc k} \\<Longrightarrow>\n    dist x ((f ^^ N) x) - real N * additive_strength f xi\n    \\<le> dist x (f x) + real (Suc k) * 16 * deltaG TYPE('a)", "have \"... \\<le> max (dist x ((f^^n) x) - Busemann_function_at xi ((f^^n) x) x) (dist ((f^^n) x) ((f^^(n+m)) x) - Busemann_function_at xi ((f^^(n+m)) x) ((f^^n) x) - 2 * Busemann_function_at xi ((f^^n) x) x) + 8 * deltaG(TYPE('a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x ((f ^^ (n + m)) x) - Busemann_function_at xi ((f ^^ (n + m)) x) x\n    \\<le> max (dist x ((f ^^ n) x) - Busemann_function_at xi ((f ^^ n) x) x)\n           (dist ((f ^^ n) x) ((f ^^ (n + m)) x) -\n            Busemann_function_at xi ((f ^^ (n + m)) x) ((f ^^ n) x) -\n            2 * Busemann_function_at xi ((f ^^ n) x) x) +\n          8 * deltaG TYPE('a)", "using dist_minus_Busemann_max_ineq"], ["proof (prove)\nusing this:\n  dist ?x ?z - Busemann_function_at ?xi ?z ?x\n  \\<le> max (dist ?x ?y - Busemann_function_at ?xi ?y ?x)\n         (dist ?y ?z - Busemann_function_at ?xi ?z ?y -\n          2 * Busemann_function_at ?xi ?y ?x) +\n        8 * deltaG TYPE(?'a)\n\ngoal (1 subgoal):\n 1. dist x ((f ^^ (n + m)) x) - Busemann_function_at xi ((f ^^ (n + m)) x) x\n    \\<le> max (dist x ((f ^^ n) x) - Busemann_function_at xi ((f ^^ n) x) x)\n           (dist ((f ^^ n) x) ((f ^^ (n + m)) x) -\n            Busemann_function_at xi ((f ^^ (n + m)) x) ((f ^^ n) x) -\n            2 * Busemann_function_at xi ((f ^^ n) x) x) +\n          8 * deltaG TYPE('a)", "by auto"], ["proof (state)\nthis:\n  dist x ((f ^^ (n + m)) x) - Busemann_function_at xi ((f ^^ (n + m)) x) x\n  \\<le> max (dist x ((f ^^ n) x) - Busemann_function_at xi ((f ^^ n) x) x)\n         (dist ((f ^^ n) x) ((f ^^ (n + m)) x) -\n          Busemann_function_at xi ((f ^^ (n + m)) x) ((f ^^ n) x) -\n          2 * Busemann_function_at xi ((f ^^ n) x) x) +\n        8 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. N \\<in> {2 ^ k<..2 ^ Suc k} \\<Longrightarrow>\n    dist x ((f ^^ N) x) - real N * additive_strength f xi\n    \\<le> dist x (f x) + real (Suc k) * 16 * deltaG TYPE('a)", "also"], ["proof (state)\nthis:\n  dist x ((f ^^ (n + m)) x) - Busemann_function_at xi ((f ^^ (n + m)) x) x\n  \\<le> max (dist x ((f ^^ n) x) - Busemann_function_at xi ((f ^^ n) x) x)\n         (dist ((f ^^ n) x) ((f ^^ (n + m)) x) -\n          Busemann_function_at xi ((f ^^ (n + m)) x) ((f ^^ n) x) -\n          2 * Busemann_function_at xi ((f ^^ n) x) x) +\n        8 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. N \\<in> {2 ^ k<..2 ^ Suc k} \\<Longrightarrow>\n    dist x ((f ^^ N) x) - real N * additive_strength f xi\n    \\<le> dist x (f x) + real (Suc k) * 16 * deltaG TYPE('a)", "have \"... \\<le> max (dist x ((f^^n) x) - (n * additive_strength f xi - 2 * deltaG(TYPE('a)))) (dist ((f^^n) x) ((f^^(n+m)) x) - (m * additive_strength f xi - 2 * deltaG(TYPE('a))) - 2 * (n * additive_strength f xi - 2 * deltaG(TYPE('a)))) + 8 * deltaG(TYPE('a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max (dist x ((f ^^ n) x) - Busemann_function_at xi ((f ^^ n) x) x)\n     (dist ((f ^^ n) x) ((f ^^ (n + m)) x) -\n      Busemann_function_at xi ((f ^^ (n + m)) x) ((f ^^ n) x) -\n      2 * Busemann_function_at xi ((f ^^ n) x) x) +\n    8 * deltaG TYPE('a)\n    \\<le> max (dist x ((f ^^ n) x) -\n               (real n * additive_strength f xi - 2 * deltaG TYPE('a)))\n           (dist ((f ^^ n) x) ((f ^^ (n + m)) x) -\n            (real m * additive_strength f xi - 2 * deltaG TYPE('a)) -\n            2 * (real n * additive_strength f xi - 2 * deltaG TYPE('a))) +\n          8 * deltaG TYPE('a)", "unfolding **"], ["proof (prove)\ngoal (1 subgoal):\n 1. max (dist x ((f ^^ n) x) - Busemann_function_at xi ((f ^^ n) x) x)\n     (dist ((f ^^ n) x) ((f ^^ m) ((f ^^ n) x)) -\n      Busemann_function_at xi ((f ^^ m) ((f ^^ n) x)) ((f ^^ n) x) -\n      2 * Busemann_function_at xi ((f ^^ n) x) x) +\n    8 * deltaG TYPE('a)\n    \\<le> max (dist x ((f ^^ n) x) -\n               (real n * additive_strength f xi - 2 * deltaG TYPE('a)))\n           (dist ((f ^^ n) x) ((f ^^ m) ((f ^^ n) x)) -\n            (real m * additive_strength f xi - 2 * deltaG TYPE('a)) -\n            2 * (real n * additive_strength f xi - 2 * deltaG TYPE('a))) +\n          8 * deltaG TYPE('a)", "apply (intro mono_intros)"], ["proof (prove)\ngoal (4 subgoals):\n 1. real n * additive_strength f xi - 2 * deltaG TYPE('a)\n    \\<le> Busemann_function_at xi ((f ^^ n) x) x\n 2. real m * additive_strength f xi - 2 * deltaG TYPE('a)\n    \\<le> Busemann_function_at xi ((f ^^ m) ((f ^^ n) x)) ((f ^^ n) x)\n 3. real n * additive_strength f xi - 2 * deltaG TYPE('a)\n    \\<le> Busemann_function_at xi ((f ^^ n) x) x\n 4. 0 \\<le> 2", "using Busemann_function_eq_additive_strength[OF assms(1) assms(2), of n x] Busemann_function_eq_additive_strength[OF assms(1) assms(2), of m \"(f^^n) x\"]"], ["proof (prove)\nusing this:\n  \\<bar>Busemann_function_at xi ((f ^^ n) x) x -\n        real n * additive_strength f xi\\<bar>\n  \\<le> 2 * deltaG TYPE('a)\n  \\<bar>Busemann_function_at xi ((f ^^ m) ((f ^^ n) x)) ((f ^^ n) x) -\n        real m * additive_strength f xi\\<bar>\n  \\<le> 2 * deltaG TYPE('a)\n\ngoal (4 subgoals):\n 1. real n * additive_strength f xi - 2 * deltaG TYPE('a)\n    \\<le> Busemann_function_at xi ((f ^^ n) x) x\n 2. real m * additive_strength f xi - 2 * deltaG TYPE('a)\n    \\<le> Busemann_function_at xi ((f ^^ m) ((f ^^ n) x)) ((f ^^ n) x)\n 3. real n * additive_strength f xi - 2 * deltaG TYPE('a)\n    \\<le> Busemann_function_at xi ((f ^^ n) x) x\n 4. 0 \\<le> 2", "by auto"], ["proof (state)\nthis:\n  max (dist x ((f ^^ n) x) - Busemann_function_at xi ((f ^^ n) x) x)\n   (dist ((f ^^ n) x) ((f ^^ (n + m)) x) -\n    Busemann_function_at xi ((f ^^ (n + m)) x) ((f ^^ n) x) -\n    2 * Busemann_function_at xi ((f ^^ n) x) x) +\n  8 * deltaG TYPE('a)\n  \\<le> max (dist x ((f ^^ n) x) -\n             (real n * additive_strength f xi - 2 * deltaG TYPE('a)))\n         (dist ((f ^^ n) x) ((f ^^ (n + m)) x) -\n          (real m * additive_strength f xi - 2 * deltaG TYPE('a)) -\n          2 * (real n * additive_strength f xi - 2 * deltaG TYPE('a))) +\n        8 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. N \\<in> {2 ^ k<..2 ^ Suc k} \\<Longrightarrow>\n    dist x ((f ^^ N) x) - real N * additive_strength f xi\n    \\<le> dist x (f x) + real (Suc k) * 16 * deltaG TYPE('a)", "also"], ["proof (state)\nthis:\n  max (dist x ((f ^^ n) x) - Busemann_function_at xi ((f ^^ n) x) x)\n   (dist ((f ^^ n) x) ((f ^^ (n + m)) x) -\n    Busemann_function_at xi ((f ^^ (n + m)) x) ((f ^^ n) x) -\n    2 * Busemann_function_at xi ((f ^^ n) x) x) +\n  8 * deltaG TYPE('a)\n  \\<le> max (dist x ((f ^^ n) x) -\n             (real n * additive_strength f xi - 2 * deltaG TYPE('a)))\n         (dist ((f ^^ n) x) ((f ^^ (n + m)) x) -\n          (real m * additive_strength f xi - 2 * deltaG TYPE('a)) -\n          2 * (real n * additive_strength f xi - 2 * deltaG TYPE('a))) +\n        8 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. N \\<in> {2 ^ k<..2 ^ Suc k} \\<Longrightarrow>\n    dist x ((f ^^ N) x) - real N * additive_strength f xi\n    \\<le> dist x (f x) + real (Suc k) * 16 * deltaG TYPE('a)", "have \"... \\<le> max (dist x ((f^^n) x) - n * additive_strength f xi + 6 * deltaG(TYPE('a))) (dist x ((f^^m) x) - m * additive_strength f xi + 6 * deltaG(TYPE('a))) + 8 * deltaG(TYPE('a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max (dist x ((f ^^ n) x) -\n         (real n * additive_strength f xi - 2 * deltaG TYPE('a)))\n     (dist ((f ^^ n) x) ((f ^^ (n + m)) x) -\n      (real m * additive_strength f xi - 2 * deltaG TYPE('a)) -\n      2 * (real n * additive_strength f xi - 2 * deltaG TYPE('a))) +\n    8 * deltaG TYPE('a)\n    \\<le> max (dist x ((f ^^ n) x) - real n * additive_strength f xi +\n               6 * deltaG TYPE('a))\n           (dist x ((f ^^ m) x) - real m * additive_strength f xi +\n            6 * deltaG TYPE('a)) +\n          8 * deltaG TYPE('a)", "unfolding * isometryD(2)[OF isometry_iterates[OF assms(1)], of n]"], ["proof (prove)\ngoal (1 subgoal):\n 1. max (dist x ((f ^^ n) x) -\n         (real n * additive_strength f xi - 2 * deltaG TYPE('a)))\n     (dist x ((f ^^ m) x) -\n      (real m * additive_strength f xi - 2 * deltaG TYPE('a)) -\n      2 * (real n * additive_strength f xi - 2 * deltaG TYPE('a))) +\n    8 * deltaG TYPE('a)\n    \\<le> max (dist x ((f ^^ n) x) - real n * additive_strength f xi +\n               6 * deltaG TYPE('a))\n           (dist x ((f ^^ m) x) - real m * additive_strength f xi +\n            6 * deltaG TYPE('a)) +\n          8 * deltaG TYPE('a)", "using assms(3)"], ["proof (prove)\nusing this:\n  0 \\<le> additive_strength f xi\n\ngoal (1 subgoal):\n 1. max (dist x ((f ^^ n) x) -\n         (real n * additive_strength f xi - 2 * deltaG TYPE('a)))\n     (dist x ((f ^^ m) x) -\n      (real m * additive_strength f xi - 2 * deltaG TYPE('a)) -\n      2 * (real n * additive_strength f xi - 2 * deltaG TYPE('a))) +\n    8 * deltaG TYPE('a)\n    \\<le> max (dist x ((f ^^ n) x) - real n * additive_strength f xi +\n               6 * deltaG TYPE('a))\n           (dist x ((f ^^ m) x) - real m * additive_strength f xi +\n            6 * deltaG TYPE('a)) +\n          8 * deltaG TYPE('a)", "by (intro mono_intros, auto)"], ["proof (state)\nthis:\n  max (dist x ((f ^^ n) x) -\n       (real n * additive_strength f xi - 2 * deltaG TYPE('a)))\n   (dist ((f ^^ n) x) ((f ^^ (n + m)) x) -\n    (real m * additive_strength f xi - 2 * deltaG TYPE('a)) -\n    2 * (real n * additive_strength f xi - 2 * deltaG TYPE('a))) +\n  8 * deltaG TYPE('a)\n  \\<le> max (dist x ((f ^^ n) x) - real n * additive_strength f xi +\n             6 * deltaG TYPE('a))\n         (dist x ((f ^^ m) x) - real m * additive_strength f xi +\n          6 * deltaG TYPE('a)) +\n        8 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. N \\<in> {2 ^ k<..2 ^ Suc k} \\<Longrightarrow>\n    dist x ((f ^^ N) x) - real N * additive_strength f xi\n    \\<le> dist x (f x) + real (Suc k) * 16 * deltaG TYPE('a)", "also"], ["proof (state)\nthis:\n  max (dist x ((f ^^ n) x) -\n       (real n * additive_strength f xi - 2 * deltaG TYPE('a)))\n   (dist ((f ^^ n) x) ((f ^^ (n + m)) x) -\n    (real m * additive_strength f xi - 2 * deltaG TYPE('a)) -\n    2 * (real n * additive_strength f xi - 2 * deltaG TYPE('a))) +\n  8 * deltaG TYPE('a)\n  \\<le> max (dist x ((f ^^ n) x) - real n * additive_strength f xi +\n             6 * deltaG TYPE('a))\n         (dist x ((f ^^ m) x) - real m * additive_strength f xi +\n          6 * deltaG TYPE('a)) +\n        8 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. N \\<in> {2 ^ k<..2 ^ Suc k} \\<Longrightarrow>\n    dist x ((f ^^ N) x) - real N * additive_strength f xi\n    \\<le> dist x (f x) + real (Suc k) * 16 * deltaG TYPE('a)", "have \"... = max (dist x ((f^^n) x) - n * additive_strength f xi) (dist x ((f^^m) x) - m * additive_strength f xi) + 14 * deltaG(TYPE('a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max (dist x ((f ^^ n) x) - real n * additive_strength f xi +\n         6 * deltaG TYPE('a))\n     (dist x ((f ^^ m) x) - real m * additive_strength f xi +\n      6 * deltaG TYPE('a)) +\n    8 * deltaG TYPE('a) =\n    max (dist x ((f ^^ n) x) - real n * additive_strength f xi)\n     (dist x ((f ^^ m) x) - real m * additive_strength f xi) +\n    14 * deltaG TYPE('a)", "unfolding max_add_distrib_left[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. max (dist x ((f ^^ n) x) - real n * additive_strength f xi)\n     (dist x ((f ^^ m) x) - real m * additive_strength f xi) +\n    6 * deltaG TYPE('a) +\n    8 * deltaG TYPE('a) =\n    max (dist x ((f ^^ n) x) - real n * additive_strength f xi)\n     (dist x ((f ^^ m) x) - real m * additive_strength f xi) +\n    14 * deltaG TYPE('a)", "by auto"], ["proof (state)\nthis:\n  max (dist x ((f ^^ n) x) - real n * additive_strength f xi +\n       6 * deltaG TYPE('a))\n   (dist x ((f ^^ m) x) - real m * additive_strength f xi +\n    6 * deltaG TYPE('a)) +\n  8 * deltaG TYPE('a) =\n  max (dist x ((f ^^ n) x) - real n * additive_strength f xi)\n   (dist x ((f ^^ m) x) - real m * additive_strength f xi) +\n  14 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. N \\<in> {2 ^ k<..2 ^ Suc k} \\<Longrightarrow>\n    dist x ((f ^^ N) x) - real N * additive_strength f xi\n    \\<le> dist x (f x) + real (Suc k) * 16 * deltaG TYPE('a)", "also"], ["proof (state)\nthis:\n  max (dist x ((f ^^ n) x) - real n * additive_strength f xi +\n       6 * deltaG TYPE('a))\n   (dist x ((f ^^ m) x) - real m * additive_strength f xi +\n    6 * deltaG TYPE('a)) +\n  8 * deltaG TYPE('a) =\n  max (dist x ((f ^^ n) x) - real n * additive_strength f xi)\n   (dist x ((f ^^ m) x) - real m * additive_strength f xi) +\n  14 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. N \\<in> {2 ^ k<..2 ^ Suc k} \\<Longrightarrow>\n    dist x ((f ^^ N) x) - real N * additive_strength f xi\n    \\<le> dist x (f x) + real (Suc k) * 16 * deltaG TYPE('a)", "have \"... \\<le> dist x (f x) + k * 16 * deltaG(TYPE('a)) + 14 * deltaG(TYPE('a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max (dist x ((f ^^ n) x) - real n * additive_strength f xi)\n     (dist x ((f ^^ m) x) - real m * additive_strength f xi) +\n    14 * deltaG TYPE('a)\n    \\<le> dist x (f x) + real (k * 16) * deltaG TYPE('a) +\n          14 * deltaG TYPE('a)", "using nm"], ["proof (prove)\nusing this:\n  N = n + m\n  m \\<in> {1..2 ^ k}\n  n \\<in> {1..2 ^ k}\n\ngoal (1 subgoal):\n 1. max (dist x ((f ^^ n) x) - real n * additive_strength f xi)\n     (dist x ((f ^^ m) x) - real m * additive_strength f xi) +\n    14 * deltaG TYPE('a)\n    \\<le> dist x (f x) + real (k * 16) * deltaG TYPE('a) +\n          14 * deltaG TYPE('a)", "by (auto intro!: Suc.IH)"], ["proof (state)\nthis:\n  max (dist x ((f ^^ n) x) - real n * additive_strength f xi)\n   (dist x ((f ^^ m) x) - real m * additive_strength f xi) +\n  14 * deltaG TYPE('a)\n  \\<le> dist x (f x) + real (k * 16) * deltaG TYPE('a) +\n        14 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. N \\<in> {2 ^ k<..2 ^ Suc k} \\<Longrightarrow>\n    dist x ((f ^^ N) x) - real N * additive_strength f xi\n    \\<le> dist x (f x) + real (Suc k) * 16 * deltaG TYPE('a)", "finally"], ["proof (chain)\npicking this:\n  dist x ((f ^^ N) x) - real N * additive_strength f xi -\n  2 * deltaG TYPE('a)\n  \\<le> dist x (f x) + real (k * 16) * deltaG TYPE('a) +\n        14 * deltaG TYPE('a)", "show ?thesis"], ["proof (prove)\nusing this:\n  dist x ((f ^^ N) x) - real N * additive_strength f xi -\n  2 * deltaG TYPE('a)\n  \\<le> dist x (f x) + real (k * 16) * deltaG TYPE('a) +\n        14 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. dist x ((f ^^ N) x) - real N * additive_strength f xi\n    \\<le> dist x (f x) + real (Suc k) * 16 * deltaG TYPE('a)", "by (auto simp add: algebra_simps)"], ["proof (state)\nthis:\n  dist x ((f ^^ N) x) - real N * additive_strength f xi\n  \\<le> dist x (f x) + real (Suc k) * 16 * deltaG TYPE('a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dist x ((f ^^ N) x) - real N * additive_strength f xi\n  \\<le> dist x (f x) + real (Suc k) * 16 * deltaG TYPE('a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?n \\<in> {1..2 ^ ?k1} \\<Longrightarrow>\n  dist x ((f ^^ ?n) x) - real ?n * additive_strength f xi\n  \\<le> dist x (f x) + real ?k1 * 16 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x)\n    \\<le> dist x (f x) + real n * additive_strength f xi +\n          real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) *\n          deltaG TYPE('a)", "define k::nat where \"k = nat(ceiling (log 2 n))\""], ["proof (state)\nthis:\n  k = nat \\<lceil>log 2 (real n)\\<rceil>\n\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x)\n    \\<le> dist x (f x) + real n * additive_strength f xi +\n          real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) *\n          deltaG TYPE('a)", "have \"n \\<le> 2^k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> 2 ^ k", "unfolding k_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> 2 ^ nat \\<lceil>log 2 (real n)\\<rceil>", "by (meson less_log2_of_power not_le real_nat_ceiling_ge)"], ["proof (state)\nthis:\n  n \\<le> 2 ^ k\n\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x)\n    \\<le> dist x (f x) + real n * additive_strength f xi +\n          real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) *\n          deltaG TYPE('a)", "then"], ["proof (chain)\npicking this:\n  n \\<le> 2 ^ k", "have \"dist x ((f^^n) x) - real n * additive_strength f xi \\<le> dist x (f x) + k * 16 * deltaG(TYPE('a))\""], ["proof (prove)\nusing this:\n  n \\<le> 2 ^ k\n\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x) - real n * additive_strength f xi\n    \\<le> dist x (f x) + real (k * 16) * deltaG TYPE('a)", "using A[of n k] \\<open>n \\<ge> 1\\<close>"], ["proof (prove)\nusing this:\n  n \\<le> 2 ^ k\n  n \\<in> {1..2 ^ k} \\<Longrightarrow>\n  dist x ((f ^^ n) x) - real n * additive_strength f xi\n  \\<le> dist x (f x) + real k * 16 * deltaG TYPE('a)\n  1 \\<le> n\n\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x) - real n * additive_strength f xi\n    \\<le> dist x (f x) + real (k * 16) * deltaG TYPE('a)", "by auto"], ["proof (state)\nthis:\n  dist x ((f ^^ n) x) - real n * additive_strength f xi\n  \\<le> dist x (f x) + real (k * 16) * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x)\n    \\<le> dist x (f x) + real n * additive_strength f xi +\n          real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) *\n          deltaG TYPE('a)", "moreover"], ["proof (state)\nthis:\n  dist x ((f ^^ n) x) - real n * additive_strength f xi\n  \\<le> dist x (f x) + real (k * 16) * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x)\n    \\<le> dist x (f x) + real n * additive_strength f xi +\n          real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) *\n          deltaG TYPE('a)", "have \"real (nat \\<lceil>log 2 (real n)\\<rceil>) = real_of_int \\<lceil>log 2 (real n)\\<rceil>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (nat \\<lceil>log 2 (real n)\\<rceil>) =\n    real_of_int \\<lceil>log 2 (real n)\\<rceil>", "by (metis Transcendental.log_one \\<open>n \\<le> 2 ^ k\\<close> assms(4) ceiling_zero int_ops(2) k_def le_antisym nat_eq_iff2 of_int_1 of_int_of_nat_eq order_refl power_0)"], ["proof (state)\nthis:\n  real (nat \\<lceil>log 2 (real n)\\<rceil>) =\n  real_of_int \\<lceil>log 2 (real n)\\<rceil>\n\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x)\n    \\<le> dist x (f x) + real n * additive_strength f xi +\n          real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) *\n          deltaG TYPE('a)", "ultimately"], ["proof (chain)\npicking this:\n  dist x ((f ^^ n) x) - real n * additive_strength f xi\n  \\<le> dist x (f x) + real (k * 16) * deltaG TYPE('a)\n  real (nat \\<lceil>log 2 (real n)\\<rceil>) =\n  real_of_int \\<lceil>log 2 (real n)\\<rceil>", "show ?thesis"], ["proof (prove)\nusing this:\n  dist x ((f ^^ n) x) - real n * additive_strength f xi\n  \\<le> dist x (f x) + real (k * 16) * deltaG TYPE('a)\n  real (nat \\<lceil>log 2 (real n)\\<rceil>) =\n  real_of_int \\<lceil>log 2 (real n)\\<rceil>\n\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x)\n    \\<le> dist x (f x) + real n * additive_strength f xi +\n          real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) *\n          deltaG TYPE('a)", "unfolding k_def"], ["proof (prove)\nusing this:\n  dist x ((f ^^ n) x) - real n * additive_strength f xi\n  \\<le> dist x (f x) +\n        real (nat \\<lceil>log 2 (real n)\\<rceil> * 16) * deltaG TYPE('a)\n  real (nat \\<lceil>log 2 (real n)\\<rceil>) =\n  real_of_int \\<lceil>log 2 (real n)\\<rceil>\n\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x)\n    \\<le> dist x (f x) + real n * additive_strength f xi +\n          real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) *\n          deltaG TYPE('a)", "by (auto simp add: algebra_simps)"], ["proof (state)\nthis:\n  dist x ((f ^^ n) x)\n  \\<le> dist x (f x) + real n * additive_strength f xi +\n        real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) * deltaG TYPE('a)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The strength of the inverse of a map is the opposite of the strength of the map.\\<close>"], ["", "lemma additive_strength_inv:\n  assumes \"isometry (f::'a::Gromov_hyperbolic_space \\<Rightarrow> 'a)\" \"Gromov_extension f xi = xi\"\n  shows \"additive_strength (inv f) xi = - additive_strength f xi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. additive_strength (inv f) xi = - additive_strength f xi", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. additive_strength (inv f) xi = - additive_strength f xi", "have *: \"(inv f ^^ n) ((f ^^ n) x) = x\" for n x"], ["proof (prove)\ngoal (1 subgoal):\n 1. (inv f ^^ n) ((f ^^ n) x) = x", "by (metis assms(1) comp_apply funpow_code_def inv_fn_o_fn_is_id isometry_inverse(2))"], ["proof (state)\nthis:\n  (inv f ^^ ?n) ((f ^^ ?n) ?x) = ?x\n\ngoal (1 subgoal):\n 1. additive_strength (inv f) xi = - additive_strength f xi", "have A: \"abs(real n * additive_strength f xi + real n * additive_strength (inv f) xi) \\<le> 6 * deltaG (TYPE('a))\" for n::nat and x::'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>real n * additive_strength f xi +\n          real n * additive_strength (inv f) xi\\<bar>\n    \\<le> 6 * deltaG TYPE('a)", "using Busemann_function_quasi_morphism[of xi x \"(f^^n) x\" x] Busemann_function_eq_additive_strength[OF assms, of n x] Busemann_function_eq_additive_strength[OF isometry_inverse(1)[OF assms(1)]\n    Gromov_extension_inv_fixed_point[OF assms], of n \"(f^^n) x\"]"], ["proof (prove)\nusing this:\n  \\<bar>Busemann_function_at xi x ((f ^^ n) x) +\n        Busemann_function_at xi ((f ^^ n) x) x -\n        Busemann_function_at xi x x\\<bar>\n  \\<le> 2 * deltaG TYPE('a)\n  \\<bar>Busemann_function_at xi ((f ^^ n) x) x -\n        real n * additive_strength f xi\\<bar>\n  \\<le> 2 * deltaG TYPE('a)\n  \\<bar>Busemann_function_at xi ((inv f ^^ n) ((f ^^ n) x)) ((f ^^ n) x) -\n        real n * additive_strength (inv f) xi\\<bar>\n  \\<le> 2 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. \\<bar>real n * additive_strength f xi +\n          real n * additive_strength (inv f) xi\\<bar>\n    \\<le> 6 * deltaG TYPE('a)", "unfolding *"], ["proof (prove)\nusing this:\n  \\<bar>Busemann_function_at xi x ((f ^^ n) x) +\n        Busemann_function_at xi ((f ^^ n) x) x -\n        Busemann_function_at xi x x\\<bar>\n  \\<le> 2 * deltaG TYPE('a)\n  \\<bar>Busemann_function_at xi ((f ^^ n) x) x -\n        real n * additive_strength f xi\\<bar>\n  \\<le> 2 * deltaG TYPE('a)\n  \\<bar>Busemann_function_at xi x ((f ^^ n) x) -\n        real n * additive_strength (inv f) xi\\<bar>\n  \\<le> 2 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. \\<bar>real n * additive_strength f xi +\n          real n * additive_strength (inv f) xi\\<bar>\n    \\<le> 6 * deltaG TYPE('a)", "by auto"], ["proof (state)\nthis:\n  \\<bar>real ?n * additive_strength f xi +\n        real ?n * additive_strength (inv f) xi\\<bar>\n  \\<le> 6 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. additive_strength (inv f) xi = - additive_strength f xi", "have B: \"abs(additive_strength f xi + additive_strength (inv f) xi) \\<le> 6 * deltaG(TYPE('a)) * (1/n)\" if \"n \\<ge> 1\" for n::nat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>additive_strength f xi + additive_strength (inv f) xi\\<bar>\n    \\<le> 6 * deltaG TYPE('a) * (1 / real n)", "using that A[of n]"], ["proof (prove)\nusing this:\n  1 \\<le> n\n  \\<bar>real n * additive_strength f xi +\n        real n * additive_strength (inv f) xi\\<bar>\n  \\<le> 6 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. \\<bar>additive_strength f xi + additive_strength (inv f) xi\\<bar>\n    \\<le> 6 * deltaG TYPE('a) * (1 / real n)", "apply (simp add: divide_simps algebra_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Suc 0 \\<le> n;\n     \\<bar>real n * additive_strength f xi +\n           real n * additive_strength (inv f) xi\\<bar>\n     \\<le> deltaG TYPE('a) * 6\\<rbrakk>\n    \\<Longrightarrow> real n *\n                      \\<bar>additive_strength f xi +\n                            additive_strength (inv f) xi\\<bar>\n                      \\<le> deltaG TYPE('a) * 6", "unfolding distrib_left[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Suc 0 \\<le> n;\n     \\<bar>real n *\n           (additive_strength f xi + additive_strength (inv f) xi)\\<bar>\n     \\<le> deltaG TYPE('a) * 6\\<rbrakk>\n    \\<Longrightarrow> real n *\n                      \\<bar>additive_strength f xi +\n                            additive_strength (inv f) xi\\<bar>\n                      \\<le> deltaG TYPE('a) * 6", "by auto"], ["proof (state)\nthis:\n  1 \\<le> ?n \\<Longrightarrow>\n  \\<bar>additive_strength f xi + additive_strength (inv f) xi\\<bar>\n  \\<le> 6 * deltaG TYPE('a) * (1 / real ?n)\n\ngoal (1 subgoal):\n 1. additive_strength (inv f) xi = - additive_strength f xi", "have \"(\\<lambda>n. abs(additive_strength f xi + additive_strength (inv f) xi)) \\<longlonglongrightarrow> 6 * deltaG(TYPE('a)) * 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<bar>additive_strength f xi + additive_strength (inv f) xi\\<bar>)\n    \\<longlonglongrightarrow> 6 * deltaG TYPE('a) * 0", "apply (rule tendsto_sandwich[of \"\\<lambda>n. 0\" _ _ \"\\<lambda>n. 6 * deltaG(TYPE('a)) * (1/real n)\"], simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       \\<bar>additive_strength f xi + additive_strength (inv f) xi\\<bar>\n       \\<le> 6 * deltaG TYPE('a) * (1 / real n)\n 2. (\\<lambda>n. 0) \\<longlonglongrightarrow> 6 * deltaG TYPE('a) * 0\n 3. (\\<lambda>n. 6 * deltaG TYPE('a) * (1 / real n))\n    \\<longlonglongrightarrow> 6 * deltaG TYPE('a) * 0", "unfolding eventually_sequentially"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          \\<bar>additive_strength f xi + additive_strength (inv f) xi\\<bar>\n          \\<le> 6 * deltaG TYPE('a) * (1 / real n)\n 2. (\\<lambda>n. 0) \\<longlonglongrightarrow> 6 * deltaG TYPE('a) * 0\n 3. (\\<lambda>n. 6 * deltaG TYPE('a) * (1 / real n))\n    \\<longlonglongrightarrow> 6 * deltaG TYPE('a) * 0", "apply (rule exI[of _ 1])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<forall>n\\<ge>1.\n       \\<bar>additive_strength f xi + additive_strength (inv f) xi\\<bar>\n       \\<le> 6 * deltaG TYPE('a) * (1 / real n)\n 2. (\\<lambda>n. 0) \\<longlonglongrightarrow> 6 * deltaG TYPE('a) * 0\n 3. (\\<lambda>n. 6 * deltaG TYPE('a) * (1 / real n))\n    \\<longlonglongrightarrow> 6 * deltaG TYPE('a) * 0", "using B"], ["proof (prove)\nusing this:\n  1 \\<le> ?n \\<Longrightarrow>\n  \\<bar>additive_strength f xi + additive_strength (inv f) xi\\<bar>\n  \\<le> 6 * deltaG TYPE('a) * (1 / real ?n)\n\ngoal (3 subgoals):\n 1. \\<forall>n\\<ge>1.\n       \\<bar>additive_strength f xi + additive_strength (inv f) xi\\<bar>\n       \\<le> 6 * deltaG TYPE('a) * (1 / real n)\n 2. (\\<lambda>n. 0) \\<longlonglongrightarrow> 6 * deltaG TYPE('a) * 0\n 3. (\\<lambda>n. 6 * deltaG TYPE('a) * (1 / real n))\n    \\<longlonglongrightarrow> 6 * deltaG TYPE('a) * 0", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<lambda>n. 0) \\<longlonglongrightarrow> 6 * deltaG TYPE('a) * 0\n 2. (\\<lambda>n. 6 * deltaG TYPE('a) * (1 / real n))\n    \\<longlonglongrightarrow> 6 * deltaG TYPE('a) * 0", "by (simp, intro tendsto_intros)"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      \\<bar>additive_strength f xi + additive_strength (inv f) xi\\<bar>)\n  \\<longlonglongrightarrow> 6 * deltaG TYPE('a) * 0\n\ngoal (1 subgoal):\n 1. additive_strength (inv f) xi = - additive_strength f xi", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n.\n      \\<bar>additive_strength f xi + additive_strength (inv f) xi\\<bar>)\n  \\<longlonglongrightarrow> 6 * deltaG TYPE('a) * 0", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      \\<bar>additive_strength f xi + additive_strength (inv f) xi\\<bar>)\n  \\<longlonglongrightarrow> 6 * deltaG TYPE('a) * 0\n\ngoal (1 subgoal):\n 1. additive_strength (inv f) xi = - additive_strength f xi", "using LIMSEQ_unique mult_zero_right tendsto_const"], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      \\<bar>additive_strength f xi + additive_strength (inv f) xi\\<bar>)\n  \\<longlonglongrightarrow> 6 * deltaG TYPE('a) * 0\n  \\<lbrakk>?X \\<longlonglongrightarrow> ?a;\n   ?X \\<longlonglongrightarrow> ?b\\<rbrakk>\n  \\<Longrightarrow> ?a = ?b\n  ?a * (0::?'a) = (0::?'a)\n  ((\\<lambda>x. ?k) \\<longlongrightarrow> ?k) ?F\n\ngoal (1 subgoal):\n 1. additive_strength (inv f) xi = - additive_strength f xi", "by fastforce"], ["proof (state)\nthis:\n  additive_strength (inv f) xi = - additive_strength f xi\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>We will now prove that the stable translation length of an isometry is given by the absolute\nvalue of its strength at any fixed point. We start with the case where the strength is nonnegative,\nand then reduce to this case by considering the map or its inverse.\\<close>"], ["", "lemma stable_translation_length_eq_additive_strength_aux:\n  assumes \"isometry (f::'a::Gromov_hyperbolic_space \\<Rightarrow> 'a)\" \"Gromov_extension f xi = xi\" \"additive_strength f xi \\<ge> 0\"\n  shows \"stable_translation_length f = additive_strength f xi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stable_translation_length f = additive_strength f xi", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. stable_translation_length f = additive_strength f xi", "have \"(\\<lambda>n. dist x ((f^^n) x)/n) \\<longlonglongrightarrow> additive_strength f xi\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. dist x ((f ^^ n) x) / real n)\n    \\<longlonglongrightarrow> additive_strength f xi", "proof (rule tendsto_sandwich[of \"\\<lambda>n. (n * additive_strength f xi - 2 * deltaG(TYPE('a)))/real n\" _ _ \"\\<lambda>n. (dist x (f x) + n * additive_strength f xi + ceiling (log 2 n) * 16 * deltaG(TYPE('a)))/ n\"])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       (real n * additive_strength f xi - 2 * deltaG TYPE('a)) / real n\n       \\<le> dist x ((f ^^ n) x) / real n\n 2. \\<forall>\\<^sub>F n in sequentially.\n       dist x ((f ^^ n) x) / real n\n       \\<le> (dist x (f x) + real n * additive_strength f xi +\n              real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) *\n              deltaG TYPE('a)) /\n             real n\n 3. (\\<lambda>n.\n        (real n * additive_strength f xi - 2 * deltaG TYPE('a)) / real n)\n    \\<longlonglongrightarrow> additive_strength f xi\n 4. (\\<lambda>xa.\n        (dist x (f x) + real xa * additive_strength f xi +\n         real_of_int (\\<lceil>log 2 (real xa)\\<rceil> * 16) *\n         deltaG TYPE('a)) /\n        real xa)\n    \\<longlonglongrightarrow> additive_strength f xi", "have \"n * additive_strength f xi - 2 * deltaG TYPE('a) \\<le> dist x ((f ^^ n) x)\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. real n * additive_strength f xi - 2 * deltaG TYPE('a)\n    \\<le> dist x ((f ^^ n) x)", "using Busemann_function_eq_additive_strength[OF assms(1) assms(2), of n x] Busemann_function_le_dist[of xi \"(f^^n) x\" x]"], ["proof (prove)\nusing this:\n  \\<bar>Busemann_function_at xi ((f ^^ n) x) x -\n        real n * additive_strength f xi\\<bar>\n  \\<le> 2 * deltaG TYPE('a)\n  \\<bar>Busemann_function_at xi ((f ^^ n) x) x\\<bar>\n  \\<le> dist ((f ^^ n) x) x\n\ngoal (1 subgoal):\n 1. real n * additive_strength f xi - 2 * deltaG TYPE('a)\n    \\<le> dist x ((f ^^ n) x)", "by (simp add: dist_commute)"], ["proof (state)\nthis:\n  real ?n * additive_strength f xi - 2 * deltaG TYPE('a)\n  \\<le> dist x ((f ^^ ?n) x)\n\ngoal (4 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       (real n * additive_strength f xi - 2 * deltaG TYPE('a)) / real n\n       \\<le> dist x ((f ^^ n) x) / real n\n 2. \\<forall>\\<^sub>F n in sequentially.\n       dist x ((f ^^ n) x) / real n\n       \\<le> (dist x (f x) + real n * additive_strength f xi +\n              real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) *\n              deltaG TYPE('a)) /\n             real n\n 3. (\\<lambda>n.\n        (real n * additive_strength f xi - 2 * deltaG TYPE('a)) / real n)\n    \\<longlonglongrightarrow> additive_strength f xi\n 4. (\\<lambda>xa.\n        (dist x (f x) + real xa * additive_strength f xi +\n         real_of_int (\\<lceil>log 2 (real xa)\\<rceil> * 16) *\n         deltaG TYPE('a)) /\n        real xa)\n    \\<longlonglongrightarrow> additive_strength f xi", "then"], ["proof (chain)\npicking this:\n  real ?n * additive_strength f xi - 2 * deltaG TYPE('a)\n  \\<le> dist x ((f ^^ ?n) x)", "have \"(n * additive_strength f xi - 2 * deltaG TYPE('a)) / n \\<le> dist x ((f ^^ n) x) / n\" if \"n \\<ge> 1\" for n"], ["proof (prove)\nusing this:\n  real ?n * additive_strength f xi - 2 * deltaG TYPE('a)\n  \\<le> dist x ((f ^^ ?n) x)\n\ngoal (1 subgoal):\n 1. (real n * additive_strength f xi - 2 * deltaG TYPE('a)) / real n\n    \\<le> dist x ((f ^^ n) x) / real n", "using that"], ["proof (prove)\nusing this:\n  real ?n * additive_strength f xi - 2 * deltaG TYPE('a)\n  \\<le> dist x ((f ^^ ?n) x)\n  1 \\<le> n\n\ngoal (1 subgoal):\n 1. (real n * additive_strength f xi - 2 * deltaG TYPE('a)) / real n\n    \\<le> dist x ((f ^^ n) x) / real n", "by (simp add: divide_simps)"], ["proof (state)\nthis:\n  1 \\<le> ?n \\<Longrightarrow>\n  (real ?n * additive_strength f xi - 2 * deltaG TYPE('a)) / real ?n\n  \\<le> dist x ((f ^^ ?n) x) / real ?n\n\ngoal (4 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       (real n * additive_strength f xi - 2 * deltaG TYPE('a)) / real n\n       \\<le> dist x ((f ^^ n) x) / real n\n 2. \\<forall>\\<^sub>F n in sequentially.\n       dist x ((f ^^ n) x) / real n\n       \\<le> (dist x (f x) + real n * additive_strength f xi +\n              real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) *\n              deltaG TYPE('a)) /\n             real n\n 3. (\\<lambda>n.\n        (real n * additive_strength f xi - 2 * deltaG TYPE('a)) / real n)\n    \\<longlonglongrightarrow> additive_strength f xi\n 4. (\\<lambda>xa.\n        (dist x (f x) + real xa * additive_strength f xi +\n         real_of_int (\\<lceil>log 2 (real xa)\\<rceil> * 16) *\n         deltaG TYPE('a)) /\n        real xa)\n    \\<longlonglongrightarrow> additive_strength f xi", "then"], ["proof (chain)\npicking this:\n  1 \\<le> ?n \\<Longrightarrow>\n  (real ?n * additive_strength f xi - 2 * deltaG TYPE('a)) / real ?n\n  \\<le> dist x ((f ^^ ?n) x) / real ?n", "show \"\\<forall>\\<^sub>F n in sequentially. (real n * additive_strength f xi - 2 * deltaG TYPE('a)) / real n \\<le> dist x ((f ^^ n) x) / real n\""], ["proof (prove)\nusing this:\n  1 \\<le> ?n \\<Longrightarrow>\n  (real ?n * additive_strength f xi - 2 * deltaG TYPE('a)) / real ?n\n  \\<le> dist x ((f ^^ ?n) x) / real ?n\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       (real n * additive_strength f xi - 2 * deltaG TYPE('a)) / real n\n       \\<le> dist x ((f ^^ n) x) / real n", "unfolding eventually_sequentially"], ["proof (prove)\nusing this:\n  1 \\<le> ?n \\<Longrightarrow>\n  (real ?n * additive_strength f xi - 2 * deltaG TYPE('a)) / real ?n\n  \\<le> dist x ((f ^^ ?n) x) / real ?n\n\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          (real n * additive_strength f xi - 2 * deltaG TYPE('a)) / real n\n          \\<le> dist x ((f ^^ n) x) / real n", "by auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     (real n * additive_strength f xi - 2 * deltaG TYPE('a)) / real n\n     \\<le> dist x ((f ^^ n) x) / real n\n\ngoal (3 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       dist x ((f ^^ n) x) / real n\n       \\<le> (dist x (f x) + real n * additive_strength f xi +\n              real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) *\n              deltaG TYPE('a)) /\n             real n\n 2. (\\<lambda>n.\n        (real n * additive_strength f xi - 2 * deltaG TYPE('a)) / real n)\n    \\<longlonglongrightarrow> additive_strength f xi\n 3. (\\<lambda>xa.\n        (dist x (f x) + real xa * additive_strength f xi +\n         real_of_int (\\<lceil>log 2 (real xa)\\<rceil> * 16) *\n         deltaG TYPE('a)) /\n        real xa)\n    \\<longlonglongrightarrow> additive_strength f xi", "have B: \"(\\<lambda>n. additive_strength f xi - (2 * deltaG(TYPE('a))) * (1/n)) \\<longlonglongrightarrow> additive_strength f xi - (2 * deltaG(TYPE('a))) * 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        additive_strength f xi - 2 * deltaG TYPE('a) * (1 / real x))\n    \\<longlonglongrightarrow> additive_strength f xi -\n                              2 * deltaG TYPE('a) * 0", "by (intro tendsto_intros)"], ["proof (state)\nthis:\n  (\\<lambda>x. additive_strength f xi - 2 * deltaG TYPE('a) * (1 / real x))\n  \\<longlonglongrightarrow> additive_strength f xi - 2 * deltaG TYPE('a) * 0\n\ngoal (3 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       dist x ((f ^^ n) x) / real n\n       \\<le> (dist x (f x) + real n * additive_strength f xi +\n              real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) *\n              deltaG TYPE('a)) /\n             real n\n 2. (\\<lambda>n.\n        (real n * additive_strength f xi - 2 * deltaG TYPE('a)) / real n)\n    \\<longlonglongrightarrow> additive_strength f xi\n 3. (\\<lambda>xa.\n        (dist x (f x) + real xa * additive_strength f xi +\n         real_of_int (\\<lceil>log 2 (real xa)\\<rceil> * 16) *\n         deltaG TYPE('a)) /\n        real xa)\n    \\<longlonglongrightarrow> additive_strength f xi", "show \"(\\<lambda>n. (real n * additive_strength f xi - 2 * deltaG TYPE('a)) / real n) \\<longlonglongrightarrow> additive_strength f xi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        (real n * additive_strength f xi - 2 * deltaG TYPE('a)) / real n)\n    \\<longlonglongrightarrow> additive_strength f xi", "proof (rule Lim_transform_eventually)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?f \\<longlonglongrightarrow> additive_strength f xi\n 2. \\<forall>\\<^sub>F x in sequentially.\n       ?f x =\n       (real x * additive_strength f xi - 2 * deltaG TYPE('a)) / real x", "show \"eventually (\\<lambda>n. additive_strength f xi - (2 * deltaG(TYPE('a))) * (1/n) = (real n * additive_strength f xi - 2 * deltaG TYPE('a)) / real n) sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       additive_strength f xi - 2 * deltaG TYPE('a) * (1 / real n) =\n       (real n * additive_strength f xi - 2 * deltaG TYPE('a)) / real n", "unfolding eventually_sequentially"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          additive_strength f xi - 2 * deltaG TYPE('a) * (1 / real n) =\n          (real n * additive_strength f xi - 2 * deltaG TYPE('a)) / real n", "apply (rule exI[of _ 1])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n\\<ge>1.\n       additive_strength f xi - 2 * deltaG TYPE('a) * (1 / real n) =\n       (real n * additive_strength f xi - 2 * deltaG TYPE('a)) / real n", "by (simp add: divide_simps)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     additive_strength f xi - 2 * deltaG TYPE('a) * (1 / real n) =\n     (real n * additive_strength f xi - 2 * deltaG TYPE('a)) / real n\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        additive_strength f xi - 2 * deltaG TYPE('a) * (1 / real n))\n    \\<longlonglongrightarrow> additive_strength f xi", "qed (use B in auto)"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      (real n * additive_strength f xi - 2 * deltaG TYPE('a)) / real n)\n  \\<longlonglongrightarrow> additive_strength f xi\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       dist x ((f ^^ n) x) / real n\n       \\<le> (dist x (f x) + real n * additive_strength f xi +\n              real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) *\n              deltaG TYPE('a)) /\n             real n\n 2. (\\<lambda>xa.\n        (dist x (f x) + real xa * additive_strength f xi +\n         real_of_int (\\<lceil>log 2 (real xa)\\<rceil> * 16) *\n         deltaG TYPE('a)) /\n        real xa)\n    \\<longlonglongrightarrow> additive_strength f xi", "have \"dist x ((f^^n) x) \\<le> dist x (f x) + n * additive_strength f xi + ceiling (log 2 n) * 16 * deltaG(TYPE('a))\" if \"n \\<ge> 1\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x)\n    \\<le> dist x (f x) + real n * additive_strength f xi +\n          real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) *\n          deltaG TYPE('a)", "using dist_le_additive_strength[OF assms that]"], ["proof (prove)\nusing this:\n  dist ?x ((f ^^ n) ?x)\n  \\<le> dist ?x (f ?x) + real n * additive_strength f xi +\n        real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x)\n    \\<le> dist x (f x) + real n * additive_strength f xi +\n          real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) *\n          deltaG TYPE('a)", "by simp"], ["proof (state)\nthis:\n  1 \\<le> ?n \\<Longrightarrow>\n  dist x ((f ^^ ?n) x)\n  \\<le> dist x (f x) + real ?n * additive_strength f xi +\n        real_of_int (\\<lceil>log 2 (real ?n)\\<rceil> * 16) * deltaG TYPE('a)\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       dist x ((f ^^ n) x) / real n\n       \\<le> (dist x (f x) + real n * additive_strength f xi +\n              real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) *\n              deltaG TYPE('a)) /\n             real n\n 2. (\\<lambda>xa.\n        (dist x (f x) + real xa * additive_strength f xi +\n         real_of_int (\\<lceil>log 2 (real xa)\\<rceil> * 16) *\n         deltaG TYPE('a)) /\n        real xa)\n    \\<longlonglongrightarrow> additive_strength f xi", "then"], ["proof (chain)\npicking this:\n  1 \\<le> ?n \\<Longrightarrow>\n  dist x ((f ^^ ?n) x)\n  \\<le> dist x (f x) + real ?n * additive_strength f xi +\n        real_of_int (\\<lceil>log 2 (real ?n)\\<rceil> * 16) * deltaG TYPE('a)", "have \"(dist x ((f^^n) x))/n \\<le> (dist x (f x) + n * additive_strength f xi + ceiling (log 2 n) * 16 * deltaG(TYPE('a)))/n\" if \"n \\<ge> 1\" for n"], ["proof (prove)\nusing this:\n  1 \\<le> ?n \\<Longrightarrow>\n  dist x ((f ^^ ?n) x)\n  \\<le> dist x (f x) + real ?n * additive_strength f xi +\n        real_of_int (\\<lceil>log 2 (real ?n)\\<rceil> * 16) * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x) / real n\n    \\<le> (dist x (f x) + real n * additive_strength f xi +\n           real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) *\n           deltaG TYPE('a)) /\n          real n", "using that"], ["proof (prove)\nusing this:\n  1 \\<le> ?n \\<Longrightarrow>\n  dist x ((f ^^ ?n) x)\n  \\<le> dist x (f x) + real ?n * additive_strength f xi +\n        real_of_int (\\<lceil>log 2 (real ?n)\\<rceil> * 16) * deltaG TYPE('a)\n  1 \\<le> n\n\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x) / real n\n    \\<le> (dist x (f x) + real n * additive_strength f xi +\n           real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) *\n           deltaG TYPE('a)) /\n          real n", "by (simp add: divide_simps)"], ["proof (state)\nthis:\n  1 \\<le> ?n \\<Longrightarrow>\n  dist x ((f ^^ ?n) x) / real ?n\n  \\<le> (dist x (f x) + real ?n * additive_strength f xi +\n         real_of_int (\\<lceil>log 2 (real ?n)\\<rceil> * 16) *\n         deltaG TYPE('a)) /\n        real ?n\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       dist x ((f ^^ n) x) / real n\n       \\<le> (dist x (f x) + real n * additive_strength f xi +\n              real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) *\n              deltaG TYPE('a)) /\n             real n\n 2. (\\<lambda>xa.\n        (dist x (f x) + real xa * additive_strength f xi +\n         real_of_int (\\<lceil>log 2 (real xa)\\<rceil> * 16) *\n         deltaG TYPE('a)) /\n        real xa)\n    \\<longlonglongrightarrow> additive_strength f xi", "then"], ["proof (chain)\npicking this:\n  1 \\<le> ?n \\<Longrightarrow>\n  dist x ((f ^^ ?n) x) / real ?n\n  \\<le> (dist x (f x) + real ?n * additive_strength f xi +\n         real_of_int (\\<lceil>log 2 (real ?n)\\<rceil> * 16) *\n         deltaG TYPE('a)) /\n        real ?n", "show \"\\<forall>\\<^sub>F n in sequentially. dist x ((f ^^ n) x) / real n \\<le> (dist x (f x) + real n * additive_strength f xi + real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) * deltaG TYPE('a)) / real n\""], ["proof (prove)\nusing this:\n  1 \\<le> ?n \\<Longrightarrow>\n  dist x ((f ^^ ?n) x) / real ?n\n  \\<le> (dist x (f x) + real ?n * additive_strength f xi +\n         real_of_int (\\<lceil>log 2 (real ?n)\\<rceil> * 16) *\n         deltaG TYPE('a)) /\n        real ?n\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       dist x ((f ^^ n) x) / real n\n       \\<le> (dist x (f x) + real n * additive_strength f xi +\n              real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) *\n              deltaG TYPE('a)) /\n             real n", "unfolding eventually_sequentially"], ["proof (prove)\nusing this:\n  1 \\<le> ?n \\<Longrightarrow>\n  dist x ((f ^^ ?n) x) / real ?n\n  \\<le> (dist x (f x) + real ?n * additive_strength f xi +\n         real_of_int (\\<lceil>log 2 (real ?n)\\<rceil> * 16) *\n         deltaG TYPE('a)) /\n        real ?n\n\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          dist x ((f ^^ n) x) / real n\n          \\<le> (dist x (f x) + real n * additive_strength f xi +\n                 real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) *\n                 deltaG TYPE('a)) /\n                real n", "by auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     dist x ((f ^^ n) x) / real n\n     \\<le> (dist x (f x) + real n * additive_strength f xi +\n            real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) *\n            deltaG TYPE('a)) /\n           real n\n\ngoal (1 subgoal):\n 1. (\\<lambda>xa.\n        (dist x (f x) + real xa * additive_strength f xi +\n         real_of_int (\\<lceil>log 2 (real xa)\\<rceil> * 16) *\n         deltaG TYPE('a)) /\n        real xa)\n    \\<longlonglongrightarrow> additive_strength f xi", "have B: \"(\\<lambda>n. dist x (f x) * (1/n) + additive_strength f xi + 16 * deltaG TYPE('a) * (\\<lceil>log 2 n\\<rceil> / n)) \\<longlonglongrightarrow> dist x (f x) * 0 + additive_strength f xi + 16 * deltaG TYPE('a) * 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        dist x (f x) * (1 / real n) + additive_strength f xi +\n        16 * deltaG TYPE('a) *\n        (real_of_int \\<lceil>log 2 (real n)\\<rceil> / real n))\n    \\<longlonglongrightarrow> dist x (f x) * 0 + additive_strength f xi +\n                              16 * deltaG TYPE('a) * 0", "by (intro tendsto_intros)"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      dist x (f x) * (1 / real n) + additive_strength f xi +\n      16 * deltaG TYPE('a) *\n      (real_of_int \\<lceil>log 2 (real n)\\<rceil> / real n))\n  \\<longlonglongrightarrow> dist x (f x) * 0 + additive_strength f xi +\n                            16 * deltaG TYPE('a) * 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>xa.\n        (dist x (f x) + real xa * additive_strength f xi +\n         real_of_int (\\<lceil>log 2 (real xa)\\<rceil> * 16) *\n         deltaG TYPE('a)) /\n        real xa)\n    \\<longlonglongrightarrow> additive_strength f xi", "show \"(\\<lambda>n. (dist x (f x) + n * additive_strength f xi + real_of_int (\\<lceil>log 2 n\\<rceil> * 16) * deltaG TYPE('a)) / real n) \\<longlonglongrightarrow> additive_strength f xi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        (dist x (f x) + real n * additive_strength f xi +\n         real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) *\n         deltaG TYPE('a)) /\n        real n)\n    \\<longlonglongrightarrow> additive_strength f xi", "proof (rule Lim_transform_eventually)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?f \\<longlonglongrightarrow> additive_strength f xi\n 2. \\<forall>\\<^sub>F xa in sequentially.\n       ?f xa =\n       (dist x (f x) + real xa * additive_strength f xi +\n        real_of_int (\\<lceil>log 2 (real xa)\\<rceil> * 16) *\n        deltaG TYPE('a)) /\n       real xa", "show \"eventually (\\<lambda>n. dist x (f x) * (1/n) + additive_strength f xi + 16 * deltaG TYPE('a) * (\\<lceil>log 2 n\\<rceil> / n) = (dist x (f x) + real n * additive_strength f xi + real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) * deltaG TYPE('a)) / real n) sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       dist x (f x) * (1 / real n) + additive_strength f xi +\n       16 * deltaG TYPE('a) *\n       (real_of_int \\<lceil>log 2 (real n)\\<rceil> / real n) =\n       (dist x (f x) + real n * additive_strength f xi +\n        real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) *\n        deltaG TYPE('a)) /\n       real n", "unfolding eventually_sequentially"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          dist x (f x) * (1 / real n) + additive_strength f xi +\n          16 * deltaG TYPE('a) *\n          (real_of_int \\<lceil>log 2 (real n)\\<rceil> / real n) =\n          (dist x (f x) + real n * additive_strength f xi +\n           real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) *\n           deltaG TYPE('a)) /\n          real n", "apply (rule exI[of _ 1])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n\\<ge>1.\n       dist x (f x) * (1 / real n) + additive_strength f xi +\n       16 * deltaG TYPE('a) *\n       (real_of_int \\<lceil>log 2 (real n)\\<rceil> / real n) =\n       (dist x (f x) + real n * additive_strength f xi +\n        real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) *\n        deltaG TYPE('a)) /\n       real n", "by (simp add: algebra_simps divide_simps)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     dist x (f x) * (1 / real n) + additive_strength f xi +\n     16 * deltaG TYPE('a) *\n     (real_of_int \\<lceil>log 2 (real n)\\<rceil> / real n) =\n     (dist x (f x) + real n * additive_strength f xi +\n      real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) * deltaG TYPE('a)) /\n     real n\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        dist x (f x) * (1 / real n) + additive_strength f xi +\n        16 * deltaG TYPE('a) *\n        (real_of_int \\<lceil>log 2 (real n)\\<rceil> / real n))\n    \\<longlonglongrightarrow> additive_strength f xi", "qed (use B in auto)"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      (dist x (f x) + real n * additive_strength f xi +\n       real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) *\n       deltaG TYPE('a)) /\n      real n)\n  \\<longlonglongrightarrow> additive_strength f xi\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>n. dist ?x ((f ^^ n) ?x) / real n)\n  \\<longlonglongrightarrow> additive_strength f xi\n\ngoal (1 subgoal):\n 1. stable_translation_length f = additive_strength f xi", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n. dist ?x ((f ^^ n) ?x) / real n)\n  \\<longlonglongrightarrow> additive_strength f xi", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>n. dist ?x ((f ^^ n) ?x) / real n)\n  \\<longlonglongrightarrow> additive_strength f xi\n\ngoal (1 subgoal):\n 1. stable_translation_length f = additive_strength f xi", "using LIMSEQ_unique stable_translation_length_as_pointwise_limit[OF isometryD(4)[OF assms(1)]]"], ["proof (prove)\nusing this:\n  (\\<lambda>n. dist ?x ((f ^^ n) ?x) / real n)\n  \\<longlonglongrightarrow> additive_strength f xi\n  \\<lbrakk>?X \\<longlonglongrightarrow> ?a;\n   ?X \\<longlonglongrightarrow> ?b\\<rbrakk>\n  \\<Longrightarrow> ?a = ?b\n  (\\<lambda>n. dist ?x ((f ^^ n) ?x) / real n)\n  \\<longlonglongrightarrow> stable_translation_length f\n\ngoal (1 subgoal):\n 1. stable_translation_length f = additive_strength f xi", "by blast"], ["proof (state)\nthis:\n  stable_translation_length f = additive_strength f xi\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stable_translation_length_eq_additive_strength:\n  assumes \"isometry (f::'a::Gromov_hyperbolic_space \\<Rightarrow> 'a)\" \"Gromov_extension f xi = xi\"\n  shows \"stable_translation_length f = abs(additive_strength f xi)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stable_translation_length f = \\<bar>additive_strength f xi\\<bar>", "proof (cases \"additive_strength f xi \\<ge> 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<le> additive_strength f xi \\<Longrightarrow>\n    stable_translation_length f = \\<bar>additive_strength f xi\\<bar>\n 2. \\<not> 0 \\<le> additive_strength f xi \\<Longrightarrow>\n    stable_translation_length f = \\<bar>additive_strength f xi\\<bar>", "case True"], ["proof (state)\nthis:\n  0 \\<le> additive_strength f xi\n\ngoal (2 subgoals):\n 1. 0 \\<le> additive_strength f xi \\<Longrightarrow>\n    stable_translation_length f = \\<bar>additive_strength f xi\\<bar>\n 2. \\<not> 0 \\<le> additive_strength f xi \\<Longrightarrow>\n    stable_translation_length f = \\<bar>additive_strength f xi\\<bar>", "then"], ["proof (chain)\npicking this:\n  0 \\<le> additive_strength f xi", "show ?thesis"], ["proof (prove)\nusing this:\n  0 \\<le> additive_strength f xi\n\ngoal (1 subgoal):\n 1. stable_translation_length f = \\<bar>additive_strength f xi\\<bar>", "using stable_translation_length_eq_additive_strength_aux[OF assms]"], ["proof (prove)\nusing this:\n  0 \\<le> additive_strength f xi\n  0 \\<le> additive_strength f xi \\<Longrightarrow>\n  stable_translation_length f = additive_strength f xi\n\ngoal (1 subgoal):\n 1. stable_translation_length f = \\<bar>additive_strength f xi\\<bar>", "by auto"], ["proof (state)\nthis:\n  stable_translation_length f = \\<bar>additive_strength f xi\\<bar>\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> additive_strength f xi \\<Longrightarrow>\n    stable_translation_length f = \\<bar>additive_strength f xi\\<bar>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> additive_strength f xi \\<Longrightarrow>\n    stable_translation_length f = \\<bar>additive_strength f xi\\<bar>", "case False"], ["proof (state)\nthis:\n  \\<not> 0 \\<le> additive_strength f xi\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> additive_strength f xi \\<Longrightarrow>\n    stable_translation_length f = \\<bar>additive_strength f xi\\<bar>", "then"], ["proof (chain)\npicking this:\n  \\<not> 0 \\<le> additive_strength f xi", "have *: \"abs(additive_strength f xi) = additive_strength (inv f) xi\""], ["proof (prove)\nusing this:\n  \\<not> 0 \\<le> additive_strength f xi\n\ngoal (1 subgoal):\n 1. \\<bar>additive_strength f xi\\<bar> = additive_strength (inv f) xi", "unfolding additive_strength_inv[OF assms]"], ["proof (prove)\nusing this:\n  \\<not> 0 \\<le> additive_strength f xi\n\ngoal (1 subgoal):\n 1. \\<bar>additive_strength f xi\\<bar> = - additive_strength f xi", "by auto"], ["proof (state)\nthis:\n  \\<bar>additive_strength f xi\\<bar> = additive_strength (inv f) xi\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> additive_strength f xi \\<Longrightarrow>\n    stable_translation_length f = \\<bar>additive_strength f xi\\<bar>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. stable_translation_length f = \\<bar>additive_strength f xi\\<bar>", "unfolding * stable_translation_length_inv[OF assms(1), symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. stable_translation_length (inv f) = additive_strength (inv f) xi", "using stable_translation_length_eq_additive_strength_aux[OF isometry_inverse(1)[OF assms(1)] Gromov_extension_inv_fixed_point[OF assms]] *"], ["proof (prove)\nusing this:\n  0 \\<le> additive_strength (inv f) xi \\<Longrightarrow>\n  stable_translation_length (inv f) = additive_strength (inv f) xi\n  \\<bar>additive_strength f xi\\<bar> = additive_strength (inv f) xi\n\ngoal (1 subgoal):\n 1. stable_translation_length (inv f) = additive_strength (inv f) xi", "by auto"], ["proof (state)\nthis:\n  stable_translation_length f = \\<bar>additive_strength f xi\\<bar>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Elliptic isometries\\<close>"], ["", "text \\<open>Elliptic isometries are the simplest ones: they have bounded orbits.\\<close>"], ["", "definition elliptic_isometry::\"('a::Gromov_hyperbolic_space \\<Rightarrow> 'a) \\<Rightarrow> bool\"\n  where \"elliptic_isometry f = (isometry f \\<and> (\\<forall>x. bounded {(f^^n) x|n. True}))\""], ["", "lemma elliptic_isometryD:\n  assumes \"elliptic_isometry f\"\n  shows \"bounded {(f^^n) x |n. True}\"\n        \"isometry f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded {(f ^^ n) x |n. True} &&& isometry f", "using assms"], ["proof (prove)\nusing this:\n  elliptic_isometry f\n\ngoal (1 subgoal):\n 1. bounded {(f ^^ n) x |n. True} &&& isometry f", "unfolding elliptic_isometry_def"], ["proof (prove)\nusing this:\n  isometry f \\<and> (\\<forall>x. bounded {(f ^^ n) x |n. True})\n\ngoal (1 subgoal):\n 1. bounded {(f ^^ n) x |n. True} &&& isometry f", "by auto"], ["", "lemma elliptic_isometryI [intro]:\n  assumes \"bounded {(f^^n) x |n. True}\"\n          \"isometry f\"\n  shows \"elliptic_isometry f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. elliptic_isometry f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. elliptic_isometry f", "have \"bounded {(f^^n) y |n. True}\" for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded {(f ^^ n) y |n. True}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. bounded {(f ^^ n) y |n. True}", "obtain c e where c: \"\\<And>n. dist c ((f^^n) x) \\<le> e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c e.\n        (\\<And>n. dist c ((f ^^ n) x) \\<le> e) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms(1)"], ["proof (prove)\nusing this:\n  bounded {(f ^^ n) x |n. True}\n\ngoal (1 subgoal):\n 1. (\\<And>c e.\n        (\\<And>n. dist c ((f ^^ n) x) \\<le> e) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding bounded_def"], ["proof (prove)\nusing this:\n  \\<exists>xa e. \\<forall>y\\<in>{(f ^^ n) x |n. True}. dist xa y \\<le> e\n\ngoal (1 subgoal):\n 1. (\\<And>c e.\n        (\\<And>n. dist c ((f ^^ n) x) \\<le> e) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  dist c ((f ^^ ?n) x) \\<le> e\n\ngoal (1 subgoal):\n 1. bounded {(f ^^ n) y |n. True}", "have \"dist c ((f^^n) y) \\<le> e + dist x y\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist c ((f ^^ n) y) \\<le> e + dist x y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist c ((f ^^ n) y) \\<le> e + dist x y", "have \"dist c ((f^^n) y) \\<le> dist c ((f^^n) x) + dist ((f^^n) x) ((f^^n) y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist c ((f ^^ n) y)\n    \\<le> dist c ((f ^^ n) x) + dist ((f ^^ n) x) ((f ^^ n) y)", "by (intro mono_intros)"], ["proof (state)\nthis:\n  dist c ((f ^^ n) y)\n  \\<le> dist c ((f ^^ n) x) + dist ((f ^^ n) x) ((f ^^ n) y)\n\ngoal (1 subgoal):\n 1. dist c ((f ^^ n) y) \\<le> e + dist x y", "also"], ["proof (state)\nthis:\n  dist c ((f ^^ n) y)\n  \\<le> dist c ((f ^^ n) x) + dist ((f ^^ n) x) ((f ^^ n) y)\n\ngoal (1 subgoal):\n 1. dist c ((f ^^ n) y) \\<le> e + dist x y", "have \"... \\<le> e + dist x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist c ((f ^^ n) x) + dist ((f ^^ n) x) ((f ^^ n) y) \\<le> e + dist x y", "using c[of n] isometry_iterates[OF assms(2), of n]"], ["proof (prove)\nusing this:\n  dist c ((f ^^ n) x) \\<le> e\n  isometry (f ^^ n)\n\ngoal (1 subgoal):\n 1. dist c ((f ^^ n) x) + dist ((f ^^ n) x) ((f ^^ n) y) \\<le> e + dist x y", "by (intro mono_intros, auto simp add: isometryD)"], ["proof (state)\nthis:\n  dist c ((f ^^ n) x) + dist ((f ^^ n) x) ((f ^^ n) y) \\<le> e + dist x y\n\ngoal (1 subgoal):\n 1. dist c ((f ^^ n) y) \\<le> e + dist x y", "finally"], ["proof (chain)\npicking this:\n  dist c ((f ^^ n) y) \\<le> e + dist x y", "show ?thesis"], ["proof (prove)\nusing this:\n  dist c ((f ^^ n) y) \\<le> e + dist x y\n\ngoal (1 subgoal):\n 1. dist c ((f ^^ n) y) \\<le> e + dist x y", "by simp"], ["proof (state)\nthis:\n  dist c ((f ^^ n) y) \\<le> e + dist x y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dist c ((f ^^ ?n) y) \\<le> e + dist x y\n\ngoal (1 subgoal):\n 1. bounded {(f ^^ n) y |n. True}", "then"], ["proof (chain)\npicking this:\n  dist c ((f ^^ ?n) y) \\<le> e + dist x y", "show ?thesis"], ["proof (prove)\nusing this:\n  dist c ((f ^^ ?n) y) \\<le> e + dist x y\n\ngoal (1 subgoal):\n 1. bounded {(f ^^ n) y |n. True}", "unfolding bounded_def"], ["proof (prove)\nusing this:\n  dist c ((f ^^ ?n) y) \\<le> e + dist x y\n\ngoal (1 subgoal):\n 1. \\<exists>x e. \\<forall>y\\<in>{(f ^^ n) y |n. True}. dist x y \\<le> e", "by auto"], ["proof (state)\nthis:\n  bounded {(f ^^ n) y |n. True}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bounded {(f ^^ n) ?y |n. True}\n\ngoal (1 subgoal):\n 1. elliptic_isometry f", "then"], ["proof (chain)\npicking this:\n  bounded {(f ^^ n) ?y |n. True}", "show ?thesis"], ["proof (prove)\nusing this:\n  bounded {(f ^^ n) ?y |n. True}\n\ngoal (1 subgoal):\n 1. elliptic_isometry f", "unfolding elliptic_isometry_def"], ["proof (prove)\nusing this:\n  bounded {(f ^^ n) ?y |n. True}\n\ngoal (1 subgoal):\n 1. isometry f \\<and> (\\<forall>x. bounded {(f ^^ n) x |n. True})", "using assms"], ["proof (prove)\nusing this:\n  bounded {(f ^^ n) ?y |n. True}\n  bounded {(f ^^ n) x |n. True}\n  isometry f\n\ngoal (1 subgoal):\n 1. isometry f \\<and> (\\<forall>x. bounded {(f ^^ n) x |n. True})", "by auto"], ["proof (state)\nthis:\n  elliptic_isometry f\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The inverse of an elliptic isometry is an elliptic isometry.\\<close>"], ["", "lemma elliptic_isometry_inv:\n  assumes \"elliptic_isometry f\"\n  shows \"elliptic_isometry (inv f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. elliptic_isometry (inv f)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. elliptic_isometry (inv f)", "obtain c e where A: \"\\<And>n. dist c ((f^^n) basepoint) \\<le> e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c e.\n        (\\<And>n. dist c ((f ^^ n) basepoint) \\<le> e) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using elliptic_isometryD(1)[OF assms, of basepoint]"], ["proof (prove)\nusing this:\n  bounded {(f ^^ n) basepoint |n. True}\n\ngoal (1 subgoal):\n 1. (\\<And>c e.\n        (\\<And>n. dist c ((f ^^ n) basepoint) \\<le> e) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding bounded_def"], ["proof (prove)\nusing this:\n  \\<exists>x e.\n     \\<forall>y\\<in>{(f ^^ n) basepoint |n. True}. dist x y \\<le> e\n\ngoal (1 subgoal):\n 1. (\\<And>c e.\n        (\\<And>n. dist c ((f ^^ n) basepoint) \\<le> e) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  dist c ((f ^^ ?n) basepoint) \\<le> e\n\ngoal (1 subgoal):\n 1. elliptic_isometry (inv f)", "have \"c = (f^^n) (((inv f)^^n) c)\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. c = (f ^^ n) ((inv f ^^ n) c)", "using fn_o_inv_fn_is_id[OF isometry_inverse(2)[OF elliptic_isometryD(2)[OF assms]], of n]"], ["proof (prove)\nusing this:\n  f ^^ n \\<circ> inv f ^^ n = (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. c = (f ^^ n) ((inv f ^^ n) c)", "unfolding comp_def"], ["proof (prove)\nusing this:\n  (\\<lambda>x. (f ^^ n) ((inv f ^^ n) x)) = (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. c = (f ^^ n) ((inv f ^^ n) c)", "by metis"], ["proof (state)\nthis:\n  c = (f ^^ ?n) ((inv f ^^ ?n) c)\n\ngoal (1 subgoal):\n 1. elliptic_isometry (inv f)", "then"], ["proof (chain)\npicking this:\n  c = (f ^^ ?n) ((inv f ^^ ?n) c)", "have \"dist ((f^^n) (((inv f)^^n) c)) ((f^^n) basepoint) \\<le> e\" for n"], ["proof (prove)\nusing this:\n  c = (f ^^ ?n) ((inv f ^^ ?n) c)\n\ngoal (1 subgoal):\n 1. dist ((f ^^ n) ((inv f ^^ n) c)) ((f ^^ n) basepoint) \\<le> e", "using A"], ["proof (prove)\nusing this:\n  c = (f ^^ ?n) ((inv f ^^ ?n) c)\n  dist c ((f ^^ ?n) basepoint) \\<le> e\n\ngoal (1 subgoal):\n 1. dist ((f ^^ n) ((inv f ^^ n) c)) ((f ^^ n) basepoint) \\<le> e", "by auto"], ["proof (state)\nthis:\n  dist ((f ^^ ?n) ((inv f ^^ ?n) c)) ((f ^^ ?n) basepoint) \\<le> e\n\ngoal (1 subgoal):\n 1. elliptic_isometry (inv f)", "then"], ["proof (chain)\npicking this:\n  dist ((f ^^ ?n) ((inv f ^^ ?n) c)) ((f ^^ ?n) basepoint) \\<le> e", "have B: \"dist basepoint (((inv f)^^n) c) \\<le> e\" for n"], ["proof (prove)\nusing this:\n  dist ((f ^^ ?n) ((inv f ^^ ?n) c)) ((f ^^ ?n) basepoint) \\<le> e\n\ngoal (1 subgoal):\n 1. dist basepoint ((inv f ^^ n) c) \\<le> e", "unfolding isometryD(2)[OF isometry_iterates[OF elliptic_isometryD(2)[OF assms]]]"], ["proof (prove)\nusing this:\n  dist ((inv f ^^ ?n) c) basepoint \\<le> e\n\ngoal (1 subgoal):\n 1. dist basepoint ((inv f ^^ n) c) \\<le> e", "by (auto simp add: dist_commute)"], ["proof (state)\nthis:\n  dist basepoint ((inv f ^^ ?n) c) \\<le> e\n\ngoal (1 subgoal):\n 1. elliptic_isometry (inv f)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. elliptic_isometry (inv f)", "apply (rule elliptic_isometryI[of _ c])"], ["proof (prove)\ngoal (2 subgoals):\n 1. bounded {(inv f ^^ n) c |n. True}\n 2. isometry (inv f)", "using isometry_inverse(1)[OF elliptic_isometryD(2)[OF assms]] B"], ["proof (prove)\nusing this:\n  isometry (inv f)\n  dist basepoint ((inv f ^^ ?n) c) \\<le> e\n\ngoal (2 subgoals):\n 1. bounded {(inv f ^^ n) c |n. True}\n 2. isometry (inv f)", "unfolding bounded_def"], ["proof (prove)\nusing this:\n  isometry (inv f)\n  dist basepoint ((inv f ^^ ?n) c) \\<le> e\n\ngoal (2 subgoals):\n 1. \\<exists>x e. \\<forall>y\\<in>{(inv f ^^ n) c |n. True}. dist x y \\<le> e\n 2. isometry (inv f)", "by auto"], ["proof (state)\nthis:\n  elliptic_isometry (inv f)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The inverse of a bijective map is an elliptic isometry if and only if the original map is.\\<close>"], ["", "lemma elliptic_isometry_inv_iff:\n  assumes \"bij f\"\n  shows \"elliptic_isometry (inv f) \\<longleftrightarrow> elliptic_isometry f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. elliptic_isometry (inv f) = elliptic_isometry f", "using elliptic_isometry_inv[of f] elliptic_isometry_inv[of \"inv f\"] inv_inv_eq[OF assms]"], ["proof (prove)\nusing this:\n  elliptic_isometry f \\<Longrightarrow> elliptic_isometry (inv f)\n  elliptic_isometry (inv f) \\<Longrightarrow>\n  elliptic_isometry (inv (inv f))\n  inv (inv f) = f\n\ngoal (1 subgoal):\n 1. elliptic_isometry (inv f) = elliptic_isometry f", "by auto"], ["", "text \\<open>The identity is an elliptic isometry.\\<close>"], ["", "lemma elliptic_isometry_id:\n  \"elliptic_isometry id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. elliptic_isometry id", "by (intro elliptic_isometryI isometryI, auto)"], ["", "text \\<open>The translation length of an elliptic isometry is $0$.\\<close>"], ["", "lemma elliptic_isometry_stable_translation_length:\n  assumes \"elliptic_isometry f\"\n  shows \"stable_translation_length f = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stable_translation_length f = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. stable_translation_length f = 0", "obtain x::'a where True"], ["proof (prove)\ngoal (1 subgoal):\n 1. (True \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  True\n\ngoal (1 subgoal):\n 1. stable_translation_length f = 0", "have \"bounded {(f^^n) x|n. True}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded {(f ^^ n) x |n. True}", "using elliptic_isometryD[OF assms]"], ["proof (prove)\nusing this:\n  bounded {(f ^^ n) ?x |n. True}\n  isometry f\n\ngoal (1 subgoal):\n 1. bounded {(f ^^ n) x |n. True}", "by auto"], ["proof (state)\nthis:\n  bounded {(f ^^ n) x |n. True}\n\ngoal (1 subgoal):\n 1. stable_translation_length f = 0", "then"], ["proof (chain)\npicking this:\n  bounded {(f ^^ n) x |n. True}", "obtain c C where cC: \"\\<And>n. dist c ((f^^n) x) \\<le> C\""], ["proof (prove)\nusing this:\n  bounded {(f ^^ n) x |n. True}\n\ngoal (1 subgoal):\n 1. (\\<And>c C.\n        (\\<And>n. dist c ((f ^^ n) x) \\<le> C) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding bounded_def"], ["proof (prove)\nusing this:\n  \\<exists>xa e. \\<forall>y\\<in>{(f ^^ n) x |n. True}. dist xa y \\<le> e\n\ngoal (1 subgoal):\n 1. (\\<And>c C.\n        (\\<And>n. dist c ((f ^^ n) x) \\<le> C) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  dist c ((f ^^ ?n) x) \\<le> C\n\ngoal (1 subgoal):\n 1. stable_translation_length f = 0", "have \"(\\<lambda>n. dist x ((f^^n) x)/n) \\<longlonglongrightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. dist x ((f ^^ n) x) / real n) \\<longlonglongrightarrow> 0", "proof (rule tendsto_sandwich[of \"\\<lambda>_. 0\" _ sequentially \"\\<lambda>n. 2 * C / n\"])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       0 \\<le> dist x ((f ^^ n) x) / real n\n 2. \\<forall>\\<^sub>F n in sequentially.\n       dist x ((f ^^ n) x) / real n \\<le> 2 * C / real n\n 3. (\\<lambda>_. 0) \\<longlonglongrightarrow> 0\n 4. (\\<lambda>x. 2 * C / real x) \\<longlonglongrightarrow> 0", "have \"(\\<lambda>n. 2 * C * (1 / real n)) \\<longlonglongrightarrow> 2 * C * 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. 2 * C * (1 / real n)) \\<longlonglongrightarrow> 2 * C * 0", "by (intro tendsto_intros)"], ["proof (state)\nthis:\n  (\\<lambda>n. 2 * C * (1 / real n)) \\<longlonglongrightarrow> 2 * C * 0\n\ngoal (4 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       0 \\<le> dist x ((f ^^ n) x) / real n\n 2. \\<forall>\\<^sub>F n in sequentially.\n       dist x ((f ^^ n) x) / real n \\<le> 2 * C / real n\n 3. (\\<lambda>_. 0) \\<longlonglongrightarrow> 0\n 4. (\\<lambda>x. 2 * C / real x) \\<longlonglongrightarrow> 0", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n. 2 * C * (1 / real n)) \\<longlonglongrightarrow> 2 * C * 0", "show \"(\\<lambda>n. 2 * C / real n) \\<longlonglongrightarrow> 0\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. 2 * C * (1 / real n)) \\<longlonglongrightarrow> 2 * C * 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. 2 * C / real n) \\<longlonglongrightarrow> 0", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n. 2 * C / real n) \\<longlonglongrightarrow> 0\n\ngoal (3 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       0 \\<le> dist x ((f ^^ n) x) / real n\n 2. \\<forall>\\<^sub>F n in sequentially.\n       dist x ((f ^^ n) x) / real n \\<le> 2 * C / real n\n 3. (\\<lambda>_. 0) \\<longlonglongrightarrow> 0", "have \"dist x ((f ^^ n) x) / real n \\<le> 2 * C / real n\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x) / real n \\<le> 2 * C / real n", "using cC[of 0] cC[of n] dist_triangle[of x \"(f^^n) x\" c]"], ["proof (prove)\nusing this:\n  dist c ((f ^^ 0) x) \\<le> C\n  dist c ((f ^^ n) x) \\<le> C\n  dist x ((f ^^ n) x) \\<le> dist x c + dist c ((f ^^ n) x)\n\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x) / real n \\<le> 2 * C / real n", "by (auto simp add: algebra_simps divide_simps dist_commute)"], ["proof (state)\nthis:\n  dist x ((f ^^ ?n) x) / real ?n \\<le> 2 * C / real ?n\n\ngoal (3 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       0 \\<le> dist x ((f ^^ n) x) / real n\n 2. \\<forall>\\<^sub>F n in sequentially.\n       dist x ((f ^^ n) x) / real n \\<le> 2 * C / real n\n 3. (\\<lambda>_. 0) \\<longlonglongrightarrow> 0", "then"], ["proof (chain)\npicking this:\n  dist x ((f ^^ ?n) x) / real ?n \\<le> 2 * C / real ?n", "show \"eventually (\\<lambda>n. dist x ((f ^^ n) x) / real n \\<le> 2 * C / real n) sequentially\""], ["proof (prove)\nusing this:\n  dist x ((f ^^ ?n) x) / real ?n \\<le> 2 * C / real ?n\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       dist x ((f ^^ n) x) / real n \\<le> 2 * C / real n", "by auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     dist x ((f ^^ n) x) / real n \\<le> 2 * C / real n\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       0 \\<le> dist x ((f ^^ n) x) / real n\n 2. (\\<lambda>_. 0) \\<longlonglongrightarrow> 0", "qed (auto)"], ["proof (state)\nthis:\n  (\\<lambda>n. dist x ((f ^^ n) x) / real n) \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. stable_translation_length f = 0", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>n. dist x ((f ^^ n) x) / real n) \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. stable_translation_length f = 0", "have \"(\\<lambda>n. dist x ((f^^n) x)/n) \\<longlonglongrightarrow> stable_translation_length f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. dist x ((f ^^ n) x) / real n)\n    \\<longlonglongrightarrow> stable_translation_length f", "by (rule stable_translation_length_as_pointwise_limit[OF isometry_on_lipschitz[OF isometryD(1)[OF elliptic_isometryD(2)[OF assms]]]])"], ["proof (state)\nthis:\n  (\\<lambda>n. dist x ((f ^^ n) x) / real n)\n  \\<longlonglongrightarrow> stable_translation_length f\n\ngoal (1 subgoal):\n 1. stable_translation_length f = 0", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>n. dist x ((f ^^ n) x) / real n) \\<longlonglongrightarrow> 0\n  (\\<lambda>n. dist x ((f ^^ n) x) / real n)\n  \\<longlonglongrightarrow> stable_translation_length f", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>n. dist x ((f ^^ n) x) / real n) \\<longlonglongrightarrow> 0\n  (\\<lambda>n. dist x ((f ^^ n) x) / real n)\n  \\<longlonglongrightarrow> stable_translation_length f\n\ngoal (1 subgoal):\n 1. stable_translation_length f = 0", "using LIMSEQ_unique"], ["proof (prove)\nusing this:\n  (\\<lambda>n. dist x ((f ^^ n) x) / real n) \\<longlonglongrightarrow> 0\n  (\\<lambda>n. dist x ((f ^^ n) x) / real n)\n  \\<longlonglongrightarrow> stable_translation_length f\n  \\<lbrakk>?X \\<longlonglongrightarrow> ?a;\n   ?X \\<longlonglongrightarrow> ?b\\<rbrakk>\n  \\<Longrightarrow> ?a = ?b\n\ngoal (1 subgoal):\n 1. stable_translation_length f = 0", "by auto"], ["proof (state)\nthis:\n  stable_translation_length f = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If an isometry has a fixed point, then it is elliptic.\\<close>"], ["", "lemma isometry_with_fixed_point_is_elliptic:\n  assumes \"isometry f\" \"f x = x\"\n  shows \"elliptic_isometry f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. elliptic_isometry f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. elliptic_isometry f", "have *: \"(f^^n) x = x\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ n) x = x", "apply (induction n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (f ^^ 0) x = x\n 2. \\<And>n. (f ^^ n) x = x \\<Longrightarrow> (f ^^ Suc n) x = x", "using assms(2)"], ["proof (prove)\nusing this:\n  f x = x\n\ngoal (2 subgoals):\n 1. (f ^^ 0) x = x\n 2. \\<And>n. (f ^^ n) x = x \\<Longrightarrow> (f ^^ Suc n) x = x", "by auto"], ["proof (state)\nthis:\n  (f ^^ ?n) x = x\n\ngoal (1 subgoal):\n 1. elliptic_isometry f", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. elliptic_isometry f", "apply (rule elliptic_isometryI[of _ x, OF _ assms(1)])"], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded {(f ^^ n) x |n. True}", "unfolding *"], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded {uu_. \\<exists>n. uu_ = x \\<and> True}", "by auto"], ["proof (state)\nthis:\n  elliptic_isometry f\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Parabolic and loxodromic isometries\\<close>"], ["", "text \\<open>An isometry is parabolic if it is not elliptic and if its translation length vanishes.\\<close>"], ["", "definition parabolic_isometry::\"('a::Gromov_hyperbolic_space \\<Rightarrow> 'a) \\<Rightarrow> bool\"\n  where \"parabolic_isometry f = (isometry f \\<and> \\<not>elliptic_isometry f \\<and> stable_translation_length f = 0)\""], ["", "text \\<open>An isometry is loxodromic if it is not elliptic and if its translation length is nonzero.\\<close>"], ["", "definition loxodromic_isometry::\"('a::Gromov_hyperbolic_space \\<Rightarrow> 'a) \\<Rightarrow> bool\"\n  where \"loxodromic_isometry f = (isometry f \\<and> \\<not>elliptic_isometry f \\<and> stable_translation_length f \\<noteq> 0)\""], ["", "text \\<open>The main features of such isometries are expressed in terms of their fixed points at infinity.\nWe define them now, but proving that the definitions make sense will take some work.\\<close>"], ["", "definition neutral_fixed_point::\"('a::Gromov_hyperbolic_space \\<Rightarrow> 'a) \\<Rightarrow> 'a Gromov_completion\"\n  where \"neutral_fixed_point f = (SOME xi. xi \\<in> Gromov_boundary \\<and> Gromov_extension f xi = xi \\<and> additive_strength f xi = 0)\""], ["", "definition attracting_fixed_point::\"('a::Gromov_hyperbolic_space \\<Rightarrow> 'a) \\<Rightarrow> 'a Gromov_completion\"\n  where \"attracting_fixed_point f = (SOME xi. xi \\<in> Gromov_boundary \\<and> Gromov_extension f xi = xi \\<and> additive_strength f xi < 0)\""], ["", "definition repelling_fixed_point::\"('a::Gromov_hyperbolic_space \\<Rightarrow> 'a) \\<Rightarrow> 'a Gromov_completion\"\n  where \"repelling_fixed_point f = (SOME xi. xi \\<in> Gromov_boundary \\<and> Gromov_extension f xi = xi \\<and> additive_strength f xi > 0)\""], ["", "lemma parabolic_isometryD:\n  assumes \"parabolic_isometry f\"\n  shows \"isometry f\"\n        \"\\<not>bounded {(f^^n) x|n. True}\"\n        \"stable_translation_length f = 0\"\n        \"\\<not>elliptic_isometry f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (isometry f &&& \\<not> bounded {(f ^^ n) x |n. True}) &&&\n    stable_translation_length f = 0 &&& \\<not> elliptic_isometry f", "using assms"], ["proof (prove)\nusing this:\n  parabolic_isometry f\n\ngoal (1 subgoal):\n 1. (isometry f &&& \\<not> bounded {(f ^^ n) x |n. True}) &&&\n    stable_translation_length f = 0 &&& \\<not> elliptic_isometry f", "unfolding parabolic_isometry_def"], ["proof (prove)\nusing this:\n  isometry f \\<and>\n  \\<not> elliptic_isometry f \\<and> stable_translation_length f = 0\n\ngoal (1 subgoal):\n 1. (isometry f &&& \\<not> bounded {(f ^^ n) x |n. True}) &&&\n    stable_translation_length f = 0 &&& \\<not> elliptic_isometry f", "by auto"], ["", "lemma parabolic_isometryI:\n  assumes \"isometry f\"\n          \"\\<not>bounded {(f^^n) x|n. True}\"\n          \"stable_translation_length f = 0\"\n  shows \"parabolic_isometry f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. parabolic_isometry f", "using assms"], ["proof (prove)\nusing this:\n  isometry f\n  \\<not> bounded {(f ^^ n) x |n. True}\n  stable_translation_length f = 0\n\ngoal (1 subgoal):\n 1. parabolic_isometry f", "unfolding parabolic_isometry_def elliptic_isometry_def"], ["proof (prove)\nusing this:\n  isometry f\n  \\<not> bounded {(f ^^ n) x |n. True}\n  stable_translation_length f = 0\n\ngoal (1 subgoal):\n 1. isometry f \\<and>\n    \\<not> (isometry f \\<and>\n            (\\<forall>x. bounded {(f ^^ n) x |n. True})) \\<and>\n    stable_translation_length f = 0", "by auto"], ["", "lemma loxodromic_isometryD:\n  assumes \"loxodromic_isometry f\"\n  shows \"isometry f\"\n        \"\\<not>bounded {(f^^n) x|n. True}\"\n        \"stable_translation_length f > 0\"\n        \"\\<not>elliptic_isometry f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (isometry f &&& \\<not> bounded {(f ^^ n) x |n. True}) &&&\n    0 < stable_translation_length f &&& \\<not> elliptic_isometry f", "using assms"], ["proof (prove)\nusing this:\n  loxodromic_isometry f\n\ngoal (1 subgoal):\n 1. (isometry f &&& \\<not> bounded {(f ^^ n) x |n. True}) &&&\n    0 < stable_translation_length f &&& \\<not> elliptic_isometry f", "unfolding loxodromic_isometry_def"], ["proof (prove)\nusing this:\n  isometry f \\<and>\n  \\<not> elliptic_isometry f \\<and> stable_translation_length f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (isometry f &&& \\<not> bounded {(f ^^ n) x |n. True}) &&&\n    0 < stable_translation_length f &&& \\<not> elliptic_isometry f", "by (auto, meson dual_order.antisym not_le stable_translation_length_nonneg)"], ["", "text \\<open>To have a loxodromic isometry, it suffices to know that the stable translation length is\nnonzero, as elliptic isometries have zero translation length.\\<close>"], ["", "lemma loxodromic_isometryI:\n  assumes \"isometry f\"\n          \"stable_translation_length f \\<noteq> 0\"\n  shows \"loxodromic_isometry f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. loxodromic_isometry f", "using assms elliptic_isometry_stable_translation_length"], ["proof (prove)\nusing this:\n  isometry f\n  stable_translation_length f \\<noteq> 0\n  elliptic_isometry ?f \\<Longrightarrow> stable_translation_length ?f = 0\n\ngoal (1 subgoal):\n 1. loxodromic_isometry f", "unfolding loxodromic_isometry_def"], ["proof (prove)\nusing this:\n  isometry f\n  stable_translation_length f \\<noteq> 0\n  elliptic_isometry ?f \\<Longrightarrow> stable_translation_length ?f = 0\n\ngoal (1 subgoal):\n 1. isometry f \\<and>\n    \\<not> elliptic_isometry f \\<and> stable_translation_length f \\<noteq> 0", "by auto"], ["", "text \\<open>Any isometry is elliptic, or parabolic, or loxodromic, and these possibilities are mutually\nexclusive.\\<close>"], ["", "lemma elliptic_or_parabolic_or_loxodromic:\n  assumes \"isometry f\"\n  shows \"elliptic_isometry f \\<or> parabolic_isometry f \\<or> loxodromic_isometry f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. elliptic_isometry f \\<or>\n    parabolic_isometry f \\<or> loxodromic_isometry f", "using assms"], ["proof (prove)\nusing this:\n  isometry f\n\ngoal (1 subgoal):\n 1. elliptic_isometry f \\<or>\n    parabolic_isometry f \\<or> loxodromic_isometry f", "unfolding parabolic_isometry_def loxodromic_isometry_def"], ["proof (prove)\nusing this:\n  isometry f\n\ngoal (1 subgoal):\n 1. elliptic_isometry f \\<or>\n    isometry f \\<and>\n    \\<not> elliptic_isometry f \\<and> stable_translation_length f = 0 \\<or>\n    isometry f \\<and>\n    \\<not> elliptic_isometry f \\<and> stable_translation_length f \\<noteq> 0", "by auto"], ["", "lemma elliptic_imp_not_parabolic_loxodromic:\n  assumes \"elliptic_isometry f\"\n  shows \"\\<not>parabolic_isometry f\"\n        \"\\<not>loxodromic_isometry f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> parabolic_isometry f &&& \\<not> loxodromic_isometry f", "using assms"], ["proof (prove)\nusing this:\n  elliptic_isometry f\n\ngoal (1 subgoal):\n 1. \\<not> parabolic_isometry f &&& \\<not> loxodromic_isometry f", "unfolding parabolic_isometry_def loxodromic_isometry_def"], ["proof (prove)\nusing this:\n  elliptic_isometry f\n\ngoal (1 subgoal):\n 1. \\<not> (isometry f \\<and>\n            \\<not> elliptic_isometry f \\<and>\n            stable_translation_length f = 0) &&&\n    \\<not> (isometry f \\<and>\n            \\<not> elliptic_isometry f \\<and>\n            stable_translation_length f \\<noteq> 0)", "by auto"], ["", "lemma parabolic_imp_not_elliptic_loxodromic:\n  assumes \"parabolic_isometry f\"\n  shows \"\\<not>elliptic_isometry f\"\n        \"\\<not>loxodromic_isometry f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> elliptic_isometry f &&& \\<not> loxodromic_isometry f", "using assms"], ["proof (prove)\nusing this:\n  parabolic_isometry f\n\ngoal (1 subgoal):\n 1. \\<not> elliptic_isometry f &&& \\<not> loxodromic_isometry f", "unfolding parabolic_isometry_def loxodromic_isometry_def"], ["proof (prove)\nusing this:\n  isometry f \\<and>\n  \\<not> elliptic_isometry f \\<and> stable_translation_length f = 0\n\ngoal (1 subgoal):\n 1. \\<not> elliptic_isometry f &&&\n    \\<not> (isometry f \\<and>\n            \\<not> elliptic_isometry f \\<and>\n            stable_translation_length f \\<noteq> 0)", "by auto"], ["", "lemma loxodromic_imp_not_elliptic_parabolic:\n  assumes \"loxodromic_isometry f\"\n  shows \"\\<not>elliptic_isometry f\"\n        \"\\<not>parabolic_isometry f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> elliptic_isometry f &&& \\<not> parabolic_isometry f", "using assms"], ["proof (prove)\nusing this:\n  loxodromic_isometry f\n\ngoal (1 subgoal):\n 1. \\<not> elliptic_isometry f &&& \\<not> parabolic_isometry f", "unfolding parabolic_isometry_def loxodromic_isometry_def"], ["proof (prove)\nusing this:\n  isometry f \\<and>\n  \\<not> elliptic_isometry f \\<and> stable_translation_length f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> elliptic_isometry f &&&\n    \\<not> (isometry f \\<and>\n            \\<not> elliptic_isometry f \\<and>\n            stable_translation_length f = 0)", "by auto"], ["", "text \\<open>The inverse of a parabolic isometry is parabolic.\\<close>"], ["", "lemma parabolic_isometry_inv:\n  assumes \"parabolic_isometry f\"\n  shows \"parabolic_isometry (inv f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. parabolic_isometry (inv f)", "unfolding parabolic_isometry_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. isometry (inv f) \\<and>\n    \\<not> elliptic_isometry (inv f) \\<and>\n    stable_translation_length (inv f) = 0", "using isometry_inverse[of f] elliptic_isometry_inv_iff[of f]\nparabolic_isometryD[OF assms] stable_translation_length_inv[of f]"], ["proof (prove)\nusing this:\n  isometry f \\<Longrightarrow> isometry (inv f)\n  isometry f \\<Longrightarrow> bij f\n  bij f \\<Longrightarrow> elliptic_isometry (inv f) = elliptic_isometry f\n  isometry f\n  \\<not> bounded {(f ^^ n) ?x |n. True}\n  stable_translation_length f = 0\n  \\<not> elliptic_isometry f\n  isometry f \\<Longrightarrow>\n  stable_translation_length (inv f) = stable_translation_length f\n\ngoal (1 subgoal):\n 1. isometry (inv f) \\<and>\n    \\<not> elliptic_isometry (inv f) \\<and>\n    stable_translation_length (inv f) = 0", "by auto"], ["", "text \\<open>The inverse of a loxodromic isometry is loxodromic.\\<close>"], ["", "lemma loxodromic_isometry_inv:\n  assumes \"loxodromic_isometry f\"\n  shows \"loxodromic_isometry (inv f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. loxodromic_isometry (inv f)", "unfolding loxodromic_isometry_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. isometry (inv f) \\<and>\n    \\<not> elliptic_isometry (inv f) \\<and>\n    stable_translation_length (inv f) \\<noteq> 0", "using isometry_inverse[of f] elliptic_isometry_inv_iff[of f]\nloxodromic_isometryD[OF assms] stable_translation_length_inv[of f]"], ["proof (prove)\nusing this:\n  isometry f \\<Longrightarrow> isometry (inv f)\n  isometry f \\<Longrightarrow> bij f\n  bij f \\<Longrightarrow> elliptic_isometry (inv f) = elliptic_isometry f\n  isometry f\n  \\<not> bounded {(f ^^ n) ?x |n. True}\n  0 < stable_translation_length f\n  \\<not> elliptic_isometry f\n  isometry f \\<Longrightarrow>\n  stable_translation_length (inv f) = stable_translation_length f\n\ngoal (1 subgoal):\n 1. isometry (inv f) \\<and>\n    \\<not> elliptic_isometry (inv f) \\<and>\n    stable_translation_length (inv f) \\<noteq> 0", "by auto"], ["", "text \\<open>We will now prove that an isometry which is not elliptic has a fixed point at infinity. This\nis very easy if the space is proper (ensuring that the Gromov completion is compact), but in fact\nthis holds in general. One constructs it by considering a sequence $r_n$ such that $f^{r_n} 0$ tends\nto infinity, and additionally $d(f^l 0, 0) < d(f^{r_n} 0, 0)$ for $l < r_n$: this implies the\nconvergence at infinity of $f^{r_n} 0$, by an argument based on a Gromov product computation -- and\nthe limit is a fixed point. Moreover, it has nonpositive additive strength, essentially by\nconstruction.\\<close>"], ["", "lemma high_scores:\n  fixes u::\"nat \\<Rightarrow> real\" and i::nat and C::real\n  assumes \"\\<not>(bdd_above (range u))\"\n  shows \"\\<exists>n. (\\<forall>l \\<le> n. u l \\<le> u n) \\<and> u n \\<ge> C \\<and> n \\<ge> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n.\n       (\\<forall>l\\<le>n. u l \\<le> u n) \\<and> C \\<le> u n \\<and> i \\<le> n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>n.\n       (\\<forall>l\\<le>n. u l \\<le> u n) \\<and> C \\<le> u n \\<and> i \\<le> n", "define M where \"M = max C (Max {u l|l. l < i})\""], ["proof (state)\nthis:\n  M = max C (Max {u l |l. l < i})\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       (\\<forall>l\\<le>n. u l \\<le> u n) \\<and> C \\<le> u n \\<and> i \\<le> n", "define n where \"n = Inf {m. u m > M}\""], ["proof (state)\nthis:\n  n = Inf {m. M < u m}\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       (\\<forall>l\\<le>n. u l \\<le> u n) \\<and> C \\<le> u n \\<and> i \\<le> n", "have \"\\<not>(range u \\<subseteq> {..M})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> range u \\<subseteq> {..M}", "using assms"], ["proof (prove)\nusing this:\n  \\<not> bdd_above (range u)\n\ngoal (1 subgoal):\n 1. \\<not> range u \\<subseteq> {..M}", "by (meson bdd_above_Iic bdd_above_mono)"], ["proof (state)\nthis:\n  \\<not> range u \\<subseteq> {..M}\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       (\\<forall>l\\<le>n. u l \\<le> u n) \\<and> C \\<le> u n \\<and> i \\<le> n", "then"], ["proof (chain)\npicking this:\n  \\<not> range u \\<subseteq> {..M}", "have \"{m. u m > M} \\<noteq> {}\""], ["proof (prove)\nusing this:\n  \\<not> range u \\<subseteq> {..M}\n\ngoal (1 subgoal):\n 1. {m. M < u m} \\<noteq> {}", "using assms"], ["proof (prove)\nusing this:\n  \\<not> range u \\<subseteq> {..M}\n  \\<not> bdd_above (range u)\n\ngoal (1 subgoal):\n 1. {m. M < u m} \\<noteq> {}", "by (simp add: image_subset_iff not_less)"], ["proof (state)\nthis:\n  {m. M < u m} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       (\\<forall>l\\<le>n. u l \\<le> u n) \\<and> C \\<le> u n \\<and> i \\<le> n", "then"], ["proof (chain)\npicking this:\n  {m. M < u m} \\<noteq> {}", "have \"n \\<in> {m. u m > M}\""], ["proof (prove)\nusing this:\n  {m. M < u m} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. n \\<in> {m. M < u m}", "unfolding n_def"], ["proof (prove)\nusing this:\n  {m. M < u m} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. Inf {m. M < u m} \\<in> {m. M < u m}", "using Inf_nat_def1"], ["proof (prove)\nusing this:\n  {m. M < u m} \\<noteq> {}\n  ?K \\<noteq> {} \\<Longrightarrow> Inf ?K \\<in> ?K\n\ngoal (1 subgoal):\n 1. Inf {m. M < u m} \\<in> {m. M < u m}", "by metis"], ["proof (state)\nthis:\n  n \\<in> {m. M < u m}\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       (\\<forall>l\\<le>n. u l \\<le> u n) \\<and> C \\<le> u n \\<and> i \\<le> n", "then"], ["proof (chain)\npicking this:\n  n \\<in> {m. M < u m}", "have \"u n > M\""], ["proof (prove)\nusing this:\n  n \\<in> {m. M < u m}\n\ngoal (1 subgoal):\n 1. M < u n", "by simp"], ["proof (state)\nthis:\n  M < u n\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       (\\<forall>l\\<le>n. u l \\<le> u n) \\<and> C \\<le> u n \\<and> i \\<le> n", "have \"n \\<ge> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<le> n", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> i \\<le> n \\<Longrightarrow> False", "assume \"\\<not> i \\<le> n\""], ["proof (state)\nthis:\n  \\<not> i \\<le> n\n\ngoal (1 subgoal):\n 1. \\<not> i \\<le> n \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> i \\<le> n", "have *: \"n < i\""], ["proof (prove)\nusing this:\n  \\<not> i \\<le> n\n\ngoal (1 subgoal):\n 1. n < i", "by simp"], ["proof (state)\nthis:\n  n < i\n\ngoal (1 subgoal):\n 1. \\<not> i \\<le> n \\<Longrightarrow> False", "have \"u n \\<le> Max {u l|l. l < i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u n \\<le> Max {u l |l. l < i}", "apply (rule Max_ge)"], ["proof (prove)\ngoal (2 subgoals):\n 1. finite {u l |l. l < i}\n 2. u n \\<in> {u l |l. l < i}", "using *"], ["proof (prove)\nusing this:\n  n < i\n\ngoal (2 subgoals):\n 1. finite {u l |l. l < i}\n 2. u n \\<in> {u l |l. l < i}", "by auto"], ["proof (state)\nthis:\n  u n \\<le> Max {u l |l. l < i}\n\ngoal (1 subgoal):\n 1. \\<not> i \\<le> n \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  u n \\<le> Max {u l |l. l < i}", "show False"], ["proof (prove)\nusing this:\n  u n \\<le> Max {u l |l. l < i}\n\ngoal (1 subgoal):\n 1. False", "using \\<open>u n > M\\<close> M_def"], ["proof (prove)\nusing this:\n  u n \\<le> Max {u l |l. l < i}\n  M < u n\n  M = max C (Max {u l |l. l < i})\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       (\\<forall>l\\<le>n. u l \\<le> u n) \\<and> C \\<le> u n \\<and> i \\<le> n", "moreover"], ["proof (state)\nthis:\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       (\\<forall>l\\<le>n. u l \\<le> u n) \\<and> C \\<le> u n \\<and> i \\<le> n", "have \"u l \\<le> u n\" if \"l \\<le> n\" for l"], ["proof (prove)\ngoal (1 subgoal):\n 1. u l \\<le> u n", "proof (cases \"l = n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. l = n \\<Longrightarrow> u l \\<le> u n\n 2. l \\<noteq> n \\<Longrightarrow> u l \\<le> u n", "case True"], ["proof (state)\nthis:\n  l = n\n\ngoal (2 subgoals):\n 1. l = n \\<Longrightarrow> u l \\<le> u n\n 2. l \\<noteq> n \\<Longrightarrow> u l \\<le> u n", "then"], ["proof (chain)\npicking this:\n  l = n", "show ?thesis"], ["proof (prove)\nusing this:\n  l = n\n\ngoal (1 subgoal):\n 1. u l \\<le> u n", "by simp"], ["proof (state)\nthis:\n  u l \\<le> u n\n\ngoal (1 subgoal):\n 1. l \\<noteq> n \\<Longrightarrow> u l \\<le> u n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. l \\<noteq> n \\<Longrightarrow> u l \\<le> u n", "case False"], ["proof (state)\nthis:\n  l \\<noteq> n\n\ngoal (1 subgoal):\n 1. l \\<noteq> n \\<Longrightarrow> u l \\<le> u n", "then"], ["proof (chain)\npicking this:\n  l \\<noteq> n", "have \"l < n\""], ["proof (prove)\nusing this:\n  l \\<noteq> n\n\ngoal (1 subgoal):\n 1. l < n", "using \\<open>l \\<le> n\\<close>"], ["proof (prove)\nusing this:\n  l \\<noteq> n\n  l \\<le> n\n\ngoal (1 subgoal):\n 1. l < n", "by auto"], ["proof (state)\nthis:\n  l < n\n\ngoal (1 subgoal):\n 1. l \\<noteq> n \\<Longrightarrow> u l \\<le> u n", "then"], ["proof (chain)\npicking this:\n  l < n", "have \"l \\<notin> {m. u m > M}\""], ["proof (prove)\nusing this:\n  l < n\n\ngoal (1 subgoal):\n 1. l \\<notin> {m. M < u m}", "unfolding n_def"], ["proof (prove)\nusing this:\n  l < Inf {m. M < u m}\n\ngoal (1 subgoal):\n 1. l \\<notin> {m. M < u m}", "by (meson bdd_below_def cInf_lower not_le zero_le)"], ["proof (state)\nthis:\n  l \\<notin> {m. M < u m}\n\ngoal (1 subgoal):\n 1. l \\<noteq> n \\<Longrightarrow> u l \\<le> u n", "then"], ["proof (chain)\npicking this:\n  l \\<notin> {m. M < u m}", "show ?thesis"], ["proof (prove)\nusing this:\n  l \\<notin> {m. M < u m}\n\ngoal (1 subgoal):\n 1. u l \\<le> u n", "using \\<open>u n > M\\<close>"], ["proof (prove)\nusing this:\n  l \\<notin> {m. M < u m}\n  M < u n\n\ngoal (1 subgoal):\n 1. u l \\<le> u n", "by auto"], ["proof (state)\nthis:\n  u l \\<le> u n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?l \\<le> n \\<Longrightarrow> u ?l \\<le> u n\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       (\\<forall>l\\<le>n. u l \\<le> u n) \\<and> C \\<le> u n \\<and> i \\<le> n", "ultimately"], ["proof (chain)\npicking this:\n  i \\<le> n\n  ?l \\<le> n \\<Longrightarrow> u ?l \\<le> u n", "show ?thesis"], ["proof (prove)\nusing this:\n  i \\<le> n\n  ?l \\<le> n \\<Longrightarrow> u ?l \\<le> u n\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       (\\<forall>l\\<le>n. u l \\<le> u n) \\<and> C \\<le> u n \\<and> i \\<le> n", "using \\<open>u n > M\\<close> M_def less_eq_real_def"], ["proof (prove)\nusing this:\n  i \\<le> n\n  ?l \\<le> n \\<Longrightarrow> u ?l \\<le> u n\n  M < u n\n  M = max C (Max {u l |l. l < i})\n  (?x \\<le> ?y) = (?x < ?y \\<or> ?x = ?y)\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       (\\<forall>l\\<le>n. u l \\<le> u n) \\<and> C \\<le> u n \\<and> i \\<le> n", "by auto"], ["proof (state)\nthis:\n  \\<exists>n.\n     (\\<forall>l\\<le>n. u l \\<le> u n) \\<and> C \\<le> u n \\<and> i \\<le> n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma isometry_not_elliptic_has_attracting_fixed_point:\n  assumes \"isometry f\"\n          \"\\<not>(elliptic_isometry f)\"\n  shows \"\\<exists>xi \\<in> Gromov_boundary. Gromov_extension f xi = xi \\<and> additive_strength f xi \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> additive_strength f xi \\<le> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> additive_strength f xi \\<le> 0", "define u where \"u = (\\<lambda>n. dist basepoint ((f^^n) basepoint))\""], ["proof (state)\nthis:\n  u = (\\<lambda>n. dist basepoint ((f ^^ n) basepoint))\n\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> additive_strength f xi \\<le> 0", "have NB: \"\\<not>(bdd_above (range u))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> bdd_above (range u)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. bdd_above (range u) \\<Longrightarrow> False", "assume \"bdd_above (range u)\""], ["proof (state)\nthis:\n  bdd_above (range u)\n\ngoal (1 subgoal):\n 1. bdd_above (range u) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  bdd_above (range u)", "obtain C where *: \"\\<And>n. u n \\<le> C\""], ["proof (prove)\nusing this:\n  bdd_above (range u)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        (\\<And>n. u n \\<le> C) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding bdd_above_def"], ["proof (prove)\nusing this:\n  \\<exists>M. \\<forall>x\\<in>range u. x \\<le> M\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        (\\<And>n. u n \\<le> C) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  u ?n \\<le> C\n\ngoal (1 subgoal):\n 1. bdd_above (range u) \\<Longrightarrow> False", "have \"bounded {(f^^n) basepoint|n. True}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded {(f ^^ n) basepoint |n. True}", "unfolding bounded_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x e.\n       \\<forall>y\\<in>{(f ^^ n) basepoint |n. True}. dist x y \\<le> e", "apply (rule exI[of _ basepoint], rule exI[of _ C])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>{(f ^^ n) basepoint |n. True}. dist basepoint y \\<le> C", "using *"], ["proof (prove)\nusing this:\n  u ?n \\<le> C\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>{(f ^^ n) basepoint |n. True}. dist basepoint y \\<le> C", "unfolding u_def"], ["proof (prove)\nusing this:\n  dist basepoint ((f ^^ ?n) basepoint) \\<le> C\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>{(f ^^ n) basepoint |n. True}. dist basepoint y \\<le> C", "by auto"], ["proof (state)\nthis:\n  bounded {(f ^^ n) basepoint |n. True}\n\ngoal (1 subgoal):\n 1. bdd_above (range u) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  bounded {(f ^^ n) basepoint |n. True}", "show False"], ["proof (prove)\nusing this:\n  bounded {(f ^^ n) basepoint |n. True}\n\ngoal (1 subgoal):\n 1. False", "using elliptic_isometryI assms"], ["proof (prove)\nusing this:\n  bounded {(f ^^ n) basepoint |n. True}\n  \\<lbrakk>bounded {(?f ^^ n) ?x |n. True}; isometry ?f\\<rbrakk>\n  \\<Longrightarrow> elliptic_isometry ?f\n  isometry f\n  \\<not> elliptic_isometry f\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> bdd_above (range u)\n\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> additive_strength f xi \\<le> 0", "have \"\\<exists>r. \\<forall>n. ((\\<forall>l \\<le> r n. u l \\<le> u (r n)) \\<and> u (r n) \\<ge> 2 * n) \\<and> r (Suc n) \\<ge> r n + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>r.\n       \\<forall>n.\n          ((\\<forall>l\\<le>r n. u l \\<le> u (r n)) \\<and>\n           2 * real n \\<le> u (r n)) \\<and>\n          r n + 1 \\<le> r (Suc n)", "apply (rule dependent_nat_choice)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<exists>x.\n       (\\<forall>l\\<le>x. u l \\<le> u x) \\<and> 2 * real 0 \\<le> u x\n 2. \\<And>x n.\n       (\\<forall>l\\<le>x. u l \\<le> u x) \\<and>\n       2 * real n \\<le> u x \\<Longrightarrow>\n       \\<exists>y.\n          ((\\<forall>l\\<le>y. u l \\<le> u y) \\<and>\n           2 * real (Suc n) \\<le> u y) \\<and>\n          x + 1 \\<le> y", "using high_scores[OF NB]"], ["proof (prove)\nusing this:\n  \\<exists>n.\n     (\\<forall>l\\<le>n. u l \\<le> u n) \\<and> ?C \\<le> u n \\<and> ?i \\<le> n\n\ngoal (2 subgoals):\n 1. \\<exists>x.\n       (\\<forall>l\\<le>x. u l \\<le> u x) \\<and> 2 * real 0 \\<le> u x\n 2. \\<And>x n.\n       (\\<forall>l\\<le>x. u l \\<le> u x) \\<and>\n       2 * real n \\<le> u x \\<Longrightarrow>\n       \\<exists>y.\n          ((\\<forall>l\\<le>y. u l \\<le> u y) \\<and>\n           2 * real (Suc n) \\<le> u y) \\<and>\n          x + 1 \\<le> y", "by (auto) blast"], ["proof (state)\nthis:\n  \\<exists>r.\n     \\<forall>n.\n        ((\\<forall>l\\<le>r n. u l \\<le> u (r n)) \\<and>\n         2 * real n \\<le> u (r n)) \\<and>\n        r n + 1 \\<le> r (Suc n)\n\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> additive_strength f xi \\<le> 0", "then"], ["proof (chain)\npicking this:\n  \\<exists>r.\n     \\<forall>n.\n        ((\\<forall>l\\<le>r n. u l \\<le> u (r n)) \\<and>\n         2 * real n \\<le> u (r n)) \\<and>\n        r n + 1 \\<le> r (Suc n)", "obtain r::\"nat \\<Rightarrow> nat\" where r: \"\\<And>n l. l \\<le> r n \\<Longrightarrow> u l \\<le> u (r n)\"\n                                       \"\\<And>n. u (r n) \\<ge> 2 * n\" \"\\<And>n. r (Suc n) \\<ge> r n + 1\""], ["proof (prove)\nusing this:\n  \\<exists>r.\n     \\<forall>n.\n        ((\\<forall>l\\<le>r n. u l \\<le> u (r n)) \\<and>\n         2 * real n \\<le> u (r n)) \\<and>\n        r n + 1 \\<le> r (Suc n)\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>\\<And>n l. l \\<le> r n \\<Longrightarrow> u l \\<le> u (r n);\n         \\<And>n. real (2 * n) \\<le> u (r n);\n         \\<And>n. r n + 1 \\<le> r (Suc n)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ?l \\<le> r ?n \\<Longrightarrow> u ?l \\<le> u (r ?n)\n  real (2 * ?n) \\<le> u (r ?n)\n  r ?n + 1 \\<le> r (Suc ?n)\n\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> additive_strength f xi \\<le> 0", "then"], ["proof (chain)\npicking this:\n  ?l \\<le> r ?n \\<Longrightarrow> u ?l \\<le> u (r ?n)\n  real (2 * ?n) \\<le> u (r ?n)\n  r ?n + 1 \\<le> r (Suc ?n)", "have \"strict_mono r\""], ["proof (prove)\nusing this:\n  ?l \\<le> r ?n \\<Longrightarrow> u ?l \\<le> u (r ?n)\n  real (2 * ?n) \\<le> u (r ?n)\n  r ?n + 1 \\<le> r (Suc ?n)\n\ngoal (1 subgoal):\n 1. strict_mono r", "by (metis Suc_eq_plus1 Suc_le_lessD strict_monoI_Suc)"], ["proof (state)\nthis:\n  strict_mono r\n\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> additive_strength f xi \\<le> 0", "then"], ["proof (chain)\npicking this:\n  strict_mono r", "have \"r n \\<ge> n\" for n"], ["proof (prove)\nusing this:\n  strict_mono r\n\ngoal (1 subgoal):\n 1. n \\<le> r n", "by (simp add: seq_suble)"], ["proof (state)\nthis:\n  ?n \\<le> r ?n\n\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> additive_strength f xi \\<le> 0", "have A: \"dist ((f^^(r p)) basepoint) ((f^^(r n)) basepoint) \\<le> dist basepoint ((f^^(r n)) basepoint)\" if \"n \\<ge> p\" for n p"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist ((f ^^ r p) basepoint) ((f ^^ r n) basepoint)\n    \\<le> dist basepoint ((f ^^ r n) basepoint)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist ((f ^^ r p) basepoint) ((f ^^ r n) basepoint)\n    \\<le> dist basepoint ((f ^^ r n) basepoint)", "have \"r n \\<ge> r p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r p \\<le> r n", "using \\<open>n \\<ge> p\\<close> \\<open>strict_mono r\\<close>"], ["proof (prove)\nusing this:\n  p \\<le> n\n  strict_mono r\n\ngoal (1 subgoal):\n 1. r p \\<le> r n", "by (simp add: strict_mono_less_eq)"], ["proof (state)\nthis:\n  r p \\<le> r n\n\ngoal (1 subgoal):\n 1. dist ((f ^^ r p) basepoint) ((f ^^ r n) basepoint)\n    \\<le> dist basepoint ((f ^^ r n) basepoint)", "then"], ["proof (chain)\npicking this:\n  r p \\<le> r n", "have *: \"f^^((r n)) = (f^^(r p)) o (f^^(r n - r p))\""], ["proof (prove)\nusing this:\n  r p \\<le> r n\n\ngoal (1 subgoal):\n 1. f ^^ r n = f ^^ r p \\<circ> f ^^ (r n - r p)", "unfolding funpow_add[symmetric]"], ["proof (prove)\nusing this:\n  r p \\<le> r n\n\ngoal (1 subgoal):\n 1. f ^^ r n = f ^^ (r p + (r n - r p))", "by auto"], ["proof (state)\nthis:\n  f ^^ r n = f ^^ r p \\<circ> f ^^ (r n - r p)\n\ngoal (1 subgoal):\n 1. dist ((f ^^ r p) basepoint) ((f ^^ r n) basepoint)\n    \\<le> dist basepoint ((f ^^ r n) basepoint)", "have \"dist ((f^^(r p)) basepoint) ((f^^(r n)) basepoint) = dist ((f^^(r p)) basepoint) ((f^^(r p)) ((f^^(r n - r p)) basepoint))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist ((f ^^ r p) basepoint) ((f ^^ r n) basepoint) =\n    dist ((f ^^ r p) basepoint) ((f ^^ r p) ((f ^^ (r n - r p)) basepoint))", "unfolding * comp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist ((f ^^ r p) basepoint)\n     ((f ^^ r p) ((f ^^ (r n - r p)) basepoint)) =\n    dist ((f ^^ r p) basepoint) ((f ^^ r p) ((f ^^ (r n - r p)) basepoint))", "by auto"], ["proof (state)\nthis:\n  dist ((f ^^ r p) basepoint) ((f ^^ r n) basepoint) =\n  dist ((f ^^ r p) basepoint) ((f ^^ r p) ((f ^^ (r n - r p)) basepoint))\n\ngoal (1 subgoal):\n 1. dist ((f ^^ r p) basepoint) ((f ^^ r n) basepoint)\n    \\<le> dist basepoint ((f ^^ r n) basepoint)", "also"], ["proof (state)\nthis:\n  dist ((f ^^ r p) basepoint) ((f ^^ r n) basepoint) =\n  dist ((f ^^ r p) basepoint) ((f ^^ r p) ((f ^^ (r n - r p)) basepoint))\n\ngoal (1 subgoal):\n 1. dist ((f ^^ r p) basepoint) ((f ^^ r n) basepoint)\n    \\<le> dist basepoint ((f ^^ r n) basepoint)", "have \"... = dist basepoint ((f^^(r n - r p)) basepoint)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist ((f ^^ r p) basepoint)\n     ((f ^^ r p) ((f ^^ (r n - r p)) basepoint)) =\n    dist basepoint ((f ^^ (r n - r p)) basepoint)", "using isometry_iterates[OF assms(1), of \"r p\"] isometryD"], ["proof (prove)\nusing this:\n  isometry (f ^^ r p)\n  isometry ?f \\<Longrightarrow> isometry_on UNIV ?f\n  isometry ?f \\<Longrightarrow> dist (?f ?x) (?f ?y) = dist ?x ?y\n  isometry ?f \\<Longrightarrow> surj ?f\n  isometry ?f \\<Longrightarrow> 1-lipschitz_on UNIV ?f\n  isometry ?f \\<Longrightarrow> isUCont ?f\n  isometry ?f \\<Longrightarrow> continuous_on UNIV ?f\n\ngoal (1 subgoal):\n 1. dist ((f ^^ r p) basepoint)\n     ((f ^^ r p) ((f ^^ (r n - r p)) basepoint)) =\n    dist basepoint ((f ^^ (r n - r p)) basepoint)", "by auto"], ["proof (state)\nthis:\n  dist ((f ^^ r p) basepoint) ((f ^^ r p) ((f ^^ (r n - r p)) basepoint)) =\n  dist basepoint ((f ^^ (r n - r p)) basepoint)\n\ngoal (1 subgoal):\n 1. dist ((f ^^ r p) basepoint) ((f ^^ r n) basepoint)\n    \\<le> dist basepoint ((f ^^ r n) basepoint)", "also"], ["proof (state)\nthis:\n  dist ((f ^^ r p) basepoint) ((f ^^ r p) ((f ^^ (r n - r p)) basepoint)) =\n  dist basepoint ((f ^^ (r n - r p)) basepoint)\n\ngoal (1 subgoal):\n 1. dist ((f ^^ r p) basepoint) ((f ^^ r n) basepoint)\n    \\<le> dist basepoint ((f ^^ r n) basepoint)", "have \"... \\<le> dist basepoint ((f^^(r n)) basepoint)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist basepoint ((f ^^ (r n - r p)) basepoint)\n    \\<le> dist basepoint ((f ^^ r n) basepoint)", "using r(1)[of \"r n - r p\" n]"], ["proof (prove)\nusing this:\n  r n - r p \\<le> r n \\<Longrightarrow> u (r n - r p) \\<le> u (r n)\n\ngoal (1 subgoal):\n 1. dist basepoint ((f ^^ (r n - r p)) basepoint)\n    \\<le> dist basepoint ((f ^^ r n) basepoint)", "unfolding u_def"], ["proof (prove)\nusing this:\n  r n - r p \\<le> r n \\<Longrightarrow>\n  dist basepoint ((f ^^ (r n - r p)) basepoint)\n  \\<le> dist basepoint ((f ^^ r n) basepoint)\n\ngoal (1 subgoal):\n 1. dist basepoint ((f ^^ (r n - r p)) basepoint)\n    \\<le> dist basepoint ((f ^^ r n) basepoint)", "by auto"], ["proof (state)\nthis:\n  dist basepoint ((f ^^ (r n - r p)) basepoint)\n  \\<le> dist basepoint ((f ^^ r n) basepoint)\n\ngoal (1 subgoal):\n 1. dist ((f ^^ r p) basepoint) ((f ^^ r n) basepoint)\n    \\<le> dist basepoint ((f ^^ r n) basepoint)", "finally"], ["proof (chain)\npicking this:\n  dist ((f ^^ r p) basepoint) ((f ^^ r n) basepoint)\n  \\<le> dist basepoint ((f ^^ r n) basepoint)", "show ?thesis"], ["proof (prove)\nusing this:\n  dist ((f ^^ r p) basepoint) ((f ^^ r n) basepoint)\n  \\<le> dist basepoint ((f ^^ r n) basepoint)\n\ngoal (1 subgoal):\n 1. dist ((f ^^ r p) basepoint) ((f ^^ r n) basepoint)\n    \\<le> dist basepoint ((f ^^ r n) basepoint)", "by simp"], ["proof (state)\nthis:\n  dist ((f ^^ r p) basepoint) ((f ^^ r n) basepoint)\n  \\<le> dist basepoint ((f ^^ r n) basepoint)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?p \\<le> ?n \\<Longrightarrow>\n  dist ((f ^^ r ?p) basepoint) ((f ^^ r ?n) basepoint)\n  \\<le> dist basepoint ((f ^^ r ?n) basepoint)\n\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> additive_strength f xi \\<le> 0", "have *: \"Gromov_product_at basepoint ((f^^(r p)) basepoint) ((f^^(r n)) basepoint) \\<ge> p\" if \"n \\<ge> p\" for n p"], ["proof (prove)\ngoal (1 subgoal):\n 1. real p\n    \\<le> Gromov_product_at basepoint ((f ^^ r p) basepoint)\n           ((f ^^ r n) basepoint)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. real p\n    \\<le> Gromov_product_at basepoint ((f ^^ r p) basepoint)\n           ((f ^^ r n) basepoint)", "have \"2 * Gromov_product_at basepoint ((f^^(r p)) basepoint) ((f^^(r n)) basepoint)\n            = dist basepoint ((f^^(r p)) basepoint) + dist basepoint ((f^^(r n)) basepoint)\n              - dist ((f^^(r p)) basepoint) ((f^^(r n)) basepoint)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 *\n    Gromov_product_at basepoint ((f ^^ r p) basepoint)\n     ((f ^^ r n) basepoint) =\n    dist basepoint ((f ^^ r p) basepoint) +\n    dist basepoint ((f ^^ r n) basepoint) -\n    dist ((f ^^ r p) basepoint) ((f ^^ r n) basepoint)", "unfolding Gromov_product_at_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 *\n    ((dist basepoint ((f ^^ r p) basepoint) +\n      dist basepoint ((f ^^ r n) basepoint) -\n      dist ((f ^^ r p) basepoint) ((f ^^ r n) basepoint)) /\n     2) =\n    dist basepoint ((f ^^ r p) basepoint) +\n    dist basepoint ((f ^^ r n) basepoint) -\n    dist ((f ^^ r p) basepoint) ((f ^^ r n) basepoint)", "by auto"], ["proof (state)\nthis:\n  2 *\n  Gromov_product_at basepoint ((f ^^ r p) basepoint)\n   ((f ^^ r n) basepoint) =\n  dist basepoint ((f ^^ r p) basepoint) +\n  dist basepoint ((f ^^ r n) basepoint) -\n  dist ((f ^^ r p) basepoint) ((f ^^ r n) basepoint)\n\ngoal (1 subgoal):\n 1. real p\n    \\<le> Gromov_product_at basepoint ((f ^^ r p) basepoint)\n           ((f ^^ r n) basepoint)", "also"], ["proof (state)\nthis:\n  2 *\n  Gromov_product_at basepoint ((f ^^ r p) basepoint)\n   ((f ^^ r n) basepoint) =\n  dist basepoint ((f ^^ r p) basepoint) +\n  dist basepoint ((f ^^ r n) basepoint) -\n  dist ((f ^^ r p) basepoint) ((f ^^ r n) basepoint)\n\ngoal (1 subgoal):\n 1. real p\n    \\<le> Gromov_product_at basepoint ((f ^^ r p) basepoint)\n           ((f ^^ r n) basepoint)", "have \"... \\<ge> dist basepoint ((f^^(r p)) basepoint)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist basepoint ((f ^^ r p) basepoint)\n    \\<le> dist basepoint ((f ^^ r p) basepoint) +\n          dist basepoint ((f ^^ r n) basepoint) -\n          dist ((f ^^ r p) basepoint) ((f ^^ r n) basepoint)", "using A[OF that]"], ["proof (prove)\nusing this:\n  dist ((f ^^ r p) basepoint) ((f ^^ r n) basepoint)\n  \\<le> dist basepoint ((f ^^ r n) basepoint)\n\ngoal (1 subgoal):\n 1. dist basepoint ((f ^^ r p) basepoint)\n    \\<le> dist basepoint ((f ^^ r p) basepoint) +\n          dist basepoint ((f ^^ r n) basepoint) -\n          dist ((f ^^ r p) basepoint) ((f ^^ r n) basepoint)", "by auto"], ["proof (state)\nthis:\n  dist basepoint ((f ^^ r p) basepoint)\n  \\<le> dist basepoint ((f ^^ r p) basepoint) +\n        dist basepoint ((f ^^ r n) basepoint) -\n        dist ((f ^^ r p) basepoint) ((f ^^ r n) basepoint)\n\ngoal (1 subgoal):\n 1. real p\n    \\<le> Gromov_product_at basepoint ((f ^^ r p) basepoint)\n           ((f ^^ r n) basepoint)", "finally"], ["proof (chain)\npicking this:\n  dist basepoint ((f ^^ r p) basepoint)\n  \\<le> 2 *\n        Gromov_product_at basepoint ((f ^^ r p) basepoint)\n         ((f ^^ r n) basepoint)", "show \"Gromov_product_at basepoint ((f^^(r p)) basepoint) ((f^^(r n)) basepoint) \\<ge> p\""], ["proof (prove)\nusing this:\n  dist basepoint ((f ^^ r p) basepoint)\n  \\<le> 2 *\n        Gromov_product_at basepoint ((f ^^ r p) basepoint)\n         ((f ^^ r n) basepoint)\n\ngoal (1 subgoal):\n 1. real p\n    \\<le> Gromov_product_at basepoint ((f ^^ r p) basepoint)\n           ((f ^^ r n) basepoint)", "using r(2)[of p]"], ["proof (prove)\nusing this:\n  dist basepoint ((f ^^ r p) basepoint)\n  \\<le> 2 *\n        Gromov_product_at basepoint ((f ^^ r p) basepoint)\n         ((f ^^ r n) basepoint)\n  real (2 * p) \\<le> u (r p)\n\ngoal (1 subgoal):\n 1. real p\n    \\<le> Gromov_product_at basepoint ((f ^^ r p) basepoint)\n           ((f ^^ r n) basepoint)", "unfolding u_def"], ["proof (prove)\nusing this:\n  dist basepoint ((f ^^ r p) basepoint)\n  \\<le> 2 *\n        Gromov_product_at basepoint ((f ^^ r p) basepoint)\n         ((f ^^ r n) basepoint)\n  real (2 * p) \\<le> dist basepoint ((f ^^ r p) basepoint)\n\ngoal (1 subgoal):\n 1. real p\n    \\<le> Gromov_product_at basepoint ((f ^^ r p) basepoint)\n           ((f ^^ r n) basepoint)", "by auto"], ["proof (state)\nthis:\n  real p\n  \\<le> Gromov_product_at basepoint ((f ^^ r p) basepoint)\n         ((f ^^ r n) basepoint)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?p \\<le> ?n \\<Longrightarrow>\n  real ?p\n  \\<le> Gromov_product_at basepoint ((f ^^ r ?p) basepoint)\n         ((f ^^ r ?n) basepoint)\n\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> additive_strength f xi \\<le> 0", "have *: \"Gromov_product_at basepoint ((f^^(r p)) basepoint) ((f^^(r n)) basepoint) \\<ge> N\" if \"n \\<ge> N\" \"p \\<ge> N\" for n p N"], ["proof (prove)\ngoal (1 subgoal):\n 1. real N\n    \\<le> Gromov_product_at basepoint ((f ^^ r p) basepoint)\n           ((f ^^ r n) basepoint)", "using *[of n p] *[of p n] that"], ["proof (prove)\nusing this:\n  n \\<le> p \\<Longrightarrow>\n  real n\n  \\<le> Gromov_product_at basepoint ((f ^^ r n) basepoint)\n         ((f ^^ r p) basepoint)\n  p \\<le> n \\<Longrightarrow>\n  real p\n  \\<le> Gromov_product_at basepoint ((f ^^ r p) basepoint)\n         ((f ^^ r n) basepoint)\n  N \\<le> n\n  N \\<le> p\n\ngoal (1 subgoal):\n 1. real N\n    \\<le> Gromov_product_at basepoint ((f ^^ r p) basepoint)\n           ((f ^^ r n) basepoint)", "by (auto simp add: Gromov_product_commute intro: le_cases[of n p])"], ["proof (state)\nthis:\n  \\<lbrakk>?N \\<le> ?n; ?N \\<le> ?p\\<rbrakk>\n  \\<Longrightarrow> real ?N\n                    \\<le> Gromov_product_at basepoint\n                           ((f ^^ r ?p) basepoint) ((f ^^ r ?n) basepoint)\n\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> additive_strength f xi \\<le> 0", "have \"Gromov_converging_at_boundary (\\<lambda>n. (f^^(r n)) basepoint)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Gromov_converging_at_boundary (\\<lambda>n. (f ^^ r n) basepoint)", "apply (rule Gromov_converging_at_boundaryI[of basepoint])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M.\n       \\<exists>N.\n          \\<forall>n\\<ge>N.\n             \\<forall>m\\<ge>N.\n                M \\<le> Gromov_product_at basepoint ((f ^^ r m) basepoint)\n                         ((f ^^ r n) basepoint)", "using *"], ["proof (prove)\nusing this:\n  \\<lbrakk>?N \\<le> ?n; ?N \\<le> ?p\\<rbrakk>\n  \\<Longrightarrow> real ?N\n                    \\<le> Gromov_product_at basepoint\n                           ((f ^^ r ?p) basepoint) ((f ^^ r ?n) basepoint)\n\ngoal (1 subgoal):\n 1. \\<And>M.\n       \\<exists>N.\n          \\<forall>n\\<ge>N.\n             \\<forall>m\\<ge>N.\n                M \\<le> Gromov_product_at basepoint ((f ^^ r m) basepoint)\n                         ((f ^^ r n) basepoint)", "by (meson dual_order.trans real_arch_simple)"], ["proof (state)\nthis:\n  Gromov_converging_at_boundary (\\<lambda>n. (f ^^ r n) basepoint)\n\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> additive_strength f xi \\<le> 0", "with Gromov_converging_at_boundary_converges[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>x\\<in>Gromov_boundary.\n     (\\<lambda>n. to_Gromov_completion ((f ^^ r n) basepoint))\n     \\<longlonglongrightarrow> x\n  Gromov_converging_at_boundary (\\<lambda>n. (f ^^ r n) basepoint)", "obtain xi where xi: \"(\\<lambda>n. to_Gromov_completion ((f^^(r n)) basepoint)) \\<longlonglongrightarrow> xi\" \"xi \\<in> Gromov_boundary\""], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>Gromov_boundary.\n     (\\<lambda>n. to_Gromov_completion ((f ^^ r n) basepoint))\n     \\<longlonglongrightarrow> x\n  Gromov_converging_at_boundary (\\<lambda>n. (f ^^ r n) basepoint)\n\ngoal (1 subgoal):\n 1. (\\<And>xi.\n        \\<lbrakk>(\\<lambda>n. to_Gromov_completion ((f ^^ r n) basepoint))\n                 \\<longlonglongrightarrow> xi;\n         xi \\<in> Gromov_boundary\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n. to_Gromov_completion ((f ^^ r n) basepoint))\n  \\<longlonglongrightarrow> xi\n  xi \\<in> Gromov_boundary\n\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> additive_strength f xi \\<le> 0", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n. to_Gromov_completion ((f ^^ r n) basepoint))\n  \\<longlonglongrightarrow> xi\n  xi \\<in> Gromov_boundary", "have *: \"(\\<lambda>n. Gromov_extension f (to_Gromov_completion ((f^^(r n)) basepoint))) \\<longlonglongrightarrow> xi\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. to_Gromov_completion ((f ^^ r n) basepoint))\n  \\<longlonglongrightarrow> xi\n  xi \\<in> Gromov_boundary\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        Gromov_extension f (to_Gromov_completion ((f ^^ r n) basepoint)))\n    \\<longlonglongrightarrow> xi", "apply (simp, rule Gromov_converging_at_boundary_bounded_perturbation[of _ _ _ \"dist basepoint (f basepoint)\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>(\\<lambda>n. to_Gromov_completion ((f ^^ r n) basepoint))\n                \\<longlonglongrightarrow> xi;\n        xi \\<in> Gromov_boundary\\<rbrakk>\n       \\<Longrightarrow> dist ((f ^^ r n) basepoint)\n                          (f ((f ^^ r n) basepoint))\n                         \\<le> dist basepoint (f basepoint)", "by (simp add: assms(1) funpow_swap1 isometryD(2) isometry_iterates)"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      Gromov_extension f (to_Gromov_completion ((f ^^ r n) basepoint)))\n  \\<longlonglongrightarrow> xi\n\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> additive_strength f xi \\<le> 0", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      Gromov_extension f (to_Gromov_completion ((f ^^ r n) basepoint)))\n  \\<longlonglongrightarrow> xi\n\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> additive_strength f xi \\<le> 0", "have \"(\\<lambda>n. Gromov_extension f (to_Gromov_completion ((f^^(r n)) basepoint))) \\<longlonglongrightarrow> Gromov_extension f xi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        Gromov_extension f (to_Gromov_completion ((f ^^ r n) basepoint)))\n    \\<longlonglongrightarrow> Gromov_extension f xi", "using continuous_on_tendsto_compose[OF Gromov_extension_isometry(2)[OF assms(1)] xi(1)]"], ["proof (prove)\nusing this:\n  \\<lbrakk>xi \\<in> UNIV;\n   \\<forall>\\<^sub>F x in sequentially.\n      to_Gromov_completion ((f ^^ r x) basepoint) \\<in> UNIV\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>x.\n                        Gromov_extension f\n                         (to_Gromov_completion ((f ^^ r x) basepoint)))\n                    \\<longlonglongrightarrow> Gromov_extension f xi\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        Gromov_extension f (to_Gromov_completion ((f ^^ r n) basepoint)))\n    \\<longlonglongrightarrow> Gromov_extension f xi", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      Gromov_extension f (to_Gromov_completion ((f ^^ r n) basepoint)))\n  \\<longlonglongrightarrow> Gromov_extension f xi\n\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> additive_strength f xi \\<le> 0", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>n.\n      Gromov_extension f (to_Gromov_completion ((f ^^ r n) basepoint)))\n  \\<longlonglongrightarrow> xi\n  (\\<lambda>n.\n      Gromov_extension f (to_Gromov_completion ((f ^^ r n) basepoint)))\n  \\<longlonglongrightarrow> Gromov_extension f xi", "have fxi: \"Gromov_extension f xi = xi\""], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      Gromov_extension f (to_Gromov_completion ((f ^^ r n) basepoint)))\n  \\<longlonglongrightarrow> xi\n  (\\<lambda>n.\n      Gromov_extension f (to_Gromov_completion ((f ^^ r n) basepoint)))\n  \\<longlonglongrightarrow> Gromov_extension f xi\n\ngoal (1 subgoal):\n 1. Gromov_extension f xi = xi", "using LIMSEQ_unique"], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      Gromov_extension f (to_Gromov_completion ((f ^^ r n) basepoint)))\n  \\<longlonglongrightarrow> xi\n  (\\<lambda>n.\n      Gromov_extension f (to_Gromov_completion ((f ^^ r n) basepoint)))\n  \\<longlonglongrightarrow> Gromov_extension f xi\n  \\<lbrakk>?X \\<longlonglongrightarrow> ?a;\n   ?X \\<longlonglongrightarrow> ?b\\<rbrakk>\n  \\<Longrightarrow> ?a = ?b\n\ngoal (1 subgoal):\n 1. Gromov_extension f xi = xi", "by auto"], ["proof (state)\nthis:\n  Gromov_extension f xi = xi\n\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> additive_strength f xi \\<le> 0", "have \"Busemann_function_at (to_Gromov_completion ((f^^(r n)) basepoint)) ((f^^(r p)) basepoint) basepoint \\<le> 0\" if \"n \\<ge> p\" for n p"], ["proof (prove)\ngoal (1 subgoal):\n 1. Busemann_function_at (to_Gromov_completion ((f ^^ r n) basepoint))\n     ((f ^^ r p) basepoint) basepoint\n    \\<le> 0", "unfolding Busemann_function_inner"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist ((f ^^ r p) basepoint) ((f ^^ r n) basepoint) -\n    dist basepoint ((f ^^ r n) basepoint)\n    \\<le> 0", "using A[OF that]"], ["proof (prove)\nusing this:\n  dist ((f ^^ r p) basepoint) ((f ^^ r n) basepoint)\n  \\<le> dist basepoint ((f ^^ r n) basepoint)\n\ngoal (1 subgoal):\n 1. dist ((f ^^ r p) basepoint) ((f ^^ r n) basepoint) -\n    dist basepoint ((f ^^ r n) basepoint)\n    \\<le> 0", "by auto"], ["proof (state)\nthis:\n  ?p \\<le> ?n \\<Longrightarrow>\n  Busemann_function_at (to_Gromov_completion ((f ^^ r ?n) basepoint))\n   ((f ^^ r ?p) basepoint) basepoint\n  \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> additive_strength f xi \\<le> 0", "then"], ["proof (chain)\npicking this:\n  ?p \\<le> ?n \\<Longrightarrow>\n  Busemann_function_at (to_Gromov_completion ((f ^^ r ?n) basepoint))\n   ((f ^^ r ?p) basepoint) basepoint\n  \\<le> 0", "have A: \"eventually (\\<lambda>n. Busemann_function_at (to_Gromov_completion ((f^^(r n)) basepoint)) ((f^^(r p)) basepoint) basepoint \\<le> 0) sequentially\" for p"], ["proof (prove)\nusing this:\n  ?p \\<le> ?n \\<Longrightarrow>\n  Busemann_function_at (to_Gromov_completion ((f ^^ r ?n) basepoint))\n   ((f ^^ r ?p) basepoint) basepoint\n  \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       Busemann_function_at (to_Gromov_completion ((f ^^ r n) basepoint))\n        ((f ^^ r p) basepoint) basepoint\n       \\<le> 0", "unfolding eventually_sequentially"], ["proof (prove)\nusing this:\n  ?p \\<le> ?n \\<Longrightarrow>\n  Busemann_function_at (to_Gromov_completion ((f ^^ r ?n) basepoint))\n   ((f ^^ r ?p) basepoint) basepoint\n  \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          Busemann_function_at (to_Gromov_completion ((f ^^ r n) basepoint))\n           ((f ^^ r p) basepoint) basepoint\n          \\<le> 0", "by auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     Busemann_function_at (to_Gromov_completion ((f ^^ r n) basepoint))\n      ((f ^^ r ?p) basepoint) basepoint\n     \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> additive_strength f xi \\<le> 0", "have B: \"eventually (\\<lambda>n. Busemann_function_at (to_Gromov_completion ((f^^(r n)) basepoint)) ((f^^(r p)) basepoint) basepoint \\<ge> Busemann_function_at xi ((f^^(r p)) basepoint) basepoint - 2 * deltaG(TYPE('a)) - 1) sequentially\" for p"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       Busemann_function_at xi ((f ^^ r p) basepoint) basepoint -\n       2 * deltaG TYPE('a) -\n       1\n       \\<le> Busemann_function_at\n              (to_Gromov_completion ((f ^^ r n) basepoint))\n              ((f ^^ r p) basepoint) basepoint", "by (rule eventually_mono[OF Busemann_function_inside_approx[OF _ xi(1), of 1 \"((f^^(r p)) basepoint)\" basepoint, simplified]], simp)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     Busemann_function_at xi ((f ^^ r ?p) basepoint) basepoint -\n     2 * deltaG TYPE('a) -\n     1\n     \\<le> Busemann_function_at\n            (to_Gromov_completion ((f ^^ r n) basepoint))\n            ((f ^^ r ?p) basepoint) basepoint\n\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> additive_strength f xi \\<le> 0", "have \"eventually (\\<lambda>n. Busemann_function_at xi ((f^^(r p)) basepoint) basepoint - 2 * deltaG(TYPE('a)) - 1 \\<le> 0) sequentially\" for p"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       Busemann_function_at xi ((f ^^ r p) basepoint) basepoint -\n       2 * deltaG TYPE('a) -\n       1\n       \\<le> 0", "by (rule eventually_mono[OF eventually_conj[OF A[of p] B[of p]]], simp)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     Busemann_function_at xi ((f ^^ r ?p) basepoint) basepoint -\n     2 * deltaG TYPE('a) -\n     1\n     \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> additive_strength f xi \\<le> 0", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F n in sequentially.\n     Busemann_function_at xi ((f ^^ r ?p) basepoint) basepoint -\n     2 * deltaG TYPE('a) -\n     1\n     \\<le> 0", "have *: \"Busemann_function_at xi ((f^^(r p)) basepoint) basepoint - 2 * deltaG(TYPE('a)) - 1 \\<le> 0\" for p"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially.\n     Busemann_function_at xi ((f ^^ r ?p) basepoint) basepoint -\n     2 * deltaG TYPE('a) -\n     1\n     \\<le> 0\n\ngoal (1 subgoal):\n 1. Busemann_function_at xi ((f ^^ r p) basepoint) basepoint -\n    2 * deltaG TYPE('a) -\n    1\n    \\<le> 0", "by auto"], ["proof (state)\nthis:\n  Busemann_function_at xi ((f ^^ r ?p) basepoint) basepoint -\n  2 * deltaG TYPE('a) -\n  1\n  \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> additive_strength f xi \\<le> 0", "then"], ["proof (chain)\npicking this:\n  Busemann_function_at xi ((f ^^ r ?p) basepoint) basepoint -\n  2 * deltaG TYPE('a) -\n  1\n  \\<le> 0", "have A: \"Busemann_function_at xi ((f^^(r p)) basepoint) basepoint / (r p) - (2 * deltaG(TYPE('a)) + 1) * (1/r p) \\<le> 0\" if \"p \\<ge> 1\" for p"], ["proof (prove)\nusing this:\n  Busemann_function_at xi ((f ^^ r ?p) basepoint) basepoint -\n  2 * deltaG TYPE('a) -\n  1\n  \\<le> 0\n\ngoal (1 subgoal):\n 1. Busemann_function_at xi ((f ^^ r p) basepoint) basepoint / real (r p) -\n    (2 * deltaG TYPE('a) + 1) * (1 / real (r p))\n    \\<le> 0", "using order_trans[OF that \\<open>p \\<le> r p\\<close>]"], ["proof (prove)\nusing this:\n  Busemann_function_at xi ((f ^^ r ?p) basepoint) basepoint -\n  2 * deltaG TYPE('a) -\n  1\n  \\<le> 0\n  1 \\<le> r p\n\ngoal (1 subgoal):\n 1. Busemann_function_at xi ((f ^^ r p) basepoint) basepoint / real (r p) -\n    (2 * deltaG TYPE('a) + 1) * (1 / real (r p))\n    \\<le> 0", "by (auto simp add: algebra_simps divide_simps)"], ["proof (state)\nthis:\n  1 \\<le> ?p \\<Longrightarrow>\n  Busemann_function_at xi ((f ^^ r ?p) basepoint) basepoint / real (r ?p) -\n  (2 * deltaG TYPE('a) + 1) * (1 / real (r ?p))\n  \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> additive_strength f xi \\<le> 0", "have B: \"(\\<lambda>p. Busemann_function_at xi ((f^^(p)) basepoint) basepoint / p - (2 * deltaG(TYPE('a)) + 1) * (1/p)) \\<longlonglongrightarrow> additive_strength f xi - (2 * deltaG(TYPE('a)) + 1) * 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>p.\n        Busemann_function_at xi ((f ^^ p) basepoint) basepoint / real p -\n        (2 * deltaG TYPE('a) + 1) * (1 / real p))\n    \\<longlonglongrightarrow> additive_strength f xi -\n                              (2 * deltaG TYPE('a) + 1) * 0", "by (intro tendsto_intros assms fxi)"], ["proof (state)\nthis:\n  (\\<lambda>p.\n      Busemann_function_at xi ((f ^^ p) basepoint) basepoint / real p -\n      (2 * deltaG TYPE('a) + 1) * (1 / real p))\n  \\<longlonglongrightarrow> additive_strength f xi -\n                            (2 * deltaG TYPE('a) + 1) * 0\n\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> additive_strength f xi \\<le> 0", "have \"additive_strength f xi - (2 * deltaG TYPE('a) + 1) * 0 \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. additive_strength f xi - (2 * deltaG TYPE('a) + 1) * 0 \\<le> 0", "apply (rule LIMSEQ_le_const2[OF LIMSEQ_subseq_LIMSEQ[OF B \\<open>strict_mono r\\<close>]])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          ((\\<lambda>p.\n               Busemann_function_at xi ((f ^^ p) basepoint) basepoint /\n               real p -\n               (2 * deltaG TYPE('a) + 1) * (1 / real p)) \\<circ>\n           r)\n           n\n          \\<le> 0", "using A"], ["proof (prove)\nusing this:\n  1 \\<le> ?p \\<Longrightarrow>\n  Busemann_function_at xi ((f ^^ r ?p) basepoint) basepoint / real (r ?p) -\n  (2 * deltaG TYPE('a) + 1) * (1 / real (r ?p))\n  \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          ((\\<lambda>p.\n               Busemann_function_at xi ((f ^^ p) basepoint) basepoint /\n               real p -\n               (2 * deltaG TYPE('a) + 1) * (1 / real p)) \\<circ>\n           r)\n           n\n          \\<le> 0", "unfolding comp_def"], ["proof (prove)\nusing this:\n  1 \\<le> ?p \\<Longrightarrow>\n  Busemann_function_at xi ((f ^^ r ?p) basepoint) basepoint / real (r ?p) -\n  (2 * deltaG TYPE('a) + 1) * (1 / real (r ?p))\n  \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          Busemann_function_at xi ((f ^^ r n) basepoint) basepoint /\n          real (r n) -\n          (2 * deltaG TYPE('a) + 1) * (1 / real (r n))\n          \\<le> 0", "by auto"], ["proof (state)\nthis:\n  additive_strength f xi - (2 * deltaG TYPE('a) + 1) * 0 \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> additive_strength f xi \\<le> 0", "then"], ["proof (chain)\npicking this:\n  additive_strength f xi - (2 * deltaG TYPE('a) + 1) * 0 \\<le> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  additive_strength f xi - (2 * deltaG TYPE('a) + 1) * 0 \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> additive_strength f xi \\<le> 0", "using xi fxi"], ["proof (prove)\nusing this:\n  additive_strength f xi - (2 * deltaG TYPE('a) + 1) * 0 \\<le> 0\n  (\\<lambda>n. to_Gromov_completion ((f ^^ r n) basepoint))\n  \\<longlonglongrightarrow> xi\n  xi \\<in> Gromov_boundary\n  Gromov_extension f xi = xi\n\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> additive_strength f xi \\<le> 0", "by auto"], ["proof (state)\nthis:\n  \\<exists>xi\\<in>Gromov_boundary.\n     Gromov_extension f xi = xi \\<and> additive_strength f xi \\<le> 0\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Applying the previous result to the inverse map, we deduce that there is also a fixed point\nwith nonnegative strength.\\<close>"], ["", "lemma isometry_not_elliptic_has_repelling_fixed_point:\n  assumes \"isometry f\"\n          \"\\<not>(elliptic_isometry f)\"\n  shows \"\\<exists>xi \\<in> Gromov_boundary. Gromov_extension f xi = xi \\<and> additive_strength f xi \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> 0 \\<le> additive_strength f xi", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> 0 \\<le> additive_strength f xi", "have *: \"\\<not>elliptic_isometry (inv f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> elliptic_isometry (inv f)", "using elliptic_isometry_inv_iff isometry_inverse(2)[OF assms(1)] assms(2)"], ["proof (prove)\nusing this:\n  bij ?f \\<Longrightarrow> elliptic_isometry (inv ?f) = elliptic_isometry ?f\n  bij f\n  \\<not> elliptic_isometry f\n\ngoal (1 subgoal):\n 1. \\<not> elliptic_isometry (inv f)", "by auto"], ["proof (state)\nthis:\n  \\<not> elliptic_isometry (inv f)\n\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> 0 \\<le> additive_strength f xi", "obtain xi where xi: \"xi \\<in> Gromov_boundary\" \"Gromov_extension (inv f) xi = xi\" \"additive_strength (inv f) xi \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>xi.\n        \\<lbrakk>xi \\<in> Gromov_boundary; Gromov_extension (inv f) xi = xi;\n         additive_strength (inv f) xi \\<le> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using isometry_not_elliptic_has_attracting_fixed_point[OF isometry_inverse(1)[OF assms(1)] *]"], ["proof (prove)\nusing this:\n  \\<exists>xi\\<in>Gromov_boundary.\n     Gromov_extension (inv f) xi = xi \\<and>\n     additive_strength (inv f) xi \\<le> 0\n\ngoal (1 subgoal):\n 1. (\\<And>xi.\n        \\<lbrakk>xi \\<in> Gromov_boundary; Gromov_extension (inv f) xi = xi;\n         additive_strength (inv f) xi \\<le> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  xi \\<in> Gromov_boundary\n  Gromov_extension (inv f) xi = xi\n  additive_strength (inv f) xi \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> 0 \\<le> additive_strength f xi", "have *: \"Gromov_extension f xi = xi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Gromov_extension f xi = xi", "using Gromov_extension_inv_fixed_point[OF isometry_inverse(1)[OF assms(1)] xi(2)] inv_inv_eq[OF isometry_inverse(2)[OF assms(1)]]"], ["proof (prove)\nusing this:\n  Gromov_extension (inv (inv f)) xi = xi\n  inv (inv f) = f\n\ngoal (1 subgoal):\n 1. Gromov_extension f xi = xi", "by auto"], ["proof (state)\nthis:\n  Gromov_extension f xi = xi\n\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> 0 \\<le> additive_strength f xi", "moreover"], ["proof (state)\nthis:\n  Gromov_extension f xi = xi\n\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> 0 \\<le> additive_strength f xi", "have \"additive_strength f xi \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> additive_strength f xi", "using additive_strength_inv[OF assms(1) *] xi(3)"], ["proof (prove)\nusing this:\n  additive_strength (inv f) xi = - additive_strength f xi\n  additive_strength (inv f) xi \\<le> 0\n\ngoal (1 subgoal):\n 1. 0 \\<le> additive_strength f xi", "by auto"], ["proof (state)\nthis:\n  0 \\<le> additive_strength f xi\n\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> 0 \\<le> additive_strength f xi", "ultimately"], ["proof (chain)\npicking this:\n  Gromov_extension f xi = xi\n  0 \\<le> additive_strength f xi", "show ?thesis"], ["proof (prove)\nusing this:\n  Gromov_extension f xi = xi\n  0 \\<le> additive_strength f xi\n\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> 0 \\<le> additive_strength f xi", "using xi(1)"], ["proof (prove)\nusing this:\n  Gromov_extension f xi = xi\n  0 \\<le> additive_strength f xi\n  xi \\<in> Gromov_boundary\n\ngoal (1 subgoal):\n 1. \\<exists>xi\\<in>Gromov_boundary.\n       Gromov_extension f xi = xi \\<and> 0 \\<le> additive_strength f xi", "by auto"], ["proof (state)\nthis:\n  \\<exists>xi\\<in>Gromov_boundary.\n     Gromov_extension f xi = xi \\<and> 0 \\<le> additive_strength f xi\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Parabolic isometries\\<close>"], ["", "text \\<open>We show that a parabolic isometry has (at least) one neutral fixed point at infinity.\\<close>"], ["", "lemma parabolic_fixed_point:\n  assumes \"parabolic_isometry f\"\n  shows \"neutral_fixed_point f \\<in> Gromov_boundary\"\n        \"Gromov_extension f (neutral_fixed_point f) = neutral_fixed_point f\"\n        \"additive_strength f (neutral_fixed_point f) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. neutral_fixed_point f \\<in> Gromov_boundary &&&\n    Gromov_extension f (neutral_fixed_point f) = neutral_fixed_point f &&&\n    additive_strength f (neutral_fixed_point f) = 0", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. neutral_fixed_point f \\<in> Gromov_boundary\n 2. Gromov_extension f (neutral_fixed_point f) = neutral_fixed_point f\n 3. additive_strength f (neutral_fixed_point f) = 0", "obtain xi where xi: \"xi \\<in> Gromov_boundary\" \"Gromov_extension f xi = xi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>xi.\n        \\<lbrakk>xi \\<in> Gromov_boundary;\n         Gromov_extension f xi = xi\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using isometry_not_elliptic_has_attracting_fixed_point parabolic_isometryD[OF assms]"], ["proof (prove)\nusing this:\n  \\<lbrakk>isometry ?f; \\<not> elliptic_isometry ?f\\<rbrakk>\n  \\<Longrightarrow> \\<exists>xi\\<in>Gromov_boundary.\n                       Gromov_extension ?f xi = xi \\<and>\n                       additive_strength ?f xi \\<le> 0\n  isometry f\n  \\<not> bounded {(f ^^ n) ?x |n. True}\n  stable_translation_length f = 0\n  \\<not> elliptic_isometry f\n\ngoal (1 subgoal):\n 1. (\\<And>xi.\n        \\<lbrakk>xi \\<in> Gromov_boundary;\n         Gromov_extension f xi = xi\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  xi \\<in> Gromov_boundary\n  Gromov_extension f xi = xi\n\ngoal (3 subgoals):\n 1. neutral_fixed_point f \\<in> Gromov_boundary\n 2. Gromov_extension f (neutral_fixed_point f) = neutral_fixed_point f\n 3. additive_strength f (neutral_fixed_point f) = 0", "moreover"], ["proof (state)\nthis:\n  xi \\<in> Gromov_boundary\n  Gromov_extension f xi = xi\n\ngoal (3 subgoals):\n 1. neutral_fixed_point f \\<in> Gromov_boundary\n 2. Gromov_extension f (neutral_fixed_point f) = neutral_fixed_point f\n 3. additive_strength f (neutral_fixed_point f) = 0", "have \"additive_strength f xi = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. additive_strength f xi = 0", "using stable_translation_length_eq_additive_strength[OF parabolic_isometryD(1)[OF assms] xi(2)]\n    parabolic_isometryD(3)[OF assms]"], ["proof (prove)\nusing this:\n  stable_translation_length f = \\<bar>additive_strength f xi\\<bar>\n  stable_translation_length f = 0\n\ngoal (1 subgoal):\n 1. additive_strength f xi = 0", "by auto"], ["proof (state)\nthis:\n  additive_strength f xi = 0\n\ngoal (3 subgoals):\n 1. neutral_fixed_point f \\<in> Gromov_boundary\n 2. Gromov_extension f (neutral_fixed_point f) = neutral_fixed_point f\n 3. additive_strength f (neutral_fixed_point f) = 0", "ultimately"], ["proof (chain)\npicking this:\n  xi \\<in> Gromov_boundary\n  Gromov_extension f xi = xi\n  additive_strength f xi = 0", "have A: \"\\<exists>xi. xi \\<in> Gromov_boundary \\<and> Gromov_extension f xi = xi \\<and> additive_strength f xi = 0\""], ["proof (prove)\nusing this:\n  xi \\<in> Gromov_boundary\n  Gromov_extension f xi = xi\n  additive_strength f xi = 0\n\ngoal (1 subgoal):\n 1. \\<exists>xi.\n       xi \\<in> Gromov_boundary \\<and>\n       Gromov_extension f xi = xi \\<and> additive_strength f xi = 0", "by auto"], ["proof (state)\nthis:\n  \\<exists>xi.\n     xi \\<in> Gromov_boundary \\<and>\n     Gromov_extension f xi = xi \\<and> additive_strength f xi = 0\n\ngoal (3 subgoals):\n 1. neutral_fixed_point f \\<in> Gromov_boundary\n 2. Gromov_extension f (neutral_fixed_point f) = neutral_fixed_point f\n 3. additive_strength f (neutral_fixed_point f) = 0", "show \"neutral_fixed_point f \\<in> Gromov_boundary\"\n        \"Gromov_extension f (neutral_fixed_point f) = neutral_fixed_point f\"\n        \"additive_strength f (neutral_fixed_point f) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. neutral_fixed_point f \\<in> Gromov_boundary &&&\n    Gromov_extension f (neutral_fixed_point f) = neutral_fixed_point f &&&\n    additive_strength f (neutral_fixed_point f) = 0", "unfolding neutral_fixed_point_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (SOME xi.\n        xi \\<in> Gromov_boundary \\<and>\n        Gromov_extension f xi = xi \\<and> additive_strength f xi = 0)\n    \\<in> Gromov_boundary &&&\n    Gromov_extension f\n     (SOME xi.\n         xi \\<in> Gromov_boundary \\<and>\n         Gromov_extension f xi = xi \\<and> additive_strength f xi = 0) =\n    (SOME xi.\n        xi \\<in> Gromov_boundary \\<and>\n        Gromov_extension f xi = xi \\<and> additive_strength f xi = 0) &&&\n    additive_strength f\n     (SOME xi.\n         xi \\<in> Gromov_boundary \\<and>\n         Gromov_extension f xi = xi \\<and> additive_strength f xi = 0) =\n    0", "using someI_ex[OF A]"], ["proof (prove)\nusing this:\n  (SOME x.\n      x \\<in> Gromov_boundary \\<and>\n      Gromov_extension f x = x \\<and> additive_strength f x = 0)\n  \\<in> Gromov_boundary \\<and>\n  Gromov_extension f\n   (SOME x.\n       x \\<in> Gromov_boundary \\<and>\n       Gromov_extension f x = x \\<and> additive_strength f x = 0) =\n  (SOME x.\n      x \\<in> Gromov_boundary \\<and>\n      Gromov_extension f x = x \\<and> additive_strength f x = 0) \\<and>\n  additive_strength f\n   (SOME x.\n       x \\<in> Gromov_boundary \\<and>\n       Gromov_extension f x = x \\<and> additive_strength f x = 0) =\n  0\n\ngoal (1 subgoal):\n 1. (SOME xi.\n        xi \\<in> Gromov_boundary \\<and>\n        Gromov_extension f xi = xi \\<and> additive_strength f xi = 0)\n    \\<in> Gromov_boundary &&&\n    Gromov_extension f\n     (SOME xi.\n         xi \\<in> Gromov_boundary \\<and>\n         Gromov_extension f xi = xi \\<and> additive_strength f xi = 0) =\n    (SOME xi.\n        xi \\<in> Gromov_boundary \\<and>\n        Gromov_extension f xi = xi \\<and> additive_strength f xi = 0) &&&\n    additive_strength f\n     (SOME xi.\n         xi \\<in> Gromov_boundary \\<and>\n         Gromov_extension f xi = xi \\<and> additive_strength f xi = 0) =\n    0", "by auto"], ["proof (state)\nthis:\n  neutral_fixed_point f \\<in> Gromov_boundary\n  Gromov_extension f (neutral_fixed_point f) = neutral_fixed_point f\n  additive_strength f (neutral_fixed_point f) = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Parabolic isometries have exactly one fixed point, the neutral fixed point at infinity. The\nproof goes as follows: if it has another fixed point, then the orbit of a basepoint would stay\non the horospheres centered at both fixed points. But the intersection of two horospheres based\nat different points is a a bounded set. Hence, the map has a bounded orbit, and is therefore\nelliptic.\\<close>"], ["", "theorem parabolic_unique_fixed_point:\n  assumes \"parabolic_isometry f\"\n  shows \"Gromov_extension f xi = xi \\<longleftrightarrow> xi = neutral_fixed_point f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Gromov_extension f xi = xi) = (xi = neutral_fixed_point f)", "proof (auto simp add: parabolic_fixed_point[OF assms])"], ["proof (state)\ngoal (1 subgoal):\n 1. Gromov_extension f xi = xi \\<Longrightarrow> xi = neutral_fixed_point f", "assume H: \"Gromov_extension f xi = xi\""], ["proof (state)\nthis:\n  Gromov_extension f xi = xi\n\ngoal (1 subgoal):\n 1. Gromov_extension f xi = xi \\<Longrightarrow> xi = neutral_fixed_point f", "have *: \"additive_strength f xi = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. additive_strength f xi = 0", "using stable_translation_length_eq_additive_strength[OF parabolic_isometryD(1)[OF assms] H]\n    parabolic_isometryD(3)[OF assms]"], ["proof (prove)\nusing this:\n  stable_translation_length f = \\<bar>additive_strength f xi\\<bar>\n  stable_translation_length f = 0\n\ngoal (1 subgoal):\n 1. additive_strength f xi = 0", "by auto"], ["proof (state)\nthis:\n  additive_strength f xi = 0\n\ngoal (1 subgoal):\n 1. Gromov_extension f xi = xi \\<Longrightarrow> xi = neutral_fixed_point f", "show \"xi = neutral_fixed_point f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xi = neutral_fixed_point f", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. xi \\<noteq> neutral_fixed_point f \\<Longrightarrow> False", "assume N: \"xi \\<noteq> neutral_fixed_point f\""], ["proof (state)\nthis:\n  xi \\<noteq> neutral_fixed_point f\n\ngoal (1 subgoal):\n 1. xi \\<noteq> neutral_fixed_point f \\<Longrightarrow> False", "define C where \"C = 2 * real_of_ereal (extended_Gromov_product_at basepoint xi (neutral_fixed_point f)) + 4 * deltaG(TYPE('a))\""], ["proof (state)\nthis:\n  C =\n  2 *\n  real_of_ereal\n   (extended_Gromov_product_at basepoint xi (neutral_fixed_point f)) +\n  4 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. xi \\<noteq> neutral_fixed_point f \\<Longrightarrow> False", "have A: \"dist basepoint ((f^^n) basepoint) \\<le> C\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist basepoint ((f ^^ n) basepoint) \\<le> C", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist basepoint ((f ^^ n) basepoint) \\<le> C", "have \"dist ((f^^n) basepoint) basepoint - 2 * real_of_ereal (extended_Gromov_product_at basepoint xi (neutral_fixed_point f)) - 2 * deltaG(TYPE('a))\n            \\<le> max (Busemann_function_at xi ((f^^n) basepoint) basepoint) (Busemann_function_at (neutral_fixed_point f) ((f^^n) basepoint) basepoint)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist ((f ^^ n) basepoint) basepoint -\n    2 *\n    real_of_ereal\n     (extended_Gromov_product_at basepoint xi (neutral_fixed_point f)) -\n    2 * deltaG TYPE('a)\n    \\<le> max (Busemann_function_at xi ((f ^^ n) basepoint) basepoint)\n           (Busemann_function_at (neutral_fixed_point f)\n             ((f ^^ n) basepoint) basepoint)", "using dist_le_max_Busemann_functions[OF N]"], ["proof (prove)\nusing this:\n  dist ?x ?y\n  \\<le> 2 *\n        real_of_ereal\n         (extended_Gromov_product_at ?y xi (neutral_fixed_point f)) +\n        max (Busemann_function_at xi ?x ?y)\n         (Busemann_function_at (neutral_fixed_point f) ?x ?y) +\n        2 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. dist ((f ^^ n) basepoint) basepoint -\n    2 *\n    real_of_ereal\n     (extended_Gromov_product_at basepoint xi (neutral_fixed_point f)) -\n    2 * deltaG TYPE('a)\n    \\<le> max (Busemann_function_at xi ((f ^^ n) basepoint) basepoint)\n           (Busemann_function_at (neutral_fixed_point f)\n             ((f ^^ n) basepoint) basepoint)", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  dist ((f ^^ n) basepoint) basepoint -\n  2 *\n  real_of_ereal\n   (extended_Gromov_product_at basepoint xi (neutral_fixed_point f)) -\n  2 * deltaG TYPE('a)\n  \\<le> max (Busemann_function_at xi ((f ^^ n) basepoint) basepoint)\n         (Busemann_function_at (neutral_fixed_point f) ((f ^^ n) basepoint)\n           basepoint)\n\ngoal (1 subgoal):\n 1. dist basepoint ((f ^^ n) basepoint) \\<le> C", "also"], ["proof (state)\nthis:\n  dist ((f ^^ n) basepoint) basepoint -\n  2 *\n  real_of_ereal\n   (extended_Gromov_product_at basepoint xi (neutral_fixed_point f)) -\n  2 * deltaG TYPE('a)\n  \\<le> max (Busemann_function_at xi ((f ^^ n) basepoint) basepoint)\n         (Busemann_function_at (neutral_fixed_point f) ((f ^^ n) basepoint)\n           basepoint)\n\ngoal (1 subgoal):\n 1. dist basepoint ((f ^^ n) basepoint) \\<le> C", "have \"... \\<le> max (n * additive_strength f xi + 2 * deltaG(TYPE('a))) (n * additive_strength f (neutral_fixed_point f) + 2 * deltaG(TYPE('a)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max (Busemann_function_at xi ((f ^^ n) basepoint) basepoint)\n     (Busemann_function_at (neutral_fixed_point f) ((f ^^ n) basepoint)\n       basepoint)\n    \\<le> max (real n * additive_strength f xi + 2 * deltaG TYPE('a))\n           (real n * additive_strength f (neutral_fixed_point f) +\n            2 * deltaG TYPE('a))", "apply (intro mono_intros)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Busemann_function_at xi ((f ^^ n) basepoint) basepoint\n    \\<le> real n * additive_strength f xi + 2 * deltaG TYPE('a)\n 2. Busemann_function_at (neutral_fixed_point f) ((f ^^ n) basepoint)\n     basepoint\n    \\<le> real n * additive_strength f (neutral_fixed_point f) +\n          2 * deltaG TYPE('a)", "using Busemann_function_eq_additive_strength[OF parabolic_isometryD(1)[OF assms] H, of n basepoint]\n        Busemann_function_eq_additive_strength[OF parabolic_isometryD(1)[OF assms] parabolic_fixed_point(2)[OF assms], of n basepoint]"], ["proof (prove)\nusing this:\n  \\<bar>Busemann_function_at xi ((f ^^ n) basepoint) basepoint -\n        real n * additive_strength f xi\\<bar>\n  \\<le> 2 * deltaG TYPE('a)\n  \\<bar>Busemann_function_at (neutral_fixed_point f) ((f ^^ n) basepoint)\n         basepoint -\n        real n * additive_strength f (neutral_fixed_point f)\\<bar>\n  \\<le> 2 * deltaG TYPE('a)\n\ngoal (2 subgoals):\n 1. Busemann_function_at xi ((f ^^ n) basepoint) basepoint\n    \\<le> real n * additive_strength f xi + 2 * deltaG TYPE('a)\n 2. Busemann_function_at (neutral_fixed_point f) ((f ^^ n) basepoint)\n     basepoint\n    \\<le> real n * additive_strength f (neutral_fixed_point f) +\n          2 * deltaG TYPE('a)", "by auto"], ["proof (state)\nthis:\n  max (Busemann_function_at xi ((f ^^ n) basepoint) basepoint)\n   (Busemann_function_at (neutral_fixed_point f) ((f ^^ n) basepoint)\n     basepoint)\n  \\<le> max (real n * additive_strength f xi + 2 * deltaG TYPE('a))\n         (real n * additive_strength f (neutral_fixed_point f) +\n          2 * deltaG TYPE('a))\n\ngoal (1 subgoal):\n 1. dist basepoint ((f ^^ n) basepoint) \\<le> C", "also"], ["proof (state)\nthis:\n  max (Busemann_function_at xi ((f ^^ n) basepoint) basepoint)\n   (Busemann_function_at (neutral_fixed_point f) ((f ^^ n) basepoint)\n     basepoint)\n  \\<le> max (real n * additive_strength f xi + 2 * deltaG TYPE('a))\n         (real n * additive_strength f (neutral_fixed_point f) +\n          2 * deltaG TYPE('a))\n\ngoal (1 subgoal):\n 1. dist basepoint ((f ^^ n) basepoint) \\<le> C", "have \"... = 2 * deltaG(TYPE('a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max (real n * additive_strength f xi + 2 * deltaG TYPE('a))\n     (real n * additive_strength f (neutral_fixed_point f) +\n      2 * deltaG TYPE('a)) =\n    2 * deltaG TYPE('a)", "unfolding * parabolic_fixed_point[OF assms]"], ["proof (prove)\ngoal (1 subgoal):\n 1. max (real n * 0 + 2 * deltaG TYPE('a))\n     (real n * 0 + 2 * deltaG TYPE('a)) =\n    2 * deltaG TYPE('a)", "by auto"], ["proof (state)\nthis:\n  max (real n * additive_strength f xi + 2 * deltaG TYPE('a))\n   (real n * additive_strength f (neutral_fixed_point f) +\n    2 * deltaG TYPE('a)) =\n  2 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. dist basepoint ((f ^^ n) basepoint) \\<le> C", "finally"], ["proof (chain)\npicking this:\n  dist ((f ^^ n) basepoint) basepoint -\n  2 *\n  real_of_ereal\n   (extended_Gromov_product_at basepoint xi (neutral_fixed_point f)) -\n  2 * deltaG TYPE('a)\n  \\<le> 2 * deltaG TYPE('a)", "show ?thesis"], ["proof (prove)\nusing this:\n  dist ((f ^^ n) basepoint) basepoint -\n  2 *\n  real_of_ereal\n   (extended_Gromov_product_at basepoint xi (neutral_fixed_point f)) -\n  2 * deltaG TYPE('a)\n  \\<le> 2 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. dist basepoint ((f ^^ n) basepoint) \\<le> C", "unfolding C_def"], ["proof (prove)\nusing this:\n  dist ((f ^^ n) basepoint) basepoint -\n  2 *\n  real_of_ereal\n   (extended_Gromov_product_at basepoint xi (neutral_fixed_point f)) -\n  2 * deltaG TYPE('a)\n  \\<le> 2 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. dist basepoint ((f ^^ n) basepoint)\n    \\<le> 2 *\n          real_of_ereal\n           (extended_Gromov_product_at basepoint xi\n             (neutral_fixed_point f)) +\n          4 * deltaG TYPE('a)", "by (simp add: algebra_simps dist_commute)"], ["proof (state)\nthis:\n  dist basepoint ((f ^^ n) basepoint) \\<le> C\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dist basepoint ((f ^^ ?n) basepoint) \\<le> C\n\ngoal (1 subgoal):\n 1. xi \\<noteq> neutral_fixed_point f \\<Longrightarrow> False", "have \"elliptic_isometry f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. elliptic_isometry f", "apply (rule elliptic_isometryI[of _ basepoint])"], ["proof (prove)\ngoal (2 subgoals):\n 1. bounded {(f ^^ n) basepoint |n. True}\n 2. isometry f", "using parabolic_isometryD(1)[OF assms] A"], ["proof (prove)\nusing this:\n  isometry f\n  dist basepoint ((f ^^ ?n) basepoint) \\<le> C\n\ngoal (2 subgoals):\n 1. bounded {(f ^^ n) basepoint |n. True}\n 2. isometry f", "unfolding bounded_def"], ["proof (prove)\nusing this:\n  isometry f\n  dist basepoint ((f ^^ ?n) basepoint) \\<le> C\n\ngoal (2 subgoals):\n 1. \\<exists>x e.\n       \\<forall>y\\<in>{(f ^^ n) basepoint |n. True}. dist x y \\<le> e\n 2. isometry f", "by auto"], ["proof (state)\nthis:\n  elliptic_isometry f\n\ngoal (1 subgoal):\n 1. xi \\<noteq> neutral_fixed_point f \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  elliptic_isometry f", "show False"], ["proof (prove)\nusing this:\n  elliptic_isometry f\n\ngoal (1 subgoal):\n 1. False", "using elliptic_imp_not_parabolic_loxodromic assms"], ["proof (prove)\nusing this:\n  elliptic_isometry f\n  elliptic_isometry ?f \\<Longrightarrow> \\<not> parabolic_isometry ?f\n  elliptic_isometry ?f \\<Longrightarrow> \\<not> loxodromic_isometry ?f\n  parabolic_isometry f\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  xi = neutral_fixed_point f\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>When one iterates a parabolic isometry, the distance to the starting point can grow at most\nlogarithmically.\\<close>"], ["", "lemma parabolic_logarithmic_growth:\n  assumes \"parabolic_isometry (f::'a::Gromov_hyperbolic_space \\<Rightarrow> 'a)\" \"n \\<ge> 1\"\n  shows \"dist x ((f^^n) x) \\<le> dist x (f x) + ceiling (log 2 n) * 16 * deltaG(TYPE('a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x)\n    \\<le> dist x (f x) +\n          real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) *\n          deltaG TYPE('a)", "using dist_le_additive_strength[OF parabolic_isometryD(1)[OF assms(1)] parabolic_fixed_point(2)[OF assms(1)] _ assms(2)]\nparabolic_isometryD(3)[OF assms(1)] stable_translation_length_eq_additive_strength[OF parabolic_isometryD(1)[OF assms(1)] parabolic_fixed_point(2)[OF assms(1)]]"], ["proof (prove)\nusing this:\n  0 \\<le> additive_strength f (neutral_fixed_point f) \\<Longrightarrow>\n  dist ?x ((f ^^ n) ?x)\n  \\<le> dist ?x (f ?x) +\n        real n * additive_strength f (neutral_fixed_point f) +\n        real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) * deltaG TYPE('a)\n  stable_translation_length f = 0\n  stable_translation_length f =\n  \\<bar>additive_strength f (neutral_fixed_point f)\\<bar>\n\ngoal (1 subgoal):\n 1. dist x ((f ^^ n) x)\n    \\<le> dist x (f x) +\n          real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) *\n          deltaG TYPE('a)", "by auto"], ["", "text \\<open>It follows that there is no parabolic isometry in trees, since the formula in the previous\nlemma shows that there is no orbit growth as $\\delta = 0$, and therefore orbits are bounded,\ncontradicting the parabolicity of the isometry.\\<close>"], ["", "lemma tree_no_parabolic_isometry:\n  assumes \"isometry (f::'a::Gromov_hyperbolic_space_0 \\<Rightarrow> 'a)\"\n  shows \"elliptic_isometry f \\<or> loxodromic_isometry f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. elliptic_isometry f \\<or> loxodromic_isometry f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. elliptic_isometry f \\<or> loxodromic_isometry f", "have \"\\<not>parabolic_isometry f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> parabolic_isometry f", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. parabolic_isometry f \\<Longrightarrow> False", "assume P: \"parabolic_isometry f\""], ["proof (state)\nthis:\n  parabolic_isometry f\n\ngoal (1 subgoal):\n 1. parabolic_isometry f \\<Longrightarrow> False", "have \"dist basepoint ((f^^n) basepoint) \\<le> dist basepoint (f basepoint)\" if \"n \\<ge> 1\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist basepoint ((f ^^ n) basepoint) \\<le> dist basepoint (f basepoint)", "using parabolic_logarithmic_growth[OF P that, of basepoint]"], ["proof (prove)\nusing this:\n  dist basepoint ((f ^^ n) basepoint)\n  \\<le> dist basepoint (f basepoint) +\n        real_of_int (\\<lceil>log 2 (real n)\\<rceil> * 16) * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. dist basepoint ((f ^^ n) basepoint) \\<le> dist basepoint (f basepoint)", "by auto"], ["proof (state)\nthis:\n  1 \\<le> ?n \\<Longrightarrow>\n  dist basepoint ((f ^^ ?n) basepoint) \\<le> dist basepoint (f basepoint)\n\ngoal (1 subgoal):\n 1. parabolic_isometry f \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  1 \\<le> ?n \\<Longrightarrow>\n  dist basepoint ((f ^^ ?n) basepoint) \\<le> dist basepoint (f basepoint)", "have *: \"dist basepoint ((f^^n) basepoint) \\<le> dist basepoint (f basepoint)\" for n"], ["proof (prove)\nusing this:\n  1 \\<le> ?n \\<Longrightarrow>\n  dist basepoint ((f ^^ ?n) basepoint) \\<le> dist basepoint (f basepoint)\n\ngoal (1 subgoal):\n 1. dist basepoint ((f ^^ n) basepoint) \\<le> dist basepoint (f basepoint)", "by (cases \"n \\<ge> 1\", auto simp add: not_less_eq_eq)"], ["proof (state)\nthis:\n  dist basepoint ((f ^^ ?n) basepoint) \\<le> dist basepoint (f basepoint)\n\ngoal (1 subgoal):\n 1. parabolic_isometry f \\<Longrightarrow> False", "have \"elliptic_isometry f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. elliptic_isometry f", "apply (rule elliptic_isometryI[OF _ assms, of basepoint])"], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded {(f ^^ n) basepoint |n. True}", "using *"], ["proof (prove)\nusing this:\n  dist basepoint ((f ^^ ?n) basepoint) \\<le> dist basepoint (f basepoint)\n\ngoal (1 subgoal):\n 1. bounded {(f ^^ n) basepoint |n. True}", "unfolding bounded_def"], ["proof (prove)\nusing this:\n  dist basepoint ((f ^^ ?n) basepoint) \\<le> dist basepoint (f basepoint)\n\ngoal (1 subgoal):\n 1. \\<exists>x e.\n       \\<forall>y\\<in>{(f ^^ n) basepoint |n. True}. dist x y \\<le> e", "by auto"], ["proof (state)\nthis:\n  elliptic_isometry f\n\ngoal (1 subgoal):\n 1. parabolic_isometry f \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  elliptic_isometry f", "show False"], ["proof (prove)\nusing this:\n  elliptic_isometry f\n\ngoal (1 subgoal):\n 1. False", "using elliptic_imp_not_parabolic_loxodromic P"], ["proof (prove)\nusing this:\n  elliptic_isometry f\n  elliptic_isometry ?f \\<Longrightarrow> \\<not> parabolic_isometry ?f\n  elliptic_isometry ?f \\<Longrightarrow> \\<not> loxodromic_isometry ?f\n  parabolic_isometry f\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> parabolic_isometry f\n\ngoal (1 subgoal):\n 1. elliptic_isometry f \\<or> loxodromic_isometry f", "then"], ["proof (chain)\npicking this:\n  \\<not> parabolic_isometry f", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> parabolic_isometry f\n\ngoal (1 subgoal):\n 1. elliptic_isometry f \\<or> loxodromic_isometry f", "using elliptic_or_parabolic_or_loxodromic[OF assms]"], ["proof (prove)\nusing this:\n  \\<not> parabolic_isometry f\n  elliptic_isometry f \\<or> parabolic_isometry f \\<or> loxodromic_isometry f\n\ngoal (1 subgoal):\n 1. elliptic_isometry f \\<or> loxodromic_isometry f", "by auto"], ["proof (state)\nthis:\n  elliptic_isometry f \\<or> loxodromic_isometry f\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Loxodromic isometries\\<close>"], ["", "text \\<open>A loxodromic isometry has (at least) two fixed points at infinity, one attracting\nand one repelling. We have already constructed fixed points with nonnegative and nonpositive\nstrengths. Since the strength is nonzero (its absolute value is the stable translation length),\nthen these fixed points correspond to what we want.\\<close>"], ["", "lemma loxodromic_attracting_fixed_point:\n  assumes \"loxodromic_isometry f\"\n  shows \"attracting_fixed_point f \\<in> Gromov_boundary\"\n        \"Gromov_extension f (attracting_fixed_point f) = attracting_fixed_point f\"\n        \"additive_strength f (attracting_fixed_point f) < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. attracting_fixed_point f \\<in> Gromov_boundary &&&\n    Gromov_extension f (attracting_fixed_point f) =\n    attracting_fixed_point f &&&\n    additive_strength f (attracting_fixed_point f) < 0", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. attracting_fixed_point f \\<in> Gromov_boundary\n 2. Gromov_extension f (attracting_fixed_point f) = attracting_fixed_point f\n 3. additive_strength f (attracting_fixed_point f) < 0", "obtain xi where xi: \"xi \\<in> Gromov_boundary\" \"Gromov_extension f xi = xi\" \"additive_strength f xi \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>xi.\n        \\<lbrakk>xi \\<in> Gromov_boundary; Gromov_extension f xi = xi;\n         additive_strength f xi \\<le> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using isometry_not_elliptic_has_attracting_fixed_point loxodromic_isometryD[OF assms]"], ["proof (prove)\nusing this:\n  \\<lbrakk>isometry ?f; \\<not> elliptic_isometry ?f\\<rbrakk>\n  \\<Longrightarrow> \\<exists>xi\\<in>Gromov_boundary.\n                       Gromov_extension ?f xi = xi \\<and>\n                       additive_strength ?f xi \\<le> 0\n  isometry f\n  \\<not> bounded {(f ^^ n) ?x |n. True}\n  0 < stable_translation_length f\n  \\<not> elliptic_isometry f\n\ngoal (1 subgoal):\n 1. (\\<And>xi.\n        \\<lbrakk>xi \\<in> Gromov_boundary; Gromov_extension f xi = xi;\n         additive_strength f xi \\<le> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  xi \\<in> Gromov_boundary\n  Gromov_extension f xi = xi\n  additive_strength f xi \\<le> 0\n\ngoal (3 subgoals):\n 1. attracting_fixed_point f \\<in> Gromov_boundary\n 2. Gromov_extension f (attracting_fixed_point f) = attracting_fixed_point f\n 3. additive_strength f (attracting_fixed_point f) < 0", "moreover"], ["proof (state)\nthis:\n  xi \\<in> Gromov_boundary\n  Gromov_extension f xi = xi\n  additive_strength f xi \\<le> 0\n\ngoal (3 subgoals):\n 1. attracting_fixed_point f \\<in> Gromov_boundary\n 2. Gromov_extension f (attracting_fixed_point f) = attracting_fixed_point f\n 3. additive_strength f (attracting_fixed_point f) < 0", "have \"additive_strength f xi < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. additive_strength f xi < 0", "using stable_translation_length_eq_additive_strength[OF loxodromic_isometryD(1)[OF assms] xi(2)]\n    loxodromic_isometryD(3)[OF assms] xi(3)"], ["proof (prove)\nusing this:\n  stable_translation_length f = \\<bar>additive_strength f xi\\<bar>\n  0 < stable_translation_length f\n  additive_strength f xi \\<le> 0\n\ngoal (1 subgoal):\n 1. additive_strength f xi < 0", "by auto"], ["proof (state)\nthis:\n  additive_strength f xi < 0\n\ngoal (3 subgoals):\n 1. attracting_fixed_point f \\<in> Gromov_boundary\n 2. Gromov_extension f (attracting_fixed_point f) = attracting_fixed_point f\n 3. additive_strength f (attracting_fixed_point f) < 0", "ultimately"], ["proof (chain)\npicking this:\n  xi \\<in> Gromov_boundary\n  Gromov_extension f xi = xi\n  additive_strength f xi \\<le> 0\n  additive_strength f xi < 0", "have A: \"\\<exists>xi. xi \\<in> Gromov_boundary \\<and> Gromov_extension f xi = xi \\<and> additive_strength f xi < 0\""], ["proof (prove)\nusing this:\n  xi \\<in> Gromov_boundary\n  Gromov_extension f xi = xi\n  additive_strength f xi \\<le> 0\n  additive_strength f xi < 0\n\ngoal (1 subgoal):\n 1. \\<exists>xi.\n       xi \\<in> Gromov_boundary \\<and>\n       Gromov_extension f xi = xi \\<and> additive_strength f xi < 0", "by auto"], ["proof (state)\nthis:\n  \\<exists>xi.\n     xi \\<in> Gromov_boundary \\<and>\n     Gromov_extension f xi = xi \\<and> additive_strength f xi < 0\n\ngoal (3 subgoals):\n 1. attracting_fixed_point f \\<in> Gromov_boundary\n 2. Gromov_extension f (attracting_fixed_point f) = attracting_fixed_point f\n 3. additive_strength f (attracting_fixed_point f) < 0", "show \"attracting_fixed_point f \\<in> Gromov_boundary\"\n       \"Gromov_extension f (attracting_fixed_point f) = attracting_fixed_point f\"\n       \"additive_strength f (attracting_fixed_point f) < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. attracting_fixed_point f \\<in> Gromov_boundary &&&\n    Gromov_extension f (attracting_fixed_point f) =\n    attracting_fixed_point f &&&\n    additive_strength f (attracting_fixed_point f) < 0", "unfolding attracting_fixed_point_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (SOME xi.\n        xi \\<in> Gromov_boundary \\<and>\n        Gromov_extension f xi = xi \\<and> additive_strength f xi < 0)\n    \\<in> Gromov_boundary &&&\n    Gromov_extension f\n     (SOME xi.\n         xi \\<in> Gromov_boundary \\<and>\n         Gromov_extension f xi = xi \\<and> additive_strength f xi < 0) =\n    (SOME xi.\n        xi \\<in> Gromov_boundary \\<and>\n        Gromov_extension f xi = xi \\<and> additive_strength f xi < 0) &&&\n    additive_strength f\n     (SOME xi.\n         xi \\<in> Gromov_boundary \\<and>\n         Gromov_extension f xi = xi \\<and> additive_strength f xi < 0)\n    < 0", "using someI_ex[OF A]"], ["proof (prove)\nusing this:\n  (SOME x.\n      x \\<in> Gromov_boundary \\<and>\n      Gromov_extension f x = x \\<and> additive_strength f x < 0)\n  \\<in> Gromov_boundary \\<and>\n  Gromov_extension f\n   (SOME x.\n       x \\<in> Gromov_boundary \\<and>\n       Gromov_extension f x = x \\<and> additive_strength f x < 0) =\n  (SOME x.\n      x \\<in> Gromov_boundary \\<and>\n      Gromov_extension f x = x \\<and> additive_strength f x < 0) \\<and>\n  additive_strength f\n   (SOME x.\n       x \\<in> Gromov_boundary \\<and>\n       Gromov_extension f x = x \\<and> additive_strength f x < 0)\n  < 0\n\ngoal (1 subgoal):\n 1. (SOME xi.\n        xi \\<in> Gromov_boundary \\<and>\n        Gromov_extension f xi = xi \\<and> additive_strength f xi < 0)\n    \\<in> Gromov_boundary &&&\n    Gromov_extension f\n     (SOME xi.\n         xi \\<in> Gromov_boundary \\<and>\n         Gromov_extension f xi = xi \\<and> additive_strength f xi < 0) =\n    (SOME xi.\n        xi \\<in> Gromov_boundary \\<and>\n        Gromov_extension f xi = xi \\<and> additive_strength f xi < 0) &&&\n    additive_strength f\n     (SOME xi.\n         xi \\<in> Gromov_boundary \\<and>\n         Gromov_extension f xi = xi \\<and> additive_strength f xi < 0)\n    < 0", "by auto"], ["proof (state)\nthis:\n  attracting_fixed_point f \\<in> Gromov_boundary\n  Gromov_extension f (attracting_fixed_point f) = attracting_fixed_point f\n  additive_strength f (attracting_fixed_point f) < 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma loxodromic_repelling_fixed_point:\n  assumes \"loxodromic_isometry f\"\n  shows \"repelling_fixed_point f \\<in> Gromov_boundary\"\n        \"Gromov_extension f (repelling_fixed_point f) = repelling_fixed_point f\"\n        \"additive_strength f (repelling_fixed_point f) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. repelling_fixed_point f \\<in> Gromov_boundary &&&\n    Gromov_extension f (repelling_fixed_point f) =\n    repelling_fixed_point f &&&\n    0 < additive_strength f (repelling_fixed_point f)", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. repelling_fixed_point f \\<in> Gromov_boundary\n 2. Gromov_extension f (repelling_fixed_point f) = repelling_fixed_point f\n 3. 0 < additive_strength f (repelling_fixed_point f)", "obtain xi where xi: \"xi \\<in> Gromov_boundary\" \"Gromov_extension f xi = xi\" \"additive_strength f xi \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>xi.\n        \\<lbrakk>xi \\<in> Gromov_boundary; Gromov_extension f xi = xi;\n         0 \\<le> additive_strength f xi\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using isometry_not_elliptic_has_repelling_fixed_point loxodromic_isometryD[OF assms]"], ["proof (prove)\nusing this:\n  \\<lbrakk>isometry ?f; \\<not> elliptic_isometry ?f\\<rbrakk>\n  \\<Longrightarrow> \\<exists>xi\\<in>Gromov_boundary.\n                       Gromov_extension ?f xi = xi \\<and>\n                       0 \\<le> additive_strength ?f xi\n  isometry f\n  \\<not> bounded {(f ^^ n) ?x |n. True}\n  0 < stable_translation_length f\n  \\<not> elliptic_isometry f\n\ngoal (1 subgoal):\n 1. (\\<And>xi.\n        \\<lbrakk>xi \\<in> Gromov_boundary; Gromov_extension f xi = xi;\n         0 \\<le> additive_strength f xi\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  xi \\<in> Gromov_boundary\n  Gromov_extension f xi = xi\n  0 \\<le> additive_strength f xi\n\ngoal (3 subgoals):\n 1. repelling_fixed_point f \\<in> Gromov_boundary\n 2. Gromov_extension f (repelling_fixed_point f) = repelling_fixed_point f\n 3. 0 < additive_strength f (repelling_fixed_point f)", "moreover"], ["proof (state)\nthis:\n  xi \\<in> Gromov_boundary\n  Gromov_extension f xi = xi\n  0 \\<le> additive_strength f xi\n\ngoal (3 subgoals):\n 1. repelling_fixed_point f \\<in> Gromov_boundary\n 2. Gromov_extension f (repelling_fixed_point f) = repelling_fixed_point f\n 3. 0 < additive_strength f (repelling_fixed_point f)", "have \"additive_strength f xi > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < additive_strength f xi", "using stable_translation_length_eq_additive_strength[OF loxodromic_isometryD(1)[OF assms] xi(2)]\n    loxodromic_isometryD(3)[OF assms] xi(3)"], ["proof (prove)\nusing this:\n  stable_translation_length f = \\<bar>additive_strength f xi\\<bar>\n  0 < stable_translation_length f\n  0 \\<le> additive_strength f xi\n\ngoal (1 subgoal):\n 1. 0 < additive_strength f xi", "by auto"], ["proof (state)\nthis:\n  0 < additive_strength f xi\n\ngoal (3 subgoals):\n 1. repelling_fixed_point f \\<in> Gromov_boundary\n 2. Gromov_extension f (repelling_fixed_point f) = repelling_fixed_point f\n 3. 0 < additive_strength f (repelling_fixed_point f)", "ultimately"], ["proof (chain)\npicking this:\n  xi \\<in> Gromov_boundary\n  Gromov_extension f xi = xi\n  0 \\<le> additive_strength f xi\n  0 < additive_strength f xi", "have A: \"\\<exists>xi. xi \\<in> Gromov_boundary \\<and> Gromov_extension f xi = xi \\<and> additive_strength f xi > 0\""], ["proof (prove)\nusing this:\n  xi \\<in> Gromov_boundary\n  Gromov_extension f xi = xi\n  0 \\<le> additive_strength f xi\n  0 < additive_strength f xi\n\ngoal (1 subgoal):\n 1. \\<exists>xi.\n       xi \\<in> Gromov_boundary \\<and>\n       Gromov_extension f xi = xi \\<and> 0 < additive_strength f xi", "by auto"], ["proof (state)\nthis:\n  \\<exists>xi.\n     xi \\<in> Gromov_boundary \\<and>\n     Gromov_extension f xi = xi \\<and> 0 < additive_strength f xi\n\ngoal (3 subgoals):\n 1. repelling_fixed_point f \\<in> Gromov_boundary\n 2. Gromov_extension f (repelling_fixed_point f) = repelling_fixed_point f\n 3. 0 < additive_strength f (repelling_fixed_point f)", "show \"repelling_fixed_point f \\<in> Gromov_boundary\"\n       \"Gromov_extension f (repelling_fixed_point f) = repelling_fixed_point f\"\n       \"additive_strength f (repelling_fixed_point f) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. repelling_fixed_point f \\<in> Gromov_boundary &&&\n    Gromov_extension f (repelling_fixed_point f) =\n    repelling_fixed_point f &&&\n    0 < additive_strength f (repelling_fixed_point f)", "unfolding repelling_fixed_point_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (SOME xi.\n        xi \\<in> Gromov_boundary \\<and>\n        Gromov_extension f xi = xi \\<and> 0 < additive_strength f xi)\n    \\<in> Gromov_boundary &&&\n    Gromov_extension f\n     (SOME xi.\n         xi \\<in> Gromov_boundary \\<and>\n         Gromov_extension f xi = xi \\<and> 0 < additive_strength f xi) =\n    (SOME xi.\n        xi \\<in> Gromov_boundary \\<and>\n        Gromov_extension f xi = xi \\<and> 0 < additive_strength f xi) &&&\n    0 < additive_strength f\n         (SOME xi.\n             xi \\<in> Gromov_boundary \\<and>\n             Gromov_extension f xi = xi \\<and> 0 < additive_strength f xi)", "using someI_ex[OF A]"], ["proof (prove)\nusing this:\n  (SOME x.\n      x \\<in> Gromov_boundary \\<and>\n      Gromov_extension f x = x \\<and> 0 < additive_strength f x)\n  \\<in> Gromov_boundary \\<and>\n  Gromov_extension f\n   (SOME x.\n       x \\<in> Gromov_boundary \\<and>\n       Gromov_extension f x = x \\<and> 0 < additive_strength f x) =\n  (SOME x.\n      x \\<in> Gromov_boundary \\<and>\n      Gromov_extension f x = x \\<and> 0 < additive_strength f x) \\<and>\n  0 < additive_strength f\n       (SOME x.\n           x \\<in> Gromov_boundary \\<and>\n           Gromov_extension f x = x \\<and> 0 < additive_strength f x)\n\ngoal (1 subgoal):\n 1. (SOME xi.\n        xi \\<in> Gromov_boundary \\<and>\n        Gromov_extension f xi = xi \\<and> 0 < additive_strength f xi)\n    \\<in> Gromov_boundary &&&\n    Gromov_extension f\n     (SOME xi.\n         xi \\<in> Gromov_boundary \\<and>\n         Gromov_extension f xi = xi \\<and> 0 < additive_strength f xi) =\n    (SOME xi.\n        xi \\<in> Gromov_boundary \\<and>\n        Gromov_extension f xi = xi \\<and> 0 < additive_strength f xi) &&&\n    0 < additive_strength f\n         (SOME xi.\n             xi \\<in> Gromov_boundary \\<and>\n             Gromov_extension f xi = xi \\<and> 0 < additive_strength f xi)", "by auto"], ["proof (state)\nthis:\n  repelling_fixed_point f \\<in> Gromov_boundary\n  Gromov_extension f (repelling_fixed_point f) = repelling_fixed_point f\n  0 < additive_strength f (repelling_fixed_point f)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The attracting and repelling fixed points of a loxodromic isometry are distinct -- precisely\nsince one is attracting and the other is repelling.\\<close>"], ["", "lemma attracting_fixed_point_neq_repelling_fixed_point:\n  assumes \"loxodromic_isometry f\"\n  shows \"attracting_fixed_point f \\<noteq> repelling_fixed_point f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. attracting_fixed_point f \\<noteq> repelling_fixed_point f", "using loxodromic_repelling_fixed_point[OF assms] loxodromic_attracting_fixed_point[OF assms]"], ["proof (prove)\nusing this:\n  repelling_fixed_point f \\<in> Gromov_boundary\n  Gromov_extension f (repelling_fixed_point f) = repelling_fixed_point f\n  0 < additive_strength f (repelling_fixed_point f)\n  attracting_fixed_point f \\<in> Gromov_boundary\n  Gromov_extension f (attracting_fixed_point f) = attracting_fixed_point f\n  additive_strength f (attracting_fixed_point f) < 0\n\ngoal (1 subgoal):\n 1. attracting_fixed_point f \\<noteq> repelling_fixed_point f", "by auto"], ["", "text \\<open>The attracting fixed point of a loxodromic isometry is indeed attracting. Moreover, the\nconvergence is uniform away from the repelling fixed point. This is expressed in the following\nproposition, where neighborhoods of the repelling and attracting fixed points are given by the property\nthat the Gromov product with the fixed point is large.\n\nThe proof goes as follows. First, the Busemann function with respect to the fixed points at infinity\nevolves like the strength. Therefore, $f^n e$ tends to the repulsive fixed point in negative time,\nand to the attracting one in positive time. Consider now a general point $x$ with\n$(\\xi^-, x)_e \\leq K$. This means that the geodesics from $e$ to $x$ and $\\xi^-$ diverge before\ntime $K$. For large $n$, since $f^{-n} e$ is close to $\\xi^-$, we also get the inequality\n$(f^{-n} e, x)_e \\leq K$. Applying $f^n$ and using the invariance of the Gromov product under\nisometries yields $(e, f^n x)_{f^n e} \\leq K$. But this Gromov product is equal to\n$d(e, f^n e) - (f^n e, f^n x)_e$ (this is a general property of Gromov products). In particular,\n$(f^n e, f^n x) \\geq d(e, f^n e) - K$, and moreover $d(e, f^n e)$ is large.\nSince $f^n e$ is close to $\\xi^+$, it follows that $f^n x$\nis also close to $\\xi^+$, as desired.\n\nThe real proof requires some more care as everything should be done in ereal, and moreover every\ninequality is only true up to some multiple of $\\delta$. But everything works in the way just\ndescribed above.\n\\<close>"], ["", "proposition loxodromic_attracting_fixed_point_attracts_uniformly:\n  assumes \"loxodromic_isometry f\"\n  shows \"\\<exists>N. \\<forall>n \\<ge> N. \\<forall>x. extended_Gromov_product_at basepoint x (repelling_fixed_point f) \\<le> ereal K\n          \\<longrightarrow> extended_Gromov_product_at basepoint (((Gromov_extension f)^^n) x) (attracting_fixed_point f) \\<ge> ereal M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          \\<forall>x.\n             extended_Gromov_product_at basepoint x\n              (repelling_fixed_point f)\n             \\<le> ereal K \\<longrightarrow>\n             ereal M\n             \\<le> extended_Gromov_product_at basepoint\n                    ((Gromov_extension f ^^ n) x) (attracting_fixed_point f)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          \\<forall>x.\n             extended_Gromov_product_at basepoint x\n              (repelling_fixed_point f)\n             \\<le> ereal K \\<longrightarrow>\n             ereal M\n             \\<le> extended_Gromov_product_at basepoint\n                    ((Gromov_extension f ^^ n) x) (attracting_fixed_point f)", "have I: \"isometry f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isometry f", "using loxodromic_isometryD(1)[OF assms]"], ["proof (prove)\nusing this:\n  isometry f\n\ngoal (1 subgoal):\n 1. isometry f", "by simp"], ["proof (state)\nthis:\n  isometry f\n\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          \\<forall>x.\n             extended_Gromov_product_at basepoint x\n              (repelling_fixed_point f)\n             \\<le> ereal K \\<longrightarrow>\n             ereal M\n             \\<le> extended_Gromov_product_at basepoint\n                    ((Gromov_extension f ^^ n) x) (attracting_fixed_point f)", "have J: \"\\<bar>ereal r\\<bar> \\<noteq> \\<infinity>\" for r"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>ereal r\\<bar> \\<noteq> \\<infinity>", "by auto"], ["proof (state)\nthis:\n  \\<bar>ereal ?r\\<bar> \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          \\<forall>x.\n             extended_Gromov_product_at basepoint x\n              (repelling_fixed_point f)\n             \\<le> ereal K \\<longrightarrow>\n             ereal M\n             \\<le> extended_Gromov_product_at basepoint\n                    ((Gromov_extension f ^^ n) x) (attracting_fixed_point f)", "text \\<open>We show that $f^n e$ tends to the repelling fixed point in negative time.\\<close>"], ["proof (state)\nthis:\n  \\<bar>ereal ?r\\<bar> \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          \\<forall>x.\n             extended_Gromov_product_at basepoint x\n              (repelling_fixed_point f)\n             \\<le> ereal K \\<longrightarrow>\n             ereal M\n             \\<le> extended_Gromov_product_at basepoint\n                    ((Gromov_extension f ^^ n) x) (attracting_fixed_point f)", "have \"(\\<lambda>n. ereal (Busemann_function_at (repelling_fixed_point f) ((inv f ^^ n) basepoint) basepoint)) \\<longlonglongrightarrow> - \\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        ereal\n         (Busemann_function_at (repelling_fixed_point f)\n           ((inv f ^^ n) basepoint) basepoint))\n    \\<longlonglongrightarrow> - \\<infinity>", "proof (rule tendsto_sandwich[of \"\\<lambda>n. -\\<infinity>\" _ _ \"\\<lambda>n. ereal(- real n * additive_strength f (repelling_fixed_point f) + 2 * deltaG(TYPE('a)))\", OF _ always_eventually], auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       Busemann_function_at (repelling_fixed_point f)\n        ((inv f ^^ x) basepoint) basepoint\n       \\<le> 2 * deltaG TYPE('a) -\n             real x * additive_strength f (repelling_fixed_point f)\n 2. (\\<lambda>n.\n        ereal\n         (2 * deltaG TYPE('a) -\n          real n * additive_strength f (repelling_fixed_point f)))\n    \\<longlonglongrightarrow> - \\<infinity>", "fix n"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       Busemann_function_at (repelling_fixed_point f)\n        ((inv f ^^ x) basepoint) basepoint\n       \\<le> 2 * deltaG TYPE('a) -\n             real x * additive_strength f (repelling_fixed_point f)\n 2. (\\<lambda>n.\n        ereal\n         (2 * deltaG TYPE('a) -\n          real n * additive_strength f (repelling_fixed_point f)))\n    \\<longlonglongrightarrow> - \\<infinity>", "have \"Busemann_function_at (repelling_fixed_point f) ((inv f ^^ n) basepoint) basepoint \\<le> real n * additive_strength (inv f) (repelling_fixed_point f) + 2 * deltaG(TYPE('a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Busemann_function_at (repelling_fixed_point f) ((inv f ^^ n) basepoint)\n     basepoint\n    \\<le> real n * additive_strength (inv f) (repelling_fixed_point f) +\n          2 * deltaG TYPE('a)", "using Busemann_function_eq_additive_strength[OF isometry_inverse(1)[OF I]\n      Gromov_extension_inv_fixed_point[OF I loxodromic_repelling_fixed_point(2)[OF assms]], of n basepoint]"], ["proof (prove)\nusing this:\n  \\<bar>Busemann_function_at (repelling_fixed_point f)\n         ((inv f ^^ n) basepoint) basepoint -\n        real n * additive_strength (inv f) (repelling_fixed_point f)\\<bar>\n  \\<le> 2 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. Busemann_function_at (repelling_fixed_point f) ((inv f ^^ n) basepoint)\n     basepoint\n    \\<le> real n * additive_strength (inv f) (repelling_fixed_point f) +\n          2 * deltaG TYPE('a)", "by auto"], ["proof (state)\nthis:\n  Busemann_function_at (repelling_fixed_point f) ((inv f ^^ n) basepoint)\n   basepoint\n  \\<le> real n * additive_strength (inv f) (repelling_fixed_point f) +\n        2 * deltaG TYPE('a)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       Busemann_function_at (repelling_fixed_point f)\n        ((inv f ^^ x) basepoint) basepoint\n       \\<le> 2 * deltaG TYPE('a) -\n             real x * additive_strength f (repelling_fixed_point f)\n 2. (\\<lambda>n.\n        ereal\n         (2 * deltaG TYPE('a) -\n          real n * additive_strength f (repelling_fixed_point f)))\n    \\<longlonglongrightarrow> - \\<infinity>", "then"], ["proof (chain)\npicking this:\n  Busemann_function_at (repelling_fixed_point f) ((inv f ^^ n) basepoint)\n   basepoint\n  \\<le> real n * additive_strength (inv f) (repelling_fixed_point f) +\n        2 * deltaG TYPE('a)", "show \"Busemann_function_at (repelling_fixed_point f) ((inv f ^^ n) basepoint) basepoint \\<le> 2 * deltaG(TYPE('a)) - real n * additive_strength f (repelling_fixed_point f)\""], ["proof (prove)\nusing this:\n  Busemann_function_at (repelling_fixed_point f) ((inv f ^^ n) basepoint)\n   basepoint\n  \\<le> real n * additive_strength (inv f) (repelling_fixed_point f) +\n        2 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. Busemann_function_at (repelling_fixed_point f) ((inv f ^^ n) basepoint)\n     basepoint\n    \\<le> 2 * deltaG TYPE('a) -\n          real n * additive_strength f (repelling_fixed_point f)", "by (simp add: I additive_strength_inv assms loxodromic_repelling_fixed_point(2))"], ["proof (state)\nthis:\n  Busemann_function_at (repelling_fixed_point f) ((inv f ^^ n) basepoint)\n   basepoint\n  \\<le> 2 * deltaG TYPE('a) -\n        real n * additive_strength f (repelling_fixed_point f)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        ereal\n         (2 * deltaG TYPE('a) -\n          real n * additive_strength f (repelling_fixed_point f)))\n    \\<longlonglongrightarrow> - \\<infinity>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        ereal\n         (2 * deltaG TYPE('a) -\n          real n * additive_strength f (repelling_fixed_point f)))\n    \\<longlonglongrightarrow> - \\<infinity>", "have \"(\\<lambda>n. ereal (2 * deltaG TYPE('a)) + ereal (- real n) * additive_strength f (repelling_fixed_point f)) \\<longlonglongrightarrow> ereal (2 * deltaG (TYPE('a))) + (- \\<infinity>) * additive_strength f (repelling_fixed_point f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        ereal (2 * deltaG TYPE('a)) +\n        ereal (- real n) *\n        ereal (additive_strength f (repelling_fixed_point f)))\n    \\<longlonglongrightarrow> ereal (2 * deltaG TYPE('a)) +\n                              - \\<infinity> *\n                              ereal\n                               (additive_strength f\n                                 (repelling_fixed_point f))", "apply (intro tendsto_intros)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<not> (ereal (2 * deltaG TYPE('a)) = \\<infinity> \\<and>\n            - \\<infinity> *\n            ereal (additive_strength f (repelling_fixed_point f)) =\n            - \\<infinity> \\<or>\n            ereal (2 * deltaG TYPE('a)) = - \\<infinity> \\<and>\n            - \\<infinity> *\n            ereal (additive_strength f (repelling_fixed_point f)) =\n            \\<infinity>)\n 2. \\<not> (- \\<infinity> = 0 \\<and>\n            \\<bar>ereal\n                   (additive_strength f (repelling_fixed_point f))\\<bar> =\n            \\<infinity> \\<or>\n            ereal (additive_strength f (repelling_fixed_point f)) = 0 \\<and>\n            \\<bar>- \\<infinity>\\<bar> = \\<infinity>)", "using loxodromic_repelling_fixed_point(3)[OF assms]"], ["proof (prove)\nusing this:\n  0 < additive_strength f (repelling_fixed_point f)\n\ngoal (2 subgoals):\n 1. \\<not> (ereal (2 * deltaG TYPE('a)) = \\<infinity> \\<and>\n            - \\<infinity> *\n            ereal (additive_strength f (repelling_fixed_point f)) =\n            - \\<infinity> \\<or>\n            ereal (2 * deltaG TYPE('a)) = - \\<infinity> \\<and>\n            - \\<infinity> *\n            ereal (additive_strength f (repelling_fixed_point f)) =\n            \\<infinity>)\n 2. \\<not> (- \\<infinity> = 0 \\<and>\n            \\<bar>ereal\n                   (additive_strength f (repelling_fixed_point f))\\<bar> =\n            \\<infinity> \\<or>\n            ereal (additive_strength f (repelling_fixed_point f)) = 0 \\<and>\n            \\<bar>- \\<infinity>\\<bar> = \\<infinity>)", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      ereal (2 * deltaG TYPE('a)) +\n      ereal (- real n) *\n      ereal (additive_strength f (repelling_fixed_point f)))\n  \\<longlonglongrightarrow> ereal (2 * deltaG TYPE('a)) +\n                            - \\<infinity> *\n                            ereal\n                             (additive_strength f (repelling_fixed_point f))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        ereal\n         (2 * deltaG TYPE('a) -\n          real n * additive_strength f (repelling_fixed_point f)))\n    \\<longlonglongrightarrow> - \\<infinity>", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n.\n      ereal (2 * deltaG TYPE('a)) +\n      ereal (- real n) *\n      ereal (additive_strength f (repelling_fixed_point f)))\n  \\<longlonglongrightarrow> ereal (2 * deltaG TYPE('a)) +\n                            - \\<infinity> *\n                            ereal\n                             (additive_strength f (repelling_fixed_point f))", "show \"(\\<lambda>n. ereal (2 * deltaG TYPE('a) - real n * additive_strength f (repelling_fixed_point f))) \\<longlonglongrightarrow> - \\<infinity>\""], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      ereal (2 * deltaG TYPE('a)) +\n      ereal (- real n) *\n      ereal (additive_strength f (repelling_fixed_point f)))\n  \\<longlonglongrightarrow> ereal (2 * deltaG TYPE('a)) +\n                            - \\<infinity> *\n                            ereal\n                             (additive_strength f (repelling_fixed_point f))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        ereal\n         (2 * deltaG TYPE('a) -\n          real n * additive_strength f (repelling_fixed_point f)))\n    \\<longlonglongrightarrow> - \\<infinity>", "using loxodromic_repelling_fixed_point(3)[OF assms]"], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      ereal (2 * deltaG TYPE('a)) +\n      ereal (- real n) *\n      ereal (additive_strength f (repelling_fixed_point f)))\n  \\<longlonglongrightarrow> ereal (2 * deltaG TYPE('a)) +\n                            - \\<infinity> *\n                            ereal\n                             (additive_strength f (repelling_fixed_point f))\n  0 < additive_strength f (repelling_fixed_point f)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        ereal\n         (2 * deltaG TYPE('a) -\n          real n * additive_strength f (repelling_fixed_point f)))\n    \\<longlonglongrightarrow> - \\<infinity>", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      ereal\n       (2 * deltaG TYPE('a) -\n        real n * additive_strength f (repelling_fixed_point f)))\n  \\<longlonglongrightarrow> - \\<infinity>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      ereal\n       (Busemann_function_at (repelling_fixed_point f)\n         ((inv f ^^ n) basepoint) basepoint))\n  \\<longlonglongrightarrow> - \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          \\<forall>x.\n             extended_Gromov_product_at basepoint x\n              (repelling_fixed_point f)\n             \\<le> ereal K \\<longrightarrow>\n             ereal M\n             \\<le> extended_Gromov_product_at basepoint\n                    ((Gromov_extension f ^^ n) x) (attracting_fixed_point f)", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n.\n      ereal\n       (Busemann_function_at (repelling_fixed_point f)\n         ((inv f ^^ n) basepoint) basepoint))\n  \\<longlonglongrightarrow> - \\<infinity>", "have \"(\\<lambda>n. to_Gromov_completion (((inv f)^^n) basepoint)) \\<longlonglongrightarrow> repelling_fixed_point f\""], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      ereal\n       (Busemann_function_at (repelling_fixed_point f)\n         ((inv f ^^ n) basepoint) basepoint))\n  \\<longlonglongrightarrow> - \\<infinity>\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. to_Gromov_completion ((inv f ^^ n) basepoint))\n    \\<longlonglongrightarrow> repelling_fixed_point f", "by (rule Busemann_function_minus_infinity_imp_convergent[of _ _ basepoint])"], ["proof (state)\nthis:\n  (\\<lambda>n. to_Gromov_completion ((inv f ^^ n) basepoint))\n  \\<longlonglongrightarrow> repelling_fixed_point f\n\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          \\<forall>x.\n             extended_Gromov_product_at basepoint x\n              (repelling_fixed_point f)\n             \\<le> ereal K \\<longrightarrow>\n             ereal M\n             \\<le> extended_Gromov_product_at basepoint\n                    ((Gromov_extension f ^^ n) x) (attracting_fixed_point f)", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n. to_Gromov_completion ((inv f ^^ n) basepoint))\n  \\<longlonglongrightarrow> repelling_fixed_point f", "have \"(\\<lambda>n. extended_Gromov_product_at basepoint (to_Gromov_completion (((inv f)^^n) basepoint)) (repelling_fixed_point f)) \\<longlonglongrightarrow> \\<infinity>\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. to_Gromov_completion ((inv f ^^ n) basepoint))\n  \\<longlonglongrightarrow> repelling_fixed_point f\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        extended_Gromov_product_at basepoint\n         (to_Gromov_completion ((inv f ^^ n) basepoint))\n         (repelling_fixed_point f))\n    \\<longlonglongrightarrow> \\<infinity>", "unfolding Gromov_completion_boundary_limit[OF loxodromic_repelling_fixed_point(1)[OF assms]]"], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      extended_Gromov_product_at basepoint\n       (to_Gromov_completion ((inv f ^^ n) basepoint))\n       (repelling_fixed_point f))\n  \\<longlonglongrightarrow> \\<infinity>\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        extended_Gromov_product_at basepoint\n         (to_Gromov_completion ((inv f ^^ n) basepoint))\n         (repelling_fixed_point f))\n    \\<longlonglongrightarrow> \\<infinity>", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      extended_Gromov_product_at basepoint\n       (to_Gromov_completion ((inv f ^^ n) basepoint))\n       (repelling_fixed_point f))\n  \\<longlonglongrightarrow> \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          \\<forall>x.\n             extended_Gromov_product_at basepoint x\n              (repelling_fixed_point f)\n             \\<le> ereal K \\<longrightarrow>\n             ereal M\n             \\<le> extended_Gromov_product_at basepoint\n                    ((Gromov_extension f ^^ n) x) (attracting_fixed_point f)", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n.\n      extended_Gromov_product_at basepoint\n       (to_Gromov_completion ((inv f ^^ n) basepoint))\n       (repelling_fixed_point f))\n  \\<longlonglongrightarrow> \\<infinity>", "obtain Nr where Nr: \"\\<And>n. n \\<ge> Nr \\<Longrightarrow> extended_Gromov_product_at basepoint (to_Gromov_completion (((inv f)^^n) basepoint)) (repelling_fixed_point f) \\<ge> ereal (K + deltaG(TYPE('a)) + 1)\""], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      extended_Gromov_product_at basepoint\n       (to_Gromov_completion ((inv f ^^ n) basepoint))\n       (repelling_fixed_point f))\n  \\<longlonglongrightarrow> \\<infinity>\n\ngoal (1 subgoal):\n 1. (\\<And>Nr.\n        (\\<And>n.\n            Nr \\<le> n \\<Longrightarrow>\n            ereal (K + deltaG TYPE('a) + 1)\n            \\<le> extended_Gromov_product_at basepoint\n                   (to_Gromov_completion ((inv f ^^ n) basepoint))\n                   (repelling_fixed_point f)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding Lim_PInfty"], ["proof (prove)\nusing this:\n  \\<forall>B.\n     \\<exists>N.\n        \\<forall>n\\<ge>N.\n           ereal B\n           \\<le> extended_Gromov_product_at basepoint\n                  (to_Gromov_completion ((inv f ^^ n) basepoint))\n                  (repelling_fixed_point f)\n\ngoal (1 subgoal):\n 1. (\\<And>Nr.\n        (\\<And>n.\n            Nr \\<le> n \\<Longrightarrow>\n            ereal (K + deltaG TYPE('a) + 1)\n            \\<le> extended_Gromov_product_at basepoint\n                   (to_Gromov_completion ((inv f ^^ n) basepoint))\n                   (repelling_fixed_point f)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  Nr \\<le> ?n \\<Longrightarrow>\n  ereal (K + deltaG TYPE('a) + 1)\n  \\<le> extended_Gromov_product_at basepoint\n         (to_Gromov_completion ((inv f ^^ ?n) basepoint))\n         (repelling_fixed_point f)\n\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          \\<forall>x.\n             extended_Gromov_product_at basepoint x\n              (repelling_fixed_point f)\n             \\<le> ereal K \\<longrightarrow>\n             ereal M\n             \\<le> extended_Gromov_product_at basepoint\n                    ((Gromov_extension f ^^ n) x) (attracting_fixed_point f)", "text \\<open>We show that $f^n e$ tends to the attracting fixed point in positive time.\\<close>"], ["proof (state)\nthis:\n  Nr \\<le> ?n \\<Longrightarrow>\n  ereal (K + deltaG TYPE('a) + 1)\n  \\<le> extended_Gromov_product_at basepoint\n         (to_Gromov_completion ((inv f ^^ ?n) basepoint))\n         (repelling_fixed_point f)\n\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          \\<forall>x.\n             extended_Gromov_product_at basepoint x\n              (repelling_fixed_point f)\n             \\<le> ereal K \\<longrightarrow>\n             ereal M\n             \\<le> extended_Gromov_product_at basepoint\n                    ((Gromov_extension f ^^ n) x) (attracting_fixed_point f)", "have \"(\\<lambda>n. ereal (Busemann_function_at (attracting_fixed_point f) ((f ^^ n) basepoint) basepoint)) \\<longlonglongrightarrow> - \\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        ereal\n         (Busemann_function_at (attracting_fixed_point f)\n           ((f ^^ n) basepoint) basepoint))\n    \\<longlonglongrightarrow> - \\<infinity>", "proof (rule tendsto_sandwich[of \"\\<lambda>n. -\\<infinity>\" _ _ \"\\<lambda>n. ereal(real n * additive_strength f (attracting_fixed_point f) + 2 * deltaG(TYPE('a)))\", OF _ always_eventually], auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       Busemann_function_at (attracting_fixed_point f) ((f ^^ x) basepoint)\n        basepoint\n       \\<le> real x * additive_strength f (attracting_fixed_point f) +\n             2 * deltaG TYPE('a)\n 2. (\\<lambda>n.\n        ereal\n         (real n * additive_strength f (attracting_fixed_point f) +\n          2 * deltaG TYPE('a)))\n    \\<longlonglongrightarrow> - \\<infinity>", "fix n"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       Busemann_function_at (attracting_fixed_point f) ((f ^^ x) basepoint)\n        basepoint\n       \\<le> real x * additive_strength f (attracting_fixed_point f) +\n             2 * deltaG TYPE('a)\n 2. (\\<lambda>n.\n        ereal\n         (real n * additive_strength f (attracting_fixed_point f) +\n          2 * deltaG TYPE('a)))\n    \\<longlonglongrightarrow> - \\<infinity>", "show \"Busemann_function_at (attracting_fixed_point f) ((f ^^ n) basepoint) basepoint \\<le> real n * additive_strength f (attracting_fixed_point f) + 2 * deltaG(TYPE('a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Busemann_function_at (attracting_fixed_point f) ((f ^^ n) basepoint)\n     basepoint\n    \\<le> real n * additive_strength f (attracting_fixed_point f) +\n          2 * deltaG TYPE('a)", "using Busemann_function_eq_additive_strength[OF I loxodromic_attracting_fixed_point(2)[OF assms], of n basepoint]"], ["proof (prove)\nusing this:\n  \\<bar>Busemann_function_at (attracting_fixed_point f) ((f ^^ n) basepoint)\n         basepoint -\n        real n * additive_strength f (attracting_fixed_point f)\\<bar>\n  \\<le> 2 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. Busemann_function_at (attracting_fixed_point f) ((f ^^ n) basepoint)\n     basepoint\n    \\<le> real n * additive_strength f (attracting_fixed_point f) +\n          2 * deltaG TYPE('a)", "by auto"], ["proof (state)\nthis:\n  Busemann_function_at (attracting_fixed_point f) ((f ^^ n) basepoint)\n   basepoint\n  \\<le> real n * additive_strength f (attracting_fixed_point f) +\n        2 * deltaG TYPE('a)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        ereal\n         (real n * additive_strength f (attracting_fixed_point f) +\n          2 * deltaG TYPE('a)))\n    \\<longlonglongrightarrow> - \\<infinity>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        ereal\n         (real n * additive_strength f (attracting_fixed_point f) +\n          2 * deltaG TYPE('a)))\n    \\<longlonglongrightarrow> - \\<infinity>", "have \"(\\<lambda>n. ereal (2 * deltaG TYPE('a)) + ereal (real n) * additive_strength f (attracting_fixed_point f)) \\<longlonglongrightarrow> ereal (2 * deltaG (TYPE('a))) + (\\<infinity>) * additive_strength f (attracting_fixed_point f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        ereal (2 * deltaG TYPE('a)) +\n        ereal (real n) *\n        ereal (additive_strength f (attracting_fixed_point f)))\n    \\<longlonglongrightarrow> ereal (2 * deltaG TYPE('a)) +\n                              \\<infinity> *\n                              ereal\n                               (additive_strength f\n                                 (attracting_fixed_point f))", "apply (intro tendsto_intros)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<not> (ereal (2 * deltaG TYPE('a)) = \\<infinity> \\<and>\n            \\<infinity> *\n            ereal (additive_strength f (attracting_fixed_point f)) =\n            - \\<infinity> \\<or>\n            ereal (2 * deltaG TYPE('a)) = - \\<infinity> \\<and>\n            \\<infinity> *\n            ereal (additive_strength f (attracting_fixed_point f)) =\n            \\<infinity>)\n 2. \\<not> (\\<infinity> = 0 \\<and>\n            \\<bar>ereal\n                   (additive_strength f (attracting_fixed_point f))\\<bar> =\n            \\<infinity> \\<or>\n            ereal (additive_strength f (attracting_fixed_point f)) =\n            0 \\<and>\n            \\<bar>\\<infinity>\\<bar> = \\<infinity>)", "using loxodromic_attracting_fixed_point(3)[OF assms]"], ["proof (prove)\nusing this:\n  additive_strength f (attracting_fixed_point f) < 0\n\ngoal (2 subgoals):\n 1. \\<not> (ereal (2 * deltaG TYPE('a)) = \\<infinity> \\<and>\n            \\<infinity> *\n            ereal (additive_strength f (attracting_fixed_point f)) =\n            - \\<infinity> \\<or>\n            ereal (2 * deltaG TYPE('a)) = - \\<infinity> \\<and>\n            \\<infinity> *\n            ereal (additive_strength f (attracting_fixed_point f)) =\n            \\<infinity>)\n 2. \\<not> (\\<infinity> = 0 \\<and>\n            \\<bar>ereal\n                   (additive_strength f (attracting_fixed_point f))\\<bar> =\n            \\<infinity> \\<or>\n            ereal (additive_strength f (attracting_fixed_point f)) =\n            0 \\<and>\n            \\<bar>\\<infinity>\\<bar> = \\<infinity>)", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      ereal (2 * deltaG TYPE('a)) +\n      ereal (real n) *\n      ereal (additive_strength f (attracting_fixed_point f)))\n  \\<longlonglongrightarrow> ereal (2 * deltaG TYPE('a)) +\n                            \\<infinity> *\n                            ereal\n                             (additive_strength f\n                               (attracting_fixed_point f))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        ereal\n         (real n * additive_strength f (attracting_fixed_point f) +\n          2 * deltaG TYPE('a)))\n    \\<longlonglongrightarrow> - \\<infinity>", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n.\n      ereal (2 * deltaG TYPE('a)) +\n      ereal (real n) *\n      ereal (additive_strength f (attracting_fixed_point f)))\n  \\<longlonglongrightarrow> ereal (2 * deltaG TYPE('a)) +\n                            \\<infinity> *\n                            ereal\n                             (additive_strength f\n                               (attracting_fixed_point f))", "show \"(\\<lambda>n. ereal (real n * additive_strength f (attracting_fixed_point f) + 2 * deltaG TYPE('a))) \\<longlonglongrightarrow> - \\<infinity>\""], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      ereal (2 * deltaG TYPE('a)) +\n      ereal (real n) *\n      ereal (additive_strength f (attracting_fixed_point f)))\n  \\<longlonglongrightarrow> ereal (2 * deltaG TYPE('a)) +\n                            \\<infinity> *\n                            ereal\n                             (additive_strength f\n                               (attracting_fixed_point f))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        ereal\n         (real n * additive_strength f (attracting_fixed_point f) +\n          2 * deltaG TYPE('a)))\n    \\<longlonglongrightarrow> - \\<infinity>", "using loxodromic_attracting_fixed_point(3)[OF assms]"], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      ereal (2 * deltaG TYPE('a)) +\n      ereal (real n) *\n      ereal (additive_strength f (attracting_fixed_point f)))\n  \\<longlonglongrightarrow> ereal (2 * deltaG TYPE('a)) +\n                            \\<infinity> *\n                            ereal\n                             (additive_strength f\n                               (attracting_fixed_point f))\n  additive_strength f (attracting_fixed_point f) < 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        ereal\n         (real n * additive_strength f (attracting_fixed_point f) +\n          2 * deltaG TYPE('a)))\n    \\<longlonglongrightarrow> - \\<infinity>", "by (auto simp add: algebra_simps)"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      ereal\n       (real n * additive_strength f (attracting_fixed_point f) +\n        2 * deltaG TYPE('a)))\n  \\<longlonglongrightarrow> - \\<infinity>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      ereal\n       (Busemann_function_at (attracting_fixed_point f) ((f ^^ n) basepoint)\n         basepoint))\n  \\<longlonglongrightarrow> - \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          \\<forall>x.\n             extended_Gromov_product_at basepoint x\n              (repelling_fixed_point f)\n             \\<le> ereal K \\<longrightarrow>\n             ereal M\n             \\<le> extended_Gromov_product_at basepoint\n                    ((Gromov_extension f ^^ n) x) (attracting_fixed_point f)", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n.\n      ereal\n       (Busemann_function_at (attracting_fixed_point f) ((f ^^ n) basepoint)\n         basepoint))\n  \\<longlonglongrightarrow> - \\<infinity>", "have *: \"(\\<lambda>n. to_Gromov_completion (((f)^^n) basepoint)) \\<longlonglongrightarrow> attracting_fixed_point f\""], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      ereal\n       (Busemann_function_at (attracting_fixed_point f) ((f ^^ n) basepoint)\n         basepoint))\n  \\<longlonglongrightarrow> - \\<infinity>\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. to_Gromov_completion ((f ^^ n) basepoint))\n    \\<longlonglongrightarrow> attracting_fixed_point f", "by (rule Busemann_function_minus_infinity_imp_convergent[of _ _ basepoint])"], ["proof (state)\nthis:\n  (\\<lambda>n. to_Gromov_completion ((f ^^ n) basepoint))\n  \\<longlonglongrightarrow> attracting_fixed_point f\n\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          \\<forall>x.\n             extended_Gromov_product_at basepoint x\n              (repelling_fixed_point f)\n             \\<le> ereal K \\<longrightarrow>\n             ereal M\n             \\<le> extended_Gromov_product_at basepoint\n                    ((Gromov_extension f ^^ n) x) (attracting_fixed_point f)", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n. to_Gromov_completion ((f ^^ n) basepoint))\n  \\<longlonglongrightarrow> attracting_fixed_point f", "have \"(\\<lambda>n. extended_Gromov_product_at basepoint (to_Gromov_completion (((f)^^n) basepoint)) (attracting_fixed_point f)) \\<longlonglongrightarrow> \\<infinity>\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. to_Gromov_completion ((f ^^ n) basepoint))\n  \\<longlonglongrightarrow> attracting_fixed_point f\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        extended_Gromov_product_at basepoint\n         (to_Gromov_completion ((f ^^ n) basepoint))\n         (attracting_fixed_point f))\n    \\<longlonglongrightarrow> \\<infinity>", "unfolding Gromov_completion_boundary_limit[OF loxodromic_attracting_fixed_point(1)[OF assms]]"], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      extended_Gromov_product_at basepoint\n       (to_Gromov_completion ((f ^^ n) basepoint))\n       (attracting_fixed_point f))\n  \\<longlonglongrightarrow> \\<infinity>\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        extended_Gromov_product_at basepoint\n         (to_Gromov_completion ((f ^^ n) basepoint))\n         (attracting_fixed_point f))\n    \\<longlonglongrightarrow> \\<infinity>", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      extended_Gromov_product_at basepoint\n       (to_Gromov_completion ((f ^^ n) basepoint))\n       (attracting_fixed_point f))\n  \\<longlonglongrightarrow> \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          \\<forall>x.\n             extended_Gromov_product_at basepoint x\n              (repelling_fixed_point f)\n             \\<le> ereal K \\<longrightarrow>\n             ereal M\n             \\<le> extended_Gromov_product_at basepoint\n                    ((Gromov_extension f ^^ n) x) (attracting_fixed_point f)", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n.\n      extended_Gromov_product_at basepoint\n       (to_Gromov_completion ((f ^^ n) basepoint))\n       (attracting_fixed_point f))\n  \\<longlonglongrightarrow> \\<infinity>", "obtain Na where Na: \"\\<And>n. n \\<ge> Na \\<Longrightarrow> extended_Gromov_product_at basepoint (to_Gromov_completion (((f)^^n) basepoint)) (attracting_fixed_point f) \\<ge> ereal (M + deltaG(TYPE('a)))\""], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      extended_Gromov_product_at basepoint\n       (to_Gromov_completion ((f ^^ n) basepoint))\n       (attracting_fixed_point f))\n  \\<longlonglongrightarrow> \\<infinity>\n\ngoal (1 subgoal):\n 1. (\\<And>Na.\n        (\\<And>n.\n            Na \\<le> n \\<Longrightarrow>\n            ereal (M + deltaG TYPE('a))\n            \\<le> extended_Gromov_product_at basepoint\n                   (to_Gromov_completion ((f ^^ n) basepoint))\n                   (attracting_fixed_point f)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding Lim_PInfty"], ["proof (prove)\nusing this:\n  \\<forall>B.\n     \\<exists>N.\n        \\<forall>n\\<ge>N.\n           ereal B\n           \\<le> extended_Gromov_product_at basepoint\n                  (to_Gromov_completion ((f ^^ n) basepoint))\n                  (attracting_fixed_point f)\n\ngoal (1 subgoal):\n 1. (\\<And>Na.\n        (\\<And>n.\n            Na \\<le> n \\<Longrightarrow>\n            ereal (M + deltaG TYPE('a))\n            \\<le> extended_Gromov_product_at basepoint\n                   (to_Gromov_completion ((f ^^ n) basepoint))\n                   (attracting_fixed_point f)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  Na \\<le> ?n \\<Longrightarrow>\n  ereal (M + deltaG TYPE('a))\n  \\<le> extended_Gromov_product_at basepoint\n         (to_Gromov_completion ((f ^^ ?n) basepoint))\n         (attracting_fixed_point f)\n\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          \\<forall>x.\n             extended_Gromov_product_at basepoint x\n              (repelling_fixed_point f)\n             \\<le> ereal K \\<longrightarrow>\n             ereal M\n             \\<le> extended_Gromov_product_at basepoint\n                    ((Gromov_extension f ^^ n) x) (attracting_fixed_point f)", "text \\<open>We show that the distance between $e$ and $f^n e$ tends to infinity.\\<close>"], ["proof (state)\nthis:\n  Na \\<le> ?n \\<Longrightarrow>\n  ereal (M + deltaG TYPE('a))\n  \\<le> extended_Gromov_product_at basepoint\n         (to_Gromov_completion ((f ^^ ?n) basepoint))\n         (attracting_fixed_point f)\n\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          \\<forall>x.\n             extended_Gromov_product_at basepoint x\n              (repelling_fixed_point f)\n             \\<le> ereal K \\<longrightarrow>\n             ereal M\n             \\<le> extended_Gromov_product_at basepoint\n                    ((Gromov_extension f ^^ n) x) (attracting_fixed_point f)", "have \"(\\<lambda>n. extended_Gromov_distance (to_Gromov_completion basepoint) (to_Gromov_completion ((f^^n) basepoint))) \\<longlonglongrightarrow>\n          extended_Gromov_distance (to_Gromov_completion basepoint) (attracting_fixed_point f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        extended_Gromov_distance (to_Gromov_completion basepoint)\n         (to_Gromov_completion ((f ^^ n) basepoint)))\n    \\<longlonglongrightarrow> extended_Gromov_distance\n                               (to_Gromov_completion basepoint)\n                               (attracting_fixed_point f)", "using * extended_Gromov_distance_continuous[of \"to_Gromov_completion basepoint\"]"], ["proof (prove)\nusing this:\n  (\\<lambda>n. to_Gromov_completion ((f ^^ n) basepoint))\n  \\<longlonglongrightarrow> attracting_fixed_point f\n  continuous_on UNIV\n   (extended_Gromov_distance (to_Gromov_completion basepoint))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        extended_Gromov_distance (to_Gromov_completion basepoint)\n         (to_Gromov_completion ((f ^^ n) basepoint)))\n    \\<longlonglongrightarrow> extended_Gromov_distance\n                               (to_Gromov_completion basepoint)\n                               (attracting_fixed_point f)", "by (metis UNIV_I continuous_on filterlim_compose tendsto_at_iff_tendsto_nhds)"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      extended_Gromov_distance (to_Gromov_completion basepoint)\n       (to_Gromov_completion ((f ^^ n) basepoint)))\n  \\<longlonglongrightarrow> extended_Gromov_distance\n                             (to_Gromov_completion basepoint)\n                             (attracting_fixed_point f)\n\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          \\<forall>x.\n             extended_Gromov_product_at basepoint x\n              (repelling_fixed_point f)\n             \\<le> ereal K \\<longrightarrow>\n             ereal M\n             \\<le> extended_Gromov_product_at basepoint\n                    ((Gromov_extension f ^^ n) x) (attracting_fixed_point f)", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n.\n      extended_Gromov_distance (to_Gromov_completion basepoint)\n       (to_Gromov_completion ((f ^^ n) basepoint)))\n  \\<longlonglongrightarrow> extended_Gromov_distance\n                             (to_Gromov_completion basepoint)\n                             (attracting_fixed_point f)", "have \"(\\<lambda>n. extended_Gromov_distance (to_Gromov_completion basepoint) (to_Gromov_completion ((f^^n) basepoint))) \\<longlonglongrightarrow> \\<infinity>\""], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      extended_Gromov_distance (to_Gromov_completion basepoint)\n       (to_Gromov_completion ((f ^^ n) basepoint)))\n  \\<longlonglongrightarrow> extended_Gromov_distance\n                             (to_Gromov_completion basepoint)\n                             (attracting_fixed_point f)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        extended_Gromov_distance (to_Gromov_completion basepoint)\n         (to_Gromov_completion ((f ^^ n) basepoint)))\n    \\<longlonglongrightarrow> \\<infinity>", "using loxodromic_attracting_fixed_point(1)[OF assms]"], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      extended_Gromov_distance (to_Gromov_completion basepoint)\n       (to_Gromov_completion ((f ^^ n) basepoint)))\n  \\<longlonglongrightarrow> extended_Gromov_distance\n                             (to_Gromov_completion basepoint)\n                             (attracting_fixed_point f)\n  attracting_fixed_point f \\<in> Gromov_boundary\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        extended_Gromov_distance (to_Gromov_completion basepoint)\n         (to_Gromov_completion ((f ^^ n) basepoint)))\n    \\<longlonglongrightarrow> \\<infinity>", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      extended_Gromov_distance (to_Gromov_completion basepoint)\n       (to_Gromov_completion ((f ^^ n) basepoint)))\n  \\<longlonglongrightarrow> \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          \\<forall>x.\n             extended_Gromov_product_at basepoint x\n              (repelling_fixed_point f)\n             \\<le> ereal K \\<longrightarrow>\n             ereal M\n             \\<le> extended_Gromov_product_at basepoint\n                    ((Gromov_extension f ^^ n) x) (attracting_fixed_point f)", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n.\n      extended_Gromov_distance (to_Gromov_completion basepoint)\n       (to_Gromov_completion ((f ^^ n) basepoint)))\n  \\<longlonglongrightarrow> \\<infinity>", "obtain Nd where Nd: \"\\<And>n. n \\<ge> Nd \\<Longrightarrow> dist basepoint ((f^^n) basepoint) \\<ge> M + K + 3 * deltaG(TYPE('a))\""], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      extended_Gromov_distance (to_Gromov_completion basepoint)\n       (to_Gromov_completion ((f ^^ n) basepoint)))\n  \\<longlonglongrightarrow> \\<infinity>\n\ngoal (1 subgoal):\n 1. (\\<And>Nd.\n        (\\<And>n.\n            Nd \\<le> n \\<Longrightarrow>\n            M + K + 3 * deltaG TYPE('a)\n            \\<le> dist basepoint ((f ^^ n) basepoint)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding Lim_PInfty"], ["proof (prove)\nusing this:\n  \\<forall>B.\n     \\<exists>N.\n        \\<forall>n\\<ge>N.\n           ereal B\n           \\<le> extended_Gromov_distance (to_Gromov_completion basepoint)\n                  (to_Gromov_completion ((f ^^ n) basepoint))\n\ngoal (1 subgoal):\n 1. (\\<And>Nd.\n        (\\<And>n.\n            Nd \\<le> n \\<Longrightarrow>\n            M + K + 3 * deltaG TYPE('a)\n            \\<le> dist basepoint ((f ^^ n) basepoint)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  Nd \\<le> ?n \\<Longrightarrow>\n  M + K + 3 * deltaG TYPE('a) \\<le> dist basepoint ((f ^^ ?n) basepoint)\n\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          \\<forall>x.\n             extended_Gromov_product_at basepoint x\n              (repelling_fixed_point f)\n             \\<le> ereal K \\<longrightarrow>\n             ereal M\n             \\<le> extended_Gromov_product_at basepoint\n                    ((Gromov_extension f ^^ n) x) (attracting_fixed_point f)", "text \\<open>Now, if $n$ is large enough so that all the convergences to infinity above are almost\n  realized, we show that a point $x$ which is not too close to $\\xi^-$ is sent by $f^n$ to a point\n  close to $\\xi^+$, uniformly.\\<close>"], ["proof (state)\nthis:\n  Nd \\<le> ?n \\<Longrightarrow>\n  M + K + 3 * deltaG TYPE('a) \\<le> dist basepoint ((f ^^ ?n) basepoint)\n\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          \\<forall>x.\n             extended_Gromov_product_at basepoint x\n              (repelling_fixed_point f)\n             \\<le> ereal K \\<longrightarrow>\n             ereal M\n             \\<le> extended_Gromov_product_at basepoint\n                    ((Gromov_extension f ^^ n) x) (attracting_fixed_point f)", "define N where \"N = Nr + Na + Nd\""], ["proof (state)\nthis:\n  N = Nr + Na + Nd\n\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          \\<forall>x.\n             extended_Gromov_product_at basepoint x\n              (repelling_fixed_point f)\n             \\<le> ereal K \\<longrightarrow>\n             ereal M\n             \\<le> extended_Gromov_product_at basepoint\n                    ((Gromov_extension f ^^ n) x) (attracting_fixed_point f)", "have \"extended_Gromov_product_at basepoint (((Gromov_extension f)^^n) x) (attracting_fixed_point f) \\<ge> ereal M\" if H: \"extended_Gromov_product_at basepoint x (repelling_fixed_point f) \\<le> K\" \"n \\<ge> N\" for n x"], ["proof (prove)\ngoal (1 subgoal):\n 1. ereal M\n    \\<le> extended_Gromov_product_at basepoint ((Gromov_extension f ^^ n) x)\n           (attracting_fixed_point f)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ereal M\n    \\<le> extended_Gromov_product_at basepoint ((Gromov_extension f ^^ n) x)\n           (attracting_fixed_point f)", "have n: \"n \\<ge> Nr\" \"n \\<ge> Na\" \"n \\<ge> Nd\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Nr \\<le> n &&& Na \\<le> n &&& Nd \\<le> n", "using that"], ["proof (prove)\nusing this:\n  extended_Gromov_product_at basepoint x (repelling_fixed_point f)\n  \\<le> ereal K\n  N \\<le> n\n\ngoal (1 subgoal):\n 1. Nr \\<le> n &&& Na \\<le> n &&& Nd \\<le> n", "unfolding N_def"], ["proof (prove)\nusing this:\n  extended_Gromov_product_at basepoint x (repelling_fixed_point f)\n  \\<le> ereal K\n  Nr + Na + Nd \\<le> n\n\ngoal (1 subgoal):\n 1. Nr \\<le> n &&& Na \\<le> n &&& Nd \\<le> n", "by auto"], ["proof (state)\nthis:\n  Nr \\<le> n\n  Na \\<le> n\n  Nd \\<le> n\n\ngoal (1 subgoal):\n 1. ereal M\n    \\<le> extended_Gromov_product_at basepoint ((Gromov_extension f ^^ n) x)\n           (attracting_fixed_point f)", "have \"min (extended_Gromov_product_at basepoint x (to_Gromov_completion (((inv f)^^n) basepoint)))\n              (extended_Gromov_product_at basepoint (to_Gromov_completion (((inv f)^^n) basepoint)) (repelling_fixed_point f))\n          \\<le> extended_Gromov_product_at basepoint x (repelling_fixed_point f) + deltaG(TYPE('a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min (extended_Gromov_product_at basepoint x\n          (to_Gromov_completion ((inv f ^^ n) basepoint)))\n     (extended_Gromov_product_at basepoint\n       (to_Gromov_completion ((inv f ^^ n) basepoint))\n       (repelling_fixed_point f))\n    \\<le> extended_Gromov_product_at basepoint x (repelling_fixed_point f) +\n          ereal (deltaG TYPE('a))", "by (intro mono_intros)"], ["proof (state)\nthis:\n  min (extended_Gromov_product_at basepoint x\n        (to_Gromov_completion ((inv f ^^ n) basepoint)))\n   (extended_Gromov_product_at basepoint\n     (to_Gromov_completion ((inv f ^^ n) basepoint))\n     (repelling_fixed_point f))\n  \\<le> extended_Gromov_product_at basepoint x (repelling_fixed_point f) +\n        ereal (deltaG TYPE('a))\n\ngoal (1 subgoal):\n 1. ereal M\n    \\<le> extended_Gromov_product_at basepoint ((Gromov_extension f ^^ n) x)\n           (attracting_fixed_point f)", "also"], ["proof (state)\nthis:\n  min (extended_Gromov_product_at basepoint x\n        (to_Gromov_completion ((inv f ^^ n) basepoint)))\n   (extended_Gromov_product_at basepoint\n     (to_Gromov_completion ((inv f ^^ n) basepoint))\n     (repelling_fixed_point f))\n  \\<le> extended_Gromov_product_at basepoint x (repelling_fixed_point f) +\n        ereal (deltaG TYPE('a))\n\ngoal (1 subgoal):\n 1. ereal M\n    \\<le> extended_Gromov_product_at basepoint ((Gromov_extension f ^^ n) x)\n           (attracting_fixed_point f)", "have \"... \\<le> ereal K + deltaG(TYPE('a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. extended_Gromov_product_at basepoint x (repelling_fixed_point f) +\n    ereal (deltaG TYPE('a))\n    \\<le> ereal K + ereal (deltaG TYPE('a))", "apply (intro mono_intros)"], ["proof (prove)\ngoal (1 subgoal):\n 1. extended_Gromov_product_at basepoint x (repelling_fixed_point f)\n    \\<le> ereal K", "using H"], ["proof (prove)\nusing this:\n  extended_Gromov_product_at basepoint x (repelling_fixed_point f)\n  \\<le> ereal K\n  N \\<le> n\n\ngoal (1 subgoal):\n 1. extended_Gromov_product_at basepoint x (repelling_fixed_point f)\n    \\<le> ereal K", "by auto"], ["proof (state)\nthis:\n  extended_Gromov_product_at basepoint x (repelling_fixed_point f) +\n  ereal (deltaG TYPE('a))\n  \\<le> ereal K + ereal (deltaG TYPE('a))\n\ngoal (1 subgoal):\n 1. ereal M\n    \\<le> extended_Gromov_product_at basepoint ((Gromov_extension f ^^ n) x)\n           (attracting_fixed_point f)", "finally"], ["proof (chain)\npicking this:\n  min (extended_Gromov_product_at basepoint x\n        (to_Gromov_completion ((inv f ^^ n) basepoint)))\n   (extended_Gromov_product_at basepoint\n     (to_Gromov_completion ((inv f ^^ n) basepoint))\n     (repelling_fixed_point f))\n  \\<le> ereal K + ereal (deltaG TYPE('a))", "have \"min (extended_Gromov_product_at basepoint x (to_Gromov_completion (((inv f)^^n) basepoint)))\n              (extended_Gromov_product_at basepoint (to_Gromov_completion (((inv f)^^n) basepoint)) (repelling_fixed_point f))\n                \\<le> ereal K + deltaG(TYPE('a))\""], ["proof (prove)\nusing this:\n  min (extended_Gromov_product_at basepoint x\n        (to_Gromov_completion ((inv f ^^ n) basepoint)))\n   (extended_Gromov_product_at basepoint\n     (to_Gromov_completion ((inv f ^^ n) basepoint))\n     (repelling_fixed_point f))\n  \\<le> ereal K + ereal (deltaG TYPE('a))\n\ngoal (1 subgoal):\n 1. min (extended_Gromov_product_at basepoint x\n          (to_Gromov_completion ((inv f ^^ n) basepoint)))\n     (extended_Gromov_product_at basepoint\n       (to_Gromov_completion ((inv f ^^ n) basepoint))\n       (repelling_fixed_point f))\n    \\<le> ereal K + ereal (deltaG TYPE('a))", "by simp"], ["proof (state)\nthis:\n  min (extended_Gromov_product_at basepoint x\n        (to_Gromov_completion ((inv f ^^ n) basepoint)))\n   (extended_Gromov_product_at basepoint\n     (to_Gromov_completion ((inv f ^^ n) basepoint))\n     (repelling_fixed_point f))\n  \\<le> ereal K + ereal (deltaG TYPE('a))\n\ngoal (1 subgoal):\n 1. ereal M\n    \\<le> extended_Gromov_product_at basepoint ((Gromov_extension f ^^ n) x)\n           (attracting_fixed_point f)", "moreover"], ["proof (state)\nthis:\n  min (extended_Gromov_product_at basepoint x\n        (to_Gromov_completion ((inv f ^^ n) basepoint)))\n   (extended_Gromov_product_at basepoint\n     (to_Gromov_completion ((inv f ^^ n) basepoint))\n     (repelling_fixed_point f))\n  \\<le> ereal K + ereal (deltaG TYPE('a))\n\ngoal (1 subgoal):\n 1. ereal M\n    \\<le> extended_Gromov_product_at basepoint ((Gromov_extension f ^^ n) x)\n           (attracting_fixed_point f)", "have \"extended_Gromov_product_at basepoint (to_Gromov_completion (((inv f)^^n) basepoint)) (repelling_fixed_point f) > ereal K + deltaG(TYPE('a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ereal K + ereal (deltaG TYPE('a))\n    < extended_Gromov_product_at basepoint\n       (to_Gromov_completion ((inv f ^^ n) basepoint))\n       (repelling_fixed_point f)", "using Nr[OF n(1)] ereal_le_less"], ["proof (prove)\nusing this:\n  ereal (K + deltaG TYPE('a) + 1)\n  \\<le> extended_Gromov_product_at basepoint\n         (to_Gromov_completion ((inv f ^^ n) basepoint))\n         (repelling_fixed_point f)\n  \\<lbrakk>ereal ?y \\<le> ?a; ?x < ?y\\<rbrakk>\n  \\<Longrightarrow> ereal ?x < ?a\n\ngoal (1 subgoal):\n 1. ereal K + ereal (deltaG TYPE('a))\n    < extended_Gromov_product_at basepoint\n       (to_Gromov_completion ((inv f ^^ n) basepoint))\n       (repelling_fixed_point f)", "by auto"], ["proof (state)\nthis:\n  ereal K + ereal (deltaG TYPE('a))\n  < extended_Gromov_product_at basepoint\n     (to_Gromov_completion ((inv f ^^ n) basepoint))\n     (repelling_fixed_point f)\n\ngoal (1 subgoal):\n 1. ereal M\n    \\<le> extended_Gromov_product_at basepoint ((Gromov_extension f ^^ n) x)\n           (attracting_fixed_point f)", "ultimately"], ["proof (chain)\npicking this:\n  min (extended_Gromov_product_at basepoint x\n        (to_Gromov_completion ((inv f ^^ n) basepoint)))\n   (extended_Gromov_product_at basepoint\n     (to_Gromov_completion ((inv f ^^ n) basepoint))\n     (repelling_fixed_point f))\n  \\<le> ereal K + ereal (deltaG TYPE('a))\n  ereal K + ereal (deltaG TYPE('a))\n  < extended_Gromov_product_at basepoint\n     (to_Gromov_completion ((inv f ^^ n) basepoint))\n     (repelling_fixed_point f)", "have A: \"extended_Gromov_product_at basepoint x (to_Gromov_completion (((inv f)^^n) basepoint)) \\<le> ereal K + deltaG(TYPE('a))\""], ["proof (prove)\nusing this:\n  min (extended_Gromov_product_at basepoint x\n        (to_Gromov_completion ((inv f ^^ n) basepoint)))\n   (extended_Gromov_product_at basepoint\n     (to_Gromov_completion ((inv f ^^ n) basepoint))\n     (repelling_fixed_point f))\n  \\<le> ereal K + ereal (deltaG TYPE('a))\n  ereal K + ereal (deltaG TYPE('a))\n  < extended_Gromov_product_at basepoint\n     (to_Gromov_completion ((inv f ^^ n) basepoint))\n     (repelling_fixed_point f)\n\ngoal (1 subgoal):\n 1. extended_Gromov_product_at basepoint x\n     (to_Gromov_completion ((inv f ^^ n) basepoint))\n    \\<le> ereal K + ereal (deltaG TYPE('a))", "using not_le"], ["proof (prove)\nusing this:\n  min (extended_Gromov_product_at basepoint x\n        (to_Gromov_completion ((inv f ^^ n) basepoint)))\n   (extended_Gromov_product_at basepoint\n     (to_Gromov_completion ((inv f ^^ n) basepoint))\n     (repelling_fixed_point f))\n  \\<le> ereal K + ereal (deltaG TYPE('a))\n  ereal K + ereal (deltaG TYPE('a))\n  < extended_Gromov_product_at basepoint\n     (to_Gromov_completion ((inv f ^^ n) basepoint))\n     (repelling_fixed_point f)\n  (\\<not> ?x \\<le> ?y) = (?y < ?x)\n\ngoal (1 subgoal):\n 1. extended_Gromov_product_at basepoint x\n     (to_Gromov_completion ((inv f ^^ n) basepoint))\n    \\<le> ereal K + ereal (deltaG TYPE('a))", "by fastforce"], ["proof (state)\nthis:\n  extended_Gromov_product_at basepoint x\n   (to_Gromov_completion ((inv f ^^ n) basepoint))\n  \\<le> ereal K + ereal (deltaG TYPE('a))\n\ngoal (1 subgoal):\n 1. ereal M\n    \\<le> extended_Gromov_product_at basepoint ((Gromov_extension f ^^ n) x)\n           (attracting_fixed_point f)", "have *: \"((inv f)^^n) ((f^^n) z) = z\" for z"], ["proof (prove)\ngoal (1 subgoal):\n 1. (inv f ^^ n) ((f ^^ n) z) = z", "by (metis I bij_is_inj inj_fn inv_f_f inv_fn isometry_inverse(2))"], ["proof (state)\nthis:\n  (inv f ^^ n) ((f ^^ n) ?z) = ?z\n\ngoal (1 subgoal):\n 1. ereal M\n    \\<le> extended_Gromov_product_at basepoint ((Gromov_extension f ^^ n) x)\n           (attracting_fixed_point f)", "have **: \"x = Gromov_extension ((inv f)^^n) (Gromov_extension (f^^n) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = Gromov_extension (inv f ^^ n) (Gromov_extension (f ^^ n) x)", "using Gromov_extension_isometry_composition[OF isometry_iterates[OF I] isometry_iterates[OF isometry_inverse(1)[OF I]], of n n]"], ["proof (prove)\nusing this:\n  Gromov_extension (inv f ^^ n \\<circ> f ^^ n) =\n  Gromov_extension (inv f ^^ n) \\<circ> Gromov_extension (f ^^ n)\n\ngoal (1 subgoal):\n 1. x = Gromov_extension (inv f ^^ n) (Gromov_extension (f ^^ n) x)", "unfolding comp_def *"], ["proof (prove)\nusing this:\n  Gromov_extension (\\<lambda>x. x) =\n  (\\<lambda>x. Gromov_extension (inv f ^^ n) (Gromov_extension (f ^^ n) x))\n\ngoal (1 subgoal):\n 1. x = Gromov_extension (inv f ^^ n) (Gromov_extension (f ^^ n) x)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x) =\n    (\\<lambda>x.\n        Gromov_extension (inv f ^^ n)\n         (Gromov_extension (f ^^ n) x)) \\<Longrightarrow>\n    x = Gromov_extension (inv f ^^ n) (Gromov_extension (f ^^ n) x)", "by meson"], ["proof (state)\nthis:\n  x = Gromov_extension (inv f ^^ n) (Gromov_extension (f ^^ n) x)\n\ngoal (1 subgoal):\n 1. ereal M\n    \\<le> extended_Gromov_product_at basepoint ((Gromov_extension f ^^ n) x)\n           (attracting_fixed_point f)", "have \"extended_Gromov_product_at (((inv f)^^n) ((f^^n) basepoint)) (Gromov_extension ((inv f)^^n) (Gromov_extension (f^^n) x)) (Gromov_extension (((inv f)^^n)) (to_Gromov_completion basepoint)) \\<le> ereal K + deltaG(TYPE('a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. extended_Gromov_product_at ((inv f ^^ n) ((f ^^ n) basepoint))\n     (Gromov_extension (inv f ^^ n) (Gromov_extension (f ^^ n) x))\n     (Gromov_extension (inv f ^^ n) (to_Gromov_completion basepoint))\n    \\<le> ereal K + ereal (deltaG TYPE('a))", "using A"], ["proof (prove)\nusing this:\n  extended_Gromov_product_at basepoint x\n   (to_Gromov_completion ((inv f ^^ n) basepoint))\n  \\<le> ereal K + ereal (deltaG TYPE('a))\n\ngoal (1 subgoal):\n 1. extended_Gromov_product_at ((inv f ^^ n) ((f ^^ n) basepoint))\n     (Gromov_extension (inv f ^^ n) (Gromov_extension (f ^^ n) x))\n     (Gromov_extension (inv f ^^ n) (to_Gromov_completion basepoint))\n    \\<le> ereal K + ereal (deltaG TYPE('a))", "by (simp add: * **[symmetric])"], ["proof (state)\nthis:\n  extended_Gromov_product_at ((inv f ^^ n) ((f ^^ n) basepoint))\n   (Gromov_extension (inv f ^^ n) (Gromov_extension (f ^^ n) x))\n   (Gromov_extension (inv f ^^ n) (to_Gromov_completion basepoint))\n  \\<le> ereal K + ereal (deltaG TYPE('a))\n\ngoal (1 subgoal):\n 1. ereal M\n    \\<le> extended_Gromov_product_at basepoint ((Gromov_extension f ^^ n) x)\n           (attracting_fixed_point f)", "then"], ["proof (chain)\npicking this:\n  extended_Gromov_product_at ((inv f ^^ n) ((f ^^ n) basepoint))\n   (Gromov_extension (inv f ^^ n) (Gromov_extension (f ^^ n) x))\n   (Gromov_extension (inv f ^^ n) (to_Gromov_completion basepoint))\n  \\<le> ereal K + ereal (deltaG TYPE('a))", "have B: \"extended_Gromov_product_at ((f^^n) basepoint) (Gromov_extension (f^^n) x) (to_Gromov_completion basepoint) \\<le> ereal K + deltaG(TYPE('a))\""], ["proof (prove)\nusing this:\n  extended_Gromov_product_at ((inv f ^^ n) ((f ^^ n) basepoint))\n   (Gromov_extension (inv f ^^ n) (Gromov_extension (f ^^ n) x))\n   (Gromov_extension (inv f ^^ n) (to_Gromov_completion basepoint))\n  \\<le> ereal K + ereal (deltaG TYPE('a))\n\ngoal (1 subgoal):\n 1. extended_Gromov_product_at ((f ^^ n) basepoint)\n     (Gromov_extension (f ^^ n) x) (to_Gromov_completion basepoint)\n    \\<le> ereal K + ereal (deltaG TYPE('a))", "unfolding Gromov_extension_preserves_extended_Gromov_product[OF isometry_iterates[OF isometry_inverse(1)[OF I]]]"], ["proof (prove)\nusing this:\n  extended_Gromov_product_at ((f ^^ n) basepoint)\n   (Gromov_extension (f ^^ n) x) (to_Gromov_completion basepoint)\n  \\<le> ereal K + ereal (deltaG TYPE('a))\n\ngoal (1 subgoal):\n 1. extended_Gromov_product_at ((f ^^ n) basepoint)\n     (Gromov_extension (f ^^ n) x) (to_Gromov_completion basepoint)\n    \\<le> ereal K + ereal (deltaG TYPE('a))", "by simp"], ["proof (state)\nthis:\n  extended_Gromov_product_at ((f ^^ n) basepoint)\n   (Gromov_extension (f ^^ n) x) (to_Gromov_completion basepoint)\n  \\<le> ereal K + ereal (deltaG TYPE('a))\n\ngoal (1 subgoal):\n 1. ereal M\n    \\<le> extended_Gromov_product_at basepoint ((Gromov_extension f ^^ n) x)\n           (attracting_fixed_point f)", "have \"dist basepoint ((f^^n) basepoint) - deltaG(TYPE('a)) \\<le>\n        extended_Gromov_product_at ((f^^n) basepoint) (Gromov_extension (f^^n) x) (to_Gromov_completion basepoint) + extended_Gromov_product_at basepoint (Gromov_extension (f^^n) x) (to_Gromov_completion ((f^^n) basepoint))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ereal (dist basepoint ((f ^^ n) basepoint) - deltaG TYPE('a))\n    \\<le> extended_Gromov_product_at ((f ^^ n) basepoint)\n           (Gromov_extension (f ^^ n) x) (to_Gromov_completion basepoint) +\n          extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n           (to_Gromov_completion ((f ^^ n) basepoint))", "using extended_Gromov_product_add_ge[of basepoint \"(f^^n) basepoint\" \"Gromov_extension (f^^n) x\"]"], ["proof (prove)\nusing this:\n  ereal (dist basepoint ((f ^^ n) basepoint) - deltaG TYPE('a))\n  \\<le> extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n         (to_Gromov_completion ((f ^^ n) basepoint)) +\n        extended_Gromov_product_at ((f ^^ n) basepoint)\n         (Gromov_extension (f ^^ n) x) (to_Gromov_completion basepoint)\n\ngoal (1 subgoal):\n 1. ereal (dist basepoint ((f ^^ n) basepoint) - deltaG TYPE('a))\n    \\<le> extended_Gromov_product_at ((f ^^ n) basepoint)\n           (Gromov_extension (f ^^ n) x) (to_Gromov_completion basepoint) +\n          extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n           (to_Gromov_completion ((f ^^ n) basepoint))", "by (auto simp add: algebra_simps)"], ["proof (state)\nthis:\n  ereal (dist basepoint ((f ^^ n) basepoint) - deltaG TYPE('a))\n  \\<le> extended_Gromov_product_at ((f ^^ n) basepoint)\n         (Gromov_extension (f ^^ n) x) (to_Gromov_completion basepoint) +\n        extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n         (to_Gromov_completion ((f ^^ n) basepoint))\n\ngoal (1 subgoal):\n 1. ereal M\n    \\<le> extended_Gromov_product_at basepoint ((Gromov_extension f ^^ n) x)\n           (attracting_fixed_point f)", "also"], ["proof (state)\nthis:\n  ereal (dist basepoint ((f ^^ n) basepoint) - deltaG TYPE('a))\n  \\<le> extended_Gromov_product_at ((f ^^ n) basepoint)\n         (Gromov_extension (f ^^ n) x) (to_Gromov_completion basepoint) +\n        extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n         (to_Gromov_completion ((f ^^ n) basepoint))\n\ngoal (1 subgoal):\n 1. ereal M\n    \\<le> extended_Gromov_product_at basepoint ((Gromov_extension f ^^ n) x)\n           (attracting_fixed_point f)", "have \"... \\<le> (ereal K + deltaG(TYPE('a))) + extended_Gromov_product_at basepoint (Gromov_extension (f^^n) x) (to_Gromov_completion ((f^^n) basepoint))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. extended_Gromov_product_at ((f ^^ n) basepoint)\n     (Gromov_extension (f ^^ n) x) (to_Gromov_completion basepoint) +\n    extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n     (to_Gromov_completion ((f ^^ n) basepoint))\n    \\<le> ereal K + ereal (deltaG TYPE('a)) +\n          extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n           (to_Gromov_completion ((f ^^ n) basepoint))", "by (intro mono_intros B)"], ["proof (state)\nthis:\n  extended_Gromov_product_at ((f ^^ n) basepoint)\n   (Gromov_extension (f ^^ n) x) (to_Gromov_completion basepoint) +\n  extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n   (to_Gromov_completion ((f ^^ n) basepoint))\n  \\<le> ereal K + ereal (deltaG TYPE('a)) +\n        extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n         (to_Gromov_completion ((f ^^ n) basepoint))\n\ngoal (1 subgoal):\n 1. ereal M\n    \\<le> extended_Gromov_product_at basepoint ((Gromov_extension f ^^ n) x)\n           (attracting_fixed_point f)", "finally"], ["proof (chain)\npicking this:\n  ereal (dist basepoint ((f ^^ n) basepoint) - deltaG TYPE('a))\n  \\<le> ereal K + ereal (deltaG TYPE('a)) +\n        extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n         (to_Gromov_completion ((f ^^ n) basepoint))", "have \"extended_Gromov_product_at basepoint (Gromov_extension (f^^n) x) (to_Gromov_completion ((f^^n) basepoint)) \\<ge> dist basepoint ((f^^n) basepoint) - (2 * deltaG(TYPE('a)) + K)\""], ["proof (prove)\nusing this:\n  ereal (dist basepoint ((f ^^ n) basepoint) - deltaG TYPE('a))\n  \\<le> ereal K + ereal (deltaG TYPE('a)) +\n        extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n         (to_Gromov_completion ((f ^^ n) basepoint))\n\ngoal (1 subgoal):\n 1. ereal (dist basepoint ((f ^^ n) basepoint) - (2 * deltaG TYPE('a) + K))\n    \\<le> extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n           (to_Gromov_completion ((f ^^ n) basepoint))", "apply (simp only: ereal_minus_le [OF J] ereal_minus(1) [symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. ereal (dist basepoint ((f ^^ n) basepoint))\n    \\<le> ereal K + ereal (deltaG TYPE('a)) +\n          extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n           (to_Gromov_completion ((f ^^ n) basepoint)) +\n          ereal (deltaG TYPE('a)) \\<Longrightarrow>\n    ereal (dist basepoint ((f ^^ n) basepoint))\n    \\<le> extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n           (to_Gromov_completion ((f ^^ n) basepoint)) +\n          ereal (2 * deltaG TYPE('a) + K)", "apply (auto simp add: algebra_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ereal (dist basepoint ((f ^^ n) basepoint))\n    \\<le> ereal (deltaG TYPE('a)) +\n          (ereal (K + deltaG TYPE('a)) +\n           extended_Gromov_product_at basepoint\n            (Gromov_extension (f ^^ n) x)\n            (to_Gromov_completion ((f ^^ n) basepoint))) \\<Longrightarrow>\n    ereal (dist basepoint ((f ^^ n) basepoint))\n    \\<le> ereal (K + deltaG TYPE('a) * 2) +\n          extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n           (to_Gromov_completion ((f ^^ n) basepoint))", "apply (metis (no_types, hide_lams) add.assoc add.left_commute mult_2_right plus_ereal.simps(1))"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ereal (dist basepoint ((f ^^ n) basepoint) - (2 * deltaG TYPE('a) + K))\n  \\<le> extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n         (to_Gromov_completion ((f ^^ n) basepoint))\n\ngoal (1 subgoal):\n 1. ereal M\n    \\<le> extended_Gromov_product_at basepoint ((Gromov_extension f ^^ n) x)\n           (attracting_fixed_point f)", "moreover"], ["proof (state)\nthis:\n  ereal (dist basepoint ((f ^^ n) basepoint) - (2 * deltaG TYPE('a) + K))\n  \\<le> extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n         (to_Gromov_completion ((f ^^ n) basepoint))\n\ngoal (1 subgoal):\n 1. ereal M\n    \\<le> extended_Gromov_product_at basepoint ((Gromov_extension f ^^ n) x)\n           (attracting_fixed_point f)", "have \"dist basepoint ((f ^^ n) basepoint) - (2 * deltaG TYPE('a) + K) \\<ge> M + deltaG(TYPE('a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M + deltaG TYPE('a)\n    \\<le> dist basepoint ((f ^^ n) basepoint) - (2 * deltaG TYPE('a) + K)", "using Nd[OF n(3)]"], ["proof (prove)\nusing this:\n  M + K + 3 * deltaG TYPE('a) \\<le> dist basepoint ((f ^^ n) basepoint)\n\ngoal (1 subgoal):\n 1. M + deltaG TYPE('a)\n    \\<le> dist basepoint ((f ^^ n) basepoint) - (2 * deltaG TYPE('a) + K)", "by auto"], ["proof (state)\nthis:\n  M + deltaG TYPE('a)\n  \\<le> dist basepoint ((f ^^ n) basepoint) - (2 * deltaG TYPE('a) + K)\n\ngoal (1 subgoal):\n 1. ereal M\n    \\<le> extended_Gromov_product_at basepoint ((Gromov_extension f ^^ n) x)\n           (attracting_fixed_point f)", "ultimately"], ["proof (chain)\npicking this:\n  ereal (dist basepoint ((f ^^ n) basepoint) - (2 * deltaG TYPE('a) + K))\n  \\<le> extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n         (to_Gromov_completion ((f ^^ n) basepoint))\n  M + deltaG TYPE('a)\n  \\<le> dist basepoint ((f ^^ n) basepoint) - (2 * deltaG TYPE('a) + K)", "have \"extended_Gromov_product_at basepoint (Gromov_extension (f^^n) x) (to_Gromov_completion ((f^^n) basepoint)) \\<ge> ereal (M + deltaG(TYPE('a)))\""], ["proof (prove)\nusing this:\n  ereal (dist basepoint ((f ^^ n) basepoint) - (2 * deltaG TYPE('a) + K))\n  \\<le> extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n         (to_Gromov_completion ((f ^^ n) basepoint))\n  M + deltaG TYPE('a)\n  \\<le> dist basepoint ((f ^^ n) basepoint) - (2 * deltaG TYPE('a) + K)\n\ngoal (1 subgoal):\n 1. ereal (M + deltaG TYPE('a))\n    \\<le> extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n           (to_Gromov_completion ((f ^^ n) basepoint))", "using order_trans ereal_le_le"], ["proof (prove)\nusing this:\n  ereal (dist basepoint ((f ^^ n) basepoint) - (2 * deltaG TYPE('a) + K))\n  \\<le> extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n         (to_Gromov_completion ((f ^^ n) basepoint))\n  M + deltaG TYPE('a)\n  \\<le> dist basepoint ((f ^^ n) basepoint) - (2 * deltaG TYPE('a) + K)\n  \\<lbrakk>?x \\<le> ?y; ?y \\<le> ?z\\<rbrakk> \\<Longrightarrow> ?x \\<le> ?z\n  \\<lbrakk>ereal ?y \\<le> ?a; ?x \\<le> ?y\\<rbrakk>\n  \\<Longrightarrow> ereal ?x \\<le> ?a\n\ngoal (1 subgoal):\n 1. ereal (M + deltaG TYPE('a))\n    \\<le> extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n           (to_Gromov_completion ((f ^^ n) basepoint))", "by auto"], ["proof (state)\nthis:\n  ereal (M + deltaG TYPE('a))\n  \\<le> extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n         (to_Gromov_completion ((f ^^ n) basepoint))\n\ngoal (1 subgoal):\n 1. ereal M\n    \\<le> extended_Gromov_product_at basepoint ((Gromov_extension f ^^ n) x)\n           (attracting_fixed_point f)", "then"], ["proof (chain)\npicking this:\n  ereal (M + deltaG TYPE('a))\n  \\<le> extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n         (to_Gromov_completion ((f ^^ n) basepoint))", "have \"ereal (M + deltaG(TYPE('a))) \\<le> min (extended_Gromov_product_at basepoint (Gromov_extension (f^^n) x) (to_Gromov_completion ((f^^n) basepoint)))\n                                                  (extended_Gromov_product_at basepoint (to_Gromov_completion ((f^^n) basepoint)) (attracting_fixed_point f))\""], ["proof (prove)\nusing this:\n  ereal (M + deltaG TYPE('a))\n  \\<le> extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n         (to_Gromov_completion ((f ^^ n) basepoint))\n\ngoal (1 subgoal):\n 1. ereal (M + deltaG TYPE('a))\n    \\<le> min (extended_Gromov_product_at basepoint\n                (Gromov_extension (f ^^ n) x)\n                (to_Gromov_completion ((f ^^ n) basepoint)))\n           (extended_Gromov_product_at basepoint\n             (to_Gromov_completion ((f ^^ n) basepoint))\n             (attracting_fixed_point f))", "using Na[OF n(2)]"], ["proof (prove)\nusing this:\n  ereal (M + deltaG TYPE('a))\n  \\<le> extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n         (to_Gromov_completion ((f ^^ n) basepoint))\n  ereal (M + deltaG TYPE('a))\n  \\<le> extended_Gromov_product_at basepoint\n         (to_Gromov_completion ((f ^^ n) basepoint))\n         (attracting_fixed_point f)\n\ngoal (1 subgoal):\n 1. ereal (M + deltaG TYPE('a))\n    \\<le> min (extended_Gromov_product_at basepoint\n                (Gromov_extension (f ^^ n) x)\n                (to_Gromov_completion ((f ^^ n) basepoint)))\n           (extended_Gromov_product_at basepoint\n             (to_Gromov_completion ((f ^^ n) basepoint))\n             (attracting_fixed_point f))", "by (simp add: extended_Gromov_product_at_commute)"], ["proof (state)\nthis:\n  ereal (M + deltaG TYPE('a))\n  \\<le> min (extended_Gromov_product_at basepoint\n              (Gromov_extension (f ^^ n) x)\n              (to_Gromov_completion ((f ^^ n) basepoint)))\n         (extended_Gromov_product_at basepoint\n           (to_Gromov_completion ((f ^^ n) basepoint))\n           (attracting_fixed_point f))\n\ngoal (1 subgoal):\n 1. ereal M\n    \\<le> extended_Gromov_product_at basepoint ((Gromov_extension f ^^ n) x)\n           (attracting_fixed_point f)", "also"], ["proof (state)\nthis:\n  ereal (M + deltaG TYPE('a))\n  \\<le> min (extended_Gromov_product_at basepoint\n              (Gromov_extension (f ^^ n) x)\n              (to_Gromov_completion ((f ^^ n) basepoint)))\n         (extended_Gromov_product_at basepoint\n           (to_Gromov_completion ((f ^^ n) basepoint))\n           (attracting_fixed_point f))\n\ngoal (1 subgoal):\n 1. ereal M\n    \\<le> extended_Gromov_product_at basepoint ((Gromov_extension f ^^ n) x)\n           (attracting_fixed_point f)", "have \"... \\<le> extended_Gromov_product_at basepoint (Gromov_extension (f^^n) x) (attracting_fixed_point f) + deltaG(TYPE('a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min (extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n          (to_Gromov_completion ((f ^^ n) basepoint)))\n     (extended_Gromov_product_at basepoint\n       (to_Gromov_completion ((f ^^ n) basepoint))\n       (attracting_fixed_point f))\n    \\<le> extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n           (attracting_fixed_point f) +\n          ereal (deltaG TYPE('a))", "by (intro mono_intros)"], ["proof (state)\nthis:\n  min (extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n        (to_Gromov_completion ((f ^^ n) basepoint)))\n   (extended_Gromov_product_at basepoint\n     (to_Gromov_completion ((f ^^ n) basepoint)) (attracting_fixed_point f))\n  \\<le> extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n         (attracting_fixed_point f) +\n        ereal (deltaG TYPE('a))\n\ngoal (1 subgoal):\n 1. ereal M\n    \\<le> extended_Gromov_product_at basepoint ((Gromov_extension f ^^ n) x)\n           (attracting_fixed_point f)", "finally"], ["proof (chain)\npicking this:\n  ereal (M + deltaG TYPE('a))\n  \\<le> extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n         (attracting_fixed_point f) +\n        ereal (deltaG TYPE('a))", "have \"ereal M \\<le> extended_Gromov_product_at basepoint (Gromov_extension (f^^n) x) (attracting_fixed_point f)\""], ["proof (prove)\nusing this:\n  ereal (M + deltaG TYPE('a))\n  \\<le> extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n         (attracting_fixed_point f) +\n        ereal (deltaG TYPE('a))\n\ngoal (1 subgoal):\n 1. ereal M\n    \\<le> extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n           (attracting_fixed_point f)", "unfolding plus_ereal.simps(1)[symmetric] ereal_add_le_add_iff2"], ["proof (prove)\nusing this:\n  ereal M\n  \\<le> extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n         (attracting_fixed_point f) \\<or>\n  ereal (deltaG TYPE('a)) = \\<infinity> \\<or>\n  ereal (deltaG TYPE('a)) = - \\<infinity> \\<and>\n  ereal M \\<noteq> \\<infinity> \\<and>\n  extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n   (attracting_fixed_point f) \\<noteq>\n  \\<infinity>\n\ngoal (1 subgoal):\n 1. ereal M\n    \\<le> extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n           (attracting_fixed_point f)", "by auto"], ["proof (state)\nthis:\n  ereal M\n  \\<le> extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n         (attracting_fixed_point f)\n\ngoal (1 subgoal):\n 1. ereal M\n    \\<le> extended_Gromov_product_at basepoint ((Gromov_extension f ^^ n) x)\n           (attracting_fixed_point f)", "then"], ["proof (chain)\npicking this:\n  ereal M\n  \\<le> extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n         (attracting_fixed_point f)", "show ?thesis"], ["proof (prove)\nusing this:\n  ereal M\n  \\<le> extended_Gromov_product_at basepoint (Gromov_extension (f ^^ n) x)\n         (attracting_fixed_point f)\n\ngoal (1 subgoal):\n 1. ereal M\n    \\<le> extended_Gromov_product_at basepoint ((Gromov_extension f ^^ n) x)\n           (attracting_fixed_point f)", "by (simp add: Gromov_extension_isometry_iterates I)"], ["proof (state)\nthis:\n  ereal M\n  \\<le> extended_Gromov_product_at basepoint ((Gromov_extension f ^^ n) x)\n         (attracting_fixed_point f)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>extended_Gromov_product_at basepoint ?x (repelling_fixed_point f)\n           \\<le> ereal K;\n   N \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> ereal M\n                    \\<le> extended_Gromov_product_at basepoint\n                           ((Gromov_extension f ^^ ?n) ?x)\n                           (attracting_fixed_point f)\n\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          \\<forall>x.\n             extended_Gromov_product_at basepoint x\n              (repelling_fixed_point f)\n             \\<le> ereal K \\<longrightarrow>\n             ereal M\n             \\<le> extended_Gromov_product_at basepoint\n                    ((Gromov_extension f ^^ n) x) (attracting_fixed_point f)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>extended_Gromov_product_at basepoint ?x (repelling_fixed_point f)\n           \\<le> ereal K;\n   N \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> ereal M\n                    \\<le> extended_Gromov_product_at basepoint\n                           ((Gromov_extension f ^^ ?n) ?x)\n                           (attracting_fixed_point f)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>extended_Gromov_product_at basepoint ?x (repelling_fixed_point f)\n           \\<le> ereal K;\n   N \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> ereal M\n                    \\<le> extended_Gromov_product_at basepoint\n                           ((Gromov_extension f ^^ ?n) ?x)\n                           (attracting_fixed_point f)\n\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          \\<forall>x.\n             extended_Gromov_product_at basepoint x\n              (repelling_fixed_point f)\n             \\<le> ereal K \\<longrightarrow>\n             ereal M\n             \\<le> extended_Gromov_product_at basepoint\n                    ((Gromov_extension f ^^ n) x) (attracting_fixed_point f)", "by auto"], ["proof (state)\nthis:\n  \\<exists>N.\n     \\<forall>n\\<ge>N.\n        \\<forall>x.\n           extended_Gromov_product_at basepoint x (repelling_fixed_point f)\n           \\<le> ereal K \\<longrightarrow>\n           ereal M\n           \\<le> extended_Gromov_product_at basepoint\n                  ((Gromov_extension f ^^ n) x) (attracting_fixed_point f)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>We deduce pointwise convergence from the previous result.\\<close>"], ["", "lemma loxodromic_attracting_fixed_point_attracts:\n  assumes \"loxodromic_isometry f\"\n          \"xi \\<noteq> repelling_fixed_point f\"\n  shows \"(\\<lambda>n. ((Gromov_extension f)^^n) xi) \\<longlonglongrightarrow> attracting_fixed_point f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. (Gromov_extension f ^^ n) xi)\n    \\<longlonglongrightarrow> attracting_fixed_point f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n. (Gromov_extension f ^^ n) xi)\n    \\<longlonglongrightarrow> attracting_fixed_point f", "have \"(\\<lambda>n. extended_Gromov_product_at basepoint (((Gromov_extension f)^^n) xi) (attracting_fixed_point f)) \\<longlonglongrightarrow> \\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        extended_Gromov_product_at basepoint ((Gromov_extension f ^^ n) xi)\n         (attracting_fixed_point f))\n    \\<longlonglongrightarrow> \\<infinity>", "unfolding Lim_PInfty"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>B.\n       \\<exists>N.\n          \\<forall>n\\<ge>N.\n             ereal B\n             \\<le> extended_Gromov_product_at basepoint\n                    ((Gromov_extension f ^^ n) xi)\n                    (attracting_fixed_point f)", "using loxodromic_attracting_fixed_point_attracts_uniformly[OF assms(1)]"], ["proof (prove)\nusing this:\n  \\<exists>N.\n     \\<forall>n\\<ge>N.\n        \\<forall>x.\n           extended_Gromov_product_at basepoint x (repelling_fixed_point f)\n           \\<le> ereal ?K \\<longrightarrow>\n           ereal ?M\n           \\<le> extended_Gromov_product_at basepoint\n                  ((Gromov_extension f ^^ n) x) (attracting_fixed_point f)\n\ngoal (1 subgoal):\n 1. \\<forall>B.\n       \\<exists>N.\n          \\<forall>n\\<ge>N.\n             ereal B\n             \\<le> extended_Gromov_product_at basepoint\n                    ((Gromov_extension f ^^ n) xi)\n                    (attracting_fixed_point f)", "by (metis Gromov_boundary_extended_product_PInf assms(2) ereal_top funpow_code_def infinity_ereal_def linear)"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      extended_Gromov_product_at basepoint ((Gromov_extension f ^^ n) xi)\n       (attracting_fixed_point f))\n  \\<longlonglongrightarrow> \\<infinity>\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. (Gromov_extension f ^^ n) xi)\n    \\<longlonglongrightarrow> attracting_fixed_point f", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n.\n      extended_Gromov_product_at basepoint ((Gromov_extension f ^^ n) xi)\n       (attracting_fixed_point f))\n  \\<longlonglongrightarrow> \\<infinity>", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      extended_Gromov_product_at basepoint ((Gromov_extension f ^^ n) xi)\n       (attracting_fixed_point f))\n  \\<longlonglongrightarrow> \\<infinity>\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. (Gromov_extension f ^^ n) xi)\n    \\<longlonglongrightarrow> attracting_fixed_point f", "unfolding Gromov_completion_boundary_limit[OF loxodromic_attracting_fixed_point(1)[OF assms(1)]]"], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      extended_Gromov_product_at basepoint ((Gromov_extension f ^^ n) xi)\n       (attracting_fixed_point f))\n  \\<longlonglongrightarrow> \\<infinity>\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        extended_Gromov_product_at basepoint ((Gromov_extension f ^^ n) xi)\n         (attracting_fixed_point f))\n    \\<longlonglongrightarrow> \\<infinity>", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>n. (Gromov_extension f ^^ n) xi)\n  \\<longlonglongrightarrow> attracting_fixed_point f\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Finally, we show that a loxodromic isometry has exactly two fixed points, its attracting and\nrepelling fixed points defined above. Indeed, we already know that these points are fixed. It\nremains to see that there is no other fixed point. But a fixed point which is not the repelling one\nis both stationary and attracted to the attracting fixed point by the previous lemma, hence it has\nto coincide with the attracting fixed point.\\<close>"], ["", "theorem loxodromic_unique_fixed_points:\n  assumes \"loxodromic_isometry f\"\n  shows \"Gromov_extension f xi = xi \\<longleftrightarrow> xi = attracting_fixed_point f \\<or> xi = repelling_fixed_point f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Gromov_extension f xi = xi) =\n    (xi = attracting_fixed_point f \\<or> xi = repelling_fixed_point f)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (Gromov_extension f xi = xi) =\n    (xi = attracting_fixed_point f \\<or> xi = repelling_fixed_point f)", "have \"xi = attracting_fixed_point f\" if H: \"Gromov_extension f xi = xi\" \"xi \\<noteq> repelling_fixed_point f\" for xi"], ["proof (prove)\ngoal (1 subgoal):\n 1. xi = attracting_fixed_point f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. xi = attracting_fixed_point f", "have \"((Gromov_extension f)^^n) xi = xi\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Gromov_extension f ^^ n) xi = xi", "apply (induction n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (Gromov_extension f ^^ 0) xi = xi\n 2. \\<And>n.\n       (Gromov_extension f ^^ n) xi = xi \\<Longrightarrow>\n       (Gromov_extension f ^^ Suc n) xi = xi", "using H(1)"], ["proof (prove)\nusing this:\n  Gromov_extension f xi = xi\n\ngoal (2 subgoals):\n 1. (Gromov_extension f ^^ 0) xi = xi\n 2. \\<And>n.\n       (Gromov_extension f ^^ n) xi = xi \\<Longrightarrow>\n       (Gromov_extension f ^^ Suc n) xi = xi", "by auto"], ["proof (state)\nthis:\n  (Gromov_extension f ^^ ?n) xi = xi\n\ngoal (1 subgoal):\n 1. xi = attracting_fixed_point f", "then"], ["proof (chain)\npicking this:\n  (Gromov_extension f ^^ ?n) xi = xi", "have \"(\\<lambda>n. ((Gromov_extension f)^^n) xi) \\<longlonglongrightarrow> xi\""], ["proof (prove)\nusing this:\n  (Gromov_extension f ^^ ?n) xi = xi\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. (Gromov_extension f ^^ n) xi) \\<longlonglongrightarrow> xi", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n. (Gromov_extension f ^^ n) xi) \\<longlonglongrightarrow> xi\n\ngoal (1 subgoal):\n 1. xi = attracting_fixed_point f", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n. (Gromov_extension f ^^ n) xi) \\<longlonglongrightarrow> xi", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>n. (Gromov_extension f ^^ n) xi) \\<longlonglongrightarrow> xi\n\ngoal (1 subgoal):\n 1. xi = attracting_fixed_point f", "using loxodromic_attracting_fixed_point_attracts[OF assms H(2)] LIMSEQ_unique"], ["proof (prove)\nusing this:\n  (\\<lambda>n. (Gromov_extension f ^^ n) xi) \\<longlonglongrightarrow> xi\n  (\\<lambda>n. (Gromov_extension f ^^ n) xi)\n  \\<longlonglongrightarrow> attracting_fixed_point f\n  \\<lbrakk>?X \\<longlonglongrightarrow> ?a;\n   ?X \\<longlonglongrightarrow> ?b\\<rbrakk>\n  \\<Longrightarrow> ?a = ?b\n\ngoal (1 subgoal):\n 1. xi = attracting_fixed_point f", "by auto"], ["proof (state)\nthis:\n  xi = attracting_fixed_point f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>Gromov_extension f ?xi = ?xi;\n   ?xi \\<noteq> repelling_fixed_point f\\<rbrakk>\n  \\<Longrightarrow> ?xi = attracting_fixed_point f\n\ngoal (1 subgoal):\n 1. (Gromov_extension f xi = xi) =\n    (xi = attracting_fixed_point f \\<or> xi = repelling_fixed_point f)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>Gromov_extension f ?xi = ?xi;\n   ?xi \\<noteq> repelling_fixed_point f\\<rbrakk>\n  \\<Longrightarrow> ?xi = attracting_fixed_point f", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>Gromov_extension f ?xi = ?xi;\n   ?xi \\<noteq> repelling_fixed_point f\\<rbrakk>\n  \\<Longrightarrow> ?xi = attracting_fixed_point f\n\ngoal (1 subgoal):\n 1. (Gromov_extension f xi = xi) =\n    (xi = attracting_fixed_point f \\<or> xi = repelling_fixed_point f)", "using loxodromic_attracting_fixed_point(2)[OF assms] loxodromic_repelling_fixed_point(2)[OF assms]"], ["proof (prove)\nusing this:\n  \\<lbrakk>Gromov_extension f ?xi = ?xi;\n   ?xi \\<noteq> repelling_fixed_point f\\<rbrakk>\n  \\<Longrightarrow> ?xi = attracting_fixed_point f\n  Gromov_extension f (attracting_fixed_point f) = attracting_fixed_point f\n  Gromov_extension f (repelling_fixed_point f) = repelling_fixed_point f\n\ngoal (1 subgoal):\n 1. (Gromov_extension f xi = xi) =\n    (xi = attracting_fixed_point f \\<or> xi = repelling_fixed_point f)", "by auto"], ["proof (state)\nthis:\n  (Gromov_extension f xi = xi) =\n  (xi = attracting_fixed_point f \\<or> xi = repelling_fixed_point f)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(*of theory Isometries_Classification*)"]]}