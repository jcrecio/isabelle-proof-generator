{"file_name": "/home/qj213/afp-2021-10-22/thys/Gromov_Hyperbolicity/Library_Complements.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Gromov_Hyperbolicity", "problem_names": ["lemma ln_le_cancelI [mono_intros]:\n  assumes \"(0::real) < x\" \"x \\<le> y\"\n  shows \"ln x \\<le> ln y\"", "lemma exp_le_cancelI [mono_intros]:\n  assumes \"x \\<le> (y::real)\"\n  shows \"exp x \\<le> exp y\"", "lemma mult_ge1_mono [mono_intros]:\n  assumes \"a \\<ge> (0::'a::linordered_idom)\" \"b \\<ge> 1\"\n  shows \"a \\<le> a * b\" \"a \\<le> b * a\"", "lemma xy_le_uxx_vyy [mono_intros]:\n  assumes \"u > 0\" \"u * v = (1::real)\"\n  shows \"x * y \\<le> u * x^2/2 + v * y^2/2\"", "lemma xy_le_xx_yy [mono_intros]:\n  \"x * y \\<le> x^2/2 + y^2/2\" for x y::real", "lemma ln_squared_bound [mono_intros]:\n  \"(ln x)^2 \\<le> 2 * x - 2\" if \"x \\<ge> 1\" for x::real", "lemma mult_ge1_powers [mono_intros]:\n  assumes \"a \\<ge> (1::'a::linordered_idom)\"\n  shows \"1 \\<le> a * a\" \"1 \\<le> a * a * a\" \"1 \\<le> a * a * a * a\"", "lemmas [mono_intros] = ln_bound", "lemma mono_cSup:\n  fixes f :: \"'a::conditionally_complete_lattice \\<Rightarrow> 'b::conditionally_complete_lattice\"\n  assumes \"bdd_above A\" \"A \\<noteq> {}\" \"mono f\"\n  shows \"Sup (f`A) \\<le> f (Sup A)\"", "lemma mono_cSup_bij:\n  fixes f :: \"'a::conditionally_complete_linorder \\<Rightarrow> 'b::conditionally_complete_linorder\"\n  assumes \"bdd_above A\" \"A \\<noteq> {}\" \"mono f\" \"bij f\"\n  shows \"Sup (f`A) = f(Sup A)\"", "lemma even_odd_interpolate_compose:\n  \"even_odd_interpolate (f o u) (f o v) = f o (even_odd_interpolate u v)\"", "lemma even_odd_interpolate_filterlim:\n  \"filterlim u F sequentially \\<and> filterlim v F sequentially \\<longleftrightarrow> filterlim (even_odd_interpolate u v) F sequentially\"", "lemma continuous_at_extension_sequentially':\n  fixes f :: \"'a::{first_countable_topology, t2_space} \\<Rightarrow> 'b::t3_space\"\n  assumes \"b \\<in> T\"\n          \"\\<And>u b. (\\<forall>n. u n \\<in> S) \\<Longrightarrow> b \\<in> T \\<Longrightarrow> u \\<longlonglongrightarrow> b \\<Longrightarrow> convergent (\\<lambda>n. f (u n))\"\n          \"\\<And>b. b \\<in> T \\<Longrightarrow> \\<exists>u. (\\<forall>n. u n \\<in> S) \\<and> u \\<longlonglongrightarrow> b \\<and> ((\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f b)\"\n  shows \"continuous (at b within (S \\<union> T)) f\"", "lemma continuous_on_extension_sequentially':\n  fixes f :: \"'a::{first_countable_topology, t2_space} \\<Rightarrow> 'b::t3_space\"\n  assumes \"\\<And>u b. (\\<forall>n. u n \\<in> S) \\<Longrightarrow> b \\<in> T \\<Longrightarrow> u \\<longlonglongrightarrow> b \\<Longrightarrow> convergent (\\<lambda>n. f (u n))\"\n          \"\\<And>b. b \\<in> T \\<Longrightarrow> \\<exists>u. (\\<forall>n. u n \\<in> S) \\<and> u \\<longlonglongrightarrow> b \\<and> ((\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f b)\"\n  shows \"continuous_on T f\"", "lemma continuous_on_extension_sequentially:\n  fixes f :: \"'a::{first_countable_topology, t2_space} \\<Rightarrow> 'b::t3_space\"\n  assumes \"T \\<subseteq> closure S\"\n          \"\\<And>u b. (\\<forall>n. u n \\<in> S) \\<Longrightarrow> b \\<in> T \\<Longrightarrow> u \\<longlonglongrightarrow> b \\<Longrightarrow> (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f b\"\n  shows \"continuous_on T f\"", "lemma homeomorphism_on_continuous:\n  assumes \"homeomorphism_on S f\"\n  shows \"continuous_on S f\"", "lemma homeomorphism_on_bij:\n  assumes \"homeomorphism_on S f\"\n  shows \"bij_betw f S (f`S)\"", "lemma homeomorphism_on_homeomorphic:\n  assumes \"homeomorphism_on S f\"\n  shows \"S homeomorphic (f`S)\"", "lemma homeomorphism_on_compact:\n  fixes f::\"'a::topological_space \\<Rightarrow> 'b::t2_space\"\n  assumes \"continuous_on S f\"\n          \"compact S\"\n          \"inj_on f S\"\n  shows \"homeomorphism_on S f\"", "lemma homeomorphism_on_subset:\n  assumes \"homeomorphism_on S f\"\n          \"T \\<subseteq> S\"\n  shows \"homeomorphism_on T f\"", "lemma homeomorphism_on_empty [simp]:\n  \"homeomorphism_on {} f\"", "lemma homeomorphism_on_cong:\n  assumes \"homeomorphism_on X f\"\n          \"X' = X\" \"\\<And>x. x \\<in> X \\<Longrightarrow> f' x = f x\"\n  shows \"homeomorphism_on X' f'\"", "lemma homeomorphism_on_inverse:\n  fixes f::\"'a::topological_space \\<Rightarrow> 'b::topological_space\"\n  assumes \"homeomorphism_on X f\"\n  shows \"homeomorphism_on (f`X) (inv_into X f)\"", "lemma homeomorphism_on_compose:\n  assumes \"homeomorphism_on S f\"\n          \"x \\<in> S\"\n          \"eventually (\\<lambda>n. u n \\<in> S) F\"\n  shows \"(u \\<longlongrightarrow> x) F \\<longleftrightarrow> ((\\<lambda>n. f (u n)) \\<longlongrightarrow> f x) F\"", "lemma homeomorphism_on_sequentially:\n  fixes f::\"'a::{first_countable_topology, t2_space} \\<Rightarrow> 'b::{first_countable_topology, t2_space}\"\n  assumes \"\\<And>x u. x \\<in> S \\<Longrightarrow> (\\<forall>n. u n \\<in> S) \\<Longrightarrow> u \\<longlonglongrightarrow> x \\<longleftrightarrow> (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f x\"\n  shows \"homeomorphism_on S f\"", "lemma homeomorphism_on_UNIV_sequentially:\n  fixes f::\"'a::{first_countable_topology, t2_space} \\<Rightarrow> 'b::{first_countable_topology, t2_space}\"\n  assumes \"\\<And>x u. u \\<longlonglongrightarrow> x \\<longleftrightarrow> (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f x\"\n  shows \"homeomorphism_on UNIV f\"", "lemma homeomorphism_on_extension_sequentially_precise:\n  fixes f::\"'a::{first_countable_topology, t3_space} \\<Rightarrow> 'b::{first_countable_topology, t3_space}\"\n  assumes \"\\<And>u b. (\\<forall>n. u n \\<in> S) \\<Longrightarrow> b \\<in> T \\<Longrightarrow> u \\<longlonglongrightarrow> b \\<Longrightarrow> convergent (\\<lambda>n. f (u n))\"\n          \"\\<And>u c. (\\<forall>n. u n \\<in> S) \\<Longrightarrow> c \\<in> f`T \\<Longrightarrow> (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> c \\<Longrightarrow> convergent u\"\n          \"\\<And>b. b \\<in> T \\<Longrightarrow> \\<exists>u. (\\<forall>n. u n \\<in> S) \\<and> u \\<longlonglongrightarrow> b \\<and> ((\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f b)\"\n          \"\\<And>n. u n \\<in> S \\<union> T\" \"l \\<in> T\"\n  shows \"u \\<longlonglongrightarrow> l \\<longleftrightarrow> (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f l\"", "lemma homeomorphism_on_extension_sequentially':\n  fixes f::\"'a::{first_countable_topology, t3_space} \\<Rightarrow> 'b::{first_countable_topology, t3_space}\"\n  assumes \"\\<And>u b. (\\<forall>n. u n \\<in> S) \\<Longrightarrow> b \\<in> T \\<Longrightarrow> u \\<longlonglongrightarrow> b \\<Longrightarrow> convergent (\\<lambda>n. f (u n))\"\n          \"\\<And>u c. (\\<forall>n. u n \\<in> S) \\<Longrightarrow> c \\<in> f`T \\<Longrightarrow> (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> c \\<Longrightarrow> convergent u\"\n          \"\\<And>b. b \\<in> T \\<Longrightarrow> \\<exists>u. (\\<forall>n. u n \\<in> S) \\<and> u \\<longlonglongrightarrow> b \\<and> ((\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f b)\"\n  shows \"homeomorphism_on T f\"", "lemma homeomorphism_on_UNIV_extension_sequentially:\n  fixes f::\"'a::{first_countable_topology, t3_space} \\<Rightarrow> 'b::{first_countable_topology, t3_space}\"\n  assumes \"\\<And>u b. (\\<forall>n. u n \\<in> S) \\<Longrightarrow> u \\<longlonglongrightarrow> b \\<longleftrightarrow> (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f b\"\n          \"closure S = UNIV\"\n  shows \"homeomorphism_on UNIV f\"", "lemma properI:\n  assumes \"\\<And>x r. compact (cball x r \\<inter> S)\"\n  shows \"proper S\"", "lemma proper_compact_cball:\n  assumes \"proper (UNIV::'a::metric_space set)\"\n  shows \"compact (cball (x::'a) r)\"", "lemma proper_compact_bounded_closed:\n  assumes \"proper (UNIV::'a::metric_space set)\" \"closed (S::'a set)\" \"bounded S\"\n  shows \"compact S\"", "lemma proper_real [simp]:\n  \"proper (UNIV::real set)\"", "lemma complete_of_proper:\n  assumes \"proper S\"\n  shows \"complete S\"", "lemma proper_of_compact:\n  assumes \"compact S\"\n  shows \"proper S\"", "lemma proper_Un:\n  assumes \"proper A\" \"proper B\"\n  shows \"proper (A \\<union> B)\"", "lemma dist_triangle4 [mono_intros]:\n  \"dist x t \\<le> dist x y + dist y z + dist z t\"", "lemma dist_triangle5 [mono_intros]:\n  \"dist x u \\<le> dist x y + dist y z + dist z t + dist t u\"", "lemma compact_has_closed_thickening:\n  assumes \"compact C\"\n          \"continuous_on C f\"\n  shows \"closed (\\<Union>x\\<in>C. cball x (f x))\"", "lemma continuous_within_cong:\n  assumes \"continuous (at y within S) f\"\n          \"eventually (\\<lambda>x. f x = g x) (at y within S)\"\n          \"f y = g y\"\n  shows \"continuous (at y within S) g\"", "lemma continuous_attains_inf_proper:\n  fixes f :: \"'a::metric_space \\<Rightarrow> 'b::linorder_topology\"\n  assumes \"proper s\" \"a \\<in> s\"\n          \"continuous_on s f\"\n          \"\\<And>z. z \\<in> s - cball a r \\<Longrightarrow> f z \\<ge> f a\"\n  shows \"\\<exists>x\\<in>s. \\<forall>y\\<in>s. f x \\<le> f y\"", "lemma affine_image_ball [simp]:\n  \"(\\<lambda>y. R *\\<^sub>R y + x) ` cball 0 1 = cball (x::('a::real_normed_vector)) \\<bar>R\\<bar>\"", "lemma lebesgue_measure_ball:\n  assumes \"R \\<ge> 0\"\n  shows \"measure lborel (cball (x::('a::euclidean_space)) R) = R^(DIM('a)) * measure lborel (cball (0::'a) 1)\"\n        \"emeasure lborel (cball (x::('a::euclidean_space)) R) = R^(DIM('a)) * emeasure lborel (cball (0::'a) 1)\"", "lemma lebesgue_measure_ball_pos:\n  \"emeasure lborel (cball (0::'a::euclidean_space) 1) > 0\"\n  \"measure lborel (cball (0::'a::euclidean_space) 1) > 0\"", "lemma infdist_union_min [mono_intros]:\n  assumes \"A \\<noteq> {}\" \"B \\<noteq> {}\"\n  shows \"infdist x (A \\<union> B) = min (infdist x A) (infdist x B)\"", "lemma infdist_mono [mono_intros]:\n  assumes \"A \\<subseteq> B\" \"A \\<noteq> {}\"\n  shows \"infdist x B \\<le> infdist x A\"", "lemma infdist_proper_attained:\n  assumes \"proper C\" \"C \\<noteq> {}\"\n  shows \"\\<exists>c\\<in>C. infdist x C = dist x c\"", "lemma infdist_almost_attained:\n  assumes \"infdist x X < a\" \"X \\<noteq> {}\"\n  shows \"\\<exists>y\\<in>X. dist x y < a\"", "lemma infdist_triangle_abs [mono_intros]:\n  \"\\<bar>infdist x A - infdist y A\\<bar> \\<le> dist x y\"", "lemma proj_setD:\n  assumes \"y \\<in> proj_set x A\"\n  shows \"y \\<in> A\" \"dist x y = infdist x A\"", "lemma proj_setI:\n  assumes \"y \\<in> A\" \"dist x y \\<le> infdist x A\"\n  shows \"y \\<in> proj_set x A\"", "lemma proj_setI':\n  assumes \"y \\<in> A\" \"\\<And>z. z \\<in> A \\<Longrightarrow> dist x y \\<le> dist x z\"\n  shows \"y \\<in> proj_set x A\"", "lemma distproj_in_proj_set:\n  assumes \"proj_set x A \\<noteq> {}\"\n  shows \"distproj x A \\<in> proj_set x A\"\n        \"distproj x A \\<in> A\"\n        \"dist x (distproj x A) = infdist x A\"", "lemma proj_set_nonempty_of_proper:\n  assumes \"proper A\" \"A \\<noteq> {}\"\n  shows \"proj_set x A \\<noteq> {}\"", "lemma distproj_self [simp]:\n  assumes \"x \\<in> A\"\n  shows \"proj_set x A = {x}\"\n        \"distproj x A = x\"", "lemma distproj_closure [simp]:\n  assumes \"x \\<in> closure A\"\n  shows \"distproj x A = x\"", "lemma distproj_le:\n  assumes \"y \\<in> A\"\n  shows \"dist x (distproj x A) \\<le> dist x y\"", "lemma proj_set_dist_le:\n  assumes \"y \\<in> A\" \"p \\<in> proj_set x A\"\n  shows \"dist x p \\<le> dist x y\"", "lemma ereal_of_real_of_ereal_iff [simp]:\n  \"ereal(real_of_ereal x) = x \\<longleftrightarrow> x \\<noteq> \\<infinity> \\<and> x \\<noteq> - \\<infinity>\"\n  \"x = ereal(real_of_ereal x) \\<longleftrightarrow> x \\<noteq> \\<infinity> \\<and> x \\<noteq> - \\<infinity>\"", "lemma ereal_inverse_noteq_minus_infinity [simp]:\n  \"1/(x::ereal) \\<noteq> -\\<infinity>\"", "lemma ereal_inverse_positive_iff_nonneg_not_infinity [simp]:\n  \"0 < 1/(x::ereal) \\<longleftrightarrow> (x \\<ge> 0 \\<and> x \\<noteq> \\<infinity>)\"", "lemma ereal_inverse_negative_iff_nonpos_not_infinity' [simp]:\n  \"0 > inverse (x::ereal) \\<longleftrightarrow> (x < 0 \\<and> x \\<noteq> -\\<infinity>)\"", "lemma ereal_divide_pos_iff [simp]:\n  \"0 < x/(y::ereal) \\<longleftrightarrow> (y \\<noteq> \\<infinity> \\<and> y \\<noteq> -\\<infinity>) \\<and> ((x > 0 \\<and> y > 0) \\<or> (x < 0 \\<and> y < 0) \\<or> (y = 0 \\<and> x > 0))\"", "lemma ereal_divide_neg_iff [simp]:\n  \"0 > x/(y::ereal) \\<longleftrightarrow> (y \\<noteq> \\<infinity> \\<and> y \\<noteq> -\\<infinity>) \\<and> ((x > 0 \\<and> y < 0) \\<or> (x < 0 \\<and> y > 0) \\<or> (y = 0 \\<and> x < 0))\"", "lemma ereal_leq_imp_neg_leq [mono_intros]:\n  fixes x y::ereal\n  assumes \"x \\<le> y\"\n  shows \"-y \\<le> -x\"", "lemma ereal_le_imp_neg_le [mono_intros]:\n  fixes x y::ereal\n  assumes \"x < y\"\n  shows \"-y < -x\"", "lemma ennreal_mono':\n  \"mono ennreal\"", "lemma enn2ereal_mono':\n  \"mono enn2ereal\"", "lemma e2ennreal_mono':\n  \"mono e2ennreal\"", "lemma enn2ereal_mono [mono_intros]:\n  assumes \"x \\<le> y\"\n  shows \"enn2ereal x \\<le> enn2ereal y\"", "lemma ereal_mono:\n  \"mono ereal\"", "lemma ereal_strict_mono:\n  \"strict_mono ereal\"", "lemma ereal_mono2 [mono_intros]:\n  assumes \"x \\<le> y\"\n  shows \"ereal x \\<le> ereal y\"", "lemma ereal_strict_mono2 [mono_intros]:\n  assumes \"x < y\"\n  shows \"ereal x < ereal y\"", "lemma enn2ereal_a_minus_b_plus_b [mono_intros]:\n  \"enn2ereal a \\<le> enn2ereal (a - b) + enn2ereal b\"", "lemma enn2ereal_strict_mono [mono_intros]:\n  assumes \"x < y\"\n  shows \"enn2ereal x < enn2ereal y\"", "lemma ennreal_ge_0 [mono_intros]:\n  assumes \"0 < x\"\n  shows \"0 < ennreal x\"", "lemma ereal_minus_le_minus_plus [mono_intros]:\n  fixes a b c::ereal\n  assumes \"a \\<le> b + c\"\n  shows \"-b \\<le> -a + c\"", "lemma tendsto_ennreal_0 [tendsto_intros]:\n  assumes \"(u \\<longlongrightarrow> 0) F\"\n  shows \"((\\<lambda>n. ennreal(u n)) \\<longlongrightarrow> 0) F\"", "lemma tendsto_ennreal_1 [tendsto_intros]:\n  assumes \"(u \\<longlongrightarrow> 1) F\"\n  shows \"((\\<lambda>n. ennreal(u n)) \\<longlongrightarrow> 1) F\"", "lemma lim_ceiling_over_n [tendsto_intros]:\n  assumes \"(\\<lambda>n. u n/n) \\<longlonglongrightarrow> l\"\n  shows \"(\\<lambda>n. ceiling(u n)/n) \\<longlonglongrightarrow> l\"", "lemma Limsup_obtain':\n  fixes u::\"'a \\<Rightarrow> 'b::complete_linorder\"\n  assumes \"Limsup F u > c\" \"eventually P F\"\n  shows \"\\<exists>n. P n \\<and> u n > c\"", "lemma limsup_obtain:\n  fixes u::\"nat \\<Rightarrow> 'a :: complete_linorder\"\n  assumes \"limsup u > c\"\n  shows \"\\<exists>n \\<ge> N. u n > c\"", "lemma Liminf_obtain':\n  fixes u::\"'a \\<Rightarrow> 'b::complete_linorder\"\n  assumes \"Liminf F u < c\" \"eventually P F\"\n  shows \"\\<exists>n. P n \\<and> u n < c\"", "lemma liminf_obtain:\n  fixes u::\"nat \\<Rightarrow> 'a :: complete_linorder\"\n  assumes \"liminf u < c\"\n  shows \"\\<exists>n \\<ge> N. u n < c\"", "lemma Liminf_min_eq_min_Liminf:\n  fixes u v::\"nat \\<Rightarrow> 'a::complete_linorder\"\n  shows \"Liminf F (\\<lambda>n. min (u n) (v n)) = min (Liminf F u) (Liminf F v)\"", "lemma Limsup_max_eq_max_Limsup:\n  fixes u::\"'a \\<Rightarrow> 'b::complete_linorder\"\n  shows \"Limsup F (\\<lambda>n. max (u n) (v n)) = max (Limsup F u) (Limsup F v)\"", "lemma finite_finite_subset_caract':\n  fixes C::real\n  assumes \"\\<And>G. G \\<subseteq> F \\<Longrightarrow> finite G \\<Longrightarrow> card G \\<le> C\"\n  shows \"finite F \\<and> card F \\<le> C\"", "lemma finite_at_most_singleton:\n  assumes \"\\<And>x y. x \\<in> F \\<Longrightarrow> y \\<in> F \\<Longrightarrow> x = y\"\n  shows \"finite F \\<and> card F \\<le> 1\"", "lemma finite_real_int_interval [simp]:\n  \"finite (range real_of_int \\<inter> {a..b})\"", "lemma separated_in_real_card_bound:\n  assumes \"T \\<subseteq> {a..(b::real)}\" \"d > 0\" \"\\<And>x y. x \\<in> T \\<Longrightarrow> y \\<in> T \\<Longrightarrow> y > x \\<Longrightarrow> y \\<ge> x + d\"\n  shows \"finite T\" \"card T \\<le> nat (floor ((b-a)/d) + 1)\"", "lemma next_in_basics:\n  assumes \"u \\<in> {a..<b}\"\n  shows \"next_in A u \\<in> A\"\n        \"next_in A u > u\"\n        \"A \\<inter> {u<..<next_in A u} = {}\"", "lemma next_inI:\n  assumes \"u \\<in> {a..<b}\"\n          \"v \\<in> A\"\n          \"v > u\"\n          \"{u<..<v} \\<inter> A = {}\"\n  shows \"next_in A u = v\"", "lemma prev_in_basics:\n  assumes \"u \\<in> {a<..b}\"\n  shows \"prev_in A u \\<in> A\"\n        \"prev_in A u < u\"\n        \"A \\<inter> {prev_in A u<..<u} = {}\"", "lemma prev_inI:\n  assumes \"u \\<in> {a<..b}\"\n          \"v \\<in> A\"\n          \"v < u\"\n          \"{v<..<u} \\<inter> A = {}\"\n  shows \"prev_in A u = v\"", "lemma intervals_decomposition:\n  \"(\\<Union> U \\<in> {{u..next_in A u} | u. u \\<in> A - {b}}. U) = {a..b}\"", "lemma next_in_insert:\n  assumes A: \"finite A\" \"A \\<subseteq> {a..b}\" \"a \\<in> A\" \"b \\<in> A\" \"a < b\"\n      and \"x \\<in> {a..b} - A\"\n  shows \"\\<And>u. u \\<in> A - {b, prev_in A x} \\<Longrightarrow> next_in (insert x A) u = next_in A u\"\n        \"next_in (insert x A) x = next_in A x\"\n        \"next_in (insert x A) (prev_in A x) = x\"", "lemma separated_in_real_card_bound2:\n  fixes A::\"real set\"\n  assumes A: \"finite A\" \"A \\<subseteq> {a..b}\" \"a \\<in> A\" \"b \\<in> A\" \"a < b\"\n      and B: \"\\<And>u. u \\<in> A - {b} \\<Longrightarrow> next_in A u \\<ge> u + d\" \"d > 0\"\n  shows \"card A \\<le> nat (floor ((b-a)/d) + 1)\"", "lemma (in wo_rel) max2_underS [simp]:\n  assumes \"x \\<in> underS z\" \"y \\<in> underS z\"\n  shows \"max2 x y \\<in> underS z\"", "lemma (in wo_rel) max2_underS' [simp]:\n  assumes \"x \\<in> underS y\"\n  shows \"max2 x y = y\" \"max2 y x = y\"", "lemma (in wo_rel) max2_xx [simp]:\n  \"max2 x x = x\"", "lemma regularCard_ordIso:\n  assumes \"Card_order r\" \"regularCard r\" \"s =o r\"\n  shows \"regularCard s\"", "lemma AboveS_not_empty_in_regularCard:\n  assumes \"|S| <o r\" \"S \\<subseteq> Field r\"\n  assumes r: \"Card_order r\" \"regularCard r\" \"\\<not>finite (Field r)\"\n  shows \"AboveS r S \\<noteq> {}\"", "lemma AboveS_not_empty_in_regularCard':\n  assumes \"|S| <o r\" \"f`S \\<subseteq> Field r\" \"T \\<subseteq> S\"\n  assumes r: \"Card_order r\" \"regularCard r\" \"\\<not>finite (Field r)\"\n  shows \"AboveS r (f`T) \\<noteq> {}\"", "lemma Well_order_extend:\nassumes WELL: \"well_order_on A r\" and SUB: \"A \\<subseteq> B\"\nshows \"\\<exists>r'. well_order_on B r' \\<and> r \\<subseteq> r'\"", "lemma Well_order_pullback:\n  assumes \"Well_order r\"\n  shows \"\\<exists>s. Well_order s \\<and> Field s = UNIV \\<and> (\\<forall>x y. (f x, f y) \\<in> (r-Id) \\<longrightarrow> (x, y) \\<in> s)\""], "translations": [["", "lemma ln_le_cancelI [mono_intros]:\n  assumes \"(0::real) < x\" \"x \\<le> y\"\n  shows \"ln x \\<le> ln y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln x \\<le> ln y", "using assms"], ["proof (prove)\nusing this:\n  0 < x\n  x \\<le> y\n\ngoal (1 subgoal):\n 1. ln x \\<le> ln y", "by auto"], ["", "lemma exp_le_cancelI [mono_intros]:\n  assumes \"x \\<le> (y::real)\"\n  shows \"exp x \\<le> exp y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp x \\<le> exp y", "using assms"], ["proof (prove)\nusing this:\n  x \\<le> y\n\ngoal (1 subgoal):\n 1. exp x \\<le> exp y", "by simp"], ["", "lemma mult_ge1_mono [mono_intros]:\n  assumes \"a \\<ge> (0::'a::linordered_idom)\" \"b \\<ge> 1\"\n  shows \"a \\<le> a * b\" \"a \\<le> b * a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> a * b &&& a \\<le> b * a", "using assms mult_le_cancel_left1 mult_le_cancel_right1"], ["proof (prove)\nusing this:\n  (0::'a) \\<le> a\n  (1::'a) \\<le> b\n  (?c \\<le> ?c * ?b) =\n  (((0::?'a) < ?c \\<longrightarrow> (1::?'a) \\<le> ?b) \\<and>\n   (?c < (0::?'a) \\<longrightarrow> ?b \\<le> (1::?'a)))\n  (?c \\<le> ?b * ?c) =\n  (((0::?'a) < ?c \\<longrightarrow> (1::?'a) \\<le> ?b) \\<and>\n   (?c < (0::?'a) \\<longrightarrow> ?b \\<le> (1::?'a)))\n\ngoal (1 subgoal):\n 1. a \\<le> a * b &&& a \\<le> b * a", "by force+"], ["", "text \\<open>A few convexity inequalities we will need later on.\\<close>"], ["", "lemma xy_le_uxx_vyy [mono_intros]:\n  assumes \"u > 0\" \"u * v = (1::real)\"\n  shows \"x * y \\<le> u * x^2/2 + v * y^2/2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * y \\<le> u * x\\<^sup>2 / 2 + v * y\\<^sup>2 / 2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x * y \\<le> u * x\\<^sup>2 / 2 + v * y\\<^sup>2 / 2", "have \"v > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < v", "using assms"], ["proof (prove)\nusing this:\n  0 < u\n  u * v = 1\n\ngoal (1 subgoal):\n 1. 0 < v", "by (metis (full_types) dual_order.strict_implies_order le_less_linear mult_nonneg_nonpos not_one_le_zero)"], ["proof (state)\nthis:\n  0 < v\n\ngoal (1 subgoal):\n 1. x * y \\<le> u * x\\<^sup>2 / 2 + v * y\\<^sup>2 / 2", "then"], ["proof (chain)\npicking this:\n  0 < v", "have *: \"sqrt u * sqrt v = 1\""], ["proof (prove)\nusing this:\n  0 < v\n\ngoal (1 subgoal):\n 1. sqrt u * sqrt v = 1", "using assms"], ["proof (prove)\nusing this:\n  0 < v\n  0 < u\n  u * v = 1\n\ngoal (1 subgoal):\n 1. sqrt u * sqrt v = 1", "by (metis real_sqrt_mult real_sqrt_one)"], ["proof (state)\nthis:\n  sqrt u * sqrt v = 1\n\ngoal (1 subgoal):\n 1. x * y \\<le> u * x\\<^sup>2 / 2 + v * y\\<^sup>2 / 2", "have \"(sqrt u * x - sqrt v * y)^2 \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> (sqrt u * x - sqrt v * y)\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  0 \\<le> (sqrt u * x - sqrt v * y)\\<^sup>2\n\ngoal (1 subgoal):\n 1. x * y \\<le> u * x\\<^sup>2 / 2 + v * y\\<^sup>2 / 2", "then"], ["proof (chain)\npicking this:\n  0 \\<le> (sqrt u * x - sqrt v * y)\\<^sup>2", "have \"u * x^2 + v * y^2 - 2 * 1 * x * y \\<ge> 0\""], ["proof (prove)\nusing this:\n  0 \\<le> (sqrt u * x - sqrt v * y)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 \\<le> u * x\\<^sup>2 + v * y\\<^sup>2 - 2 * 1 * x * y", "unfolding power2_eq_square *[symmetric]"], ["proof (prove)\nusing this:\n  0 \\<le> (sqrt u * x - sqrt v * y) * (sqrt u * x - sqrt v * y)\n\ngoal (1 subgoal):\n 1. 0 \\<le> u * (x * x) + v * (y * y) - 2 * (sqrt u * sqrt v) * x * y", "using \\<open>u > 0\\<close> \\<open>v > 0\\<close>"], ["proof (prove)\nusing this:\n  0 \\<le> (sqrt u * x - sqrt v * y) * (sqrt u * x - sqrt v * y)\n  0 < u\n  0 < v\n\ngoal (1 subgoal):\n 1. 0 \\<le> u * (x * x) + v * (y * y) - 2 * (sqrt u * sqrt v) * x * y", "by (auto simp add: algebra_simps)"], ["proof (state)\nthis:\n  0 \\<le> u * x\\<^sup>2 + v * y\\<^sup>2 - 2 * 1 * x * y\n\ngoal (1 subgoal):\n 1. x * y \\<le> u * x\\<^sup>2 / 2 + v * y\\<^sup>2 / 2", "then"], ["proof (chain)\npicking this:\n  0 \\<le> u * x\\<^sup>2 + v * y\\<^sup>2 - 2 * 1 * x * y", "show ?thesis"], ["proof (prove)\nusing this:\n  0 \\<le> u * x\\<^sup>2 + v * y\\<^sup>2 - 2 * 1 * x * y\n\ngoal (1 subgoal):\n 1. x * y \\<le> u * x\\<^sup>2 / 2 + v * y\\<^sup>2 / 2", "by (auto simp add: algebra_simps divide_simps)"], ["proof (state)\nthis:\n  x * y \\<le> u * x\\<^sup>2 / 2 + v * y\\<^sup>2 / 2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma xy_le_xx_yy [mono_intros]:\n  \"x * y \\<le> x^2/2 + y^2/2\" for x y::real"], ["proof (prove)\ngoal (1 subgoal):\n 1. x * y \\<le> x\\<^sup>2 / 2 + y\\<^sup>2 / 2", "using xy_le_uxx_vyy[of 1 1]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < 1; 1 * 1 = 1\\<rbrakk>\n  \\<Longrightarrow> ?x * ?y \\<le> 1 * ?x\\<^sup>2 / 2 + 1 * ?y\\<^sup>2 / 2\n\ngoal (1 subgoal):\n 1. x * y \\<le> x\\<^sup>2 / 2 + y\\<^sup>2 / 2", "by auto"], ["", "lemma ln_squared_bound [mono_intros]:\n  \"(ln x)^2 \\<le> 2 * x - 2\" if \"x \\<ge> 1\" for x::real"], ["proof (prove)\ngoal (1 subgoal):\n 1. (ln x)\\<^sup>2 \\<le> 2 * x - 2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (ln x)\\<^sup>2 \\<le> 2 * x - 2", "define f where \"f = (\\<lambda>x::real. 2 * x - 2 - ln x * ln x)\""], ["proof (state)\nthis:\n  f = (\\<lambda>x. 2 * x - 2 - ln x * ln x)\n\ngoal (1 subgoal):\n 1. (ln x)\\<^sup>2 \\<le> 2 * x - 2", "have *: \"DERIV f x :> 2 - 2 * ln x / x\" if \"x > 0\" for x::real"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f has_real_derivative 2 - 2 * ln x / x) (at x)", "unfolding f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. 2 * x - 2 - ln x * ln x) has_real_derivative\n     2 - 2 * ln x / x)\n     (at x)", "using that"], ["proof (prove)\nusing this:\n  0 < x\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. 2 * x - 2 - ln x * ln x) has_real_derivative\n     2 - 2 * ln x / x)\n     (at x)", "by (auto intro!: derivative_eq_intros)"], ["proof (state)\nthis:\n  0 < ?x \\<Longrightarrow>\n  (f has_real_derivative 2 - 2 * ln ?x / ?x) (at ?x)\n\ngoal (1 subgoal):\n 1. (ln x)\\<^sup>2 \\<le> 2 * x - 2", "have \"f 1 \\<le> f x\" if \"x \\<ge> 1\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. f 1 \\<le> f x", "proof (rule DERIV_nonneg_imp_nondecreasing[OF that])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 \\<le> x; x \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            (f has_real_derivative y) (at x) \\<and>\n                            0 \\<le> y", "fix t::real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 \\<le> x; x \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            (f has_real_derivative y) (at x) \\<and>\n                            0 \\<le> y", "assume \"t \\<ge> 1\""], ["proof (state)\nthis:\n  1 \\<le> t\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 \\<le> x; x \\<le> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            (f has_real_derivative y) (at x) \\<and>\n                            0 \\<le> y", "show \"\\<exists>y. (f has_real_derivative y) (at t) \\<and> 0 \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y. (f has_real_derivative y) (at t) \\<and> 0 \\<le> y", "apply (rule exI[of _ \"2 - 2 * ln t / t\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f has_real_derivative 2 - 2 * ln t / t) (at t) \\<and>\n    0 \\<le> 2 - 2 * ln t / t", "using *[of t] \\<open>t \\<ge> 1\\<close>"], ["proof (prove)\nusing this:\n  0 < t \\<Longrightarrow> (f has_real_derivative 2 - 2 * ln t / t) (at t)\n  1 \\<le> t\n\ngoal (1 subgoal):\n 1. (f has_real_derivative 2 - 2 * ln t / t) (at t) \\<and>\n    0 \\<le> 2 - 2 * ln t / t", "by (auto simp add: divide_simps ln_bound)"], ["proof (state)\nthis:\n  \\<exists>y. (f has_real_derivative y) (at t) \\<and> 0 \\<le> y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  1 \\<le> ?x \\<Longrightarrow> f 1 \\<le> f ?x\n\ngoal (1 subgoal):\n 1. (ln x)\\<^sup>2 \\<le> 2 * x - 2", "then"], ["proof (chain)\npicking this:\n  1 \\<le> ?x \\<Longrightarrow> f 1 \\<le> f ?x", "show ?thesis"], ["proof (prove)\nusing this:\n  1 \\<le> ?x \\<Longrightarrow> f 1 \\<le> f ?x\n\ngoal (1 subgoal):\n 1. (ln x)\\<^sup>2 \\<le> 2 * x - 2", "unfolding f_def power2_eq_square"], ["proof (prove)\nusing this:\n  1 \\<le> ?x \\<Longrightarrow>\n  2 * 1 - 2 - ln 1 * ln 1 \\<le> 2 * ?x - 2 - ln ?x * ln ?x\n\ngoal (1 subgoal):\n 1. ln x * ln x \\<le> 2 * x - 2", "using that"], ["proof (prove)\nusing this:\n  1 \\<le> ?x \\<Longrightarrow>\n  2 * 1 - 2 - ln 1 * ln 1 \\<le> 2 * ?x - 2 - ln ?x * ln ?x\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. ln x * ln x \\<le> 2 * x - 2", "by auto"], ["proof (state)\nthis:\n  (ln x)\\<^sup>2 \\<le> 2 * x - 2\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>In the next lemma, the assumptions are too strong (negative numbers\nless than $-1$ also work well to have a square larger than $1$), but in practice one proves\ninequalities with nonnegative numbers, so this version is really the useful one for\n\\verb+mono_intros+.\\<close>"], ["", "lemma mult_ge1_powers [mono_intros]:\n  assumes \"a \\<ge> (1::'a::linordered_idom)\"\n  shows \"1 \\<le> a * a\" \"1 \\<le> a * a * a\" \"1 \\<le> a * a * a * a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1::'a) \\<le> a * a &&&\n    (1::'a) \\<le> a * a * a &&& (1::'a) \\<le> a * a * a * a", "using assms"], ["proof (prove)\nusing this:\n  (1::'a) \\<le> a\n\ngoal (1 subgoal):\n 1. (1::'a) \\<le> a * a &&&\n    (1::'a) \\<le> a * a * a &&& (1::'a) \\<le> a * a * a * a", "by (meson assms dual_order.trans mult_ge1_mono(1) zero_le_one)+"], ["", "lemmas [mono_intros] = ln_bound"], ["", "lemma mono_cSup:\n  fixes f :: \"'a::conditionally_complete_lattice \\<Rightarrow> 'b::conditionally_complete_lattice\"\n  assumes \"bdd_above A\" \"A \\<noteq> {}\" \"mono f\"\n  shows \"Sup (f`A) \\<le> f (Sup A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup (f ` A) \\<le> f (Sup A)", "by (metis assms(1) assms(2) assms(3) cSUP_least cSup_upper mono_def)"], ["", "lemma mono_cSup_bij:\n  fixes f :: \"'a::conditionally_complete_linorder \\<Rightarrow> 'b::conditionally_complete_linorder\"\n  assumes \"bdd_above A\" \"A \\<noteq> {}\" \"mono f\" \"bij f\"\n  shows \"Sup (f`A) = f(Sup A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup (f ` A) = f (Sup A)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Sup (f ` A) = f (Sup A)", "have \"Sup ((inv f)`(f`A)) \\<le> (inv f) (Sup (f`A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup (inv f ` f ` A) \\<le> inv f (Sup (f ` A))", "apply (rule mono_cSup)"], ["proof (prove)\ngoal (3 subgoals):\n 1. bdd_above (f ` A)\n 2. f ` A \\<noteq> {}\n 3. mono (inv f)", "using mono_inv[OF assms(3) assms(4)] assms(2) bdd_above_image_mono[OF assms(3) assms(1)]"], ["proof (prove)\nusing this:\n  mono (inv f)\n  A \\<noteq> {}\n  bdd_above (f ` A)\n\ngoal (3 subgoals):\n 1. bdd_above (f ` A)\n 2. f ` A \\<noteq> {}\n 3. mono (inv f)", "by auto"], ["proof (state)\nthis:\n  Sup (inv f ` f ` A) \\<le> inv f (Sup (f ` A))\n\ngoal (1 subgoal):\n 1. Sup (f ` A) = f (Sup A)", "then"], ["proof (chain)\npicking this:\n  Sup (inv f ` f ` A) \\<le> inv f (Sup (f ` A))", "have \"f (Sup ((inv f)`(f`A))) \\<le> Sup (f`A)\""], ["proof (prove)\nusing this:\n  Sup (inv f ` f ` A) \\<le> inv f (Sup (f ` A))\n\ngoal (1 subgoal):\n 1. f (Sup (inv f ` f ` A)) \\<le> Sup (f ` A)", "using assms mono_def"], ["proof (prove)\nusing this:\n  Sup (inv f ` f ` A) \\<le> inv f (Sup (f ` A))\n  bdd_above A\n  A \\<noteq> {}\n  mono f\n  bij f\n  mono ?f = (\\<forall>x y. x \\<le> y \\<longrightarrow> ?f x \\<le> ?f y)\n\ngoal (1 subgoal):\n 1. f (Sup (inv f ` f ` A)) \\<le> Sup (f ` A)", "by (metis (no_types, hide_lams) bij_betw_imp_surj_on surj_f_inv_f)"], ["proof (state)\nthis:\n  f (Sup (inv f ` f ` A)) \\<le> Sup (f ` A)\n\ngoal (1 subgoal):\n 1. Sup (f ` A) = f (Sup A)", "moreover"], ["proof (state)\nthis:\n  f (Sup (inv f ` f ` A)) \\<le> Sup (f ` A)\n\ngoal (1 subgoal):\n 1. Sup (f ` A) = f (Sup A)", "have \"f (Sup ((inv f)`(f`A))) = f(Sup A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (Sup (inv f ` f ` A)) = f (Sup A)", "using assms"], ["proof (prove)\nusing this:\n  bdd_above A\n  A \\<noteq> {}\n  mono f\n  bij f\n\ngoal (1 subgoal):\n 1. f (Sup (inv f ` f ` A)) = f (Sup A)", "by (simp add: bij_is_inj)"], ["proof (state)\nthis:\n  f (Sup (inv f ` f ` A)) = f (Sup A)\n\ngoal (1 subgoal):\n 1. Sup (f ` A) = f (Sup A)", "ultimately"], ["proof (chain)\npicking this:\n  f (Sup (inv f ` f ` A)) \\<le> Sup (f ` A)\n  f (Sup (inv f ` f ` A)) = f (Sup A)", "show ?thesis"], ["proof (prove)\nusing this:\n  f (Sup (inv f ` f ` A)) \\<le> Sup (f ` A)\n  f (Sup (inv f ` f ` A)) = f (Sup A)\n\ngoal (1 subgoal):\n 1. Sup (f ` A) = f (Sup A)", "using mono_cSup[OF assms(1) assms(2) assms(3)]"], ["proof (prove)\nusing this:\n  f (Sup (inv f ` f ` A)) \\<le> Sup (f ` A)\n  f (Sup (inv f ` f ` A)) = f (Sup A)\n  Sup (f ` A) \\<le> f (Sup A)\n\ngoal (1 subgoal):\n 1. Sup (f ` A) = f (Sup A)", "by auto"], ["proof (state)\nthis:\n  Sup (f ` A) = f (Sup A)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>More topology\\<close>"], ["", "text \\<open>In situations of interest to us later on, convergence is well controlled only for sequences\nliving in some dense subset of the space (but the limit can be anywhere). This is enough to\nestablish continuity of the function, if the target space is well enough separated.\n\nThe statement we give below is very general,\nas we do not assume that the function is continuous inside the original set $S$, it will typically\nonly be continuous at a set $T$ contained in the closure of $S$. In many applications, $T$ will\nbe the closure of $S$, but we are also thinking of the case where one constructs an extension\nof a function inside a space, to its boundary, and the behaviour at the boundary is better than\ninside the space. The example we have in mind is the extension of a quasi-isometry to the boundary\nof a Gromov hyperbolic space.\n\nIn the following criterion, we assume that if $u_n$ inside $S$ converges to a point at the boundary\n$T$, then $f(u_n)$ converges (where $f$ is some function inside). Then, we can extend the function $f$ at\nthe boundary, by picking the limit value of $f(u_n)$ for some sequence converging to $u_n$. Then\nthe lemma asserts that $f$ is continuous at every point $b$ on the boundary.\n\nThe proof is done in two steps:\n\\begin{enumerate}\n\\item First, if $v_n$ is another inside sequence tending to\nthe same point $b$ on the boundary, then $f(v_n)$ converges to the same value as $f(u_n)$: this is\nproved by considering the sequence $w$ equal to $u$ at even times and to $v$ at odd times, and\nsaying that $f(w_n)$ converges. Its limit is equal to the limit of $f(u_n)$ and of $f(v_n)$, so they\nhave to coincide.\n\\item Now, consider a general sequence $v$ (in the space or the boundary) converging to $b$. We want\nto show that $f(v_n)$ tends to $f(b)$. If $v_n$ is inside $S$, we have already done it in the first\nstep. If it is on the boundary, on the other hand, we can approximate it by an inside point $w_n$\nfor which $f(w_n)$ is very close to $f(v_n)$. Then $w_n$ is an inside sequence converging to $b$,\nhence $f(w_n)$ converges to $f(b)$ by the first step, and then $f(v_n)$ also converges to $f(b)$.\nThe precise argument is more conveniently written by contradiction. It requires good separation\nproperties of the target space.\n\\end{enumerate}\\<close>"], ["", "text \\<open>First, we introduce the material to interpolate between two sequences, one at even times\nand the other one at odd times.\\<close>"], ["", "definition even_odd_interpolate::\"(nat \\<Rightarrow> 'a) \\<Rightarrow> (nat \\<Rightarrow> 'a) \\<Rightarrow> (nat \\<Rightarrow> 'a)\"\n  where \"even_odd_interpolate u v n = (if even n then u (n div 2) else v (n div 2))\""], ["", "lemma even_odd_interpolate_compose:\n  \"even_odd_interpolate (f o u) (f o v) = f o (even_odd_interpolate u v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. even_odd_interpolate (f \\<circ> u) (f \\<circ> v) =\n    f \\<circ> even_odd_interpolate u v", "unfolding even_odd_interpolate_def comp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. if even n then f (u (n div 2)) else f (v (n div 2))) =\n    (\\<lambda>x. f (if even x then u (x div 2) else v (x div 2)))", "by auto"], ["", "lemma even_odd_interpolate_filterlim:\n  \"filterlim u F sequentially \\<and> filterlim v F sequentially \\<longleftrightarrow> filterlim (even_odd_interpolate u v) F sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (filterlim u F sequentially \\<and> filterlim v F sequentially) =\n    filterlim (even_odd_interpolate u v) F sequentially", "proof (auto)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>filterlim u F sequentially; filterlim v F sequentially\\<rbrakk>\n    \\<Longrightarrow> filterlim (even_odd_interpolate u v) F sequentially\n 2. filterlim (even_odd_interpolate u v) F sequentially \\<Longrightarrow>\n    filterlim u F sequentially\n 3. filterlim (even_odd_interpolate u v) F sequentially \\<Longrightarrow>\n    filterlim v F sequentially", "assume H: \"filterlim (even_odd_interpolate u v) F sequentially\""], ["proof (state)\nthis:\n  filterlim (even_odd_interpolate u v) F sequentially\n\ngoal (3 subgoals):\n 1. \\<lbrakk>filterlim u F sequentially; filterlim v F sequentially\\<rbrakk>\n    \\<Longrightarrow> filterlim (even_odd_interpolate u v) F sequentially\n 2. filterlim (even_odd_interpolate u v) F sequentially \\<Longrightarrow>\n    filterlim u F sequentially\n 3. filterlim (even_odd_interpolate u v) F sequentially \\<Longrightarrow>\n    filterlim v F sequentially", "define r::\"nat \\<Rightarrow> nat\" where \"r = (\\<lambda>n. 2 * n)\""], ["proof (state)\nthis:\n  r = (*) 2\n\ngoal (3 subgoals):\n 1. \\<lbrakk>filterlim u F sequentially; filterlim v F sequentially\\<rbrakk>\n    \\<Longrightarrow> filterlim (even_odd_interpolate u v) F sequentially\n 2. filterlim (even_odd_interpolate u v) F sequentially \\<Longrightarrow>\n    filterlim u F sequentially\n 3. filterlim (even_odd_interpolate u v) F sequentially \\<Longrightarrow>\n    filterlim v F sequentially", "have \"strict_mono r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_mono r", "unfolding r_def strict_mono_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y. x < y \\<longrightarrow> 2 * x < 2 * y", "by auto"], ["proof (state)\nthis:\n  strict_mono r\n\ngoal (3 subgoals):\n 1. \\<lbrakk>filterlim u F sequentially; filterlim v F sequentially\\<rbrakk>\n    \\<Longrightarrow> filterlim (even_odd_interpolate u v) F sequentially\n 2. filterlim (even_odd_interpolate u v) F sequentially \\<Longrightarrow>\n    filterlim u F sequentially\n 3. filterlim (even_odd_interpolate u v) F sequentially \\<Longrightarrow>\n    filterlim v F sequentially", "then"], ["proof (chain)\npicking this:\n  strict_mono r", "have \"filterlim r sequentially sequentially\""], ["proof (prove)\nusing this:\n  strict_mono r\n\ngoal (1 subgoal):\n 1. filterlim r sequentially sequentially", "by (simp add: filterlim_subseq)"], ["proof (state)\nthis:\n  filterlim r sequentially sequentially\n\ngoal (3 subgoals):\n 1. \\<lbrakk>filterlim u F sequentially; filterlim v F sequentially\\<rbrakk>\n    \\<Longrightarrow> filterlim (even_odd_interpolate u v) F sequentially\n 2. filterlim (even_odd_interpolate u v) F sequentially \\<Longrightarrow>\n    filterlim u F sequentially\n 3. filterlim (even_odd_interpolate u v) F sequentially \\<Longrightarrow>\n    filterlim v F sequentially", "have \"filterlim (\\<lambda>n. (even_odd_interpolate u v) (r n)) F sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LIM n sequentially. even_odd_interpolate u v (r n) :> F", "by (rule filterlim_compose[OF H filterlim_subseq[OF \\<open>strict_mono r\\<close>]])"], ["proof (state)\nthis:\n  LIM n sequentially. even_odd_interpolate u v (r n) :> F\n\ngoal (3 subgoals):\n 1. \\<lbrakk>filterlim u F sequentially; filterlim v F sequentially\\<rbrakk>\n    \\<Longrightarrow> filterlim (even_odd_interpolate u v) F sequentially\n 2. filterlim (even_odd_interpolate u v) F sequentially \\<Longrightarrow>\n    filterlim u F sequentially\n 3. filterlim (even_odd_interpolate u v) F sequentially \\<Longrightarrow>\n    filterlim v F sequentially", "moreover"], ["proof (state)\nthis:\n  LIM n sequentially. even_odd_interpolate u v (r n) :> F\n\ngoal (3 subgoals):\n 1. \\<lbrakk>filterlim u F sequentially; filterlim v F sequentially\\<rbrakk>\n    \\<Longrightarrow> filterlim (even_odd_interpolate u v) F sequentially\n 2. filterlim (even_odd_interpolate u v) F sequentially \\<Longrightarrow>\n    filterlim u F sequentially\n 3. filterlim (even_odd_interpolate u v) F sequentially \\<Longrightarrow>\n    filterlim v F sequentially", "have \"even_odd_interpolate u v (r n) = u n\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. even_odd_interpolate u v (r n) = u n", "unfolding r_def even_odd_interpolate_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if even (2 * n) then u (2 * n div 2) else v (2 * n div 2)) = u n", "by auto"], ["proof (state)\nthis:\n  even_odd_interpolate u v (r ?n) = u ?n\n\ngoal (3 subgoals):\n 1. \\<lbrakk>filterlim u F sequentially; filterlim v F sequentially\\<rbrakk>\n    \\<Longrightarrow> filterlim (even_odd_interpolate u v) F sequentially\n 2. filterlim (even_odd_interpolate u v) F sequentially \\<Longrightarrow>\n    filterlim u F sequentially\n 3. filterlim (even_odd_interpolate u v) F sequentially \\<Longrightarrow>\n    filterlim v F sequentially", "ultimately"], ["proof (chain)\npicking this:\n  LIM n sequentially. even_odd_interpolate u v (r n) :> F\n  even_odd_interpolate u v (r ?n) = u ?n", "show \"filterlim u F sequentially\""], ["proof (prove)\nusing this:\n  LIM n sequentially. even_odd_interpolate u v (r n) :> F\n  even_odd_interpolate u v (r ?n) = u ?n\n\ngoal (1 subgoal):\n 1. filterlim u F sequentially", "by auto"], ["proof (state)\nthis:\n  filterlim u F sequentially\n\ngoal (2 subgoals):\n 1. \\<lbrakk>filterlim u F sequentially; filterlim v F sequentially\\<rbrakk>\n    \\<Longrightarrow> filterlim (even_odd_interpolate u v) F sequentially\n 2. filterlim (even_odd_interpolate u v) F sequentially \\<Longrightarrow>\n    filterlim v F sequentially", "define r::\"nat \\<Rightarrow> nat\" where \"r = (\\<lambda>n. 2 * n + 1)\""], ["proof (state)\nthis:\n  r = (\\<lambda>n. 2 * n + 1)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>filterlim u F sequentially; filterlim v F sequentially\\<rbrakk>\n    \\<Longrightarrow> filterlim (even_odd_interpolate u v) F sequentially\n 2. filterlim (even_odd_interpolate u v) F sequentially \\<Longrightarrow>\n    filterlim v F sequentially", "have \"strict_mono r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_mono r", "unfolding r_def strict_mono_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y. x < y \\<longrightarrow> 2 * x + 1 < 2 * y + 1", "by auto"], ["proof (state)\nthis:\n  strict_mono r\n\ngoal (2 subgoals):\n 1. \\<lbrakk>filterlim u F sequentially; filterlim v F sequentially\\<rbrakk>\n    \\<Longrightarrow> filterlim (even_odd_interpolate u v) F sequentially\n 2. filterlim (even_odd_interpolate u v) F sequentially \\<Longrightarrow>\n    filterlim v F sequentially", "then"], ["proof (chain)\npicking this:\n  strict_mono r", "have \"filterlim r sequentially sequentially\""], ["proof (prove)\nusing this:\n  strict_mono r\n\ngoal (1 subgoal):\n 1. filterlim r sequentially sequentially", "by (simp add: filterlim_subseq)"], ["proof (state)\nthis:\n  filterlim r sequentially sequentially\n\ngoal (2 subgoals):\n 1. \\<lbrakk>filterlim u F sequentially; filterlim v F sequentially\\<rbrakk>\n    \\<Longrightarrow> filterlim (even_odd_interpolate u v) F sequentially\n 2. filterlim (even_odd_interpolate u v) F sequentially \\<Longrightarrow>\n    filterlim v F sequentially", "have \"filterlim (\\<lambda>n. (even_odd_interpolate u v) (r n)) F sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LIM n sequentially. even_odd_interpolate u v (r n) :> F", "by (rule filterlim_compose[OF H filterlim_subseq[OF \\<open>strict_mono r\\<close>]])"], ["proof (state)\nthis:\n  LIM n sequentially. even_odd_interpolate u v (r n) :> F\n\ngoal (2 subgoals):\n 1. \\<lbrakk>filterlim u F sequentially; filterlim v F sequentially\\<rbrakk>\n    \\<Longrightarrow> filterlim (even_odd_interpolate u v) F sequentially\n 2. filterlim (even_odd_interpolate u v) F sequentially \\<Longrightarrow>\n    filterlim v F sequentially", "moreover"], ["proof (state)\nthis:\n  LIM n sequentially. even_odd_interpolate u v (r n) :> F\n\ngoal (2 subgoals):\n 1. \\<lbrakk>filterlim u F sequentially; filterlim v F sequentially\\<rbrakk>\n    \\<Longrightarrow> filterlim (even_odd_interpolate u v) F sequentially\n 2. filterlim (even_odd_interpolate u v) F sequentially \\<Longrightarrow>\n    filterlim v F sequentially", "have \"even_odd_interpolate u v (r n) = v n\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. even_odd_interpolate u v (r n) = v n", "unfolding r_def even_odd_interpolate_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if even (2 * n + 1) then u ((2 * n + 1) div 2)\n     else v ((2 * n + 1) div 2)) =\n    v n", "by auto"], ["proof (state)\nthis:\n  even_odd_interpolate u v (r ?n) = v ?n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>filterlim u F sequentially; filterlim v F sequentially\\<rbrakk>\n    \\<Longrightarrow> filterlim (even_odd_interpolate u v) F sequentially\n 2. filterlim (even_odd_interpolate u v) F sequentially \\<Longrightarrow>\n    filterlim v F sequentially", "ultimately"], ["proof (chain)\npicking this:\n  LIM n sequentially. even_odd_interpolate u v (r n) :> F\n  even_odd_interpolate u v (r ?n) = v ?n", "show \"filterlim v F sequentially\""], ["proof (prove)\nusing this:\n  LIM n sequentially. even_odd_interpolate u v (r n) :> F\n  even_odd_interpolate u v (r ?n) = v ?n\n\ngoal (1 subgoal):\n 1. filterlim v F sequentially", "by auto"], ["proof (state)\nthis:\n  filterlim v F sequentially\n\ngoal (1 subgoal):\n 1. \\<lbrakk>filterlim u F sequentially; filterlim v F sequentially\\<rbrakk>\n    \\<Longrightarrow> filterlim (even_odd_interpolate u v) F sequentially", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>filterlim u F sequentially; filterlim v F sequentially\\<rbrakk>\n    \\<Longrightarrow> filterlim (even_odd_interpolate u v) F sequentially", "assume H: \"filterlim u F sequentially\" \"filterlim v F sequentially\""], ["proof (state)\nthis:\n  filterlim u F sequentially\n  filterlim v F sequentially\n\ngoal (1 subgoal):\n 1. \\<lbrakk>filterlim u F sequentially; filterlim v F sequentially\\<rbrakk>\n    \\<Longrightarrow> filterlim (even_odd_interpolate u v) F sequentially", "show \"filterlim (even_odd_interpolate u v) F sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filterlim (even_odd_interpolate u v) F sequentially", "unfolding filterlim_iff eventually_sequentially"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P.\n       eventually P F \\<longrightarrow>\n       (\\<exists>N. \\<forall>n\\<ge>N. P (even_odd_interpolate u v n))", "proof (auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P.\n       eventually P F \\<Longrightarrow>\n       \\<exists>N. \\<forall>n\\<ge>N. P (even_odd_interpolate u v n)", "fix P"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P.\n       eventually P F \\<Longrightarrow>\n       \\<exists>N. \\<forall>n\\<ge>N. P (even_odd_interpolate u v n)", "assume *: \"eventually P F\""], ["proof (state)\nthis:\n  eventually P F\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       eventually P F \\<Longrightarrow>\n       \\<exists>N. \\<forall>n\\<ge>N. P (even_odd_interpolate u v n)", "obtain N1 where N1: \"\\<And>n. n \\<ge> N1 \\<Longrightarrow> P (u n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>N1.\n        (\\<And>n. N1 \\<le> n \\<Longrightarrow> P (u n)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using H(1)"], ["proof (prove)\nusing this:\n  filterlim u F sequentially\n\ngoal (1 subgoal):\n 1. (\\<And>N1.\n        (\\<And>n. N1 \\<le> n \\<Longrightarrow> P (u n)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding filterlim_iff eventually_sequentially"], ["proof (prove)\nusing this:\n  \\<forall>P.\n     eventually P F \\<longrightarrow>\n     (\\<exists>N. \\<forall>n\\<ge>N. P (u n))\n\ngoal (1 subgoal):\n 1. (\\<And>N1.\n        (\\<And>n. N1 \\<le> n \\<Longrightarrow> P (u n)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using *"], ["proof (prove)\nusing this:\n  \\<forall>P.\n     eventually P F \\<longrightarrow>\n     (\\<exists>N. \\<forall>n\\<ge>N. P (u n))\n  eventually P F\n\ngoal (1 subgoal):\n 1. (\\<And>N1.\n        (\\<And>n. N1 \\<le> n \\<Longrightarrow> P (u n)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  N1 \\<le> ?n \\<Longrightarrow> P (u ?n)\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       eventually P F \\<Longrightarrow>\n       \\<exists>N. \\<forall>n\\<ge>N. P (even_odd_interpolate u v n)", "obtain N2 where N2: \"\\<And>n. n \\<ge> N2 \\<Longrightarrow> P (v n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>N2.\n        (\\<And>n. N2 \\<le> n \\<Longrightarrow> P (v n)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using H(2)"], ["proof (prove)\nusing this:\n  filterlim v F sequentially\n\ngoal (1 subgoal):\n 1. (\\<And>N2.\n        (\\<And>n. N2 \\<le> n \\<Longrightarrow> P (v n)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding filterlim_iff eventually_sequentially"], ["proof (prove)\nusing this:\n  \\<forall>P.\n     eventually P F \\<longrightarrow>\n     (\\<exists>N. \\<forall>n\\<ge>N. P (v n))\n\ngoal (1 subgoal):\n 1. (\\<And>N2.\n        (\\<And>n. N2 \\<le> n \\<Longrightarrow> P (v n)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using *"], ["proof (prove)\nusing this:\n  \\<forall>P.\n     eventually P F \\<longrightarrow>\n     (\\<exists>N. \\<forall>n\\<ge>N. P (v n))\n  eventually P F\n\ngoal (1 subgoal):\n 1. (\\<And>N2.\n        (\\<And>n. N2 \\<le> n \\<Longrightarrow> P (v n)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  N2 \\<le> ?n \\<Longrightarrow> P (v ?n)\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       eventually P F \\<Longrightarrow>\n       \\<exists>N. \\<forall>n\\<ge>N. P (even_odd_interpolate u v n)", "have \"P (even_odd_interpolate u v n)\" if \"n \\<ge> 2 * N1 + 2 * N2\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. P (even_odd_interpolate u v n)", "proof (cases \"even n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. even n \\<Longrightarrow> P (even_odd_interpolate u v n)\n 2. odd n \\<Longrightarrow> P (even_odd_interpolate u v n)", "case True"], ["proof (state)\nthis:\n  even n\n\ngoal (2 subgoals):\n 1. even n \\<Longrightarrow> P (even_odd_interpolate u v n)\n 2. odd n \\<Longrightarrow> P (even_odd_interpolate u v n)", "have \"n div 2 \\<ge> N1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N1 \\<le> n div 2", "using that"], ["proof (prove)\nusing this:\n  2 * N1 + 2 * N2 \\<le> n\n\ngoal (1 subgoal):\n 1. N1 \\<le> n div 2", "by auto"], ["proof (state)\nthis:\n  N1 \\<le> n div 2\n\ngoal (2 subgoals):\n 1. even n \\<Longrightarrow> P (even_odd_interpolate u v n)\n 2. odd n \\<Longrightarrow> P (even_odd_interpolate u v n)", "then"], ["proof (chain)\npicking this:\n  N1 \\<le> n div 2", "show ?thesis"], ["proof (prove)\nusing this:\n  N1 \\<le> n div 2\n\ngoal (1 subgoal):\n 1. P (even_odd_interpolate u v n)", "unfolding even_odd_interpolate_def"], ["proof (prove)\nusing this:\n  N1 \\<le> n div 2\n\ngoal (1 subgoal):\n 1. P (if even n then u (n div 2) else v (n div 2))", "using True N1"], ["proof (prove)\nusing this:\n  N1 \\<le> n div 2\n  even n\n  N1 \\<le> ?n \\<Longrightarrow> P (u ?n)\n\ngoal (1 subgoal):\n 1. P (if even n then u (n div 2) else v (n div 2))", "by auto"], ["proof (state)\nthis:\n  P (even_odd_interpolate u v n)\n\ngoal (1 subgoal):\n 1. odd n \\<Longrightarrow> P (even_odd_interpolate u v n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. odd n \\<Longrightarrow> P (even_odd_interpolate u v n)", "case False"], ["proof (state)\nthis:\n  odd n\n\ngoal (1 subgoal):\n 1. odd n \\<Longrightarrow> P (even_odd_interpolate u v n)", "have \"n div 2 \\<ge> N2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N2 \\<le> n div 2", "using that"], ["proof (prove)\nusing this:\n  2 * N1 + 2 * N2 \\<le> n\n\ngoal (1 subgoal):\n 1. N2 \\<le> n div 2", "by auto"], ["proof (state)\nthis:\n  N2 \\<le> n div 2\n\ngoal (1 subgoal):\n 1. odd n \\<Longrightarrow> P (even_odd_interpolate u v n)", "then"], ["proof (chain)\npicking this:\n  N2 \\<le> n div 2", "show ?thesis"], ["proof (prove)\nusing this:\n  N2 \\<le> n div 2\n\ngoal (1 subgoal):\n 1. P (even_odd_interpolate u v n)", "unfolding even_odd_interpolate_def"], ["proof (prove)\nusing this:\n  N2 \\<le> n div 2\n\ngoal (1 subgoal):\n 1. P (if even n then u (n div 2) else v (n div 2))", "using False N2"], ["proof (prove)\nusing this:\n  N2 \\<le> n div 2\n  odd n\n  N2 \\<le> ?n \\<Longrightarrow> P (v ?n)\n\ngoal (1 subgoal):\n 1. P (if even n then u (n div 2) else v (n div 2))", "by auto"], ["proof (state)\nthis:\n  P (even_odd_interpolate u v n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  2 * N1 + 2 * N2 \\<le> ?n \\<Longrightarrow> P (even_odd_interpolate u v ?n)\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       eventually P F \\<Longrightarrow>\n       \\<exists>N. \\<forall>n\\<ge>N. P (even_odd_interpolate u v n)", "then"], ["proof (chain)\npicking this:\n  2 * N1 + 2 * N2 \\<le> ?n \\<Longrightarrow> P (even_odd_interpolate u v ?n)", "show \"\\<exists>N. \\<forall>n \\<ge> N. P (even_odd_interpolate u v n)\""], ["proof (prove)\nusing this:\n  2 * N1 + 2 * N2 \\<le> ?n \\<Longrightarrow> P (even_odd_interpolate u v ?n)\n\ngoal (1 subgoal):\n 1. \\<exists>N. \\<forall>n\\<ge>N. P (even_odd_interpolate u v n)", "by auto"], ["proof (state)\nthis:\n  \\<exists>N. \\<forall>n\\<ge>N. P (even_odd_interpolate u v n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  filterlim (even_odd_interpolate u v) F sequentially\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Then, we prove the continuity criterion for extensions of functions to the boundary $T$ of a set\n$S$. The first assumption is that $f(u_n)$ converges when $f$ converges to the boundary, and the\nsecond one that the extension of $f$ to the boundary has been defined using the limit along some\nsequence tending to the point under consideration. The following criterion is the most general one,\nbut this is not the version that is most commonly applied so we use a prime in its name.\\<close>"], ["", "lemma continuous_at_extension_sequentially':\n  fixes f :: \"'a::{first_countable_topology, t2_space} \\<Rightarrow> 'b::t3_space\"\n  assumes \"b \\<in> T\"\n          \"\\<And>u b. (\\<forall>n. u n \\<in> S) \\<Longrightarrow> b \\<in> T \\<Longrightarrow> u \\<longlonglongrightarrow> b \\<Longrightarrow> convergent (\\<lambda>n. f (u n))\"\n          \"\\<And>b. b \\<in> T \\<Longrightarrow> \\<exists>u. (\\<forall>n. u n \\<in> S) \\<and> u \\<longlonglongrightarrow> b \\<and> ((\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f b)\"\n  shows \"continuous (at b within (S \\<union> T)) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous (at b within S \\<union> T) f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. continuous (at b within S \\<union> T) f", "have first_step: \"(\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f c\" if \"\\<And>n. u n \\<in> S\" \"u \\<longlonglongrightarrow> c\" \"c \\<in> T\" for u c"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f c", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f c", "obtain v where v: \"\\<And>n. v n \\<in> S\" \"v \\<longlonglongrightarrow> c\" \"(\\<lambda>n. f (v n)) \\<longlonglongrightarrow> f c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>\\<And>n. v n \\<in> S; v \\<longlonglongrightarrow> c;\n         (\\<lambda>n. f (v n)) \\<longlonglongrightarrow> f c\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(3)[OF \\<open>c \\<in> T\\<close>]"], ["proof (prove)\nusing this:\n  \\<exists>u.\n     (\\<forall>n. u n \\<in> S) \\<and>\n     u \\<longlonglongrightarrow> c \\<and>\n     (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f c\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>\\<And>n. v n \\<in> S; v \\<longlonglongrightarrow> c;\n         (\\<lambda>n. f (v n)) \\<longlonglongrightarrow> f c\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  v ?n \\<in> S\n  v \\<longlonglongrightarrow> c\n  (\\<lambda>n. f (v n)) \\<longlonglongrightarrow> f c\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f c", "then"], ["proof (chain)\npicking this:\n  v ?n \\<in> S\n  v \\<longlonglongrightarrow> c\n  (\\<lambda>n. f (v n)) \\<longlonglongrightarrow> f c", "have A: \"even_odd_interpolate u v \\<longlonglongrightarrow> c\""], ["proof (prove)\nusing this:\n  v ?n \\<in> S\n  v \\<longlonglongrightarrow> c\n  (\\<lambda>n. f (v n)) \\<longlonglongrightarrow> f c\n\ngoal (1 subgoal):\n 1. even_odd_interpolate u v \\<longlonglongrightarrow> c", "unfolding even_odd_interpolate_filterlim[symmetric]"], ["proof (prove)\nusing this:\n  v ?n \\<in> S\n  v \\<longlonglongrightarrow> c\n  (\\<lambda>n. f (v n)) \\<longlonglongrightarrow> f c\n\ngoal (1 subgoal):\n 1. u \\<longlonglongrightarrow> c \\<and> v \\<longlonglongrightarrow> c", "using \\<open>u \\<longlonglongrightarrow> c\\<close>"], ["proof (prove)\nusing this:\n  v ?n \\<in> S\n  v \\<longlonglongrightarrow> c\n  (\\<lambda>n. f (v n)) \\<longlonglongrightarrow> f c\n  u \\<longlonglongrightarrow> c\n\ngoal (1 subgoal):\n 1. u \\<longlonglongrightarrow> c \\<and> v \\<longlonglongrightarrow> c", "by auto"], ["proof (state)\nthis:\n  even_odd_interpolate u v \\<longlonglongrightarrow> c\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f c", "moreover"], ["proof (state)\nthis:\n  even_odd_interpolate u v \\<longlonglongrightarrow> c\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f c", "have B: \"\\<forall>n. even_odd_interpolate u v n \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. even_odd_interpolate u v n \\<in> S", "using \\<open>\\<And>n. u n \\<in> S\\<close> \\<open>\\<And>n. v n \\<in> S\\<close>"], ["proof (prove)\nusing this:\n  u ?n \\<in> S\n  v ?n \\<in> S\n\ngoal (1 subgoal):\n 1. \\<forall>n. even_odd_interpolate u v n \\<in> S", "unfolding even_odd_interpolate_def"], ["proof (prove)\nusing this:\n  u ?n \\<in> S\n  v ?n \\<in> S\n\ngoal (1 subgoal):\n 1. \\<forall>n. (if even n then u (n div 2) else v (n div 2)) \\<in> S", "by auto"], ["proof (state)\nthis:\n  \\<forall>n. even_odd_interpolate u v n \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f c", "have \"convergent (\\<lambda>n. f (even_odd_interpolate u v n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. convergent (\\<lambda>n. f (even_odd_interpolate u v n))", "by (rule assms(2)[OF B \\<open>c \\<in> T\\<close> A])"], ["proof (state)\nthis:\n  convergent (\\<lambda>n. f (even_odd_interpolate u v n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f c", "then"], ["proof (chain)\npicking this:\n  convergent (\\<lambda>n. f (even_odd_interpolate u v n))", "obtain m where \"(\\<lambda>n. f (even_odd_interpolate u v n)) \\<longlonglongrightarrow> m\""], ["proof (prove)\nusing this:\n  convergent (\\<lambda>n. f (even_odd_interpolate u v n))\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        (\\<lambda>n. f (even_odd_interpolate u v n))\n        \\<longlonglongrightarrow> m \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding convergent_def"], ["proof (prove)\nusing this:\n  \\<exists>L.\n     (\\<lambda>n. f (even_odd_interpolate u v n))\n     \\<longlonglongrightarrow> L\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        (\\<lambda>n. f (even_odd_interpolate u v n))\n        \\<longlonglongrightarrow> m \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n. f (even_odd_interpolate u v n)) \\<longlonglongrightarrow> m\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f c", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n. f (even_odd_interpolate u v n)) \\<longlonglongrightarrow> m", "have \"even_odd_interpolate (f o u) (f o v) \\<longlonglongrightarrow> m\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. f (even_odd_interpolate u v n)) \\<longlonglongrightarrow> m\n\ngoal (1 subgoal):\n 1. even_odd_interpolate (f \\<circ> u) (f \\<circ> v)\n    \\<longlonglongrightarrow> m", "unfolding even_odd_interpolate_compose"], ["proof (prove)\nusing this:\n  (\\<lambda>n. f (even_odd_interpolate u v n)) \\<longlonglongrightarrow> m\n\ngoal (1 subgoal):\n 1. (f \\<circ> even_odd_interpolate u v) \\<longlonglongrightarrow> m", "unfolding comp_def"], ["proof (prove)\nusing this:\n  (\\<lambda>n. f (even_odd_interpolate u v n)) \\<longlonglongrightarrow> m\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f (even_odd_interpolate u v x)) \\<longlonglongrightarrow> m", "by auto"], ["proof (state)\nthis:\n  even_odd_interpolate (f \\<circ> u) (f \\<circ> v)\n  \\<longlonglongrightarrow> m\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f c", "then"], ["proof (chain)\npicking this:\n  even_odd_interpolate (f \\<circ> u) (f \\<circ> v)\n  \\<longlonglongrightarrow> m", "have \"(f o u) \\<longlonglongrightarrow> m\" \"(f o v) \\<longlonglongrightarrow> m\""], ["proof (prove)\nusing this:\n  even_odd_interpolate (f \\<circ> u) (f \\<circ> v)\n  \\<longlonglongrightarrow> m\n\ngoal (1 subgoal):\n 1. (f \\<circ> u) \\<longlonglongrightarrow> m &&&\n    (f \\<circ> v) \\<longlonglongrightarrow> m", "unfolding even_odd_interpolate_filterlim[symmetric]"], ["proof (prove)\nusing this:\n  (f \\<circ> u) \\<longlonglongrightarrow> m \\<and>\n  (f \\<circ> v) \\<longlonglongrightarrow> m\n\ngoal (1 subgoal):\n 1. (f \\<circ> u) \\<longlonglongrightarrow> m &&&\n    (f \\<circ> v) \\<longlonglongrightarrow> m", "by auto"], ["proof (state)\nthis:\n  (f \\<circ> u) \\<longlonglongrightarrow> m\n  (f \\<circ> v) \\<longlonglongrightarrow> m\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f c", "then"], ["proof (chain)\npicking this:\n  (f \\<circ> u) \\<longlonglongrightarrow> m\n  (f \\<circ> v) \\<longlonglongrightarrow> m", "have \"m = f c\""], ["proof (prove)\nusing this:\n  (f \\<circ> u) \\<longlonglongrightarrow> m\n  (f \\<circ> v) \\<longlonglongrightarrow> m\n\ngoal (1 subgoal):\n 1. m = f c", "using v(3)"], ["proof (prove)\nusing this:\n  (f \\<circ> u) \\<longlonglongrightarrow> m\n  (f \\<circ> v) \\<longlonglongrightarrow> m\n  (\\<lambda>n. f (v n)) \\<longlonglongrightarrow> f c\n\ngoal (1 subgoal):\n 1. m = f c", "unfolding comp_def"], ["proof (prove)\nusing this:\n  (\\<lambda>x. f (u x)) \\<longlonglongrightarrow> m\n  (\\<lambda>x. f (v x)) \\<longlonglongrightarrow> m\n  (\\<lambda>n. f (v n)) \\<longlonglongrightarrow> f c\n\ngoal (1 subgoal):\n 1. m = f c", "using LIMSEQ_unique"], ["proof (prove)\nusing this:\n  (\\<lambda>x. f (u x)) \\<longlonglongrightarrow> m\n  (\\<lambda>x. f (v x)) \\<longlonglongrightarrow> m\n  (\\<lambda>n. f (v n)) \\<longlonglongrightarrow> f c\n  \\<lbrakk>?X \\<longlonglongrightarrow> ?a;\n   ?X \\<longlonglongrightarrow> ?b\\<rbrakk>\n  \\<Longrightarrow> ?a = ?b\n\ngoal (1 subgoal):\n 1. m = f c", "by auto"], ["proof (state)\nthis:\n  m = f c\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f c", "then"], ["proof (chain)\npicking this:\n  m = f c", "show ?thesis"], ["proof (prove)\nusing this:\n  m = f c\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f c", "using \\<open>(f o u) \\<longlonglongrightarrow> m\\<close>"], ["proof (prove)\nusing this:\n  m = f c\n  (f \\<circ> u) \\<longlonglongrightarrow> m\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f c", "unfolding comp_def"], ["proof (prove)\nusing this:\n  m = f c\n  (\\<lambda>x. f (u x)) \\<longlonglongrightarrow> m\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f c", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>n. ?u n \\<in> S; ?u \\<longlonglongrightarrow> ?c;\n   ?c \\<in> T\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>n. f (?u n)) \\<longlonglongrightarrow> f ?c\n\ngoal (1 subgoal):\n 1. continuous (at b within S \\<union> T) f", "show \"continuous (at b within (S \\<union> T)) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous (at b within S \\<union> T) f", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> continuous (at b within S \\<union> T) f \\<Longrightarrow> False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> continuous (at b within S \\<union> T) f\n\ngoal (1 subgoal):\n 1. \\<not> continuous (at b within S \\<union> T) f \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> continuous (at b within S \\<union> T) f", "obtain U where U: \"open U\" \"f b \\<in> U\" \"\\<not>(\\<forall>\\<^sub>F x in at b within S \\<union> T. f x \\<in> U)\""], ["proof (prove)\nusing this:\n  \\<not> continuous (at b within S \\<union> T) f\n\ngoal (1 subgoal):\n 1. (\\<And>U.\n        \\<lbrakk>open U; f b \\<in> U;\n         \\<not> (\\<forall>\\<^sub>F x in at b within S \\<union> T.\n                    f x \\<in> U)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding continuous_within tendsto_def[where l = \"f b\"]"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>Sa.\n             open Sa \\<longrightarrow>\n             f b \\<in> Sa \\<longrightarrow>\n             (\\<forall>\\<^sub>F x in at b within S \\<union> T.\n                 f x \\<in> Sa))\n\ngoal (1 subgoal):\n 1. (\\<And>U.\n        \\<lbrakk>open U; f b \\<in> U;\n         \\<not> (\\<forall>\\<^sub>F x in at b within S \\<union> T.\n                    f x \\<in> U)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using sequentially_imp_eventually_nhds_within"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>Sa.\n             open Sa \\<longrightarrow>\n             f b \\<in> Sa \\<longrightarrow>\n             (\\<forall>\\<^sub>F x in at b within S \\<union> T.\n                 f x \\<in> Sa))\n  \\<forall>f.\n     (\\<forall>n. f n \\<in> ?s) \\<and>\n     f \\<longlonglongrightarrow> ?a \\<longrightarrow>\n     (\\<forall>\\<^sub>F n in sequentially. ?P (f n)) \\<Longrightarrow>\n  eventually ?P (inf (nhds ?a) (principal ?s))\n\ngoal (1 subgoal):\n 1. (\\<And>U.\n        \\<lbrakk>open U; f b \\<in> U;\n         \\<not> (\\<forall>\\<^sub>F x in at b within S \\<union> T.\n                    f x \\<in> U)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  open U\n  f b \\<in> U\n  \\<not> (\\<forall>\\<^sub>F x in at b within S \\<union> T. f x \\<in> U)\n\ngoal (1 subgoal):\n 1. \\<not> continuous (at b within S \\<union> T) f \\<Longrightarrow> False", "have \"\\<exists>V W. open V \\<and> open W \\<and> f b \\<in> V \\<and> (UNIV - U) \\<subseteq> W \\<and> V \\<inter> W = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>V W.\n       open V \\<and>\n       open W \\<and>\n       f b \\<in> V \\<and> UNIV - U \\<subseteq> W \\<and> V \\<inter> W = {}", "apply (rule t3_space)"], ["proof (prove)\ngoal (2 subgoals):\n 1. closed (UNIV - U)\n 2. f b \\<notin> UNIV - U", "using U"], ["proof (prove)\nusing this:\n  open U\n  f b \\<in> U\n  \\<not> (\\<forall>\\<^sub>F x in at b within S \\<union> T. f x \\<in> U)\n\ngoal (2 subgoals):\n 1. closed (UNIV - U)\n 2. f b \\<notin> UNIV - U", "by auto"], ["proof (state)\nthis:\n  \\<exists>V W.\n     open V \\<and>\n     open W \\<and>\n     f b \\<in> V \\<and> UNIV - U \\<subseteq> W \\<and> V \\<inter> W = {}\n\ngoal (1 subgoal):\n 1. \\<not> continuous (at b within S \\<union> T) f \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>V W.\n     open V \\<and>\n     open W \\<and>\n     f b \\<in> V \\<and> UNIV - U \\<subseteq> W \\<and> V \\<inter> W = {}", "obtain V W where VW: \"open V\" \"open W\" \"f b \\<in> V\" \"UNIV - U \\<subseteq> W\" \"V \\<inter> W = {}\""], ["proof (prove)\nusing this:\n  \\<exists>V W.\n     open V \\<and>\n     open W \\<and>\n     f b \\<in> V \\<and> UNIV - U \\<subseteq> W \\<and> V \\<inter> W = {}\n\ngoal (1 subgoal):\n 1. (\\<And>V W.\n        \\<lbrakk>open V; open W; f b \\<in> V; UNIV - U \\<subseteq> W;\n         V \\<inter> W = {}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  open V\n  open W\n  f b \\<in> V\n  UNIV - U \\<subseteq> W\n  V \\<inter> W = {}\n\ngoal (1 subgoal):\n 1. \\<not> continuous (at b within S \\<union> T) f \\<Longrightarrow> False", "obtain A :: \"nat \\<Rightarrow> 'a set\" where *:\n      \"\\<And>i. open (A i)\"\n      \"\\<And>i. b \\<in> A i\"\n      \"\\<And>F. \\<forall>n. F n \\<in> A n \\<Longrightarrow> F \\<longlonglongrightarrow> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A.\n        \\<lbrakk>\\<And>i. open (A i); \\<And>i. b \\<in> A i;\n         \\<And>F.\n            \\<forall>n. F n \\<in> A n \\<Longrightarrow>\n            F \\<longlonglongrightarrow> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule first_countable_topology_class.countable_basis) blast"], ["proof (state)\nthis:\n  open (A ?i)\n  b \\<in> A ?i\n  \\<forall>n. ?F n \\<in> A n \\<Longrightarrow>\n  ?F \\<longlonglongrightarrow> b\n\ngoal (1 subgoal):\n 1. \\<not> continuous (at b within S \\<union> T) f \\<Longrightarrow> False", "with * U(3)"], ["proof (chain)\npicking this:\n  open (A ?i)\n  b \\<in> A ?i\n  \\<forall>n. ?F n \\<in> A n \\<Longrightarrow>\n  ?F \\<longlonglongrightarrow> b\n  \\<not> (\\<forall>\\<^sub>F x in at b within S \\<union> T. f x \\<in> U)\n  open (A ?i)\n  b \\<in> A ?i\n  \\<forall>n. ?F n \\<in> A n \\<Longrightarrow>\n  ?F \\<longlonglongrightarrow> b", "have \"\\<exists>F. \\<forall>n. F n \\<in> S \\<union> T \\<and> F n \\<in> A n \\<and> \\<not> (f(F n) \\<in> U)\""], ["proof (prove)\nusing this:\n  open (A ?i)\n  b \\<in> A ?i\n  \\<forall>n. ?F n \\<in> A n \\<Longrightarrow>\n  ?F \\<longlonglongrightarrow> b\n  \\<not> (\\<forall>\\<^sub>F x in at b within S \\<union> T. f x \\<in> U)\n  open (A ?i)\n  b \\<in> A ?i\n  \\<forall>n. ?F n \\<in> A n \\<Longrightarrow>\n  ?F \\<longlonglongrightarrow> b\n\ngoal (1 subgoal):\n 1. \\<exists>F.\n       \\<forall>n.\n          F n \\<in> S \\<union> T \\<and>\n          F n \\<in> A n \\<and> f (F n) \\<notin> U", "unfolding at_within_def eventually_inf_principal eventually_nhds"], ["proof (prove)\nusing this:\n  open (A ?i)\n  b \\<in> A ?i\n  \\<forall>n. ?F n \\<in> A n \\<Longrightarrow>\n  ?F \\<longlonglongrightarrow> b\n  \\<nexists>Sa.\n     open Sa \\<and>\n     b \\<in> Sa \\<and>\n     (\\<forall>x\\<in>Sa.\n         x \\<in> S \\<union> T - {b} \\<longrightarrow> f x \\<in> U)\n  open (A ?i)\n  b \\<in> A ?i\n  \\<forall>n. ?F n \\<in> A n \\<Longrightarrow>\n  ?F \\<longlonglongrightarrow> b\n\ngoal (1 subgoal):\n 1. \\<exists>F.\n       \\<forall>n.\n          F n \\<in> S \\<union> T \\<and>\n          F n \\<in> A n \\<and> f (F n) \\<notin> U", "by (intro choice) (meson DiffE)"], ["proof (state)\nthis:\n  \\<exists>F.\n     \\<forall>n.\n        F n \\<in> S \\<union> T \\<and>\n        F n \\<in> A n \\<and> f (F n) \\<notin> U\n\ngoal (1 subgoal):\n 1. \\<not> continuous (at b within S \\<union> T) f \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>F.\n     \\<forall>n.\n        F n \\<in> S \\<union> T \\<and>\n        F n \\<in> A n \\<and> f (F n) \\<notin> U", "obtain F where F: \"\\<And>n. F n \\<in> S \\<union> T\" \"\\<And>n. F n \\<in> A n\" \"\\<And>n. f(F n) \\<notin> U\""], ["proof (prove)\nusing this:\n  \\<exists>F.\n     \\<forall>n.\n        F n \\<in> S \\<union> T \\<and>\n        F n \\<in> A n \\<and> f (F n) \\<notin> U\n\ngoal (1 subgoal):\n 1. (\\<And>F.\n        \\<lbrakk>\\<And>n. F n \\<in> S \\<union> T; \\<And>n. F n \\<in> A n;\n         \\<And>n. f (F n) \\<notin> U\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  F ?n \\<in> S \\<union> T\n  F ?n \\<in> A ?n\n  f (F ?n) \\<notin> U\n\ngoal (1 subgoal):\n 1. \\<not> continuous (at b within S \\<union> T) f \\<Longrightarrow> False", "have \"\\<exists>y. y \\<in> S \\<and> y \\<in> A n \\<and> f y \\<in> W\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y. y \\<in> S \\<and> y \\<in> A n \\<and> f y \\<in> W", "proof (cases \"F n \\<in> S\")"], ["proof (state)\ngoal (2 subgoals):\n 1. F n \\<in> S \\<Longrightarrow>\n    \\<exists>y. y \\<in> S \\<and> y \\<in> A n \\<and> f y \\<in> W\n 2. F n \\<notin> S \\<Longrightarrow>\n    \\<exists>y. y \\<in> S \\<and> y \\<in> A n \\<and> f y \\<in> W", "case True"], ["proof (state)\nthis:\n  F n \\<in> S\n\ngoal (2 subgoals):\n 1. F n \\<in> S \\<Longrightarrow>\n    \\<exists>y. y \\<in> S \\<and> y \\<in> A n \\<and> f y \\<in> W\n 2. F n \\<notin> S \\<Longrightarrow>\n    \\<exists>y. y \\<in> S \\<and> y \\<in> A n \\<and> f y \\<in> W", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y. y \\<in> S \\<and> y \\<in> A n \\<and> f y \\<in> W", "apply (rule exI[of _ \"F n\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. F n \\<in> S \\<and> F n \\<in> A n \\<and> f (F n) \\<in> W", "using F VW True"], ["proof (prove)\nusing this:\n  F ?n \\<in> S \\<union> T\n  F ?n \\<in> A ?n\n  f (F ?n) \\<notin> U\n  open V\n  open W\n  f b \\<in> V\n  UNIV - U \\<subseteq> W\n  V \\<inter> W = {}\n  F n \\<in> S\n\ngoal (1 subgoal):\n 1. F n \\<in> S \\<and> F n \\<in> A n \\<and> f (F n) \\<in> W", "by auto"], ["proof (state)\nthis:\n  \\<exists>y. y \\<in> S \\<and> y \\<in> A n \\<and> f y \\<in> W\n\ngoal (1 subgoal):\n 1. F n \\<notin> S \\<Longrightarrow>\n    \\<exists>y. y \\<in> S \\<and> y \\<in> A n \\<and> f y \\<in> W", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. F n \\<notin> S \\<Longrightarrow>\n    \\<exists>y. y \\<in> S \\<and> y \\<in> A n \\<and> f y \\<in> W", "case False"], ["proof (state)\nthis:\n  F n \\<notin> S\n\ngoal (1 subgoal):\n 1. F n \\<notin> S \\<Longrightarrow>\n    \\<exists>y. y \\<in> S \\<and> y \\<in> A n \\<and> f y \\<in> W", "then"], ["proof (chain)\npicking this:\n  F n \\<notin> S", "have \"F n \\<in> T\""], ["proof (prove)\nusing this:\n  F n \\<notin> S\n\ngoal (1 subgoal):\n 1. F n \\<in> T", "using \\<open>F n \\<in> S \\<union> T\\<close>"], ["proof (prove)\nusing this:\n  F n \\<notin> S\n  F n \\<in> S \\<union> T\n\ngoal (1 subgoal):\n 1. F n \\<in> T", "by auto"], ["proof (state)\nthis:\n  F n \\<in> T\n\ngoal (1 subgoal):\n 1. F n \\<notin> S \\<Longrightarrow>\n    \\<exists>y. y \\<in> S \\<and> y \\<in> A n \\<and> f y \\<in> W", "obtain u where u: \"\\<And>p. u p \\<in> S\" \"u \\<longlonglongrightarrow> F n\" \"(\\<lambda>p. f (u p)) \\<longlonglongrightarrow> f(F n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>\\<And>p. u p \\<in> S; u \\<longlonglongrightarrow> F n;\n         (\\<lambda>p. f (u p)) \\<longlonglongrightarrow> f (F n)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(3)[OF \\<open>F n \\<in> T\\<close>]"], ["proof (prove)\nusing this:\n  \\<exists>u.\n     (\\<forall>n. u n \\<in> S) \\<and>\n     u \\<longlonglongrightarrow> F n \\<and>\n     (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f (F n)\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>\\<And>p. u p \\<in> S; u \\<longlonglongrightarrow> F n;\n         (\\<lambda>p. f (u p)) \\<longlonglongrightarrow> f (F n)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  u ?p \\<in> S\n  u \\<longlonglongrightarrow> F n\n  (\\<lambda>p. f (u p)) \\<longlonglongrightarrow> f (F n)\n\ngoal (1 subgoal):\n 1. F n \\<notin> S \\<Longrightarrow>\n    \\<exists>y. y \\<in> S \\<and> y \\<in> A n \\<and> f y \\<in> W", "moreover"], ["proof (state)\nthis:\n  u ?p \\<in> S\n  u \\<longlonglongrightarrow> F n\n  (\\<lambda>p. f (u p)) \\<longlonglongrightarrow> f (F n)\n\ngoal (1 subgoal):\n 1. F n \\<notin> S \\<Longrightarrow>\n    \\<exists>y. y \\<in> S \\<and> y \\<in> A n \\<and> f y \\<in> W", "have \"f(F n) \\<in> W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (F n) \\<in> W", "using F VW"], ["proof (prove)\nusing this:\n  F ?n \\<in> S \\<union> T\n  F ?n \\<in> A ?n\n  f (F ?n) \\<notin> U\n  open V\n  open W\n  f b \\<in> V\n  UNIV - U \\<subseteq> W\n  V \\<inter> W = {}\n\ngoal (1 subgoal):\n 1. f (F n) \\<in> W", "by auto"], ["proof (state)\nthis:\n  f (F n) \\<in> W\n\ngoal (1 subgoal):\n 1. F n \\<notin> S \\<Longrightarrow>\n    \\<exists>y. y \\<in> S \\<and> y \\<in> A n \\<and> f y \\<in> W", "ultimately"], ["proof (chain)\npicking this:\n  u ?p \\<in> S\n  u \\<longlonglongrightarrow> F n\n  (\\<lambda>p. f (u p)) \\<longlonglongrightarrow> f (F n)\n  f (F n) \\<in> W", "have \"eventually (\\<lambda>p. f (u p) \\<in> W) sequentially\""], ["proof (prove)\nusing this:\n  u ?p \\<in> S\n  u \\<longlonglongrightarrow> F n\n  (\\<lambda>p. f (u p)) \\<longlonglongrightarrow> f (F n)\n  f (F n) \\<in> W\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F p in sequentially. f (u p) \\<in> W", "using \\<open>open W\\<close>"], ["proof (prove)\nusing this:\n  u ?p \\<in> S\n  u \\<longlonglongrightarrow> F n\n  (\\<lambda>p. f (u p)) \\<longlonglongrightarrow> f (F n)\n  f (F n) \\<in> W\n  open W\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F p in sequentially. f (u p) \\<in> W", "by (simp add: tendsto_def)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F p in sequentially. f (u p) \\<in> W\n\ngoal (1 subgoal):\n 1. F n \\<notin> S \\<Longrightarrow>\n    \\<exists>y. y \\<in> S \\<and> y \\<in> A n \\<and> f y \\<in> W", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F p in sequentially. f (u p) \\<in> W\n\ngoal (1 subgoal):\n 1. F n \\<notin> S \\<Longrightarrow>\n    \\<exists>y. y \\<in> S \\<and> y \\<in> A n \\<and> f y \\<in> W", "have \"eventually (\\<lambda>p. u p \\<in> A n) sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F p in sequentially. u p \\<in> A n", "using \\<open>F n \\<in> A n\\<close> u \\<open>open (A n)\\<close>"], ["proof (prove)\nusing this:\n  F n \\<in> A n\n  u ?p \\<in> S\n  u \\<longlonglongrightarrow> F n\n  (\\<lambda>p. f (u p)) \\<longlonglongrightarrow> f (F n)\n  open (A n)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F p in sequentially. u p \\<in> A n", "by (simp add: tendsto_def)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F p in sequentially. u p \\<in> A n\n\ngoal (1 subgoal):\n 1. F n \\<notin> S \\<Longrightarrow>\n    \\<exists>y. y \\<in> S \\<and> y \\<in> A n \\<and> f y \\<in> W", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F p in sequentially. f (u p) \\<in> W\n  \\<forall>\\<^sub>F p in sequentially. u p \\<in> A n", "have \"\\<exists>p. f(u p) \\<in> W \\<and> u p \\<in> A n\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F p in sequentially. f (u p) \\<in> W\n  \\<forall>\\<^sub>F p in sequentially. u p \\<in> A n\n\ngoal (1 subgoal):\n 1. \\<exists>p. f (u p) \\<in> W \\<and> u p \\<in> A n", "using eventually_False_sequentially eventually_elim2"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F p in sequentially. f (u p) \\<in> W\n  \\<forall>\\<^sub>F p in sequentially. u p \\<in> A n\n  \\<not> (\\<forall>\\<^sub>F n in sequentially. False)\n  \\<lbrakk>eventually ?P ?F; eventually ?Q ?F;\n   \\<And>i. \\<lbrakk>?P i; ?Q i\\<rbrakk> \\<Longrightarrow> ?R i\\<rbrakk>\n  \\<Longrightarrow> eventually ?R ?F\n\ngoal (1 subgoal):\n 1. \\<exists>p. f (u p) \\<in> W \\<and> u p \\<in> A n", "by blast"], ["proof (state)\nthis:\n  \\<exists>p. f (u p) \\<in> W \\<and> u p \\<in> A n\n\ngoal (1 subgoal):\n 1. F n \\<notin> S \\<Longrightarrow>\n    \\<exists>y. y \\<in> S \\<and> y \\<in> A n \\<and> f y \\<in> W", "then"], ["proof (chain)\npicking this:\n  \\<exists>p. f (u p) \\<in> W \\<and> u p \\<in> A n", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>p. f (u p) \\<in> W \\<and> u p \\<in> A n\n\ngoal (1 subgoal):\n 1. \\<exists>y. y \\<in> S \\<and> y \\<in> A n \\<and> f y \\<in> W", "using u(1)"], ["proof (prove)\nusing this:\n  \\<exists>p. f (u p) \\<in> W \\<and> u p \\<in> A n\n  u ?p \\<in> S\n\ngoal (1 subgoal):\n 1. \\<exists>y. y \\<in> S \\<and> y \\<in> A n \\<and> f y \\<in> W", "by auto"], ["proof (state)\nthis:\n  \\<exists>y. y \\<in> S \\<and> y \\<in> A n \\<and> f y \\<in> W\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>y. y \\<in> S \\<and> y \\<in> A ?n \\<and> f y \\<in> W\n\ngoal (1 subgoal):\n 1. \\<not> continuous (at b within S \\<union> T) f \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>y. y \\<in> S \\<and> y \\<in> A ?n \\<and> f y \\<in> W", "have \"\\<exists>u. \\<forall>n. u n \\<in> S \\<and> u n \\<in> A n \\<and> f (u n) \\<in> W\""], ["proof (prove)\nusing this:\n  \\<exists>y. y \\<in> S \\<and> y \\<in> A ?n \\<and> f y \\<in> W\n\ngoal (1 subgoal):\n 1. \\<exists>u.\n       \\<forall>n. u n \\<in> S \\<and> u n \\<in> A n \\<and> f (u n) \\<in> W", "by (auto intro: choice)"], ["proof (state)\nthis:\n  \\<exists>u.\n     \\<forall>n. u n \\<in> S \\<and> u n \\<in> A n \\<and> f (u n) \\<in> W\n\ngoal (1 subgoal):\n 1. \\<not> continuous (at b within S \\<union> T) f \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>u.\n     \\<forall>n. u n \\<in> S \\<and> u n \\<in> A n \\<and> f (u n) \\<in> W", "obtain u where u: \"\\<And>n. u n \\<in> S\" \"\\<And>n. u n \\<in> A n\" \"\\<And>n. f (u n) \\<in> W\""], ["proof (prove)\nusing this:\n  \\<exists>u.\n     \\<forall>n. u n \\<in> S \\<and> u n \\<in> A n \\<and> f (u n) \\<in> W\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>\\<And>n. u n \\<in> S; \\<And>n. u n \\<in> A n;\n         \\<And>n. f (u n) \\<in> W\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  u ?n \\<in> S\n  u ?n \\<in> A ?n\n  f (u ?n) \\<in> W\n\ngoal (1 subgoal):\n 1. \\<not> continuous (at b within S \\<union> T) f \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  u ?n \\<in> S\n  u ?n \\<in> A ?n\n  f (u ?n) \\<in> W", "have \"u \\<longlonglongrightarrow> b\""], ["proof (prove)\nusing this:\n  u ?n \\<in> S\n  u ?n \\<in> A ?n\n  f (u ?n) \\<in> W\n\ngoal (1 subgoal):\n 1. u \\<longlonglongrightarrow> b", "using *(3)"], ["proof (prove)\nusing this:\n  u ?n \\<in> S\n  u ?n \\<in> A ?n\n  f (u ?n) \\<in> W\n  \\<forall>n. ?F n \\<in> A n \\<Longrightarrow>\n  ?F \\<longlonglongrightarrow> b\n\ngoal (1 subgoal):\n 1. u \\<longlonglongrightarrow> b", "by auto"], ["proof (state)\nthis:\n  u \\<longlonglongrightarrow> b\n\ngoal (1 subgoal):\n 1. \\<not> continuous (at b within S \\<union> T) f \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  u \\<longlonglongrightarrow> b", "have \"(\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f b\""], ["proof (prove)\nusing this:\n  u \\<longlonglongrightarrow> b\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f b", "using first_step assms u"], ["proof (prove)\nusing this:\n  u \\<longlonglongrightarrow> b\n  \\<lbrakk>\\<And>n. ?u n \\<in> S; ?u \\<longlonglongrightarrow> ?c;\n   ?c \\<in> T\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>n. f (?u n)) \\<longlonglongrightarrow> f ?c\n  b \\<in> T\n  \\<lbrakk>\\<forall>n. ?u n \\<in> S; ?b \\<in> T;\n   ?u \\<longlonglongrightarrow> ?b\\<rbrakk>\n  \\<Longrightarrow> convergent (\\<lambda>n. f (?u n))\n  ?b \\<in> T \\<Longrightarrow>\n  \\<exists>u.\n     (\\<forall>n. u n \\<in> S) \\<and>\n     u \\<longlonglongrightarrow> ?b \\<and>\n     (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f ?b\n  u ?n \\<in> S\n  u ?n \\<in> A ?n\n  f (u ?n) \\<in> W\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f b", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f b\n\ngoal (1 subgoal):\n 1. \\<not> continuous (at b within S \\<union> T) f \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f b", "have \"eventually (\\<lambda>n. f (u n) \\<in> V) sequentially\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f b\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. f (u n) \\<in> V", "using VW"], ["proof (prove)\nusing this:\n  (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f b\n  open V\n  open W\n  f b \\<in> V\n  UNIV - U \\<subseteq> W\n  V \\<inter> W = {}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. f (u n) \\<in> V", "by (simp add: tendsto_def)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially. f (u n) \\<in> V\n\ngoal (1 subgoal):\n 1. \\<not> continuous (at b within S \\<union> T) f \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F n in sequentially. f (u n) \\<in> V", "have \"\\<exists>n. f (u n) \\<in> V\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially. f (u n) \\<in> V\n\ngoal (1 subgoal):\n 1. \\<exists>n. f (u n) \\<in> V", "using eventually_False_sequentially eventually_elim2"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially. f (u n) \\<in> V\n  \\<not> (\\<forall>\\<^sub>F n in sequentially. False)\n  \\<lbrakk>eventually ?P ?F; eventually ?Q ?F;\n   \\<And>i. \\<lbrakk>?P i; ?Q i\\<rbrakk> \\<Longrightarrow> ?R i\\<rbrakk>\n  \\<Longrightarrow> eventually ?R ?F\n\ngoal (1 subgoal):\n 1. \\<exists>n. f (u n) \\<in> V", "by blast"], ["proof (state)\nthis:\n  \\<exists>n. f (u n) \\<in> V\n\ngoal (1 subgoal):\n 1. \\<not> continuous (at b within S \\<union> T) f \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>n. f (u n) \\<in> V", "show False"], ["proof (prove)\nusing this:\n  \\<exists>n. f (u n) \\<in> V\n\ngoal (1 subgoal):\n 1. False", "using u(3) \\<open>V \\<inter> W = {}\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>n. f (u n) \\<in> V\n  f (u ?n) \\<in> W\n  V \\<inter> W = {}\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  continuous (at b within S \\<union> T) f\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>We can specialize the previous statement to the common case where one already knows the\nsequential continuity of $f$ along sequences in $S$ converging to a point in $T$. This will be the\ncase in most --but not all-- applications. This is a straightforward application of the above\ncriterion.\\<close>"], ["", "proposition continuous_at_extension_sequentially:\n  fixes f :: \"'a::{first_countable_topology, t2_space} \\<Rightarrow> 'b::t3_space\"\n  assumes \"a \\<in> T\"\n          \"T \\<subseteq> closure S\"\n          \"\\<And>u b. (\\<forall>n. u n \\<in> S) \\<Longrightarrow> b \\<in> T \\<Longrightarrow> u \\<longlonglongrightarrow> b \\<Longrightarrow> (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f b\"\n  shows \"continuous (at a within (S \\<union> T)) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous (at a within S \\<union> T) f", "apply (rule continuous_at_extension_sequentially'[OF \\<open>a \\<in> T\\<close>])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>u b.\n       \\<lbrakk>\\<forall>n. u n \\<in> S; b \\<in> T;\n        u \\<longlonglongrightarrow> b\\<rbrakk>\n       \\<Longrightarrow> convergent (\\<lambda>n. f (u n))\n 2. \\<And>b.\n       b \\<in> T \\<Longrightarrow>\n       \\<exists>u.\n          (\\<forall>n. u n \\<in> S) \\<and>\n          u \\<longlonglongrightarrow> b \\<and>\n          (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f b", "using assms(3) convergent_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>n. ?u n \\<in> S; ?b \\<in> T;\n   ?u \\<longlonglongrightarrow> ?b\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>n. f (?u n)) \\<longlonglongrightarrow> f ?b\n  convergent ?X = (\\<exists>L. ?X \\<longlonglongrightarrow> L)\n\ngoal (2 subgoals):\n 1. \\<And>u b.\n       \\<lbrakk>\\<forall>n. u n \\<in> S; b \\<in> T;\n        u \\<longlonglongrightarrow> b\\<rbrakk>\n       \\<Longrightarrow> convergent (\\<lambda>n. f (u n))\n 2. \\<And>b.\n       b \\<in> T \\<Longrightarrow>\n       \\<exists>u.\n          (\\<forall>n. u n \\<in> S) \\<and>\n          u \\<longlonglongrightarrow> b \\<and>\n          (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f b", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> T \\<Longrightarrow>\n       \\<exists>u.\n          (\\<forall>n. u n \\<in> S) \\<and>\n          u \\<longlonglongrightarrow> b \\<and>\n          (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f b", "by (metis assms(2) assms(3) closure_sequential subset_iff)"], ["", "text \\<open>We also give global versions. We can only express the continuity on $T$, so\nthis is slightly weaker than the previous statements since we are not saying anything on inside\nsequences tending to $T$ -- but in cases where $T$ contains $S$ these statements contain all the\ninformation.\\<close>"], ["", "lemma continuous_on_extension_sequentially':\n  fixes f :: \"'a::{first_countable_topology, t2_space} \\<Rightarrow> 'b::t3_space\"\n  assumes \"\\<And>u b. (\\<forall>n. u n \\<in> S) \\<Longrightarrow> b \\<in> T \\<Longrightarrow> u \\<longlonglongrightarrow> b \\<Longrightarrow> convergent (\\<lambda>n. f (u n))\"\n          \"\\<And>b. b \\<in> T \\<Longrightarrow> \\<exists>u. (\\<forall>n. u n \\<in> S) \\<and> u \\<longlonglongrightarrow> b \\<and> ((\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f b)\"\n  shows \"continuous_on T f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on T f", "unfolding continuous_on_eq_continuous_within"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>T. continuous (at x within T) f", "apply (auto intro!: continuous_within_subset[of _ \"S \\<union> T\" f T])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> T \\<Longrightarrow> continuous (at x within S \\<union> T) f", "by (intro continuous_at_extension_sequentially'[OF _ assms], auto)"], ["", "lemma continuous_on_extension_sequentially:\n  fixes f :: \"'a::{first_countable_topology, t2_space} \\<Rightarrow> 'b::t3_space\"\n  assumes \"T \\<subseteq> closure S\"\n          \"\\<And>u b. (\\<forall>n. u n \\<in> S) \\<Longrightarrow> b \\<in> T \\<Longrightarrow> u \\<longlonglongrightarrow> b \\<Longrightarrow> (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f b\"\n  shows \"continuous_on T f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on T f", "unfolding continuous_on_eq_continuous_within"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>T. continuous (at x within T) f", "apply (auto intro!: continuous_within_subset[of _ \"S \\<union> T\" f T])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> T \\<Longrightarrow> continuous (at x within S \\<union> T) f", "by (intro continuous_at_extension_sequentially[OF _ assms], auto)"], ["", "subsubsection \\<open>Homeomorphisms\\<close>"], ["", "text \\<open>A variant around the notion of homeomorphism, which is only expressed in terms of the\nfunction and not of its inverse.\\<close>"], ["", "definition homeomorphism_on::\"'a set \\<Rightarrow> ('a::topological_space \\<Rightarrow> 'b::topological_space) \\<Rightarrow> bool\"\n  where \"homeomorphism_on S f = (\\<exists>g. homeomorphism S (f`S) f g)\""], ["", "lemma homeomorphism_on_continuous:\n  assumes \"homeomorphism_on S f\"\n  shows \"continuous_on S f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on S f", "using assms"], ["proof (prove)\nusing this:\n  homeomorphism_on S f\n\ngoal (1 subgoal):\n 1. continuous_on S f", "unfolding homeomorphism_on_def homeomorphism_def"], ["proof (prove)\nusing this:\n  \\<exists>g.\n     (\\<forall>x\\<in>S. g (f x) = x) \\<and>\n     f ` S = f ` S \\<and>\n     continuous_on S f \\<and>\n     (\\<forall>y\\<in>f ` S. f (g y) = y) \\<and>\n     g ` f ` S = S \\<and> continuous_on (f ` S) g\n\ngoal (1 subgoal):\n 1. continuous_on S f", "by auto"], ["", "lemma homeomorphism_on_bij:\n  assumes \"homeomorphism_on S f\"\n  shows \"bij_betw f S (f`S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw f S (f ` S)", "using assms"], ["proof (prove)\nusing this:\n  homeomorphism_on S f\n\ngoal (1 subgoal):\n 1. bij_betw f S (f ` S)", "unfolding homeomorphism_on_def homeomorphism_def"], ["proof (prove)\nusing this:\n  \\<exists>g.\n     (\\<forall>x\\<in>S. g (f x) = x) \\<and>\n     f ` S = f ` S \\<and>\n     continuous_on S f \\<and>\n     (\\<forall>y\\<in>f ` S. f (g y) = y) \\<and>\n     g ` f ` S = S \\<and> continuous_on (f ` S) g\n\ngoal (1 subgoal):\n 1. bij_betw f S (f ` S)", "by auto (metis inj_on_def inj_on_imp_bij_betw)"], ["", "lemma homeomorphism_on_homeomorphic:\n  assumes \"homeomorphism_on S f\"\n  shows \"S homeomorphic (f`S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S homeomorphic f ` S", "using assms"], ["proof (prove)\nusing this:\n  homeomorphism_on S f\n\ngoal (1 subgoal):\n 1. S homeomorphic f ` S", "unfolding homeomorphism_on_def homeomorphic_def"], ["proof (prove)\nusing this:\n  Ex (homeomorphism S (f ` S) f)\n\ngoal (1 subgoal):\n 1. \\<exists>fa g. homeomorphism S (f ` S) fa g", "by auto"], ["", "lemma homeomorphism_on_compact:\n  fixes f::\"'a::topological_space \\<Rightarrow> 'b::t2_space\"\n  assumes \"continuous_on S f\"\n          \"compact S\"\n          \"inj_on f S\"\n  shows \"homeomorphism_on S f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. homeomorphism_on S f", "unfolding homeomorphism_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ex (homeomorphism S (f ` S) f)", "using homeomorphism_compact[OF assms(2) assms(1) _ assms(3)]"], ["proof (prove)\nusing this:\n  f ` S = ?t \\<Longrightarrow> \\<exists>g. homeomorphism S ?t f g\n\ngoal (1 subgoal):\n 1. Ex (homeomorphism S (f ` S) f)", "by auto"], ["", "lemma homeomorphism_on_subset:\n  assumes \"homeomorphism_on S f\"\n          \"T \\<subseteq> S\"\n  shows \"homeomorphism_on T f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. homeomorphism_on T f", "using assms homeomorphism_of_subsets"], ["proof (prove)\nusing this:\n  homeomorphism_on S f\n  T \\<subseteq> S\n  \\<lbrakk>homeomorphism ?S ?T ?f ?g; ?S' \\<subseteq> ?S;\n   ?T'' \\<subseteq> ?T; ?f ` ?S' = ?T'\\<rbrakk>\n  \\<Longrightarrow> homeomorphism ?S' ?T' ?f ?g\n\ngoal (1 subgoal):\n 1. homeomorphism_on T f", "unfolding homeomorphism_on_def"], ["proof (prove)\nusing this:\n  Ex (homeomorphism S (f ` S) f)\n  T \\<subseteq> S\n  \\<lbrakk>homeomorphism ?S ?T ?f ?g; ?S' \\<subseteq> ?S;\n   ?T'' \\<subseteq> ?T; ?f ` ?S' = ?T'\\<rbrakk>\n  \\<Longrightarrow> homeomorphism ?S' ?T' ?f ?g\n\ngoal (1 subgoal):\n 1. Ex (homeomorphism T (f ` T) f)", "by blast"], ["", "lemma homeomorphism_on_empty [simp]:\n  \"homeomorphism_on {} f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. homeomorphism_on {} f", "unfolding homeomorphism_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ex (homeomorphism {} (f ` {}) f)", "using homeomorphism_empty[of f]"], ["proof (prove)\nusing this:\n  homeomorphism {} {} f ?g\n\ngoal (1 subgoal):\n 1. Ex (homeomorphism {} (f ` {}) f)", "by auto"], ["", "lemma homeomorphism_on_cong:\n  assumes \"homeomorphism_on X f\"\n          \"X' = X\" \"\\<And>x. x \\<in> X \\<Longrightarrow> f' x = f x\"\n  shows \"homeomorphism_on X' f'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. homeomorphism_on X' f'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. homeomorphism_on X' f'", "obtain g where g:\"homeomorphism X (f`X) f g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        homeomorphism X (f ` X) f g \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  homeomorphism_on X f\n  X' = X\n  ?x \\<in> X \\<Longrightarrow> f' ?x = f ?x\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        homeomorphism X (f ` X) f g \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding homeomorphism_on_def"], ["proof (prove)\nusing this:\n  Ex (homeomorphism X (f ` X) f)\n  X' = X\n  ?x \\<in> X \\<Longrightarrow> f' ?x = f ?x\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        homeomorphism X (f ` X) f g \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  homeomorphism X (f ` X) f g\n\ngoal (1 subgoal):\n 1. homeomorphism_on X' f'", "have \"homeomorphism X' (f'`X') f' g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. homeomorphism X' (f' ` X') f' g", "apply (rule homeomorphism_cong[OF g])"], ["proof (prove)\ngoal (4 subgoals):\n 1. X' = X\n 2. f' ` X' = f ` X\n 3. \\<And>x. x \\<in> X \\<Longrightarrow> f' x = f x\n 4. \\<And>y. y \\<in> f ` X \\<Longrightarrow> g y = g y", "using assms"], ["proof (prove)\nusing this:\n  homeomorphism_on X f\n  X' = X\n  ?x \\<in> X \\<Longrightarrow> f' ?x = f ?x\n\ngoal (4 subgoals):\n 1. X' = X\n 2. f' ` X' = f ` X\n 3. \\<And>x. x \\<in> X \\<Longrightarrow> f' x = f x\n 4. \\<And>y. y \\<in> f ` X \\<Longrightarrow> g y = g y", "by (auto simp add: rev_image_eqI)"], ["proof (state)\nthis:\n  homeomorphism X' (f' ` X') f' g\n\ngoal (1 subgoal):\n 1. homeomorphism_on X' f'", "then"], ["proof (chain)\npicking this:\n  homeomorphism X' (f' ` X') f' g", "show ?thesis"], ["proof (prove)\nusing this:\n  homeomorphism X' (f' ` X') f' g\n\ngoal (1 subgoal):\n 1. homeomorphism_on X' f'", "unfolding homeomorphism_on_def"], ["proof (prove)\nusing this:\n  homeomorphism X' (f' ` X') f' g\n\ngoal (1 subgoal):\n 1. Ex (homeomorphism X' (f' ` X') f')", "by auto"], ["proof (state)\nthis:\n  homeomorphism_on X' f'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma homeomorphism_on_inverse:\n  fixes f::\"'a::topological_space \\<Rightarrow> 'b::topological_space\"\n  assumes \"homeomorphism_on X f\"\n  shows \"homeomorphism_on (f`X) (inv_into X f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. homeomorphism_on (f ` X) (inv_into X f)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. homeomorphism_on (f ` X) (inv_into X f)", "obtain g where g: \"homeomorphism X (f`X) f g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        homeomorphism X (f ` X) f g \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  homeomorphism_on X f\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        homeomorphism X (f ` X) f g \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding homeomorphism_on_def"], ["proof (prove)\nusing this:\n  Ex (homeomorphism X (f ` X) f)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        homeomorphism X (f ` X) f g \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  homeomorphism X (f ` X) f g\n\ngoal (1 subgoal):\n 1. homeomorphism_on (f ` X) (inv_into X f)", "then"], ["proof (chain)\npicking this:\n  homeomorphism X (f ` X) f g", "have \"g`f`X = X\""], ["proof (prove)\nusing this:\n  homeomorphism X (f ` X) f g\n\ngoal (1 subgoal):\n 1. g ` f ` X = X", "by (simp add: homeomorphism_def)"], ["proof (state)\nthis:\n  g ` f ` X = X\n\ngoal (1 subgoal):\n 1. homeomorphism_on (f ` X) (inv_into X f)", "then"], ["proof (chain)\npicking this:\n  g ` f ` X = X", "have \"homeomorphism_on (f`X) g\""], ["proof (prove)\nusing this:\n  g ` f ` X = X\n\ngoal (1 subgoal):\n 1. homeomorphism_on (f ` X) g", "unfolding homeomorphism_on_def"], ["proof (prove)\nusing this:\n  g ` f ` X = X\n\ngoal (1 subgoal):\n 1. Ex (homeomorphism (f ` X) (g ` f ` X) g)", "using homeomorphism_symD[OF g]"], ["proof (prove)\nusing this:\n  g ` f ` X = X\n  homeomorphism (f ` X) X g f\n\ngoal (1 subgoal):\n 1. Ex (homeomorphism (f ` X) (g ` f ` X) g)", "by auto"], ["proof (state)\nthis:\n  homeomorphism_on (f ` X) g\n\ngoal (1 subgoal):\n 1. homeomorphism_on (f ` X) (inv_into X f)", "moreover"], ["proof (state)\nthis:\n  homeomorphism_on (f ` X) g\n\ngoal (1 subgoal):\n 1. homeomorphism_on (f ` X) (inv_into X f)", "have \"g x = inv_into X f x\" if \"x \\<in> f`X\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. g x = inv_into X f x", "using g that"], ["proof (prove)\nusing this:\n  homeomorphism X (f ` X) f g\n  x \\<in> f ` X\n\ngoal (1 subgoal):\n 1. g x = inv_into X f x", "unfolding homeomorphism_def"], ["proof (prove)\nusing this:\n  (\\<forall>x\\<in>X. g (f x) = x) \\<and>\n  f ` X = f ` X \\<and>\n  continuous_on X f \\<and>\n  (\\<forall>y\\<in>f ` X. f (g y) = y) \\<and>\n  g ` f ` X = X \\<and> continuous_on (f ` X) g\n  x \\<in> f ` X\n\ngoal (1 subgoal):\n 1. g x = inv_into X f x", "by (auto, metis f_inv_into_f inv_into_into that)"], ["proof (state)\nthis:\n  ?x \\<in> f ` X \\<Longrightarrow> g ?x = inv_into X f ?x\n\ngoal (1 subgoal):\n 1. homeomorphism_on (f ` X) (inv_into X f)", "ultimately"], ["proof (chain)\npicking this:\n  homeomorphism_on (f ` X) g\n  ?x \\<in> f ` X \\<Longrightarrow> g ?x = inv_into X f ?x", "show ?thesis"], ["proof (prove)\nusing this:\n  homeomorphism_on (f ` X) g\n  ?x \\<in> f ` X \\<Longrightarrow> g ?x = inv_into X f ?x\n\ngoal (1 subgoal):\n 1. homeomorphism_on (f ` X) (inv_into X f)", "using homeomorphism_on_cong"], ["proof (prove)\nusing this:\n  homeomorphism_on (f ` X) g\n  ?x \\<in> f ` X \\<Longrightarrow> g ?x = inv_into X f ?x\n  \\<lbrakk>homeomorphism_on ?X ?f; ?X' = ?X;\n   \\<And>x. x \\<in> ?X \\<Longrightarrow> ?f' x = ?f x\\<rbrakk>\n  \\<Longrightarrow> homeomorphism_on ?X' ?f'\n\ngoal (1 subgoal):\n 1. homeomorphism_on (f ` X) (inv_into X f)", "by force"], ["proof (state)\nthis:\n  homeomorphism_on (f ` X) (inv_into X f)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Characterization of homeomorphisms in terms of sequences: a map is a homeomorphism if and\nonly if it respects convergent sequences.\\<close>"], ["", "lemma homeomorphism_on_compose:\n  assumes \"homeomorphism_on S f\"\n          \"x \\<in> S\"\n          \"eventually (\\<lambda>n. u n \\<in> S) F\"\n  shows \"(u \\<longlongrightarrow> x) F \\<longleftrightarrow> ((\\<lambda>n. f (u n)) \\<longlongrightarrow> f x) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u \\<longlongrightarrow> x) F =\n    ((\\<lambda>n. f (u n)) \\<longlongrightarrow> f x) F", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (u \\<longlongrightarrow> x) F \\<Longrightarrow>\n    ((\\<lambda>n. f (u n)) \\<longlongrightarrow> f x) F\n 2. ((\\<lambda>n. f (u n)) \\<longlongrightarrow> f x) F \\<Longrightarrow>\n    (u \\<longlongrightarrow> x) F", "assume \"(u \\<longlongrightarrow> x) F\""], ["proof (state)\nthis:\n  (u \\<longlongrightarrow> x) F\n\ngoal (2 subgoals):\n 1. (u \\<longlongrightarrow> x) F \\<Longrightarrow>\n    ((\\<lambda>n. f (u n)) \\<longlongrightarrow> f x) F\n 2. ((\\<lambda>n. f (u n)) \\<longlongrightarrow> f x) F \\<Longrightarrow>\n    (u \\<longlongrightarrow> x) F", "then"], ["proof (chain)\npicking this:\n  (u \\<longlongrightarrow> x) F", "show \"((\\<lambda>n. f (u n)) \\<longlongrightarrow> f x) F\""], ["proof (prove)\nusing this:\n  (u \\<longlongrightarrow> x) F\n\ngoal (1 subgoal):\n 1. ((\\<lambda>n. f (u n)) \\<longlongrightarrow> f x) F", "using continuous_on_tendsto_compose[OF homeomorphism_on_continuous[OF assms(1)] _ assms(2) assms(3)]"], ["proof (prove)\nusing this:\n  (u \\<longlongrightarrow> x) F\n  (u \\<longlongrightarrow> x) F \\<Longrightarrow>\n  ((\\<lambda>x. f (u x)) \\<longlongrightarrow> f x) F\n\ngoal (1 subgoal):\n 1. ((\\<lambda>n. f (u n)) \\<longlongrightarrow> f x) F", "by simp"], ["proof (state)\nthis:\n  ((\\<lambda>n. f (u n)) \\<longlongrightarrow> f x) F\n\ngoal (1 subgoal):\n 1. ((\\<lambda>n. f (u n)) \\<longlongrightarrow> f x) F \\<Longrightarrow>\n    (u \\<longlongrightarrow> x) F", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. ((\\<lambda>n. f (u n)) \\<longlongrightarrow> f x) F \\<Longrightarrow>\n    (u \\<longlongrightarrow> x) F", "assume *: \"((\\<lambda>n. f (u n)) \\<longlongrightarrow> f x) F\""], ["proof (state)\nthis:\n  ((\\<lambda>n. f (u n)) \\<longlongrightarrow> f x) F\n\ngoal (1 subgoal):\n 1. ((\\<lambda>n. f (u n)) \\<longlongrightarrow> f x) F \\<Longrightarrow>\n    (u \\<longlongrightarrow> x) F", "have I: \"inv_into S f (f y) = y\" if \"y \\<in> S\" for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_into S f (f y) = y", "using homeomorphism_on_bij[OF assms(1)]"], ["proof (prove)\nusing this:\n  bij_betw f S (f ` S)\n\ngoal (1 subgoal):\n 1. inv_into S f (f y) = y", "by (meson bij_betw_inv_into_left that)"], ["proof (state)\nthis:\n  ?y \\<in> S \\<Longrightarrow> inv_into S f (f ?y) = ?y\n\ngoal (1 subgoal):\n 1. ((\\<lambda>n. f (u n)) \\<longlongrightarrow> f x) F \\<Longrightarrow>\n    (u \\<longlongrightarrow> x) F", "then"], ["proof (chain)\npicking this:\n  ?y \\<in> S \\<Longrightarrow> inv_into S f (f ?y) = ?y", "have A: \"eventually (\\<lambda>n. u n = inv_into S f (f (u n))) F\""], ["proof (prove)\nusing this:\n  ?y \\<in> S \\<Longrightarrow> inv_into S f (f ?y) = ?y\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in F. u n = inv_into S f (f (u n))", "using assms eventually_mono"], ["proof (prove)\nusing this:\n  ?y \\<in> S \\<Longrightarrow> inv_into S f (f ?y) = ?y\n  homeomorphism_on S f\n  x \\<in> S\n  \\<forall>\\<^sub>F n in F. u n \\<in> S\n  \\<lbrakk>eventually ?P ?F; \\<And>x. ?P x \\<Longrightarrow> ?Q x\\<rbrakk>\n  \\<Longrightarrow> eventually ?Q ?F\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in F. u n = inv_into S f (f (u n))", "by force"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in F. u n = inv_into S f (f (u n))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>n. f (u n)) \\<longlongrightarrow> f x) F \\<Longrightarrow>\n    (u \\<longlongrightarrow> x) F", "have \"((\\<lambda>n. (inv_into S f) (f (u n))) \\<longlongrightarrow> (inv_into S f) (f x)) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>n. inv_into S f (f (u n))) \\<longlongrightarrow>\n     inv_into S f (f x))\n     F", "apply (rule continuous_on_tendsto_compose[OF homeomorphism_on_continuous[OF homeomorphism_on_inverse[OF assms(1)]] *])"], ["proof (prove)\ngoal (2 subgoals):\n 1. f x \\<in> f ` S\n 2. \\<forall>\\<^sub>F n in F. f (u n) \\<in> f ` S", "using assms eventually_mono"], ["proof (prove)\nusing this:\n  homeomorphism_on S f\n  x \\<in> S\n  \\<forall>\\<^sub>F n in F. u n \\<in> S\n  \\<lbrakk>eventually ?P ?F; \\<And>x. ?P x \\<Longrightarrow> ?Q x\\<rbrakk>\n  \\<Longrightarrow> eventually ?Q ?F\n\ngoal (2 subgoals):\n 1. f x \\<in> f ` S\n 2. \\<forall>\\<^sub>F n in F. f (u n) \\<in> f ` S", "by (auto) fastforce"], ["proof (state)\nthis:\n  ((\\<lambda>n. inv_into S f (f (u n))) \\<longlongrightarrow>\n   inv_into S f (f x))\n   F\n\ngoal (1 subgoal):\n 1. ((\\<lambda>n. f (u n)) \\<longlongrightarrow> f x) F \\<Longrightarrow>\n    (u \\<longlongrightarrow> x) F", "then"], ["proof (chain)\npicking this:\n  ((\\<lambda>n. inv_into S f (f (u n))) \\<longlongrightarrow>\n   inv_into S f (f x))\n   F", "show \"(u \\<longlongrightarrow> x) F\""], ["proof (prove)\nusing this:\n  ((\\<lambda>n. inv_into S f (f (u n))) \\<longlongrightarrow>\n   inv_into S f (f x))\n   F\n\ngoal (1 subgoal):\n 1. (u \\<longlongrightarrow> x) F", "unfolding tendsto_cong[OF A] I[OF \\<open>x \\<in> S\\<close>]"], ["proof (prove)\nusing this:\n  ((\\<lambda>n. inv_into S f (f (u n))) \\<longlongrightarrow> x) F\n\ngoal (1 subgoal):\n 1. ((\\<lambda>n. inv_into S f (f (u n))) \\<longlongrightarrow> x) F", "by simp"], ["proof (state)\nthis:\n  (u \\<longlongrightarrow> x) F\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma homeomorphism_on_sequentially:\n  fixes f::\"'a::{first_countable_topology, t2_space} \\<Rightarrow> 'b::{first_countable_topology, t2_space}\"\n  assumes \"\\<And>x u. x \\<in> S \\<Longrightarrow> (\\<forall>n. u n \\<in> S) \\<Longrightarrow> u \\<longlonglongrightarrow> x \\<longleftrightarrow> (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f x\"\n  shows \"homeomorphism_on S f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. homeomorphism_on S f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. homeomorphism_on S f", "have \"x = y\" if \"f x = f y\" \"x \\<in> S\" \"y \\<in> S\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x = y", "have \"(\\<lambda>n. f x) \\<longlonglongrightarrow> f y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. f x) \\<longlonglongrightarrow> f y", "using that"], ["proof (prove)\nusing this:\n  f x = f y\n  x \\<in> S\n  y \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. f x) \\<longlonglongrightarrow> f y", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n. f x) \\<longlonglongrightarrow> f y\n\ngoal (1 subgoal):\n 1. x = y", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n. f x) \\<longlonglongrightarrow> f y", "have \"(\\<lambda>n. x) \\<longlonglongrightarrow> y\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. f x) \\<longlonglongrightarrow> f y\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. x) \\<longlonglongrightarrow> y", "using assms(1) that"], ["proof (prove)\nusing this:\n  (\\<lambda>n. f x) \\<longlonglongrightarrow> f y\n  \\<lbrakk>?x \\<in> S; \\<forall>n. ?u n \\<in> S\\<rbrakk>\n  \\<Longrightarrow> ?u \\<longlonglongrightarrow> ?x =\n                    (\\<lambda>n. f (?u n)) \\<longlonglongrightarrow> f ?x\n  f x = f y\n  x \\<in> S\n  y \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. x) \\<longlonglongrightarrow> y", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n. x) \\<longlonglongrightarrow> y\n\ngoal (1 subgoal):\n 1. x = y", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n. x) \\<longlonglongrightarrow> y", "show \"x = y\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. x) \\<longlonglongrightarrow> y\n\ngoal (1 subgoal):\n 1. x = y", "using LIMSEQ_unique"], ["proof (prove)\nusing this:\n  (\\<lambda>n. x) \\<longlonglongrightarrow> y\n  \\<lbrakk>?X \\<longlonglongrightarrow> ?a;\n   ?X \\<longlonglongrightarrow> ?b\\<rbrakk>\n  \\<Longrightarrow> ?a = ?b\n\ngoal (1 subgoal):\n 1. x = y", "by auto"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>f ?x = f ?y; ?x \\<in> S; ?y \\<in> S\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n\ngoal (1 subgoal):\n 1. homeomorphism_on S f", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>f ?x = f ?y; ?x \\<in> S; ?y \\<in> S\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y", "have \"inj_on f S\""], ["proof (prove)\nusing this:\n  \\<lbrakk>f ?x = f ?y; ?x \\<in> S; ?y \\<in> S\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n\ngoal (1 subgoal):\n 1. inj_on f S", "by (simp add: inj_on_def)"], ["proof (state)\nthis:\n  inj_on f S\n\ngoal (1 subgoal):\n 1. homeomorphism_on S f", "have Cf: \"continuous_on S f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on S f", "apply (rule continuous_on_sequentiallyI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>u a.\n       \\<lbrakk>\\<forall>n. u n \\<in> S; a \\<in> S;\n        u \\<longlonglongrightarrow> a\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f a", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> S; \\<forall>n. ?u n \\<in> S\\<rbrakk>\n  \\<Longrightarrow> ?u \\<longlonglongrightarrow> ?x =\n                    (\\<lambda>n. f (?u n)) \\<longlonglongrightarrow> f ?x\n\ngoal (1 subgoal):\n 1. \\<And>u a.\n       \\<lbrakk>\\<forall>n. u n \\<in> S; a \\<in> S;\n        u \\<longlonglongrightarrow> a\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f a", "by auto"], ["proof (state)\nthis:\n  continuous_on S f\n\ngoal (1 subgoal):\n 1. homeomorphism_on S f", "define g where \"g = inv_into S f\""], ["proof (state)\nthis:\n  g = inv_into S f\n\ngoal (1 subgoal):\n 1. homeomorphism_on S f", "have Cg: \"continuous_on (f`S) g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on (f ` S) g", "proof (rule continuous_on_sequentiallyI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u a.\n       \\<lbrakk>\\<forall>n. u n \\<in> f ` S; a \\<in> f ` S;\n        u \\<longlonglongrightarrow> a\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. g (u n)) \\<longlonglongrightarrow> g a", "fix v b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u a.\n       \\<lbrakk>\\<forall>n. u n \\<in> f ` S; a \\<in> f ` S;\n        u \\<longlonglongrightarrow> a\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. g (u n)) \\<longlonglongrightarrow> g a", "assume H: \"\\<forall>n. v n \\<in> f ` S\" \"b \\<in> f ` S\" \"v \\<longlonglongrightarrow> b\""], ["proof (state)\nthis:\n  \\<forall>n. v n \\<in> f ` S\n  b \\<in> f ` S\n  v \\<longlonglongrightarrow> b\n\ngoal (1 subgoal):\n 1. \\<And>u a.\n       \\<lbrakk>\\<forall>n. u n \\<in> f ` S; a \\<in> f ` S;\n        u \\<longlonglongrightarrow> a\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. g (u n)) \\<longlonglongrightarrow> g a", "define u where \"u = (\\<lambda>n. g (v n))\""], ["proof (state)\nthis:\n  u = (\\<lambda>n. g (v n))\n\ngoal (1 subgoal):\n 1. \\<And>u a.\n       \\<lbrakk>\\<forall>n. u n \\<in> f ` S; a \\<in> f ` S;\n        u \\<longlonglongrightarrow> a\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. g (u n)) \\<longlonglongrightarrow> g a", "define a where \"a = g b\""], ["proof (state)\nthis:\n  a = g b\n\ngoal (1 subgoal):\n 1. \\<And>u a.\n       \\<lbrakk>\\<forall>n. u n \\<in> f ` S; a \\<in> f ` S;\n        u \\<longlonglongrightarrow> a\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. g (u n)) \\<longlonglongrightarrow> g a", "have \"u n \\<in> S\" \"f (u n) = v n\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. u n \\<in> S &&& f (u n) = v n", "unfolding u_def g_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_into S f (v n) \\<in> S &&& f (inv_into S f (v n)) = v n", "using H(1)"], ["proof (prove)\nusing this:\n  \\<forall>n. v n \\<in> f ` S\n\ngoal (1 subgoal):\n 1. inv_into S f (v n) \\<in> S &&& f (inv_into S f (v n)) = v n", "by (auto simp add: inv_into_into f_inv_into_f)"], ["proof (state)\nthis:\n  u ?n \\<in> S\n  f (u ?n) = v ?n\n\ngoal (1 subgoal):\n 1. \\<And>u a.\n       \\<lbrakk>\\<forall>n. u n \\<in> f ` S; a \\<in> f ` S;\n        u \\<longlonglongrightarrow> a\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. g (u n)) \\<longlonglongrightarrow> g a", "have \"a \\<in> S\" \"f a = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> S &&& f a = b", "unfolding a_def g_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_into S f b \\<in> S &&& f (inv_into S f b) = b", "using H(2)"], ["proof (prove)\nusing this:\n  b \\<in> f ` S\n\ngoal (1 subgoal):\n 1. inv_into S f b \\<in> S &&& f (inv_into S f b) = b", "by (auto simp add: inv_into_into f_inv_into_f)"], ["proof (state)\nthis:\n  a \\<in> S\n  f a = b\n\ngoal (1 subgoal):\n 1. \\<And>u a.\n       \\<lbrakk>\\<forall>n. u n \\<in> f ` S; a \\<in> f ` S;\n        u \\<longlonglongrightarrow> a\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. g (u n)) \\<longlonglongrightarrow> g a", "show \"(\\<lambda>n. g(v n)) \\<longlonglongrightarrow> g b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. g (v n)) \\<longlonglongrightarrow> g b", "unfolding u_def[symmetric] a_def[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<longlonglongrightarrow> a", "apply (rule iffD2[OF assms])"], ["proof (prove)\ngoal (3 subgoals):\n 1. a \\<in> S\n 2. \\<forall>n. u n \\<in> S\n 3. (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f a", "using \\<open>\\<And>n. u n \\<in> S\\<close> \\<open>a \\<in> S\\<close> \\<open>v \\<longlonglongrightarrow> b\\<close>"], ["proof (prove)\nusing this:\n  u ?n \\<in> S\n  a \\<in> S\n  v \\<longlonglongrightarrow> b\n\ngoal (3 subgoals):\n 1. a \\<in> S\n 2. \\<forall>n. u n \\<in> S\n 3. (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f a", "unfolding \\<open>\\<And>n. f (u n) = v n\\<close> \\<open>f a = b\\<close>"], ["proof (prove)\nusing this:\n  u ?n \\<in> S\n  a \\<in> S\n  v \\<longlonglongrightarrow> b\n\ngoal (3 subgoals):\n 1. a \\<in> S\n 2. \\<forall>n. u n \\<in> S\n 3. v \\<longlonglongrightarrow> b", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n. g (v n)) \\<longlonglongrightarrow> g b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  continuous_on (f ` S) g\n\ngoal (1 subgoal):\n 1. homeomorphism_on S f", "have \"homeomorphism S (f`S) f g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. homeomorphism S (f ` S) f g", "apply (rule homeomorphismI[OF Cf Cg])"], ["proof (prove)\ngoal (4 subgoals):\n 1. f ` S \\<subseteq> f ` S\n 2. g ` f ` S \\<subseteq> S\n 3. \\<And>x. x \\<in> S \\<Longrightarrow> g (f x) = x\n 4. \\<And>y. y \\<in> f ` S \\<Longrightarrow> f (g y) = y", "unfolding g_def"], ["proof (prove)\ngoal (4 subgoals):\n 1. f ` S \\<subseteq> f ` S\n 2. inv_into S f ` f ` S \\<subseteq> S\n 3. \\<And>x. x \\<in> S \\<Longrightarrow> inv_into S f (f x) = x\n 4. \\<And>y. y \\<in> f ` S \\<Longrightarrow> f (inv_into S f y) = y", "using \\<open>inj_on f S\\<close>"], ["proof (prove)\nusing this:\n  inj_on f S\n\ngoal (4 subgoals):\n 1. f ` S \\<subseteq> f ` S\n 2. inv_into S f ` f ` S \\<subseteq> S\n 3. \\<And>x. x \\<in> S \\<Longrightarrow> inv_into S f (f x) = x\n 4. \\<And>y. y \\<in> f ` S \\<Longrightarrow> f (inv_into S f y) = y", "by auto"], ["proof (state)\nthis:\n  homeomorphism S (f ` S) f g\n\ngoal (1 subgoal):\n 1. homeomorphism_on S f", "then"], ["proof (chain)\npicking this:\n  homeomorphism S (f ` S) f g", "show ?thesis"], ["proof (prove)\nusing this:\n  homeomorphism S (f ` S) f g\n\ngoal (1 subgoal):\n 1. homeomorphism_on S f", "unfolding homeomorphism_on_def"], ["proof (prove)\nusing this:\n  homeomorphism S (f ` S) f g\n\ngoal (1 subgoal):\n 1. Ex (homeomorphism S (f ` S) f)", "by auto"], ["proof (state)\nthis:\n  homeomorphism_on S f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma homeomorphism_on_UNIV_sequentially:\n  fixes f::\"'a::{first_countable_topology, t2_space} \\<Rightarrow> 'b::{first_countable_topology, t2_space}\"\n  assumes \"\\<And>x u. u \\<longlonglongrightarrow> x \\<longleftrightarrow> (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f x\"\n  shows \"homeomorphism_on UNIV f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. homeomorphism_on UNIV f", "using assms"], ["proof (prove)\nusing this:\n  ?u \\<longlonglongrightarrow> ?x =\n  (\\<lambda>n. f (?u n)) \\<longlonglongrightarrow> f ?x\n\ngoal (1 subgoal):\n 1. homeomorphism_on UNIV f", "by (auto intro!: homeomorphism_on_sequentially)"], ["", "text \\<open>Now, we give similar characterizations in terms of sequences living in a dense subset. As\nin the sequential continuity criteria above, we first give a very general criterion, where the map\ndoes not have to be continuous on the approximating set $S$, only on the limit set $T$, without\nany a priori identification of the limit. Then, we specialize this statement to a less general\nbut often more usable version.\\<close>"], ["", "lemma homeomorphism_on_extension_sequentially_precise:\n  fixes f::\"'a::{first_countable_topology, t3_space} \\<Rightarrow> 'b::{first_countable_topology, t3_space}\"\n  assumes \"\\<And>u b. (\\<forall>n. u n \\<in> S) \\<Longrightarrow> b \\<in> T \\<Longrightarrow> u \\<longlonglongrightarrow> b \\<Longrightarrow> convergent (\\<lambda>n. f (u n))\"\n          \"\\<And>u c. (\\<forall>n. u n \\<in> S) \\<Longrightarrow> c \\<in> f`T \\<Longrightarrow> (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> c \\<Longrightarrow> convergent u\"\n          \"\\<And>b. b \\<in> T \\<Longrightarrow> \\<exists>u. (\\<forall>n. u n \\<in> S) \\<and> u \\<longlonglongrightarrow> b \\<and> ((\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f b)\"\n          \"\\<And>n. u n \\<in> S \\<union> T\" \"l \\<in> T\"\n  shows \"u \\<longlonglongrightarrow> l \\<longleftrightarrow> (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<longlonglongrightarrow> l =\n    (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f l", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. u \\<longlonglongrightarrow> l \\<Longrightarrow>\n    (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f l\n 2. (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f l \\<Longrightarrow>\n    u \\<longlonglongrightarrow> l", "assume H: \"u \\<longlonglongrightarrow> l\""], ["proof (state)\nthis:\n  u \\<longlonglongrightarrow> l\n\ngoal (2 subgoals):\n 1. u \\<longlonglongrightarrow> l \\<Longrightarrow>\n    (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f l\n 2. (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f l \\<Longrightarrow>\n    u \\<longlonglongrightarrow> l", "have \"continuous (at l within (S \\<union> T)) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous (at l within S \\<union> T) f", "apply (rule continuous_at_extension_sequentially'[OF \\<open>l \\<in> T\\<close>])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>u b.\n       \\<lbrakk>\\<forall>n. u n \\<in> S; b \\<in> T;\n        u \\<longlonglongrightarrow> b\\<rbrakk>\n       \\<Longrightarrow> convergent (\\<lambda>n. f (u n))\n 2. \\<And>b.\n       b \\<in> T \\<Longrightarrow>\n       \\<exists>u.\n          (\\<forall>n. u n \\<in> S) \\<and>\n          u \\<longlonglongrightarrow> b \\<and>\n          (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f b", "using assms(1) assms(3)"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>n. ?u n \\<in> S; ?b \\<in> T;\n   ?u \\<longlonglongrightarrow> ?b\\<rbrakk>\n  \\<Longrightarrow> convergent (\\<lambda>n. f (?u n))\n  ?b \\<in> T \\<Longrightarrow>\n  \\<exists>u.\n     (\\<forall>n. u n \\<in> S) \\<and>\n     u \\<longlonglongrightarrow> ?b \\<and>\n     (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f ?b\n\ngoal (2 subgoals):\n 1. \\<And>u b.\n       \\<lbrakk>\\<forall>n. u n \\<in> S; b \\<in> T;\n        u \\<longlonglongrightarrow> b\\<rbrakk>\n       \\<Longrightarrow> convergent (\\<lambda>n. f (u n))\n 2. \\<And>b.\n       b \\<in> T \\<Longrightarrow>\n       \\<exists>u.\n          (\\<forall>n. u n \\<in> S) \\<and>\n          u \\<longlonglongrightarrow> b \\<and>\n          (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f b", "by auto"], ["proof (state)\nthis:\n  continuous (at l within S \\<union> T) f\n\ngoal (2 subgoals):\n 1. u \\<longlonglongrightarrow> l \\<Longrightarrow>\n    (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f l\n 2. (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f l \\<Longrightarrow>\n    u \\<longlonglongrightarrow> l", "then"], ["proof (chain)\npicking this:\n  continuous (at l within S \\<union> T) f", "show \"(\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f l\""], ["proof (prove)\nusing this:\n  continuous (at l within S \\<union> T) f\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f l", "apply (rule continuous_within_tendsto_compose)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially. u n \\<in> S \\<union> T\n 2. u \\<longlonglongrightarrow> l", "using H assms(4)"], ["proof (prove)\nusing this:\n  u \\<longlonglongrightarrow> l\n  u ?n \\<in> S \\<union> T\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially. u n \\<in> S \\<union> T\n 2. u \\<longlonglongrightarrow> l", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f l\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f l \\<Longrightarrow>\n    u \\<longlonglongrightarrow> l", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f l \\<Longrightarrow>\n    u \\<longlonglongrightarrow> l", "text \\<open>For the reverse implication, we would like to use the continuity criterion\n  \\verb+ continuous_at_extension_sequentially'+ applied to the inverse of $f$. Unfortunately, this\n  inverse is only well defined on $T$, while our sequence takes values in $S \\cup T$. So, instead,\n  we redo by hand the proof of the continuity criterion, but in the opposite direction.\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f l \\<Longrightarrow>\n    u \\<longlonglongrightarrow> l", "assume H: \"(\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f l\""], ["proof (state)\nthis:\n  (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f l\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f l \\<Longrightarrow>\n    u \\<longlonglongrightarrow> l", "show \"u \\<longlonglongrightarrow> l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<longlonglongrightarrow> l", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> u \\<longlonglongrightarrow> l \\<Longrightarrow> False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> u \\<longlonglongrightarrow> l\n\ngoal (1 subgoal):\n 1. \\<not> u \\<longlonglongrightarrow> l \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> u \\<longlonglongrightarrow> l", "obtain U where U: \"open U\" \"l \\<in> U\" \"\\<not>(\\<forall>\\<^sub>F n in sequentially. u n \\<in> U)\""], ["proof (prove)\nusing this:\n  \\<not> u \\<longlonglongrightarrow> l\n\ngoal (1 subgoal):\n 1. (\\<And>U.\n        \\<lbrakk>open U; l \\<in> U;\n         \\<not> (\\<forall>\\<^sub>F n in sequentially. u n \\<in> U)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding continuous_within tendsto_def[where l = l]"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>S.\n             open S \\<longrightarrow>\n             l \\<in> S \\<longrightarrow>\n             (\\<forall>\\<^sub>F x in sequentially. u x \\<in> S))\n\ngoal (1 subgoal):\n 1. (\\<And>U.\n        \\<lbrakk>open U; l \\<in> U;\n         \\<not> (\\<forall>\\<^sub>F n in sequentially. u n \\<in> U)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using sequentially_imp_eventually_nhds_within"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>S.\n             open S \\<longrightarrow>\n             l \\<in> S \\<longrightarrow>\n             (\\<forall>\\<^sub>F x in sequentially. u x \\<in> S))\n  \\<forall>f.\n     (\\<forall>n. f n \\<in> ?s) \\<and>\n     f \\<longlonglongrightarrow> ?a \\<longrightarrow>\n     (\\<forall>\\<^sub>F n in sequentially. ?P (f n)) \\<Longrightarrow>\n  eventually ?P (inf (nhds ?a) (principal ?s))\n\ngoal (1 subgoal):\n 1. (\\<And>U.\n        \\<lbrakk>open U; l \\<in> U;\n         \\<not> (\\<forall>\\<^sub>F n in sequentially. u n \\<in> U)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  open U\n  l \\<in> U\n  \\<not> (\\<forall>\\<^sub>F n in sequentially. u n \\<in> U)\n\ngoal (1 subgoal):\n 1. \\<not> u \\<longlonglongrightarrow> l \\<Longrightarrow> False", "obtain A :: \"nat \\<Rightarrow> 'b set\" where *:\n      \"\\<And>i. open (A i)\"\n      \"\\<And>i. f l \\<in> A i\"\n      \"\\<And>F. \\<forall>n. F n \\<in> A n \\<Longrightarrow> F \\<longlonglongrightarrow> f l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A.\n        \\<lbrakk>\\<And>i. open (A i); \\<And>i. f l \\<in> A i;\n         \\<And>F.\n            \\<forall>n. F n \\<in> A n \\<Longrightarrow>\n            F \\<longlonglongrightarrow> f l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule first_countable_topology_class.countable_basis) blast"], ["proof (state)\nthis:\n  open (A ?i)\n  f l \\<in> A ?i\n  \\<forall>n. ?F n \\<in> A n \\<Longrightarrow>\n  ?F \\<longlonglongrightarrow> f l\n\ngoal (1 subgoal):\n 1. \\<not> u \\<longlonglongrightarrow> l \\<Longrightarrow> False", "have B: \"eventually (\\<lambda>n. f (u n) \\<in> A i) sequentially\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. f (u n) \\<in> A i", "using \\<open>open (A i)\\<close> \\<open>f l \\<in> A i\\<close> H topological_tendstoD"], ["proof (prove)\nusing this:\n  open (A i)\n  f l \\<in> A i\n  (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f l\n  \\<lbrakk>(?f \\<longlongrightarrow> ?l) ?F; open ?S; ?l \\<in> ?S\\<rbrakk>\n  \\<Longrightarrow> \\<forall>\\<^sub>F x in ?F. ?f x \\<in> ?S\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. f (u n) \\<in> A i", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially. f (u n) \\<in> A ?i\n\ngoal (1 subgoal):\n 1. \\<not> u \\<longlonglongrightarrow> l \\<Longrightarrow> False", "have M: \"\\<exists>r. r \\<ge> N \\<and> (u r \\<notin> U) \\<and> f (u r) \\<in> A i\" for N i"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>r\\<ge>N. u r \\<notin> U \\<and> f (u r) \\<in> A i", "using U(3) B[of i]"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>\\<^sub>F n in sequentially. u n \\<in> U)\n  \\<forall>\\<^sub>F n in sequentially. f (u n) \\<in> A i\n\ngoal (1 subgoal):\n 1. \\<exists>r\\<ge>N. u r \\<notin> U \\<and> f (u r) \\<in> A i", "unfolding eventually_sequentially"], ["proof (prove)\nusing this:\n  \\<nexists>N. \\<forall>n\\<ge>N. u n \\<in> U\n  \\<exists>N. \\<forall>n\\<ge>N. f (u n) \\<in> A i\n\ngoal (1 subgoal):\n 1. \\<exists>r\\<ge>N. u r \\<notin> U \\<and> f (u r) \\<in> A i", "by (meson dual_order.trans le_cases)"], ["proof (state)\nthis:\n  \\<exists>r\\<ge>?N. u r \\<notin> U \\<and> f (u r) \\<in> A ?i\n\ngoal (1 subgoal):\n 1. \\<not> u \\<longlonglongrightarrow> l \\<Longrightarrow> False", "have \"\\<exists>r. \\<forall>n. (u (r n) \\<notin> U \\<and> f (u (r n)) \\<in> A n) \\<and> r (Suc n) \\<ge> r n + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>r.\n       \\<forall>n.\n          (u (r n) \\<notin> U \\<and> f (u (r n)) \\<in> A n) \\<and>\n          r n + 1 \\<le> r (Suc n)", "apply (rule dependent_nat_choice)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<exists>x. u x \\<notin> U \\<and> f (u x) \\<in> A 0\n 2. \\<And>x n.\n       u x \\<notin> U \\<and> f (u x) \\<in> A n \\<Longrightarrow>\n       \\<exists>y.\n          (u y \\<notin> U \\<and> f (u y) \\<in> A (Suc n)) \\<and>\n          x + 1 \\<le> y", "using M"], ["proof (prove)\nusing this:\n  \\<exists>r\\<ge>?N. u r \\<notin> U \\<and> f (u r) \\<in> A ?i\n\ngoal (2 subgoals):\n 1. \\<exists>x. u x \\<notin> U \\<and> f (u x) \\<in> A 0\n 2. \\<And>x n.\n       u x \\<notin> U \\<and> f (u x) \\<in> A n \\<Longrightarrow>\n       \\<exists>y.\n          (u y \\<notin> U \\<and> f (u y) \\<in> A (Suc n)) \\<and>\n          x + 1 \\<le> y", "by auto"], ["proof (state)\nthis:\n  \\<exists>r.\n     \\<forall>n.\n        (u (r n) \\<notin> U \\<and> f (u (r n)) \\<in> A n) \\<and>\n        r n + 1 \\<le> r (Suc n)\n\ngoal (1 subgoal):\n 1. \\<not> u \\<longlonglongrightarrow> l \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>r.\n     \\<forall>n.\n        (u (r n) \\<notin> U \\<and> f (u (r n)) \\<in> A n) \\<and>\n        r n + 1 \\<le> r (Suc n)", "obtain r where r: \"\\<And>n. u (r n) \\<notin> U\" \"\\<And>n. f (u (r n)) \\<in> A n\" \"\\<And>n. r (Suc n) \\<ge> r n + 1\""], ["proof (prove)\nusing this:\n  \\<exists>r.\n     \\<forall>n.\n        (u (r n) \\<notin> U \\<and> f (u (r n)) \\<in> A n) \\<and>\n        r n + 1 \\<le> r (Suc n)\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>\\<And>n. u (r n) \\<notin> U;\n         \\<And>n. f (u (r n)) \\<in> A n;\n         \\<And>n. r n + 1 \\<le> r (Suc n)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  u (r ?n) \\<notin> U\n  f (u (r ?n)) \\<in> A ?n\n  r ?n + 1 \\<le> r (Suc ?n)\n\ngoal (1 subgoal):\n 1. \\<not> u \\<longlonglongrightarrow> l \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  u (r ?n) \\<notin> U\n  f (u (r ?n)) \\<in> A ?n\n  r ?n + 1 \\<le> r (Suc ?n)", "have \"strict_mono r\""], ["proof (prove)\nusing this:\n  u (r ?n) \\<notin> U\n  f (u (r ?n)) \\<in> A ?n\n  r ?n + 1 \\<le> r (Suc ?n)\n\ngoal (1 subgoal):\n 1. strict_mono r", "by (metis Suc_eq_plus1 Suc_le_lessD strict_monoI_Suc)"], ["proof (state)\nthis:\n  strict_mono r\n\ngoal (1 subgoal):\n 1. \\<not> u \\<longlonglongrightarrow> l \\<Longrightarrow> False", "have \"\\<exists>V W. open V \\<and> open W \\<and> l \\<in> V \\<and> (UNIV - U) \\<subseteq> W \\<and> V \\<inter> W = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>V W.\n       open V \\<and>\n       open W \\<and>\n       l \\<in> V \\<and> UNIV - U \\<subseteq> W \\<and> V \\<inter> W = {}", "apply (rule t3_space)"], ["proof (prove)\ngoal (2 subgoals):\n 1. closed (UNIV - U)\n 2. l \\<notin> UNIV - U", "using U"], ["proof (prove)\nusing this:\n  open U\n  l \\<in> U\n  \\<not> (\\<forall>\\<^sub>F n in sequentially. u n \\<in> U)\n\ngoal (2 subgoals):\n 1. closed (UNIV - U)\n 2. l \\<notin> UNIV - U", "by auto"], ["proof (state)\nthis:\n  \\<exists>V W.\n     open V \\<and>\n     open W \\<and>\n     l \\<in> V \\<and> UNIV - U \\<subseteq> W \\<and> V \\<inter> W = {}\n\ngoal (1 subgoal):\n 1. \\<not> u \\<longlonglongrightarrow> l \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>V W.\n     open V \\<and>\n     open W \\<and>\n     l \\<in> V \\<and> UNIV - U \\<subseteq> W \\<and> V \\<inter> W = {}", "obtain V W where VW: \"open V\" \"open W\" \"l \\<in> V\" \"UNIV - U \\<subseteq> W\" \"V \\<inter> W = {}\""], ["proof (prove)\nusing this:\n  \\<exists>V W.\n     open V \\<and>\n     open W \\<and>\n     l \\<in> V \\<and> UNIV - U \\<subseteq> W \\<and> V \\<inter> W = {}\n\ngoal (1 subgoal):\n 1. (\\<And>V W.\n        \\<lbrakk>open V; open W; l \\<in> V; UNIV - U \\<subseteq> W;\n         V \\<inter> W = {}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  open V\n  open W\n  l \\<in> V\n  UNIV - U \\<subseteq> W\n  V \\<inter> W = {}\n\ngoal (1 subgoal):\n 1. \\<not> u \\<longlonglongrightarrow> l \\<Longrightarrow> False", "have \"\\<exists>z. z \\<in> S \\<and> f z \\<in> A n \\<and> z \\<in> W\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>z. z \\<in> S \\<and> f z \\<in> A n \\<and> z \\<in> W", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>z. z \\<in> S \\<and> f z \\<in> A n \\<and> z \\<in> W", "define z where \"z = u (r n)\""], ["proof (state)\nthis:\n  z = u (r n)\n\ngoal (1 subgoal):\n 1. \\<exists>z. z \\<in> S \\<and> f z \\<in> A n \\<and> z \\<in> W", "have \"f z \\<in> A n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f z \\<in> A n", "unfolding z_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. f (u (r n)) \\<in> A n", "using r(2)"], ["proof (prove)\nusing this:\n  f (u (r ?n)) \\<in> A ?n\n\ngoal (1 subgoal):\n 1. f (u (r n)) \\<in> A n", "by auto"], ["proof (state)\nthis:\n  f z \\<in> A n\n\ngoal (1 subgoal):\n 1. \\<exists>z. z \\<in> S \\<and> f z \\<in> A n \\<and> z \\<in> W", "have \"z \\<in> S \\<union> T\" \"z \\<notin> U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> S \\<union> T &&& z \\<notin> U", "unfolding z_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. u (r n) \\<in> S \\<union> T &&& u (r n) \\<notin> U", "using r(1) assms(4)"], ["proof (prove)\nusing this:\n  u (r ?n) \\<notin> U\n  u ?n \\<in> S \\<union> T\n\ngoal (1 subgoal):\n 1. u (r n) \\<in> S \\<union> T &&& u (r n) \\<notin> U", "by auto"], ["proof (state)\nthis:\n  z \\<in> S \\<union> T\n  z \\<notin> U\n\ngoal (1 subgoal):\n 1. \\<exists>z. z \\<in> S \\<and> f z \\<in> A n \\<and> z \\<in> W", "then"], ["proof (chain)\npicking this:\n  z \\<in> S \\<union> T\n  z \\<notin> U", "have \"z \\<in> W\""], ["proof (prove)\nusing this:\n  z \\<in> S \\<union> T\n  z \\<notin> U\n\ngoal (1 subgoal):\n 1. z \\<in> W", "using VW"], ["proof (prove)\nusing this:\n  z \\<in> S \\<union> T\n  z \\<notin> U\n  open V\n  open W\n  l \\<in> V\n  UNIV - U \\<subseteq> W\n  V \\<inter> W = {}\n\ngoal (1 subgoal):\n 1. z \\<in> W", "by auto"], ["proof (state)\nthis:\n  z \\<in> W\n\ngoal (1 subgoal):\n 1. \\<exists>z. z \\<in> S \\<and> f z \\<in> A n \\<and> z \\<in> W", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>z. z \\<in> S \\<and> f z \\<in> A n \\<and> z \\<in> W", "proof (cases \"z \\<in> T\")"], ["proof (state)\ngoal (2 subgoals):\n 1. z \\<in> T \\<Longrightarrow>\n    \\<exists>z. z \\<in> S \\<and> f z \\<in> A n \\<and> z \\<in> W\n 2. z \\<notin> T \\<Longrightarrow>\n    \\<exists>z. z \\<in> S \\<and> f z \\<in> A n \\<and> z \\<in> W", "case True"], ["proof (state)\nthis:\n  z \\<in> T\n\ngoal (2 subgoals):\n 1. z \\<in> T \\<Longrightarrow>\n    \\<exists>z. z \\<in> S \\<and> f z \\<in> A n \\<and> z \\<in> W\n 2. z \\<notin> T \\<Longrightarrow>\n    \\<exists>z. z \\<in> S \\<and> f z \\<in> A n \\<and> z \\<in> W", "obtain u::\"nat \\<Rightarrow> 'a\" where u: \"\\<And>p. u p \\<in> S\" \"u \\<longlonglongrightarrow> z\" \"(\\<lambda>p. f (u p)) \\<longlonglongrightarrow> f z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>\\<And>p. u p \\<in> S; u \\<longlonglongrightarrow> z;\n         (\\<lambda>p. f (u p)) \\<longlonglongrightarrow> f z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(3)[OF \\<open>z \\<in> T\\<close>]"], ["proof (prove)\nusing this:\n  \\<exists>u.\n     (\\<forall>n. u n \\<in> S) \\<and>\n     u \\<longlonglongrightarrow> z \\<and>\n     (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f z\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>\\<And>p. u p \\<in> S; u \\<longlonglongrightarrow> z;\n         (\\<lambda>p. f (u p)) \\<longlonglongrightarrow> f z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  u ?p \\<in> S\n  u \\<longlonglongrightarrow> z\n  (\\<lambda>p. f (u p)) \\<longlonglongrightarrow> f z\n\ngoal (2 subgoals):\n 1. z \\<in> T \\<Longrightarrow>\n    \\<exists>z. z \\<in> S \\<and> f z \\<in> A n \\<and> z \\<in> W\n 2. z \\<notin> T \\<Longrightarrow>\n    \\<exists>z. z \\<in> S \\<and> f z \\<in> A n \\<and> z \\<in> W", "then"], ["proof (chain)\npicking this:\n  u ?p \\<in> S\n  u \\<longlonglongrightarrow> z\n  (\\<lambda>p. f (u p)) \\<longlonglongrightarrow> f z", "have \"eventually (\\<lambda>p. f (u p) \\<in> A n) sequentially\""], ["proof (prove)\nusing this:\n  u ?p \\<in> S\n  u \\<longlonglongrightarrow> z\n  (\\<lambda>p. f (u p)) \\<longlonglongrightarrow> f z\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F p in sequentially. f (u p) \\<in> A n", "using \\<open>open (A n)\\<close> \\<open>f z \\<in> A n\\<close>"], ["proof (prove)\nusing this:\n  u ?p \\<in> S\n  u \\<longlonglongrightarrow> z\n  (\\<lambda>p. f (u p)) \\<longlonglongrightarrow> f z\n  open (A n)\n  f z \\<in> A n\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F p in sequentially. f (u p) \\<in> A n", "unfolding tendsto_def"], ["proof (prove)\nusing this:\n  u ?p \\<in> S\n  \\<forall>S.\n     open S \\<longrightarrow>\n     z \\<in> S \\<longrightarrow>\n     (\\<forall>\\<^sub>F x in sequentially. u x \\<in> S)\n  \\<forall>S.\n     open S \\<longrightarrow>\n     f z \\<in> S \\<longrightarrow>\n     (\\<forall>\\<^sub>F x in sequentially. f (u x) \\<in> S)\n  open (A n)\n  f z \\<in> A n\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F p in sequentially. f (u p) \\<in> A n", "by simp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F p in sequentially. f (u p) \\<in> A n\n\ngoal (2 subgoals):\n 1. z \\<in> T \\<Longrightarrow>\n    \\<exists>z. z \\<in> S \\<and> f z \\<in> A n \\<and> z \\<in> W\n 2. z \\<notin> T \\<Longrightarrow>\n    \\<exists>z. z \\<in> S \\<and> f z \\<in> A n \\<and> z \\<in> W", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F p in sequentially. f (u p) \\<in> A n\n\ngoal (2 subgoals):\n 1. z \\<in> T \\<Longrightarrow>\n    \\<exists>z. z \\<in> S \\<and> f z \\<in> A n \\<and> z \\<in> W\n 2. z \\<notin> T \\<Longrightarrow>\n    \\<exists>z. z \\<in> S \\<and> f z \\<in> A n \\<and> z \\<in> W", "have \"eventually (\\<lambda>p. u p \\<in> W) sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F p in sequentially. u p \\<in> W", "using \\<open>open W\\<close> \\<open>z \\<in> W\\<close> u"], ["proof (prove)\nusing this:\n  open W\n  z \\<in> W\n  u ?p \\<in> S\n  u \\<longlonglongrightarrow> z\n  (\\<lambda>p. f (u p)) \\<longlonglongrightarrow> f z\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F p in sequentially. u p \\<in> W", "unfolding tendsto_def"], ["proof (prove)\nusing this:\n  open W\n  z \\<in> W\n  u ?p \\<in> S\n  \\<forall>S.\n     open S \\<longrightarrow>\n     z \\<in> S \\<longrightarrow>\n     (\\<forall>\\<^sub>F x in sequentially. u x \\<in> S)\n  \\<forall>S.\n     open S \\<longrightarrow>\n     f z \\<in> S \\<longrightarrow>\n     (\\<forall>\\<^sub>F x in sequentially. f (u x) \\<in> S)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F p in sequentially. u p \\<in> W", "by simp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F p in sequentially. u p \\<in> W\n\ngoal (2 subgoals):\n 1. z \\<in> T \\<Longrightarrow>\n    \\<exists>z. z \\<in> S \\<and> f z \\<in> A n \\<and> z \\<in> W\n 2. z \\<notin> T \\<Longrightarrow>\n    \\<exists>z. z \\<in> S \\<and> f z \\<in> A n \\<and> z \\<in> W", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F p in sequentially. f (u p) \\<in> A n\n  \\<forall>\\<^sub>F p in sequentially. u p \\<in> W", "have \"\\<exists>p. u p \\<in> W \\<and> f (u p) \\<in> A n\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F p in sequentially. f (u p) \\<in> A n\n  \\<forall>\\<^sub>F p in sequentially. u p \\<in> W\n\ngoal (1 subgoal):\n 1. \\<exists>p. u p \\<in> W \\<and> f (u p) \\<in> A n", "using eventually_False_sequentially eventually_elim2"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F p in sequentially. f (u p) \\<in> A n\n  \\<forall>\\<^sub>F p in sequentially. u p \\<in> W\n  \\<not> (\\<forall>\\<^sub>F n in sequentially. False)\n  \\<lbrakk>eventually ?P ?F; eventually ?Q ?F;\n   \\<And>i. \\<lbrakk>?P i; ?Q i\\<rbrakk> \\<Longrightarrow> ?R i\\<rbrakk>\n  \\<Longrightarrow> eventually ?R ?F\n\ngoal (1 subgoal):\n 1. \\<exists>p. u p \\<in> W \\<and> f (u p) \\<in> A n", "by blast"], ["proof (state)\nthis:\n  \\<exists>p. u p \\<in> W \\<and> f (u p) \\<in> A n\n\ngoal (2 subgoals):\n 1. z \\<in> T \\<Longrightarrow>\n    \\<exists>z. z \\<in> S \\<and> f z \\<in> A n \\<and> z \\<in> W\n 2. z \\<notin> T \\<Longrightarrow>\n    \\<exists>z. z \\<in> S \\<and> f z \\<in> A n \\<and> z \\<in> W", "then"], ["proof (chain)\npicking this:\n  \\<exists>p. u p \\<in> W \\<and> f (u p) \\<in> A n", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>p. u p \\<in> W \\<and> f (u p) \\<in> A n\n\ngoal (1 subgoal):\n 1. \\<exists>z. z \\<in> S \\<and> f z \\<in> A n \\<and> z \\<in> W", "using u(1)"], ["proof (prove)\nusing this:\n  \\<exists>p. u p \\<in> W \\<and> f (u p) \\<in> A n\n  u ?p \\<in> S\n\ngoal (1 subgoal):\n 1. \\<exists>z. z \\<in> S \\<and> f z \\<in> A n \\<and> z \\<in> W", "by auto"], ["proof (state)\nthis:\n  \\<exists>z. z \\<in> S \\<and> f z \\<in> A n \\<and> z \\<in> W\n\ngoal (1 subgoal):\n 1. z \\<notin> T \\<Longrightarrow>\n    \\<exists>z. z \\<in> S \\<and> f z \\<in> A n \\<and> z \\<in> W", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. z \\<notin> T \\<Longrightarrow>\n    \\<exists>z. z \\<in> S \\<and> f z \\<in> A n \\<and> z \\<in> W", "case False"], ["proof (state)\nthis:\n  z \\<notin> T\n\ngoal (1 subgoal):\n 1. z \\<notin> T \\<Longrightarrow>\n    \\<exists>z. z \\<in> S \\<and> f z \\<in> A n \\<and> z \\<in> W", "then"], ["proof (chain)\npicking this:\n  z \\<notin> T", "have \"z \\<in> S\""], ["proof (prove)\nusing this:\n  z \\<notin> T\n\ngoal (1 subgoal):\n 1. z \\<in> S", "using \\<open>z \\<in> S \\<union> T\\<close>"], ["proof (prove)\nusing this:\n  z \\<notin> T\n  z \\<in> S \\<union> T\n\ngoal (1 subgoal):\n 1. z \\<in> S", "by auto"], ["proof (state)\nthis:\n  z \\<in> S\n\ngoal (1 subgoal):\n 1. z \\<notin> T \\<Longrightarrow>\n    \\<exists>z. z \\<in> S \\<and> f z \\<in> A n \\<and> z \\<in> W", "then"], ["proof (chain)\npicking this:\n  z \\<in> S", "show ?thesis"], ["proof (prove)\nusing this:\n  z \\<in> S\n\ngoal (1 subgoal):\n 1. \\<exists>z. z \\<in> S \\<and> f z \\<in> A n \\<and> z \\<in> W", "using \\<open>f z \\<in> A n\\<close> \\<open>z \\<in> W\\<close>"], ["proof (prove)\nusing this:\n  z \\<in> S\n  f z \\<in> A n\n  z \\<in> W\n\ngoal (1 subgoal):\n 1. \\<exists>z. z \\<in> S \\<and> f z \\<in> A n \\<and> z \\<in> W", "by auto"], ["proof (state)\nthis:\n  \\<exists>z. z \\<in> S \\<and> f z \\<in> A n \\<and> z \\<in> W\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>z. z \\<in> S \\<and> f z \\<in> A n \\<and> z \\<in> W\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>z. z \\<in> S \\<and> f z \\<in> A ?n \\<and> z \\<in> W\n\ngoal (1 subgoal):\n 1. \\<not> u \\<longlonglongrightarrow> l \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>z. z \\<in> S \\<and> f z \\<in> A ?n \\<and> z \\<in> W", "have \"\\<exists>v. \\<forall>n. v n \\<in> S \\<and> f (v n) \\<in> A n \\<and> v n \\<in> W\""], ["proof (prove)\nusing this:\n  \\<exists>z. z \\<in> S \\<and> f z \\<in> A ?n \\<and> z \\<in> W\n\ngoal (1 subgoal):\n 1. \\<exists>v.\n       \\<forall>n. v n \\<in> S \\<and> f (v n) \\<in> A n \\<and> v n \\<in> W", "by (auto intro: choice)"], ["proof (state)\nthis:\n  \\<exists>v.\n     \\<forall>n. v n \\<in> S \\<and> f (v n) \\<in> A n \\<and> v n \\<in> W\n\ngoal (1 subgoal):\n 1. \\<not> u \\<longlonglongrightarrow> l \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>v.\n     \\<forall>n. v n \\<in> S \\<and> f (v n) \\<in> A n \\<and> v n \\<in> W", "obtain v where v: \"\\<And>n. v n \\<in> S\" \"\\<And>n. f (v n) \\<in> A n\" \"\\<And>n. v n \\<in> W\""], ["proof (prove)\nusing this:\n  \\<exists>v.\n     \\<forall>n. v n \\<in> S \\<and> f (v n) \\<in> A n \\<and> v n \\<in> W\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>\\<And>n. v n \\<in> S; \\<And>n. f (v n) \\<in> A n;\n         \\<And>n. v n \\<in> W\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  v ?n \\<in> S\n  f (v ?n) \\<in> A ?n\n  v ?n \\<in> W\n\ngoal (1 subgoal):\n 1. \\<not> u \\<longlonglongrightarrow> l \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  v ?n \\<in> S\n  f (v ?n) \\<in> A ?n\n  v ?n \\<in> W", "have I: \"(\\<lambda>n. f (v n)) \\<longlonglongrightarrow> f l\""], ["proof (prove)\nusing this:\n  v ?n \\<in> S\n  f (v ?n) \\<in> A ?n\n  v ?n \\<in> W\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (v n)) \\<longlonglongrightarrow> f l", "using *(3)"], ["proof (prove)\nusing this:\n  v ?n \\<in> S\n  f (v ?n) \\<in> A ?n\n  v ?n \\<in> W\n  \\<forall>n. ?F n \\<in> A n \\<Longrightarrow>\n  ?F \\<longlonglongrightarrow> f l\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (v n)) \\<longlonglongrightarrow> f l", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n. f (v n)) \\<longlonglongrightarrow> f l\n\ngoal (1 subgoal):\n 1. \\<not> u \\<longlonglongrightarrow> l \\<Longrightarrow> False", "obtain w where w: \"\\<And>n. w n \\<in> S\" \"w \\<longlonglongrightarrow> l\" \"((\\<lambda>n. f (w n)) \\<longlonglongrightarrow> f l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>w.\n        \\<lbrakk>\\<And>n. w n \\<in> S; w \\<longlonglongrightarrow> l;\n         (\\<lambda>n. f (w n)) \\<longlonglongrightarrow> f l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(3)[OF \\<open>l \\<in> T\\<close>]"], ["proof (prove)\nusing this:\n  \\<exists>u.\n     (\\<forall>n. u n \\<in> S) \\<and>\n     u \\<longlonglongrightarrow> l \\<and>\n     (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f l\n\ngoal (1 subgoal):\n 1. (\\<And>w.\n        \\<lbrakk>\\<And>n. w n \\<in> S; w \\<longlonglongrightarrow> l;\n         (\\<lambda>n. f (w n)) \\<longlonglongrightarrow> f l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  w ?n \\<in> S\n  w \\<longlonglongrightarrow> l\n  (\\<lambda>n. f (w n)) \\<longlonglongrightarrow> f l\n\ngoal (1 subgoal):\n 1. \\<not> u \\<longlonglongrightarrow> l \\<Longrightarrow> False", "have \"even_odd_interpolate (f o v) (f o w) \\<longlonglongrightarrow> f l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. even_odd_interpolate (f \\<circ> v) (f \\<circ> w)\n    \\<longlonglongrightarrow> f l", "unfolding even_odd_interpolate_filterlim[symmetric] comp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. f (v x)) \\<longlonglongrightarrow> f l \\<and>\n    (\\<lambda>x. f (w x)) \\<longlonglongrightarrow> f l", "using v w I"], ["proof (prove)\nusing this:\n  v ?n \\<in> S\n  f (v ?n) \\<in> A ?n\n  v ?n \\<in> W\n  w ?n \\<in> S\n  w \\<longlonglongrightarrow> l\n  (\\<lambda>n. f (w n)) \\<longlonglongrightarrow> f l\n  (\\<lambda>n. f (v n)) \\<longlonglongrightarrow> f l\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f (v x)) \\<longlonglongrightarrow> f l \\<and>\n    (\\<lambda>x. f (w x)) \\<longlonglongrightarrow> f l", "by auto"], ["proof (state)\nthis:\n  even_odd_interpolate (f \\<circ> v) (f \\<circ> w)\n  \\<longlonglongrightarrow> f l\n\ngoal (1 subgoal):\n 1. \\<not> u \\<longlonglongrightarrow> l \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  even_odd_interpolate (f \\<circ> v) (f \\<circ> w)\n  \\<longlonglongrightarrow> f l", "have *: \"(\\<lambda>n. f (even_odd_interpolate v w n)) \\<longlonglongrightarrow> f l\""], ["proof (prove)\nusing this:\n  even_odd_interpolate (f \\<circ> v) (f \\<circ> w)\n  \\<longlonglongrightarrow> f l\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (even_odd_interpolate v w n))\n    \\<longlonglongrightarrow> f l", "unfolding even_odd_interpolate_compose"], ["proof (prove)\nusing this:\n  (f \\<circ> even_odd_interpolate v w) \\<longlonglongrightarrow> f l\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (even_odd_interpolate v w n))\n    \\<longlonglongrightarrow> f l", "unfolding comp_def"], ["proof (prove)\nusing this:\n  (\\<lambda>x. f (even_odd_interpolate v w x)) \\<longlonglongrightarrow> f l\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (even_odd_interpolate v w n))\n    \\<longlonglongrightarrow> f l", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n. f (even_odd_interpolate v w n)) \\<longlonglongrightarrow> f l\n\ngoal (1 subgoal):\n 1. \\<not> u \\<longlonglongrightarrow> l \\<Longrightarrow> False", "have \"convergent (even_odd_interpolate v w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. convergent (even_odd_interpolate v w)", "apply (rule assms(2)[OF _ _ *])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>n. even_odd_interpolate v w n \\<in> S\n 2. f l \\<in> f ` T", "unfolding even_odd_interpolate_def"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>n. (if even n then v (n div 2) else w (n div 2)) \\<in> S\n 2. f l \\<in> f ` T", "using v(1) w(1) \\<open>l \\<in> T\\<close>"], ["proof (prove)\nusing this:\n  v ?n \\<in> S\n  w ?n \\<in> S\n  l \\<in> T\n\ngoal (2 subgoals):\n 1. \\<forall>n. (if even n then v (n div 2) else w (n div 2)) \\<in> S\n 2. f l \\<in> f ` T", "by auto"], ["proof (state)\nthis:\n  convergent (even_odd_interpolate v w)\n\ngoal (1 subgoal):\n 1. \\<not> u \\<longlonglongrightarrow> l \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  convergent (even_odd_interpolate v w)", "obtain z where \"even_odd_interpolate v w \\<longlonglongrightarrow> z\""], ["proof (prove)\nusing this:\n  convergent (even_odd_interpolate v w)\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        even_odd_interpolate v w\n        \\<longlonglongrightarrow> z \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding convergent_def"], ["proof (prove)\nusing this:\n  \\<exists>L. even_odd_interpolate v w \\<longlonglongrightarrow> L\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        even_odd_interpolate v w\n        \\<longlonglongrightarrow> z \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  even_odd_interpolate v w \\<longlonglongrightarrow> z\n\ngoal (1 subgoal):\n 1. \\<not> u \\<longlonglongrightarrow> l \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  even_odd_interpolate v w \\<longlonglongrightarrow> z", "have *: \"v \\<longlonglongrightarrow> z\" \"w \\<longlonglongrightarrow> z\""], ["proof (prove)\nusing this:\n  even_odd_interpolate v w \\<longlonglongrightarrow> z\n\ngoal (1 subgoal):\n 1. v \\<longlonglongrightarrow> z &&& w \\<longlonglongrightarrow> z", "unfolding even_odd_interpolate_filterlim[symmetric]"], ["proof (prove)\nusing this:\n  v \\<longlonglongrightarrow> z \\<and> w \\<longlonglongrightarrow> z\n\ngoal (1 subgoal):\n 1. v \\<longlonglongrightarrow> z &&& w \\<longlonglongrightarrow> z", "by auto"], ["proof (state)\nthis:\n  v \\<longlonglongrightarrow> z\n  w \\<longlonglongrightarrow> z\n\ngoal (1 subgoal):\n 1. \\<not> u \\<longlonglongrightarrow> l \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  v \\<longlonglongrightarrow> z\n  w \\<longlonglongrightarrow> z", "have \"z = l\""], ["proof (prove)\nusing this:\n  v \\<longlonglongrightarrow> z\n  w \\<longlonglongrightarrow> z\n\ngoal (1 subgoal):\n 1. z = l", "using v(2) w(2) LIMSEQ_unique"], ["proof (prove)\nusing this:\n  v \\<longlonglongrightarrow> z\n  w \\<longlonglongrightarrow> z\n  f (v ?n) \\<in> A ?n\n  w \\<longlonglongrightarrow> l\n  \\<lbrakk>?X \\<longlonglongrightarrow> ?a;\n   ?X \\<longlonglongrightarrow> ?b\\<rbrakk>\n  \\<Longrightarrow> ?a = ?b\n\ngoal (1 subgoal):\n 1. z = l", "by auto"], ["proof (state)\nthis:\n  z = l\n\ngoal (1 subgoal):\n 1. \\<not> u \\<longlonglongrightarrow> l \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  z = l", "have \"v \\<longlonglongrightarrow> l\""], ["proof (prove)\nusing this:\n  z = l\n\ngoal (1 subgoal):\n 1. v \\<longlonglongrightarrow> l", "using *"], ["proof (prove)\nusing this:\n  z = l\n  v \\<longlonglongrightarrow> z\n  w \\<longlonglongrightarrow> z\n\ngoal (1 subgoal):\n 1. v \\<longlonglongrightarrow> l", "by simp"], ["proof (state)\nthis:\n  v \\<longlonglongrightarrow> l\n\ngoal (1 subgoal):\n 1. \\<not> u \\<longlonglongrightarrow> l \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  v \\<longlonglongrightarrow> l", "have \"eventually (\\<lambda>n. v n \\<in> V) sequentially\""], ["proof (prove)\nusing this:\n  v \\<longlonglongrightarrow> l\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. v n \\<in> V", "using VW"], ["proof (prove)\nusing this:\n  v \\<longlonglongrightarrow> l\n  open V\n  open W\n  l \\<in> V\n  UNIV - U \\<subseteq> W\n  V \\<inter> W = {}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. v n \\<in> V", "by (simp add: tendsto_def)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially. v n \\<in> V\n\ngoal (1 subgoal):\n 1. \\<not> u \\<longlonglongrightarrow> l \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F n in sequentially. v n \\<in> V", "have \"\\<exists>n. v n \\<in> V\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially. v n \\<in> V\n\ngoal (1 subgoal):\n 1. \\<exists>n. v n \\<in> V", "using eventually_False_sequentially eventually_elim2"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in sequentially. v n \\<in> V\n  \\<not> (\\<forall>\\<^sub>F n in sequentially. False)\n  \\<lbrakk>eventually ?P ?F; eventually ?Q ?F;\n   \\<And>i. \\<lbrakk>?P i; ?Q i\\<rbrakk> \\<Longrightarrow> ?R i\\<rbrakk>\n  \\<Longrightarrow> eventually ?R ?F\n\ngoal (1 subgoal):\n 1. \\<exists>n. v n \\<in> V", "by blast"], ["proof (state)\nthis:\n  \\<exists>n. v n \\<in> V\n\ngoal (1 subgoal):\n 1. \\<not> u \\<longlonglongrightarrow> l \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>n. v n \\<in> V", "show False"], ["proof (prove)\nusing this:\n  \\<exists>n. v n \\<in> V\n\ngoal (1 subgoal):\n 1. False", "using v(3) \\<open>V \\<inter> W = {}\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>n. v n \\<in> V\n  v ?n \\<in> W\n  V \\<inter> W = {}\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  u \\<longlonglongrightarrow> l\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma homeomorphism_on_extension_sequentially':\n  fixes f::\"'a::{first_countable_topology, t3_space} \\<Rightarrow> 'b::{first_countable_topology, t3_space}\"\n  assumes \"\\<And>u b. (\\<forall>n. u n \\<in> S) \\<Longrightarrow> b \\<in> T \\<Longrightarrow> u \\<longlonglongrightarrow> b \\<Longrightarrow> convergent (\\<lambda>n. f (u n))\"\n          \"\\<And>u c. (\\<forall>n. u n \\<in> S) \\<Longrightarrow> c \\<in> f`T \\<Longrightarrow> (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> c \\<Longrightarrow> convergent u\"\n          \"\\<And>b. b \\<in> T \\<Longrightarrow> \\<exists>u. (\\<forall>n. u n \\<in> S) \\<and> u \\<longlonglongrightarrow> b \\<and> ((\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f b)\"\n  shows \"homeomorphism_on T f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. homeomorphism_on T f", "apply (rule homeomorphism_on_sequentially, rule homeomorphism_on_extension_sequentially_precise[of S T])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x u ua b.\n       \\<lbrakk>x \\<in> T; \\<forall>n. u n \\<in> T;\n        \\<forall>n. ua n \\<in> S; b \\<in> T;\n        ua \\<longlonglongrightarrow> b\\<rbrakk>\n       \\<Longrightarrow> convergent (\\<lambda>n. f (ua n))\n 2. \\<And>x u ua c.\n       \\<lbrakk>x \\<in> T; \\<forall>n. u n \\<in> T;\n        \\<forall>n. ua n \\<in> S; c \\<in> f ` T;\n        (\\<lambda>n. f (ua n)) \\<longlonglongrightarrow> c\\<rbrakk>\n       \\<Longrightarrow> convergent ua\n 3. \\<And>x u b.\n       \\<lbrakk>x \\<in> T; \\<forall>n. u n \\<in> T; b \\<in> T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            (\\<forall>n. u n \\<in> S) \\<and>\n                            u \\<longlonglongrightarrow> b \\<and>\n                            (\\<lambda>n. f (u n))\n                            \\<longlonglongrightarrow> f b\n 4. \\<And>x u n.\n       \\<lbrakk>x \\<in> T; \\<forall>n. u n \\<in> T\\<rbrakk>\n       \\<Longrightarrow> u n \\<in> S \\<union> T\n 5. \\<And>x u.\n       \\<lbrakk>x \\<in> T; \\<forall>n. u n \\<in> T\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>n. ?u n \\<in> S; ?b \\<in> T;\n   ?u \\<longlonglongrightarrow> ?b\\<rbrakk>\n  \\<Longrightarrow> convergent (\\<lambda>n. f (?u n))\n  \\<lbrakk>\\<forall>n. ?u n \\<in> S; ?c \\<in> f ` T;\n   (\\<lambda>n. f (?u n)) \\<longlonglongrightarrow> ?c\\<rbrakk>\n  \\<Longrightarrow> convergent ?u\n  ?b \\<in> T \\<Longrightarrow>\n  \\<exists>u.\n     (\\<forall>n. u n \\<in> S) \\<and>\n     u \\<longlonglongrightarrow> ?b \\<and>\n     (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f ?b\n\ngoal (5 subgoals):\n 1. \\<And>x u ua b.\n       \\<lbrakk>x \\<in> T; \\<forall>n. u n \\<in> T;\n        \\<forall>n. ua n \\<in> S; b \\<in> T;\n        ua \\<longlonglongrightarrow> b\\<rbrakk>\n       \\<Longrightarrow> convergent (\\<lambda>n. f (ua n))\n 2. \\<And>x u ua c.\n       \\<lbrakk>x \\<in> T; \\<forall>n. u n \\<in> T;\n        \\<forall>n. ua n \\<in> S; c \\<in> f ` T;\n        (\\<lambda>n. f (ua n)) \\<longlonglongrightarrow> c\\<rbrakk>\n       \\<Longrightarrow> convergent ua\n 3. \\<And>x u b.\n       \\<lbrakk>x \\<in> T; \\<forall>n. u n \\<in> T; b \\<in> T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            (\\<forall>n. u n \\<in> S) \\<and>\n                            u \\<longlonglongrightarrow> b \\<and>\n                            (\\<lambda>n. f (u n))\n                            \\<longlonglongrightarrow> f b\n 4. \\<And>x u n.\n       \\<lbrakk>x \\<in> T; \\<forall>n. u n \\<in> T\\<rbrakk>\n       \\<Longrightarrow> u n \\<in> S \\<union> T\n 5. \\<And>x u.\n       \\<lbrakk>x \\<in> T; \\<forall>n. u n \\<in> T\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T", "by auto"], ["", "proposition homeomorphism_on_extension_sequentially:\n  fixes f::\"'a::{first_countable_topology, t3_space} \\<Rightarrow> 'b::{first_countable_topology, t3_space}\"\n  assumes \"\\<And>u b. (\\<forall>n. u n \\<in> S) \\<Longrightarrow> u \\<longlonglongrightarrow> b \\<longleftrightarrow> (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f b\"\n          \"T \\<subseteq> closure S\"\n  shows \"homeomorphism_on T f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. homeomorphism_on T f", "apply (rule homeomorphism_on_extension_sequentially'[of S])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>u b.\n       \\<lbrakk>\\<forall>n. u n \\<in> S; b \\<in> T;\n        u \\<longlonglongrightarrow> b\\<rbrakk>\n       \\<Longrightarrow> convergent (\\<lambda>n. f (u n))\n 2. \\<And>u c.\n       \\<lbrakk>\\<forall>n. u n \\<in> S; c \\<in> f ` T;\n        (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> c\\<rbrakk>\n       \\<Longrightarrow> convergent u\n 3. \\<And>b.\n       b \\<in> T \\<Longrightarrow>\n       \\<exists>u.\n          (\\<forall>n. u n \\<in> S) \\<and>\n          u \\<longlonglongrightarrow> b \\<and>\n          (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f b", "using assms(1) convergent_def"], ["proof (prove)\nusing this:\n  \\<forall>n. ?u n \\<in> S \\<Longrightarrow>\n  ?u \\<longlonglongrightarrow> ?b =\n  (\\<lambda>n. f (?u n)) \\<longlonglongrightarrow> f ?b\n  convergent ?X = (\\<exists>L. ?X \\<longlonglongrightarrow> L)\n\ngoal (3 subgoals):\n 1. \\<And>u b.\n       \\<lbrakk>\\<forall>n. u n \\<in> S; b \\<in> T;\n        u \\<longlonglongrightarrow> b\\<rbrakk>\n       \\<Longrightarrow> convergent (\\<lambda>n. f (u n))\n 2. \\<And>u c.\n       \\<lbrakk>\\<forall>n. u n \\<in> S; c \\<in> f ` T;\n        (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> c\\<rbrakk>\n       \\<Longrightarrow> convergent u\n 3. \\<And>b.\n       b \\<in> T \\<Longrightarrow>\n       \\<exists>u.\n          (\\<forall>n. u n \\<in> S) \\<and>\n          u \\<longlonglongrightarrow> b \\<and>\n          (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f b", "apply fastforce"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>u c.\n       \\<lbrakk>\\<forall>n. u n \\<in> S; c \\<in> f ` T;\n        (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> c\\<rbrakk>\n       \\<Longrightarrow> convergent u\n 2. \\<And>b.\n       b \\<in> T \\<Longrightarrow>\n       \\<exists>u.\n          (\\<forall>n. u n \\<in> S) \\<and>\n          u \\<longlonglongrightarrow> b \\<and>\n          (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f b", "using assms(1) convergent_def"], ["proof (prove)\nusing this:\n  \\<forall>n. ?u n \\<in> S \\<Longrightarrow>\n  ?u \\<longlonglongrightarrow> ?b =\n  (\\<lambda>n. f (?u n)) \\<longlonglongrightarrow> f ?b\n  convergent ?X = (\\<exists>L. ?X \\<longlonglongrightarrow> L)\n\ngoal (2 subgoals):\n 1. \\<And>u c.\n       \\<lbrakk>\\<forall>n. u n \\<in> S; c \\<in> f ` T;\n        (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> c\\<rbrakk>\n       \\<Longrightarrow> convergent u\n 2. \\<And>b.\n       b \\<in> T \\<Longrightarrow>\n       \\<exists>u.\n          (\\<forall>n. u n \\<in> S) \\<and>\n          u \\<longlonglongrightarrow> b \\<and>\n          (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f b", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> T \\<Longrightarrow>\n       \\<exists>u.\n          (\\<forall>n. u n \\<in> S) \\<and>\n          u \\<longlonglongrightarrow> b \\<and>\n          (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f b", "by (metis assms(1) assms(2) closure_sequential subsetCE)"], ["", "lemma homeomorphism_on_UNIV_extension_sequentially:\n  fixes f::\"'a::{first_countable_topology, t3_space} \\<Rightarrow> 'b::{first_countable_topology, t3_space}\"\n  assumes \"\\<And>u b. (\\<forall>n. u n \\<in> S) \\<Longrightarrow> u \\<longlonglongrightarrow> b \\<longleftrightarrow> (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f b\"\n          \"closure S = UNIV\"\n  shows \"homeomorphism_on UNIV f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. homeomorphism_on UNIV f", "apply (rule homeomorphism_on_extension_sequentially[of S])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>u b.\n       \\<forall>n. u n \\<in> S \\<Longrightarrow>\n       u \\<longlonglongrightarrow> b =\n       (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f b\n 2. UNIV \\<subseteq> closure S", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>n. ?u n \\<in> S \\<Longrightarrow>\n  ?u \\<longlonglongrightarrow> ?b =\n  (\\<lambda>n. f (?u n)) \\<longlonglongrightarrow> f ?b\n  closure S = UNIV\n\ngoal (2 subgoals):\n 1. \\<And>u b.\n       \\<forall>n. u n \\<in> S \\<Longrightarrow>\n       u \\<longlonglongrightarrow> b =\n       (\\<lambda>n. f (u n)) \\<longlonglongrightarrow> f b\n 2. UNIV \\<subseteq> closure S", "by auto"], ["", "subsubsection \\<open>Proper spaces\\<close>"], ["", "text \\<open>Proper spaces, i.e., spaces in which every closed ball is compact -- or, equivalently,\nany closed bounded set is compact.\\<close>"], ["", "definition proper::\"('a::metric_space) set \\<Rightarrow> bool\"\n  where \"proper S \\<equiv> (\\<forall> x r. compact (cball x r \\<inter> S))\""], ["", "lemma properI:\n  assumes \"\\<And>x r. compact (cball x r \\<inter> S)\"\n  shows \"proper S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proper S", "using assms"], ["proof (prove)\nusing this:\n  compact (cball ?x ?r \\<inter> S)\n\ngoal (1 subgoal):\n 1. proper S", "unfolding proper_def"], ["proof (prove)\nusing this:\n  compact (cball ?x ?r \\<inter> S)\n\ngoal (1 subgoal):\n 1. \\<forall>x r. compact (cball x r \\<inter> S)", "by auto"], ["", "lemma proper_compact_cball:\n  assumes \"proper (UNIV::'a::metric_space set)\"\n  shows \"compact (cball (x::'a) r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compact (cball x r)", "using assms"], ["proof (prove)\nusing this:\n  proper UNIV\n\ngoal (1 subgoal):\n 1. compact (cball x r)", "unfolding proper_def"], ["proof (prove)\nusing this:\n  \\<forall>x r. compact (cball x r \\<inter> UNIV)\n\ngoal (1 subgoal):\n 1. compact (cball x r)", "by auto"], ["", "lemma proper_compact_bounded_closed:\n  assumes \"proper (UNIV::'a::metric_space set)\" \"closed (S::'a set)\" \"bounded S\"\n  shows \"compact S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compact S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. compact S", "obtain x r where \"S \\<subseteq> cball x r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x r.\n        S \\<subseteq> cball x r \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>bounded S\\<close> bounded_subset_cball"], ["proof (prove)\nusing this:\n  bounded S\n  bounded ?S = (\\<exists>e x. ?S \\<subseteq> cball x e \\<and> 0 \\<le> e)\n\ngoal (1 subgoal):\n 1. (\\<And>x r.\n        S \\<subseteq> cball x r \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  S \\<subseteq> cball x r\n\ngoal (1 subgoal):\n 1. compact S", "then"], ["proof (chain)\npicking this:\n  S \\<subseteq> cball x r", "have *: \"S = S \\<inter> cball x r\""], ["proof (prove)\nusing this:\n  S \\<subseteq> cball x r\n\ngoal (1 subgoal):\n 1. S = S \\<inter> cball x r", "by auto"], ["proof (state)\nthis:\n  S = S \\<inter> cball x r\n\ngoal (1 subgoal):\n 1. compact S", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. compact S", "apply (subst *, rule closed_Int_compact)"], ["proof (prove)\ngoal (2 subgoals):\n 1. closed S\n 2. compact (cball x r)", "using assms"], ["proof (prove)\nusing this:\n  proper UNIV\n  closed S\n  bounded S\n\ngoal (2 subgoals):\n 1. closed S\n 2. compact (cball x r)", "unfolding proper_def"], ["proof (prove)\nusing this:\n  \\<forall>x r. compact (cball x r \\<inter> UNIV)\n  closed S\n  bounded S\n\ngoal (2 subgoals):\n 1. closed S\n 2. compact (cball x r)", "by auto"], ["proof (state)\nthis:\n  compact S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma proper_real [simp]:\n  \"proper (UNIV::real set)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proper UNIV", "unfolding proper_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x r. compact (cball x r \\<inter> UNIV)", "by auto"], ["", "lemma complete_of_proper:\n  assumes \"proper S\"\n  shows \"complete S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complete S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. complete S", "have \"\\<exists>l\\<in>S. u \\<longlonglongrightarrow> l\" if \"Cauchy u\" \"\\<And>n. u n \\<in> S\" for u"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>S. u \\<longlonglongrightarrow> l", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>S. u \\<longlonglongrightarrow> l", "have \"bounded (range u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded (range u)", "using \\<open>Cauchy u\\<close> cauchy_imp_bounded"], ["proof (prove)\nusing this:\n  Cauchy u\n  Cauchy ?s \\<Longrightarrow> bounded (range ?s)\n\ngoal (1 subgoal):\n 1. bounded (range u)", "by auto"], ["proof (state)\nthis:\n  bounded (range u)\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>S. u \\<longlonglongrightarrow> l", "then"], ["proof (chain)\npicking this:\n  bounded (range u)", "obtain x r where *: \"\\<And>n. dist x (u n) \\<le> r\""], ["proof (prove)\nusing this:\n  bounded (range u)\n\ngoal (1 subgoal):\n 1. (\\<And>x r.\n        (\\<And>n. dist x (u n) \\<le> r) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding bounded_def"], ["proof (prove)\nusing this:\n  \\<exists>x e. \\<forall>y\\<in>range u. dist x y \\<le> e\n\ngoal (1 subgoal):\n 1. (\\<And>x r.\n        (\\<And>n. dist x (u n) \\<le> r) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  dist x (u ?n) \\<le> r\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>S. u \\<longlonglongrightarrow> l", "then"], ["proof (chain)\npicking this:\n  dist x (u ?n) \\<le> r", "have \"u n \\<in> (cball x r) \\<inter> S\" for n"], ["proof (prove)\nusing this:\n  dist x (u ?n) \\<le> r\n\ngoal (1 subgoal):\n 1. u n \\<in> cball x r \\<inter> S", "using \\<open>u n \\<in> S\\<close>"], ["proof (prove)\nusing this:\n  dist x (u ?n) \\<le> r\n  u n \\<in> S\n\ngoal (1 subgoal):\n 1. u n \\<in> cball x r \\<inter> S", "by auto"], ["proof (state)\nthis:\n  u ?n \\<in> cball x r \\<inter> S\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>S. u \\<longlonglongrightarrow> l", "moreover"], ["proof (state)\nthis:\n  u ?n \\<in> cball x r \\<inter> S\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>S. u \\<longlonglongrightarrow> l", "have \"complete ((cball x r) \\<inter> S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complete (cball x r \\<inter> S)", "apply (rule compact_imp_complete)"], ["proof (prove)\ngoal (1 subgoal):\n 1. compact (cball x r \\<inter> S)", "using assms"], ["proof (prove)\nusing this:\n  proper S\n\ngoal (1 subgoal):\n 1. compact (cball x r \\<inter> S)", "unfolding proper_def"], ["proof (prove)\nusing this:\n  \\<forall>x r. compact (cball x r \\<inter> S)\n\ngoal (1 subgoal):\n 1. compact (cball x r \\<inter> S)", "by auto"], ["proof (state)\nthis:\n  complete (cball x r \\<inter> S)\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>S. u \\<longlonglongrightarrow> l", "ultimately"], ["proof (chain)\npicking this:\n  u ?n \\<in> cball x r \\<inter> S\n  complete (cball x r \\<inter> S)", "show ?thesis"], ["proof (prove)\nusing this:\n  u ?n \\<in> cball x r \\<inter> S\n  complete (cball x r \\<inter> S)\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>S. u \\<longlonglongrightarrow> l", "unfolding complete_def"], ["proof (prove)\nusing this:\n  u ?n \\<in> cball x r \\<inter> S\n  \\<forall>f.\n     (\\<forall>n. f n \\<in> cball x r \\<inter> S) \\<and>\n     Cauchy f \\<longrightarrow>\n     (\\<exists>l\\<in>cball x r \\<inter> S. f \\<longlonglongrightarrow> l)\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>S. u \\<longlonglongrightarrow> l", "using \\<open>Cauchy u\\<close>"], ["proof (prove)\nusing this:\n  u ?n \\<in> cball x r \\<inter> S\n  \\<forall>f.\n     (\\<forall>n. f n \\<in> cball x r \\<inter> S) \\<and>\n     Cauchy f \\<longrightarrow>\n     (\\<exists>l\\<in>cball x r \\<inter> S. f \\<longlonglongrightarrow> l)\n  Cauchy u\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>S. u \\<longlonglongrightarrow> l", "by auto"], ["proof (state)\nthis:\n  \\<exists>l\\<in>S. u \\<longlonglongrightarrow> l\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>Cauchy ?u; \\<And>n. ?u n \\<in> S\\<rbrakk>\n  \\<Longrightarrow> \\<exists>l\\<in>S. ?u \\<longlonglongrightarrow> l\n\ngoal (1 subgoal):\n 1. complete S", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>Cauchy ?u; \\<And>n. ?u n \\<in> S\\<rbrakk>\n  \\<Longrightarrow> \\<exists>l\\<in>S. ?u \\<longlonglongrightarrow> l", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>Cauchy ?u; \\<And>n. ?u n \\<in> S\\<rbrakk>\n  \\<Longrightarrow> \\<exists>l\\<in>S. ?u \\<longlonglongrightarrow> l\n\ngoal (1 subgoal):\n 1. complete S", "unfolding complete_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>Cauchy ?u; \\<And>n. ?u n \\<in> S\\<rbrakk>\n  \\<Longrightarrow> \\<exists>l\\<in>S. ?u \\<longlonglongrightarrow> l\n\ngoal (1 subgoal):\n 1. \\<forall>f.\n       (\\<forall>n. f n \\<in> S) \\<and> Cauchy f \\<longrightarrow>\n       (\\<exists>l\\<in>S. f \\<longlonglongrightarrow> l)", "by auto"], ["proof (state)\nthis:\n  complete S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma proper_of_compact:\n  assumes \"compact S\"\n  shows \"proper S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proper S", "using assms"], ["proof (prove)\nusing this:\n  compact S\n\ngoal (1 subgoal):\n 1. proper S", "by (auto intro: properI)"], ["", "lemma proper_Un:\n  assumes \"proper A\" \"proper B\"\n  shows \"proper (A \\<union> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proper (A \\<union> B)", "using assms"], ["proof (prove)\nusing this:\n  proper A\n  proper B\n\ngoal (1 subgoal):\n 1. proper (A \\<union> B)", "unfolding proper_def"], ["proof (prove)\nusing this:\n  \\<forall>x r. compact (cball x r \\<inter> A)\n  \\<forall>x r. compact (cball x r \\<inter> B)\n\ngoal (1 subgoal):\n 1. \\<forall>x r. compact (cball x r \\<inter> (A \\<union> B))", "by (auto simp add: compact_Un inf_sup_distrib1)"], ["", "subsubsection \\<open>Miscellaneous topology\\<close>"], ["", "text \\<open>When manipulating the triangle inequality, it is very frequent to deal with 4 points\n(and automation has trouble doing it automatically). Even sometimes with 5 points...\\<close>"], ["", "lemma dist_triangle4 [mono_intros]:\n  \"dist x t \\<le> dist x y + dist y z + dist z t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x t \\<le> dist x y + dist y z + dist z t", "using dist_triangle[of x z y] dist_triangle[of x t z]"], ["proof (prove)\nusing this:\n  dist x z \\<le> dist x y + dist y z\n  dist x t \\<le> dist x z + dist z t\n\ngoal (1 subgoal):\n 1. dist x t \\<le> dist x y + dist y z + dist z t", "by auto"], ["", "lemma dist_triangle5 [mono_intros]:\n  \"dist x u \\<le> dist x y + dist y z + dist z t + dist t u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x u \\<le> dist x y + dist y z + dist z t + dist t u", "using dist_triangle4[of x u y z] dist_triangle[of z u t]"], ["proof (prove)\nusing this:\n  dist x u \\<le> dist x y + dist y z + dist z u\n  dist z u \\<le> dist z t + dist t u\n\ngoal (1 subgoal):\n 1. dist x u \\<le> dist x y + dist y z + dist z t + dist t u", "by auto"], ["", "text \\<open>A thickening of a compact set is closed.\\<close>"], ["", "lemma compact_has_closed_thickening:\n  assumes \"compact C\"\n          \"continuous_on C f\"\n  shows \"closed (\\<Union>x\\<in>C. cball x (f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closed (\\<Union>x\\<in>C. cball x (f x))", "proof (auto simp add: closed_sequential_limits)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x l.\n       \\<lbrakk>\\<forall>n. \\<exists>xa\\<in>C. dist xa (x n) \\<le> f xa;\n        x \\<longlonglongrightarrow> l\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>C. dist x l \\<le> f x", "fix u l"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x l.\n       \\<lbrakk>\\<forall>n. \\<exists>xa\\<in>C. dist xa (x n) \\<le> f xa;\n        x \\<longlonglongrightarrow> l\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>C. dist x l \\<le> f x", "assume *: \"\\<forall>n::nat. \\<exists>x\\<in>C. dist x (u n) \\<le> f x\" \"u \\<longlonglongrightarrow> l\""], ["proof (state)\nthis:\n  \\<forall>n. \\<exists>x\\<in>C. dist x (u n) \\<le> f x\n  u \\<longlonglongrightarrow> l\n\ngoal (1 subgoal):\n 1. \\<And>x l.\n       \\<lbrakk>\\<forall>n. \\<exists>xa\\<in>C. dist xa (x n) \\<le> f xa;\n        x \\<longlonglongrightarrow> l\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>C. dist x l \\<le> f x", "have \"\\<exists>x::nat\\<Rightarrow>'a. \\<forall>n. x n \\<in> C \\<and> dist (x n) (u n) \\<le> f (x n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x.\n       \\<forall>n. x n \\<in> C \\<and> dist (x n) (u n) \\<le> f (x n)", "apply (rule choice)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. \\<exists>y. y \\<in> C \\<and> dist y (u n) \\<le> f y", "using *"], ["proof (prove)\nusing this:\n  \\<forall>n. \\<exists>x\\<in>C. dist x (u n) \\<le> f x\n  u \\<longlonglongrightarrow> l\n\ngoal (1 subgoal):\n 1. \\<forall>n. \\<exists>y. y \\<in> C \\<and> dist y (u n) \\<le> f y", "by auto"], ["proof (state)\nthis:\n  \\<exists>x. \\<forall>n. x n \\<in> C \\<and> dist (x n) (u n) \\<le> f (x n)\n\ngoal (1 subgoal):\n 1. \\<And>x l.\n       \\<lbrakk>\\<forall>n. \\<exists>xa\\<in>C. dist xa (x n) \\<le> f xa;\n        x \\<longlonglongrightarrow> l\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>C. dist x l \\<le> f x", "then"], ["proof (chain)\npicking this:\n  \\<exists>x. \\<forall>n. x n \\<in> C \\<and> dist (x n) (u n) \\<le> f (x n)", "obtain x::\"nat \\<Rightarrow> 'a\" where x: \"\\<And>n. x n \\<in> C\" \"\\<And>n. dist (x n) (u n) \\<le> f (x n)\""], ["proof (prove)\nusing this:\n  \\<exists>x. \\<forall>n. x n \\<in> C \\<and> dist (x n) (u n) \\<le> f (x n)\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>\\<And>n. x n \\<in> C;\n         \\<And>n. dist (x n) (u n) \\<le> f (x n)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x ?n \\<in> C\n  dist (x ?n) (u ?n) \\<le> f (x ?n)\n\ngoal (1 subgoal):\n 1. \\<And>x l.\n       \\<lbrakk>\\<forall>n. \\<exists>xa\\<in>C. dist xa (x n) \\<le> f xa;\n        x \\<longlonglongrightarrow> l\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>C. dist x l \\<le> f x", "obtain r c where \"strict_mono r\" \"c \\<in> C\" \"(x o r) \\<longlonglongrightarrow> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r c.\n        \\<lbrakk>strict_mono r; c \\<in> C;\n         (x \\<circ> r) \\<longlonglongrightarrow> c\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using x(1) \\<open>compact C\\<close>"], ["proof (prove)\nusing this:\n  x ?n \\<in> C\n  compact C\n\ngoal (1 subgoal):\n 1. (\\<And>r c.\n        \\<lbrakk>strict_mono r; c \\<in> C;\n         (x \\<circ> r) \\<longlonglongrightarrow> c\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson compact_eq_seq_compact_metric seq_compact_def)"], ["proof (state)\nthis:\n  strict_mono r\n  c \\<in> C\n  (x \\<circ> r) \\<longlonglongrightarrow> c\n\ngoal (1 subgoal):\n 1. \\<And>x l.\n       \\<lbrakk>\\<forall>n. \\<exists>xa\\<in>C. dist xa (x n) \\<le> f xa;\n        x \\<longlonglongrightarrow> l\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>C. dist x l \\<le> f x", "then"], ["proof (chain)\npicking this:\n  strict_mono r\n  c \\<in> C\n  (x \\<circ> r) \\<longlonglongrightarrow> c", "have \"c \\<in> C\""], ["proof (prove)\nusing this:\n  strict_mono r\n  c \\<in> C\n  (x \\<circ> r) \\<longlonglongrightarrow> c\n\ngoal (1 subgoal):\n 1. c \\<in> C", "using x(1) \\<open>compact C\\<close>"], ["proof (prove)\nusing this:\n  strict_mono r\n  c \\<in> C\n  (x \\<circ> r) \\<longlonglongrightarrow> c\n  x ?n \\<in> C\n  compact C\n\ngoal (1 subgoal):\n 1. c \\<in> C", "by auto"], ["proof (state)\nthis:\n  c \\<in> C\n\ngoal (1 subgoal):\n 1. \\<And>x l.\n       \\<lbrakk>\\<forall>n. \\<exists>xa\\<in>C. dist xa (x n) \\<le> f xa;\n        x \\<longlonglongrightarrow> l\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>C. dist x l \\<le> f x", "have lim: \"(\\<lambda>n. f (x (r n)) - dist (x (r n)) (u (r n))) \\<longlonglongrightarrow> f c - dist c l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. f (x (r n)) - dist (x (r n)) (u (r n)))\n    \\<longlonglongrightarrow> f c - dist c l", "apply (intro tendsto_intros, rule continuous_on_tendsto_compose[of C f])"], ["proof (prove)\ngoal (6 subgoals):\n 1. continuous_on C f\n 2. (\\<lambda>xa. x (r xa)) \\<longlonglongrightarrow> c\n 3. c \\<in> C\n 4. \\<forall>\\<^sub>F xa in sequentially. x (r xa) \\<in> C\n 5. (\\<lambda>xa. x (r xa)) \\<longlonglongrightarrow> c\n 6. (\\<lambda>x. u (r x)) \\<longlonglongrightarrow> l", "using *(2) x(1) \\<open>(x o r) \\<longlonglongrightarrow> c\\<close> \\<open>continuous_on C f\\<close> \\<open>c \\<in> C\\<close> \\<open>strict_mono r\\<close> LIMSEQ_subseq_LIMSEQ"], ["proof (prove)\nusing this:\n  u \\<longlonglongrightarrow> l\n  x ?n \\<in> C\n  (x \\<circ> r) \\<longlonglongrightarrow> c\n  continuous_on C f\n  c \\<in> C\n  strict_mono r\n  \\<lbrakk>?X \\<longlonglongrightarrow> ?L; strict_mono ?f\\<rbrakk>\n  \\<Longrightarrow> (?X \\<circ> ?f) \\<longlonglongrightarrow> ?L\n\ngoal (6 subgoals):\n 1. continuous_on C f\n 2. (\\<lambda>xa. x (r xa)) \\<longlonglongrightarrow> c\n 3. c \\<in> C\n 4. \\<forall>\\<^sub>F xa in sequentially. x (r xa) \\<in> C\n 5. (\\<lambda>xa. x (r xa)) \\<longlonglongrightarrow> c\n 6. (\\<lambda>x. u (r x)) \\<longlonglongrightarrow> l", "unfolding comp_def"], ["proof (prove)\nusing this:\n  u \\<longlonglongrightarrow> l\n  x ?n \\<in> C\n  (\\<lambda>xa. x (r xa)) \\<longlonglongrightarrow> c\n  continuous_on C f\n  c \\<in> C\n  strict_mono r\n  \\<lbrakk>?X \\<longlonglongrightarrow> ?L; strict_mono ?f\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>x. ?X (?f x)) \\<longlonglongrightarrow> ?L\n\ngoal (6 subgoals):\n 1. continuous_on C f\n 2. (\\<lambda>xa. x (r xa)) \\<longlonglongrightarrow> c\n 3. c \\<in> C\n 4. \\<forall>\\<^sub>F xa in sequentially. x (r xa) \\<in> C\n 5. (\\<lambda>xa. x (r xa)) \\<longlonglongrightarrow> c\n 6. (\\<lambda>x. u (r x)) \\<longlonglongrightarrow> l", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n. f (x (r n)) - dist (x (r n)) (u (r n)))\n  \\<longlonglongrightarrow> f c - dist c l\n\ngoal (1 subgoal):\n 1. \\<And>x l.\n       \\<lbrakk>\\<forall>n. \\<exists>xa\\<in>C. dist xa (x n) \\<le> f xa;\n        x \\<longlonglongrightarrow> l\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>C. dist x l \\<le> f x", "have \"f c - dist c l \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> f c - dist c l", "apply (rule LIMSEQ_le_const[OF lim])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N. 0 \\<le> f (x (r n)) - dist (x (r n)) (u (r n))", "using x(2)"], ["proof (prove)\nusing this:\n  dist (x ?n) (u ?n) \\<le> f (x ?n)\n\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N. 0 \\<le> f (x (r n)) - dist (x (r n)) (u (r n))", "by auto"], ["proof (state)\nthis:\n  0 \\<le> f c - dist c l\n\ngoal (1 subgoal):\n 1. \\<And>x l.\n       \\<lbrakk>\\<forall>n. \\<exists>xa\\<in>C. dist xa (x n) \\<le> f xa;\n        x \\<longlonglongrightarrow> l\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>C. dist x l \\<le> f x", "then"], ["proof (chain)\npicking this:\n  0 \\<le> f c - dist c l", "show \"\\<exists>x\\<in>C. dist x l \\<le> f x\""], ["proof (prove)\nusing this:\n  0 \\<le> f c - dist c l\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>C. dist x l \\<le> f x", "using \\<open>c \\<in> C\\<close>"], ["proof (prove)\nusing this:\n  0 \\<le> f c - dist c l\n  c \\<in> C\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>C. dist x l \\<le> f x", "by auto"], ["proof (state)\nthis:\n  \\<exists>x\\<in>C. dist x l \\<le> f x\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>congruence rule for continuity. The assumption that $f y = g y$ is necessary since \\verb+at x+\nis the pointed neighborhood at $x$.\\<close>"], ["", "lemma continuous_within_cong:\n  assumes \"continuous (at y within S) f\"\n          \"eventually (\\<lambda>x. f x = g x) (at y within S)\"\n          \"f y = g y\"\n  shows \"continuous (at y within S) g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous (at y within S) g", "using assms continuous_within filterlim_cong"], ["proof (prove)\nusing this:\n  continuous (at y within S) f\n  \\<forall>\\<^sub>F x in at y within S. f x = g x\n  f y = g y\n  continuous (at ?x within ?s) ?f =\n  (?f \\<longlongrightarrow> ?f ?x) (at ?x within ?s)\n  \\<lbrakk>?F1.0 = ?F1'; ?F2.0 = ?F2';\n   \\<forall>\\<^sub>F x in ?F2.0. ?f x = ?g x\\<rbrakk>\n  \\<Longrightarrow> filterlim ?f ?F1.0 ?F2.0 = filterlim ?g ?F1' ?F2'\n\ngoal (1 subgoal):\n 1. continuous (at y within S) g", "by fastforce"], ["", "text \\<open>A function which tends to infinity at infinity, on a proper set, realizes its infimum\\<close>"], ["", "lemma continuous_attains_inf_proper:\n  fixes f :: \"'a::metric_space \\<Rightarrow> 'b::linorder_topology\"\n  assumes \"proper s\" \"a \\<in> s\"\n          \"continuous_on s f\"\n          \"\\<And>z. z \\<in> s - cball a r \\<Longrightarrow> f z \\<ge> f a\"\n  shows \"\\<exists>x\\<in>s. \\<forall>y\\<in>s. f x \\<le> f y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>s. \\<forall>y\\<in>s. f x \\<le> f y", "proof (cases \"r \\<ge> 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<le> r \\<Longrightarrow>\n    \\<exists>x\\<in>s. \\<forall>y\\<in>s. f x \\<le> f y\n 2. \\<not> 0 \\<le> r \\<Longrightarrow>\n    \\<exists>x\\<in>s. \\<forall>y\\<in>s. f x \\<le> f y", "case True"], ["proof (state)\nthis:\n  0 \\<le> r\n\ngoal (2 subgoals):\n 1. 0 \\<le> r \\<Longrightarrow>\n    \\<exists>x\\<in>s. \\<forall>y\\<in>s. f x \\<le> f y\n 2. \\<not> 0 \\<le> r \\<Longrightarrow>\n    \\<exists>x\\<in>s. \\<forall>y\\<in>s. f x \\<le> f y", "have \"\\<exists>x\\<in>cball a r \\<inter> s. \\<forall>y \\<in> cball a r \\<inter> s. f x \\<le> f y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>cball a r \\<inter> s.\n       \\<forall>y\\<in>cball a r \\<inter> s. f x \\<le> f y", "apply (rule continuous_attains_inf)"], ["proof (prove)\ngoal (3 subgoals):\n 1. compact (cball a r \\<inter> s)\n 2. cball a r \\<inter> s \\<noteq> {}\n 3. continuous_on (cball a r \\<inter> s) f", "using assms True"], ["proof (prove)\nusing this:\n  proper s\n  a \\<in> s\n  continuous_on s f\n  ?z \\<in> s - cball a r \\<Longrightarrow> f a \\<le> f ?z\n  0 \\<le> r\n\ngoal (3 subgoals):\n 1. compact (cball a r \\<inter> s)\n 2. cball a r \\<inter> s \\<noteq> {}\n 3. continuous_on (cball a r \\<inter> s) f", "unfolding proper_def"], ["proof (prove)\nusing this:\n  \\<forall>x r. compact (cball x r \\<inter> s)\n  a \\<in> s\n  continuous_on s f\n  ?z \\<in> s - cball a r \\<Longrightarrow> f a \\<le> f ?z\n  0 \\<le> r\n\ngoal (3 subgoals):\n 1. compact (cball a r \\<inter> s)\n 2. cball a r \\<inter> s \\<noteq> {}\n 3. continuous_on (cball a r \\<inter> s) f", "apply (auto simp add: continuous_on_subset)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x r. compact (cball x r \\<inter> s); a \\<in> s;\n     continuous_on s f;\n     \\<And>z.\n        z \\<in> s \\<and> \\<not> dist a z \\<le> r \\<Longrightarrow>\n        f a \\<le> f z;\n     0 \\<le> r; cball a r \\<inter> s = {}\\<rbrakk>\n    \\<Longrightarrow> False", "using centre_in_cball"], ["proof (prove)\nusing this:\n  (?x \\<in> cball ?x ?e) = (0 \\<le> ?e)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x r. compact (cball x r \\<inter> s); a \\<in> s;\n     continuous_on s f;\n     \\<And>z.\n        z \\<in> s \\<and> \\<not> dist a z \\<le> r \\<Longrightarrow>\n        f a \\<le> f z;\n     0 \\<le> r; cball a r \\<inter> s = {}\\<rbrakk>\n    \\<Longrightarrow> False", "by blast"], ["proof (state)\nthis:\n  \\<exists>x\\<in>cball a r \\<inter> s.\n     \\<forall>y\\<in>cball a r \\<inter> s. f x \\<le> f y\n\ngoal (2 subgoals):\n 1. 0 \\<le> r \\<Longrightarrow>\n    \\<exists>x\\<in>s. \\<forall>y\\<in>s. f x \\<le> f y\n 2. \\<not> 0 \\<le> r \\<Longrightarrow>\n    \\<exists>x\\<in>s. \\<forall>y\\<in>s. f x \\<le> f y", "then"], ["proof (chain)\npicking this:\n  \\<exists>x\\<in>cball a r \\<inter> s.\n     \\<forall>y\\<in>cball a r \\<inter> s. f x \\<le> f y", "obtain x where x: \"x \\<in> cball a r \\<inter> s\" \"\\<And>y. y \\<in> cball a r \\<inter> s \\<Longrightarrow> f x \\<le> f y\""], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>cball a r \\<inter> s.\n     \\<forall>y\\<in>cball a r \\<inter> s. f x \\<le> f y\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> cball a r \\<inter> s;\n         \\<And>y.\n            y \\<in> cball a r \\<inter> s \\<Longrightarrow>\n            f x \\<le> f y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> cball a r \\<inter> s\n  ?y \\<in> cball a r \\<inter> s \\<Longrightarrow> f x \\<le> f ?y\n\ngoal (2 subgoals):\n 1. 0 \\<le> r \\<Longrightarrow>\n    \\<exists>x\\<in>s. \\<forall>y\\<in>s. f x \\<le> f y\n 2. \\<not> 0 \\<le> r \\<Longrightarrow>\n    \\<exists>x\\<in>s. \\<forall>y\\<in>s. f x \\<le> f y", "have \"f x \\<le> f y\" if \"y \\<in> s\" for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. f x \\<le> f y", "proof (cases \"y \\<in> cball a r\")"], ["proof (state)\ngoal (2 subgoals):\n 1. y \\<in> cball a r \\<Longrightarrow> f x \\<le> f y\n 2. y \\<notin> cball a r \\<Longrightarrow> f x \\<le> f y", "case True"], ["proof (state)\nthis:\n  y \\<in> cball a r\n\ngoal (2 subgoals):\n 1. y \\<in> cball a r \\<Longrightarrow> f x \\<le> f y\n 2. y \\<notin> cball a r \\<Longrightarrow> f x \\<le> f y", "then"], ["proof (chain)\npicking this:\n  y \\<in> cball a r", "show ?thesis"], ["proof (prove)\nusing this:\n  y \\<in> cball a r\n\ngoal (1 subgoal):\n 1. f x \\<le> f y", "using x(2) that"], ["proof (prove)\nusing this:\n  y \\<in> cball a r\n  ?y \\<in> cball a r \\<inter> s \\<Longrightarrow> f x \\<le> f ?y\n  y \\<in> s\n\ngoal (1 subgoal):\n 1. f x \\<le> f y", "by auto"], ["proof (state)\nthis:\n  f x \\<le> f y\n\ngoal (1 subgoal):\n 1. y \\<notin> cball a r \\<Longrightarrow> f x \\<le> f y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<notin> cball a r \\<Longrightarrow> f x \\<le> f y", "case False"], ["proof (state)\nthis:\n  y \\<notin> cball a r\n\ngoal (1 subgoal):\n 1. y \\<notin> cball a r \\<Longrightarrow> f x \\<le> f y", "have \"f x \\<le> f a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x \\<le> f a", "apply (rule x(2))"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> cball a r \\<inter> s", "using assms True"], ["proof (prove)\nusing this:\n  proper s\n  a \\<in> s\n  continuous_on s f\n  ?z \\<in> s - cball a r \\<Longrightarrow> f a \\<le> f ?z\n  0 \\<le> r\n\ngoal (1 subgoal):\n 1. a \\<in> cball a r \\<inter> s", "by auto"], ["proof (state)\nthis:\n  f x \\<le> f a\n\ngoal (1 subgoal):\n 1. y \\<notin> cball a r \\<Longrightarrow> f x \\<le> f y", "then"], ["proof (chain)\npicking this:\n  f x \\<le> f a", "show ?thesis"], ["proof (prove)\nusing this:\n  f x \\<le> f a\n\ngoal (1 subgoal):\n 1. f x \\<le> f y", "using assms(4)[of y] that False"], ["proof (prove)\nusing this:\n  f x \\<le> f a\n  y \\<in> s - cball a r \\<Longrightarrow> f a \\<le> f y\n  y \\<in> s\n  y \\<notin> cball a r\n\ngoal (1 subgoal):\n 1. f x \\<le> f y", "by auto"], ["proof (state)\nthis:\n  f x \\<le> f y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?y \\<in> s \\<Longrightarrow> f x \\<le> f ?y\n\ngoal (2 subgoals):\n 1. 0 \\<le> r \\<Longrightarrow>\n    \\<exists>x\\<in>s. \\<forall>y\\<in>s. f x \\<le> f y\n 2. \\<not> 0 \\<le> r \\<Longrightarrow>\n    \\<exists>x\\<in>s. \\<forall>y\\<in>s. f x \\<le> f y", "then"], ["proof (chain)\npicking this:\n  ?y \\<in> s \\<Longrightarrow> f x \\<le> f ?y", "show ?thesis"], ["proof (prove)\nusing this:\n  ?y \\<in> s \\<Longrightarrow> f x \\<le> f ?y\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>s. \\<forall>y\\<in>s. f x \\<le> f y", "using x(1)"], ["proof (prove)\nusing this:\n  ?y \\<in> s \\<Longrightarrow> f x \\<le> f ?y\n  x \\<in> cball a r \\<inter> s\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>s. \\<forall>y\\<in>s. f x \\<le> f y", "by auto"], ["proof (state)\nthis:\n  \\<exists>x\\<in>s. \\<forall>y\\<in>s. f x \\<le> f y\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> r \\<Longrightarrow>\n    \\<exists>x\\<in>s. \\<forall>y\\<in>s. f x \\<le> f y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> r \\<Longrightarrow>\n    \\<exists>x\\<in>s. \\<forall>y\\<in>s. f x \\<le> f y", "case False"], ["proof (state)\nthis:\n  \\<not> 0 \\<le> r\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> r \\<Longrightarrow>\n    \\<exists>x\\<in>s. \\<forall>y\\<in>s. f x \\<le> f y", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>s. \\<forall>y\\<in>s. f x \\<le> f y", "apply (rule bexI[of _ a])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>y\\<in>s. f a \\<le> f y\n 2. a \\<in> s", "using assms False"], ["proof (prove)\nusing this:\n  proper s\n  a \\<in> s\n  continuous_on s f\n  ?z \\<in> s - cball a r \\<Longrightarrow> f a \\<le> f ?z\n  \\<not> 0 \\<le> r\n\ngoal (2 subgoals):\n 1. \\<forall>y\\<in>s. f a \\<le> f y\n 2. a \\<in> s", "by auto"], ["proof (state)\nthis:\n  \\<exists>x\\<in>s. \\<forall>y\\<in>s. f x \\<le> f y\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Measure of balls\\<close>"], ["", "text \\<open>The image of a ball by an affine map is still a ball, with explicit center and radius. (Now unused)\\<close>"], ["", "lemma affine_image_ball [simp]:\n  \"(\\<lambda>y. R *\\<^sub>R y + x) ` cball 0 1 = cball (x::('a::real_normed_vector)) \\<bar>R\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1 =\n    cball x \\<bar>R\\<bar>", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1\n    \\<subseteq> cball x \\<bar>R\\<bar>\n 2. cball x \\<bar>R\\<bar>\n    \\<subseteq> (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1", "have \"dist x (R *\\<^sub>R y + x) \\<le> \\<bar>R\\<bar>\" if \"dist 0 y \\<le> 1\" for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x (R *\\<^sub>R y + x) \\<le> \\<bar>R\\<bar>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist x (R *\\<^sub>R y + x) \\<le> \\<bar>R\\<bar>", "have \"dist x (R *\\<^sub>R y + x) = norm ((R *\\<^sub>R y + x) - x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x (R *\\<^sub>R y + x) = norm (R *\\<^sub>R y + x - x)", "by (simp add: dist_norm)"], ["proof (state)\nthis:\n  dist x (R *\\<^sub>R y + x) = norm (R *\\<^sub>R y + x - x)\n\ngoal (1 subgoal):\n 1. dist x (R *\\<^sub>R y + x) \\<le> \\<bar>R\\<bar>", "also"], ["proof (state)\nthis:\n  dist x (R *\\<^sub>R y + x) = norm (R *\\<^sub>R y + x - x)\n\ngoal (1 subgoal):\n 1. dist x (R *\\<^sub>R y + x) \\<le> \\<bar>R\\<bar>", "have \"... = \\<bar>R\\<bar> * norm y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (R *\\<^sub>R y + x - x) = \\<bar>R\\<bar> * norm y", "by auto"], ["proof (state)\nthis:\n  norm (R *\\<^sub>R y + x - x) = \\<bar>R\\<bar> * norm y\n\ngoal (1 subgoal):\n 1. dist x (R *\\<^sub>R y + x) \\<le> \\<bar>R\\<bar>", "finally"], ["proof (chain)\npicking this:\n  dist x (R *\\<^sub>R y + x) = \\<bar>R\\<bar> * norm y", "show ?thesis"], ["proof (prove)\nusing this:\n  dist x (R *\\<^sub>R y + x) = \\<bar>R\\<bar> * norm y\n\ngoal (1 subgoal):\n 1. dist x (R *\\<^sub>R y + x) \\<le> \\<bar>R\\<bar>", "using that"], ["proof (prove)\nusing this:\n  dist x (R *\\<^sub>R y + x) = \\<bar>R\\<bar> * norm y\n  dist (0::'a) y \\<le> 1\n\ngoal (1 subgoal):\n 1. dist x (R *\\<^sub>R y + x) \\<le> \\<bar>R\\<bar>", "by (simp add: mult_left_le)"], ["proof (state)\nthis:\n  dist x (R *\\<^sub>R y + x) \\<le> \\<bar>R\\<bar>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dist (0::'a) ?y \\<le> 1 \\<Longrightarrow>\n  dist x (R *\\<^sub>R ?y + x) \\<le> \\<bar>R\\<bar>\n\ngoal (2 subgoals):\n 1. (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1\n    \\<subseteq> cball x \\<bar>R\\<bar>\n 2. cball x \\<bar>R\\<bar>\n    \\<subseteq> (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1", "then"], ["proof (chain)\npicking this:\n  dist (0::'a) ?y \\<le> 1 \\<Longrightarrow>\n  dist x (R *\\<^sub>R ?y + x) \\<le> \\<bar>R\\<bar>", "show \"(\\<lambda>y. R *\\<^sub>R y + x) ` cball 0 1 \\<subseteq> cball x \\<bar>R\\<bar>\""], ["proof (prove)\nusing this:\n  dist (0::'a) ?y \\<le> 1 \\<Longrightarrow>\n  dist x (R *\\<^sub>R ?y + x) \\<le> \\<bar>R\\<bar>\n\ngoal (1 subgoal):\n 1. (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1\n    \\<subseteq> cball x \\<bar>R\\<bar>", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1\n  \\<subseteq> cball x \\<bar>R\\<bar>\n\ngoal (1 subgoal):\n 1. cball x \\<bar>R\\<bar>\n    \\<subseteq> (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1", "show \"cball x \\<bar>R\\<bar> \\<subseteq> (\\<lambda>y. R *\\<^sub>R y + x) ` cball 0 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cball x \\<bar>R\\<bar>\n    \\<subseteq> (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1", "proof (cases \"\\<bar>R\\<bar> = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<bar>R\\<bar> = 0 \\<Longrightarrow>\n    cball x \\<bar>R\\<bar>\n    \\<subseteq> (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1\n 2. \\<bar>R\\<bar> \\<noteq> 0 \\<Longrightarrow>\n    cball x \\<bar>R\\<bar>\n    \\<subseteq> (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1", "case True"], ["proof (state)\nthis:\n  \\<bar>R\\<bar> = 0\n\ngoal (2 subgoals):\n 1. \\<bar>R\\<bar> = 0 \\<Longrightarrow>\n    cball x \\<bar>R\\<bar>\n    \\<subseteq> (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1\n 2. \\<bar>R\\<bar> \\<noteq> 0 \\<Longrightarrow>\n    cball x \\<bar>R\\<bar>\n    \\<subseteq> (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1", "then"], ["proof (chain)\npicking this:\n  \\<bar>R\\<bar> = 0", "have \"cball x \\<bar>R\\<bar> = {x}\""], ["proof (prove)\nusing this:\n  \\<bar>R\\<bar> = 0\n\ngoal (1 subgoal):\n 1. cball x \\<bar>R\\<bar> = {x}", "by auto"], ["proof (state)\nthis:\n  cball x \\<bar>R\\<bar> = {x}\n\ngoal (2 subgoals):\n 1. \\<bar>R\\<bar> = 0 \\<Longrightarrow>\n    cball x \\<bar>R\\<bar>\n    \\<subseteq> (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1\n 2. \\<bar>R\\<bar> \\<noteq> 0 \\<Longrightarrow>\n    cball x \\<bar>R\\<bar>\n    \\<subseteq> (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1", "moreover"], ["proof (state)\nthis:\n  cball x \\<bar>R\\<bar> = {x}\n\ngoal (2 subgoals):\n 1. \\<bar>R\\<bar> = 0 \\<Longrightarrow>\n    cball x \\<bar>R\\<bar>\n    \\<subseteq> (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1\n 2. \\<bar>R\\<bar> \\<noteq> 0 \\<Longrightarrow>\n    cball x \\<bar>R\\<bar>\n    \\<subseteq> (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1", "have \"x = R *\\<^sub>R 0 + x \\<and> 0 \\<in> cball 0 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = R *\\<^sub>R (0::'a) + x \\<and> (0::'b) \\<in> cball (0::'b) 1", "by auto"], ["proof (state)\nthis:\n  x = R *\\<^sub>R (0::'a) + x \\<and> (0::?'b1) \\<in> cball (0::?'b1) 1\n\ngoal (2 subgoals):\n 1. \\<bar>R\\<bar> = 0 \\<Longrightarrow>\n    cball x \\<bar>R\\<bar>\n    \\<subseteq> (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1\n 2. \\<bar>R\\<bar> \\<noteq> 0 \\<Longrightarrow>\n    cball x \\<bar>R\\<bar>\n    \\<subseteq> (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1", "ultimately"], ["proof (chain)\npicking this:\n  cball x \\<bar>R\\<bar> = {x}\n  x = R *\\<^sub>R (0::'a) + x \\<and> (0::?'b1) \\<in> cball (0::?'b1) 1", "show ?thesis"], ["proof (prove)\nusing this:\n  cball x \\<bar>R\\<bar> = {x}\n  x = R *\\<^sub>R (0::'a) + x \\<and> (0::?'b1) \\<in> cball (0::?'b1) 1\n\ngoal (1 subgoal):\n 1. cball x \\<bar>R\\<bar>\n    \\<subseteq> (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1", "by auto"], ["proof (state)\nthis:\n  cball x \\<bar>R\\<bar>\n  \\<subseteq> (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1\n\ngoal (1 subgoal):\n 1. \\<bar>R\\<bar> \\<noteq> 0 \\<Longrightarrow>\n    cball x \\<bar>R\\<bar>\n    \\<subseteq> (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<bar>R\\<bar> \\<noteq> 0 \\<Longrightarrow>\n    cball x \\<bar>R\\<bar>\n    \\<subseteq> (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1", "case False"], ["proof (state)\nthis:\n  \\<bar>R\\<bar> \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<bar>R\\<bar> \\<noteq> 0 \\<Longrightarrow>\n    cball x \\<bar>R\\<bar>\n    \\<subseteq> (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1", "have \"z \\<in> (\\<lambda>y. R *\\<^sub>R y + x) ` cball 0 1\" if \"z \\<in> cball x \\<bar>R\\<bar>\" for z"], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. z \\<in> (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1", "define y where \"y = (z - x) /\\<^sub>R R\""], ["proof (state)\nthis:\n  y = (z - x) /\\<^sub>R R\n\ngoal (1 subgoal):\n 1. z \\<in> (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1", "have \"R *\\<^sub>R y + x = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R *\\<^sub>R y + x = z", "unfolding y_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. R *\\<^sub>R ((z - x) /\\<^sub>R R) + x = z", "using False"], ["proof (prove)\nusing this:\n  \\<bar>R\\<bar> \\<noteq> 0\n\ngoal (1 subgoal):\n 1. R *\\<^sub>R ((z - x) /\\<^sub>R R) + x = z", "by auto"], ["proof (state)\nthis:\n  R *\\<^sub>R y + x = z\n\ngoal (1 subgoal):\n 1. z \\<in> (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1", "moreover"], ["proof (state)\nthis:\n  R *\\<^sub>R y + x = z\n\ngoal (1 subgoal):\n 1. z \\<in> (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1", "have \"y \\<in> cball 0 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> cball (0::'a) 1", "using \\<open>z \\<in> cball x \\<bar>R\\<bar>\\<close> False"], ["proof (prove)\nusing this:\n  z \\<in> cball x \\<bar>R\\<bar>\n  \\<bar>R\\<bar> \\<noteq> 0\n\ngoal (1 subgoal):\n 1. y \\<in> cball (0::'a) 1", "unfolding y_def"], ["proof (prove)\nusing this:\n  z \\<in> cball x \\<bar>R\\<bar>\n  \\<bar>R\\<bar> \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (z - x) /\\<^sub>R R \\<in> cball (0::'a) 1", "by (auto simp add: dist_norm[symmetric] divide_simps dist_commute)"], ["proof (state)\nthis:\n  y \\<in> cball (0::'a) 1\n\ngoal (1 subgoal):\n 1. z \\<in> (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1", "ultimately"], ["proof (chain)\npicking this:\n  R *\\<^sub>R y + x = z\n  y \\<in> cball (0::'a) 1", "show ?thesis"], ["proof (prove)\nusing this:\n  R *\\<^sub>R y + x = z\n  y \\<in> cball (0::'a) 1\n\ngoal (1 subgoal):\n 1. z \\<in> (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1", "by auto"], ["proof (state)\nthis:\n  z \\<in> (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?z \\<in> cball x \\<bar>R\\<bar> \\<Longrightarrow>\n  ?z \\<in> (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1\n\ngoal (1 subgoal):\n 1. \\<bar>R\\<bar> \\<noteq> 0 \\<Longrightarrow>\n    cball x \\<bar>R\\<bar>\n    \\<subseteq> (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1", "then"], ["proof (chain)\npicking this:\n  ?z \\<in> cball x \\<bar>R\\<bar> \\<Longrightarrow>\n  ?z \\<in> (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1", "show ?thesis"], ["proof (prove)\nusing this:\n  ?z \\<in> cball x \\<bar>R\\<bar> \\<Longrightarrow>\n  ?z \\<in> (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1\n\ngoal (1 subgoal):\n 1. cball x \\<bar>R\\<bar>\n    \\<subseteq> (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1", "by auto"], ["proof (state)\nthis:\n  cball x \\<bar>R\\<bar>\n  \\<subseteq> (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cball x \\<bar>R\\<bar>\n  \\<subseteq> (\\<lambda>y. R *\\<^sub>R y + x) ` cball (0::'a) 1\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>From the rescaling properties of Lebesgue measure in a euclidean space, it follows that\nthe measure of any ball can be expressed in terms of the measure of the unit ball.\\<close>"], ["", "lemma lebesgue_measure_ball:\n  assumes \"R \\<ge> 0\"\n  shows \"measure lborel (cball (x::('a::euclidean_space)) R) = R^(DIM('a)) * measure lborel (cball (0::'a) 1)\"\n        \"emeasure lborel (cball (x::('a::euclidean_space)) R) = R^(DIM('a)) * emeasure lborel (cball (0::'a) 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. content (cball x R) = R ^ DIM('a) * content (cball (0::'a) 1) &&&\n    emeasure lborel (cball x R) =\n    ennreal R ^ DIM('a) * emeasure lborel (cball (0::'a) 1)", "apply (simp add: assms content_cball)"], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure lborel (cball x R) =\n    ennreal R ^ DIM('a) * emeasure lborel (cball (0::'a) 1)", "by (simp add: assms emeasure_cball ennreal_mult' ennreal_power mult.commute)"], ["", "text \\<open>We show that the unit ball has positive measure -- this is obvious, but useful. We could\nshow it by arguing that it contains a box, whose measure can be computed, but instead we say\nthat if the measure vanished then the measure of any ball would also vanish, contradicting the\nfact that the space has infinite measure. This avoids all computations.\\<close>"], ["", "lemma lebesgue_measure_ball_pos:\n  \"emeasure lborel (cball (0::'a::euclidean_space) 1) > 0\"\n  \"measure lborel (cball (0::'a::euclidean_space) 1) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < emeasure lborel (cball (0::'a) 1) &&& 0 < content (cball (0::'a) 1)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < emeasure lborel (cball (0::'a) 1)\n 2. 0 < content (cball (0::'a) 1)", "show \"emeasure lborel (cball (0::'a::euclidean_space) 1) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < emeasure lborel (cball (0::'a) 1)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 0 < emeasure lborel (cball (0::'a) 1) \\<Longrightarrow> False", "assume \"\\<not>(emeasure lborel (cball (0::'a::euclidean_space) 1) > 0)\""], ["proof (state)\nthis:\n  \\<not> 0 < emeasure lborel (cball (0::'a) 1)\n\ngoal (1 subgoal):\n 1. \\<not> 0 < emeasure lborel (cball (0::'a) 1) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> 0 < emeasure lborel (cball (0::'a) 1)", "have \"emeasure lborel (cball (0::'a) 1) = 0\""], ["proof (prove)\nusing this:\n  \\<not> 0 < emeasure lborel (cball (0::'a) 1)\n\ngoal (1 subgoal):\n 1. emeasure lborel (cball (0::'a) 1) = 0", "by auto"], ["proof (state)\nthis:\n  emeasure lborel (cball (0::'a) 1) = 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < emeasure lborel (cball (0::'a) 1) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  emeasure lborel (cball (0::'a) 1) = 0", "have \"emeasure lborel (cball (0::'a) n) = 0\" for n::nat"], ["proof (prove)\nusing this:\n  emeasure lborel (cball (0::'a) 1) = 0\n\ngoal (1 subgoal):\n 1. emeasure lborel (cball (0::'a) (real n)) = 0", "using lebesgue_measure_ball(2)[of \"real n\" 0]"], ["proof (prove)\nusing this:\n  emeasure lborel (cball (0::'a) 1) = 0\n  0 \\<le> real n \\<Longrightarrow>\n  emeasure lborel (cball (0::?'b1) (real n)) =\n  ennreal (real n) ^ DIM(?'b1) * emeasure lborel (cball (0::?'b1) 1)\n\ngoal (1 subgoal):\n 1. emeasure lborel (cball (0::'a) (real n)) = 0", "by (metis mult_zero_right of_nat_0_le_iff)"], ["proof (state)\nthis:\n  emeasure lborel (cball (0::'a) (real ?n)) = 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < emeasure lborel (cball (0::'a) 1) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  emeasure lborel (cball (0::'a) (real ?n)) = 0", "have \"emeasure lborel (\\<Union>n. cball (0::'a) (real n)) = 0\""], ["proof (prove)\nusing this:\n  emeasure lborel (cball (0::'a) (real ?n)) = 0\n\ngoal (1 subgoal):\n 1. emeasure lborel (\\<Union>n. cball (0::'a) (real n)) = 0", "by (metis (mono_tags, lifting) borel_closed closed_cball emeasure_UN_eq_0 imageE sets_lborel subsetI)"], ["proof (state)\nthis:\n  emeasure lborel (\\<Union>n. cball (0::'a) (real n)) = 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < emeasure lborel (cball (0::'a) 1) \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  emeasure lborel (\\<Union>n. cball (0::'a) (real n)) = 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < emeasure lborel (cball (0::'a) 1) \\<Longrightarrow> False", "have \"(\\<Union>n. cball (0::'a) (real n)) = UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>n. cball (0::'a) (real n)) = UNIV", "by (auto simp add: real_arch_simple)"], ["proof (state)\nthis:\n  (\\<Union>n. cball (0::'a) (real n)) = UNIV\n\ngoal (1 subgoal):\n 1. \\<not> 0 < emeasure lborel (cball (0::'a) 1) \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  emeasure lborel (\\<Union>n. cball (0::'a) (real n)) = 0\n  (\\<Union>n. cball (0::'a) (real n)) = UNIV", "show False"], ["proof (prove)\nusing this:\n  emeasure lborel (\\<Union>n. cball (0::'a) (real n)) = 0\n  (\\<Union>n. cball (0::'a) (real n)) = UNIV\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < emeasure lborel (cball (0::'a) 1)\n\ngoal (1 subgoal):\n 1. 0 < content (cball (0::'a) 1)", "moreover"], ["proof (state)\nthis:\n  0 < emeasure lborel (cball (0::'a) 1)\n\ngoal (1 subgoal):\n 1. 0 < content (cball (0::'a) 1)", "have \"emeasure lborel (cball (0::'a::euclidean_space) 1) < \\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure lborel (cball (0::'a) 1) < \\<infinity>", "by (rule emeasure_bounded_finite, auto)"], ["proof (state)\nthis:\n  emeasure lborel (cball (0::'a) 1) < \\<infinity>\n\ngoal (1 subgoal):\n 1. 0 < content (cball (0::'a) 1)", "ultimately"], ["proof (chain)\npicking this:\n  0 < emeasure lborel (cball (0::'a) 1)\n  emeasure lborel (cball (0::'a) 1) < \\<infinity>", "show \"measure lborel (cball (0::'a::euclidean_space) 1) > 0\""], ["proof (prove)\nusing this:\n  0 < emeasure lborel (cball (0::'a) 1)\n  emeasure lborel (cball (0::'a) 1) < \\<infinity>\n\ngoal (1 subgoal):\n 1. 0 < content (cball (0::'a) 1)", "by (metis borel_closed closed_cball ennreal_0 has_integral_iff_emeasure_lborel has_integral_measure_lborel less_irrefl order_refl zero_less_measure_iff)"], ["proof (state)\nthis:\n  0 < content (cball (0::'a) 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>infdist and closest point projection\\<close>"], ["", "text \\<open>The distance to a union of two sets is the minimum of the distance to the two sets.\\<close>"], ["", "lemma infdist_union_min [mono_intros]:\n  assumes \"A \\<noteq> {}\" \"B \\<noteq> {}\"\n  shows \"infdist x (A \\<union> B) = min (infdist x A) (infdist x B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infdist x (A \\<union> B) = min (infdist x A) (infdist x B)", "using assms"], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. infdist x (A \\<union> B) = min (infdist x A) (infdist x B)", "by (simp add: infdist_def cINF_union inf_real_def)"], ["", "text \\<open>The distance to a set is non-increasing with the set.\\<close>"], ["", "lemma infdist_mono [mono_intros]:\n  assumes \"A \\<subseteq> B\" \"A \\<noteq> {}\"\n  shows \"infdist x B \\<le> infdist x A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infdist x B \\<le> infdist x A", "by (simp add: assms infdist_eq_setdist setdist_subset_right)"], ["", "text \\<open>If a set is proper, then the infimum of the distances to this set is attained.\\<close>"], ["", "lemma infdist_proper_attained:\n  assumes \"proper C\" \"C \\<noteq> {}\"\n  shows \"\\<exists>c\\<in>C. infdist x C = dist x c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c\\<in>C. infdist x C = dist x c", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>c\\<in>C. infdist x C = dist x c", "obtain a where \"a \\<in> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a. a \\<in> C \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using assms"], ["proof (prove)\nusing this:\n  proper C\n  C \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>a. a \\<in> C \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  a \\<in> C\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<in>C. infdist x C = dist x c", "have *: \"dist x a \\<le> dist x z\" if \"dist a z \\<ge> 2 * dist a x\" for z"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x a \\<le> dist x z", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist x a \\<le> dist x z", "have \"2 * dist a x \\<le> dist a z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * dist a x \\<le> dist a z", "using that"], ["proof (prove)\nusing this:\n  2 * dist a x \\<le> dist a z\n\ngoal (1 subgoal):\n 1. 2 * dist a x \\<le> dist a z", "by simp"], ["proof (state)\nthis:\n  2 * dist a x \\<le> dist a z\n\ngoal (1 subgoal):\n 1. dist x a \\<le> dist x z", "also"], ["proof (state)\nthis:\n  2 * dist a x \\<le> dist a z\n\ngoal (1 subgoal):\n 1. dist x a \\<le> dist x z", "have \"... \\<le> dist a x + dist x z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist a z \\<le> dist a x + dist x z", "by (intro mono_intros)"], ["proof (state)\nthis:\n  dist a z \\<le> dist a x + dist x z\n\ngoal (1 subgoal):\n 1. dist x a \\<le> dist x z", "finally"], ["proof (chain)\npicking this:\n  2 * dist a x \\<le> dist a x + dist x z", "show ?thesis"], ["proof (prove)\nusing this:\n  2 * dist a x \\<le> dist a x + dist x z\n\ngoal (1 subgoal):\n 1. dist x a \\<le> dist x z", "by (simp add: dist_commute)"], ["proof (state)\nthis:\n  dist x a \\<le> dist x z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  2 * dist a x \\<le> dist a ?z \\<Longrightarrow> dist x a \\<le> dist x ?z\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<in>C. infdist x C = dist x c", "have \"\\<exists>c\\<in>C. \\<forall>d\\<in>C. dist x c \\<le> dist x d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c\\<in>C. \\<forall>d\\<in>C. dist x c \\<le> dist x d", "apply (rule continuous_attains_inf_proper[OF assms(1) \\<open>a \\<in> C\\<close>, of _ \"2 * dist a x\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. continuous_on C (dist x)\n 2. \\<And>z.\n       z \\<in> C - cball a (2 * dist a x) \\<Longrightarrow>\n       dist x a \\<le> dist x z", "using *"], ["proof (prove)\nusing this:\n  2 * dist a x \\<le> dist a ?z \\<Longrightarrow> dist x a \\<le> dist x ?z\n\ngoal (2 subgoals):\n 1. continuous_on C (dist x)\n 2. \\<And>z.\n       z \\<in> C - cball a (2 * dist a x) \\<Longrightarrow>\n       dist x a \\<le> dist x z", "by (auto intro: continuous_intros)"], ["proof (state)\nthis:\n  \\<exists>c\\<in>C. \\<forall>d\\<in>C. dist x c \\<le> dist x d\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<in>C. infdist x C = dist x c", "then"], ["proof (chain)\npicking this:\n  \\<exists>c\\<in>C. \\<forall>d\\<in>C. dist x c \\<le> dist x d", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>c\\<in>C. \\<forall>d\\<in>C. dist x c \\<le> dist x d\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<in>C. infdist x C = dist x c", "unfolding infdist_def"], ["proof (prove)\nusing this:\n  \\<exists>c\\<in>C. \\<forall>d\\<in>C. dist x c \\<le> dist x d\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<in>C. (if C = {} then 0 else Inf (dist x ` C)) = dist x c", "using \\<open>C \\<noteq> {}\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>c\\<in>C. \\<forall>d\\<in>C. dist x c \\<le> dist x d\n  C \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<in>C. (if C = {} then 0 else Inf (dist x ` C)) = dist x c", "by (metis antisym bdd_below_image_dist cINF_lower le_cINF_iff)"], ["proof (state)\nthis:\n  \\<exists>c\\<in>C. infdist x C = dist x c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infdist_almost_attained:\n  assumes \"infdist x X < a\" \"X \\<noteq> {}\"\n  shows \"\\<exists>y\\<in>X. dist x y < a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>X. dist x y < a", "using assms"], ["proof (prove)\nusing this:\n  infdist x X < a\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>X. dist x y < a", "using cInf_less_iff[of \"(dist x)`X\"]"], ["proof (prove)\nusing this:\n  infdist x X < a\n  X \\<noteq> {}\n  \\<lbrakk>dist x ` X \\<noteq> {}; bdd_below (dist x ` X)\\<rbrakk>\n  \\<Longrightarrow> (Inf (dist x ` X) < ?y) =\n                    (\\<exists>x\\<in>dist x ` X. x < ?y)\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>X. dist x y < a", "unfolding infdist_def"], ["proof (prove)\nusing this:\n  (if X = {} then 0 else Inf (dist x ` X)) < a\n  X \\<noteq> {}\n  \\<lbrakk>dist x ` X \\<noteq> {}; bdd_below (dist x ` X)\\<rbrakk>\n  \\<Longrightarrow> (Inf (dist x ` X) < ?y) =\n                    (\\<exists>x\\<in>dist x ` X. x < ?y)\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>X. dist x y < a", "by auto"], ["", "lemma infdist_triangle_abs [mono_intros]:\n  \"\\<bar>infdist x A - infdist y A\\<bar> \\<le> dist x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>infdist x A - infdist y A\\<bar> \\<le> dist x y", "by (metis (full_types) abs_diff_le_iff diff_le_eq dist_commute infdist_triangle)"], ["", "text \\<open>The next lemma is missing in the library, contrary to its cousin \\verb+continuous_infdist+.\\<close>"], ["", "text \\<open>The infimum of the distance to a singleton set is simply the distance to the unique\nmember of the set.\\<close>"], ["", "text \\<open>The closest point projection of $x$ on $A$. It is not unique, so we choose one point realizing the minimal\ndistance. And if there is no such point, then we use $x$, to make some statements true without any\nassumption.\\<close>"], ["", "definition proj_set::\"'a::metric_space \\<Rightarrow> 'a set \\<Rightarrow> 'a set\"\n  where \"proj_set x A = {y \\<in> A. dist x y = infdist x A}\""], ["", "definition distproj::\"'a::metric_space \\<Rightarrow> 'a set \\<Rightarrow> 'a\"\n  where \"distproj x A = (if proj_set x A \\<noteq> {} then SOME y. y \\<in> proj_set x A else x)\""], ["", "lemma proj_setD:\n  assumes \"y \\<in> proj_set x A\"\n  shows \"y \\<in> A\" \"dist x y = infdist x A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> A &&& dist x y = infdist x A", "using assms"], ["proof (prove)\nusing this:\n  y \\<in> proj_set x A\n\ngoal (1 subgoal):\n 1. y \\<in> A &&& dist x y = infdist x A", "unfolding proj_set_def"], ["proof (prove)\nusing this:\n  y \\<in> {y \\<in> A. dist x y = infdist x A}\n\ngoal (1 subgoal):\n 1. y \\<in> A &&& dist x y = infdist x A", "by auto"], ["", "lemma proj_setI:\n  assumes \"y \\<in> A\" \"dist x y \\<le> infdist x A\"\n  shows \"y \\<in> proj_set x A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> proj_set x A", "using assms infdist_le[OF \\<open>y \\<in> A\\<close>, of x]"], ["proof (prove)\nusing this:\n  y \\<in> A\n  dist x y \\<le> infdist x A\n  infdist x A \\<le> dist x y\n\ngoal (1 subgoal):\n 1. y \\<in> proj_set x A", "unfolding proj_set_def"], ["proof (prove)\nusing this:\n  y \\<in> A\n  dist x y \\<le> infdist x A\n  infdist x A \\<le> dist x y\n\ngoal (1 subgoal):\n 1. y \\<in> {y \\<in> A. dist x y = infdist x A}", "by auto"], ["", "lemma proj_setI':\n  assumes \"y \\<in> A\" \"\\<And>z. z \\<in> A \\<Longrightarrow> dist x y \\<le> dist x z\"\n  shows \"y \\<in> proj_set x A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> proj_set x A", "proof (rule proj_setI[OF \\<open>y \\<in> A\\<close>])"], ["proof (state)\ngoal (1 subgoal):\n 1. dist x y \\<le> infdist x A", "show \"dist x y \\<le> infdist x A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x y \\<le> infdist x A", "apply (subst infdist_notempty)"], ["proof (prove)\ngoal (2 subgoals):\n 1. A \\<noteq> {}\n 2. dist x y \\<le> Inf (dist x ` A)", "using assms"], ["proof (prove)\nusing this:\n  y \\<in> A\n  ?z \\<in> A \\<Longrightarrow> dist x y \\<le> dist x ?z\n\ngoal (2 subgoals):\n 1. A \\<noteq> {}\n 2. dist x y \\<le> Inf (dist x ` A)", "by (auto intro!: cInf_greatest)"], ["proof (state)\nthis:\n  dist x y \\<le> infdist x A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma distproj_in_proj_set:\n  assumes \"proj_set x A \\<noteq> {}\"\n  shows \"distproj x A \\<in> proj_set x A\"\n        \"distproj x A \\<in> A\"\n        \"dist x (distproj x A) = infdist x A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distproj x A \\<in> proj_set x A &&&\n    distproj x A \\<in> A &&& dist x (distproj x A) = infdist x A", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. distproj x A \\<in> proj_set x A\n 2. distproj x A \\<in> A\n 3. dist x (distproj x A) = infdist x A", "show \"distproj x A \\<in> proj_set x A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distproj x A \\<in> proj_set x A", "using assms"], ["proof (prove)\nusing this:\n  proj_set x A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. distproj x A \\<in> proj_set x A", "unfolding distproj_def"], ["proof (prove)\nusing this:\n  proj_set x A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (if proj_set x A \\<noteq> {} then SOME y. y \\<in> proj_set x A else x)\n    \\<in> proj_set x A", "using some_in_eq"], ["proof (prove)\nusing this:\n  proj_set x A \\<noteq> {}\n  ((SOME x. x \\<in> ?A) \\<in> ?A) = (?A \\<noteq> {})\n\ngoal (1 subgoal):\n 1. (if proj_set x A \\<noteq> {} then SOME y. y \\<in> proj_set x A else x)\n    \\<in> proj_set x A", "by auto"], ["proof (state)\nthis:\n  distproj x A \\<in> proj_set x A\n\ngoal (2 subgoals):\n 1. distproj x A \\<in> A\n 2. dist x (distproj x A) = infdist x A", "then"], ["proof (chain)\npicking this:\n  distproj x A \\<in> proj_set x A", "show \"distproj x A \\<in> A\" \"dist x (distproj x A) = infdist x A\""], ["proof (prove)\nusing this:\n  distproj x A \\<in> proj_set x A\n\ngoal (1 subgoal):\n 1. distproj x A \\<in> A &&& dist x (distproj x A) = infdist x A", "unfolding proj_set_def"], ["proof (prove)\nusing this:\n  distproj x A \\<in> {y \\<in> A. dist x y = infdist x A}\n\ngoal (1 subgoal):\n 1. distproj x A \\<in> A &&& dist x (distproj x A) = infdist x A", "by auto"], ["proof (state)\nthis:\n  distproj x A \\<in> A\n  dist x (distproj x A) = infdist x A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma proj_set_nonempty_of_proper:\n  assumes \"proper A\" \"A \\<noteq> {}\"\n  shows \"proj_set x A \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_set x A \\<noteq> {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. proj_set x A \\<noteq> {}", "have \"\\<exists>y. y \\<in> A \\<and> dist x y = infdist x A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y. y \\<in> A \\<and> dist x y = infdist x A", "using infdist_proper_attained[OF assms, of x]"], ["proof (prove)\nusing this:\n  \\<exists>c\\<in>A. infdist x A = dist x c\n\ngoal (1 subgoal):\n 1. \\<exists>y. y \\<in> A \\<and> dist x y = infdist x A", "by auto"], ["proof (state)\nthis:\n  \\<exists>y. y \\<in> A \\<and> dist x y = infdist x A\n\ngoal (1 subgoal):\n 1. proj_set x A \\<noteq> {}", "then"], ["proof (chain)\npicking this:\n  \\<exists>y. y \\<in> A \\<and> dist x y = infdist x A", "show \"proj_set x A \\<noteq> {}\""], ["proof (prove)\nusing this:\n  \\<exists>y. y \\<in> A \\<and> dist x y = infdist x A\n\ngoal (1 subgoal):\n 1. proj_set x A \\<noteq> {}", "unfolding proj_set_def"], ["proof (prove)\nusing this:\n  \\<exists>y. y \\<in> A \\<and> dist x y = infdist x A\n\ngoal (1 subgoal):\n 1. {y \\<in> A. dist x y = infdist x A} \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  proj_set x A \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma distproj_self [simp]:\n  assumes \"x \\<in> A\"\n  shows \"proj_set x A = {x}\"\n        \"distproj x A = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_set x A = {x} &&& distproj x A = x", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. proj_set x A = {x}\n 2. distproj x A = x", "show \"proj_set x A = {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj_set x A = {x}", "unfolding proj_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {y \\<in> A. dist x y = infdist x A} = {x}", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. {y \\<in> A. dist x y = infdist x A} = {x}", "by auto"], ["proof (state)\nthis:\n  proj_set x A = {x}\n\ngoal (1 subgoal):\n 1. distproj x A = x", "then"], ["proof (chain)\npicking this:\n  proj_set x A = {x}", "show \"distproj x A = x\""], ["proof (prove)\nusing this:\n  proj_set x A = {x}\n\ngoal (1 subgoal):\n 1. distproj x A = x", "unfolding distproj_def"], ["proof (prove)\nusing this:\n  proj_set x A = {x}\n\ngoal (1 subgoal):\n 1. (if proj_set x A \\<noteq> {} then SOME y. y \\<in> proj_set x A else x) =\n    x", "by auto"], ["proof (state)\nthis:\n  distproj x A = x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma distproj_closure [simp]:\n  assumes \"x \\<in> closure A\"\n  shows \"distproj x A = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distproj x A = x", "proof (cases \"proj_set x A \\<noteq> {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. proj_set x A \\<noteq> {} \\<Longrightarrow> distproj x A = x\n 2. \\<not> proj_set x A \\<noteq> {} \\<Longrightarrow> distproj x A = x", "case True"], ["proof (state)\nthis:\n  proj_set x A \\<noteq> {}\n\ngoal (2 subgoals):\n 1. proj_set x A \\<noteq> {} \\<Longrightarrow> distproj x A = x\n 2. \\<not> proj_set x A \\<noteq> {} \\<Longrightarrow> distproj x A = x", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. distproj x A = x", "using distproj_in_proj_set(3)[OF True] assms"], ["proof (prove)\nusing this:\n  dist x (distproj x A) = infdist x A\n  x \\<in> closure A\n\ngoal (1 subgoal):\n 1. distproj x A = x", "by (metis closure_empty dist_eq_0_iff distproj_self(2) in_closure_iff_infdist_zero)"], ["proof (state)\nthis:\n  distproj x A = x\n\ngoal (1 subgoal):\n 1. \\<not> proj_set x A \\<noteq> {} \\<Longrightarrow> distproj x A = x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> proj_set x A \\<noteq> {} \\<Longrightarrow> distproj x A = x", "case False"], ["proof (state)\nthis:\n  \\<not> proj_set x A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> proj_set x A \\<noteq> {} \\<Longrightarrow> distproj x A = x", "then"], ["proof (chain)\npicking this:\n  \\<not> proj_set x A \\<noteq> {}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> proj_set x A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. distproj x A = x", "unfolding distproj_def"], ["proof (prove)\nusing this:\n  \\<not> proj_set x A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (if proj_set x A \\<noteq> {} then SOME y. y \\<in> proj_set x A else x) =\n    x", "by auto"], ["proof (state)\nthis:\n  distproj x A = x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma distproj_le:\n  assumes \"y \\<in> A\"\n  shows \"dist x (distproj x A) \\<le> dist x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x (distproj x A) \\<le> dist x y", "proof (cases \"proj_set x A \\<noteq> {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. proj_set x A \\<noteq> {} \\<Longrightarrow>\n    dist x (distproj x A) \\<le> dist x y\n 2. \\<not> proj_set x A \\<noteq> {} \\<Longrightarrow>\n    dist x (distproj x A) \\<le> dist x y", "case True"], ["proof (state)\nthis:\n  proj_set x A \\<noteq> {}\n\ngoal (2 subgoals):\n 1. proj_set x A \\<noteq> {} \\<Longrightarrow>\n    dist x (distproj x A) \\<le> dist x y\n 2. \\<not> proj_set x A \\<noteq> {} \\<Longrightarrow>\n    dist x (distproj x A) \\<le> dist x y", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x (distproj x A) \\<le> dist x y", "using distproj_in_proj_set(3)[OF True] infdist_le[OF assms]"], ["proof (prove)\nusing this:\n  dist x (distproj x A) = infdist x A\n  infdist ?x A \\<le> dist ?x y\n\ngoal (1 subgoal):\n 1. dist x (distproj x A) \\<le> dist x y", "by auto"], ["proof (state)\nthis:\n  dist x (distproj x A) \\<le> dist x y\n\ngoal (1 subgoal):\n 1. \\<not> proj_set x A \\<noteq> {} \\<Longrightarrow>\n    dist x (distproj x A) \\<le> dist x y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> proj_set x A \\<noteq> {} \\<Longrightarrow>\n    dist x (distproj x A) \\<le> dist x y", "case False"], ["proof (state)\nthis:\n  \\<not> proj_set x A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> proj_set x A \\<noteq> {} \\<Longrightarrow>\n    dist x (distproj x A) \\<le> dist x y", "then"], ["proof (chain)\npicking this:\n  \\<not> proj_set x A \\<noteq> {}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> proj_set x A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. dist x (distproj x A) \\<le> dist x y", "unfolding distproj_def"], ["proof (prove)\nusing this:\n  \\<not> proj_set x A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. dist x\n     (if proj_set x A \\<noteq> {} then SOME y. y \\<in> proj_set x A else x)\n    \\<le> dist x y", "by auto"], ["proof (state)\nthis:\n  dist x (distproj x A) \\<le> dist x y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma proj_set_dist_le:\n  assumes \"y \\<in> A\" \"p \\<in> proj_set x A\"\n  shows \"dist x p \\<le> dist x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x p \\<le> dist x y", "using assms infdist_le"], ["proof (prove)\nusing this:\n  y \\<in> A\n  p \\<in> proj_set x A\n  ?a \\<in> ?A \\<Longrightarrow> infdist ?x ?A \\<le> dist ?x ?a\n\ngoal (1 subgoal):\n 1. dist x p \\<le> dist x y", "unfolding proj_set_def"], ["proof (prove)\nusing this:\n  y \\<in> A\n  p \\<in> {y \\<in> A. dist x y = infdist x A}\n  ?a \\<in> ?A \\<Longrightarrow> infdist ?x ?A \\<le> dist ?x ?a\n\ngoal (1 subgoal):\n 1. dist x p \\<le> dist x y", "by auto"], ["", "subsection \\<open>Material on ereal and ennreal\\<close>"], ["", "text \\<open>We add the simp rules that we needed to make all computations become more or less automatic.\\<close>"], ["", "lemma ereal_of_real_of_ereal_iff [simp]:\n  \"ereal(real_of_ereal x) = x \\<longleftrightarrow> x \\<noteq> \\<infinity> \\<and> x \\<noteq> - \\<infinity>\"\n  \"x = ereal(real_of_ereal x) \\<longleftrightarrow> x \\<noteq> \\<infinity> \\<and> x \\<noteq> - \\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ereal (real_of_ereal x) = x) =\n    (x \\<noteq> \\<infinity> \\<and> x \\<noteq> - \\<infinity>) &&&\n    (x = ereal (real_of_ereal x)) =\n    (x \\<noteq> \\<infinity> \\<and> x \\<noteq> - \\<infinity>)", "by (metis MInfty_neq_ereal(1) PInfty_neq_ereal(2) real_of_ereal.elims)+"], ["", "declare ereal_inverse_eq_0 [simp]"], ["", "declare ereal_0_gt_inverse [simp]"], ["", "declare ereal_inverse_le_0_iff [simp]"], ["", "declare ereal_divide_eq_0_iff [simp]"], ["", "declare ereal_mult_le_0_iff [simp]"], ["", "declare ereal_zero_le_0_iff [simp]"], ["", "declare ereal_mult_less_0_iff [simp]"], ["", "declare ereal_zero_less_0_iff [simp]"], ["", "declare ereal_uminus_eq_reorder [simp]"], ["", "declare ereal_minus_le_iff [simp]"], ["", "lemma ereal_inverse_noteq_minus_infinity [simp]:\n  \"1/(x::ereal) \\<noteq> -\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / x \\<noteq> - \\<infinity>", "by (simp add: divide_ereal_def)"], ["", "lemma ereal_inverse_positive_iff_nonneg_not_infinity [simp]:\n  \"0 < 1/(x::ereal) \\<longleftrightarrow> (x \\<ge> 0 \\<and> x \\<noteq> \\<infinity>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 < 1 / x) = (0 \\<le> x \\<and> x \\<noteq> \\<infinity>)", "by (cases x, auto simp add: one_ereal_def)"], ["", "lemma ereal_inverse_negative_iff_nonpos_not_infinity' [simp]:\n  \"0 > inverse (x::ereal) \\<longleftrightarrow> (x < 0 \\<and> x \\<noteq> -\\<infinity>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (inverse x < 0) = (x < 0 \\<and> x \\<noteq> - \\<infinity>)", "by (cases x, auto simp add: one_ereal_def)"], ["", "lemma ereal_divide_pos_iff [simp]:\n  \"0 < x/(y::ereal) \\<longleftrightarrow> (y \\<noteq> \\<infinity> \\<and> y \\<noteq> -\\<infinity>) \\<and> ((x > 0 \\<and> y > 0) \\<or> (x < 0 \\<and> y < 0) \\<or> (y = 0 \\<and> x > 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 < x / y) =\n    ((y \\<noteq> \\<infinity> \\<and> y \\<noteq> - \\<infinity>) \\<and>\n     (0 < x \\<and> 0 < y \\<or> x < 0 \\<and> y < 0 \\<or> y = 0 \\<and> 0 < x))", "unfolding divide_ereal_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 < x * inverse y) =\n    ((y \\<noteq> \\<infinity> \\<and> y \\<noteq> - \\<infinity>) \\<and>\n     (0 < x \\<and> 0 < y \\<or> x < 0 \\<and> y < 0 \\<or> y = 0 \\<and> 0 < x))", "by auto"], ["", "lemma ereal_divide_neg_iff [simp]:\n  \"0 > x/(y::ereal) \\<longleftrightarrow> (y \\<noteq> \\<infinity> \\<and> y \\<noteq> -\\<infinity>) \\<and> ((x > 0 \\<and> y < 0) \\<or> (x < 0 \\<and> y > 0) \\<or> (y = 0 \\<and> x < 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x / y < 0) =\n    ((y \\<noteq> \\<infinity> \\<and> y \\<noteq> - \\<infinity>) \\<and>\n     (0 < x \\<and> y < 0 \\<or> x < 0 \\<and> 0 < y \\<or> y = 0 \\<and> x < 0))", "unfolding divide_ereal_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x * inverse y < 0) =\n    ((y \\<noteq> \\<infinity> \\<and> y \\<noteq> - \\<infinity>) \\<and>\n     (0 < x \\<and> y < 0 \\<or> x < 0 \\<and> 0 < y \\<or> y = 0 \\<and> x < 0))", "by auto"], ["", "text \\<open>More additions to \\verb+mono_intros+.\\<close>"], ["", "lemma ereal_leq_imp_neg_leq [mono_intros]:\n  fixes x y::ereal\n  assumes \"x \\<le> y\"\n  shows \"-y \\<le> -x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - y \\<le> - x", "using assms"], ["proof (prove)\nusing this:\n  x \\<le> y\n\ngoal (1 subgoal):\n 1. - y \\<le> - x", "by auto"], ["", "lemma ereal_le_imp_neg_le [mono_intros]:\n  fixes x y::ereal\n  assumes \"x < y\"\n  shows \"-y < -x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - y < - x", "using assms"], ["proof (prove)\nusing this:\n  x < y\n\ngoal (1 subgoal):\n 1. - y < - x", "by auto"], ["", "declare ereal_mult_left_mono [mono_intros]"], ["", "declare ereal_mult_right_mono [mono_intros]"], ["", "declare ereal_mult_strict_right_mono [mono_intros]"], ["", "declare ereal_mult_strict_left_mono [mono_intros]"], ["", "text \\<open>Monotonicity of basic inclusions.\\<close>"], ["", "lemma ennreal_mono':\n  \"mono ennreal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mono ennreal", "by (simp add: ennreal_leI monoI)"], ["", "lemma enn2ereal_mono':\n  \"mono enn2ereal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mono enn2ereal", "by (simp add: less_eq_ennreal.rep_eq mono_def)"], ["", "lemma e2ennreal_mono':\n  \"mono e2ennreal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mono e2ennreal", "by (simp add: e2ennreal_mono mono_def)"], ["", "lemma enn2ereal_mono [mono_intros]:\n  assumes \"x \\<le> y\"\n  shows \"enn2ereal x \\<le> enn2ereal y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enn2ereal x \\<le> enn2ereal y", "using assms less_eq_ennreal.rep_eq"], ["proof (prove)\nusing this:\n  x \\<le> y\n  (?x \\<le> ?xa) = (enn2ereal ?x \\<le> enn2ereal ?xa)\n\ngoal (1 subgoal):\n 1. enn2ereal x \\<le> enn2ereal y", "by auto"], ["", "lemma ereal_mono:\n  \"mono ereal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mono ereal", "unfolding mono_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y. x \\<le> y \\<longrightarrow> ereal x \\<le> ereal y", "by auto"], ["", "lemma ereal_strict_mono:\n  \"strict_mono ereal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_mono ereal", "unfolding strict_mono_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y. x < y \\<longrightarrow> ereal x < ereal y", "by auto"], ["", "lemma ereal_mono2 [mono_intros]:\n  assumes \"x \\<le> y\"\n  shows \"ereal x \\<le> ereal y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ereal x \\<le> ereal y", "by (simp add: assms)"], ["", "lemma ereal_strict_mono2 [mono_intros]:\n  assumes \"x < y\"\n  shows \"ereal x < ereal y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ereal x < ereal y", "using assms"], ["proof (prove)\nusing this:\n  x < y\n\ngoal (1 subgoal):\n 1. ereal x < ereal y", "by auto"], ["", "lemma enn2ereal_a_minus_b_plus_b [mono_intros]:\n  \"enn2ereal a \\<le> enn2ereal (a - b) + enn2ereal b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enn2ereal a \\<le> enn2ereal (a - b) + enn2ereal b", "by (metis diff_add_self_ennreal less_eq_ennreal.rep_eq linear plus_ennreal.rep_eq)"], ["", "text \\<open>The next lemma follows from the same assertion in ereals.\\<close>"], ["", "lemma enn2ereal_strict_mono [mono_intros]:\n  assumes \"x < y\"\n  shows \"enn2ereal x < enn2ereal y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enn2ereal x < enn2ereal y", "using assms less_ennreal.rep_eq"], ["proof (prove)\nusing this:\n  x < y\n  (?x < ?xa) = (enn2ereal ?x < enn2ereal ?xa)\n\ngoal (1 subgoal):\n 1. enn2ereal x < enn2ereal y", "by auto"], ["", "declare ennreal_mult_strict_left_mono [mono_intros]"], ["", "declare ennreal_mult_strict_right_mono [mono_intros]"], ["", "lemma ennreal_ge_0 [mono_intros]:\n  assumes \"0 < x\"\n  shows \"0 < ennreal x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < ennreal x", "by (simp add: assms)"], ["", "text \\<open>The next lemma is true and useful in ereal. Note that variants such as $a + b \\leq c + d$\nimplies $a-d \\leq c -b$ are not true -- take $a = c = \\infty$ and $b = d = 0$...\\<close>"], ["", "lemma ereal_minus_le_minus_plus [mono_intros]:\n  fixes a b c::ereal\n  assumes \"a \\<le> b + c\"\n  shows \"-b \\<le> -a + c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - b \\<le> - a + c", "using assms"], ["proof (prove)\nusing this:\n  a \\<le> b + c\n\ngoal (1 subgoal):\n 1. - b \\<le> - a + c", "apply (cases a, cases b, cases c, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>ereal r \\<le> - \\<infinity> + c; a = ereal r;\n        b = - \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> c = \\<infinity>", "using ereal_infty_less_eq2(2) ereal_plus_1(4)"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<le> ?b; ?b = - \\<infinity>\\<rbrakk>\n  \\<Longrightarrow> ?a = - \\<infinity>\n  - \\<infinity> + 1 = - \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       \\<lbrakk>ereal r \\<le> - \\<infinity> + c; a = ereal r;\n        b = - \\<infinity>\\<rbrakk>\n       \\<Longrightarrow> c = \\<infinity>", "by fastforce"], ["", "lemma tendsto_ennreal_0 [tendsto_intros]:\n  assumes \"(u \\<longlongrightarrow> 0) F\"\n  shows \"((\\<lambda>n. ennreal(u n)) \\<longlongrightarrow> 0) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>n. ennreal (u n)) \\<longlongrightarrow> 0) F", "unfolding ennreal_0[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>n. ennreal (u n)) \\<longlongrightarrow> ennreal 0) F", "by (intro tendsto_intros assms)"], ["", "lemma tendsto_ennreal_1 [tendsto_intros]:\n  assumes \"(u \\<longlongrightarrow> 1) F\"\n  shows \"((\\<lambda>n. ennreal(u n)) \\<longlongrightarrow> 1) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>n. ennreal (u n)) \\<longlongrightarrow> 1) F", "unfolding ennreal_1[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>n. ennreal (u n)) \\<longlongrightarrow> ennreal 1) F", "by (intro tendsto_intros assms)"], ["", "subsection \\<open>Miscellaneous\\<close>"], ["", "lemma lim_ceiling_over_n [tendsto_intros]:\n  assumes \"(\\<lambda>n. u n/n) \\<longlonglongrightarrow> l\"\n  shows \"(\\<lambda>n. ceiling(u n)/n) \\<longlonglongrightarrow> l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. real_of_int \\<lceil>u n\\<rceil> / real n)\n    \\<longlonglongrightarrow> l", "proof (rule tendsto_sandwich[of \"\\<lambda>n. u n/n\" _ _ \"\\<lambda>n. u n/n + 1/n\"])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       u n / real n \\<le> real_of_int \\<lceil>u n\\<rceil> / real n\n 2. \\<forall>\\<^sub>F n in sequentially.\n       real_of_int \\<lceil>u n\\<rceil> / real n\n       \\<le> u n / real n + 1 / real n\n 3. (\\<lambda>n. u n / real n) \\<longlonglongrightarrow> l\n 4. (\\<lambda>n. u n / real n + 1 / real n) \\<longlonglongrightarrow> l", "show \"\\<forall>\\<^sub>F n in sequentially. u n / real n \\<le> real_of_int \\<lceil>u n\\<rceil> / real n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       u n / real n \\<le> real_of_int \\<lceil>u n\\<rceil> / real n", "unfolding eventually_sequentially"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          u n / real n \\<le> real_of_int \\<lceil>u n\\<rceil> / real n", "by (rule exI[of _ 1], auto simp add: divide_simps)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     u n / real n \\<le> real_of_int \\<lceil>u n\\<rceil> / real n\n\ngoal (3 subgoals):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       real_of_int \\<lceil>u n\\<rceil> / real n\n       \\<le> u n / real n + 1 / real n\n 2. (\\<lambda>n. u n / real n) \\<longlonglongrightarrow> l\n 3. (\\<lambda>n. u n / real n + 1 / real n) \\<longlonglongrightarrow> l", "show \"\\<forall>\\<^sub>F n in sequentially. real_of_int \\<lceil>u n\\<rceil> / real n \\<le> u n / real n + 1 / real n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       real_of_int \\<lceil>u n\\<rceil> / real n\n       \\<le> u n / real n + 1 / real n", "unfolding eventually_sequentially"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>N.\n       \\<forall>n\\<ge>N.\n          real_of_int \\<lceil>u n\\<rceil> / real n\n          \\<le> u n / real n + 1 / real n", "by (rule exI[of _ 1], auto simp add: divide_simps)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in sequentially.\n     real_of_int \\<lceil>u n\\<rceil> / real n\n     \\<le> u n / real n + 1 / real n\n\ngoal (2 subgoals):\n 1. (\\<lambda>n. u n / real n) \\<longlonglongrightarrow> l\n 2. (\\<lambda>n. u n / real n + 1 / real n) \\<longlonglongrightarrow> l", "have \"(\\<lambda>n. u n / real n + 1 / real n) \\<longlonglongrightarrow> l + 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. u n / real n + 1 / real n) \\<longlonglongrightarrow> l + 0", "by (intro tendsto_intros assms)"], ["proof (state)\nthis:\n  (\\<lambda>n. u n / real n + 1 / real n) \\<longlonglongrightarrow> l + 0\n\ngoal (2 subgoals):\n 1. (\\<lambda>n. u n / real n) \\<longlonglongrightarrow> l\n 2. (\\<lambda>n. u n / real n + 1 / real n) \\<longlonglongrightarrow> l", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n. u n / real n + 1 / real n) \\<longlonglongrightarrow> l + 0", "show \"(\\<lambda>n. u n / real n + 1 / real n) \\<longlonglongrightarrow> l\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. u n / real n + 1 / real n) \\<longlonglongrightarrow> l + 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. u n / real n + 1 / real n) \\<longlonglongrightarrow> l", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n. u n / real n + 1 / real n) \\<longlonglongrightarrow> l\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. u n / real n) \\<longlonglongrightarrow> l", "qed (simp add: assms)"], ["", "subsubsection \\<open>Liminfs and Limsups\\<close>"], ["", "text \\<open>More facts on liminfs and limsups\\<close>"], ["", "lemma Limsup_obtain':\n  fixes u::\"'a \\<Rightarrow> 'b::complete_linorder\"\n  assumes \"Limsup F u > c\" \"eventually P F\"\n  shows \"\\<exists>n. P n \\<and> u n > c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n. P n \\<and> c < u n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>n. P n \\<and> c < u n", "have *: \"(INF P\\<in>{P. eventually P F}. SUP x\\<in>{x. P x}. u x) > c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c < (INF P\\<in>{P. eventually P F}. Sup (u ` {x. P x}))", "using assms"], ["proof (prove)\nusing this:\n  c < Limsup F u\n  eventually P F\n\ngoal (1 subgoal):\n 1. c < (INF P\\<in>{P. eventually P F}. Sup (u ` {x. P x}))", "by (simp add: Limsup_def)"], ["proof (state)\nthis:\n  c < (INF P\\<in>{P. eventually P F}. Sup (u ` {x. P x}))\n\ngoal (1 subgoal):\n 1. \\<exists>n. P n \\<and> c < u n", "have **: \"c < (SUP x\\<in>{x. P x}. u x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c < Sup (u ` {x. P x})", "using less_INF_D[OF *, of P] assms"], ["proof (prove)\nusing this:\n  P \\<in> {P. eventually P F} \\<Longrightarrow> c < Sup (u ` {x. P x})\n  c < Limsup F u\n  eventually P F\n\ngoal (1 subgoal):\n 1. c < Sup (u ` {x. P x})", "by auto"], ["proof (state)\nthis:\n  c < Sup (u ` {x. P x})\n\ngoal (1 subgoal):\n 1. \\<exists>n. P n \\<and> c < u n", "then"], ["proof (chain)\npicking this:\n  c < Sup (u ` {x. P x})", "show ?thesis"], ["proof (prove)\nusing this:\n  c < Sup (u ` {x. P x})\n\ngoal (1 subgoal):\n 1. \\<exists>n. P n \\<and> c < u n", "by (simp add: less_SUP_iff)"], ["proof (state)\nthis:\n  \\<exists>n. P n \\<and> c < u n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma limsup_obtain:\n  fixes u::\"nat \\<Rightarrow> 'a :: complete_linorder\"\n  assumes \"limsup u > c\"\n  shows \"\\<exists>n \\<ge> N. u n > c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n\\<ge>N. c < u n", "using Limsup_obtain'[OF assms, of \"\\<lambda>n. n \\<ge> N\"]"], ["proof (prove)\nusing this:\n  eventually ((\\<le>) N) sequentially \\<Longrightarrow>\n  \\<exists>n\\<ge>N. c < u n\n\ngoal (1 subgoal):\n 1. \\<exists>n\\<ge>N. c < u n", "unfolding eventually_sequentially"], ["proof (prove)\nusing this:\n  \\<exists>Na. \\<forall>n\\<ge>Na. N \\<le> n \\<Longrightarrow>\n  \\<exists>n\\<ge>N. c < u n\n\ngoal (1 subgoal):\n 1. \\<exists>n\\<ge>N. c < u n", "by auto"], ["", "lemma Liminf_obtain':\n  fixes u::\"'a \\<Rightarrow> 'b::complete_linorder\"\n  assumes \"Liminf F u < c\" \"eventually P F\"\n  shows \"\\<exists>n. P n \\<and> u n < c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n. P n \\<and> u n < c", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>n. P n \\<and> u n < c", "have *: \"(SUP P\\<in>{P. eventually P F}. INF x\\<in>{x. P x}. u x) < c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (SUP P\\<in>{P. eventually P F}. Inf (u ` {x. P x})) < c", "using assms"], ["proof (prove)\nusing this:\n  Liminf F u < c\n  eventually P F\n\ngoal (1 subgoal):\n 1. (SUP P\\<in>{P. eventually P F}. Inf (u ` {x. P x})) < c", "by (simp add: Liminf_def)"], ["proof (state)\nthis:\n  (SUP P\\<in>{P. eventually P F}. Inf (u ` {x. P x})) < c\n\ngoal (1 subgoal):\n 1. \\<exists>n. P n \\<and> u n < c", "have **: \"(INF x\\<in>{x. P x}. u x) < c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf (u ` {x. P x}) < c", "using SUP_lessD[OF *, of P] assms"], ["proof (prove)\nusing this:\n  P \\<in> {P. eventually P F} \\<Longrightarrow> Inf (u ` {x. P x}) < c\n  Liminf F u < c\n  eventually P F\n\ngoal (1 subgoal):\n 1. Inf (u ` {x. P x}) < c", "by auto"], ["proof (state)\nthis:\n  Inf (u ` {x. P x}) < c\n\ngoal (1 subgoal):\n 1. \\<exists>n. P n \\<and> u n < c", "then"], ["proof (chain)\npicking this:\n  Inf (u ` {x. P x}) < c", "show ?thesis"], ["proof (prove)\nusing this:\n  Inf (u ` {x. P x}) < c\n\ngoal (1 subgoal):\n 1. \\<exists>n. P n \\<and> u n < c", "by (simp add: INF_less_iff)"], ["proof (state)\nthis:\n  \\<exists>n. P n \\<and> u n < c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma liminf_obtain:\n  fixes u::\"nat \\<Rightarrow> 'a :: complete_linorder\"\n  assumes \"liminf u < c\"\n  shows \"\\<exists>n \\<ge> N. u n < c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n\\<ge>N. u n < c", "using Liminf_obtain'[OF assms, of \"\\<lambda>n. n \\<ge> N\"]"], ["proof (prove)\nusing this:\n  eventually ((\\<le>) N) sequentially \\<Longrightarrow>\n  \\<exists>n\\<ge>N. u n < c\n\ngoal (1 subgoal):\n 1. \\<exists>n\\<ge>N. u n < c", "unfolding eventually_sequentially"], ["proof (prove)\nusing this:\n  \\<exists>Na. \\<forall>n\\<ge>Na. N \\<le> n \\<Longrightarrow>\n  \\<exists>n\\<ge>N. u n < c\n\ngoal (1 subgoal):\n 1. \\<exists>n\\<ge>N. u n < c", "by auto"], ["", "text \\<open>The Liminf of a minimum is the minimum of the Liminfs.\\<close>"], ["", "lemma Liminf_min_eq_min_Liminf:\n  fixes u v::\"nat \\<Rightarrow> 'a::complete_linorder\"\n  shows \"Liminf F (\\<lambda>n. min (u n) (v n)) = min (Liminf F u) (Liminf F v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Liminf F (\\<lambda>n. min (u n) (v n)) = min (Liminf F u) (Liminf F v)", "proof (rule order_antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. Liminf F (\\<lambda>n. min (u n) (v n))\n    \\<le> min (Liminf F u) (Liminf F v)\n 2. min (Liminf F u) (Liminf F v)\n    \\<le> Liminf F (\\<lambda>n. min (u n) (v n))", "show \"Liminf F (\\<lambda>n. min (u n) (v n)) \\<le> min (Liminf F u) (Liminf F v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Liminf F (\\<lambda>n. min (u n) (v n))\n    \\<le> min (Liminf F u) (Liminf F v)", "by (auto simp add: Liminf_mono)"], ["proof (state)\nthis:\n  Liminf F (\\<lambda>n. min (u n) (v n)) \\<le> min (Liminf F u) (Liminf F v)\n\ngoal (1 subgoal):\n 1. min (Liminf F u) (Liminf F v)\n    \\<le> Liminf F (\\<lambda>n. min (u n) (v n))", "have \"Liminf F (\\<lambda>n. min (u n) (v n)) > w\" if H: \"min (Liminf F u) (Liminf F v) > w\" for w"], ["proof (prove)\ngoal (1 subgoal):\n 1. w < Liminf F (\\<lambda>n. min (u n) (v n))", "proof (cases \"{w<..<min (Liminf F u) (Liminf F v)} = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. {w<..<min (Liminf F u) (Liminf F v)} = {} \\<Longrightarrow>\n    w < Liminf F (\\<lambda>n. min (u n) (v n))\n 2. {w<..<min (Liminf F u) (Liminf F v)} \\<noteq> {} \\<Longrightarrow>\n    w < Liminf F (\\<lambda>n. min (u n) (v n))", "case True"], ["proof (state)\nthis:\n  {w<..<min (Liminf F u) (Liminf F v)} = {}\n\ngoal (2 subgoals):\n 1. {w<..<min (Liminf F u) (Liminf F v)} = {} \\<Longrightarrow>\n    w < Liminf F (\\<lambda>n. min (u n) (v n))\n 2. {w<..<min (Liminf F u) (Liminf F v)} \\<noteq> {} \\<Longrightarrow>\n    w < Liminf F (\\<lambda>n. min (u n) (v n))", "have \"eventually (\\<lambda>n. u n > w) F\" \"eventually (\\<lambda>n. v n > w) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in F. w < u n &&& \\<forall>\\<^sub>F n in F. w < v n", "using H le_Liminf_iff"], ["proof (prove)\nusing this:\n  w < min (Liminf F u) (Liminf F v)\n  (?C \\<le> Liminf ?F ?X) =\n  (\\<forall>y<?C. \\<forall>\\<^sub>F x in ?F. y < ?X x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in F. w < u n &&& \\<forall>\\<^sub>F n in F. w < v n", "by fastforce+"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in F. w < u n\n  \\<forall>\\<^sub>F n in F. w < v n\n\ngoal (2 subgoals):\n 1. {w<..<min (Liminf F u) (Liminf F v)} = {} \\<Longrightarrow>\n    w < Liminf F (\\<lambda>n. min (u n) (v n))\n 2. {w<..<min (Liminf F u) (Liminf F v)} \\<noteq> {} \\<Longrightarrow>\n    w < Liminf F (\\<lambda>n. min (u n) (v n))", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F n in F. w < u n\n  \\<forall>\\<^sub>F n in F. w < v n", "have \"eventually (\\<lambda>n. min (u n) (v n) > w) F\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in F. w < u n\n  \\<forall>\\<^sub>F n in F. w < v n\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in F. w < min (u n) (v n)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>\\<^sub>F n in F. w < u n;\n     \\<forall>\\<^sub>F n in F. w < v n\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F n in F. w < u n \\<and> w < v n", "using eventually_elim2"], ["proof (prove)\nusing this:\n  \\<lbrakk>eventually ?P ?F; eventually ?Q ?F;\n   \\<And>i. \\<lbrakk>?P i; ?Q i\\<rbrakk> \\<Longrightarrow> ?R i\\<rbrakk>\n  \\<Longrightarrow> eventually ?R ?F\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>\\<^sub>F n in F. w < u n;\n     \\<forall>\\<^sub>F n in F. w < v n\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F n in F. w < u n \\<and> w < v n", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in F. w < min (u n) (v n)\n\ngoal (2 subgoals):\n 1. {w<..<min (Liminf F u) (Liminf F v)} = {} \\<Longrightarrow>\n    w < Liminf F (\\<lambda>n. min (u n) (v n))\n 2. {w<..<min (Liminf F u) (Liminf F v)} \\<noteq> {} \\<Longrightarrow>\n    w < Liminf F (\\<lambda>n. min (u n) (v n))", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in F. w < min (u n) (v n)\n\ngoal (2 subgoals):\n 1. {w<..<min (Liminf F u) (Liminf F v)} = {} \\<Longrightarrow>\n    w < Liminf F (\\<lambda>n. min (u n) (v n))\n 2. {w<..<min (Liminf F u) (Liminf F v)} \\<noteq> {} \\<Longrightarrow>\n    w < Liminf F (\\<lambda>n. min (u n) (v n))", "have \"z > w \\<Longrightarrow> z \\<ge> min (Liminf F u) (Liminf F v)\" for z"], ["proof (prove)\ngoal (1 subgoal):\n 1. w < z \\<Longrightarrow> min (Liminf F u) (Liminf F v) \\<le> z", "using H True not_le_imp_less"], ["proof (prove)\nusing this:\n  w < min (Liminf F u) (Liminf F v)\n  {w<..<min (Liminf F u) (Liminf F v)} = {}\n  \\<not> ?y \\<le> ?x \\<Longrightarrow> ?x < ?y\n\ngoal (1 subgoal):\n 1. w < z \\<Longrightarrow> min (Liminf F u) (Liminf F v) \\<le> z", "by fastforce"], ["proof (state)\nthis:\n  w < ?z \\<Longrightarrow> min (Liminf F u) (Liminf F v) \\<le> ?z\n\ngoal (2 subgoals):\n 1. {w<..<min (Liminf F u) (Liminf F v)} = {} \\<Longrightarrow>\n    w < Liminf F (\\<lambda>n. min (u n) (v n))\n 2. {w<..<min (Liminf F u) (Liminf F v)} \\<noteq> {} \\<Longrightarrow>\n    w < Liminf F (\\<lambda>n. min (u n) (v n))", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F n in F. w < min (u n) (v n)\n  w < ?z \\<Longrightarrow> min (Liminf F u) (Liminf F v) \\<le> ?z", "have \"eventually (\\<lambda>n. min (u n) (v n) \\<ge> min (Liminf F u) (Liminf F v)) F\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in F. w < min (u n) (v n)\n  w < ?z \\<Longrightarrow> min (Liminf F u) (Liminf F v) \\<le> ?z\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in F.\n       min (Liminf F u) (Liminf F v) \\<le> min (u n) (v n)", "by (simp add: eventually_mono)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in F.\n     min (Liminf F u) (Liminf F v) \\<le> min (u n) (v n)\n\ngoal (2 subgoals):\n 1. {w<..<min (Liminf F u) (Liminf F v)} = {} \\<Longrightarrow>\n    w < Liminf F (\\<lambda>n. min (u n) (v n))\n 2. {w<..<min (Liminf F u) (Liminf F v)} \\<noteq> {} \\<Longrightarrow>\n    w < Liminf F (\\<lambda>n. min (u n) (v n))", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F n in F.\n     min (Liminf F u) (Liminf F v) \\<le> min (u n) (v n)", "have \"min (Liminf F u) (Liminf F v) \\<le> Liminf F (\\<lambda>n. min (u n) (v n))\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in F.\n     min (Liminf F u) (Liminf F v) \\<le> min (u n) (v n)\n\ngoal (1 subgoal):\n 1. min (Liminf F u) (Liminf F v)\n    \\<le> Liminf F (\\<lambda>n. min (u n) (v n))", "by (metis Liminf_bounded)"], ["proof (state)\nthis:\n  min (Liminf F u) (Liminf F v) \\<le> Liminf F (\\<lambda>n. min (u n) (v n))\n\ngoal (2 subgoals):\n 1. {w<..<min (Liminf F u) (Liminf F v)} = {} \\<Longrightarrow>\n    w < Liminf F (\\<lambda>n. min (u n) (v n))\n 2. {w<..<min (Liminf F u) (Liminf F v)} \\<noteq> {} \\<Longrightarrow>\n    w < Liminf F (\\<lambda>n. min (u n) (v n))", "then"], ["proof (chain)\npicking this:\n  min (Liminf F u) (Liminf F v) \\<le> Liminf F (\\<lambda>n. min (u n) (v n))", "show ?thesis"], ["proof (prove)\nusing this:\n  min (Liminf F u) (Liminf F v) \\<le> Liminf F (\\<lambda>n. min (u n) (v n))\n\ngoal (1 subgoal):\n 1. w < Liminf F (\\<lambda>n. min (u n) (v n))", "using H less_le_trans"], ["proof (prove)\nusing this:\n  min (Liminf F u) (Liminf F v) \\<le> Liminf F (\\<lambda>n. min (u n) (v n))\n  w < min (Liminf F u) (Liminf F v)\n  \\<lbrakk>?x < ?y; ?y \\<le> ?z\\<rbrakk> \\<Longrightarrow> ?x < ?z\n\ngoal (1 subgoal):\n 1. w < Liminf F (\\<lambda>n. min (u n) (v n))", "by blast"], ["proof (state)\nthis:\n  w < Liminf F (\\<lambda>n. min (u n) (v n))\n\ngoal (1 subgoal):\n 1. {w<..<min (Liminf F u) (Liminf F v)} \\<noteq> {} \\<Longrightarrow>\n    w < Liminf F (\\<lambda>n. min (u n) (v n))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {w<..<min (Liminf F u) (Liminf F v)} \\<noteq> {} \\<Longrightarrow>\n    w < Liminf F (\\<lambda>n. min (u n) (v n))", "case False"], ["proof (state)\nthis:\n  {w<..<min (Liminf F u) (Liminf F v)} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. {w<..<min (Liminf F u) (Liminf F v)} \\<noteq> {} \\<Longrightarrow>\n    w < Liminf F (\\<lambda>n. min (u n) (v n))", "then"], ["proof (chain)\npicking this:\n  {w<..<min (Liminf F u) (Liminf F v)} \\<noteq> {}", "obtain z where \"z \\<in> {w<..<min (Liminf F u) (Liminf F v)}\""], ["proof (prove)\nusing this:\n  {w<..<min (Liminf F u) (Liminf F v)} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        z \\<in> {w<..<min (Liminf F u) (Liminf F v)} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  z \\<in> {w<..<min (Liminf F u) (Liminf F v)}\n\ngoal (1 subgoal):\n 1. {w<..<min (Liminf F u) (Liminf F v)} \\<noteq> {} \\<Longrightarrow>\n    w < Liminf F (\\<lambda>n. min (u n) (v n))", "then"], ["proof (chain)\npicking this:\n  z \\<in> {w<..<min (Liminf F u) (Liminf F v)}", "have H: \"w < z\" \"z < min (Liminf F u) (Liminf F v)\""], ["proof (prove)\nusing this:\n  z \\<in> {w<..<min (Liminf F u) (Liminf F v)}\n\ngoal (1 subgoal):\n 1. w < z &&& z < min (Liminf F u) (Liminf F v)", "by auto"], ["proof (state)\nthis:\n  w < z\n  z < min (Liminf F u) (Liminf F v)\n\ngoal (1 subgoal):\n 1. {w<..<min (Liminf F u) (Liminf F v)} \\<noteq> {} \\<Longrightarrow>\n    w < Liminf F (\\<lambda>n. min (u n) (v n))", "then"], ["proof (chain)\npicking this:\n  w < z\n  z < min (Liminf F u) (Liminf F v)", "have \"eventually (\\<lambda>n. u n > z) F\" \"eventually (\\<lambda>n. v n > z) F\""], ["proof (prove)\nusing this:\n  w < z\n  z < min (Liminf F u) (Liminf F v)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in F. z < u n &&& \\<forall>\\<^sub>F n in F. z < v n", "using le_Liminf_iff"], ["proof (prove)\nusing this:\n  w < z\n  z < min (Liminf F u) (Liminf F v)\n  (?C \\<le> Liminf ?F ?X) =\n  (\\<forall>y<?C. \\<forall>\\<^sub>F x in ?F. y < ?X x)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in F. z < u n &&& \\<forall>\\<^sub>F n in F. z < v n", "by fastforce+"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in F. z < u n\n  \\<forall>\\<^sub>F n in F. z < v n\n\ngoal (1 subgoal):\n 1. {w<..<min (Liminf F u) (Liminf F v)} \\<noteq> {} \\<Longrightarrow>\n    w < Liminf F (\\<lambda>n. min (u n) (v n))", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F n in F. z < u n\n  \\<forall>\\<^sub>F n in F. z < v n", "have \"eventually (\\<lambda>n. min (u n) (v n) > z) F\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in F. z < u n\n  \\<forall>\\<^sub>F n in F. z < v n\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in F. z < min (u n) (v n)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>\\<^sub>F n in F. z < u n;\n     \\<forall>\\<^sub>F n in F. z < v n\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F n in F. z < u n \\<and> z < v n", "using eventually_elim2"], ["proof (prove)\nusing this:\n  \\<lbrakk>eventually ?P ?F; eventually ?Q ?F;\n   \\<And>i. \\<lbrakk>?P i; ?Q i\\<rbrakk> \\<Longrightarrow> ?R i\\<rbrakk>\n  \\<Longrightarrow> eventually ?R ?F\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>\\<^sub>F n in F. z < u n;\n     \\<forall>\\<^sub>F n in F. z < v n\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<^sub>F n in F. z < u n \\<and> z < v n", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in F. z < min (u n) (v n)\n\ngoal (1 subgoal):\n 1. {w<..<min (Liminf F u) (Liminf F v)} \\<noteq> {} \\<Longrightarrow>\n    w < Liminf F (\\<lambda>n. min (u n) (v n))", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F n in F. z < min (u n) (v n)", "have \"Liminf F (\\<lambda>n. min (u n) (v n)) \\<ge> z\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in F. z < min (u n) (v n)\n\ngoal (1 subgoal):\n 1. z \\<le> Liminf F (\\<lambda>n. min (u n) (v n))", "by (simp add: Liminf_bounded eventually_mono less_imp_le)"], ["proof (state)\nthis:\n  z \\<le> Liminf F (\\<lambda>n. min (u n) (v n))\n\ngoal (1 subgoal):\n 1. {w<..<min (Liminf F u) (Liminf F v)} \\<noteq> {} \\<Longrightarrow>\n    w < Liminf F (\\<lambda>n. min (u n) (v n))", "then"], ["proof (chain)\npicking this:\n  z \\<le> Liminf F (\\<lambda>n. min (u n) (v n))", "show ?thesis"], ["proof (prove)\nusing this:\n  z \\<le> Liminf F (\\<lambda>n. min (u n) (v n))\n\ngoal (1 subgoal):\n 1. w < Liminf F (\\<lambda>n. min (u n) (v n))", "using H(1)"], ["proof (prove)\nusing this:\n  z \\<le> Liminf F (\\<lambda>n. min (u n) (v n))\n  w < z\n\ngoal (1 subgoal):\n 1. w < Liminf F (\\<lambda>n. min (u n) (v n))", "by auto"], ["proof (state)\nthis:\n  w < Liminf F (\\<lambda>n. min (u n) (v n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?w < min (Liminf F u) (Liminf F v) \\<Longrightarrow>\n  ?w < Liminf F (\\<lambda>n. min (u n) (v n))\n\ngoal (1 subgoal):\n 1. min (Liminf F u) (Liminf F v)\n    \\<le> Liminf F (\\<lambda>n. min (u n) (v n))", "then"], ["proof (chain)\npicking this:\n  ?w < min (Liminf F u) (Liminf F v) \\<Longrightarrow>\n  ?w < Liminf F (\\<lambda>n. min (u n) (v n))", "show \"min (Liminf F u) (Liminf F v) \\<le> Liminf F (\\<lambda>n. min (u n) (v n))\""], ["proof (prove)\nusing this:\n  ?w < min (Liminf F u) (Liminf F v) \\<Longrightarrow>\n  ?w < Liminf F (\\<lambda>n. min (u n) (v n))\n\ngoal (1 subgoal):\n 1. min (Liminf F u) (Liminf F v)\n    \\<le> Liminf F (\\<lambda>n. min (u n) (v n))", "using not_le_imp_less"], ["proof (prove)\nusing this:\n  ?w < min (Liminf F u) (Liminf F v) \\<Longrightarrow>\n  ?w < Liminf F (\\<lambda>n. min (u n) (v n))\n  \\<not> ?y \\<le> ?x \\<Longrightarrow> ?x < ?y\n\ngoal (1 subgoal):\n 1. min (Liminf F u) (Liminf F v)\n    \\<le> Liminf F (\\<lambda>n. min (u n) (v n))", "by blast"], ["proof (state)\nthis:\n  min (Liminf F u) (Liminf F v) \\<le> Liminf F (\\<lambda>n. min (u n) (v n))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The Limsup of a maximum is the maximum of the Limsups.\\<close>"], ["", "lemma Limsup_max_eq_max_Limsup:\n  fixes u::\"'a \\<Rightarrow> 'b::complete_linorder\"\n  shows \"Limsup F (\\<lambda>n. max (u n) (v n)) = max (Limsup F u) (Limsup F v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Limsup F (\\<lambda>n. max (u n) (v n)) = max (Limsup F u) (Limsup F v)", "proof (rule order_antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. Limsup F (\\<lambda>n. max (u n) (v n))\n    \\<le> max (Limsup F u) (Limsup F v)\n 2. max (Limsup F u) (Limsup F v)\n    \\<le> Limsup F (\\<lambda>n. max (u n) (v n))", "show \"max (Limsup F u) (Limsup F v) \\<le> Limsup F (\\<lambda>n. max (u n) (v n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max (Limsup F u) (Limsup F v)\n    \\<le> Limsup F (\\<lambda>n. max (u n) (v n))", "by (auto intro: Limsup_mono)"], ["proof (state)\nthis:\n  max (Limsup F u) (Limsup F v) \\<le> Limsup F (\\<lambda>n. max (u n) (v n))\n\ngoal (1 subgoal):\n 1. Limsup F (\\<lambda>n. max (u n) (v n))\n    \\<le> max (Limsup F u) (Limsup F v)", "have \"Limsup F (\\<lambda>n. max (u n) (v n)) < e\" if \"max (Limsup F u) (Limsup F v) < e\" for e"], ["proof (prove)\ngoal (1 subgoal):\n 1. Limsup F (\\<lambda>n. max (u n) (v n)) < e", "proof (cases \"\\<exists>t. max (Limsup F u) (Limsup F v) < t \\<and> t < e\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>t>max (Limsup F u) (Limsup F v). t < e \\<Longrightarrow>\n    Limsup F (\\<lambda>n. max (u n) (v n)) < e\n 2. \\<not> (\\<exists>t>max (Limsup F u) (Limsup F v).\n               t < e) \\<Longrightarrow>\n    Limsup F (\\<lambda>n. max (u n) (v n)) < e", "case True"], ["proof (state)\nthis:\n  \\<exists>t>max (Limsup F u) (Limsup F v). t < e\n\ngoal (2 subgoals):\n 1. \\<exists>t>max (Limsup F u) (Limsup F v). t < e \\<Longrightarrow>\n    Limsup F (\\<lambda>n. max (u n) (v n)) < e\n 2. \\<not> (\\<exists>t>max (Limsup F u) (Limsup F v).\n               t < e) \\<Longrightarrow>\n    Limsup F (\\<lambda>n. max (u n) (v n)) < e", "then"], ["proof (chain)\npicking this:\n  \\<exists>t>max (Limsup F u) (Limsup F v). t < e", "obtain t where t: \"t < e\" \"max (Limsup F u) (Limsup F v) < t\""], ["proof (prove)\nusing this:\n  \\<exists>t>max (Limsup F u) (Limsup F v). t < e\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>t < e; max (Limsup F u) (Limsup F v) < t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  t < e\n  max (Limsup F u) (Limsup F v) < t\n\ngoal (2 subgoals):\n 1. \\<exists>t>max (Limsup F u) (Limsup F v). t < e \\<Longrightarrow>\n    Limsup F (\\<lambda>n. max (u n) (v n)) < e\n 2. \\<not> (\\<exists>t>max (Limsup F u) (Limsup F v).\n               t < e) \\<Longrightarrow>\n    Limsup F (\\<lambda>n. max (u n) (v n)) < e", "then"], ["proof (chain)\npicking this:\n  t < e\n  max (Limsup F u) (Limsup F v) < t", "have \"Limsup F u < t\" \"Limsup F v < t\""], ["proof (prove)\nusing this:\n  t < e\n  max (Limsup F u) (Limsup F v) < t\n\ngoal (1 subgoal):\n 1. Limsup F u < t &&& Limsup F v < t", "using that max_def"], ["proof (prove)\nusing this:\n  t < e\n  max (Limsup F u) (Limsup F v) < t\n  max (Limsup F u) (Limsup F v) < e\n  max ?a ?b = (if ?a \\<le> ?b then ?b else ?a)\n\ngoal (1 subgoal):\n 1. Limsup F u < t &&& Limsup F v < t", "by auto"], ["proof (state)\nthis:\n  Limsup F u < t\n  Limsup F v < t\n\ngoal (2 subgoals):\n 1. \\<exists>t>max (Limsup F u) (Limsup F v). t < e \\<Longrightarrow>\n    Limsup F (\\<lambda>n. max (u n) (v n)) < e\n 2. \\<not> (\\<exists>t>max (Limsup F u) (Limsup F v).\n               t < e) \\<Longrightarrow>\n    Limsup F (\\<lambda>n. max (u n) (v n)) < e", "then"], ["proof (chain)\npicking this:\n  Limsup F u < t\n  Limsup F v < t", "have *: \"eventually (\\<lambda>n. u n < t) F\" \"eventually (\\<lambda>n. v n < t) F\""], ["proof (prove)\nusing this:\n  Limsup F u < t\n  Limsup F v < t\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in F. u n < t &&& \\<forall>\\<^sub>F n in F. v n < t", "by (auto simp: Limsup_lessD)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in F. u n < t\n  \\<forall>\\<^sub>F n in F. v n < t\n\ngoal (2 subgoals):\n 1. \\<exists>t>max (Limsup F u) (Limsup F v). t < e \\<Longrightarrow>\n    Limsup F (\\<lambda>n. max (u n) (v n)) < e\n 2. \\<not> (\\<exists>t>max (Limsup F u) (Limsup F v).\n               t < e) \\<Longrightarrow>\n    Limsup F (\\<lambda>n. max (u n) (v n)) < e", "have \"eventually (\\<lambda>n. max (u n) (v n) < t) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in F. max (u n) (v n) < t", "using eventually_mono[OF eventually_conj[OF *]]"], ["proof (prove)\nusing this:\n  (\\<And>x. u x < t \\<and> v x < t \\<Longrightarrow> ?Q x) \\<Longrightarrow>\n  eventually ?Q F\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in F. max (u n) (v n) < t", "by auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in F. max (u n) (v n) < t\n\ngoal (2 subgoals):\n 1. \\<exists>t>max (Limsup F u) (Limsup F v). t < e \\<Longrightarrow>\n    Limsup F (\\<lambda>n. max (u n) (v n)) < e\n 2. \\<not> (\\<exists>t>max (Limsup F u) (Limsup F v).\n               t < e) \\<Longrightarrow>\n    Limsup F (\\<lambda>n. max (u n) (v n)) < e", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F n in F. max (u n) (v n) < t", "have \"Limsup F (\\<lambda>n. max (u n) (v n)) \\<le> t\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in F. max (u n) (v n) < t\n\ngoal (1 subgoal):\n 1. Limsup F (\\<lambda>n. max (u n) (v n)) \\<le> t", "by (meson Limsup_obtain' not_le_imp_less order.asym)"], ["proof (state)\nthis:\n  Limsup F (\\<lambda>n. max (u n) (v n)) \\<le> t\n\ngoal (2 subgoals):\n 1. \\<exists>t>max (Limsup F u) (Limsup F v). t < e \\<Longrightarrow>\n    Limsup F (\\<lambda>n. max (u n) (v n)) < e\n 2. \\<not> (\\<exists>t>max (Limsup F u) (Limsup F v).\n               t < e) \\<Longrightarrow>\n    Limsup F (\\<lambda>n. max (u n) (v n)) < e", "then"], ["proof (chain)\npicking this:\n  Limsup F (\\<lambda>n. max (u n) (v n)) \\<le> t", "show ?thesis"], ["proof (prove)\nusing this:\n  Limsup F (\\<lambda>n. max (u n) (v n)) \\<le> t\n\ngoal (1 subgoal):\n 1. Limsup F (\\<lambda>n. max (u n) (v n)) < e", "using t"], ["proof (prove)\nusing this:\n  Limsup F (\\<lambda>n. max (u n) (v n)) \\<le> t\n  t < e\n  max (Limsup F u) (Limsup F v) < t\n\ngoal (1 subgoal):\n 1. Limsup F (\\<lambda>n. max (u n) (v n)) < e", "by auto"], ["proof (state)\nthis:\n  Limsup F (\\<lambda>n. max (u n) (v n)) < e\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>t>max (Limsup F u) (Limsup F v).\n               t < e) \\<Longrightarrow>\n    Limsup F (\\<lambda>n. max (u n) (v n)) < e", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>t>max (Limsup F u) (Limsup F v).\n               t < e) \\<Longrightarrow>\n    Limsup F (\\<lambda>n. max (u n) (v n)) < e", "case False"], ["proof (state)\nthis:\n  \\<not> (\\<exists>t>max (Limsup F u) (Limsup F v). t < e)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>t>max (Limsup F u) (Limsup F v).\n               t < e) \\<Longrightarrow>\n    Limsup F (\\<lambda>n. max (u n) (v n)) < e", "have \"Limsup F u < e\" \"Limsup F v < e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Limsup F u < e &&& Limsup F v < e", "using that max_def"], ["proof (prove)\nusing this:\n  max (Limsup F u) (Limsup F v) < e\n  max ?a ?b = (if ?a \\<le> ?b then ?b else ?a)\n\ngoal (1 subgoal):\n 1. Limsup F u < e &&& Limsup F v < e", "by auto"], ["proof (state)\nthis:\n  Limsup F u < e\n  Limsup F v < e\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>t>max (Limsup F u) (Limsup F v).\n               t < e) \\<Longrightarrow>\n    Limsup F (\\<lambda>n. max (u n) (v n)) < e", "then"], ["proof (chain)\npicking this:\n  Limsup F u < e\n  Limsup F v < e", "have *: \"eventually (\\<lambda>n. u n < e) F\" \"eventually (\\<lambda>n. v n < e) F\""], ["proof (prove)\nusing this:\n  Limsup F u < e\n  Limsup F v < e\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in F. u n < e &&& \\<forall>\\<^sub>F n in F. v n < e", "by (auto simp: Limsup_lessD)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in F. u n < e\n  \\<forall>\\<^sub>F n in F. v n < e\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>t>max (Limsup F u) (Limsup F v).\n               t < e) \\<Longrightarrow>\n    Limsup F (\\<lambda>n. max (u n) (v n)) < e", "have \"eventually (\\<lambda>n. max (u n) (v n) \\<le> max (Limsup F u) (Limsup F v)) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in F.\n       max (u n) (v n) \\<le> max (Limsup F u) (Limsup F v)", "apply (rule eventually_mono[OF eventually_conj[OF *]])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       u x < e \\<and> v x < e \\<Longrightarrow>\n       max (u x) (v x) \\<le> max (Limsup F u) (Limsup F v)", "using False not_le_imp_less"], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>t>max (Limsup F u) (Limsup F v). t < e)\n  \\<not> ?y \\<le> ?x \\<Longrightarrow> ?x < ?y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       u x < e \\<and> v x < e \\<Longrightarrow>\n       max (u x) (v x) \\<le> max (Limsup F u) (Limsup F v)", "by force"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F n in F.\n     max (u n) (v n) \\<le> max (Limsup F u) (Limsup F v)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>t>max (Limsup F u) (Limsup F v).\n               t < e) \\<Longrightarrow>\n    Limsup F (\\<lambda>n. max (u n) (v n)) < e", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F n in F.\n     max (u n) (v n) \\<le> max (Limsup F u) (Limsup F v)", "have \"Limsup F (\\<lambda>n. max (u n) (v n)) \\<le> max (Limsup F u) (Limsup F v)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F n in F.\n     max (u n) (v n) \\<le> max (Limsup F u) (Limsup F v)\n\ngoal (1 subgoal):\n 1. Limsup F (\\<lambda>n. max (u n) (v n))\n    \\<le> max (Limsup F u) (Limsup F v)", "by (meson Limsup_obtain' leD leI)"], ["proof (state)\nthis:\n  Limsup F (\\<lambda>n. max (u n) (v n)) \\<le> max (Limsup F u) (Limsup F v)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>t>max (Limsup F u) (Limsup F v).\n               t < e) \\<Longrightarrow>\n    Limsup F (\\<lambda>n. max (u n) (v n)) < e", "then"], ["proof (chain)\npicking this:\n  Limsup F (\\<lambda>n. max (u n) (v n)) \\<le> max (Limsup F u) (Limsup F v)", "show ?thesis"], ["proof (prove)\nusing this:\n  Limsup F (\\<lambda>n. max (u n) (v n)) \\<le> max (Limsup F u) (Limsup F v)\n\ngoal (1 subgoal):\n 1. Limsup F (\\<lambda>n. max (u n) (v n)) < e", "using that le_less_trans"], ["proof (prove)\nusing this:\n  Limsup F (\\<lambda>n. max (u n) (v n)) \\<le> max (Limsup F u) (Limsup F v)\n  max (Limsup F u) (Limsup F v) < e\n  \\<lbrakk>?x \\<le> ?y; ?y < ?z\\<rbrakk> \\<Longrightarrow> ?x < ?z\n\ngoal (1 subgoal):\n 1. Limsup F (\\<lambda>n. max (u n) (v n)) < e", "by blast"], ["proof (state)\nthis:\n  Limsup F (\\<lambda>n. max (u n) (v n)) < e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  max (Limsup F u) (Limsup F v) < ?e \\<Longrightarrow>\n  Limsup F (\\<lambda>n. max (u n) (v n)) < ?e\n\ngoal (1 subgoal):\n 1. Limsup F (\\<lambda>n. max (u n) (v n))\n    \\<le> max (Limsup F u) (Limsup F v)", "then"], ["proof (chain)\npicking this:\n  max (Limsup F u) (Limsup F v) < ?e \\<Longrightarrow>\n  Limsup F (\\<lambda>n. max (u n) (v n)) < ?e", "show \"Limsup F (\\<lambda>n. max (u n) (v n)) \\<le> max (Limsup F u) (Limsup F v)\""], ["proof (prove)\nusing this:\n  max (Limsup F u) (Limsup F v) < ?e \\<Longrightarrow>\n  Limsup F (\\<lambda>n. max (u n) (v n)) < ?e\n\ngoal (1 subgoal):\n 1. Limsup F (\\<lambda>n. max (u n) (v n))\n    \\<le> max (Limsup F u) (Limsup F v)", "using not_le_imp_less"], ["proof (prove)\nusing this:\n  max (Limsup F u) (Limsup F v) < ?e \\<Longrightarrow>\n  Limsup F (\\<lambda>n. max (u n) (v n)) < ?e\n  \\<not> ?y \\<le> ?x \\<Longrightarrow> ?x < ?y\n\ngoal (1 subgoal):\n 1. Limsup F (\\<lambda>n. max (u n) (v n))\n    \\<le> max (Limsup F u) (Limsup F v)", "by blast"], ["proof (state)\nthis:\n  Limsup F (\\<lambda>n. max (u n) (v n)) \\<le> max (Limsup F u) (Limsup F v)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Bounding the cardinality of a finite set\\<close>"], ["", "text \\<open>A variation with real bounds.\\<close>"], ["", "lemma finite_finite_subset_caract':\n  fixes C::real\n  assumes \"\\<And>G. G \\<subseteq> F \\<Longrightarrow> finite G \\<Longrightarrow> card G \\<le> C\"\n  shows \"finite F \\<and> card F \\<le> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite F \\<and> real (card F) \\<le> C", "by (meson assms finite_if_finite_subsets_card_bdd le_nat_floor order_refl)"], ["", "text \\<open>To show that a set has cardinality at most one, it suffices to show that any two of its\nelements coincide.\\<close>"], ["", "lemma finite_at_most_singleton:\n  assumes \"\\<And>x y. x \\<in> F \\<Longrightarrow> y \\<in> F \\<Longrightarrow> x = y\"\n  shows \"finite F \\<and> card F \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite F \\<and> card F \\<le> 1", "proof (cases \"F = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. F = {} \\<Longrightarrow> finite F \\<and> card F \\<le> 1\n 2. F \\<noteq> {} \\<Longrightarrow> finite F \\<and> card F \\<le> 1", "case True"], ["proof (state)\nthis:\n  F = {}\n\ngoal (2 subgoals):\n 1. F = {} \\<Longrightarrow> finite F \\<and> card F \\<le> 1\n 2. F \\<noteq> {} \\<Longrightarrow> finite F \\<and> card F \\<le> 1", "then"], ["proof (chain)\npicking this:\n  F = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  F = {}\n\ngoal (1 subgoal):\n 1. finite F \\<and> card F \\<le> 1", "by auto"], ["proof (state)\nthis:\n  finite F \\<and> card F \\<le> 1\n\ngoal (1 subgoal):\n 1. F \\<noteq> {} \\<Longrightarrow> finite F \\<and> card F \\<le> 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. F \\<noteq> {} \\<Longrightarrow> finite F \\<and> card F \\<le> 1", "case False"], ["proof (state)\nthis:\n  F \\<noteq> {}\n\ngoal (1 subgoal):\n 1. F \\<noteq> {} \\<Longrightarrow> finite F \\<and> card F \\<le> 1", "then"], ["proof (chain)\npicking this:\n  F \\<noteq> {}", "obtain x where \"x \\<in> F\""], ["proof (prove)\nusing this:\n  F \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>x. x \\<in> F \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> F\n\ngoal (1 subgoal):\n 1. F \\<noteq> {} \\<Longrightarrow> finite F \\<and> card F \\<le> 1", "then"], ["proof (chain)\npicking this:\n  x \\<in> F", "have \"F = {x}\""], ["proof (prove)\nusing this:\n  x \\<in> F\n\ngoal (1 subgoal):\n 1. F = {x}", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> F\n  \\<lbrakk>?x \\<in> F; ?y \\<in> F\\<rbrakk> \\<Longrightarrow> ?x = ?y\n\ngoal (1 subgoal):\n 1. F = {x}", "by auto"], ["proof (state)\nthis:\n  F = {x}\n\ngoal (1 subgoal):\n 1. F \\<noteq> {} \\<Longrightarrow> finite F \\<and> card F \\<le> 1", "then"], ["proof (chain)\npicking this:\n  F = {x}", "show ?thesis"], ["proof (prove)\nusing this:\n  F = {x}\n\ngoal (1 subgoal):\n 1. finite F \\<and> card F \\<le> 1", "by auto"], ["proof (state)\nthis:\n  finite F \\<and> card F \\<le> 1\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Bounded sets of integers are finite.\\<close>"], ["", "lemma finite_real_int_interval [simp]:\n  \"finite (range real_of_int \\<inter> {a..b})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (range real_of_int \\<inter> {a..b})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (range real_of_int \\<inter> {a..b})", "have \"range real_of_int \\<inter> {a..b} \\<subseteq> real_of_int`{floor a..ceiling b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range real_of_int \\<inter> {a..b}\n    \\<subseteq> real_of_int ` {\\<lfloor>a\\<rfloor>..\\<lceil>b\\<rceil>}", "by (auto, metis atLeastAtMost_iff ceiling_mono ceiling_of_int floor_mono floor_of_int image_eqI)"], ["proof (state)\nthis:\n  range real_of_int \\<inter> {a..b}\n  \\<subseteq> real_of_int ` {\\<lfloor>a\\<rfloor>..\\<lceil>b\\<rceil>}\n\ngoal (1 subgoal):\n 1. finite (range real_of_int \\<inter> {a..b})", "then"], ["proof (chain)\npicking this:\n  range real_of_int \\<inter> {a..b}\n  \\<subseteq> real_of_int ` {\\<lfloor>a\\<rfloor>..\\<lceil>b\\<rceil>}", "show ?thesis"], ["proof (prove)\nusing this:\n  range real_of_int \\<inter> {a..b}\n  \\<subseteq> real_of_int ` {\\<lfloor>a\\<rfloor>..\\<lceil>b\\<rceil>}\n\ngoal (1 subgoal):\n 1. finite (range real_of_int \\<inter> {a..b})", "using finite_subset"], ["proof (prove)\nusing this:\n  range real_of_int \\<inter> {a..b}\n  \\<subseteq> real_of_int ` {\\<lfloor>a\\<rfloor>..\\<lceil>b\\<rceil>}\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite (range real_of_int \\<inter> {a..b})", "by blast"], ["proof (state)\nthis:\n  finite (range real_of_int \\<inter> {a..b})\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Well separated sets of real numbers are finite, with controlled cardinality.\\<close>"], ["", "lemma separated_in_real_card_bound:\n  assumes \"T \\<subseteq> {a..(b::real)}\" \"d > 0\" \"\\<And>x y. x \\<in> T \\<Longrightarrow> y \\<in> T \\<Longrightarrow> y > x \\<Longrightarrow> y \\<ge> x + d\"\n  shows \"finite T\" \"card T \\<le> nat (floor ((b-a)/d) + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite T &&& card T \\<le> nat (\\<lfloor>(b - a) / d\\<rfloor> + 1)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. finite T\n 2. card T \\<le> nat (\\<lfloor>(b - a) / d\\<rfloor> + 1)", "define f where \"f = (\\<lambda>x. floor ((x-a) / d))\""], ["proof (state)\nthis:\n  f = (\\<lambda>x. \\<lfloor>(x - a) / d\\<rfloor>)\n\ngoal (2 subgoals):\n 1. finite T\n 2. card T \\<le> nat (\\<lfloor>(b - a) / d\\<rfloor> + 1)", "have \"f`{a..b} \\<subseteq> {0..floor ((b-a)/d)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` {a..b} \\<subseteq> {0..\\<lfloor>(b - a) / d\\<rfloor>}", "unfolding f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<lfloor>(x - a) / d\\<rfloor>) ` {a..b}\n    \\<subseteq> {0..\\<lfloor>(b - a) / d\\<rfloor>}", "using \\<open>d > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < d\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<lfloor>(x - a) / d\\<rfloor>) ` {a..b}\n    \\<subseteq> {0..\\<lfloor>(b - a) / d\\<rfloor>}", "by (auto simp add: floor_mono frac_le)"], ["proof (state)\nthis:\n  f ` {a..b} \\<subseteq> {0..\\<lfloor>(b - a) / d\\<rfloor>}\n\ngoal (2 subgoals):\n 1. finite T\n 2. card T \\<le> nat (\\<lfloor>(b - a) / d\\<rfloor> + 1)", "then"], ["proof (chain)\npicking this:\n  f ` {a..b} \\<subseteq> {0..\\<lfloor>(b - a) / d\\<rfloor>}", "have *: \"f`T \\<subseteq> {0..floor ((b-a)/d)}\""], ["proof (prove)\nusing this:\n  f ` {a..b} \\<subseteq> {0..\\<lfloor>(b - a) / d\\<rfloor>}\n\ngoal (1 subgoal):\n 1. f ` T \\<subseteq> {0..\\<lfloor>(b - a) / d\\<rfloor>}", "using \\<open>T \\<subseteq> {a..b}\\<close>"], ["proof (prove)\nusing this:\n  f ` {a..b} \\<subseteq> {0..\\<lfloor>(b - a) / d\\<rfloor>}\n  T \\<subseteq> {a..b}\n\ngoal (1 subgoal):\n 1. f ` T \\<subseteq> {0..\\<lfloor>(b - a) / d\\<rfloor>}", "by auto"], ["proof (state)\nthis:\n  f ` T \\<subseteq> {0..\\<lfloor>(b - a) / d\\<rfloor>}\n\ngoal (2 subgoals):\n 1. finite T\n 2. card T \\<le> nat (\\<lfloor>(b - a) / d\\<rfloor> + 1)", "then"], ["proof (chain)\npicking this:\n  f ` T \\<subseteq> {0..\\<lfloor>(b - a) / d\\<rfloor>}", "have \"finite (f`T)\""], ["proof (prove)\nusing this:\n  f ` T \\<subseteq> {0..\\<lfloor>(b - a) / d\\<rfloor>}\n\ngoal (1 subgoal):\n 1. finite (f ` T)", "by (rule finite_subset, auto)"], ["proof (state)\nthis:\n  finite (f ` T)\n\ngoal (2 subgoals):\n 1. finite T\n 2. card T \\<le> nat (\\<lfloor>(b - a) / d\\<rfloor> + 1)", "have \"card (f`T) \\<le> card {0..floor ((b-a)/d)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (f ` T) \\<le> card {0..\\<lfloor>(b - a) / d\\<rfloor>}", "apply (rule card_mono)"], ["proof (prove)\ngoal (2 subgoals):\n 1. finite {0..\\<lfloor>(b - a) / d\\<rfloor>}\n 2. f ` T \\<subseteq> {0..\\<lfloor>(b - a) / d\\<rfloor>}", "using *"], ["proof (prove)\nusing this:\n  f ` T \\<subseteq> {0..\\<lfloor>(b - a) / d\\<rfloor>}\n\ngoal (2 subgoals):\n 1. finite {0..\\<lfloor>(b - a) / d\\<rfloor>}\n 2. f ` T \\<subseteq> {0..\\<lfloor>(b - a) / d\\<rfloor>}", "by auto"], ["proof (state)\nthis:\n  card (f ` T) \\<le> card {0..\\<lfloor>(b - a) / d\\<rfloor>}\n\ngoal (2 subgoals):\n 1. finite T\n 2. card T \\<le> nat (\\<lfloor>(b - a) / d\\<rfloor> + 1)", "then"], ["proof (chain)\npicking this:\n  card (f ` T) \\<le> card {0..\\<lfloor>(b - a) / d\\<rfloor>}", "have card_le: \"card (f`T) \\<le> nat (floor ((b-a)/d) + 1)\""], ["proof (prove)\nusing this:\n  card (f ` T) \\<le> card {0..\\<lfloor>(b - a) / d\\<rfloor>}\n\ngoal (1 subgoal):\n 1. card (f ` T) \\<le> nat (\\<lfloor>(b - a) / d\\<rfloor> + 1)", "using card_atLeastAtMost_int"], ["proof (prove)\nusing this:\n  card (f ` T) \\<le> card {0..\\<lfloor>(b - a) / d\\<rfloor>}\n  card {?l..?u} = nat (?u - ?l + 1)\n\ngoal (1 subgoal):\n 1. card (f ` T) \\<le> nat (\\<lfloor>(b - a) / d\\<rfloor> + 1)", "by auto"], ["proof (state)\nthis:\n  card (f ` T) \\<le> nat (\\<lfloor>(b - a) / d\\<rfloor> + 1)\n\ngoal (2 subgoals):\n 1. finite T\n 2. card T \\<le> nat (\\<lfloor>(b - a) / d\\<rfloor> + 1)", "have *: \"f x \\<noteq> f y\" if \"y \\<ge> x + d\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. f x \\<noteq> f y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f x \\<noteq> f y", "have \"(y-a)/d \\<ge> (x-a)/d + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x - a) / d + 1 \\<le> (y - a) / d", "using \\<open>d > 0\\<close> that"], ["proof (prove)\nusing this:\n  0 < d\n  x + d \\<le> y\n\ngoal (1 subgoal):\n 1. (x - a) / d + 1 \\<le> (y - a) / d", "by (auto simp add: divide_simps)"], ["proof (state)\nthis:\n  (x - a) / d + 1 \\<le> (y - a) / d\n\ngoal (1 subgoal):\n 1. f x \\<noteq> f y", "then"], ["proof (chain)\npicking this:\n  (x - a) / d + 1 \\<le> (y - a) / d", "show ?thesis"], ["proof (prove)\nusing this:\n  (x - a) / d + 1 \\<le> (y - a) / d\n\ngoal (1 subgoal):\n 1. f x \\<noteq> f y", "unfolding f_def"], ["proof (prove)\nusing this:\n  (x - a) / d + 1 \\<le> (y - a) / d\n\ngoal (1 subgoal):\n 1. \\<lfloor>(x - a) / d\\<rfloor> \\<noteq> \\<lfloor>(y - a) / d\\<rfloor>", "by linarith"], ["proof (state)\nthis:\n  f x \\<noteq> f y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x + d \\<le> ?y \\<Longrightarrow> f ?x \\<noteq> f ?y\n\ngoal (2 subgoals):\n 1. finite T\n 2. card T \\<le> nat (\\<lfloor>(b - a) / d\\<rfloor> + 1)", "have \"inj_on f T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on f T", "unfolding inj_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>T. \\<forall>y\\<in>T. f x = f y \\<longrightarrow> x = y", "using * assms(3)"], ["proof (prove)\nusing this:\n  ?x + d \\<le> ?y \\<Longrightarrow> f ?x \\<noteq> f ?y\n  \\<lbrakk>?x \\<in> T; ?y \\<in> T; ?x < ?y\\<rbrakk>\n  \\<Longrightarrow> ?x + d \\<le> ?y\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>T. \\<forall>y\\<in>T. f x = f y \\<longrightarrow> x = y", "by (auto, metis not_less_iff_gr_or_eq)"], ["proof (state)\nthis:\n  inj_on f T\n\ngoal (2 subgoals):\n 1. finite T\n 2. card T \\<le> nat (\\<lfloor>(b - a) / d\\<rfloor> + 1)", "show \"finite T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite T", "using \\<open>finite (f`T)\\<close> \\<open>inj_on f T\\<close> finite_image_iff"], ["proof (prove)\nusing this:\n  finite (f ` T)\n  inj_on f T\n  inj_on ?f ?A \\<Longrightarrow> finite (?f ` ?A) = finite ?A\n\ngoal (1 subgoal):\n 1. finite T", "by blast"], ["proof (state)\nthis:\n  finite T\n\ngoal (1 subgoal):\n 1. card T \\<le> nat (\\<lfloor>(b - a) / d\\<rfloor> + 1)", "have \"card T = card (f`T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card T = card (f ` T)", "using \\<open>inj_on f T\\<close>"], ["proof (prove)\nusing this:\n  inj_on f T\n\ngoal (1 subgoal):\n 1. card T = card (f ` T)", "by (simp add: card_image)"], ["proof (state)\nthis:\n  card T = card (f ` T)\n\ngoal (1 subgoal):\n 1. card T \\<le> nat (\\<lfloor>(b - a) / d\\<rfloor> + 1)", "then"], ["proof (chain)\npicking this:\n  card T = card (f ` T)", "show \"card T \\<le> nat (floor ((b-a)/d) + 1)\""], ["proof (prove)\nusing this:\n  card T = card (f ` T)\n\ngoal (1 subgoal):\n 1. card T \\<le> nat (\\<lfloor>(b - a) / d\\<rfloor> + 1)", "using card_le"], ["proof (prove)\nusing this:\n  card T = card (f ` T)\n  card (f ` T) \\<le> nat (\\<lfloor>(b - a) / d\\<rfloor> + 1)\n\ngoal (1 subgoal):\n 1. card T \\<le> nat (\\<lfloor>(b - a) / d\\<rfloor> + 1)", "by auto"], ["proof (state)\nthis:\n  card T \\<le> nat (\\<lfloor>(b - a) / d\\<rfloor> + 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Manipulating finite ordered sets\\<close>"], ["", "text \\<open>We will need below to construct finite sets of real numbers with good properties expressed\nin terms of consecutive elements of the set. We introduce tools to manipulate such sets,\nexpressing in particular the next and the previous element of the set and controlling how they\nevolve when one inserts a new element in the set. It works in fact in any linorder, and could\nalso prove useful to construct sets of integer numbers.\n\nManipulating the next and previous elements work well, except at the top (respectively bottom).\nIn our constructions, these will be fixed and called $b$ and $a$.\\<close>"], ["", "text \\<open>Notations for the next and the previous elements.\\<close>"], ["", "definition next_in::\"'a set \\<Rightarrow> 'a \\<Rightarrow> ('a::linorder)\"\n  where \"next_in A u = Min (A \\<inter> {u<..})\""], ["", "definition prev_in::\"'a set \\<Rightarrow> 'a \\<Rightarrow> ('a::linorder)\"\n  where \"prev_in A u = Max (A \\<inter> {..<u})\""], ["", "context\n  fixes A::\"('a::linorder) set\" and a b::'a\n  assumes A: \"finite A\" \"A \\<subseteq> {a..b}\" \"a \\<in> A\" \"b \\<in> A\" \"a < b\"\nbegin"], ["", "text \\<open>Basic properties of the next element, when one starts from an element different from top.\\<close>"], ["", "lemma next_in_basics:\n  assumes \"u \\<in> {a..<b}\"\n  shows \"next_in A u \\<in> A\"\n        \"next_in A u > u\"\n        \"A \\<inter> {u<..<next_in A u} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next_in A u \\<in> A &&&\n    u < next_in A u &&& A \\<inter> {u<..<next_in A u} = {}", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. next_in A u \\<in> A\n 2. u < next_in A u\n 3. A \\<inter> {u<..<next_in A u} = {}", "have next_in_A: \"next_in A u \\<in> A \\<inter> {u<..}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next_in A u \\<in> A \\<inter> {u<..}", "unfolding next_in_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Min (A \\<inter> {u<..}) \\<in> A \\<inter> {u<..}", "apply (rule Min_in)"], ["proof (prove)\ngoal (2 subgoals):\n 1. finite (A \\<inter> {u<..})\n 2. A \\<inter> {u<..} \\<noteq> {}", "using assms \\<open>finite A\\<close> \\<open>b \\<in> A\\<close>"], ["proof (prove)\nusing this:\n  u \\<in> {a..<b}\n  finite A\n  b \\<in> A\n\ngoal (2 subgoals):\n 1. finite (A \\<inter> {u<..})\n 2. A \\<inter> {u<..} \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  next_in A u \\<in> A \\<inter> {u<..}\n\ngoal (3 subgoals):\n 1. next_in A u \\<in> A\n 2. u < next_in A u\n 3. A \\<inter> {u<..<next_in A u} = {}", "then"], ["proof (chain)\npicking this:\n  next_in A u \\<in> A \\<inter> {u<..}", "show \"next_in A u \\<in> A\" \"next_in A u > u\""], ["proof (prove)\nusing this:\n  next_in A u \\<in> A \\<inter> {u<..}\n\ngoal (1 subgoal):\n 1. next_in A u \\<in> A &&& u < next_in A u", "by auto"], ["proof (state)\nthis:\n  next_in A u \\<in> A\n  u < next_in A u\n\ngoal (1 subgoal):\n 1. A \\<inter> {u<..<next_in A u} = {}", "show \"A \\<inter> {u<..<next_in A u} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<inter> {u<..<next_in A u} = {}", "unfolding next_in_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<inter> {u<..<Min (A \\<inter> {u<..})} = {}", "using A"], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> {a..b}\n  a \\<in> A\n  b \\<in> A\n  a < b\n\ngoal (1 subgoal):\n 1. A \\<inter> {u<..<Min (A \\<inter> {u<..})} = {}", "by (auto simp add: leD)"], ["proof (state)\nthis:\n  A \\<inter> {u<..<next_in A u} = {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma next_inI:\n  assumes \"u \\<in> {a..<b}\"\n          \"v \\<in> A\"\n          \"v > u\"\n          \"{u<..<v} \\<inter> A = {}\"\n  shows \"next_in A u = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next_in A u = v", "using assms next_in_basics[OF \\<open>u \\<in> {a..<b}\\<close>]"], ["proof (prove)\nusing this:\n  u \\<in> {a..<b}\n  v \\<in> A\n  u < v\n  {u<..<v} \\<inter> A = {}\n  next_in A u \\<in> A\n  u < next_in A u\n  A \\<inter> {u<..<next_in A u} = {}\n\ngoal (1 subgoal):\n 1. next_in A u = v", "by fastforce"], ["", "text \\<open>Basic properties of the previous element, when one starts from an element different from\nbottom.\\<close>"], ["", "lemma prev_in_basics:\n  assumes \"u \\<in> {a<..b}\"\n  shows \"prev_in A u \\<in> A\"\n        \"prev_in A u < u\"\n        \"A \\<inter> {prev_in A u<..<u} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prev_in A u \\<in> A &&&\n    prev_in A u < u &&& A \\<inter> {prev_in A u<..<u} = {}", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. prev_in A u \\<in> A\n 2. prev_in A u < u\n 3. A \\<inter> {prev_in A u<..<u} = {}", "have prev_in_A: \"prev_in A u \\<in> A \\<inter> {..<u}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prev_in A u \\<in> A \\<inter> {..<u}", "unfolding prev_in_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Max (A \\<inter> {..<u}) \\<in> A \\<inter> {..<u}", "apply (rule Max_in)"], ["proof (prove)\ngoal (2 subgoals):\n 1. finite (A \\<inter> {..<u})\n 2. A \\<inter> {..<u} \\<noteq> {}", "using assms \\<open>finite A\\<close> \\<open>a \\<in> A\\<close>"], ["proof (prove)\nusing this:\n  u \\<in> {a<..b}\n  finite A\n  a \\<in> A\n\ngoal (2 subgoals):\n 1. finite (A \\<inter> {..<u})\n 2. A \\<inter> {..<u} \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  prev_in A u \\<in> A \\<inter> {..<u}\n\ngoal (3 subgoals):\n 1. prev_in A u \\<in> A\n 2. prev_in A u < u\n 3. A \\<inter> {prev_in A u<..<u} = {}", "then"], ["proof (chain)\npicking this:\n  prev_in A u \\<in> A \\<inter> {..<u}", "show \"prev_in A u \\<in> A\" \"prev_in A u < u\""], ["proof (prove)\nusing this:\n  prev_in A u \\<in> A \\<inter> {..<u}\n\ngoal (1 subgoal):\n 1. prev_in A u \\<in> A &&& prev_in A u < u", "by auto"], ["proof (state)\nthis:\n  prev_in A u \\<in> A\n  prev_in A u < u\n\ngoal (1 subgoal):\n 1. A \\<inter> {prev_in A u<..<u} = {}", "show \"A \\<inter> {prev_in A u<..<u} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<inter> {prev_in A u<..<u} = {}", "unfolding prev_in_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<inter> {Max (A \\<inter> {..<u})<..<u} = {}", "using A"], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> {a..b}\n  a \\<in> A\n  b \\<in> A\n  a < b\n\ngoal (1 subgoal):\n 1. A \\<inter> {Max (A \\<inter> {..<u})<..<u} = {}", "by (auto simp add: leD)"], ["proof (state)\nthis:\n  A \\<inter> {prev_in A u<..<u} = {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prev_inI:\n  assumes \"u \\<in> {a<..b}\"\n          \"v \\<in> A\"\n          \"v < u\"\n          \"{v<..<u} \\<inter> A = {}\"\n  shows \"prev_in A u = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prev_in A u = v", "using assms prev_in_basics[OF \\<open>u \\<in> {a<..b}\\<close>]"], ["proof (prove)\nusing this:\n  u \\<in> {a<..b}\n  v \\<in> A\n  v < u\n  {v<..<u} \\<inter> A = {}\n  prev_in A u \\<in> A\n  prev_in A u < u\n  A \\<inter> {prev_in A u<..<u} = {}\n\ngoal (1 subgoal):\n 1. prev_in A u = v", "by (meson disjoint_iff_not_equal greaterThanLessThan_iff less_linear)"], ["", "text \\<open>The interval $[a,b]$ is covered by the intervals between the consecutive elements of $A$.\\<close>"], ["", "lemma intervals_decomposition:\n  \"(\\<Union> U \\<in> {{u..next_in A u} | u. u \\<in> A - {b}}. U) = {a..b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U) = {a..b}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)\n    \\<subseteq> {a..b}\n 2. {a..b}\n    \\<subseteq> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "show \"(\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U) \\<subseteq> {a..b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)\n    \\<subseteq> {a..b}", "using \\<open>A \\<subseteq> {a..b}\\<close> next_in_basics(1)"], ["proof (prove)\nusing this:\n  A \\<subseteq> {a..b}\n  ?u \\<in> {a..<b} \\<Longrightarrow> next_in A ?u \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)\n    \\<subseteq> {a..b}", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x u.\n       \\<lbrakk>A \\<subseteq> {a..b};\n        \\<And>u.\n           a \\<le> u \\<and> u < b \\<Longrightarrow> next_in A u \\<in> A;\n        u \\<in> A; u \\<noteq> b; u \\<le> x; x \\<le> next_in A u\\<rbrakk>\n       \\<Longrightarrow> a \\<le> x\n 2. \\<And>x u.\n       \\<lbrakk>A \\<subseteq> {a..b};\n        \\<And>u.\n           a \\<le> u \\<and> u < b \\<Longrightarrow> next_in A u \\<in> A;\n        u \\<in> A; u \\<noteq> b; u \\<le> x; x \\<le> next_in A u\\<rbrakk>\n       \\<Longrightarrow> x \\<le> b", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x u.\n       \\<lbrakk>A \\<subseteq> {a..b};\n        \\<And>u.\n           a \\<le> u \\<and> u < b \\<Longrightarrow> next_in A u \\<in> A;\n        u \\<in> A; u \\<noteq> b; u \\<le> x; x \\<le> next_in A u\\<rbrakk>\n       \\<Longrightarrow> x \\<le> b", "by (metis \\<open>A \\<subseteq> {a..b}\\<close> atLeastAtMost_iff eq_iff le_less_trans less_eq_real_def not_less subset_eq subset_iff_psubset_eq)"], ["proof (state)\nthis:\n  (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)\n  \\<subseteq> {a..b}\n\ngoal (1 subgoal):\n 1. {a..b}\n    \\<subseteq> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "have \"x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)\" if \"x \\<in> {a..b}\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "consider \"x = b\" | \"x \\<in> A - {b}\" | \"x \\<notin> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x = b \\<Longrightarrow> thesis;\n     x \\<in> A - {b} \\<Longrightarrow> thesis;\n     x \\<notin> A \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>x = b \\<Longrightarrow> ?thesis;\n   x \\<in> A - {b} \\<Longrightarrow> ?thesis;\n   x \\<notin> A \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>x = b \\<Longrightarrow> ?thesis;\n   x \\<in> A - {b} \\<Longrightarrow> ?thesis;\n   x \\<notin> A \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>x = b \\<Longrightarrow> ?thesis;\n   x \\<in> A - {b} \\<Longrightarrow> ?thesis;\n   x \\<notin> A \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "proof(cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. x = b \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)\n 2. x \\<in> A - {b} \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)\n 3. x \\<notin> A \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "case 1"], ["proof (state)\nthis:\n  x = b\n\ngoal (3 subgoals):\n 1. x = b \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)\n 2. x \\<in> A - {b} \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)\n 3. x \\<notin> A \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "define u where \"u = prev_in A b\""], ["proof (state)\nthis:\n  u = prev_in A b\n\ngoal (3 subgoals):\n 1. x = b \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)\n 2. x \\<in> A - {b} \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)\n 3. x \\<notin> A \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "have \"b \\<in> {a<..b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<in> {a<..b}", "using \\<open>a < b\\<close>"], ["proof (prove)\nusing this:\n  a < b\n\ngoal (1 subgoal):\n 1. b \\<in> {a<..b}", "by simp"], ["proof (state)\nthis:\n  b \\<in> {a<..b}\n\ngoal (3 subgoals):\n 1. x = b \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)\n 2. x \\<in> A - {b} \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)\n 3. x \\<notin> A \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "have \"u \\<in> A - {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> A - {b}", "unfolding u_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. prev_in A b \\<in> A - {b}", "using prev_in_basics[OF \\<open>b \\<in> {a<..b}\\<close>]"], ["proof (prove)\nusing this:\n  prev_in A b \\<in> A\n  prev_in A b < b\n  A \\<inter> {prev_in A b<..<b} = {}\n\ngoal (1 subgoal):\n 1. prev_in A b \\<in> A - {b}", "by simp"], ["proof (state)\nthis:\n  u \\<in> A - {b}\n\ngoal (3 subgoals):\n 1. x = b \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)\n 2. x \\<in> A - {b} \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)\n 3. x \\<notin> A \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "then"], ["proof (chain)\npicking this:\n  u \\<in> A - {b}", "have \"u \\<in> {a..<b}\""], ["proof (prove)\nusing this:\n  u \\<in> A - {b}\n\ngoal (1 subgoal):\n 1. u \\<in> {a..<b}", "using \\<open>A \\<subseteq> {a..b}\\<close> \\<open>a < b\\<close>"], ["proof (prove)\nusing this:\n  u \\<in> A - {b}\n  A \\<subseteq> {a..b}\n  a < b\n\ngoal (1 subgoal):\n 1. u \\<in> {a..<b}", "by fastforce"], ["proof (state)\nthis:\n  u \\<in> {a..<b}\n\ngoal (3 subgoals):\n 1. x = b \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)\n 2. x \\<in> A - {b} \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)\n 3. x \\<notin> A \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "have \"next_in A u = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next_in A u = b", "using prev_in_basics[OF \\<open>b \\<in> {a<..b}\\<close>] next_in_basics[OF \\<open>u \\<in> {a..<b}\\<close>] \\<open>A \\<subseteq> {a..b}\\<close>"], ["proof (prove)\nusing this:\n  prev_in A b \\<in> A\n  prev_in A b < b\n  A \\<inter> {prev_in A b<..<b} = {}\n  next_in A u \\<in> A\n  u < next_in A u\n  A \\<inter> {u<..<next_in A u} = {}\n  A \\<subseteq> {a..b}\n\ngoal (1 subgoal):\n 1. next_in A u = b", "unfolding u_def"], ["proof (prove)\nusing this:\n  prev_in A b \\<in> A\n  prev_in A b < b\n  A \\<inter> {prev_in A b<..<b} = {}\n  next_in A (prev_in A b) \\<in> A\n  prev_in A b < next_in A (prev_in A b)\n  A \\<inter> {prev_in A b<..<next_in A (prev_in A b)} = {}\n  A \\<subseteq> {a..b}\n\ngoal (1 subgoal):\n 1. next_in A (prev_in A b) = b", "by force"], ["proof (state)\nthis:\n  next_in A u = b\n\ngoal (3 subgoals):\n 1. x = b \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)\n 2. x \\<in> A - {b} \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)\n 3. x \\<notin> A \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "then"], ["proof (chain)\npicking this:\n  next_in A u = b", "have \"x \\<in> {u..next_in A u}\""], ["proof (prove)\nusing this:\n  next_in A u = b\n\ngoal (1 subgoal):\n 1. x \\<in> {u..next_in A u}", "unfolding 1"], ["proof (prove)\nusing this:\n  next_in A u = b\n\ngoal (1 subgoal):\n 1. b \\<in> {u..next_in A u}", "using prev_in_basics[OF \\<open>b \\<in> {a<..b}\\<close>] u_def"], ["proof (prove)\nusing this:\n  next_in A u = b\n  prev_in A b \\<in> A\n  prev_in A b < b\n  A \\<inter> {prev_in A b<..<b} = {}\n  u = prev_in A b\n\ngoal (1 subgoal):\n 1. b \\<in> {u..next_in A u}", "by auto"], ["proof (state)\nthis:\n  x \\<in> {u..next_in A u}\n\ngoal (3 subgoals):\n 1. x = b \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)\n 2. x \\<in> A - {b} \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)\n 3. x \\<notin> A \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "then"], ["proof (chain)\npicking this:\n  x \\<in> {u..next_in A u}", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> {u..next_in A u}\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "using \\<open>u \\<in> A - {b}\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> {u..next_in A u}\n  u \\<in> A - {b}\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "by auto"], ["proof (state)\nthis:\n  x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)\n\ngoal (2 subgoals):\n 1. x \\<in> A - {b} \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)\n 2. x \\<notin> A \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> A - {b} \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)\n 2. x \\<notin> A \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "case 2"], ["proof (state)\nthis:\n  x \\<in> A - {b}\n\ngoal (2 subgoals):\n 1. x \\<in> A - {b} \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)\n 2. x \\<notin> A \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "then"], ["proof (chain)\npicking this:\n  x \\<in> A - {b}", "have \"x \\<in> {a..<b}\""], ["proof (prove)\nusing this:\n  x \\<in> A - {b}\n\ngoal (1 subgoal):\n 1. x \\<in> {a..<b}", "using \\<open>A \\<subseteq> {a..b}\\<close> \\<open>a < b\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> A - {b}\n  A \\<subseteq> {a..b}\n  a < b\n\ngoal (1 subgoal):\n 1. x \\<in> {a..<b}", "by fastforce"], ["proof (state)\nthis:\n  x \\<in> {a..<b}\n\ngoal (2 subgoals):\n 1. x \\<in> A - {b} \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)\n 2. x \\<notin> A \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "have \"x \\<in> {x.. next_in A x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {x..next_in A x}", "using next_in_basics[OF \\<open>x \\<in> {a..<b}\\<close>]"], ["proof (prove)\nusing this:\n  next_in A x \\<in> A\n  x < next_in A x\n  A \\<inter> {x<..<next_in A x} = {}\n\ngoal (1 subgoal):\n 1. x \\<in> {x..next_in A x}", "by auto"], ["proof (state)\nthis:\n  x \\<in> {x..next_in A x}\n\ngoal (2 subgoals):\n 1. x \\<in> A - {b} \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)\n 2. x \\<notin> A \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "then"], ["proof (chain)\npicking this:\n  x \\<in> {x..next_in A x}", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> {x..next_in A x}\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "using 2"], ["proof (prove)\nusing this:\n  x \\<in> {x..next_in A x}\n  x \\<in> A - {b}\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "by auto"], ["proof (state)\nthis:\n  x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)\n\ngoal (1 subgoal):\n 1. x \\<notin> A \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> A \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "case 3"], ["proof (state)\nthis:\n  x \\<notin> A\n\ngoal (1 subgoal):\n 1. x \\<notin> A \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "then"], ["proof (chain)\npicking this:\n  x \\<notin> A", "have \"x \\<in> {a<..b}\""], ["proof (prove)\nusing this:\n  x \\<notin> A\n\ngoal (1 subgoal):\n 1. x \\<in> {a<..b}", "using that \\<open>a \\<in> A\\<close> leI"], ["proof (prove)\nusing this:\n  x \\<notin> A\n  x \\<in> {a..b}\n  a \\<in> A\n  \\<not> ?x < ?y \\<Longrightarrow> ?y \\<le> ?x\n\ngoal (1 subgoal):\n 1. x \\<in> {a<..b}", "by fastforce"], ["proof (state)\nthis:\n  x \\<in> {a<..b}\n\ngoal (1 subgoal):\n 1. x \\<notin> A \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "define u where \"u = prev_in A x\""], ["proof (state)\nthis:\n  u = prev_in A x\n\ngoal (1 subgoal):\n 1. x \\<notin> A \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "have \"u \\<in> A - {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> A - {b}", "unfolding u_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. prev_in A x \\<in> A - {b}", "using prev_in_basics[OF \\<open>x \\<in> {a<..b}\\<close>] that"], ["proof (prove)\nusing this:\n  prev_in A x \\<in> A\n  prev_in A x < x\n  A \\<inter> {prev_in A x<..<x} = {}\n  x \\<in> {a..b}\n\ngoal (1 subgoal):\n 1. prev_in A x \\<in> A - {b}", "by auto"], ["proof (state)\nthis:\n  u \\<in> A - {b}\n\ngoal (1 subgoal):\n 1. x \\<notin> A \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "then"], ["proof (chain)\npicking this:\n  u \\<in> A - {b}", "have \"u \\<in> {a..<b}\""], ["proof (prove)\nusing this:\n  u \\<in> A - {b}\n\ngoal (1 subgoal):\n 1. u \\<in> {a..<b}", "using \\<open>A \\<subseteq> {a..b}\\<close> \\<open>a < b\\<close>"], ["proof (prove)\nusing this:\n  u \\<in> A - {b}\n  A \\<subseteq> {a..b}\n  a < b\n\ngoal (1 subgoal):\n 1. u \\<in> {a..<b}", "by fastforce"], ["proof (state)\nthis:\n  u \\<in> {a..<b}\n\ngoal (1 subgoal):\n 1. x \\<notin> A \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "have \"x \\<in> {u..next_in A u}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {u..next_in A u}", "using prev_in_basics[OF \\<open>x \\<in> {a<..b}\\<close>] next_in_basics[OF \\<open>u \\<in> {a..<b}\\<close>]"], ["proof (prove)\nusing this:\n  prev_in A x \\<in> A\n  prev_in A x < x\n  A \\<inter> {prev_in A x<..<x} = {}\n  next_in A u \\<in> A\n  u < next_in A u\n  A \\<inter> {u<..<next_in A u} = {}\n\ngoal (1 subgoal):\n 1. x \\<in> {u..next_in A u}", "unfolding u_def"], ["proof (prove)\nusing this:\n  prev_in A x \\<in> A\n  prev_in A x < x\n  A \\<inter> {prev_in A x<..<x} = {}\n  next_in A (prev_in A x) \\<in> A\n  prev_in A x < next_in A (prev_in A x)\n  A \\<inter> {prev_in A x<..<next_in A (prev_in A x)} = {}\n\ngoal (1 subgoal):\n 1. x \\<in> {prev_in A x..next_in A (prev_in A x)}", "by auto"], ["proof (state)\nthis:\n  x \\<in> {u..next_in A u}\n\ngoal (1 subgoal):\n 1. x \\<notin> A \\<Longrightarrow>\n    x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "then"], ["proof (chain)\npicking this:\n  x \\<in> {u..next_in A u}", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> {u..next_in A u}\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "using \\<open>u \\<in> A - {b}\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> {u..next_in A u}\n  u \\<in> A - {b}\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "by auto"], ["proof (state)\nthis:\n  x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x \\<in> {a..b} \\<Longrightarrow>\n  ?x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)\n\ngoal (1 subgoal):\n 1. {a..b}\n    \\<subseteq> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "then"], ["proof (chain)\npicking this:\n  ?x \\<in> {a..b} \\<Longrightarrow>\n  ?x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "show \"{a..b} \\<subseteq> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)\""], ["proof (prove)\nusing this:\n  ?x \\<in> {a..b} \\<Longrightarrow>\n  ?x \\<in> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)\n\ngoal (1 subgoal):\n 1. {a..b}\n    \\<subseteq> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)", "by auto"], ["proof (state)\nthis:\n  {a..b}\n  \\<subseteq> (\\<Union>U\\<in>{{u..next_in A u} |u. u \\<in> A - {b}}. U)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "text \\<open>If one inserts an additional element, then next and previous elements are not modified,\nexcept at the location of the insertion.\\<close>"], ["", "lemma next_in_insert:\n  assumes A: \"finite A\" \"A \\<subseteq> {a..b}\" \"a \\<in> A\" \"b \\<in> A\" \"a < b\"\n      and \"x \\<in> {a..b} - A\"\n  shows \"\\<And>u. u \\<in> A - {b, prev_in A x} \\<Longrightarrow> next_in (insert x A) u = next_in A u\"\n        \"next_in (insert x A) x = next_in A x\"\n        \"next_in (insert x A) (prev_in A x) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u.\n        u \\<in> A - {b, prev_in A x} \\<Longrightarrow>\n        next_in (insert x A) u = next_in A u) &&&\n    next_in (insert x A) x = next_in A x &&&\n    next_in (insert x A) (prev_in A x) = x", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>u.\n       u \\<in> A - {b, prev_in A x} \\<Longrightarrow>\n       next_in (insert x A) u = next_in A u\n 2. next_in (insert x A) x = next_in A x\n 3. next_in (insert x A) (prev_in A x) = x", "define B where \"B = insert x A\""], ["proof (state)\nthis:\n  B = insert x A\n\ngoal (3 subgoals):\n 1. \\<And>u.\n       u \\<in> A - {b, prev_in A x} \\<Longrightarrow>\n       next_in (insert x A) u = next_in A u\n 2. next_in (insert x A) x = next_in A x\n 3. next_in (insert x A) (prev_in A x) = x", "have B: \"finite B\" \"B \\<subseteq> {a..b}\" \"a \\<in> B\" \"b \\<in> B\" \"a < b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (finite B &&& B \\<subseteq> {a..b}) &&&\n    a \\<in> B &&& b \\<in> B &&& a < b", "using assms"], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> {a..b}\n  a \\<in> A\n  b \\<in> A\n  a < b\n  x \\<in> {a..b} - A\n\ngoal (1 subgoal):\n 1. (finite B &&& B \\<subseteq> {a..b}) &&&\n    a \\<in> B &&& b \\<in> B &&& a < b", "unfolding B_def"], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> {a..b}\n  a \\<in> A\n  b \\<in> A\n  a < b\n  x \\<in> {a..b} - A\n\ngoal (1 subgoal):\n 1. (finite (insert x A) &&& insert x A \\<subseteq> {a..b}) &&&\n    a \\<in> insert x A &&& b \\<in> insert x A &&& a < b", "by auto"], ["proof (state)\nthis:\n  finite B\n  B \\<subseteq> {a..b}\n  a \\<in> B\n  b \\<in> B\n  a < b\n\ngoal (3 subgoals):\n 1. \\<And>u.\n       u \\<in> A - {b, prev_in A x} \\<Longrightarrow>\n       next_in (insert x A) u = next_in A u\n 2. next_in (insert x A) x = next_in A x\n 3. next_in (insert x A) (prev_in A x) = x", "have x: \"x \\<in> {a..<b}\" \"x \\<in> {a<..b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {a..<b} &&& x \\<in> {a<..b}", "using assms leI"], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> {a..b}\n  a \\<in> A\n  b \\<in> A\n  a < b\n  x \\<in> {a..b} - A\n  \\<not> ?x < ?y \\<Longrightarrow> ?y \\<le> ?x\n\ngoal (1 subgoal):\n 1. x \\<in> {a..<b} &&& x \\<in> {a<..b}", "by fastforce+"], ["proof (state)\nthis:\n  x \\<in> {a..<b}\n  x \\<in> {a<..b}\n\ngoal (3 subgoals):\n 1. \\<And>u.\n       u \\<in> A - {b, prev_in A x} \\<Longrightarrow>\n       next_in (insert x A) u = next_in A u\n 2. next_in (insert x A) x = next_in A x\n 3. next_in (insert x A) (prev_in A x) = x", "show \"next_in B x = next_in A x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next_in B x = next_in A x", "unfolding B_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. next_in (insert x A) x = next_in A x", "by (auto simp add: next_in_def)"], ["proof (state)\nthis:\n  next_in B x = next_in A x\n\ngoal (2 subgoals):\n 1. \\<And>u.\n       u \\<in> A - {b, prev_in A x} \\<Longrightarrow>\n       next_in (insert x A) u = next_in A u\n 2. next_in (insert x A) (prev_in A x) = x", "show \"next_in B (prev_in A x) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next_in B (prev_in A x) = x", "apply (rule next_inI[OF B])"], ["proof (prove)\ngoal (4 subgoals):\n 1. prev_in A x \\<in> {a..<b}\n 2. x \\<in> B\n 3. prev_in A x < x\n 4. {prev_in A x<..<x} \\<inter> B = {}", "unfolding B_def"], ["proof (prove)\ngoal (4 subgoals):\n 1. prev_in A x \\<in> {a..<b}\n 2. x \\<in> insert x A\n 3. prev_in A x < x\n 4. {prev_in A x<..<x} \\<inter> insert x A = {}", "using prev_in_basics[OF A \\<open>x \\<in> {a<..b}\\<close>] \\<open>A \\<subseteq> {a..b}\\<close> x"], ["proof (prove)\nusing this:\n  prev_in A x \\<in> A\n  prev_in A x < x\n  A \\<inter> {prev_in A x<..<x} = {}\n  A \\<subseteq> {a..b}\n  x \\<in> {a..<b}\n  x \\<in> {a<..b}\n\ngoal (4 subgoals):\n 1. prev_in A x \\<in> {a..<b}\n 2. x \\<in> insert x A\n 3. prev_in A x < x\n 4. {prev_in A x<..<x} \\<inter> insert x A = {}", "by auto"], ["proof (state)\nthis:\n  next_in B (prev_in A x) = x\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       u \\<in> A - {b, prev_in A x} \\<Longrightarrow>\n       next_in (insert x A) u = next_in A u", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       u \\<in> A - {b, prev_in A x} \\<Longrightarrow>\n       next_in (insert x A) u = next_in A u", "assume \"u \\<in> A - {b, prev_in A x}\""], ["proof (state)\nthis:\n  u \\<in> A - {b, prev_in A x}\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       u \\<in> A - {b, prev_in A x} \\<Longrightarrow>\n       next_in (insert x A) u = next_in A u", "then"], ["proof (chain)\npicking this:\n  u \\<in> A - {b, prev_in A x}", "have \"u \\<in> {a..<b}\""], ["proof (prove)\nusing this:\n  u \\<in> A - {b, prev_in A x}\n\ngoal (1 subgoal):\n 1. u \\<in> {a..<b}", "using assms"], ["proof (prove)\nusing this:\n  u \\<in> A - {b, prev_in A x}\n  finite A\n  A \\<subseteq> {a..b}\n  a \\<in> A\n  b \\<in> A\n  a < b\n  x \\<in> {a..b} - A\n\ngoal (1 subgoal):\n 1. u \\<in> {a..<b}", "by fastforce"], ["proof (state)\nthis:\n  u \\<in> {a..<b}\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       u \\<in> A - {b, prev_in A x} \\<Longrightarrow>\n       next_in (insert x A) u = next_in A u", "have \"x \\<notin> {u<..<next_in A u}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> {u<..<next_in A u}", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> x \\<notin> {u<..<next_in A u} \\<Longrightarrow> False", "assume \"\\<not>(x \\<notin> {u<..<next_in A u})\""], ["proof (state)\nthis:\n  \\<not> x \\<notin> {u<..<next_in A u}\n\ngoal (1 subgoal):\n 1. \\<not> x \\<notin> {u<..<next_in A u} \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> x \\<notin> {u<..<next_in A u}", "have *: \"x \\<in> {u<..<next_in A u}\""], ["proof (prove)\nusing this:\n  \\<not> x \\<notin> {u<..<next_in A u}\n\ngoal (1 subgoal):\n 1. x \\<in> {u<..<next_in A u}", "by auto"], ["proof (state)\nthis:\n  x \\<in> {u<..<next_in A u}\n\ngoal (1 subgoal):\n 1. \\<not> x \\<notin> {u<..<next_in A u} \\<Longrightarrow> False", "have \"prev_in A x = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prev_in A x = u", "apply (rule prev_inI[OF A \\<open>x \\<in> {a<..b}\\<close>])"], ["proof (prove)\ngoal (3 subgoals):\n 1. u \\<in> A\n 2. u < x\n 3. {u<..<x} \\<inter> A = {}", "using \\<open>u \\<in> A - {b, prev_in A x}\\<close> * next_in_basics[OF A \\<open>u \\<in> {a..<b}\\<close>]"], ["proof (prove)\nusing this:\n  u \\<in> A - {b, prev_in A x}\n  x \\<in> {u<..<next_in A u}\n  next_in A u \\<in> A\n  u < next_in A u\n  A \\<inter> {u<..<next_in A u} = {}\n\ngoal (3 subgoals):\n 1. u \\<in> A\n 2. u < x\n 3. {u<..<x} \\<inter> A = {}", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>next_in A u \\<in> A; u < next_in A u;\n        A \\<inter> {u<..<next_in A u} = {}; u \\<in> A; u < x;\n        x < next_in A u; u \\<noteq> b; u \\<noteq> prev_in A x; xa \\<in> A;\n        u < xa; xa < x\\<rbrakk>\n       \\<Longrightarrow> False", "by (meson disjoint_iff_not_equal greaterThanLessThan_iff less_trans)"], ["proof (state)\nthis:\n  prev_in A x = u\n\ngoal (1 subgoal):\n 1. \\<not> x \\<notin> {u<..<next_in A u} \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  prev_in A x = u", "show False"], ["proof (prove)\nusing this:\n  prev_in A x = u\n\ngoal (1 subgoal):\n 1. False", "using \\<open>u \\<in> A - {b, prev_in A x}\\<close>"], ["proof (prove)\nusing this:\n  prev_in A x = u\n  u \\<in> A - {b, prev_in A x}\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<notin> {u<..<next_in A u}\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       u \\<in> A - {b, prev_in A x} \\<Longrightarrow>\n       next_in (insert x A) u = next_in A u", "show \"next_in B u = next_in A u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next_in B u = next_in A u", "apply (rule next_inI[OF B \\<open>u \\<in> {a..<b}\\<close>])"], ["proof (prove)\ngoal (3 subgoals):\n 1. next_in A u \\<in> B\n 2. u < next_in A u\n 3. {u<..<next_in A u} \\<inter> B = {}", "unfolding B_def"], ["proof (prove)\ngoal (3 subgoals):\n 1. next_in A u \\<in> insert x A\n 2. u < next_in A u\n 3. {u<..<next_in A u} \\<inter> insert x A = {}", "using next_in_basics[OF A \\<open>u \\<in> {a..<b}\\<close>] \\<open>x \\<notin> {u<..<next_in A u}\\<close>"], ["proof (prove)\nusing this:\n  next_in A u \\<in> A\n  u < next_in A u\n  A \\<inter> {u<..<next_in A u} = {}\n  x \\<notin> {u<..<next_in A u}\n\ngoal (3 subgoals):\n 1. next_in A u \\<in> insert x A\n 2. u < next_in A u\n 3. {u<..<next_in A u} \\<inter> insert x A = {}", "by auto"], ["proof (state)\nthis:\n  next_in B u = next_in A u\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If consecutive elements are enough separated, this implies a simple bound on the\ncardinality of the set.\\<close>"], ["", "lemma separated_in_real_card_bound2:\n  fixes A::\"real set\"\n  assumes A: \"finite A\" \"A \\<subseteq> {a..b}\" \"a \\<in> A\" \"b \\<in> A\" \"a < b\"\n      and B: \"\\<And>u. u \\<in> A - {b} \\<Longrightarrow> next_in A u \\<ge> u + d\" \"d > 0\"\n  shows \"card A \\<le> nat (floor ((b-a)/d) + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card A \\<le> nat (\\<lfloor>(b - a) / d\\<rfloor> + 1)", "proof (rule separated_in_real_card_bound[OF \\<open>A \\<subseteq> {a..b}\\<close> \\<open>d > 0\\<close>])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A; x < y\\<rbrakk>\n       \\<Longrightarrow> x + d \\<le> y", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A; x < y\\<rbrakk>\n       \\<Longrightarrow> x + d \\<le> y", "assume \"x \\<in> A\" \"y \\<in> A\" \"y > x\""], ["proof (state)\nthis:\n  x \\<in> A\n  y \\<in> A\n  x < y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A; x < y\\<rbrakk>\n       \\<Longrightarrow> x + d \\<le> y", "then"], ["proof (chain)\npicking this:\n  x \\<in> A\n  y \\<in> A\n  x < y", "have \"x \\<in> A - {b}\" \"x \\<in> {a..<b}\""], ["proof (prove)\nusing this:\n  x \\<in> A\n  y \\<in> A\n  x < y\n\ngoal (1 subgoal):\n 1. x \\<in> A - {b} &&& x \\<in> {a..<b}", "using \\<open>A \\<subseteq> {a..b}\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> A\n  y \\<in> A\n  x < y\n  A \\<subseteq> {a..b}\n\ngoal (1 subgoal):\n 1. x \\<in> A - {b} &&& x \\<in> {a..<b}", "by auto"], ["proof (state)\nthis:\n  x \\<in> A - {b}\n  x \\<in> {a..<b}\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A; x < y\\<rbrakk>\n       \\<Longrightarrow> x + d \\<le> y", "have \"y \\<ge> next_in A x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next_in A x \\<le> y", "using next_in_basics[OF A \\<open>x \\<in> {a..<b}\\<close>] \\<open>y \\<in> A\\<close> \\<open>y > x\\<close>"], ["proof (prove)\nusing this:\n  next_in A x \\<in> A\n  x < next_in A x\n  A \\<inter> {x<..<next_in A x} = {}\n  y \\<in> A\n  x < y\n\ngoal (1 subgoal):\n 1. next_in A x \\<le> y", "by auto"], ["proof (state)\nthis:\n  next_in A x \\<le> y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A; x < y\\<rbrakk>\n       \\<Longrightarrow> x + d \\<le> y", "then"], ["proof (chain)\npicking this:\n  next_in A x \\<le> y", "show \"y \\<ge> x + d\""], ["proof (prove)\nusing this:\n  next_in A x \\<le> y\n\ngoal (1 subgoal):\n 1. x + d \\<le> y", "using B(1)[OF \\<open>x \\<in> A - {b}\\<close>]"], ["proof (prove)\nusing this:\n  next_in A x \\<le> y\n  x + d \\<le> next_in A x\n\ngoal (1 subgoal):\n 1. x + d \\<le> y", "by auto"], ["proof (state)\nthis:\n  x + d \\<le> y\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Well-orders\\<close>"], ["", "text \\<open>In this subsection, we give additional lemmas on well-orders or cardinals or whatever,\nthat would well belong to the library, and will be needed below.\\<close>"], ["", "lemma (in wo_rel) max2_underS [simp]:\n  assumes \"x \\<in> underS z\" \"y \\<in> underS z\"\n  shows \"max2 x y \\<in> underS z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.max2 x y \\<in> local.underS z", "using assms max2_def"], ["proof (prove)\nusing this:\n  x \\<in> local.underS z\n  y \\<in> local.underS z\n  local.max2 ?a ?b \\<equiv> if (?a, ?b) \\<in> r then ?b else ?a\n\ngoal (1 subgoal):\n 1. local.max2 x y \\<in> local.underS z", "by auto"], ["", "lemma (in wo_rel) max2_underS' [simp]:\n  assumes \"x \\<in> underS y\"\n  shows \"max2 x y = y\" \"max2 y x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.max2 x y = y &&& local.max2 y x = y", "apply (simp add: underS_E assms max2_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.max2 y x = y", "using assms max2_def ANTISYM antisym_def underS_E"], ["proof (prove)\nusing this:\n  x \\<in> local.underS y\n  local.max2 ?a ?b \\<equiv> if (?a, ?b) \\<in> r then ?b else ?a\n  antisym r\n  antisym ?r =\n  (\\<forall>x y.\n      (x, y) \\<in> ?r \\<longrightarrow>\n      (y, x) \\<in> ?r \\<longrightarrow> x = y)\n  ?i \\<in> Order_Relation.underS ?R ?j \\<Longrightarrow>\n  ?i \\<noteq> ?j \\<and> (?i, ?j) \\<in> ?R\n\ngoal (1 subgoal):\n 1. local.max2 y x = y", "by fastforce"], ["", "lemma (in wo_rel) max2_xx [simp]:\n  \"max2 x x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.max2 x x = x", "using max2_def"], ["proof (prove)\nusing this:\n  local.max2 ?a ?b \\<equiv> if (?a, ?b) \\<in> r then ?b else ?a\n\ngoal (1 subgoal):\n 1. local.max2 x x = x", "by auto"], ["", "declare underS_notIn [simp]"], ["", "text \\<open>The abbrevation $=o$ is used both in \\verb+Set_Algebras+ and Cardinals.\nWe disable the one from \\verb+Set_Algebras+.\\<close>"], ["", "no_notation elt_set_eq (infix \"=o\" 50)"], ["", "lemma regularCard_ordIso:\n  assumes \"Card_order r\" \"regularCard r\" \"s =o r\"\n  shows \"regularCard s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. regularCard s", "unfolding regularCard_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>K.\n       K \\<subseteq> Field s \\<and> cofinal K s \\<longrightarrow> |K| =o s", "proof (auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>K.\n       \\<lbrakk>K \\<subseteq> Field s; cofinal K s\\<rbrakk>\n       \\<Longrightarrow> |K| =o s", "fix K"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>K.\n       \\<lbrakk>K \\<subseteq> Field s; cofinal K s\\<rbrakk>\n       \\<Longrightarrow> |K| =o s", "assume K: \"K \\<subseteq> Field s\" \"cofinal K s\""], ["proof (state)\nthis:\n  K \\<subseteq> Field s\n  cofinal K s\n\ngoal (1 subgoal):\n 1. \\<And>K.\n       \\<lbrakk>K \\<subseteq> Field s; cofinal K s\\<rbrakk>\n       \\<Longrightarrow> |K| =o s", "obtain f where f: \"bij_betw f (Field s) (Field r)\" \"embed s r f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>bij_betw f (Field s) (Field r); embed s r f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>s =o r\\<close>"], ["proof (prove)\nusing this:\n  s =o r\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>bij_betw f (Field s) (Field r); embed s r f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding ordIso_def iso_def"], ["proof (prove)\nusing this:\n  (s, r)\n  \\<in> {(r, r').\n         Well_order r \\<and>\n         Well_order r' \\<and>\n         (\\<exists>f. embed r r' f \\<and> bij_betw f (Field r) (Field r'))}\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>bij_betw f (Field s) (Field r); embed s r f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  bij_betw f (Field s) (Field r)\n  embed s r f\n\ngoal (1 subgoal):\n 1. \\<And>K.\n       \\<lbrakk>K \\<subseteq> Field s; cofinal K s\\<rbrakk>\n       \\<Longrightarrow> |K| =o s", "have \"f`K \\<subseteq> Field r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` K \\<subseteq> Field r", "using K(1) f(1) bij_betw_imp_surj_on"], ["proof (prove)\nusing this:\n  K \\<subseteq> Field s\n  bij_betw f (Field s) (Field r)\n  bij_betw ?f ?A ?B \\<Longrightarrow> ?f ` ?A = ?B\n\ngoal (1 subgoal):\n 1. f ` K \\<subseteq> Field r", "by blast"], ["proof (state)\nthis:\n  f ` K \\<subseteq> Field r\n\ngoal (1 subgoal):\n 1. \\<And>K.\n       \\<lbrakk>K \\<subseteq> Field s; cofinal K s\\<rbrakk>\n       \\<Longrightarrow> |K| =o s", "have \"cofinal (f`K) r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cofinal (f ` K) r", "unfolding cofinal_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>Field r.\n       \\<exists>b\\<in>f ` K. a \\<noteq> b \\<and> (a, b) \\<in> r", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> Field r \\<Longrightarrow>\n       \\<exists>b\\<in>f ` K. a \\<noteq> b \\<and> (a, b) \\<in> r", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> Field r \\<Longrightarrow>\n       \\<exists>b\\<in>f ` K. a \\<noteq> b \\<and> (a, b) \\<in> r", "assume \"a \\<in> Field r\""], ["proof (state)\nthis:\n  a \\<in> Field r\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> Field r \\<Longrightarrow>\n       \\<exists>b\\<in>f ` K. a \\<noteq> b \\<and> (a, b) \\<in> r", "then"], ["proof (chain)\npicking this:\n  a \\<in> Field r", "obtain a' where a: \"a' \\<in> Field s\" \"f a' = a\""], ["proof (prove)\nusing this:\n  a \\<in> Field r\n\ngoal (1 subgoal):\n 1. (\\<And>a'.\n        \\<lbrakk>a' \\<in> Field s; f a' = a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using f"], ["proof (prove)\nusing this:\n  a \\<in> Field r\n  bij_betw f (Field s) (Field r)\n  embed s r f\n\ngoal (1 subgoal):\n 1. (\\<And>a'.\n        \\<lbrakk>a' \\<in> Field s; f a' = a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis bij_betw_imp_surj_on imageE)"], ["proof (state)\nthis:\n  a' \\<in> Field s\n  f a' = a\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> Field r \\<Longrightarrow>\n       \\<exists>b\\<in>f ` K. a \\<noteq> b \\<and> (a, b) \\<in> r", "then"], ["proof (chain)\npicking this:\n  a' \\<in> Field s\n  f a' = a", "obtain b' where b: \"b' \\<in> K\" \"a' \\<noteq> b' \\<and> (a', b') \\<in> s\""], ["proof (prove)\nusing this:\n  a' \\<in> Field s\n  f a' = a\n\ngoal (1 subgoal):\n 1. (\\<And>b'.\n        \\<lbrakk>b' \\<in> K; a' \\<noteq> b' \\<and> (a', b') \\<in> s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>cofinal K s\\<close>"], ["proof (prove)\nusing this:\n  a' \\<in> Field s\n  f a' = a\n  cofinal K s\n\ngoal (1 subgoal):\n 1. (\\<And>b'.\n        \\<lbrakk>b' \\<in> K; a' \\<noteq> b' \\<and> (a', b') \\<in> s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding cofinal_def"], ["proof (prove)\nusing this:\n  a' \\<in> Field s\n  f a' = a\n  \\<forall>a\\<in>Field s.\n     \\<exists>b\\<in>K. a \\<noteq> b \\<and> (a, b) \\<in> s\n\ngoal (1 subgoal):\n 1. (\\<And>b'.\n        \\<lbrakk>b' \\<in> K; a' \\<noteq> b' \\<and> (a', b') \\<in> s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  b' \\<in> K\n  a' \\<noteq> b' \\<and> (a', b') \\<in> s\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> Field r \\<Longrightarrow>\n       \\<exists>b\\<in>f ` K. a \\<noteq> b \\<and> (a, b) \\<in> r", "have P1: \"f b' \\<in> f`K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f b' \\<in> f ` K", "using b(1)"], ["proof (prove)\nusing this:\n  b' \\<in> K\n\ngoal (1 subgoal):\n 1. f b' \\<in> f ` K", "by auto"], ["proof (state)\nthis:\n  f b' \\<in> f ` K\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> Field r \\<Longrightarrow>\n       \\<exists>b\\<in>f ` K. a \\<noteq> b \\<and> (a, b) \\<in> r", "have \"a' \\<noteq> b'\" \"a' \\<in> Field s\" \"b' \\<in> Field s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a' \\<noteq> b' &&& a' \\<in> Field s &&& b' \\<in> Field s", "using a(1) b K(1)"], ["proof (prove)\nusing this:\n  a' \\<in> Field s\n  b' \\<in> K\n  a' \\<noteq> b' \\<and> (a', b') \\<in> s\n  K \\<subseteq> Field s\n\ngoal (1 subgoal):\n 1. a' \\<noteq> b' &&& a' \\<in> Field s &&& b' \\<in> Field s", "by auto"], ["proof (state)\nthis:\n  a' \\<noteq> b'\n  a' \\<in> Field s\n  b' \\<in> Field s\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> Field r \\<Longrightarrow>\n       \\<exists>b\\<in>f ` K. a \\<noteq> b \\<and> (a, b) \\<in> r", "then"], ["proof (chain)\npicking this:\n  a' \\<noteq> b'\n  a' \\<in> Field s\n  b' \\<in> Field s", "have P2: \"a \\<noteq> f b'\""], ["proof (prove)\nusing this:\n  a' \\<noteq> b'\n  a' \\<in> Field s\n  b' \\<in> Field s\n\ngoal (1 subgoal):\n 1. a \\<noteq> f b'", "unfolding a(2)[symmetric]"], ["proof (prove)\nusing this:\n  a' \\<noteq> b'\n  a' \\<in> Field s\n  b' \\<in> Field s\n\ngoal (1 subgoal):\n 1. f a' \\<noteq> f b'", "using f(1)"], ["proof (prove)\nusing this:\n  a' \\<noteq> b'\n  a' \\<in> Field s\n  b' \\<in> Field s\n  bij_betw f (Field s) (Field r)\n\ngoal (1 subgoal):\n 1. f a' \\<noteq> f b'", "unfolding bij_betw_def inj_on_def"], ["proof (prove)\nusing this:\n  a' \\<noteq> b'\n  a' \\<in> Field s\n  b' \\<in> Field s\n  (\\<forall>x\\<in>Field s.\n      \\<forall>y\\<in>Field s. f x = f y \\<longrightarrow> x = y) \\<and>\n  f ` Field s = Field r\n\ngoal (1 subgoal):\n 1. f a' \\<noteq> f b'", "by auto"], ["proof (state)\nthis:\n  a \\<noteq> f b'\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> Field r \\<Longrightarrow>\n       \\<exists>b\\<in>f ` K. a \\<noteq> b \\<and> (a, b) \\<in> r", "have \"(a', b') \\<in> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a', b') \\<in> s", "using b"], ["proof (prove)\nusing this:\n  b' \\<in> K\n  a' \\<noteq> b' \\<and> (a', b') \\<in> s\n\ngoal (1 subgoal):\n 1. (a', b') \\<in> s", "by auto"], ["proof (state)\nthis:\n  (a', b') \\<in> s\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> Field r \\<Longrightarrow>\n       \\<exists>b\\<in>f ` K. a \\<noteq> b \\<and> (a, b) \\<in> r", "then"], ["proof (chain)\npicking this:\n  (a', b') \\<in> s", "have P3: \"(a, f b') \\<in> r\""], ["proof (prove)\nusing this:\n  (a', b') \\<in> s\n\ngoal (1 subgoal):\n 1. (a, f b') \\<in> r", "unfolding a(2)[symmetric]"], ["proof (prove)\nusing this:\n  (a', b') \\<in> s\n\ngoal (1 subgoal):\n 1. (f a', f b') \\<in> r", "using f"], ["proof (prove)\nusing this:\n  (a', b') \\<in> s\n  bij_betw f (Field s) (Field r)\n  embed s r f\n\ngoal (1 subgoal):\n 1. (f a', f b') \\<in> r", "by (meson FieldI1 FieldI2 Card_order_ordIso[OF assms(1) assms(3)] card_order_on_def iso_defs(1) iso_iff2)"], ["proof (state)\nthis:\n  (a, f b') \\<in> r\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> Field r \\<Longrightarrow>\n       \\<exists>b\\<in>f ` K. a \\<noteq> b \\<and> (a, b) \\<in> r", "show \"\\<exists>b\\<in>f ` K. a \\<noteq> b \\<and> (a, b) \\<in> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>f ` K. a \\<noteq> b \\<and> (a, b) \\<in> r", "using P1 P2 P3"], ["proof (prove)\nusing this:\n  f b' \\<in> f ` K\n  a \\<noteq> f b'\n  (a, f b') \\<in> r\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>f ` K. a \\<noteq> b \\<and> (a, b) \\<in> r", "by blast"], ["proof (state)\nthis:\n  \\<exists>b\\<in>f ` K. a \\<noteq> b \\<and> (a, b) \\<in> r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cofinal (f ` K) r\n\ngoal (1 subgoal):\n 1. \\<And>K.\n       \\<lbrakk>K \\<subseteq> Field s; cofinal K s\\<rbrakk>\n       \\<Longrightarrow> |K| =o s", "then"], ["proof (chain)\npicking this:\n  cofinal (f ` K) r", "have \"|f`K| =o r\""], ["proof (prove)\nusing this:\n  cofinal (f ` K) r\n\ngoal (1 subgoal):\n 1. |f ` K| =o r", "using \\<open>regularCard r\\<close> \\<open>f`K \\<subseteq> Field r\\<close>"], ["proof (prove)\nusing this:\n  cofinal (f ` K) r\n  regularCard r\n  f ` K \\<subseteq> Field r\n\ngoal (1 subgoal):\n 1. |f ` K| =o r", "unfolding regularCard_def"], ["proof (prove)\nusing this:\n  cofinal (f ` K) r\n  \\<forall>K.\n     K \\<subseteq> Field r \\<and> cofinal K r \\<longrightarrow> |K| =o r\n  f ` K \\<subseteq> Field r\n\ngoal (1 subgoal):\n 1. |f ` K| =o r", "by auto"], ["proof (state)\nthis:\n  |f ` K| =o r\n\ngoal (1 subgoal):\n 1. \\<And>K.\n       \\<lbrakk>K \\<subseteq> Field s; cofinal K s\\<rbrakk>\n       \\<Longrightarrow> |K| =o s", "moreover"], ["proof (state)\nthis:\n  |f ` K| =o r\n\ngoal (1 subgoal):\n 1. \\<And>K.\n       \\<lbrakk>K \\<subseteq> Field s; cofinal K s\\<rbrakk>\n       \\<Longrightarrow> |K| =o s", "have \"|f`K| =o |K|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |f ` K| =o |K|", "using f(1) K(1)"], ["proof (prove)\nusing this:\n  bij_betw f (Field s) (Field r)\n  K \\<subseteq> Field s\n\ngoal (1 subgoal):\n 1. |f ` K| =o |K|", "by (meson bij_betw_subset card_of_ordIsoI ordIso_symmetric)"], ["proof (state)\nthis:\n  |f ` K| =o |K|\n\ngoal (1 subgoal):\n 1. \\<And>K.\n       \\<lbrakk>K \\<subseteq> Field s; cofinal K s\\<rbrakk>\n       \\<Longrightarrow> |K| =o s", "ultimately"], ["proof (chain)\npicking this:\n  |f ` K| =o r\n  |f ` K| =o |K|", "show \"|K| =o s\""], ["proof (prove)\nusing this:\n  |f ` K| =o r\n  |f ` K| =o |K|\n\ngoal (1 subgoal):\n 1. |K| =o s", "using \\<open>s =o r\\<close>"], ["proof (prove)\nusing this:\n  |f ` K| =o r\n  |f ` K| =o |K|\n  s =o r\n\ngoal (1 subgoal):\n 1. |K| =o s", "by (meson ordIso_symmetric ordIso_transitive)"], ["proof (state)\nthis:\n  |K| =o s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma AboveS_not_empty_in_regularCard:\n  assumes \"|S| <o r\" \"S \\<subseteq> Field r\"\n  assumes r: \"Card_order r\" \"regularCard r\" \"\\<not>finite (Field r)\"\n  shows \"AboveS r S \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AboveS r S \\<noteq> {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. AboveS r S \\<noteq> {}", "have \"\\<not>(cofinal S r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> cofinal S r", "using assms not_ordLess_ordIso"], ["proof (prove)\nusing this:\n  |S| <o r\n  S \\<subseteq> Field r\n  Card_order r\n  regularCard r\n  infinite (Field r)\n  ?r <o ?r' \\<Longrightarrow> (?r, ?r') \\<notin> ordIso\n\ngoal (1 subgoal):\n 1. \\<not> cofinal S r", "unfolding regularCard_def"], ["proof (prove)\nusing this:\n  |S| <o r\n  S \\<subseteq> Field r\n  Card_order r\n  \\<forall>K.\n     K \\<subseteq> Field r \\<and> cofinal K r \\<longrightarrow> |K| =o r\n  infinite (Field r)\n  ?r <o ?r' \\<Longrightarrow> (?r, ?r') \\<notin> ordIso\n\ngoal (1 subgoal):\n 1. \\<not> cofinal S r", "by auto"], ["proof (state)\nthis:\n  \\<not> cofinal S r\n\ngoal (1 subgoal):\n 1. AboveS r S \\<noteq> {}", "then"], ["proof (chain)\npicking this:\n  \\<not> cofinal S r", "obtain a where a: \"a \\<in> Field r\" \"\\<forall>b\\<in>S. \\<not>(a \\<noteq> b \\<and> (a,b) \\<in> r)\""], ["proof (prove)\nusing this:\n  \\<not> cofinal S r\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in> Field r;\n         \\<forall>b\\<in>S.\n            \\<not> (a \\<noteq> b \\<and> (a, b) \\<in> r)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding cofinal_def"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>a\\<in>Field r.\n             \\<exists>b\\<in>S. a \\<noteq> b \\<and> (a, b) \\<in> r)\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in> Field r;\n         \\<forall>b\\<in>S.\n            \\<not> (a \\<noteq> b \\<and> (a, b) \\<in> r)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a \\<in> Field r\n  \\<forall>b\\<in>S. \\<not> (a \\<noteq> b \\<and> (a, b) \\<in> r)\n\ngoal (1 subgoal):\n 1. AboveS r S \\<noteq> {}", "have *: \"a = b \\<or> (b, a) \\<in> r\" if \"b \\<in> S\" for b"], ["proof (prove)\ngoal (1 subgoal):\n 1. a = b \\<or> (b, a) \\<in> r", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a = b \\<or> (b, a) \\<in> r", "have \"a = b \\<or> (a,b) \\<notin> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a = b \\<or> (a, b) \\<notin> r", "using a that"], ["proof (prove)\nusing this:\n  a \\<in> Field r\n  \\<forall>b\\<in>S. \\<not> (a \\<noteq> b \\<and> (a, b) \\<in> r)\n  b \\<in> S\n\ngoal (1 subgoal):\n 1. a = b \\<or> (a, b) \\<notin> r", "by auto"], ["proof (state)\nthis:\n  a = b \\<or> (a, b) \\<notin> r\n\ngoal (1 subgoal):\n 1. a = b \\<or> (b, a) \\<in> r", "then"], ["proof (chain)\npicking this:\n  a = b \\<or> (a, b) \\<notin> r", "show ?thesis"], ["proof (prove)\nusing this:\n  a = b \\<or> (a, b) \\<notin> r\n\ngoal (1 subgoal):\n 1. a = b \\<or> (b, a) \\<in> r", "using \\<open>Card_order r\\<close> \\<open>a \\<in> Field r\\<close> \\<open>b \\<in> S\\<close> \\<open>S \\<subseteq> Field r\\<close>"], ["proof (prove)\nusing this:\n  a = b \\<or> (a, b) \\<notin> r\n  Card_order r\n  a \\<in> Field r\n  b \\<in> S\n  S \\<subseteq> Field r\n\ngoal (1 subgoal):\n 1. a = b \\<or> (b, a) \\<in> r", "unfolding card_order_on_def well_order_on_def linear_order_on_def total_on_def"], ["proof (prove)\nusing this:\n  a = b \\<or> (a, b) \\<notin> r\n  ((Partial_order r \\<and>\n    (\\<forall>x\\<in>Field r.\n        \\<forall>y\\<in>Field r.\n           x \\<noteq> y \\<longrightarrow>\n           (x, y) \\<in> r \\<or> (y, x) \\<in> r)) \\<and>\n   wf (r - Id)) \\<and>\n  (\\<forall>r'.\n      (partial_order_on (Field r) r' \\<and>\n       (\\<forall>x\\<in>Field r.\n           \\<forall>y\\<in>Field r.\n              x \\<noteq> y \\<longrightarrow>\n              (x, y) \\<in> r' \\<or> (y, x) \\<in> r')) \\<and>\n      wf (r' - Id) \\<longrightarrow>\n      r \\<le>o r')\n  a \\<in> Field r\n  b \\<in> S\n  S \\<subseteq> Field r\n\ngoal (1 subgoal):\n 1. a = b \\<or> (b, a) \\<in> r", "by auto"], ["proof (state)\nthis:\n  a = b \\<or> (b, a) \\<in> r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?b \\<in> S \\<Longrightarrow> a = ?b \\<or> (?b, a) \\<in> r\n\ngoal (1 subgoal):\n 1. AboveS r S \\<noteq> {}", "obtain c where \"c \\<in> Field r\" \"c \\<noteq> a\" \"(a, c) \\<in> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> Field r; c \\<noteq> a; (a, c) \\<in> r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using a(1) r infinite_Card_order_limit"], ["proof (prove)\nusing this:\n  a \\<in> Field r\n  Card_order r\n  regularCard r\n  infinite (Field r)\n  \\<lbrakk>Card_order ?r; infinite (Field ?r); ?a \\<in> Field ?r\\<rbrakk>\n  \\<Longrightarrow> \\<exists>b\\<in>Field ?r.\n                       ?a \\<noteq> b \\<and> (?a, b) \\<in> ?r\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> Field r; c \\<noteq> a; (a, c) \\<in> r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  c \\<in> Field r\n  c \\<noteq> a\n  (a, c) \\<in> r\n\ngoal (1 subgoal):\n 1. AboveS r S \\<noteq> {}", "then"], ["proof (chain)\npicking this:\n  c \\<in> Field r\n  c \\<noteq> a\n  (a, c) \\<in> r", "have \"c \\<in> AboveS r S\""], ["proof (prove)\nusing this:\n  c \\<in> Field r\n  c \\<noteq> a\n  (a, c) \\<in> r\n\ngoal (1 subgoal):\n 1. c \\<in> AboveS r S", "unfolding AboveS_def"], ["proof (prove)\nusing this:\n  c \\<in> Field r\n  c \\<noteq> a\n  (a, c) \\<in> r\n\ngoal (1 subgoal):\n 1. c \\<in> {b \\<in> Field r.\n             \\<forall>a\\<in>S. b \\<noteq> a \\<and> (a, b) \\<in> r}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c \\<in> Field r; c \\<noteq> a; (a, c) \\<in> r\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>S. c \\<noteq> a \\<and> (a, c) \\<in> r", "using Card_order_trans[OF r(1)]"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<noteq> ?y; (?x, ?y) \\<in> r; ?y \\<noteq> ?z;\n   (?y, ?z) \\<in> r\\<rbrakk>\n  \\<Longrightarrow> ?x \\<noteq> ?z \\<and> (?x, ?z) \\<in> r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c \\<in> Field r; c \\<noteq> a; (a, c) \\<in> r\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>S. c \\<noteq> a \\<and> (a, c) \\<in> r", "by (metis *)"], ["proof (state)\nthis:\n  c \\<in> AboveS r S\n\ngoal (1 subgoal):\n 1. AboveS r S \\<noteq> {}", "then"], ["proof (chain)\npicking this:\n  c \\<in> AboveS r S", "show ?thesis"], ["proof (prove)\nusing this:\n  c \\<in> AboveS r S\n\ngoal (1 subgoal):\n 1. AboveS r S \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  AboveS r S \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma AboveS_not_empty_in_regularCard':\n  assumes \"|S| <o r\" \"f`S \\<subseteq> Field r\" \"T \\<subseteq> S\"\n  assumes r: \"Card_order r\" \"regularCard r\" \"\\<not>finite (Field r)\"\n  shows \"AboveS r (f`T) \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AboveS r (f ` T) \\<noteq> {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. AboveS r (f ` T) \\<noteq> {}", "have \"|f`T| \\<le>o |T|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |f ` T| \\<le>o |T|", "by simp"], ["proof (state)\nthis:\n  |f ` T| \\<le>o |T|\n\ngoal (1 subgoal):\n 1. AboveS r (f ` T) \\<noteq> {}", "moreover"], ["proof (state)\nthis:\n  |f ` T| \\<le>o |T|\n\ngoal (1 subgoal):\n 1. AboveS r (f ` T) \\<noteq> {}", "have \"|T| \\<le>o |S|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |T| \\<le>o |S|", "using \\<open>T \\<subseteq> S\\<close>"], ["proof (prove)\nusing this:\n  T \\<subseteq> S\n\ngoal (1 subgoal):\n 1. |T| \\<le>o |S|", "by simp"], ["proof (state)\nthis:\n  |T| \\<le>o |S|\n\ngoal (1 subgoal):\n 1. AboveS r (f ` T) \\<noteq> {}", "ultimately"], ["proof (chain)\npicking this:\n  |f ` T| \\<le>o |T|\n  |T| \\<le>o |S|", "have *: \"|f`T| <o r\""], ["proof (prove)\nusing this:\n  |f ` T| \\<le>o |T|\n  |T| \\<le>o |S|\n\ngoal (1 subgoal):\n 1. |f ` T| <o r", "using \\<open>|S| <o r\\<close>"], ["proof (prove)\nusing this:\n  |f ` T| \\<le>o |T|\n  |T| \\<le>o |S|\n  |S| <o r\n\ngoal (1 subgoal):\n 1. |f ` T| <o r", "by (meson ordLeq_ordLess_trans)"], ["proof (state)\nthis:\n  |f ` T| <o r\n\ngoal (1 subgoal):\n 1. AboveS r (f ` T) \\<noteq> {}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. AboveS r (f ` T) \\<noteq> {}", "using AboveS_not_empty_in_regularCard[OF * _ r] \\<open>T \\<subseteq> S\\<close> \\<open>f`S \\<subseteq> Field r\\<close>"], ["proof (prove)\nusing this:\n  f ` T \\<subseteq> Field r \\<Longrightarrow> AboveS r (f ` T) \\<noteq> {}\n  T \\<subseteq> S\n  f ` S \\<subseteq> Field r\n\ngoal (1 subgoal):\n 1. AboveS r (f ` T) \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  AboveS r (f ` T) \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Well_order_extend:\nassumes WELL: \"well_order_on A r\" and SUB: \"A \\<subseteq> B\"\nshows \"\\<exists>r'. well_order_on B r' \\<and> r \\<subseteq> r'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>r'. well_order_on B r' \\<and> r \\<subseteq> r'", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>r'. well_order_on B r' \\<and> r \\<subseteq> r'", "have r: \"Well_order r \\<and> Field r = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Well_order r \\<and> Field r = A", "using WELL well_order_on_Well_order"], ["proof (prove)\nusing this:\n  well_order_on A r\n  well_order_on ?A ?r \\<Longrightarrow> ?A = Field ?r \\<and> Well_order ?r\n\ngoal (1 subgoal):\n 1. Well_order r \\<and> Field r = A", "by blast"], ["proof (state)\nthis:\n  Well_order r \\<and> Field r = A\n\ngoal (1 subgoal):\n 1. \\<exists>r'. well_order_on B r' \\<and> r \\<subseteq> r'", "let ?C = \"B - A\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>r'. well_order_on B r' \\<and> r \\<subseteq> r'", "obtain r'' where \"well_order_on ?C r''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r''.\n        well_order_on (B - A) r'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using well_order_on"], ["proof (prove)\nusing this:\n  \\<exists>r. well_order_on ?A r\n\ngoal (1 subgoal):\n 1. (\\<And>r''.\n        well_order_on (B - A) r'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  well_order_on (B - A) r''\n\ngoal (1 subgoal):\n 1. \\<exists>r'. well_order_on B r' \\<and> r \\<subseteq> r'", "then"], ["proof (chain)\npicking this:\n  well_order_on (B - A) r''", "have r'': \"Well_order r'' \\<and> Field r'' = ?C\""], ["proof (prove)\nusing this:\n  well_order_on (B - A) r''\n\ngoal (1 subgoal):\n 1. Well_order r'' \\<and> Field r'' = B - A", "using well_order_on_Well_order"], ["proof (prove)\nusing this:\n  well_order_on (B - A) r''\n  well_order_on ?A ?r \\<Longrightarrow> ?A = Field ?r \\<and> Well_order ?r\n\ngoal (1 subgoal):\n 1. Well_order r'' \\<and> Field r'' = B - A", "by blast"], ["proof (state)\nthis:\n  Well_order r'' \\<and> Field r'' = B - A\n\ngoal (1 subgoal):\n 1. \\<exists>r'. well_order_on B r' \\<and> r \\<subseteq> r'", "let ?r' = \"r Osum r''\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>r'. well_order_on B r' \\<and> r \\<subseteq> r'", "have \"Field r Int Field r'' = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Field r \\<inter> Field r'' = {}", "using r r''"], ["proof (prove)\nusing this:\n  Well_order r \\<and> Field r = A\n  Well_order r'' \\<and> Field r'' = B - A\n\ngoal (1 subgoal):\n 1. Field r \\<inter> Field r'' = {}", "by auto"], ["proof (state)\nthis:\n  Field r \\<inter> Field r'' = {}\n\ngoal (1 subgoal):\n 1. \\<exists>r'. well_order_on B r' \\<and> r \\<subseteq> r'", "then"], ["proof (chain)\npicking this:\n  Field r \\<inter> Field r'' = {}", "have \"r \\<le>o ?r'\""], ["proof (prove)\nusing this:\n  Field r \\<inter> Field r'' = {}\n\ngoal (1 subgoal):\n 1. r \\<le>o r \\<union>o r''", "using Osum_ordLeq[of r r''] r r''"], ["proof (prove)\nusing this:\n  Field r \\<inter> Field r'' = {}\n  \\<lbrakk>Field r \\<inter> Field r'' = {}; Well_order r;\n   Well_order r''\\<rbrakk>\n  \\<Longrightarrow> r \\<le>o r \\<union>o r''\n  Well_order r \\<and> Field r = A\n  Well_order r'' \\<and> Field r'' = B - A\n\ngoal (1 subgoal):\n 1. r \\<le>o r \\<union>o r''", "by blast"], ["proof (state)\nthis:\n  r \\<le>o r \\<union>o r''\n\ngoal (1 subgoal):\n 1. \\<exists>r'. well_order_on B r' \\<and> r \\<subseteq> r'", "then"], ["proof (chain)\npicking this:\n  r \\<le>o r \\<union>o r''", "have \"Well_order ?r'\""], ["proof (prove)\nusing this:\n  r \\<le>o r \\<union>o r''\n\ngoal (1 subgoal):\n 1. Well_order (r \\<union>o r'')", "unfolding ordLeq_def"], ["proof (prove)\nusing this:\n  (r, r \\<union>o r'')\n  \\<in> {(r, r'). Well_order r \\<and> Well_order r' \\<and> Ex (embed r r')}\n\ngoal (1 subgoal):\n 1. Well_order (r \\<union>o r'')", "by auto"], ["proof (state)\nthis:\n  Well_order (r \\<union>o r'')\n\ngoal (1 subgoal):\n 1. \\<exists>r'. well_order_on B r' \\<and> r \\<subseteq> r'", "moreover"], ["proof (state)\nthis:\n  Well_order (r \\<union>o r'')\n\ngoal (1 subgoal):\n 1. \\<exists>r'. well_order_on B r' \\<and> r \\<subseteq> r'", "have \"Field ?r' = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Field (r \\<union>o r'') = B", "using r r'' SUB"], ["proof (prove)\nusing this:\n  Well_order r \\<and> Field r = A\n  Well_order r'' \\<and> Field r'' = B - A\n  A \\<subseteq> B\n\ngoal (1 subgoal):\n 1. Field (r \\<union>o r'') = B", "by (auto simp add: Field_Osum)"], ["proof (state)\nthis:\n  Field (r \\<union>o r'') = B\n\ngoal (1 subgoal):\n 1. \\<exists>r'. well_order_on B r' \\<and> r \\<subseteq> r'", "ultimately"], ["proof (chain)\npicking this:\n  Well_order (r \\<union>o r'')\n  Field (r \\<union>o r'') = B", "have \"well_order_on B ?r'\""], ["proof (prove)\nusing this:\n  Well_order (r \\<union>o r'')\n  Field (r \\<union>o r'') = B\n\ngoal (1 subgoal):\n 1. well_order_on B (r \\<union>o r'')", "by auto"], ["proof (state)\nthis:\n  well_order_on B (r \\<union>o r'')\n\ngoal (1 subgoal):\n 1. \\<exists>r'. well_order_on B r' \\<and> r \\<subseteq> r'", "moreover"], ["proof (state)\nthis:\n  well_order_on B (r \\<union>o r'')\n\ngoal (1 subgoal):\n 1. \\<exists>r'. well_order_on B r' \\<and> r \\<subseteq> r'", "have \"r \\<subseteq> ?r'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<subseteq> r \\<union>o r''", "by (simp add: Osum_def subrelI)"], ["proof (state)\nthis:\n  r \\<subseteq> r \\<union>o r''\n\ngoal (1 subgoal):\n 1. \\<exists>r'. well_order_on B r' \\<and> r \\<subseteq> r'", "ultimately"], ["proof (chain)\npicking this:\n  well_order_on B (r \\<union>o r'')\n  r \\<subseteq> r \\<union>o r''", "show ?thesis"], ["proof (prove)\nusing this:\n  well_order_on B (r \\<union>o r'')\n  r \\<subseteq> r \\<union>o r''\n\ngoal (1 subgoal):\n 1. \\<exists>r'. well_order_on B r' \\<and> r \\<subseteq> r'", "by blast"], ["proof (state)\nthis:\n  \\<exists>r'. well_order_on B r' \\<and> r \\<subseteq> r'\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The next lemma shows that, if the range of a function is endowed with a wellorder,\nthen one can pull back this wellorder by the function, and then extend it in the fibers\nof the function in order to keep the wellorder property.\n\nThe proof is done by taking an arbitrary family of wellorders on each of the fibers, and using\nthe lexicographic order: one has $x < y$ if $f x < f y$, or if $f x = f y$ and, in the corresponding\nfiber of $f$, one has $x < y$.\n\nTo formalize it, it is however more efficient to use one single wellorder, and restrict it\nto each fiber.\\<close>"], ["", "lemma Well_order_pullback:\n  assumes \"Well_order r\"\n  shows \"\\<exists>s. Well_order s \\<and> Field s = UNIV \\<and> (\\<forall>x y. (f x, f y) \\<in> (r-Id) \\<longrightarrow> (x, y) \\<in> s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>s.\n       Well_order s \\<and>\n       Field s = UNIV \\<and>\n       (\\<forall>x y.\n           (f x, f y) \\<in> r - Id \\<longrightarrow> (x, y) \\<in> s)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>s.\n       Well_order s \\<and>\n       Field s = UNIV \\<and>\n       (\\<forall>x y.\n           (f x, f y) \\<in> r - Id \\<longrightarrow> (x, y) \\<in> s)", "obtain r2 where r2: \"Well_order r2\" \"Field r2 = UNIV\" \"r \\<subseteq> r2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r2.\n        \\<lbrakk>Well_order r2; Field r2 = UNIV; r \\<subseteq> r2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Well_order_extend[OF assms, of UNIV] well_order_on_Well_order"], ["proof (prove)\nusing this:\n  Field r \\<subseteq> UNIV \\<Longrightarrow>\n  \\<exists>r'. well_order r' \\<and> r \\<subseteq> r'\n  well_order_on ?A ?r \\<Longrightarrow> ?A = Field ?r \\<and> Well_order ?r\n\ngoal (1 subgoal):\n 1. (\\<And>r2.\n        \\<lbrakk>Well_order r2; Field r2 = UNIV; r \\<subseteq> r2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  Well_order r2\n  Field r2 = UNIV\n  r \\<subseteq> r2\n\ngoal (1 subgoal):\n 1. \\<exists>s.\n       Well_order s \\<and>\n       Field s = UNIV \\<and>\n       (\\<forall>x y.\n           (f x, f y) \\<in> r - Id \\<longrightarrow> (x, y) \\<in> s)", "obtain s2 where s2: \"Well_order s2\" \"Field s2 = (UNIV::'b set)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s2.\n        \\<lbrakk>Well_order s2; Field s2 = UNIV\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson well_ordering)"], ["proof (state)\nthis:\n  Well_order s2\n  Field s2 = UNIV\n\ngoal (1 subgoal):\n 1. \\<exists>s.\n       Well_order s \\<and>\n       Field s = UNIV \\<and>\n       (\\<forall>x y.\n           (f x, f y) \\<in> r - Id \\<longrightarrow> (x, y) \\<in> s)", "have r2s2:\n    \"\\<And>x y z. (x, y) \\<in> s2 \\<Longrightarrow> (y, z) \\<in> s2 \\<Longrightarrow> (x, z) \\<in> s2\"\n    \"\\<And>x. (x, x) \\<in> s2\"\n    \"\\<And>x y. (x, y) \\<in> s2 \\<or> (y, x) \\<in> s2\"\n    \"\\<And>x y. (x, y) \\<in> s2 \\<Longrightarrow> (y, x) \\<in> s2 \\<Longrightarrow> x = y\"\n    \"\\<And>x y z. (x, y) \\<in> r2 \\<Longrightarrow> (y, z) \\<in> r2 \\<Longrightarrow> (x, z) \\<in> r2\"\n    \"\\<And>x. (x, x) \\<in> r2\"\n    \"\\<And>x y. (x, y) \\<in> r2 \\<or> (y, x) \\<in> r2\"\n    \"\\<And>x y. (x, y) \\<in> r2 \\<Longrightarrow> (y, x) \\<in> r2 \\<Longrightarrow> x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (((\\<And>x y z.\n          \\<lbrakk>(x, y) \\<in> s2; (y, z) \\<in> s2\\<rbrakk>\n          \\<Longrightarrow> (x, z) \\<in> s2) &&&\n      (\\<And>x. (x, x) \\<in> s2)) &&&\n     (\\<And>x y. (x, y) \\<in> s2 \\<or> (y, x) \\<in> s2) &&&\n     (\\<And>x y.\n         \\<lbrakk>(x, y) \\<in> s2; (y, x) \\<in> s2\\<rbrakk>\n         \\<Longrightarrow> x = y)) &&&\n    ((\\<And>x y z.\n         \\<lbrakk>(x, y) \\<in> r2; (y, z) \\<in> r2\\<rbrakk>\n         \\<Longrightarrow> (x, z) \\<in> r2) &&&\n     (\\<And>x. (x, x) \\<in> r2)) &&&\n    (\\<And>x y. (x, y) \\<in> r2 \\<or> (y, x) \\<in> r2) &&&\n    (\\<And>x y.\n        \\<lbrakk>(x, y) \\<in> r2; (y, x) \\<in> r2\\<rbrakk>\n        \\<Longrightarrow> x = y)", "using r2 s2"], ["proof (prove)\nusing this:\n  Well_order r2\n  Field r2 = UNIV\n  r \\<subseteq> r2\n  Well_order s2\n  Field s2 = UNIV\n\ngoal (1 subgoal):\n 1. (((\\<And>x y z.\n          \\<lbrakk>(x, y) \\<in> s2; (y, z) \\<in> s2\\<rbrakk>\n          \\<Longrightarrow> (x, z) \\<in> s2) &&&\n      (\\<And>x. (x, x) \\<in> s2)) &&&\n     (\\<And>x y. (x, y) \\<in> s2 \\<or> (y, x) \\<in> s2) &&&\n     (\\<And>x y.\n         \\<lbrakk>(x, y) \\<in> s2; (y, x) \\<in> s2\\<rbrakk>\n         \\<Longrightarrow> x = y)) &&&\n    ((\\<And>x y z.\n         \\<lbrakk>(x, y) \\<in> r2; (y, z) \\<in> r2\\<rbrakk>\n         \\<Longrightarrow> (x, z) \\<in> r2) &&&\n     (\\<And>x. (x, x) \\<in> r2)) &&&\n    (\\<And>x y. (x, y) \\<in> r2 \\<or> (y, x) \\<in> r2) &&&\n    (\\<And>x y.\n        \\<lbrakk>(x, y) \\<in> r2; (y, x) \\<in> r2\\<rbrakk>\n        \\<Longrightarrow> x = y)", "unfolding well_order_on_def linear_order_on_def partial_order_on_def total_on_def preorder_on_def antisym_def refl_on_def trans_def"], ["proof (prove)\nusing this:\n  ((((r2 \\<subseteq> Field r2 \\<times> Field r2 \\<and>\n      (\\<forall>x\\<in>Field r2. (x, x) \\<in> r2)) \\<and>\n     (\\<forall>x y z.\n         (x, y) \\<in> r2 \\<longrightarrow>\n         (y, z) \\<in> r2 \\<longrightarrow> (x, z) \\<in> r2)) \\<and>\n    (\\<forall>x y.\n        (x, y) \\<in> r2 \\<longrightarrow>\n        (y, x) \\<in> r2 \\<longrightarrow> x = y)) \\<and>\n   (\\<forall>x\\<in>Field r2.\n       \\<forall>y\\<in>Field r2.\n          x \\<noteq> y \\<longrightarrow>\n          (x, y) \\<in> r2 \\<or> (y, x) \\<in> r2)) \\<and>\n  wf (r2 - Id)\n  Field r2 = UNIV\n  r \\<subseteq> r2\n  ((((s2 \\<subseteq> Field s2 \\<times> Field s2 \\<and>\n      (\\<forall>x\\<in>Field s2. (x, x) \\<in> s2)) \\<and>\n     (\\<forall>x y z.\n         (x, y) \\<in> s2 \\<longrightarrow>\n         (y, z) \\<in> s2 \\<longrightarrow> (x, z) \\<in> s2)) \\<and>\n    (\\<forall>x y.\n        (x, y) \\<in> s2 \\<longrightarrow>\n        (y, x) \\<in> s2 \\<longrightarrow> x = y)) \\<and>\n   (\\<forall>x\\<in>Field s2.\n       \\<forall>y\\<in>Field s2.\n          x \\<noteq> y \\<longrightarrow>\n          (x, y) \\<in> s2 \\<or> (y, x) \\<in> s2)) \\<and>\n  wf (s2 - Id)\n  Field s2 = UNIV\n\ngoal (1 subgoal):\n 1. (((\\<And>x y z.\n          \\<lbrakk>(x, y) \\<in> s2; (y, z) \\<in> s2\\<rbrakk>\n          \\<Longrightarrow> (x, z) \\<in> s2) &&&\n      (\\<And>x. (x, x) \\<in> s2)) &&&\n     (\\<And>x y. (x, y) \\<in> s2 \\<or> (y, x) \\<in> s2) &&&\n     (\\<And>x y.\n         \\<lbrakk>(x, y) \\<in> s2; (y, x) \\<in> s2\\<rbrakk>\n         \\<Longrightarrow> x = y)) &&&\n    ((\\<And>x y z.\n         \\<lbrakk>(x, y) \\<in> r2; (y, z) \\<in> r2\\<rbrakk>\n         \\<Longrightarrow> (x, z) \\<in> r2) &&&\n     (\\<And>x. (x, x) \\<in> r2)) &&&\n    (\\<And>x y. (x, y) \\<in> r2 \\<or> (y, x) \\<in> r2) &&&\n    (\\<And>x y.\n        \\<lbrakk>(x, y) \\<in> r2; (y, x) \\<in> r2\\<rbrakk>\n        \\<Longrightarrow> x = y)", "by (metis UNIV_I)+"], ["proof (state)\nthis:\n  \\<lbrakk>(?x, ?y) \\<in> s2; (?y, ?z) \\<in> s2\\<rbrakk>\n  \\<Longrightarrow> (?x, ?z) \\<in> s2\n  (?x, ?x) \\<in> s2\n  (?x, ?y) \\<in> s2 \\<or> (?y, ?x) \\<in> s2\n  \\<lbrakk>(?x, ?y) \\<in> s2; (?y, ?x) \\<in> s2\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n  \\<lbrakk>(?x, ?y) \\<in> r2; (?y, ?z) \\<in> r2\\<rbrakk>\n  \\<Longrightarrow> (?x, ?z) \\<in> r2\n  (?x, ?x) \\<in> r2\n  (?x, ?y) \\<in> r2 \\<or> (?y, ?x) \\<in> r2\n  \\<lbrakk>(?x, ?y) \\<in> r2; (?y, ?x) \\<in> r2\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n\ngoal (1 subgoal):\n 1. \\<exists>s.\n       Well_order s \\<and>\n       Field s = UNIV \\<and>\n       (\\<forall>x y.\n           (f x, f y) \\<in> r - Id \\<longrightarrow> (x, y) \\<in> s)", "define s where \"s = {(x,y). (f x, f y) \\<in> r2 \\<and> (f x = f y \\<longrightarrow> (x, y) \\<in> s2)}\""], ["proof (state)\nthis:\n  s =\n  {(x, y).\n   (f x, f y) \\<in> r2 \\<and> (f x = f y \\<longrightarrow> (x, y) \\<in> s2)}\n\ngoal (1 subgoal):\n 1. \\<exists>s.\n       Well_order s \\<and>\n       Field s = UNIV \\<and>\n       (\\<forall>x y.\n           (f x, f y) \\<in> r - Id \\<longrightarrow> (x, y) \\<in> s)", "have \"linear_order s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. linear_order s", "unfolding linear_order_on_def partial_order_on_def preorder_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((refl s \\<and> trans s) \\<and> antisym s) \\<and> total s", "proof (auto)"], ["proof (state)\ngoal (4 subgoals):\n 1. refl s\n 2. trans s\n 3. antisym s\n 4. total s", "show \"total_on UNIV s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. total s", "unfolding s_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. total\n     {(x, y).\n      (f x, f y) \\<in> r2 \\<and>\n      (f x = f y \\<longrightarrow> (x, y) \\<in> s2)}", "apply (rule total_onI, auto)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<noteq> y; (f y, f x) \\<notin> r2\\<rbrakk>\n       \\<Longrightarrow> (f x, f y) \\<in> r2\n 2. \\<And>x y.\n       \\<lbrakk>x \\<noteq> y; (f y, f y) \\<notin> r2; f x = f y\\<rbrakk>\n       \\<Longrightarrow> (x, y) \\<in> s2\n 3. \\<And>x y.\n       \\<lbrakk>x \\<noteq> y; f y = f x; (y, x) \\<notin> s2\\<rbrakk>\n       \\<Longrightarrow> (f x, f x) \\<in> r2\n 4. \\<And>x y.\n       \\<lbrakk>x \\<noteq> y; (y, x) \\<notin> s2; f x = f y\\<rbrakk>\n       \\<Longrightarrow> (x, y) \\<in> s2", "using r2s2"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?x, ?y) \\<in> s2; (?y, ?z) \\<in> s2\\<rbrakk>\n  \\<Longrightarrow> (?x, ?z) \\<in> s2\n  (?x, ?x) \\<in> s2\n  (?x, ?y) \\<in> s2 \\<or> (?y, ?x) \\<in> s2\n  \\<lbrakk>(?x, ?y) \\<in> s2; (?y, ?x) \\<in> s2\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n  \\<lbrakk>(?x, ?y) \\<in> r2; (?y, ?z) \\<in> r2\\<rbrakk>\n  \\<Longrightarrow> (?x, ?z) \\<in> r2\n  (?x, ?x) \\<in> r2\n  (?x, ?y) \\<in> r2 \\<or> (?y, ?x) \\<in> r2\n  \\<lbrakk>(?x, ?y) \\<in> r2; (?y, ?x) \\<in> r2\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n\ngoal (4 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<noteq> y; (f y, f x) \\<notin> r2\\<rbrakk>\n       \\<Longrightarrow> (f x, f y) \\<in> r2\n 2. \\<And>x y.\n       \\<lbrakk>x \\<noteq> y; (f y, f y) \\<notin> r2; f x = f y\\<rbrakk>\n       \\<Longrightarrow> (x, y) \\<in> s2\n 3. \\<And>x y.\n       \\<lbrakk>x \\<noteq> y; f y = f x; (y, x) \\<notin> s2\\<rbrakk>\n       \\<Longrightarrow> (f x, f x) \\<in> r2\n 4. \\<And>x y.\n       \\<lbrakk>x \\<noteq> y; (y, x) \\<notin> s2; f x = f y\\<rbrakk>\n       \\<Longrightarrow> (x, y) \\<in> s2", "by metis+"], ["proof (state)\nthis:\n  total s\n\ngoal (3 subgoals):\n 1. refl s\n 2. trans s\n 3. antisym s", "show \"refl_on UNIV s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. refl s", "unfolding s_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. refl\n     {(x, y).\n      (f x, f y) \\<in> r2 \\<and>\n      (f x = f y \\<longrightarrow> (x, y) \\<in> s2)}", "apply (rule refl_onI, auto)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x. (f x, f x) \\<in> r2\n 2. \\<And>x. (x, x) \\<in> s2", "using r2s2"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?x, ?y) \\<in> s2; (?y, ?z) \\<in> s2\\<rbrakk>\n  \\<Longrightarrow> (?x, ?z) \\<in> s2\n  (?x, ?x) \\<in> s2\n  (?x, ?y) \\<in> s2 \\<or> (?y, ?x) \\<in> s2\n  \\<lbrakk>(?x, ?y) \\<in> s2; (?y, ?x) \\<in> s2\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n  \\<lbrakk>(?x, ?y) \\<in> r2; (?y, ?z) \\<in> r2\\<rbrakk>\n  \\<Longrightarrow> (?x, ?z) \\<in> r2\n  (?x, ?x) \\<in> r2\n  (?x, ?y) \\<in> r2 \\<or> (?y, ?x) \\<in> r2\n  \\<lbrakk>(?x, ?y) \\<in> r2; (?y, ?x) \\<in> r2\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n\ngoal (2 subgoals):\n 1. \\<And>x. (f x, f x) \\<in> r2\n 2. \\<And>x. (x, x) \\<in> s2", "by blast+"], ["proof (state)\nthis:\n  refl s\n\ngoal (2 subgoals):\n 1. trans s\n 2. antisym s", "show \"trans s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trans s", "unfolding s_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. trans\n     {(x, y).\n      (f x, f y) \\<in> r2 \\<and>\n      (f x = f y \\<longrightarrow> (x, y) \\<in> s2)}", "apply (rule transI, auto)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>(f x, f y) \\<in> r2; (f y, f z) \\<in> r2; f x \\<noteq> f y;\n        f y \\<noteq> f z\\<rbrakk>\n       \\<Longrightarrow> (f x, f z) \\<in> r2\n 2. \\<And>x y z.\n       \\<lbrakk>(f z, f y) \\<in> r2; (f y, f z) \\<in> r2; f y \\<noteq> f z;\n        f x = f z\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> s2\n 3. \\<And>x y z.\n       \\<lbrakk>(f x, f y) \\<in> r2; (f y, f z) \\<in> r2; f x \\<noteq> f y;\n        (y, z) \\<in> s2\\<rbrakk>\n       \\<Longrightarrow> (f x, f z) \\<in> r2\n 4. \\<And>x y z.\n       \\<lbrakk>(f z, f y) \\<in> r2; (f y, f z) \\<in> r2; f z \\<noteq> f y;\n        (y, z) \\<in> s2; f x = f z\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> s2\n 5. \\<And>x y z.\n       \\<lbrakk>(f x, f y) \\<in> r2; (f y, f z) \\<in> r2; (x, y) \\<in> s2;\n        f y \\<noteq> f z\\<rbrakk>\n       \\<Longrightarrow> (f x, f z) \\<in> r2\n 6. \\<And>x y z.\n       \\<lbrakk>(f z, f y) \\<in> r2; (f y, f z) \\<in> r2; (x, y) \\<in> s2;\n        f y \\<noteq> f z; f x = f z\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> s2\n 7. \\<And>x y z.\n       \\<lbrakk>(f x, f y) \\<in> r2; (f y, f z) \\<in> r2; (x, y) \\<in> s2;\n        (y, z) \\<in> s2\\<rbrakk>\n       \\<Longrightarrow> (f x, f z) \\<in> r2\n 8. \\<And>x y z.\n       \\<lbrakk>(f z, f y) \\<in> r2; (f y, f z) \\<in> r2; (x, y) \\<in> s2;\n        (y, z) \\<in> s2; f x = f z\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> s2", "using r2s2"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?x, ?y) \\<in> s2; (?y, ?z) \\<in> s2\\<rbrakk>\n  \\<Longrightarrow> (?x, ?z) \\<in> s2\n  (?x, ?x) \\<in> s2\n  (?x, ?y) \\<in> s2 \\<or> (?y, ?x) \\<in> s2\n  \\<lbrakk>(?x, ?y) \\<in> s2; (?y, ?x) \\<in> s2\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n  \\<lbrakk>(?x, ?y) \\<in> r2; (?y, ?z) \\<in> r2\\<rbrakk>\n  \\<Longrightarrow> (?x, ?z) \\<in> r2\n  (?x, ?x) \\<in> r2\n  (?x, ?y) \\<in> r2 \\<or> (?y, ?x) \\<in> r2\n  \\<lbrakk>(?x, ?y) \\<in> r2; (?y, ?x) \\<in> r2\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n\ngoal (8 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>(f x, f y) \\<in> r2; (f y, f z) \\<in> r2; f x \\<noteq> f y;\n        f y \\<noteq> f z\\<rbrakk>\n       \\<Longrightarrow> (f x, f z) \\<in> r2\n 2. \\<And>x y z.\n       \\<lbrakk>(f z, f y) \\<in> r2; (f y, f z) \\<in> r2; f y \\<noteq> f z;\n        f x = f z\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> s2\n 3. \\<And>x y z.\n       \\<lbrakk>(f x, f y) \\<in> r2; (f y, f z) \\<in> r2; f x \\<noteq> f y;\n        (y, z) \\<in> s2\\<rbrakk>\n       \\<Longrightarrow> (f x, f z) \\<in> r2\n 4. \\<And>x y z.\n       \\<lbrakk>(f z, f y) \\<in> r2; (f y, f z) \\<in> r2; f z \\<noteq> f y;\n        (y, z) \\<in> s2; f x = f z\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> s2\n 5. \\<And>x y z.\n       \\<lbrakk>(f x, f y) \\<in> r2; (f y, f z) \\<in> r2; (x, y) \\<in> s2;\n        f y \\<noteq> f z\\<rbrakk>\n       \\<Longrightarrow> (f x, f z) \\<in> r2\n 6. \\<And>x y z.\n       \\<lbrakk>(f z, f y) \\<in> r2; (f y, f z) \\<in> r2; (x, y) \\<in> s2;\n        f y \\<noteq> f z; f x = f z\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> s2\n 7. \\<And>x y z.\n       \\<lbrakk>(f x, f y) \\<in> r2; (f y, f z) \\<in> r2; (x, y) \\<in> s2;\n        (y, z) \\<in> s2\\<rbrakk>\n       \\<Longrightarrow> (f x, f z) \\<in> r2\n 8. \\<And>x y z.\n       \\<lbrakk>(f z, f y) \\<in> r2; (f y, f z) \\<in> r2; (x, y) \\<in> s2;\n        (y, z) \\<in> s2; f x = f z\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> s2", "by metis+"], ["proof (state)\nthis:\n  trans s\n\ngoal (1 subgoal):\n 1. antisym s", "show \"antisym s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. antisym s", "unfolding s_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. antisym\n     {(x, y).\n      (f x, f y) \\<in> r2 \\<and>\n      (f x = f y \\<longrightarrow> (x, y) \\<in> s2)}", "apply (rule antisymI, auto)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>(f x, f y) \\<in> r2; (f y, f x) \\<in> r2;\n        f y \\<noteq> f x\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>x y.\n       \\<lbrakk>(f x, f y) \\<in> r2; (f y, f x) \\<in> r2; f x \\<noteq> f y;\n        (y, x) \\<in> s2\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<And>x y.\n       \\<lbrakk>(f x, f y) \\<in> r2; (f y, f x) \\<in> r2; (x, y) \\<in> s2;\n        f y \\<noteq> f x\\<rbrakk>\n       \\<Longrightarrow> x = y\n 4. \\<And>x y.\n       \\<lbrakk>(f x, f y) \\<in> r2; (f y, f x) \\<in> r2; (x, y) \\<in> s2;\n        (y, x) \\<in> s2\\<rbrakk>\n       \\<Longrightarrow> x = y", "using r2s2"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?x, ?y) \\<in> s2; (?y, ?z) \\<in> s2\\<rbrakk>\n  \\<Longrightarrow> (?x, ?z) \\<in> s2\n  (?x, ?x) \\<in> s2\n  (?x, ?y) \\<in> s2 \\<or> (?y, ?x) \\<in> s2\n  \\<lbrakk>(?x, ?y) \\<in> s2; (?y, ?x) \\<in> s2\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n  \\<lbrakk>(?x, ?y) \\<in> r2; (?y, ?z) \\<in> r2\\<rbrakk>\n  \\<Longrightarrow> (?x, ?z) \\<in> r2\n  (?x, ?x) \\<in> r2\n  (?x, ?y) \\<in> r2 \\<or> (?y, ?x) \\<in> r2\n  \\<lbrakk>(?x, ?y) \\<in> r2; (?y, ?x) \\<in> r2\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n\ngoal (4 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>(f x, f y) \\<in> r2; (f y, f x) \\<in> r2;\n        f y \\<noteq> f x\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>x y.\n       \\<lbrakk>(f x, f y) \\<in> r2; (f y, f x) \\<in> r2; f x \\<noteq> f y;\n        (y, x) \\<in> s2\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<And>x y.\n       \\<lbrakk>(f x, f y) \\<in> r2; (f y, f x) \\<in> r2; (x, y) \\<in> s2;\n        f y \\<noteq> f x\\<rbrakk>\n       \\<Longrightarrow> x = y\n 4. \\<And>x y.\n       \\<lbrakk>(f x, f y) \\<in> r2; (f y, f x) \\<in> r2; (x, y) \\<in> s2;\n        (y, x) \\<in> s2\\<rbrakk>\n       \\<Longrightarrow> x = y", "by metis+"], ["proof (state)\nthis:\n  antisym s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  linear_order s\n\ngoal (1 subgoal):\n 1. \\<exists>s.\n       Well_order s \\<and>\n       Field s = UNIV \\<and>\n       (\\<forall>x y.\n           (f x, f y) \\<in> r - Id \\<longrightarrow> (x, y) \\<in> s)", "moreover"], ["proof (state)\nthis:\n  linear_order s\n\ngoal (1 subgoal):\n 1. \\<exists>s.\n       Well_order s \\<and>\n       Field s = UNIV \\<and>\n       (\\<forall>x y.\n           (f x, f y) \\<in> r - Id \\<longrightarrow> (x, y) \\<in> s)", "have \"wf (s - Id)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf (s - Id)", "proof (rule wfI_min)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x Q.\n       x \\<in> Q \\<Longrightarrow>\n       \\<exists>z\\<in>Q.\n          \\<forall>y. (y, z) \\<in> s - Id \\<longrightarrow> y \\<notin> Q", "fix x::'b and Q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x Q.\n       x \\<in> Q \\<Longrightarrow>\n       \\<exists>z\\<in>Q.\n          \\<forall>y. (y, z) \\<in> s - Id \\<longrightarrow> y \\<notin> Q", "assume \"x \\<in> Q\""], ["proof (state)\nthis:\n  x \\<in> Q\n\ngoal (1 subgoal):\n 1. \\<And>x Q.\n       x \\<in> Q \\<Longrightarrow>\n       \\<exists>z\\<in>Q.\n          \\<forall>y. (y, z) \\<in> s - Id \\<longrightarrow> y \\<notin> Q", "obtain z' where z': \"z' \\<in> f`Q\" \"\\<And>y. (y, z') \\<in> r2 - Id \\<longrightarrow> y \\<notin> f`Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z'.\n        \\<lbrakk>z' \\<in> f ` Q;\n         \\<And>y.\n            (y, z') \\<in> r2 - Id \\<longrightarrow>\n            y \\<notin> f ` Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (rule wfE_min[of \"r2-Id\" \"f x\" \"f`Q\"], auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<And>z'.\n        \\<lbrakk>z' \\<in> f ` Q;\n         \\<And>y.\n            (y, z') \\<in> r2 \\<and> y \\<noteq> z' \\<longrightarrow>\n            y \\<notin> f ` Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    wf (r2 - Id)\n 2. (\\<And>z'.\n        \\<lbrakk>z' \\<in> f ` Q;\n         \\<And>y.\n            (y, z') \\<in> r2 \\<and> y \\<noteq> z' \\<longrightarrow>\n            y \\<notin> f ` Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    f x \\<in> f ` Q", "show \"wf(r2-Id)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf (r2 - Id)", "using \\<open>Well_order r2\\<close>"], ["proof (prove)\nusing this:\n  Well_order r2\n\ngoal (1 subgoal):\n 1. wf (r2 - Id)", "unfolding well_order_on_def"], ["proof (prove)\nusing this:\n  Linear_order r2 \\<and> wf (r2 - Id)\n\ngoal (1 subgoal):\n 1. wf (r2 - Id)", "by auto"], ["proof (state)\nthis:\n  wf (r2 - Id)\n\ngoal (1 subgoal):\n 1. (\\<And>z'.\n        \\<lbrakk>z' \\<in> f ` Q;\n         \\<And>y.\n            (y, z') \\<in> r2 \\<and> y \\<noteq> z' \\<longrightarrow>\n            y \\<notin> f ` Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    f x \\<in> f ` Q", "show \"f x \\<in> f`Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x \\<in> f ` Q", "using \\<open>x \\<in> Q\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> Q\n\ngoal (1 subgoal):\n 1. f x \\<in> f ` Q", "by auto"], ["proof (state)\nthis:\n  f x \\<in> f ` Q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z' \\<in> f ` Q\n  (?y, z') \\<in> r2 - Id \\<longrightarrow> ?y \\<notin> f ` Q\n\ngoal (1 subgoal):\n 1. \\<And>x Q.\n       x \\<in> Q \\<Longrightarrow>\n       \\<exists>z\\<in>Q.\n          \\<forall>y. (y, z) \\<in> s - Id \\<longrightarrow> y \\<notin> Q", "define Q2 where \"Q2 = Q \\<inter> f-`{z'}\""], ["proof (state)\nthis:\n  Q2 = Q \\<inter> f -` {z'}\n\ngoal (1 subgoal):\n 1. \\<And>x Q.\n       x \\<in> Q \\<Longrightarrow>\n       \\<exists>z\\<in>Q.\n          \\<forall>y. (y, z) \\<in> s - Id \\<longrightarrow> y \\<notin> Q", "obtain z where z: \"z \\<in> Q2\" \"\\<And>y. (y, z) \\<in> s2 - Id \\<longrightarrow> y \\<notin> Q2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>z \\<in> Q2;\n         \\<And>y.\n            (y, z) \\<in> s2 - Id \\<longrightarrow> y \\<notin> Q2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (rule wfE_min'[of \"s2-Id\" \"Q2\"], auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<And>z.\n        \\<lbrakk>z \\<in> Q2;\n         \\<And>y.\n            (y, z) \\<in> s2 \\<and> y \\<noteq> z \\<longrightarrow>\n            y \\<notin> Q2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    wf (s2 - Id)\n 2. Q2 = {} \\<Longrightarrow> False", "show \"wf(s2-Id)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf (s2 - Id)", "using \\<open>Well_order s2\\<close>"], ["proof (prove)\nusing this:\n  Well_order s2\n\ngoal (1 subgoal):\n 1. wf (s2 - Id)", "unfolding well_order_on_def"], ["proof (prove)\nusing this:\n  Linear_order s2 \\<and> wf (s2 - Id)\n\ngoal (1 subgoal):\n 1. wf (s2 - Id)", "by auto"], ["proof (state)\nthis:\n  wf (s2 - Id)\n\ngoal (1 subgoal):\n 1. Q2 = {} \\<Longrightarrow> False", "assume \"Q2 = {}\""], ["proof (state)\nthis:\n  Q2 = {}\n\ngoal (1 subgoal):\n 1. Q2 = {} \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  Q2 = {}", "show False"], ["proof (prove)\nusing this:\n  Q2 = {}\n\ngoal (1 subgoal):\n 1. False", "unfolding Q2_def"], ["proof (prove)\nusing this:\n  Q \\<inter> f -` {z'} = {}\n\ngoal (1 subgoal):\n 1. False", "using \\<open>z' \\<in> f`Q\\<close>"], ["proof (prove)\nusing this:\n  Q \\<inter> f -` {z'} = {}\n  z' \\<in> f ` Q\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z \\<in> Q2\n  (?y, z) \\<in> s2 - Id \\<longrightarrow> ?y \\<notin> Q2\n\ngoal (1 subgoal):\n 1. \\<And>x Q.\n       x \\<in> Q \\<Longrightarrow>\n       \\<exists>z\\<in>Q.\n          \\<forall>y. (y, z) \\<in> s - Id \\<longrightarrow> y \\<notin> Q", "have \"(y, z) \\<in> (s-Id) \\<Longrightarrow> y \\<notin> Q\" for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. (y, z) \\<in> s - Id \\<Longrightarrow> y \\<notin> Q", "unfolding s_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (y, z)\n    \\<in> {(x, y).\n           (f x, f y) \\<in> r2 \\<and>\n           (f x = f y \\<longrightarrow> (x, y) \\<in> s2)} -\n          Id \\<Longrightarrow>\n    y \\<notin> Q", "using z' z Q2_def"], ["proof (prove)\nusing this:\n  z' \\<in> f ` Q\n  (?y, z') \\<in> r2 - Id \\<longrightarrow> ?y \\<notin> f ` Q\n  z \\<in> Q2\n  (?y, z) \\<in> s2 - Id \\<longrightarrow> ?y \\<notin> Q2\n  Q2 = Q \\<inter> f -` {z'}\n\ngoal (1 subgoal):\n 1. (y, z)\n    \\<in> {(x, y).\n           (f x, f y) \\<in> r2 \\<and>\n           (f x = f y \\<longrightarrow> (x, y) \\<in> s2)} -\n          Id \\<Longrightarrow>\n    y \\<notin> Q", "by auto"], ["proof (state)\nthis:\n  (?y, z) \\<in> s - Id \\<Longrightarrow> ?y \\<notin> Q\n\ngoal (1 subgoal):\n 1. \\<And>x Q.\n       x \\<in> Q \\<Longrightarrow>\n       \\<exists>z\\<in>Q.\n          \\<forall>y. (y, z) \\<in> s - Id \\<longrightarrow> y \\<notin> Q", "then"], ["proof (chain)\npicking this:\n  (?y, z) \\<in> s - Id \\<Longrightarrow> ?y \\<notin> Q", "show \"\\<exists>z\\<in>Q. \\<forall>y. (y, z) \\<in> s - Id \\<longrightarrow> y \\<notin> Q\""], ["proof (prove)\nusing this:\n  (?y, z) \\<in> s - Id \\<Longrightarrow> ?y \\<notin> Q\n\ngoal (1 subgoal):\n 1. \\<exists>z\\<in>Q.\n       \\<forall>y. (y, z) \\<in> s - Id \\<longrightarrow> y \\<notin> Q", "using \\<open>z \\<in> Q2\\<close> Q2_def"], ["proof (prove)\nusing this:\n  (?y, z) \\<in> s - Id \\<Longrightarrow> ?y \\<notin> Q\n  z \\<in> Q2\n  Q2 = Q \\<inter> f -` {z'}\n\ngoal (1 subgoal):\n 1. \\<exists>z\\<in>Q.\n       \\<forall>y. (y, z) \\<in> s - Id \\<longrightarrow> y \\<notin> Q", "by auto"], ["proof (state)\nthis:\n  \\<exists>z\\<in>Q.\n     \\<forall>y. (y, z) \\<in> s - Id \\<longrightarrow> y \\<notin> Q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  wf (s - Id)\n\ngoal (1 subgoal):\n 1. \\<exists>s.\n       Well_order s \\<and>\n       Field s = UNIV \\<and>\n       (\\<forall>x y.\n           (f x, f y) \\<in> r - Id \\<longrightarrow> (x, y) \\<in> s)", "ultimately"], ["proof (chain)\npicking this:\n  linear_order s\n  wf (s - Id)", "have \"well_order_on UNIV s\""], ["proof (prove)\nusing this:\n  linear_order s\n  wf (s - Id)\n\ngoal (1 subgoal):\n 1. well_order s", "unfolding well_order_on_def"], ["proof (prove)\nusing this:\n  linear_order s\n  wf (s - Id)\n\ngoal (1 subgoal):\n 1. linear_order s \\<and> wf (s - Id)", "by simp"], ["proof (state)\nthis:\n  well_order s\n\ngoal (1 subgoal):\n 1. \\<exists>s.\n       Well_order s \\<and>\n       Field s = UNIV \\<and>\n       (\\<forall>x y.\n           (f x, f y) \\<in> r - Id \\<longrightarrow> (x, y) \\<in> s)", "moreover"], ["proof (state)\nthis:\n  well_order s\n\ngoal (1 subgoal):\n 1. \\<exists>s.\n       Well_order s \\<and>\n       Field s = UNIV \\<and>\n       (\\<forall>x y.\n           (f x, f y) \\<in> r - Id \\<longrightarrow> (x, y) \\<in> s)", "have \"(f x, f y) \\<in> (r-Id) \\<longrightarrow> (x, y) \\<in> s\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f x, f y) \\<in> r - Id \\<longrightarrow> (x, y) \\<in> s", "unfolding s_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f x, f y) \\<in> r - Id \\<longrightarrow>\n    (x, y)\n    \\<in> {(x, y).\n           (f x, f y) \\<in> r2 \\<and>\n           (f x = f y \\<longrightarrow> (x, y) \\<in> s2)}", "using \\<open>r \\<subseteq> r2\\<close>"], ["proof (prove)\nusing this:\n  r \\<subseteq> r2\n\ngoal (1 subgoal):\n 1. (f x, f y) \\<in> r - Id \\<longrightarrow>\n    (x, y)\n    \\<in> {(x, y).\n           (f x, f y) \\<in> r2 \\<and>\n           (f x = f y \\<longrightarrow> (x, y) \\<in> s2)}", "by auto"], ["proof (state)\nthis:\n  (f ?x, f ?y) \\<in> r - Id \\<longrightarrow> (?x, ?y) \\<in> s\n\ngoal (1 subgoal):\n 1. \\<exists>s.\n       Well_order s \\<and>\n       Field s = UNIV \\<and>\n       (\\<forall>x y.\n           (f x, f y) \\<in> r - Id \\<longrightarrow> (x, y) \\<in> s)", "ultimately"], ["proof (chain)\npicking this:\n  well_order s\n  (f ?x, f ?y) \\<in> r - Id \\<longrightarrow> (?x, ?y) \\<in> s", "show ?thesis"], ["proof (prove)\nusing this:\n  well_order s\n  (f ?x, f ?y) \\<in> r - Id \\<longrightarrow> (?x, ?y) \\<in> s\n\ngoal (1 subgoal):\n 1. \\<exists>s.\n       Well_order s \\<and>\n       Field s = UNIV \\<and>\n       (\\<forall>x y.\n           (f x, f y) \\<in> r - Id \\<longrightarrow> (x, y) \\<in> s)", "using well_order_on_Well_order"], ["proof (prove)\nusing this:\n  well_order s\n  (f ?x, f ?y) \\<in> r - Id \\<longrightarrow> (?x, ?y) \\<in> s\n  well_order_on ?A ?r \\<Longrightarrow> ?A = Field ?r \\<and> Well_order ?r\n\ngoal (1 subgoal):\n 1. \\<exists>s.\n       Well_order s \\<and>\n       Field s = UNIV \\<and>\n       (\\<forall>x y.\n           (f x, f y) \\<in> r - Id \\<longrightarrow> (x, y) \\<in> s)", "by metis"], ["proof (state)\nthis:\n  \\<exists>s.\n     Well_order s \\<and>\n     Field s = UNIV \\<and>\n     (\\<forall>x y.\n         (f x, f y) \\<in> r - Id \\<longrightarrow> (x, y) \\<in> s)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(*of theory Library_Complements*)"]]}