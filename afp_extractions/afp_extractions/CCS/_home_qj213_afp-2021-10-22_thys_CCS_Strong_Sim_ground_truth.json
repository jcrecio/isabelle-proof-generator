{"file_name": "/home/qj213/afp-2021-10-22/thys/CCS/Strong_Sim.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CCS", "problem_names": ["lemma simI[case_names Sim]:\n  fixes P   :: ccs\n  and   Rel :: \"(ccs \\<times> ccs) set\"\n  and   Q   :: ccs\n\n  assumes \"\\<And>\\<alpha> Q'. Q \\<longmapsto>\\<alpha> \\<prec> Q' \\<Longrightarrow> \\<exists>P'. P \\<longmapsto>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"\n\n  shows \"P \\<leadsto>[Rel] Q\"", "lemma simE:\n  fixes P   :: ccs\n  and   Rel :: \"(ccs \\<times> ccs) set\"\n  and   Q   :: ccs\n  and   \\<alpha>   :: act\n  and   Q'  :: ccs\n\n  assumes \"P \\<leadsto>[Rel] Q\"\n  and     \"Q \\<longmapsto>\\<alpha> \\<prec> Q'\"\n\n  obtains P' where \"P \\<longmapsto>\\<alpha> \\<prec> P'\" and \"(P', Q') \\<in> Rel\"", "lemma reflexive:\n  fixes P   :: ccs\n  and   Rel :: \"(ccs \\<times> ccs) set\"\n  \n  assumes \"Id \\<subseteq> Rel\"\n\n  shows \"P \\<leadsto>[Rel] P\"", "lemma transitive:\n  fixes P     :: ccs\n  and   Rel   :: \"(ccs \\<times> ccs) set\"\n  and   Q     :: ccs\n  and   Rel'  :: \"(ccs \\<times> ccs) set\"\n  and   R     :: ccs\n  and   Rel'' :: \"(ccs \\<times> ccs) set\"\n  \n  assumes \"P \\<leadsto>[Rel] Q\"\n  and     \"Q \\<leadsto>[Rel'] R\"\n  and     \"Rel O Rel' \\<subseteq> Rel''\"\n  \n  shows \"P \\<leadsto>[Rel''] R\""], "translations": [["", "lemma simI[case_names Sim]:\n  fixes P   :: ccs\n  and   Rel :: \"(ccs \\<times> ccs) set\"\n  and   Q   :: ccs\n\n  assumes \"\\<And>\\<alpha> Q'. Q \\<longmapsto>\\<alpha> \\<prec> Q' \\<Longrightarrow> \\<exists>P'. P \\<longmapsto>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"\n\n  shows \"P \\<leadsto>[Rel] Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<leadsto>[Rel] Q", "using assms"], ["proof (prove)\nusing this:\n  Q \\<longmapsto>?\\<alpha> \\<prec> ?Q' \\<Longrightarrow>\n  \\<exists>P'.\n     P \\<longmapsto>?\\<alpha> \\<prec> P' \\<and> (P', ?Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[Rel] Q", "by(auto simp add: simulation_def)"], ["", "lemma simE:\n  fixes P   :: ccs\n  and   Rel :: \"(ccs \\<times> ccs) set\"\n  and   Q   :: ccs\n  and   \\<alpha>   :: act\n  and   Q'  :: ccs\n\n  assumes \"P \\<leadsto>[Rel] Q\"\n  and     \"Q \\<longmapsto>\\<alpha> \\<prec> Q'\"\n\n  obtains P' where \"P \\<longmapsto>\\<alpha> \\<prec> P'\" and \"(P', Q') \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<longmapsto>\\<alpha> \\<prec> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  P \\<leadsto>[Rel] Q\n  Q \\<longmapsto>\\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<longmapsto>\\<alpha> \\<prec> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto simp add: simulation_def)"], ["", "lemma reflexive:\n  fixes P   :: ccs\n  and   Rel :: \"(ccs \\<times> ccs) set\"\n  \n  assumes \"Id \\<subseteq> Rel\"\n\n  shows \"P \\<leadsto>[Rel] P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<leadsto>[Rel] P", "using assms"], ["proof (prove)\nusing this:\n  Id \\<subseteq> Rel\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[Rel] P", "by(auto simp add: simulation_def)"], ["", "lemma transitive:\n  fixes P     :: ccs\n  and   Rel   :: \"(ccs \\<times> ccs) set\"\n  and   Q     :: ccs\n  and   Rel'  :: \"(ccs \\<times> ccs) set\"\n  and   R     :: ccs\n  and   Rel'' :: \"(ccs \\<times> ccs) set\"\n  \n  assumes \"P \\<leadsto>[Rel] Q\"\n  and     \"Q \\<leadsto>[Rel'] R\"\n  and     \"Rel O Rel' \\<subseteq> Rel''\"\n  \n  shows \"P \\<leadsto>[Rel''] R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<leadsto>[Rel''] R", "using assms"], ["proof (prove)\nusing this:\n  P \\<leadsto>[Rel] Q\n  Q \\<leadsto>[Rel'] R\n  Rel O Rel' \\<subseteq> Rel''\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[Rel''] R", "by(force simp add: simulation_def)"], ["", "end"]]}