{"file_name": "/home/qj213/afp-2021-10-22/thys/CCS/Agent.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CCS", "problem_names": ["lemma coActionEqvt[eqvt]:\n  fixes p :: \"name prm\"\n  and   a :: act\n\n  shows \"(p \\<bullet> coAction a) = coAction(p \\<bullet> a)\"", "lemma coActionSimps[simp]:\n  fixes a :: act\n\n  shows \"coAction(coAction a) = a\"\n  and   \"(coAction a = \\<tau>) = (a = \\<tau>)\"", "lemma coActSimp[simp]: shows \"coAction \\<alpha> \\<noteq> \\<tau> = (\\<alpha> \\<noteq> \\<tau>)\" and \"(coAction \\<alpha> = \\<tau>) = (\\<alpha> = \\<tau>)\"", "lemma coActFresh[simp]:\n  fixes x :: name\n  and   a :: act\n\n  shows \"x \\<sharp> coAction a = x \\<sharp> a\"", "lemma alphaRes:\n  fixes y :: name\n  and   P :: ccs\n  and   x :: name\n\n  assumes \"y \\<sharp> P\"\n  \n  shows \"\\<lparr>\\<nu>x\\<rparr>P = \\<lparr>\\<nu>y\\<rparr>([(x, y)] \\<bullet> P)\"", "lemma semanticsInduct:\n\"\\<lbrakk>R \\<longmapsto>\\<beta> \\<prec> R'; \\<And>\\<alpha> P \\<C>. Prop \\<C> (\\<alpha>.(P)) \\<alpha> P;\n \\<And>P \\<alpha> P' Q \\<C>. \\<lbrakk>P \\<longmapsto>\\<alpha> \\<prec> P'; \\<And>\\<C>. Prop \\<C> P \\<alpha> P'\\<rbrakk> \\<Longrightarrow> Prop \\<C> (ccs.Sum P Q) \\<alpha> P';\n \\<And>Q \\<alpha> Q' P \\<C>. \\<lbrakk>Q \\<longmapsto>\\<alpha> \\<prec> Q'; \\<And>\\<C>. Prop \\<C> Q \\<alpha> Q'\\<rbrakk> \\<Longrightarrow> Prop \\<C> (ccs.Sum P Q) \\<alpha> Q';\n \\<And>P \\<alpha> P' Q \\<C>. \\<lbrakk>P \\<longmapsto>\\<alpha> \\<prec> P'; \\<And>\\<C>. Prop \\<C> P \\<alpha> P'\\<rbrakk> \\<Longrightarrow> Prop \\<C> (P \\<parallel> Q) \\<alpha> (P' \\<parallel> Q);\n \\<And>Q \\<alpha> Q' P \\<C>. \\<lbrakk>Q \\<longmapsto>\\<alpha> \\<prec> Q'; \\<And>\\<C>. Prop \\<C> Q \\<alpha> Q'\\<rbrakk> \\<Longrightarrow> Prop \\<C> (P \\<parallel> Q) \\<alpha> (P \\<parallel> Q');\n \\<And>P a P' Q Q' \\<C>.\n    \\<lbrakk>P \\<longmapsto>a \\<prec> P'; \\<And>\\<C>. Prop \\<C> P a P'; Q \\<longmapsto>(coAction a) \\<prec> Q';\n     \\<And>\\<C>. Prop \\<C> Q (coAction a) Q'; a \\<noteq> \\<tau>\\<rbrakk>\n    \\<Longrightarrow> Prop \\<C> (P \\<parallel> Q) (\\<tau>) (P' \\<parallel> Q');\n \\<And>P \\<alpha> P' x \\<C>.\n    \\<lbrakk>x \\<sharp> \\<C>; P \\<longmapsto>\\<alpha> \\<prec> P'; \\<And>\\<C>. Prop \\<C> P \\<alpha> P'; x \\<sharp> \\<alpha>\\<rbrakk> \\<Longrightarrow> Prop \\<C> (\\<lparr>\\<nu>x\\<rparr>P) \\<alpha> (\\<lparr>\\<nu>x\\<rparr>P');\n \\<And>P \\<alpha> P' \\<C>. \\<lbrakk>P \\<parallel> !P \\<longmapsto>\\<alpha> \\<prec> P'; \\<And>\\<C>. Prop \\<C> (P \\<parallel> !P) \\<alpha> P'\\<rbrakk> \\<Longrightarrow> Prop \\<C> !P \\<alpha> P'\\<rbrakk>\n\n\\<Longrightarrow> Prop (\\<C>::'a::fs_name) R \\<beta> R'\"", "lemma NilTrans[dest]:\n  shows \"\\<zero> \\<longmapsto>\\<alpha> \\<prec> P' \\<Longrightarrow> False\"\n  and   \"(\\<lparr>b\\<rparr>).P \\<longmapsto>\\<langle>c\\<rangle> \\<prec> P' \\<Longrightarrow> False\"\n  and   \"(\\<lparr>b\\<rparr>).P \\<longmapsto>\\<tau> \\<prec> P' \\<Longrightarrow> False\"\n  and   \"(\\<langle>b\\<rangle>).P \\<longmapsto>\\<lparr>c\\<rparr> \\<prec> P' \\<Longrightarrow> False\"\n  and   \"(\\<langle>b\\<rangle>).P \\<longmapsto>\\<tau> \\<prec> P' \\<Longrightarrow> False\"", "lemma freshDerivative:\n  fixes P  :: ccs\n  and   a  :: act\n  and   P' :: ccs\n  and   x  :: name\n\n  assumes \"P \\<longmapsto>\\<alpha> \\<prec> P'\"\n  and     \"x \\<sharp> P\"\n\n  shows \"x \\<sharp> \\<alpha>\" and \"x \\<sharp> P'\"", "lemma actCases[consumes 1, case_names cAct]:\n  fixes \\<alpha>  :: act\n  and   P  :: ccs\n  and   \\<beta>  :: act\n  and   P' :: ccs\n\n  assumes \"\\<alpha>.(P) \\<longmapsto>\\<beta> \\<prec> P'\"\n  and     \"Prop \\<alpha> P\"\n\n  shows \"Prop \\<beta> P'\"", "lemma sumCases[consumes 1, case_names cSum1 cSum2]:\n  fixes P :: ccs\n  and   Q :: ccs\n  and   \\<alpha> :: act\n  and   R :: ccs\n\n  assumes \"P \\<oplus> Q \\<longmapsto>\\<alpha> \\<prec> R\"\n  and     \"\\<And>P'. P \\<longmapsto>\\<alpha> \\<prec> P' \\<Longrightarrow> Prop P'\"\n  and     \"\\<And>Q'. Q \\<longmapsto>\\<alpha> \\<prec> Q' \\<Longrightarrow> Prop Q'\"\n\n  shows \"Prop R\"", "lemma parCases[consumes 1, case_names cPar1 cPar2 cComm]:\n  fixes P :: ccs\n  and   Q :: ccs\n  and   a :: act\n  and   R :: ccs\n\n  assumes \"P \\<parallel> Q \\<longmapsto>\\<alpha> \\<prec> R\"\n  and     \"\\<And>P'. P \\<longmapsto>\\<alpha> \\<prec> P' \\<Longrightarrow> Prop \\<alpha> (P' \\<parallel> Q)\"\n  and     \"\\<And>Q'. Q \\<longmapsto>\\<alpha> \\<prec> Q' \\<Longrightarrow> Prop \\<alpha> (P \\<parallel> Q')\"\n  and     \"\\<And>P' Q' a. \\<lbrakk>P \\<longmapsto>a \\<prec> P'; Q \\<longmapsto>(coAction a) \\<prec> Q'; a \\<noteq> \\<tau>; \\<alpha> = \\<tau>\\<rbrakk> \\<Longrightarrow> Prop (\\<tau>) (P' \\<parallel> Q')\"\n\n  shows \"Prop \\<alpha> R\"", "lemma resCases[consumes 1, case_names cRes]:\n  fixes x  :: name\n  and   P  :: ccs\n  and   \\<alpha>  :: act\n  and   P' :: ccs\n\n  assumes \"\\<lparr>\\<nu>x\\<rparr>P \\<longmapsto>\\<alpha> \\<prec> P'\"\n  and     \"\\<And>P'. \\<lbrakk>P \\<longmapsto>\\<alpha> \\<prec> P'; x \\<sharp> \\<alpha>\\<rbrakk> \\<Longrightarrow> Prop (\\<lparr>\\<nu>x\\<rparr>P')\"\n\n  shows \"Prop P'\"", "lemma bangInduct[consumes 1, case_names cPar1 cPar2 cComm cBang]:\n  fixes P  :: ccs\n  and   \\<alpha>  :: act\n  and   P' :: ccs\n  and   \\<C>  :: \"'a::fs_name\"\n\n  assumes \"!P \\<longmapsto>\\<alpha> \\<prec> P'\"\n  and     rPar1: \"\\<And>\\<alpha> P' \\<C>. \\<lbrakk>P \\<longmapsto>\\<alpha> \\<prec> P'\\<rbrakk> \\<Longrightarrow> Prop \\<C> (P \\<parallel> !P) \\<alpha> (P' \\<parallel> !P)\"\n  and     rPar2: \"\\<And>\\<alpha> P' \\<C>. \\<lbrakk>!P \\<longmapsto>\\<alpha> \\<prec> P'; \\<And>\\<C>. Prop \\<C> (!P) \\<alpha> P'\\<rbrakk> \\<Longrightarrow> Prop \\<C> (P \\<parallel> !P) \\<alpha> (P \\<parallel> P')\"\n  and     rComm: \"\\<And>a P' P'' \\<C>. \\<lbrakk>P \\<longmapsto>a \\<prec> P'; !P \\<longmapsto>(coAction a) \\<prec> P''; \\<And>\\<C>. Prop \\<C> (!P) (coAction a) P''; a \\<noteq> \\<tau>\\<rbrakk> \\<Longrightarrow> Prop \\<C> (P \\<parallel> !P) (\\<tau>) (P' \\<parallel> P'')\"\n  and     rBang: \"\\<And>\\<alpha> P' \\<C>. \\<lbrakk>P \\<parallel> !P \\<longmapsto>\\<alpha> \\<prec> P'; \\<And>\\<C>. Prop \\<C> (P \\<parallel> !P) \\<alpha> P'\\<rbrakk> \\<Longrightarrow> Prop \\<C> (!P) \\<alpha> P'\"\n\n\n  shows \"Prop \\<C> (!P) \\<alpha> P'\"", "lemma BRBangCases[consumes 1, case_names BRBang]:\n  fixes P   :: ccs\n  and   Q   :: ccs\n  and   Rel :: \"(ccs \\<times> ccs) set\"\n  and   F   :: \"ccs \\<Rightarrow> bool\"\n\n  assumes \"(P, !Q) \\<in> bangRel Rel\"\n  and     \"\\<And>P. (P, Q) \\<in> Rel \\<Longrightarrow> F (!P)\"\n  \n  shows \"F P\"", "lemma BRParCases[consumes 1, case_names BRPar]:\n  fixes P   :: ccs\n  and   Q   :: ccs\n  and   Rel :: \"(ccs \\<times> ccs) set\"\n  and   F   :: \"ccs \\<Rightarrow> bool\"\n\n  assumes \"(P, Q \\<parallel> !Q) \\<in> bangRel Rel\"\n  and     \"\\<And>P R. \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel\\<rbrakk> \\<Longrightarrow> F (P \\<parallel> R)\"\n\n  shows \"F P\"", "lemma bangRelSubset:\n  fixes Rel  :: \"(ccs \\<times> ccs) set\"\n  and   Rel' :: \"(ccs \\<times> ccs) set\"\n\n  assumes \"(P, Q) \\<in> bangRel Rel\"\n  and     \"\\<And>P Q. (P, Q) \\<in> Rel \\<Longrightarrow> (P, Q) \\<in> Rel'\"\n\n  shows \"(P, Q) \\<in> bangRel Rel'\""], "translations": [["", "lemma coActionEqvt[eqvt]:\n  fixes p :: \"name prm\"\n  and   a :: act\n\n  shows \"(p \\<bullet> coAction a) = coAction(p \\<bullet> a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<bullet> coAction a = coAction (p \\<bullet> a)", "by(nominal_induct a rule: act.strong_induct) (auto simp add: eqvts)"], ["", "lemma coActionSimps[simp]:\n  fixes a :: act\n\n  shows \"coAction(coAction a) = a\"\n  and   \"(coAction a = \\<tau>) = (a = \\<tau>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coAction (coAction a) = a &&& (coAction a = \\<tau>) = (a = \\<tau>)", "by auto (nominal_induct rule: act.strong_induct, auto)+"], ["", "lemma coActSimp[simp]: shows \"coAction \\<alpha> \\<noteq> \\<tau> = (\\<alpha> \\<noteq> \\<tau>)\" and \"(coAction \\<alpha> = \\<tau>) = (\\<alpha> = \\<tau>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (coAction \\<alpha> \\<noteq> \\<tau>) = (\\<alpha> \\<noteq> \\<tau>) &&&\n    (coAction \\<alpha> = \\<tau>) = (\\<alpha> = \\<tau>)", "by(nominal_induct \\<alpha> rule: act.strong_induct) auto"], ["", "lemma coActFresh[simp]:\n  fixes x :: name\n  and   a :: act\n\n  shows \"x \\<sharp> coAction a = x \\<sharp> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> coAction a = x \\<sharp> a", "by(nominal_induct a rule: act.strong_induct) (auto)"], ["", "lemma alphaRes:\n  fixes y :: name\n  and   P :: ccs\n  and   x :: name\n\n  assumes \"y \\<sharp> P\"\n  \n  shows \"\\<lparr>\\<nu>x\\<rparr>P = \\<lparr>\\<nu>y\\<rparr>([(x, y)] \\<bullet> P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lparr>\\<nu>x\\<rparr>P = \\<lparr>\\<nu>y\\<rparr>([(x, y)] \\<bullet> P)", "using assms"], ["proof (prove)\nusing this:\n  y \\<sharp> P\n\ngoal (1 subgoal):\n 1. \\<lparr>\\<nu>x\\<rparr>P = \\<lparr>\\<nu>y\\<rparr>([(x, y)] \\<bullet> P)", "by(auto simp add: ccs.inject alpha fresh_left calc_atm pt_swap_bij[OF pt_name_inst, OF at_name_inst]pt3[OF pt_name_inst, OF at_ds1[OF at_name_inst]])"], ["", "inductive semantics :: \"ccs \\<Rightarrow> act \\<Rightarrow> ccs \\<Rightarrow> bool\"    (\"_ \\<longmapsto>_ \\<prec> _\" [80, 80, 80] 80)\nwhere\n  Action:   \"\\<alpha>.(P) \\<longmapsto>\\<alpha> \\<prec> P\"\n| Sum1:     \"P \\<longmapsto>\\<alpha> \\<prec> P' \\<Longrightarrow> P \\<oplus> Q \\<longmapsto>\\<alpha> \\<prec> P'\"\n| Sum2:     \"Q \\<longmapsto>\\<alpha> \\<prec> Q' \\<Longrightarrow> P \\<oplus> Q \\<longmapsto>\\<alpha> \\<prec> Q'\"\n| Par1:     \"P \\<longmapsto>\\<alpha> \\<prec> P' \\<Longrightarrow> P \\<parallel> Q \\<longmapsto>\\<alpha> \\<prec> P' \\<parallel> Q\"\n| Par2:     \"Q \\<longmapsto>\\<alpha> \\<prec> Q' \\<Longrightarrow> P \\<parallel> Q \\<longmapsto>\\<alpha> \\<prec> P \\<parallel> Q'\"\n| Comm:     \"\\<lbrakk>P \\<longmapsto>a \\<prec> P'; Q \\<longmapsto>(coAction a) \\<prec> Q'; a \\<noteq> \\<tau>\\<rbrakk> \\<Longrightarrow> P \\<parallel> Q \\<longmapsto>\\<tau> \\<prec> P' \\<parallel> Q'\"\n| Res:      \"\\<lbrakk>P \\<longmapsto>\\<alpha> \\<prec> P'; x \\<sharp> \\<alpha>\\<rbrakk> \\<Longrightarrow> \\<lparr>\\<nu>x\\<rparr>P \\<longmapsto>\\<alpha> \\<prec> \\<lparr>\\<nu>x\\<rparr>P'\"\n| Bang:     \"P \\<parallel> !P \\<longmapsto>\\<alpha> \\<prec> P' \\<Longrightarrow> !P \\<longmapsto>\\<alpha> \\<prec> P'\""], ["", "equivariance semantics"], ["", "nominal_inductive semantics"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>P \\<alpha> P' x.\n        \\<lbrakk>P \\<longmapsto>\\<alpha> \\<prec> P';\n         x \\<sharp> \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> x \\<sharp> \\<lparr>\\<nu>x\\<rparr>P) &&&\n    (\\<And>P \\<alpha> P' x.\n        \\<lbrakk>P \\<longmapsto>\\<alpha> \\<prec> P';\n         x \\<sharp> \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> x \\<sharp> \\<alpha>) &&&\n    (\\<And>P \\<alpha> P' x.\n        \\<lbrakk>P \\<longmapsto>\\<alpha> \\<prec> P';\n         x \\<sharp> \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> x \\<sharp> \\<lparr>\\<nu>x\\<rparr>P')", "by(auto simp add: abs_fresh)"], ["", "lemma semanticsInduct:\n\"\\<lbrakk>R \\<longmapsto>\\<beta> \\<prec> R'; \\<And>\\<alpha> P \\<C>. Prop \\<C> (\\<alpha>.(P)) \\<alpha> P;\n \\<And>P \\<alpha> P' Q \\<C>. \\<lbrakk>P \\<longmapsto>\\<alpha> \\<prec> P'; \\<And>\\<C>. Prop \\<C> P \\<alpha> P'\\<rbrakk> \\<Longrightarrow> Prop \\<C> (ccs.Sum P Q) \\<alpha> P';\n \\<And>Q \\<alpha> Q' P \\<C>. \\<lbrakk>Q \\<longmapsto>\\<alpha> \\<prec> Q'; \\<And>\\<C>. Prop \\<C> Q \\<alpha> Q'\\<rbrakk> \\<Longrightarrow> Prop \\<C> (ccs.Sum P Q) \\<alpha> Q';\n \\<And>P \\<alpha> P' Q \\<C>. \\<lbrakk>P \\<longmapsto>\\<alpha> \\<prec> P'; \\<And>\\<C>. Prop \\<C> P \\<alpha> P'\\<rbrakk> \\<Longrightarrow> Prop \\<C> (P \\<parallel> Q) \\<alpha> (P' \\<parallel> Q);\n \\<And>Q \\<alpha> Q' P \\<C>. \\<lbrakk>Q \\<longmapsto>\\<alpha> \\<prec> Q'; \\<And>\\<C>. Prop \\<C> Q \\<alpha> Q'\\<rbrakk> \\<Longrightarrow> Prop \\<C> (P \\<parallel> Q) \\<alpha> (P \\<parallel> Q');\n \\<And>P a P' Q Q' \\<C>.\n    \\<lbrakk>P \\<longmapsto>a \\<prec> P'; \\<And>\\<C>. Prop \\<C> P a P'; Q \\<longmapsto>(coAction a) \\<prec> Q';\n     \\<And>\\<C>. Prop \\<C> Q (coAction a) Q'; a \\<noteq> \\<tau>\\<rbrakk>\n    \\<Longrightarrow> Prop \\<C> (P \\<parallel> Q) (\\<tau>) (P' \\<parallel> Q');\n \\<And>P \\<alpha> P' x \\<C>.\n    \\<lbrakk>x \\<sharp> \\<C>; P \\<longmapsto>\\<alpha> \\<prec> P'; \\<And>\\<C>. Prop \\<C> P \\<alpha> P'; x \\<sharp> \\<alpha>\\<rbrakk> \\<Longrightarrow> Prop \\<C> (\\<lparr>\\<nu>x\\<rparr>P) \\<alpha> (\\<lparr>\\<nu>x\\<rparr>P');\n \\<And>P \\<alpha> P' \\<C>. \\<lbrakk>P \\<parallel> !P \\<longmapsto>\\<alpha> \\<prec> P'; \\<And>\\<C>. Prop \\<C> (P \\<parallel> !P) \\<alpha> P'\\<rbrakk> \\<Longrightarrow> Prop \\<C> !P \\<alpha> P'\\<rbrakk>\n\n\\<Longrightarrow> Prop (\\<C>::'a::fs_name) R \\<beta> R'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R \\<longmapsto>\\<beta> \\<prec> R';\n     \\<And>\\<alpha> P \\<C>. Prop \\<C> (\\<alpha>.P) \\<alpha> P;\n     \\<And>P \\<alpha> P' Q \\<C>.\n        \\<lbrakk>P \\<longmapsto>\\<alpha> \\<prec> P';\n         \\<And>\\<C>. Prop \\<C> P \\<alpha> P'\\<rbrakk>\n        \\<Longrightarrow> Prop \\<C> (P \\<oplus> Q) \\<alpha> P';\n     \\<And>Q \\<alpha> Q' P \\<C>.\n        \\<lbrakk>Q \\<longmapsto>\\<alpha> \\<prec> Q';\n         \\<And>\\<C>. Prop \\<C> Q \\<alpha> Q'\\<rbrakk>\n        \\<Longrightarrow> Prop \\<C> (P \\<oplus> Q) \\<alpha> Q';\n     \\<And>P \\<alpha> P' Q \\<C>.\n        \\<lbrakk>P \\<longmapsto>\\<alpha> \\<prec> P';\n         \\<And>\\<C>. Prop \\<C> P \\<alpha> P'\\<rbrakk>\n        \\<Longrightarrow> Prop \\<C> (P \\<parallel> Q) \\<alpha>\n                           (P' \\<parallel> Q);\n     \\<And>Q \\<alpha> Q' P \\<C>.\n        \\<lbrakk>Q \\<longmapsto>\\<alpha> \\<prec> Q';\n         \\<And>\\<C>. Prop \\<C> Q \\<alpha> Q'\\<rbrakk>\n        \\<Longrightarrow> Prop \\<C> (P \\<parallel> Q) \\<alpha>\n                           (P \\<parallel> Q');\n     \\<And>P a P' Q Q' \\<C>.\n        \\<lbrakk>P \\<longmapsto>a \\<prec> P'; \\<And>\\<C>. Prop \\<C> P a P';\n         Q \\<longmapsto>coAction a \\<prec> Q';\n         \\<And>\\<C>. Prop \\<C> Q (coAction a) Q'; a \\<noteq> \\<tau>\\<rbrakk>\n        \\<Longrightarrow> Prop \\<C> (P \\<parallel> Q) (\\<tau>)\n                           (P' \\<parallel> Q');\n     \\<And>P \\<alpha> P' x \\<C>.\n        \\<lbrakk>x \\<sharp> \\<C>; P \\<longmapsto>\\<alpha> \\<prec> P';\n         \\<And>\\<C>. Prop \\<C> P \\<alpha> P'; x \\<sharp> \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> Prop \\<C> (\\<lparr>\\<nu>x\\<rparr>P) \\<alpha>\n                           (\\<lparr>\\<nu>x\\<rparr>P');\n     \\<And>P \\<alpha> P' \\<C>.\n        \\<lbrakk>P \\<parallel> !P \\<longmapsto>\\<alpha> \\<prec> P';\n         \\<And>\\<C>. Prop \\<C> (P \\<parallel> !P) \\<alpha> P'\\<rbrakk>\n        \\<Longrightarrow> Prop \\<C> !P \\<alpha> P'\\<rbrakk>\n    \\<Longrightarrow> Prop \\<C> R \\<beta> R'", "by(erule_tac z=\\<C> in semantics.strong_induct) auto"], ["", "lemma NilTrans[dest]:\n  shows \"\\<zero> \\<longmapsto>\\<alpha> \\<prec> P' \\<Longrightarrow> False\"\n  and   \"(\\<lparr>b\\<rparr>).P \\<longmapsto>\\<langle>c\\<rangle> \\<prec> P' \\<Longrightarrow> False\"\n  and   \"(\\<lparr>b\\<rparr>).P \\<longmapsto>\\<tau> \\<prec> P' \\<Longrightarrow> False\"\n  and   \"(\\<langle>b\\<rangle>).P \\<longmapsto>\\<lparr>c\\<rparr> \\<prec> P' \\<Longrightarrow> False\"\n  and   \"(\\<langle>b\\<rangle>).P \\<longmapsto>\\<tau> \\<prec> P' \\<Longrightarrow> False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<zero> \\<longmapsto>\\<alpha> \\<prec> P' \\<Longrightarrow> False) &&&\n     ((\\<lparr>b\\<rparr>).P \\<longmapsto>\\<langle>c\\<rangle> \\<prec> P' \\<Longrightarrow>\n      False)) &&&\n    ((\\<lparr>b\\<rparr>).P \\<longmapsto>\\<tau> \\<prec> P' \\<Longrightarrow>\n     False) &&&\n    ((\\<langle>b\\<rangle>).P \\<longmapsto>\\<lparr>c\\<rparr> \\<prec> P' \\<Longrightarrow>\n     False) &&&\n    ((\\<langle>b\\<rangle>).P \\<longmapsto>\\<tau> \\<prec> P' \\<Longrightarrow>\n     False)", "apply(ind_cases \"\\<zero> \\<longmapsto>\\<alpha> \\<prec> P'\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. (\\<lparr>b\\<rparr>).P \\<longmapsto>\\<langle>c\\<rangle> \\<prec> P' \\<Longrightarrow>\n    False\n 2. (\\<lparr>b\\<rparr>).P \\<longmapsto>\\<tau> \\<prec> P' \\<Longrightarrow>\n    False\n 3. (\\<langle>b\\<rangle>).P \\<longmapsto>\\<lparr>c\\<rparr> \\<prec> P' \\<Longrightarrow>\n    False\n 4. (\\<langle>b\\<rangle>).P \\<longmapsto>\\<tau> \\<prec> P' \\<Longrightarrow>\n    False", "apply(ind_cases \"(\\<lparr>b\\<rparr>).P \\<longmapsto>\\<langle>c\\<rangle> \\<prec> P'\", auto simp add: ccs.inject)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (\\<lparr>b\\<rparr>).P \\<longmapsto>\\<tau> \\<prec> P' \\<Longrightarrow>\n    False\n 2. (\\<langle>b\\<rangle>).P \\<longmapsto>\\<lparr>c\\<rparr> \\<prec> P' \\<Longrightarrow>\n    False\n 3. (\\<langle>b\\<rangle>).P \\<longmapsto>\\<tau> \\<prec> P' \\<Longrightarrow>\n    False", "apply(ind_cases \"(\\<lparr>b\\<rparr>).P \\<longmapsto>\\<tau> \\<prec> P'\", auto simp add: ccs.inject)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<langle>b\\<rangle>).P \\<longmapsto>\\<lparr>c\\<rparr> \\<prec> P' \\<Longrightarrow>\n    False\n 2. (\\<langle>b\\<rangle>).P \\<longmapsto>\\<tau> \\<prec> P' \\<Longrightarrow>\n    False", "apply(ind_cases \"(\\<langle>b\\<rangle>).P \\<longmapsto>\\<lparr>c\\<rparr> \\<prec> P'\", auto simp add: ccs.inject)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<langle>b\\<rangle>).P \\<longmapsto>\\<tau> \\<prec> P' \\<Longrightarrow>\n    False", "apply(ind_cases \"(\\<langle>b\\<rangle>).P \\<longmapsto>\\<tau> \\<prec> P'\", auto simp add: ccs.inject)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma freshDerivative:\n  fixes P  :: ccs\n  and   a  :: act\n  and   P' :: ccs\n  and   x  :: name\n\n  assumes \"P \\<longmapsto>\\<alpha> \\<prec> P'\"\n  and     \"x \\<sharp> P\"\n\n  shows \"x \\<sharp> \\<alpha>\" and \"x \\<sharp> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> \\<alpha> &&& x \\<sharp> P'", "using assms"], ["proof (prove)\nusing this:\n  P \\<longmapsto>\\<alpha> \\<prec> P'\n  x \\<sharp> P\n\ngoal (1 subgoal):\n 1. x \\<sharp> \\<alpha> &&& x \\<sharp> P'", "by(nominal_induct rule: semantics.strong_induct)\n  (auto simp add: ccs.fresh abs_fresh)"], ["", "lemma actCases[consumes 1, case_names cAct]:\n  fixes \\<alpha>  :: act\n  and   P  :: ccs\n  and   \\<beta>  :: act\n  and   P' :: ccs\n\n  assumes \"\\<alpha>.(P) \\<longmapsto>\\<beta> \\<prec> P'\"\n  and     \"Prop \\<alpha> P\"\n\n  shows \"Prop \\<beta> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Prop \\<beta> P'", "using assms"], ["proof (prove)\nusing this:\n  \\<alpha>.P \\<longmapsto>\\<beta> \\<prec> P'\n  Prop \\<alpha> P\n\ngoal (1 subgoal):\n 1. Prop \\<beta> P'", "by - (ind_cases \"\\<alpha>.(P) \\<longmapsto>\\<beta> \\<prec> P'\", auto simp add: ccs.inject)"], ["", "lemma sumCases[consumes 1, case_names cSum1 cSum2]:\n  fixes P :: ccs\n  and   Q :: ccs\n  and   \\<alpha> :: act\n  and   R :: ccs\n\n  assumes \"P \\<oplus> Q \\<longmapsto>\\<alpha> \\<prec> R\"\n  and     \"\\<And>P'. P \\<longmapsto>\\<alpha> \\<prec> P' \\<Longrightarrow> Prop P'\"\n  and     \"\\<And>Q'. Q \\<longmapsto>\\<alpha> \\<prec> Q' \\<Longrightarrow> Prop Q'\"\n\n  shows \"Prop R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Prop R", "using assms"], ["proof (prove)\nusing this:\n  P \\<oplus> Q \\<longmapsto>\\<alpha> \\<prec> R\n  P \\<longmapsto>\\<alpha> \\<prec> ?P' \\<Longrightarrow> Prop ?P'\n  Q \\<longmapsto>\\<alpha> \\<prec> ?Q' \\<Longrightarrow> Prop ?Q'\n\ngoal (1 subgoal):\n 1. Prop R", "by - (ind_cases \"P \\<oplus> Q \\<longmapsto>\\<alpha> \\<prec> R\", auto simp add: ccs.inject)"], ["", "lemma parCases[consumes 1, case_names cPar1 cPar2 cComm]:\n  fixes P :: ccs\n  and   Q :: ccs\n  and   a :: act\n  and   R :: ccs\n\n  assumes \"P \\<parallel> Q \\<longmapsto>\\<alpha> \\<prec> R\"\n  and     \"\\<And>P'. P \\<longmapsto>\\<alpha> \\<prec> P' \\<Longrightarrow> Prop \\<alpha> (P' \\<parallel> Q)\"\n  and     \"\\<And>Q'. Q \\<longmapsto>\\<alpha> \\<prec> Q' \\<Longrightarrow> Prop \\<alpha> (P \\<parallel> Q')\"\n  and     \"\\<And>P' Q' a. \\<lbrakk>P \\<longmapsto>a \\<prec> P'; Q \\<longmapsto>(coAction a) \\<prec> Q'; a \\<noteq> \\<tau>; \\<alpha> = \\<tau>\\<rbrakk> \\<Longrightarrow> Prop (\\<tau>) (P' \\<parallel> Q')\"\n\n  shows \"Prop \\<alpha> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Prop \\<alpha> R", "using assms"], ["proof (prove)\nusing this:\n  P \\<parallel> Q \\<longmapsto>\\<alpha> \\<prec> R\n  P \\<longmapsto>\\<alpha> \\<prec> ?P' \\<Longrightarrow>\n  Prop \\<alpha> (?P' \\<parallel> Q)\n  Q \\<longmapsto>\\<alpha> \\<prec> ?Q' \\<Longrightarrow>\n  Prop \\<alpha> (P \\<parallel> ?Q')\n  \\<lbrakk>P \\<longmapsto>?a \\<prec> ?P';\n   Q \\<longmapsto>coAction ?a \\<prec> ?Q'; ?a \\<noteq> \\<tau>;\n   \\<alpha> = \\<tau>\\<rbrakk>\n  \\<Longrightarrow> Prop (\\<tau>) (?P' \\<parallel> ?Q')\n\ngoal (1 subgoal):\n 1. Prop \\<alpha> R", "by - (ind_cases \"P \\<parallel> Q \\<longmapsto>\\<alpha> \\<prec> R\", auto simp add: ccs.inject)"], ["", "lemma resCases[consumes 1, case_names cRes]:\n  fixes x  :: name\n  and   P  :: ccs\n  and   \\<alpha>  :: act\n  and   P' :: ccs\n\n  assumes \"\\<lparr>\\<nu>x\\<rparr>P \\<longmapsto>\\<alpha> \\<prec> P'\"\n  and     \"\\<And>P'. \\<lbrakk>P \\<longmapsto>\\<alpha> \\<prec> P'; x \\<sharp> \\<alpha>\\<rbrakk> \\<Longrightarrow> Prop (\\<lparr>\\<nu>x\\<rparr>P')\"\n\n  shows \"Prop P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Prop P'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Prop P'", "from \\<open>\\<lparr>\\<nu>x\\<rparr>P \\<longmapsto>\\<alpha> \\<prec> P'\\<close>"], ["proof (chain)\npicking this:\n  \\<lparr>\\<nu>x\\<rparr>P \\<longmapsto>\\<alpha> \\<prec> P'", "have \"x \\<sharp> \\<alpha>\" and \"x \\<sharp> P'\""], ["proof (prove)\nusing this:\n  \\<lparr>\\<nu>x\\<rparr>P \\<longmapsto>\\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. x \\<sharp> \\<alpha> &&& x \\<sharp> P'", "by(auto intro: freshDerivative simp add: abs_fresh)+"], ["proof (state)\nthis:\n  x \\<sharp> \\<alpha>\n  x \\<sharp> P'\n\ngoal (1 subgoal):\n 1. Prop P'", "with assms"], ["proof (chain)\npicking this:\n  \\<lparr>\\<nu>x\\<rparr>P \\<longmapsto>\\<alpha> \\<prec> P'\n  \\<lbrakk>P \\<longmapsto>\\<alpha> \\<prec> ?P'; x \\<sharp> \\<alpha>\\<rbrakk>\n  \\<Longrightarrow> Prop (\\<lparr>\\<nu>x\\<rparr>?P')\n  x \\<sharp> \\<alpha>\n  x \\<sharp> P'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lparr>\\<nu>x\\<rparr>P \\<longmapsto>\\<alpha> \\<prec> P'\n  \\<lbrakk>P \\<longmapsto>\\<alpha> \\<prec> ?P'; x \\<sharp> \\<alpha>\\<rbrakk>\n  \\<Longrightarrow> Prop (\\<lparr>\\<nu>x\\<rparr>?P')\n  x \\<sharp> \\<alpha>\n  x \\<sharp> P'\n\ngoal (1 subgoal):\n 1. Prop P'", "by(cases rule: semantics.strong_cases[of _ _ _ _ x])\n      (auto simp add: abs_fresh ccs.inject alpha)"], ["proof (state)\nthis:\n  Prop P'\n\ngoal:\nNo subgoals!", "qed"], ["", "inductive bangPred :: \"ccs \\<Rightarrow> ccs \\<Rightarrow> bool\"\nwhere\n  aux1: \"bangPred P (!P)\"\n| aux2: \"bangPred P (P \\<parallel> !P)\""], ["", "lemma bangInduct[consumes 1, case_names cPar1 cPar2 cComm cBang]:\n  fixes P  :: ccs\n  and   \\<alpha>  :: act\n  and   P' :: ccs\n  and   \\<C>  :: \"'a::fs_name\"\n\n  assumes \"!P \\<longmapsto>\\<alpha> \\<prec> P'\"\n  and     rPar1: \"\\<And>\\<alpha> P' \\<C>. \\<lbrakk>P \\<longmapsto>\\<alpha> \\<prec> P'\\<rbrakk> \\<Longrightarrow> Prop \\<C> (P \\<parallel> !P) \\<alpha> (P' \\<parallel> !P)\"\n  and     rPar2: \"\\<And>\\<alpha> P' \\<C>. \\<lbrakk>!P \\<longmapsto>\\<alpha> \\<prec> P'; \\<And>\\<C>. Prop \\<C> (!P) \\<alpha> P'\\<rbrakk> \\<Longrightarrow> Prop \\<C> (P \\<parallel> !P) \\<alpha> (P \\<parallel> P')\"\n  and     rComm: \"\\<And>a P' P'' \\<C>. \\<lbrakk>P \\<longmapsto>a \\<prec> P'; !P \\<longmapsto>(coAction a) \\<prec> P''; \\<And>\\<C>. Prop \\<C> (!P) (coAction a) P''; a \\<noteq> \\<tau>\\<rbrakk> \\<Longrightarrow> Prop \\<C> (P \\<parallel> !P) (\\<tau>) (P' \\<parallel> P'')\"\n  and     rBang: \"\\<And>\\<alpha> P' \\<C>. \\<lbrakk>P \\<parallel> !P \\<longmapsto>\\<alpha> \\<prec> P'; \\<And>\\<C>. Prop \\<C> (P \\<parallel> !P) \\<alpha> P'\\<rbrakk> \\<Longrightarrow> Prop \\<C> (!P) \\<alpha> P'\"\n\n\n  shows \"Prop \\<C> (!P) \\<alpha> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Prop \\<C> !P \\<alpha> P'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Prop \\<C> !P \\<alpha> P'", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. Prop \\<C> !P \\<alpha> P'", "fix X \\<alpha> P'"], ["proof (state)\ngoal (1 subgoal):\n 1. Prop \\<C> !P \\<alpha> P'", "assume \"X \\<longmapsto>\\<alpha> \\<prec> P'\" and \"bangPred P X\""], ["proof (state)\nthis:\n  X \\<longmapsto>\\<alpha> \\<prec> P'\n  bangPred P X\n\ngoal (1 subgoal):\n 1. Prop \\<C> !P \\<alpha> P'", "hence \"Prop \\<C> X \\<alpha> P'\""], ["proof (prove)\nusing this:\n  X \\<longmapsto>\\<alpha> \\<prec> P'\n  bangPred P X\n\ngoal (1 subgoal):\n 1. Prop \\<C> X \\<alpha> P'", "proof(nominal_induct avoiding: \\<C> rule: semantics.strong_induct)"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>\\<alpha> Pa \\<C>.\n       bangPred P (\\<alpha>.Pa) \\<Longrightarrow>\n       Prop \\<C> (\\<alpha>.Pa) \\<alpha> Pa\n 2. \\<And>Pa \\<alpha> P' Q \\<C>.\n       \\<lbrakk>Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        bangPred P (Pa \\<oplus> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<oplus> Q) \\<alpha> P'\n 3. \\<And>Q \\<alpha> Q' Pa \\<C>.\n       \\<lbrakk>Q \\<longmapsto>\\<alpha> \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q \\<alpha> Q';\n        bangPred P (Pa \\<oplus> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<oplus> Q) \\<alpha> Q'\n 4. \\<And>Pa \\<alpha> P' Q \\<C>.\n       \\<lbrakk>Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) \\<alpha>\n                          (P' \\<parallel> Q)\n 5. \\<And>Q \\<alpha> Q' Pa \\<C>.\n       \\<lbrakk>Q \\<longmapsto>\\<alpha> \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q \\<alpha> Q';\n        bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) \\<alpha>\n                          (Pa \\<parallel> Q')\n 6. \\<And>Pa a P' Q Q' \\<C>.\n       \\<lbrakk>Pa \\<longmapsto>a \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa a P';\n        Q \\<longmapsto>coAction a \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q (coAction a) Q';\n        a \\<noteq> \\<tau>; bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) (\\<tau>)\n                          (P' \\<parallel> Q')\n 7. \\<And>Pa \\<alpha> P' x \\<C>.\n       \\<lbrakk>x \\<sharp> \\<C>; Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        x \\<sharp> \\<alpha>; bangPred P (\\<lparr>\\<nu>x\\<rparr>Pa)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (\\<lparr>\\<nu>x\\<rparr>Pa) \\<alpha>\n                          (\\<lparr>\\<nu>x\\<rparr>P')\n 8. \\<And>Pa \\<alpha> P' \\<C>.\n       \\<lbrakk>Pa \\<parallel> !Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b.\n           bangPred P (Pa \\<parallel> !Pa) \\<Longrightarrow>\n           Prop b (Pa \\<parallel> !Pa) \\<alpha> P';\n        bangPred P !Pa\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> !Pa \\<alpha> P'", "case(Action \\<alpha> Pa)"], ["proof (state)\nthis:\n  bangPred P (\\<alpha>.Pa)\n\ngoal (8 subgoals):\n 1. \\<And>\\<alpha> Pa \\<C>.\n       bangPred P (\\<alpha>.Pa) \\<Longrightarrow>\n       Prop \\<C> (\\<alpha>.Pa) \\<alpha> Pa\n 2. \\<And>Pa \\<alpha> P' Q \\<C>.\n       \\<lbrakk>Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        bangPred P (Pa \\<oplus> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<oplus> Q) \\<alpha> P'\n 3. \\<And>Q \\<alpha> Q' Pa \\<C>.\n       \\<lbrakk>Q \\<longmapsto>\\<alpha> \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q \\<alpha> Q';\n        bangPred P (Pa \\<oplus> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<oplus> Q) \\<alpha> Q'\n 4. \\<And>Pa \\<alpha> P' Q \\<C>.\n       \\<lbrakk>Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) \\<alpha>\n                          (P' \\<parallel> Q)\n 5. \\<And>Q \\<alpha> Q' Pa \\<C>.\n       \\<lbrakk>Q \\<longmapsto>\\<alpha> \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q \\<alpha> Q';\n        bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) \\<alpha>\n                          (Pa \\<parallel> Q')\n 6. \\<And>Pa a P' Q Q' \\<C>.\n       \\<lbrakk>Pa \\<longmapsto>a \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa a P';\n        Q \\<longmapsto>coAction a \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q (coAction a) Q';\n        a \\<noteq> \\<tau>; bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) (\\<tau>)\n                          (P' \\<parallel> Q')\n 7. \\<And>Pa \\<alpha> P' x \\<C>.\n       \\<lbrakk>x \\<sharp> \\<C>; Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        x \\<sharp> \\<alpha>; bangPred P (\\<lparr>\\<nu>x\\<rparr>Pa)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (\\<lparr>\\<nu>x\\<rparr>Pa) \\<alpha>\n                          (\\<lparr>\\<nu>x\\<rparr>P')\n 8. \\<And>Pa \\<alpha> P' \\<C>.\n       \\<lbrakk>Pa \\<parallel> !Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b.\n           bangPred P (Pa \\<parallel> !Pa) \\<Longrightarrow>\n           Prop b (Pa \\<parallel> !Pa) \\<alpha> P';\n        bangPred P !Pa\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> !Pa \\<alpha> P'", "thus ?case"], ["proof (prove)\nusing this:\n  bangPred P (\\<alpha>.Pa)\n\ngoal (1 subgoal):\n 1. Prop \\<C> (\\<alpha>.Pa) \\<alpha> Pa", "by - (ind_cases \"bangPred P (\\<alpha>.(Pa))\")"], ["proof (state)\nthis:\n  Prop \\<C> (\\<alpha>.Pa) \\<alpha> Pa\n\ngoal (7 subgoals):\n 1. \\<And>Pa \\<alpha> P' Q \\<C>.\n       \\<lbrakk>Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        bangPred P (Pa \\<oplus> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<oplus> Q) \\<alpha> P'\n 2. \\<And>Q \\<alpha> Q' Pa \\<C>.\n       \\<lbrakk>Q \\<longmapsto>\\<alpha> \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q \\<alpha> Q';\n        bangPred P (Pa \\<oplus> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<oplus> Q) \\<alpha> Q'\n 3. \\<And>Pa \\<alpha> P' Q \\<C>.\n       \\<lbrakk>Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) \\<alpha>\n                          (P' \\<parallel> Q)\n 4. \\<And>Q \\<alpha> Q' Pa \\<C>.\n       \\<lbrakk>Q \\<longmapsto>\\<alpha> \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q \\<alpha> Q';\n        bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) \\<alpha>\n                          (Pa \\<parallel> Q')\n 5. \\<And>Pa a P' Q Q' \\<C>.\n       \\<lbrakk>Pa \\<longmapsto>a \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa a P';\n        Q \\<longmapsto>coAction a \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q (coAction a) Q';\n        a \\<noteq> \\<tau>; bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) (\\<tau>)\n                          (P' \\<parallel> Q')\n 6. \\<And>Pa \\<alpha> P' x \\<C>.\n       \\<lbrakk>x \\<sharp> \\<C>; Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        x \\<sharp> \\<alpha>; bangPred P (\\<lparr>\\<nu>x\\<rparr>Pa)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (\\<lparr>\\<nu>x\\<rparr>Pa) \\<alpha>\n                          (\\<lparr>\\<nu>x\\<rparr>P')\n 7. \\<And>Pa \\<alpha> P' \\<C>.\n       \\<lbrakk>Pa \\<parallel> !Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b.\n           bangPred P (Pa \\<parallel> !Pa) \\<Longrightarrow>\n           Prop b (Pa \\<parallel> !Pa) \\<alpha> P';\n        bangPred P !Pa\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> !Pa \\<alpha> P'", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>Pa \\<alpha> P' Q \\<C>.\n       \\<lbrakk>Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        bangPred P (Pa \\<oplus> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<oplus> Q) \\<alpha> P'\n 2. \\<And>Q \\<alpha> Q' Pa \\<C>.\n       \\<lbrakk>Q \\<longmapsto>\\<alpha> \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q \\<alpha> Q';\n        bangPred P (Pa \\<oplus> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<oplus> Q) \\<alpha> Q'\n 3. \\<And>Pa \\<alpha> P' Q \\<C>.\n       \\<lbrakk>Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) \\<alpha>\n                          (P' \\<parallel> Q)\n 4. \\<And>Q \\<alpha> Q' Pa \\<C>.\n       \\<lbrakk>Q \\<longmapsto>\\<alpha> \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q \\<alpha> Q';\n        bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) \\<alpha>\n                          (Pa \\<parallel> Q')\n 5. \\<And>Pa a P' Q Q' \\<C>.\n       \\<lbrakk>Pa \\<longmapsto>a \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa a P';\n        Q \\<longmapsto>coAction a \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q (coAction a) Q';\n        a \\<noteq> \\<tau>; bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) (\\<tau>)\n                          (P' \\<parallel> Q')\n 6. \\<And>Pa \\<alpha> P' x \\<C>.\n       \\<lbrakk>x \\<sharp> \\<C>; Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        x \\<sharp> \\<alpha>; bangPred P (\\<lparr>\\<nu>x\\<rparr>Pa)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (\\<lparr>\\<nu>x\\<rparr>Pa) \\<alpha>\n                          (\\<lparr>\\<nu>x\\<rparr>P')\n 7. \\<And>Pa \\<alpha> P' \\<C>.\n       \\<lbrakk>Pa \\<parallel> !Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b.\n           bangPred P (Pa \\<parallel> !Pa) \\<Longrightarrow>\n           Prop b (Pa \\<parallel> !Pa) \\<alpha> P';\n        bangPred P !Pa\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> !Pa \\<alpha> P'", "case(Sum1 Pa \\<alpha> P' Q)"], ["proof (state)\nthis:\n  Pa \\<longmapsto>\\<alpha> \\<prec> P'\n  bangPred P Pa \\<Longrightarrow> Prop ?b Pa \\<alpha> P'\n  bangPred P (Pa \\<oplus> Q)\n\ngoal (7 subgoals):\n 1. \\<And>Pa \\<alpha> P' Q \\<C>.\n       \\<lbrakk>Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        bangPred P (Pa \\<oplus> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<oplus> Q) \\<alpha> P'\n 2. \\<And>Q \\<alpha> Q' Pa \\<C>.\n       \\<lbrakk>Q \\<longmapsto>\\<alpha> \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q \\<alpha> Q';\n        bangPred P (Pa \\<oplus> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<oplus> Q) \\<alpha> Q'\n 3. \\<And>Pa \\<alpha> P' Q \\<C>.\n       \\<lbrakk>Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) \\<alpha>\n                          (P' \\<parallel> Q)\n 4. \\<And>Q \\<alpha> Q' Pa \\<C>.\n       \\<lbrakk>Q \\<longmapsto>\\<alpha> \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q \\<alpha> Q';\n        bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) \\<alpha>\n                          (Pa \\<parallel> Q')\n 5. \\<And>Pa a P' Q Q' \\<C>.\n       \\<lbrakk>Pa \\<longmapsto>a \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa a P';\n        Q \\<longmapsto>coAction a \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q (coAction a) Q';\n        a \\<noteq> \\<tau>; bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) (\\<tau>)\n                          (P' \\<parallel> Q')\n 6. \\<And>Pa \\<alpha> P' x \\<C>.\n       \\<lbrakk>x \\<sharp> \\<C>; Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        x \\<sharp> \\<alpha>; bangPred P (\\<lparr>\\<nu>x\\<rparr>Pa)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (\\<lparr>\\<nu>x\\<rparr>Pa) \\<alpha>\n                          (\\<lparr>\\<nu>x\\<rparr>P')\n 7. \\<And>Pa \\<alpha> P' \\<C>.\n       \\<lbrakk>Pa \\<parallel> !Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b.\n           bangPred P (Pa \\<parallel> !Pa) \\<Longrightarrow>\n           Prop b (Pa \\<parallel> !Pa) \\<alpha> P';\n        bangPred P !Pa\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> !Pa \\<alpha> P'", "thus ?case"], ["proof (prove)\nusing this:\n  Pa \\<longmapsto>\\<alpha> \\<prec> P'\n  bangPred P Pa \\<Longrightarrow> Prop ?b Pa \\<alpha> P'\n  bangPred P (Pa \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. Prop \\<C> (Pa \\<oplus> Q) \\<alpha> P'", "by - (ind_cases \"bangPred P (Pa \\<oplus> Q)\")"], ["proof (state)\nthis:\n  Prop \\<C> (Pa \\<oplus> Q) \\<alpha> P'\n\ngoal (6 subgoals):\n 1. \\<And>Q \\<alpha> Q' Pa \\<C>.\n       \\<lbrakk>Q \\<longmapsto>\\<alpha> \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q \\<alpha> Q';\n        bangPred P (Pa \\<oplus> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<oplus> Q) \\<alpha> Q'\n 2. \\<And>Pa \\<alpha> P' Q \\<C>.\n       \\<lbrakk>Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) \\<alpha>\n                          (P' \\<parallel> Q)\n 3. \\<And>Q \\<alpha> Q' Pa \\<C>.\n       \\<lbrakk>Q \\<longmapsto>\\<alpha> \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q \\<alpha> Q';\n        bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) \\<alpha>\n                          (Pa \\<parallel> Q')\n 4. \\<And>Pa a P' Q Q' \\<C>.\n       \\<lbrakk>Pa \\<longmapsto>a \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa a P';\n        Q \\<longmapsto>coAction a \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q (coAction a) Q';\n        a \\<noteq> \\<tau>; bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) (\\<tau>)\n                          (P' \\<parallel> Q')\n 5. \\<And>Pa \\<alpha> P' x \\<C>.\n       \\<lbrakk>x \\<sharp> \\<C>; Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        x \\<sharp> \\<alpha>; bangPred P (\\<lparr>\\<nu>x\\<rparr>Pa)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (\\<lparr>\\<nu>x\\<rparr>Pa) \\<alpha>\n                          (\\<lparr>\\<nu>x\\<rparr>P')\n 6. \\<And>Pa \\<alpha> P' \\<C>.\n       \\<lbrakk>Pa \\<parallel> !Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b.\n           bangPred P (Pa \\<parallel> !Pa) \\<Longrightarrow>\n           Prop b (Pa \\<parallel> !Pa) \\<alpha> P';\n        bangPred P !Pa\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> !Pa \\<alpha> P'", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>Q \\<alpha> Q' Pa \\<C>.\n       \\<lbrakk>Q \\<longmapsto>\\<alpha> \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q \\<alpha> Q';\n        bangPred P (Pa \\<oplus> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<oplus> Q) \\<alpha> Q'\n 2. \\<And>Pa \\<alpha> P' Q \\<C>.\n       \\<lbrakk>Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) \\<alpha>\n                          (P' \\<parallel> Q)\n 3. \\<And>Q \\<alpha> Q' Pa \\<C>.\n       \\<lbrakk>Q \\<longmapsto>\\<alpha> \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q \\<alpha> Q';\n        bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) \\<alpha>\n                          (Pa \\<parallel> Q')\n 4. \\<And>Pa a P' Q Q' \\<C>.\n       \\<lbrakk>Pa \\<longmapsto>a \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa a P';\n        Q \\<longmapsto>coAction a \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q (coAction a) Q';\n        a \\<noteq> \\<tau>; bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) (\\<tau>)\n                          (P' \\<parallel> Q')\n 5. \\<And>Pa \\<alpha> P' x \\<C>.\n       \\<lbrakk>x \\<sharp> \\<C>; Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        x \\<sharp> \\<alpha>; bangPred P (\\<lparr>\\<nu>x\\<rparr>Pa)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (\\<lparr>\\<nu>x\\<rparr>Pa) \\<alpha>\n                          (\\<lparr>\\<nu>x\\<rparr>P')\n 6. \\<And>Pa \\<alpha> P' \\<C>.\n       \\<lbrakk>Pa \\<parallel> !Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b.\n           bangPred P (Pa \\<parallel> !Pa) \\<Longrightarrow>\n           Prop b (Pa \\<parallel> !Pa) \\<alpha> P';\n        bangPred P !Pa\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> !Pa \\<alpha> P'", "case(Sum2 Q \\<alpha> Q' Pa)"], ["proof (state)\nthis:\n  Q \\<longmapsto>\\<alpha> \\<prec> Q'\n  bangPred P Q \\<Longrightarrow> Prop ?b Q \\<alpha> Q'\n  bangPred P (Pa \\<oplus> Q)\n\ngoal (6 subgoals):\n 1. \\<And>Q \\<alpha> Q' Pa \\<C>.\n       \\<lbrakk>Q \\<longmapsto>\\<alpha> \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q \\<alpha> Q';\n        bangPred P (Pa \\<oplus> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<oplus> Q) \\<alpha> Q'\n 2. \\<And>Pa \\<alpha> P' Q \\<C>.\n       \\<lbrakk>Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) \\<alpha>\n                          (P' \\<parallel> Q)\n 3. \\<And>Q \\<alpha> Q' Pa \\<C>.\n       \\<lbrakk>Q \\<longmapsto>\\<alpha> \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q \\<alpha> Q';\n        bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) \\<alpha>\n                          (Pa \\<parallel> Q')\n 4. \\<And>Pa a P' Q Q' \\<C>.\n       \\<lbrakk>Pa \\<longmapsto>a \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa a P';\n        Q \\<longmapsto>coAction a \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q (coAction a) Q';\n        a \\<noteq> \\<tau>; bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) (\\<tau>)\n                          (P' \\<parallel> Q')\n 5. \\<And>Pa \\<alpha> P' x \\<C>.\n       \\<lbrakk>x \\<sharp> \\<C>; Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        x \\<sharp> \\<alpha>; bangPred P (\\<lparr>\\<nu>x\\<rparr>Pa)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (\\<lparr>\\<nu>x\\<rparr>Pa) \\<alpha>\n                          (\\<lparr>\\<nu>x\\<rparr>P')\n 6. \\<And>Pa \\<alpha> P' \\<C>.\n       \\<lbrakk>Pa \\<parallel> !Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b.\n           bangPred P (Pa \\<parallel> !Pa) \\<Longrightarrow>\n           Prop b (Pa \\<parallel> !Pa) \\<alpha> P';\n        bangPred P !Pa\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> !Pa \\<alpha> P'", "thus ?case"], ["proof (prove)\nusing this:\n  Q \\<longmapsto>\\<alpha> \\<prec> Q'\n  bangPred P Q \\<Longrightarrow> Prop ?b Q \\<alpha> Q'\n  bangPred P (Pa \\<oplus> Q)\n\ngoal (1 subgoal):\n 1. Prop \\<C> (Pa \\<oplus> Q) \\<alpha> Q'", "by - (ind_cases \"bangPred P (Pa \\<oplus> Q)\")"], ["proof (state)\nthis:\n  Prop \\<C> (Pa \\<oplus> Q) \\<alpha> Q'\n\ngoal (5 subgoals):\n 1. \\<And>Pa \\<alpha> P' Q \\<C>.\n       \\<lbrakk>Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) \\<alpha>\n                          (P' \\<parallel> Q)\n 2. \\<And>Q \\<alpha> Q' Pa \\<C>.\n       \\<lbrakk>Q \\<longmapsto>\\<alpha> \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q \\<alpha> Q';\n        bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) \\<alpha>\n                          (Pa \\<parallel> Q')\n 3. \\<And>Pa a P' Q Q' \\<C>.\n       \\<lbrakk>Pa \\<longmapsto>a \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa a P';\n        Q \\<longmapsto>coAction a \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q (coAction a) Q';\n        a \\<noteq> \\<tau>; bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) (\\<tau>)\n                          (P' \\<parallel> Q')\n 4. \\<And>Pa \\<alpha> P' x \\<C>.\n       \\<lbrakk>x \\<sharp> \\<C>; Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        x \\<sharp> \\<alpha>; bangPred P (\\<lparr>\\<nu>x\\<rparr>Pa)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (\\<lparr>\\<nu>x\\<rparr>Pa) \\<alpha>\n                          (\\<lparr>\\<nu>x\\<rparr>P')\n 5. \\<And>Pa \\<alpha> P' \\<C>.\n       \\<lbrakk>Pa \\<parallel> !Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b.\n           bangPred P (Pa \\<parallel> !Pa) \\<Longrightarrow>\n           Prop b (Pa \\<parallel> !Pa) \\<alpha> P';\n        bangPred P !Pa\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> !Pa \\<alpha> P'", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>Pa \\<alpha> P' Q \\<C>.\n       \\<lbrakk>Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) \\<alpha>\n                          (P' \\<parallel> Q)\n 2. \\<And>Q \\<alpha> Q' Pa \\<C>.\n       \\<lbrakk>Q \\<longmapsto>\\<alpha> \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q \\<alpha> Q';\n        bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) \\<alpha>\n                          (Pa \\<parallel> Q')\n 3. \\<And>Pa a P' Q Q' \\<C>.\n       \\<lbrakk>Pa \\<longmapsto>a \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa a P';\n        Q \\<longmapsto>coAction a \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q (coAction a) Q';\n        a \\<noteq> \\<tau>; bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) (\\<tau>)\n                          (P' \\<parallel> Q')\n 4. \\<And>Pa \\<alpha> P' x \\<C>.\n       \\<lbrakk>x \\<sharp> \\<C>; Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        x \\<sharp> \\<alpha>; bangPred P (\\<lparr>\\<nu>x\\<rparr>Pa)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (\\<lparr>\\<nu>x\\<rparr>Pa) \\<alpha>\n                          (\\<lparr>\\<nu>x\\<rparr>P')\n 5. \\<And>Pa \\<alpha> P' \\<C>.\n       \\<lbrakk>Pa \\<parallel> !Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b.\n           bangPred P (Pa \\<parallel> !Pa) \\<Longrightarrow>\n           Prop b (Pa \\<parallel> !Pa) \\<alpha> P';\n        bangPred P !Pa\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> !Pa \\<alpha> P'", "case(Par1 Pa \\<alpha> P' Q)"], ["proof (state)\nthis:\n  Pa \\<longmapsto>\\<alpha> \\<prec> P'\n  bangPred P Pa \\<Longrightarrow> Prop ?b Pa \\<alpha> P'\n  bangPred P (Pa \\<parallel> Q)\n\ngoal (5 subgoals):\n 1. \\<And>Pa \\<alpha> P' Q \\<C>.\n       \\<lbrakk>Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) \\<alpha>\n                          (P' \\<parallel> Q)\n 2. \\<And>Q \\<alpha> Q' Pa \\<C>.\n       \\<lbrakk>Q \\<longmapsto>\\<alpha> \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q \\<alpha> Q';\n        bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) \\<alpha>\n                          (Pa \\<parallel> Q')\n 3. \\<And>Pa a P' Q Q' \\<C>.\n       \\<lbrakk>Pa \\<longmapsto>a \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa a P';\n        Q \\<longmapsto>coAction a \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q (coAction a) Q';\n        a \\<noteq> \\<tau>; bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) (\\<tau>)\n                          (P' \\<parallel> Q')\n 4. \\<And>Pa \\<alpha> P' x \\<C>.\n       \\<lbrakk>x \\<sharp> \\<C>; Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        x \\<sharp> \\<alpha>; bangPred P (\\<lparr>\\<nu>x\\<rparr>Pa)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (\\<lparr>\\<nu>x\\<rparr>Pa) \\<alpha>\n                          (\\<lparr>\\<nu>x\\<rparr>P')\n 5. \\<And>Pa \\<alpha> P' \\<C>.\n       \\<lbrakk>Pa \\<parallel> !Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b.\n           bangPred P (Pa \\<parallel> !Pa) \\<Longrightarrow>\n           Prop b (Pa \\<parallel> !Pa) \\<alpha> P';\n        bangPred P !Pa\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> !Pa \\<alpha> P'", "thus ?case"], ["proof (prove)\nusing this:\n  Pa \\<longmapsto>\\<alpha> \\<prec> P'\n  bangPred P Pa \\<Longrightarrow> Prop ?b Pa \\<alpha> P'\n  bangPred P (Pa \\<parallel> Q)\n\ngoal (1 subgoal):\n 1. Prop \\<C> (Pa \\<parallel> Q) \\<alpha> (P' \\<parallel> Q)", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Pa \\<longmapsto>\\<alpha> \\<prec> P';\n     \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n     bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n    \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) \\<alpha>\n                       (P' \\<parallel> Q)", "by(ind_cases \"bangPred P (Pa \\<parallel> Q)\", auto intro: rPar1 simp add: ccs.inject)"], ["proof (state)\nthis:\n  Prop \\<C> (Pa \\<parallel> Q) \\<alpha> (P' \\<parallel> Q)\n\ngoal (4 subgoals):\n 1. \\<And>Q \\<alpha> Q' Pa \\<C>.\n       \\<lbrakk>Q \\<longmapsto>\\<alpha> \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q \\<alpha> Q';\n        bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) \\<alpha>\n                          (Pa \\<parallel> Q')\n 2. \\<And>Pa a P' Q Q' \\<C>.\n       \\<lbrakk>Pa \\<longmapsto>a \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa a P';\n        Q \\<longmapsto>coAction a \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q (coAction a) Q';\n        a \\<noteq> \\<tau>; bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) (\\<tau>)\n                          (P' \\<parallel> Q')\n 3. \\<And>Pa \\<alpha> P' x \\<C>.\n       \\<lbrakk>x \\<sharp> \\<C>; Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        x \\<sharp> \\<alpha>; bangPred P (\\<lparr>\\<nu>x\\<rparr>Pa)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (\\<lparr>\\<nu>x\\<rparr>Pa) \\<alpha>\n                          (\\<lparr>\\<nu>x\\<rparr>P')\n 4. \\<And>Pa \\<alpha> P' \\<C>.\n       \\<lbrakk>Pa \\<parallel> !Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b.\n           bangPred P (Pa \\<parallel> !Pa) \\<Longrightarrow>\n           Prop b (Pa \\<parallel> !Pa) \\<alpha> P';\n        bangPred P !Pa\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> !Pa \\<alpha> P'", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>Q \\<alpha> Q' Pa \\<C>.\n       \\<lbrakk>Q \\<longmapsto>\\<alpha> \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q \\<alpha> Q';\n        bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) \\<alpha>\n                          (Pa \\<parallel> Q')\n 2. \\<And>Pa a P' Q Q' \\<C>.\n       \\<lbrakk>Pa \\<longmapsto>a \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa a P';\n        Q \\<longmapsto>coAction a \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q (coAction a) Q';\n        a \\<noteq> \\<tau>; bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) (\\<tau>)\n                          (P' \\<parallel> Q')\n 3. \\<And>Pa \\<alpha> P' x \\<C>.\n       \\<lbrakk>x \\<sharp> \\<C>; Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        x \\<sharp> \\<alpha>; bangPred P (\\<lparr>\\<nu>x\\<rparr>Pa)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (\\<lparr>\\<nu>x\\<rparr>Pa) \\<alpha>\n                          (\\<lparr>\\<nu>x\\<rparr>P')\n 4. \\<And>Pa \\<alpha> P' \\<C>.\n       \\<lbrakk>Pa \\<parallel> !Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b.\n           bangPred P (Pa \\<parallel> !Pa) \\<Longrightarrow>\n           Prop b (Pa \\<parallel> !Pa) \\<alpha> P';\n        bangPred P !Pa\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> !Pa \\<alpha> P'", "case(Par2 Q \\<alpha> P' Pa)"], ["proof (state)\nthis:\n  Q \\<longmapsto>\\<alpha> \\<prec> P'\n  bangPred P Q \\<Longrightarrow> Prop ?b Q \\<alpha> P'\n  bangPred P (Pa \\<parallel> Q)\n\ngoal (4 subgoals):\n 1. \\<And>Q \\<alpha> Q' Pa \\<C>.\n       \\<lbrakk>Q \\<longmapsto>\\<alpha> \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q \\<alpha> Q';\n        bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) \\<alpha>\n                          (Pa \\<parallel> Q')\n 2. \\<And>Pa a P' Q Q' \\<C>.\n       \\<lbrakk>Pa \\<longmapsto>a \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa a P';\n        Q \\<longmapsto>coAction a \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q (coAction a) Q';\n        a \\<noteq> \\<tau>; bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) (\\<tau>)\n                          (P' \\<parallel> Q')\n 3. \\<And>Pa \\<alpha> P' x \\<C>.\n       \\<lbrakk>x \\<sharp> \\<C>; Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        x \\<sharp> \\<alpha>; bangPred P (\\<lparr>\\<nu>x\\<rparr>Pa)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (\\<lparr>\\<nu>x\\<rparr>Pa) \\<alpha>\n                          (\\<lparr>\\<nu>x\\<rparr>P')\n 4. \\<And>Pa \\<alpha> P' \\<C>.\n       \\<lbrakk>Pa \\<parallel> !Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b.\n           bangPred P (Pa \\<parallel> !Pa) \\<Longrightarrow>\n           Prop b (Pa \\<parallel> !Pa) \\<alpha> P';\n        bangPred P !Pa\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> !Pa \\<alpha> P'", "thus ?case"], ["proof (prove)\nusing this:\n  Q \\<longmapsto>\\<alpha> \\<prec> P'\n  bangPred P Q \\<Longrightarrow> Prop ?b Q \\<alpha> P'\n  bangPred P (Pa \\<parallel> Q)\n\ngoal (1 subgoal):\n 1. Prop \\<C> (Pa \\<parallel> Q) \\<alpha> (Pa \\<parallel> P')", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Q \\<longmapsto>\\<alpha> \\<prec> P';\n     \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q \\<alpha> P';\n     bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n    \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) \\<alpha>\n                       (Pa \\<parallel> P')", "by(ind_cases \"bangPred P (Pa \\<parallel> Q)\", auto intro: rPar2 aux1 simp add: ccs.inject)"], ["proof (state)\nthis:\n  Prop \\<C> (Pa \\<parallel> Q) \\<alpha> (Pa \\<parallel> P')\n\ngoal (3 subgoals):\n 1. \\<And>Pa a P' Q Q' \\<C>.\n       \\<lbrakk>Pa \\<longmapsto>a \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa a P';\n        Q \\<longmapsto>coAction a \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q (coAction a) Q';\n        a \\<noteq> \\<tau>; bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) (\\<tau>)\n                          (P' \\<parallel> Q')\n 2. \\<And>Pa \\<alpha> P' x \\<C>.\n       \\<lbrakk>x \\<sharp> \\<C>; Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        x \\<sharp> \\<alpha>; bangPred P (\\<lparr>\\<nu>x\\<rparr>Pa)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (\\<lparr>\\<nu>x\\<rparr>Pa) \\<alpha>\n                          (\\<lparr>\\<nu>x\\<rparr>P')\n 3. \\<And>Pa \\<alpha> P' \\<C>.\n       \\<lbrakk>Pa \\<parallel> !Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b.\n           bangPred P (Pa \\<parallel> !Pa) \\<Longrightarrow>\n           Prop b (Pa \\<parallel> !Pa) \\<alpha> P';\n        bangPred P !Pa\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> !Pa \\<alpha> P'", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>Pa a P' Q Q' \\<C>.\n       \\<lbrakk>Pa \\<longmapsto>a \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa a P';\n        Q \\<longmapsto>coAction a \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q (coAction a) Q';\n        a \\<noteq> \\<tau>; bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) (\\<tau>)\n                          (P' \\<parallel> Q')\n 2. \\<And>Pa \\<alpha> P' x \\<C>.\n       \\<lbrakk>x \\<sharp> \\<C>; Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        x \\<sharp> \\<alpha>; bangPred P (\\<lparr>\\<nu>x\\<rparr>Pa)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (\\<lparr>\\<nu>x\\<rparr>Pa) \\<alpha>\n                          (\\<lparr>\\<nu>x\\<rparr>P')\n 3. \\<And>Pa \\<alpha> P' \\<C>.\n       \\<lbrakk>Pa \\<parallel> !Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b.\n           bangPred P (Pa \\<parallel> !Pa) \\<Longrightarrow>\n           Prop b (Pa \\<parallel> !Pa) \\<alpha> P';\n        bangPred P !Pa\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> !Pa \\<alpha> P'", "case(Comm Pa a P' Q Q' C)"], ["proof (state)\nthis:\n  Pa \\<longmapsto>a \\<prec> P'\n  bangPred P Pa \\<Longrightarrow> Prop ?b Pa a P'\n  Q \\<longmapsto>coAction a \\<prec> Q'\n  bangPred P Q \\<Longrightarrow> Prop ?b Q (coAction a) Q'\n  a \\<noteq> \\<tau>\n  bangPred P (Pa \\<parallel> Q)\n\ngoal (3 subgoals):\n 1. \\<And>Pa a P' Q Q' \\<C>.\n       \\<lbrakk>Pa \\<longmapsto>a \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa a P';\n        Q \\<longmapsto>coAction a \\<prec> Q';\n        \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q (coAction a) Q';\n        a \\<noteq> \\<tau>; bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (Pa \\<parallel> Q) (\\<tau>)\n                          (P' \\<parallel> Q')\n 2. \\<And>Pa \\<alpha> P' x \\<C>.\n       \\<lbrakk>x \\<sharp> \\<C>; Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        x \\<sharp> \\<alpha>; bangPred P (\\<lparr>\\<nu>x\\<rparr>Pa)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (\\<lparr>\\<nu>x\\<rparr>Pa) \\<alpha>\n                          (\\<lparr>\\<nu>x\\<rparr>P')\n 3. \\<And>Pa \\<alpha> P' \\<C>.\n       \\<lbrakk>Pa \\<parallel> !Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b.\n           bangPred P (Pa \\<parallel> !Pa) \\<Longrightarrow>\n           Prop b (Pa \\<parallel> !Pa) \\<alpha> P';\n        bangPred P !Pa\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> !Pa \\<alpha> P'", "thus ?case"], ["proof (prove)\nusing this:\n  Pa \\<longmapsto>a \\<prec> P'\n  bangPred P Pa \\<Longrightarrow> Prop ?b Pa a P'\n  Q \\<longmapsto>coAction a \\<prec> Q'\n  bangPred P Q \\<Longrightarrow> Prop ?b Q (coAction a) Q'\n  a \\<noteq> \\<tau>\n  bangPred P (Pa \\<parallel> Q)\n\ngoal (1 subgoal):\n 1. Prop C (Pa \\<parallel> Q) (\\<tau>) (P' \\<parallel> Q')", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Pa \\<longmapsto>a \\<prec> P';\n     \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa a P';\n     Q \\<longmapsto>coAction a \\<prec> Q';\n     \\<And>b. bangPred P Q \\<Longrightarrow> Prop b Q (coAction a) Q';\n     a \\<noteq> \\<tau>; bangPred P (Pa \\<parallel> Q)\\<rbrakk>\n    \\<Longrightarrow> Prop C (Pa \\<parallel> Q) (\\<tau>) (P' \\<parallel> Q')", "by(ind_cases \"bangPred P (Pa \\<parallel> Q)\", auto intro: rComm aux1 simp add: ccs.inject)"], ["proof (state)\nthis:\n  Prop C (Pa \\<parallel> Q) (\\<tau>) (P' \\<parallel> Q')\n\ngoal (2 subgoals):\n 1. \\<And>Pa \\<alpha> P' x \\<C>.\n       \\<lbrakk>x \\<sharp> \\<C>; Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        x \\<sharp> \\<alpha>; bangPred P (\\<lparr>\\<nu>x\\<rparr>Pa)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (\\<lparr>\\<nu>x\\<rparr>Pa) \\<alpha>\n                          (\\<lparr>\\<nu>x\\<rparr>P')\n 2. \\<And>Pa \\<alpha> P' \\<C>.\n       \\<lbrakk>Pa \\<parallel> !Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b.\n           bangPred P (Pa \\<parallel> !Pa) \\<Longrightarrow>\n           Prop b (Pa \\<parallel> !Pa) \\<alpha> P';\n        bangPred P !Pa\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> !Pa \\<alpha> P'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Pa \\<alpha> P' x \\<C>.\n       \\<lbrakk>x \\<sharp> \\<C>; Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        x \\<sharp> \\<alpha>; bangPred P (\\<lparr>\\<nu>x\\<rparr>Pa)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (\\<lparr>\\<nu>x\\<rparr>Pa) \\<alpha>\n                          (\\<lparr>\\<nu>x\\<rparr>P')\n 2. \\<And>Pa \\<alpha> P' \\<C>.\n       \\<lbrakk>Pa \\<parallel> !Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b.\n           bangPred P (Pa \\<parallel> !Pa) \\<Longrightarrow>\n           Prop b (Pa \\<parallel> !Pa) \\<alpha> P';\n        bangPred P !Pa\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> !Pa \\<alpha> P'", "case(Res Pa \\<alpha> P' x)"], ["proof (state)\nthis:\n  x \\<sharp> \\<C>\n  Pa \\<longmapsto>\\<alpha> \\<prec> P'\n  bangPred P Pa \\<Longrightarrow> Prop ?b Pa \\<alpha> P'\n  x \\<sharp> \\<alpha>\n  bangPred P (\\<lparr>\\<nu>x\\<rparr>Pa)\n\ngoal (2 subgoals):\n 1. \\<And>Pa \\<alpha> P' x \\<C>.\n       \\<lbrakk>x \\<sharp> \\<C>; Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b. bangPred P Pa \\<Longrightarrow> Prop b Pa \\<alpha> P';\n        x \\<sharp> \\<alpha>; bangPred P (\\<lparr>\\<nu>x\\<rparr>Pa)\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> (\\<lparr>\\<nu>x\\<rparr>Pa) \\<alpha>\n                          (\\<lparr>\\<nu>x\\<rparr>P')\n 2. \\<And>Pa \\<alpha> P' \\<C>.\n       \\<lbrakk>Pa \\<parallel> !Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b.\n           bangPred P (Pa \\<parallel> !Pa) \\<Longrightarrow>\n           Prop b (Pa \\<parallel> !Pa) \\<alpha> P';\n        bangPred P !Pa\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> !Pa \\<alpha> P'", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<sharp> \\<C>\n  Pa \\<longmapsto>\\<alpha> \\<prec> P'\n  bangPred P Pa \\<Longrightarrow> Prop ?b Pa \\<alpha> P'\n  x \\<sharp> \\<alpha>\n  bangPred P (\\<lparr>\\<nu>x\\<rparr>Pa)\n\ngoal (1 subgoal):\n 1. Prop \\<C> (\\<lparr>\\<nu>x\\<rparr>Pa) \\<alpha> (\\<lparr>\\<nu>x\\<rparr>P')", "by - (ind_cases \"bangPred P (\\<lparr>\\<nu>x\\<rparr>Pa)\")"], ["proof (state)\nthis:\n  Prop \\<C> (\\<lparr>\\<nu>x\\<rparr>Pa) \\<alpha> (\\<lparr>\\<nu>x\\<rparr>P')\n\ngoal (1 subgoal):\n 1. \\<And>Pa \\<alpha> P' \\<C>.\n       \\<lbrakk>Pa \\<parallel> !Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b.\n           bangPred P (Pa \\<parallel> !Pa) \\<Longrightarrow>\n           Prop b (Pa \\<parallel> !Pa) \\<alpha> P';\n        bangPred P !Pa\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> !Pa \\<alpha> P'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Pa \\<alpha> P' \\<C>.\n       \\<lbrakk>Pa \\<parallel> !Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b.\n           bangPred P (Pa \\<parallel> !Pa) \\<Longrightarrow>\n           Prop b (Pa \\<parallel> !Pa) \\<alpha> P';\n        bangPred P !Pa\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> !Pa \\<alpha> P'", "case(Bang Pa \\<alpha> P')"], ["proof (state)\nthis:\n  Pa \\<parallel> !Pa \\<longmapsto>\\<alpha> \\<prec> P'\n  bangPred P (Pa \\<parallel> !Pa) \\<Longrightarrow>\n  Prop ?b (Pa \\<parallel> !Pa) \\<alpha> P'\n  bangPred P !Pa\n\ngoal (1 subgoal):\n 1. \\<And>Pa \\<alpha> P' \\<C>.\n       \\<lbrakk>Pa \\<parallel> !Pa \\<longmapsto>\\<alpha> \\<prec> P';\n        \\<And>b.\n           bangPred P (Pa \\<parallel> !Pa) \\<Longrightarrow>\n           Prop b (Pa \\<parallel> !Pa) \\<alpha> P';\n        bangPred P !Pa\\<rbrakk>\n       \\<Longrightarrow> Prop \\<C> !Pa \\<alpha> P'", "thus ?case"], ["proof (prove)\nusing this:\n  Pa \\<parallel> !Pa \\<longmapsto>\\<alpha> \\<prec> P'\n  bangPred P (Pa \\<parallel> !Pa) \\<Longrightarrow>\n  Prop ?b (Pa \\<parallel> !Pa) \\<alpha> P'\n  bangPred P !Pa\n\ngoal (1 subgoal):\n 1. Prop \\<C> !Pa \\<alpha> P'", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Pa \\<parallel> !Pa \\<longmapsto>\\<alpha> \\<prec> P';\n     \\<And>b.\n        bangPred P (Pa \\<parallel> !Pa) \\<Longrightarrow>\n        Prop b (Pa \\<parallel> !Pa) \\<alpha> P';\n     bangPred P !Pa\\<rbrakk>\n    \\<Longrightarrow> Prop \\<C> !Pa \\<alpha> P'", "by(ind_cases \"bangPred P (!Pa)\", auto intro: rBang aux2 simp add: ccs.inject)"], ["proof (state)\nthis:\n  Prop \\<C> !Pa \\<alpha> P'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Prop \\<C> X \\<alpha> P'\n\ngoal (1 subgoal):\n 1. Prop \\<C> !P \\<alpha> P'", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?X2 \\<longmapsto>?\\<alpha>'2 \\<prec> ?P'a2;\n   bangPred P ?X2\\<rbrakk>\n  \\<Longrightarrow> Prop \\<C> ?X2 ?\\<alpha>'2 ?P'a2\n\ngoal (1 subgoal):\n 1. Prop \\<C> !P \\<alpha> P'", "with \\<open>!P \\<longmapsto>\\<alpha> \\<prec> P'\\<close>"], ["proof (chain)\npicking this:\n  !P \\<longmapsto>\\<alpha> \\<prec> P'\n  \\<lbrakk>?X2 \\<longmapsto>?\\<alpha>'2 \\<prec> ?P'a2;\n   bangPred P ?X2\\<rbrakk>\n  \\<Longrightarrow> Prop \\<C> ?X2 ?\\<alpha>'2 ?P'a2", "show ?thesis"], ["proof (prove)\nusing this:\n  !P \\<longmapsto>\\<alpha> \\<prec> P'\n  \\<lbrakk>?X2 \\<longmapsto>?\\<alpha>'2 \\<prec> ?P'a2;\n   bangPred P ?X2\\<rbrakk>\n  \\<Longrightarrow> Prop \\<C> ?X2 ?\\<alpha>'2 ?P'a2\n\ngoal (1 subgoal):\n 1. Prop \\<C> !P \\<alpha> P'", "by(force intro: bangPred.aux1)"], ["proof (state)\nthis:\n  Prop \\<C> !P \\<alpha> P'\n\ngoal:\nNo subgoals!", "qed"], ["", "inductive_set bangRel :: \"(ccs \\<times> ccs) set \\<Rightarrow> (ccs \\<times> ccs) set\"\nfor Rel :: \"(ccs \\<times> ccs) set\"\nwhere\n  BRBang: \"(P, Q) \\<in> Rel \\<Longrightarrow> (!P, !Q) \\<in> bangRel Rel\"\n| BRPar: \"(R, T) \\<in> Rel \\<Longrightarrow> (P, Q) \\<in> (bangRel Rel) \\<Longrightarrow> (R \\<parallel> P, T \\<parallel> Q) \\<in> (bangRel Rel)\""], ["", "lemma BRBangCases[consumes 1, case_names BRBang]:\n  fixes P   :: ccs\n  and   Q   :: ccs\n  and   Rel :: \"(ccs \\<times> ccs) set\"\n  and   F   :: \"ccs \\<Rightarrow> bool\"\n\n  assumes \"(P, !Q) \\<in> bangRel Rel\"\n  and     \"\\<And>P. (P, Q) \\<in> Rel \\<Longrightarrow> F (!P)\"\n  \n  shows \"F P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F P", "using assms"], ["proof (prove)\nusing this:\n  (P, !Q) \\<in> bangRel Rel\n  (?P, Q) \\<in> Rel \\<Longrightarrow> F !?P\n\ngoal (1 subgoal):\n 1. F P", "by - (ind_cases \"(P, !Q) \\<in> bangRel Rel\", auto simp add: ccs.inject)"], ["", "lemma BRParCases[consumes 1, case_names BRPar]:\n  fixes P   :: ccs\n  and   Q   :: ccs\n  and   Rel :: \"(ccs \\<times> ccs) set\"\n  and   F   :: \"ccs \\<Rightarrow> bool\"\n\n  assumes \"(P, Q \\<parallel> !Q) \\<in> bangRel Rel\"\n  and     \"\\<And>P R. \\<lbrakk>(P, Q) \\<in> Rel; (R, !Q) \\<in> bangRel Rel\\<rbrakk> \\<Longrightarrow> F (P \\<parallel> R)\"\n\n  shows \"F P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F P", "using assms"], ["proof (prove)\nusing this:\n  (P, Q \\<parallel> !Q) \\<in> bangRel Rel\n  \\<lbrakk>(?P, Q) \\<in> Rel; (?R, !Q) \\<in> bangRel Rel\\<rbrakk>\n  \\<Longrightarrow> F (?P \\<parallel> ?R)\n\ngoal (1 subgoal):\n 1. F P", "by - (ind_cases \"(P, Q \\<parallel> !Q) \\<in> bangRel Rel\", auto simp add: ccs.inject)"], ["", "lemma bangRelSubset:\n  fixes Rel  :: \"(ccs \\<times> ccs) set\"\n  and   Rel' :: \"(ccs \\<times> ccs) set\"\n\n  assumes \"(P, Q) \\<in> bangRel Rel\"\n  and     \"\\<And>P Q. (P, Q) \\<in> Rel \\<Longrightarrow> (P, Q) \\<in> Rel'\"\n\n  shows \"(P, Q) \\<in> bangRel Rel'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, Q) \\<in> bangRel Rel'", "using assms"], ["proof (prove)\nusing this:\n  (P, Q) \\<in> bangRel Rel\n  (?P, ?Q) \\<in> Rel \\<Longrightarrow> (?P, ?Q) \\<in> Rel'\n\ngoal (1 subgoal):\n 1. (P, Q) \\<in> bangRel Rel'", "by(induct rule:  bangRel.induct) (auto intro: BRBang BRPar)"], ["", "end"]]}