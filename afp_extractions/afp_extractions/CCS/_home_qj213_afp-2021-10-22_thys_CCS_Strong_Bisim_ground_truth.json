{"file_name": "/home/qj213/afp-2021-10-22/thys/CCS/Strong_Bisim.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CCS", "problem_names": ["lemma monotonic:\n  fixes P :: ccs\n  and   A :: \"(ccs \\<times> ccs) set\"\n  and   Q :: ccs\n  and   B :: \"(ccs \\<times> ccs) set\"\n\n  assumes \"P \\<leadsto>[A] Q\"\n  and     \"A \\<subseteq> B\"\n\n  shows \"P \\<leadsto>[B] Q\"", "lemma monoCoinduct: \"\\<And>x y xa xb P Q.\n                      x \\<le> y \\<Longrightarrow>\n                      (Q \\<leadsto>[{(xb, xa). x xb xa}] P) \\<longrightarrow>\n                     (Q \\<leadsto>[{(xb, xa). y xb xa}] P)\"", "lemma bisimCoinductAux[consumes 1]:\n  fixes P :: \"ccs\"\n  and   Q :: \"ccs\"\n  and   X :: \"(ccs \\<times> ccs) set\"\n\n  assumes \"(P, Q) \\<in> X\"\n  and     \"\\<And>P Q. (P, Q) \\<in> X \\<Longrightarrow> P \\<leadsto>[(X \\<union> bisim)] Q \\<and> (Q, P) \\<in> X\"\n\n  shows \"P \\<sim> Q\"", "lemma bisimCoinduct[consumes 1, case_names cSim cSym]:\n  fixes P :: \"ccs\"\n  and   Q :: \"ccs\"\n  and   X :: \"(ccs \\<times> ccs) set\"\n\n  assumes \"(P, Q) \\<in> X\"\n  and     \"\\<And>R S. (R, S) \\<in> X \\<Longrightarrow> R \\<leadsto>[(X \\<union> bisim)] S\"\n  and     \"\\<And>R S. (R, S) \\<in> X \\<Longrightarrow> (S, R) \\<in> X\"\n\n  shows \"P \\<sim> Q\"", "lemma bisimWeakCoinductAux[consumes 1]:\n  fixes P :: \"ccs\"\n  and   Q :: \"ccs\"\n  and   X :: \"(ccs \\<times> ccs) set\"\n\n  assumes \"(P, Q) \\<in> X\"\n  and     \"\\<And>R S. (R, S) \\<in> X \\<Longrightarrow> R \\<leadsto>[X] S \\<and> (S, R) \\<in> X\" \n\n  shows \"P \\<sim> Q\"", "lemma bisimWeakCoinduct[consumes 1, case_names cSim cSym]:\n  fixes P :: \"ccs\"\n  and   Q :: \"ccs\"\n  and   X :: \"(ccs \\<times> ccs) set\"\n\n  assumes \"(P, Q) \\<in> X\"\n  and     \"\\<And>P Q. (P, Q) \\<in> X \\<Longrightarrow> P \\<leadsto>[X] Q\"\n  and     \"\\<And>P Q. (P, Q) \\<in> X \\<Longrightarrow> (Q, P) \\<in> X\"\n\n  shows \"P \\<sim> Q\"", "lemma bisimE:\n  fixes P  :: \"ccs\"\n  and   Q  :: \"ccs\"\n\n  assumes \"P \\<sim> Q\"\n\n  shows \"P \\<leadsto>[bisim] Q\"\n  and   \"Q \\<sim> P\"", "lemma bisimI:\n  fixes P :: \"ccs\"\n  and   Q :: \"ccs\"\n\n  assumes \"P \\<leadsto>[bisim] Q\"\n  and     \"Q \\<sim> P\"\n\n  shows \"P \\<sim> Q\"", "lemma reflexive: \n  fixes P :: ccs\n\n  shows \"P \\<sim> P\"", "lemma symmetric: \n  fixes P :: ccs\n  and   Q :: ccs\n\n  assumes \"P \\<sim> Q\"\n\n  shows \"Q \\<sim> P\"", "lemma transitive: \n  fixes P :: ccs\n  and   Q :: ccs\n  and   R :: ccs\n\n  assumes \"P \\<sim> Q\"\n  and     \"Q \\<sim> R\"\n\n  shows \"P \\<sim> R\"", "lemma bisimTransCoinduct[consumes 1, case_names cSim cSym]:\n  fixes P :: ccs\n  and   Q :: ccs\n\n  assumes \"(P, Q) \\<in> X\"\n  and     rSim: \"\\<And>R S. (R, S) \\<in> X \\<Longrightarrow> R \\<leadsto>[(bisim O X O bisim)] S\"\n  and     rSym: \"\\<And>R S. (R, S) \\<in> X \\<Longrightarrow> (S, R) \\<in> X\"\n\n  shows \"P \\<sim> Q\""], "translations": [["", "lemma monotonic:\n  fixes P :: ccs\n  and   A :: \"(ccs \\<times> ccs) set\"\n  and   Q :: ccs\n  and   B :: \"(ccs \\<times> ccs) set\"\n\n  assumes \"P \\<leadsto>[A] Q\"\n  and     \"A \\<subseteq> B\"\n\n  shows \"P \\<leadsto>[B] Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<leadsto>[B] Q", "using assms"], ["proof (prove)\nusing this:\n  P \\<leadsto>[A] Q\n  A \\<subseteq> B\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[B] Q", "by(fastforce simp add: simulation_def)"], ["", "lemma monoCoinduct: \"\\<And>x y xa xb P Q.\n                      x \\<le> y \\<Longrightarrow>\n                      (Q \\<leadsto>[{(xb, xa). x xb xa}] P) \\<longrightarrow>\n                     (Q \\<leadsto>[{(xb, xa). y xb xa}] P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y xa xb P Q.\n       x \\<le> y \\<Longrightarrow>\n       Q \\<leadsto>[{(xb, xa). x xb xa}] P \\<longrightarrow>\n       Q \\<leadsto>[{(xb, xa). y xb xa}] P", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y P Q.\n       \\<lbrakk>x \\<le> y; Q \\<leadsto>[{(xa, y). x xa y}] P\\<rbrakk>\n       \\<Longrightarrow> Q \\<leadsto>[{(x, ya). y x ya}] P", "apply(rule monotonic)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y P Q.\n       \\<lbrakk>x \\<le> y; Q \\<leadsto>[{(xa, y). x xa y}] P\\<rbrakk>\n       \\<Longrightarrow> Q \\<leadsto>[?A1 x y P Q] P\n 2. \\<And>x y P Q.\n       \\<lbrakk>x \\<le> y; Q \\<leadsto>[{(xa, y). x xa y}] P\\<rbrakk>\n       \\<Longrightarrow> ?A1 x y P Q \\<subseteq> {(x, ya). y x ya}", "by(auto dest: le_funE)"], ["", "coinductive_set bisim :: \"(ccs \\<times> ccs) set\"\nwhere\n  \"\\<lbrakk>P \\<leadsto>[bisim] Q; (Q, P) \\<in> bisim\\<rbrakk> \\<Longrightarrow> (P, Q) \\<in> bisim\"\nmonos monoCoinduct"], ["", "abbreviation\n  bisimJudge (\"_ \\<sim> _\" [70, 70] 65) where \"P \\<sim> Q \\<equiv> (P, Q) \\<in> bisim\""], ["", "lemma bisimCoinductAux[consumes 1]:\n  fixes P :: \"ccs\"\n  and   Q :: \"ccs\"\n  and   X :: \"(ccs \\<times> ccs) set\"\n\n  assumes \"(P, Q) \\<in> X\"\n  and     \"\\<And>P Q. (P, Q) \\<in> X \\<Longrightarrow> P \\<leadsto>[(X \\<union> bisim)] Q \\<and> (Q, P) \\<in> X\"\n\n  shows \"P \\<sim> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sim> Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<sim> Q", "have \"X \\<union> bisim = {(P, Q). (P, Q) \\<in> X \\<or> (P, Q) \\<in> bisim}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<union> bisim = {(P, Q). (P, Q) \\<in> X \\<or> P \\<sim> Q}", "by auto"], ["proof (state)\nthis:\n  X \\<union> bisim = {(P, Q). (P, Q) \\<in> X \\<or> P \\<sim> Q}\n\ngoal (1 subgoal):\n 1. P \\<sim> Q", "with assms"], ["proof (chain)\npicking this:\n  (P, Q) \\<in> X\n  (?P, ?Q) \\<in> X \\<Longrightarrow>\n  ?P \\<leadsto>[(X \\<union> bisim)] ?Q \\<and> (?Q, ?P) \\<in> X\n  X \\<union> bisim = {(P, Q). (P, Q) \\<in> X \\<or> P \\<sim> Q}", "show ?thesis"], ["proof (prove)\nusing this:\n  (P, Q) \\<in> X\n  (?P, ?Q) \\<in> X \\<Longrightarrow>\n  ?P \\<leadsto>[(X \\<union> bisim)] ?Q \\<and> (?Q, ?P) \\<in> X\n  X \\<union> bisim = {(P, Q). (P, Q) \\<in> X \\<or> P \\<sim> Q}\n\ngoal (1 subgoal):\n 1. P \\<sim> Q", "by coinduct simp"], ["proof (state)\nthis:\n  P \\<sim> Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bisimCoinduct[consumes 1, case_names cSim cSym]:\n  fixes P :: \"ccs\"\n  and   Q :: \"ccs\"\n  and   X :: \"(ccs \\<times> ccs) set\"\n\n  assumes \"(P, Q) \\<in> X\"\n  and     \"\\<And>R S. (R, S) \\<in> X \\<Longrightarrow> R \\<leadsto>[(X \\<union> bisim)] S\"\n  and     \"\\<And>R S. (R, S) \\<in> X \\<Longrightarrow> (S, R) \\<in> X\"\n\n  shows \"P \\<sim> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sim> Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<sim> Q", "have \"X \\<union> bisim = {(P, Q). (P, Q) \\<in> X \\<or> (P, Q) \\<in> bisim}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<union> bisim = {(P, Q). (P, Q) \\<in> X \\<or> P \\<sim> Q}", "by auto"], ["proof (state)\nthis:\n  X \\<union> bisim = {(P, Q). (P, Q) \\<in> X \\<or> P \\<sim> Q}\n\ngoal (1 subgoal):\n 1. P \\<sim> Q", "with assms"], ["proof (chain)\npicking this:\n  (P, Q) \\<in> X\n  (?R, ?S) \\<in> X \\<Longrightarrow> ?R \\<leadsto>[(X \\<union> bisim)] ?S\n  (?R, ?S) \\<in> X \\<Longrightarrow> (?S, ?R) \\<in> X\n  X \\<union> bisim = {(P, Q). (P, Q) \\<in> X \\<or> P \\<sim> Q}", "show ?thesis"], ["proof (prove)\nusing this:\n  (P, Q) \\<in> X\n  (?R, ?S) \\<in> X \\<Longrightarrow> ?R \\<leadsto>[(X \\<union> bisim)] ?S\n  (?R, ?S) \\<in> X \\<Longrightarrow> (?S, ?R) \\<in> X\n  X \\<union> bisim = {(P, Q). (P, Q) \\<in> X \\<or> P \\<sim> Q}\n\ngoal (1 subgoal):\n 1. P \\<sim> Q", "by coinduct simp"], ["proof (state)\nthis:\n  P \\<sim> Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bisimWeakCoinductAux[consumes 1]:\n  fixes P :: \"ccs\"\n  and   Q :: \"ccs\"\n  and   X :: \"(ccs \\<times> ccs) set\"\n\n  assumes \"(P, Q) \\<in> X\"\n  and     \"\\<And>R S. (R, S) \\<in> X \\<Longrightarrow> R \\<leadsto>[X] S \\<and> (S, R) \\<in> X\" \n\n  shows \"P \\<sim> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sim> Q", "using assms"], ["proof (prove)\nusing this:\n  (P, Q) \\<in> X\n  (?R, ?S) \\<in> X \\<Longrightarrow>\n  ?R \\<leadsto>[X] ?S \\<and> (?S, ?R) \\<in> X\n\ngoal (1 subgoal):\n 1. P \\<sim> Q", "by(coinduct rule: bisimCoinductAux) (blast intro: monotonic)"], ["", "lemma bisimWeakCoinduct[consumes 1, case_names cSim cSym]:\n  fixes P :: \"ccs\"\n  and   Q :: \"ccs\"\n  and   X :: \"(ccs \\<times> ccs) set\"\n\n  assumes \"(P, Q) \\<in> X\"\n  and     \"\\<And>P Q. (P, Q) \\<in> X \\<Longrightarrow> P \\<leadsto>[X] Q\"\n  and     \"\\<And>P Q. (P, Q) \\<in> X \\<Longrightarrow> (Q, P) \\<in> X\"\n\n  shows \"P \\<sim> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sim> Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<sim> Q", "have \"X \\<union> bisim = {(P, Q). (P, Q) \\<in> X \\<or> (P, Q) \\<in> bisim}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<union> bisim = {(P, Q). (P, Q) \\<in> X \\<or> P \\<sim> Q}", "by auto"], ["proof (state)\nthis:\n  X \\<union> bisim = {(P, Q). (P, Q) \\<in> X \\<or> P \\<sim> Q}\n\ngoal (1 subgoal):\n 1. P \\<sim> Q", "with assms"], ["proof (chain)\npicking this:\n  (P, Q) \\<in> X\n  (?P, ?Q) \\<in> X \\<Longrightarrow> ?P \\<leadsto>[X] ?Q\n  (?P, ?Q) \\<in> X \\<Longrightarrow> (?Q, ?P) \\<in> X\n  X \\<union> bisim = {(P, Q). (P, Q) \\<in> X \\<or> P \\<sim> Q}", "show ?thesis"], ["proof (prove)\nusing this:\n  (P, Q) \\<in> X\n  (?P, ?Q) \\<in> X \\<Longrightarrow> ?P \\<leadsto>[X] ?Q\n  (?P, ?Q) \\<in> X \\<Longrightarrow> (?Q, ?P) \\<in> X\n  X \\<union> bisim = {(P, Q). (P, Q) \\<in> X \\<or> P \\<sim> Q}\n\ngoal (1 subgoal):\n 1. P \\<sim> Q", "by(coinduct rule: bisimCoinduct) (blast intro: monotonic)+"], ["proof (state)\nthis:\n  P \\<sim> Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bisimE:\n  fixes P  :: \"ccs\"\n  and   Q  :: \"ccs\"\n\n  assumes \"P \\<sim> Q\"\n\n  shows \"P \\<leadsto>[bisim] Q\"\n  and   \"Q \\<sim> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<leadsto>[bisim] Q &&& Q \\<sim> P", "using assms"], ["proof (prove)\nusing this:\n  P \\<sim> Q\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[bisim] Q &&& Q \\<sim> P", "by(auto simp add: intro: bisim.cases)"], ["", "lemma bisimI:\n  fixes P :: \"ccs\"\n  and   Q :: \"ccs\"\n\n  assumes \"P \\<leadsto>[bisim] Q\"\n  and     \"Q \\<sim> P\"\n\n  shows \"P \\<sim> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sim> Q", "using assms"], ["proof (prove)\nusing this:\n  P \\<leadsto>[bisim] Q\n  Q \\<sim> P\n\ngoal (1 subgoal):\n 1. P \\<sim> Q", "by(auto intro: bisim.intros)"], ["", "lemma reflexive: \n  fixes P :: ccs\n\n  shows \"P \\<sim> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sim> P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<sim> P", "have \"(P, P) \\<in> Id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, P) \\<in> Id", "by blast"], ["proof (state)\nthis:\n  (P, P) \\<in> Id\n\ngoal (1 subgoal):\n 1. P \\<sim> P", "thus ?thesis"], ["proof (prove)\nusing this:\n  (P, P) \\<in> Id\n\ngoal (1 subgoal):\n 1. P \\<sim> P", "by(coinduct rule: bisimCoinduct) (auto intro: reflexive)"], ["proof (state)\nthis:\n  P \\<sim> P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma symmetric: \n  fixes P :: ccs\n  and   Q :: ccs\n\n  assumes \"P \\<sim> Q\"\n\n  shows \"Q \\<sim> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<sim> P", "using assms"], ["proof (prove)\nusing this:\n  P \\<sim> Q\n\ngoal (1 subgoal):\n 1. Q \\<sim> P", "by(rule bisimE)"], ["", "lemma transitive: \n  fixes P :: ccs\n  and   Q :: ccs\n  and   R :: ccs\n\n  assumes \"P \\<sim> Q\"\n  and     \"Q \\<sim> R\"\n\n  shows \"P \\<sim> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sim> R", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<sim> R", "from assms"], ["proof (chain)\npicking this:\n  P \\<sim> Q\n  Q \\<sim> R", "have \"(P, R) \\<in> bisim O bisim\""], ["proof (prove)\nusing this:\n  P \\<sim> Q\n  Q \\<sim> R\n\ngoal (1 subgoal):\n 1. (P, R) \\<in> bisim O bisim", "by auto"], ["proof (state)\nthis:\n  (P, R) \\<in> bisim O bisim\n\ngoal (1 subgoal):\n 1. P \\<sim> R", "thus ?thesis"], ["proof (prove)\nusing this:\n  (P, R) \\<in> bisim O bisim\n\ngoal (1 subgoal):\n 1. P \\<sim> R", "by(coinduct rule: bisimCoinduct) (auto intro: transitive dest: bisimE)"], ["proof (state)\nthis:\n  P \\<sim> R\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bisimTransCoinduct[consumes 1, case_names cSim cSym]:\n  fixes P :: ccs\n  and   Q :: ccs\n\n  assumes \"(P, Q) \\<in> X\"\n  and     rSim: \"\\<And>R S. (R, S) \\<in> X \\<Longrightarrow> R \\<leadsto>[(bisim O X O bisim)] S\"\n  and     rSym: \"\\<And>R S. (R, S) \\<in> X \\<Longrightarrow> (S, R) \\<in> X\"\n\n  shows \"P \\<sim> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<sim> Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<sim> Q", "from \\<open>(P, Q) \\<in> X\\<close>"], ["proof (chain)\npicking this:\n  (P, Q) \\<in> X", "have \"(P, Q) \\<in> bisim O X O bisim\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> X\n\ngoal (1 subgoal):\n 1. (P, Q) \\<in> bisim O X O bisim", "by(auto intro: reflexive)"], ["proof (state)\nthis:\n  (P, Q) \\<in> bisim O X O bisim\n\ngoal (1 subgoal):\n 1. P \\<sim> Q", "thus ?thesis"], ["proof (prove)\nusing this:\n  (P, Q) \\<in> bisim O X O bisim\n\ngoal (1 subgoal):\n 1. P \\<sim> Q", "proof(coinduct rule: bisimWeakCoinduct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> bisim O X O bisim \\<Longrightarrow>\n       P \\<leadsto>[(bisim O X O bisim)] Q\n 2. \\<And>P Q.\n       (P, Q) \\<in> bisim O X O bisim \\<Longrightarrow>\n       (Q, P) \\<in> bisim O X O bisim", "case(cSim P Q)"], ["proof (state)\nthis:\n  (P, Q) \\<in> bisim O X O bisim\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> bisim O X O bisim \\<Longrightarrow>\n       P \\<leadsto>[(bisim O X O bisim)] Q\n 2. \\<And>P Q.\n       (P, Q) \\<in> bisim O X O bisim \\<Longrightarrow>\n       (Q, P) \\<in> bisim O X O bisim", "from \\<open>(P, Q) \\<in> bisim O X O bisim\\<close>"], ["proof (chain)\npicking this:\n  (P, Q) \\<in> bisim O X O bisim", "obtain R S where \"P \\<sim> R\" and \"(R, S) \\<in> X\" and \"S \\<sim> Q\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> bisim O X O bisim\n\ngoal (1 subgoal):\n 1. (\\<And>R S.\n        \\<lbrakk>P \\<sim> R; (R, S) \\<in> X; S \\<sim> Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P \\<sim> R\n  (R, S) \\<in> X\n  S \\<sim> Q\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> bisim O X O bisim \\<Longrightarrow>\n       P \\<leadsto>[(bisim O X O bisim)] Q\n 2. \\<And>P Q.\n       (P, Q) \\<in> bisim O X O bisim \\<Longrightarrow>\n       (Q, P) \\<in> bisim O X O bisim", "from \\<open>P \\<sim> R\\<close>"], ["proof (chain)\npicking this:\n  P \\<sim> R", "have \"P \\<leadsto>[bisim] R\""], ["proof (prove)\nusing this:\n  P \\<sim> R\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[bisim] R", "by(rule bisimE)"], ["proof (state)\nthis:\n  P \\<leadsto>[bisim] R\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> bisim O X O bisim \\<Longrightarrow>\n       P \\<leadsto>[(bisim O X O bisim)] Q\n 2. \\<And>P Q.\n       (P, Q) \\<in> bisim O X O bisim \\<Longrightarrow>\n       (Q, P) \\<in> bisim O X O bisim", "moreover"], ["proof (state)\nthis:\n  P \\<leadsto>[bisim] R\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> bisim O X O bisim \\<Longrightarrow>\n       P \\<leadsto>[(bisim O X O bisim)] Q\n 2. \\<And>P Q.\n       (P, Q) \\<in> bisim O X O bisim \\<Longrightarrow>\n       (Q, P) \\<in> bisim O X O bisim", "from \\<open>(R, S) \\<in> X\\<close>"], ["proof (chain)\npicking this:\n  (R, S) \\<in> X", "have \"R \\<leadsto>[(bisim O X O bisim)] S\""], ["proof (prove)\nusing this:\n  (R, S) \\<in> X\n\ngoal (1 subgoal):\n 1. R \\<leadsto>[(bisim O X O bisim)] S", "by(rule rSim)"], ["proof (state)\nthis:\n  R \\<leadsto>[(bisim O X O bisim)] S\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> bisim O X O bisim \\<Longrightarrow>\n       P \\<leadsto>[(bisim O X O bisim)] Q\n 2. \\<And>P Q.\n       (P, Q) \\<in> bisim O X O bisim \\<Longrightarrow>\n       (Q, P) \\<in> bisim O X O bisim", "moreover"], ["proof (state)\nthis:\n  R \\<leadsto>[(bisim O X O bisim)] S\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> bisim O X O bisim \\<Longrightarrow>\n       P \\<leadsto>[(bisim O X O bisim)] Q\n 2. \\<And>P Q.\n       (P, Q) \\<in> bisim O X O bisim \\<Longrightarrow>\n       (Q, P) \\<in> bisim O X O bisim", "have \"bisim O (bisim O X O bisim) \\<subseteq> bisim O X O bisim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bisim O bisim O X O bisim \\<subseteq> bisim O X O bisim", "by(auto intro: transitive)"], ["proof (state)\nthis:\n  bisim O bisim O X O bisim \\<subseteq> bisim O X O bisim\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> bisim O X O bisim \\<Longrightarrow>\n       P \\<leadsto>[(bisim O X O bisim)] Q\n 2. \\<And>P Q.\n       (P, Q) \\<in> bisim O X O bisim \\<Longrightarrow>\n       (Q, P) \\<in> bisim O X O bisim", "ultimately"], ["proof (chain)\npicking this:\n  P \\<leadsto>[bisim] R\n  R \\<leadsto>[(bisim O X O bisim)] S\n  bisim O bisim O X O bisim \\<subseteq> bisim O X O bisim", "have \"P \\<leadsto>[(bisim O X O bisim)] S\""], ["proof (prove)\nusing this:\n  P \\<leadsto>[bisim] R\n  R \\<leadsto>[(bisim O X O bisim)] S\n  bisim O bisim O X O bisim \\<subseteq> bisim O X O bisim\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[(bisim O X O bisim)] S", "by(rule Strong_Sim.transitive)"], ["proof (state)\nthis:\n  P \\<leadsto>[(bisim O X O bisim)] S\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> bisim O X O bisim \\<Longrightarrow>\n       P \\<leadsto>[(bisim O X O bisim)] Q\n 2. \\<And>P Q.\n       (P, Q) \\<in> bisim O X O bisim \\<Longrightarrow>\n       (Q, P) \\<in> bisim O X O bisim", "moreover"], ["proof (state)\nthis:\n  P \\<leadsto>[(bisim O X O bisim)] S\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> bisim O X O bisim \\<Longrightarrow>\n       P \\<leadsto>[(bisim O X O bisim)] Q\n 2. \\<And>P Q.\n       (P, Q) \\<in> bisim O X O bisim \\<Longrightarrow>\n       (Q, P) \\<in> bisim O X O bisim", "from \\<open>S \\<sim> Q\\<close>"], ["proof (chain)\npicking this:\n  S \\<sim> Q", "have \"S \\<leadsto>[bisim] Q\""], ["proof (prove)\nusing this:\n  S \\<sim> Q\n\ngoal (1 subgoal):\n 1. S \\<leadsto>[bisim] Q", "by(rule bisimE)"], ["proof (state)\nthis:\n  S \\<leadsto>[bisim] Q\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> bisim O X O bisim \\<Longrightarrow>\n       P \\<leadsto>[(bisim O X O bisim)] Q\n 2. \\<And>P Q.\n       (P, Q) \\<in> bisim O X O bisim \\<Longrightarrow>\n       (Q, P) \\<in> bisim O X O bisim", "moreover"], ["proof (state)\nthis:\n  S \\<leadsto>[bisim] Q\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> bisim O X O bisim \\<Longrightarrow>\n       P \\<leadsto>[(bisim O X O bisim)] Q\n 2. \\<And>P Q.\n       (P, Q) \\<in> bisim O X O bisim \\<Longrightarrow>\n       (Q, P) \\<in> bisim O X O bisim", "have \"(bisim O X O bisim) O bisim \\<subseteq> bisim O X O bisim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (bisim O X O bisim) O bisim \\<subseteq> bisim O X O bisim", "by(auto intro: transitive)"], ["proof (state)\nthis:\n  (bisim O X O bisim) O bisim \\<subseteq> bisim O X O bisim\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> bisim O X O bisim \\<Longrightarrow>\n       P \\<leadsto>[(bisim O X O bisim)] Q\n 2. \\<And>P Q.\n       (P, Q) \\<in> bisim O X O bisim \\<Longrightarrow>\n       (Q, P) \\<in> bisim O X O bisim", "ultimately"], ["proof (chain)\npicking this:\n  P \\<leadsto>[(bisim O X O bisim)] S\n  S \\<leadsto>[bisim] Q\n  (bisim O X O bisim) O bisim \\<subseteq> bisim O X O bisim", "show ?case"], ["proof (prove)\nusing this:\n  P \\<leadsto>[(bisim O X O bisim)] S\n  S \\<leadsto>[bisim] Q\n  (bisim O X O bisim) O bisim \\<subseteq> bisim O X O bisim\n\ngoal (1 subgoal):\n 1. P \\<leadsto>[(bisim O X O bisim)] Q", "by(rule Strong_Sim.transitive)"], ["proof (state)\nthis:\n  P \\<leadsto>[(bisim O X O bisim)] Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       (P, Q) \\<in> bisim O X O bisim \\<Longrightarrow>\n       (Q, P) \\<in> bisim O X O bisim", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       (P, Q) \\<in> bisim O X O bisim \\<Longrightarrow>\n       (Q, P) \\<in> bisim O X O bisim", "case(cSym P Q)"], ["proof (state)\nthis:\n  (P, Q) \\<in> bisim O X O bisim\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       (P, Q) \\<in> bisim O X O bisim \\<Longrightarrow>\n       (Q, P) \\<in> bisim O X O bisim", "thus ?case"], ["proof (prove)\nusing this:\n  (P, Q) \\<in> bisim O X O bisim\n\ngoal (1 subgoal):\n 1. (Q, P) \\<in> bisim O X O bisim", "by(auto dest: symmetric rSym)"], ["proof (state)\nthis:\n  (Q, P) \\<in> bisim O X O bisim\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<sim> Q\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}