{"file_name": "/home/qj213/afp-2021-10-22/thys/CCS/Tau_Chain.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CCS", "problem_names": ["lemma tauChainInduct[consumes 1, case_names Base Step]:\n  assumes \"P \\<Longrightarrow>\\<^sub>\\<tau> P'\"\n  and     \"Prop P\"\n  and     \"\\<And>P' P''. \\<lbrakk>P \\<Longrightarrow>\\<^sub>\\<tau> P'; P' \\<longmapsto>\\<tau> \\<prec> P''; Prop P'\\<rbrakk> \\<Longrightarrow> Prop P''\"\n\n  shows \"Prop P'\"", "lemma tauChainRefl[simp]:\n  fixes P :: ccs\n\n  shows \"P \\<Longrightarrow>\\<^sub>\\<tau> P\"", "lemma tauChainCons[dest]:\n  fixes P   :: ccs\n  and   P'  :: ccs\n  and   P'' :: ccs\n\n  assumes \"P \\<Longrightarrow>\\<^sub>\\<tau> P'\"\n  and     \"P' \\<longmapsto>\\<tau> \\<prec> P''\"\n\n  shows \"P \\<Longrightarrow>\\<^sub>\\<tau> P''\"", "lemma tauChainCons2[dest]:\n  fixes P   :: ccs\n  and   P'  :: ccs\n  and   P'' :: ccs\n\n  assumes \"P' \\<longmapsto>\\<tau> \\<prec> P''\"\n  and     \"P \\<Longrightarrow>\\<^sub>\\<tau> P'\"\n\n  shows \"P \\<Longrightarrow>\\<^sub>\\<tau> P''\"", "lemma tauChainAppend[dest]:\n  fixes P   :: ccs\n  and   P'  :: ccs\n  and   P'' :: ccs\n\n  assumes \"P \\<Longrightarrow>\\<^sub>\\<tau> P'\"\n  and     \"P' \\<Longrightarrow>\\<^sub>\\<tau> P''\"\n\n  shows \"P \\<Longrightarrow>\\<^sub>\\<tau> P''\"", "lemma tauChainSum1:\n  fixes P  :: ccs\n  and   P' :: ccs\n  and   Q  :: ccs\n\n  assumes \"P \\<Longrightarrow>\\<^sub>\\<tau> P'\"\n  and     \"P \\<noteq> P'\"\n\n  shows \"P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> P'\"", "lemma tauChainSum2:\n  fixes P  :: ccs\n  and   P' :: ccs\n  and   Q  :: ccs\n\n  assumes \"Q \\<Longrightarrow>\\<^sub>\\<tau> Q'\"\n  and     \"Q \\<noteq> Q'\"\n\n  shows \"P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> Q'\"", "lemma tauChainPar1:\n  fixes P  :: ccs\n  and   P' :: ccs\n  and   Q  :: ccs\n\n  assumes \"P \\<Longrightarrow>\\<^sub>\\<tau> P'\"\n\n  shows \"P \\<parallel> Q \\<Longrightarrow>\\<^sub>\\<tau> P' \\<parallel> Q\"", "lemma tauChainPar2:\n  fixes Q  :: ccs\n  and   Q' :: ccs\n  and   P  :: ccs\n\n  assumes \"Q \\<Longrightarrow>\\<^sub>\\<tau> Q'\"\n\n  shows \"P \\<parallel> Q \\<Longrightarrow>\\<^sub>\\<tau> P \\<parallel> Q'\"", "lemma tauChainRes:\n  fixes P  :: ccs\n  and   P' :: ccs\n  and   x  :: name\n\n  assumes \"P \\<Longrightarrow>\\<^sub>\\<tau> P'\"\n\n  shows \"\\<lparr>\\<nu>x\\<rparr>P \\<Longrightarrow>\\<^sub>\\<tau> \\<lparr>\\<nu>x\\<rparr>P'\"", "lemma tauChainRepl:\n  fixes P :: ccs\n\n  assumes \"P \\<parallel> !P \\<Longrightarrow>\\<^sub>\\<tau> P'\"\n  and     \"P' \\<noteq> P \\<parallel> !P\"\n\n  shows \"!P \\<Longrightarrow>\\<^sub>\\<tau> P'\""], "translations": [["", "lemma tauChainInduct[consumes 1, case_names Base Step]:\n  assumes \"P \\<Longrightarrow>\\<^sub>\\<tau> P'\"\n  and     \"Prop P\"\n  and     \"\\<And>P' P''. \\<lbrakk>P \\<Longrightarrow>\\<^sub>\\<tau> P'; P' \\<longmapsto>\\<tau> \\<prec> P''; Prop P'\\<rbrakk> \\<Longrightarrow> Prop P''\"\n\n  shows \"Prop P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Prop P'", "using assms"], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>\\<tau> P'\n  Prop P\n  \\<lbrakk>P \\<Longrightarrow>\\<^sub>\\<tau> ?P';\n   ?P' \\<longmapsto>\\<tau> \\<prec> ?P''; Prop ?P'\\<rbrakk>\n  \\<Longrightarrow> Prop ?P''\n\ngoal (1 subgoal):\n 1. Prop P'", "by(auto simp add: tauChain_def elim: rtrancl_induct)"], ["", "lemma tauChainRefl[simp]:\n  fixes P :: ccs\n\n  shows \"P \\<Longrightarrow>\\<^sub>\\<tau> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>\\<^sub>\\<tau> P", "by(auto simp add: tauChain_def)"], ["", "lemma tauChainCons[dest]:\n  fixes P   :: ccs\n  and   P'  :: ccs\n  and   P'' :: ccs\n\n  assumes \"P \\<Longrightarrow>\\<^sub>\\<tau> P'\"\n  and     \"P' \\<longmapsto>\\<tau> \\<prec> P''\"\n\n  shows \"P \\<Longrightarrow>\\<^sub>\\<tau> P''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>\\<^sub>\\<tau> P''", "using assms"], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>\\<tau> P'\n  P' \\<longmapsto>\\<tau> \\<prec> P''\n\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>\\<^sub>\\<tau> P''", "by(auto simp add: tauChain_def) (blast dest: rtrancl_trans)"], ["", "lemma tauChainCons2[dest]:\n  fixes P   :: ccs\n  and   P'  :: ccs\n  and   P'' :: ccs\n\n  assumes \"P' \\<longmapsto>\\<tau> \\<prec> P''\"\n  and     \"P \\<Longrightarrow>\\<^sub>\\<tau> P'\"\n\n  shows \"P \\<Longrightarrow>\\<^sub>\\<tau> P''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>\\<^sub>\\<tau> P''", "using assms"], ["proof (prove)\nusing this:\n  P' \\<longmapsto>\\<tau> \\<prec> P''\n  P \\<Longrightarrow>\\<^sub>\\<tau> P'\n\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>\\<^sub>\\<tau> P''", "by(auto simp add: tauChain_def) (blast dest: rtrancl_trans)"], ["", "lemma tauChainAppend[dest]:\n  fixes P   :: ccs\n  and   P'  :: ccs\n  and   P'' :: ccs\n\n  assumes \"P \\<Longrightarrow>\\<^sub>\\<tau> P'\"\n  and     \"P' \\<Longrightarrow>\\<^sub>\\<tau> P''\"\n\n  shows \"P \\<Longrightarrow>\\<^sub>\\<tau> P''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>\\<^sub>\\<tau> P''", "using \\<open>P' \\<Longrightarrow>\\<^sub>\\<tau> P''\\<close> \\<open>P \\<Longrightarrow>\\<^sub>\\<tau> P'\\<close>"], ["proof (prove)\nusing this:\n  P' \\<Longrightarrow>\\<^sub>\\<tau> P''\n  P \\<Longrightarrow>\\<^sub>\\<tau> P'\n\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>\\<^sub>\\<tau> P''", "by(induct rule: tauChainInduct) auto"], ["", "lemma tauChainSum1:\n  fixes P  :: ccs\n  and   P' :: ccs\n  and   Q  :: ccs\n\n  assumes \"P \\<Longrightarrow>\\<^sub>\\<tau> P'\"\n  and     \"P \\<noteq> P'\"\n\n  shows \"P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> P'", "using assms"], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>\\<tau> P'\n  P \\<noteq> P'\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> P'", "proof(induct rule: tauChainInduct)"], ["proof (state)\ngoal (2 subgoals):\n 1. P \\<noteq> P \\<Longrightarrow>\n    P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> P\n 2. \\<And>P' P''.\n       \\<lbrakk>P \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P' \\<longmapsto>\\<tau> \\<prec> P'';\n        P \\<noteq> P' \\<Longrightarrow>\n        P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P \\<noteq> P''\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> P''", "case Base"], ["proof (state)\nthis:\n  P \\<noteq> P\n\ngoal (2 subgoals):\n 1. P \\<noteq> P \\<Longrightarrow>\n    P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> P\n 2. \\<And>P' P''.\n       \\<lbrakk>P \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P' \\<longmapsto>\\<tau> \\<prec> P'';\n        P \\<noteq> P' \\<Longrightarrow>\n        P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P \\<noteq> P''\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> P''", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<noteq> P\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> P", "by simp"], ["proof (state)\nthis:\n  P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> P\n\ngoal (1 subgoal):\n 1. \\<And>P' P''.\n       \\<lbrakk>P \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P' \\<longmapsto>\\<tau> \\<prec> P'';\n        P \\<noteq> P' \\<Longrightarrow>\n        P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P \\<noteq> P''\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> P''", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P' P''.\n       \\<lbrakk>P \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P' \\<longmapsto>\\<tau> \\<prec> P'';\n        P \\<noteq> P' \\<Longrightarrow>\n        P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P \\<noteq> P''\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> P''", "case(Step P' P'')"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<^sub>\\<tau> P'\n  P' \\<longmapsto>\\<tau> \\<prec> P''\n  P \\<noteq> P' \\<Longrightarrow>\n  P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> P'\n  P \\<noteq> P''\n\ngoal (1 subgoal):\n 1. \\<And>P' P''.\n       \\<lbrakk>P \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P' \\<longmapsto>\\<tau> \\<prec> P'';\n        P \\<noteq> P' \\<Longrightarrow>\n        P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P \\<noteq> P''\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> P''", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>\\<tau> P'\n  P' \\<longmapsto>\\<tau> \\<prec> P''\n  P \\<noteq> P' \\<Longrightarrow>\n  P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> P'\n  P \\<noteq> P''\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> P''", "by(case_tac \"P=P'\") (auto intro: Sum1 simp add: tauChain_def)"], ["proof (state)\nthis:\n  P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> P''\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tauChainSum2:\n  fixes P  :: ccs\n  and   P' :: ccs\n  and   Q  :: ccs\n\n  assumes \"Q \\<Longrightarrow>\\<^sub>\\<tau> Q'\"\n  and     \"Q \\<noteq> Q'\"\n\n  shows \"P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> Q'", "using assms"], ["proof (prove)\nusing this:\n  Q \\<Longrightarrow>\\<^sub>\\<tau> Q'\n  Q \\<noteq> Q'\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> Q'", "proof(induct rule: tauChainInduct)"], ["proof (state)\ngoal (2 subgoals):\n 1. Q \\<noteq> Q \\<Longrightarrow>\n    P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> Q\n 2. \\<And>P' P''.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P' \\<longmapsto>\\<tau> \\<prec> P'';\n        Q \\<noteq> P' \\<Longrightarrow>\n        P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> P';\n        Q \\<noteq> P''\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> P''", "case Base"], ["proof (state)\nthis:\n  Q \\<noteq> Q\n\ngoal (2 subgoals):\n 1. Q \\<noteq> Q \\<Longrightarrow>\n    P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> Q\n 2. \\<And>P' P''.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P' \\<longmapsto>\\<tau> \\<prec> P'';\n        Q \\<noteq> P' \\<Longrightarrow>\n        P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> P';\n        Q \\<noteq> P''\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> P''", "thus ?case"], ["proof (prove)\nusing this:\n  Q \\<noteq> Q\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> Q", "by simp"], ["proof (state)\nthis:\n  P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> Q\n\ngoal (1 subgoal):\n 1. \\<And>P' P''.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P' \\<longmapsto>\\<tau> \\<prec> P'';\n        Q \\<noteq> P' \\<Longrightarrow>\n        P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> P';\n        Q \\<noteq> P''\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> P''", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P' P''.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P' \\<longmapsto>\\<tau> \\<prec> P'';\n        Q \\<noteq> P' \\<Longrightarrow>\n        P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> P';\n        Q \\<noteq> P''\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> P''", "case(Step Q' Q'')"], ["proof (state)\nthis:\n  Q \\<Longrightarrow>\\<^sub>\\<tau> Q'\n  Q' \\<longmapsto>\\<tau> \\<prec> Q''\n  Q \\<noteq> Q' \\<Longrightarrow>\n  P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> Q'\n  Q \\<noteq> Q''\n\ngoal (1 subgoal):\n 1. \\<And>P' P''.\n       \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P' \\<longmapsto>\\<tau> \\<prec> P'';\n        Q \\<noteq> P' \\<Longrightarrow>\n        P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> P';\n        Q \\<noteq> P''\\<rbrakk>\n       \\<Longrightarrow> P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> P''", "thus ?case"], ["proof (prove)\nusing this:\n  Q \\<Longrightarrow>\\<^sub>\\<tau> Q'\n  Q' \\<longmapsto>\\<tau> \\<prec> Q''\n  Q \\<noteq> Q' \\<Longrightarrow>\n  P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> Q'\n  Q \\<noteq> Q''\n\ngoal (1 subgoal):\n 1. P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> Q''", "by(case_tac \"Q=Q'\") (auto intro: Sum2 simp add: tauChain_def)"], ["proof (state)\nthis:\n  P \\<oplus> Q \\<Longrightarrow>\\<^sub>\\<tau> Q''\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tauChainPar1:\n  fixes P  :: ccs\n  and   P' :: ccs\n  and   Q  :: ccs\n\n  assumes \"P \\<Longrightarrow>\\<^sub>\\<tau> P'\"\n\n  shows \"P \\<parallel> Q \\<Longrightarrow>\\<^sub>\\<tau> P' \\<parallel> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<Longrightarrow>\\<^sub>\\<tau> P' \\<parallel> Q", "using assms"], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>\\<tau> P'\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<Longrightarrow>\\<^sub>\\<tau> P' \\<parallel> Q", "by(induct rule: tauChainInduct) (auto intro: Par1)"], ["", "lemma tauChainPar2:\n  fixes Q  :: ccs\n  and   Q' :: ccs\n  and   P  :: ccs\n\n  assumes \"Q \\<Longrightarrow>\\<^sub>\\<tau> Q'\"\n\n  shows \"P \\<parallel> Q \\<Longrightarrow>\\<^sub>\\<tau> P \\<parallel> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<Longrightarrow>\\<^sub>\\<tau> P \\<parallel> Q'", "using assms"], ["proof (prove)\nusing this:\n  Q \\<Longrightarrow>\\<^sub>\\<tau> Q'\n\ngoal (1 subgoal):\n 1. P \\<parallel> Q \\<Longrightarrow>\\<^sub>\\<tau> P \\<parallel> Q'", "by(induct rule: tauChainInduct) (auto intro: Par2)"], ["", "lemma tauChainRes:\n  fixes P  :: ccs\n  and   P' :: ccs\n  and   x  :: name\n\n  assumes \"P \\<Longrightarrow>\\<^sub>\\<tau> P'\"\n\n  shows \"\\<lparr>\\<nu>x\\<rparr>P \\<Longrightarrow>\\<^sub>\\<tau> \\<lparr>\\<nu>x\\<rparr>P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lparr>\\<nu>x\\<rparr>P \\<Longrightarrow>\\<^sub>\\<tau> \\<lparr>\\<nu>x\\<rparr>P'", "using assms"], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>\\<tau> P'\n\ngoal (1 subgoal):\n 1. \\<lparr>\\<nu>x\\<rparr>P \\<Longrightarrow>\\<^sub>\\<tau> \\<lparr>\\<nu>x\\<rparr>P'", "by(induct rule: tauChainInduct) (auto dest: Res)"], ["", "lemma tauChainRepl:\n  fixes P :: ccs\n\n  assumes \"P \\<parallel> !P \\<Longrightarrow>\\<^sub>\\<tau> P'\"\n  and     \"P' \\<noteq> P \\<parallel> !P\"\n\n  shows \"!P \\<Longrightarrow>\\<^sub>\\<tau> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. !P \\<Longrightarrow>\\<^sub>\\<tau> P'", "using assms"], ["proof (prove)\nusing this:\n  P \\<parallel> !P \\<Longrightarrow>\\<^sub>\\<tau> P'\n  P' \\<noteq> P \\<parallel> !P\n\ngoal (1 subgoal):\n 1. !P \\<Longrightarrow>\\<^sub>\\<tau> P'", "apply(induct rule: tauChainInduct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. P \\<parallel> !P \\<noteq> P \\<parallel> !P \\<Longrightarrow>\n    !P \\<Longrightarrow>\\<^sub>\\<tau> P \\<parallel> !P\n 2. \\<And>P' P''.\n       \\<lbrakk>P \\<parallel> !P \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P' \\<longmapsto>\\<tau> \\<prec> P'';\n        P' \\<noteq> P \\<parallel> !P \\<Longrightarrow>\n        !P \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P'' \\<noteq> P \\<parallel> !P\\<rbrakk>\n       \\<Longrightarrow> !P \\<Longrightarrow>\\<^sub>\\<tau> P''", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P' P''.\n       \\<lbrakk>P \\<parallel> !P \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P' \\<longmapsto>\\<tau> \\<prec> P'';\n        P' \\<noteq> P \\<parallel> !P \\<Longrightarrow>\n        !P \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P'' \\<noteq> P \\<parallel> !P\\<rbrakk>\n       \\<Longrightarrow> !P \\<Longrightarrow>\\<^sub>\\<tau> P''", "apply(case_tac \"P' \\<noteq> P \\<parallel> !P\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>P' P''.\n       \\<lbrakk>P \\<parallel> !P \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P' \\<longmapsto>\\<tau> \\<prec> P'';\n        P' \\<noteq> P \\<parallel> !P \\<Longrightarrow>\n        !P \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P'' \\<noteq> P \\<parallel> !P; P' \\<noteq> P \\<parallel> !P\\<rbrakk>\n       \\<Longrightarrow> !P \\<Longrightarrow>\\<^sub>\\<tau> P''\n 2. \\<And>P' P''.\n       \\<lbrakk>P \\<parallel> !P \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P' \\<longmapsto>\\<tau> \\<prec> P'';\n        P' \\<noteq> P \\<parallel> !P \\<Longrightarrow>\n        !P \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P'' \\<noteq> P \\<parallel> !P;\n        \\<not> P' \\<noteq> P \\<parallel> !P\\<rbrakk>\n       \\<Longrightarrow> !P \\<Longrightarrow>\\<^sub>\\<tau> P''", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P''.\n       \\<lbrakk>P \\<parallel> !P \\<longmapsto>\\<tau> \\<prec> P'';\n        P'' \\<noteq> P \\<parallel> !P\\<rbrakk>\n       \\<Longrightarrow> !P \\<Longrightarrow>\\<^sub>\\<tau> P''", "apply(drule Bang)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P''.\n       \\<lbrakk>P'' \\<noteq> P \\<parallel> !P;\n        !P \\<longmapsto>\\<tau> \\<prec> P''\\<rbrakk>\n       \\<Longrightarrow> !P \\<Longrightarrow>\\<^sub>\\<tau> P''", "apply(simp add: tauChain_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P''.\n       \\<lbrakk>P'' \\<noteq> P \\<parallel> !P;\n        !P \\<longmapsto>\\<tau> \\<prec> P''\\<rbrakk>\n       \\<Longrightarrow> (!P, P'')\n                         \\<in> {(P, P').\n                                P \\<longmapsto>\\<tau> \\<prec> P'}\\<^sup>*", "by auto"], ["", "end"]]}