{"file_name": "/home/qj213/afp-2021-10-22/thys/CCS/Weak_Cong_Sim.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CCS", "problem_names": ["lemma weakSimI[case_names Sim]:\n  fixes P   :: ccs\n  and   Rel :: \"(ccs \\<times> ccs) set\"\n  and   Q   :: ccs\n\n  assumes \"\\<And>\\<alpha> Q'. Q \\<longmapsto>\\<alpha> \\<prec> Q' \\<Longrightarrow> \\<exists>P'. P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"\n\n  shows \"P \\<leadsto><Rel> Q\"", "lemma weakSimE:\n  fixes P   :: ccs\n  and   Rel :: \"(ccs \\<times> ccs) set\"\n  and   Q   :: ccs\n  and   \\<alpha>   :: act\n  and   Q'  :: ccs\n\n  assumes \"P \\<leadsto><Rel> Q\"\n  and     \"Q \\<longmapsto>\\<alpha> \\<prec> Q'\"\n\n  obtains P' where \"P \\<Longrightarrow>\\<alpha> \\<prec> P'\" and \"(P', Q') \\<in> Rel\"", "lemma simWeakSim:\n  fixes P   :: ccs\n  and   Rel :: \"(ccs \\<times> ccs) set\"\n  and   Q   :: ccs\n\n  assumes \"P \\<leadsto>[Rel] Q\"\n  \n  shows \"P \\<leadsto><Rel> Q\"", "lemma weakCongSimWeakSim:\n  fixes P   :: ccs\n  and   Rel :: \"(ccs \\<times> ccs) set\"\n  and   Q   :: ccs\n\n  assumes \"P \\<leadsto><Rel> Q\"\n  \n  shows \"P \\<leadsto>\\<^sup>^<Rel> Q\"", "lemma test:\n  assumes \"P \\<Longrightarrow>\\<^sub>\\<tau> P'\"\n\n  shows \"P = P' \\<or> (\\<exists>P''. P \\<longmapsto>\\<tau> \\<prec> P'' \\<and> P'' \\<Longrightarrow>\\<^sub>\\<tau> P')\"", "lemma tauChainCasesSym[consumes 1, case_names cTauNil cTauStep]:\n  assumes \"P \\<Longrightarrow>\\<^sub>\\<tau> P'\"\n  and     \"Prop P\"\n  and     \"\\<And>P''. \\<lbrakk>P \\<longmapsto>\\<tau> \\<prec> P''; P'' \\<Longrightarrow>\\<^sub>\\<tau> P'\\<rbrakk> \\<Longrightarrow> Prop P'\"\n\n  shows \"Prop P'\"", "lemma simE2:\n  fixes P   :: ccs\n  and   Rel :: \"(ccs \\<times> ccs) set\"\n  and   Q   :: ccs\n  and   \\<alpha>   :: act\n  and   Q'  :: ccs\n\n  assumes \"P \\<leadsto><Rel> Q\"\n  and     \"Q \\<Longrightarrow>\\<alpha> \\<prec> Q'\"\n  and     Sim: \"\\<And>R S. (R, S) \\<in> Rel \\<Longrightarrow> R \\<leadsto>\\<^sup>^<Rel> S\"\n  \n  obtains P' where \"P \\<Longrightarrow>\\<alpha> \\<prec> P'\" and \"(P', Q') \\<in> Rel\"", "lemma reflexive:\n  fixes P   :: ccs\n  and   Rel :: \"(ccs \\<times> ccs) set\"\n  \n  assumes \"Id \\<subseteq> Rel\"\n\n  shows \"P \\<leadsto><Rel> P\"", "lemma transitive:\n  fixes P     :: ccs\n  and   Rel   :: \"(ccs \\<times> ccs) set\"\n  and   Q     :: ccs\n  and   Rel'  :: \"(ccs \\<times> ccs) set\"\n  and   R     :: ccs\n  and   Rel'' :: \"(ccs \\<times> ccs) set\"\n  \n  assumes \"P \\<leadsto><Rel> Q\"\n  and     \"Q \\<leadsto><Rel'> R\"\n  and     \"Rel O Rel' \\<subseteq> Rel''\"\n  and     \"\\<And>S T. (S, T) \\<in> Rel \\<Longrightarrow> S \\<leadsto>\\<^sup>^<Rel> T\"\n  \n  shows \"P \\<leadsto><Rel''> R\"", "lemma weakMonotonic:\n  fixes P :: ccs\n  and   A :: \"(ccs \\<times> ccs) set\"\n  and   Q :: ccs\n  and   B :: \"(ccs \\<times> ccs) set\"\n\n  assumes \"P \\<leadsto><A> Q\"\n  and     \"A \\<subseteq> B\"\n\n  shows \"P \\<leadsto><B> Q\""], "translations": [["", "lemma weakSimI[case_names Sim]:\n  fixes P   :: ccs\n  and   Rel :: \"(ccs \\<times> ccs) set\"\n  and   Q   :: ccs\n\n  assumes \"\\<And>\\<alpha> Q'. Q \\<longmapsto>\\<alpha> \\<prec> Q' \\<Longrightarrow> \\<exists>P'. P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel\"\n\n  shows \"P \\<leadsto><Rel> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<leadsto><Rel> Q", "using assms"], ["proof (prove)\nusing this:\n  Q \\<longmapsto>?\\<alpha> \\<prec> ?Q' \\<Longrightarrow>\n  \\<exists>P'.\n     P \\<Longrightarrow>?\\<alpha> \\<prec> P' \\<and> (P', ?Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. P \\<leadsto><Rel> Q", "by(auto simp add: weakCongSimulation_def)"], ["", "lemma weakSimE:\n  fixes P   :: ccs\n  and   Rel :: \"(ccs \\<times> ccs) set\"\n  and   Q   :: ccs\n  and   \\<alpha>   :: act\n  and   Q'  :: ccs\n\n  assumes \"P \\<leadsto><Rel> Q\"\n  and     \"Q \\<longmapsto>\\<alpha> \\<prec> Q'\"\n\n  obtains P' where \"P \\<Longrightarrow>\\<alpha> \\<prec> P'\" and \"(P', Q') \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<alpha> \\<prec> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto>\\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<alpha> \\<prec> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto simp add: weakCongSimulation_def)"], ["", "lemma simWeakSim:\n  fixes P   :: ccs\n  and   Rel :: \"(ccs \\<times> ccs) set\"\n  and   Q   :: ccs\n\n  assumes \"P \\<leadsto>[Rel] Q\"\n  \n  shows \"P \\<leadsto><Rel> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<leadsto><Rel> Q", "using assms"], ["proof (prove)\nusing this:\n  P \\<leadsto>[Rel] Q\n\ngoal (1 subgoal):\n 1. P \\<leadsto><Rel> Q", "by(rule_tac weakSimI, auto)\n  (blast dest: simE transitionWeakCongTransition)"], ["", "lemma weakCongSimWeakSim:\n  fixes P   :: ccs\n  and   Rel :: \"(ccs \\<times> ccs) set\"\n  and   Q   :: ccs\n\n  assumes \"P \\<leadsto><Rel> Q\"\n  \n  shows \"P \\<leadsto>\\<^sup>^<Rel> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<leadsto>\\<^sup>^<Rel> Q", "using assms"], ["proof (prove)\nusing this:\n  P \\<leadsto><Rel> Q\n\ngoal (1 subgoal):\n 1. P \\<leadsto>\\<^sup>^<Rel> Q", "by(rule_tac Weak_Sim.weakSimI, auto)\n  (blast dest: weakSimE weakCongTransitionWeakTransition)"], ["", "lemma test:\n  assumes \"P \\<Longrightarrow>\\<^sub>\\<tau> P'\"\n\n  shows \"P = P' \\<or> (\\<exists>P''. P \\<longmapsto>\\<tau> \\<prec> P'' \\<and> P'' \\<Longrightarrow>\\<^sub>\\<tau> P')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P = P' \\<or>\n    (\\<exists>P''.\n        P \\<longmapsto>\\<tau> \\<prec> P'' \\<and>\n        P'' \\<Longrightarrow>\\<^sub>\\<tau> P')", "using assms"], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>\\<tau> P'\n\ngoal (1 subgoal):\n 1. P = P' \\<or>\n    (\\<exists>P''.\n        P \\<longmapsto>\\<tau> \\<prec> P'' \\<and>\n        P'' \\<Longrightarrow>\\<^sub>\\<tau> P')", "by(induct rule: tauChainInduct) auto"], ["", "lemma tauChainCasesSym[consumes 1, case_names cTauNil cTauStep]:\n  assumes \"P \\<Longrightarrow>\\<^sub>\\<tau> P'\"\n  and     \"Prop P\"\n  and     \"\\<And>P''. \\<lbrakk>P \\<longmapsto>\\<tau> \\<prec> P''; P'' \\<Longrightarrow>\\<^sub>\\<tau> P'\\<rbrakk> \\<Longrightarrow> Prop P'\"\n\n  shows \"Prop P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Prop P'", "using assms"], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<^sub>\\<tau> P'\n  Prop P\n  \\<lbrakk>P \\<longmapsto>\\<tau> \\<prec> ?P'';\n   ?P'' \\<Longrightarrow>\\<^sub>\\<tau> P'\\<rbrakk>\n  \\<Longrightarrow> Prop P'\n\ngoal (1 subgoal):\n 1. Prop P'", "by(blast dest: test)"], ["", "lemma simE2:\n  fixes P   :: ccs\n  and   Rel :: \"(ccs \\<times> ccs) set\"\n  and   Q   :: ccs\n  and   \\<alpha>   :: act\n  and   Q'  :: ccs\n\n  assumes \"P \\<leadsto><Rel> Q\"\n  and     \"Q \\<Longrightarrow>\\<alpha> \\<prec> Q'\"\n  and     Sim: \"\\<And>R S. (R, S) \\<in> Rel \\<Longrightarrow> R \\<leadsto>\\<^sup>^<Rel> S\"\n  \n  obtains P' where \"P \\<Longrightarrow>\\<alpha> \\<prec> P'\" and \"(P', Q') \\<in> Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<alpha> \\<prec> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<alpha> \\<prec> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "assume Goal: \"\\<And>P'. \\<lbrakk>P \\<Longrightarrow>\\<alpha> \\<prec> P'; (P', Q') \\<in> Rel\\<rbrakk> \\<Longrightarrow> thesis\""], ["proof (state)\nthis:\n  \\<lbrakk>P \\<Longrightarrow>\\<alpha> \\<prec> ?P';\n   (?P', Q') \\<in> Rel\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<alpha> \\<prec> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from \\<open>Q \\<Longrightarrow>\\<alpha> \\<prec> Q'\\<close>"], ["proof (chain)\npicking this:\n  Q \\<Longrightarrow>\\<alpha> \\<prec> Q'", "obtain Q''' Q''\n    where QChain: \"Q \\<Longrightarrow>\\<^sub>\\<tau> Q'''\" and Q'''Trans: \"Q''' \\<longmapsto>\\<alpha> \\<prec> Q''\" and Q''Chain: \"Q'' \\<Longrightarrow>\\<^sub>\\<tau> Q'\""], ["proof (prove)\nusing this:\n  Q \\<Longrightarrow>\\<alpha> \\<prec> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>Q''' Q''.\n        \\<lbrakk>Q \\<Longrightarrow>\\<^sub>\\<tau> Q''';\n         Q''' \\<longmapsto>\\<alpha> \\<prec> Q'';\n         Q'' \\<Longrightarrow>\\<^sub>\\<tau> Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule weakCongTransE)"], ["proof (state)\nthis:\n  Q \\<Longrightarrow>\\<^sub>\\<tau> Q'''\n  Q''' \\<longmapsto>\\<alpha> \\<prec> Q''\n  Q'' \\<Longrightarrow>\\<^sub>\\<tau> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<Longrightarrow>\\<alpha> \\<prec> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from QChain Q'''Trans"], ["proof (chain)\npicking this:\n  Q \\<Longrightarrow>\\<^sub>\\<tau> Q'''\n  Q''' \\<longmapsto>\\<alpha> \\<prec> Q''", "show ?thesis"], ["proof (prove)\nusing this:\n  Q \\<Longrightarrow>\\<^sub>\\<tau> Q'''\n  Q''' \\<longmapsto>\\<alpha> \\<prec> Q''\n\ngoal (1 subgoal):\n 1. thesis", "proof(induct rule: tauChainCasesSym)"], ["proof (state)\ngoal (2 subgoals):\n 1. Q \\<longmapsto>\\<alpha> \\<prec> Q'' \\<Longrightarrow> thesis\n 2. \\<And>P''.\n       \\<lbrakk>Q \\<longmapsto>\\<tau> \\<prec> P'';\n        P'' \\<Longrightarrow>\\<^sub>\\<tau> Q''';\n        Q''' \\<longmapsto>\\<alpha> \\<prec> Q''\\<rbrakk>\n       \\<Longrightarrow> thesis", "case cTauNil"], ["proof (state)\nthis:\n  Q \\<longmapsto>\\<alpha> \\<prec> Q''\n\ngoal (2 subgoals):\n 1. Q \\<longmapsto>\\<alpha> \\<prec> Q'' \\<Longrightarrow> thesis\n 2. \\<And>P''.\n       \\<lbrakk>Q \\<longmapsto>\\<tau> \\<prec> P'';\n        P'' \\<Longrightarrow>\\<^sub>\\<tau> Q''';\n        Q''' \\<longmapsto>\\<alpha> \\<prec> Q''\\<rbrakk>\n       \\<Longrightarrow> thesis", "from \\<open>P \\<leadsto><Rel> Q\\<close> \\<open>Q \\<longmapsto>\\<alpha> \\<prec> Q''\\<close>"], ["proof (chain)\npicking this:\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto>\\<alpha> \\<prec> Q''", "obtain P''' where PTrans: \"P \\<Longrightarrow>\\<alpha> \\<prec> P'''\" and \"(P''', Q'') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto>\\<alpha> \\<prec> Q''\n\ngoal (1 subgoal):\n 1. (\\<And>P'''.\n        \\<lbrakk>P \\<Longrightarrow>\\<alpha> \\<prec> P''';\n         (P''', Q'') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast dest: weakSimE)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<alpha> \\<prec> P'''\n  (P''', Q'') \\<in> Rel\n\ngoal (2 subgoals):\n 1. Q \\<longmapsto>\\<alpha> \\<prec> Q'' \\<Longrightarrow> thesis\n 2. \\<And>P''.\n       \\<lbrakk>Q \\<longmapsto>\\<tau> \\<prec> P'';\n        P'' \\<Longrightarrow>\\<^sub>\\<tau> Q''';\n        Q''' \\<longmapsto>\\<alpha> \\<prec> Q''\\<rbrakk>\n       \\<Longrightarrow> thesis", "moreover"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<alpha> \\<prec> P'''\n  (P''', Q'') \\<in> Rel\n\ngoal (2 subgoals):\n 1. Q \\<longmapsto>\\<alpha> \\<prec> Q'' \\<Longrightarrow> thesis\n 2. \\<And>P''.\n       \\<lbrakk>Q \\<longmapsto>\\<tau> \\<prec> P'';\n        P'' \\<Longrightarrow>\\<^sub>\\<tau> Q''';\n        Q''' \\<longmapsto>\\<alpha> \\<prec> Q''\\<rbrakk>\n       \\<Longrightarrow> thesis", "from Q''Chain \\<open>(P''', Q'') \\<in> Rel\\<close> Sim"], ["proof (chain)\npicking this:\n  Q'' \\<Longrightarrow>\\<^sub>\\<tau> Q'\n  (P''', Q'') \\<in> Rel\n  (?R, ?S) \\<in> Rel \\<Longrightarrow> ?R \\<leadsto>\\<^sup>^<Rel> ?S", "obtain P' where P''Chain: \"P''' \\<Longrightarrow>\\<^sub>\\<tau> P'\" and \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  Q'' \\<Longrightarrow>\\<^sub>\\<tau> Q'\n  (P''', Q'') \\<in> Rel\n  (?R, ?S) \\<in> Rel \\<Longrightarrow> ?R \\<leadsto>\\<^sup>^<Rel> ?S\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P''' \\<Longrightarrow>\\<^sub>\\<tau> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule simTauChain)"], ["proof (state)\nthis:\n  P''' \\<Longrightarrow>\\<^sub>\\<tau> P'\n  (P', Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. Q \\<longmapsto>\\<alpha> \\<prec> Q'' \\<Longrightarrow> thesis\n 2. \\<And>P''.\n       \\<lbrakk>Q \\<longmapsto>\\<tau> \\<prec> P'';\n        P'' \\<Longrightarrow>\\<^sub>\\<tau> Q''';\n        Q''' \\<longmapsto>\\<alpha> \\<prec> Q''\\<rbrakk>\n       \\<Longrightarrow> thesis", "with PTrans P''Chain"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<alpha> \\<prec> P'''\n  P''' \\<Longrightarrow>\\<^sub>\\<tau> P'\n  P''' \\<Longrightarrow>\\<^sub>\\<tau> P'\n  (P', Q') \\<in> Rel", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<alpha> \\<prec> P'''\n  P''' \\<Longrightarrow>\\<^sub>\\<tau> P'\n  P''' \\<Longrightarrow>\\<^sub>\\<tau> P'\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. thesis", "by(force intro: Goal simp add: weakCongTrans_def weakTrans_def)"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<And>P''.\n       \\<lbrakk>Q \\<longmapsto>\\<tau> \\<prec> P'';\n        P'' \\<Longrightarrow>\\<^sub>\\<tau> Q''';\n        Q''' \\<longmapsto>\\<alpha> \\<prec> Q''\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P''.\n       \\<lbrakk>Q \\<longmapsto>\\<tau> \\<prec> P'';\n        P'' \\<Longrightarrow>\\<^sub>\\<tau> Q''';\n        Q''' \\<longmapsto>\\<alpha> \\<prec> Q''\\<rbrakk>\n       \\<Longrightarrow> thesis", "case(cTauStep Q'''')"], ["proof (state)\nthis:\n  Q \\<longmapsto>\\<tau> \\<prec> Q''''\n  Q'''' \\<Longrightarrow>\\<^sub>\\<tau> Q'''\n  Q''' \\<longmapsto>\\<alpha> \\<prec> Q''\n\ngoal (1 subgoal):\n 1. \\<And>P''.\n       \\<lbrakk>Q \\<longmapsto>\\<tau> \\<prec> P'';\n        P'' \\<Longrightarrow>\\<^sub>\\<tau> Q''';\n        Q''' \\<longmapsto>\\<alpha> \\<prec> Q''\\<rbrakk>\n       \\<Longrightarrow> thesis", "from \\<open>P \\<leadsto><Rel> Q\\<close> \\<open>Q \\<longmapsto>\\<tau> \\<prec> Q''''\\<close>"], ["proof (chain)\npicking this:\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto>\\<tau> \\<prec> Q''''", "obtain P'''' where  PChain: \"P \\<Longrightarrow>\\<tau> \\<prec> P''''\" and \"(P'''', Q'''') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<leadsto><Rel> Q\n  Q \\<longmapsto>\\<tau> \\<prec> Q''''\n\ngoal (1 subgoal):\n 1. (\\<And>P''''.\n        \\<lbrakk>P \\<Longrightarrow>\\<tau> \\<prec> P'''';\n         (P'''', Q'''') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(drule_tac weakSimE) auto"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<tau> \\<prec> P''''\n  (P'''', Q'''') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P''.\n       \\<lbrakk>Q \\<longmapsto>\\<tau> \\<prec> P'';\n        P'' \\<Longrightarrow>\\<^sub>\\<tau> Q''';\n        Q''' \\<longmapsto>\\<alpha> \\<prec> Q''\\<rbrakk>\n       \\<Longrightarrow> thesis", "from \\<open>Q'''' \\<Longrightarrow>\\<^sub>\\<tau> Q'''\\<close> \\<open>(P'''', Q'''') \\<in> Rel\\<close> Sim"], ["proof (chain)\npicking this:\n  Q'''' \\<Longrightarrow>\\<^sub>\\<tau> Q'''\n  (P'''', Q'''') \\<in> Rel\n  (?R, ?S) \\<in> Rel \\<Longrightarrow> ?R \\<leadsto>\\<^sup>^<Rel> ?S", "obtain P''' where P''''Chain: \"P'''' \\<Longrightarrow>\\<^sub>\\<tau> P'''\" and \"(P''', Q''') \\<in> Rel\""], ["proof (prove)\nusing this:\n  Q'''' \\<Longrightarrow>\\<^sub>\\<tau> Q'''\n  (P'''', Q'''') \\<in> Rel\n  (?R, ?S) \\<in> Rel \\<Longrightarrow> ?R \\<leadsto>\\<^sup>^<Rel> ?S\n\ngoal (1 subgoal):\n 1. (\\<And>P'''.\n        \\<lbrakk>P'''' \\<Longrightarrow>\\<^sub>\\<tau> P''';\n         (P''', Q''') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule simTauChain)"], ["proof (state)\nthis:\n  P'''' \\<Longrightarrow>\\<^sub>\\<tau> P'''\n  (P''', Q''') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P''.\n       \\<lbrakk>Q \\<longmapsto>\\<tau> \\<prec> P'';\n        P'' \\<Longrightarrow>\\<^sub>\\<tau> Q''';\n        Q''' \\<longmapsto>\\<alpha> \\<prec> Q''\\<rbrakk>\n       \\<Longrightarrow> thesis", "from \\<open>(P''', Q''') \\<in> Rel\\<close>"], ["proof (chain)\npicking this:\n  (P''', Q''') \\<in> Rel", "have \"P''' \\<leadsto>\\<^sup>^<Rel> Q'''\""], ["proof (prove)\nusing this:\n  (P''', Q''') \\<in> Rel\n\ngoal (1 subgoal):\n 1. P''' \\<leadsto>\\<^sup>^<Rel> Q'''", "by(rule Sim)"], ["proof (state)\nthis:\n  P''' \\<leadsto>\\<^sup>^<Rel> Q'''\n\ngoal (1 subgoal):\n 1. \\<And>P''.\n       \\<lbrakk>Q \\<longmapsto>\\<tau> \\<prec> P'';\n        P'' \\<Longrightarrow>\\<^sub>\\<tau> Q''';\n        Q''' \\<longmapsto>\\<alpha> \\<prec> Q''\\<rbrakk>\n       \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  P''' \\<leadsto>\\<^sup>^<Rel> Q'''", "obtain P'' where P'''Trans: \"P''' \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P''\" and \"(P'', Q'') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P''' \\<leadsto>\\<^sup>^<Rel> Q'''\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>P''' \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'';\n         (P'', Q'') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Q'''Trans"], ["proof (prove)\nusing this:\n  P''' \\<leadsto>\\<^sup>^<Rel> Q'''\n  Q''' \\<longmapsto>\\<alpha> \\<prec> Q''\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>P''' \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P'';\n         (P'', Q'') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule Weak_Sim.weakSimE)"], ["proof (state)\nthis:\n  P''' \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P''\n  (P'', Q'') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P''.\n       \\<lbrakk>Q \\<longmapsto>\\<tau> \\<prec> P'';\n        P'' \\<Longrightarrow>\\<^sub>\\<tau> Q''';\n        Q''' \\<longmapsto>\\<alpha> \\<prec> Q''\\<rbrakk>\n       \\<Longrightarrow> thesis", "from Q''Chain \\<open>(P'', Q'') \\<in> Rel\\<close> Sim"], ["proof (chain)\npicking this:\n  Q'' \\<Longrightarrow>\\<^sub>\\<tau> Q'\n  (P'', Q'') \\<in> Rel\n  (?R, ?S) \\<in> Rel \\<Longrightarrow> ?R \\<leadsto>\\<^sup>^<Rel> ?S", "obtain P' where P''Chain: \"P'' \\<Longrightarrow>\\<^sub>\\<tau> P'\" and \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  Q'' \\<Longrightarrow>\\<^sub>\\<tau> Q'\n  (P'', Q'') \\<in> Rel\n  (?R, ?S) \\<in> Rel \\<Longrightarrow> ?R \\<leadsto>\\<^sup>^<Rel> ?S\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P'' \\<Longrightarrow>\\<^sub>\\<tau> P';\n         (P', Q') \\<in> Rel\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule simTauChain)"], ["proof (state)\nthis:\n  P'' \\<Longrightarrow>\\<^sub>\\<tau> P'\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P''.\n       \\<lbrakk>Q \\<longmapsto>\\<tau> \\<prec> P'';\n        P'' \\<Longrightarrow>\\<^sub>\\<tau> Q''';\n        Q''' \\<longmapsto>\\<alpha> \\<prec> Q''\\<rbrakk>\n       \\<Longrightarrow> thesis", "from PChain P''''Chain P'''Trans P''Chain"], ["proof (chain)\npicking this:\n  P \\<Longrightarrow>\\<tau> \\<prec> P''''\n  P'''' \\<Longrightarrow>\\<^sub>\\<tau> P'''\n  P''' \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P''\n  P'' \\<Longrightarrow>\\<^sub>\\<tau> P'", "have \"P \\<Longrightarrow>\\<alpha> \\<prec> P'\""], ["proof (prove)\nusing this:\n  P \\<Longrightarrow>\\<tau> \\<prec> P''''\n  P'''' \\<Longrightarrow>\\<^sub>\\<tau> P'''\n  P''' \\<Longrightarrow>\\<^sup>^\\<alpha> \\<prec> P''\n  P'' \\<Longrightarrow>\\<^sub>\\<tau> P'\n\ngoal (1 subgoal):\n 1. P \\<Longrightarrow>\\<alpha> \\<prec> P'", "apply(auto simp add: weakCongTrans_def weakTrans_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>P''a P'''a P''aa P'''aa.\n       \\<lbrakk>P'''' \\<Longrightarrow>\\<^sub>\\<tau> P''';\n        P'' \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P \\<Longrightarrow>\\<^sub>\\<tau> P''a;\n        P''a \\<longmapsto>\\<tau> \\<prec> P'''a;\n        P'''a \\<Longrightarrow>\\<^sub>\\<tau> P'''';\n        P''' \\<Longrightarrow>\\<^sub>\\<tau> P''aa;\n        P''aa \\<longmapsto>\\<alpha> \\<prec> P'''aa;\n        P'''aa \\<Longrightarrow>\\<^sub>\\<tau> P''\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            P \\<Longrightarrow>\\<^sub>\\<tau> P'' \\<and>\n                            (\\<exists>P'''.\n                                P'' \\<longmapsto>\\<alpha> \\<prec> P''' \\<and>\n                                P''' \\<Longrightarrow>\\<^sub>\\<tau> P')\n 2. \\<And>P''a P'''a.\n       \\<lbrakk>P'''' \\<Longrightarrow>\\<^sub>\\<tau> P'';\n        P'' \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P \\<Longrightarrow>\\<^sub>\\<tau> P''a;\n        P''a \\<longmapsto>\\<tau> \\<prec> P'''a;\n        P'''a \\<Longrightarrow>\\<^sub>\\<tau> P''''; P''' = P'';\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            P \\<Longrightarrow>\\<^sub>\\<tau> P'' \\<and>\n                            (\\<exists>P'''.\n                                P'' \\<longmapsto>\\<tau> \\<prec> P''' \\<and>\n                                P''' \\<Longrightarrow>\\<^sub>\\<tau> P')", "apply(rule_tac x=P''aa in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>P''a P'''a P''aa P'''aa.\n       \\<lbrakk>P'''' \\<Longrightarrow>\\<^sub>\\<tau> P''';\n        P'' \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P \\<Longrightarrow>\\<^sub>\\<tau> P''a;\n        P''a \\<longmapsto>\\<tau> \\<prec> P'''a;\n        P'''a \\<Longrightarrow>\\<^sub>\\<tau> P'''';\n        P''' \\<Longrightarrow>\\<^sub>\\<tau> P''aa;\n        P''aa \\<longmapsto>\\<alpha> \\<prec> P'''aa;\n        P'''aa \\<Longrightarrow>\\<^sub>\\<tau> P''\\<rbrakk>\n       \\<Longrightarrow> P \\<Longrightarrow>\\<^sub>\\<tau> P''aa \\<and>\n                         (\\<exists>P'''.\n                             P''aa \\<longmapsto>\\<alpha> \\<prec> P''' \\<and>\n                             P''' \\<Longrightarrow>\\<^sub>\\<tau> P')\n 2. \\<And>P''a P'''a.\n       \\<lbrakk>P'''' \\<Longrightarrow>\\<^sub>\\<tau> P'';\n        P'' \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P \\<Longrightarrow>\\<^sub>\\<tau> P''a;\n        P''a \\<longmapsto>\\<tau> \\<prec> P'''a;\n        P'''a \\<Longrightarrow>\\<^sub>\\<tau> P''''; P''' = P'';\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            P \\<Longrightarrow>\\<^sub>\\<tau> P'' \\<and>\n                            (\\<exists>P'''.\n                                P'' \\<longmapsto>\\<tau> \\<prec> P''' \\<and>\n                                P''' \\<Longrightarrow>\\<^sub>\\<tau> P')", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>P''a P'''a P''aa P'''aa.\n       \\<lbrakk>P'''' \\<Longrightarrow>\\<^sub>\\<tau> P''';\n        P'' \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P \\<Longrightarrow>\\<^sub>\\<tau> P''a;\n        P''a \\<longmapsto>\\<tau> \\<prec> P'''a;\n        P'''a \\<Longrightarrow>\\<^sub>\\<tau> P'''';\n        P''' \\<Longrightarrow>\\<^sub>\\<tau> P''aa;\n        P''aa \\<longmapsto>\\<alpha> \\<prec> P'''aa;\n        P'''aa \\<Longrightarrow>\\<^sub>\\<tau> P''\\<rbrakk>\n       \\<Longrightarrow> P \\<Longrightarrow>\\<^sub>\\<tau> P''aa\n 2. \\<And>P''a P'''a.\n       \\<lbrakk>P'''' \\<Longrightarrow>\\<^sub>\\<tau> P'';\n        P'' \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P \\<Longrightarrow>\\<^sub>\\<tau> P''a;\n        P''a \\<longmapsto>\\<tau> \\<prec> P'''a;\n        P'''a \\<Longrightarrow>\\<^sub>\\<tau> P''''; P''' = P'';\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            P \\<Longrightarrow>\\<^sub>\\<tau> P'' \\<and>\n                            (\\<exists>P'''.\n                                P'' \\<longmapsto>\\<tau> \\<prec> P''' \\<and>\n                                P''' \\<Longrightarrow>\\<^sub>\\<tau> P')", "defer"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>P''a P'''a.\n       \\<lbrakk>P'''' \\<Longrightarrow>\\<^sub>\\<tau> P'';\n        P'' \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P \\<Longrightarrow>\\<^sub>\\<tau> P''a;\n        P''a \\<longmapsto>\\<tau> \\<prec> P'''a;\n        P'''a \\<Longrightarrow>\\<^sub>\\<tau> P''''; P''' = P'';\n        \\<alpha> = \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P''.\n                            P \\<Longrightarrow>\\<^sub>\\<tau> P'' \\<and>\n                            (\\<exists>P'''.\n                                P'' \\<longmapsto>\\<tau> \\<prec> P''' \\<and>\n                                P''' \\<Longrightarrow>\\<^sub>\\<tau> P')\n 2. \\<And>P''a P'''a P''aa P'''aa.\n       \\<lbrakk>P'''' \\<Longrightarrow>\\<^sub>\\<tau> P''';\n        P'' \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P \\<Longrightarrow>\\<^sub>\\<tau> P''a;\n        P''a \\<longmapsto>\\<tau> \\<prec> P'''a;\n        P'''a \\<Longrightarrow>\\<^sub>\\<tau> P'''';\n        P''' \\<Longrightarrow>\\<^sub>\\<tau> P''aa;\n        P''aa \\<longmapsto>\\<alpha> \\<prec> P'''aa;\n        P'''aa \\<Longrightarrow>\\<^sub>\\<tau> P''\\<rbrakk>\n       \\<Longrightarrow> P \\<Longrightarrow>\\<^sub>\\<tau> P''aa", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P''a P'''a P''aa P'''aa.\n       \\<lbrakk>P'''' \\<Longrightarrow>\\<^sub>\\<tau> P''';\n        P'' \\<Longrightarrow>\\<^sub>\\<tau> P';\n        P \\<Longrightarrow>\\<^sub>\\<tau> P''a;\n        P''a \\<longmapsto>\\<tau> \\<prec> P'''a;\n        P'''a \\<Longrightarrow>\\<^sub>\\<tau> P'''';\n        P''' \\<Longrightarrow>\\<^sub>\\<tau> P''aa;\n        P''aa \\<longmapsto>\\<alpha> \\<prec> P'''aa;\n        P'''aa \\<Longrightarrow>\\<^sub>\\<tau> P''\\<rbrakk>\n       \\<Longrightarrow> P \\<Longrightarrow>\\<^sub>\\<tau> P''aa", "by(auto simp add: tauChain_def)"], ["proof (state)\nthis:\n  P \\<Longrightarrow>\\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. \\<And>P''.\n       \\<lbrakk>Q \\<longmapsto>\\<tau> \\<prec> P'';\n        P'' \\<Longrightarrow>\\<^sub>\\<tau> Q''';\n        Q''' \\<longmapsto>\\<alpha> \\<prec> Q''\\<rbrakk>\n       \\<Longrightarrow> thesis", "with \\<open>(P', Q') \\<in> Rel\\<close>"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel\n  P \\<Longrightarrow>\\<alpha> \\<prec> P'", "show ?thesis"], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\n  P \\<Longrightarrow>\\<alpha> \\<prec> P'\n\ngoal (1 subgoal):\n 1. thesis", "by(force intro: Goal simp add: weakCongTrans_def weakTrans_def)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma reflexive:\n  fixes P   :: ccs\n  and   Rel :: \"(ccs \\<times> ccs) set\"\n  \n  assumes \"Id \\<subseteq> Rel\"\n\n  shows \"P \\<leadsto><Rel> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<leadsto><Rel> P", "using assms"], ["proof (prove)\nusing this:\n  Id \\<subseteq> Rel\n\ngoal (1 subgoal):\n 1. P \\<leadsto><Rel> P", "by(auto simp add: weakCongSimulation_def intro: transitionWeakCongTransition)"], ["", "lemma transitive:\n  fixes P     :: ccs\n  and   Rel   :: \"(ccs \\<times> ccs) set\"\n  and   Q     :: ccs\n  and   Rel'  :: \"(ccs \\<times> ccs) set\"\n  and   R     :: ccs\n  and   Rel'' :: \"(ccs \\<times> ccs) set\"\n  \n  assumes \"P \\<leadsto><Rel> Q\"\n  and     \"Q \\<leadsto><Rel'> R\"\n  and     \"Rel O Rel' \\<subseteq> Rel''\"\n  and     \"\\<And>S T. (S, T) \\<in> Rel \\<Longrightarrow> S \\<leadsto>\\<^sup>^<Rel> T\"\n  \n  shows \"P \\<leadsto><Rel''> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<leadsto><Rel''> R", "proof(induct rule: weakSimI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       R \\<longmapsto>\\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "case(Sim \\<alpha> R')"], ["proof (state)\nthis:\n  R \\<longmapsto>\\<alpha> \\<prec> R'\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> Q'.\n       R \\<longmapsto>\\<alpha> \\<prec> Q' \\<Longrightarrow>\n       \\<exists>P'.\n          P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', Q') \\<in> Rel''", "thus ?case"], ["proof (prove)\nusing this:\n  R \\<longmapsto>\\<alpha> \\<prec> R'\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', R') \\<in> Rel''", "using assms"], ["proof (prove)\nusing this:\n  R \\<longmapsto>\\<alpha> \\<prec> R'\n  P \\<leadsto><Rel> Q\n  Q \\<leadsto><Rel'> R\n  Rel O Rel' \\<subseteq> Rel''\n  (?S, ?T) \\<in> Rel \\<Longrightarrow> ?S \\<leadsto>\\<^sup>^<Rel> ?T\n\ngoal (1 subgoal):\n 1. \\<exists>P'.\n       P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', R') \\<in> Rel''", "apply(drule_tac Q=R in weakSimE, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P'.\n       \\<lbrakk>Q \\<Longrightarrow>\\<alpha> \\<prec> P'; (P', R') \\<in> Rel';\n        R \\<longmapsto>\\<alpha> \\<prec> R'; P \\<leadsto><Rel> Q;\n        Q \\<leadsto><Rel'> R; Rel O Rel' \\<subseteq> Rel'';\n        \\<And>S T.\n           (S, T) \\<in> Rel \\<Longrightarrow>\n           S \\<leadsto>\\<^sup>^<Rel> T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and>\n                            (P', R') \\<in> Rel''", "by(drule_tac Q=Q in simE2) auto"], ["proof (state)\nthis:\n  \\<exists>P'.\n     P \\<Longrightarrow>\\<alpha> \\<prec> P' \\<and> (P', R') \\<in> Rel''\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weakMonotonic:\n  fixes P :: ccs\n  and   A :: \"(ccs \\<times> ccs) set\"\n  and   Q :: ccs\n  and   B :: \"(ccs \\<times> ccs) set\"\n\n  assumes \"P \\<leadsto><A> Q\"\n  and     \"A \\<subseteq> B\"\n\n  shows \"P \\<leadsto><B> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<leadsto><B> Q", "using assms"], ["proof (prove)\nusing this:\n  P \\<leadsto><A> Q\n  A \\<subseteq> B\n\ngoal (1 subgoal):\n 1. P \\<leadsto><B> Q", "by(fastforce simp add: weakCongSimulation_def)"], ["", "end"]]}