{"file_name": "/home/qj213/afp-2021-10-22/thys/Dirichlet_L/Group_Adjoin.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Dirichlet_L", "problem_names": ["lemma (in group) ord_min:\n  assumes \"m \\<ge> 1\" \"x \\<in> carrier G\" \"x [^] m = \\<one>\"\n  shows   \"ord x \\<le> m\"", "lemma (in group) bij_betw_mult_left [intro]:\n  assumes [simp]: \"x \\<in> carrier G\"\n  shows \"bij_betw (\\<lambda>y. x \\<otimes> y) (carrier G) (carrier G)\"", "lemma order_gt_0 [simp,intro]: \"order G > 0\"", "lemma subgroup_imp_finite_comm_group:\n  assumes \"subgroup H G\"\n  shows   \"finite_comm_group (G\\<lparr>carrier := H\\<rparr>)\"", "lemma (in subgroup) nat_pow_closed [simp,intro]: \"a \\<in> H \\<Longrightarrow> pow G a (n::nat) \\<in> H\"", "lemma nat_pow_modify_carrier: \"a [^]\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> b = a [^]\\<^bsub>G\\<^esub> (b::nat)\"", "lemma subgroup_indicator_modify_carrier [simp]:\n  \"subgroup_indicator (G\\<lparr>carrier := H'\\<rparr>) H a = subgroup_indicator G H a\"", "lemma adjoin_modify_carrier [simp]:\n  \"adjoin (G\\<lparr>carrier := H'\\<rparr>) H a = adjoin G H a\"", "lemma subgroup_indicator_eq_1:\n  assumes \"a \\<in> H\" \"a \\<in> carrier G\"\n  shows   \"subgroup_indicator G H a = 1\"", "lemma subgroup_indicator_le:\n  assumes \"a [^] n \\<in> H\" \"n > 0\"  \"a \\<in> carrier G\"\n  shows   \"subgroup_indicator G H a \\<le> n\"", "lemma ord_pos: \n  assumes \"x \\<in> carrier G\"\n  shows   \"ord x > 0\"", "lemma \n  assumes \"subgroup H G\" and a: \"a \\<in> carrier G\"\n  shows subgroup_indicator_pos: \"subgroup_indicator G H a > 0\" (is \"?h > 0\")\n  and   pow_subgroup_indicator: \"a [^] subgroup_indicator G H a \\<in> H\"", "lemma subgroup_indicator_le_ord:\n  assumes \"a \\<in> carrier G\" \"subgroup H G\"\n  shows   \"subgroup_indicator G H a \\<le> ord a\"", "lemma subgroup_indicator_trivial: \n  assumes \"a \\<in> carrier G\"\n  shows   \"subgroup_indicator G {\\<one>} a = group.ord G a\"", "lemma mem_adjoin:\n  assumes \"subgroup H G\" \"x \\<in> H\" \"a \\<in> carrier G\"\n  shows   \"x \\<in> adjoin G H a\"", "lemma adjoin_subgroup:\n  assumes \"subgroup H G\" and a: \"a \\<in> carrier G\"\n  shows   \"subgroup (adjoin G H a) G\"", "lemma adjoin_id:\n  assumes \"subgroup H G\" and a: \"a \\<in> H\"\n  shows   \"adjoin G H a = H\"", "lemma adjoined_in_adjoin:\n  assumes \"subgroup H G\" and a: \"a \\<in> carrier G\"\n  shows   \"a \\<in> adjoin G H a\"", "lemma adjoin_subset:\n  assumes \"subgroup H G\" and a: \"a \\<in> carrier G\"\n  shows   \"adjoin G H a \\<subseteq> carrier G\"", "lemma inj_on_adjoin:\n  assumes \"subgroup H G\" and a: \"a \\<in> carrier G\" \"a \\<notin> H\"\n  defines \"h \\<equiv> subgroup_indicator G H a\"\n  shows   \"inj_on (\\<lambda>(x, k). x \\<otimes> a [^] k) (H \\<times> {..<h})\"", "lemma card_adjoin:\n  assumes \"subgroup H G\" and a: \"a \\<in> carrier G\" \"a \\<notin> H\"\n  shows   \"card (adjoin G H a) = card H * subgroup_indicator G H a\"", "lemma adjoin_unique:\n  assumes \"x \\<in> adjoin G H a\"\n  defines \"h \\<equiv> subgroup_indicator G H a\"\n  shows   \"\\<exists>!z. z \\<in> H \\<times> {..<subgroup_indicator G H a} \\<and> x = fst z \\<otimes>\\<^bsub>G\\<^esub> a [^]\\<^bsub>G\\<^esub> snd z\"", "lemma unadjoin_correct:\n  assumes \"x \\<in> adjoin G H a\"\n  shows   \"fst (unadjoin x) \\<in> H\" and \"snd (unadjoin x) < subgroup_indicator G H a\"\n          \"fst (unadjoin x) \\<otimes> a [^] snd (unadjoin x) = x\"", "lemma unadjoin_unique:\n  assumes \"y \\<in> H\" \"h < subgroup_indicator G H a\"\n  shows   \"unadjoin (y \\<otimes> a [^] h) = (y, h)\"", "lemma unadjoin_unique':\n  assumes \"y \\<in> H\" \"h < subgroup_indicator G H a\" \"x = y \\<otimes> a [^] h\"\n  shows   \"unadjoin x = (y, h)\"", "lemma unadjoin_1 [simp]: \"unadjoin \\<one> = (\\<one>, 0)\"", "lemma unadjoin_in_base [simp]: \"x \\<in> H \\<Longrightarrow> unadjoin x = (x, 0)\"", "lemma unadjoin_adjoined [simp]: \"unadjoin a = (\\<one>, 1)\"", "lemma group_decompose_adjoin_aux:\n  assumes \"subgroup H G\"\n  shows   \"H = carrier G \\<or> \n           (\\<exists>H' a. H \\<subseteq> H' \\<and> subgroup H' G \\<and> a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a)\"", "lemma group_decompose_adjoin:\n  assumes \"subgroup H0 G\" \"H0 \\<noteq> carrier G\"\n  obtains H a where \"H0 \\<subseteq> H\" \"subgroup H G\" \"a \\<in> carrier G - H\" \"carrier G = adjoin G H a\"", "lemma subgroup_adjoin_induct [consumes 1, case_names base adjoin]:\n  assumes \"subgroup H0 G\"\n  assumes base: \"P (G\\<lparr>carrier := H0\\<rparr>)\"\n  assumes adjoin: \"\\<And>H a. subgroup H G \\<Longrightarrow> H0 \\<subseteq> H \\<Longrightarrow> a \\<in> carrier G - H \\<Longrightarrow> P (G\\<lparr>carrier := H\\<rparr>) \\<Longrightarrow> \n                           P (G\\<lparr>carrier := adjoin G H a\\<rparr>)\"\n  shows   \"P G\"", "lemma subgroup_adjoin_induct' [case_names singleton adjoin]:\n  assumes singleton: \"P (G\\<lparr>carrier := {\\<one>}\\<rparr>)\"\n  assumes adjoin: \"\\<And>H a. subgroup H G \\<Longrightarrow> a \\<in> carrier G - H \\<Longrightarrow> P (G\\<lparr>carrier := H\\<rparr>) \\<Longrightarrow> \n                           P (G\\<lparr>carrier := adjoin G H a\\<rparr>)\"\n  shows   \"P G\""], "translations": [["", "lemma (in group) ord_min:\n  assumes \"m \\<ge> 1\" \"x \\<in> carrier G\" \"x [^] m = \\<one>\"\n  shows   \"ord x \\<le> m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord x \\<le> m", "using assms pow_eq_id"], ["proof (prove)\nusing this:\n  1 \\<le> m\n  x \\<in> carrier G\n  x [^] m = \\<one>\n  ?x \\<in> carrier G \\<Longrightarrow>\n  (?x [^] ?n = \\<one>) = (ord ?x dvd ?n)\n\ngoal (1 subgoal):\n 1. ord x \\<le> m", "by auto"], ["", "lemma (in group) bij_betw_mult_left [intro]:\n  assumes [simp]: \"x \\<in> carrier G\"\n  shows \"bij_betw (\\<lambda>y. x \\<otimes> y) (carrier G) (carrier G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw ((\\<otimes>) x) (carrier G) (carrier G)", "by (intro bij_betwI[where ?g = \"\\<lambda>y. inv x \\<otimes> y\"])\n     (auto simp: m_assoc [symmetric])"], ["", "locale finite_comm_group = comm_group +\n  assumes fin [intro]: \"finite (carrier G)\"\nbegin"], ["", "lemma order_gt_0 [simp,intro]: \"order G > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < order G", "by (subst order_gt_0_iff_finite) auto"], ["", "lemma subgroup_imp_finite_comm_group:\n  assumes \"subgroup H G\"\n  shows   \"finite_comm_group (G\\<lparr>carrier := H\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_comm_group (G\\<lparr>carrier := H\\<rparr>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite_comm_group (G\\<lparr>carrier := H\\<rparr>)", "interpret G': group \"G\\<lparr>carrier := H\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group (G\\<lparr>carrier := H\\<rparr>)", "by (intro subgroup_imp_group) fact+"], ["proof (state)\ngoal (1 subgoal):\n 1. finite_comm_group (G\\<lparr>carrier := H\\<rparr>)", "interpret H: subgroup H G"], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup H G", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. finite_comm_group (G\\<lparr>carrier := H\\<rparr>)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_comm_group (G\\<lparr>carrier := H\\<rparr>)", "by standard (insert finite_subset[OF H.subset fin], auto simp: m_comm)"], ["proof (state)\nthis:\n  finite_comm_group (G\\<lparr>carrier := H\\<rparr>)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection \\<open>Subgroup indicators and adjoining elements\\<close>"], ["", "definition subgroup_indicator :: \"('a, 'b) monoid_scheme \\<Rightarrow> 'a set \\<Rightarrow> 'a \\<Rightarrow> nat\" where\n  \"subgroup_indicator G H a = (LEAST k. k > 0 \\<and> a [^]\\<^bsub>G\\<^esub> k \\<in> H)\""], ["", "definition adjoin :: \"('a, 'b) monoid_scheme \\<Rightarrow> 'a set \\<Rightarrow> 'a \\<Rightarrow> 'a set\" where\n  \"adjoin G H a = {x \\<otimes>\\<^bsub>G\\<^esub> a [^]\\<^bsub>G\\<^esub> k |x k. x \\<in> H \\<and> k < subgroup_indicator G H a}\""], ["", "lemma (in subgroup) nat_pow_closed [simp,intro]: \"a \\<in> H \\<Longrightarrow> pow G a (n::nat) \\<in> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> H \\<Longrightarrow> a [^] n \\<in> H", "by (induction n) (auto simp: nat_pow_def)"], ["", "lemma nat_pow_modify_carrier: \"a [^]\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> b = a [^]\\<^bsub>G\\<^esub> (b::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a [^]\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> b =\n    a [^]\\<^bsub>G\\<^esub> b", "by (simp add: nat_pow_def)"], ["", "lemma subgroup_indicator_modify_carrier [simp]:\n  \"subgroup_indicator (G\\<lparr>carrier := H'\\<rparr>) H a = subgroup_indicator G H a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup_indicator (G\\<lparr>carrier := H'\\<rparr>) H a =\n    subgroup_indicator G H a", "by (auto simp: subgroup_indicator_def nat_pow_def)"], ["", "lemma adjoin_modify_carrier [simp]:\n  \"adjoin (G\\<lparr>carrier := H'\\<rparr>) H a = adjoin G H a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. adjoin (G\\<lparr>carrier := H'\\<rparr>) H a = adjoin G H a", "by (simp_all add: adjoin_def nat_pow_def)"], ["", "context group\nbegin"], ["", "lemma subgroup_indicator_eq_1:\n  assumes \"a \\<in> H\" \"a \\<in> carrier G\"\n  shows   \"subgroup_indicator G H a = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup_indicator G H a = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. subgroup_indicator G H a = 1", "from assms"], ["proof (chain)\npicking this:\n  a \\<in> H\n  a \\<in> carrier G", "show ?thesis"], ["proof (prove)\nusing this:\n  a \\<in> H\n  a \\<in> carrier G\n\ngoal (1 subgoal):\n 1. subgroup_indicator G H a = 1", "unfolding subgroup_indicator_def"], ["proof (prove)\nusing this:\n  a \\<in> H\n  a \\<in> carrier G\n\ngoal (1 subgoal):\n 1. (LEAST k. 0 < k \\<and> a [^] k \\<in> H) = 1", "by (intro Least_equality) (auto simp: nat_pow_def)"], ["proof (state)\nthis:\n  subgroup_indicator G H a = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subgroup_indicator_le:\n  assumes \"a [^] n \\<in> H\" \"n > 0\"  \"a \\<in> carrier G\"\n  shows   \"subgroup_indicator G H a \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup_indicator G H a \\<le> n", "using assms"], ["proof (prove)\nusing this:\n  a [^] n \\<in> H\n  0 < n\n  a \\<in> carrier G\n\ngoal (1 subgoal):\n 1. subgroup_indicator G H a \\<le> n", "unfolding subgroup_indicator_def"], ["proof (prove)\nusing this:\n  a [^] n \\<in> H\n  0 < n\n  a \\<in> carrier G\n\ngoal (1 subgoal):\n 1. (LEAST k. 0 < k \\<and> a [^] k \\<in> H) \\<le> n", "by (intro Least_le) auto"], ["", "end"], ["", "context finite_comm_group\nbegin"], ["", "lemma ord_pos: \n  assumes \"x \\<in> carrier G\"\n  shows   \"ord x > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < ord x", "using ord_ge_1[of x] assms fin"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite (carrier G); x \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> 1 \\<le> ord x\n  x \\<in> carrier G\n  finite (carrier G)\n\ngoal (1 subgoal):\n 1. 0 < ord x", "by auto"], ["", "lemma \n  assumes \"subgroup H G\" and a: \"a \\<in> carrier G\"\n  shows subgroup_indicator_pos: \"subgroup_indicator G H a > 0\" (is \"?h > 0\")\n  and   pow_subgroup_indicator: \"a [^] subgroup_indicator G H a \\<in> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < subgroup_indicator G H a &&& a [^] subgroup_indicator G H a \\<in> H", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < subgroup_indicator G H a\n 2. a [^] subgroup_indicator G H a \\<in> H", "interpret subgroup H G"], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup H G", "by fact"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < subgroup_indicator G H a\n 2. a [^] subgroup_indicator G H a \\<in> H", "from a"], ["proof (chain)\npicking this:\n  a \\<in> carrier G", "have \"\\<exists>h>0. a [^] (h::nat) \\<in> H\""], ["proof (prove)\nusing this:\n  a \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<exists>h>0. a [^] h \\<in> H", "by (intro exI[of _ \"ord a\"]) (auto simp: ord_pos pow_ord_eq_1 fin)"], ["proof (state)\nthis:\n  \\<exists>h>0. a [^] h \\<in> H\n\ngoal (2 subgoals):\n 1. 0 < subgroup_indicator G H a\n 2. a [^] subgroup_indicator G H a \\<in> H", "hence \"?h > 0 \\<and> a [^] ?h \\<in> H\""], ["proof (prove)\nusing this:\n  \\<exists>h>0. a [^] h \\<in> H\n\ngoal (1 subgoal):\n 1. 0 < subgroup_indicator G H a \\<and>\n    a [^] subgroup_indicator G H a \\<in> H", "unfolding subgroup_indicator_def"], ["proof (prove)\nusing this:\n  \\<exists>h>0. a [^] h \\<in> H\n\ngoal (1 subgoal):\n 1. 0 < (LEAST k. 0 < k \\<and> a [^] k \\<in> H) \\<and>\n    a [^] (LEAST k. 0 < k \\<and> a [^] k \\<in> H) \\<in> H", "by (rule LeastI_ex)"], ["proof (state)\nthis:\n  0 < subgroup_indicator G H a \\<and> a [^] subgroup_indicator G H a \\<in> H\n\ngoal (2 subgoals):\n 1. 0 < subgroup_indicator G H a\n 2. a [^] subgroup_indicator G H a \\<in> H", "thus \"?h > 0\" and \"a [^] ?h \\<in> H\""], ["proof (prove)\nusing this:\n  0 < subgroup_indicator G H a \\<and> a [^] subgroup_indicator G H a \\<in> H\n\ngoal (1 subgoal):\n 1. 0 < subgroup_indicator G H a &&& a [^] subgroup_indicator G H a \\<in> H", "by auto"], ["proof (state)\nthis:\n  0 < subgroup_indicator G H a\n  a [^] subgroup_indicator G H a \\<in> H\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subgroup_indicator_le_ord:\n  assumes \"a \\<in> carrier G\" \"subgroup H G\"\n  shows   \"subgroup_indicator G H a \\<le> ord a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup_indicator G H a \\<le> ord a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. subgroup_indicator G H a \\<le> ord a", "interpret subgroup H G"], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup H G", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. subgroup_indicator G H a \\<le> ord a", "from assms"], ["proof (chain)\npicking this:\n  a \\<in> carrier G\n  subgroup H G", "show ?thesis"], ["proof (prove)\nusing this:\n  a \\<in> carrier G\n  subgroup H G\n\ngoal (1 subgoal):\n 1. subgroup_indicator G H a \\<le> ord a", "by (intro subgroup_indicator_le) (auto simp: pow_ord_eq_1 fin ord_pos)"], ["proof (state)\nthis:\n  subgroup_indicator G H a \\<le> ord a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subgroup_indicator_trivial: \n  assumes \"a \\<in> carrier G\"\n  shows   \"subgroup_indicator G {\\<one>} a = group.ord G a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup_indicator G {\\<one>} a = ord a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. subgroup_indicator G {\\<one>} a = ord a", "have sg[simp]: \"subgroup {\\<one>} G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup {\\<one>} G", "by standard auto"], ["proof (state)\nthis:\n  subgroup {\\<one>} G\n\ngoal (1 subgoal):\n 1. subgroup_indicator G {\\<one>} a = ord a", "from pow_subgroup_indicator[OF sg assms] and assms"], ["proof (chain)\npicking this:\n  a [^] subgroup_indicator G {\\<one>} a \\<in> {\\<one>}\n  a \\<in> carrier G", "show ?thesis"], ["proof (prove)\nusing this:\n  a [^] subgroup_indicator G {\\<one>} a \\<in> {\\<one>}\n  a \\<in> carrier G\n\ngoal (1 subgoal):\n 1. subgroup_indicator G {\\<one>} a = ord a", "by (intro antisym subgroup_indicator_le_ord ord_min)\n       (auto simp: Suc_le_eq subgroup_indicator_pos)"], ["proof (state)\nthis:\n  subgroup_indicator G {\\<one>} a = ord a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mem_adjoin:\n  assumes \"subgroup H G\" \"x \\<in> H\" \"a \\<in> carrier G\"\n  shows   \"x \\<in> adjoin G H a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> adjoin G H a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> adjoin G H a", "interpret subgroup H G"], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup H G", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> adjoin G H a", "from assms"], ["proof (chain)\npicking this:\n  subgroup H G\n  x \\<in> H\n  a \\<in> carrier G", "show ?thesis"], ["proof (prove)\nusing this:\n  subgroup H G\n  x \\<in> H\n  a \\<in> carrier G\n\ngoal (1 subgoal):\n 1. x \\<in> adjoin G H a", "by (auto simp: adjoin_def intro!: exI[of _ x] exI[of _ 0] subgroup_indicator_pos)"], ["proof (state)\nthis:\n  x \\<in> adjoin G H a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma adjoin_subgroup:\n  assumes \"subgroup H G\" and a: \"a \\<in> carrier G\"\n  shows   \"subgroup (adjoin G H a) G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup (adjoin G H a) G", "proof (standard, goal_cases)"], ["proof (state)\ngoal (4 subgoals):\n 1. adjoin G H a \\<subseteq> carrier G\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> adjoin G H a; y \\<in> adjoin G H a\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y \\<in> adjoin G H a\n 3. \\<one> \\<in> adjoin G H a\n 4. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> inv x \\<in> adjoin G H a", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. adjoin G H a \\<subseteq> carrier G\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> adjoin G H a; y \\<in> adjoin G H a\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y \\<in> adjoin G H a\n 3. \\<one> \\<in> adjoin G H a\n 4. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> inv x \\<in> adjoin G H a", "interpret subgroup H G"], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup H G", "by fact"], ["proof (state)\ngoal (4 subgoals):\n 1. adjoin G H a \\<subseteq> carrier G\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> adjoin G H a; y \\<in> adjoin G H a\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y \\<in> adjoin G H a\n 3. \\<one> \\<in> adjoin G H a\n 4. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> inv x \\<in> adjoin G H a", "from a"], ["proof (chain)\npicking this:\n  a \\<in> carrier G", "show ?case"], ["proof (prove)\nusing this:\n  a \\<in> carrier G\n\ngoal (1 subgoal):\n 1. adjoin G H a \\<subseteq> carrier G", "by (auto simp: adjoin_def)"], ["proof (state)\nthis:\n  adjoin G H a \\<subseteq> carrier G\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> adjoin G H a; y \\<in> adjoin G H a\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y \\<in> adjoin G H a\n 2. \\<one> \\<in> adjoin G H a\n 3. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> inv x \\<in> adjoin G H a", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> adjoin G H a; y \\<in> adjoin G H a\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y \\<in> adjoin G H a\n 2. \\<one> \\<in> adjoin G H a\n 3. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> inv x \\<in> adjoin G H a", "case (2 x y)"], ["proof (state)\nthis:\n  x \\<in> adjoin G H a\n  y \\<in> adjoin G H a\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> adjoin G H a; y \\<in> adjoin G H a\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y \\<in> adjoin G H a\n 2. \\<one> \\<in> adjoin G H a\n 3. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> inv x \\<in> adjoin G H a", "interpret subgroup H G"], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup H G", "by fact"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> adjoin G H a; y \\<in> adjoin G H a\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y \\<in> adjoin G H a\n 2. \\<one> \\<in> adjoin G H a\n 3. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> inv x \\<in> adjoin G H a", "define h where \"h = subgroup_indicator G H a\""], ["proof (state)\nthis:\n  h = subgroup_indicator G H a\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> adjoin G H a; y \\<in> adjoin G H a\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y \\<in> adjoin G H a\n 2. \\<one> \\<in> adjoin G H a\n 3. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> inv x \\<in> adjoin G H a", "from assms"], ["proof (chain)\npicking this:\n  subgroup H G\n  a \\<in> carrier G", "have [simp]: \"h > 0\""], ["proof (prove)\nusing this:\n  subgroup H G\n  a \\<in> carrier G\n\ngoal (1 subgoal):\n 1. 0 < h", "unfolding h_def"], ["proof (prove)\nusing this:\n  subgroup H G\n  a \\<in> carrier G\n\ngoal (1 subgoal):\n 1. 0 < subgroup_indicator G H a", "by (intro subgroup_indicator_pos) auto"], ["proof (state)\nthis:\n  0 < h\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> adjoin G H a; y \\<in> adjoin G H a\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y \\<in> adjoin G H a\n 2. \\<one> \\<in> adjoin G H a\n 3. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> inv x \\<in> adjoin G H a", "from 2(1)"], ["proof (chain)\npicking this:\n  x \\<in> adjoin G H a", "obtain x' :: 'a and k :: nat where [simp]: \"x' \\<in> H\" \"x = x' \\<otimes> a [^] k\""], ["proof (prove)\nusing this:\n  x \\<in> adjoin G H a\n\ngoal (1 subgoal):\n 1. (\\<And>x' k.\n        \\<lbrakk>x' \\<in> H; x = x' \\<otimes> a [^] k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: adjoin_def)"], ["proof (state)\nthis:\n  x' \\<in> H\n  x = x' \\<otimes> a [^] k\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> adjoin G H a; y \\<in> adjoin G H a\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y \\<in> adjoin G H a\n 2. \\<one> \\<in> adjoin G H a\n 3. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> inv x \\<in> adjoin G H a", "from 2(2)"], ["proof (chain)\npicking this:\n  y \\<in> adjoin G H a", "obtain y' :: 'a and l :: nat where [simp]: \"y' \\<in> H\" \"y = y' \\<otimes> a [^] l\""], ["proof (prove)\nusing this:\n  y \\<in> adjoin G H a\n\ngoal (1 subgoal):\n 1. (\\<And>y' l.\n        \\<lbrakk>y' \\<in> H; y = y' \\<otimes> a [^] l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: adjoin_def)"], ["proof (state)\nthis:\n  y' \\<in> H\n  y = y' \\<otimes> a [^] l\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> adjoin G H a; y \\<in> adjoin G H a\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y \\<in> adjoin G H a\n 2. \\<one> \\<in> adjoin G H a\n 3. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> inv x \\<in> adjoin G H a", "define a' where \"a' = (a [^] h) [^] ((k + l) div h)\""], ["proof (state)\nthis:\n  a' = (a [^] h) [^] ((k + l) div h)\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> adjoin G H a; y \\<in> adjoin G H a\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y \\<in> adjoin G H a\n 2. \\<one> \\<in> adjoin G H a\n 3. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> inv x \\<in> adjoin G H a", "have [simp]: \"a' \\<in> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a' \\<in> H", "unfolding a'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a [^] h) [^] ((k + l) div h) \\<in> H", "by (rule nat_pow_closed) (insert assms, auto simp: h_def intro!: pow_subgroup_indicator)"], ["proof (state)\nthis:\n  a' \\<in> H\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> adjoin G H a; y \\<in> adjoin G H a\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y \\<in> adjoin G H a\n 2. \\<one> \\<in> adjoin G H a\n 3. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> inv x \\<in> adjoin G H a", "from a"], ["proof (chain)\npicking this:\n  a \\<in> carrier G", "have \"x \\<otimes> y = (x' \\<otimes> y') \\<otimes> a [^] (k + l)\""], ["proof (prove)\nusing this:\n  a \\<in> carrier G\n\ngoal (1 subgoal):\n 1. x \\<otimes> y = x' \\<otimes> y' \\<otimes> a [^] (k + l)", "by (simp add: nat_pow_mult [symmetric] m_ac)"], ["proof (state)\nthis:\n  x \\<otimes> y = x' \\<otimes> y' \\<otimes> a [^] (k + l)\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> adjoin G H a; y \\<in> adjoin G H a\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y \\<in> adjoin G H a\n 2. \\<one> \\<in> adjoin G H a\n 3. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> inv x \\<in> adjoin G H a", "also"], ["proof (state)\nthis:\n  x \\<otimes> y = x' \\<otimes> y' \\<otimes> a [^] (k + l)\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> adjoin G H a; y \\<in> adjoin G H a\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y \\<in> adjoin G H a\n 2. \\<one> \\<in> adjoin G H a\n 3. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> inv x \\<in> adjoin G H a", "have \"k + l = h * ((k + l) div h) + (k + l) mod h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k + l = h * ((k + l) div h) + (k + l) mod h", "by (rule mult_div_mod_eq [symmetric])"], ["proof (state)\nthis:\n  k + l = h * ((k + l) div h) + (k + l) mod h\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> adjoin G H a; y \\<in> adjoin G H a\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y \\<in> adjoin G H a\n 2. \\<one> \\<in> adjoin G H a\n 3. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> inv x \\<in> adjoin G H a", "also"], ["proof (state)\nthis:\n  k + l = h * ((k + l) div h) + (k + l) mod h\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> adjoin G H a; y \\<in> adjoin G H a\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y \\<in> adjoin G H a\n 2. \\<one> \\<in> adjoin G H a\n 3. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> inv x \\<in> adjoin G H a", "from a fin"], ["proof (chain)\npicking this:\n  a \\<in> carrier G\n  finite (carrier G)", "have \"a [^] \\<dots> = a' \\<otimes> a [^] ((k + l) mod h)\""], ["proof (prove)\nusing this:\n  a \\<in> carrier G\n  finite (carrier G)\n\ngoal (1 subgoal):\n 1. a [^] (h * ((k + l) div h) + (k + l) mod h) =\n    a' \\<otimes> a [^] ((k + l) mod h)", "by (subst nat_pow_mult [symmetric]) \n       (simp_all add: nat_pow_pow [symmetric] pow_ord_eq_1 a'_def [symmetric])"], ["proof (state)\nthis:\n  a [^] (h * ((k + l) div h) + (k + l) mod h) =\n  a' \\<otimes> a [^] ((k + l) mod h)\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> adjoin G H a; y \\<in> adjoin G H a\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y \\<in> adjoin G H a\n 2. \\<one> \\<in> adjoin G H a\n 3. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> inv x \\<in> adjoin G H a", "finally"], ["proof (chain)\npicking this:\n  x \\<otimes> y =\n  x' \\<otimes> y' \\<otimes> (a' \\<otimes> a [^] ((k + l) mod h))", "have \"x \\<otimes> y = x' \\<otimes> y' \\<otimes> a' \\<otimes> a [^] ((k + l) mod h)\""], ["proof (prove)\nusing this:\n  x \\<otimes> y =\n  x' \\<otimes> y' \\<otimes> (a' \\<otimes> a [^] ((k + l) mod h))\n\ngoal (1 subgoal):\n 1. x \\<otimes> y =\n    x' \\<otimes> y' \\<otimes> a' \\<otimes> a [^] ((k + l) mod h)", "using a"], ["proof (prove)\nusing this:\n  x \\<otimes> y =\n  x' \\<otimes> y' \\<otimes> (a' \\<otimes> a [^] ((k + l) mod h))\n  a \\<in> carrier G\n\ngoal (1 subgoal):\n 1. x \\<otimes> y =\n    x' \\<otimes> y' \\<otimes> a' \\<otimes> a [^] ((k + l) mod h)", "by (simp add: m_ac)"], ["proof (state)\nthis:\n  x \\<otimes> y =\n  x' \\<otimes> y' \\<otimes> a' \\<otimes> a [^] ((k + l) mod h)\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> adjoin G H a; y \\<in> adjoin G H a\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y \\<in> adjoin G H a\n 2. \\<one> \\<in> adjoin G H a\n 3. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> inv x \\<in> adjoin G H a", "moreover"], ["proof (state)\nthis:\n  x \\<otimes> y =\n  x' \\<otimes> y' \\<otimes> a' \\<otimes> a [^] ((k + l) mod h)\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> adjoin G H a; y \\<in> adjoin G H a\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y \\<in> adjoin G H a\n 2. \\<one> \\<in> adjoin G H a\n 3. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> inv x \\<in> adjoin G H a", "from a"], ["proof (chain)\npicking this:\n  a \\<in> carrier G", "have \"(k + l) mod h < h\""], ["proof (prove)\nusing this:\n  a \\<in> carrier G\n\ngoal (1 subgoal):\n 1. (k + l) mod h < h", "by (intro mod_less_divisor) (auto simp: ord_pos)"], ["proof (state)\nthis:\n  (k + l) mod h < h\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> adjoin G H a; y \\<in> adjoin G H a\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y \\<in> adjoin G H a\n 2. \\<one> \\<in> adjoin G H a\n 3. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> inv x \\<in> adjoin G H a", "ultimately"], ["proof (chain)\npicking this:\n  x \\<otimes> y =\n  x' \\<otimes> y' \\<otimes> a' \\<otimes> a [^] ((k + l) mod h)\n  (k + l) mod h < h", "show ?case"], ["proof (prove)\nusing this:\n  x \\<otimes> y =\n  x' \\<otimes> y' \\<otimes> a' \\<otimes> a [^] ((k + l) mod h)\n  (k + l) mod h < h\n\ngoal (1 subgoal):\n 1. x \\<otimes> y \\<in> adjoin G H a", "by (auto simp: adjoin_def h_def intro!: exI[of _ \"x' \\<otimes> y' \\<otimes> a'\"] exI[of _ \"(k + l) mod h\"])"], ["proof (state)\nthis:\n  x \\<otimes> y \\<in> adjoin G H a\n\ngoal (2 subgoals):\n 1. \\<one> \\<in> adjoin G H a\n 2. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> inv x \\<in> adjoin G H a", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<one> \\<in> adjoin G H a\n 2. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> inv x \\<in> adjoin G H a", "case 3"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<one> \\<in> adjoin G H a\n 2. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> inv x \\<in> adjoin G H a", "interpret subgroup H G"], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup H G", "by fact"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<one> \\<in> adjoin G H a\n 2. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> inv x \\<in> adjoin G H a", "from assms"], ["proof (chain)\npicking this:\n  subgroup H G\n  a \\<in> carrier G", "show ?case"], ["proof (prove)\nusing this:\n  subgroup H G\n  a \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<one> \\<in> adjoin G H a", "by (auto simp: adjoin_def intro!: exI[of _ \\<one>] exI[of _ 0] subgroup_indicator_pos)"], ["proof (state)\nthis:\n  \\<one> \\<in> adjoin G H a\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> inv x \\<in> adjoin G H a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> inv x \\<in> adjoin G H a", "case (4 x)"], ["proof (state)\nthis:\n  x \\<in> adjoin G H a\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> inv x \\<in> adjoin G H a", "interpret H: subgroup H G"], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup H G", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> inv x \\<in> adjoin G H a", "define h where \"h = subgroup_indicator G H a\""], ["proof (state)\nthis:\n  h = subgroup_indicator G H a\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> inv x \\<in> adjoin G H a", "define a' where \"a' = a [^] h\""], ["proof (state)\nthis:\n  a' = a [^] h\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> inv x \\<in> adjoin G H a", "from assms"], ["proof (chain)\npicking this:\n  subgroup H G\n  a \\<in> carrier G", "have [simp]: \"a' \\<in> H\""], ["proof (prove)\nusing this:\n  subgroup H G\n  a \\<in> carrier G\n\ngoal (1 subgoal):\n 1. a' \\<in> H", "unfolding a'_def h_def"], ["proof (prove)\nusing this:\n  subgroup H G\n  a \\<in> carrier G\n\ngoal (1 subgoal):\n 1. a [^] subgroup_indicator G H a \\<in> H", "by (intro pow_subgroup_indicator) auto"], ["proof (state)\nthis:\n  a' \\<in> H\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> inv x \\<in> adjoin G H a", "from 4"], ["proof (chain)\npicking this:\n  x \\<in> adjoin G H a", "obtain x' and k :: nat where [simp]: \"x' \\<in> H\" \"x = x' \\<otimes> a [^] k\" and \"k < h\""], ["proof (prove)\nusing this:\n  x \\<in> adjoin G H a\n\ngoal (1 subgoal):\n 1. (\\<And>x' k.\n        \\<lbrakk>x' \\<in> H; x = x' \\<otimes> a [^] k; k < h\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: adjoin_def h_def)"], ["proof (state)\nthis:\n  x' \\<in> H\n  x = x' \\<otimes> a [^] k\n  k < h\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> inv x \\<in> adjoin G H a", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. inv x \\<in> adjoin G H a", "proof (cases \"k = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow> inv x \\<in> adjoin G H a\n 2. k \\<noteq> 0 \\<Longrightarrow> inv x \\<in> adjoin G H a", "case True"], ["proof (state)\nthis:\n  k = 0\n\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow> inv x \\<in> adjoin G H a\n 2. k \\<noteq> 0 \\<Longrightarrow> inv x \\<in> adjoin G H a", "with assms"], ["proof (chain)\npicking this:\n  subgroup H G\n  a \\<in> carrier G\n  k = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  subgroup H G\n  a \\<in> carrier G\n  k = 0\n\ngoal (1 subgoal):\n 1. inv x \\<in> adjoin G H a", "by (auto simp: mem_adjoin)"], ["proof (state)\nthis:\n  inv x \\<in> adjoin G H a\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> inv x \\<in> adjoin G H a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> inv x \\<in> adjoin G H a", "case False"], ["proof (state)\nthis:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> inv x \\<in> adjoin G H a", "from a"], ["proof (chain)\npicking this:\n  a \\<in> carrier G", "have \"inv x = inv x' \\<otimes> inv (a [^] k)\""], ["proof (prove)\nusing this:\n  a \\<in> carrier G\n\ngoal (1 subgoal):\n 1. inv x = inv x' \\<otimes> inv (a [^] k)", "by (simp add: inv_mult)"], ["proof (state)\nthis:\n  inv x = inv x' \\<otimes> inv (a [^] k)\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> inv x \\<in> adjoin G H a", "also"], ["proof (state)\nthis:\n  inv x = inv x' \\<otimes> inv (a [^] k)\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> inv x \\<in> adjoin G H a", "have \"\\<dots> = inv x' \\<otimes> (inv a' \\<otimes> a') \\<otimes> inv (a [^] k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv x' \\<otimes> inv (a [^] k) =\n    inv x' \\<otimes> (inv a' \\<otimes> a') \\<otimes> inv (a [^] k)", "by simp"], ["proof (state)\nthis:\n  inv x' \\<otimes> inv (a [^] k) =\n  inv x' \\<otimes> (inv a' \\<otimes> a') \\<otimes> inv (a [^] k)\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> inv x \\<in> adjoin G H a", "also"], ["proof (state)\nthis:\n  inv x' \\<otimes> inv (a [^] k) =\n  inv x' \\<otimes> (inv a' \\<otimes> a') \\<otimes> inv (a [^] k)\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> inv x \\<in> adjoin G H a", "have \"\\<dots> = inv x' \\<otimes> inv a' \\<otimes> (a' \\<otimes> inv (a [^] k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv x' \\<otimes> (inv a' \\<otimes> a') \\<otimes> inv (a [^] k) =\n    inv x' \\<otimes> inv a' \\<otimes> (a' \\<otimes> inv (a [^] k))", "by (simp only: \\<open>a' \\<in> H\\<close> \\<open>x' \\<in> H\\<close> inv_closed m_closed H.mem_carrier m_ac nat_pow_closed a)"], ["proof (state)\nthis:\n  inv x' \\<otimes> (inv a' \\<otimes> a') \\<otimes> inv (a [^] k) =\n  inv x' \\<otimes> inv a' \\<otimes> (a' \\<otimes> inv (a [^] k))\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> inv x \\<in> adjoin G H a", "also"], ["proof (state)\nthis:\n  inv x' \\<otimes> (inv a' \\<otimes> a') \\<otimes> inv (a [^] k) =\n  inv x' \\<otimes> inv a' \\<otimes> (a' \\<otimes> inv (a [^] k))\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> inv x \\<in> adjoin G H a", "from a"], ["proof (chain)\npicking this:\n  a \\<in> carrier G", "have \"a' \\<otimes> inv (a [^] k) = a [^] (int h - int k)\""], ["proof (prove)\nusing this:\n  a \\<in> carrier G\n\ngoal (1 subgoal):\n 1. a' \\<otimes> inv (a [^] k) = a [^] (int h - int k)", "by (subst int_pow_diff) (auto simp: a'_def int_pow_int)"], ["proof (state)\nthis:\n  a' \\<otimes> inv (a [^] k) = a [^] (int h - int k)\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> inv x \\<in> adjoin G H a", "also"], ["proof (state)\nthis:\n  a' \\<otimes> inv (a [^] k) = a [^] (int h - int k)\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> inv x \\<in> adjoin G H a", "from \\<open>k < h\\<close>"], ["proof (chain)\npicking this:\n  k < h", "have \"int h - int k = int (h - k)\""], ["proof (prove)\nusing this:\n  k < h\n\ngoal (1 subgoal):\n 1. int h - int k = int (h - k)", "by simp"], ["proof (state)\nthis:\n  int h - int k = int (h - k)\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> inv x \\<in> adjoin G H a", "also"], ["proof (state)\nthis:\n  int h - int k = int (h - k)\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> inv x \\<in> adjoin G H a", "have \"a [^] \\<dots> = a [^] (h - k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a [^] int (h - k) = a [^] (h - k)", "by (simp add: int_pow_int)"], ["proof (state)\nthis:\n  a [^] int (h - k) = a [^] (h - k)\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> inv x \\<in> adjoin G H a", "finally"], ["proof (chain)\npicking this:\n  inv x = inv x' \\<otimes> inv a' \\<otimes> a [^] (h - k)", "have \"inv x = inv x' \\<otimes> inv a' \\<otimes> a [^] (h - k)\""], ["proof (prove)\nusing this:\n  inv x = inv x' \\<otimes> inv a' \\<otimes> a [^] (h - k)\n\ngoal (1 subgoal):\n 1. inv x = inv x' \\<otimes> inv a' \\<otimes> a [^] (h - k)", "."], ["proof (state)\nthis:\n  inv x = inv x' \\<otimes> inv a' \\<otimes> a [^] (h - k)\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> inv x \\<in> adjoin G H a", "moreover"], ["proof (state)\nthis:\n  inv x = inv x' \\<otimes> inv a' \\<otimes> a [^] (h - k)\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> inv x \\<in> adjoin G H a", "have \"h - k < h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h - k < h", "using \\<open>k < h\\<close> and False"], ["proof (prove)\nusing this:\n  k < h\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. h - k < h", "by simp"], ["proof (state)\nthis:\n  h - k < h\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> inv x \\<in> adjoin G H a", "ultimately"], ["proof (chain)\npicking this:\n  inv x = inv x' \\<otimes> inv a' \\<otimes> a [^] (h - k)\n  h - k < h", "show ?thesis"], ["proof (prove)\nusing this:\n  inv x = inv x' \\<otimes> inv a' \\<otimes> a [^] (h - k)\n  h - k < h\n\ngoal (1 subgoal):\n 1. inv x \\<in> adjoin G H a", "by (auto simp: adjoin_def h_def intro!: exI[of _ \"inv x' \\<otimes> inv a'\"] exI[of _ \"h - k\"])"], ["proof (state)\nthis:\n  inv x \\<in> adjoin G H a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inv x \\<in> adjoin G H a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma adjoin_id:\n  assumes \"subgroup H G\" and a: \"a \\<in> H\"\n  shows   \"adjoin G H a = H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. adjoin G H a = H", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. adjoin G H a = H", "interpret subgroup H G"], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup H G", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. adjoin G H a = H", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. adjoin G H a = H", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> x \\<in> H\n 2. \\<And>x. x \\<in> H \\<Longrightarrow> x \\<in> adjoin G H a", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> x \\<in> H\n 2. \\<And>x. x \\<in> H \\<Longrightarrow> x \\<in> adjoin G H a", "assume \"x \\<in> H\""], ["proof (state)\nthis:\n  x \\<in> H\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> x \\<in> H\n 2. \\<And>x. x \\<in> H \\<Longrightarrow> x \\<in> adjoin G H a", "with assms"], ["proof (chain)\npicking this:\n  subgroup H G\n  a \\<in> H\n  x \\<in> H", "show \"x \\<in> adjoin G H a\""], ["proof (prove)\nusing this:\n  subgroup H G\n  a \\<in> H\n  x \\<in> H\n\ngoal (1 subgoal):\n 1. x \\<in> adjoin G H a", "by (auto simp: adjoin_def intro!: exI[of _ x] exI[of _ 0] subgroup_indicator_pos)"], ["proof (state)\nthis:\n  x \\<in> adjoin G H a\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> adjoin G H a \\<Longrightarrow> x \\<in> H", "qed (insert a, auto simp: adjoin_def)"], ["proof (state)\nthis:\n  adjoin G H a = H\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma adjoined_in_adjoin:\n  assumes \"subgroup H G\" and a: \"a \\<in> carrier G\"\n  shows   \"a \\<in> adjoin G H a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> adjoin G H a", "proof (cases \"a \\<in> H\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a \\<in> H \\<Longrightarrow> a \\<in> adjoin G H a\n 2. a \\<notin> H \\<Longrightarrow> a \\<in> adjoin G H a", "case True"], ["proof (state)\nthis:\n  a \\<in> H\n\ngoal (2 subgoals):\n 1. a \\<in> H \\<Longrightarrow> a \\<in> adjoin G H a\n 2. a \\<notin> H \\<Longrightarrow> a \\<in> adjoin G H a", "with assms"], ["proof (chain)\npicking this:\n  subgroup H G\n  a \\<in> carrier G\n  a \\<in> H", "show ?thesis"], ["proof (prove)\nusing this:\n  subgroup H G\n  a \\<in> carrier G\n  a \\<in> H\n\ngoal (1 subgoal):\n 1. a \\<in> adjoin G H a", "by (subst adjoin_id) auto"], ["proof (state)\nthis:\n  a \\<in> adjoin G H a\n\ngoal (1 subgoal):\n 1. a \\<notin> H \\<Longrightarrow> a \\<in> adjoin G H a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<notin> H \\<Longrightarrow> a \\<in> adjoin G H a", "case False"], ["proof (state)\nthis:\n  a \\<notin> H\n\ngoal (1 subgoal):\n 1. a \\<notin> H \\<Longrightarrow> a \\<in> adjoin G H a", "interpret subgroup H G"], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup H G", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<notin> H \\<Longrightarrow> a \\<in> adjoin G H a", "from assms"], ["proof (chain)\npicking this:\n  subgroup H G\n  a \\<in> carrier G", "have \"subgroup_indicator G H a > 0\""], ["proof (prove)\nusing this:\n  subgroup H G\n  a \\<in> carrier G\n\ngoal (1 subgoal):\n 1. 0 < subgroup_indicator G H a", "by (intro subgroup_indicator_pos) auto"], ["proof (state)\nthis:\n  0 < subgroup_indicator G H a\n\ngoal (1 subgoal):\n 1. a \\<notin> H \\<Longrightarrow> a \\<in> adjoin G H a", "moreover"], ["proof (state)\nthis:\n  0 < subgroup_indicator G H a\n\ngoal (1 subgoal):\n 1. a \\<notin> H \\<Longrightarrow> a \\<in> adjoin G H a", "from False and assms and pow_subgroup_indicator[OF assms]"], ["proof (chain)\npicking this:\n  a \\<notin> H\n  subgroup H G\n  a \\<in> carrier G\n  a [^] subgroup_indicator G H a \\<in> H", "have \"subgroup_indicator G H a \\<noteq> 1\""], ["proof (prove)\nusing this:\n  a \\<notin> H\n  subgroup H G\n  a \\<in> carrier G\n  a [^] subgroup_indicator G H a \\<in> H\n\ngoal (1 subgoal):\n 1. subgroup_indicator G H a \\<noteq> 1", "by (intro notI) auto"], ["proof (state)\nthis:\n  subgroup_indicator G H a \\<noteq> 1\n\ngoal (1 subgoal):\n 1. a \\<notin> H \\<Longrightarrow> a \\<in> adjoin G H a", "ultimately"], ["proof (chain)\npicking this:\n  0 < subgroup_indicator G H a\n  subgroup_indicator G H a \\<noteq> 1", "have \"subgroup_indicator G H a > 1\""], ["proof (prove)\nusing this:\n  0 < subgroup_indicator G H a\n  subgroup_indicator G H a \\<noteq> 1\n\ngoal (1 subgoal):\n 1. 1 < subgroup_indicator G H a", "by simp"], ["proof (state)\nthis:\n  1 < subgroup_indicator G H a\n\ngoal (1 subgoal):\n 1. a \\<notin> H \\<Longrightarrow> a \\<in> adjoin G H a", "with assms"], ["proof (chain)\npicking this:\n  subgroup H G\n  a \\<in> carrier G\n  1 < subgroup_indicator G H a", "show ?thesis"], ["proof (prove)\nusing this:\n  subgroup H G\n  a \\<in> carrier G\n  1 < subgroup_indicator G H a\n\ngoal (1 subgoal):\n 1. a \\<in> adjoin G H a", "by (auto simp: adjoin_def intro!: exI[of _ \\<one>] exI[of _ 1])"], ["proof (state)\nthis:\n  a \\<in> adjoin G H a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma adjoin_subset:\n  assumes \"subgroup H G\" and a: \"a \\<in> carrier G\"\n  shows   \"adjoin G H a \\<subseteq> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. adjoin G H a \\<subseteq> carrier G", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. adjoin G H a \\<subseteq> carrier G", "interpret subgroup H G"], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup H G", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. adjoin G H a \\<subseteq> carrier G", "from a"], ["proof (chain)\npicking this:\n  a \\<in> carrier G", "show ?thesis"], ["proof (prove)\nusing this:\n  a \\<in> carrier G\n\ngoal (1 subgoal):\n 1. adjoin G H a \\<subseteq> carrier G", "by (auto simp: adjoin_def)"], ["proof (state)\nthis:\n  adjoin G H a \\<subseteq> carrier G\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inj_on_adjoin:\n  assumes \"subgroup H G\" and a: \"a \\<in> carrier G\" \"a \\<notin> H\"\n  defines \"h \\<equiv> subgroup_indicator G H a\"\n  shows   \"inj_on (\\<lambda>(x, k). x \\<otimes> a [^] k) (H \\<times> {..<h})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>(x, k). x \\<otimes> a [^] k) (H \\<times> {..<h})", "proof (intro inj_onI, clarify, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa b aaa ba.\n       \\<lbrakk>aa \\<otimes> a [^] b = aaa \\<otimes> a [^] ba; aa \\<in> H;\n        b < h; aaa \\<in> H; ba < h\\<rbrakk>\n       \\<Longrightarrow> aa = aaa \\<and> b = ba", "case (1 x k y l)"], ["proof (state)\nthis:\n  x \\<otimes> a [^] k = y \\<otimes> a [^] l\n  x \\<in> H\n  k < h\n  y \\<in> H\n  l < h\n\ngoal (1 subgoal):\n 1. \\<And>aa b aaa ba.\n       \\<lbrakk>aa \\<otimes> a [^] b = aaa \\<otimes> a [^] ba; aa \\<in> H;\n        b < h; aaa \\<in> H; ba < h\\<rbrakk>\n       \\<Longrightarrow> aa = aaa \\<and> b = ba", "interpret H: subgroup H G"], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup H G", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa b aaa ba.\n       \\<lbrakk>aa \\<otimes> a [^] b = aaa \\<otimes> a [^] ba; aa \\<in> H;\n        b < h; aaa \\<in> H; ba < h\\<rbrakk>\n       \\<Longrightarrow> aa = aaa \\<and> b = ba", "have wf: \"x \\<in> carrier G\" \"y \\<in> carrier G\" \"a [^] k \\<in> carrier G\" \"a [^] l \\<in> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> carrier G &&& y \\<in> carrier G) &&&\n    a [^] k \\<in> carrier G &&& a [^] l \\<in> carrier G", "using 1 a"], ["proof (prove)\nusing this:\n  x \\<otimes> a [^] k = y \\<otimes> a [^] l\n  x \\<in> H\n  k < h\n  y \\<in> H\n  l < h\n  a \\<in> carrier G\n  a \\<notin> H\n\ngoal (1 subgoal):\n 1. (x \\<in> carrier G &&& y \\<in> carrier G) &&&\n    a [^] k \\<in> carrier G &&& a [^] l \\<in> carrier G", "by auto"], ["proof (state)\nthis:\n  x \\<in> carrier G\n  y \\<in> carrier G\n  a [^] k \\<in> carrier G\n  a [^] l \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>aa b aaa ba.\n       \\<lbrakk>aa \\<otimes> a [^] b = aaa \\<otimes> a [^] ba; aa \\<in> H;\n        b < h; aaa \\<in> H; ba < h\\<rbrakk>\n       \\<Longrightarrow> aa = aaa \\<and> b = ba", "have \"x \\<otimes> inv y = (x \\<otimes> inv y) \\<otimes> (a [^] k \\<otimes> inv (a [^] k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes> inv y =\n    x \\<otimes> inv y \\<otimes> (a [^] k \\<otimes> inv (a [^] k))", "by (simp add: wf)"], ["proof (state)\nthis:\n  x \\<otimes> inv y =\n  x \\<otimes> inv y \\<otimes> (a [^] k \\<otimes> inv (a [^] k))\n\ngoal (1 subgoal):\n 1. \\<And>aa b aaa ba.\n       \\<lbrakk>aa \\<otimes> a [^] b = aaa \\<otimes> a [^] ba; aa \\<in> H;\n        b < h; aaa \\<in> H; ba < h\\<rbrakk>\n       \\<Longrightarrow> aa = aaa \\<and> b = ba", "also"], ["proof (state)\nthis:\n  x \\<otimes> inv y =\n  x \\<otimes> inv y \\<otimes> (a [^] k \\<otimes> inv (a [^] k))\n\ngoal (1 subgoal):\n 1. \\<And>aa b aaa ba.\n       \\<lbrakk>aa \\<otimes> a [^] b = aaa \\<otimes> a [^] ba; aa \\<in> H;\n        b < h; aaa \\<in> H; ba < h\\<rbrakk>\n       \\<Longrightarrow> aa = aaa \\<and> b = ba", "have \"\\<dots> = x \\<otimes> a [^] k \\<otimes> inv y \\<otimes> inv (a [^] k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes> inv y \\<otimes> (a [^] k \\<otimes> inv (a [^] k)) =\n    x \\<otimes> a [^] k \\<otimes> inv y \\<otimes> inv (a [^] k)", "by (simp only: m_ac wf inv_closed m_closed)"], ["proof (state)\nthis:\n  x \\<otimes> inv y \\<otimes> (a [^] k \\<otimes> inv (a [^] k)) =\n  x \\<otimes> a [^] k \\<otimes> inv y \\<otimes> inv (a [^] k)\n\ngoal (1 subgoal):\n 1. \\<And>aa b aaa ba.\n       \\<lbrakk>aa \\<otimes> a [^] b = aaa \\<otimes> a [^] ba; aa \\<in> H;\n        b < h; aaa \\<in> H; ba < h\\<rbrakk>\n       \\<Longrightarrow> aa = aaa \\<and> b = ba", "also"], ["proof (state)\nthis:\n  x \\<otimes> inv y \\<otimes> (a [^] k \\<otimes> inv (a [^] k)) =\n  x \\<otimes> a [^] k \\<otimes> inv y \\<otimes> inv (a [^] k)\n\ngoal (1 subgoal):\n 1. \\<And>aa b aaa ba.\n       \\<lbrakk>aa \\<otimes> a [^] b = aaa \\<otimes> a [^] ba; aa \\<in> H;\n        b < h; aaa \\<in> H; ba < h\\<rbrakk>\n       \\<Longrightarrow> aa = aaa \\<and> b = ba", "from a"], ["proof (chain)\npicking this:\n  a \\<in> carrier G\n  a \\<notin> H", "have \"\\<dots> = y \\<otimes> a [^] l \\<otimes> inv y \\<otimes> inv (a [^] k)\""], ["proof (prove)\nusing this:\n  a \\<in> carrier G\n  a \\<notin> H\n\ngoal (1 subgoal):\n 1. x \\<otimes> a [^] k \\<otimes> inv y \\<otimes> inv (a [^] k) =\n    y \\<otimes> a [^] l \\<otimes> inv y \\<otimes> inv (a [^] k)", "by (subst 1) (simp_all)"], ["proof (state)\nthis:\n  x \\<otimes> a [^] k \\<otimes> inv y \\<otimes> inv (a [^] k) =\n  y \\<otimes> a [^] l \\<otimes> inv y \\<otimes> inv (a [^] k)\n\ngoal (1 subgoal):\n 1. \\<And>aa b aaa ba.\n       \\<lbrakk>aa \\<otimes> a [^] b = aaa \\<otimes> a [^] ba; aa \\<in> H;\n        b < h; aaa \\<in> H; ba < h\\<rbrakk>\n       \\<Longrightarrow> aa = aaa \\<and> b = ba", "also"], ["proof (state)\nthis:\n  x \\<otimes> a [^] k \\<otimes> inv y \\<otimes> inv (a [^] k) =\n  y \\<otimes> a [^] l \\<otimes> inv y \\<otimes> inv (a [^] k)\n\ngoal (1 subgoal):\n 1. \\<And>aa b aaa ba.\n       \\<lbrakk>aa \\<otimes> a [^] b = aaa \\<otimes> a [^] ba; aa \\<in> H;\n        b < h; aaa \\<in> H; ba < h\\<rbrakk>\n       \\<Longrightarrow> aa = aaa \\<and> b = ba", "have \"\\<dots> = y \\<otimes> inv y \\<otimes> (a [^] l \\<otimes> inv (a [^] k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<otimes> a [^] l \\<otimes> inv y \\<otimes> inv (a [^] k) =\n    y \\<otimes> inv y \\<otimes> (a [^] l \\<otimes> inv (a [^] k))", "by (simp only: m_ac wf inv_closed m_closed)"], ["proof (state)\nthis:\n  y \\<otimes> a [^] l \\<otimes> inv y \\<otimes> inv (a [^] k) =\n  y \\<otimes> inv y \\<otimes> (a [^] l \\<otimes> inv (a [^] k))\n\ngoal (1 subgoal):\n 1. \\<And>aa b aaa ba.\n       \\<lbrakk>aa \\<otimes> a [^] b = aaa \\<otimes> a [^] ba; aa \\<in> H;\n        b < h; aaa \\<in> H; ba < h\\<rbrakk>\n       \\<Longrightarrow> aa = aaa \\<and> b = ba", "also"], ["proof (state)\nthis:\n  y \\<otimes> a [^] l \\<otimes> inv y \\<otimes> inv (a [^] k) =\n  y \\<otimes> inv y \\<otimes> (a [^] l \\<otimes> inv (a [^] k))\n\ngoal (1 subgoal):\n 1. \\<And>aa b aaa ba.\n       \\<lbrakk>aa \\<otimes> a [^] b = aaa \\<otimes> a [^] ba; aa \\<in> H;\n        b < h; aaa \\<in> H; ba < h\\<rbrakk>\n       \\<Longrightarrow> aa = aaa \\<and> b = ba", "from wf"], ["proof (chain)\npicking this:\n  x \\<in> carrier G\n  y \\<in> carrier G\n  a [^] k \\<in> carrier G\n  a [^] l \\<in> carrier G", "have \"\\<dots> = a [^] int l \\<otimes> inv (a [^] int k)\""], ["proof (prove)\nusing this:\n  x \\<in> carrier G\n  y \\<in> carrier G\n  a [^] k \\<in> carrier G\n  a [^] l \\<in> carrier G\n\ngoal (1 subgoal):\n 1. y \\<otimes> inv y \\<otimes> (a [^] l \\<otimes> inv (a [^] k)) =\n    a [^] int l \\<otimes> inv (a [^] int k)", "by (simp add: int_pow_int)"], ["proof (state)\nthis:\n  y \\<otimes> inv y \\<otimes> (a [^] l \\<otimes> inv (a [^] k)) =\n  a [^] int l \\<otimes> inv (a [^] int k)\n\ngoal (1 subgoal):\n 1. \\<And>aa b aaa ba.\n       \\<lbrakk>aa \\<otimes> a [^] b = aaa \\<otimes> a [^] ba; aa \\<in> H;\n        b < h; aaa \\<in> H; ba < h\\<rbrakk>\n       \\<Longrightarrow> aa = aaa \\<and> b = ba", "also"], ["proof (state)\nthis:\n  y \\<otimes> inv y \\<otimes> (a [^] l \\<otimes> inv (a [^] k)) =\n  a [^] int l \\<otimes> inv (a [^] int k)\n\ngoal (1 subgoal):\n 1. \\<And>aa b aaa ba.\n       \\<lbrakk>aa \\<otimes> a [^] b = aaa \\<otimes> a [^] ba; aa \\<in> H;\n        b < h; aaa \\<in> H; ba < h\\<rbrakk>\n       \\<Longrightarrow> aa = aaa \\<and> b = ba", "have \"\\<dots> = a [^] (int l - int k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a [^] int l \\<otimes> inv (a [^] int k) = a [^] (int l - int k)", "by (rule int_pow_diff [symmetric]) fact+"], ["proof (state)\nthis:\n  a [^] int l \\<otimes> inv (a [^] int k) = a [^] (int l - int k)\n\ngoal (1 subgoal):\n 1. \\<And>aa b aaa ba.\n       \\<lbrakk>aa \\<otimes> a [^] b = aaa \\<otimes> a [^] ba; aa \\<in> H;\n        b < h; aaa \\<in> H; ba < h\\<rbrakk>\n       \\<Longrightarrow> aa = aaa \\<and> b = ba", "finally"], ["proof (chain)\npicking this:\n  x \\<otimes> inv y = a [^] (int l - int k)", "have *: \"x \\<otimes> inv y = a [^] (int l - int k)\""], ["proof (prove)\nusing this:\n  x \\<otimes> inv y = a [^] (int l - int k)\n\ngoal (1 subgoal):\n 1. x \\<otimes> inv y = a [^] (int l - int k)", "."], ["proof (state)\nthis:\n  x \\<otimes> inv y = a [^] (int l - int k)\n\ngoal (1 subgoal):\n 1. \\<And>aa b aaa ba.\n       \\<lbrakk>aa \\<otimes> a [^] b = aaa \\<otimes> a [^] ba; aa \\<in> H;\n        b < h; aaa \\<in> H; ba < h\\<rbrakk>\n       \\<Longrightarrow> aa = aaa \\<and> b = ba", "have **: \"a [^] (nat \\<bar>int l - int k\\<bar>) \\<in> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a [^] nat \\<bar>int l - int k\\<bar> \\<in> H", "proof (cases \"k \\<le> l\")"], ["proof (state)\ngoal (2 subgoals):\n 1. k \\<le> l \\<Longrightarrow> a [^] nat \\<bar>int l - int k\\<bar> \\<in> H\n 2. \\<not> k \\<le> l \\<Longrightarrow>\n    a [^] nat \\<bar>int l - int k\\<bar> \\<in> H", "case True"], ["proof (state)\nthis:\n  k \\<le> l\n\ngoal (2 subgoals):\n 1. k \\<le> l \\<Longrightarrow> a [^] nat \\<bar>int l - int k\\<bar> \\<in> H\n 2. \\<not> k \\<le> l \\<Longrightarrow>\n    a [^] nat \\<bar>int l - int k\\<bar> \\<in> H", "from 1"], ["proof (chain)\npicking this:\n  x \\<otimes> a [^] k = y \\<otimes> a [^] l\n  x \\<in> H\n  k < h\n  y \\<in> H\n  l < h", "have \"a [^] (int l - int k) \\<in> H\""], ["proof (prove)\nusing this:\n  x \\<otimes> a [^] k = y \\<otimes> a [^] l\n  x \\<in> H\n  k < h\n  y \\<in> H\n  l < h\n\ngoal (1 subgoal):\n 1. a [^] (int l - int k) \\<in> H", "by (subst * [symmetric]) auto"], ["proof (state)\nthis:\n  a [^] (int l - int k) \\<in> H\n\ngoal (2 subgoals):\n 1. k \\<le> l \\<Longrightarrow> a [^] nat \\<bar>int l - int k\\<bar> \\<in> H\n 2. \\<not> k \\<le> l \\<Longrightarrow>\n    a [^] nat \\<bar>int l - int k\\<bar> \\<in> H", "also"], ["proof (state)\nthis:\n  a [^] (int l - int k) \\<in> H\n\ngoal (2 subgoals):\n 1. k \\<le> l \\<Longrightarrow> a [^] nat \\<bar>int l - int k\\<bar> \\<in> H\n 2. \\<not> k \\<le> l \\<Longrightarrow>\n    a [^] nat \\<bar>int l - int k\\<bar> \\<in> H", "have \"a [^] (int l - int k) = a [^] (nat \\<bar>int l - int k\\<bar>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a [^] (int l - int k) = a [^] nat \\<bar>int l - int k\\<bar>", "using True"], ["proof (prove)\nusing this:\n  k \\<le> l\n\ngoal (1 subgoal):\n 1. a [^] (int l - int k) = a [^] nat \\<bar>int l - int k\\<bar>", "by (simp add: nat_diff_distrib int_pow_int [symmetric] of_nat_diff)"], ["proof (state)\nthis:\n  a [^] (int l - int k) = a [^] nat \\<bar>int l - int k\\<bar>\n\ngoal (2 subgoals):\n 1. k \\<le> l \\<Longrightarrow> a [^] nat \\<bar>int l - int k\\<bar> \\<in> H\n 2. \\<not> k \\<le> l \\<Longrightarrow>\n    a [^] nat \\<bar>int l - int k\\<bar> \\<in> H", "finally"], ["proof (chain)\npicking this:\n  a [^] nat \\<bar>int l - int k\\<bar> \\<in> H", "show ?thesis"], ["proof (prove)\nusing this:\n  a [^] nat \\<bar>int l - int k\\<bar> \\<in> H\n\ngoal (1 subgoal):\n 1. a [^] nat \\<bar>int l - int k\\<bar> \\<in> H", "."], ["proof (state)\nthis:\n  a [^] nat \\<bar>int l - int k\\<bar> \\<in> H\n\ngoal (1 subgoal):\n 1. \\<not> k \\<le> l \\<Longrightarrow>\n    a [^] nat \\<bar>int l - int k\\<bar> \\<in> H", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> k \\<le> l \\<Longrightarrow>\n    a [^] nat \\<bar>int l - int k\\<bar> \\<in> H", "case False"], ["proof (state)\nthis:\n  \\<not> k \\<le> l\n\ngoal (1 subgoal):\n 1. \\<not> k \\<le> l \\<Longrightarrow>\n    a [^] nat \\<bar>int l - int k\\<bar> \\<in> H", "from 1"], ["proof (chain)\npicking this:\n  x \\<otimes> a [^] k = y \\<otimes> a [^] l\n  x \\<in> H\n  k < h\n  y \\<in> H\n  l < h", "have \"inv (a [^] (int l - int k)) \\<in> H\""], ["proof (prove)\nusing this:\n  x \\<otimes> a [^] k = y \\<otimes> a [^] l\n  x \\<in> H\n  k < h\n  y \\<in> H\n  l < h\n\ngoal (1 subgoal):\n 1. inv (a [^] (int l - int k)) \\<in> H", "by (subst * [symmetric]) auto"], ["proof (state)\nthis:\n  inv (a [^] (int l - int k)) \\<in> H\n\ngoal (1 subgoal):\n 1. \\<not> k \\<le> l \\<Longrightarrow>\n    a [^] nat \\<bar>int l - int k\\<bar> \\<in> H", "also"], ["proof (state)\nthis:\n  inv (a [^] (int l - int k)) \\<in> H\n\ngoal (1 subgoal):\n 1. \\<not> k \\<le> l \\<Longrightarrow>\n    a [^] nat \\<bar>int l - int k\\<bar> \\<in> H", "have \"inv (a [^] (int l - int k)) = a [^] (nat \\<bar>int l - int k\\<bar>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv (a [^] (int l - int k)) = a [^] nat \\<bar>int l - int k\\<bar>", "using False a"], ["proof (prove)\nusing this:\n  \\<not> k \\<le> l\n  a \\<in> carrier G\n  a \\<notin> H\n\ngoal (1 subgoal):\n 1. inv (a [^] (int l - int k)) = a [^] nat \\<bar>int l - int k\\<bar>", "by (simp add: int_pow_neg [symmetric] nat_diff_distrib int_pow_int [symmetric] of_nat_diff)"], ["proof (state)\nthis:\n  inv (a [^] (int l - int k)) = a [^] nat \\<bar>int l - int k\\<bar>\n\ngoal (1 subgoal):\n 1. \\<not> k \\<le> l \\<Longrightarrow>\n    a [^] nat \\<bar>int l - int k\\<bar> \\<in> H", "finally"], ["proof (chain)\npicking this:\n  a [^] nat \\<bar>int l - int k\\<bar> \\<in> H", "show ?thesis"], ["proof (prove)\nusing this:\n  a [^] nat \\<bar>int l - int k\\<bar> \\<in> H\n\ngoal (1 subgoal):\n 1. a [^] nat \\<bar>int l - int k\\<bar> \\<in> H", "."], ["proof (state)\nthis:\n  a [^] nat \\<bar>int l - int k\\<bar> \\<in> H\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a [^] nat \\<bar>int l - int k\\<bar> \\<in> H\n\ngoal (1 subgoal):\n 1. \\<And>aa b aaa ba.\n       \\<lbrakk>aa \\<otimes> a [^] b = aaa \\<otimes> a [^] ba; aa \\<in> H;\n        b < h; aaa \\<in> H; ba < h\\<rbrakk>\n       \\<Longrightarrow> aa = aaa \\<and> b = ba", "have \"k = l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k = l", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. k \\<noteq> l \\<Longrightarrow> False", "assume \"k \\<noteq> l\""], ["proof (state)\nthis:\n  k \\<noteq> l\n\ngoal (1 subgoal):\n 1. k \\<noteq> l \\<Longrightarrow> False", "with a and **"], ["proof (chain)\npicking this:\n  a \\<in> carrier G\n  a \\<notin> H\n  a [^] nat \\<bar>int l - int k\\<bar> \\<in> H\n  k \\<noteq> l", "have \"h \\<le> nat \\<bar>int l - int k\\<bar>\""], ["proof (prove)\nusing this:\n  a \\<in> carrier G\n  a \\<notin> H\n  a [^] nat \\<bar>int l - int k\\<bar> \\<in> H\n  k \\<noteq> l\n\ngoal (1 subgoal):\n 1. h \\<le> nat \\<bar>int l - int k\\<bar>", "unfolding h_def"], ["proof (prove)\nusing this:\n  a \\<in> carrier G\n  a \\<notin> H\n  a [^] nat \\<bar>int l - int k\\<bar> \\<in> H\n  k \\<noteq> l\n\ngoal (1 subgoal):\n 1. subgroup_indicator G H a \\<le> nat \\<bar>int l - int k\\<bar>", "by (intro subgroup_indicator_le) auto"], ["proof (state)\nthis:\n  h \\<le> nat \\<bar>int l - int k\\<bar>\n\ngoal (1 subgoal):\n 1. k \\<noteq> l \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  h \\<le> nat \\<bar>int l - int k\\<bar>\n\ngoal (1 subgoal):\n 1. k \\<noteq> l \\<Longrightarrow> False", "have \"\\<dots> < h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat \\<bar>int l - int k\\<bar> < h", "using \\<open>l < h\\<close> and \\<open>k < h\\<close>"], ["proof (prove)\nusing this:\n  l < h\n  k < h\n\ngoal (1 subgoal):\n 1. nat \\<bar>int l - int k\\<bar> < h", "by linarith"], ["proof (state)\nthis:\n  nat \\<bar>int l - int k\\<bar> < h\n\ngoal (1 subgoal):\n 1. k \\<noteq> l \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  h < h", "show False"], ["proof (prove)\nusing this:\n  h < h\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  k = l\n\ngoal (1 subgoal):\n 1. \\<And>aa b aaa ba.\n       \\<lbrakk>aa \\<otimes> a [^] b = aaa \\<otimes> a [^] ba; aa \\<in> H;\n        b < h; aaa \\<in> H; ba < h\\<rbrakk>\n       \\<Longrightarrow> aa = aaa \\<and> b = ba", "with 1 and a"], ["proof (chain)\npicking this:\n  x \\<otimes> a [^] k = y \\<otimes> a [^] l\n  x \\<in> H\n  k < h\n  y \\<in> H\n  l < h\n  a \\<in> carrier G\n  a \\<notin> H\n  k = l", "show ?case"], ["proof (prove)\nusing this:\n  x \\<otimes> a [^] k = y \\<otimes> a [^] l\n  x \\<in> H\n  k < h\n  y \\<in> H\n  l < h\n  a \\<in> carrier G\n  a \\<notin> H\n  k = l\n\ngoal (1 subgoal):\n 1. x = y \\<and> k = l", "by simp"], ["proof (state)\nthis:\n  x = y \\<and> k = l\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma card_adjoin:\n  assumes \"subgroup H G\" and a: \"a \\<in> carrier G\" \"a \\<notin> H\"\n  shows   \"card (adjoin G H a) = card H * subgroup_indicator G H a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (adjoin G H a) = card H * subgroup_indicator G H a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card (adjoin G H a) = card H * subgroup_indicator G H a", "interpret H: subgroup H G"], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup H G", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. card (adjoin G H a) = card H * subgroup_indicator G H a", "define h where \"h = subgroup_indicator G H a\""], ["proof (state)\nthis:\n  h = subgroup_indicator G H a\n\ngoal (1 subgoal):\n 1. card (adjoin G H a) = card H * subgroup_indicator G H a", "have \"adjoin G H a = (\\<lambda>(x,k). x \\<otimes> a [^] k) ` (H \\<times> {..<h})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. adjoin G H a =\n    (\\<lambda>(x, k). x \\<otimes> a [^] k) ` (H \\<times> {..<h})", "by (auto simp: adjoin_def h_def)"], ["proof (state)\nthis:\n  adjoin G H a =\n  (\\<lambda>(x, k). x \\<otimes> a [^] k) ` (H \\<times> {..<h})\n\ngoal (1 subgoal):\n 1. card (adjoin G H a) = card H * subgroup_indicator G H a", "also"], ["proof (state)\nthis:\n  adjoin G H a =\n  (\\<lambda>(x, k). x \\<otimes> a [^] k) ` (H \\<times> {..<h})\n\ngoal (1 subgoal):\n 1. card (adjoin G H a) = card H * subgroup_indicator G H a", "have \"card \\<dots> = card (H \\<times> {..<h})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card ((\\<lambda>(x, k). x \\<otimes> a [^] k) ` (H \\<times> {..<h})) =\n    card (H \\<times> {..<h})", "unfolding h_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     ((\\<lambda>(x, k). x \\<otimes> a [^] k) `\n      (H \\<times> {..<subgroup_indicator G H a})) =\n    card (H \\<times> {..<subgroup_indicator G H a})", "by (intro card_image inj_on_adjoin assms)"], ["proof (state)\nthis:\n  card ((\\<lambda>(x, k). x \\<otimes> a [^] k) ` (H \\<times> {..<h})) =\n  card (H \\<times> {..<h})\n\ngoal (1 subgoal):\n 1. card (adjoin G H a) = card H * subgroup_indicator G H a", "finally"], ["proof (chain)\npicking this:\n  card (adjoin G H a) = card (H \\<times> {..<h})", "show ?thesis"], ["proof (prove)\nusing this:\n  card (adjoin G H a) = card (H \\<times> {..<h})\n\ngoal (1 subgoal):\n 1. card (adjoin G H a) = card H * subgroup_indicator G H a", "by (simp add: h_def card_cartesian_product)"], ["proof (state)\nthis:\n  card (adjoin G H a) = card H * subgroup_indicator G H a\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "locale finite_comm_group_adjoin = finite_comm_group + subgroup H\n  for H +\n  fixes a :: 'a\n  assumes a_in_carrier [simp]: \"a \\<in> carrier G\"\n  assumes a_notin_subgroup: \"a \\<notin> H\"\nbegin"], ["", "definition unadjoin :: \"'a \\<Rightarrow> 'a \\<times> nat\"  where\n  \"unadjoin x = \n     (THE z. z \\<in> H \\<times> {..<subgroup_indicator G H a} \\<and> x = fst z \\<otimes>\\<^bsub>G\\<^esub> a [^]\\<^bsub>G\\<^esub> snd z)\""], ["", "lemma adjoin_unique:\n  assumes \"x \\<in> adjoin G H a\"\n  defines \"h \\<equiv> subgroup_indicator G H a\"\n  shows   \"\\<exists>!z. z \\<in> H \\<times> {..<subgroup_indicator G H a} \\<and> x = fst z \\<otimes>\\<^bsub>G\\<^esub> a [^]\\<^bsub>G\\<^esub> snd z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!z.\n       z \\<in> H \\<times> {..<subgroup_indicator G H a} \\<and>\n       x = fst z \\<otimes> a [^] snd z", "proof (rule ex_ex1I, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>z.\n       z \\<in> H \\<times> {..<subgroup_indicator G H a} \\<and>\n       x = fst z \\<otimes> a [^] snd z\n 2. \\<And>z y.\n       \\<lbrakk>z \\<in> H \\<times> {..<subgroup_indicator G H a} \\<and>\n                x = fst z \\<otimes> a [^] snd z;\n        y \\<in> H \\<times> {..<subgroup_indicator G H a} \\<and>\n        x = fst y \\<otimes> a [^] snd y\\<rbrakk>\n       \\<Longrightarrow> z = y", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<exists>z.\n       z \\<in> H \\<times> {..<subgroup_indicator G H a} \\<and>\n       x = fst z \\<otimes> a [^] snd z\n 2. \\<And>z y.\n       \\<lbrakk>z \\<in> H \\<times> {..<subgroup_indicator G H a} \\<and>\n                x = fst z \\<otimes> a [^] snd z;\n        y \\<in> H \\<times> {..<subgroup_indicator G H a} \\<and>\n        x = fst y \\<otimes> a [^] snd y\\<rbrakk>\n       \\<Longrightarrow> z = y", "from assms"], ["proof (chain)\npicking this:\n  x \\<in> adjoin G H a\n  h \\<equiv> subgroup_indicator G H a", "show ?case"], ["proof (prove)\nusing this:\n  x \\<in> adjoin G H a\n  h \\<equiv> subgroup_indicator G H a\n\ngoal (1 subgoal):\n 1. \\<exists>z.\n       z \\<in> H \\<times> {..<subgroup_indicator G H a} \\<and>\n       x = fst z \\<otimes> a [^] snd z", "by (auto simp: adjoin_def)"], ["proof (state)\nthis:\n  \\<exists>z.\n     z \\<in> H \\<times> {..<subgroup_indicator G H a} \\<and>\n     x = fst z \\<otimes> a [^] snd z\n\ngoal (1 subgoal):\n 1. \\<And>z y.\n       \\<lbrakk>z \\<in> H \\<times> {..<subgroup_indicator G H a} \\<and>\n                x = fst z \\<otimes> a [^] snd z;\n        y \\<in> H \\<times> {..<subgroup_indicator G H a} \\<and>\n        x = fst y \\<otimes> a [^] snd y\\<rbrakk>\n       \\<Longrightarrow> z = y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z y.\n       \\<lbrakk>z \\<in> H \\<times> {..<subgroup_indicator G H a} \\<and>\n                x = fst z \\<otimes> a [^] snd z;\n        y \\<in> H \\<times> {..<subgroup_indicator G H a} \\<and>\n        x = fst y \\<otimes> a [^] snd y\\<rbrakk>\n       \\<Longrightarrow> z = y", "case (2 z1 z2)"], ["proof (state)\nthis:\n  z1 \\<in> H \\<times> {..<subgroup_indicator G H a} \\<and>\n  x = fst z1 \\<otimes> a [^] snd z1\n  z2 \\<in> H \\<times> {..<subgroup_indicator G H a} \\<and>\n  x = fst z2 \\<otimes> a [^] snd z2\n\ngoal (1 subgoal):\n 1. \\<And>z y.\n       \\<lbrakk>z \\<in> H \\<times> {..<subgroup_indicator G H a} \\<and>\n                x = fst z \\<otimes> a [^] snd z;\n        y \\<in> H \\<times> {..<subgroup_indicator G H a} \\<and>\n        x = fst y \\<otimes> a [^] snd y\\<rbrakk>\n       \\<Longrightarrow> z = y", "have \"subgroup H G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup H G", ".."], ["proof (state)\nthis:\n  subgroup H G\n\ngoal (1 subgoal):\n 1. \\<And>z y.\n       \\<lbrakk>z \\<in> H \\<times> {..<subgroup_indicator G H a} \\<and>\n                x = fst z \\<otimes> a [^] snd z;\n        y \\<in> H \\<times> {..<subgroup_indicator G H a} \\<and>\n        x = fst y \\<otimes> a [^] snd y\\<rbrakk>\n       \\<Longrightarrow> z = y", "from inj_on_adjoin[OF this a_in_carrier a_notin_subgroup]"], ["proof (chain)\npicking this:\n  inj_on (\\<lambda>(x, k). x \\<otimes> a [^] k)\n   (H \\<times> {..<subgroup_indicator G H a})", "show ?case"], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>(x, k). x \\<otimes> a [^] k)\n   (H \\<times> {..<subgroup_indicator G H a})\n\ngoal (1 subgoal):\n 1. z1 = z2", "by (rule inj_onD) (use 2 in auto)"], ["proof (state)\nthis:\n  z1 = z2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma unadjoin_correct:\n  assumes \"x \\<in> adjoin G H a\"\n  shows   \"fst (unadjoin x) \\<in> H\" and \"snd (unadjoin x) < subgroup_indicator G H a\"\n          \"fst (unadjoin x) \\<otimes> a [^] snd (unadjoin x) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (unadjoin x) \\<in> H &&&\n    snd (unadjoin x) < subgroup_indicator G H a &&&\n    fst (unadjoin x) \\<otimes> a [^] snd (unadjoin x) = x", "using theI'[OF adjoin_unique[OF assms], folded unadjoin_def]"], ["proof (prove)\nusing this:\n  unadjoin x \\<in> H \\<times> {..<subgroup_indicator G H a} \\<and>\n  x = fst (unadjoin x) \\<otimes> a [^] snd (unadjoin x)\n\ngoal (1 subgoal):\n 1. fst (unadjoin x) \\<in> H &&&\n    snd (unadjoin x) < subgroup_indicator G H a &&&\n    fst (unadjoin x) \\<otimes> a [^] snd (unadjoin x) = x", "by auto"], ["", "lemma unadjoin_unique:\n  assumes \"y \\<in> H\" \"h < subgroup_indicator G H a\"\n  shows   \"unadjoin (y \\<otimes> a [^] h) = (y, h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unadjoin (y \\<otimes> a [^] h) = (y, h)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. unadjoin (y \\<otimes> a [^] h) = (y, h)", "from assms"], ["proof (chain)\npicking this:\n  y \\<in> H\n  h < subgroup_indicator G H a", "have \"y \\<otimes> a [^] h \\<in> adjoin G H a\""], ["proof (prove)\nusing this:\n  y \\<in> H\n  h < subgroup_indicator G H a\n\ngoal (1 subgoal):\n 1. y \\<otimes> a [^] h \\<in> adjoin G H a", "by (auto simp: adjoin_def)"], ["proof (state)\nthis:\n  y \\<otimes> a [^] h \\<in> adjoin G H a\n\ngoal (1 subgoal):\n 1. unadjoin (y \\<otimes> a [^] h) = (y, h)", "note * = theI'[OF adjoin_unique[OF this], folded unadjoin_def]"], ["proof (state)\nthis:\n  unadjoin (y \\<otimes> a [^] h)\n  \\<in> H \\<times> {..<subgroup_indicator G H a} \\<and>\n  y \\<otimes> a [^] h =\n  fst (unadjoin (y \\<otimes> a [^] h)) \\<otimes>\n  a [^] snd (unadjoin (y \\<otimes> a [^] h))\n\ngoal (1 subgoal):\n 1. unadjoin (y \\<otimes> a [^] h) = (y, h)", "from inj_on_adjoin[OF is_subgroup a_in_carrier a_notin_subgroup]"], ["proof (chain)\npicking this:\n  inj_on (\\<lambda>(x, k). x \\<otimes> a [^] k)\n   (H \\<times> {..<subgroup_indicator G H a})", "show ?thesis"], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>(x, k). x \\<otimes> a [^] k)\n   (H \\<times> {..<subgroup_indicator G H a})\n\ngoal (1 subgoal):\n 1. unadjoin (y \\<otimes> a [^] h) = (y, h)", "by (rule inj_onD) (insert * assms, auto)"], ["proof (state)\nthis:\n  unadjoin (y \\<otimes> a [^] h) = (y, h)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma unadjoin_unique':\n  assumes \"y \\<in> H\" \"h < subgroup_indicator G H a\" \"x = y \\<otimes> a [^] h\"\n  shows   \"unadjoin x = (y, h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unadjoin x = (y, h)", "using unadjoin_unique[OF assms(1,2)] assms(3)"], ["proof (prove)\nusing this:\n  unadjoin (y \\<otimes> a [^] h) = (y, h)\n  x = y \\<otimes> a [^] h\n\ngoal (1 subgoal):\n 1. unadjoin x = (y, h)", "by simp"], ["", "lemma unadjoin_1 [simp]: \"unadjoin \\<one> = (\\<one>, 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unadjoin \\<one> = (\\<one>, 0)", "by (intro unadjoin_unique') (auto intro!: subgroup_indicator_pos is_subgroup)"], ["", "lemma unadjoin_in_base [simp]: \"x \\<in> H \\<Longrightarrow> unadjoin x = (x, 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> H \\<Longrightarrow> unadjoin x = (x, 0)", "by (intro unadjoin_unique') (auto intro!: subgroup_indicator_pos is_subgroup)"], ["", "lemma unadjoin_adjoined [simp]: \"unadjoin a = (\\<one>, 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unadjoin a = (\\<one>, 1)", "proof (rule unadjoin_unique')"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<one> \\<in> H\n 2. 1 < subgroup_indicator G H a\n 3. a = \\<one> \\<otimes> a [^] 1", "have \"subgroup_indicator G H a \\<noteq> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup_indicator G H a \\<noteq> 1", "using is_subgroup a_notin_subgroup"], ["proof (prove)\nusing this:\n  subgroup H G\n  a \\<notin> H\n\ngoal (1 subgoal):\n 1. subgroup_indicator G H a \\<noteq> 1", "using pow_subgroup_indicator[of H a]"], ["proof (prove)\nusing this:\n  subgroup H G\n  a \\<notin> H\n  \\<lbrakk>subgroup H G; a \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> a [^] subgroup_indicator G H a \\<in> H\n\ngoal (1 subgoal):\n 1. subgroup_indicator G H a \\<noteq> 1", "by auto"], ["proof (state)\nthis:\n  subgroup_indicator G H a \\<noteq> 1\n\ngoal (3 subgoals):\n 1. \\<one> \\<in> H\n 2. 1 < subgroup_indicator G H a\n 3. a = \\<one> \\<otimes> a [^] 1", "with subgroup_indicator_pos [OF is_subgroup a_in_carrier]"], ["proof (chain)\npicking this:\n  0 < subgroup_indicator G H a\n  subgroup_indicator G H a \\<noteq> 1", "show \"subgroup_indicator G H a > 1\""], ["proof (prove)\nusing this:\n  0 < subgroup_indicator G H a\n  subgroup_indicator G H a \\<noteq> 1\n\ngoal (1 subgoal):\n 1. 1 < subgroup_indicator G H a", "by simp"], ["proof (state)\nthis:\n  1 < subgroup_indicator G H a\n\ngoal (2 subgoals):\n 1. \\<one> \\<in> H\n 2. a = \\<one> \\<otimes> a [^] 1", "qed auto"], ["", "end"], ["", "subsection \\<open>Induction by adjoining elements\\<close>"], ["", "context finite_comm_group\nbegin"], ["", "lemma group_decompose_adjoin_aux:\n  assumes \"subgroup H G\"\n  shows   \"H = carrier G \\<or> \n           (\\<exists>H' a. H \\<subseteq> H' \\<and> subgroup H' G \\<and> a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H = carrier G \\<or>\n    (\\<exists>H' a.\n        H \\<subseteq> H' \\<and>\n        subgroup H' G \\<and>\n        a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. H = carrier G \\<or>\n    (\\<exists>H' a.\n        H \\<subseteq> H' \\<and>\n        subgroup H' G \\<and>\n        a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a)", "have ind: \"(\\<And>H. subgroup H G \\<Longrightarrow> H \\<noteq> carrier G \\<Longrightarrow> P (adjoin G H (SOME a. a \\<in> carrier G - H))\n                \\<Longrightarrow> P H) \\<Longrightarrow> (\\<And>H. subgroup H G \\<Longrightarrow> H = carrier G \\<Longrightarrow> P H) \\<Longrightarrow>\n                (\\<And>H. \\<not> subgroup H G \\<Longrightarrow> P H) \\<Longrightarrow> P a0\" for P a0"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>H.\n                \\<lbrakk>subgroup H G; H \\<noteq> carrier G;\n                 P (adjoin G H (SOME a. a \\<in> carrier G - H))\\<rbrakk>\n                \\<Longrightarrow> P H;\n     \\<And>H.\n        \\<lbrakk>subgroup H G; H = carrier G\\<rbrakk> \\<Longrightarrow> P H;\n     \\<And>H. \\<not> subgroup H G \\<Longrightarrow> P H\\<rbrakk>\n    \\<Longrightarrow> P a0", "proof (induction_schema, force, rule wf_bounded_set)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (b, a) \\<in> ?R2 \\<Longrightarrow>\n       finite (?ub27 a) \\<and>\n       ?ub27 b \\<subseteq> ?ub27 a \\<and>\n       ?f27 b \\<subseteq> ?ub27 a \\<and> ?f27 a \\<subset> ?f27 b\n 2. \\<And>Ha__.\n       \\<lbrakk>subgroup Ha__ G; Ha__ \\<noteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> (adjoin G Ha__ (SOME a. a \\<in> carrier G - Ha__),\n                          Ha__)\n                         \\<in> ?R2", "fix H"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (b, a) \\<in> ?R2 \\<Longrightarrow>\n       finite (?ub27 a) \\<and>\n       ?ub27 b \\<subseteq> ?ub27 a \\<and>\n       ?f27 b \\<subseteq> ?ub27 a \\<and> ?f27 a \\<subset> ?f27 b\n 2. \\<And>Ha__.\n       \\<lbrakk>subgroup Ha__ G; Ha__ \\<noteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> (adjoin G Ha__ (SOME a. a \\<in> carrier G - Ha__),\n                          Ha__)\n                         \\<in> ?R2", "assume H: \"subgroup H G\" \"H \\<noteq> carrier G\""], ["proof (state)\nthis:\n  subgroup H G\n  H \\<noteq> carrier G\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (b, a) \\<in> ?R2 \\<Longrightarrow>\n       finite (?ub27 a) \\<and>\n       ?ub27 b \\<subseteq> ?ub27 a \\<and>\n       ?f27 b \\<subseteq> ?ub27 a \\<and> ?f27 a \\<subset> ?f27 b\n 2. \\<And>Ha__.\n       \\<lbrakk>subgroup Ha__ G; Ha__ \\<noteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> (adjoin G Ha__ (SOME a. a \\<in> carrier G - Ha__),\n                          Ha__)\n                         \\<in> ?R2", "interpret subgroup H G"], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup H G", "by fact"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (b, a) \\<in> ?R2 \\<Longrightarrow>\n       finite (?ub27 a) \\<and>\n       ?ub27 b \\<subseteq> ?ub27 a \\<and>\n       ?f27 b \\<subseteq> ?ub27 a \\<and> ?f27 a \\<subset> ?f27 b\n 2. \\<And>Ha__.\n       \\<lbrakk>subgroup Ha__ G; Ha__ \\<noteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> (adjoin G Ha__ (SOME a. a \\<in> carrier G - Ha__),\n                          Ha__)\n                         \\<in> ?R2", "from H"], ["proof (chain)\npicking this:\n  subgroup H G\n  H \\<noteq> carrier G", "have H': \"H \\<subset> carrier G\""], ["proof (prove)\nusing this:\n  subgroup H G\n  H \\<noteq> carrier G\n\ngoal (1 subgoal):\n 1. H \\<subset> carrier G", "by auto"], ["proof (state)\nthis:\n  H \\<subset> carrier G\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (b, a) \\<in> ?R2 \\<Longrightarrow>\n       finite (?ub27 a) \\<and>\n       ?ub27 b \\<subseteq> ?ub27 a \\<and>\n       ?f27 b \\<subseteq> ?ub27 a \\<and> ?f27 a \\<subset> ?f27 b\n 2. \\<And>Ha__.\n       \\<lbrakk>subgroup Ha__ G; Ha__ \\<noteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> (adjoin G Ha__ (SOME a. a \\<in> carrier G - Ha__),\n                          Ha__)\n                         \\<in> ?R2", "define a where \"a = (SOME a. a \\<in> carrier G - H)\""], ["proof (state)\nthis:\n  a = (SOME a. a \\<in> carrier G - H)\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (b, a) \\<in> ?R2 \\<Longrightarrow>\n       finite (?ub27 a) \\<and>\n       ?ub27 b \\<subseteq> ?ub27 a \\<and>\n       ?f27 b \\<subseteq> ?ub27 a \\<and> ?f27 a \\<subset> ?f27 b\n 2. \\<And>Ha__.\n       \\<lbrakk>subgroup Ha__ G; Ha__ \\<noteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> (adjoin G Ha__ (SOME a. a \\<in> carrier G - Ha__),\n                          Ha__)\n                         \\<in> ?R2", "have a: \"a \\<in> carrier G - H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> carrier G - H", "unfolding a_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (SOME a. a \\<in> carrier G - H) \\<in> carrier G - H", "by (rule someI_ex) (insert H', auto)"], ["proof (state)\nthis:\n  a \\<in> carrier G - H\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (b, a) \\<in> ?R2 \\<Longrightarrow>\n       finite (?ub27 a) \\<and>\n       ?ub27 b \\<subseteq> ?ub27 a \\<and>\n       ?f27 b \\<subseteq> ?ub27 a \\<and> ?f27 a \\<subset> ?f27 b\n 2. \\<And>Ha__.\n       \\<lbrakk>subgroup Ha__ G; Ha__ \\<noteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> (adjoin G Ha__ (SOME a. a \\<in> carrier G - Ha__),\n                          Ha__)\n                         \\<in> ?R2", "from a and H"], ["proof (chain)\npicking this:\n  a \\<in> carrier G - H\n  subgroup H G\n  H \\<noteq> carrier G", "have \"adjoin G H a \\<subseteq> carrier G\""], ["proof (prove)\nusing this:\n  a \\<in> carrier G - H\n  subgroup H G\n  H \\<noteq> carrier G\n\ngoal (1 subgoal):\n 1. adjoin G H a \\<subseteq> carrier G", "by (intro adjoin_subset) auto"], ["proof (state)\nthis:\n  adjoin G H a \\<subseteq> carrier G\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (b, a) \\<in> ?R2 \\<Longrightarrow>\n       finite (?ub27 a) \\<and>\n       ?ub27 b \\<subseteq> ?ub27 a \\<and>\n       ?f27 b \\<subseteq> ?ub27 a \\<and> ?f27 a \\<subset> ?f27 b\n 2. \\<And>Ha__.\n       \\<lbrakk>subgroup Ha__ G; Ha__ \\<noteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> (adjoin G Ha__ (SOME a. a \\<in> carrier G - Ha__),\n                          Ha__)\n                         \\<in> ?R2", "from a and H"], ["proof (chain)\npicking this:\n  a \\<in> carrier G - H\n  subgroup H G\n  H \\<noteq> carrier G", "have \"a \\<in> adjoin G H a\" \"a \\<notin> H\""], ["proof (prove)\nusing this:\n  a \\<in> carrier G - H\n  subgroup H G\n  H \\<noteq> carrier G\n\ngoal (1 subgoal):\n 1. a \\<in> adjoin G H a &&& a \\<notin> H", "by (auto simp: adjoined_in_adjoin)"], ["proof (state)\nthis:\n  a \\<in> adjoin G H a\n  a \\<notin> H\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (b, a) \\<in> ?R2 \\<Longrightarrow>\n       finite (?ub27 a) \\<and>\n       ?ub27 b \\<subseteq> ?ub27 a \\<and>\n       ?f27 b \\<subseteq> ?ub27 a \\<and> ?f27 a \\<subset> ?f27 b\n 2. \\<And>Ha__.\n       \\<lbrakk>subgroup Ha__ G; Ha__ \\<noteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> (adjoin G Ha__ (SOME a. a \\<in> carrier G - Ha__),\n                          Ha__)\n                         \\<in> ?R2", "hence \"adjoin G H a \\<noteq> H\""], ["proof (prove)\nusing this:\n  a \\<in> adjoin G H a\n  a \\<notin> H\n\ngoal (1 subgoal):\n 1. adjoin G H a \\<noteq> H", "by blast"], ["proof (state)\nthis:\n  adjoin G H a \\<noteq> H\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (b, a) \\<in> ?R2 \\<Longrightarrow>\n       finite (?ub27 a) \\<and>\n       ?ub27 b \\<subseteq> ?ub27 a \\<and>\n       ?f27 b \\<subseteq> ?ub27 a \\<and> ?f27 a \\<subset> ?f27 b\n 2. \\<And>Ha__.\n       \\<lbrakk>subgroup Ha__ G; Ha__ \\<noteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> (adjoin G Ha__ (SOME a. a \\<in> carrier G - Ha__),\n                          Ha__)\n                         \\<in> ?R2", "with H and a"], ["proof (chain)\npicking this:\n  subgroup H G\n  H \\<noteq> carrier G\n  a \\<in> carrier G - H\n  adjoin G H a \\<noteq> H", "show \"(adjoin G H a, H) \\<in> {(B,A). A \\<subset> B \\<and> B \\<subseteq> carrier G}\""], ["proof (prove)\nusing this:\n  subgroup H G\n  H \\<noteq> carrier G\n  a \\<in> carrier G - H\n  adjoin G H a \\<noteq> H\n\ngoal (1 subgoal):\n 1. (adjoin G H a, H)\n    \\<in> {(B, A). A \\<subset> B \\<and> B \\<subseteq> carrier G}", "using adjoin_subset[of H a]"], ["proof (prove)\nusing this:\n  subgroup H G\n  H \\<noteq> carrier G\n  a \\<in> carrier G - H\n  adjoin G H a \\<noteq> H\n  \\<lbrakk>subgroup H G; a \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> adjoin G H a \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. (adjoin G H a, H)\n    \\<in> {(B, A). A \\<subset> B \\<and> B \\<subseteq> carrier G}", "by (auto intro: mem_adjoin)"], ["proof (state)\nthis:\n  (adjoin G H a, H)\n  \\<in> {(B, A). A \\<subset> B \\<and> B \\<subseteq> carrier G}\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (b, a)\n       \\<in> {(B, A).\n              A \\<subset> B \\<and>\n              B \\<subseteq> carrier G} \\<Longrightarrow>\n       finite (?ub27 a) \\<and>\n       ?ub27 b \\<subseteq> ?ub27 a \\<and>\n       ?f27 b \\<subseteq> ?ub27 a \\<and> ?f27 a \\<subset> ?f27 b", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (b, a)\n       \\<in> {(B, A).\n              A \\<subset> B \\<and>\n              B \\<subseteq> carrier G} \\<Longrightarrow>\n       finite (?ub27 a) \\<and>\n       ?ub27 b \\<subseteq> ?ub27 a \\<and>\n       ?f27 b \\<subseteq> ?ub27 a \\<and> ?f27 a \\<subset> ?f27 b", "fix A B"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (b, a)\n       \\<in> {(B, A).\n              A \\<subset> B \\<and>\n              B \\<subseteq> carrier G} \\<Longrightarrow>\n       finite (?ub27 a) \\<and>\n       ?ub27 b \\<subseteq> ?ub27 a \\<and>\n       ?f27 b \\<subseteq> ?ub27 a \\<and> ?f27 a \\<subset> ?f27 b", "assume \"(B, A) \\<in> {(B, A). A \\<subset> B \\<and> B \\<subseteq> carrier G}\""], ["proof (state)\nthis:\n  (B, A) \\<in> {(B, A). A \\<subset> B \\<and> B \\<subseteq> carrier G}\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (b, a)\n       \\<in> {(B, A).\n              A \\<subset> B \\<and>\n              B \\<subseteq> carrier G} \\<Longrightarrow>\n       finite (?ub27 a) \\<and>\n       ?ub27 b \\<subseteq> ?ub27 a \\<and>\n       ?f27 b \\<subseteq> ?ub27 a \\<and> ?f27 a \\<subset> ?f27 b", "thus \"finite (carrier G) \\<and> carrier G \\<subseteq> carrier G \\<and> B \\<subseteq> carrier G \\<and> A \\<subset> B\""], ["proof (prove)\nusing this:\n  (B, A) \\<in> {(B, A). A \\<subset> B \\<and> B \\<subseteq> carrier G}\n\ngoal (1 subgoal):\n 1. finite (carrier G) \\<and>\n    carrier G \\<subseteq> carrier G \\<and>\n    B \\<subseteq> carrier G \\<and> A \\<subset> B", "by auto"], ["proof (state)\nthis:\n  finite (carrier G) \\<and>\n  carrier G \\<subseteq> carrier G \\<and>\n  B \\<subseteq> carrier G \\<and> A \\<subset> B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>H.\n              \\<lbrakk>subgroup H G; H \\<noteq> carrier G;\n               ?P (adjoin G H (SOME a. a \\<in> carrier G - H))\\<rbrakk>\n              \\<Longrightarrow> ?P H;\n   \\<And>H.\n      \\<lbrakk>subgroup H G; H = carrier G\\<rbrakk> \\<Longrightarrow> ?P H;\n   \\<And>H. \\<not> subgroup H G \\<Longrightarrow> ?P H\\<rbrakk>\n  \\<Longrightarrow> ?P ?a0.0\n\ngoal (1 subgoal):\n 1. H = carrier G \\<or>\n    (\\<exists>H' a.\n        H \\<subseteq> H' \\<and>\n        subgroup H' G \\<and>\n        a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a)", "from assms"], ["proof (chain)\npicking this:\n  subgroup H G", "show ?thesis"], ["proof (prove)\nusing this:\n  subgroup H G\n\ngoal (1 subgoal):\n 1. H = carrier G \\<or>\n    (\\<exists>H' a.\n        H \\<subseteq> H' \\<and>\n        subgroup H' G \\<and>\n        a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a)", "proof (induction H rule: ind)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>H.\n       \\<lbrakk>subgroup H G; H \\<noteq> carrier G;\n        subgroup (adjoin G H (SOME a. a \\<in> carrier G - H))\n         G \\<Longrightarrow>\n        adjoin G H (SOME a. a \\<in> carrier G - H) = carrier G \\<or>\n        (\\<exists>H' a.\n            adjoin G H (SOME a. a \\<in> carrier G - H) \\<subseteq> H' \\<and>\n            subgroup H' G \\<and>\n            a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a);\n        subgroup H G\\<rbrakk>\n       \\<Longrightarrow> H = carrier G \\<or>\n                         (\\<exists>H' a.\n                             H \\<subseteq> H' \\<and>\n                             subgroup H' G \\<and>\n                             a \\<in> carrier G - H' \\<and>\n                             carrier G = adjoin G H' a)\n 2. \\<And>H.\n       \\<lbrakk>subgroup H G; H = carrier G; subgroup H G\\<rbrakk>\n       \\<Longrightarrow> H = carrier G \\<or>\n                         (\\<exists>H' a.\n                             H \\<subseteq> H' \\<and>\n                             subgroup H' G \\<and>\n                             a \\<in> carrier G - H' \\<and>\n                             carrier G = adjoin G H' a)\n 3. \\<And>H.\n       \\<lbrakk>\\<not> subgroup H G; subgroup H G\\<rbrakk>\n       \\<Longrightarrow> H = carrier G \\<or>\n                         (\\<exists>H' a.\n                             H \\<subseteq> H' \\<and>\n                             subgroup H' G \\<and>\n                             a \\<in> carrier G - H' \\<and>\n                             carrier G = adjoin G H' a)", "case (1 H)"], ["proof (state)\nthis:\n  subgroup H G\n  H \\<noteq> carrier G\n  subgroup (adjoin G H (SOME a. a \\<in> carrier G - H)) G \\<Longrightarrow>\n  adjoin G H (SOME a. a \\<in> carrier G - H) = carrier G \\<or>\n  (\\<exists>H' a.\n      adjoin G H (SOME a. a \\<in> carrier G - H) \\<subseteq> H' \\<and>\n      subgroup H' G \\<and>\n      a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a)\n  subgroup H G\n\ngoal (3 subgoals):\n 1. \\<And>H.\n       \\<lbrakk>subgroup H G; H \\<noteq> carrier G;\n        subgroup (adjoin G H (SOME a. a \\<in> carrier G - H))\n         G \\<Longrightarrow>\n        adjoin G H (SOME a. a \\<in> carrier G - H) = carrier G \\<or>\n        (\\<exists>H' a.\n            adjoin G H (SOME a. a \\<in> carrier G - H) \\<subseteq> H' \\<and>\n            subgroup H' G \\<and>\n            a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a);\n        subgroup H G\\<rbrakk>\n       \\<Longrightarrow> H = carrier G \\<or>\n                         (\\<exists>H' a.\n                             H \\<subseteq> H' \\<and>\n                             subgroup H' G \\<and>\n                             a \\<in> carrier G - H' \\<and>\n                             carrier G = adjoin G H' a)\n 2. \\<And>H.\n       \\<lbrakk>subgroup H G; H = carrier G; subgroup H G\\<rbrakk>\n       \\<Longrightarrow> H = carrier G \\<or>\n                         (\\<exists>H' a.\n                             H \\<subseteq> H' \\<and>\n                             subgroup H' G \\<and>\n                             a \\<in> carrier G - H' \\<and>\n                             carrier G = adjoin G H' a)\n 3. \\<And>H.\n       \\<lbrakk>\\<not> subgroup H G; subgroup H G\\<rbrakk>\n       \\<Longrightarrow> H = carrier G \\<or>\n                         (\\<exists>H' a.\n                             H \\<subseteq> H' \\<and>\n                             subgroup H' G \\<and>\n                             a \\<in> carrier G - H' \\<and>\n                             carrier G = adjoin G H' a)", "interpret subgroup H G"], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup H G", "by fact"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>H.\n       \\<lbrakk>subgroup H G; H \\<noteq> carrier G;\n        subgroup (adjoin G H (SOME a. a \\<in> carrier G - H))\n         G \\<Longrightarrow>\n        adjoin G H (SOME a. a \\<in> carrier G - H) = carrier G \\<or>\n        (\\<exists>H' a.\n            adjoin G H (SOME a. a \\<in> carrier G - H) \\<subseteq> H' \\<and>\n            subgroup H' G \\<and>\n            a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a);\n        subgroup H G\\<rbrakk>\n       \\<Longrightarrow> H = carrier G \\<or>\n                         (\\<exists>H' a.\n                             H \\<subseteq> H' \\<and>\n                             subgroup H' G \\<and>\n                             a \\<in> carrier G - H' \\<and>\n                             carrier G = adjoin G H' a)\n 2. \\<And>H.\n       \\<lbrakk>subgroup H G; H = carrier G; subgroup H G\\<rbrakk>\n       \\<Longrightarrow> H = carrier G \\<or>\n                         (\\<exists>H' a.\n                             H \\<subseteq> H' \\<and>\n                             subgroup H' G \\<and>\n                             a \\<in> carrier G - H' \\<and>\n                             carrier G = adjoin G H' a)\n 3. \\<And>H.\n       \\<lbrakk>\\<not> subgroup H G; subgroup H G\\<rbrakk>\n       \\<Longrightarrow> H = carrier G \\<or>\n                         (\\<exists>H' a.\n                             H \\<subseteq> H' \\<and>\n                             subgroup H' G \\<and>\n                             a \\<in> carrier G - H' \\<and>\n                             carrier G = adjoin G H' a)", "define a where \"a = (SOME a. a \\<in> carrier G - H)\""], ["proof (state)\nthis:\n  a = (SOME a. a \\<in> carrier G - H)\n\ngoal (3 subgoals):\n 1. \\<And>H.\n       \\<lbrakk>subgroup H G; H \\<noteq> carrier G;\n        subgroup (adjoin G H (SOME a. a \\<in> carrier G - H))\n         G \\<Longrightarrow>\n        adjoin G H (SOME a. a \\<in> carrier G - H) = carrier G \\<or>\n        (\\<exists>H' a.\n            adjoin G H (SOME a. a \\<in> carrier G - H) \\<subseteq> H' \\<and>\n            subgroup H' G \\<and>\n            a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a);\n        subgroup H G\\<rbrakk>\n       \\<Longrightarrow> H = carrier G \\<or>\n                         (\\<exists>H' a.\n                             H \\<subseteq> H' \\<and>\n                             subgroup H' G \\<and>\n                             a \\<in> carrier G - H' \\<and>\n                             carrier G = adjoin G H' a)\n 2. \\<And>H.\n       \\<lbrakk>subgroup H G; H = carrier G; subgroup H G\\<rbrakk>\n       \\<Longrightarrow> H = carrier G \\<or>\n                         (\\<exists>H' a.\n                             H \\<subseteq> H' \\<and>\n                             subgroup H' G \\<and>\n                             a \\<in> carrier G - H' \\<and>\n                             carrier G = adjoin G H' a)\n 3. \\<And>H.\n       \\<lbrakk>\\<not> subgroup H G; subgroup H G\\<rbrakk>\n       \\<Longrightarrow> H = carrier G \\<or>\n                         (\\<exists>H' a.\n                             H \\<subseteq> H' \\<and>\n                             subgroup H' G \\<and>\n                             a \\<in> carrier G - H' \\<and>\n                             carrier G = adjoin G H' a)", "from \"1.hyps\""], ["proof (chain)\npicking this:\n  subgroup H G\n  H \\<noteq> carrier G", "have \"\\<exists>a. a \\<in> carrier G - H\""], ["proof (prove)\nusing this:\n  subgroup H G\n  H \\<noteq> carrier G\n\ngoal (1 subgoal):\n 1. \\<exists>a. a \\<in> carrier G - H", "by auto"], ["proof (state)\nthis:\n  \\<exists>a. a \\<in> carrier G - H\n\ngoal (3 subgoals):\n 1. \\<And>H.\n       \\<lbrakk>subgroup H G; H \\<noteq> carrier G;\n        subgroup (adjoin G H (SOME a. a \\<in> carrier G - H))\n         G \\<Longrightarrow>\n        adjoin G H (SOME a. a \\<in> carrier G - H) = carrier G \\<or>\n        (\\<exists>H' a.\n            adjoin G H (SOME a. a \\<in> carrier G - H) \\<subseteq> H' \\<and>\n            subgroup H' G \\<and>\n            a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a);\n        subgroup H G\\<rbrakk>\n       \\<Longrightarrow> H = carrier G \\<or>\n                         (\\<exists>H' a.\n                             H \\<subseteq> H' \\<and>\n                             subgroup H' G \\<and>\n                             a \\<in> carrier G - H' \\<and>\n                             carrier G = adjoin G H' a)\n 2. \\<And>H.\n       \\<lbrakk>subgroup H G; H = carrier G; subgroup H G\\<rbrakk>\n       \\<Longrightarrow> H = carrier G \\<or>\n                         (\\<exists>H' a.\n                             H \\<subseteq> H' \\<and>\n                             subgroup H' G \\<and>\n                             a \\<in> carrier G - H' \\<and>\n                             carrier G = adjoin G H' a)\n 3. \\<And>H.\n       \\<lbrakk>\\<not> subgroup H G; subgroup H G\\<rbrakk>\n       \\<Longrightarrow> H = carrier G \\<or>\n                         (\\<exists>H' a.\n                             H \\<subseteq> H' \\<and>\n                             subgroup H' G \\<and>\n                             a \\<in> carrier G - H' \\<and>\n                             carrier G = adjoin G H' a)", "hence a: \"a \\<in> carrier G - H\""], ["proof (prove)\nusing this:\n  \\<exists>a. a \\<in> carrier G - H\n\ngoal (1 subgoal):\n 1. a \\<in> carrier G - H", "unfolding a_def"], ["proof (prove)\nusing this:\n  \\<exists>a. a \\<in> carrier G - H\n\ngoal (1 subgoal):\n 1. (SOME a. a \\<in> carrier G - H) \\<in> carrier G - H", "by (rule someI_ex)"], ["proof (state)\nthis:\n  a \\<in> carrier G - H\n\ngoal (3 subgoals):\n 1. \\<And>H.\n       \\<lbrakk>subgroup H G; H \\<noteq> carrier G;\n        subgroup (adjoin G H (SOME a. a \\<in> carrier G - H))\n         G \\<Longrightarrow>\n        adjoin G H (SOME a. a \\<in> carrier G - H) = carrier G \\<or>\n        (\\<exists>H' a.\n            adjoin G H (SOME a. a \\<in> carrier G - H) \\<subseteq> H' \\<and>\n            subgroup H' G \\<and>\n            a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a);\n        subgroup H G\\<rbrakk>\n       \\<Longrightarrow> H = carrier G \\<or>\n                         (\\<exists>H' a.\n                             H \\<subseteq> H' \\<and>\n                             subgroup H' G \\<and>\n                             a \\<in> carrier G - H' \\<and>\n                             carrier G = adjoin G H' a)\n 2. \\<And>H.\n       \\<lbrakk>subgroup H G; H = carrier G; subgroup H G\\<rbrakk>\n       \\<Longrightarrow> H = carrier G \\<or>\n                         (\\<exists>H' a.\n                             H \\<subseteq> H' \\<and>\n                             subgroup H' G \\<and>\n                             a \\<in> carrier G - H' \\<and>\n                             carrier G = adjoin G H' a)\n 3. \\<And>H.\n       \\<lbrakk>\\<not> subgroup H G; subgroup H G\\<rbrakk>\n       \\<Longrightarrow> H = carrier G \\<or>\n                         (\\<exists>H' a.\n                             H \\<subseteq> H' \\<and>\n                             subgroup H' G \\<and>\n                             a \\<in> carrier G - H' \\<and>\n                             carrier G = adjoin G H' a)", "from \"1.hyps\" and a"], ["proof (chain)\npicking this:\n  subgroup H G\n  H \\<noteq> carrier G\n  a \\<in> carrier G - H", "have \"subgroup (adjoin G H a) G\""], ["proof (prove)\nusing this:\n  subgroup H G\n  H \\<noteq> carrier G\n  a \\<in> carrier G - H\n\ngoal (1 subgoal):\n 1. subgroup (adjoin G H a) G", "by (intro adjoin_subgroup) auto"], ["proof (state)\nthis:\n  subgroup (adjoin G H a) G\n\ngoal (3 subgoals):\n 1. \\<And>H.\n       \\<lbrakk>subgroup H G; H \\<noteq> carrier G;\n        subgroup (adjoin G H (SOME a. a \\<in> carrier G - H))\n         G \\<Longrightarrow>\n        adjoin G H (SOME a. a \\<in> carrier G - H) = carrier G \\<or>\n        (\\<exists>H' a.\n            adjoin G H (SOME a. a \\<in> carrier G - H) \\<subseteq> H' \\<and>\n            subgroup H' G \\<and>\n            a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a);\n        subgroup H G\\<rbrakk>\n       \\<Longrightarrow> H = carrier G \\<or>\n                         (\\<exists>H' a.\n                             H \\<subseteq> H' \\<and>\n                             subgroup H' G \\<and>\n                             a \\<in> carrier G - H' \\<and>\n                             carrier G = adjoin G H' a)\n 2. \\<And>H.\n       \\<lbrakk>subgroup H G; H = carrier G; subgroup H G\\<rbrakk>\n       \\<Longrightarrow> H = carrier G \\<or>\n                         (\\<exists>H' a.\n                             H \\<subseteq> H' \\<and>\n                             subgroup H' G \\<and>\n                             a \\<in> carrier G - H' \\<and>\n                             carrier G = adjoin G H' a)\n 3. \\<And>H.\n       \\<lbrakk>\\<not> subgroup H G; subgroup H G\\<rbrakk>\n       \\<Longrightarrow> H = carrier G \\<or>\n                         (\\<exists>H' a.\n                             H \\<subseteq> H' \\<and>\n                             subgroup H' G \\<and>\n                             a \\<in> carrier G - H' \\<and>\n                             carrier G = adjoin G H' a)", "from \"1.IH\"[folded a_def, OF this]"], ["proof (chain)\npicking this:\n  adjoin G H a = carrier G \\<or>\n  (\\<exists>H' aa.\n      adjoin G H a \\<subseteq> H' \\<and>\n      subgroup H' G \\<and>\n      aa \\<in> carrier G - H' \\<and> carrier G = adjoin G H' aa)", "have \"(\\<exists>H' a. H \\<subseteq> H' \\<and> subgroup H' G \\<and> a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a)\""], ["proof (prove)\nusing this:\n  adjoin G H a = carrier G \\<or>\n  (\\<exists>H' aa.\n      adjoin G H a \\<subseteq> H' \\<and>\n      subgroup H' G \\<and>\n      aa \\<in> carrier G - H' \\<and> carrier G = adjoin G H' aa)\n\ngoal (1 subgoal):\n 1. \\<exists>H' a.\n       H \\<subseteq> H' \\<and>\n       subgroup H' G \\<and>\n       a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a", "proof (elim disjE, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. adjoin G H a = carrier G \\<Longrightarrow>\n    \\<exists>H' a.\n       H \\<subseteq> H' \\<and>\n       subgroup H' G \\<and>\n       a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a\n 2. \\<exists>H' aa.\n       adjoin G H a \\<subseteq> H' \\<and>\n       subgroup H' G \\<and>\n       aa \\<in> carrier G - H' \\<and>\n       carrier G = adjoin G H' aa \\<Longrightarrow>\n    \\<exists>H' a.\n       H \\<subseteq> H' \\<and>\n       subgroup H' G \\<and>\n       a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a", "case 1"], ["proof (state)\nthis:\n  adjoin G H a = carrier G\n\ngoal (2 subgoals):\n 1. adjoin G H a = carrier G \\<Longrightarrow>\n    \\<exists>H' a.\n       H \\<subseteq> H' \\<and>\n       subgroup H' G \\<and>\n       a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a\n 2. \\<exists>H' aa.\n       adjoin G H a \\<subseteq> H' \\<and>\n       subgroup H' G \\<and>\n       aa \\<in> carrier G - H' \\<and>\n       carrier G = adjoin G H' aa \\<Longrightarrow>\n    \\<exists>H' a.\n       H \\<subseteq> H' \\<and>\n       subgroup H' G \\<and>\n       a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a", "with a and \\<open>subgroup H G\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> carrier G - H\n  subgroup H G\n  adjoin G H a = carrier G", "show ?case"], ["proof (prove)\nusing this:\n  a \\<in> carrier G - H\n  subgroup H G\n  adjoin G H a = carrier G\n\ngoal (1 subgoal):\n 1. \\<exists>H' a.\n       H \\<subseteq> H' \\<and>\n       subgroup H' G \\<and>\n       a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a", "by (intro exI[of _ H] exI[of _ a]) simp_all"], ["proof (state)\nthis:\n  \\<exists>H' a.\n     H \\<subseteq> H' \\<and>\n     subgroup H' G \\<and>\n     a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a\n\ngoal (1 subgoal):\n 1. \\<exists>H' aa.\n       adjoin G H a \\<subseteq> H' \\<and>\n       subgroup H' G \\<and>\n       aa \\<in> carrier G - H' \\<and>\n       carrier G = adjoin G H' aa \\<Longrightarrow>\n    \\<exists>H' a.\n       H \\<subseteq> H' \\<and>\n       subgroup H' G \\<and>\n       a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>H' aa.\n       adjoin G H a \\<subseteq> H' \\<and>\n       subgroup H' G \\<and>\n       aa \\<in> carrier G - H' \\<and>\n       carrier G = adjoin G H' aa \\<Longrightarrow>\n    \\<exists>H' a.\n       H \\<subseteq> H' \\<and>\n       subgroup H' G \\<and>\n       a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a", "case 2"], ["proof (state)\nthis:\n  \\<exists>H' aa.\n     adjoin G H a \\<subseteq> H' \\<and>\n     subgroup H' G \\<and>\n     aa \\<in> carrier G - H' \\<and> carrier G = adjoin G H' aa\n\ngoal (1 subgoal):\n 1. \\<exists>H' aa.\n       adjoin G H a \\<subseteq> H' \\<and>\n       subgroup H' G \\<and>\n       aa \\<in> carrier G - H' \\<and>\n       carrier G = adjoin G H' aa \\<Longrightarrow>\n    \\<exists>H' a.\n       H \\<subseteq> H' \\<and>\n       subgroup H' G \\<and>\n       a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a", "then"], ["proof (chain)\npicking this:\n  \\<exists>H' aa.\n     adjoin G H a \\<subseteq> H' \\<and>\n     subgroup H' G \\<and>\n     aa \\<in> carrier G - H' \\<and> carrier G = adjoin G H' aa", "obtain H' a' where *: \"adjoin G H a \\<subseteq> H'\" \"subgroup H' G\" \n                                 \"a' \\<in> carrier G - H'\" \"carrier G = adjoin G H' a'\""], ["proof (prove)\nusing this:\n  \\<exists>H' aa.\n     adjoin G H a \\<subseteq> H' \\<and>\n     subgroup H' G \\<and>\n     aa \\<in> carrier G - H' \\<and> carrier G = adjoin G H' aa\n\ngoal (1 subgoal):\n 1. (\\<And>H' a'.\n        \\<lbrakk>adjoin G H a \\<subseteq> H'; subgroup H' G;\n         a' \\<in> carrier G - H'; carrier G = adjoin G H' a'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  adjoin G H a \\<subseteq> H'\n  subgroup H' G\n  a' \\<in> carrier G - H'\n  carrier G = adjoin G H' a'\n\ngoal (1 subgoal):\n 1. \\<exists>H' aa.\n       adjoin G H a \\<subseteq> H' \\<and>\n       subgroup H' G \\<and>\n       aa \\<in> carrier G - H' \\<and>\n       carrier G = adjoin G H' aa \\<Longrightarrow>\n    \\<exists>H' a.\n       H \\<subseteq> H' \\<and>\n       subgroup H' G \\<and>\n       a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a", "thus ?case"], ["proof (prove)\nusing this:\n  adjoin G H a \\<subseteq> H'\n  subgroup H' G\n  a' \\<in> carrier G - H'\n  carrier G = adjoin G H' a'\n\ngoal (1 subgoal):\n 1. \\<exists>H' a.\n       H \\<subseteq> H' \\<and>\n       subgroup H' G \\<and>\n       a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a", "using mem_adjoin[OF \\<open>subgroup H G\\<close>, of _ a] a"], ["proof (prove)\nusing this:\n  adjoin G H a \\<subseteq> H'\n  subgroup H' G\n  a' \\<in> carrier G - H'\n  carrier G = adjoin G H' a'\n  \\<lbrakk>?x \\<in> H; a \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> adjoin G H a\n  a \\<in> carrier G - H\n\ngoal (1 subgoal):\n 1. \\<exists>H' a.\n       H \\<subseteq> H' \\<and>\n       subgroup H' G \\<and>\n       a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a", "by (intro exI[of _ H'] exI[of _ a']) auto"], ["proof (state)\nthis:\n  \\<exists>H' a.\n     H \\<subseteq> H' \\<and>\n     subgroup H' G \\<and>\n     a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>H' a.\n     H \\<subseteq> H' \\<and>\n     subgroup H' G \\<and>\n     a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a\n\ngoal (3 subgoals):\n 1. \\<And>H.\n       \\<lbrakk>subgroup H G; H \\<noteq> carrier G;\n        subgroup (adjoin G H (SOME a. a \\<in> carrier G - H))\n         G \\<Longrightarrow>\n        adjoin G H (SOME a. a \\<in> carrier G - H) = carrier G \\<or>\n        (\\<exists>H' a.\n            adjoin G H (SOME a. a \\<in> carrier G - H) \\<subseteq> H' \\<and>\n            subgroup H' G \\<and>\n            a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a);\n        subgroup H G\\<rbrakk>\n       \\<Longrightarrow> H = carrier G \\<or>\n                         (\\<exists>H' a.\n                             H \\<subseteq> H' \\<and>\n                             subgroup H' G \\<and>\n                             a \\<in> carrier G - H' \\<and>\n                             carrier G = adjoin G H' a)\n 2. \\<And>H.\n       \\<lbrakk>subgroup H G; H = carrier G; subgroup H G\\<rbrakk>\n       \\<Longrightarrow> H = carrier G \\<or>\n                         (\\<exists>H' a.\n                             H \\<subseteq> H' \\<and>\n                             subgroup H' G \\<and>\n                             a \\<in> carrier G - H' \\<and>\n                             carrier G = adjoin G H' a)\n 3. \\<And>H.\n       \\<lbrakk>\\<not> subgroup H G; subgroup H G\\<rbrakk>\n       \\<Longrightarrow> H = carrier G \\<or>\n                         (\\<exists>H' a.\n                             H \\<subseteq> H' \\<and>\n                             subgroup H' G \\<and>\n                             a \\<in> carrier G - H' \\<and>\n                             carrier G = adjoin G H' a)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<exists>H' a.\n     H \\<subseteq> H' \\<and>\n     subgroup H' G \\<and>\n     a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a\n\ngoal (1 subgoal):\n 1. H = carrier G \\<or>\n    (\\<exists>H' a.\n        H \\<subseteq> H' \\<and>\n        subgroup H' G \\<and>\n        a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a)", "by blast"], ["proof (state)\nthis:\n  H = carrier G \\<or>\n  (\\<exists>H' a.\n      H \\<subseteq> H' \\<and>\n      subgroup H' G \\<and>\n      a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a)\n\ngoal (2 subgoals):\n 1. \\<And>H.\n       \\<lbrakk>subgroup H G; H = carrier G; subgroup H G\\<rbrakk>\n       \\<Longrightarrow> H = carrier G \\<or>\n                         (\\<exists>H' a.\n                             H \\<subseteq> H' \\<and>\n                             subgroup H' G \\<and>\n                             a \\<in> carrier G - H' \\<and>\n                             carrier G = adjoin G H' a)\n 2. \\<And>H.\n       \\<lbrakk>\\<not> subgroup H G; subgroup H G\\<rbrakk>\n       \\<Longrightarrow> H = carrier G \\<or>\n                         (\\<exists>H' a.\n                             H \\<subseteq> H' \\<and>\n                             subgroup H' G \\<and>\n                             a \\<in> carrier G - H' \\<and>\n                             carrier G = adjoin G H' a)", "qed auto"], ["proof (state)\nthis:\n  H = carrier G \\<or>\n  (\\<exists>H' a.\n      H \\<subseteq> H' \\<and>\n      subgroup H' G \\<and>\n      a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma group_decompose_adjoin:\n  assumes \"subgroup H0 G\" \"H0 \\<noteq> carrier G\"\n  obtains H a where \"H0 \\<subseteq> H\" \"subgroup H G\" \"a \\<in> carrier G - H\" \"carrier G = adjoin G H a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>H a.\n        \\<lbrakk>H0 \\<subseteq> H; subgroup H G; a \\<in> carrier G - H;\n         carrier G = adjoin G H a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>H a.\n        \\<lbrakk>H0 \\<subseteq> H; subgroup H G; a \\<in> carrier G - H;\n         carrier G = adjoin G H a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from group_decompose_adjoin_aux[OF assms(1)] and assms(2) and that"], ["proof (chain)\npicking this:\n  H0 = carrier G \\<or>\n  (\\<exists>H' a.\n      H0 \\<subseteq> H' \\<and>\n      subgroup H' G \\<and>\n      a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a)\n  H0 \\<noteq> carrier G\n  \\<lbrakk>H0 \\<subseteq> ?H; subgroup ?H G; ?a \\<in> carrier G - ?H;\n   carrier G = adjoin G ?H ?a\\<rbrakk>\n  \\<Longrightarrow> thesis", "show ?thesis"], ["proof (prove)\nusing this:\n  H0 = carrier G \\<or>\n  (\\<exists>H' a.\n      H0 \\<subseteq> H' \\<and>\n      subgroup H' G \\<and>\n      a \\<in> carrier G - H' \\<and> carrier G = adjoin G H' a)\n  H0 \\<noteq> carrier G\n  \\<lbrakk>H0 \\<subseteq> ?H; subgroup ?H G; ?a \\<in> carrier G - ?H;\n   carrier G = adjoin G ?H ?a\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subgroup_adjoin_induct [consumes 1, case_names base adjoin]:\n  assumes \"subgroup H0 G\"\n  assumes base: \"P (G\\<lparr>carrier := H0\\<rparr>)\"\n  assumes adjoin: \"\\<And>H a. subgroup H G \\<Longrightarrow> H0 \\<subseteq> H \\<Longrightarrow> a \\<in> carrier G - H \\<Longrightarrow> P (G\\<lparr>carrier := H\\<rparr>) \\<Longrightarrow> \n                           P (G\\<lparr>carrier := adjoin G H a\\<rparr>)\"\n  shows   \"P G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P G", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P G", "define H where \"H = carrier G\""], ["proof (state)\nthis:\n  H = carrier G\n\ngoal (1 subgoal):\n 1. P G", "have \"finite H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite H", "by (auto simp: H_def fin)"], ["proof (state)\nthis:\n  finite H\n\ngoal (1 subgoal):\n 1. P G", "moreover"], ["proof (state)\nthis:\n  finite H\n\ngoal (1 subgoal):\n 1. P G", "have \"subgroup H G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup H G", "unfolding H_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup (carrier G) G", "by standard auto"], ["proof (state)\nthis:\n  subgroup H G\n\ngoal (1 subgoal):\n 1. P G", "moreover"], ["proof (state)\nthis:\n  subgroup H G\n\ngoal (1 subgoal):\n 1. P G", "{"], ["proof (state)\nthis:\n  subgroup H G\n\ngoal (1 subgoal):\n 1. P G", "interpret subgroup H0 G"], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup H0 G", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. P G", "have \"H0 \\<subseteq> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H0 \\<subseteq> H", "by (simp add: H_def subset)"], ["proof (state)\nthis:\n  H0 \\<subseteq> H\n\ngoal (1 subgoal):\n 1. P G", "}"], ["proof (state)\nthis:\n  H0 \\<subseteq> H\n\ngoal (1 subgoal):\n 1. P G", "ultimately"], ["proof (chain)\npicking this:\n  finite H\n  subgroup H G\n  H0 \\<subseteq> H", "have \"P (G\\<lparr>carrier := H\\<rparr>)\""], ["proof (prove)\nusing this:\n  finite H\n  subgroup H G\n  H0 \\<subseteq> H\n\ngoal (1 subgoal):\n 1. P (G\\<lparr>carrier := H\\<rparr>)", "proof (induction H rule: finite_psubset_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>finite A;\n        \\<And>B.\n           \\<lbrakk>B \\<subset> A; subgroup B G; H0 \\<subseteq> B\\<rbrakk>\n           \\<Longrightarrow> P (G\\<lparr>carrier := B\\<rparr>);\n        subgroup A G; H0 \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> P (G\\<lparr>carrier := A\\<rparr>)", "case (psubset H)"], ["proof (state)\nthis:\n  finite H\n  \\<lbrakk>?B \\<subset> H; subgroup ?B G; H0 \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> P (G\\<lparr>carrier := ?B\\<rparr>)\n  subgroup H G\n  H0 \\<subseteq> H\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>finite A;\n        \\<And>B.\n           \\<lbrakk>B \\<subset> A; subgroup B G; H0 \\<subseteq> B\\<rbrakk>\n           \\<Longrightarrow> P (G\\<lparr>carrier := B\\<rparr>);\n        subgroup A G; H0 \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> P (G\\<lparr>carrier := A\\<rparr>)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P (G\\<lparr>carrier := H\\<rparr>)", "proof (cases \"H = H0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. H = H0 \\<Longrightarrow> P (G\\<lparr>carrier := H\\<rparr>)\n 2. H \\<noteq> H0 \\<Longrightarrow> P (G\\<lparr>carrier := H\\<rparr>)", "case True"], ["proof (state)\nthis:\n  H = H0\n\ngoal (2 subgoals):\n 1. H = H0 \\<Longrightarrow> P (G\\<lparr>carrier := H\\<rparr>)\n 2. H \\<noteq> H0 \\<Longrightarrow> P (G\\<lparr>carrier := H\\<rparr>)", "thus ?thesis"], ["proof (prove)\nusing this:\n  H = H0\n\ngoal (1 subgoal):\n 1. P (G\\<lparr>carrier := H\\<rparr>)", "by (simp add: base)"], ["proof (state)\nthis:\n  P (G\\<lparr>carrier := H\\<rparr>)\n\ngoal (1 subgoal):\n 1. H \\<noteq> H0 \\<Longrightarrow> P (G\\<lparr>carrier := H\\<rparr>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. H \\<noteq> H0 \\<Longrightarrow> P (G\\<lparr>carrier := H\\<rparr>)", "case False"], ["proof (state)\nthis:\n  H \\<noteq> H0\n\ngoal (1 subgoal):\n 1. H \\<noteq> H0 \\<Longrightarrow> P (G\\<lparr>carrier := H\\<rparr>)", "interpret H_sg: subgroup H G"], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup H G", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. H \\<noteq> H0 \\<Longrightarrow> P (G\\<lparr>carrier := H\\<rparr>)", "interpret H: finite_comm_group \"G\\<lparr>carrier := H\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_comm_group (G\\<lparr>carrier := H\\<rparr>)", "by (rule subgroup_imp_finite_comm_group) fact"], ["proof (state)\ngoal (1 subgoal):\n 1. H \\<noteq> H0 \\<Longrightarrow> P (G\\<lparr>carrier := H\\<rparr>)", "have sg: \"subgroup H0 (G\\<lparr>carrier := H\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup H0 (G\\<lparr>carrier := H\\<rparr>)", "by (simp add: H_sg.subgroup_axioms \\<open>subgroup H0 G\\<close> psubset.prems(2) subgroup_incl)"], ["proof (state)\nthis:\n  subgroup H0 (G\\<lparr>carrier := H\\<rparr>)\n\ngoal (1 subgoal):\n 1. H \\<noteq> H0 \\<Longrightarrow> P (G\\<lparr>carrier := H\\<rparr>)", "from H.group_decompose_adjoin[OF sg] and False"], ["proof (chain)\npicking this:\n  \\<lbrakk>H0 \\<noteq> carrier (G\\<lparr>carrier := H\\<rparr>);\n   \\<And>H a.\n      \\<lbrakk>H0 \\<subseteq> H; subgroup H (G\\<lparr>carrier := H\\<rparr>);\n       a \\<in> carrier (G\\<lparr>carrier := H\\<rparr>) - H;\n       carrier (G\\<lparr>carrier := H\\<rparr>) =\n       adjoin (G\\<lparr>carrier := H\\<rparr>) H a\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  H \\<noteq> H0", "obtain H' a where H': \"H0 \\<subseteq> H'\" \"subgroup H' (G\\<lparr>carrier := H\\<rparr>)\" \"a \\<in> H - H'\" \n                              \"H = adjoin G H' a\""], ["proof (prove)\nusing this:\n  \\<lbrakk>H0 \\<noteq> carrier (G\\<lparr>carrier := H\\<rparr>);\n   \\<And>H a.\n      \\<lbrakk>H0 \\<subseteq> H; subgroup H (G\\<lparr>carrier := H\\<rparr>);\n       a \\<in> carrier (G\\<lparr>carrier := H\\<rparr>) - H;\n       carrier (G\\<lparr>carrier := H\\<rparr>) =\n       adjoin (G\\<lparr>carrier := H\\<rparr>) H a\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  H \\<noteq> H0\n\ngoal (1 subgoal):\n 1. (\\<And>H' a.\n        \\<lbrakk>H0 \\<subseteq> H';\n         subgroup H' (G\\<lparr>carrier := H\\<rparr>); a \\<in> H - H';\n         H = adjoin G H' a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: order_def)"], ["proof (state)\nthis:\n  H0 \\<subseteq> H'\n  subgroup H' (G\\<lparr>carrier := H\\<rparr>)\n  a \\<in> H - H'\n  H = adjoin G H' a\n\ngoal (1 subgoal):\n 1. H \\<noteq> H0 \\<Longrightarrow> P (G\\<lparr>carrier := H\\<rparr>)", "have \"subgroup H' G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup H' G", "using \\<open>subgroup H G\\<close> and H'(2) group.incl_subgroup"], ["proof (prove)\nusing this:\n  subgroup H G\n  subgroup H' (G\\<lparr>carrier := H\\<rparr>)\n  \\<lbrakk>Group.group ?G; subgroup ?J ?G;\n   subgroup ?I (?G\\<lparr>carrier := ?J\\<rparr>)\\<rbrakk>\n  \\<Longrightarrow> subgroup ?I ?G\n\ngoal (1 subgoal):\n 1. subgroup H' G", "by blast"], ["proof (state)\nthis:\n  subgroup H' G\n\ngoal (1 subgoal):\n 1. H \\<noteq> H0 \\<Longrightarrow> P (G\\<lparr>carrier := H\\<rparr>)", "from H' and adjoined_in_adjoin[of H' a] and \\<open>subgroup H' G\\<close> and mem_adjoin[of H' _ a]"], ["proof (chain)\npicking this:\n  H0 \\<subseteq> H'\n  subgroup H' (G\\<lparr>carrier := H\\<rparr>)\n  a \\<in> H - H'\n  H = adjoin G H' a\n  \\<lbrakk>subgroup H' G; a \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> a \\<in> adjoin G H' a\n  subgroup H' G\n  \\<lbrakk>subgroup H' G; ?x \\<in> H'; a \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> adjoin G H' a", "have \"a \\<in> H\" and \"a \\<notin> H'\" and \"H' \\<subseteq> H\""], ["proof (prove)\nusing this:\n  H0 \\<subseteq> H'\n  subgroup H' (G\\<lparr>carrier := H\\<rparr>)\n  a \\<in> H - H'\n  H = adjoin G H' a\n  \\<lbrakk>subgroup H' G; a \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> a \\<in> adjoin G H' a\n  subgroup H' G\n  \\<lbrakk>subgroup H' G; ?x \\<in> H'; a \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> adjoin G H' a\n\ngoal (1 subgoal):\n 1. a \\<in> H &&& a \\<notin> H' &&& H' \\<subseteq> H", "by auto"], ["proof (state)\nthis:\n  a \\<in> H\n  a \\<notin> H'\n  H' \\<subseteq> H\n\ngoal (1 subgoal):\n 1. H \\<noteq> H0 \\<Longrightarrow> P (G\\<lparr>carrier := H\\<rparr>)", "hence \"H' \\<subset> H\""], ["proof (prove)\nusing this:\n  a \\<in> H\n  a \\<notin> H'\n  H' \\<subseteq> H\n\ngoal (1 subgoal):\n 1. H' \\<subset> H", "by blast"], ["proof (state)\nthis:\n  H' \\<subset> H\n\ngoal (1 subgoal):\n 1. H \\<noteq> H0 \\<Longrightarrow> P (G\\<lparr>carrier := H\\<rparr>)", "from psubset.IH [OF \\<open>H' \\<subset> H\\<close> \\<open>subgroup H' G\\<close> \\<open>H0 \\<subseteq> H'\\<close>]"], ["proof (chain)\npicking this:\n  P (G\\<lparr>carrier := H'\\<rparr>)", "have \"P (G\\<lparr>carrier := H'\\<rparr>)\""], ["proof (prove)\nusing this:\n  P (G\\<lparr>carrier := H'\\<rparr>)\n\ngoal (1 subgoal):\n 1. P (G\\<lparr>carrier := H'\\<rparr>)", "."], ["proof (state)\nthis:\n  P (G\\<lparr>carrier := H'\\<rparr>)\n\ngoal (1 subgoal):\n 1. H \\<noteq> H0 \\<Longrightarrow> P (G\\<lparr>carrier := H\\<rparr>)", "with H' and \\<open>subgroup H' G\\<close>"], ["proof (chain)\npicking this:\n  H0 \\<subseteq> H'\n  subgroup H' (G\\<lparr>carrier := H\\<rparr>)\n  a \\<in> H - H'\n  H = adjoin G H' a\n  subgroup H' G\n  P (G\\<lparr>carrier := H'\\<rparr>)", "have \"P (G\\<lparr>carrier := adjoin G H' a\\<rparr>)\""], ["proof (prove)\nusing this:\n  H0 \\<subseteq> H'\n  subgroup H' (G\\<lparr>carrier := H\\<rparr>)\n  a \\<in> H - H'\n  H = adjoin G H' a\n  subgroup H' G\n  P (G\\<lparr>carrier := H'\\<rparr>)\n\ngoal (1 subgoal):\n 1. P (G\\<lparr>carrier := adjoin G H' a\\<rparr>)", "by (intro adjoin) auto"], ["proof (state)\nthis:\n  P (G\\<lparr>carrier := adjoin G H' a\\<rparr>)\n\ngoal (1 subgoal):\n 1. H \\<noteq> H0 \\<Longrightarrow> P (G\\<lparr>carrier := H\\<rparr>)", "also"], ["proof (state)\nthis:\n  P (G\\<lparr>carrier := adjoin G H' a\\<rparr>)\n\ngoal (1 subgoal):\n 1. H \\<noteq> H0 \\<Longrightarrow> P (G\\<lparr>carrier := H\\<rparr>)", "from H'"], ["proof (chain)\npicking this:\n  H0 \\<subseteq> H'\n  subgroup H' (G\\<lparr>carrier := H\\<rparr>)\n  a \\<in> H - H'\n  H = adjoin G H' a", "have \"adjoin G H' a = H\""], ["proof (prove)\nusing this:\n  H0 \\<subseteq> H'\n  subgroup H' (G\\<lparr>carrier := H\\<rparr>)\n  a \\<in> H - H'\n  H = adjoin G H' a\n\ngoal (1 subgoal):\n 1. adjoin G H' a = H", "by simp"], ["proof (state)\nthis:\n  adjoin G H' a = H\n\ngoal (1 subgoal):\n 1. H \\<noteq> H0 \\<Longrightarrow> P (G\\<lparr>carrier := H\\<rparr>)", "finally"], ["proof (chain)\npicking this:\n  P (G\\<lparr>carrier := H\\<rparr>)", "show ?thesis"], ["proof (prove)\nusing this:\n  P (G\\<lparr>carrier := H\\<rparr>)\n\ngoal (1 subgoal):\n 1. P (G\\<lparr>carrier := H\\<rparr>)", "."], ["proof (state)\nthis:\n  P (G\\<lparr>carrier := H\\<rparr>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P (G\\<lparr>carrier := H\\<rparr>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P (G\\<lparr>carrier := H\\<rparr>)\n\ngoal (1 subgoal):\n 1. P G", "thus \"P G\""], ["proof (prove)\nusing this:\n  P (G\\<lparr>carrier := H\\<rparr>)\n\ngoal (1 subgoal):\n 1. P G", "by (simp add: H_def)"], ["proof (state)\nthis:\n  P G\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subgroup_adjoin_induct' [case_names singleton adjoin]:\n  assumes singleton: \"P (G\\<lparr>carrier := {\\<one>}\\<rparr>)\"\n  assumes adjoin: \"\\<And>H a. subgroup H G \\<Longrightarrow> a \\<in> carrier G - H \\<Longrightarrow> P (G\\<lparr>carrier := H\\<rparr>) \\<Longrightarrow> \n                           P (G\\<lparr>carrier := adjoin G H a\\<rparr>)\"\n  shows   \"P G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P G", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P G", "have \"subgroup {\\<one>} G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup {\\<one>} G", "by standard auto"], ["proof (state)\nthis:\n  subgroup {\\<one>} G\n\ngoal (1 subgoal):\n 1. P G", "from this and assms"], ["proof (chain)\npicking this:\n  subgroup {\\<one>} G\n  P (G\\<lparr>carrier := {\\<one>}\\<rparr>)\n  \\<lbrakk>subgroup ?H G; ?a \\<in> carrier G - ?H;\n   P (G\\<lparr>carrier := ?H\\<rparr>)\\<rbrakk>\n  \\<Longrightarrow> P (G\\<lparr>carrier := adjoin G ?H ?a\\<rparr>)", "show ?thesis"], ["proof (prove)\nusing this:\n  subgroup {\\<one>} G\n  P (G\\<lparr>carrier := {\\<one>}\\<rparr>)\n  \\<lbrakk>subgroup ?H G; ?a \\<in> carrier G - ?H;\n   P (G\\<lparr>carrier := ?H\\<rparr>)\\<rbrakk>\n  \\<Longrightarrow> P (G\\<lparr>carrier := adjoin G ?H ?a\\<rparr>)\n\ngoal (1 subgoal):\n 1. P G", "by (rule subgroup_adjoin_induct)"], ["proof (state)\nthis:\n  P G\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}