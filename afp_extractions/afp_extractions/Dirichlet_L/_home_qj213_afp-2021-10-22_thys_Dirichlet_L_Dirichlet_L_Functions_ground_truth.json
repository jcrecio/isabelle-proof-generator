{"file_name": "/home/qj213/afp-2021-10-22/thys/Dirichlet_L/Dirichlet_L_Functions.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Dirichlet_L", "problem_names": ["lemma Dirichlet_L_conv_hurwitz_zeta_nonprincipal:\n  assumes \"s \\<noteq> 1\"\n  shows   \"Dirichlet_L n \\<chi> s =\n             of_nat n powr -s * (\\<Sum>k = 1..n. \\<chi> k * hurwitz_zeta (real k / real n) s)\"", "lemma holomorphic_Dirichlet_L_weak:\n  assumes \"m > 0\" \"1 \\<notin> A\"\n  shows   \"Dirichlet_L m \\<chi> holomorphic_on A\"", "lemma\n  fixes s :: complex\n  assumes s: \"Re s > 1\"\n  shows   abs_summable_Dirichlet_L:  \"summable (\\<lambda>n. norm (\\<chi> n * of_nat n powr -s))\"\n    and   summable_Dirichlet_L:      \"summable (\\<lambda>n. \\<chi> n * of_nat n powr -s)\"\n    and   sums_Dirichlet_L:          \"(\\<lambda>n. \\<chi> n * n powr -s) sums Dirichlet_L n \\<chi> s\"\n    and   Dirichlet_L_conv_eval_fds_weak: \"Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s\"", "lemma fds_abs_converges_weak: \"Re s > 1 \\<Longrightarrow> fds_abs_converges (fds \\<chi>) s\"", "lemma abs_conv_abscissa_weak: \"abs_conv_abscissa (fds \\<chi>) \\<le> 1\"", "lemma\n  fixes s :: complex assumes s: \"Re s > 1\"\n  shows   Dirichlet_L_euler_product_LIMSEQ:\n            \"(\\<lambda>n. \\<Prod>p\\<le>n. if prime p then inverse (1 - \\<chi> p / nat_power p s) else 1)\n                \\<longlonglongrightarrow> Dirichlet_L n \\<chi> s\" (is ?th1)\n    and   Dirichlet_L_abs_convergent_euler_product:\n            \"abs_convergent_prod (\\<lambda>p. if prime p  then inverse (1 - \\<chi> p / p powr s) else 1)\" \n            (is ?th2)", "lemma Dirichlet_L_Re_gt_1_nonzero:\n  assumes \"Re s > 1\"\n  shows   \"Dirichlet_L n \\<chi> s \\<noteq> 0\"", "lemma sum_dcharacter_antimono_bound:\n  fixes x0 a b :: real and f f' :: \"real \\<Rightarrow> real\"\n  assumes nonprincipal: \"\\<chi> \\<noteq> \\<chi>\\<^sub>0\"\n  assumes x0: \"x0 \\<ge> 0\" and ab: \"x0 \\<le> a\" \"a < b\"\n  assumes f': \"\\<And>x. x \\<ge> x0 \\<Longrightarrow> (f has_field_derivative f' x) (at x)\"\n  assumes f_nonneg: \"\\<And>x. x \\<ge> x0 \\<Longrightarrow> f x \\<ge> 0\"\n  assumes f'_nonpos: \"\\<And>x. x \\<ge> x0 \\<Longrightarrow> f' x \\<le> 0\"\n  shows   \"norm (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * (f (real n))) \\<le> 2 * real (totient n) * f a\"", "lemma summable_dcharacter_antimono:\n  fixes x0 a b :: real and f f' :: \"real \\<Rightarrow> real\"\n  assumes nonprincipal: \"\\<chi> \\<noteq> \\<chi>\\<^sub>0\"\n  assumes f': \"\\<And>x. x \\<ge> x0 \\<Longrightarrow> (f has_field_derivative f' x) (at x)\"\n  assumes f_nonneg: \"\\<And>x. x \\<ge> x0 \\<Longrightarrow> f x \\<ge> 0\"\n  assumes f'_nonpos: \"\\<And>x. x \\<ge> x0 \\<Longrightarrow> f' x \\<le> 0\"\n  assumes lim: \"(f \\<longlongrightarrow> 0) at_top\"\n  shows   \"summable (\\<lambda>n. \\<chi> n * f n)\"", "lemma conv_abscissa_le_0:\n  fixes s :: real\n  assumes nonprincipal: \"\\<chi> \\<noteq> \\<chi>\\<^sub>0\"\n  shows  \"conv_abscissa (fds \\<chi>) \\<le> 0\"", "lemma summable_Dirichlet_L':\n  assumes nonprincipal: \"\\<chi> \\<noteq> \\<chi>\\<^sub>0\"\n  assumes s: \"Re s > 0\"\n  shows  \"summable (\\<lambda>n. \\<chi> n * of_nat n powr -s)\"", "lemma \n  assumes \"\\<chi> \\<noteq> \\<chi>\\<^sub>0\"\n  shows   Dirichlet_L_conv_eval_fds: \"\\<And>s. Re s > 0 \\<Longrightarrow> Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s\"\n    and   holomorphic_Dirichlet_L:   \"Dirichlet_L n \\<chi> holomorphic_on A\"", "lemma cnj_Dirichlet_L: \n  \"cnj (Dirichlet_L n \\<chi> s) = Dirichlet_L n (inv_character \\<chi>) (cnj s)\"", "lemma holomorphic_Dirichlet_L [holomorphic_intros]:\n  assumes \"n > 1\" \"\\<chi> \\<noteq> principal_dchar n \\<and> dcharacter n \\<chi> \\<or> \\<chi> = principal_dchar n \\<and> 1 \\<notin> A\"\n  shows   \"Dirichlet_L n \\<chi> holomorphic_on A\"", "lemma holomorphic_Dirichlet_L' [holomorphic_intros]:\n  assumes \"n > 1\" \"f holomorphic_on A\" \n          \"\\<chi> \\<noteq> principal_dchar n \\<and> dcharacter n \\<chi> \\<or> \\<chi> = principal_dchar n \\<and> (\\<forall>x\\<in>A. f x \\<noteq> 1)\"\n  shows   \"(\\<lambda>s. Dirichlet_L n \\<chi> (f s)) holomorphic_on A\"", "lemma continuous_on_Dirichlet_L:\n  assumes \"n > 1\" \"\\<chi> \\<noteq> principal_dchar n \\<and> dcharacter n \\<chi> \\<or> \\<chi> = principal_dchar n \\<and> 1 \\<notin> A\"\n  shows   \"continuous_on A (Dirichlet_L n \\<chi>)\"", "lemma continuous_on_Dirichlet_L' [continuous_intros]:\n  assumes \"continuous_on A f\" \"n > 1\" \n      and \"\\<chi> \\<noteq> principal_dchar n \\<and> dcharacter n \\<chi> \\<or> \\<chi> = principal_dchar n \\<and> (\\<forall>x\\<in>A. f x \\<noteq> 1)\"\n  shows   \"continuous_on A (\\<lambda>x. Dirichlet_L n \\<chi> (f x))\"", "lemma Dirichlet_L_principal:\n  fixes s :: complex\n  shows   \"Dirichlet_L n \\<chi>\\<^sub>0 s = (\\<Prod>p | prime p \\<and> p dvd n. (1 - 1 / p powr s)) * zeta s\"\n            (is \"?f s = ?g s\")", "lemma coprime_prime_exists:\n  assumes \"n > (0 :: nat)\"\n  obtains p where \"prime p\" \"coprime p n\"", "theorem (in residues_nat) Dirichlet_L_Re_ge_1_nonzero_principal:\n  assumes \"Re s \\<ge> 1\" \"s \\<noteq> 1\"\n  shows   \"Dirichlet_L n (principal_dchar n) s \\<noteq> 0\"", "theorem Dirichlet_L_Re_ge_1_nonzero_nonprincipal:\n  assumes \"\\<chi> \\<noteq> \\<chi>\\<^sub>0\" and \"Re u \\<ge> 1\"\n  shows   \"Dirichlet_L n \\<chi> u \\<noteq> 0\"", "lemma sum_upto_dcharacter_le:\n  assumes \"\\<chi> \\<noteq> \\<chi>\\<^sub>0\"\n  shows   \"norm (sum_upto \\<chi> x) \\<le> totient n\"", "lemma Dirichlet_L_minus_partial_sum_bound:\n  fixes s :: complex and x :: real\n  assumes \"\\<chi> \\<noteq> \\<chi>\\<^sub>0\" and \"Re s > 0\" and \"x > 0\"\n  defines \"\\<sigma> \\<equiv> Re s\"\n  shows   \"norm (sum_upto (\\<lambda>n. \\<chi> n * n powr -s) x - Dirichlet_L n \\<chi> s) \\<le> \n             real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>\"", "lemma partial_Dirichlet_L_sum_bigo:\n  fixes s :: complex and x :: real\n  assumes \"\\<chi> \\<noteq> \\<chi>\\<^sub>0\" \"Re s > 0\"\n  shows   \"(\\<lambda>x. sum_upto (\\<lambda>n. \\<chi> n * n powr -s) x - Dirichlet_L n \\<chi> s) \\<in> O(\\<lambda>x. x powr -s)\"", "lemma Dirichlet_L_0_principal [simp]: \"Dirichlet_L n \\<chi>\\<^sub>0 0 = 0\"", "lemma Dirichlet_L_0_nonprincipal:\n  assumes nonprincipal: \"\\<chi> \\<noteq> \\<chi>\\<^sub>0\"\n  shows   \"Dirichlet_L n \\<chi> 0 = -(\\<Sum>k=1..<n. of_nat k * \\<chi> k) / of_nat n\"", "lemma Dirichlet_L_0_even [simp]:\n  assumes \"\\<chi> (n - 1) = 1\"\n  shows   \"Dirichlet_L n \\<chi> 0 = 0\"", "lemma Dirichlet_L_0:\n  \"Dirichlet_L n \\<chi> 0 = (if \\<chi> (n - 1) = 1 then 0 else -(\\<Sum>k=1..<n. of_nat k * \\<chi> k) / of_nat n)\"", "lemma Im_eq_0 [simp]: \"Im (\\<chi> k) = 0\"", "lemma of_real_Re [simp]: \"of_real (Re (\\<chi> k)) = \\<chi> k\"", "lemma char_cases: \"\\<chi> k \\<in> {-1, 0, 1}\"", "lemma cnj [simp]: \"cnj (\\<chi> k) = \\<chi> k\"", "lemma inv_character_id [simp]: \"inv_character \\<chi> = \\<chi>\"", "lemma Dirichlet_L_in_Reals:\n  assumes \"s \\<in> \\<real>\"\n  shows   \"Dirichlet_L n \\<chi> s \\<in> \\<real>\"", "lemma\n  assumes k: \"k > 0\"\n  shows sum_char_divisors_ge: \"Re (\\<Sum>d | d dvd k. \\<chi> d) \\<ge> 0\" (is \"Re (?A k) \\<ge> 0\")\n  and   sum_char_divisors_square_ge: \"is_square k \\<Longrightarrow> Re (\\<Sum>d | d dvd k. \\<chi> d) \\<ge> 1\""], "translations": [["", "lemma Dirichlet_L_conv_hurwitz_zeta_nonprincipal:\n  assumes \"s \\<noteq> 1\"\n  shows   \"Dirichlet_L n \\<chi> s =\n             of_nat n powr -s * (\\<Sum>k = 1..n. \\<chi> k * hurwitz_zeta (real k / real n) s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> s =\n    of_nat n powr - s *\n    (\\<Sum>k = 1..n. \\<chi> k * hurwitz_zeta (real k / real n) s)", "using assms"], ["proof (prove)\nusing this:\n  s \\<noteq> 1\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> s =\n    of_nat n powr - s *\n    (\\<Sum>k = 1..n. \\<chi> k * hurwitz_zeta (real k / real n) s)", "by (simp add: Dirichlet_L_def)"], ["", "text \\<open>\n  Analyticity everywhere except $1$ is trivial by the above definition, since the\n  Hurwitz $\\zeta$ function is analytic everywhere except $1$. For $L$ functions of non\n  principal characters, we will have to show the analyticity at $1$ separately later.\n\\<close>"], ["", "lemma holomorphic_Dirichlet_L_weak:\n  assumes \"m > 0\" \"1 \\<notin> A\"\n  shows   \"Dirichlet_L m \\<chi> holomorphic_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dirichlet_L m \\<chi> holomorphic_on A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Dirichlet_L m \\<chi> holomorphic_on A", "have \"(\\<lambda>s. of_nat m powr - s * (\\<Sum>k = 1..m. \\<chi> k * hurwitz_zeta (real k / real m) s))\n           holomorphic_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        of_nat m powr - s *\n        (\\<Sum>k = 1..m.\n            \\<chi> k * hurwitz_zeta (real k / real m) s)) holomorphic_on\n    A", "using assms"], ["proof (prove)\nusing this:\n  0 < m\n  1 \\<notin> A\n\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        of_nat m powr - s *\n        (\\<Sum>k = 1..m.\n            \\<chi> k * hurwitz_zeta (real k / real m) s)) holomorphic_on\n    A", "unfolding Dirichlet_L_def"], ["proof (prove)\nusing this:\n  0 < m\n  1 \\<notin> A\n\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        of_nat m powr - s *\n        (\\<Sum>k = 1..m.\n            \\<chi> k * hurwitz_zeta (real k / real m) s)) holomorphic_on\n    A", "by (intro holomorphic_intros) auto"], ["proof (state)\nthis:\n  (\\<lambda>s.\n      of_nat m powr - s *\n      (\\<Sum>k = 1..m.\n          \\<chi> k * hurwitz_zeta (real k / real m) s)) holomorphic_on\n  A\n\ngoal (1 subgoal):\n 1. Dirichlet_L m \\<chi> holomorphic_on A", "also"], ["proof (state)\nthis:\n  (\\<lambda>s.\n      of_nat m powr - s *\n      (\\<Sum>k = 1..m.\n          \\<chi> k * hurwitz_zeta (real k / real m) s)) holomorphic_on\n  A\n\ngoal (1 subgoal):\n 1. Dirichlet_L m \\<chi> holomorphic_on A", "have \"?this \\<longleftrightarrow> ?thesis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>s.\n         of_nat m powr - s *\n         (\\<Sum>k = 1..m.\n             \\<chi> k * hurwitz_zeta (real k / real m) s)) holomorphic_on\n     A) =\n    (Dirichlet_L m \\<chi> holomorphic_on A)", "using assms"], ["proof (prove)\nusing this:\n  0 < m\n  1 \\<notin> A\n\ngoal (1 subgoal):\n 1. ((\\<lambda>s.\n         of_nat m powr - s *\n         (\\<Sum>k = 1..m.\n             \\<chi> k * hurwitz_zeta (real k / real m) s)) holomorphic_on\n     A) =\n    (Dirichlet_L m \\<chi> holomorphic_on A)", "by (intro holomorphic_cong refl) (auto simp: Dirichlet_L_def)"], ["proof (state)\nthis:\n  ((\\<lambda>s.\n       of_nat m powr - s *\n       (\\<Sum>k = 1..m.\n           \\<chi> k * hurwitz_zeta (real k / real m) s)) holomorphic_on\n   A) =\n  (Dirichlet_L m \\<chi> holomorphic_on A)\n\ngoal (1 subgoal):\n 1. Dirichlet_L m \\<chi> holomorphic_on A", "finally"], ["proof (chain)\npicking this:\n  Dirichlet_L m \\<chi> holomorphic_on A", "show ?thesis"], ["proof (prove)\nusing this:\n  Dirichlet_L m \\<chi> holomorphic_on A\n\ngoal (1 subgoal):\n 1. Dirichlet_L m \\<chi> holomorphic_on A", "."], ["proof (state)\nthis:\n  Dirichlet_L m \\<chi> holomorphic_on A\n\ngoal:\nNo subgoals!", "qed"], ["", "(*<*)"], ["", "end"], ["", "(*>*)"], ["", "context dcharacter\nbegin"], ["", "(*<*)"], ["", "context\n  includes no_vec_lambda_notation dcharacter_syntax\nbegin"], ["", "(*>*)"], ["", "text \\<open>\n  For a real value greater than 1, the formal Dirichlet series of an $L$ function\n  for some character $\\chi$ converges to the L function.\n\\<close>"], ["", "lemma\n  fixes s :: complex\n  assumes s: \"Re s > 1\"\n  shows   abs_summable_Dirichlet_L:  \"summable (\\<lambda>n. norm (\\<chi> n * of_nat n powr -s))\"\n    and   summable_Dirichlet_L:      \"summable (\\<lambda>n. \\<chi> n * of_nat n powr -s)\"\n    and   sums_Dirichlet_L:          \"(\\<lambda>n. \\<chi> n * n powr -s) sums Dirichlet_L n \\<chi> s\"\n    and   Dirichlet_L_conv_eval_fds_weak: \"Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (summable (\\<lambda>n. cmod (\\<chi> n * of_nat n powr - s)) &&&\n     summable (\\<lambda>n. \\<chi> n * of_nat n powr - s)) &&&\n    (\\<lambda>n. \\<chi> n * of_nat n powr - s) sums\n    Dirichlet_L n \\<chi> s &&&\n    Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s", "proof -"], ["proof (state)\ngoal (4 subgoals):\n 1. summable (\\<lambda>n. cmod (\\<chi> n * of_nat n powr - s))\n 2. summable (\\<lambda>n. \\<chi> n * of_nat n powr - s)\n 3. (\\<lambda>n. \\<chi> n * of_nat n powr - s) sums Dirichlet_L n \\<chi> s\n 4. Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s", "define L where \"L = (\\<Sum>n. \\<chi> n * of_nat n powr -s)\""], ["proof (state)\nthis:\n  L = (\\<Sum>n. \\<chi> n * of_nat n powr - s)\n\ngoal (4 subgoals):\n 1. summable (\\<lambda>n. cmod (\\<chi> n * of_nat n powr - s))\n 2. summable (\\<lambda>n. \\<chi> n * of_nat n powr - s)\n 3. (\\<lambda>n. \\<chi> n * of_nat n powr - s) sums Dirichlet_L n \\<chi> s\n 4. Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s", "show \"summable (\\<lambda>n. norm (\\<chi> n * of_nat n powr -s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. cmod (\\<chi> n * of_nat n powr - s))", "by (subst summable_Suc_iff [symmetric], \n        rule summable_comparison_test [OF _ summable_zeta_real[of \"Re s\"]])\n        (insert s norm, auto intro!: exI[of _ 0] simp: norm_mult norm_powr_real_powr)"], ["proof (state)\nthis:\n  summable (\\<lambda>n. cmod (\\<chi> n * of_nat n powr - s))\n\ngoal (3 subgoals):\n 1. summable (\\<lambda>n. \\<chi> n * of_nat n powr - s)\n 2. (\\<lambda>n. \\<chi> n * of_nat n powr - s) sums Dirichlet_L n \\<chi> s\n 3. Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s", "thus summable: \"summable (\\<lambda>n. \\<chi> n * of_nat n powr -s)\""], ["proof (prove)\nusing this:\n  summable (\\<lambda>n. cmod (\\<chi> n * of_nat n powr - s))\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. \\<chi> n * of_nat n powr - s)", "by (rule summable_norm_cancel)"], ["proof (state)\nthis:\n  summable (\\<lambda>n. \\<chi> n * of_nat n powr - s)\n\ngoal (2 subgoals):\n 1. (\\<lambda>n. \\<chi> n * of_nat n powr - s) sums Dirichlet_L n \\<chi> s\n 2. Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s", "hence \"(\\<lambda>n. \\<chi> n * of_nat n powr -s) sums L\""], ["proof (prove)\nusing this:\n  summable (\\<lambda>n. \\<chi> n * of_nat n powr - s)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. \\<chi> n * of_nat n powr - s) sums L", "by (simp add: L_def sums_iff)"], ["proof (state)\nthis:\n  (\\<lambda>n. \\<chi> n * of_nat n powr - s) sums L\n\ngoal (2 subgoals):\n 1. (\\<lambda>n. \\<chi> n * of_nat n powr - s) sums Dirichlet_L n \\<chi> s\n 2. Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s", "from this"], ["proof (chain)\npicking this:\n  (\\<lambda>n. \\<chi> n * of_nat n powr - s) sums L", "have \"(\\<lambda>m. \\<Sum>k = m * n..<m * n + n. \\<chi> k * of_nat k powr - s) sums L\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. \\<chi> n * of_nat n powr - s) sums L\n\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        \\<Sum>k = m * n..<m * n + n. \\<chi> k * of_nat k powr - s) sums\n    L", "by (rule sums_group) (use n in auto)"], ["proof (state)\nthis:\n  (\\<lambda>m.\n      \\<Sum>k = m * n..<m * n + n. \\<chi> k * of_nat k powr - s) sums\n  L\n\ngoal (2 subgoals):\n 1. (\\<lambda>n. \\<chi> n * of_nat n powr - s) sums Dirichlet_L n \\<chi> s\n 2. Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s", "also"], ["proof (state)\nthis:\n  (\\<lambda>m.\n      \\<Sum>k = m * n..<m * n + n. \\<chi> k * of_nat k powr - s) sums\n  L\n\ngoal (2 subgoals):\n 1. (\\<lambda>n. \\<chi> n * of_nat n powr - s) sums Dirichlet_L n \\<chi> s\n 2. Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s", "have \"(\\<lambda>m. \\<Sum>k = m * n..<m * n + n. \\<chi> k * of_nat k powr - s) = \n               (\\<lambda>m. of_nat n powr -s * (\\<Sum>k = 1..n. \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        \\<Sum>k = m * n..<m * n + n. \\<chi> k * of_nat k powr - s) =\n    (\\<lambda>m.\n        of_nat n powr - s *\n        (\\<Sum>k = 1..n.\n            \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s))", "proof (rule ext, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       (\\<Sum>k = m * n..<m * n + n. \\<chi> k * of_nat k powr - s) =\n       of_nat n powr - s *\n       (\\<Sum>k = 1..n.\n           \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)", "case (1 m)"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>m.\n       (\\<Sum>k = m * n..<m * n + n. \\<chi> k * of_nat k powr - s) =\n       of_nat n powr - s *\n       (\\<Sum>k = 1..n.\n           \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)", "have \"(\\<Sum>k = m * n..<m * n + n. \\<chi> k * of_nat k powr - s) = \n            (\\<Sum>k=0..<n. \\<chi> (k + m * n) * of_nat (m * n + k) powr - s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = m * n..<m * n + n. \\<chi> k * of_nat k powr - s) =\n    (\\<Sum>k = 0..<n. \\<chi> (k + m * n) * of_nat (m * n + k) powr - s)", "by (intro sum.reindex_bij_witness[of _ \"\\<lambda>k. k + m * n\" \"\\<lambda>k. k - m * n\"]) auto"], ["proof (state)\nthis:\n  (\\<Sum>k = m * n..<m * n + n. \\<chi> k * of_nat k powr - s) =\n  (\\<Sum>k = 0..<n. \\<chi> (k + m * n) * of_nat (m * n + k) powr - s)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       (\\<Sum>k = m * n..<m * n + n. \\<chi> k * of_nat k powr - s) =\n       of_nat n powr - s *\n       (\\<Sum>k = 1..n.\n           \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = m * n..<m * n + n. \\<chi> k * of_nat k powr - s) =\n  (\\<Sum>k = 0..<n. \\<chi> (k + m * n) * of_nat (m * n + k) powr - s)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       (\\<Sum>k = m * n..<m * n + n. \\<chi> k * of_nat k powr - s) =\n       of_nat n powr - s *\n       (\\<Sum>k = 1..n.\n           \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)", "have \"\\<dots> = (\\<Sum>k=0..<n. \\<chi> k * of_nat (m * n + k) powr - s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..<n. \\<chi> (k + m * n) * of_nat (m * n + k) powr - s) =\n    (\\<Sum>k = 0..<n. \\<chi> k * of_nat (m * n + k) powr - s)", "by (simp add: periodic_mult)"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..<n. \\<chi> (k + m * n) * of_nat (m * n + k) powr - s) =\n  (\\<Sum>k = 0..<n. \\<chi> k * of_nat (m * n + k) powr - s)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       (\\<Sum>k = m * n..<m * n + n. \\<chi> k * of_nat k powr - s) =\n       of_nat n powr - s *\n       (\\<Sum>k = 1..n.\n           \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..<n. \\<chi> (k + m * n) * of_nat (m * n + k) powr - s) =\n  (\\<Sum>k = 0..<n. \\<chi> k * of_nat (m * n + k) powr - s)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       (\\<Sum>k = m * n..<m * n + n. \\<chi> k * of_nat k powr - s) =\n       of_nat n powr - s *\n       (\\<Sum>k = 1..n.\n           \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)", "have \"\\<dots> = (\\<Sum>k=0..<n. \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s * of_nat n powr -s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..<n. \\<chi> k * of_nat (m * n + k) powr - s) =\n    (\\<Sum>k = 0..<n.\n        \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s *\n        of_nat n powr - s)", "proof (intro sum.cong refl, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {0..<n} \\<Longrightarrow>\n       \\<chi> x * of_nat (m * n + x) powr - s =\n       \\<chi> x * (of_nat m + of_nat x / of_nat n) powr - s *\n       of_nat n powr - s", "case (1 k)"], ["proof (state)\nthis:\n  k \\<in> {0..<n}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {0..<n} \\<Longrightarrow>\n       \\<chi> x * of_nat (m * n + x) powr - s =\n       \\<chi> x * (of_nat m + of_nat x / of_nat n) powr - s *\n       of_nat n powr - s", "have \"of_nat (m * n + k) = (of_nat m + of_nat k / of_nat n :: complex) * of_nat n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_nat (m * n + k) = (of_nat m + of_nat k / of_nat n) * of_nat n", "using n"], ["proof (prove)\nusing this:\n  1 < n\n\ngoal (1 subgoal):\n 1. of_nat (m * n + k) = (of_nat m + of_nat k / of_nat n) * of_nat n", "by (simp add: divide_simps del: div_mult_self1 div_mult_self2 div_mult_self3 div_mult_self4)"], ["proof (state)\nthis:\n  of_nat (m * n + k) = (of_nat m + of_nat k / of_nat n) * of_nat n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {0..<n} \\<Longrightarrow>\n       \\<chi> x * of_nat (m * n + x) powr - s =\n       \\<chi> x * (of_nat m + of_nat x / of_nat n) powr - s *\n       of_nat n powr - s", "also"], ["proof (state)\nthis:\n  of_nat (m * n + k) = (of_nat m + of_nat k / of_nat n) * of_nat n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {0..<n} \\<Longrightarrow>\n       \\<chi> x * of_nat (m * n + x) powr - s =\n       \\<chi> x * (of_nat m + of_nat x / of_nat n) powr - s *\n       of_nat n powr - s", "have \"\\<dots> powr -s = (of_nat m + of_nat k / of_nat n) powr -s * of_nat n powr -s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((of_nat m + of_nat k / of_nat n) * of_nat n) powr - s =\n    (of_nat m + of_nat k / of_nat n) powr - s * of_nat n powr - s", "by (rule powr_times_real) auto"], ["proof (state)\nthis:\n  ((of_nat m + of_nat k / of_nat n) * of_nat n) powr - s =\n  (of_nat m + of_nat k / of_nat n) powr - s * of_nat n powr - s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {0..<n} \\<Longrightarrow>\n       \\<chi> x * of_nat (m * n + x) powr - s =\n       \\<chi> x * (of_nat m + of_nat x / of_nat n) powr - s *\n       of_nat n powr - s", "finally"], ["proof (chain)\npicking this:\n  of_nat (m * n + k) powr - s =\n  (of_nat m + of_nat k / of_nat n) powr - s * of_nat n powr - s", "show ?case"], ["proof (prove)\nusing this:\n  of_nat (m * n + k) powr - s =\n  (of_nat m + of_nat k / of_nat n) powr - s * of_nat n powr - s\n\ngoal (1 subgoal):\n 1. \\<chi> k * of_nat (m * n + k) powr - s =\n    \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s * of_nat n powr - s", "by simp"], ["proof (state)\nthis:\n  \\<chi> k * of_nat (m * n + k) powr - s =\n  \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s * of_nat n powr - s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..<n. \\<chi> k * of_nat (m * n + k) powr - s) =\n  (\\<Sum>k = 0..<n.\n      \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s *\n      of_nat n powr - s)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       (\\<Sum>k = m * n..<m * n + n. \\<chi> k * of_nat k powr - s) =\n       of_nat n powr - s *\n       (\\<Sum>k = 1..n.\n           \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..<n. \\<chi> k * of_nat (m * n + k) powr - s) =\n  (\\<Sum>k = 0..<n.\n      \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s *\n      of_nat n powr - s)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       (\\<Sum>k = m * n..<m * n + n. \\<chi> k * of_nat k powr - s) =\n       of_nat n powr - s *\n       (\\<Sum>k = 1..n.\n           \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)", "have \"\\<dots> = of_nat n powr -s * (\\<Sum>k=0..<n. \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..<n.\n        \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s *\n        of_nat n powr - s) =\n    of_nat n powr - s *\n    (\\<Sum>k = 0..<n. \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)", "by (subst sum_distrib_left) (simp_all add: mult_ac)"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..<n.\n      \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s *\n      of_nat n powr - s) =\n  of_nat n powr - s *\n  (\\<Sum>k = 0..<n. \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       (\\<Sum>k = m * n..<m * n + n. \\<chi> k * of_nat k powr - s) =\n       of_nat n powr - s *\n       (\\<Sum>k = 1..n.\n           \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..<n.\n      \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s *\n      of_nat n powr - s) =\n  of_nat n powr - s *\n  (\\<Sum>k = 0..<n. \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       (\\<Sum>k = m * n..<m * n + n. \\<chi> k * of_nat k powr - s) =\n       of_nat n powr - s *\n       (\\<Sum>k = 1..n.\n           \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)", "have \"(\\<Sum>k = 0..<n. \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s) =\n                 (\\<Sum>k = 1..<n. \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..<n.\n        \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s) =\n    (\\<Sum>k = 1..<n. \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)", "by (intro sum.mono_neutral_right) (auto simp: Suc_le_eq)"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..<n. \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s) =\n  (\\<Sum>k = 1..<n. \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       (\\<Sum>k = m * n..<m * n + n. \\<chi> k * of_nat k powr - s) =\n       of_nat n powr - s *\n       (\\<Sum>k = 1..n.\n           \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..<n. \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s) =\n  (\\<Sum>k = 1..<n. \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       (\\<Sum>k = m * n..<m * n + n. \\<chi> k * of_nat k powr - s) =\n       of_nat n powr - s *\n       (\\<Sum>k = 1..n.\n           \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)", "have \"\\<dots> = (\\<Sum>k = 1..n. \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..<n.\n        \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s) =\n    (\\<Sum>k = 1..n. \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)", "using periodic_mult[of 0 1]"], ["proof (prove)\nusing this:\n  \\<chi> (0 + 1 * n) = \\<chi> 0\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..<n.\n        \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s) =\n    (\\<Sum>k = 1..n. \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)", "by (intro sum.mono_neutral_left) auto"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..<n. \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s) =\n  (\\<Sum>k = 1..n. \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       (\\<Sum>k = m * n..<m * n + n. \\<chi> k * of_nat k powr - s) =\n       of_nat n powr - s *\n       (\\<Sum>k = 1..n.\n           \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>k = m * n..<m * n + n. \\<chi> k * of_nat k powr - s) =\n  of_nat n powr - s *\n  (\\<Sum>k = 1..n. \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)", "show ?case"], ["proof (prove)\nusing this:\n  (\\<Sum>k = m * n..<m * n + n. \\<chi> k * of_nat k powr - s) =\n  of_nat n powr - s *\n  (\\<Sum>k = 1..n. \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = m * n..<m * n + n. \\<chi> k * of_nat k powr - s) =\n    of_nat n powr - s *\n    (\\<Sum>k = 1..n. \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)", "."], ["proof (state)\nthis:\n  (\\<Sum>k = m * n..<m * n + n. \\<chi> k * of_nat k powr - s) =\n  of_nat n powr - s *\n  (\\<Sum>k = 1..n. \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>m. \\<Sum>k = m * n..<m * n + n. \\<chi> k * of_nat k powr - s) =\n  (\\<lambda>m.\n      of_nat n powr - s *\n      (\\<Sum>k = 1..n.\n          \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s))\n\ngoal (2 subgoals):\n 1. (\\<lambda>n. \\<chi> n * of_nat n powr - s) sums Dirichlet_L n \\<chi> s\n 2. Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>m.\n      of_nat n powr - s *\n      (\\<Sum>k = 1..n.\n          \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)) sums\n  L", "have \"\\<dots> sums L\""], ["proof (prove)\nusing this:\n  (\\<lambda>m.\n      of_nat n powr - s *\n      (\\<Sum>k = 1..n.\n          \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)) sums\n  L\n\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        of_nat n powr - s *\n        (\\<Sum>k = 1..n.\n            \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)) sums\n    L", "."], ["proof (state)\nthis:\n  (\\<lambda>m.\n      of_nat n powr - s *\n      (\\<Sum>k = 1..n.\n          \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)) sums\n  L\n\ngoal (2 subgoals):\n 1. (\\<lambda>n. \\<chi> n * of_nat n powr - s) sums Dirichlet_L n \\<chi> s\n 2. Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>m.\n      of_nat n powr - s *\n      (\\<Sum>k = 1..n.\n          \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)) sums\n  L\n\ngoal (2 subgoals):\n 1. (\\<lambda>n. \\<chi> n * of_nat n powr - s) sums Dirichlet_L n \\<chi> s\n 2. Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s", "have \"(\\<lambda>m. of_nat n powr - s * (\\<Sum>k=1..n. \\<chi> k * (of_nat m + of_real (of_nat k / of_nat n)) powr - s)) sums\n                   (of_nat n powr - s * (\\<Sum>k=1..n. \\<chi> k * hurwitz_zeta (of_nat k / of_nat n) s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        of_nat n powr - s *\n        (\\<Sum>k = 1..n.\n            \\<chi> k *\n            (of_nat m + complex_of_real (real k / real n)) powr - s)) sums\n    (of_nat n powr - s *\n     (\\<Sum>k = 1..n. \\<chi> k * hurwitz_zeta (real k / real n) s))", "using s"], ["proof (prove)\nusing this:\n  1 < Re s\n\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        of_nat n powr - s *\n        (\\<Sum>k = 1..n.\n            \\<chi> k *\n            (of_nat m + complex_of_real (real k / real n)) powr - s)) sums\n    (of_nat n powr - s *\n     (\\<Sum>k = 1..n. \\<chi> k * hurwitz_zeta (real k / real n) s))", "by (intro sums_sum sums_mult sums_hurwitz_zeta) auto"], ["proof (state)\nthis:\n  (\\<lambda>m.\n      of_nat n powr - s *\n      (\\<Sum>k = 1..n.\n          \\<chi> k *\n          (of_nat m + complex_of_real (real k / real n)) powr - s)) sums\n  (of_nat n powr - s *\n   (\\<Sum>k = 1..n. \\<chi> k * hurwitz_zeta (real k / real n) s))\n\ngoal (2 subgoals):\n 1. (\\<lambda>n. \\<chi> n * of_nat n powr - s) sums Dirichlet_L n \\<chi> s\n 2. Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>m.\n      of_nat n powr - s *\n      (\\<Sum>k = 1..n.\n          \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)) sums\n  L\n  (\\<lambda>m.\n      of_nat n powr - s *\n      (\\<Sum>k = 1..n.\n          \\<chi> k *\n          (of_nat m + complex_of_real (real k / real n)) powr - s)) sums\n  (of_nat n powr - s *\n   (\\<Sum>k = 1..n. \\<chi> k * hurwitz_zeta (real k / real n) s))", "have \"L = \\<dots>\""], ["proof (prove)\nusing this:\n  (\\<lambda>m.\n      of_nat n powr - s *\n      (\\<Sum>k = 1..n.\n          \\<chi> k * (of_nat m + of_nat k / of_nat n) powr - s)) sums\n  L\n  (\\<lambda>m.\n      of_nat n powr - s *\n      (\\<Sum>k = 1..n.\n          \\<chi> k *\n          (of_nat m + complex_of_real (real k / real n)) powr - s)) sums\n  (of_nat n powr - s *\n   (\\<Sum>k = 1..n. \\<chi> k * hurwitz_zeta (real k / real n) s))\n\ngoal (1 subgoal):\n 1. L =\n    of_nat n powr - s *\n    (\\<Sum>k = 1..n. \\<chi> k * hurwitz_zeta (real k / real n) s)", "by (simp add: sums_iff)"], ["proof (state)\nthis:\n  L =\n  of_nat n powr - s *\n  (\\<Sum>k = 1..n. \\<chi> k * hurwitz_zeta (real k / real n) s)\n\ngoal (2 subgoals):\n 1. (\\<lambda>n. \\<chi> n * of_nat n powr - s) sums Dirichlet_L n \\<chi> s\n 2. Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s", "also"], ["proof (state)\nthis:\n  L =\n  of_nat n powr - s *\n  (\\<Sum>k = 1..n. \\<chi> k * hurwitz_zeta (real k / real n) s)\n\ngoal (2 subgoals):\n 1. (\\<lambda>n. \\<chi> n * of_nat n powr - s) sums Dirichlet_L n \\<chi> s\n 2. Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s", "have \"\\<dots> = Dirichlet_L n \\<chi> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_nat n powr - s *\n    (\\<Sum>k = 1..n. \\<chi> k * hurwitz_zeta (real k / real n) s) =\n    Dirichlet_L n \\<chi> s", "using assms"], ["proof (prove)\nusing this:\n  1 < Re s\n\ngoal (1 subgoal):\n 1. of_nat n powr - s *\n    (\\<Sum>k = 1..n. \\<chi> k * hurwitz_zeta (real k / real n) s) =\n    Dirichlet_L n \\<chi> s", "by (auto simp: Dirichlet_L_def)"], ["proof (state)\nthis:\n  of_nat n powr - s *\n  (\\<Sum>k = 1..n. \\<chi> k * hurwitz_zeta (real k / real n) s) =\n  Dirichlet_L n \\<chi> s\n\ngoal (2 subgoals):\n 1. (\\<lambda>n. \\<chi> n * of_nat n powr - s) sums Dirichlet_L n \\<chi> s\n 2. Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s", "finally"], ["proof (chain)\npicking this:\n  L = Dirichlet_L n \\<chi> s", "have \"Dirichlet_L n \\<chi> s = (\\<Sum>n. \\<chi> n * of_nat n powr -s)\""], ["proof (prove)\nusing this:\n  L = Dirichlet_L n \\<chi> s\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> s = (\\<Sum>n. \\<chi> n * of_nat n powr - s)", "by (simp add: L_def)"], ["proof (state)\nthis:\n  Dirichlet_L n \\<chi> s = (\\<Sum>n. \\<chi> n * of_nat n powr - s)\n\ngoal (2 subgoals):\n 1. (\\<lambda>n. \\<chi> n * of_nat n powr - s) sums Dirichlet_L n \\<chi> s\n 2. Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s", "with summable"], ["proof (chain)\npicking this:\n  summable (\\<lambda>n. \\<chi> n * of_nat n powr - s)\n  Dirichlet_L n \\<chi> s = (\\<Sum>n. \\<chi> n * of_nat n powr - s)", "show \"(\\<lambda>n. \\<chi> n * n powr -s) sums Dirichlet_L n \\<chi> s\""], ["proof (prove)\nusing this:\n  summable (\\<lambda>n. \\<chi> n * of_nat n powr - s)\n  Dirichlet_L n \\<chi> s = (\\<Sum>n. \\<chi> n * of_nat n powr - s)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. \\<chi> n * of_nat n powr - s) sums Dirichlet_L n \\<chi> s", "by (simp add: sums_iff L_def)"], ["proof (state)\nthis:\n  (\\<lambda>n. \\<chi> n * of_nat n powr - s) sums Dirichlet_L n \\<chi> s\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s", "thus \"Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. \\<chi> n * of_nat n powr - s) sums Dirichlet_L n \\<chi> s\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s", "by (simp add: eval_fds_def sums_iff powr_minus field_simps fds_nth_fds')"], ["proof (state)\nthis:\n  Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fds_abs_converges_weak: \"Re s > 1 \\<Longrightarrow> fds_abs_converges (fds \\<chi>) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < Re s \\<Longrightarrow> fds_abs_converges (fds \\<chi>) s", "using abs_summable_Dirichlet_L[of s]"], ["proof (prove)\nusing this:\n  1 < Re s \\<Longrightarrow>\n  summable (\\<lambda>n. cmod (\\<chi> n * of_nat n powr - s))\n\ngoal (1 subgoal):\n 1. 1 < Re s \\<Longrightarrow> fds_abs_converges (fds \\<chi>) s", "by (simp add: fds_abs_converges_def powr_minus divide_simps fds_nth_fds')"], ["", "lemma abs_conv_abscissa_weak: \"abs_conv_abscissa (fds \\<chi>) \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. abs_conv_abscissa (fds \\<chi>) \\<le> 1", "proof (rule abs_conv_abscissa_leI, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c'.\n       1 < ereal c' \\<Longrightarrow>\n       \\<exists>s.\n          s \\<bullet> 1 = c' \\<and> fds_abs_converges (fds \\<chi>) s", "case (1 c)"], ["proof (state)\nthis:\n  1 < ereal c\n\ngoal (1 subgoal):\n 1. \\<And>c'.\n       1 < ereal c' \\<Longrightarrow>\n       \\<exists>s.\n          s \\<bullet> 1 = c' \\<and> fds_abs_converges (fds \\<chi>) s", "thus ?case"], ["proof (prove)\nusing this:\n  1 < ereal c\n\ngoal (1 subgoal):\n 1. \\<exists>s. s \\<bullet> 1 = c \\<and> fds_abs_converges (fds \\<chi>) s", "by (intro exI[of _ \"of_real c\"] conjI fds_abs_converges_weak) auto"], ["proof (state)\nthis:\n  \\<exists>s. s \\<bullet> 1 = c \\<and> fds_abs_converges (fds \\<chi>) s\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Dirichlet $L$ functions have the Euler product expansion\n  \\[L(\\chi, s) = \\prod_p \\left(1 - \\frac{\\chi(p)}{p^{-s}}\\right)\\]\n  for all $s$ with $\\mathfrak{R}(s) > 1$.\n\\<close>"], ["", "lemma\n  fixes s :: complex assumes s: \"Re s > 1\"\n  shows   Dirichlet_L_euler_product_LIMSEQ:\n            \"(\\<lambda>n. \\<Prod>p\\<le>n. if prime p then inverse (1 - \\<chi> p / nat_power p s) else 1)\n                \\<longlonglongrightarrow> Dirichlet_L n \\<chi> s\" (is ?th1)\n    and   Dirichlet_L_abs_convergent_euler_product:\n            \"abs_convergent_prod (\\<lambda>p. if prime p  then inverse (1 - \\<chi> p / p powr s) else 1)\" \n            (is ?th2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Prod>p\\<le>n.\n           if prime p then inverse (1 - \\<chi> p / nat_power p s) else 1)\n    \\<longlonglongrightarrow> Dirichlet_L n \\<chi> s &&&\n    abs_convergent_prod\n     (\\<lambda>p.\n         if prime p then inverse (1 - \\<chi> p / of_nat p powr s) else 1)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>n.\n        \\<Prod>p\\<le>n.\n           if prime p then inverse (1 - \\<chi> p / nat_power p s) else 1)\n    \\<longlonglongrightarrow> Dirichlet_L n \\<chi> s\n 2. abs_convergent_prod\n     (\\<lambda>p.\n         if prime p then inverse (1 - \\<chi> p / of_nat p powr s) else 1)", "have mult: \"completely_multiplicative_function (fds_nth (fds \\<chi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. completely_multiplicative_function (fds_nth (fds \\<chi>))", "using mult.completely_multiplicative_function_axioms"], ["proof (prove)\nusing this:\n  completely_multiplicative_function \\<chi>\n\ngoal (1 subgoal):\n 1. completely_multiplicative_function (fds_nth (fds \\<chi>))", "by (simp add: fds_nth_fds')"], ["proof (state)\nthis:\n  completely_multiplicative_function (fds_nth (fds \\<chi>))\n\ngoal (2 subgoals):\n 1. (\\<lambda>n.\n        \\<Prod>p\\<le>n.\n           if prime p then inverse (1 - \\<chi> p / nat_power p s) else 1)\n    \\<longlonglongrightarrow> Dirichlet_L n \\<chi> s\n 2. abs_convergent_prod\n     (\\<lambda>p.\n         if prime p then inverse (1 - \\<chi> p / of_nat p powr s) else 1)", "have conv: \"fds_abs_converges (fds \\<chi>) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fds_abs_converges (fds \\<chi>) s", "using abs_summable_Dirichlet_L[OF s]"], ["proof (prove)\nusing this:\n  summable (\\<lambda>n. cmod (\\<chi> n * of_nat n powr - s))\n\ngoal (1 subgoal):\n 1. fds_abs_converges (fds \\<chi>) s", "by (simp add: fds_abs_converges_def fds_nth_fds' powr_minus divide_simps)"], ["proof (state)\nthis:\n  fds_abs_converges (fds \\<chi>) s\n\ngoal (2 subgoals):\n 1. (\\<lambda>n.\n        \\<Prod>p\\<le>n.\n           if prime p then inverse (1 - \\<chi> p / nat_power p s) else 1)\n    \\<longlonglongrightarrow> Dirichlet_L n \\<chi> s\n 2. abs_convergent_prod\n     (\\<lambda>p.\n         if prime p then inverse (1 - \\<chi> p / of_nat p powr s) else 1)", "have \"(\\<lambda>n. \\<Prod>p\\<le>n. if prime p then inverse (1 - \\<chi> p / nat_power p s) else 1)\n          \\<longlonglongrightarrow> eval_fds (fds \\<chi>) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Prod>p\\<le>n.\n           if prime p then inverse (1 - \\<chi> p / nat_power p s) else 1)\n    \\<longlonglongrightarrow> eval_fds (fds \\<chi>) s", "using fds_euler_product_LIMSEQ' [OF mult conv]"], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      \\<Prod>p\\<le>n.\n         if prime p\n         then inverse (1 - fds_nth (fds \\<chi>) p / nat_power p s) else 1)\n  \\<longlonglongrightarrow> eval_fds (fds \\<chi>) s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Prod>p\\<le>n.\n           if prime p then inverse (1 - \\<chi> p / nat_power p s) else 1)\n    \\<longlonglongrightarrow> eval_fds (fds \\<chi>) s", "by (simp add: fds_nth_fds' cong: if_cong)"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      \\<Prod>p\\<le>n.\n         if prime p then inverse (1 - \\<chi> p / nat_power p s) else 1)\n  \\<longlonglongrightarrow> eval_fds (fds \\<chi>) s\n\ngoal (2 subgoals):\n 1. (\\<lambda>n.\n        \\<Prod>p\\<le>n.\n           if prime p then inverse (1 - \\<chi> p / nat_power p s) else 1)\n    \\<longlonglongrightarrow> Dirichlet_L n \\<chi> s\n 2. abs_convergent_prod\n     (\\<lambda>p.\n         if prime p then inverse (1 - \\<chi> p / of_nat p powr s) else 1)", "also"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      \\<Prod>p\\<le>n.\n         if prime p then inverse (1 - \\<chi> p / nat_power p s) else 1)\n  \\<longlonglongrightarrow> eval_fds (fds \\<chi>) s\n\ngoal (2 subgoals):\n 1. (\\<lambda>n.\n        \\<Prod>p\\<le>n.\n           if prime p then inverse (1 - \\<chi> p / nat_power p s) else 1)\n    \\<longlonglongrightarrow> Dirichlet_L n \\<chi> s\n 2. abs_convergent_prod\n     (\\<lambda>p.\n         if prime p then inverse (1 - \\<chi> p / of_nat p powr s) else 1)", "have \"eval_fds (fds \\<chi>) s = Dirichlet_L n \\<chi> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval_fds (fds \\<chi>) s = Dirichlet_L n \\<chi> s", "using sums_Dirichlet_L[OF s]"], ["proof (prove)\nusing this:\n  (\\<lambda>n. \\<chi> n * of_nat n powr - s) sums Dirichlet_L n \\<chi> s\n\ngoal (1 subgoal):\n 1. eval_fds (fds \\<chi>) s = Dirichlet_L n \\<chi> s", "unfolding eval_fds_def"], ["proof (prove)\nusing this:\n  (\\<lambda>n. \\<chi> n * of_nat n powr - s) sums Dirichlet_L n \\<chi> s\n\ngoal (1 subgoal):\n 1. (\\<Sum>n. fds_nth (fds \\<chi>) n / nat_power n s) =\n    Dirichlet_L n \\<chi> s", "by (simp add: sums_iff fds_nth_fds' powr_minus divide_simps)"], ["proof (state)\nthis:\n  eval_fds (fds \\<chi>) s = Dirichlet_L n \\<chi> s\n\ngoal (2 subgoals):\n 1. (\\<lambda>n.\n        \\<Prod>p\\<le>n.\n           if prime p then inverse (1 - \\<chi> p / nat_power p s) else 1)\n    \\<longlonglongrightarrow> Dirichlet_L n \\<chi> s\n 2. abs_convergent_prod\n     (\\<lambda>p.\n         if prime p then inverse (1 - \\<chi> p / of_nat p powr s) else 1)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>n.\n      \\<Prod>p\\<le>n.\n         if prime p then inverse (1 - \\<chi> p / nat_power p s) else 1)\n  \\<longlonglongrightarrow> Dirichlet_L n \\<chi> s", "show ?th1"], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      \\<Prod>p\\<le>n.\n         if prime p then inverse (1 - \\<chi> p / nat_power p s) else 1)\n  \\<longlonglongrightarrow> Dirichlet_L n \\<chi> s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Prod>p\\<le>n.\n           if prime p then inverse (1 - \\<chi> p / nat_power p s) else 1)\n    \\<longlonglongrightarrow> Dirichlet_L n \\<chi> s", "."], ["proof (state)\nthis:\n  (\\<lambda>n.\n      \\<Prod>p\\<le>n.\n         if prime p then inverse (1 - \\<chi> p / nat_power p s) else 1)\n  \\<longlonglongrightarrow> Dirichlet_L n \\<chi> s\n\ngoal (1 subgoal):\n 1. abs_convergent_prod\n     (\\<lambda>p.\n         if prime p then inverse (1 - \\<chi> p / of_nat p powr s) else 1)", "from fds_abs_convergent_euler_product' [OF mult conv]"], ["proof (chain)\npicking this:\n  abs_convergent_prod\n   (\\<lambda>p.\n       if prime p then inverse (1 - fds_nth (fds \\<chi>) p / nat_power p s)\n       else 1)", "show ?th2"], ["proof (prove)\nusing this:\n  abs_convergent_prod\n   (\\<lambda>p.\n       if prime p then inverse (1 - fds_nth (fds \\<chi>) p / nat_power p s)\n       else 1)\n\ngoal (1 subgoal):\n 1. abs_convergent_prod\n     (\\<lambda>p.\n         if prime p then inverse (1 - \\<chi> p / of_nat p powr s) else 1)", "by (simp add: fds_nth_fds cong: if_cong)"], ["proof (state)\nthis:\n  abs_convergent_prod\n   (\\<lambda>p.\n       if prime p then inverse (1 - \\<chi> p / of_nat p powr s) else 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Dirichlet_L_Re_gt_1_nonzero:\n  assumes \"Re s > 1\"\n  shows   \"Dirichlet_L n \\<chi> s \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> s \\<noteq> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> s \\<noteq> 0", "have \"completely_multiplicative_function (fds_nth (fds \\<chi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. completely_multiplicative_function (fds_nth (fds \\<chi>))", "by (simp add: fds_nth_fds' mult.completely_multiplicative_function_axioms)"], ["proof (state)\nthis:\n  completely_multiplicative_function (fds_nth (fds \\<chi>))\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> s \\<noteq> 0", "moreover"], ["proof (state)\nthis:\n  completely_multiplicative_function (fds_nth (fds \\<chi>))\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> s \\<noteq> 0", "have \"fds_abs_converges (fds \\<chi>) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fds_abs_converges (fds \\<chi>) s", "using abs_summable_Dirichlet_L[OF assms]"], ["proof (prove)\nusing this:\n  summable (\\<lambda>n. cmod (\\<chi> n * of_nat n powr - s))\n\ngoal (1 subgoal):\n 1. fds_abs_converges (fds \\<chi>) s", "by (simp add: fds_abs_converges_def fds_nth_fds' powr_minus divide_simps)"], ["proof (state)\nthis:\n  fds_abs_converges (fds \\<chi>) s\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> s \\<noteq> 0", "ultimately"], ["proof (chain)\npicking this:\n  completely_multiplicative_function (fds_nth (fds \\<chi>))\n  fds_abs_converges (fds \\<chi>) s", "have \"(eval_fds (fds \\<chi>) s = 0) \\<longleftrightarrow> (\\<exists>p. prime p \\<and> fds_nth (fds \\<chi>) p = nat_power p s)\""], ["proof (prove)\nusing this:\n  completely_multiplicative_function (fds_nth (fds \\<chi>))\n  fds_abs_converges (fds \\<chi>) s\n\ngoal (1 subgoal):\n 1. (eval_fds (fds \\<chi>) s = 0) =\n    (\\<exists>p. prime p \\<and> fds_nth (fds \\<chi>) p = nat_power p s)", "by (rule fds_abs_convergent_zero_iff)"], ["proof (state)\nthis:\n  (eval_fds (fds \\<chi>) s = 0) =\n  (\\<exists>p. prime p \\<and> fds_nth (fds \\<chi>) p = nat_power p s)\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> s \\<noteq> 0", "also"], ["proof (state)\nthis:\n  (eval_fds (fds \\<chi>) s = 0) =\n  (\\<exists>p. prime p \\<and> fds_nth (fds \\<chi>) p = nat_power p s)\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> s \\<noteq> 0", "have \"eval_fds (fds \\<chi>) s = Dirichlet_L n \\<chi> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval_fds (fds \\<chi>) s = Dirichlet_L n \\<chi> s", "using Dirichlet_L_conv_eval_fds_weak[OF assms]"], ["proof (prove)\nusing this:\n  Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s\n\ngoal (1 subgoal):\n 1. eval_fds (fds \\<chi>) s = Dirichlet_L n \\<chi> s", "by simp"], ["proof (state)\nthis:\n  eval_fds (fds \\<chi>) s = Dirichlet_L n \\<chi> s\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> s \\<noteq> 0", "also"], ["proof (state)\nthis:\n  eval_fds (fds \\<chi>) s = Dirichlet_L n \\<chi> s\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> s \\<noteq> 0", "have \"\\<not>(\\<exists>p. prime p \\<and> fds_nth (fds \\<chi>) p = nat_power p s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>p. prime p \\<and> fds_nth (fds \\<chi>) p = nat_power p s", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>prime p; fds_nth (fds \\<chi>) p = nat_power p s\\<rbrakk>\n       \\<Longrightarrow> False", "fix p :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>prime p; fds_nth (fds \\<chi>) p = nat_power p s\\<rbrakk>\n       \\<Longrightarrow> False", "assume p: \"prime p\" \"fds_nth (fds \\<chi>) p = nat_power p s\""], ["proof (state)\nthis:\n  prime p\n  fds_nth (fds \\<chi>) p = nat_power p s\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>prime p; fds_nth (fds \\<chi>) p = nat_power p s\\<rbrakk>\n       \\<Longrightarrow> False", "from p"], ["proof (chain)\npicking this:\n  prime p\n  fds_nth (fds \\<chi>) p = nat_power p s", "have \"real 1 < real p\""], ["proof (prove)\nusing this:\n  prime p\n  fds_nth (fds \\<chi>) p = nat_power p s\n\ngoal (1 subgoal):\n 1. real 1 < real p", "by (subst of_nat_less_iff) (auto simp: prime_gt_Suc_0_nat)"], ["proof (state)\nthis:\n  real 1 < real p\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>prime p; fds_nth (fds \\<chi>) p = nat_power p s\\<rbrakk>\n       \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  real 1 < real p\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>prime p; fds_nth (fds \\<chi>) p = nat_power p s\\<rbrakk>\n       \\<Longrightarrow> False", "have \"\\<dots> = real p powr 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real p = real p powr 1", "by simp"], ["proof (state)\nthis:\n  real p = real p powr 1\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>prime p; fds_nth (fds \\<chi>) p = nat_power p s\\<rbrakk>\n       \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  real p = real p powr 1\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>prime p; fds_nth (fds \\<chi>) p = nat_power p s\\<rbrakk>\n       \\<Longrightarrow> False", "from p and assms"], ["proof (chain)\npicking this:\n  prime p\n  fds_nth (fds \\<chi>) p = nat_power p s\n  1 < Re s", "have \"real p powr 1 \\<le> real p powr Re s\""], ["proof (prove)\nusing this:\n  prime p\n  fds_nth (fds \\<chi>) p = nat_power p s\n  1 < Re s\n\ngoal (1 subgoal):\n 1. real p powr 1 \\<le> real p powr Re s", "by (intro powr_mono) (auto simp: real_of_nat_ge_one_iff prime_ge_Suc_0_nat)"], ["proof (state)\nthis:\n  real p powr 1 \\<le> real p powr Re s\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>prime p; fds_nth (fds \\<chi>) p = nat_power p s\\<rbrakk>\n       \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  real p powr 1 \\<le> real p powr Re s\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>prime p; fds_nth (fds \\<chi>) p = nat_power p s\\<rbrakk>\n       \\<Longrightarrow> False", "have \"\\<dots> = norm (nat_power p s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real p powr Re s = cmod (nat_power p s)", "by (simp add: norm_nat_power norm_powr_real_powr)"], ["proof (state)\nthis:\n  real p powr Re s = cmod (nat_power p s)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>prime p; fds_nth (fds \\<chi>) p = nat_power p s\\<rbrakk>\n       \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  real p powr Re s = cmod (nat_power p s)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>prime p; fds_nth (fds \\<chi>) p = nat_power p s\\<rbrakk>\n       \\<Longrightarrow> False", "have \"nat_power p s = fds_nth (fds \\<chi>) p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_power p s = fds_nth (fds \\<chi>) p", "using p"], ["proof (prove)\nusing this:\n  prime p\n  fds_nth (fds \\<chi>) p = nat_power p s\n\ngoal (1 subgoal):\n 1. nat_power p s = fds_nth (fds \\<chi>) p", "by simp"], ["proof (state)\nthis:\n  nat_power p s = fds_nth (fds \\<chi>) p\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>prime p; fds_nth (fds \\<chi>) p = nat_power p s\\<rbrakk>\n       \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  nat_power p s = fds_nth (fds \\<chi>) p\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>prime p; fds_nth (fds \\<chi>) p = nat_power p s\\<rbrakk>\n       \\<Longrightarrow> False", "have \"norm \\<dots> \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (fds_nth (fds \\<chi>) p) \\<le> 1", "by (auto simp: fds_nth_fds' norm)"], ["proof (state)\nthis:\n  cmod (fds_nth (fds \\<chi>) p) \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>prime p; fds_nth (fds \\<chi>) p = nat_power p s\\<rbrakk>\n       \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  real 1 < 1", "show False"], ["proof (prove)\nusing this:\n  real 1 < 1\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<nexists>p. prime p \\<and> fds_nth (fds \\<chi>) p = nat_power p s\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> s \\<noteq> 0", "finally"], ["proof (chain)\npicking this:\n  Dirichlet_L n \\<chi> s \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  Dirichlet_L n \\<chi> s \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> s \\<noteq> 0", "."], ["proof (state)\nthis:\n  Dirichlet_L n \\<chi> s \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_dcharacter_antimono_bound:\n  fixes x0 a b :: real and f f' :: \"real \\<Rightarrow> real\"\n  assumes nonprincipal: \"\\<chi> \\<noteq> \\<chi>\\<^sub>0\"\n  assumes x0: \"x0 \\<ge> 0\" and ab: \"x0 \\<le> a\" \"a < b\"\n  assumes f': \"\\<And>x. x \\<ge> x0 \\<Longrightarrow> (f has_field_derivative f' x) (at x)\"\n  assumes f_nonneg: \"\\<And>x. x \\<ge> x0 \\<Longrightarrow> f x \\<ge> 0\"\n  assumes f'_nonpos: \"\\<And>x. x \\<ge> x0 \\<Longrightarrow> f' x \\<le> 0\"\n  shows   \"norm (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * (f (real n))) \\<le> 2 * real (totient n) * f a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod\n     (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n)))\n    \\<le> 2 * real (totient n) * f a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cmod\n     (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n)))\n    \\<le> 2 * real (totient n) * f a", "note deriv = has_field_derivative_at_within [OF f']"], ["proof (state)\nthis:\n  x0 \\<le> ?x \\<Longrightarrow>\n  (f has_real_derivative f' ?x) (at ?x within ?s)\n\ngoal (1 subgoal):\n 1. cmod\n     (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n)))\n    \\<le> 2 * real (totient n) * f a", "let ?A = \"sum_upto \\<chi>\""], ["proof (state)\ngoal (1 subgoal):\n 1. cmod\n     (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n)))\n    \\<le> 2 * real (totient n) * f a", "have cont: \"continuous_on {a..b} f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on {a..b} f", "by (rule DERIV_continuous_on[OF deriv]) (use ab in auto)"], ["proof (state)\nthis:\n  continuous_on {a..b} f\n\ngoal (1 subgoal):\n 1. cmod\n     (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n)))\n    \\<le> 2 * real (totient n) * f a", "have I': \"(f' has_integral (f b - f a)) {a..b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f' has_integral f b - f a) {a..b}", "using ab deriv"], ["proof (prove)\nusing this:\n  x0 \\<le> a\n  a < b\n  x0 \\<le> ?x \\<Longrightarrow>\n  (f has_real_derivative f' ?x) (at ?x within ?s)\n\ngoal (1 subgoal):\n 1. (f' has_integral f b - f a) {a..b}", "by (intro fundamental_theorem_of_calculus)\n                      (auto simp: has_field_derivative_iff_has_vector_derivative [symmetric])"], ["proof (state)\nthis:\n  (f' has_integral f b - f a) {a..b}\n\ngoal (1 subgoal):\n 1. cmod\n     (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n)))\n    \\<le> 2 * real (totient n) * f a", "define I where \"I = integral {a..b} (\\<lambda>t. ?A t * of_real (f' t))\""], ["proof (state)\nthis:\n  I =\n  integral {a..b} (\\<lambda>t. sum_upto \\<chi> t * complex_of_real (f' t))\n\ngoal (1 subgoal):\n 1. cmod\n     (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n)))\n    \\<le> 2 * real (totient n) * f a", "define C where \"C = real (totient n)\""], ["proof (state)\nthis:\n  C = real (totient n)\n\ngoal (1 subgoal):\n 1. cmod\n     (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n)))\n    \\<le> 2 * real (totient n) * f a", "have C_nonneg: \"C \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> C", "by (simp add: C_def)"], ["proof (state)\nthis:\n  0 \\<le> C\n\ngoal (1 subgoal):\n 1. cmod\n     (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n)))\n    \\<le> 2 * real (totient n) * f a", "have C: \"norm (?A x) \\<le> C\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (sum_upto \\<chi> x) \\<le> C", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cmod (sum_upto \\<chi> x) \\<le> C", "have \"?A x = (\\<Sum>k\\<le>nat \\<lfloor>x\\<rfloor>. \\<chi> k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto \\<chi> x = sum \\<chi> {..nat \\<lfloor>x\\<rfloor>}", "unfolding sum_upto_altdef"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum \\<chi> {0<..nat \\<lfloor>x\\<rfloor>} =\n    sum \\<chi> {..nat \\<lfloor>x\\<rfloor>}", "by (intro sum.mono_neutral_left) auto"], ["proof (state)\nthis:\n  sum_upto \\<chi> x = sum \\<chi> {..nat \\<lfloor>x\\<rfloor>}\n\ngoal (1 subgoal):\n 1. cmod (sum_upto \\<chi> x) \\<le> C", "also"], ["proof (state)\nthis:\n  sum_upto \\<chi> x = sum \\<chi> {..nat \\<lfloor>x\\<rfloor>}\n\ngoal (1 subgoal):\n 1. cmod (sum_upto \\<chi> x) \\<le> C", "have \"norm \\<dots> \\<le> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {..nat \\<lfloor>x\\<rfloor>}) \\<le> C", "unfolding C_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {..nat \\<lfloor>x\\<rfloor>}) \\<le> real (totient n)", "using nonprincipal"], ["proof (prove)\nusing this:\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {..nat \\<lfloor>x\\<rfloor>}) \\<le> real (totient n)", "by (rule sum_dcharacter_atMost_le)"], ["proof (state)\nthis:\n  cmod (sum \\<chi> {..nat \\<lfloor>x\\<rfloor>}) \\<le> C\n\ngoal (1 subgoal):\n 1. cmod (sum_upto \\<chi> x) \\<le> C", "finally"], ["proof (chain)\npicking this:\n  cmod (sum_upto \\<chi> x) \\<le> C", "show ?thesis"], ["proof (prove)\nusing this:\n  cmod (sum_upto \\<chi> x) \\<le> C\n\ngoal (1 subgoal):\n 1. cmod (sum_upto \\<chi> x) \\<le> C", "."], ["proof (state)\nthis:\n  cmod (sum_upto \\<chi> x) \\<le> C\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cmod (sum_upto \\<chi> ?x) \\<le> C\n\ngoal (1 subgoal):\n 1. cmod\n     (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n)))\n    \\<le> 2 * real (totient n) * f a", "have I: \"((\\<lambda>t. ?A t * f' t) has_integral ?A b * f b - ?A a * f a - \n             (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * f (real n))) {a..b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. sum_upto \\<chi> t * complex_of_real (f' t)) has_integral\n     sum_upto \\<chi> b * complex_of_real (f b) -\n     sum_upto \\<chi> a * complex_of_real (f a) -\n     (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n))))\n     {a..b}", "using ab x0 cont f'"], ["proof (prove)\nusing this:\n  x0 \\<le> a\n  a < b\n  0 \\<le> x0\n  continuous_on {a..b} f\n  x0 \\<le> ?x \\<Longrightarrow> (f has_real_derivative f' ?x) (at ?x)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. sum_upto \\<chi> t * complex_of_real (f' t)) has_integral\n     sum_upto \\<chi> b * complex_of_real (f b) -\n     sum_upto \\<chi> a * complex_of_real (f a) -\n     (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n))))\n     {a..b}", "by (intro partial_summation_strong[of \"{}\"] has_vector_derivative_of_real) auto"], ["proof (state)\nthis:\n  ((\\<lambda>t. sum_upto \\<chi> t * complex_of_real (f' t)) has_integral\n   sum_upto \\<chi> b * complex_of_real (f b) -\n   sum_upto \\<chi> a * complex_of_real (f a) -\n   (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n))))\n   {a..b}\n\ngoal (1 subgoal):\n 1. cmod\n     (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n)))\n    \\<le> 2 * real (totient n) * f a", "hence \"(\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * f (real n)) = ?A b * f b - ?A a * f a - I\""], ["proof (prove)\nusing this:\n  ((\\<lambda>t. sum_upto \\<chi> t * complex_of_real (f' t)) has_integral\n   sum_upto \\<chi> b * complex_of_real (f b) -\n   sum_upto \\<chi> a * complex_of_real (f a) -\n   (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n))))\n   {a..b}\n\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n))) =\n    sum_upto \\<chi> b * complex_of_real (f b) -\n    sum_upto \\<chi> a * complex_of_real (f a) -\n    I", "by (simp add: has_integral_iff I_def)"], ["proof (state)\nthis:\n  (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n))) =\n  sum_upto \\<chi> b * complex_of_real (f b) -\n  sum_upto \\<chi> a * complex_of_real (f a) -\n  I\n\ngoal (1 subgoal):\n 1. cmod\n     (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n)))\n    \\<le> 2 * real (totient n) * f a", "also"], ["proof (state)\nthis:\n  (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n))) =\n  sum_upto \\<chi> b * complex_of_real (f b) -\n  sum_upto \\<chi> a * complex_of_real (f a) -\n  I\n\ngoal (1 subgoal):\n 1. cmod\n     (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n)))\n    \\<le> 2 * real (totient n) * f a", "have \"norm \\<dots> \\<le> norm (?A b) * norm (f b) + norm (?A a) * norm (f a) + norm I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod\n     (sum_upto \\<chi> b * complex_of_real (f b) -\n      sum_upto \\<chi> a * complex_of_real (f a) -\n      I)\n    \\<le> cmod (sum_upto \\<chi> b) * norm (f b) +\n          cmod (sum_upto \\<chi> a) * norm (f a) +\n          cmod I", "by (rule order.trans[OF norm_triangle_ineq4] add_mono)+ (simp_all add: norm_mult)"], ["proof (state)\nthis:\n  cmod\n   (sum_upto \\<chi> b * complex_of_real (f b) -\n    sum_upto \\<chi> a * complex_of_real (f a) -\n    I)\n  \\<le> cmod (sum_upto \\<chi> b) * norm (f b) +\n        cmod (sum_upto \\<chi> a) * norm (f a) +\n        cmod I\n\ngoal (1 subgoal):\n 1. cmod\n     (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n)))\n    \\<le> 2 * real (totient n) * f a", "also"], ["proof (state)\nthis:\n  cmod\n   (sum_upto \\<chi> b * complex_of_real (f b) -\n    sum_upto \\<chi> a * complex_of_real (f a) -\n    I)\n  \\<le> cmod (sum_upto \\<chi> b) * norm (f b) +\n        cmod (sum_upto \\<chi> a) * norm (f a) +\n        cmod I\n\ngoal (1 subgoal):\n 1. cmod\n     (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n)))\n    \\<le> 2 * real (totient n) * f a", "have \"norm I \\<le> integral {a..b} (\\<lambda>t. of_real (-C) * of_real (f' t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod I\n    \\<le> integral {a..b} (\\<lambda>t. of_real (- C) * of_real (f' t))", "unfolding I_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod\n     (integral {a..b}\n       (\\<lambda>t. sum_upto \\<chi> t * complex_of_real (f' t)))\n    \\<le> integral {a..b} (\\<lambda>t. of_real (- C) * of_real (f' t))", "using I I' f'_nonpos ab C"], ["proof (prove)\nusing this:\n  ((\\<lambda>t. sum_upto \\<chi> t * complex_of_real (f' t)) has_integral\n   sum_upto \\<chi> b * complex_of_real (f b) -\n   sum_upto \\<chi> a * complex_of_real (f a) -\n   (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n))))\n   {a..b}\n  (f' has_integral f b - f a) {a..b}\n  x0 \\<le> ?x \\<Longrightarrow> f' ?x \\<le> 0\n  x0 \\<le> a\n  a < b\n  cmod (sum_upto \\<chi> ?x) \\<le> C\n\ngoal (1 subgoal):\n 1. cmod\n     (integral {a..b}\n       (\\<lambda>t. sum_upto \\<chi> t * complex_of_real (f' t)))\n    \\<le> integral {a..b} (\\<lambda>t. of_real (- C) * of_real (f' t))", "by (intro integral_norm_bound_integral integrable_on_cmult_left)\n       (simp_all add: has_integral_iff norm_mult mult_right_mono_neg)"], ["proof (state)\nthis:\n  cmod I \\<le> integral {a..b} (\\<lambda>t. of_real (- C) * of_real (f' t))\n\ngoal (1 subgoal):\n 1. cmod\n     (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n)))\n    \\<le> 2 * real (totient n) * f a", "also"], ["proof (state)\nthis:\n  cmod I \\<le> integral {a..b} (\\<lambda>t. of_real (- C) * of_real (f' t))\n\ngoal (1 subgoal):\n 1. cmod\n     (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n)))\n    \\<le> 2 * real (totient n) * f a", "have \"\\<dots> = - (C * (f b - f a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {a..b} (\\<lambda>t. of_real (- C) * of_real (f' t)) =\n    - (C * (f b - f a))", "using integral_linear[OF _ bounded_linear_of_real, of f' \"{a..b}\"] I'"], ["proof (prove)\nusing this:\n  f' integrable_on {a..b} \\<Longrightarrow>\n  integral {a..b} (of_real \\<circ> f') = of_real (integral {a..b} f')\n  (f' has_integral f b - f a) {a..b}\n\ngoal (1 subgoal):\n 1. integral {a..b} (\\<lambda>t. of_real (- C) * of_real (f' t)) =\n    - (C * (f b - f a))", "by (simp add: has_integral_iff o_def )"], ["proof (state)\nthis:\n  integral {a..b} (\\<lambda>t. of_real (- C) * of_real (f' t)) =\n  - (C * (f b - f a))\n\ngoal (1 subgoal):\n 1. cmod\n     (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n)))\n    \\<le> 2 * real (totient n) * f a", "also"], ["proof (state)\nthis:\n  integral {a..b} (\\<lambda>t. of_real (- C) * of_real (f' t)) =\n  - (C * (f b - f a))\n\ngoal (1 subgoal):\n 1. cmod\n     (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n)))\n    \\<le> 2 * real (totient n) * f a", "have \"\\<dots> = C * (f a - f b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (C * (f b - f a)) = C * (f a - f b)", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  - (C * (f b - f a)) = C * (f a - f b)\n\ngoal (1 subgoal):\n 1. cmod\n     (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n)))\n    \\<le> 2 * real (totient n) * f a", "also"], ["proof (state)\nthis:\n  - (C * (f b - f a)) = C * (f a - f b)\n\ngoal (1 subgoal):\n 1. cmod\n     (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n)))\n    \\<le> 2 * real (totient n) * f a", "have \"norm (sum_upto \\<chi> b) \\<le> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (sum_upto \\<chi> b) \\<le> C", "by (rule C)"], ["proof (state)\nthis:\n  cmod (sum_upto \\<chi> b) \\<le> C\n\ngoal (1 subgoal):\n 1. cmod\n     (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n)))\n    \\<le> 2 * real (totient n) * f a", "also"], ["proof (state)\nthis:\n  cmod (sum_upto \\<chi> b) \\<le> C\n\ngoal (1 subgoal):\n 1. cmod\n     (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n)))\n    \\<le> 2 * real (totient n) * f a", "have \"norm (sum_upto \\<chi> a) \\<le> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (sum_upto \\<chi> a) \\<le> C", "by (rule C)"], ["proof (state)\nthis:\n  cmod (sum_upto \\<chi> a) \\<le> C\n\ngoal (1 subgoal):\n 1. cmod\n     (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n)))\n    \\<le> 2 * real (totient n) * f a", "also"], ["proof (state)\nthis:\n  cmod (sum_upto \\<chi> a) \\<le> C\n\ngoal (1 subgoal):\n 1. cmod\n     (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n)))\n    \\<le> 2 * real (totient n) * f a", "have \"C * norm (f b) + C * norm (f a) + C * (f a - f b) = 2 * C * f a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C * norm (f b) + C * norm (f a) + C * (f a - f b) = 2 * C * f a", "using f_nonneg[of a] f_nonneg[of b] ab"], ["proof (prove)\nusing this:\n  x0 \\<le> a \\<Longrightarrow> 0 \\<le> f a\n  x0 \\<le> b \\<Longrightarrow> 0 \\<le> f b\n  x0 \\<le> a\n  a < b\n\ngoal (1 subgoal):\n 1. C * norm (f b) + C * norm (f a) + C * (f a - f b) = 2 * C * f a", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  C * norm (f b) + C * norm (f a) + C * (f a - f b) = 2 * C * f a\n\ngoal (1 subgoal):\n 1. cmod\n     (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n)))\n    \\<le> 2 * real (totient n) * f a", "finally"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>x y.\n              x \\<le> y \\<Longrightarrow>\n              cmod (sum_upto \\<chi> b) * norm (f b) +\n              cmod (sum_upto \\<chi> a) * norm (f a) +\n              x\n              \\<le> cmod (sum_upto \\<chi> b) * norm (f b) +\n                    cmod (sum_upto \\<chi> a) * norm (f a) +\n                    y;\n   \\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      x * norm (f b) + cmod (sum_upto \\<chi> a) * norm (f a) +\n      C * (f a - f b)\n      \\<le> y * norm (f b) + cmod (sum_upto \\<chi> a) * norm (f a) +\n            C * (f a - f b);\n   \\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      C * norm (f b) + x * norm (f a) + C * (f a - f b)\n      \\<le> C * norm (f b) + y * norm (f a) + C * (f a - f b)\\<rbrakk>\n  \\<Longrightarrow> cmod\n                     (\\<Sum>n\\<in>real -` {a<..b}.\n                        \\<chi> n * complex_of_real (f (real n)))\n                    \\<le> 2 * C * f a", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x y.\n              x \\<le> y \\<Longrightarrow>\n              cmod (sum_upto \\<chi> b) * norm (f b) +\n              cmod (sum_upto \\<chi> a) * norm (f a) +\n              x\n              \\<le> cmod (sum_upto \\<chi> b) * norm (f b) +\n                    cmod (sum_upto \\<chi> a) * norm (f a) +\n                    y;\n   \\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      x * norm (f b) + cmod (sum_upto \\<chi> a) * norm (f a) +\n      C * (f a - f b)\n      \\<le> y * norm (f b) + cmod (sum_upto \\<chi> a) * norm (f a) +\n            C * (f a - f b);\n   \\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      C * norm (f b) + x * norm (f a) + C * (f a - f b)\n      \\<le> C * norm (f b) + y * norm (f a) + C * (f a - f b)\\<rbrakk>\n  \\<Longrightarrow> cmod\n                     (\\<Sum>n\\<in>real -` {a<..b}.\n                        \\<chi> n * complex_of_real (f (real n)))\n                    \\<le> 2 * C * f a\n\ngoal (1 subgoal):\n 1. cmod\n     (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n)))\n    \\<le> 2 * real (totient n) * f a", "by (simp add: mult_right_mono C_def)"], ["proof (state)\nthis:\n  cmod\n   (\\<Sum>n\\<in>real -` {a<..b}. \\<chi> n * complex_of_real (f (real n)))\n  \\<le> 2 * real (totient n) * f a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma summable_dcharacter_antimono:\n  fixes x0 a b :: real and f f' :: \"real \\<Rightarrow> real\"\n  assumes nonprincipal: \"\\<chi> \\<noteq> \\<chi>\\<^sub>0\"\n  assumes f': \"\\<And>x. x \\<ge> x0 \\<Longrightarrow> (f has_field_derivative f' x) (at x)\"\n  assumes f_nonneg: \"\\<And>x. x \\<ge> x0 \\<Longrightarrow> f x \\<ge> 0\"\n  assumes f'_nonpos: \"\\<And>x. x \\<ge> x0 \\<Longrightarrow> f' x \\<le> 0\"\n  assumes lim: \"(f \\<longlongrightarrow> 0) at_top\"\n  shows   \"summable (\\<lambda>n. \\<chi> n * f n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. \\<chi> n * complex_of_real (f (real n)))", "proof (rule summable_bounded_partials [where ?g = \"\\<lambda>x. 2 * real (totient n) * f x\"], goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x0 in sequentially.\n       \\<forall>a\\<ge>x0.\n          \\<forall>b>a.\n             cmod\n              (\\<Sum>n\\<in>{a<..b}. \\<chi> n * complex_of_real (f (real n)))\n             \\<le> 2 * real (totient n) * f (real a)\n 2. (\\<lambda>x. 2 * real (totient n) * f (real x))\n    \\<longlonglongrightarrow> 0", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x0 in sequentially.\n       \\<forall>a\\<ge>x0.\n          \\<forall>b>a.\n             cmod\n              (\\<Sum>n\\<in>{a<..b}. \\<chi> n * complex_of_real (f (real n)))\n             \\<le> 2 * real (totient n) * f (real a)\n 2. (\\<lambda>x. 2 * real (totient n) * f (real x))\n    \\<longlonglongrightarrow> 0", "from eventually_ge_at_top[of \"nat \\<lceil>x0\\<rceil>\"]"], ["proof (chain)\npicking this:\n  eventually ((\\<le>) (nat \\<lceil>x0\\<rceil>)) sequentially", "show ?case"], ["proof (prove)\nusing this:\n  eventually ((\\<le>) (nat \\<lceil>x0\\<rceil>)) sequentially\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x0 in sequentially.\n       \\<forall>a\\<ge>x0.\n          \\<forall>b>a.\n             cmod\n              (\\<Sum>n\\<in>{a<..b}. \\<chi> n * complex_of_real (f (real n)))\n             \\<le> 2 * real (totient n) * f (real a)", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x0a.\n       nat \\<lceil>x0\\<rceil> \\<le> x0a \\<Longrightarrow>\n       \\<forall>a\\<ge>x0a.\n          \\<forall>b>a.\n             cmod\n              (\\<Sum>n\\<in>{a<..b}. \\<chi> n * complex_of_real (f (real n)))\n             \\<le> 2 * real (totient n) * f (real a)", "case (elim x)"], ["proof (state)\nthis:\n  nat \\<lceil>x0\\<rceil> \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>x0a.\n       nat \\<lceil>x0\\<rceil> \\<le> x0a \\<Longrightarrow>\n       \\<forall>a\\<ge>x0a.\n          \\<forall>b>a.\n             cmod\n              (\\<Sum>n\\<in>{a<..b}. \\<chi> n * complex_of_real (f (real n)))\n             \\<le> 2 * real (totient n) * f (real a)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a\\<ge>x.\n       \\<forall>b>a.\n          cmod\n           (\\<Sum>n\\<in>{a<..b}. \\<chi> n * complex_of_real (f (real n)))\n          \\<le> 2 * real (totient n) * f (real a)", "proof (safe, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>x \\<le> a; a < b\\<rbrakk>\n       \\<Longrightarrow> cmod\n                          (\\<Sum>n\\<in>{a<..b}.\n                             \\<chi> n * complex_of_real (f (real n)))\n                         \\<le> 2 * real (totient n) * f (real a)", "case (1 a b)"], ["proof (state)\nthis:\n  x \\<le> a\n  a < b\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>x \\<le> a; a < b\\<rbrakk>\n       \\<Longrightarrow> cmod\n                          (\\<Sum>n\\<in>{a<..b}.\n                             \\<chi> n * complex_of_real (f (real n)))\n                         \\<le> 2 * real (totient n) * f (real a)", "with elim"], ["proof (chain)\npicking this:\n  nat \\<lceil>x0\\<rceil> \\<le> x\n  x \\<le> a\n  a < b", "have *: \"max 0 x0 \\<ge> 0\" \"max 0 x0 \\<le> a\" \"real a < real b\""], ["proof (prove)\nusing this:\n  nat \\<lceil>x0\\<rceil> \\<le> x\n  x \\<le> a\n  a < b\n\ngoal (1 subgoal):\n 1. 0 \\<le> max 0 x0 &&& max 0 x0 \\<le> real a &&& real a < real b", "by (simp_all add: nat_le_iff ceiling_le_iff)"], ["proof (state)\nthis:\n  0 \\<le> max 0 x0\n  max 0 x0 \\<le> real a\n  real a < real b\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>x \\<le> a; a < b\\<rbrakk>\n       \\<Longrightarrow> cmod\n                          (\\<Sum>n\\<in>{a<..b}.\n                             \\<chi> n * complex_of_real (f (real n)))\n                         \\<le> 2 * real (totient n) * f (real a)", "have \"(\\<Sum>n\\<in>{a<..b}. \\<chi> n * complex_of_real (f (real n))) =\n              (\\<Sum>n\\<in>real -` {real a<..real b}. \\<chi> n * complex_of_real (f (real n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>{a<..b}. \\<chi> n * complex_of_real (f (real n))) =\n    (\\<Sum>n\\<in>real -` {real a<..real b}.\n       \\<chi> n * complex_of_real (f (real n)))", "by (intro sum.cong refl) auto"], ["proof (state)\nthis:\n  (\\<Sum>n\\<in>{a<..b}. \\<chi> n * complex_of_real (f (real n))) =\n  (\\<Sum>n\\<in>real -` {real a<..real b}.\n     \\<chi> n * complex_of_real (f (real n)))\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>x \\<le> a; a < b\\<rbrakk>\n       \\<Longrightarrow> cmod\n                          (\\<Sum>n\\<in>{a<..b}.\n                             \\<chi> n * complex_of_real (f (real n)))\n                         \\<le> 2 * real (totient n) * f (real a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>n\\<in>{a<..b}. \\<chi> n * complex_of_real (f (real n))) =\n  (\\<Sum>n\\<in>real -` {real a<..real b}.\n     \\<chi> n * complex_of_real (f (real n)))\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>x \\<le> a; a < b\\<rbrakk>\n       \\<Longrightarrow> cmod\n                          (\\<Sum>n\\<in>{a<..b}.\n                             \\<chi> n * complex_of_real (f (real n)))\n                         \\<le> 2 * real (totient n) * f (real a)", "have \"norm \\<dots> \\<le> 2 * real (totient n) * f a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod\n     (\\<Sum>n\\<in>real -` {real a<..real b}.\n        \\<chi> n * complex_of_real (f (real n)))\n    \\<le> 2 * real (totient n) * f (real a)", "using nonprincipal * f' f_nonneg f'_nonpos"], ["proof (prove)\nusing this:\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  0 \\<le> max 0 x0\n  max 0 x0 \\<le> real a\n  real a < real b\n  x0 \\<le> ?x \\<Longrightarrow> (f has_real_derivative f' ?x) (at ?x)\n  x0 \\<le> ?x \\<Longrightarrow> 0 \\<le> f ?x\n  x0 \\<le> ?x \\<Longrightarrow> f' ?x \\<le> 0\n\ngoal (1 subgoal):\n 1. cmod\n     (\\<Sum>n\\<in>real -` {real a<..real b}.\n        \\<chi> n * complex_of_real (f (real n)))\n    \\<le> 2 * real (totient n) * f (real a)", "by (rule sum_dcharacter_antimono_bound) simp_all"], ["proof (state)\nthis:\n  cmod\n   (\\<Sum>n\\<in>real -` {real a<..real b}.\n      \\<chi> n * complex_of_real (f (real n)))\n  \\<le> 2 * real (totient n) * f (real a)\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>x \\<le> a; a < b\\<rbrakk>\n       \\<Longrightarrow> cmod\n                          (\\<Sum>n\\<in>{a<..b}.\n                             \\<chi> n * complex_of_real (f (real n)))\n                         \\<le> 2 * real (totient n) * f (real a)", "finally"], ["proof (chain)\npicking this:\n  cmod (\\<Sum>n\\<in>{a<..b}. \\<chi> n * complex_of_real (f (real n)))\n  \\<le> 2 * real (totient n) * f (real a)", "show ?case"], ["proof (prove)\nusing this:\n  cmod (\\<Sum>n\\<in>{a<..b}. \\<chi> n * complex_of_real (f (real n)))\n  \\<le> 2 * real (totient n) * f (real a)\n\ngoal (1 subgoal):\n 1. cmod (\\<Sum>n\\<in>{a<..b}. \\<chi> n * complex_of_real (f (real n)))\n    \\<le> 2 * real (totient n) * f (real a)", "."], ["proof (state)\nthis:\n  cmod (\\<Sum>n\\<in>{a<..b}. \\<chi> n * complex_of_real (f (real n)))\n  \\<le> 2 * real (totient n) * f (real a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>a\\<ge>x.\n     \\<forall>b>a.\n        cmod (\\<Sum>n\\<in>{a<..b}. \\<chi> n * complex_of_real (f (real n)))\n        \\<le> 2 * real (totient n) * f (real a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x0 in sequentially.\n     \\<forall>a\\<ge>x0.\n        \\<forall>b>a.\n           cmod\n            (\\<Sum>n\\<in>{a<..b}. \\<chi> n * complex_of_real (f (real n)))\n           \\<le> 2 * real (totient n) * f (real a)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. 2 * real (totient n) * f (real x))\n    \\<longlonglongrightarrow> 0", "qed (auto intro!: tendsto_mult_right_zero filterlim_compose[OF lim] filterlim_real_sequentially)"], ["", "lemma conv_abscissa_le_0:\n  fixes s :: real\n  assumes nonprincipal: \"\\<chi> \\<noteq> \\<chi>\\<^sub>0\"\n  shows  \"conv_abscissa (fds \\<chi>) \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conv_abscissa (fds \\<chi>) \\<le> 0", "proof (rule conv_abscissa_leI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c'.\n       0 < ereal c' \\<Longrightarrow>\n       \\<exists>s. s \\<bullet> 1 = c' \\<and> fds_converges (fds \\<chi>) s", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c'.\n       0 < ereal c' \\<Longrightarrow>\n       \\<exists>s. s \\<bullet> 1 = c' \\<and> fds_converges (fds \\<chi>) s", "assume s: \"0 < ereal s\""], ["proof (state)\nthis:\n  0 < ereal s\n\ngoal (1 subgoal):\n 1. \\<And>c'.\n       0 < ereal c' \\<Longrightarrow>\n       \\<exists>s. s \\<bullet> 1 = c' \\<and> fds_converges (fds \\<chi>) s", "have \"summable (\\<lambda>n. \\<chi> n * of_real (n powr -s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. \\<chi> n * complex_of_real (real n powr - s))", "proof (rule summable_dcharacter_antimono[of 1])"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<chi> \\<noteq> \\<chi>\\<^sub>0\n 2. \\<And>x.\n       1 \\<le> x \\<Longrightarrow>\n       ((\\<lambda>a. a powr - s) has_real_derivative ?f' x) (at x)\n 3. \\<And>x. 1 \\<le> x \\<Longrightarrow> 0 \\<le> x powr - s\n 4. \\<And>x. 1 \\<le> x \\<Longrightarrow> ?f' x \\<le> 0\n 5. ((\\<lambda>a. a powr - s) \\<longlongrightarrow> 0) at_top", "fix x :: real"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<chi> \\<noteq> \\<chi>\\<^sub>0\n 2. \\<And>x.\n       1 \\<le> x \\<Longrightarrow>\n       ((\\<lambda>a. a powr - s) has_real_derivative ?f' x) (at x)\n 3. \\<And>x. 1 \\<le> x \\<Longrightarrow> 0 \\<le> x powr - s\n 4. \\<And>x. 1 \\<le> x \\<Longrightarrow> ?f' x \\<le> 0\n 5. ((\\<lambda>a. a powr - s) \\<longlongrightarrow> 0) at_top", "assume \"x \\<ge> 1\""], ["proof (state)\nthis:\n  1 \\<le> x\n\ngoal (5 subgoals):\n 1. \\<chi> \\<noteq> \\<chi>\\<^sub>0\n 2. \\<And>x.\n       1 \\<le> x \\<Longrightarrow>\n       ((\\<lambda>a. a powr - s) has_real_derivative ?f' x) (at x)\n 3. \\<And>x. 1 \\<le> x \\<Longrightarrow> 0 \\<le> x powr - s\n 4. \\<And>x. 1 \\<le> x \\<Longrightarrow> ?f' x \\<le> 0\n 5. ((\\<lambda>a. a powr - s) \\<longlongrightarrow> 0) at_top", "thus \"((\\<lambda>x. x powr -s) has_field_derivative (-s * x powr (-s-1))) (at x)\""], ["proof (prove)\nusing this:\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. x powr - s) has_real_derivative - s * x powr (- s - 1))\n     (at x)", "by (auto intro!: derivative_eq_intros)"], ["proof (state)\nthis:\n  ((\\<lambda>x. x powr - s) has_real_derivative - s * x powr (- s - 1))\n   (at x)\n\ngoal (4 subgoals):\n 1. \\<chi> \\<noteq> \\<chi>\\<^sub>0\n 2. \\<And>x. 1 \\<le> x \\<Longrightarrow> 0 \\<le> x powr - s\n 3. \\<And>x. 1 \\<le> x \\<Longrightarrow> - s * x powr (- s - 1) \\<le> 0\n 4. ((\\<lambda>a. a powr - s) \\<longlongrightarrow> 0) at_top", "qed (insert s assms, auto intro!: tendsto_neg_powr filterlim_ident)"], ["proof (state)\nthis:\n  summable (\\<lambda>n. \\<chi> n * complex_of_real (real n powr - s))\n\ngoal (1 subgoal):\n 1. \\<And>c'.\n       0 < ereal c' \\<Longrightarrow>\n       \\<exists>s. s \\<bullet> 1 = c' \\<and> fds_converges (fds \\<chi>) s", "thus \"\\<exists>s'::complex. s' \\<bullet> 1 = s \\<and> fds_converges (fds \\<chi>) s'\""], ["proof (prove)\nusing this:\n  summable (\\<lambda>n. \\<chi> n * complex_of_real (real n powr - s))\n\ngoal (1 subgoal):\n 1. \\<exists>s'. s' \\<bullet> 1 = s \\<and> fds_converges (fds \\<chi>) s'", "using s"], ["proof (prove)\nusing this:\n  summable (\\<lambda>n. \\<chi> n * complex_of_real (real n powr - s))\n  0 < ereal s\n\ngoal (1 subgoal):\n 1. \\<exists>s'. s' \\<bullet> 1 = s \\<and> fds_converges (fds \\<chi>) s'", "by (intro exI[of _ \"of_real s\"]) \n       (auto simp: fds_converges_def powr_minus divide_simps powr_of_real [symmetric] fds_nth_fds')"], ["proof (state)\nthis:\n  \\<exists>s'. s' \\<bullet> 1 = s \\<and> fds_converges (fds \\<chi>) s'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma summable_Dirichlet_L':\n  assumes nonprincipal: \"\\<chi> \\<noteq> \\<chi>\\<^sub>0\"\n  assumes s: \"Re s > 0\"\n  shows  \"summable (\\<lambda>n. \\<chi> n * of_nat n powr -s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. \\<chi> n * of_nat n powr - s)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. \\<chi> n * of_nat n powr - s)", "from assms"], ["proof (chain)\npicking this:\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  0 < Re s", "have \"fds_converges (fds \\<chi>) s\""], ["proof (prove)\nusing this:\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  0 < Re s\n\ngoal (1 subgoal):\n 1. fds_converges (fds \\<chi>) s", "by (intro fds_converges le_less_trans[OF conv_abscissa_le_0]) auto"], ["proof (state)\nthis:\n  fds_converges (fds \\<chi>) s\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. \\<chi> n * of_nat n powr - s)", "thus ?thesis"], ["proof (prove)\nusing this:\n  fds_converges (fds \\<chi>) s\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. \\<chi> n * of_nat n powr - s)", "by (simp add: fds_converges_def powr_minus divide_simps fds_nth_fds')"], ["proof (state)\nthis:\n  summable (\\<lambda>n. \\<chi> n * of_nat n powr - s)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \n  assumes \"\\<chi> \\<noteq> \\<chi>\\<^sub>0\"\n  shows   Dirichlet_L_conv_eval_fds: \"\\<And>s. Re s > 0 \\<Longrightarrow> Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s\"\n    and   holomorphic_Dirichlet_L:   \"Dirichlet_L n \\<chi> holomorphic_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        0 < Re s \\<Longrightarrow>\n        Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s) &&&\n    Dirichlet_L n \\<chi> holomorphic_on A", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s.\n       0 < Re s \\<Longrightarrow>\n       Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s\n 2. Dirichlet_L n \\<chi> holomorphic_on A", "show eq: \"Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s\" (is \"?f s = ?g s\") if \"Re s > 0\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s", "proof (cases \"s = 1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. s = 1 \\<Longrightarrow> Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s\n 2. s \\<noteq> 1 \\<Longrightarrow>\n    Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s", "case False"], ["proof (state)\nthis:\n  s \\<noteq> 1\n\ngoal (2 subgoals):\n 1. s = 1 \\<Longrightarrow> Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s\n 2. s \\<noteq> 1 \\<Longrightarrow>\n    Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s", "proof (rule analytic_continuation_open[where ?f = ?f and ?g = ?g])"], ["proof (state)\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. Dirichlet_L n \\<chi> holomorphic_on ?s'\n 7. eval_fds (fds \\<chi>) holomorphic_on ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       Dirichlet_L n \\<chi> z = eval_fds (fds \\<chi>) z\n 9. s \\<in> ?s'", "show \"{s. Re s > 1} \\<subseteq> {s. Re s > 0} - {1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s} - {1}", "by auto"], ["proof (state)\nthis:\n  {s. 1 < Re s} \\<subseteq> {s. 0 < Re s} - {1}\n\ngoal (8 subgoals):\n 1. open {s. 1 < Re s}\n 2. open ({s. 0 < Re s} - {1})\n 3. {s. 1 < Re s} \\<noteq> {}\n 4. connected ({s. 0 < Re s} - {1})\n 5. Dirichlet_L n \\<chi> holomorphic_on {s. 0 < Re s} - {1}\n 6. eval_fds (fds \\<chi>) holomorphic_on {s. 0 < Re s} - {1}\n 7. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       Dirichlet_L n \\<chi> z = eval_fds (fds \\<chi>) z\n 8. s \\<in> {s. 0 < Re s} - {1}", "show \"connected ({s. 0 < Re s} - {1})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. connected ({s. 0 < Re s} - {1})", "using aff_dim_halfspace_gt[of 0 \"1::complex\"]"], ["proof (prove)\nusing this:\n  aff_dim {x. 0 < 1 \\<bullet> x} =\n  (if 1 = 0 \\<and> 0 \\<le> 0 then - 1 else int DIM(complex))\n\ngoal (1 subgoal):\n 1. connected ({s. 0 < Re s} - {1})", "by (intro connected_punctured_convex convex_halfspace_Re_gt) auto"], ["proof (state)\nthis:\n  connected ({s. 0 < Re s} - {1})\n\ngoal (7 subgoals):\n 1. open {s. 1 < Re s}\n 2. open ({s. 0 < Re s} - {1})\n 3. {s. 1 < Re s} \\<noteq> {}\n 4. Dirichlet_L n \\<chi> holomorphic_on {s. 0 < Re s} - {1}\n 5. eval_fds (fds \\<chi>) holomorphic_on {s. 0 < Re s} - {1}\n 6. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       Dirichlet_L n \\<chi> z = eval_fds (fds \\<chi>) z\n 7. s \\<in> {s. 0 < Re s} - {1}", "qed (insert that n assms False, \n         auto intro!: convex_halfspace_Re_gt open_halfspace_Re_gt exI[of _ 2] \n                      holomorphic_intros holomorphic_Dirichlet_L_weak\n                      Dirichlet_L_conv_eval_fds_weak le_less_trans[OF conv_abscissa_le_0])"], ["proof (state)\nthis:\n  Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s\n\ngoal (1 subgoal):\n 1. s = 1 \\<Longrightarrow> Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s", "qed (insert assms, simp_all add: Dirichlet_L_def)"], ["proof (state)\nthis:\n  0 < Re ?s \\<Longrightarrow>\n  Dirichlet_L n \\<chi> ?s = eval_fds (fds \\<chi>) ?s\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> holomorphic_on A", "have \"Dirichlet_L n \\<chi> holomorphic_on UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> holomorphic_on UNIV", "proof (rule no_isolated_singularity')"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>z.\n       z \\<in> ?K \\<Longrightarrow>\n       Dirichlet_L n \\<chi> \\<midarrow>z\\<rightarrow> Dirichlet_L n \\<chi> z\n 2. Dirichlet_L n \\<chi> holomorphic_on UNIV - ?K\n 3. open UNIV\n 4. finite ?K", "from n"], ["proof (chain)\npicking this:\n  1 < n", "show \"Dirichlet_L n \\<chi> holomorphic_on (UNIV - {1})\""], ["proof (prove)\nusing this:\n  1 < n\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> holomorphic_on UNIV - {1}", "by (intro holomorphic_Dirichlet_L_weak) auto"], ["proof (state)\nthis:\n  Dirichlet_L n \\<chi> holomorphic_on UNIV - {1}\n\ngoal (3 subgoals):\n 1. \\<And>z.\n       z \\<in> {1} \\<Longrightarrow>\n       Dirichlet_L n \\<chi> \\<midarrow>z\\<rightarrow> Dirichlet_L n \\<chi> z\n 2. open UNIV\n 3. finite {1}", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>z.\n       z \\<in> {1} \\<Longrightarrow>\n       Dirichlet_L n \\<chi> \\<midarrow>z\\<rightarrow> Dirichlet_L n \\<chi> z\n 2. open UNIV\n 3. finite {1}", "fix s :: complex"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>z.\n       z \\<in> {1} \\<Longrightarrow>\n       Dirichlet_L n \\<chi> \\<midarrow>z\\<rightarrow> Dirichlet_L n \\<chi> z\n 2. open UNIV\n 3. finite {1}", "assume s: \"s \\<in> {1}\""], ["proof (state)\nthis:\n  s \\<in> {1}\n\ngoal (3 subgoals):\n 1. \\<And>z.\n       z \\<in> {1} \\<Longrightarrow>\n       Dirichlet_L n \\<chi> \\<midarrow>z\\<rightarrow> Dirichlet_L n \\<chi> z\n 2. open UNIV\n 3. finite {1}", "show \"Dirichlet_L n \\<chi> \\<midarrow>s\\<rightarrow> Dirichlet_L n \\<chi> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> \\<midarrow>s\\<rightarrow> Dirichlet_L n \\<chi> s", "proof (rule Lim_transform_eventually)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?f \\<midarrow>s\\<rightarrow> Dirichlet_L n \\<chi> s\n 2. \\<forall>\\<^sub>F x in at s. ?f x = Dirichlet_L n \\<chi> x", "from assms"], ["proof (chain)\npicking this:\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0", "have \"continuous_on {s. Re s > 0} (eval_fds (fds \\<chi>))\""], ["proof (prove)\nusing this:\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n\ngoal (1 subgoal):\n 1. continuous_on {s. 0 < Re s} (eval_fds (fds \\<chi>))", "by (intro holomorphic_fds_eval holomorphic_on_imp_continuous_on)\n          (auto intro: le_less_trans[OF conv_abscissa_le_0])"], ["proof (state)\nthis:\n  continuous_on {s. 0 < Re s} (eval_fds (fds \\<chi>))\n\ngoal (2 subgoals):\n 1. ?f \\<midarrow>s\\<rightarrow> Dirichlet_L n \\<chi> s\n 2. \\<forall>\\<^sub>F x in at s. ?f x = Dirichlet_L n \\<chi> x", "hence \"eval_fds (fds \\<chi>) \\<midarrow>s\\<rightarrow> eval_fds (fds \\<chi>) s\""], ["proof (prove)\nusing this:\n  continuous_on {s. 0 < Re s} (eval_fds (fds \\<chi>))\n\ngoal (1 subgoal):\n 1. eval_fds (fds \\<chi>) \\<midarrow>s\\<rightarrow> eval_fds (fds \\<chi>) s", "using s"], ["proof (prove)\nusing this:\n  continuous_on {s. 0 < Re s} (eval_fds (fds \\<chi>))\n  s \\<in> {1}\n\ngoal (1 subgoal):\n 1. eval_fds (fds \\<chi>) \\<midarrow>s\\<rightarrow> eval_fds (fds \\<chi>) s", "by (subst (asm) continuous_on_eq_continuous_at) (auto simp: open_halfspace_Re_gt isCont_def)"], ["proof (state)\nthis:\n  eval_fds (fds \\<chi>) \\<midarrow>s\\<rightarrow> eval_fds (fds \\<chi>) s\n\ngoal (2 subgoals):\n 1. ?f \\<midarrow>s\\<rightarrow> Dirichlet_L n \\<chi> s\n 2. \\<forall>\\<^sub>F x in at s. ?f x = Dirichlet_L n \\<chi> x", "also"], ["proof (state)\nthis:\n  eval_fds (fds \\<chi>) \\<midarrow>s\\<rightarrow> eval_fds (fds \\<chi>) s\n\ngoal (2 subgoals):\n 1. ?f \\<midarrow>s\\<rightarrow> Dirichlet_L n \\<chi> s\n 2. \\<forall>\\<^sub>F x in at s. ?f x = Dirichlet_L n \\<chi> x", "have \"eval_fds (fds \\<chi>) s = Dirichlet_L n \\<chi> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval_fds (fds \\<chi>) s = Dirichlet_L n \\<chi> s", "using assms s"], ["proof (prove)\nusing this:\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  s \\<in> {1}\n\ngoal (1 subgoal):\n 1. eval_fds (fds \\<chi>) s = Dirichlet_L n \\<chi> s", "by (simp add: Dirichlet_L_def)"], ["proof (state)\nthis:\n  eval_fds (fds \\<chi>) s = Dirichlet_L n \\<chi> s\n\ngoal (2 subgoals):\n 1. ?f \\<midarrow>s\\<rightarrow> Dirichlet_L n \\<chi> s\n 2. \\<forall>\\<^sub>F x in at s. ?f x = Dirichlet_L n \\<chi> x", "finally"], ["proof (chain)\npicking this:\n  eval_fds (fds \\<chi>) \\<midarrow>s\\<rightarrow> Dirichlet_L n \\<chi> s", "show \"eval_fds (fds \\<chi>) \\<midarrow>s\\<rightarrow> Dirichlet_L n \\<chi> s\""], ["proof (prove)\nusing this:\n  eval_fds (fds \\<chi>) \\<midarrow>s\\<rightarrow> Dirichlet_L n \\<chi> s\n\ngoal (1 subgoal):\n 1. eval_fds (fds \\<chi>) \\<midarrow>s\\<rightarrow> Dirichlet_L n \\<chi> s", "."], ["proof (state)\nthis:\n  eval_fds (fds \\<chi>) \\<midarrow>s\\<rightarrow> Dirichlet_L n \\<chi> s\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at s.\n       eval_fds (fds \\<chi>) x = Dirichlet_L n \\<chi> x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at s.\n       eval_fds (fds \\<chi>) x = Dirichlet_L n \\<chi> x", "have \"eventually (\\<lambda>z. z \\<in> {z. Re z > 0}) (nhds s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F z in nhds s. z \\<in> {z. 0 < Re z}", "using s"], ["proof (prove)\nusing this:\n  s \\<in> {1}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F z in nhds s. z \\<in> {z. 0 < Re z}", "by (intro eventually_nhds_in_open) (auto simp: open_halfspace_Re_gt)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F z in nhds s. z \\<in> {z. 0 < Re z}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at s.\n       eval_fds (fds \\<chi>) x = Dirichlet_L n \\<chi> x", "hence \"eventually (\\<lambda>z. z \\<in> {z. Re z > 0}) (at s)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F z in nhds s. z \\<in> {z. 0 < Re z}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F z in at s. z \\<in> {z. 0 < Re z}", "unfolding eventually_at_filter"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F z in nhds s. z \\<in> {z. 0 < Re z}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in nhds s.\n       x \\<noteq> s \\<longrightarrow>\n       x \\<in> UNIV \\<longrightarrow> x \\<in> {z. 0 < Re z}", "by eventually_elim auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F z in at s. z \\<in> {z. 0 < Re z}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at s.\n       eval_fds (fds \\<chi>) x = Dirichlet_L n \\<chi> x", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F z in at s. z \\<in> {z. 0 < Re z}", "show \"eventually (\\<lambda>z. eval_fds (fds \\<chi>) z = Dirichlet_L n \\<chi> z) (at s)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F z in at s. z \\<in> {z. 0 < Re z}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F z in at s.\n       eval_fds (fds \\<chi>) z = Dirichlet_L n \\<chi> z", "by eventually_elim (auto intro!: eq [symmetric])"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F z in at s.\n     eval_fds (fds \\<chi>) z = Dirichlet_L n \\<chi> z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Dirichlet_L n \\<chi> \\<midarrow>s\\<rightarrow> Dirichlet_L n \\<chi> s\n\ngoal (2 subgoals):\n 1. open UNIV\n 2. finite {1}", "qed auto"], ["proof (state)\nthis:\n  Dirichlet_L n \\<chi> holomorphic_on UNIV\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> holomorphic_on A", "thus \"Dirichlet_L n \\<chi> holomorphic_on A\""], ["proof (prove)\nusing this:\n  Dirichlet_L n \\<chi> holomorphic_on UNIV\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> holomorphic_on A", "by (rule holomorphic_on_subset) auto"], ["proof (state)\nthis:\n  Dirichlet_L n \\<chi> holomorphic_on A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cnj_Dirichlet_L: \n  \"cnj (Dirichlet_L n \\<chi> s) = Dirichlet_L n (inv_character \\<chi>) (cnj s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj (Dirichlet_L n \\<chi> s) =\n    Dirichlet_L n (inv_character \\<chi>) (cnj s)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cnj (Dirichlet_L n \\<chi> s) =\n    Dirichlet_L n (inv_character \\<chi>) (cnj s)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. cnj (Dirichlet_L n \\<chi> s) =\n    Dirichlet_L n (inv_character \\<chi>) (cnj s)", "assume *: \"\\<chi> \\<noteq> \\<chi>\\<^sub>0\" \"s = 1\""], ["proof (state)\nthis:\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  s = 1\n\ngoal (1 subgoal):\n 1. cnj (Dirichlet_L n \\<chi> s) =\n    Dirichlet_L n (inv_character \\<chi>) (cnj s)", "with summable_Dirichlet_L'[of 1]"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<chi> \\<noteq> \\<chi>\\<^sub>0; 0 < Re 1\\<rbrakk>\n  \\<Longrightarrow> summable (\\<lambda>n. \\<chi> n * of_nat n powr - 1)\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  s = 1", "have \"(\\<lambda>n. \\<chi> n / n) sums eval_fds (fds \\<chi>) 1\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<chi> \\<noteq> \\<chi>\\<^sub>0; 0 < Re 1\\<rbrakk>\n  \\<Longrightarrow> summable (\\<lambda>n. \\<chi> n * of_nat n powr - 1)\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  s = 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. \\<chi> n / of_nat n) sums eval_fds (fds \\<chi>) 1", "by (simp add: eval_fds_def fds_nth_fds' powr_minus sums_iff divide_simps)"], ["proof (state)\nthis:\n  (\\<lambda>n. \\<chi> n / of_nat n) sums eval_fds (fds \\<chi>) 1\n\ngoal (1 subgoal):\n 1. cnj (Dirichlet_L n \\<chi> s) =\n    Dirichlet_L n (inv_character \\<chi>) (cnj s)", "hence \"(\\<lambda>n. inv_character \\<chi> n / n) sums cnj (eval_fds (fds \\<chi>) 1)\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. \\<chi> n / of_nat n) sums eval_fds (fds \\<chi>) 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. inv_character \\<chi> n / of_nat n) sums\n    cnj (eval_fds (fds \\<chi>) 1)", "by (subst (asm) sums_cnj [symmetric]) (simp add: inv_character_def)"], ["proof (state)\nthis:\n  (\\<lambda>n. inv_character \\<chi> n / of_nat n) sums\n  cnj (eval_fds (fds \\<chi>) 1)\n\ngoal (1 subgoal):\n 1. cnj (Dirichlet_L n \\<chi> s) =\n    Dirichlet_L n (inv_character \\<chi>) (cnj s)", "hence \"eval_fds (fds (inv_character \\<chi>)) 1 = cnj (eval_fds (fds \\<chi>) 1)\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. inv_character \\<chi> n / of_nat n) sums\n  cnj (eval_fds (fds \\<chi>) 1)\n\ngoal (1 subgoal):\n 1. eval_fds (fds (inv_character \\<chi>)) 1 = cnj (eval_fds (fds \\<chi>) 1)", "by (simp add: eval_fds_def fds_nth_fds' inv_character_def sums_iff)"], ["proof (state)\nthis:\n  eval_fds (fds (inv_character \\<chi>)) 1 = cnj (eval_fds (fds \\<chi>) 1)\n\ngoal (1 subgoal):\n 1. cnj (Dirichlet_L n \\<chi> s) =\n    Dirichlet_L n (inv_character \\<chi>) (cnj s)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>\\<chi> \\<noteq> \\<chi>\\<^sub>0; s = 1\\<rbrakk>\n  \\<Longrightarrow> eval_fds (fds (inv_character \\<chi>)) 1 =\n                    cnj (eval_fds (fds \\<chi>) 1)\n\ngoal (1 subgoal):\n 1. cnj (Dirichlet_L n \\<chi> s) =\n    Dirichlet_L n (inv_character \\<chi>) (cnj s)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<chi> \\<noteq> \\<chi>\\<^sub>0; s = 1\\<rbrakk>\n  \\<Longrightarrow> eval_fds (fds (inv_character \\<chi>)) 1 =\n                    cnj (eval_fds (fds \\<chi>) 1)\n\ngoal (1 subgoal):\n 1. cnj (Dirichlet_L n \\<chi> s) =\n    Dirichlet_L n (inv_character \\<chi>) (cnj s)", "by (auto simp add: Dirichlet_L_def cnj_powr eval_inv_character)"], ["proof (state)\nthis:\n  cnj (Dirichlet_L n \\<chi> s) =\n  Dirichlet_L n (inv_character \\<chi>) (cnj s)\n\ngoal:\nNo subgoals!", "qed"], ["", "(*<*)"], ["", "end"], ["", "(*>*)"], ["", "end"], ["", "(*<*)"], ["", "context\n  includes no_vec_lambda_notation\nbegin"], ["", "(*>*)"], ["", "lemma holomorphic_Dirichlet_L [holomorphic_intros]:\n  assumes \"n > 1\" \"\\<chi> \\<noteq> principal_dchar n \\<and> dcharacter n \\<chi> \\<or> \\<chi> = principal_dchar n \\<and> 1 \\<notin> A\"\n  shows   \"Dirichlet_L n \\<chi> holomorphic_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> holomorphic_on A", "using assms(2)"], ["proof (prove)\nusing this:\n  \\<chi> \\<noteq> principal_dchar n \\<and> dcharacter n \\<chi> \\<or>\n  \\<chi> = principal_dchar n \\<and> 1 \\<notin> A\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> holomorphic_on A", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<chi> \\<noteq> principal_dchar n \\<and>\n    dcharacter n \\<chi> \\<Longrightarrow>\n    Dirichlet_L n \\<chi> holomorphic_on A\n 2. \\<chi> = principal_dchar n \\<and> 1 \\<notin> A \\<Longrightarrow>\n    Dirichlet_L n \\<chi> holomorphic_on A", "assume \"\\<chi> = principal_dchar n \\<and> 1 \\<notin> A\""], ["proof (state)\nthis:\n  \\<chi> = principal_dchar n \\<and> 1 \\<notin> A\n\ngoal (2 subgoals):\n 1. \\<chi> \\<noteq> principal_dchar n \\<and>\n    dcharacter n \\<chi> \\<Longrightarrow>\n    Dirichlet_L n \\<chi> holomorphic_on A\n 2. \\<chi> = principal_dchar n \\<and> 1 \\<notin> A \\<Longrightarrow>\n    Dirichlet_L n \\<chi> holomorphic_on A", "with holomorphic_Dirichlet_L_weak[of n A \"principal_dchar n\"] assms(1)"], ["proof (chain)\npicking this:\n  \\<lbrakk>0 < n; 1 \\<notin> A\\<rbrakk>\n  \\<Longrightarrow> Dirichlet_L n (principal_dchar n) holomorphic_on A\n  1 < n\n  \\<chi> = principal_dchar n \\<and> 1 \\<notin> A", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < n; 1 \\<notin> A\\<rbrakk>\n  \\<Longrightarrow> Dirichlet_L n (principal_dchar n) holomorphic_on A\n  1 < n\n  \\<chi> = principal_dchar n \\<and> 1 \\<notin> A\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> holomorphic_on A", "by auto"], ["proof (state)\nthis:\n  Dirichlet_L n \\<chi> holomorphic_on A\n\ngoal (1 subgoal):\n 1. \\<chi> \\<noteq> principal_dchar n \\<and>\n    dcharacter n \\<chi> \\<Longrightarrow>\n    Dirichlet_L n \\<chi> holomorphic_on A", "qed (insert dcharacter.holomorphic_Dirichlet_L[of n \\<chi> A], auto)"], ["", "lemma holomorphic_Dirichlet_L' [holomorphic_intros]:\n  assumes \"n > 1\" \"f holomorphic_on A\" \n          \"\\<chi> \\<noteq> principal_dchar n \\<and> dcharacter n \\<chi> \\<or> \\<chi> = principal_dchar n \\<and> (\\<forall>x\\<in>A. f x \\<noteq> 1)\"\n  shows   \"(\\<lambda>s. Dirichlet_L n \\<chi> (f s)) holomorphic_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. Dirichlet_L n \\<chi> (f s)) holomorphic_on A", "using holomorphic_on_compose[OF assms(2) holomorphic_Dirichlet_L[OF assms(1), of \\<chi>]] assms"], ["proof (prove)\nusing this:\n  \\<chi> \\<noteq> principal_dchar n \\<and> dcharacter n \\<chi> \\<or>\n  \\<chi> = principal_dchar n \\<and> 1 \\<notin> f ` A \\<Longrightarrow>\n  Dirichlet_L n \\<chi> \\<circ> f holomorphic_on A\n  1 < n\n  f holomorphic_on A\n  \\<chi> \\<noteq> principal_dchar n \\<and> dcharacter n \\<chi> \\<or>\n  \\<chi> = principal_dchar n \\<and> (\\<forall>x\\<in>A. f x \\<noteq> 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. Dirichlet_L n \\<chi> (f s)) holomorphic_on A", "by (auto simp: o_def image_iff)"], ["", "lemma continuous_on_Dirichlet_L:\n  assumes \"n > 1\" \"\\<chi> \\<noteq> principal_dchar n \\<and> dcharacter n \\<chi> \\<or> \\<chi> = principal_dchar n \\<and> 1 \\<notin> A\"\n  shows   \"continuous_on A (Dirichlet_L n \\<chi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on A (Dirichlet_L n \\<chi>)", "using assms"], ["proof (prove)\nusing this:\n  1 < n\n  \\<chi> \\<noteq> principal_dchar n \\<and> dcharacter n \\<chi> \\<or>\n  \\<chi> = principal_dchar n \\<and> 1 \\<notin> A\n\ngoal (1 subgoal):\n 1. continuous_on A (Dirichlet_L n \\<chi>)", "by (intro holomorphic_on_imp_continuous_on holomorphic_intros)"], ["", "lemma continuous_on_Dirichlet_L' [continuous_intros]:\n  assumes \"continuous_on A f\" \"n > 1\" \n      and \"\\<chi> \\<noteq> principal_dchar n \\<and> dcharacter n \\<chi> \\<or> \\<chi> = principal_dchar n \\<and> (\\<forall>x\\<in>A. f x \\<noteq> 1)\"\n  shows   \"continuous_on A (\\<lambda>x. Dirichlet_L n \\<chi> (f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on A (\\<lambda>x. Dirichlet_L n \\<chi> (f x))", "using continuous_on_compose2[OF continuous_on_Dirichlet_L[of n \\<chi> \"f ` A\"] assms(1)] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>1 < n;\n   \\<chi> \\<noteq> principal_dchar n \\<and> dcharacter n \\<chi> \\<or>\n   \\<chi> = principal_dchar n \\<and> 1 \\<notin> f ` A;\n   f ` A \\<subseteq> f ` A\\<rbrakk>\n  \\<Longrightarrow> continuous_on A (\\<lambda>x. Dirichlet_L n \\<chi> (f x))\n  continuous_on A f\n  1 < n\n  \\<chi> \\<noteq> principal_dchar n \\<and> dcharacter n \\<chi> \\<or>\n  \\<chi> = principal_dchar n \\<and> (\\<forall>x\\<in>A. f x \\<noteq> 1)\n\ngoal (1 subgoal):\n 1. continuous_on A (\\<lambda>x. Dirichlet_L n \\<chi> (f x))", "by (auto simp: image_iff)"], ["", "corollary continuous_Dirichlet_L [continuous_intros]:\n  \"n > 1 \\<Longrightarrow> \\<chi> \\<noteq> principal_dchar n \\<and> dcharacter n \\<chi> \\<or> \\<chi> = principal_dchar n \\<and> s \\<noteq> 1 \\<Longrightarrow> \n     continuous (at s within A) (Dirichlet_L n \\<chi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < n;\n     \\<chi> \\<noteq> principal_dchar n \\<and> dcharacter n \\<chi> \\<or>\n     \\<chi> = principal_dchar n \\<and> s \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> continuous (at s within A) (Dirichlet_L n \\<chi>)", "by (rule continuous_within_subset[of _ UNIV])\n     (insert continuous_on_Dirichlet_L[of n \\<chi> \"(if \\<chi> = principal_dchar n then -{1} else UNIV)\"],\n      auto simp: continuous_on_eq_continuous_at open_Compl)"], ["", "corollary continuous_Dirichlet_L' [continuous_intros]:\n  \"n > 1 \\<Longrightarrow> continuous (at s within A) f \\<Longrightarrow>\n     \\<chi> \\<noteq> principal_dchar n \\<and> dcharacter n \\<chi> \\<or> \\<chi> = principal_dchar n \\<and> f s \\<noteq> 1 \\<Longrightarrow> \n     continuous (at s within A) (\\<lambda>x. Dirichlet_L n \\<chi> (f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < n; continuous (at s within A) f;\n     \\<chi> \\<noteq> principal_dchar n \\<and> dcharacter n \\<chi> \\<or>\n     \\<chi> = principal_dchar n \\<and> f s \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> continuous (at s within A)\n                       (\\<lambda>x. Dirichlet_L n \\<chi> (f x))", "by (rule continuous_within_compose3[OF continuous_Dirichlet_L]) auto"], ["", "(*<*)"], ["", "end"], ["", "(*>*)"], ["", "context residues_nat\nbegin"], ["", "(*<*)"], ["", "context\nincludes no_vec_lambda_notation dcharacter_syntax\nbegin"], ["", "(*>*)"], ["", "text \\<open>\n  Applying the above to the $L(\\chi_0,s)$, the $L$ function of the principal character, we find \n  that it differs from the Riemann $\\zeta$ function only by multiplication with a constant that \n  depends only on the modulus $n$. They therefore have the same analytic properties as the $\\zeta$\n  function itself.\n\\<close>"], ["", "lemma Dirichlet_L_principal:\n  fixes s :: complex\n  shows   \"Dirichlet_L n \\<chi>\\<^sub>0 s = (\\<Prod>p | prime p \\<and> p dvd n. (1 - 1 / p powr s)) * zeta s\"\n            (is \"?f s = ?g s\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi>\\<^sub>0 s =\n    (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n    zeta s", "proof (cases \"s = 1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. s = 1 \\<Longrightarrow>\n    Dirichlet_L n \\<chi>\\<^sub>0 s =\n    (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n    zeta s\n 2. s \\<noteq> 1 \\<Longrightarrow>\n    Dirichlet_L n \\<chi>\\<^sub>0 s =\n    (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n    zeta s", "case False"], ["proof (state)\nthis:\n  s \\<noteq> 1\n\ngoal (2 subgoals):\n 1. s = 1 \\<Longrightarrow>\n    Dirichlet_L n \\<chi>\\<^sub>0 s =\n    (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n    zeta s\n 2. s \\<noteq> 1 \\<Longrightarrow>\n    Dirichlet_L n \\<chi>\\<^sub>0 s =\n    (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n    zeta s", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi>\\<^sub>0 s =\n    (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n    zeta s", "proof (rule analytic_continuation_open[where ?f = ?f and ?g = ?g])"], ["proof (state)\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. Dirichlet_L n \\<chi>\\<^sub>0 holomorphic_on ?s'\n 7. (\\<lambda>a.\n        (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}.\n           1 - 1 / of_nat x powr a) *\n        zeta a) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       Dirichlet_L n \\<chi>\\<^sub>0 z =\n       (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr z) *\n       zeta z\n 9. s \\<in> ?s'", "show \"{s. Re s > 1} \\<subseteq> - {1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {s. 1 < Re s} \\<subseteq> - {1}", "by auto"], ["proof (state)\nthis:\n  {s. 1 < Re s} \\<subseteq> - {1}\n\ngoal (8 subgoals):\n 1. open {s. 1 < Re s}\n 2. open (- {1})\n 3. {s. 1 < Re s} \\<noteq> {}\n 4. connected (- {1})\n 5. Dirichlet_L n \\<chi>\\<^sub>0 holomorphic_on - {1}\n 6. (\\<lambda>a.\n        (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}.\n           1 - 1 / of_nat x powr a) *\n        zeta a) holomorphic_on\n    - {1}\n 7. \\<And>z.\n       z \\<in> {s. 1 < Re s} \\<Longrightarrow>\n       Dirichlet_L n \\<chi>\\<^sub>0 z =\n       (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr z) *\n       zeta z\n 8. s \\<in> - {1}", "show \"?f s = ?g s\" if \"s \\<in> {s. Re s > 1}\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi>\\<^sub>0 s =\n    (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n    zeta s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi>\\<^sub>0 s =\n    (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n    zeta s", "from that"], ["proof (chain)\npicking this:\n  s \\<in> {s. 1 < Re s}", "have s: \"Re s > 1\""], ["proof (prove)\nusing this:\n  s \\<in> {s. 1 < Re s}\n\ngoal (1 subgoal):\n 1. 1 < Re s", "by simp"], ["proof (state)\nthis:\n  1 < Re s\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi>\\<^sub>0 s =\n    (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n    zeta s", "let ?P = \"(\\<Prod>p | prime p \\<and> p dvd n. (1 - 1 / p powr s))\""], ["proof (state)\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi>\\<^sub>0 s =\n    (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n    zeta s", "have \"(\\<lambda>n. \\<Prod>p\\<le>n. if prime p then inverse (1 - \\<chi>\\<^sub>0 p / nat_power p s) else 1)\n                    \\<longlonglongrightarrow> Dirichlet_L n \\<chi>\\<^sub>0 s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Prod>p\\<le>n.\n           if prime p then inverse (1 - \\<chi>\\<^sub>0 p / nat_power p s)\n           else 1)\n    \\<longlonglongrightarrow> Dirichlet_L n \\<chi>\\<^sub>0 s", "using s"], ["proof (prove)\nusing this:\n  1 < Re s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Prod>p\\<le>n.\n           if prime p then inverse (1 - \\<chi>\\<^sub>0 p / nat_power p s)\n           else 1)\n    \\<longlonglongrightarrow> Dirichlet_L n \\<chi>\\<^sub>0 s", "by (rule principal.Dirichlet_L_euler_product_LIMSEQ)"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      \\<Prod>p\\<le>n.\n         if prime p then inverse (1 - \\<chi>\\<^sub>0 p / nat_power p s)\n         else 1)\n  \\<longlonglongrightarrow> Dirichlet_L n \\<chi>\\<^sub>0 s\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi>\\<^sub>0 s =\n    (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n    zeta s", "also"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      \\<Prod>p\\<le>n.\n         if prime p then inverse (1 - \\<chi>\\<^sub>0 p / nat_power p s)\n         else 1)\n  \\<longlonglongrightarrow> Dirichlet_L n \\<chi>\\<^sub>0 s\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi>\\<^sub>0 s =\n    (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n    zeta s", "have \"?this \\<longleftrightarrow> (\\<lambda>n. ?P * (\\<Prod>p\\<le>n. if prime p then inverse (1 - 1 / of_nat p powr s) else 1)) \n                             \\<longlonglongrightarrow> Dirichlet_L n \\<chi>\\<^sub>0 s\" (is \"_ = filterlim ?g _ _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        \\<Prod>p\\<le>n.\n           if prime p then inverse (1 - \\<chi>\\<^sub>0 p / nat_power p s)\n           else 1)\n    \\<longlonglongrightarrow> Dirichlet_L n \\<chi>\\<^sub>0 s =\n    (\\<lambda>n.\n        (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}.\n           1 - 1 / of_nat x powr s) *\n        (\\<Prod>p\\<le>n.\n            if prime p then inverse (1 - 1 / of_nat p powr s) else 1))\n    \\<longlonglongrightarrow> Dirichlet_L n \\<chi>\\<^sub>0 s", "proof (intro tendsto_cong eventually_mono [OF eventually_ge_at_top, of n], goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       n \\<le> x \\<Longrightarrow>\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - \\<chi>\\<^sub>0 p / nat_power p s)\n           else 1) =\n       (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - 1 / of_nat p powr s) else 1)", "case (1 m)"], ["proof (state)\nthis:\n  n \\<le> m\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       n \\<le> x \\<Longrightarrow>\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - \\<chi>\\<^sub>0 p / nat_power p s)\n           else 1) =\n       (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - 1 / of_nat p powr s) else 1)", "let ?f = \"\\<lambda>p. inverse (1 - 1 / p powr s)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       n \\<le> x \\<Longrightarrow>\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - \\<chi>\\<^sub>0 p / nat_power p s)\n           else 1) =\n       (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - 1 / of_nat p powr s) else 1)", "have \"(\\<Prod>p\\<le>m. if prime p then inverse (1 - \\<chi>\\<^sub>0 p / nat_power p s) else 1) =\n                (\\<Prod>p | p \\<le> m \\<and> prime p \\<and> coprime p n. ?f p)\" (is \"_ = prod _ ?A\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<le>m.\n        if prime p then inverse (1 - \\<chi>\\<^sub>0 p / nat_power p s)\n        else 1) =\n    (\\<Prod>x\\<in>{p. p \\<le> m \\<and> prime p \\<and> coprime p n}.\n       inverse (1 - 1 / of_nat x powr s))", "by (intro prod.mono_neutral_cong_right) (auto simp: principal_dchar_def)"], ["proof (state)\nthis:\n  (\\<Prod>p\\<le>m.\n      if prime p then inverse (1 - \\<chi>\\<^sub>0 p / nat_power p s)\n      else 1) =\n  (\\<Prod>x\\<in>{p. p \\<le> m \\<and> prime p \\<and> coprime p n}.\n     inverse (1 - 1 / of_nat x powr s))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       n \\<le> x \\<Longrightarrow>\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - \\<chi>\\<^sub>0 p / nat_power p s)\n           else 1) =\n       (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - 1 / of_nat p powr s) else 1)", "also"], ["proof (state)\nthis:\n  (\\<Prod>p\\<le>m.\n      if prime p then inverse (1 - \\<chi>\\<^sub>0 p / nat_power p s)\n      else 1) =\n  (\\<Prod>x\\<in>{p. p \\<le> m \\<and> prime p \\<and> coprime p n}.\n     inverse (1 - 1 / of_nat x powr s))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       n \\<le> x \\<Longrightarrow>\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - \\<chi>\\<^sub>0 p / nat_power p s)\n           else 1) =\n       (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - 1 / of_nat p powr s) else 1)", "have \"?A = {p. p \\<le> m \\<and> prime p} - {p. prime p \\<and> p dvd n}\"\n          (is \"_ = ?B - ?C\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. {p. p \\<le> m \\<and> prime p \\<and> coprime p n} =\n    {p. p \\<le> m \\<and> prime p} - {p. prime p \\<and> p dvd n}", "using n"], ["proof (prove)\nusing this:\n  1 < n\n\ngoal (1 subgoal):\n 1. {p. p \\<le> m \\<and> prime p \\<and> coprime p n} =\n    {p. p \\<le> m \\<and> prime p} - {p. prime p \\<and> p dvd n}", "by (auto dest: prime_imp_coprime simp: coprime_absorb_left)"], ["proof (state)\nthis:\n  {p. p \\<le> m \\<and> prime p \\<and> coprime p n} =\n  {p. p \\<le> m \\<and> prime p} - {p. prime p \\<and> p dvd n}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       n \\<le> x \\<Longrightarrow>\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - \\<chi>\\<^sub>0 p / nat_power p s)\n           else 1) =\n       (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - 1 / of_nat p powr s) else 1)", "also"], ["proof (state)\nthis:\n  {p. p \\<le> m \\<and> prime p \\<and> coprime p n} =\n  {p. p \\<le> m \\<and> prime p} - {p. prime p \\<and> p dvd n}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       n \\<le> x \\<Longrightarrow>\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - \\<chi>\\<^sub>0 p / nat_power p s)\n           else 1) =\n       (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - 1 / of_nat p powr s) else 1)", "{"], ["proof (state)\nthis:\n  {p. p \\<le> m \\<and> prime p \\<and> coprime p n} =\n  {p. p \\<le> m \\<and> prime p} - {p. prime p \\<and> p dvd n}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       n \\<le> x \\<Longrightarrow>\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - \\<chi>\\<^sub>0 p / nat_power p s)\n           else 1) =\n       (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - 1 / of_nat p powr s) else 1)", "have *: \"(\\<Prod>p\\<in>?B. ?f p) = (\\<Prod>p\\<in>?B - ?C. ?f p) * (\\<Prod>p\\<in>?C. ?f p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>{p. p \\<le> m \\<and> prime p}.\n       inverse (1 - 1 / of_nat p powr s)) =\n    (\\<Prod>p\\<in>{p. p \\<le> m \\<and> prime p} -\n                  {p. prime p \\<and> p dvd n}.\n       inverse (1 - 1 / of_nat p powr s)) *\n    (\\<Prod>p\\<in>{p. prime p \\<and> p dvd n}.\n       inverse (1 - 1 / of_nat p powr s))", "using 1 n"], ["proof (prove)\nusing this:\n  n \\<le> m\n  1 < n\n\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>{p. p \\<le> m \\<and> prime p}.\n       inverse (1 - 1 / of_nat p powr s)) =\n    (\\<Prod>p\\<in>{p. p \\<le> m \\<and> prime p} -\n                  {p. prime p \\<and> p dvd n}.\n       inverse (1 - 1 / of_nat p powr s)) *\n    (\\<Prod>p\\<in>{p. prime p \\<and> p dvd n}.\n       inverse (1 - 1 / of_nat p powr s))", "by (intro prod.subset_diff) (auto dest: dvd_imp_le)"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>{p. p \\<le> m \\<and> prime p}.\n     inverse (1 - 1 / of_nat p powr s)) =\n  (\\<Prod>p\\<in>{p. p \\<le> m \\<and> prime p} - {p. prime p \\<and> p dvd n}.\n     inverse (1 - 1 / of_nat p powr s)) *\n  (\\<Prod>p\\<in>{p. prime p \\<and> p dvd n}.\n     inverse (1 - 1 / of_nat p powr s))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       n \\<le> x \\<Longrightarrow>\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - \\<chi>\\<^sub>0 p / nat_power p s)\n           else 1) =\n       (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - 1 / of_nat p powr s) else 1)", "have \"(\\<Prod>p\\<in>?B. ?f p) * ?P = (\\<Prod>p\\<in>?B - ?C. ?f p) * ((\\<Prod>p\\<in>?C. ?f p) * ?P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>{p. p \\<le> m \\<and> prime p}.\n       inverse (1 - 1 / of_nat p powr s)) *\n    (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) =\n    (\\<Prod>p\\<in>{p. p \\<le> m \\<and> prime p} -\n                  {p. prime p \\<and> p dvd n}.\n       inverse (1 - 1 / of_nat p powr s)) *\n    ((\\<Prod>p\\<in>{p. prime p \\<and> p dvd n}.\n        inverse (1 - 1 / of_nat p powr s)) *\n     (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s))", "by (subst *) (simp add: mult_ac)"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>{p. p \\<le> m \\<and> prime p}.\n     inverse (1 - 1 / of_nat p powr s)) *\n  (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) =\n  (\\<Prod>p\\<in>{p. p \\<le> m \\<and> prime p} - {p. prime p \\<and> p dvd n}.\n     inverse (1 - 1 / of_nat p powr s)) *\n  ((\\<Prod>p\\<in>{p. prime p \\<and> p dvd n}.\n      inverse (1 - 1 / of_nat p powr s)) *\n   (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       n \\<le> x \\<Longrightarrow>\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - \\<chi>\\<^sub>0 p / nat_power p s)\n           else 1) =\n       (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - 1 / of_nat p powr s) else 1)", "also"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>{p. p \\<le> m \\<and> prime p}.\n     inverse (1 - 1 / of_nat p powr s)) *\n  (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) =\n  (\\<Prod>p\\<in>{p. p \\<le> m \\<and> prime p} - {p. prime p \\<and> p dvd n}.\n     inverse (1 - 1 / of_nat p powr s)) *\n  ((\\<Prod>p\\<in>{p. prime p \\<and> p dvd n}.\n      inverse (1 - 1 / of_nat p powr s)) *\n   (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       n \\<le> x \\<Longrightarrow>\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - \\<chi>\\<^sub>0 p / nat_power p s)\n           else 1) =\n       (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - 1 / of_nat p powr s) else 1)", "have \"(\\<Prod>p\\<in>?C. ?f p) * ?P = (\\<Prod>p\\<in>?C. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>{p. prime p \\<and> p dvd n}.\n       inverse (1 - 1 / of_nat p powr s)) *\n    (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) =\n    (\\<Prod>p\\<in>{p. prime p \\<and> p dvd n}. 1)", "by (subst prod.distrib [symmetric], rule prod.cong)\n               (insert s, auto simp: divide_simps powr_def exp_eq_1)"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>{p. prime p \\<and> p dvd n}.\n     inverse (1 - 1 / of_nat p powr s)) *\n  (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) =\n  (\\<Prod>p\\<in>{p. prime p \\<and> p dvd n}. 1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       n \\<le> x \\<Longrightarrow>\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - \\<chi>\\<^sub>0 p / nat_power p s)\n           else 1) =\n       (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - 1 / of_nat p powr s) else 1)", "also"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>{p. prime p \\<and> p dvd n}.\n     inverse (1 - 1 / of_nat p powr s)) *\n  (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) =\n  (\\<Prod>p\\<in>{p. prime p \\<and> p dvd n}. 1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       n \\<le> x \\<Longrightarrow>\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - \\<chi>\\<^sub>0 p / nat_power p s)\n           else 1) =\n       (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - 1 / of_nat p powr s) else 1)", "have \"\\<dots> = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>{p. prime p \\<and> p dvd n}. 1) = 1", "by simp"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>{p. prime p \\<and> p dvd n}. 1) = 1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       n \\<le> x \\<Longrightarrow>\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - \\<chi>\\<^sub>0 p / nat_power p s)\n           else 1) =\n       (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - 1 / of_nat p powr s) else 1)", "finally"], ["proof (chain)\npicking this:\n  (\\<Prod>p\\<in>{p. p \\<le> m \\<and> prime p}.\n     inverse (1 - 1 / of_nat p powr s)) *\n  (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) =\n  (\\<Prod>p\\<in>{p. p \\<le> m \\<and> prime p} - {p. prime p \\<and> p dvd n}.\n     inverse (1 - 1 / of_nat p powr s)) *\n  1", "have \"(\\<Prod>p\\<in>?B - ?C. ?f p) = (\\<Prod>p\\<in>?B. ?f p) * ?P\""], ["proof (prove)\nusing this:\n  (\\<Prod>p\\<in>{p. p \\<le> m \\<and> prime p}.\n     inverse (1 - 1 / of_nat p powr s)) *\n  (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) =\n  (\\<Prod>p\\<in>{p. p \\<le> m \\<and> prime p} - {p. prime p \\<and> p dvd n}.\n     inverse (1 - 1 / of_nat p powr s)) *\n  1\n\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>{p. p \\<le> m \\<and> prime p} -\n                  {p. prime p \\<and> p dvd n}.\n       inverse (1 - 1 / of_nat p powr s)) =\n    (\\<Prod>p\\<in>{p. p \\<le> m \\<and> prime p}.\n       inverse (1 - 1 / of_nat p powr s)) *\n    (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s)", "by simp"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>{p. p \\<le> m \\<and> prime p} - {p. prime p \\<and> p dvd n}.\n     inverse (1 - 1 / of_nat p powr s)) =\n  (\\<Prod>p\\<in>{p. p \\<le> m \\<and> prime p}.\n     inverse (1 - 1 / of_nat p powr s)) *\n  (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       n \\<le> x \\<Longrightarrow>\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - \\<chi>\\<^sub>0 p / nat_power p s)\n           else 1) =\n       (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - 1 / of_nat p powr s) else 1)", "}"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>{p. p \\<le> m \\<and> prime p} - {p. prime p \\<and> p dvd n}.\n     inverse (1 - 1 / of_nat p powr s)) =\n  (\\<Prod>p\\<in>{p. p \\<le> m \\<and> prime p}.\n     inverse (1 - 1 / of_nat p powr s)) *\n  (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       n \\<le> x \\<Longrightarrow>\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - \\<chi>\\<^sub>0 p / nat_power p s)\n           else 1) =\n       (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - 1 / of_nat p powr s) else 1)", "also"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>{p. p \\<le> m \\<and> prime p} - {p. prime p \\<and> p dvd n}.\n     inverse (1 - 1 / of_nat p powr s)) =\n  (\\<Prod>p\\<in>{p. p \\<le> m \\<and> prime p}.\n     inverse (1 - 1 / of_nat p powr s)) *\n  (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       n \\<le> x \\<Longrightarrow>\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - \\<chi>\\<^sub>0 p / nat_power p s)\n           else 1) =\n       (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - 1 / of_nat p powr s) else 1)", "have \"(\\<Prod>p\\<in>?B. ?f p) = (\\<Prod>p\\<le>m. if prime p then ?f p else 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>{p. p \\<le> m \\<and> prime p}.\n       inverse (1 - 1 / of_nat p powr s)) =\n    (\\<Prod>p\\<le>m.\n        if prime p then inverse (1 - 1 / of_nat p powr s) else 1)", "by (intro prod.mono_neutral_cong_left) auto"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>{p. p \\<le> m \\<and> prime p}.\n     inverse (1 - 1 / of_nat p powr s)) =\n  (\\<Prod>p\\<le>m. if prime p then inverse (1 - 1 / of_nat p powr s) else 1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       n \\<le> x \\<Longrightarrow>\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - \\<chi>\\<^sub>0 p / nat_power p s)\n           else 1) =\n       (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n       (\\<Prod>p\\<le>x.\n           if prime p then inverse (1 - 1 / of_nat p powr s) else 1)", "finally"], ["proof (chain)\npicking this:\n  (\\<Prod>p\\<le>m.\n      if prime p then inverse (1 - \\<chi>\\<^sub>0 p / nat_power p s)\n      else 1) =\n  (\\<Prod>p\\<le>m.\n      if prime p then inverse (1 - 1 / of_nat p powr s) else 1) *\n  (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s)", "show ?case"], ["proof (prove)\nusing this:\n  (\\<Prod>p\\<le>m.\n      if prime p then inverse (1 - \\<chi>\\<^sub>0 p / nat_power p s)\n      else 1) =\n  (\\<Prod>p\\<le>m.\n      if prime p then inverse (1 - 1 / of_nat p powr s) else 1) *\n  (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s)\n\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<le>m.\n        if prime p then inverse (1 - \\<chi>\\<^sub>0 p / nat_power p s)\n        else 1) =\n    (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n    (\\<Prod>p\\<le>m.\n        if prime p then inverse (1 - 1 / of_nat p powr s) else 1)", "by (simp only: mult_ac)"], ["proof (state)\nthis:\n  (\\<Prod>p\\<le>m.\n      if prime p then inverse (1 - \\<chi>\\<^sub>0 p / nat_power p s)\n      else 1) =\n  (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n  (\\<Prod>p\\<le>m. if prime p then inverse (1 - 1 / of_nat p powr s) else 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      \\<Prod>p\\<le>n.\n         if prime p then inverse (1 - \\<chi>\\<^sub>0 p / nat_power p s)\n         else 1)\n  \\<longlonglongrightarrow> Dirichlet_L n \\<chi>\\<^sub>0 s =\n  (\\<lambda>n.\n      (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n      (\\<Prod>p\\<le>n.\n          if prime p then inverse (1 - 1 / of_nat p powr s) else 1))\n  \\<longlonglongrightarrow> Dirichlet_L n \\<chi>\\<^sub>0 s\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi>\\<^sub>0 s =\n    (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n    zeta s", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>n.\n      (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n      (\\<Prod>p\\<le>n.\n          if prime p then inverse (1 - 1 / of_nat p powr s) else 1))\n  \\<longlonglongrightarrow> Dirichlet_L n \\<chi>\\<^sub>0 s", "have \"?g \\<longlonglongrightarrow> Dirichlet_L n \\<chi>\\<^sub>0 s\""], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n      (\\<Prod>p\\<le>n.\n          if prime p then inverse (1 - 1 / of_nat p powr s) else 1))\n  \\<longlonglongrightarrow> Dirichlet_L n \\<chi>\\<^sub>0 s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}.\n           1 - 1 / of_nat x powr s) *\n        (\\<Prod>p\\<le>n.\n            if prime p then inverse (1 - 1 / of_nat p powr s) else 1))\n    \\<longlonglongrightarrow> Dirichlet_L n \\<chi>\\<^sub>0 s", "."], ["proof (state)\nthis:\n  (\\<lambda>n.\n      (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n      (\\<Prod>p\\<le>n.\n          if prime p then inverse (1 - 1 / of_nat p powr s) else 1))\n  \\<longlonglongrightarrow> Dirichlet_L n \\<chi>\\<^sub>0 s\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi>\\<^sub>0 s =\n    (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n    zeta s", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n      (\\<Prod>p\\<le>n.\n          if prime p then inverse (1 - 1 / of_nat p powr s) else 1))\n  \\<longlonglongrightarrow> Dirichlet_L n \\<chi>\\<^sub>0 s\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi>\\<^sub>0 s =\n    (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n    zeta s", "have \"?g \\<longlonglongrightarrow> ?P * zeta s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}.\n           1 - 1 / of_nat x powr s) *\n        (\\<Prod>p\\<le>n.\n            if prime p then inverse (1 - 1 / of_nat p powr s) else 1))\n    \\<longlonglongrightarrow> (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}.\n                                 1 - 1 / of_nat x powr s) *\n                              zeta s", "by (intro tendsto_mult tendsto_const euler_product_zeta s)"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n      (\\<Prod>p\\<le>n.\n          if prime p then inverse (1 - 1 / of_nat p powr s) else 1))\n  \\<longlonglongrightarrow> (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}.\n                               1 - 1 / of_nat x powr s) *\n                            zeta s\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi>\\<^sub>0 s =\n    (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n    zeta s", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>n.\n      (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n      (\\<Prod>p\\<le>n.\n          if prime p then inverse (1 - 1 / of_nat p powr s) else 1))\n  \\<longlonglongrightarrow> Dirichlet_L n \\<chi>\\<^sub>0 s\n  (\\<lambda>n.\n      (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n      (\\<Prod>p\\<le>n.\n          if prime p then inverse (1 - 1 / of_nat p powr s) else 1))\n  \\<longlonglongrightarrow> (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}.\n                               1 - 1 / of_nat x powr s) *\n                            zeta s", "show \"Dirichlet_L n \\<chi>\\<^sub>0 s = ?P * zeta s\""], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n      (\\<Prod>p\\<le>n.\n          if prime p then inverse (1 - 1 / of_nat p powr s) else 1))\n  \\<longlonglongrightarrow> Dirichlet_L n \\<chi>\\<^sub>0 s\n  (\\<lambda>n.\n      (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n      (\\<Prod>p\\<le>n.\n          if prime p then inverse (1 - 1 / of_nat p powr s) else 1))\n  \\<longlonglongrightarrow> (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}.\n                               1 - 1 / of_nat x powr s) *\n                            zeta s\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi>\\<^sub>0 s =\n    (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n    zeta s", "by (rule LIMSEQ_unique)"], ["proof (state)\nthis:\n  Dirichlet_L n \\<chi>\\<^sub>0 s =\n  (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n  zeta s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?s \\<in> {s. 1 < Re s} \\<Longrightarrow>\n  Dirichlet_L n \\<chi>\\<^sub>0 ?s =\n  (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr ?s) *\n  zeta ?s\n\ngoal (7 subgoals):\n 1. open {s. 1 < Re s}\n 2. open (- {1})\n 3. {s. 1 < Re s} \\<noteq> {}\n 4. connected (- {1})\n 5. Dirichlet_L n \\<chi>\\<^sub>0 holomorphic_on - {1}\n 6. (\\<lambda>a.\n        (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}.\n           1 - 1 / of_nat x powr a) *\n        zeta a) holomorphic_on\n    - {1}\n 7. s \\<in> - {1}", "qed (insert \\<open>s \\<noteq> 1\\<close> n, auto intro!: holomorphic_intros holomorphic_Dirichlet_L_weak \n         open_halfspace_Re_gt exI[of _ 2] connected_punctured_universe)"], ["proof (state)\nthis:\n  Dirichlet_L n \\<chi>\\<^sub>0 s =\n  (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n  zeta s\n\ngoal (1 subgoal):\n 1. s = 1 \\<Longrightarrow>\n    Dirichlet_L n \\<chi>\\<^sub>0 s =\n    (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s) *\n    zeta s", "qed (simp_all add: Dirichlet_L_def zeta_1)"], ["", "(*<*)"], ["", "end"], ["", "(*>*)"], ["", "end"], ["", "subsection \\<open>The non-vanishing for $\\mathfrak{R}(s)\\geq 1$\\<close>"], ["", "lemma coprime_prime_exists:\n  assumes \"n > (0 :: nat)\"\n  obtains p where \"prime p\" \"coprime p n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>prime p; coprime p n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>prime p; coprime p n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from bigger_prime[of n]"], ["proof (chain)\npicking this:\n  \\<exists>p. prime p \\<and> n < p", "obtain p where p: \"prime p\" \"p > n\""], ["proof (prove)\nusing this:\n  \\<exists>p. prime p \\<and> n < p\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>prime p; n < p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  prime p\n  n < p\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>prime p; coprime p n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with assms"], ["proof (chain)\npicking this:\n  0 < n\n  prime p\n  n < p", "have \"\\<not>p dvd n\""], ["proof (prove)\nusing this:\n  0 < n\n  prime p\n  n < p\n\ngoal (1 subgoal):\n 1. \\<not> p dvd n", "by (auto dest: dvd_imp_le)"], ["proof (state)\nthis:\n  \\<not> p dvd n\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>prime p; coprime p n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with p"], ["proof (chain)\npicking this:\n  prime p\n  n < p\n  \\<not> p dvd n", "have \"coprime p n\""], ["proof (prove)\nusing this:\n  prime p\n  n < p\n  \\<not> p dvd n\n\ngoal (1 subgoal):\n 1. coprime p n", "by (intro prime_imp_coprime)"], ["proof (state)\nthis:\n  coprime p n\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>prime p; coprime p n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with that[of p] and p"], ["proof (chain)\npicking this:\n  \\<lbrakk>prime p; coprime p n\\<rbrakk> \\<Longrightarrow> thesis\n  prime p\n  n < p\n  coprime p n", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>prime p; coprime p n\\<rbrakk> \\<Longrightarrow> thesis\n  prime p\n  n < p\n  coprime p n\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  The case of the principal character is trivial, since it differs from the Riemann $\\zeta(s)$\n  only in a multiplicative factor that is clearly non-zero for $\\mathfrak{R}(s) \\geq 1$.\n\\<close>"], ["", "theorem (in residues_nat) Dirichlet_L_Re_ge_1_nonzero_principal:\n  assumes \"Re s \\<ge> 1\" \"s \\<noteq> 1\"\n  shows   \"Dirichlet_L n (principal_dchar n) s \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dirichlet_L n (principal_dchar n) s \\<noteq> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Dirichlet_L n (principal_dchar n) s \\<noteq> 0", "have \"(\\<Prod>p | prime p \\<and> p dvd n. 1 - 1 / p powr s) \\<noteq> (0 :: complex)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}.\n       1 - 1 / of_nat x powr s) \\<noteq>\n    0", "proof (subst prod_zero_iff)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite {p. prime p \\<and> p dvd n}\n 2. \\<not> (\\<exists>a\\<in>{p. prime p \\<and> p dvd n}.\n               1 - 1 / of_nat a powr s = 0)", "from n"], ["proof (chain)\npicking this:\n  1 < n", "show \"finite {p. prime p \\<and> p dvd n}\""], ["proof (prove)\nusing this:\n  1 < n\n\ngoal (1 subgoal):\n 1. finite {p. prime p \\<and> p dvd n}", "by (intro finite_prime_divisors) auto"], ["proof (state)\nthis:\n  finite {p. prime p \\<and> p dvd n}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>a\\<in>{p. prime p \\<and> p dvd n}.\n               1 - 1 / of_nat a powr s = 0)", "show \"\\<not>(\\<exists>p\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / p powr s = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>x\\<in>{p. prime p \\<and> p dvd n}.\n               1 - 1 / of_nat x powr s = 0)", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 - 1 / of_nat x powr s = 0; prime x; x dvd n\\<rbrakk>\n       \\<Longrightarrow> False", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 - 1 / of_nat x powr s = 0; prime x; x dvd n\\<rbrakk>\n       \\<Longrightarrow> False", "assume p: \"prime p\" \"p dvd n\" and \"1 - 1 / p powr s = 0\""], ["proof (state)\nthis:\n  prime p\n  p dvd n\n  1 - 1 / of_nat p powr s = 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 - 1 / of_nat x powr s = 0; prime x; x dvd n\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"norm (p powr s) = 1\""], ["proof (prove)\nusing this:\n  prime p\n  p dvd n\n  1 - 1 / of_nat p powr s = 0\n\ngoal (1 subgoal):\n 1. cmod (of_nat p powr s) = 1", "by simp"], ["proof (state)\nthis:\n  cmod (of_nat p powr s) = 1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 - 1 / of_nat x powr s = 0; prime x; x dvd n\\<rbrakk>\n       \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  cmod (of_nat p powr s) = 1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 - 1 / of_nat x powr s = 0; prime x; x dvd n\\<rbrakk>\n       \\<Longrightarrow> False", "have \"norm (p powr s) = real p powr Re s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (of_nat p powr s) = real p powr Re s", "by (simp add: norm_powr_real_powr)"], ["proof (state)\nthis:\n  cmod (of_nat p powr s) = real p powr Re s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>1 - 1 / of_nat x powr s = 0; prime x; x dvd n\\<rbrakk>\n       \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  real p powr Re s = 1", "show False"], ["proof (prove)\nusing this:\n  real p powr Re s = 1\n\ngoal (1 subgoal):\n 1. False", "using p assms"], ["proof (prove)\nusing this:\n  real p powr Re s = 1\n  prime p\n  p dvd n\n  1 \\<le> Re s\n  s \\<noteq> 1\n\ngoal (1 subgoal):\n 1. False", "by (simp add: powr_def prime_gt_0_nat)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> (\\<exists>x\\<in>{p. prime p \\<and> p dvd n}.\n             1 - 1 / of_nat x powr s = 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}.\n     1 - 1 / of_nat x powr s) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. Dirichlet_L n (principal_dchar n) s \\<noteq> 0", "with zeta_Re_ge_1_nonzero[OF assms]"], ["proof (chain)\npicking this:\n  zeta s \\<noteq> 0\n  (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}.\n     1 - 1 / of_nat x powr s) \\<noteq>\n  0", "show ?thesis"], ["proof (prove)\nusing this:\n  zeta s \\<noteq> 0\n  (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}.\n     1 - 1 / of_nat x powr s) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. Dirichlet_L n (principal_dchar n) s \\<noteq> 0", "by (simp add: Dirichlet_L_principal)"], ["proof (state)\nthis:\n  Dirichlet_L n (principal_dchar n) s \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  The proof for non-principal character is quite involved and is typically very complicated\n  and technical in most textbooks. For instance, Apostol~\\cite{apostol1976analytic} proves the\n  result separately for real and non-real characters, where the non-real case is relatively short\n  and nice, but the real case involves a number of complicated asymptotic estimates.\n\n  The following proof, on the other hand -- like our proof of the analogous result for the \n  Riemann $\\zeta$ function -- is based on Newman's book~\\cite{newman1998analytic}. Newman gives \n  a very short, concise, and high-level sketch that we aim to reproduce faithfully here.\n\\<close>"], ["", "context dcharacter\nbegin"], ["", "(*<*)"], ["", "context\n  includes no_vec_lambda_notation dcharacter_syntax\nbegin"], ["", "(*>*)"], ["", "theorem Dirichlet_L_Re_ge_1_nonzero_nonprincipal:\n  assumes \"\\<chi> \\<noteq> \\<chi>\\<^sub>0\" and \"Re u \\<ge> 1\"\n  shows   \"Dirichlet_L n \\<chi> u \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u \\<noteq> 0", "proof (cases \"Re u > 1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 1 < Re u \\<Longrightarrow> Dirichlet_L n \\<chi> u \\<noteq> 0\n 2. \\<not> 1 < Re u \\<Longrightarrow> Dirichlet_L n \\<chi> u \\<noteq> 0", "include dcharacter_syntax"], ["proof (state)\ngoal (2 subgoals):\n 1. 1 < Re u \\<Longrightarrow> Dirichlet_L n \\<chi> u \\<noteq> 0\n 2. \\<not> 1 < Re u \\<Longrightarrow> Dirichlet_L n \\<chi> u \\<noteq> 0", "case False"], ["proof (state)\nthis:\n  \\<not> 1 < Re u\n\ngoal (2 subgoals):\n 1. 1 < Re u \\<Longrightarrow> Dirichlet_L n \\<chi> u \\<noteq> 0\n 2. \\<not> 1 < Re u \\<Longrightarrow> Dirichlet_L n \\<chi> u \\<noteq> 0", "define a where \"a = -Im u\""], ["proof (state)\nthis:\n  a = - Im u\n\ngoal (2 subgoals):\n 1. 1 < Re u \\<Longrightarrow> Dirichlet_L n \\<chi> u \\<noteq> 0\n 2. \\<not> 1 < Re u \\<Longrightarrow> Dirichlet_L n \\<chi> u \\<noteq> 0", "from False and assms"], ["proof (chain)\npicking this:\n  \\<not> 1 < Re u\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  1 \\<le> Re u", "have \"Re u = 1\""], ["proof (prove)\nusing this:\n  \\<not> 1 < Re u\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  1 \\<le> Re u\n\ngoal (1 subgoal):\n 1. Re u = 1", "by simp"], ["proof (state)\nthis:\n  Re u = 1\n\ngoal (2 subgoals):\n 1. 1 < Re u \\<Longrightarrow> Dirichlet_L n \\<chi> u \\<noteq> 0\n 2. \\<not> 1 < Re u \\<Longrightarrow> Dirichlet_L n \\<chi> u \\<noteq> 0", "hence [simp]: \"u = 1 - \\<i> * a\""], ["proof (prove)\nusing this:\n  Re u = 1\n\ngoal (1 subgoal):\n 1. u = 1 - \\<i> * complex_of_real a", "by (simp add: a_def complex_eq_iff)"], ["proof (state)\nthis:\n  u = 1 - \\<i> * complex_of_real a\n\ngoal (2 subgoals):\n 1. 1 < Re u \\<Longrightarrow> Dirichlet_L n \\<chi> u \\<noteq> 0\n 2. \\<not> 1 < Re u \\<Longrightarrow> Dirichlet_L n \\<chi> u \\<noteq> 0", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u \\<noteq> 0", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "assume \"Dirichlet_L n \\<chi> u = 0\""], ["proof (state)\nthis:\n  Dirichlet_L n \\<chi> u = 0\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "hence zero: \"Dirichlet_L n \\<chi> (1 - \\<i> * a) = 0\""], ["proof (prove)\nusing this:\n  Dirichlet_L n \\<chi> u = 0\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> (1 - \\<i> * complex_of_real a) = 0", "by simp"], ["proof (state)\nthis:\n  Dirichlet_L n \\<chi> (1 - \\<i> * complex_of_real a) = 0\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "define \\<chi>' where [simp]: \"\\<chi>' = inv_character \\<chi>\"\n\n    \\<comment> \\<open>We define the function $Z(s)$, which is the product of all the Dirichlet $L$ functions,\n        and its Dirichlet series. Then, similarly to the proof of the non-vanishing of the\n        Riemann $\\zeta$ function for $\\mathfrak{R}(s) \\geq 1$, we define\n        $Q(s) = Z(s) Z(s + ia) Z(s - ia)$. Our objective is to show that the Dirichlet series\n        of this function $Q$ converges everywhere.\\<close>"], ["proof (state)\nthis:\n  \\<chi>' = inv_character \\<chi>\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "define Z where \"Z = (\\<lambda>s. \\<Prod>\\<chi>\\<in>dcharacters n. Dirichlet_L n \\<chi> s)\""], ["proof (state)\nthis:\n  Z = (\\<lambda>s. \\<Prod>\\<chi>\\<in>dcharacters n. Dirichlet_L n \\<chi> s)\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "define Z_fds where \"Z_fds = (\\<Prod>\\<chi>\\<in>dcharacters n. fds \\<chi>)\""], ["proof (state)\nthis:\n  Z_fds = prod fds (dcharacters n)\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "define Q where \"Q = (\\<lambda>s. Z s ^ 2 * Z (s + \\<i> * a) * Z (s - \\<i> * a))\""], ["proof (state)\nthis:\n  Q =\n  (\\<lambda>s.\n      (Z s)\\<^sup>2 * Z (s + \\<i> * complex_of_real a) *\n      Z (s - \\<i> * complex_of_real a))\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "define Q_fds where \"Q_fds = Z_fds ^ 2 * fds_shift (\\<i> * a) Z_fds * fds_shift (-\\<i> * a) Z_fds\""], ["proof (state)\nthis:\n  Q_fds =\n  Z_fds\\<^sup>2 * fds_shift (\\<i> * complex_of_real a) Z_fds *\n  fds_shift (- \\<i> * complex_of_real a) Z_fds\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "let ?sings = \"{1, 1 + \\<i> * a, 1 - \\<i> * a}\"\n  \n    \\<comment> \\<open>Some preliminary auxiliary facts\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "define P where \"P = (\\<lambda>s. (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s :: complex))\""], ["proof (state)\nthis:\n  P =\n  (\\<lambda>s.\n      \\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s)\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "have \\<chi>\\<^sub>0: \"\\<chi>\\<^sub>0 \\<in> dcharacters n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<chi>\\<^sub>0 \\<in> dcharacters n", "by (auto simp: principal.dcharacter_axioms dcharacters_def)"], ["proof (state)\nthis:\n  \\<chi>\\<^sub>0 \\<in> dcharacters n\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "have [continuous_intros]: \"continuous_on A P\" for A"], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on A P", "unfolding P_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on A\n     (\\<lambda>s.\n         \\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr s)", "by (intro continuous_intros) (auto simp: prime_gt_0_nat)"], ["proof (state)\nthis:\n  continuous_on ?A P\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "from this[of UNIV]"], ["proof (chain)\npicking this:\n  continuous_on UNIV P", "have [continuous_intros]: \"isCont P s\" for s"], ["proof (prove)\nusing this:\n  continuous_on UNIV P\n\ngoal (1 subgoal):\n 1. isCont P s", "by (auto simp: continuous_on_eq_continuous_at)"], ["proof (state)\nthis:\n  isCont P ?s\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "have \\<chi>: \"\\<chi> \\<in> dcharacters n\" \"\\<chi>' \\<in> dcharacters n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<chi> \\<in> dcharacters n &&& \\<chi>' \\<in> dcharacters n", "using dcharacter_axioms"], ["proof (prove)\nusing this:\n  dcharacter n \\<chi>\n\ngoal (1 subgoal):\n 1. \\<chi> \\<in> dcharacters n &&& \\<chi>' \\<in> dcharacters n", "by (auto simp add: dcharacters_def dcharacter.dcharacter_inv_character)"], ["proof (state)\nthis:\n  \\<chi> \\<in> dcharacters n\n  \\<chi>' \\<in> dcharacters n\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "from zero dcharacter.cnj_Dirichlet_L[of n \\<chi> \"1 - \\<i> * a\"] dcharacter_axioms"], ["proof (chain)\npicking this:\n  Dirichlet_L n \\<chi> (1 - \\<i> * complex_of_real a) = 0\n  dcharacter n \\<chi> \\<Longrightarrow>\n  cnj (Dirichlet_L n \\<chi> (1 - \\<i> * complex_of_real a)) =\n  Dirichlet_L n (inv_character \\<chi>) (cnj (1 - \\<i> * complex_of_real a))\n  dcharacter n \\<chi>", "have zero': \"Dirichlet_L n \\<chi>' (1 + \\<i> * a) = 0\""], ["proof (prove)\nusing this:\n  Dirichlet_L n \\<chi> (1 - \\<i> * complex_of_real a) = 0\n  dcharacter n \\<chi> \\<Longrightarrow>\n  cnj (Dirichlet_L n \\<chi> (1 - \\<i> * complex_of_real a)) =\n  Dirichlet_L n (inv_character \\<chi>) (cnj (1 - \\<i> * complex_of_real a))\n  dcharacter n \\<chi>\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi>' (1 + \\<i> * complex_of_real a) = 0", "by simp"], ["proof (state)\nthis:\n  Dirichlet_L n \\<chi>' (1 + \\<i> * complex_of_real a) = 0\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "have \"Z = (\\<lambda>s. Dirichlet_L n \\<chi>\\<^sub>0 s * (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0}. Dirichlet_L n \\<chi> s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Z =\n    (\\<lambda>s.\n        Dirichlet_L n \\<chi>\\<^sub>0 s *\n        (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0}.\n           Dirichlet_L n \\<chi> s))", "unfolding Z_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. \\<Prod>\\<chi>\\<in>dcharacters n. Dirichlet_L n \\<chi> s) =\n    (\\<lambda>s.\n        Dirichlet_L n \\<chi>\\<^sub>0 s *\n        (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0}.\n           Dirichlet_L n \\<chi> s))", "using \\<chi>\\<^sub>0"], ["proof (prove)\nusing this:\n  \\<chi>\\<^sub>0 \\<in> dcharacters n\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. \\<Prod>\\<chi>\\<in>dcharacters n. Dirichlet_L n \\<chi> s) =\n    (\\<lambda>s.\n        Dirichlet_L n \\<chi>\\<^sub>0 s *\n        (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0}.\n           Dirichlet_L n \\<chi> s))", "by (intro ext prod.remove) auto"], ["proof (state)\nthis:\n  Z =\n  (\\<lambda>s.\n      Dirichlet_L n \\<chi>\\<^sub>0 s *\n      (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0}.\n         Dirichlet_L n \\<chi> s))\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  Z =\n  (\\<lambda>s.\n      Dirichlet_L n \\<chi>\\<^sub>0 s *\n      (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0}.\n         Dirichlet_L n \\<chi> s))\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "have \"\\<dots> = (\\<lambda>s. P s * zeta s * (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0}. Dirichlet_L n \\<chi> s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        Dirichlet_L n \\<chi>\\<^sub>0 s *\n        (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0}.\n           Dirichlet_L n \\<chi> s)) =\n    (\\<lambda>s.\n        P s * zeta s *\n        (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0}.\n           Dirichlet_L n \\<chi> s))", "by (simp add: Dirichlet_L_principal P_def)"], ["proof (state)\nthis:\n  (\\<lambda>s.\n      Dirichlet_L n \\<chi>\\<^sub>0 s *\n      (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0}.\n         Dirichlet_L n \\<chi> s)) =\n  (\\<lambda>s.\n      P s * zeta s *\n      (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0}.\n         Dirichlet_L n \\<chi> s))\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  Z =\n  (\\<lambda>s.\n      P s * zeta s *\n      (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0}.\n         Dirichlet_L n \\<chi> s))", "have Z_eq: \"Z = (\\<lambda>s. P s * zeta s * (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0}. Dirichlet_L n \\<chi> s))\""], ["proof (prove)\nusing this:\n  Z =\n  (\\<lambda>s.\n      P s * zeta s *\n      (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0}.\n         Dirichlet_L n \\<chi> s))\n\ngoal (1 subgoal):\n 1. Z =\n    (\\<lambda>s.\n        P s * zeta s *\n        (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0}.\n           Dirichlet_L n \\<chi> s))", "."], ["proof (state)\nthis:\n  Z =\n  (\\<lambda>s.\n      P s * zeta s *\n      (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0}.\n         Dirichlet_L n \\<chi> s))\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "have Z_eq': \"Z = (\\<lambda>s. P s * zeta s * Dirichlet_L n \\<chi> s *\n                       (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0} - {\\<chi>}. Dirichlet_L n \\<chi> s))\"\n      if \"\\<chi> \\<in> dcharacters n\" \"\\<chi> \\<noteq> \\<chi>\\<^sub>0\" for \\<chi>"], ["proof (prove)\ngoal (1 subgoal):\n 1. Z =\n    (\\<lambda>s.\n        P s * zeta s * Dirichlet_L n \\<chi> s *\n        (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0} - {\\<chi>}.\n           Dirichlet_L n \\<chi> s))", "proof (rule ext, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s.\n       Z s =\n       P s * zeta s * Dirichlet_L n \\<chi> s *\n       (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0} - {\\<chi>}.\n          Dirichlet_L n \\<chi> s)", "case (1 s)"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>s.\n       Z s =\n       P s * zeta s * Dirichlet_L n \\<chi> s *\n       (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0} - {\\<chi>}.\n          Dirichlet_L n \\<chi> s)", "from that"], ["proof (chain)\npicking this:\n  \\<chi> \\<in> dcharacters n\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0", "have \\<chi>: \"\\<chi> \\<in> dcharacters n\""], ["proof (prove)\nusing this:\n  \\<chi> \\<in> dcharacters n\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<chi> \\<in> dcharacters n", "by (simp add: dcharacters_def)"], ["proof (state)\nthis:\n  \\<chi> \\<in> dcharacters n\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       Z s =\n       P s * zeta s * Dirichlet_L n \\<chi> s *\n       (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0} - {\\<chi>}.\n          Dirichlet_L n \\<chi> s)", "have \"Z s = P s * zeta s * \n              (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0}. Dirichlet_L n \\<chi> s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Z s =\n    P s * zeta s *\n    (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0}.\n       Dirichlet_L n \\<chi> s)", "by (simp add: Z_eq)"], ["proof (state)\nthis:\n  Z s =\n  P s * zeta s *\n  (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0}.\n     Dirichlet_L n \\<chi> s)\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       Z s =\n       P s * zeta s * Dirichlet_L n \\<chi> s *\n       (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0} - {\\<chi>}.\n          Dirichlet_L n \\<chi> s)", "also"], ["proof (state)\nthis:\n  Z s =\n  P s * zeta s *\n  (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0}.\n     Dirichlet_L n \\<chi> s)\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       Z s =\n       P s * zeta s * Dirichlet_L n \\<chi> s *\n       (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0} - {\\<chi>}.\n          Dirichlet_L n \\<chi> s)", "have \"(\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0}. Dirichlet_L n \\<chi> s) = Dirichlet_L n \\<chi> s * \n                   (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0} - {\\<chi>}. Dirichlet_L n \\<chi>  s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0}.\n       Dirichlet_L n \\<chi> s) =\n    Dirichlet_L n \\<chi> s *\n    (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0} - {\\<chi>}.\n       Dirichlet_L n \\<chi> s)", "using assms \\<chi> that"], ["proof (prove)\nusing this:\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  1 \\<le> Re u\n  \\<chi> \\<in> dcharacters n\n  \\<chi> \\<in> dcharacters n\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n\ngoal (1 subgoal):\n 1. (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0}.\n       Dirichlet_L n \\<chi> s) =\n    Dirichlet_L n \\<chi> s *\n    (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0} - {\\<chi>}.\n       Dirichlet_L n \\<chi> s)", "by (intro prod.remove) auto"], ["proof (state)\nthis:\n  (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0}.\n     Dirichlet_L n \\<chi> s) =\n  Dirichlet_L n \\<chi> s *\n  (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0} - {\\<chi>}.\n     Dirichlet_L n \\<chi> s)\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       Z s =\n       P s * zeta s * Dirichlet_L n \\<chi> s *\n       (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0} - {\\<chi>}.\n          Dirichlet_L n \\<chi> s)", "finally"], ["proof (chain)\npicking this:\n  Z s =\n  P s * zeta s *\n  (Dirichlet_L n \\<chi> s *\n   (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0} - {\\<chi>}.\n      Dirichlet_L n \\<chi> s))", "show ?case"], ["proof (prove)\nusing this:\n  Z s =\n  P s * zeta s *\n  (Dirichlet_L n \\<chi> s *\n   (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0} - {\\<chi>}.\n      Dirichlet_L n \\<chi> s))\n\ngoal (1 subgoal):\n 1. Z s =\n    P s * zeta s * Dirichlet_L n \\<chi> s *\n    (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0} - {\\<chi>}.\n       Dirichlet_L n \\<chi> s)", "by (simp add: mult_ac)"], ["proof (state)\nthis:\n  Z s =\n  P s * zeta s * Dirichlet_L n \\<chi> s *\n  (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0} - {\\<chi>}.\n     Dirichlet_L n \\<chi> s)\n\ngoal:\nNo subgoals!", "qed\n  \n    \\<comment> \\<open>We again show that @{term Q} is locally bounded everywhere by showing that every\n        singularity is cancelled by some zero. Since now, @{term a} can be zero, we do a\n        case distinction here to make things a bit easier.\\<close>"], ["proof (state)\nthis:\n  \\<lbrakk>?\\<chi> \\<in> dcharacters n;\n   ?\\<chi> \\<noteq> \\<chi>\\<^sub>0\\<rbrakk>\n  \\<Longrightarrow> Z =\n                    (\\<lambda>s.\n                        P s * zeta s * Dirichlet_L n ?\\<chi> s *\n                        (\\<Prod>\\<chi>\n                                \\<in>dcharacters n - {\\<chi>\\<^sub>0} -\n                                     {?\\<chi>}.\n                           Dirichlet_L n \\<chi> s))\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "have Q_bigo_1: \"Q \\<in> O[at s](\\<lambda>_. 1)\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<in> O[at s](\\<lambda>_. 1)", "proof (cases \"a = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a = 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)\n 2. a \\<noteq> 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)", "case True"], ["proof (state)\nthis:\n  a = 0\n\ngoal (2 subgoals):\n 1. a = 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)\n 2. a \\<noteq> 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)", "have \"(\\<lambda>s. Dirichlet_L n \\<chi> s - Dirichlet_L n \\<chi> 1) \\<in> O[at 1](\\<lambda>s. s - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. Dirichlet_L n \\<chi> s - Dirichlet_L n \\<chi> 1)\n    \\<in> O[at 1](\\<lambda>s. s - 1)", "using \\<chi> assms n"], ["proof (prove)\nusing this:\n  \\<chi> \\<in> dcharacters n\n  \\<chi>' \\<in> dcharacters n\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  1 \\<le> Re u\n  1 < n\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. Dirichlet_L n \\<chi> s - Dirichlet_L n \\<chi> 1)\n    \\<in> O[at 1](\\<lambda>s. s - 1)", "by (intro taylor_bigo_linear holomorphic_on_imp_differentiable_at[of _ UNIV]\n                             holomorphic_intros) (auto simp: dcharacters_def)"], ["proof (state)\nthis:\n  (\\<lambda>s. Dirichlet_L n \\<chi> s - Dirichlet_L n \\<chi> 1)\n  \\<in> O[at 1](\\<lambda>s. s - 1)\n\ngoal (2 subgoals):\n 1. a = 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)\n 2. a \\<noteq> 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)", "hence *: \"Dirichlet_L n \\<chi> \\<in> O[at 1](\\<lambda>s. s - 1)\""], ["proof (prove)\nusing this:\n  (\\<lambda>s. Dirichlet_L n \\<chi> s - Dirichlet_L n \\<chi> 1)\n  \\<in> O[at 1](\\<lambda>s. s - 1)\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> \\<in> O[at 1](\\<lambda>s. s - 1)", "using zero True"], ["proof (prove)\nusing this:\n  (\\<lambda>s. Dirichlet_L n \\<chi> s - Dirichlet_L n \\<chi> 1)\n  \\<in> O[at 1](\\<lambda>s. s - 1)\n  Dirichlet_L n \\<chi> (1 - \\<i> * complex_of_real a) = 0\n  a = 0\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> \\<in> O[at 1](\\<lambda>s. s - 1)", "by simp"], ["proof (state)\nthis:\n  Dirichlet_L n \\<chi> \\<in> O[at 1](\\<lambda>s. s - 1)\n\ngoal (2 subgoals):\n 1. a = 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)\n 2. a \\<noteq> 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)", "have \"Z = (\\<lambda>s. P s * zeta s * Dirichlet_L n \\<chi> s *\n                  (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0} - {\\<chi>}. Dirichlet_L n \\<chi> s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Z =\n    (\\<lambda>s.\n        P s * zeta s * Dirichlet_L n \\<chi> s *\n        (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0} - {\\<chi>}.\n           Dirichlet_L n \\<chi> s))", "using \\<chi> assms"], ["proof (prove)\nusing this:\n  \\<chi> \\<in> dcharacters n\n  \\<chi>' \\<in> dcharacters n\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  1 \\<le> Re u\n\ngoal (1 subgoal):\n 1. Z =\n    (\\<lambda>s.\n        P s * zeta s * Dirichlet_L n \\<chi> s *\n        (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0} - {\\<chi>}.\n           Dirichlet_L n \\<chi> s))", "by (intro Z_eq') auto"], ["proof (state)\nthis:\n  Z =\n  (\\<lambda>s.\n      P s * zeta s * Dirichlet_L n \\<chi> s *\n      (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0} - {\\<chi>}.\n         Dirichlet_L n \\<chi> s))\n\ngoal (2 subgoals):\n 1. a = 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)\n 2. a \\<noteq> 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)", "also"], ["proof (state)\nthis:\n  Z =\n  (\\<lambda>s.\n      P s * zeta s * Dirichlet_L n \\<chi> s *\n      (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0} - {\\<chi>}.\n         Dirichlet_L n \\<chi> s))\n\ngoal (2 subgoals):\n 1. a = 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)\n 2. a \\<noteq> 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)", "have \"\\<dots> \\<in> O[at 1](\\<lambda>s. 1 * (1 / (s - 1)) * (s - 1) * 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        P s * zeta s * Dirichlet_L n \\<chi> s *\n        (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0} - {\\<chi>}.\n           Dirichlet_L n \\<chi> s))\n    \\<in> O[at 1](\\<lambda>s. 1 * (1 / (s - 1)) * (s - 1) * 1)", "using n \\<chi>"], ["proof (prove)\nusing this:\n  1 < n\n  \\<chi> \\<in> dcharacters n\n  \\<chi>' \\<in> dcharacters n\n\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        P s * zeta s * Dirichlet_L n \\<chi> s *\n        (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0} - {\\<chi>}.\n           Dirichlet_L n \\<chi> s))\n    \\<in> O[at 1](\\<lambda>s. 1 * (1 / (s - 1)) * (s - 1) * 1)", "by (intro landau_o.big.mult continuous_imp_bigo_1 zeta_bigo_at_1 continuous_intros *)\n           (auto simp: dcharacters_def)"], ["proof (state)\nthis:\n  (\\<lambda>s.\n      P s * zeta s * Dirichlet_L n \\<chi> s *\n      (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0} - {\\<chi>}.\n         Dirichlet_L n \\<chi> s))\n  \\<in> O[at 1](\\<lambda>s. 1 * (1 / (s - 1)) * (s - 1) * 1)\n\ngoal (2 subgoals):\n 1. a = 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)\n 2. a \\<noteq> 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)", "also"], ["proof (state)\nthis:\n  (\\<lambda>s.\n      P s * zeta s * Dirichlet_L n \\<chi> s *\n      (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0} - {\\<chi>}.\n         Dirichlet_L n \\<chi> s))\n  \\<in> O[at 1](\\<lambda>s. 1 * (1 / (s - 1)) * (s - 1) * 1)\n\ngoal (2 subgoals):\n 1. a = 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)\n 2. a \\<noteq> 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)", "have \"(\\<lambda>s::complex. 1 * (1 / (s - 1)) * (s - 1) * 1) \\<in> \\<Theta>[at 1](\\<lambda>_. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. 1 * (1 / (s - 1)) * (s - 1) * 1)\n    \\<in> \\<Theta>[at 1](\\<lambda>_. 1)", "by (intro bigthetaI_cong) (auto simp: eventually_at_filter)"], ["proof (state)\nthis:\n  (\\<lambda>s. 1 * (1 / (s - 1)) * (s - 1) * 1)\n  \\<in> \\<Theta>[at 1](\\<lambda>_. 1)\n\ngoal (2 subgoals):\n 1. a = 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)\n 2. a \\<noteq> 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)", "finally"], ["proof (chain)\npicking this:\n  Z \\<in> O[at 1](\\<lambda>_. 1)", "have Z_at_1: \"Z \\<in> O[at 1](\\<lambda>_. 1)\""], ["proof (prove)\nusing this:\n  Z \\<in> O[at 1](\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. Z \\<in> O[at 1](\\<lambda>_. 1)", "."], ["proof (state)\nthis:\n  Z \\<in> O[at 1](\\<lambda>_. 1)\n\ngoal (2 subgoals):\n 1. a = 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)\n 2. a \\<noteq> 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)", "have \"Z \\<in> O[at s](\\<lambda>_. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Z \\<in> O[at s](\\<lambda>_. 1)", "proof (cases \"s = 1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. s = 1 \\<Longrightarrow> Z \\<in> O[at s](\\<lambda>_. 1)\n 2. s \\<noteq> 1 \\<Longrightarrow> Z \\<in> O[at s](\\<lambda>_. 1)", "case False"], ["proof (state)\nthis:\n  s \\<noteq> 1\n\ngoal (2 subgoals):\n 1. s = 1 \\<Longrightarrow> Z \\<in> O[at s](\\<lambda>_. 1)\n 2. s \\<noteq> 1 \\<Longrightarrow> Z \\<in> O[at s](\\<lambda>_. 1)", "thus ?thesis"], ["proof (prove)\nusing this:\n  s \\<noteq> 1\n\ngoal (1 subgoal):\n 1. Z \\<in> O[at s](\\<lambda>_. 1)", "unfolding Z_def"], ["proof (prove)\nusing this:\n  s \\<noteq> 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. \\<Prod>\\<chi>\\<in>dcharacters n. Dirichlet_L n \\<chi> s)\n    \\<in> O[at s](\\<lambda>_. 1)", "using n \\<chi>"], ["proof (prove)\nusing this:\n  s \\<noteq> 1\n  1 < n\n  \\<chi> \\<in> dcharacters n\n  \\<chi>' \\<in> dcharacters n\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. \\<Prod>\\<chi>\\<in>dcharacters n. Dirichlet_L n \\<chi> s)\n    \\<in> O[at s](\\<lambda>_. 1)", "by (intro continuous_imp_bigo_1 continuous_intros) (auto simp: dcharacters_def)"], ["proof (state)\nthis:\n  Z \\<in> O[at s](\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. s = 1 \\<Longrightarrow> Z \\<in> O[at s](\\<lambda>_. 1)", "qed (insert Z_at_1, auto)"], ["proof (state)\nthis:\n  Z \\<in> O[at s](\\<lambda>_. 1)\n\ngoal (2 subgoals):\n 1. a = 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)\n 2. a \\<noteq> 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)", "from \\<open>a = 0\\<close>"], ["proof (chain)\npicking this:\n  a = 0", "have \"Q = (\\<lambda>s. Z s * Z s * Z s * Z s)\""], ["proof (prove)\nusing this:\n  a = 0\n\ngoal (1 subgoal):\n 1. Q = (\\<lambda>s. Z s * Z s * Z s * Z s)", "by (simp add: Q_def power2_eq_square)"], ["proof (state)\nthis:\n  Q = (\\<lambda>s. Z s * Z s * Z s * Z s)\n\ngoal (2 subgoals):\n 1. a = 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)\n 2. a \\<noteq> 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)", "also"], ["proof (state)\nthis:\n  Q = (\\<lambda>s. Z s * Z s * Z s * Z s)\n\ngoal (2 subgoals):\n 1. a = 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)\n 2. a \\<noteq> 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)", "have \"\\<dots> \\<in> O[at s](\\<lambda>_. 1 * 1 * 1 * 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z s * Z s * Z s * Z s)\n    \\<in> O[at s](\\<lambda>_. 1 * 1 * 1 * 1)", "by (intro landau_o.big.mult) fact+"], ["proof (state)\nthis:\n  (\\<lambda>s. Z s * Z s * Z s * Z s)\n  \\<in> O[at s](\\<lambda>_. 1 * 1 * 1 * 1)\n\ngoal (2 subgoals):\n 1. a = 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)\n 2. a \\<noteq> 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)", "finally"], ["proof (chain)\npicking this:\n  Q \\<in> O[at s](\\<lambda>_. 1 * 1 * 1 * 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  Q \\<in> O[at s](\\<lambda>_. 1 * 1 * 1 * 1)\n\ngoal (1 subgoal):\n 1. Q \\<in> O[at s](\\<lambda>_. 1)", "by simp"], ["proof (state)\nthis:\n  Q \\<in> O[at s](\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. a \\<noteq> 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)", "case False"], ["proof (state)\nthis:\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. a \\<noteq> 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)", "have bigo1: \"(\\<lambda>s. Z s * Z (s - \\<i> * a)) \\<in> O[at 1](\\<lambda>_. 1)\"\n        if \"Dirichlet_L n \\<chi> (1 - \\<i> * a) = 0\" \"a \\<noteq> 0\" \"\\<chi> \\<in> dcharacters n\" \"\\<chi> \\<noteq> \\<chi>\\<^sub>0\" \n        for a :: real and \\<chi>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>_. 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>_. 1)", "have \"(\\<lambda>s. Dirichlet_L n \\<chi> (s - \\<i> * a) - Dirichlet_L n \\<chi> (1 - \\<i> * a)) \\<in> O[at 1](\\<lambda>s. s - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        Dirichlet_L n \\<chi> (s - \\<i> * complex_of_real a) -\n        Dirichlet_L n \\<chi> (1 - \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>s. s - 1)", "using assms n that"], ["proof (prove)\nusing this:\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  1 \\<le> Re u\n  1 < n\n  Dirichlet_L n \\<chi> (1 - \\<i> * complex_of_real a) = 0\n  a \\<noteq> 0\n  \\<chi> \\<in> dcharacters n\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        Dirichlet_L n \\<chi> (s - \\<i> * complex_of_real a) -\n        Dirichlet_L n \\<chi> (1 - \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>s. s - 1)", "by (intro taylor_bigo_linear holomorphic_on_imp_differentiable_at[of _ UNIV]\n                    holomorphic_intros) (auto simp: dcharacters_def)"], ["proof (state)\nthis:\n  (\\<lambda>s.\n      Dirichlet_L n \\<chi> (s - \\<i> * complex_of_real a) -\n      Dirichlet_L n \\<chi> (1 - \\<i> * complex_of_real a))\n  \\<in> O[at 1](\\<lambda>s. s - 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>_. 1)", "hence *: \"(\\<lambda>s. Dirichlet_L n \\<chi> (s - \\<i> * a)) \\<in> O[at 1](\\<lambda>s. s - 1)\""], ["proof (prove)\nusing this:\n  (\\<lambda>s.\n      Dirichlet_L n \\<chi> (s - \\<i> * complex_of_real a) -\n      Dirichlet_L n \\<chi> (1 - \\<i> * complex_of_real a))\n  \\<in> O[at 1](\\<lambda>s. s - 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. Dirichlet_L n \\<chi> (s - \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>s. s - 1)", "using that"], ["proof (prove)\nusing this:\n  (\\<lambda>s.\n      Dirichlet_L n \\<chi> (s - \\<i> * complex_of_real a) -\n      Dirichlet_L n \\<chi> (1 - \\<i> * complex_of_real a))\n  \\<in> O[at 1](\\<lambda>s. s - 1)\n  Dirichlet_L n \\<chi> (1 - \\<i> * complex_of_real a) = 0\n  a \\<noteq> 0\n  \\<chi> \\<in> dcharacters n\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. Dirichlet_L n \\<chi> (s - \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>s. s - 1)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>s. Dirichlet_L n \\<chi> (s - \\<i> * complex_of_real a))\n  \\<in> O[at 1](\\<lambda>s. s - 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>_. 1)", "have \"(\\<lambda>s. Z (s - \\<i>*a)) = (\\<lambda>s. P (s - \\<i>*a) * zeta (s - \\<i>*a) * Dirichlet_L n \\<chi> (s - \\<i>*a)\n                     * (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0} - {\\<chi>}. Dirichlet_L n \\<chi>  (s - \\<i>*a)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z (s - \\<i> * complex_of_real a)) =\n    (\\<lambda>s.\n        P (s - \\<i> * complex_of_real a) *\n        zeta (s - \\<i> * complex_of_real a) *\n        Dirichlet_L n \\<chi> (s - \\<i> * complex_of_real a) *\n        (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0} - {\\<chi>}.\n           Dirichlet_L n \\<chi> (s - \\<i> * complex_of_real a)))", "using that"], ["proof (prove)\nusing this:\n  Dirichlet_L n \\<chi> (1 - \\<i> * complex_of_real a) = 0\n  a \\<noteq> 0\n  \\<chi> \\<in> dcharacters n\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z (s - \\<i> * complex_of_real a)) =\n    (\\<lambda>s.\n        P (s - \\<i> * complex_of_real a) *\n        zeta (s - \\<i> * complex_of_real a) *\n        Dirichlet_L n \\<chi> (s - \\<i> * complex_of_real a) *\n        (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0} - {\\<chi>}.\n           Dirichlet_L n \\<chi> (s - \\<i> * complex_of_real a)))", "by (subst Z_eq'[of \\<chi>]) auto"], ["proof (state)\nthis:\n  (\\<lambda>s. Z (s - \\<i> * complex_of_real a)) =\n  (\\<lambda>s.\n      P (s - \\<i> * complex_of_real a) *\n      zeta (s - \\<i> * complex_of_real a) *\n      Dirichlet_L n \\<chi> (s - \\<i> * complex_of_real a) *\n      (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0} - {\\<chi>}.\n         Dirichlet_L n \\<chi> (s - \\<i> * complex_of_real a)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>_. 1)", "also"], ["proof (state)\nthis:\n  (\\<lambda>s. Z (s - \\<i> * complex_of_real a)) =\n  (\\<lambda>s.\n      P (s - \\<i> * complex_of_real a) *\n      zeta (s - \\<i> * complex_of_real a) *\n      Dirichlet_L n \\<chi> (s - \\<i> * complex_of_real a) *\n      (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0} - {\\<chi>}.\n         Dirichlet_L n \\<chi> (s - \\<i> * complex_of_real a)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>_. 1)", "have \"\\<dots> \\<in> O[at 1](\\<lambda>s. 1 * 1 * (s - 1) * 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        P (s - \\<i> * complex_of_real a) *\n        zeta (s - \\<i> * complex_of_real a) *\n        Dirichlet_L n \\<chi> (s - \\<i> * complex_of_real a) *\n        (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0} - {\\<chi>}.\n           Dirichlet_L n \\<chi> (s - \\<i> * complex_of_real a)))\n    \\<in> O[at 1](\\<lambda>s. 1 * 1 * (s - 1) * 1)", "unfolding P_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}.\n           1 - 1 / of_nat x powr (s - \\<i> * complex_of_real a)) *\n        zeta (s - \\<i> * complex_of_real a) *\n        Dirichlet_L n \\<chi> (s - \\<i> * complex_of_real a) *\n        (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0} - {\\<chi>}.\n           Dirichlet_L n \\<chi> (s - \\<i> * complex_of_real a)))\n    \\<in> O[at 1](\\<lambda>s. 1 * 1 * (s - 1) * 1)", "using that n"], ["proof (prove)\nusing this:\n  Dirichlet_L n \\<chi> (1 - \\<i> * complex_of_real a) = 0\n  a \\<noteq> 0\n  \\<chi> \\<in> dcharacters n\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  1 < n\n\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}.\n           1 - 1 / of_nat x powr (s - \\<i> * complex_of_real a)) *\n        zeta (s - \\<i> * complex_of_real a) *\n        Dirichlet_L n \\<chi> (s - \\<i> * complex_of_real a) *\n        (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0} - {\\<chi>}.\n           Dirichlet_L n \\<chi> (s - \\<i> * complex_of_real a)))\n    \\<in> O[at 1](\\<lambda>s. 1 * 1 * (s - 1) * 1)", "by (intro landau_o.big.mult continuous_imp_bigo_1 continuous_intros *)\n             (auto simp: prime_gt_0_nat dcharacters_def)"], ["proof (state)\nthis:\n  (\\<lambda>s.\n      P (s - \\<i> * complex_of_real a) *\n      zeta (s - \\<i> * complex_of_real a) *\n      Dirichlet_L n \\<chi> (s - \\<i> * complex_of_real a) *\n      (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0} - {\\<chi>}.\n         Dirichlet_L n \\<chi> (s - \\<i> * complex_of_real a)))\n  \\<in> O[at 1](\\<lambda>s. 1 * 1 * (s - 1) * 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>_. 1)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>s. Z (s - \\<i> * complex_of_real a))\n  \\<in> O[at 1](\\<lambda>s. 1 * 1 * (s - 1) * 1)", "have \"(\\<lambda>s. Z (s - \\<i> * a)) \\<in> O[at 1](\\<lambda>s. s - 1)\""], ["proof (prove)\nusing this:\n  (\\<lambda>s. Z (s - \\<i> * complex_of_real a))\n  \\<in> O[at 1](\\<lambda>s. 1 * 1 * (s - 1) * 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z (s - \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>s. s - 1)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>s. Z (s - \\<i> * complex_of_real a))\n  \\<in> O[at 1](\\<lambda>s. s - 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>_. 1)", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>s. Z (s - \\<i> * complex_of_real a))\n  \\<in> O[at 1](\\<lambda>s. s - 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>_. 1)", "have \"Z \\<in> O[at 1](\\<lambda>s. 1 * (1 / (s - 1)) * 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Z \\<in> O[at 1](\\<lambda>s. 1 * (1 / (s - 1)) * 1)", "unfolding Z_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        P s * zeta s *\n        (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0}.\n           Dirichlet_L n \\<chi> s))\n    \\<in> O[at 1](\\<lambda>s. 1 * (1 / (s - 1)) * 1)", "using n that"], ["proof (prove)\nusing this:\n  1 < n\n  Dirichlet_L n \\<chi> (1 - \\<i> * complex_of_real a) = 0\n  a \\<noteq> 0\n  \\<chi> \\<in> dcharacters n\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        P s * zeta s *\n        (\\<Prod>\\<chi>\\<in>dcharacters n - {\\<chi>\\<^sub>0}.\n           Dirichlet_L n \\<chi> s))\n    \\<in> O[at 1](\\<lambda>s. 1 * (1 / (s - 1)) * 1)", "by (intro landau_o.big.mult zeta_bigo_at_1 continuous_imp_bigo_1 continuous_intros)\n             (auto simp: dcharacters_def)"], ["proof (state)\nthis:\n  Z \\<in> O[at 1](\\<lambda>s. 1 * (1 / (s - 1)) * 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>_. 1)", "hence \"Z \\<in> O[at 1](\\<lambda>s. 1 / (s - 1))\""], ["proof (prove)\nusing this:\n  Z \\<in> O[at 1](\\<lambda>s. 1 * (1 / (s - 1)) * 1)\n\ngoal (1 subgoal):\n 1. Z \\<in> O[at 1](\\<lambda>s. 1 / (s - 1))", "by simp"], ["proof (state)\nthis:\n  Z \\<in> O[at 1](\\<lambda>s. 1 / (s - 1))\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>_. 1)", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>s. Z (s - \\<i> * complex_of_real a))\n  \\<in> O[at 1](\\<lambda>s. s - 1)\n  Z \\<in> O[at 1](\\<lambda>s. 1 / (s - 1))", "have \"(\\<lambda>s. Z s * Z (s - \\<i> * a)) \\<in> O[at 1](\\<lambda>s. 1 / (s - 1) * (s - 1))\""], ["proof (prove)\nusing this:\n  (\\<lambda>s. Z (s - \\<i> * complex_of_real a))\n  \\<in> O[at 1](\\<lambda>s. s - 1)\n  Z \\<in> O[at 1](\\<lambda>s. 1 / (s - 1))\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>s. 1 / (s - 1) * (s - 1))", "by (intro landau_o.big.mult)"], ["proof (state)\nthis:\n  (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real a))\n  \\<in> O[at 1](\\<lambda>s. 1 / (s - 1) * (s - 1))\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>_. 1)", "also"], ["proof (state)\nthis:\n  (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real a))\n  \\<in> O[at 1](\\<lambda>s. 1 / (s - 1) * (s - 1))\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>_. 1)", "have \"(\\<lambda>s. 1 / (s - 1) * (s - 1)) \\<in> \\<Theta>[at 1](\\<lambda>_. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. (1::'a) / (s - (1::'a)) * (s - (1::'a)))\n    \\<in> \\<Theta>[at (1::'a)](\\<lambda>_. 1::'a)", "by (intro bigthetaI_cong) (auto simp add: eventually_at_filter)"], ["proof (state)\nthis:\n  (\\<lambda>s. (1::?'a1) / (s - (1::?'a1)) * (s - (1::?'a1)))\n  \\<in> \\<Theta>[at (1::?'a1)](\\<lambda>_. 1::?'a1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>_. 1)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real a))\n  \\<in> O[at 1](\\<lambda>_. 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real a))\n  \\<in> O[at 1](\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>_. 1)", "."], ["proof (state)\nthis:\n  (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real a))\n  \\<in> O[at 1](\\<lambda>_. 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>Dirichlet_L n ?\\<chi> (1 - \\<i> * complex_of_real ?a) = 0;\n   ?a \\<noteq> 0; ?\\<chi> \\<in> dcharacters n;\n   ?\\<chi> \\<noteq> \\<chi>\\<^sub>0\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real ?a))\n                    \\<in> O[at 1](\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. a \\<noteq> 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)", "have bigo1': \"(\\<lambda>s. Z s * Z (s + \\<i> * a)) \\<in> O[at 1](\\<lambda>_. 1)\"\n        if \"Dirichlet_L n \\<chi> (1 - \\<i> * a) = 0\" \"a \\<noteq> 0\" \"\\<chi> \\<in> dcharacters n\" \"\\<chi> \\<noteq> \\<chi>\\<^sub>0\" \n        for a :: real and \\<chi>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z s * Z (s + \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>_. 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z s * Z (s + \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>_. 1)", "from that"], ["proof (chain)\npicking this:\n  Dirichlet_L n \\<chi> (1 - \\<i> * complex_of_real a) = 0\n  a \\<noteq> 0\n  \\<chi> \\<in> dcharacters n\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0", "interpret dcharacter n G \\<chi>"], ["proof (prove)\nusing this:\n  Dirichlet_L n \\<chi> (1 - \\<i> * complex_of_real a) = 0\n  a \\<noteq> 0\n  \\<chi> \\<in> dcharacters n\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n\ngoal (1 subgoal):\n 1. dcharacter n \\<chi> &&& G \\<equiv> residue_mult_group n", "by (simp_all add: dcharacters_def G_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z s * Z (s + \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>_. 1)", "from bigo1[of \"inv_character \\<chi>\" \"-a\"] that cnj_Dirichlet_L[of \"1 - \\<i> * a\"]"], ["proof (chain)\npicking this:\n  \\<lbrakk>Dirichlet_L n (inv_character \\<chi>)\n            (1 - \\<i> * complex_of_real (- a)) =\n           0;\n   - a \\<noteq> 0; inv_character \\<chi> \\<in> dcharacters n;\n   inv_character \\<chi> \\<noteq> \\<chi>\\<^sub>0\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real (- a)))\n                    \\<in> O[at 1](\\<lambda>_. 1)\n  Dirichlet_L n \\<chi> (1 - \\<i> * complex_of_real a) = 0\n  a \\<noteq> 0\n  \\<chi> \\<in> dcharacters n\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  cnj (Dirichlet_L n \\<chi> (1 - \\<i> * complex_of_real a)) =\n  Dirichlet_L n (inv_character \\<chi>) (cnj (1 - \\<i> * complex_of_real a))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>Dirichlet_L n (inv_character \\<chi>)\n            (1 - \\<i> * complex_of_real (- a)) =\n           0;\n   - a \\<noteq> 0; inv_character \\<chi> \\<in> dcharacters n;\n   inv_character \\<chi> \\<noteq> \\<chi>\\<^sub>0\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real (- a)))\n                    \\<in> O[at 1](\\<lambda>_. 1)\n  Dirichlet_L n \\<chi> (1 - \\<i> * complex_of_real a) = 0\n  a \\<noteq> 0\n  \\<chi> \\<in> dcharacters n\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  cnj (Dirichlet_L n \\<chi> (1 - \\<i> * complex_of_real a)) =\n  Dirichlet_L n (inv_character \\<chi>) (cnj (1 - \\<i> * complex_of_real a))\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z s * Z (s + \\<i> * complex_of_real a))\n    \\<in> O[at 1](\\<lambda>_. 1)", "by (simp add: dcharacters_def dcharacter_inv_character)"], ["proof (state)\nthis:\n  (\\<lambda>s. Z s * Z (s + \\<i> * complex_of_real a))\n  \\<in> O[at 1](\\<lambda>_. 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>Dirichlet_L n ?\\<chi> (1 - \\<i> * complex_of_real ?a) = 0;\n   ?a \\<noteq> 0; ?\\<chi> \\<in> dcharacters n;\n   ?\\<chi> \\<noteq> \\<chi>\\<^sub>0\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>s. Z s * Z (s + \\<i> * complex_of_real ?a))\n                    \\<in> O[at 1](\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. a \\<noteq> 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)", "have bigo2: \"(\\<lambda>s. Z s * Z (s - \\<i> * a)) \\<in> O[at (1 + \\<i> * a)](\\<lambda>_. 1)\"\n        if \"Dirichlet_L n \\<chi> (1 - \\<i> * a) = 0\" \"a \\<noteq> 0\" \"\\<chi> \\<in> dcharacters n\" \"\\<chi> \\<noteq> \\<chi>\\<^sub>0\" \n        for a :: real and \\<chi>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real a))\n    \\<in> O[at (1 + \\<i> * complex_of_real a)](\\<lambda>_. 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real a))\n    \\<in> O[at (1 + \\<i> * complex_of_real a)](\\<lambda>_. 1)", "have \"(\\<lambda>s. Z s * Z (s - \\<i> * a)) \\<in> O[filtermap (\\<lambda>s. s + \\<i> * a) (at 1)](\\<lambda>_. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real a))\n    \\<in> O[filtermap (\\<lambda>s. s + \\<i> * complex_of_real a)\n             (at 1)](\\<lambda>_. 1)", "using bigo1'[of \\<chi> a] that"], ["proof (prove)\nusing this:\n  \\<lbrakk>Dirichlet_L n \\<chi> (1 - \\<i> * complex_of_real a) = 0;\n   a \\<noteq> 0; \\<chi> \\<in> dcharacters n;\n   \\<chi> \\<noteq> \\<chi>\\<^sub>0\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>s. Z s * Z (s + \\<i> * complex_of_real a))\n                    \\<in> O[at 1](\\<lambda>_. 1)\n  Dirichlet_L n \\<chi> (1 - \\<i> * complex_of_real a) = 0\n  a \\<noteq> 0\n  \\<chi> \\<in> dcharacters n\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real a))\n    \\<in> O[filtermap (\\<lambda>s. s + \\<i> * complex_of_real a)\n             (at 1)](\\<lambda>_. 1)", "by (simp add: mult.commute landau_o.big.in_filtermap_iff)"], ["proof (state)\nthis:\n  (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real a))\n  \\<in> O[filtermap (\\<lambda>s. s + \\<i> * complex_of_real a)\n           (at 1)](\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real a))\n    \\<in> O[at (1 + \\<i> * complex_of_real a)](\\<lambda>_. 1)", "also"], ["proof (state)\nthis:\n  (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real a))\n  \\<in> O[filtermap (\\<lambda>s. s + \\<i> * complex_of_real a)\n           (at 1)](\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real a))\n    \\<in> O[at (1 + \\<i> * complex_of_real a)](\\<lambda>_. 1)", "have \"filtermap (\\<lambda>s. s + \\<i> * a) (at 1) = at (1 + \\<i> * a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filtermap (\\<lambda>s. s + \\<i> * complex_of_real a) (at 1) =\n    at (1 + \\<i> * complex_of_real a)", "using filtermap_at_shift[of \"-\\<i> * a\" 1]"], ["proof (prove)\nusing this:\n  filtermap (\\<lambda>x. x - - \\<i> * complex_of_real a) (at 1) =\n  at (1 - - \\<i> * complex_of_real a)\n\ngoal (1 subgoal):\n 1. filtermap (\\<lambda>s. s + \\<i> * complex_of_real a) (at 1) =\n    at (1 + \\<i> * complex_of_real a)", "by simp"], ["proof (state)\nthis:\n  filtermap (\\<lambda>s. s + \\<i> * complex_of_real a) (at 1) =\n  at (1 + \\<i> * complex_of_real a)\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real a))\n    \\<in> O[at (1 + \\<i> * complex_of_real a)](\\<lambda>_. 1)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real a))\n  \\<in> O[at (1 + \\<i> * complex_of_real a)](\\<lambda>_. 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real a))\n  \\<in> O[at (1 + \\<i> * complex_of_real a)](\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real a))\n    \\<in> O[at (1 + \\<i> * complex_of_real a)](\\<lambda>_. 1)", "."], ["proof (state)\nthis:\n  (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real a))\n  \\<in> O[at (1 + \\<i> * complex_of_real a)](\\<lambda>_. 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>Dirichlet_L n ?\\<chi> (1 - \\<i> * complex_of_real ?a) = 0;\n   ?a \\<noteq> 0; ?\\<chi> \\<in> dcharacters n;\n   ?\\<chi> \\<noteq> \\<chi>\\<^sub>0\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real ?a))\n                    \\<in> O[at (1 +\n                                \\<i> * complex_of_real ?a)](\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. a \\<noteq> 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)", "have bigo2': \"(\\<lambda>s. Z s * Z (s + \\<i> * a)) \\<in> O[at (1 - \\<i> * a)](\\<lambda>_. 1)\"\n        if \"Dirichlet_L n \\<chi> (1 - \\<i> * a) = 0\" \"a \\<noteq> 0\" \"\\<chi> \\<in> dcharacters n\" \"\\<chi> \\<noteq> \\<chi>\\<^sub>0\" \n        for a :: real and \\<chi>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z s * Z (s + \\<i> * complex_of_real a))\n    \\<in> O[at (1 - \\<i> * complex_of_real a)](\\<lambda>_. 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z s * Z (s + \\<i> * complex_of_real a))\n    \\<in> O[at (1 - \\<i> * complex_of_real a)](\\<lambda>_. 1)", "from that"], ["proof (chain)\npicking this:\n  Dirichlet_L n \\<chi> (1 - \\<i> * complex_of_real a) = 0\n  a \\<noteq> 0\n  \\<chi> \\<in> dcharacters n\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0", "interpret dcharacter n G \\<chi>"], ["proof (prove)\nusing this:\n  Dirichlet_L n \\<chi> (1 - \\<i> * complex_of_real a) = 0\n  a \\<noteq> 0\n  \\<chi> \\<in> dcharacters n\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n\ngoal (1 subgoal):\n 1. dcharacter n \\<chi> &&& G \\<equiv> residue_mult_group n", "by (simp_all add: dcharacters_def G_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z s * Z (s + \\<i> * complex_of_real a))\n    \\<in> O[at (1 - \\<i> * complex_of_real a)](\\<lambda>_. 1)", "from bigo2[of \"inv_character \\<chi>\" \"-a\"] that cnj_Dirichlet_L[of \"1 - \\<i> * a\"]"], ["proof (chain)\npicking this:\n  \\<lbrakk>Dirichlet_L n (inv_character \\<chi>)\n            (1 - \\<i> * complex_of_real (- a)) =\n           0;\n   - a \\<noteq> 0; inv_character \\<chi> \\<in> dcharacters n;\n   inv_character \\<chi> \\<noteq> \\<chi>\\<^sub>0\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real (- a)))\n                    \\<in> O[at (1 +\n                                \\<i> *\n                                complex_of_real (- a))](\\<lambda>_. 1)\n  Dirichlet_L n \\<chi> (1 - \\<i> * complex_of_real a) = 0\n  a \\<noteq> 0\n  \\<chi> \\<in> dcharacters n\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  cnj (Dirichlet_L n \\<chi> (1 - \\<i> * complex_of_real a)) =\n  Dirichlet_L n (inv_character \\<chi>) (cnj (1 - \\<i> * complex_of_real a))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>Dirichlet_L n (inv_character \\<chi>)\n            (1 - \\<i> * complex_of_real (- a)) =\n           0;\n   - a \\<noteq> 0; inv_character \\<chi> \\<in> dcharacters n;\n   inv_character \\<chi> \\<noteq> \\<chi>\\<^sub>0\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>s. Z s * Z (s - \\<i> * complex_of_real (- a)))\n                    \\<in> O[at (1 +\n                                \\<i> *\n                                complex_of_real (- a))](\\<lambda>_. 1)\n  Dirichlet_L n \\<chi> (1 - \\<i> * complex_of_real a) = 0\n  a \\<noteq> 0\n  \\<chi> \\<in> dcharacters n\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  cnj (Dirichlet_L n \\<chi> (1 - \\<i> * complex_of_real a)) =\n  Dirichlet_L n (inv_character \\<chi>) (cnj (1 - \\<i> * complex_of_real a))\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. Z s * Z (s + \\<i> * complex_of_real a))\n    \\<in> O[at (1 - \\<i> * complex_of_real a)](\\<lambda>_. 1)", "by (simp add: dcharacters_def dcharacter_inv_character)"], ["proof (state)\nthis:\n  (\\<lambda>s. Z s * Z (s + \\<i> * complex_of_real a))\n  \\<in> O[at (1 - \\<i> * complex_of_real a)](\\<lambda>_. 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>Dirichlet_L n ?\\<chi> (1 - \\<i> * complex_of_real ?a) = 0;\n   ?a \\<noteq> 0; ?\\<chi> \\<in> dcharacters n;\n   ?\\<chi> \\<noteq> \\<chi>\\<^sub>0\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>s. Z s * Z (s + \\<i> * complex_of_real ?a))\n                    \\<in> O[at (1 -\n                                \\<i> * complex_of_real ?a)](\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. a \\<noteq> 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)", "have Q_eq: \"Q = (\\<lambda>s. (Z s * Z (s + \\<i> * a)) * (Z s * Z (s - \\<i> * a)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q =\n    (\\<lambda>s.\n        Z s * Z (s + \\<i> * complex_of_real a) *\n        (Z s * Z (s - \\<i> * complex_of_real a)))", "by (simp add: Q_def power2_eq_square mult_ac)"], ["proof (state)\nthis:\n  Q =\n  (\\<lambda>s.\n      Z s * Z (s + \\<i> * complex_of_real a) *\n      (Z s * Z (s - \\<i> * complex_of_real a)))\n\ngoal (1 subgoal):\n 1. a \\<noteq> 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)", "consider \"s = 1\" | \"s = 1 + \\<i> * a\" | \"s = 1 - \\<i> * a\" | \"s \\<notin> ?sings\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s = 1 \\<Longrightarrow> thesis;\n     s = 1 + \\<i> * complex_of_real a \\<Longrightarrow> thesis;\n     s = 1 - \\<i> * complex_of_real a \\<Longrightarrow> thesis;\n     s \\<notin> {1, 1 + \\<i> * complex_of_real a,\n                 1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>s = 1 \\<Longrightarrow> ?thesis;\n   s = 1 + \\<i> * complex_of_real a \\<Longrightarrow> ?thesis;\n   s = 1 - \\<i> * complex_of_real a \\<Longrightarrow> ?thesis;\n   s \\<notin> {1, 1 + \\<i> * complex_of_real a,\n               1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. a \\<noteq> 0 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>s = 1 \\<Longrightarrow> ?thesis;\n   s = 1 + \\<i> * complex_of_real a \\<Longrightarrow> ?thesis;\n   s = 1 - \\<i> * complex_of_real a \\<Longrightarrow> ?thesis;\n   s \\<notin> {1, 1 + \\<i> * complex_of_real a,\n               1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. Q \\<in> O[at s](\\<lambda>_. 1)", "proof cases"], ["proof (state)\ngoal (4 subgoals):\n 1. s = 1 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)\n 2. s = 1 + \\<i> * complex_of_real a \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)\n 3. s = 1 - \\<i> * complex_of_real a \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)\n 4. s \\<notin> {1, 1 + \\<i> * complex_of_real a,\n                1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)", "case 1"], ["proof (state)\nthis:\n  s = 1\n\ngoal (4 subgoals):\n 1. s = 1 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)\n 2. s = 1 + \\<i> * complex_of_real a \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)\n 3. s = 1 - \\<i> * complex_of_real a \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)\n 4. s \\<notin> {1, 1 + \\<i> * complex_of_real a,\n                1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)", "have \"Q \\<in> O[at 1](\\<lambda>_. 1 * 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<in> O[at 1](\\<lambda>_. 1 * 1)", "unfolding Q_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        Z s * Z (s + \\<i> * complex_of_real a) *\n        (Z s * Z (s - \\<i> * complex_of_real a)))\n    \\<in> O[at 1](\\<lambda>_. 1 * 1)", "using assms zero zero' False \\<chi>"], ["proof (prove)\nusing this:\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  1 \\<le> Re u\n  Dirichlet_L n \\<chi> (1 - \\<i> * complex_of_real a) = 0\n  Dirichlet_L n \\<chi>' (1 + \\<i> * complex_of_real a) = 0\n  a \\<noteq> 0\n  \\<chi> \\<in> dcharacters n\n  \\<chi>' \\<in> dcharacters n\n\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        Z s * Z (s + \\<i> * complex_of_real a) *\n        (Z s * Z (s - \\<i> * complex_of_real a)))\n    \\<in> O[at 1](\\<lambda>_. 1 * 1)", "by (intro landau_o.big.mult bigo1[of \\<chi> a] bigo1'[of \\<chi> a]; simp)+"], ["proof (state)\nthis:\n  Q \\<in> O[at 1](\\<lambda>_. 1 * 1)\n\ngoal (4 subgoals):\n 1. s = 1 \\<Longrightarrow> Q \\<in> O[at s](\\<lambda>_. 1)\n 2. s = 1 + \\<i> * complex_of_real a \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)\n 3. s = 1 - \\<i> * complex_of_real a \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)\n 4. s \\<notin> {1, 1 + \\<i> * complex_of_real a,\n                1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)", "with 1"], ["proof (chain)\npicking this:\n  s = 1\n  Q \\<in> O[at 1](\\<lambda>_. 1 * 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  s = 1\n  Q \\<in> O[at 1](\\<lambda>_. 1 * 1)\n\ngoal (1 subgoal):\n 1. Q \\<in> O[at s](\\<lambda>_. 1)", "by simp"], ["proof (state)\nthis:\n  Q \\<in> O[at s](\\<lambda>_. 1)\n\ngoal (3 subgoals):\n 1. s = 1 + \\<i> * complex_of_real a \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)\n 2. s = 1 - \\<i> * complex_of_real a \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)\n 3. s \\<notin> {1, 1 + \\<i> * complex_of_real a,\n                1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. s = 1 + \\<i> * complex_of_real a \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)\n 2. s = 1 - \\<i> * complex_of_real a \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)\n 3. s \\<notin> {1, 1 + \\<i> * complex_of_real a,\n                1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)", "case 2"], ["proof (state)\nthis:\n  s = 1 + \\<i> * complex_of_real a\n\ngoal (3 subgoals):\n 1. s = 1 + \\<i> * complex_of_real a \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)\n 2. s = 1 - \\<i> * complex_of_real a \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)\n 3. s \\<notin> {1, 1 + \\<i> * complex_of_real a,\n                1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)", "have \"Q \\<in> O[at (1 + \\<i> * a)](\\<lambda>_. 1 * 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<in> O[at (1 + \\<i> * complex_of_real a)](\\<lambda>_. 1 * 1)", "unfolding Q_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        Z s * Z (s + \\<i> * complex_of_real a) *\n        (Z s * Z (s - \\<i> * complex_of_real a)))\n    \\<in> O[at (1 + \\<i> * complex_of_real a)](\\<lambda>_. 1 * 1)", "using assms zero zero' False \\<chi> n"], ["proof (prove)\nusing this:\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  1 \\<le> Re u\n  Dirichlet_L n \\<chi> (1 - \\<i> * complex_of_real a) = 0\n  Dirichlet_L n \\<chi>' (1 + \\<i> * complex_of_real a) = 0\n  a \\<noteq> 0\n  \\<chi> \\<in> dcharacters n\n  \\<chi>' \\<in> dcharacters n\n  1 < n\n\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        Z s * Z (s + \\<i> * complex_of_real a) *\n        (Z s * Z (s - \\<i> * complex_of_real a)))\n    \\<in> O[at (1 + \\<i> * complex_of_real a)](\\<lambda>_. 1 * 1)", "by (intro landau_o.big.mult bigo2[of \\<chi> a] continuous_imp_bigo_1)\n             (auto simp: Z_def dcharacters_def intro!: continuous_intros)"], ["proof (state)\nthis:\n  Q \\<in> O[at (1 + \\<i> * complex_of_real a)](\\<lambda>_. 1 * 1)\n\ngoal (3 subgoals):\n 1. s = 1 + \\<i> * complex_of_real a \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)\n 2. s = 1 - \\<i> * complex_of_real a \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)\n 3. s \\<notin> {1, 1 + \\<i> * complex_of_real a,\n                1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)", "with 2"], ["proof (chain)\npicking this:\n  s = 1 + \\<i> * complex_of_real a\n  Q \\<in> O[at (1 + \\<i> * complex_of_real a)](\\<lambda>_. 1 * 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  s = 1 + \\<i> * complex_of_real a\n  Q \\<in> O[at (1 + \\<i> * complex_of_real a)](\\<lambda>_. 1 * 1)\n\ngoal (1 subgoal):\n 1. Q \\<in> O[at s](\\<lambda>_. 1)", "by simp"], ["proof (state)\nthis:\n  Q \\<in> O[at s](\\<lambda>_. 1)\n\ngoal (2 subgoals):\n 1. s = 1 - \\<i> * complex_of_real a \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)\n 2. s \\<notin> {1, 1 + \\<i> * complex_of_real a,\n                1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. s = 1 - \\<i> * complex_of_real a \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)\n 2. s \\<notin> {1, 1 + \\<i> * complex_of_real a,\n                1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)", "case 3"], ["proof (state)\nthis:\n  s = 1 - \\<i> * complex_of_real a\n\ngoal (2 subgoals):\n 1. s = 1 - \\<i> * complex_of_real a \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)\n 2. s \\<notin> {1, 1 + \\<i> * complex_of_real a,\n                1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)", "have \"Q \\<in> O[at (1 - \\<i> * a)](\\<lambda>_. 1 * 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<in> O[at (1 - \\<i> * complex_of_real a)](\\<lambda>_. 1 * 1)", "unfolding Q_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        Z s * Z (s + \\<i> * complex_of_real a) *\n        (Z s * Z (s - \\<i> * complex_of_real a)))\n    \\<in> O[at (1 - \\<i> * complex_of_real a)](\\<lambda>_. 1 * 1)", "using assms zero zero' False \\<chi> n"], ["proof (prove)\nusing this:\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  1 \\<le> Re u\n  Dirichlet_L n \\<chi> (1 - \\<i> * complex_of_real a) = 0\n  Dirichlet_L n \\<chi>' (1 + \\<i> * complex_of_real a) = 0\n  a \\<noteq> 0\n  \\<chi> \\<in> dcharacters n\n  \\<chi>' \\<in> dcharacters n\n  1 < n\n\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        Z s * Z (s + \\<i> * complex_of_real a) *\n        (Z s * Z (s - \\<i> * complex_of_real a)))\n    \\<in> O[at (1 - \\<i> * complex_of_real a)](\\<lambda>_. 1 * 1)", "by (intro landau_o.big.mult bigo2'[of \\<chi> a] continuous_imp_bigo_1)\n             (auto simp: Z_def dcharacters_def intro!: continuous_intros)"], ["proof (state)\nthis:\n  Q \\<in> O[at (1 - \\<i> * complex_of_real a)](\\<lambda>_. 1 * 1)\n\ngoal (2 subgoals):\n 1. s = 1 - \\<i> * complex_of_real a \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)\n 2. s \\<notin> {1, 1 + \\<i> * complex_of_real a,\n                1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)", "with 3"], ["proof (chain)\npicking this:\n  s = 1 - \\<i> * complex_of_real a\n  Q \\<in> O[at (1 - \\<i> * complex_of_real a)](\\<lambda>_. 1 * 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  s = 1 - \\<i> * complex_of_real a\n  Q \\<in> O[at (1 - \\<i> * complex_of_real a)](\\<lambda>_. 1 * 1)\n\ngoal (1 subgoal):\n 1. Q \\<in> O[at s](\\<lambda>_. 1)", "by simp"], ["proof (state)\nthis:\n  Q \\<in> O[at s](\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. s \\<notin> {1, 1 + \\<i> * complex_of_real a,\n                1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<notin> {1, 1 + \\<i> * complex_of_real a,\n                1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)", "case 4"], ["proof (state)\nthis:\n  s \\<notin> {1, 1 + \\<i> * complex_of_real a, 1 - \\<i> * complex_of_real a}\n\ngoal (1 subgoal):\n 1. s \\<notin> {1, 1 + \\<i> * complex_of_real a,\n                1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n    Q \\<in> O[at s](\\<lambda>_. 1)", "thus ?thesis"], ["proof (prove)\nusing this:\n  s \\<notin> {1, 1 + \\<i> * complex_of_real a, 1 - \\<i> * complex_of_real a}\n\ngoal (1 subgoal):\n 1. Q \\<in> O[at s](\\<lambda>_. 1)", "unfolding Q_def Z_def"], ["proof (prove)\nusing this:\n  s \\<notin> {1, 1 + \\<i> * complex_of_real a, 1 - \\<i> * complex_of_real a}\n\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        (\\<Prod>\\<chi>\\<in>dcharacters n. Dirichlet_L n \\<chi> s)\\<^sup>2 *\n        (\\<Prod>\\<chi>\\<in>dcharacters n.\n           Dirichlet_L n \\<chi> (s + \\<i> * complex_of_real a)) *\n        (\\<Prod>\\<chi>\\<in>dcharacters n.\n           Dirichlet_L n \\<chi> (s - \\<i> * complex_of_real a)))\n    \\<in> O[at s](\\<lambda>_. 1)", "using n"], ["proof (prove)\nusing this:\n  s \\<notin> {1, 1 + \\<i> * complex_of_real a, 1 - \\<i> * complex_of_real a}\n  1 < n\n\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        (\\<Prod>\\<chi>\\<in>dcharacters n. Dirichlet_L n \\<chi> s)\\<^sup>2 *\n        (\\<Prod>\\<chi>\\<in>dcharacters n.\n           Dirichlet_L n \\<chi> (s + \\<i> * complex_of_real a)) *\n        (\\<Prod>\\<chi>\\<in>dcharacters n.\n           Dirichlet_L n \\<chi> (s - \\<i> * complex_of_real a)))\n    \\<in> O[at s](\\<lambda>_. 1)", "by (intro continuous_imp_bigo_1 continuous_intros)\n             (auto simp: dcharacters_def complex_eq_iff)"], ["proof (state)\nthis:\n  Q \\<in> O[at s](\\<lambda>_. 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Q \\<in> O[at s](\\<lambda>_. 1)\n\ngoal:\nNo subgoals!", "qed\n  \n    \\<comment> \\<open>Again, we can remove the singularities from @{term Q} and extend it to an entire function.\\<close>"], ["proof (state)\nthis:\n  Q \\<in> O[at ?s](\\<lambda>_. 1)\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "have \"\\<exists>Q'. Q' holomorphic_on UNIV \\<and> (\\<forall>z\\<in>UNIV - ?sings. Q' z = Q z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       Q' holomorphic_on UNIV \\<and>\n       (\\<forall>z\\<in>UNIV -\n                       {1, 1 + \\<i> * complex_of_real a,\n                        1 - \\<i> * complex_of_real a}.\n           Q' z = Q z)", "using n"], ["proof (prove)\nusing this:\n  1 < n\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       Q' holomorphic_on UNIV \\<and>\n       (\\<forall>z\\<in>UNIV -\n                       {1, 1 + \\<i> * complex_of_real a,\n                        1 - \\<i> * complex_of_real a}.\n           Q' z = Q z)", "by (intro removable_singularities Q_bigo_1)\n                 (auto simp: Q_def Z_def dcharacters_def complex_eq_iff intro!: holomorphic_intros)"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     Q' holomorphic_on UNIV \\<and>\n     (\\<forall>z\\<in>UNIV -\n                     {1, 1 + \\<i> * complex_of_real a,\n                      1 - \\<i> * complex_of_real a}.\n         Q' z = Q z)\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>Q'.\n     Q' holomorphic_on UNIV \\<and>\n     (\\<forall>z\\<in>UNIV -\n                     {1, 1 + \\<i> * complex_of_real a,\n                      1 - \\<i> * complex_of_real a}.\n         Q' z = Q z)", "obtain Q' where Q': \"Q' holomorphic_on UNIV\" \"\\<And>z. z \\<notin> ?sings \\<Longrightarrow> Q' z = Q z\""], ["proof (prove)\nusing this:\n  \\<exists>Q'.\n     Q' holomorphic_on UNIV \\<and>\n     (\\<forall>z\\<in>UNIV -\n                     {1, 1 + \\<i> * complex_of_real a,\n                      1 - \\<i> * complex_of_real a}.\n         Q' z = Q z)\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>Q' holomorphic_on UNIV;\n         \\<And>z.\n            z \\<notin> {1, 1 + \\<i> * complex_of_real a,\n                        1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n            Q' z = Q z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast\n  \n    \\<comment> \\<open>@{term Q'} constitutes an analytic continuation of the Dirichlet series of @{term Q}.\\<close>"], ["proof (state)\nthis:\n  Q' holomorphic_on UNIV\n  ?z \\<notin> {1, 1 + \\<i> * complex_of_real a,\n               1 - \\<i> * complex_of_real a} \\<Longrightarrow>\n  Q' ?z = Q ?z\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "have eval_Q_fds: \"eval_fds Q_fds s = Q' s\" if \"Re s > 1\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. eval_fds Q_fds s = Q' s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. eval_fds Q_fds s = Q' s", "have [simp]: \"dcharacter n \\<chi>\" if \"\\<chi> \\<in> dcharacters n\" for \\<chi>"], ["proof (prove)\ngoal (1 subgoal):\n 1. dcharacter n \\<chi>", "using that"], ["proof (prove)\nusing this:\n  \\<chi> \\<in> dcharacters n\n\ngoal (1 subgoal):\n 1. dcharacter n \\<chi>", "by (simp add: dcharacters_def)"], ["proof (state)\nthis:\n  ?\\<chi> \\<in> dcharacters n \\<Longrightarrow> dcharacter n ?\\<chi>\n\ngoal (1 subgoal):\n 1. eval_fds Q_fds s = Q' s", "from that"], ["proof (chain)\npicking this:\n  1 < Re s", "have \"abs_conv_abscissa (fds \\<chi>) < ereal (Re s)\" if \"\\<chi> \\<in> dcharacters n\" for \\<chi>"], ["proof (prove)\nusing this:\n  1 < Re s\n\ngoal (1 subgoal):\n 1. abs_conv_abscissa (fds \\<chi>) < ereal (Re s)", "using that"], ["proof (prove)\nusing this:\n  1 < Re s\n  \\<chi> \\<in> dcharacters n\n\ngoal (1 subgoal):\n 1. abs_conv_abscissa (fds \\<chi>) < ereal (Re s)", "by (intro le_less_trans[OF dcharacter.abs_conv_abscissa_weak[of n \\<chi>]]) auto"], ["proof (state)\nthis:\n  ?\\<chi> \\<in> dcharacters n \\<Longrightarrow>\n  abs_conv_abscissa (fds ?\\<chi>) < ereal (Re s)\n\ngoal (1 subgoal):\n 1. eval_fds Q_fds s = Q' s", "hence \"eval_fds Q_fds s = Q s\""], ["proof (prove)\nusing this:\n  ?\\<chi> \\<in> dcharacters n \\<Longrightarrow>\n  abs_conv_abscissa (fds ?\\<chi>) < ereal (Re s)\n\ngoal (1 subgoal):\n 1. eval_fds Q_fds s = Q s", "using that"], ["proof (prove)\nusing this:\n  ?\\<chi> \\<in> dcharacters n \\<Longrightarrow>\n  abs_conv_abscissa (fds ?\\<chi>) < ereal (Re s)\n  1 < Re s\n\ngoal (1 subgoal):\n 1. eval_fds Q_fds s = Q s", "by (simp add: Q_fds_def Q_def eval_fds_mult eval_fds_power fds_abs_converges_mult \n              eval_fds_prod fds_abs_converges_prod dcharacter.Dirichlet_L_conv_eval_fds_weak\n              fds_abs_converges_power eval_fds_zeta Z_fds_def Z_def fds_abs_converges)"], ["proof (state)\nthis:\n  eval_fds Q_fds s = Q s\n\ngoal (1 subgoal):\n 1. eval_fds Q_fds s = Q' s", "also"], ["proof (state)\nthis:\n  eval_fds Q_fds s = Q s\n\ngoal (1 subgoal):\n 1. eval_fds Q_fds s = Q' s", "from that"], ["proof (chain)\npicking this:\n  1 < Re s", "have \"\\<dots> = Q' s\""], ["proof (prove)\nusing this:\n  1 < Re s\n\ngoal (1 subgoal):\n 1. Q s = Q' s", "by (subst Q') auto"], ["proof (state)\nthis:\n  Q s = Q' s\n\ngoal (1 subgoal):\n 1. eval_fds Q_fds s = Q' s", "finally"], ["proof (chain)\npicking this:\n  eval_fds Q_fds s = Q' s", "show ?thesis"], ["proof (prove)\nusing this:\n  eval_fds Q_fds s = Q' s\n\ngoal (1 subgoal):\n 1. eval_fds Q_fds s = Q' s", "."], ["proof (state)\nthis:\n  eval_fds Q_fds s = Q' s\n\ngoal:\nNo subgoals!", "qed\n  \n    \\<comment> \\<open>Since the characters are completely multiplicative, the series for this logarithm can\n        be rewritten like this:\\<close>"], ["proof (state)\nthis:\n  1 < Re ?s \\<Longrightarrow> eval_fds Q_fds ?s = Q' ?s\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "define I where \"I = (\\<lambda>k. if [k = 1] (mod n) then totient n else 0 :: real)\""], ["proof (state)\nthis:\n  I = (\\<lambda>k. real (if [k = 1] (mod n) then totient n else 0))\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "have ln_Q_fds_eq:\n      \"fds_ln 0 Q_fds = fds (\\<lambda>k. of_real (2 * I k * mangoldt k / ln k * (1 + cos (a * ln k))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fds_ln 0 Q_fds =\n    fds (\\<lambda>k.\n            complex_of_real\n             (2 * I k * mangoldt k / ln (real k) *\n              (1 + cos (a * ln (real k)))))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fds_ln 0 Q_fds =\n    fds (\\<lambda>k.\n            complex_of_real\n             (2 * I k * mangoldt k / ln (real k) *\n              (1 + cos (a * ln (real k)))))", "have nz: \"\\<chi> (Suc 0) = 1\" if \"\\<chi> \\<in> dcharacters n\" for \\<chi>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<chi> (Suc 0) = 1", "using dcharacter.Suc_0[of n \\<chi>] that"], ["proof (prove)\nusing this:\n  dcharacter n \\<chi> \\<Longrightarrow> \\<chi> (Suc 0) = 1\n  \\<chi> \\<in> dcharacters n\n\ngoal (1 subgoal):\n 1. \\<chi> (Suc 0) = 1", "by (simp add: dcharacters_def)"], ["proof (state)\nthis:\n  ?\\<chi> \\<in> dcharacters n \\<Longrightarrow> ?\\<chi> (Suc 0) = 1\n\ngoal (1 subgoal):\n 1. fds_ln 0 Q_fds =\n    fds (\\<lambda>k.\n            complex_of_real\n             (2 * I k * mangoldt k / ln (real k) *\n              (1 + cos (a * ln (real k)))))", "note simps = fds_ln_mult[where l' = 0 and l'' = 0] fds_ln_power[where l' = 0]\n                   fds_ln_prod[where l' = \"\\<lambda>_. 0\"]"], ["proof (state)\nthis:\n  \\<lbrakk>fds_nth ?f 1 \\<noteq> (0::?'a1); fds_nth ?g 1 \\<noteq> (0::?'a1);\n   (0::?'a1) + (0::?'a1) = ?l\\<rbrakk>\n  \\<Longrightarrow> fds_ln ?l (?f * ?g) =\n                    fds_ln (0::?'a1) ?f + fds_ln (0::?'a1) ?g\n  \\<lbrakk>fds_nth ?f 1 \\<noteq> (0::?'a1);\n   ?l = of_nat ?n * (0::?'a1)\\<rbrakk>\n  \\<Longrightarrow> fds_ln ?l (?f ^ ?n) = of_nat ?n * fds_ln (0::?'a1) ?f\n  \\<lbrakk>\\<And>x.\n              x \\<in> ?A \\<Longrightarrow>\n              fds_nth (?f x) 1 \\<noteq> (0::?'b1);\n   (\\<Sum>x\\<in>?A. (0::?'b1)) = ?l\\<rbrakk>\n  \\<Longrightarrow> fds_ln ?l (prod ?f ?A) =\n                    (\\<Sum>x\\<in>?A. fds_ln (0::?'b1) (?f x))\n\ngoal (1 subgoal):\n 1. fds_ln 0 Q_fds =\n    fds (\\<lambda>k.\n            complex_of_real\n             (2 * I k * mangoldt k / ln (real k) *\n              (1 + cos (a * ln (real k)))))", "have \"fds_ln 0 Q_fds = (\\<Sum>\\<chi>\\<in>dcharacters n. 2 * fds_ln 0 (fds \\<chi>) + \n              fds_shift (\\<i> * a) (fds_ln 0 (fds \\<chi>)) + fds_shift (-\\<i> * a) (fds_ln 0 (fds \\<chi>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fds_ln 0 Q_fds =\n    (\\<Sum>\\<chi>\\<in>dcharacters n.\n       2 * fds_ln 0 (fds \\<chi>) +\n       fds_shift (\\<i> * complex_of_real a) (fds_ln 0 (fds \\<chi>)) +\n       fds_shift (- \\<i> * complex_of_real a) (fds_ln 0 (fds \\<chi>)))", "by (auto simp: Q_fds_def Z_fds_def simps nz sum.distrib sum_distrib_left)"], ["proof (state)\nthis:\n  fds_ln 0 Q_fds =\n  (\\<Sum>\\<chi>\\<in>dcharacters n.\n     2 * fds_ln 0 (fds \\<chi>) +\n     fds_shift (\\<i> * complex_of_real a) (fds_ln 0 (fds \\<chi>)) +\n     fds_shift (- \\<i> * complex_of_real a) (fds_ln 0 (fds \\<chi>)))\n\ngoal (1 subgoal):\n 1. fds_ln 0 Q_fds =\n    fds (\\<lambda>k.\n            complex_of_real\n             (2 * I k * mangoldt k / ln (real k) *\n              (1 + cos (a * ln (real k)))))", "also"], ["proof (state)\nthis:\n  fds_ln 0 Q_fds =\n  (\\<Sum>\\<chi>\\<in>dcharacters n.\n     2 * fds_ln 0 (fds \\<chi>) +\n     fds_shift (\\<i> * complex_of_real a) (fds_ln 0 (fds \\<chi>)) +\n     fds_shift (- \\<i> * complex_of_real a) (fds_ln 0 (fds \\<chi>)))\n\ngoal (1 subgoal):\n 1. fds_ln 0 Q_fds =\n    fds (\\<lambda>k.\n            complex_of_real\n             (2 * I k * mangoldt k / ln (real k) *\n              (1 + cos (a * ln (real k)))))", "have \"\\<dots> = (\\<Sum>\\<chi>\\<in>dcharacters n. \n                         fds (\\<lambda>k. \\<chi> k * of_real (2 * mangoldt k / ln k * (1 + cos (a * ln k)))))\"\n        (is \"(\\<Sum>\\<chi>\\<in>_. ?l \\<chi>) = _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<chi>\\<in>dcharacters n.\n       2 * fds_ln 0 (fds \\<chi>) +\n       fds_shift (\\<i> * complex_of_real a) (fds_ln 0 (fds \\<chi>)) +\n       fds_shift (- \\<i> * complex_of_real a) (fds_ln 0 (fds \\<chi>))) =\n    (\\<Sum>\\<chi>\\<in>dcharacters n.\n       fds (\\<lambda>k.\n               \\<chi> k *\n               complex_of_real\n                (2 * mangoldt k / ln (real k) *\n                 (1 + cos (a * ln (real k))))))", "proof (intro sum.cong refl, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> dcharacters n \\<Longrightarrow>\n       2 * fds_ln 0 (fds x) +\n       fds_shift (\\<i> * complex_of_real a) (fds_ln 0 (fds x)) +\n       fds_shift (- \\<i> * complex_of_real a) (fds_ln 0 (fds x)) =\n       fds (\\<lambda>k.\n               x k *\n               complex_of_real\n                (2 * mangoldt k / ln (real k) *\n                 (1 + cos (a * ln (real k)))))", "case (1 \\<chi>)"], ["proof (state)\nthis:\n  \\<chi> \\<in> dcharacters n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> dcharacters n \\<Longrightarrow>\n       2 * fds_ln 0 (fds x) +\n       fds_shift (\\<i> * complex_of_real a) (fds_ln 0 (fds x)) +\n       fds_shift (- \\<i> * complex_of_real a) (fds_ln 0 (fds x)) =\n       fds (\\<lambda>k.\n               x k *\n               complex_of_real\n                (2 * mangoldt k / ln (real k) *\n                 (1 + cos (a * ln (real k)))))", "then"], ["proof (chain)\npicking this:\n  \\<chi> \\<in> dcharacters n", "interpret dcharacter n G \\<chi>"], ["proof (prove)\nusing this:\n  \\<chi> \\<in> dcharacters n\n\ngoal (1 subgoal):\n 1. dcharacter n \\<chi> &&& G \\<equiv> residue_mult_group n", "by (simp_all add: dcharacters_def G_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> dcharacters n \\<Longrightarrow>\n       2 * fds_ln 0 (fds x) +\n       fds_shift (\\<i> * complex_of_real a) (fds_ln 0 (fds x)) +\n       fds_shift (- \\<i> * complex_of_real a) (fds_ln 0 (fds x)) =\n       fds (\\<lambda>k.\n               x k *\n               complex_of_real\n                (2 * mangoldt k / ln (real k) *\n                 (1 + cos (a * ln (real k)))))", "have mult: \"completely_multiplicative_function (fds_nth (fds \\<chi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. completely_multiplicative_function (fds_nth (fds \\<chi>))", "by (simp add: fds_nth_fds' mult.completely_multiplicative_function_axioms)"], ["proof (state)\nthis:\n  completely_multiplicative_function (fds_nth (fds \\<chi>))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> dcharacters n \\<Longrightarrow>\n       2 * fds_ln 0 (fds x) +\n       fds_shift (\\<i> * complex_of_real a) (fds_ln 0 (fds x)) +\n       fds_shift (- \\<i> * complex_of_real a) (fds_ln 0 (fds x)) =\n       fds (\\<lambda>k.\n               x k *\n               complex_of_real\n                (2 * mangoldt k / ln (real k) *\n                 (1 + cos (a * ln (real k)))))", "have *: \"fds_ln 0 (fds \\<chi>) = fds (\\<lambda>n. \\<chi> n * mangoldt n /\\<^sub>R ln (real n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fds_ln 0 (fds \\<chi>) =\n    fds (\\<lambda>n. \\<chi> n * mangoldt n /\\<^sub>R ln (real n))", "by (simp add: fds_ln_completely_multiplicative[OF mult] fds_nth_fds' fds_eq_iff)"], ["proof (state)\nthis:\n  fds_ln 0 (fds \\<chi>) =\n  fds (\\<lambda>n. \\<chi> n * mangoldt n /\\<^sub>R ln (real n))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> dcharacters n \\<Longrightarrow>\n       2 * fds_ln 0 (fds x) +\n       fds_shift (\\<i> * complex_of_real a) (fds_ln 0 (fds x)) +\n       fds_shift (- \\<i> * complex_of_real a) (fds_ln 0 (fds x)) =\n       fds (\\<lambda>k.\n               x k *\n               complex_of_real\n                (2 * mangoldt k / ln (real k) *\n                 (1 + cos (a * ln (real k)))))", "have \"?l \\<chi> = fds (\\<lambda>k. \\<chi> k * mangoldt k /\\<^sub>R ln k * (2 + k powr (\\<i> * a) + k powr (-\\<i> * a)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * fds_ln 0 (fds \\<chi>) +\n    fds_shift (\\<i> * complex_of_real a) (fds_ln 0 (fds \\<chi>)) +\n    fds_shift (- \\<i> * complex_of_real a) (fds_ln 0 (fds \\<chi>)) =\n    fds (\\<lambda>k.\n            \\<chi> k * mangoldt k /\\<^sub>R ln (real k) *\n            (2 + of_nat k powr (\\<i> * complex_of_real a) +\n             of_nat k powr (- \\<i> * complex_of_real a)))", "by (unfold *, rule fds_eqI) (simp add: algebra_simps scaleR_conv_of_real numeral_fds)"], ["proof (state)\nthis:\n  2 * fds_ln 0 (fds \\<chi>) +\n  fds_shift (\\<i> * complex_of_real a) (fds_ln 0 (fds \\<chi>)) +\n  fds_shift (- \\<i> * complex_of_real a) (fds_ln 0 (fds \\<chi>)) =\n  fds (\\<lambda>k.\n          \\<chi> k * mangoldt k /\\<^sub>R ln (real k) *\n          (2 + of_nat k powr (\\<i> * complex_of_real a) +\n           of_nat k powr (- \\<i> * complex_of_real a)))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> dcharacters n \\<Longrightarrow>\n       2 * fds_ln 0 (fds x) +\n       fds_shift (\\<i> * complex_of_real a) (fds_ln 0 (fds x)) +\n       fds_shift (- \\<i> * complex_of_real a) (fds_ln 0 (fds x)) =\n       fds (\\<lambda>k.\n               x k *\n               complex_of_real\n                (2 * mangoldt k / ln (real k) *\n                 (1 + cos (a * ln (real k)))))", "also"], ["proof (state)\nthis:\n  2 * fds_ln 0 (fds \\<chi>) +\n  fds_shift (\\<i> * complex_of_real a) (fds_ln 0 (fds \\<chi>)) +\n  fds_shift (- \\<i> * complex_of_real a) (fds_ln 0 (fds \\<chi>)) =\n  fds (\\<lambda>k.\n          \\<chi> k * mangoldt k /\\<^sub>R ln (real k) *\n          (2 + of_nat k powr (\\<i> * complex_of_real a) +\n           of_nat k powr (- \\<i> * complex_of_real a)))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> dcharacters n \\<Longrightarrow>\n       2 * fds_ln 0 (fds x) +\n       fds_shift (\\<i> * complex_of_real a) (fds_ln 0 (fds x)) +\n       fds_shift (- \\<i> * complex_of_real a) (fds_ln 0 (fds x)) =\n       fds (\\<lambda>k.\n               x k *\n               complex_of_real\n                (2 * mangoldt k / ln (real k) *\n                 (1 + cos (a * ln (real k)))))", "have \"\\<dots> = fds (\\<lambda>k. \\<chi> k * 2 * mangoldt k /\\<^sub>R ln k * (1 + cos (of_real(a * ln k))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fds (\\<lambda>k.\n            \\<chi> k * mangoldt k /\\<^sub>R ln (real k) *\n            (2 + of_nat k powr (\\<i> * complex_of_real a) +\n             of_nat k powr (- \\<i> * complex_of_real a))) =\n    fds (\\<lambda>k.\n            \\<chi> k * 2 * mangoldt k /\\<^sub>R ln (real k) *\n            (1 + cos (complex_of_real (a * ln (real k)))))", "unfolding cos_exp_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. fds (\\<lambda>k.\n            \\<chi> k * mangoldt k /\\<^sub>R ln (real k) *\n            (2 + of_nat k powr (\\<i> * complex_of_real a) +\n             of_nat k powr (- \\<i> * complex_of_real a))) =\n    fds (\\<lambda>k.\n            \\<chi> k * 2 * mangoldt k /\\<^sub>R ln (real k) *\n            (1 +\n             (exp (\\<i> * complex_of_real (a * ln (real k))) +\n              exp (- (\\<i> * complex_of_real (a * ln (real k))))) /\n             2))", "by (intro fds_eqI) (simp add: powr_def algebra_simps)"], ["proof (state)\nthis:\n  fds (\\<lambda>k.\n          \\<chi> k * mangoldt k /\\<^sub>R ln (real k) *\n          (2 + of_nat k powr (\\<i> * complex_of_real a) +\n           of_nat k powr (- \\<i> * complex_of_real a))) =\n  fds (\\<lambda>k.\n          \\<chi> k * 2 * mangoldt k /\\<^sub>R ln (real k) *\n          (1 + cos (complex_of_real (a * ln (real k)))))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> dcharacters n \\<Longrightarrow>\n       2 * fds_ln 0 (fds x) +\n       fds_shift (\\<i> * complex_of_real a) (fds_ln 0 (fds x)) +\n       fds_shift (- \\<i> * complex_of_real a) (fds_ln 0 (fds x)) =\n       fds (\\<lambda>k.\n               x k *\n               complex_of_real\n                (2 * mangoldt k / ln (real k) *\n                 (1 + cos (a * ln (real k)))))", "also"], ["proof (state)\nthis:\n  fds (\\<lambda>k.\n          \\<chi> k * mangoldt k /\\<^sub>R ln (real k) *\n          (2 + of_nat k powr (\\<i> * complex_of_real a) +\n           of_nat k powr (- \\<i> * complex_of_real a))) =\n  fds (\\<lambda>k.\n          \\<chi> k * 2 * mangoldt k /\\<^sub>R ln (real k) *\n          (1 + cos (complex_of_real (a * ln (real k)))))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> dcharacters n \\<Longrightarrow>\n       2 * fds_ln 0 (fds x) +\n       fds_shift (\\<i> * complex_of_real a) (fds_ln 0 (fds x)) +\n       fds_shift (- \\<i> * complex_of_real a) (fds_ln 0 (fds x)) =\n       fds (\\<lambda>k.\n               x k *\n               complex_of_real\n                (2 * mangoldt k / ln (real k) *\n                 (1 + cos (a * ln (real k)))))", "have \"\\<dots> = fds (\\<lambda>k. \\<chi> k * of_real (2 * mangoldt k / ln k * (1 + cos (a * ln k))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fds (\\<lambda>k.\n            \\<chi> k * 2 * mangoldt k /\\<^sub>R ln (real k) *\n            (1 + cos (complex_of_real (a * ln (real k))))) =\n    fds (\\<lambda>k.\n            \\<chi> k *\n            complex_of_real\n             (2 * mangoldt k / ln (real k) * (1 + cos (a * ln (real k)))))", "unfolding cos_of_real"], ["proof (prove)\ngoal (1 subgoal):\n 1. fds (\\<lambda>k.\n            \\<chi> k * 2 * mangoldt k /\\<^sub>R ln (real k) *\n            (1 + complex_of_real (cos (a * ln (real k))))) =\n    fds (\\<lambda>k.\n            \\<chi> k *\n            complex_of_real\n             (2 * mangoldt k / ln (real k) * (1 + cos (a * ln (real k)))))", "by (simp add: field_simps scaleR_conv_of_real)"], ["proof (state)\nthis:\n  fds (\\<lambda>k.\n          \\<chi> k * 2 * mangoldt k /\\<^sub>R ln (real k) *\n          (1 + cos (complex_of_real (a * ln (real k))))) =\n  fds (\\<lambda>k.\n          \\<chi> k *\n          complex_of_real\n           (2 * mangoldt k / ln (real k) * (1 + cos (a * ln (real k)))))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> dcharacters n \\<Longrightarrow>\n       2 * fds_ln 0 (fds x) +\n       fds_shift (\\<i> * complex_of_real a) (fds_ln 0 (fds x)) +\n       fds_shift (- \\<i> * complex_of_real a) (fds_ln 0 (fds x)) =\n       fds (\\<lambda>k.\n               x k *\n               complex_of_real\n                (2 * mangoldt k / ln (real k) *\n                 (1 + cos (a * ln (real k)))))", "finally"], ["proof (chain)\npicking this:\n  2 * fds_ln 0 (fds \\<chi>) +\n  fds_shift (\\<i> * complex_of_real a) (fds_ln 0 (fds \\<chi>)) +\n  fds_shift (- \\<i> * complex_of_real a) (fds_ln 0 (fds \\<chi>)) =\n  fds (\\<lambda>k.\n          \\<chi> k *\n          complex_of_real\n           (2 * mangoldt k / ln (real k) * (1 + cos (a * ln (real k)))))", "show ?case"], ["proof (prove)\nusing this:\n  2 * fds_ln 0 (fds \\<chi>) +\n  fds_shift (\\<i> * complex_of_real a) (fds_ln 0 (fds \\<chi>)) +\n  fds_shift (- \\<i> * complex_of_real a) (fds_ln 0 (fds \\<chi>)) =\n  fds (\\<lambda>k.\n          \\<chi> k *\n          complex_of_real\n           (2 * mangoldt k / ln (real k) * (1 + cos (a * ln (real k)))))\n\ngoal (1 subgoal):\n 1. 2 * fds_ln 0 (fds \\<chi>) +\n    fds_shift (\\<i> * complex_of_real a) (fds_ln 0 (fds \\<chi>)) +\n    fds_shift (- \\<i> * complex_of_real a) (fds_ln 0 (fds \\<chi>)) =\n    fds (\\<lambda>k.\n            \\<chi> k *\n            complex_of_real\n             (2 * mangoldt k / ln (real k) * (1 + cos (a * ln (real k)))))", "."], ["proof (state)\nthis:\n  2 * fds_ln 0 (fds \\<chi>) +\n  fds_shift (\\<i> * complex_of_real a) (fds_ln 0 (fds \\<chi>)) +\n  fds_shift (- \\<i> * complex_of_real a) (fds_ln 0 (fds \\<chi>)) =\n  fds (\\<lambda>k.\n          \\<chi> k *\n          complex_of_real\n           (2 * mangoldt k / ln (real k) * (1 + cos (a * ln (real k)))))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>\\<chi>\\<in>dcharacters n.\n     2 * fds_ln 0 (fds \\<chi>) +\n     fds_shift (\\<i> * complex_of_real a) (fds_ln 0 (fds \\<chi>)) +\n     fds_shift (- \\<i> * complex_of_real a) (fds_ln 0 (fds \\<chi>))) =\n  (\\<Sum>\\<chi>\\<in>dcharacters n.\n     fds (\\<lambda>k.\n             \\<chi> k *\n             complex_of_real\n              (2 * mangoldt k / ln (real k) * (1 + cos (a * ln (real k))))))\n\ngoal (1 subgoal):\n 1. fds_ln 0 Q_fds =\n    fds (\\<lambda>k.\n            complex_of_real\n             (2 * I k * mangoldt k / ln (real k) *\n              (1 + cos (a * ln (real k)))))", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<chi>\\<in>dcharacters n.\n     2 * fds_ln 0 (fds \\<chi>) +\n     fds_shift (\\<i> * complex_of_real a) (fds_ln 0 (fds \\<chi>)) +\n     fds_shift (- \\<i> * complex_of_real a) (fds_ln 0 (fds \\<chi>))) =\n  (\\<Sum>\\<chi>\\<in>dcharacters n.\n     fds (\\<lambda>k.\n             \\<chi> k *\n             complex_of_real\n              (2 * mangoldt k / ln (real k) * (1 + cos (a * ln (real k))))))\n\ngoal (1 subgoal):\n 1. fds_ln 0 Q_fds =\n    fds (\\<lambda>k.\n            complex_of_real\n             (2 * I k * mangoldt k / ln (real k) *\n              (1 + cos (a * ln (real k)))))", "have \"\\<dots> = fds (\\<lambda>k. (\\<Sum>\\<chi>\\<in>dcharacters n. \\<chi> k) * of_real (2 * mangoldt k / ln k * \n                                 (1 + cos (a * ln k))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<chi>\\<in>dcharacters n.\n       fds (\\<lambda>k.\n               \\<chi> k *\n               complex_of_real\n                (2 * mangoldt k / ln (real k) *\n                 (1 + cos (a * ln (real k)))))) =\n    fds (\\<lambda>k.\n            (\\<Sum>\\<chi>\\<in>dcharacters n. \\<chi> k) *\n            complex_of_real\n             (2 * mangoldt k / ln (real k) * (1 + cos (a * ln (real k)))))", "by (simp add: sum_distrib_right sum_divide_distrib scaleR_conv_of_real sum_distrib_left)"], ["proof (state)\nthis:\n  (\\<Sum>\\<chi>\\<in>dcharacters n.\n     fds (\\<lambda>k.\n             \\<chi> k *\n             complex_of_real\n              (2 * mangoldt k / ln (real k) *\n               (1 + cos (a * ln (real k)))))) =\n  fds (\\<lambda>k.\n          (\\<Sum>\\<chi>\\<in>dcharacters n. \\<chi> k) *\n          complex_of_real\n           (2 * mangoldt k / ln (real k) * (1 + cos (a * ln (real k)))))\n\ngoal (1 subgoal):\n 1. fds_ln 0 Q_fds =\n    fds (\\<lambda>k.\n            complex_of_real\n             (2 * I k * mangoldt k / ln (real k) *\n              (1 + cos (a * ln (real k)))))", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<chi>\\<in>dcharacters n.\n     fds (\\<lambda>k.\n             \\<chi> k *\n             complex_of_real\n              (2 * mangoldt k / ln (real k) *\n               (1 + cos (a * ln (real k)))))) =\n  fds (\\<lambda>k.\n          (\\<Sum>\\<chi>\\<in>dcharacters n. \\<chi> k) *\n          complex_of_real\n           (2 * mangoldt k / ln (real k) * (1 + cos (a * ln (real k)))))\n\ngoal (1 subgoal):\n 1. fds_ln 0 Q_fds =\n    fds (\\<lambda>k.\n            complex_of_real\n             (2 * I k * mangoldt k / ln (real k) *\n              (1 + cos (a * ln (real k)))))", "have \"\\<dots> = fds (\\<lambda>k. of_real (2 * I k * mangoldt k / ln k * (1 + cos (a * ln k))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fds (\\<lambda>k.\n            (\\<Sum>\\<chi>\\<in>dcharacters n. \\<chi> k) *\n            complex_of_real\n             (2 * mangoldt k / ln (real k) * (1 + cos (a * ln (real k))))) =\n    fds (\\<lambda>k.\n            complex_of_real\n             (2 * I k * mangoldt k / ln (real k) *\n              (1 + cos (a * ln (real k)))))", "by (intro fds_eqI, subst sum_dcharacters) (simp_all add: I_def algebra_simps)"], ["proof (state)\nthis:\n  fds (\\<lambda>k.\n          (\\<Sum>\\<chi>\\<in>dcharacters n. \\<chi> k) *\n          complex_of_real\n           (2 * mangoldt k / ln (real k) * (1 + cos (a * ln (real k))))) =\n  fds (\\<lambda>k.\n          complex_of_real\n           (2 * I k * mangoldt k / ln (real k) *\n            (1 + cos (a * ln (real k)))))\n\ngoal (1 subgoal):\n 1. fds_ln 0 Q_fds =\n    fds (\\<lambda>k.\n            complex_of_real\n             (2 * I k * mangoldt k / ln (real k) *\n              (1 + cos (a * ln (real k)))))", "finally"], ["proof (chain)\npicking this:\n  fds_ln 0 Q_fds =\n  fds (\\<lambda>k.\n          complex_of_real\n           (2 * I k * mangoldt k / ln (real k) *\n            (1 + cos (a * ln (real k)))))", "show ?thesis"], ["proof (prove)\nusing this:\n  fds_ln 0 Q_fds =\n  fds (\\<lambda>k.\n          complex_of_real\n           (2 * I k * mangoldt k / ln (real k) *\n            (1 + cos (a * ln (real k)))))\n\ngoal (1 subgoal):\n 1. fds_ln 0 Q_fds =\n    fds (\\<lambda>k.\n            complex_of_real\n             (2 * I k * mangoldt k / ln (real k) *\n              (1 + cos (a * ln (real k)))))", "."], ["proof (state)\nthis:\n  fds_ln 0 Q_fds =\n  fds (\\<lambda>k.\n          complex_of_real\n           (2 * I k * mangoldt k / ln (real k) *\n            (1 + cos (a * ln (real k)))))\n\ngoal:\nNo subgoals!", "qed\n    \\<comment> \\<open>The coefficients of that logarithm series are clearly nonnegative:\\<close>"], ["proof (state)\nthis:\n  fds_ln 0 Q_fds =\n  fds (\\<lambda>k.\n          complex_of_real\n           (2 * I k * mangoldt k / ln (real k) *\n            (1 + cos (a * ln (real k)))))\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "have \"nonneg_dirichlet_series (fds_ln 0 Q_fds)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nonneg_dirichlet_series (fds_ln 0 Q_fds)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       0 < n \\<Longrightarrow>\n       fds_nth (fds_ln 0 Q_fds) n \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0", "show \"fds_nth (fds_ln 0 Q_fds) k \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0\" for k"], ["proof (prove)\ngoal (1 subgoal):\n 1. fds_nth (fds_ln 0 Q_fds) k \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0", "proof (cases \"k < 2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. k < 2 \\<Longrightarrow>\n    fds_nth (fds_ln 0 Q_fds) k \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0\n 2. \\<not> k < 2 \\<Longrightarrow>\n    fds_nth (fds_ln 0 Q_fds) k \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0", "case False"], ["proof (state)\nthis:\n  \\<not> k < 2\n\ngoal (2 subgoals):\n 1. k < 2 \\<Longrightarrow>\n    fds_nth (fds_ln 0 Q_fds) k \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0\n 2. \\<not> k < 2 \\<Longrightarrow>\n    fds_nth (fds_ln 0 Q_fds) k \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0", "have cos: \"1 + cos x \\<ge> 0\" for x :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> 1 + cos x", "using cos_ge_minus_one[of x]"], ["proof (prove)\nusing this:\n  - 1 \\<le> cos x\n\ngoal (1 subgoal):\n 1. 0 \\<le> 1 + cos x", "by linarith"], ["proof (state)\nthis:\n  0 \\<le> 1 + cos ?x\n\ngoal (2 subgoals):\n 1. k < 2 \\<Longrightarrow>\n    fds_nth (fds_ln 0 Q_fds) k \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0\n 2. \\<not> k < 2 \\<Longrightarrow>\n    fds_nth (fds_ln 0 Q_fds) k \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0", "have \"fds_nth (fds_ln 0 Q_fds) k =\n                of_real (2 * I k * mangoldt k / ln k * (1 + cos (a * ln k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fds_nth (fds_ln 0 Q_fds) k =\n    complex_of_real\n     (2 * I k * mangoldt k / ln (real k) * (1 + cos (a * ln (real k))))", "by (auto simp: fds_nth_fds' ln_Q_fds_eq)"], ["proof (state)\nthis:\n  fds_nth (fds_ln 0 Q_fds) k =\n  complex_of_real\n   (2 * I k * mangoldt k / ln (real k) * (1 + cos (a * ln (real k))))\n\ngoal (2 subgoals):\n 1. k < 2 \\<Longrightarrow>\n    fds_nth (fds_ln 0 Q_fds) k \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0\n 2. \\<not> k < 2 \\<Longrightarrow>\n    fds_nth (fds_ln 0 Q_fds) k \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0", "also"], ["proof (state)\nthis:\n  fds_nth (fds_ln 0 Q_fds) k =\n  complex_of_real\n   (2 * I k * mangoldt k / ln (real k) * (1 + cos (a * ln (real k))))\n\ngoal (2 subgoals):\n 1. k < 2 \\<Longrightarrow>\n    fds_nth (fds_ln 0 Q_fds) k \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0\n 2. \\<not> k < 2 \\<Longrightarrow>\n    fds_nth (fds_ln 0 Q_fds) k \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0", "have \"\\<dots> \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real\n     (2 * I k * mangoldt k / ln (real k) * (1 + cos (a * ln (real k))))\n    \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0", "using False"], ["proof (prove)\nusing this:\n  \\<not> k < 2\n\ngoal (1 subgoal):\n 1. complex_of_real\n     (2 * I k * mangoldt k / ln (real k) * (1 + cos (a * ln (real k))))\n    \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0", "unfolding I_def"], ["proof (prove)\nusing this:\n  \\<not> k < 2\n\ngoal (1 subgoal):\n 1. complex_of_real\n     (2 * real (if [k = 1] (mod n) then totient n else 0) * mangoldt k /\n      ln (real k) *\n      (1 + cos (a * ln (real k))))\n    \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0", "by (subst nonneg_Reals_of_real_iff) \n             (intro mult_nonneg_nonneg divide_nonneg_pos cos mangoldt_nonneg, auto)"], ["proof (state)\nthis:\n  complex_of_real\n   (2 * I k * mangoldt k / ln (real k) * (1 + cos (a * ln (real k))))\n  \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0\n\ngoal (2 subgoals):\n 1. k < 2 \\<Longrightarrow>\n    fds_nth (fds_ln 0 Q_fds) k \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0\n 2. \\<not> k < 2 \\<Longrightarrow>\n    fds_nth (fds_ln 0 Q_fds) k \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0", "finally"], ["proof (chain)\npicking this:\n  fds_nth (fds_ln 0 Q_fds) k \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0", "show ?thesis"], ["proof (prove)\nusing this:\n  fds_nth (fds_ln 0 Q_fds) k \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0\n\ngoal (1 subgoal):\n 1. fds_nth (fds_ln 0 Q_fds) k \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0", "."], ["proof (state)\nthis:\n  fds_nth (fds_ln 0 Q_fds) k \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0\n\ngoal (1 subgoal):\n 1. k < 2 \\<Longrightarrow>\n    fds_nth (fds_ln 0 Q_fds) k \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0", "qed (cases k; auto simp: ln_Q_fds_eq)"], ["proof (state)\nthis:\n  fds_nth (fds_ln 0 Q_fds) ?k \\<in> \\<real>\\<^sub>\\<ge>\\<^sub>0\n\ngoal:\nNo subgoals!", "qed\n    \\<comment> \\<open>Therefore @{term Q_fds} also has non-negative coefficients.\\<close>"], ["proof (state)\nthis:\n  nonneg_dirichlet_series (fds_ln 0 Q_fds)\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "hence nonneg: \"nonneg_dirichlet_series Q_fds\""], ["proof (prove)\nusing this:\n  nonneg_dirichlet_series (fds_ln 0 Q_fds)\n\ngoal (1 subgoal):\n 1. nonneg_dirichlet_series Q_fds", "proof (rule nonneg_dirichlet_series_lnD)"], ["proof (state)\ngoal (1 subgoal):\n 1. exp 0 = fds_nth Q_fds (Suc 0)", "have \"(\\<Prod>x\\<in>dcharacters n. x (Suc 0)) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>x\\<in>dcharacters n. x (Suc 0)) = 1", "by (intro prod.neutral) (auto simp: dcharacters_def dcharacter.Suc_0)"], ["proof (state)\nthis:\n  (\\<Prod>x\\<in>dcharacters n. x (Suc 0)) = 1\n\ngoal (1 subgoal):\n 1. exp 0 = fds_nth Q_fds (Suc 0)", "thus \"exp 0 = fds_nth Q_fds (Suc 0)\""], ["proof (prove)\nusing this:\n  (\\<Prod>x\\<in>dcharacters n. x (Suc 0)) = 1\n\ngoal (1 subgoal):\n 1. exp 0 = fds_nth Q_fds (Suc 0)", "by (simp add: Q_fds_def Z_fds_def)"], ["proof (state)\nthis:\n  exp 0 = fds_nth Q_fds (Suc 0)\n\ngoal:\nNo subgoals!", "qed\n\n    \\<comment> \\<open>And by Pringsheim--Landau, we get that the Dirichlet series of @{term Q} converges\n        everywhere.\\<close>"], ["proof (state)\nthis:\n  nonneg_dirichlet_series Q_fds\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "have \"abs_conv_abscissa Q_fds \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. abs_conv_abscissa Q_fds \\<le> 1", "unfolding Q_fds_def Z_fds_def fds_shift_prod"], ["proof (prove)\ngoal (1 subgoal):\n 1. abs_conv_abscissa\n     ((prod fds (dcharacters n))\\<^sup>2 *\n      (\\<Prod>x\\<in>dcharacters n.\n         fds_shift (\\<i> * complex_of_real a) (fds x)) *\n      (\\<Prod>x\\<in>dcharacters n.\n         fds_shift (- \\<i> * complex_of_real a) (fds x)))\n    \\<le> 1", "by (intro abs_conv_abscissa_power_leI abs_conv_abscissa_mult_leI abs_conv_abscissa_prod_le)\n         (auto simp: dcharacters_def dcharacter.abs_conv_abscissa_weak)"], ["proof (state)\nthis:\n  abs_conv_abscissa Q_fds \\<le> 1\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "with nonneg and eval_Q_fds and \\<open>Q' holomorphic_on UNIV\\<close>"], ["proof (chain)\npicking this:\n  nonneg_dirichlet_series Q_fds\n  1 < Re ?s \\<Longrightarrow> eval_fds Q_fds ?s = Q' ?s\n  Q' holomorphic_on UNIV\n  abs_conv_abscissa Q_fds \\<le> 1", "have abscissa: \"abs_conv_abscissa Q_fds = -\\<infinity>\""], ["proof (prove)\nusing this:\n  nonneg_dirichlet_series Q_fds\n  1 < Re ?s \\<Longrightarrow> eval_fds Q_fds ?s = Q' ?s\n  Q' holomorphic_on UNIV\n  abs_conv_abscissa Q_fds \\<le> 1\n\ngoal (1 subgoal):\n 1. abs_conv_abscissa Q_fds = - \\<infinity>", "by (intro entire_continuation_imp_abs_conv_abscissa_MInfty[where g = Q' and c = 1])\n           (auto simp: one_ereal_def)\n  \n    \\<comment> \\<open>Again, similarly to the proof for $\\zeta$, we select a subseries of @{term Q}. This time\n        we cannot simply pick powers of 2, since 2 might not be coprime to @{term n}, in which \n        case the subseries would simply be 1 everywhere, which is not helpful. However, it is\n        clear that there \\emph{is} always some prime $p$ that is coprime to @{term n}, so we\n        just use the subseries @{term Q} that corresponds to powers of $p$.\\<close>"], ["proof (state)\nthis:\n  abs_conv_abscissa Q_fds = - \\<infinity>\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "from n"], ["proof (chain)\npicking this:\n  1 < n", "obtain p where p: \"prime p\" \"coprime p n\""], ["proof (prove)\nusing this:\n  1 < n\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>prime p; coprime p n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using coprime_prime_exists[of n]"], ["proof (prove)\nusing this:\n  1 < n\n  \\<lbrakk>0 < n;\n   \\<And>p.\n      \\<lbrakk>prime p; coprime p n\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>prime p; coprime p n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  prime p\n  coprime p n\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "define R_fds where \"R_fds = fds_primepow_subseries p Q_fds\""], ["proof (state)\nthis:\n  R_fds = fds_primepow_subseries p Q_fds\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "have \"conv_abscissa R_fds \\<le> abs_conv_abscissa R_fds\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conv_abscissa R_fds \\<le> abs_conv_abscissa R_fds", "by (rule conv_le_abs_conv_abscissa)"], ["proof (state)\nthis:\n  conv_abscissa R_fds \\<le> abs_conv_abscissa R_fds\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  conv_abscissa R_fds \\<le> abs_conv_abscissa R_fds\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "have \"abs_conv_abscissa R_fds \\<le> abs_conv_abscissa Q_fds\""], ["proof (prove)\ngoal (1 subgoal):\n 1. abs_conv_abscissa R_fds \\<le> abs_conv_abscissa Q_fds", "unfolding R_fds_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. abs_conv_abscissa (fds_primepow_subseries p Q_fds)\n    \\<le> abs_conv_abscissa Q_fds", "by (rule abs_conv_abscissa_restrict)"], ["proof (state)\nthis:\n  abs_conv_abscissa R_fds \\<le> abs_conv_abscissa Q_fds\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  abs_conv_abscissa R_fds \\<le> abs_conv_abscissa Q_fds\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "have \"\\<dots> = -\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. abs_conv_abscissa Q_fds = - \\<infinity>", "by (simp add: abscissa)"], ["proof (state)\nthis:\n  abs_conv_abscissa Q_fds = - \\<infinity>\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  conv_abscissa R_fds \\<le> - \\<infinity>", "have abscissa': \"conv_abscissa R_fds = -\\<infinity>\""], ["proof (prove)\nusing this:\n  conv_abscissa R_fds \\<le> - \\<infinity>\n\ngoal (1 subgoal):\n 1. conv_abscissa R_fds = - \\<infinity>", "by simp\n  \n    \\<comment> \\<open>The following function $g(a,s)$ is the denominator in the Euler product expansion of \n        the subseries of $Z(s + ia)$. It is clear that it is entire and non-zero for \n        $\\mathfrak{R}(s) > 0$ and all real $a$.\\<close>"], ["proof (state)\nthis:\n  conv_abscissa R_fds = - \\<infinity>\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "define g :: \"real \\<Rightarrow> complex \\<Rightarrow> complex\"\n      where \"g = (\\<lambda>a s. (\\<Prod>\\<chi>\\<in>dcharacters n. (1 - \\<chi> p * p powr (-s + \\<i> * of_real a))))\""], ["proof (state)\nthis:\n  g =\n  (\\<lambda>a s.\n      \\<Prod>\\<chi>\\<in>dcharacters n.\n        1 - \\<chi> p * of_nat p powr (- s + \\<i> * complex_of_real a))\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "have g_nz: \"g a s \\<noteq> 0\" if \"Re s > 0\" for s a"], ["proof (prove)\ngoal (1 subgoal):\n 1. g a s \\<noteq> 0", "unfolding g_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>\\<chi>\\<in>dcharacters n.\n       1 -\n       \\<chi> p * of_nat p powr (- s + \\<i> * complex_of_real a)) \\<noteq>\n    0", "proof (subst prod_zero_iff[OF finite_dcharacters], safe)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> dcharacters n;\n        1 - a p * of_nat p powr (- s + \\<i> * complex_of_real a) =\n        0\\<rbrakk>\n       \\<Longrightarrow> False", "fix \\<chi>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> dcharacters n;\n        1 - a p * of_nat p powr (- s + \\<i> * complex_of_real a) =\n        0\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"\\<chi> \\<in> dcharacters n\" and *: \"1 - \\<chi> p * p powr (-s + \\<i>*a) = 0\""], ["proof (state)\nthis:\n  \\<chi> \\<in> dcharacters n\n  1 - \\<chi> p * of_nat p powr (- s + \\<i> * complex_of_real a) = 0\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> dcharacters n;\n        1 - a p * of_nat p powr (- s + \\<i> * complex_of_real a) =\n        0\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<chi> \\<in> dcharacters n\n  1 - \\<chi> p * of_nat p powr (- s + \\<i> * complex_of_real a) = 0", "interpret dcharacter n G \\<chi>"], ["proof (prove)\nusing this:\n  \\<chi> \\<in> dcharacters n\n  1 - \\<chi> p * of_nat p powr (- s + \\<i> * complex_of_real a) = 0\n\ngoal (1 subgoal):\n 1. dcharacter n \\<chi> &&& G \\<equiv> residue_mult_group n", "by (simp_all add: dcharacters_def G_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> dcharacters n;\n        1 - a p * of_nat p powr (- s + \\<i> * complex_of_real a) =\n        0\\<rbrakk>\n       \\<Longrightarrow> False", "from p"], ["proof (chain)\npicking this:\n  prime p\n  coprime p n", "have \"real p > real 1\""], ["proof (prove)\nusing this:\n  prime p\n  coprime p n\n\ngoal (1 subgoal):\n 1. real 1 < real p", "by (subst of_nat_less_iff) (auto simp: prime_gt_Suc_0_nat)"], ["proof (state)\nthis:\n  real 1 < real p\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> dcharacters n;\n        1 - a p * of_nat p powr (- s + \\<i> * complex_of_real a) =\n        0\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"real p powr - Re s < real p powr 0\""], ["proof (prove)\nusing this:\n  real 1 < real p\n\ngoal (1 subgoal):\n 1. real p powr - Re s < real p powr 0", "using p that"], ["proof (prove)\nusing this:\n  real 1 < real p\n  prime p\n  coprime p n\n  0 < Re s\n\ngoal (1 subgoal):\n 1. real p powr - Re s < real p powr 0", "by (intro powr_less_mono) (auto simp: )"], ["proof (state)\nthis:\n  real p powr - Re s < real p powr 0\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> dcharacters n;\n        1 - a p * of_nat p powr (- s + \\<i> * complex_of_real a) =\n        0\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"0 < norm (1 :: complex) - norm (\\<chi> p * p powr (-s + \\<i>*a))\""], ["proof (prove)\nusing this:\n  real p powr - Re s < real p powr 0\n\ngoal (1 subgoal):\n 1. 0 < cmod 1 -\n        cmod (\\<chi> p * of_nat p powr (- s + \\<i> * complex_of_real a))", "using p"], ["proof (prove)\nusing this:\n  real p powr - Re s < real p powr 0\n  prime p\n  coprime p n\n\ngoal (1 subgoal):\n 1. 0 < cmod 1 -\n        cmod (\\<chi> p * of_nat p powr (- s + \\<i> * complex_of_real a))", "by (simp add: norm_mult norm norm_powr_real_powr)"], ["proof (state)\nthis:\n  0 < cmod 1 -\n      cmod (\\<chi> p * of_nat p powr (- s + \\<i> * complex_of_real a))\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> dcharacters n;\n        1 - a p * of_nat p powr (- s + \\<i> * complex_of_real a) =\n        0\\<rbrakk>\n       \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  0 < cmod 1 -\n      cmod (\\<chi> p * of_nat p powr (- s + \\<i> * complex_of_real a))\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> dcharacters n;\n        1 - a p * of_nat p powr (- s + \\<i> * complex_of_real a) =\n        0\\<rbrakk>\n       \\<Longrightarrow> False", "have \"\\<dots> \\<le> norm (1 - \\<chi> p * p powr (-s + \\<i>*a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod 1 -\n    cmod (\\<chi> p * of_nat p powr (- s + \\<i> * complex_of_real a))\n    \\<le> cmod\n           (1 - \\<chi> p * of_nat p powr (- s + \\<i> * complex_of_real a))", "by (rule norm_triangle_ineq2)"], ["proof (state)\nthis:\n  cmod 1 - cmod (\\<chi> p * of_nat p powr (- s + \\<i> * complex_of_real a))\n  \\<le> cmod (1 - \\<chi> p * of_nat p powr (- s + \\<i> * complex_of_real a))\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> dcharacters n;\n        1 - a p * of_nat p powr (- s + \\<i> * complex_of_real a) =\n        0\\<rbrakk>\n       \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  0 < cmod (1 - \\<chi> p * of_nat p powr (- s + \\<i> * complex_of_real a))", "show False"], ["proof (prove)\nusing this:\n  0 < cmod (1 - \\<chi> p * of_nat p powr (- s + \\<i> * complex_of_real a))\n\ngoal (1 subgoal):\n 1. False", "by (subst (asm) *) simp_all"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < Re ?s \\<Longrightarrow> g ?a ?s \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "have [holomorphic_intros]: \"g a holomorphic_on A\" for a A"], ["proof (prove)\ngoal (1 subgoal):\n 1. g a holomorphic_on A", "unfolding g_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        \\<Prod>\\<chi>\\<in>dcharacters n.\n          1 -\n          \\<chi> p *\n          of_nat p powr (- s + \\<i> * complex_of_real a)) holomorphic_on\n    A", "using p"], ["proof (prove)\nusing this:\n  prime p\n  coprime p n\n\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        \\<Prod>\\<chi>\\<in>dcharacters n.\n          1 -\n          \\<chi> p *\n          of_nat p powr (- s + \\<i> * complex_of_real a)) holomorphic_on\n    A", "by (intro holomorphic_intros)\n\n    \\<comment> \\<open>By taking Euler product expansions of every factor, we get\n          \\[R(s) = \\frac{1}{g(0,s)^2 g(a,s) g(-a,s)} = \n              (1 - 2^{-s})^{-2} (1 - 2^{-s+ia})^{-1} (1 - 2^{-s-ia})^{-1}\\]\n        for every $s$ with $\\mathfrak{R}(s) > 1$, and by analytic continuation also for\n        $\\mathfrak{R}(s) > 0$.\\<close>"], ["proof (state)\nthis:\n  g ?a holomorphic_on ?A\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "have eval_R: \"eval_fds R_fds s = 1 / (g 0 s ^ 2 * g a s * g (-a) s)\"\n      (is \"_ = ?f s\") if \"Re s > 0\" for s :: complex"], ["proof (prove)\ngoal (1 subgoal):\n 1. eval_fds R_fds s = 1 / ((g 0 s)\\<^sup>2 * g a s * g (- a) s)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. eval_fds R_fds s = 1 / ((g 0 s)\\<^sup>2 * g a s * g (- a) s)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. eval_fds R_fds s = 1 / ((g 0 s)\\<^sup>2 * g a s * g (- a) s)", "proof (rule analytic_continuation_open[where f = \"eval_fds R_fds\"])"], ["proof (state)\ngoal (9 subgoals):\n 1. open ?s\n 2. open ?s'\n 3. ?s \\<noteq> {}\n 4. connected ?s'\n 5. ?s \\<subseteq> ?s'\n 6. eval_fds R_fds holomorphic_on ?s'\n 7. (\\<lambda>b. 1 / ((g 0 b)\\<^sup>2 * g a b * g (- a) b)) holomorphic_on\n    ?s'\n 8. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       eval_fds R_fds z = 1 / ((g 0 z)\\<^sup>2 * g a z * g (- a) z)\n 9. s \\<in> ?s'", "show \"?f holomorphic_on {s. Re s > 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>b. 1 / ((g 0 b)\\<^sup>2 * g a b * g (- a) b)) holomorphic_on\n    {s. 0 < Re s}", "using p g_nz[of 0] g_nz[of a] g_nz[of \"-a\"]"], ["proof (prove)\nusing this:\n  prime p\n  coprime p n\n  0 < Re 0 \\<Longrightarrow> g ?a 0 \\<noteq> 0\n  0 < Re (complex_of_real a) \\<Longrightarrow>\n  g ?a (complex_of_real a) \\<noteq> 0\n  0 < Re (complex_of_real (- a)) \\<Longrightarrow>\n  g ?a (complex_of_real (- a)) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>b. 1 / ((g 0 b)\\<^sup>2 * g a b * g (- a) b)) holomorphic_on\n    {s. 0 < Re s}", "by (intro holomorphic_intros) (auto simp: g_nz)"], ["proof (state)\nthis:\n  (\\<lambda>b. 1 / ((g 0 b)\\<^sup>2 * g a b * g (- a) b)) holomorphic_on\n  {s. 0 < Re s}\n\ngoal (8 subgoals):\n 1. open ?s\n 2. open {s. 0 < Re s}\n 3. ?s \\<noteq> {}\n 4. connected {s. 0 < Re s}\n 5. ?s \\<subseteq> {s. 0 < Re s}\n 6. eval_fds R_fds holomorphic_on {s. 0 < Re s}\n 7. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       eval_fds R_fds z = 1 / ((g 0 z)\\<^sup>2 * g a z * g (- a) z)\n 8. s \\<in> {s. 0 < Re s}", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. open ?s\n 2. open {s. 0 < Re s}\n 3. ?s \\<noteq> {}\n 4. connected {s. 0 < Re s}\n 5. ?s \\<subseteq> {s. 0 < Re s}\n 6. eval_fds R_fds holomorphic_on {s. 0 < Re s}\n 7. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       eval_fds R_fds z = 1 / ((g 0 z)\\<^sup>2 * g a z * g (- a) z)\n 8. s \\<in> {s. 0 < Re s}", "fix z"], ["proof (state)\ngoal (8 subgoals):\n 1. open ?s\n 2. open {s. 0 < Re s}\n 3. ?s \\<noteq> {}\n 4. connected {s. 0 < Re s}\n 5. ?s \\<subseteq> {s. 0 < Re s}\n 6. eval_fds R_fds holomorphic_on {s. 0 < Re s}\n 7. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       eval_fds R_fds z = 1 / ((g 0 z)\\<^sup>2 * g a z * g (- a) z)\n 8. s \\<in> {s. 0 < Re s}", "assume z: \"z \\<in> {s. Re s > 1}\""], ["proof (state)\nthis:\n  z \\<in> {s. 1 < Re s}\n\ngoal (8 subgoals):\n 1. open ?s\n 2. open {s. 0 < Re s}\n 3. ?s \\<noteq> {}\n 4. connected {s. 0 < Re s}\n 5. ?s \\<subseteq> {s. 0 < Re s}\n 6. eval_fds R_fds holomorphic_on {s. 0 < Re s}\n 7. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       eval_fds R_fds z = 1 / ((g 0 z)\\<^sup>2 * g a z * g (- a) z)\n 8. s \\<in> {s. 0 < Re s}", "have [simp]: \"completely_multiplicative_function \\<chi>\" \"fds_nth (fds \\<chi>) = \\<chi>\"\n          if \"\\<chi> \\<in> dcharacters n\" for \\<chi>"], ["proof (prove)\ngoal (1 subgoal):\n 1. completely_multiplicative_function \\<chi> &&&\n    fds_nth (fds \\<chi>) = \\<chi>", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. completely_multiplicative_function \\<chi>\n 2. fds_nth (fds \\<chi>) = \\<chi>", "from that"], ["proof (chain)\npicking this:\n  \\<chi> \\<in> dcharacters n", "interpret dcharacter n G \\<chi>"], ["proof (prove)\nusing this:\n  \\<chi> \\<in> dcharacters n\n\ngoal (1 subgoal):\n 1. dcharacter n \\<chi> &&& G \\<equiv> residue_mult_group n", "by (simp_all add: G_def dcharacters_def)"], ["proof (state)\ngoal (2 subgoals):\n 1. completely_multiplicative_function \\<chi>\n 2. fds_nth (fds \\<chi>) = \\<chi>", "show \"completely_multiplicative_function \\<chi>\" \"fds_nth (fds \\<chi>) = \\<chi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. completely_multiplicative_function \\<chi> &&&\n    fds_nth (fds \\<chi>) = \\<chi>", "by (simp_all add: fds_nth_fds' mult.completely_multiplicative_function_axioms)"], ["proof (state)\nthis:\n  completely_multiplicative_function \\<chi>\n  fds_nth (fds \\<chi>) = \\<chi>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?\\<chi> \\<in> dcharacters n \\<Longrightarrow>\n  completely_multiplicative_function ?\\<chi>\n  ?\\<chi> \\<in> dcharacters n \\<Longrightarrow>\n  fds_nth (fds ?\\<chi>) = ?\\<chi>\n\ngoal (8 subgoals):\n 1. open ?s\n 2. open {s. 0 < Re s}\n 3. ?s \\<noteq> {}\n 4. connected {s. 0 < Re s}\n 5. ?s \\<subseteq> {s. 0 < Re s}\n 6. eval_fds R_fds holomorphic_on {s. 0 < Re s}\n 7. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       eval_fds R_fds z = 1 / ((g 0 z)\\<^sup>2 * g a z * g (- a) z)\n 8. s \\<in> {s. 0 < Re s}", "have [simp]: \"dcharacter n \\<chi>\" if \"\\<chi> \\<in> dcharacters n\" for \\<chi>"], ["proof (prove)\ngoal (1 subgoal):\n 1. dcharacter n \\<chi>", "using that"], ["proof (prove)\nusing this:\n  \\<chi> \\<in> dcharacters n\n\ngoal (1 subgoal):\n 1. dcharacter n \\<chi>", "by (simp add: dcharacters_def)"], ["proof (state)\nthis:\n  ?\\<chi> \\<in> dcharacters n \\<Longrightarrow> dcharacter n ?\\<chi>\n\ngoal (8 subgoals):\n 1. open ?s\n 2. open {s. 0 < Re s}\n 3. ?s \\<noteq> {}\n 4. connected {s. 0 < Re s}\n 5. ?s \\<subseteq> {s. 0 < Re s}\n 6. eval_fds R_fds holomorphic_on {s. 0 < Re s}\n 7. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       eval_fds R_fds z = 1 / ((g 0 z)\\<^sup>2 * g a z * g (- a) z)\n 8. s \\<in> {s. 0 < Re s}", "from that"], ["proof (chain)\npicking this:\n  0 < Re s", "have \"abs_conv_abscissa (fds \\<chi>) < ereal (Re z)\" if \"\\<chi> \\<in> dcharacters n\" for \\<chi>"], ["proof (prove)\nusing this:\n  0 < Re s\n\ngoal (1 subgoal):\n 1. abs_conv_abscissa (fds \\<chi>) < ereal (Re z)", "using that z"], ["proof (prove)\nusing this:\n  0 < Re s\n  \\<chi> \\<in> dcharacters n\n  z \\<in> {s. 1 < Re s}\n\ngoal (1 subgoal):\n 1. abs_conv_abscissa (fds \\<chi>) < ereal (Re z)", "by (intro le_less_trans[OF dcharacter.abs_conv_abscissa_weak[of n \\<chi>]]) auto"], ["proof (state)\nthis:\n  ?\\<chi> \\<in> dcharacters n \\<Longrightarrow>\n  abs_conv_abscissa (fds ?\\<chi>) < ereal (Re z)\n\ngoal (8 subgoals):\n 1. open ?s\n 2. open {s. 0 < Re s}\n 3. ?s \\<noteq> {}\n 4. connected {s. 0 < Re s}\n 5. ?s \\<subseteq> {s. 0 < Re s}\n 6. eval_fds R_fds holomorphic_on {s. 0 < Re s}\n 7. \\<And>z.\n       z \\<in> ?s \\<Longrightarrow>\n       eval_fds R_fds z = 1 / ((g 0 z)\\<^sup>2 * g a z * g (- a) z)\n 8. s \\<in> {s. 0 < Re s}", "thus \"eval_fds R_fds z = ?f z\""], ["proof (prove)\nusing this:\n  ?\\<chi> \\<in> dcharacters n \\<Longrightarrow>\n  abs_conv_abscissa (fds ?\\<chi>) < ereal (Re z)\n\ngoal (1 subgoal):\n 1. eval_fds R_fds z = 1 / ((g 0 z)\\<^sup>2 * g a z * g (- a) z)", "using z p"], ["proof (prove)\nusing this:\n  ?\\<chi> \\<in> dcharacters n \\<Longrightarrow>\n  abs_conv_abscissa (fds ?\\<chi>) < ereal (Re z)\n  z \\<in> {s. 1 < Re s}\n  prime p\n  coprime p n\n\ngoal (1 subgoal):\n 1. eval_fds R_fds z = 1 / ((g 0 z)\\<^sup>2 * g a z * g (- a) z)", "by (simp add: R_fds_def Q_fds_def Z_fds_def eval_fds_mult eval_fds_prod eval_fds_power \n               fds_abs_converges_mult fds_abs_converges_power fds_abs_converges_prod g_def mult_ac\n               fds_primepow_subseries_euler_product_cm powr_minus powr_diff powr_add  prod_dividef\n               fds_abs_summable_zeta g_nz fds_abs_converges power_one_over divide_inverse [symmetric])"], ["proof (state)\nthis:\n  eval_fds R_fds z = 1 / ((g 0 z)\\<^sup>2 * g a z * g (- a) z)\n\ngoal (7 subgoals):\n 1. open {s. 1 < Re s}\n 2. open {s. 0 < Re s}\n 3. {s. 1 < Re s} \\<noteq> {}\n 4. connected {s. 0 < Re s}\n 5. {s. 1 < Re s} \\<subseteq> {s. 0 < Re s}\n 6. eval_fds R_fds holomorphic_on {s. 0 < Re s}\n 7. s \\<in> {s. 0 < Re s}", "qed (insert that abscissa', auto intro!: exI[of _ 2] convex_connected open_halfspace_Re_gt\n                                               convex_halfspace_Re_gt holomorphic_intros)"], ["proof (state)\nthis:\n  eval_fds R_fds s = 1 / ((g 0 s)\\<^sup>2 * g a s * g (- a) s)\n\ngoal:\nNo subgoals!", "qed\n  \n    \\<comment> \\<open>We again have our contradiction: $R(s)$ is entire, but the right-hand side has a pole at 0\n        since $g(0,0) = 0$.\\<close>"], ["proof (state)\nthis:\n  0 < Re ?s \\<Longrightarrow>\n  eval_fds R_fds ?s = 1 / ((g 0 ?s)\\<^sup>2 * g a ?s * g (- a) ?s)\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> u = 0 \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof (rule not_tendsto_and_filterlim_at_infinity)"], ["proof (state)\ngoal (3 subgoals):\n 1. ?F \\<noteq> bot\n 2. (?f \\<longlongrightarrow> ?c) ?F\n 3. filterlim ?f at_infinity ?F", "have g_limit: \"(g a \\<longlongrightarrow> g a 0) (at 0 within {s. Re s > 0})\" for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. (g a \\<longlongrightarrow> g a 0) (at 0 within {s. 0 < Re s})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (g a \\<longlongrightarrow> g a 0) (at 0 within {s. 0 < Re s})", "have \"continuous_on UNIV (g a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on UNIV (g a)", "by (intro holomorphic_on_imp_continuous_on holomorphic_intros)"], ["proof (state)\nthis:\n  continuous_on UNIV (g a)\n\ngoal (1 subgoal):\n 1. (g a \\<longlongrightarrow> g a 0) (at 0 within {s. 0 < Re s})", "hence \"isCont (g a) 0\""], ["proof (prove)\nusing this:\n  continuous_on UNIV (g a)\n\ngoal (1 subgoal):\n 1. isCont (g a) 0", "by (rule continuous_on_interior) auto"], ["proof (state)\nthis:\n  isCont (g a) 0\n\ngoal (1 subgoal):\n 1. (g a \\<longlongrightarrow> g a 0) (at 0 within {s. 0 < Re s})", "hence \"continuous (at 0 within {s. Re s > 0}) (g a)\""], ["proof (prove)\nusing this:\n  isCont (g a) 0\n\ngoal (1 subgoal):\n 1. continuous (at 0 within {s. 0 < Re s}) (g a)", "by (rule continuous_within_subset) auto"], ["proof (state)\nthis:\n  continuous (at 0 within {s. 0 < Re s}) (g a)\n\ngoal (1 subgoal):\n 1. (g a \\<longlongrightarrow> g a 0) (at 0 within {s. 0 < Re s})", "thus ?thesis"], ["proof (prove)\nusing this:\n  continuous (at 0 within {s. 0 < Re s}) (g a)\n\ngoal (1 subgoal):\n 1. (g a \\<longlongrightarrow> g a 0) (at 0 within {s. 0 < Re s})", "by (auto simp: continuous_within)"], ["proof (state)\nthis:\n  (g a \\<longlongrightarrow> g a 0) (at 0 within {s. 0 < Re s})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (g ?a \\<longlongrightarrow> g ?a 0) (at 0 within {s. 0 < Re s})\n\ngoal (3 subgoals):\n 1. ?F \\<noteq> bot\n 2. (?f \\<longlongrightarrow> ?c) ?F\n 3. filterlim ?f at_infinity ?F", "have \"((\\<lambda>s. g 0 s ^ 2 * g a s * g (-a) s) \\<longlongrightarrow> g 0 0 ^ 2 * g a 0 * g (-a) 0) \n              (at 0 within {s. Re s > 0})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>s. (g 0 s)\\<^sup>2 * g a s * g (- a) s) \\<longlongrightarrow>\n     (g 0 0)\\<^sup>2 * g a 0 * g (- a) 0)\n     (at 0 within {s. 0 < Re s})", "by (intro tendsto_intros g_limit)"], ["proof (state)\nthis:\n  ((\\<lambda>s. (g 0 s)\\<^sup>2 * g a s * g (- a) s) \\<longlongrightarrow>\n   (g 0 0)\\<^sup>2 * g a 0 * g (- a) 0)\n   (at 0 within {s. 0 < Re s})\n\ngoal (3 subgoals):\n 1. ?F \\<noteq> bot\n 2. (?f \\<longlongrightarrow> ?c) ?F\n 3. filterlim ?f at_infinity ?F", "also"], ["proof (state)\nthis:\n  ((\\<lambda>s. (g 0 s)\\<^sup>2 * g a s * g (- a) s) \\<longlongrightarrow>\n   (g 0 0)\\<^sup>2 * g a 0 * g (- a) 0)\n   (at 0 within {s. 0 < Re s})\n\ngoal (3 subgoals):\n 1. ?F \\<noteq> bot\n 2. (?f \\<longlongrightarrow> ?c) ?F\n 3. filterlim ?f at_infinity ?F", "have \"g 0 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g 0 0 = 0", "unfolding g_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>\\<chi>\\<in>dcharacters n.\n       1 - \\<chi> p * of_nat p powr (- 0 + \\<i> * complex_of_real 0)) =\n    0", "proof (rule prod_zero)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite (dcharacters n)\n 2. \\<exists>a\\<in>dcharacters n.\n       1 - a p * of_nat p powr (- 0 + \\<i> * complex_of_real 0) = 0", "from p and \\<chi>\\<^sub>0"], ["proof (chain)\npicking this:\n  prime p\n  coprime p n\n  \\<chi>\\<^sub>0 \\<in> dcharacters n", "show \"\\<exists>\\<chi>\\<in>dcharacters n. 1 - \\<chi> p * of_nat p powr (- 0 + \\<i> * of_real 0) = 0\""], ["proof (prove)\nusing this:\n  prime p\n  coprime p n\n  \\<chi>\\<^sub>0 \\<in> dcharacters n\n\ngoal (1 subgoal):\n 1. \\<exists>\\<chi>\\<in>dcharacters n.\n       1 - \\<chi> p * of_nat p powr (- 0 + \\<i> * complex_of_real 0) = 0", "by (intro bexI[of _ \\<chi>\\<^sub>0]) (auto simp: principal_dchar_def)"], ["proof (state)\nthis:\n  \\<exists>\\<chi>\\<in>dcharacters n.\n     1 - \\<chi> p * of_nat p powr (- 0 + \\<i> * complex_of_real 0) = 0\n\ngoal (1 subgoal):\n 1. finite (dcharacters n)", "qed auto"], ["proof (state)\nthis:\n  g 0 0 = 0\n\ngoal (3 subgoals):\n 1. ?F \\<noteq> bot\n 2. (?f \\<longlongrightarrow> ?c) ?F\n 3. filterlim ?f at_infinity ?F", "moreover"], ["proof (state)\nthis:\n  g 0 0 = 0\n\ngoal (3 subgoals):\n 1. ?F \\<noteq> bot\n 2. (?f \\<longlongrightarrow> ?c) ?F\n 3. filterlim ?f at_infinity ?F", "have \"eventually (\\<lambda>s. s \\<in> {s. Re s > 0}) (at 0 within {s. Re s > 0})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in at 0 within {s. 0 < Re s}. s \\<in> {s. 0 < Re s}", "by (auto simp: eventually_at_filter)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in at 0 within {s. 0 < Re s}. s \\<in> {s. 0 < Re s}\n\ngoal (3 subgoals):\n 1. ?F \\<noteq> bot\n 2. (?f \\<longlongrightarrow> ?c) ?F\n 3. filterlim ?f at_infinity ?F", "hence \"eventually (\\<lambda>s. g 0 s ^ 2 * g a s * g (-a) s \\<noteq> 0) (at 0 within {s. Re s > 0})\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F s in at 0 within {s. 0 < Re s}. s \\<in> {s. 0 < Re s}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in at 0 within {s. 0 < Re s}.\n       (g 0 s)\\<^sup>2 * g a s * g (- a) s \\<noteq> 0", "by eventually_elim (auto simp: g_nz)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in at 0 within {s. 0 < Re s}.\n     (g 0 s)\\<^sup>2 * g a s * g (- a) s \\<noteq> 0\n\ngoal (3 subgoals):\n 1. ?F \\<noteq> bot\n 2. (?f \\<longlongrightarrow> ?c) ?F\n 3. filterlim ?f at_infinity ?F", "ultimately"], ["proof (chain)\npicking this:\n  ((\\<lambda>s. (g 0 s)\\<^sup>2 * g a s * g (- a) s) \\<longlongrightarrow>\n   (g 0 0)\\<^sup>2 * g a 0 * g (- a) 0)\n   (at 0 within {s. 0 < Re s})\n  g 0 0 = 0\n  \\<forall>\\<^sub>F s in at 0 within {s. 0 < Re s}.\n     (g 0 s)\\<^sup>2 * g a s * g (- a) s \\<noteq> 0", "have \"filterlim (\\<lambda>s. g 0 s ^ 2 * g a s * g (-a) s) (at 0) \n                         (at 0 within {s. Re s > 0})\""], ["proof (prove)\nusing this:\n  ((\\<lambda>s. (g 0 s)\\<^sup>2 * g a s * g (- a) s) \\<longlongrightarrow>\n   (g 0 0)\\<^sup>2 * g a 0 * g (- a) 0)\n   (at 0 within {s. 0 < Re s})\n  g 0 0 = 0\n  \\<forall>\\<^sub>F s in at 0 within {s. 0 < Re s}.\n     (g 0 s)\\<^sup>2 * g a s * g (- a) s \\<noteq> 0\n\ngoal (1 subgoal):\n 1. LIM s at 0 within {s. 0 < Re s}.\n       (g 0 s)\\<^sup>2 * g a s * g (- a) s :> at 0", "by (simp add: filterlim_at)"], ["proof (state)\nthis:\n  LIM s at 0 within {s. 0 < Re s}.\n     (g 0 s)\\<^sup>2 * g a s * g (- a) s :> at 0\n\ngoal (3 subgoals):\n 1. ?F \\<noteq> bot\n 2. (?f \\<longlongrightarrow> ?c) ?F\n 3. filterlim ?f at_infinity ?F", "hence \"filterlim ?f at_infinity (at 0 within {s. Re s > 0})\" (is ?lim)"], ["proof (prove)\nusing this:\n  LIM s at 0 within {s. 0 < Re s}.\n     (g 0 s)\\<^sup>2 * g a s * g (- a) s :> at 0\n\ngoal (1 subgoal):\n 1. LIM b at 0 within {s. 0 < Re s}.\n       1 / ((g 0 b)\\<^sup>2 * g a b * g (- a) b) :> at_infinity", "by (intro filterlim_divide_at_infinity[OF tendsto_const]\n                     tendsto_mult_filterlim_at_infinity) auto"], ["proof (state)\nthis:\n  LIM b at 0 within {s. 0 < Re s}.\n     1 / ((g 0 b)\\<^sup>2 * g a b * g (- a) b) :> at_infinity\n\ngoal (3 subgoals):\n 1. ?F \\<noteq> bot\n 2. (?f \\<longlongrightarrow> ?c) ?F\n 3. filterlim ?f at_infinity ?F", "also"], ["proof (state)\nthis:\n  LIM b at 0 within {s. 0 < Re s}.\n     1 / ((g 0 b)\\<^sup>2 * g a b * g (- a) b) :> at_infinity\n\ngoal (3 subgoals):\n 1. ?F \\<noteq> bot\n 2. (?f \\<longlongrightarrow> ?c) ?F\n 3. filterlim ?f at_infinity ?F", "have ev: \"eventually (\\<lambda>s. Re s > 0) (at 0 within {s. Re s > 0})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in at 0 within {s. 0 < Re s}. 0 < Re s", "by (auto simp: eventually_at intro!: exI[of _ 1])"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in at 0 within {s. 0 < Re s}. 0 < Re s\n\ngoal (3 subgoals):\n 1. ?F \\<noteq> bot\n 2. (?f \\<longlongrightarrow> ?c) ?F\n 3. filterlim ?f at_infinity ?F", "have \"?lim \\<longleftrightarrow> filterlim (eval_fds R_fds) at_infinity (at 0 within {s. Re s > 0})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (LIM b at 0 within {s. 0 < Re s}.\n        1 / ((g 0 b)\\<^sup>2 * g a b * g (- a) b) :> at_infinity) =\n    filterlim (eval_fds R_fds) at_infinity (at 0 within {s. 0 < Re s})", "by (intro filterlim_cong refl eventually_mono[OF ev]) (auto simp: eval_R)"], ["proof (state)\nthis:\n  (LIM b at 0 within {s. 0 < Re s}.\n      1 / ((g 0 b)\\<^sup>2 * g a b * g (- a) b) :> at_infinity) =\n  filterlim (eval_fds R_fds) at_infinity (at 0 within {s. 0 < Re s})\n\ngoal (3 subgoals):\n 1. ?F \\<noteq> bot\n 2. (?f \\<longlongrightarrow> ?c) ?F\n 3. filterlim ?f at_infinity ?F", "finally"], ["proof (chain)\npicking this:\n  filterlim (eval_fds R_fds) at_infinity (at 0 within {s. 0 < Re s})", "show \\<dots>"], ["proof (prove)\nusing this:\n  filterlim (eval_fds R_fds) at_infinity (at 0 within {s. 0 < Re s})\n\ngoal (1 subgoal):\n 1. filterlim (eval_fds R_fds) at_infinity (at 0 within {s. 0 < Re s})", "."], ["proof (state)\nthis:\n  filterlim (eval_fds R_fds) at_infinity (at 0 within {s. 0 < Re s})\n\ngoal (2 subgoals):\n 1. at 0 within {s. 0 < Re s} \\<noteq> bot\n 2. (eval_fds R_fds \\<longlongrightarrow> ?c) (at 0 within {s. 0 < Re s})", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. at 0 within {s. 0 < Re s} \\<noteq> bot\n 2. (eval_fds R_fds \\<longlongrightarrow> ?c) (at 0 within {s. 0 < Re s})", "have \"continuous (at 0 within {s. Re s > 0}) (eval_fds R_fds)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous (at 0 within {s. 0 < Re s}) (eval_fds R_fds)", "by (intro continuous_intros) (auto simp: abscissa')"], ["proof (state)\nthis:\n  continuous (at 0 within {s. 0 < Re s}) (eval_fds R_fds)\n\ngoal (2 subgoals):\n 1. at 0 within {s. 0 < Re s} \\<noteq> bot\n 2. (eval_fds R_fds \\<longlongrightarrow> ?c) (at 0 within {s. 0 < Re s})", "thus \"((eval_fds R_fds \\<longlongrightarrow> eval_fds R_fds 0)) (at 0 within {s. Re s > 0})\""], ["proof (prove)\nusing this:\n  continuous (at 0 within {s. 0 < Re s}) (eval_fds R_fds)\n\ngoal (1 subgoal):\n 1. (eval_fds R_fds \\<longlongrightarrow> eval_fds R_fds 0)\n     (at 0 within {s. 0 < Re s})", "by (auto simp: continuous_within)"], ["proof (state)\nthis:\n  (eval_fds R_fds \\<longlongrightarrow> eval_fds R_fds 0)\n   (at 0 within {s. 0 < Re s})\n\ngoal (1 subgoal):\n 1. at 0 within {s. 0 < Re s} \\<noteq> bot", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. at 0 within {s. 0 < Re s} \\<noteq> bot", "have \"0 \\<in> {s. Re s \\<ge> 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<in> {s. 0 \\<le> Re s}", "by simp"], ["proof (state)\nthis:\n  0 \\<in> {s. 0 \\<le> Re s}\n\ngoal (1 subgoal):\n 1. at 0 within {s. 0 < Re s} \\<noteq> bot", "also"], ["proof (state)\nthis:\n  0 \\<in> {s. 0 \\<le> Re s}\n\ngoal (1 subgoal):\n 1. at 0 within {s. 0 < Re s} \\<noteq> bot", "have \"{s. Re s \\<ge> 0} = closure {s. Re s > 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {s. 0 \\<le> Re s} = closure {s. 0 < Re s}", "using closure_halfspace_gt[of \"1::complex\" 0]"], ["proof (prove)\nusing this:\n  1 \\<noteq> 0 \\<Longrightarrow>\n  closure {x. 0 < 1 \\<bullet> x} = {x. 0 \\<le> 1 \\<bullet> x}\n\ngoal (1 subgoal):\n 1. {s. 0 \\<le> Re s} = closure {s. 0 < Re s}", "by (simp add: inner_commute)"], ["proof (state)\nthis:\n  {s. 0 \\<le> Re s} = closure {s. 0 < Re s}\n\ngoal (1 subgoal):\n 1. at 0 within {s. 0 < Re s} \\<noteq> bot", "finally"], ["proof (chain)\npicking this:\n  0 \\<in> closure {s. 0 < Re s}", "have \"0 \\<in> \\<dots>\""], ["proof (prove)\nusing this:\n  0 \\<in> closure {s. 0 < Re s}\n\ngoal (1 subgoal):\n 1. 0 \\<in> closure {s. 0 < Re s}", "."], ["proof (state)\nthis:\n  0 \\<in> closure {s. 0 < Re s}\n\ngoal (1 subgoal):\n 1. at 0 within {s. 0 < Re s} \\<noteq> bot", "thus \"at 0 within {s. Re s > 0} \\<noteq> bot\""], ["proof (prove)\nusing this:\n  0 \\<in> closure {s. 0 < Re s}\n\ngoal (1 subgoal):\n 1. at 0 within {s. 0 < Re s} \\<noteq> bot", "by (subst at_within_eq_bot_iff) auto"], ["proof (state)\nthis:\n  at 0 within {s. 0 < Re s} \\<noteq> bot\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Dirichlet_L n \\<chi> u \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 1 < Re u \\<Longrightarrow> Dirichlet_L n \\<chi> u \\<noteq> 0", "qed (fact Dirichlet_L_Re_gt_1_nonzero)"], ["", "subsection \\<open>Asymptotic bounds on partial sums of Dirichlet $L$ functions\\<close>"], ["", "text \\<open>\n  The following are some bounds on partial sums of the $L$-function of a character that are\n  useful for asymptotic reasoning, particularly for Dirichlet's Theorem.\n\\<close>"], ["", "lemma sum_upto_dcharacter_le:\n  assumes \"\\<chi> \\<noteq> \\<chi>\\<^sub>0\"\n  shows   \"norm (sum_upto \\<chi> x) \\<le> totient n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (sum_upto \\<chi> x) \\<le> real (totient n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cmod (sum_upto \\<chi> x) \\<le> real (totient n)", "have \"sum_upto \\<chi> x = (\\<Sum>k\\<le>nat \\<lfloor>x\\<rfloor>. \\<chi> k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_upto \\<chi> x = sum \\<chi> {..nat \\<lfloor>x\\<rfloor>}", "unfolding sum_upto_altdef"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum \\<chi> {0<..nat \\<lfloor>x\\<rfloor>} =\n    sum \\<chi> {..nat \\<lfloor>x\\<rfloor>}", "by (intro sum.mono_neutral_left) auto"], ["proof (state)\nthis:\n  sum_upto \\<chi> x = sum \\<chi> {..nat \\<lfloor>x\\<rfloor>}\n\ngoal (1 subgoal):\n 1. cmod (sum_upto \\<chi> x) \\<le> real (totient n)", "also"], ["proof (state)\nthis:\n  sum_upto \\<chi> x = sum \\<chi> {..nat \\<lfloor>x\\<rfloor>}\n\ngoal (1 subgoal):\n 1. cmod (sum_upto \\<chi> x) \\<le> real (totient n)", "have \"norm \\<dots> \\<le> totient n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (sum \\<chi> {..nat \\<lfloor>x\\<rfloor>}) \\<le> real (totient n)", "by (rule sum_dcharacter_atMost_le) fact"], ["proof (state)\nthis:\n  cmod (sum \\<chi> {..nat \\<lfloor>x\\<rfloor>}) \\<le> real (totient n)\n\ngoal (1 subgoal):\n 1. cmod (sum_upto \\<chi> x) \\<le> real (totient n)", "finally"], ["proof (chain)\npicking this:\n  cmod (sum_upto \\<chi> x) \\<le> real (totient n)", "show ?thesis"], ["proof (prove)\nusing this:\n  cmod (sum_upto \\<chi> x) \\<le> real (totient n)\n\ngoal (1 subgoal):\n 1. cmod (sum_upto \\<chi> x) \\<le> real (totient n)", "."], ["proof (state)\nthis:\n  cmod (sum_upto \\<chi> x) \\<le> real (totient n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Dirichlet_L_minus_partial_sum_bound:\n  fixes s :: complex and x :: real\n  assumes \"\\<chi> \\<noteq> \\<chi>\\<^sub>0\" and \"Re s > 0\" and \"x > 0\"\n  defines \"\\<sigma> \\<equiv> Re s\"\n  shows   \"norm (sum_upto (\\<lambda>n. \\<chi> n * n powr -s) x - Dirichlet_L n \\<chi> s) \\<le> \n             real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod\n     (sum_upto (\\<lambda>n. \\<chi> n * of_nat n powr - s) x -\n      Dirichlet_L n \\<chi> s)\n    \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "proof (rule Lim_norm_ubound)"], ["proof (state)\ngoal (3 subgoals):\n 1. ?net \\<noteq> bot\n 2. (?f \\<longlongrightarrow>\n     sum_upto (\\<lambda>n. \\<chi> n * of_nat n powr - s) x -\n     Dirichlet_L n \\<chi> s)\n     ?net\n 3. \\<forall>\\<^sub>F xa in ?net.\n       cmod (?f xa)\n       \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "from assms"], ["proof (chain)\npicking this:\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  0 < Re s\n  0 < x\n  \\<sigma> \\<equiv> Re s", "have \"summable (\\<lambda>n. \\<chi> n * of_nat n powr -s)\""], ["proof (prove)\nusing this:\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  0 < Re s\n  0 < x\n  \\<sigma> \\<equiv> Re s\n\ngoal (1 subgoal):\n 1. summable (\\<lambda>n. \\<chi> n * of_nat n powr - s)", "by (intro summable_Dirichlet_L')"], ["proof (state)\nthis:\n  summable (\\<lambda>n. \\<chi> n * of_nat n powr - s)\n\ngoal (3 subgoals):\n 1. ?net \\<noteq> bot\n 2. (?f \\<longlongrightarrow>\n     sum_upto (\\<lambda>n. \\<chi> n * of_nat n powr - s) x -\n     Dirichlet_L n \\<chi> s)\n     ?net\n 3. \\<forall>\\<^sub>F xa in ?net.\n       cmod (?f xa)\n       \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "with assms"], ["proof (chain)\npicking this:\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  0 < Re s\n  0 < x\n  \\<sigma> \\<equiv> Re s\n  summable (\\<lambda>n. \\<chi> n * of_nat n powr - s)", "have \"(\\<lambda>n. \\<chi> n * of_nat n powr -s) sums Dirichlet_L n \\<chi> s\""], ["proof (prove)\nusing this:\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  0 < Re s\n  0 < x\n  \\<sigma> \\<equiv> Re s\n  summable (\\<lambda>n. \\<chi> n * of_nat n powr - s)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. \\<chi> n * of_nat n powr - s) sums Dirichlet_L n \\<chi> s", "using Dirichlet_L_conv_eval_fds[OF assms(1,2)]"], ["proof (prove)\nusing this:\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  0 < Re s\n  0 < x\n  \\<sigma> \\<equiv> Re s\n  summable (\\<lambda>n. \\<chi> n * of_nat n powr - s)\n  Dirichlet_L n \\<chi> s = eval_fds (fds \\<chi>) s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. \\<chi> n * of_nat n powr - s) sums Dirichlet_L n \\<chi> s", "by (simp add: sums_iff eval_fds_def powr_minus divide_simps fds_nth_fds')"], ["proof (state)\nthis:\n  (\\<lambda>n. \\<chi> n * of_nat n powr - s) sums Dirichlet_L n \\<chi> s\n\ngoal (3 subgoals):\n 1. ?net \\<noteq> bot\n 2. (?f \\<longlongrightarrow>\n     sum_upto (\\<lambda>n. \\<chi> n * of_nat n powr - s) x -\n     Dirichlet_L n \\<chi> s)\n     ?net\n 3. \\<forall>\\<^sub>F xa in ?net.\n       cmod (?f xa)\n       \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "hence \"(\\<lambda>m. \\<Sum>k\\<le>m. \\<chi> k * of_nat k powr -s) \\<longlonglongrightarrow> Dirichlet_L n \\<chi> s\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. \\<chi> n * of_nat n powr - s) sums Dirichlet_L n \\<chi> s\n\ngoal (1 subgoal):\n 1. (\\<lambda>m. \\<Sum>k\\<le>m. \\<chi> k * of_nat k powr - s)\n    \\<longlonglongrightarrow> Dirichlet_L n \\<chi> s", "by (simp add: sums_def' atLeast0AtMost)"], ["proof (state)\nthis:\n  (\\<lambda>m. \\<Sum>k\\<le>m. \\<chi> k * of_nat k powr - s)\n  \\<longlonglongrightarrow> Dirichlet_L n \\<chi> s\n\ngoal (3 subgoals):\n 1. ?net \\<noteq> bot\n 2. (?f \\<longlongrightarrow>\n     sum_upto (\\<lambda>n. \\<chi> n * of_nat n powr - s) x -\n     Dirichlet_L n \\<chi> s)\n     ?net\n 3. \\<forall>\\<^sub>F xa in ?net.\n       cmod (?f xa)\n       \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "thus \"(\\<lambda>m. sum_upto (\\<lambda>k. \\<chi> k * of_nat k powr -s) x - (\\<Sum>k\\<le>m. \\<chi> k * of_nat k powr -s))\n           \\<longlonglongrightarrow> sum_upto (\\<lambda>k. \\<chi> k * of_nat k powr -s) x - Dirichlet_L n \\<chi> s\""], ["proof (prove)\nusing this:\n  (\\<lambda>m. \\<Sum>k\\<le>m. \\<chi> k * of_nat k powr - s)\n  \\<longlonglongrightarrow> Dirichlet_L n \\<chi> s\n\ngoal (1 subgoal):\n 1. (\\<lambda>m.\n        sum_upto (\\<lambda>k. \\<chi> k * of_nat k powr - s) x -\n        (\\<Sum>k\\<le>m. \\<chi> k * of_nat k powr - s))\n    \\<longlonglongrightarrow> sum_upto\n                               (\\<lambda>k. \\<chi> k * of_nat k powr - s)\n                               x -\n                              Dirichlet_L n \\<chi> s", "by (intro tendsto_intros)"], ["proof (state)\nthis:\n  (\\<lambda>m.\n      sum_upto (\\<lambda>k. \\<chi> k * of_nat k powr - s) x -\n      (\\<Sum>k\\<le>m. \\<chi> k * of_nat k powr - s))\n  \\<longlonglongrightarrow> sum_upto\n                             (\\<lambda>k. \\<chi> k * of_nat k powr - s) x -\n                            Dirichlet_L n \\<chi> s\n\ngoal (2 subgoals):\n 1. sequentially \\<noteq> bot\n 2. \\<forall>\\<^sub>F xa in sequentially.\n       cmod\n        (sum_upto (\\<lambda>k. \\<chi> k * of_nat k powr - s) x -\n         (\\<Sum>k\\<le>xa. \\<chi> k * of_nat k powr - s))\n       \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. sequentially \\<noteq> bot\n 2. \\<forall>\\<^sub>F xa in sequentially.\n       cmod\n        (sum_upto (\\<lambda>k. \\<chi> k * of_nat k powr - s) x -\n         (\\<Sum>k\\<le>xa. \\<chi> k * of_nat k powr - s))\n       \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "define M where \"M = sum_upto \\<chi>\""], ["proof (state)\nthis:\n  M = sum_upto \\<chi>\n\ngoal (2 subgoals):\n 1. sequentially \\<noteq> bot\n 2. \\<forall>\\<^sub>F xa in sequentially.\n       cmod\n        (sum_upto (\\<lambda>k. \\<chi> k * of_nat k powr - s) x -\n         (\\<Sum>k\\<le>xa. \\<chi> k * of_nat k powr - s))\n       \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "have le: \"norm (\\<Sum>n\\<in>real-`{x<..y}. \\<chi> n * of_nat n powr - s)\n              \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>\" if xy: \"0 < x\" \"x < y\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (\\<Sum>n\\<in>real -` {x<..y}. \\<chi> n * of_nat n powr - s)\n    \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cmod (\\<Sum>n\\<in>real -` {x<..y}. \\<chi> n * of_nat n powr - s)\n    \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "from xy"], ["proof (chain)\npicking this:\n  0 < x\n  x < y", "have  I: \"((\\<lambda>t. M t * (-s * t powr (-s-1))) has_integral\n                        M y * of_real y powr - s - M x * of_real x powr - s -\n                       (\\<Sum>n\\<in>real-`{x<..y}. \\<chi> n * of_real (real n) powr -s)) {x..y}\""], ["proof (prove)\nusing this:\n  0 < x\n  x < y\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t.\n         M t * (- s * complex_of_real t powr (- s - 1))) has_integral\n     M y * complex_of_real y powr - s - M x * complex_of_real x powr - s -\n     (\\<Sum>n\\<in>real -` {x<..y}.\n        \\<chi> n * complex_of_real (real n) powr - s))\n     {x..y}", "unfolding M_def"], ["proof (prove)\nusing this:\n  0 < x\n  x < y\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t.\n         sum_upto \\<chi> t *\n         (- s * complex_of_real t powr (- s - 1))) has_integral\n     sum_upto \\<chi> y * complex_of_real y powr - s -\n     sum_upto \\<chi> x * complex_of_real x powr - s -\n     (\\<Sum>n\\<in>real -` {x<..y}.\n        \\<chi> n * complex_of_real (real n) powr - s))\n     {x..y}", "by (intro partial_summation_strong [of \"{}\"])\n         (auto intro!: has_vector_derivative_real_field derivative_eq_intros continuous_intros)"], ["proof (state)\nthis:\n  ((\\<lambda>t. M t * (- s * complex_of_real t powr (- s - 1))) has_integral\n   M y * complex_of_real y powr - s - M x * complex_of_real x powr - s -\n   (\\<Sum>n\\<in>real -` {x<..y}.\n      \\<chi> n * complex_of_real (real n) powr - s))\n   {x..y}\n\ngoal (1 subgoal):\n 1. cmod (\\<Sum>n\\<in>real -` {x<..y}. \\<chi> n * of_nat n powr - s)\n    \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "hence \"(\\<Sum>n\\<in>real-`{x<..y}. \\<chi> n * real n powr -s) = \n             M y * of_real y powr - s - M x * of_real x powr - s -\n             integral {x..y} (\\<lambda>t. M t * (-s * t powr (-s-1)))\""], ["proof (prove)\nusing this:\n  ((\\<lambda>t. M t * (- s * complex_of_real t powr (- s - 1))) has_integral\n   M y * complex_of_real y powr - s - M x * complex_of_real x powr - s -\n   (\\<Sum>n\\<in>real -` {x<..y}.\n      \\<chi> n * complex_of_real (real n) powr - s))\n   {x..y}\n\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>real -` {x<..y}.\n       \\<chi> n * complex_of_real (real n) powr - s) =\n    M y * complex_of_real y powr - s - M x * complex_of_real x powr - s -\n    integral {x..y}\n     (\\<lambda>t. M t * (- s * complex_of_real t powr (- s - 1)))", "by (simp add: has_integral_iff)"], ["proof (state)\nthis:\n  (\\<Sum>n\\<in>real -` {x<..y}.\n     \\<chi> n * complex_of_real (real n) powr - s) =\n  M y * complex_of_real y powr - s - M x * complex_of_real x powr - s -\n  integral {x..y}\n   (\\<lambda>t. M t * (- s * complex_of_real t powr (- s - 1)))\n\ngoal (1 subgoal):\n 1. cmod (\\<Sum>n\\<in>real -` {x<..y}. \\<chi> n * of_nat n powr - s)\n    \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "also"], ["proof (state)\nthis:\n  (\\<Sum>n\\<in>real -` {x<..y}.\n     \\<chi> n * complex_of_real (real n) powr - s) =\n  M y * complex_of_real y powr - s - M x * complex_of_real x powr - s -\n  integral {x..y}\n   (\\<lambda>t. M t * (- s * complex_of_real t powr (- s - 1)))\n\ngoal (1 subgoal):\n 1. cmod (\\<Sum>n\\<in>real -` {x<..y}. \\<chi> n * of_nat n powr - s)\n    \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "have \"norm \\<dots> \\<le> norm (M y * of_real y powr -s) + norm (M x * of_real x powr -s) +\n                 norm (integral {x..y} (\\<lambda>t. M t * (-s * t powr (-s-1))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod\n     (M y * complex_of_real y powr - s - M x * complex_of_real x powr - s -\n      integral {x..y}\n       (\\<lambda>t. M t * (- s * complex_of_real t powr (- s - 1))))\n    \\<le> cmod (M y * complex_of_real y powr - s) +\n          cmod (M x * complex_of_real x powr - s) +\n          cmod\n           (integral {x..y}\n             (\\<lambda>t. M t * (- s * complex_of_real t powr (- s - 1))))", "by (intro order.trans[OF norm_triangle_ineq4] add_mono order.refl)"], ["proof (state)\nthis:\n  cmod\n   (M y * complex_of_real y powr - s - M x * complex_of_real x powr - s -\n    integral {x..y}\n     (\\<lambda>t. M t * (- s * complex_of_real t powr (- s - 1))))\n  \\<le> cmod (M y * complex_of_real y powr - s) +\n        cmod (M x * complex_of_real x powr - s) +\n        cmod\n         (integral {x..y}\n           (\\<lambda>t. M t * (- s * complex_of_real t powr (- s - 1))))\n\ngoal (1 subgoal):\n 1. cmod (\\<Sum>n\\<in>real -` {x<..y}. \\<chi> n * of_nat n powr - s)\n    \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "also"], ["proof (state)\nthis:\n  cmod\n   (M y * complex_of_real y powr - s - M x * complex_of_real x powr - s -\n    integral {x..y}\n     (\\<lambda>t. M t * (- s * complex_of_real t powr (- s - 1))))\n  \\<le> cmod (M y * complex_of_real y powr - s) +\n        cmod (M x * complex_of_real x powr - s) +\n        cmod\n         (integral {x..y}\n           (\\<lambda>t. M t * (- s * complex_of_real t powr (- s - 1))))\n\ngoal (1 subgoal):\n 1. cmod (\\<Sum>n\\<in>real -` {x<..y}. \\<chi> n * of_nat n powr - s)\n    \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "have \"norm (M y * of_real y powr -s) \\<le> totient n * y powr -\\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (M y * complex_of_real y powr - s)\n    \\<le> real (totient n) * y powr - \\<sigma>", "using xy assms"], ["proof (prove)\nusing this:\n  0 < x\n  x < y\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  0 < Re s\n  0 < x\n  \\<sigma> \\<equiv> Re s\n\ngoal (1 subgoal):\n 1. cmod (M y * complex_of_real y powr - s)\n    \\<le> real (totient n) * y powr - \\<sigma>", "unfolding norm_mult M_def \\<sigma>_def"], ["proof (prove)\nusing this:\n  0 < x\n  x < y\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  0 < Re s\n  0 < x\n  Re s \\<equiv> Re s\n\ngoal (1 subgoal):\n 1. cmod (sum_upto \\<chi> y) * cmod (complex_of_real y powr - s)\n    \\<le> real (totient n) * y powr - Re s", "by (intro mult_mono sum_upto_dcharacter_le) (auto simp: norm_powr_real_powr)"], ["proof (state)\nthis:\n  cmod (M y * complex_of_real y powr - s)\n  \\<le> real (totient n) * y powr - \\<sigma>\n\ngoal (1 subgoal):\n 1. cmod (\\<Sum>n\\<in>real -` {x<..y}. \\<chi> n * of_nat n powr - s)\n    \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "also"], ["proof (state)\nthis:\n  cmod (M y * complex_of_real y powr - s)\n  \\<le> real (totient n) * y powr - \\<sigma>\n\ngoal (1 subgoal):\n 1. cmod (\\<Sum>n\\<in>real -` {x<..y}. \\<chi> n * of_nat n powr - s)\n    \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "have \"\\<dots> \\<le> totient n * x powr -\\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (totient n) * y powr - \\<sigma>\n    \\<le> real (totient n) * x powr - \\<sigma>", "using assms xy"], ["proof (prove)\nusing this:\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  0 < Re s\n  0 < x\n  \\<sigma> \\<equiv> Re s\n  0 < x\n  x < y\n\ngoal (1 subgoal):\n 1. real (totient n) * y powr - \\<sigma>\n    \\<le> real (totient n) * x powr - \\<sigma>", "by (intro mult_left_mono powr_mono2') (auto simp: \\<sigma>_def)"], ["proof (state)\nthis:\n  real (totient n) * y powr - \\<sigma>\n  \\<le> real (totient n) * x powr - \\<sigma>\n\ngoal (1 subgoal):\n 1. cmod (\\<Sum>n\\<in>real -` {x<..y}. \\<chi> n * of_nat n powr - s)\n    \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "also"], ["proof (state)\nthis:\n  real (totient n) * y powr - \\<sigma>\n  \\<le> real (totient n) * x powr - \\<sigma>\n\ngoal (1 subgoal):\n 1. cmod (\\<Sum>n\\<in>real -` {x<..y}. \\<chi> n * of_nat n powr - s)\n    \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "have \"norm (M x * of_real x powr -s) \\<le> totient n * x powr -\\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (M x * complex_of_real x powr - s)\n    \\<le> real (totient n) * x powr - \\<sigma>", "using xy assms"], ["proof (prove)\nusing this:\n  0 < x\n  x < y\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  0 < Re s\n  0 < x\n  \\<sigma> \\<equiv> Re s\n\ngoal (1 subgoal):\n 1. cmod (M x * complex_of_real x powr - s)\n    \\<le> real (totient n) * x powr - \\<sigma>", "unfolding norm_mult M_def \\<sigma>_def"], ["proof (prove)\nusing this:\n  0 < x\n  x < y\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  0 < Re s\n  0 < x\n  Re s \\<equiv> Re s\n\ngoal (1 subgoal):\n 1. cmod (sum_upto \\<chi> x) * cmod (complex_of_real x powr - s)\n    \\<le> real (totient n) * x powr - Re s", "by (intro mult_mono sum_upto_dcharacter_le) (auto simp: norm_powr_real_powr)"], ["proof (state)\nthis:\n  cmod (M x * complex_of_real x powr - s)\n  \\<le> real (totient n) * x powr - \\<sigma>\n\ngoal (1 subgoal):\n 1. cmod (\\<Sum>n\\<in>real -` {x<..y}. \\<chi> n * of_nat n powr - s)\n    \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "also"], ["proof (state)\nthis:\n  cmod (M x * complex_of_real x powr - s)\n  \\<le> real (totient n) * x powr - \\<sigma>\n\ngoal (1 subgoal):\n 1. cmod (\\<Sum>n\\<in>real -` {x<..y}. \\<chi> n * of_nat n powr - s)\n    \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "have \"norm (integral {x..y} (\\<lambda>t. M t * (- s * of_real t powr (-s-1)))) \\<le>\n                 integral {x..y} (\\<lambda>t. real (totient n) * norm s * t powr (-\\<sigma>-1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod\n     (integral {x..y}\n       (\\<lambda>t. M t * (- s * complex_of_real t powr (- s - 1))))\n    \\<le> integral {x..y}\n           (\\<lambda>t. real (totient n) * cmod s * t powr (- \\<sigma> - 1))", "proof (rule integral_norm_bound_integral integrable_on_cmult_left)"], ["proof (state)\ngoal (3 subgoals):\n 1. (\\<lambda>t.\n        M t * (- s * complex_of_real t powr (- s - 1))) integrable_on\n    {x..y}\n 2. (\\<lambda>t.\n        real (totient n) * cmod s * t powr (- \\<sigma> - 1)) integrable_on\n    {x..y}\n 3. \\<And>x.\n       x \\<in> {x..y} \\<Longrightarrow>\n       cmod (M x * (- s * complex_of_real x powr (- s - 1)))\n       \\<le> real (totient n) * cmod s * x powr (- \\<sigma> - 1)", "show \"(\\<lambda>t. real (totient n) * norm s * t powr (- \\<sigma> - 1)) integrable_on {x..y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t.\n        real (totient n) * cmod s * t powr (- \\<sigma> - 1)) integrable_on\n    {x..y}", "using xy"], ["proof (prove)\nusing this:\n  0 < x\n  x < y\n\ngoal (1 subgoal):\n 1. (\\<lambda>t.\n        real (totient n) * cmod s * t powr (- \\<sigma> - 1)) integrable_on\n    {x..y}", "by (intro integrable_continuous_real continuous_intros) auto"], ["proof (state)\nthis:\n  (\\<lambda>t.\n      real (totient n) * cmod s * t powr (- \\<sigma> - 1)) integrable_on\n  {x..y}\n\ngoal (2 subgoals):\n 1. (\\<lambda>t.\n        M t * (- s * complex_of_real t powr (- s - 1))) integrable_on\n    {x..y}\n 2. \\<And>x.\n       x \\<in> {x..y} \\<Longrightarrow>\n       cmod (M x * (- s * complex_of_real x powr (- s - 1)))\n       \\<le> real (totient n) * cmod s * x powr (- \\<sigma> - 1)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>t.\n        M t * (- s * complex_of_real t powr (- s - 1))) integrable_on\n    {x..y}\n 2. \\<And>x.\n       x \\<in> {x..y} \\<Longrightarrow>\n       cmod (M x * (- s * complex_of_real x powr (- s - 1)))\n       \\<le> real (totient n) * cmod s * x powr (- \\<sigma> - 1)", "fix t"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>t.\n        M t * (- s * complex_of_real t powr (- s - 1))) integrable_on\n    {x..y}\n 2. \\<And>x.\n       x \\<in> {x..y} \\<Longrightarrow>\n       cmod (M x * (- s * complex_of_real x powr (- s - 1)))\n       \\<le> real (totient n) * cmod s * x powr (- \\<sigma> - 1)", "assume t: \"t \\<in> {x..y}\""], ["proof (state)\nthis:\n  t \\<in> {x..y}\n\ngoal (2 subgoals):\n 1. (\\<lambda>t.\n        M t * (- s * complex_of_real t powr (- s - 1))) integrable_on\n    {x..y}\n 2. \\<And>x.\n       x \\<in> {x..y} \\<Longrightarrow>\n       cmod (M x * (- s * complex_of_real x powr (- s - 1)))\n       \\<le> real (totient n) * cmod s * x powr (- \\<sigma> - 1)", "have \"norm (M t * (-s * of_real t powr (-s-1))) \\<le> \n              real (totient n) * (norm s * t powr (-\\<sigma>-1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (M t * (- s * complex_of_real t powr (- s - 1)))\n    \\<le> real (totient n) * (cmod s * t powr (- \\<sigma> - 1))", "unfolding norm_mult M_def \\<sigma>_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (sum_upto \\<chi> t) *\n    (cmod (- s) * cmod (complex_of_real t powr (- s - 1)))\n    \\<le> real (totient n) * (cmod s * t powr (- Re s - 1))", "using xy t assms"], ["proof (prove)\nusing this:\n  0 < x\n  x < y\n  t \\<in> {x..y}\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  0 < Re s\n  0 < x\n  \\<sigma> \\<equiv> Re s\n\ngoal (1 subgoal):\n 1. cmod (sum_upto \\<chi> t) *\n    (cmod (- s) * cmod (complex_of_real t powr (- s - 1)))\n    \\<le> real (totient n) * (cmod s * t powr (- Re s - 1))", "by (intro mult_mono sum_upto_dcharacter_le) (auto simp: norm_mult norm_powr_real_powr)"], ["proof (state)\nthis:\n  cmod (M t * (- s * complex_of_real t powr (- s - 1)))\n  \\<le> real (totient n) * (cmod s * t powr (- \\<sigma> - 1))\n\ngoal (2 subgoals):\n 1. (\\<lambda>t.\n        M t * (- s * complex_of_real t powr (- s - 1))) integrable_on\n    {x..y}\n 2. \\<And>x.\n       x \\<in> {x..y} \\<Longrightarrow>\n       cmod (M x * (- s * complex_of_real x powr (- s - 1)))\n       \\<le> real (totient n) * cmod s * x powr (- \\<sigma> - 1)", "thus \"norm (M t * (-s * of_real t powr (-s-1))) \\<le> real (totient n) * norm s * t powr (-\\<sigma>-1)\""], ["proof (prove)\nusing this:\n  cmod (M t * (- s * complex_of_real t powr (- s - 1)))\n  \\<le> real (totient n) * (cmod s * t powr (- \\<sigma> - 1))\n\ngoal (1 subgoal):\n 1. cmod (M t * (- s * complex_of_real t powr (- s - 1)))\n    \\<le> real (totient n) * cmod s * t powr (- \\<sigma> - 1)", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  cmod (M t * (- s * complex_of_real t powr (- s - 1)))\n  \\<le> real (totient n) * cmod s * t powr (- \\<sigma> - 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>t.\n        M t * (- s * complex_of_real t powr (- s - 1))) integrable_on\n    {x..y}", "qed (insert I, auto simp: has_integral_iff)"], ["proof (state)\nthis:\n  cmod\n   (integral {x..y}\n     (\\<lambda>t. M t * (- s * complex_of_real t powr (- s - 1))))\n  \\<le> integral {x..y}\n         (\\<lambda>t. real (totient n) * cmod s * t powr (- \\<sigma> - 1))\n\ngoal (1 subgoal):\n 1. cmod (\\<Sum>n\\<in>real -` {x<..y}. \\<chi> n * of_nat n powr - s)\n    \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "also"], ["proof (state)\nthis:\n  cmod\n   (integral {x..y}\n     (\\<lambda>t. M t * (- s * complex_of_real t powr (- s - 1))))\n  \\<le> integral {x..y}\n         (\\<lambda>t. real (totient n) * cmod s * t powr (- \\<sigma> - 1))\n\ngoal (1 subgoal):\n 1. cmod (\\<Sum>n\\<in>real -` {x<..y}. \\<chi> n * of_nat n powr - s)\n    \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "have \"\\<dots> = real (totient n) * norm s * integral {x..y} (\\<lambda>t. t powr (-\\<sigma>-1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {x..y}\n     (\\<lambda>t. real (totient n) * cmod s * t powr (- \\<sigma> - 1)) =\n    real (totient n) * cmod s *\n    integral {x..y} (\\<lambda>t. t powr (- \\<sigma> - 1))", "by simp"], ["proof (state)\nthis:\n  integral {x..y}\n   (\\<lambda>t. real (totient n) * cmod s * t powr (- \\<sigma> - 1)) =\n  real (totient n) * cmod s *\n  integral {x..y} (\\<lambda>t. t powr (- \\<sigma> - 1))\n\ngoal (1 subgoal):\n 1. cmod (\\<Sum>n\\<in>real -` {x<..y}. \\<chi> n * of_nat n powr - s)\n    \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "also"], ["proof (state)\nthis:\n  integral {x..y}\n   (\\<lambda>t. real (totient n) * cmod s * t powr (- \\<sigma> - 1)) =\n  real (totient n) * cmod s *\n  integral {x..y} (\\<lambda>t. t powr (- \\<sigma> - 1))\n\ngoal (1 subgoal):\n 1. cmod (\\<Sum>n\\<in>real -` {x<..y}. \\<chi> n * of_nat n powr - s)\n    \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "have \"((\\<lambda>t. t powr (-\\<sigma>-1)) has_integral (y powr -\\<sigma> / (-\\<sigma>) - x powr -\\<sigma> / (-\\<sigma>))) {x..y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. t powr (- \\<sigma> - 1)) has_integral\n     y powr - \\<sigma> / - \\<sigma> - x powr - \\<sigma> / - \\<sigma>)\n     {x..y}", "using xy assms"], ["proof (prove)\nusing this:\n  0 < x\n  x < y\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  0 < Re s\n  0 < x\n  \\<sigma> \\<equiv> Re s\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. t powr (- \\<sigma> - 1)) has_integral\n     y powr - \\<sigma> / - \\<sigma> - x powr - \\<sigma> / - \\<sigma>)\n     {x..y}", "by (intro fundamental_theorem_of_calculus) \n         (auto intro!: derivative_eq_intros \n               simp: has_field_derivative_iff_has_vector_derivative [symmetric] \\<sigma>_def)"], ["proof (state)\nthis:\n  ((\\<lambda>t. t powr (- \\<sigma> - 1)) has_integral\n   y powr - \\<sigma> / - \\<sigma> - x powr - \\<sigma> / - \\<sigma>)\n   {x..y}\n\ngoal (1 subgoal):\n 1. cmod (\\<Sum>n\\<in>real -` {x<..y}. \\<chi> n * of_nat n powr - s)\n    \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "hence \"integral {x..y} (\\<lambda>t. t powr (-\\<sigma>-1)) = y powr -\\<sigma> / (-\\<sigma>) - x powr -\\<sigma> / (-\\<sigma>)\""], ["proof (prove)\nusing this:\n  ((\\<lambda>t. t powr (- \\<sigma> - 1)) has_integral\n   y powr - \\<sigma> / - \\<sigma> - x powr - \\<sigma> / - \\<sigma>)\n   {x..y}\n\ngoal (1 subgoal):\n 1. integral {x..y} (\\<lambda>t. t powr (- \\<sigma> - 1)) =\n    y powr - \\<sigma> / - \\<sigma> - x powr - \\<sigma> / - \\<sigma>", "by (simp add: has_integral_iff)"], ["proof (state)\nthis:\n  integral {x..y} (\\<lambda>t. t powr (- \\<sigma> - 1)) =\n  y powr - \\<sigma> / - \\<sigma> - x powr - \\<sigma> / - \\<sigma>\n\ngoal (1 subgoal):\n 1. cmod (\\<Sum>n\\<in>real -` {x<..y}. \\<chi> n * of_nat n powr - s)\n    \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "also"], ["proof (state)\nthis:\n  integral {x..y} (\\<lambda>t. t powr (- \\<sigma> - 1)) =\n  y powr - \\<sigma> / - \\<sigma> - x powr - \\<sigma> / - \\<sigma>\n\ngoal (1 subgoal):\n 1. cmod (\\<Sum>n\\<in>real -` {x<..y}. \\<chi> n * of_nat n powr - s)\n    \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "from assms"], ["proof (chain)\npicking this:\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  0 < Re s\n  0 < x\n  \\<sigma> \\<equiv> Re s", "have \"\\<dots> \\<le> x powr -\\<sigma> / \\<sigma>\""], ["proof (prove)\nusing this:\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  0 < Re s\n  0 < x\n  \\<sigma> \\<equiv> Re s\n\ngoal (1 subgoal):\n 1. y powr - \\<sigma> / - \\<sigma> - x powr - \\<sigma> / - \\<sigma>\n    \\<le> x powr - \\<sigma> / \\<sigma>", "by (simp add: \\<sigma>_def)"], ["proof (state)\nthis:\n  y powr - \\<sigma> / - \\<sigma> - x powr - \\<sigma> / - \\<sigma>\n  \\<le> x powr - \\<sigma> / \\<sigma>\n\ngoal (1 subgoal):\n 1. cmod (\\<Sum>n\\<in>real -` {x<..y}. \\<chi> n * of_nat n powr - s)\n    \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "also"], ["proof (state)\nthis:\n  y powr - \\<sigma> / - \\<sigma> - x powr - \\<sigma> / - \\<sigma>\n  \\<le> x powr - \\<sigma> / \\<sigma>\n\ngoal (1 subgoal):\n 1. cmod (\\<Sum>n\\<in>real -` {x<..y}. \\<chi> n * of_nat n powr - s)\n    \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "have \"real (totient n) * x powr -\\<sigma> + real (totient n) * x powr -\\<sigma> +\n                 real (totient n) * norm s * (x powr -\\<sigma> / \\<sigma>) =\n               real (totient n) * (2 + norm s / \\<sigma>) / x powr \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (totient n) * x powr - \\<sigma> +\n    real (totient n) * x powr - \\<sigma> +\n    real (totient n) * cmod s * (x powr - \\<sigma> / \\<sigma>) =\n    real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "using xy"], ["proof (prove)\nusing this:\n  0 < x\n  x < y\n\ngoal (1 subgoal):\n 1. real (totient n) * x powr - \\<sigma> +\n    real (totient n) * x powr - \\<sigma> +\n    real (totient n) * cmod s * (x powr - \\<sigma> / \\<sigma>) =\n    real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "by (simp add: field_simps powr_minus)"], ["proof (state)\nthis:\n  real (totient n) * x powr - \\<sigma> +\n  real (totient n) * x powr - \\<sigma> +\n  real (totient n) * cmod s * (x powr - \\<sigma> / \\<sigma>) =\n  real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>\n\ngoal (1 subgoal):\n 1. cmod (\\<Sum>n\\<in>real -` {x<..y}. \\<chi> n * of_nat n powr - s)\n    \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "finally"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>x ya.\n              x \\<le> ya \\<Longrightarrow>\n              x + cmod (M x * complex_of_real x powr - s) +\n              cmod\n               (integral {x..y}\n                 (\\<lambda>t.\n                     M t * (- s * complex_of_real t powr (- s - 1))))\n              \\<le> ya + cmod (M x * complex_of_real x powr - s) +\n                    cmod\n                     (integral {x..y}\n                       (\\<lambda>t.\n                           M t * (- s * complex_of_real t powr (- s - 1))));\n   \\<And>x ya.\n      x \\<le> ya \\<Longrightarrow>\n      x + cmod (M x * complex_of_real x powr - s) +\n      cmod\n       (integral {x..y}\n         (\\<lambda>t. M t * (- s * complex_of_real t powr (- s - 1))))\n      \\<le> ya + cmod (M x * complex_of_real x powr - s) +\n            cmod\n             (integral {x..y}\n               (\\<lambda>t.\n                   M t * (- s * complex_of_real t powr (- s - 1))));\n   \\<And>x ya.\n      x \\<le> ya \\<Longrightarrow>\n      real (totient n) * x powr - \\<sigma> + x +\n      cmod\n       (integral {x..y}\n         (\\<lambda>t. M t * (- s * complex_of_real t powr (- s - 1))))\n      \\<le> real (totient n) * x powr - \\<sigma> + ya +\n            cmod\n             (integral {x..y}\n               (\\<lambda>t.\n                   M t * (- s * complex_of_real t powr (- s - 1))));\n   \\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      real (totient n) * x powr - \\<sigma> +\n      real (totient n) * x powr - \\<sigma> +\n      x\n      \\<le> real (totient n) * x powr - \\<sigma> +\n            real (totient n) * x powr - \\<sigma> +\n            y;\n   \\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      real (totient n) * x powr - \\<sigma> +\n      real (totient n) * x powr - \\<sigma> +\n      real (totient n) * cmod s * x\n      \\<le> real (totient n) * x powr - \\<sigma> +\n            real (totient n) * x powr - \\<sigma> +\n            real (totient n) * cmod s * y\\<rbrakk>\n  \\<Longrightarrow> cmod\n                     (\\<Sum>n\\<in>real -` {x<..y}.\n                        \\<chi> n * complex_of_real (real n) powr - s)\n                    \\<le> real (totient n) * (2 + cmod s / \\<sigma>) /\n                          x powr \\<sigma>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x ya.\n              x \\<le> ya \\<Longrightarrow>\n              x + cmod (M x * complex_of_real x powr - s) +\n              cmod\n               (integral {x..y}\n                 (\\<lambda>t.\n                     M t * (- s * complex_of_real t powr (- s - 1))))\n              \\<le> ya + cmod (M x * complex_of_real x powr - s) +\n                    cmod\n                     (integral {x..y}\n                       (\\<lambda>t.\n                           M t * (- s * complex_of_real t powr (- s - 1))));\n   \\<And>x ya.\n      x \\<le> ya \\<Longrightarrow>\n      x + cmod (M x * complex_of_real x powr - s) +\n      cmod\n       (integral {x..y}\n         (\\<lambda>t. M t * (- s * complex_of_real t powr (- s - 1))))\n      \\<le> ya + cmod (M x * complex_of_real x powr - s) +\n            cmod\n             (integral {x..y}\n               (\\<lambda>t.\n                   M t * (- s * complex_of_real t powr (- s - 1))));\n   \\<And>x ya.\n      x \\<le> ya \\<Longrightarrow>\n      real (totient n) * x powr - \\<sigma> + x +\n      cmod\n       (integral {x..y}\n         (\\<lambda>t. M t * (- s * complex_of_real t powr (- s - 1))))\n      \\<le> real (totient n) * x powr - \\<sigma> + ya +\n            cmod\n             (integral {x..y}\n               (\\<lambda>t.\n                   M t * (- s * complex_of_real t powr (- s - 1))));\n   \\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      real (totient n) * x powr - \\<sigma> +\n      real (totient n) * x powr - \\<sigma> +\n      x\n      \\<le> real (totient n) * x powr - \\<sigma> +\n            real (totient n) * x powr - \\<sigma> +\n            y;\n   \\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      real (totient n) * x powr - \\<sigma> +\n      real (totient n) * x powr - \\<sigma> +\n      real (totient n) * cmod s * x\n      \\<le> real (totient n) * x powr - \\<sigma> +\n            real (totient n) * x powr - \\<sigma> +\n            real (totient n) * cmod s * y\\<rbrakk>\n  \\<Longrightarrow> cmod\n                     (\\<Sum>n\\<in>real -` {x<..y}.\n                        \\<chi> n * complex_of_real (real n) powr - s)\n                    \\<le> real (totient n) * (2 + cmod s / \\<sigma>) /\n                          x powr \\<sigma>\n\ngoal (1 subgoal):\n 1. cmod (\\<Sum>n\\<in>real -` {x<..y}. \\<chi> n * of_nat n powr - s)\n    \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "by (simp add: mult_left_mono)"], ["proof (state)\nthis:\n  cmod (\\<Sum>n\\<in>real -` {x<..y}. \\<chi> n * of_nat n powr - s)\n  \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>0 < ?x; ?x < ?y\\<rbrakk>\n  \\<Longrightarrow> cmod\n                     (\\<Sum>n\\<in>real -` {?x<..?y}.\n                        \\<chi> n * of_nat n powr - s)\n                    \\<le> real (totient n) * (2 + cmod s / \\<sigma>) /\n                          ?x powr \\<sigma>\n\ngoal (2 subgoals):\n 1. sequentially \\<noteq> bot\n 2. \\<forall>\\<^sub>F xa in sequentially.\n       cmod\n        (sum_upto (\\<lambda>k. \\<chi> k * of_nat k powr - s) x -\n         (\\<Sum>k\\<le>xa. \\<chi> k * of_nat k powr - s))\n       \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "show \"eventually (\\<lambda>m. norm (sum_upto (\\<lambda>k. \\<chi> k * of_nat k powr - s) x - \n                          (\\<Sum>k\\<le>m. \\<chi> k * of_nat k powr - s))\n          \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F m in sequentially.\n       cmod\n        (sum_upto (\\<lambda>k. \\<chi> k * of_nat k powr - s) x -\n         (\\<Sum>k\\<le>m. \\<chi> k * of_nat k powr - s))\n       \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "using eventually_gt_at_top[of \"nat \\<lfloor>x\\<rfloor>\"]"], ["proof (prove)\nusing this:\n  eventually ((<) (nat \\<lfloor>x\\<rfloor>)) sequentially\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F m in sequentially.\n       cmod\n        (sum_upto (\\<lambda>k. \\<chi> k * of_nat k powr - s) x -\n         (\\<Sum>k\\<le>m. \\<chi> k * of_nat k powr - s))\n       \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       nat \\<lfloor>x\\<rfloor> < m \\<Longrightarrow>\n       cmod\n        (sum_upto (\\<lambda>k. \\<chi> k * of_nat k powr - s) x -\n         (\\<Sum>k\\<le>m. \\<chi> k * of_nat k powr - s))\n       \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "case (elim m)"], ["proof (state)\nthis:\n  nat \\<lfloor>x\\<rfloor> < m\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       nat \\<lfloor>x\\<rfloor> < m \\<Longrightarrow>\n       cmod\n        (sum_upto (\\<lambda>k. \\<chi> k * of_nat k powr - s) x -\n         (\\<Sum>k\\<le>m. \\<chi> k * of_nat k powr - s))\n       \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "have \"(\\<Sum>k\\<le>m. \\<chi> k * of_nat k powr - s) - sum_upto (\\<lambda>k. \\<chi> k * of_nat k powr - s) x =\n            (\\<Sum>k\\<in>{..m} - {k. 0 < k \\<and> real k \\<le> x}. \\<chi> k * of_nat k powr -s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<le>m. \\<chi> k * of_nat k powr - s) -\n    sum_upto (\\<lambda>k. \\<chi> k * of_nat k powr - s) x =\n    (\\<Sum>k\\<in>{..m} - {k. 0 < k \\<and> real k \\<le> x}.\n       \\<chi> k * of_nat k powr - s)", "unfolding sum_upto_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<le>m. \\<chi> k * of_nat k powr - s) -\n    (\\<Sum>k\\<in>{i. 0 < i \\<and> real i \\<le> x}.\n       \\<chi> k * of_nat k powr - s) =\n    (\\<Sum>k\\<in>{..m} - {k. 0 < k \\<and> real k \\<le> x}.\n       \\<chi> k * of_nat k powr - s)", "using elim \\<open>x > 0\\<close>"], ["proof (prove)\nusing this:\n  nat \\<lfloor>x\\<rfloor> < m\n  0 < x\n\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<le>m. \\<chi> k * of_nat k powr - s) -\n    (\\<Sum>k\\<in>{i. 0 < i \\<and> real i \\<le> x}.\n       \\<chi> k * of_nat k powr - s) =\n    (\\<Sum>k\\<in>{..m} - {k. 0 < k \\<and> real k \\<le> x}.\n       \\<chi> k * of_nat k powr - s)", "by (intro Groups_Big.sum_diff [symmetric])\n                            (auto simp: nat_less_iff floor_less_iff)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<le>m. \\<chi> k * of_nat k powr - s) -\n  sum_upto (\\<lambda>k. \\<chi> k * of_nat k powr - s) x =\n  (\\<Sum>k\\<in>{..m} - {k. 0 < k \\<and> real k \\<le> x}.\n     \\<chi> k * of_nat k powr - s)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       nat \\<lfloor>x\\<rfloor> < m \\<Longrightarrow>\n       cmod\n        (sum_upto (\\<lambda>k. \\<chi> k * of_nat k powr - s) x -\n         (\\<Sum>k\\<le>m. \\<chi> k * of_nat k powr - s))\n       \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<le>m. \\<chi> k * of_nat k powr - s) -\n  sum_upto (\\<lambda>k. \\<chi> k * of_nat k powr - s) x =\n  (\\<Sum>k\\<in>{..m} - {k. 0 < k \\<and> real k \\<le> x}.\n     \\<chi> k * of_nat k powr - s)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       nat \\<lfloor>x\\<rfloor> < m \\<Longrightarrow>\n       cmod\n        (sum_upto (\\<lambda>k. \\<chi> k * of_nat k powr - s) x -\n         (\\<Sum>k\\<le>m. \\<chi> k * of_nat k powr - s))\n       \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "have \"\\<dots> = (\\<Sum>k\\<in>{..m} - {k. real k \\<le> x}. \\<chi> k * of_nat k powr -s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<in>{..m} - {k. 0 < k \\<and> real k \\<le> x}.\n       \\<chi> k * of_nat k powr - s) =\n    (\\<Sum>k\\<in>{..m} - {k. real k \\<le> x}. \\<chi> k * of_nat k powr - s)", "by (intro sum.mono_neutral_right) auto"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{..m} - {k. 0 < k \\<and> real k \\<le> x}.\n     \\<chi> k * of_nat k powr - s) =\n  (\\<Sum>k\\<in>{..m} - {k. real k \\<le> x}. \\<chi> k * of_nat k powr - s)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       nat \\<lfloor>x\\<rfloor> < m \\<Longrightarrow>\n       cmod\n        (sum_upto (\\<lambda>k. \\<chi> k * of_nat k powr - s) x -\n         (\\<Sum>k\\<le>m. \\<chi> k * of_nat k powr - s))\n       \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "also"], ["proof (state)\nthis:\n  (\\<Sum>k\\<in>{..m} - {k. 0 < k \\<and> real k \\<le> x}.\n     \\<chi> k * of_nat k powr - s) =\n  (\\<Sum>k\\<in>{..m} - {k. real k \\<le> x}. \\<chi> k * of_nat k powr - s)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       nat \\<lfloor>x\\<rfloor> < m \\<Longrightarrow>\n       cmod\n        (sum_upto (\\<lambda>k. \\<chi> k * of_nat k powr - s) x -\n         (\\<Sum>k\\<le>m. \\<chi> k * of_nat k powr - s))\n       \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "have \"{..m} - {k. real k \\<le> x} = real -` {x<..real m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {..m} - {k. real k \\<le> x} = real -` {x<..real m}", "using elim \\<open>x > 0\\<close>"], ["proof (prove)\nusing this:\n  nat \\<lfloor>x\\<rfloor> < m\n  0 < x\n\ngoal (1 subgoal):\n 1. {..m} - {k. real k \\<le> x} = real -` {x<..real m}", "by (auto simp: nat_less_iff floor_less_iff not_less)"], ["proof (state)\nthis:\n  {..m} - {k. real k \\<le> x} = real -` {x<..real m}\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       nat \\<lfloor>x\\<rfloor> < m \\<Longrightarrow>\n       cmod\n        (sum_upto (\\<lambda>k. \\<chi> k * of_nat k powr - s) x -\n         (\\<Sum>k\\<le>m. \\<chi> k * of_nat k powr - s))\n       \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "also"], ["proof (state)\nthis:\n  {..m} - {k. real k \\<le> x} = real -` {x<..real m}\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       nat \\<lfloor>x\\<rfloor> < m \\<Longrightarrow>\n       cmod\n        (sum_upto (\\<lambda>k. \\<chi> k * of_nat k powr - s) x -\n         (\\<Sum>k\\<le>m. \\<chi> k * of_nat k powr - s))\n       \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "have \"norm (\\<Sum>k\\<in>\\<dots>. \\<chi> k * of_nat k powr -s) \\<le> \n                 real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (\\<Sum>k\\<in>real -` {x<..real m}. \\<chi> k * of_nat k powr - s)\n    \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "using elim \\<open>x > 0\\<close>"], ["proof (prove)\nusing this:\n  nat \\<lfloor>x\\<rfloor> < m\n  0 < x\n\ngoal (1 subgoal):\n 1. cmod (\\<Sum>k\\<in>real -` {x<..real m}. \\<chi> k * of_nat k powr - s)\n    \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "by (intro le) (auto simp: nat_less_iff floor_less_iff)"], ["proof (state)\nthis:\n  cmod (\\<Sum>k\\<in>real -` {x<..real m}. \\<chi> k * of_nat k powr - s)\n  \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       nat \\<lfloor>x\\<rfloor> < m \\<Longrightarrow>\n       cmod\n        (sum_upto (\\<lambda>k. \\<chi> k * of_nat k powr - s) x -\n         (\\<Sum>k\\<le>m. \\<chi> k * of_nat k powr - s))\n       \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "finally"], ["proof (chain)\npicking this:\n  cmod\n   ((\\<Sum>k\\<le>m. \\<chi> k * of_nat k powr - s) -\n    sum_upto (\\<lambda>k. \\<chi> k * of_nat k powr - s) x)\n  \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "show ?case"], ["proof (prove)\nusing this:\n  cmod\n   ((\\<Sum>k\\<le>m. \\<chi> k * of_nat k powr - s) -\n    sum_upto (\\<lambda>k. \\<chi> k * of_nat k powr - s) x)\n  \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>\n\ngoal (1 subgoal):\n 1. cmod\n     (sum_upto (\\<lambda>k. \\<chi> k * of_nat k powr - s) x -\n      (\\<Sum>k\\<le>m. \\<chi> k * of_nat k powr - s))\n    \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>", "by (simp add: norm_minus_commute)"], ["proof (state)\nthis:\n  cmod\n   (sum_upto (\\<lambda>k. \\<chi> k * of_nat k powr - s) x -\n    (\\<Sum>k\\<le>m. \\<chi> k * of_nat k powr - s))\n  \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F m in sequentially.\n     cmod\n      (sum_upto (\\<lambda>k. \\<chi> k * of_nat k powr - s) x -\n       (\\<Sum>k\\<le>m. \\<chi> k * of_nat k powr - s))\n     \\<le> real (totient n) * (2 + cmod s / \\<sigma>) / x powr \\<sigma>\n\ngoal (1 subgoal):\n 1. sequentially \\<noteq> bot", "qed auto"], ["", "lemma partial_Dirichlet_L_sum_bigo:\n  fixes s :: complex and x :: real\n  assumes \"\\<chi> \\<noteq> \\<chi>\\<^sub>0\" \"Re s > 0\"\n  shows   \"(\\<lambda>x. sum_upto (\\<lambda>n. \\<chi> n * n powr -s) x - Dirichlet_L n \\<chi> s) \\<in> O(\\<lambda>x. x powr -s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        sum_upto (\\<lambda>n. \\<chi> n * of_nat n powr - s) x -\n        Dirichlet_L n \\<chi> s)\n    \\<in> O(\\<lambda>x. complex_of_real x powr - s)", "proof (rule bigoI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       cmod\n        (sum_upto (\\<lambda>n. \\<chi> n * of_nat n powr - s) x -\n         Dirichlet_L n \\<chi> s)\n       \\<le> ?c * cmod (complex_of_real x powr - s)", "show \"eventually (\\<lambda>x. norm (sum_upto (\\<lambda>n. \\<chi> n * of_nat n powr -s) x - Dirichlet_L n \\<chi> s)\n          \\<le> real (totient n) * (2 + norm s / Re s) * norm (of_real x powr - s)) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       cmod\n        (sum_upto (\\<lambda>n. \\<chi> n * of_nat n powr - s) x -\n         Dirichlet_L n \\<chi> s)\n       \\<le> real (totient n) * (2 + cmod s / Re s) *\n             cmod (complex_of_real x powr - s)", "using eventually_gt_at_top[of 0]"], ["proof (prove)\nusing this:\n  eventually ((<) (0::?'a1)) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       cmod\n        (sum_upto (\\<lambda>n. \\<chi> n * of_nat n powr - s) x -\n         Dirichlet_L n \\<chi> s)\n       \\<le> real (totient n) * (2 + cmod s / Re s) *\n             cmod (complex_of_real x powr - s)", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       cmod\n        (sum_upto (\\<lambda>n. \\<chi> n * of_nat n powr - s) x -\n         Dirichlet_L n \\<chi> s)\n       \\<le> real (totient n) * (2 + cmod s / Re s) *\n             cmod (complex_of_real x powr - s)", "case (elim x)"], ["proof (state)\nthis:\n  0 < x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       cmod\n        (sum_upto (\\<lambda>n. \\<chi> n * of_nat n powr - s) x -\n         Dirichlet_L n \\<chi> s)\n       \\<le> real (totient n) * (2 + cmod s / Re s) *\n             cmod (complex_of_real x powr - s)", "have \"norm (sum_upto (\\<lambda>n. \\<chi> n * of_nat n powr -s) x - Dirichlet_L n \\<chi> s)\n            \\<le> real (totient n) * (2 + norm s / Re s) / x powr Re s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod\n     (sum_upto (\\<lambda>n. \\<chi> n * of_nat n powr - s) x -\n      Dirichlet_L n \\<chi> s)\n    \\<le> real (totient n) * (2 + cmod s / Re s) / x powr Re s", "using elim assms"], ["proof (prove)\nusing this:\n  0 < x\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  0 < Re s\n\ngoal (1 subgoal):\n 1. cmod\n     (sum_upto (\\<lambda>n. \\<chi> n * of_nat n powr - s) x -\n      Dirichlet_L n \\<chi> s)\n    \\<le> real (totient n) * (2 + cmod s / Re s) / x powr Re s", "by (intro Dirichlet_L_minus_partial_sum_bound) auto"], ["proof (state)\nthis:\n  cmod\n   (sum_upto (\\<lambda>n. \\<chi> n * of_nat n powr - s) x -\n    Dirichlet_L n \\<chi> s)\n  \\<le> real (totient n) * (2 + cmod s / Re s) / x powr Re s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       cmod\n        (sum_upto (\\<lambda>n. \\<chi> n * of_nat n powr - s) x -\n         Dirichlet_L n \\<chi> s)\n       \\<le> real (totient n) * (2 + cmod s / Re s) *\n             cmod (complex_of_real x powr - s)", "thus ?case"], ["proof (prove)\nusing this:\n  cmod\n   (sum_upto (\\<lambda>n. \\<chi> n * of_nat n powr - s) x -\n    Dirichlet_L n \\<chi> s)\n  \\<le> real (totient n) * (2 + cmod s / Re s) / x powr Re s\n\ngoal (1 subgoal):\n 1. cmod\n     (sum_upto (\\<lambda>n. \\<chi> n * of_nat n powr - s) x -\n      Dirichlet_L n \\<chi> s)\n    \\<le> real (totient n) * (2 + cmod s / Re s) *\n          cmod (complex_of_real x powr - s)", "using elim assms"], ["proof (prove)\nusing this:\n  cmod\n   (sum_upto (\\<lambda>n. \\<chi> n * of_nat n powr - s) x -\n    Dirichlet_L n \\<chi> s)\n  \\<le> real (totient n) * (2 + cmod s / Re s) / x powr Re s\n  0 < x\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  0 < Re s\n\ngoal (1 subgoal):\n 1. cmod\n     (sum_upto (\\<lambda>n. \\<chi> n * of_nat n powr - s) x -\n      Dirichlet_L n \\<chi> s)\n    \\<le> real (totient n) * (2 + cmod s / Re s) *\n          cmod (complex_of_real x powr - s)", "by (simp add: norm_powr_real_powr powr_minus divide_simps norm_divide\n               del: div_mult_self1 div_mult_self2 div_mult_self3 div_mult_self4)"], ["proof (state)\nthis:\n  cmod\n   (sum_upto (\\<lambda>n. \\<chi> n * of_nat n powr - s) x -\n    Dirichlet_L n \\<chi> s)\n  \\<le> real (totient n) * (2 + cmod s / Re s) *\n        cmod (complex_of_real x powr - s)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     cmod\n      (sum_upto (\\<lambda>n. \\<chi> n * of_nat n powr - s) x -\n       Dirichlet_L n \\<chi> s)\n     \\<le> real (totient n) * (2 + cmod s / Re s) *\n           cmod (complex_of_real x powr - s)\n\ngoal:\nNo subgoals!", "qed"], ["", "(*<*)"], ["", "end"], ["", "(*>*)"], ["", "end"], ["", "subsection \\<open>Evaluation of $L(\\chi, 0)$\\<close>"], ["", "context residues_nat\nbegin"], ["", "(*<*)"], ["", "context\n  includes no_vec_lambda_notation dcharacter_syntax\nbegin"], ["", "(*>*)"], ["", "lemma Dirichlet_L_0_principal [simp]: \"Dirichlet_L n \\<chi>\\<^sub>0 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi>\\<^sub>0 0 = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi>\\<^sub>0 0 = 0", "have \"Dirichlet_L n \\<chi>\\<^sub>0 0 = -1/2 * (\\<Prod>p | prime p \\<and> p dvd n. 1 - 1 / p powr 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi>\\<^sub>0 0 =\n    - 1 / 2 *\n    (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr 0)", "by (simp add: Dirichlet_L_principal prime_gt_0_nat)"], ["proof (state)\nthis:\n  Dirichlet_L n \\<chi>\\<^sub>0 0 =\n  - 1 / 2 *\n  (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr 0)\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi>\\<^sub>0 0 = 0", "also"], ["proof (state)\nthis:\n  Dirichlet_L n \\<chi>\\<^sub>0 0 =\n  - 1 / 2 *\n  (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr 0)\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi>\\<^sub>0 0 = 0", "have \"(\\<Prod>p | prime p \\<and> p dvd n. 1 - 1 / p powr 0) = (\\<Prod>p | prime p \\<and> p dvd n. 0 :: complex)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr 0) =\n    (\\<Prod>p\\<in>{p. prime p \\<and> p dvd n}. 0)", "by (intro prod.cong) (auto simp: prime_gt_0_nat)"], ["proof (state)\nthis:\n  (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr 0) =\n  (\\<Prod>p\\<in>{p. prime p \\<and> p dvd n}. 0)\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi>\\<^sub>0 0 = 0", "also"], ["proof (state)\nthis:\n  (\\<Prod>x\\<in>{p. prime p \\<and> p dvd n}. 1 - 1 / of_nat x powr 0) =\n  (\\<Prod>p\\<in>{p. prime p \\<and> p dvd n}. 0)\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi>\\<^sub>0 0 = 0", "have \"(\\<Prod>p | prime p \\<and> p dvd n. 0 :: complex) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>{p. prime p \\<and> p dvd n}. 0) = 0", "using prime_divisor_exists[of n] n"], ["proof (prove)\nusing this:\n  \\<lbrakk>n \\<noteq> 0; \\<not> is_unit n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>b. b dvd n \\<and> prime b\n  1 < n\n\ngoal (1 subgoal):\n 1. (\\<Prod>p\\<in>{p. prime p \\<and> p dvd n}. 0) = 0", "by (auto simp: card_gt_0_iff)"], ["proof (state)\nthis:\n  (\\<Prod>p\\<in>{p. prime p \\<and> p dvd n}. 0) = 0\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi>\\<^sub>0 0 = 0", "finally"], ["proof (chain)\npicking this:\n  Dirichlet_L n \\<chi>\\<^sub>0 0 = - 1 / 2 * 0", "show ?thesis"], ["proof (prove)\nusing this:\n  Dirichlet_L n \\<chi>\\<^sub>0 0 = - 1 / 2 * 0\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi>\\<^sub>0 0 = 0", "by simp"], ["proof (state)\nthis:\n  Dirichlet_L n \\<chi>\\<^sub>0 0 = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(*<*)"], ["", "end"], ["", "(*>*)"], ["", "context dcharacter\nbegin"], ["", "(*<*)"], ["", "context\n  includes no_vec_lambda_notation dcharacter_syntax\nbegin"], ["", "(*>*)"], ["", "lemma Dirichlet_L_0_nonprincipal:\n  assumes nonprincipal: \"\\<chi> \\<noteq> \\<chi>\\<^sub>0\"\n  shows   \"Dirichlet_L n \\<chi> 0 = -(\\<Sum>k=1..<n. of_nat k * \\<chi> k) / of_nat n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> 0 =\n    - (\\<Sum>k = 1..<n. of_nat k * \\<chi> k) / of_nat n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> 0 =\n    - (\\<Sum>k = 1..<n. of_nat k * \\<chi> k) / of_nat n", "have \"Dirichlet_L n \\<chi> 0 = (\\<Sum>k=1..n. \\<chi> k * (1 / 2 - of_nat k / of_nat n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> 0 =\n    (\\<Sum>k = 1..n. \\<chi> k * (1 / 2 - of_nat k / of_nat n))", "using assms n"], ["proof (prove)\nusing this:\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n  1 < n\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> 0 =\n    (\\<Sum>k = 1..n. \\<chi> k * (1 / 2 - of_nat k / of_nat n))", "by (simp add: Dirichlet_L_conv_hurwitz_zeta_nonprincipal)"], ["proof (state)\nthis:\n  Dirichlet_L n \\<chi> 0 =\n  (\\<Sum>k = 1..n. \\<chi> k * (1 / 2 - of_nat k / of_nat n))\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> 0 =\n    - (\\<Sum>k = 1..<n. of_nat k * \\<chi> k) / of_nat n", "also"], ["proof (state)\nthis:\n  Dirichlet_L n \\<chi> 0 =\n  (\\<Sum>k = 1..n. \\<chi> k * (1 / 2 - of_nat k / of_nat n))\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> 0 =\n    - (\\<Sum>k = 1..<n. of_nat k * \\<chi> k) / of_nat n", "have \"\\<dots> = -1/n * (\\<Sum>k=1..n. of_nat k * \\<chi> k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. \\<chi> k * (1 / 2 - of_nat k / of_nat n)) =\n    complex_of_real (- 1 / real n) * (\\<Sum>k = 1..n. of_nat k * \\<chi> k)", "using assms"], ["proof (prove)\nusing this:\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. \\<chi> k * (1 / 2 - of_nat k / of_nat n)) =\n    complex_of_real (- 1 / real n) * (\\<Sum>k = 1..n. of_nat k * \\<chi> k)", "by (simp add: algebra_simps sum_subtractf sum_dcharacter_block'\n                              sum_divide_distrib [symmetric])"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..n. \\<chi> k * (1 / 2 - of_nat k / of_nat n)) =\n  complex_of_real (- 1 / real n) * (\\<Sum>k = 1..n. of_nat k * \\<chi> k)\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> 0 =\n    - (\\<Sum>k = 1..<n. of_nat k * \\<chi> k) / of_nat n", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..n. \\<chi> k * (1 / 2 - of_nat k / of_nat n)) =\n  complex_of_real (- 1 / real n) * (\\<Sum>k = 1..n. of_nat k * \\<chi> k)\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> 0 =\n    - (\\<Sum>k = 1..<n. of_nat k * \\<chi> k) / of_nat n", "have \"(\\<Sum>k=1..n. of_nat k * \\<chi> k) = (\\<Sum>k=1..<n. of_nat k * \\<chi> k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. of_nat k * \\<chi> k) =\n    (\\<Sum>k = 1..<n. of_nat k * \\<chi> k)", "using n"], ["proof (prove)\nusing this:\n  1 < n\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..n. of_nat k * \\<chi> k) =\n    (\\<Sum>k = 1..<n. of_nat k * \\<chi> k)", "by (intro sum.mono_neutral_right) (auto simp: eq_zero_iff)"], ["proof (state)\nthis:\n  (\\<Sum>k = 1..n. of_nat k * \\<chi> k) =\n  (\\<Sum>k = 1..<n. of_nat k * \\<chi> k)\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> 0 =\n    - (\\<Sum>k = 1..<n. of_nat k * \\<chi> k) / of_nat n", "finally"], ["proof (chain)\npicking this:\n  Dirichlet_L n \\<chi> 0 =\n  complex_of_real (- 1 / real n) * (\\<Sum>k = 1..<n. of_nat k * \\<chi> k)", "show eq: \"Dirichlet_L n \\<chi> 0 = -(\\<Sum>k=1..<n. of_nat k * \\<chi> k) / of_nat n\""], ["proof (prove)\nusing this:\n  Dirichlet_L n \\<chi> 0 =\n  complex_of_real (- 1 / real n) * (\\<Sum>k = 1..<n. of_nat k * \\<chi> k)\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> 0 =\n    - (\\<Sum>k = 1..<n. of_nat k * \\<chi> k) / of_nat n", "by simp"], ["proof (state)\nthis:\n  Dirichlet_L n \\<chi> 0 =\n  - (\\<Sum>k = 1..<n. of_nat k * \\<chi> k) / of_nat n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Dirichlet_L_0_even [simp]:\n  assumes \"\\<chi> (n - 1) = 1\"\n  shows   \"Dirichlet_L n \\<chi> 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> 0 = 0", "proof (cases \"\\<chi> = \\<chi>\\<^sub>0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<chi> = \\<chi>\\<^sub>0 \\<Longrightarrow> Dirichlet_L n \\<chi> 0 = 0\n 2. \\<chi> \\<noteq> \\<chi>\\<^sub>0 \\<Longrightarrow>\n    Dirichlet_L n \\<chi> 0 = 0", "case False"], ["proof (state)\nthis:\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n\ngoal (2 subgoals):\n 1. \\<chi> = \\<chi>\\<^sub>0 \\<Longrightarrow> Dirichlet_L n \\<chi> 0 = 0\n 2. \\<chi> \\<noteq> \\<chi>\\<^sub>0 \\<Longrightarrow>\n    Dirichlet_L n \\<chi> 0 = 0", "hence \"Dirichlet_L n \\<chi> 0 = -(\\<Sum>k=Suc 0..<n. of_nat k * \\<chi> k) / of_nat n\""], ["proof (prove)\nusing this:\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> 0 =\n    - (\\<Sum>k = Suc 0..<n. of_nat k * \\<chi> k) / of_nat n", "by (simp add: Dirichlet_L_0_nonprincipal)"], ["proof (state)\nthis:\n  Dirichlet_L n \\<chi> 0 =\n  - (\\<Sum>k = Suc 0..<n. of_nat k * \\<chi> k) / of_nat n\n\ngoal (2 subgoals):\n 1. \\<chi> = \\<chi>\\<^sub>0 \\<Longrightarrow> Dirichlet_L n \\<chi> 0 = 0\n 2. \\<chi> \\<noteq> \\<chi>\\<^sub>0 \\<Longrightarrow>\n    Dirichlet_L n \\<chi> 0 = 0", "also"], ["proof (state)\nthis:\n  Dirichlet_L n \\<chi> 0 =\n  - (\\<Sum>k = Suc 0..<n. of_nat k * \\<chi> k) / of_nat n\n\ngoal (2 subgoals):\n 1. \\<chi> = \\<chi>\\<^sub>0 \\<Longrightarrow> Dirichlet_L n \\<chi> 0 = 0\n 2. \\<chi> \\<noteq> \\<chi>\\<^sub>0 \\<Longrightarrow>\n    Dirichlet_L n \\<chi> 0 = 0", "have \"\\<dots> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (\\<Sum>k = Suc 0..<n. of_nat k * \\<chi> k) / of_nat n = 0", "using assms False"], ["proof (prove)\nusing this:\n  \\<chi> (n - 1) = 1\n  \\<chi> \\<noteq> \\<chi>\\<^sub>0\n\ngoal (1 subgoal):\n 1. - (\\<Sum>k = Suc 0..<n. of_nat k * \\<chi> k) / of_nat n = 0", "by (subst even_dcharacter_linear_sum_eq_0) auto"], ["proof (state)\nthis:\n  - (\\<Sum>k = Suc 0..<n. of_nat k * \\<chi> k) / of_nat n = 0\n\ngoal (2 subgoals):\n 1. \\<chi> = \\<chi>\\<^sub>0 \\<Longrightarrow> Dirichlet_L n \\<chi> 0 = 0\n 2. \\<chi> \\<noteq> \\<chi>\\<^sub>0 \\<Longrightarrow>\n    Dirichlet_L n \\<chi> 0 = 0", "finally"], ["proof (chain)\npicking this:\n  Dirichlet_L n \\<chi> 0 = 0", "show \"Dirichlet_L n \\<chi> 0 = 0\""], ["proof (prove)\nusing this:\n  Dirichlet_L n \\<chi> 0 = 0\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> 0 = 0", "."], ["proof (state)\nthis:\n  Dirichlet_L n \\<chi> 0 = 0\n\ngoal (1 subgoal):\n 1. \\<chi> = \\<chi>\\<^sub>0 \\<Longrightarrow> Dirichlet_L n \\<chi> 0 = 0", "qed auto"], ["", "lemma Dirichlet_L_0:\n  \"Dirichlet_L n \\<chi> 0 = (if \\<chi> (n - 1) = 1 then 0 else -(\\<Sum>k=1..<n. of_nat k * \\<chi> k) / of_nat n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> 0 =\n    (if \\<chi> (n - 1) = 1 then 0\n     else - (\\<Sum>k = 1..<n. of_nat k * \\<chi> k) / of_nat n)", "by (cases \"\\<chi> = \\<chi>\\<^sub>0\") (auto simp: Dirichlet_L_0_nonprincipal)"], ["", "(*<*)"], ["", "end"], ["", "(*>*)"], ["", "end"], ["", "subsection \\<open>Properties of $L(\\chi, s)$ for real $\\chi$\\<close>"], ["", "(*<*)"], ["", "unbundle no_vec_lambda_notation"], ["", "(*>*)"], ["", "locale real_dcharacter = dcharacter +\n  assumes real: \"\\<chi> k \\<in> \\<real>\"\nbegin"], ["", "lemma Im_eq_0 [simp]: \"Im (\\<chi> k) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Im (\\<chi> k) = 0", "using real[of k]"], ["proof (prove)\nusing this:\n  \\<chi> k \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. Im (\\<chi> k) = 0", "by (auto elim!: Reals_cases)"], ["", "lemma of_real_Re [simp]: \"of_real (Re (\\<chi> k)) = \\<chi> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (Re (\\<chi> k)) = \\<chi> k", "by (simp add: complex_eq_iff)"], ["", "lemma char_cases: \"\\<chi> k \\<in> {-1, 0, 1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<chi> k \\<in> {- 1, 0, 1}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<chi> k \\<in> {- 1, 0, 1}", "from norm[of k]"], ["proof (chain)\npicking this:\n  cmod (\\<chi> k) = (if coprime k n then 1 else 0)", "have \"Re (\\<chi> k) \\<in> {-1,0,1}\""], ["proof (prove)\nusing this:\n  cmod (\\<chi> k) = (if coprime k n then 1 else 0)\n\ngoal (1 subgoal):\n 1. Re (\\<chi> k) \\<in> {- 1, 0, 1}", "by (auto simp: cmod_def split: if_splits)"], ["proof (state)\nthis:\n  Re (\\<chi> k) \\<in> {- 1, 0, 1}\n\ngoal (1 subgoal):\n 1. \\<chi> k \\<in> {- 1, 0, 1}", "hence \"of_real (Re (\\<chi> k)) \\<in> {-1, 0, 1}\""], ["proof (prove)\nusing this:\n  Re (\\<chi> k) \\<in> {- 1, 0, 1}\n\ngoal (1 subgoal):\n 1. of_real (Re (\\<chi> k)) \\<in> {- (1::'a), 0::'a, 1::'a}", "by auto"], ["proof (state)\nthis:\n  of_real (Re (\\<chi> k)) \\<in> {- (1::?'a1), 0::?'a1, 1::?'a1}\n\ngoal (1 subgoal):\n 1. \\<chi> k \\<in> {- 1, 0, 1}", "also"], ["proof (state)\nthis:\n  of_real (Re (\\<chi> k)) \\<in> {- (1::?'a1), 0::?'a1, 1::?'a1}\n\ngoal (1 subgoal):\n 1. \\<chi> k \\<in> {- 1, 0, 1}", "have \"of_real (Re (\\<chi> k)) = \\<chi> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (Re (\\<chi> k)) = \\<chi> k", "by (simp add: complex_eq_iff)"], ["proof (state)\nthis:\n  complex_of_real (Re (\\<chi> k)) = \\<chi> k\n\ngoal (1 subgoal):\n 1. \\<chi> k \\<in> {- 1, 0, 1}", "finally"], ["proof (chain)\npicking this:\n  \\<chi> k \\<in> {- 1, 0, 1}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<chi> k \\<in> {- 1, 0, 1}\n\ngoal (1 subgoal):\n 1. \\<chi> k \\<in> {- 1, 0, 1}", "."], ["proof (state)\nthis:\n  \\<chi> k \\<in> {- 1, 0, 1}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cnj [simp]: \"cnj (\\<chi> k) = \\<chi> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj (\\<chi> k) = \\<chi> k", "by (simp add: complex_eq_iff)"], ["", "lemma inv_character_id [simp]: \"inv_character \\<chi> = \\<chi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_character \\<chi> = \\<chi>", "by (simp add: inv_character_def fun_eq_iff)"], ["", "lemma Dirichlet_L_in_Reals:\n  assumes \"s \\<in> \\<real>\"\n  shows   \"Dirichlet_L n \\<chi> s \\<in> \\<real>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> s \\<in> \\<real>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> s \\<in> \\<real>", "have \"cnj (Dirichlet_L n \\<chi> s) = Dirichlet_L n \\<chi> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj (Dirichlet_L n \\<chi> s) = Dirichlet_L n \\<chi> s", "using assms"], ["proof (prove)\nusing this:\n  s \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. cnj (Dirichlet_L n \\<chi> s) = Dirichlet_L n \\<chi> s", "by (subst cnj_Dirichlet_L) (auto elim!: Reals_cases)"], ["proof (state)\nthis:\n  cnj (Dirichlet_L n \\<chi> s) = Dirichlet_L n \\<chi> s\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> s \\<in> \\<real>", "thus ?thesis"], ["proof (prove)\nusing this:\n  cnj (Dirichlet_L n \\<chi> s) = Dirichlet_L n \\<chi> s\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> s \\<in> \\<real>", "using Reals_cnj_iff"], ["proof (prove)\nusing this:\n  cnj (Dirichlet_L n \\<chi> s) = Dirichlet_L n \\<chi> s\n  (?z \\<in> \\<real>) = (cnj ?z = ?z)\n\ngoal (1 subgoal):\n 1. Dirichlet_L n \\<chi> s \\<in> \\<real>", "by blast"], ["proof (state)\nthis:\n  Dirichlet_L n \\<chi> s \\<in> \\<real>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  The following property of real characters is used by Apostol to show the non-vanishing of\n  $L(\\chi, 1)$. We have already shown this in a much easier way, but this particular result is\n  still of general interest.\n\\<close>"], ["", "lemma\n  assumes k: \"k > 0\"\n  shows sum_char_divisors_ge: \"Re (\\<Sum>d | d dvd k. \\<chi> d) \\<ge> 0\" (is \"Re (?A k) \\<ge> 0\")\n  and   sum_char_divisors_square_ge: \"is_square k \\<Longrightarrow> Re (\\<Sum>d | d dvd k. \\<chi> d) \\<ge> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> Re (\\<Sum>d | d dvd k. \\<chi> d) &&&\n    (is_square k \\<Longrightarrow> 1 \\<le> Re (\\<Sum>d | d dvd k. \\<chi> d))", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<le> Re (\\<Sum>d | d dvd k. \\<chi> d)\n 2. is_square k \\<Longrightarrow> 1 \\<le> Re (\\<Sum>d | d dvd k. \\<chi> d)", "interpret sum: multiplicative_function ?A"], ["proof (prove)\ngoal (1 subgoal):\n 1. multiplicative_function (\\<lambda>a. \\<Sum>d | d dvd a. \\<chi> d)", "by (fact mult.multiplicative_sum_divisors)"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<le> Re (\\<Sum>d | d dvd k. \\<chi> d)\n 2. is_square k \\<Longrightarrow> 1 \\<le> Re (\\<Sum>d | d dvd k. \\<chi> d)", "have A: \"?A k \\<in> \\<real>\" for k"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd k. \\<chi> d) \\<in> \\<real>", "by (intro sum_in_Reals real)"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd ?k. \\<chi> d) \\<in> \\<real>\n\ngoal (2 subgoals):\n 1. 0 \\<le> Re (\\<Sum>d | d dvd k. \\<chi> d)\n 2. is_square k \\<Longrightarrow> 1 \\<le> Re (\\<Sum>d | d dvd k. \\<chi> d)", "hence [simp]: \"Im (?A k) = 0\" for k"], ["proof (prove)\nusing this:\n  (\\<Sum>d | d dvd ?k. \\<chi> d) \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. Im (\\<Sum>d | d dvd k. \\<chi> d) = 0", "by (auto elim!: Reals_cases)"], ["proof (state)\nthis:\n  Im (\\<Sum>d | d dvd ?k. \\<chi> d) = 0\n\ngoal (2 subgoals):\n 1. 0 \\<le> Re (\\<Sum>d | d dvd k. \\<chi> d)\n 2. is_square k \\<Longrightarrow> 1 \\<le> Re (\\<Sum>d | d dvd k. \\<chi> d)", "have *: \"Re (?A (p ^ m)) \\<ge> (if even m then 1 else 0)\" if p: \"prime p\" for p m"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if even m then 1 else 0) \\<le> Re (\\<Sum>d | d dvd p ^ m. \\<chi> d)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (if even m then 1 else 0) \\<le> Re (\\<Sum>d | d dvd p ^ m. \\<chi> d)", "have sum_neg1: \"(\\<Sum>i\\<le>m. (-1) ^ i) = (if even m then 1 else (0::real))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum ((^) (- 1)) {..m} = (if even m then 1 else 0)", "by (induction m) auto"], ["proof (state)\nthis:\n  sum ((^) (- 1)) {..m} = (if even m then 1 else 0)\n\ngoal (1 subgoal):\n 1. (if even m then 1 else 0) \\<le> Re (\\<Sum>d | d dvd p ^ m. \\<chi> d)", "from p"], ["proof (chain)\npicking this:\n  prime p", "have \"?A (p ^ m) = (\\<Sum>k\\<le>m. \\<chi> (p ^ k))\""], ["proof (prove)\nusing this:\n  prime p\n\ngoal (1 subgoal):\n 1. (\\<Sum>d | d dvd p ^ m. \\<chi> d) = (\\<Sum>k\\<le>m. \\<chi> (p ^ k))", "by (intro sum.reindex_bij_betw [symmetric] bij_betw_prime_power_divisors)"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd p ^ m. \\<chi> d) = (\\<Sum>k\\<le>m. \\<chi> (p ^ k))\n\ngoal (1 subgoal):\n 1. (if even m then 1 else 0) \\<le> Re (\\<Sum>d | d dvd p ^ m. \\<chi> d)", "also"], ["proof (state)\nthis:\n  (\\<Sum>d | d dvd p ^ m. \\<chi> d) = (\\<Sum>k\\<le>m. \\<chi> (p ^ k))\n\ngoal (1 subgoal):\n 1. (if even m then 1 else 0) \\<le> Re (\\<Sum>d | d dvd p ^ m. \\<chi> d)", "have \"Re \\<dots> = (\\<Sum>k\\<le>m. Re (\\<chi> p) ^ k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re (\\<Sum>k\\<le>m. \\<chi> (p ^ k)) = sum ((^) (Re (\\<chi> p))) {..m}", "by (simp add: mult.power)"], ["proof (state)\nthis:\n  Re (\\<Sum>k\\<le>m. \\<chi> (p ^ k)) = sum ((^) (Re (\\<chi> p))) {..m}\n\ngoal (1 subgoal):\n 1. (if even m then 1 else 0) \\<le> Re (\\<Sum>d | d dvd p ^ m. \\<chi> d)", "also"], ["proof (state)\nthis:\n  Re (\\<Sum>k\\<le>m. \\<chi> (p ^ k)) = sum ((^) (Re (\\<chi> p))) {..m}\n\ngoal (1 subgoal):\n 1. (if even m then 1 else 0) \\<le> Re (\\<Sum>d | d dvd p ^ m. \\<chi> d)", "have \"\\<dots> \\<ge> (if even m then 1 else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if even m then 1 else 0) \\<le> sum ((^) (Re (\\<chi> p))) {..m}", "using sum_neg1 char_cases[of p]"], ["proof (prove)\nusing this:\n  sum ((^) (- 1)) {..m} = (if even m then 1 else 0)\n  \\<chi> p \\<in> {- 1, 0, 1}\n\ngoal (1 subgoal):\n 1. (if even m then 1 else 0) \\<le> sum ((^) (Re (\\<chi> p))) {..m}", "by (auto simp: power_0_left)"], ["proof (state)\nthis:\n  (if even m then 1 else 0) \\<le> sum ((^) (Re (\\<chi> p))) {..m}\n\ngoal (1 subgoal):\n 1. (if even m then 1 else 0) \\<le> Re (\\<Sum>d | d dvd p ^ m. \\<chi> d)", "finally"], ["proof (chain)\npicking this:\n  (if even m then 1 else 0) \\<le> Re (\\<Sum>d | d dvd p ^ m. \\<chi> d)", "show ?thesis"], ["proof (prove)\nusing this:\n  (if even m then 1 else 0) \\<le> Re (\\<Sum>d | d dvd p ^ m. \\<chi> d)\n\ngoal (1 subgoal):\n 1. (if even m then 1 else 0) \\<le> Re (\\<Sum>d | d dvd p ^ m. \\<chi> d)", "."], ["proof (state)\nthis:\n  (if even m then 1 else 0) \\<le> Re (\\<Sum>d | d dvd p ^ m. \\<chi> d)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  prime ?p \\<Longrightarrow>\n  (if even ?m then 1 else 0) \\<le> Re (\\<Sum>d | d dvd ?p ^ ?m. \\<chi> d)\n\ngoal (2 subgoals):\n 1. 0 \\<le> Re (\\<Sum>d | d dvd k. \\<chi> d)\n 2. is_square k \\<Longrightarrow> 1 \\<le> Re (\\<Sum>d | d dvd k. \\<chi> d)", "have *: \"Re (?A (p ^ m)) \\<ge> 0\" \"even m \\<Longrightarrow> Re (?A (p ^ m)) \\<ge> 1\" if \"prime p\" for p m"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> Re (\\<Sum>d | d dvd p ^ m. \\<chi> d) &&&\n    (even m \\<Longrightarrow> 1 \\<le> Re (\\<Sum>d | d dvd p ^ m. \\<chi> d))", "using *[of p m] that"], ["proof (prove)\nusing this:\n  prime p \\<Longrightarrow>\n  (if even m then 1 else 0) \\<le> Re (\\<Sum>d | d dvd p ^ m. \\<chi> d)\n  prime p\n\ngoal (1 subgoal):\n 1. 0 \\<le> Re (\\<Sum>d | d dvd p ^ m. \\<chi> d) &&&\n    (even m \\<Longrightarrow> 1 \\<le> Re (\\<Sum>d | d dvd p ^ m. \\<chi> d))", "by (auto split: if_splits)"], ["proof (state)\nthis:\n  prime ?p \\<Longrightarrow> 0 \\<le> Re (\\<Sum>d | d dvd ?p ^ ?m. \\<chi> d)\n  \\<lbrakk>prime ?p; even ?m\\<rbrakk>\n  \\<Longrightarrow> 1 \\<le> Re (\\<Sum>d | d dvd ?p ^ ?m. \\<chi> d)\n\ngoal (2 subgoals):\n 1. 0 \\<le> Re (\\<Sum>d | d dvd k. \\<chi> d)\n 2. is_square k \\<Longrightarrow> 1 \\<le> Re (\\<Sum>d | d dvd k. \\<chi> d)", "have eq: \"Re (?A k) = (\\<Prod>p\\<in>prime_factors k. Re (?A (p ^ multiplicity p k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re (\\<Sum>d | d dvd k. \\<chi> d) =\n    (\\<Prod>p\\<in>prime_factors k.\n       Re (\\<Sum>d | d dvd p ^ multiplicity p k. \\<chi> d))", "using k A"], ["proof (prove)\nusing this:\n  0 < k\n  (\\<Sum>d | d dvd ?k. \\<chi> d) \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. Re (\\<Sum>d | d dvd k. \\<chi> d) =\n    (\\<Prod>p\\<in>prime_factors k.\n       Re (\\<Sum>d | d dvd p ^ multiplicity p k. \\<chi> d))", "by (subst sum.prod_prime_factors) (auto simp: Re_prod_Reals)"], ["proof (state)\nthis:\n  Re (\\<Sum>d | d dvd k. \\<chi> d) =\n  (\\<Prod>p\\<in>prime_factors k.\n     Re (\\<Sum>d | d dvd p ^ multiplicity p k. \\<chi> d))\n\ngoal (2 subgoals):\n 1. 0 \\<le> Re (\\<Sum>d | d dvd k. \\<chi> d)\n 2. is_square k \\<Longrightarrow> 1 \\<le> Re (\\<Sum>d | d dvd k. \\<chi> d)", "show \"Re (\\<Sum>d | d dvd k. \\<chi> d) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> Re (\\<Sum>d | d dvd k. \\<chi> d)", "by (subst eq, intro prod_nonneg ballI *) auto"], ["proof (state)\nthis:\n  0 \\<le> Re (\\<Sum>d | d dvd k. \\<chi> d)\n\ngoal (1 subgoal):\n 1. is_square k \\<Longrightarrow> 1 \\<le> Re (\\<Sum>d | d dvd k. \\<chi> d)", "assume \"is_square k\""], ["proof (state)\nthis:\n  is_square k\n\ngoal (1 subgoal):\n 1. is_square k \\<Longrightarrow> 1 \\<le> Re (\\<Sum>d | d dvd k. \\<chi> d)", "then"], ["proof (chain)\npicking this:\n  is_square k", "obtain m where m: \"k = m ^ 2\""], ["proof (prove)\nusing this:\n  is_square k\n\ngoal (1 subgoal):\n 1. (\\<And>m. k = m\\<^sup>2 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim!: is_nth_powerE)"], ["proof (state)\nthis:\n  k = m\\<^sup>2\n\ngoal (1 subgoal):\n 1. is_square k \\<Longrightarrow> 1 \\<le> Re (\\<Sum>d | d dvd k. \\<chi> d)", "have \"even (multiplicity p k)\" if \"prime p\" for p"], ["proof (prove)\ngoal (1 subgoal):\n 1. even (multiplicity p k)", "using k that"], ["proof (prove)\nusing this:\n  0 < k\n  prime p\n\ngoal (1 subgoal):\n 1. even (multiplicity p k)", "unfolding m"], ["proof (prove)\nusing this:\n  0 < m\\<^sup>2\n  prime p\n\ngoal (1 subgoal):\n 1. even (multiplicity p (m\\<^sup>2))", "by (subst prime_elem_multiplicity_power_distrib) (auto intro!: Nat.gr0I)"], ["proof (state)\nthis:\n  prime ?p \\<Longrightarrow> even (multiplicity ?p k)\n\ngoal (1 subgoal):\n 1. is_square k \\<Longrightarrow> 1 \\<le> Re (\\<Sum>d | d dvd k. \\<chi> d)", "thus \"Re (\\<Sum>d | d dvd k. \\<chi> d) \\<ge> 1\""], ["proof (prove)\nusing this:\n  prime ?p \\<Longrightarrow> even (multiplicity ?p k)\n\ngoal (1 subgoal):\n 1. 1 \\<le> Re (\\<Sum>d | d dvd k. \\<chi> d)", "by (subst eq, intro prod_ge_1 ballI *) auto"], ["proof (state)\nthis:\n  1 \\<le> Re (\\<Sum>d | d dvd k. \\<chi> d)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(*<*)"], ["", "unbundle vec_lambda_notation"], ["", "(*>*)"], ["", "end"]]}