{"file_name": "/home/qj213/afp-2021-10-22/thys/Regression_Test_Selection/Common/CollectionSemantics.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Regression_Test_Selection", "problem_names": ["lemma small_det_csmall_det:\nassumes \"\\<forall>\\<sigma>. small P \\<sigma> = {} \\<or> (\\<exists>\\<sigma>'. small P \\<sigma> = {\\<sigma>'})\"\nshows \"\\<forall>\\<sigma>. csmall P \\<sigma> = {} \\<or> (\\<exists>o'. csmall P \\<sigma> = {o'})\"", "lemma small_nstep_csmall_nstep_equiv:\n \"small_nstep P \\<sigma> n\n       = { \\<sigma>'. \\<exists>coll. (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n }\"", "lemma csmall_nstep_exists:\n \"\\<sigma>' \\<in> big P \\<sigma> \\<Longrightarrow> \\<exists>n coll. (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n \\<and> \\<sigma>' \\<in> endset\"", "lemma csmall_det_csmall_nstep_det:\nassumes \"\\<forall>\\<sigma>. csmall P \\<sigma> = {} \\<or> (\\<exists>o'. csmall P \\<sigma> = {o'})\"\nshows \"\\<forall>\\<sigma>. csmall_nstep P \\<sigma> n = {} \\<or> (\\<exists>o'. csmall_nstep P \\<sigma> n = {o'})\"", "lemma csmall_nstep_Rec2:\n \"csmall_nstep P \\<sigma> (Suc n) =\n  { (\\<sigma>2, coll). \\<exists>\\<sigma>1 coll1 coll2. (\\<sigma>1, coll1) \\<in> csmall P \\<sigma>\n                      \\<and> (\\<sigma>2, coll2) \\<in> csmall_nstep P \\<sigma>1 n \\<and> combine coll1 coll2 = coll }\"", "lemma csmall_nstep_SucD:\nassumes \"(\\<sigma>',coll') \\<in> csmall_nstep P \\<sigma> (Suc n)\"\nshows \"\\<exists>\\<sigma>1 coll1. (\\<sigma>1, coll1) \\<in> csmall P \\<sigma>\n   \\<and> (\\<exists>coll. coll' = combine coll1 coll \\<and> (\\<sigma>',coll) \\<in> csmall_nstep P \\<sigma>1 n)\"", "lemma csmall_nstep_Suc_nend: \"o' \\<in> csmall_nstep P \\<sigma> (Suc n1) \\<Longrightarrow> \\<sigma> \\<notin> endset\"", "lemma small_to_csmall_nstep_pres:\nassumes Qpres: \"\\<And>P \\<sigma> \\<sigma>'. Q P \\<sigma> \\<Longrightarrow> \\<sigma>' \\<in> small P \\<sigma> \\<Longrightarrow> Q P \\<sigma>'\"\nshows \"Q P \\<sigma> \\<Longrightarrow> (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n \\<Longrightarrow> Q P \\<sigma>'\"", "lemma csmall_to_csmall_nstep_prop:\nassumes cond: \"\\<And>P \\<sigma> \\<sigma>' coll. (\\<sigma>', coll) \\<in> csmall P \\<sigma> \\<Longrightarrow> R P coll \\<Longrightarrow> Q P \\<sigma> \\<Longrightarrow> R' P \\<sigma> \\<sigma>' coll\"\n  and Rcomb: \"\\<And>P coll1 coll2. R P (combine coll1 coll2) = (R P coll1 \\<and> R P coll2)\"\n  and Qpres: \"\\<And>P \\<sigma> \\<sigma>'. Q P \\<sigma> \\<Longrightarrow> \\<sigma>' \\<in> small P \\<sigma> \\<Longrightarrow> Q P \\<sigma>'\"\n  and Rtrans': \"\\<And>P \\<sigma> \\<sigma>1 \\<sigma>' coll1 coll2.\n                        R' P \\<sigma> \\<sigma>1 coll1 \\<and> R' P \\<sigma>1 \\<sigma>' coll2 \\<Longrightarrow> R' P \\<sigma> \\<sigma>' (combine coll1 coll2)\"\n  and base: \"\\<And>\\<sigma>. R' P \\<sigma> \\<sigma> collect_id\"\nshows \"(\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n \\<Longrightarrow> R P coll \\<Longrightarrow> Q P \\<sigma> \\<Longrightarrow> R' P \\<sigma> \\<sigma>' coll\"", "lemma csmall_to_csmall_nstep_prop2:\nassumes cond: \"\\<And>P P' \\<sigma> \\<sigma>' coll. (\\<sigma>', coll) \\<in> csmall P \\<sigma>\n             \\<Longrightarrow> R P P' coll \\<Longrightarrow> Q \\<sigma> \\<Longrightarrow> (\\<sigma>', coll) \\<in> csmall P' \\<sigma>\"\n  and Rcomb: \"\\<And>P P' coll1 coll2. R P P' (combine coll1 coll2) = (R P P' coll1 \\<and> R P P' coll2)\"\n  and Qpres: \"\\<And>P \\<sigma> \\<sigma>'. Q \\<sigma> \\<Longrightarrow> \\<sigma>' \\<in> small P \\<sigma> \\<Longrightarrow> Q \\<sigma>'\"\nshows \"(\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n \\<Longrightarrow> R P P' coll \\<Longrightarrow> Q \\<sigma> \\<Longrightarrow> (\\<sigma>', coll) \\<in> csmall_nstep P' \\<sigma> n\"", "lemma cbigD:\n \"\\<lbrakk> (\\<sigma>',coll') \\<in> cbig P \\<sigma> \\<rbrakk> \\<Longrightarrow> \\<exists>n. (\\<sigma>',coll') \\<in> csmall_nstep P \\<sigma> n \\<and> \\<sigma>' \\<in> endset\"", "lemma cbigD':\n \"\\<lbrakk> o' \\<in> cbig P \\<sigma> \\<rbrakk> \\<Longrightarrow> \\<exists>n. o' \\<in> csmall_nstep P \\<sigma> n \\<and> fst o' \\<in> endset\"", "lemma cbig_def2:\n \"(\\<sigma>', coll) \\<in> cbig P \\<sigma> \\<longleftrightarrow> (\\<exists>n. (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n \\<and> \\<sigma>' \\<in> endset)\"", "lemma cbig_big_equiv:\n \"(\\<exists>coll. (\\<sigma>', coll) \\<in> cbig P \\<sigma>) \\<longleftrightarrow> \\<sigma>' \\<in> big P \\<sigma>\"", "lemma cbig_big_implies:\n \"(\\<sigma>', coll) \\<in> cbig P \\<sigma> \\<Longrightarrow> \\<sigma>' \\<in> big P \\<sigma>\"", "lemma csmall_to_cbig_prop:\nassumes \"\\<And>P \\<sigma> \\<sigma>' coll. (\\<sigma>', coll) \\<in> csmall P \\<sigma> \\<Longrightarrow> R P coll \\<Longrightarrow> Q P \\<sigma> \\<Longrightarrow> R' P \\<sigma> \\<sigma>' coll\"\n  and \"\\<And>P coll1 coll2. R P (combine coll1 coll2) = (R P coll1 \\<and> R P coll2)\"\n  and \"\\<And>P \\<sigma> \\<sigma>'. Q P \\<sigma> \\<Longrightarrow> \\<sigma>' \\<in> small P \\<sigma> \\<Longrightarrow> Q P \\<sigma>'\"\n  and \"\\<And>P \\<sigma> \\<sigma>1 \\<sigma>' coll1 coll2.\n                        R' P \\<sigma> \\<sigma>1 coll1 \\<and> R' P \\<sigma>1 \\<sigma>' coll2 \\<Longrightarrow> R' P \\<sigma> \\<sigma>' (combine coll1 coll2)\"\n  and \"\\<And>\\<sigma>. R' P \\<sigma> \\<sigma> collect_id\"\nshows \"(\\<sigma>', coll) \\<in> cbig P \\<sigma> \\<Longrightarrow> R P coll \\<Longrightarrow> Q P \\<sigma> \\<Longrightarrow> R' P \\<sigma> \\<sigma>' coll\"", "lemma csmall_to_cbig_prop2:\nassumes \"\\<And>P P' \\<sigma> \\<sigma>' coll. (\\<sigma>', coll) \\<in> csmall P \\<sigma> \\<Longrightarrow> R P P' coll \\<Longrightarrow> Q \\<sigma> \\<Longrightarrow> (\\<sigma>', coll) \\<in> csmall P' \\<sigma>\"\n  and \"\\<And>P P' coll1 coll2. R P P' (combine coll1 coll2) = (R P P' coll1 \\<and> R P P' coll2)\"\n  and Qpres: \"\\<And>P \\<sigma> \\<sigma>'. Q \\<sigma> \\<Longrightarrow> \\<sigma>' \\<in> small P \\<sigma> \\<Longrightarrow> Q \\<sigma>'\"\nshows \"(\\<sigma>', coll) \\<in> cbig P \\<sigma> \\<Longrightarrow> R P P' coll \\<Longrightarrow> Q \\<sigma> \\<Longrightarrow> (\\<sigma>', coll) \\<in> cbig P' \\<sigma>\"", "lemma cbig_stepD:\nassumes cbig: \"(\\<sigma>',coll') \\<in> cbig P \\<sigma>\" and nend: \"\\<sigma> \\<notin> endset\"\nshows \"\\<exists>\\<sigma>1 coll1. (\\<sigma>1, coll1) \\<in> csmall P \\<sigma>\n   \\<and> (\\<exists>coll. coll' = combine coll1 coll \\<and> (\\<sigma>',coll) \\<in> cbig P \\<sigma>1)\"", "lemma csmall_nstep_det_last_eq:\nassumes det: \"\\<forall>\\<sigma>. small P \\<sigma> = {} \\<or> (\\<exists>\\<sigma>'. small P \\<sigma> = {\\<sigma>'})\"\nshows \"\\<lbrakk> (\\<sigma>',coll') \\<in> cbig P \\<sigma>; (\\<sigma>',coll') \\<in> csmall_nstep P \\<sigma> n; (\\<sigma>',coll'') \\<in> csmall_nstep P \\<sigma> n' \\<rbrakk>\n \\<Longrightarrow> n = n'\""], "translations": [["", "lemma small_det_csmall_det:\nassumes \"\\<forall>\\<sigma>. small P \\<sigma> = {} \\<or> (\\<exists>\\<sigma>'. small P \\<sigma> = {\\<sigma>'})\"\nshows \"\\<forall>\\<sigma>. csmall P \\<sigma> = {} \\<or> (\\<exists>o'. csmall P \\<sigma> = {o'})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<sigma>.\n       csmall P \\<sigma> = {} \\<or> (\\<exists>o'. csmall P \\<sigma> = {o'})", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>\\<sigma>.\n     small P \\<sigma> = {} \\<or>\n     (\\<exists>\\<sigma>'. small P \\<sigma> = {\\<sigma>'})\n\ngoal (1 subgoal):\n 1. \\<forall>\\<sigma>.\n       csmall P \\<sigma> = {} \\<or> (\\<exists>o'. csmall P \\<sigma> = {o'})", "by(fastforce simp: csmall_def)"], ["", "subsection \"Extending @{term csmall} to multiple steps\""], ["", "primrec csmall_nstep :: \"'prog \\<Rightarrow> 'state \\<Rightarrow> nat \\<Rightarrow> ('state \\<times> 'coll) set\" where\ncsmall_nstep_base:\n \"csmall_nstep P \\<sigma> 0 = {(\\<sigma>, collect_id)}\" |\ncsmall_nstep_Rec:\n \"csmall_nstep P \\<sigma> (Suc n) =\n  { (\\<sigma>2, coll). \\<exists>\\<sigma>1 coll1 coll2. (\\<sigma>1, coll1) \\<in> csmall_nstep P \\<sigma> n\n                      \\<and> (\\<sigma>2, coll2) \\<in> csmall P \\<sigma>1 \\<and> combine coll1 coll2 = coll }\""], ["", "lemma small_nstep_csmall_nstep_equiv:\n \"small_nstep P \\<sigma> n\n       = { \\<sigma>'. \\<exists>coll. (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small_nstep P \\<sigma> n =\n    {\\<sigma>'.\n     \\<exists>coll. (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n}", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. small_nstep P \\<sigma> 0 =\n    {\\<sigma>'.\n     \\<exists>coll. (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> 0}\n 2. \\<And>n.\n       small_nstep P \\<sigma> n =\n       {\\<sigma>'.\n        \\<exists>coll.\n           (\\<sigma>', coll)\n           \\<in> csmall_nstep P \\<sigma> n} \\<Longrightarrow>\n       small_nstep P \\<sigma> (Suc n) =\n       {\\<sigma>'.\n        \\<exists>coll.\n           (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> (Suc n)}", "qed(simp_all add: csmall_def)"], ["", "lemma csmall_nstep_exists:\n \"\\<sigma>' \\<in> big P \\<sigma> \\<Longrightarrow> \\<exists>n coll. (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n \\<and> \\<sigma>' \\<in> endset\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma>' \\<in> big P \\<sigma> \\<Longrightarrow>\n    \\<exists>n coll.\n       (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n \\<and>\n       \\<sigma>' \\<in> endset", "proof(drule bigD)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>n.\n       \\<sigma>' \\<in> small_nstep P \\<sigma> n \\<and>\n       \\<sigma>' \\<in> endset \\<Longrightarrow>\n    \\<exists>n coll.\n       (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n \\<and>\n       \\<sigma>' \\<in> endset", "qed(clarsimp simp: small_nstep_csmall_nstep_equiv)"], ["", "lemma csmall_det_csmall_nstep_det:\nassumes \"\\<forall>\\<sigma>. csmall P \\<sigma> = {} \\<or> (\\<exists>o'. csmall P \\<sigma> = {o'})\"\nshows \"\\<forall>\\<sigma>. csmall_nstep P \\<sigma> n = {} \\<or> (\\<exists>o'. csmall_nstep P \\<sigma> n = {o'})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<sigma>.\n       csmall_nstep P \\<sigma> n = {} \\<or>\n       (\\<exists>o'. csmall_nstep P \\<sigma> n = {o'})", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>\\<sigma>.\n     csmall P \\<sigma> = {} \\<or> (\\<exists>o'. csmall P \\<sigma> = {o'})\n\ngoal (1 subgoal):\n 1. \\<forall>\\<sigma>.\n       csmall_nstep P \\<sigma> n = {} \\<or>\n       (\\<exists>o'. csmall_nstep P \\<sigma> n = {o'})", "proof(induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>\\<sigma>.\n       csmall P \\<sigma> = {} \\<or>\n       (\\<exists>o'. csmall P \\<sigma> = {o'}) \\<Longrightarrow>\n    \\<forall>\\<sigma>.\n       csmall_nstep P \\<sigma> 0 = {} \\<or>\n       (\\<exists>o'. csmall_nstep P \\<sigma> 0 = {o'})\n 2. \\<And>n.\n       \\<lbrakk>\\<forall>\\<sigma>.\n                   csmall P \\<sigma> = {} \\<or>\n                   (\\<exists>o'. csmall P \\<sigma> = {o'}) \\<Longrightarrow>\n                \\<forall>\\<sigma>.\n                   csmall_nstep P \\<sigma> n = {} \\<or>\n                   (\\<exists>o'. csmall_nstep P \\<sigma> n = {o'});\n        \\<forall>\\<sigma>.\n           csmall P \\<sigma> = {} \\<or>\n           (\\<exists>o'. csmall P \\<sigma> = {o'})\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<sigma>.\n                            csmall_nstep P \\<sigma> (Suc n) = {} \\<or>\n                            (\\<exists>o'.\n                                csmall_nstep P \\<sigma> (Suc n) = {o'})", "case (Suc n)"], ["proof (state)\nthis:\n  \\<forall>\\<sigma>.\n     csmall P \\<sigma> = {} \\<or>\n     (\\<exists>o'. csmall P \\<sigma> = {o'}) \\<Longrightarrow>\n  \\<forall>\\<sigma>.\n     csmall_nstep P \\<sigma> n = {} \\<or>\n     (\\<exists>o'. csmall_nstep P \\<sigma> n = {o'})\n  \\<forall>\\<sigma>.\n     csmall P \\<sigma> = {} \\<or> (\\<exists>o'. csmall P \\<sigma> = {o'})\n\ngoal (2 subgoals):\n 1. \\<forall>\\<sigma>.\n       csmall P \\<sigma> = {} \\<or>\n       (\\<exists>o'. csmall P \\<sigma> = {o'}) \\<Longrightarrow>\n    \\<forall>\\<sigma>.\n       csmall_nstep P \\<sigma> 0 = {} \\<or>\n       (\\<exists>o'. csmall_nstep P \\<sigma> 0 = {o'})\n 2. \\<And>n.\n       \\<lbrakk>\\<forall>\\<sigma>.\n                   csmall P \\<sigma> = {} \\<or>\n                   (\\<exists>o'. csmall P \\<sigma> = {o'}) \\<Longrightarrow>\n                \\<forall>\\<sigma>.\n                   csmall_nstep P \\<sigma> n = {} \\<or>\n                   (\\<exists>o'. csmall_nstep P \\<sigma> n = {o'});\n        \\<forall>\\<sigma>.\n           csmall P \\<sigma> = {} \\<or>\n           (\\<exists>o'. csmall P \\<sigma> = {o'})\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<sigma>.\n                            csmall_nstep P \\<sigma> (Suc n) = {} \\<or>\n                            (\\<exists>o'.\n                                csmall_nstep P \\<sigma> (Suc n) = {o'})", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<sigma>.\n     csmall P \\<sigma> = {} \\<or>\n     (\\<exists>o'. csmall P \\<sigma> = {o'}) \\<Longrightarrow>\n  \\<forall>\\<sigma>.\n     csmall_nstep P \\<sigma> n = {} \\<or>\n     (\\<exists>o'. csmall_nstep P \\<sigma> n = {o'})\n  \\<forall>\\<sigma>.\n     csmall P \\<sigma> = {} \\<or> (\\<exists>o'. csmall P \\<sigma> = {o'})", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>\\<sigma>.\n     csmall P \\<sigma> = {} \\<or>\n     (\\<exists>o'. csmall P \\<sigma> = {o'}) \\<Longrightarrow>\n  \\<forall>\\<sigma>.\n     csmall_nstep P \\<sigma> n = {} \\<or>\n     (\\<exists>o'. csmall_nstep P \\<sigma> n = {o'})\n  \\<forall>\\<sigma>.\n     csmall P \\<sigma> = {} \\<or> (\\<exists>o'. csmall P \\<sigma> = {o'})\n\ngoal (1 subgoal):\n 1. \\<forall>\\<sigma>.\n       csmall_nstep P \\<sigma> (Suc n) = {} \\<or>\n       (\\<exists>o'. csmall_nstep P \\<sigma> (Suc n) = {o'})", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>\\<sigma>.\n     csmall_nstep P \\<sigma> (Suc n) = {} \\<or>\n     (\\<exists>o'. csmall_nstep P \\<sigma> (Suc n) = {o'})\n\ngoal (1 subgoal):\n 1. \\<forall>\\<sigma>.\n       csmall P \\<sigma> = {} \\<or>\n       (\\<exists>o'. csmall P \\<sigma> = {o'}) \\<Longrightarrow>\n    \\<forall>\\<sigma>.\n       csmall_nstep P \\<sigma> 0 = {} \\<or>\n       (\\<exists>o'. csmall_nstep P \\<sigma> 0 = {o'})", "qed(simp)"], ["", "lemma csmall_nstep_Rec2:\n \"csmall_nstep P \\<sigma> (Suc n) =\n  { (\\<sigma>2, coll). \\<exists>\\<sigma>1 coll1 coll2. (\\<sigma>1, coll1) \\<in> csmall P \\<sigma>\n                      \\<and> (\\<sigma>2, coll2) \\<in> csmall_nstep P \\<sigma>1 n \\<and> combine coll1 coll2 = coll }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. csmall_nstep P \\<sigma> (Suc n) =\n    {(\\<sigma>2, coll).\n     \\<exists>\\<sigma>1 coll1 coll2.\n        (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n        (\\<sigma>2, coll2) \\<in> csmall_nstep P \\<sigma>1 n \\<and>\n        combine coll1 coll2 = coll}", "proof(induct n arbitrary: \\<sigma>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<sigma>.\n       csmall_nstep P \\<sigma> (Suc 0) =\n       {(\\<sigma>2, coll).\n        \\<exists>\\<sigma>1 coll1 coll2.\n           (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n           (\\<sigma>2, coll2) \\<in> csmall_nstep P \\<sigma>1 0 \\<and>\n           combine coll1 coll2 = coll}\n 2. \\<And>n \\<sigma>.\n       (\\<And>\\<sigma>.\n           csmall_nstep P \\<sigma> (Suc n) =\n           {(\\<sigma>2, coll).\n            \\<exists>\\<sigma>1 coll1 coll2.\n               (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n               (\\<sigma>2, coll2) \\<in> csmall_nstep P \\<sigma>1 n \\<and>\n               combine coll1 coll2 = coll}) \\<Longrightarrow>\n       csmall_nstep P \\<sigma> (Suc (Suc n)) =\n       {(\\<sigma>2, coll).\n        \\<exists>\\<sigma>1 coll1 coll2.\n           (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n           (\\<sigma>2, coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n) \\<and>\n           combine coll1 coll2 = coll}", "case (Suc n)"], ["proof (state)\nthis:\n  csmall_nstep P ?\\<sigma> (Suc n) =\n  {a. case a of\n      (\\<sigma>2, coll) \\<Rightarrow>\n        \\<exists>\\<sigma>1 coll1 coll2.\n           (\\<sigma>1, coll1) \\<in> csmall P ?\\<sigma> \\<and>\n           (\\<sigma>2, coll2) \\<in> csmall_nstep P \\<sigma>1 n \\<and>\n           combine coll1 coll2 = coll}\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma>.\n       csmall_nstep P \\<sigma> (Suc 0) =\n       {(\\<sigma>2, coll).\n        \\<exists>\\<sigma>1 coll1 coll2.\n           (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n           (\\<sigma>2, coll2) \\<in> csmall_nstep P \\<sigma>1 0 \\<and>\n           combine coll1 coll2 = coll}\n 2. \\<And>n \\<sigma>.\n       (\\<And>\\<sigma>.\n           csmall_nstep P \\<sigma> (Suc n) =\n           {(\\<sigma>2, coll).\n            \\<exists>\\<sigma>1 coll1 coll2.\n               (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n               (\\<sigma>2, coll2) \\<in> csmall_nstep P \\<sigma>1 n \\<and>\n               combine coll1 coll2 = coll}) \\<Longrightarrow>\n       csmall_nstep P \\<sigma> (Suc (Suc n)) =\n       {(\\<sigma>2, coll).\n        \\<exists>\\<sigma>1 coll1 coll2.\n           (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n           (\\<sigma>2, coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n) \\<and>\n           combine coll1 coll2 = coll}", "have right: \"\\<And>\\<sigma>' coll'. (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> (Suc(Suc n))\n    \\<Longrightarrow> \\<exists>\\<sigma>1 coll1 coll2. (\\<sigma>1, coll1) \\<in> csmall P \\<sigma>\n                      \\<and> (\\<sigma>', coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n) \\<and> combine coll1 coll2 = coll'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>'' coll'.\n       (\\<sigma>'', coll')\n       \\<in> csmall_nstep P \\<sigma> (Suc (Suc n)) \\<Longrightarrow>\n       \\<exists>\\<sigma>1 coll1 coll2.\n          (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n          (\\<sigma>'', coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n) \\<and>\n          combine coll1 coll2 = coll'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>'' coll'.\n       (\\<sigma>'', coll')\n       \\<in> csmall_nstep P \\<sigma> (Suc (Suc n)) \\<Longrightarrow>\n       \\<exists>\\<sigma>1 coll1 coll2.\n          (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n          (\\<sigma>'', coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n) \\<and>\n          combine coll1 coll2 = coll'", "fix \\<sigma>' coll'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>'' coll'.\n       (\\<sigma>'', coll')\n       \\<in> csmall_nstep P \\<sigma> (Suc (Suc n)) \\<Longrightarrow>\n       \\<exists>\\<sigma>1 coll1 coll2.\n          (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n          (\\<sigma>'', coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n) \\<and>\n          combine coll1 coll2 = coll'", "assume \"(\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> (Suc(Suc n))\""], ["proof (state)\nthis:\n  (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> (Suc (Suc n))\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>'' coll'.\n       (\\<sigma>'', coll')\n       \\<in> csmall_nstep P \\<sigma> (Suc (Suc n)) \\<Longrightarrow>\n       \\<exists>\\<sigma>1 coll1 coll2.\n          (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n          (\\<sigma>'', coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n) \\<and>\n          combine coll1 coll2 = coll'", "then"], ["proof (chain)\npicking this:\n  (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> (Suc (Suc n))", "obtain \\<sigma>1 coll1 coll2 where Sucnstep: \"(\\<sigma>1, coll1) \\<in> csmall_nstep P \\<sigma> (Suc n)\"\n                        \"(\\<sigma>', coll2) \\<in> csmall P \\<sigma>1\" \"combine coll1 coll2 = coll'\""], ["proof (prove)\nusing this:\n  (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> (Suc (Suc n))\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>1 coll1 coll2.\n        \\<lbrakk>(\\<sigma>1, coll1) \\<in> csmall_nstep P \\<sigma> (Suc n);\n         (\\<sigma>', coll2) \\<in> csmall P \\<sigma>1;\n         combine coll1 coll2 = coll'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  (\\<sigma>1, coll1) \\<in> csmall_nstep P \\<sigma> (Suc n)\n  (\\<sigma>', coll2) \\<in> csmall P \\<sigma>1\n  combine coll1 coll2 = coll'\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>'' coll'.\n       (\\<sigma>'', coll')\n       \\<in> csmall_nstep P \\<sigma> (Suc (Suc n)) \\<Longrightarrow>\n       \\<exists>\\<sigma>1 coll1 coll2.\n          (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n          (\\<sigma>'', coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n) \\<and>\n          combine coll1 coll2 = coll'", "obtain \\<sigma>12 coll12 coll22 where nstep: \"(\\<sigma>12, coll12) \\<in> csmall P \\<sigma>\n                        \\<and> (\\<sigma>1, coll22) \\<in> csmall_nstep P \\<sigma>12 n \\<and> combine coll12 coll22 = coll1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>12 coll12 coll22.\n        (\\<sigma>12, coll12) \\<in> csmall P \\<sigma> \\<and>\n        (\\<sigma>1, coll22) \\<in> csmall_nstep P \\<sigma>12 n \\<and>\n        combine coll12 coll22 = coll1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using Suc Sucnstep(1)"], ["proof (prove)\nusing this:\n  csmall_nstep P ?\\<sigma> (Suc n) =\n  {a. case a of\n      (\\<sigma>2, coll) \\<Rightarrow>\n        \\<exists>\\<sigma>1 coll1 coll2.\n           (\\<sigma>1, coll1) \\<in> csmall P ?\\<sigma> \\<and>\n           (\\<sigma>2, coll2) \\<in> csmall_nstep P \\<sigma>1 n \\<and>\n           combine coll1 coll2 = coll}\n  (\\<sigma>1, coll1) \\<in> csmall_nstep P \\<sigma> (Suc n)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>12 coll12 coll22.\n        (\\<sigma>12, coll12) \\<in> csmall P \\<sigma> \\<and>\n        (\\<sigma>1, coll22) \\<in> csmall_nstep P \\<sigma>12 n \\<and>\n        combine coll12 coll22 = coll1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  (\\<sigma>12, coll12) \\<in> csmall P \\<sigma> \\<and>\n  (\\<sigma>1, coll22) \\<in> csmall_nstep P \\<sigma>12 n \\<and>\n  combine coll12 coll22 = coll1\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>'' coll'.\n       (\\<sigma>'', coll')\n       \\<in> csmall_nstep P \\<sigma> (Suc (Suc n)) \\<Longrightarrow>\n       \\<exists>\\<sigma>1 coll1 coll2.\n          (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n          (\\<sigma>'', coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n) \\<and>\n          combine coll1 coll2 = coll'", "then"], ["proof (chain)\npicking this:\n  (\\<sigma>12, coll12) \\<in> csmall P \\<sigma> \\<and>\n  (\\<sigma>1, coll22) \\<in> csmall_nstep P \\<sigma>12 n \\<and>\n  combine coll12 coll22 = coll1", "show \"\\<exists>\\<sigma>1 coll1 coll2. (\\<sigma>1, coll1) \\<in> csmall P \\<sigma>\n                      \\<and> (\\<sigma>', coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n) \\<and> combine coll1 coll2 = coll'\""], ["proof (prove)\nusing this:\n  (\\<sigma>12, coll12) \\<in> csmall P \\<sigma> \\<and>\n  (\\<sigma>1, coll22) \\<in> csmall_nstep P \\<sigma>12 n \\<and>\n  combine coll12 coll22 = coll1\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>1 coll1 coll2.\n       (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n       (\\<sigma>', coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n) \\<and>\n       combine coll1 coll2 = coll'", "using combine_assoc[of coll12 coll22 coll2] Sucnstep"], ["proof (prove)\nusing this:\n  (\\<sigma>12, coll12) \\<in> csmall P \\<sigma> \\<and>\n  (\\<sigma>1, coll22) \\<in> csmall_nstep P \\<sigma>12 n \\<and>\n  combine coll12 coll22 = coll1\n  combine (combine coll12 coll22) coll2 =\n  combine coll12 (combine coll22 coll2)\n  (\\<sigma>1, coll1) \\<in> csmall_nstep P \\<sigma> (Suc n)\n  (\\<sigma>', coll2) \\<in> csmall P \\<sigma>1\n  combine coll1 coll2 = coll'\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>1 coll1 coll2.\n       (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n       (\\<sigma>', coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n) \\<and>\n       combine coll1 coll2 = coll'", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>\\<sigma>1 coll1 coll2.\n     (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n     (\\<sigma>', coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n) \\<and>\n     combine coll1 coll2 = coll'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (?\\<sigma>', ?coll')\n  \\<in> csmall_nstep P \\<sigma> (Suc (Suc n)) \\<Longrightarrow>\n  \\<exists>\\<sigma>1 coll1 coll2.\n     (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n     (?\\<sigma>', coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n) \\<and>\n     combine coll1 coll2 = ?coll'\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma>.\n       csmall_nstep P \\<sigma> (Suc 0) =\n       {(\\<sigma>2, coll).\n        \\<exists>\\<sigma>1 coll1 coll2.\n           (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n           (\\<sigma>2, coll2) \\<in> csmall_nstep P \\<sigma>1 0 \\<and>\n           combine coll1 coll2 = coll}\n 2. \\<And>n \\<sigma>.\n       (\\<And>\\<sigma>.\n           csmall_nstep P \\<sigma> (Suc n) =\n           {(\\<sigma>2, coll).\n            \\<exists>\\<sigma>1 coll1 coll2.\n               (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n               (\\<sigma>2, coll2) \\<in> csmall_nstep P \\<sigma>1 n \\<and>\n               combine coll1 coll2 = coll}) \\<Longrightarrow>\n       csmall_nstep P \\<sigma> (Suc (Suc n)) =\n       {(\\<sigma>2, coll).\n        \\<exists>\\<sigma>1 coll1 coll2.\n           (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n           (\\<sigma>2, coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n) \\<and>\n           combine coll1 coll2 = coll}", "have left: \"\\<And>\\<sigma>' coll'. \\<exists>\\<sigma>1 coll1 coll2. (\\<sigma>1, coll1) \\<in> csmall P \\<sigma>\n                      \\<and> (\\<sigma>', coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n) \\<and> combine coll1 coll2 = coll'\n    \\<Longrightarrow> (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> (Suc(Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>'' coll'.\n       \\<exists>\\<sigma>1 coll1 coll2.\n          (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n          (\\<sigma>'', coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n) \\<and>\n          combine coll1 coll2 = coll' \\<Longrightarrow>\n       (\\<sigma>'', coll') \\<in> csmall_nstep P \\<sigma> (Suc (Suc n))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>'' coll'.\n       \\<exists>\\<sigma>1 coll1 coll2.\n          (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n          (\\<sigma>'', coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n) \\<and>\n          combine coll1 coll2 = coll' \\<Longrightarrow>\n       (\\<sigma>'', coll') \\<in> csmall_nstep P \\<sigma> (Suc (Suc n))", "fix \\<sigma>' coll'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>'' coll'.\n       \\<exists>\\<sigma>1 coll1 coll2.\n          (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n          (\\<sigma>'', coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n) \\<and>\n          combine coll1 coll2 = coll' \\<Longrightarrow>\n       (\\<sigma>'', coll') \\<in> csmall_nstep P \\<sigma> (Suc (Suc n))", "assume \"\\<exists>\\<sigma>1 coll1 coll2. (\\<sigma>1, coll1) \\<in> csmall P \\<sigma>\n                      \\<and> (\\<sigma>', coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n) \\<and> combine coll1 coll2 = coll'\""], ["proof (state)\nthis:\n  \\<exists>\\<sigma>1 coll1 coll2.\n     (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n     (\\<sigma>', coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n) \\<and>\n     combine coll1 coll2 = coll'\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>'' coll'.\n       \\<exists>\\<sigma>1 coll1 coll2.\n          (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n          (\\<sigma>'', coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n) \\<and>\n          combine coll1 coll2 = coll' \\<Longrightarrow>\n       (\\<sigma>'', coll') \\<in> csmall_nstep P \\<sigma> (Suc (Suc n))", "then"], ["proof (chain)\npicking this:\n  \\<exists>\\<sigma>1 coll1 coll2.\n     (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n     (\\<sigma>', coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n) \\<and>\n     combine coll1 coll2 = coll'", "obtain \\<sigma>1 coll1 coll2 where Sucnstep: \"(\\<sigma>1, coll1) \\<in> csmall P \\<sigma>\"\n                      \"(\\<sigma>', coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n)\" \"combine coll1 coll2 = coll'\""], ["proof (prove)\nusing this:\n  \\<exists>\\<sigma>1 coll1 coll2.\n     (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n     (\\<sigma>', coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n) \\<and>\n     combine coll1 coll2 = coll'\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>1 coll1 coll2.\n        \\<lbrakk>(\\<sigma>1, coll1) \\<in> csmall P \\<sigma>;\n         (\\<sigma>', coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n);\n         combine coll1 coll2 = coll'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  (\\<sigma>1, coll1) \\<in> csmall P \\<sigma>\n  (\\<sigma>', coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n)\n  combine coll1 coll2 = coll'\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>'' coll'.\n       \\<exists>\\<sigma>1 coll1 coll2.\n          (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n          (\\<sigma>'', coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n) \\<and>\n          combine coll1 coll2 = coll' \\<Longrightarrow>\n       (\\<sigma>'', coll') \\<in> csmall_nstep P \\<sigma> (Suc (Suc n))", "obtain \\<sigma>12 coll12 coll22 where nstep: \"(\\<sigma>12, coll12) \\<in> csmall_nstep P \\<sigma>1 n\n                        \\<and> (\\<sigma>', coll22) \\<in> csmall P \\<sigma>12 \\<and> combine coll12 coll22 = coll2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>12 coll12 coll22.\n        (\\<sigma>12, coll12) \\<in> csmall_nstep P \\<sigma>1 n \\<and>\n        (\\<sigma>', coll22) \\<in> csmall P \\<sigma>12 \\<and>\n        combine coll12 coll22 = coll2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using Sucnstep(2)"], ["proof (prove)\nusing this:\n  (\\<sigma>', coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>12 coll12 coll22.\n        (\\<sigma>12, coll12) \\<in> csmall_nstep P \\<sigma>1 n \\<and>\n        (\\<sigma>', coll22) \\<in> csmall P \\<sigma>12 \\<and>\n        combine coll12 coll22 = coll2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (\\<sigma>12, coll12) \\<in> csmall_nstep P \\<sigma>1 n \\<and>\n  (\\<sigma>', coll22) \\<in> csmall P \\<sigma>12 \\<and>\n  combine coll12 coll22 = coll2\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>'' coll'.\n       \\<exists>\\<sigma>1 coll1 coll2.\n          (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n          (\\<sigma>'', coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n) \\<and>\n          combine coll1 coll2 = coll' \\<Longrightarrow>\n       (\\<sigma>'', coll') \\<in> csmall_nstep P \\<sigma> (Suc (Suc n))", "then"], ["proof (chain)\npicking this:\n  (\\<sigma>12, coll12) \\<in> csmall_nstep P \\<sigma>1 n \\<and>\n  (\\<sigma>', coll22) \\<in> csmall P \\<sigma>12 \\<and>\n  combine coll12 coll22 = coll2", "show \"(\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> (Suc(Suc n))\""], ["proof (prove)\nusing this:\n  (\\<sigma>12, coll12) \\<in> csmall_nstep P \\<sigma>1 n \\<and>\n  (\\<sigma>', coll22) \\<in> csmall P \\<sigma>12 \\<and>\n  combine coll12 coll22 = coll2\n\ngoal (1 subgoal):\n 1. (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> (Suc (Suc n))", "using combine_assoc[of coll1 coll12 coll22] Suc Sucnstep"], ["proof (prove)\nusing this:\n  (\\<sigma>12, coll12) \\<in> csmall_nstep P \\<sigma>1 n \\<and>\n  (\\<sigma>', coll22) \\<in> csmall P \\<sigma>12 \\<and>\n  combine coll12 coll22 = coll2\n  combine (combine coll1 coll12) coll22 =\n  combine coll1 (combine coll12 coll22)\n  csmall_nstep P ?\\<sigma> (Suc n) =\n  {a. case a of\n      (\\<sigma>2, coll) \\<Rightarrow>\n        \\<exists>\\<sigma>1 coll1 coll2.\n           (\\<sigma>1, coll1) \\<in> csmall P ?\\<sigma> \\<and>\n           (\\<sigma>2, coll2) \\<in> csmall_nstep P \\<sigma>1 n \\<and>\n           combine coll1 coll2 = coll}\n  (\\<sigma>1, coll1) \\<in> csmall P \\<sigma>\n  (\\<sigma>', coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n)\n  combine coll1 coll2 = coll'\n\ngoal (1 subgoal):\n 1. (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> (Suc (Suc n))", "by fastforce"], ["proof (state)\nthis:\n  (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> (Suc (Suc n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>\\<sigma>1 coll1 coll2.\n     (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n     (?\\<sigma>', coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n) \\<and>\n     combine coll1 coll2 = ?coll' \\<Longrightarrow>\n  (?\\<sigma>', ?coll') \\<in> csmall_nstep P \\<sigma> (Suc (Suc n))\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma>.\n       csmall_nstep P \\<sigma> (Suc 0) =\n       {(\\<sigma>2, coll).\n        \\<exists>\\<sigma>1 coll1 coll2.\n           (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n           (\\<sigma>2, coll2) \\<in> csmall_nstep P \\<sigma>1 0 \\<and>\n           combine coll1 coll2 = coll}\n 2. \\<And>n \\<sigma>.\n       (\\<And>\\<sigma>.\n           csmall_nstep P \\<sigma> (Suc n) =\n           {(\\<sigma>2, coll).\n            \\<exists>\\<sigma>1 coll1 coll2.\n               (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n               (\\<sigma>2, coll2) \\<in> csmall_nstep P \\<sigma>1 n \\<and>\n               combine coll1 coll2 = coll}) \\<Longrightarrow>\n       csmall_nstep P \\<sigma> (Suc (Suc n)) =\n       {(\\<sigma>2, coll).\n        \\<exists>\\<sigma>1 coll1 coll2.\n           (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n           (\\<sigma>2, coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n) \\<and>\n           combine coll1 coll2 = coll}", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. csmall_nstep P \\<sigma> (Suc (Suc n)) =\n    {a. case a of\n        (\\<sigma>2, coll) \\<Rightarrow>\n          \\<exists>\\<sigma>1 coll1 coll2.\n             (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n             (\\<sigma>2, coll2)\n             \\<in> csmall_nstep P \\<sigma>1 (Suc n) \\<and>\n             combine coll1 coll2 = coll}", "using right left"], ["proof (prove)\nusing this:\n  (?\\<sigma>', ?coll')\n  \\<in> csmall_nstep P \\<sigma> (Suc (Suc n)) \\<Longrightarrow>\n  \\<exists>\\<sigma>1 coll1 coll2.\n     (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n     (?\\<sigma>', coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n) \\<and>\n     combine coll1 coll2 = ?coll'\n  \\<exists>\\<sigma>1 coll1 coll2.\n     (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n     (?\\<sigma>', coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n) \\<and>\n     combine coll1 coll2 = ?coll' \\<Longrightarrow>\n  (?\\<sigma>', ?coll') \\<in> csmall_nstep P \\<sigma> (Suc (Suc n))\n\ngoal (1 subgoal):\n 1. csmall_nstep P \\<sigma> (Suc (Suc n)) =\n    {a. case a of\n        (\\<sigma>2, coll) \\<Rightarrow>\n          \\<exists>\\<sigma>1 coll1 coll2.\n             (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n             (\\<sigma>2, coll2)\n             \\<in> csmall_nstep P \\<sigma>1 (Suc n) \\<and>\n             combine coll1 coll2 = coll}", "by fast"], ["proof (state)\nthis:\n  csmall_nstep P \\<sigma> (Suc (Suc n)) =\n  {a. case a of\n      (\\<sigma>2, coll) \\<Rightarrow>\n        \\<exists>\\<sigma>1 coll1 coll2.\n           (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n           (\\<sigma>2, coll2) \\<in> csmall_nstep P \\<sigma>1 (Suc n) \\<and>\n           combine coll1 coll2 = coll}\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>.\n       csmall_nstep P \\<sigma> (Suc 0) =\n       {(\\<sigma>2, coll).\n        \\<exists>\\<sigma>1 coll1 coll2.\n           (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n           (\\<sigma>2, coll2) \\<in> csmall_nstep P \\<sigma>1 0 \\<and>\n           combine coll1 coll2 = coll}", "qed(simp)"], ["", "lemma csmall_nstep_SucD:\nassumes \"(\\<sigma>',coll') \\<in> csmall_nstep P \\<sigma> (Suc n)\"\nshows \"\\<exists>\\<sigma>1 coll1. (\\<sigma>1, coll1) \\<in> csmall P \\<sigma>\n   \\<and> (\\<exists>coll. coll' = combine coll1 coll \\<and> (\\<sigma>',coll) \\<in> csmall_nstep P \\<sigma>1 n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>1 coll1.\n       (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n       (\\<exists>coll.\n           coll' = combine coll1 coll \\<and>\n           (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma>1 n)", "using csmall_nstep_Rec2 CollectionSemantics_axioms case_prodD assms"], ["proof (prove)\nusing this:\n  csmall_nstep ?P ?\\<sigma> (Suc ?n) =\n  {(\\<sigma>2, coll).\n   \\<exists>\\<sigma>1 coll1 coll2.\n      (\\<sigma>1, coll1) \\<in> csmall ?P ?\\<sigma> \\<and>\n      (\\<sigma>2, coll2) \\<in> csmall_nstep ?P \\<sigma>1 ?n \\<and>\n      combine coll1 coll2 = coll}\n  CollectionSemantics small endset combine collect_id\n  case (?a, ?b) of (c, d) \\<Rightarrow> ?f c d \\<Longrightarrow> ?f ?a ?b\n  (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> (Suc n)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>1 coll1.\n       (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n       (\\<exists>coll.\n           coll' = combine coll1 coll \\<and>\n           (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma>1 n)", "by fastforce"], ["", "lemma csmall_nstep_Suc_nend: \"o' \\<in> csmall_nstep P \\<sigma> (Suc n1) \\<Longrightarrow> \\<sigma> \\<notin> endset\""], ["proof (prove)\ngoal (1 subgoal):\n 1. o' \\<in> csmall_nstep P \\<sigma> (Suc n1) \\<Longrightarrow>\n    \\<sigma> \\<notin> endset", "using endset_final csmall_nstep_SucD CollectionSemantics.csmall_def CollectionSemantics_axioms"], ["proof (prove)\nusing this:\n  ?\\<sigma> \\<in> endset \\<Longrightarrow>\n  \\<forall>P. small P ?\\<sigma> = {}\n  (?\\<sigma>', ?coll')\n  \\<in> csmall_nstep ?P ?\\<sigma> (Suc ?n) \\<Longrightarrow>\n  \\<exists>\\<sigma>1 coll1.\n     (\\<sigma>1, coll1) \\<in> csmall ?P ?\\<sigma> \\<and>\n     (\\<exists>coll.\n         ?coll' = combine coll1 coll \\<and>\n         (?\\<sigma>', coll) \\<in> csmall_nstep ?P \\<sigma>1 ?n)\n  CollectionSemantics ?small ?endset ?combine ?collect_id \\<Longrightarrow>\n  CollectionSemantics.csmall ?small ?collect ?P ?\\<sigma> \\<equiv>\n  {(\\<sigma>', coll).\n   \\<sigma>' \\<in> ?small ?P ?\\<sigma> \\<and>\n   ?collect ?P ?\\<sigma> \\<sigma>' = coll}\n  CollectionSemantics small endset combine collect_id\n\ngoal (1 subgoal):\n 1. o' \\<in> csmall_nstep P \\<sigma> (Suc n1) \\<Longrightarrow>\n    \\<sigma> \\<notin> endset", "by fastforce"], ["", "lemma small_to_csmall_nstep_pres:\nassumes Qpres: \"\\<And>P \\<sigma> \\<sigma>'. Q P \\<sigma> \\<Longrightarrow> \\<sigma>' \\<in> small P \\<sigma> \\<Longrightarrow> Q P \\<sigma>'\"\nshows \"Q P \\<sigma> \\<Longrightarrow> (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n \\<Longrightarrow> Q P \\<sigma>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Q P \\<sigma>;\n     (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n\\<rbrakk>\n    \\<Longrightarrow> Q P \\<sigma>'", "proof(induct n arbitrary: \\<sigma> \\<sigma>' coll)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> \\<sigma>' coll.\n       \\<lbrakk>Q P \\<sigma>;\n        (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> 0\\<rbrakk>\n       \\<Longrightarrow> Q P \\<sigma>'\n 2. \\<And>n \\<sigma> \\<sigma>' coll.\n       \\<lbrakk>\\<And>\\<sigma> \\<sigma>' coll.\n                   \\<lbrakk>Q P \\<sigma>;\n                    (\\<sigma>', coll)\n                    \\<in> csmall_nstep P \\<sigma> n\\<rbrakk>\n                   \\<Longrightarrow> Q P \\<sigma>';\n        Q P \\<sigma>;\n        (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> (Suc n)\\<rbrakk>\n       \\<Longrightarrow> Q P \\<sigma>'", "case (Suc n)"], ["proof (state)\nthis:\n  \\<lbrakk>Q P ?\\<sigma>;\n   (?\\<sigma>', ?coll) \\<in> csmall_nstep P ?\\<sigma> n\\<rbrakk>\n  \\<Longrightarrow> Q P ?\\<sigma>'\n  Q P \\<sigma>\n  (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> (Suc n)\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> \\<sigma>' coll.\n       \\<lbrakk>Q P \\<sigma>;\n        (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> 0\\<rbrakk>\n       \\<Longrightarrow> Q P \\<sigma>'\n 2. \\<And>n \\<sigma> \\<sigma>' coll.\n       \\<lbrakk>\\<And>\\<sigma> \\<sigma>' coll.\n                   \\<lbrakk>Q P \\<sigma>;\n                    (\\<sigma>', coll)\n                    \\<in> csmall_nstep P \\<sigma> n\\<rbrakk>\n                   \\<Longrightarrow> Q P \\<sigma>';\n        Q P \\<sigma>;\n        (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> (Suc n)\\<rbrakk>\n       \\<Longrightarrow> Q P \\<sigma>'", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>Q P ?\\<sigma>;\n   (?\\<sigma>', ?coll) \\<in> csmall_nstep P ?\\<sigma> n\\<rbrakk>\n  \\<Longrightarrow> Q P ?\\<sigma>'\n  Q P \\<sigma>\n  (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> (Suc n)", "obtain \\<sigma>1 coll1 coll2 where nstep: \"(\\<sigma>1, coll1) \\<in> csmall_nstep P \\<sigma> n\n                      \\<and> (\\<sigma>', coll2) \\<in> csmall P \\<sigma>1 \\<and> combine coll1 coll2 = coll\""], ["proof (prove)\nusing this:\n  \\<lbrakk>Q P ?\\<sigma>;\n   (?\\<sigma>', ?coll) \\<in> csmall_nstep P ?\\<sigma> n\\<rbrakk>\n  \\<Longrightarrow> Q P ?\\<sigma>'\n  Q P \\<sigma>\n  (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> (Suc n)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>1 coll1 coll2.\n        (\\<sigma>1, coll1) \\<in> csmall_nstep P \\<sigma> n \\<and>\n        (\\<sigma>', coll2) \\<in> csmall P \\<sigma>1 \\<and>\n        combine coll1 coll2 = coll \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  (\\<sigma>1, coll1) \\<in> csmall_nstep P \\<sigma> n \\<and>\n  (\\<sigma>', coll2) \\<in> csmall P \\<sigma>1 \\<and>\n  combine coll1 coll2 = coll\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> \\<sigma>' coll.\n       \\<lbrakk>Q P \\<sigma>;\n        (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> 0\\<rbrakk>\n       \\<Longrightarrow> Q P \\<sigma>'\n 2. \\<And>n \\<sigma> \\<sigma>' coll.\n       \\<lbrakk>\\<And>\\<sigma> \\<sigma>' coll.\n                   \\<lbrakk>Q P \\<sigma>;\n                    (\\<sigma>', coll)\n                    \\<in> csmall_nstep P \\<sigma> n\\<rbrakk>\n                   \\<Longrightarrow> Q P \\<sigma>';\n        Q P \\<sigma>;\n        (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> (Suc n)\\<rbrakk>\n       \\<Longrightarrow> Q P \\<sigma>'", "then"], ["proof (chain)\npicking this:\n  (\\<sigma>1, coll1) \\<in> csmall_nstep P \\<sigma> n \\<and>\n  (\\<sigma>', coll2) \\<in> csmall P \\<sigma>1 \\<and>\n  combine coll1 coll2 = coll", "show ?case"], ["proof (prove)\nusing this:\n  (\\<sigma>1, coll1) \\<in> csmall_nstep P \\<sigma> n \\<and>\n  (\\<sigma>', coll2) \\<in> csmall P \\<sigma>1 \\<and>\n  combine coll1 coll2 = coll\n\ngoal (1 subgoal):\n 1. Q P \\<sigma>'", "using Suc Qpres[where P=P and \\<sigma>=\\<sigma>1 and \\<sigma>'=\\<sigma>']"], ["proof (prove)\nusing this:\n  (\\<sigma>1, coll1) \\<in> csmall_nstep P \\<sigma> n \\<and>\n  (\\<sigma>', coll2) \\<in> csmall P \\<sigma>1 \\<and>\n  combine coll1 coll2 = coll\n  \\<lbrakk>Q P ?\\<sigma>;\n   (?\\<sigma>', ?coll) \\<in> csmall_nstep P ?\\<sigma> n\\<rbrakk>\n  \\<Longrightarrow> Q P ?\\<sigma>'\n  Q P \\<sigma>\n  (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> (Suc n)\n  \\<lbrakk>Q P \\<sigma>1; \\<sigma>' \\<in> small P \\<sigma>1\\<rbrakk>\n  \\<Longrightarrow> Q P \\<sigma>'\n\ngoal (1 subgoal):\n 1. Q P \\<sigma>'", "by(auto simp: csmall_def)"], ["proof (state)\nthis:\n  Q P \\<sigma>'\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<sigma>' coll.\n       \\<lbrakk>Q P \\<sigma>;\n        (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> 0\\<rbrakk>\n       \\<Longrightarrow> Q P \\<sigma>'", "qed(simp)"], ["", "lemma csmall_to_csmall_nstep_prop:\nassumes cond: \"\\<And>P \\<sigma> \\<sigma>' coll. (\\<sigma>', coll) \\<in> csmall P \\<sigma> \\<Longrightarrow> R P coll \\<Longrightarrow> Q P \\<sigma> \\<Longrightarrow> R' P \\<sigma> \\<sigma>' coll\"\n  and Rcomb: \"\\<And>P coll1 coll2. R P (combine coll1 coll2) = (R P coll1 \\<and> R P coll2)\"\n  and Qpres: \"\\<And>P \\<sigma> \\<sigma>'. Q P \\<sigma> \\<Longrightarrow> \\<sigma>' \\<in> small P \\<sigma> \\<Longrightarrow> Q P \\<sigma>'\"\n  and Rtrans': \"\\<And>P \\<sigma> \\<sigma>1 \\<sigma>' coll1 coll2.\n                        R' P \\<sigma> \\<sigma>1 coll1 \\<and> R' P \\<sigma>1 \\<sigma>' coll2 \\<Longrightarrow> R' P \\<sigma> \\<sigma>' (combine coll1 coll2)\"\n  and base: \"\\<And>\\<sigma>. R' P \\<sigma> \\<sigma> collect_id\"\nshows \"(\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n \\<Longrightarrow> R P coll \\<Longrightarrow> Q P \\<sigma> \\<Longrightarrow> R' P \\<sigma> \\<sigma>' coll\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n; R P coll;\n     Q P \\<sigma>\\<rbrakk>\n    \\<Longrightarrow> R' P \\<sigma> \\<sigma>' coll", "proof(induct n arbitrary: \\<sigma> \\<sigma>' coll)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> \\<sigma>' coll.\n       \\<lbrakk>(\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> 0; R P coll;\n        Q P \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> R' P \\<sigma> \\<sigma>' coll\n 2. \\<And>n \\<sigma> \\<sigma>' coll.\n       \\<lbrakk>\\<And>\\<sigma> \\<sigma>' coll.\n                   \\<lbrakk>(\\<sigma>', coll)\n                            \\<in> csmall_nstep P \\<sigma> n;\n                    R P coll; Q P \\<sigma>\\<rbrakk>\n                   \\<Longrightarrow> R' P \\<sigma> \\<sigma>' coll;\n        (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> (Suc n); R P coll;\n        Q P \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> R' P \\<sigma> \\<sigma>' coll", "case (Suc n)"], ["proof (state)\nthis:\n  \\<lbrakk>(?\\<sigma>', ?coll) \\<in> csmall_nstep P ?\\<sigma> n; R P ?coll;\n   Q P ?\\<sigma>\\<rbrakk>\n  \\<Longrightarrow> R' P ?\\<sigma> ?\\<sigma>' ?coll\n  (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> (Suc n)\n  R P coll\n  Q P \\<sigma>\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> \\<sigma>' coll.\n       \\<lbrakk>(\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> 0; R P coll;\n        Q P \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> R' P \\<sigma> \\<sigma>' coll\n 2. \\<And>n \\<sigma> \\<sigma>' coll.\n       \\<lbrakk>\\<And>\\<sigma> \\<sigma>' coll.\n                   \\<lbrakk>(\\<sigma>', coll)\n                            \\<in> csmall_nstep P \\<sigma> n;\n                    R P coll; Q P \\<sigma>\\<rbrakk>\n                   \\<Longrightarrow> R' P \\<sigma> \\<sigma>' coll;\n        (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> (Suc n); R P coll;\n        Q P \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> R' P \\<sigma> \\<sigma>' coll", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>(?\\<sigma>', ?coll) \\<in> csmall_nstep P ?\\<sigma> n; R P ?coll;\n   Q P ?\\<sigma>\\<rbrakk>\n  \\<Longrightarrow> R' P ?\\<sigma> ?\\<sigma>' ?coll\n  (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> (Suc n)\n  R P coll\n  Q P \\<sigma>", "obtain \\<sigma>1 coll1 coll2 where nstep: \"(\\<sigma>1, coll1) \\<in> csmall_nstep P \\<sigma> n\n                      \\<and> (\\<sigma>', coll2) \\<in> csmall P \\<sigma>1 \\<and> combine coll1 coll2 = coll\""], ["proof (prove)\nusing this:\n  \\<lbrakk>(?\\<sigma>', ?coll) \\<in> csmall_nstep P ?\\<sigma> n; R P ?coll;\n   Q P ?\\<sigma>\\<rbrakk>\n  \\<Longrightarrow> R' P ?\\<sigma> ?\\<sigma>' ?coll\n  (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> (Suc n)\n  R P coll\n  Q P \\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>1 coll1 coll2.\n        (\\<sigma>1, coll1) \\<in> csmall_nstep P \\<sigma> n \\<and>\n        (\\<sigma>', coll2) \\<in> csmall P \\<sigma>1 \\<and>\n        combine coll1 coll2 = coll \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  (\\<sigma>1, coll1) \\<in> csmall_nstep P \\<sigma> n \\<and>\n  (\\<sigma>', coll2) \\<in> csmall P \\<sigma>1 \\<and>\n  combine coll1 coll2 = coll\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> \\<sigma>' coll.\n       \\<lbrakk>(\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> 0; R P coll;\n        Q P \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> R' P \\<sigma> \\<sigma>' coll\n 2. \\<And>n \\<sigma> \\<sigma>' coll.\n       \\<lbrakk>\\<And>\\<sigma> \\<sigma>' coll.\n                   \\<lbrakk>(\\<sigma>', coll)\n                            \\<in> csmall_nstep P \\<sigma> n;\n                    R P coll; Q P \\<sigma>\\<rbrakk>\n                   \\<Longrightarrow> R' P \\<sigma> \\<sigma>' coll;\n        (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> (Suc n); R P coll;\n        Q P \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> R' P \\<sigma> \\<sigma>' coll", "then"], ["proof (chain)\npicking this:\n  (\\<sigma>1, coll1) \\<in> csmall_nstep P \\<sigma> n \\<and>\n  (\\<sigma>', coll2) \\<in> csmall P \\<sigma>1 \\<and>\n  combine coll1 coll2 = coll", "have \"Q P \\<sigma>1\""], ["proof (prove)\nusing this:\n  (\\<sigma>1, coll1) \\<in> csmall_nstep P \\<sigma> n \\<and>\n  (\\<sigma>', coll2) \\<in> csmall P \\<sigma>1 \\<and>\n  combine coll1 coll2 = coll\n\ngoal (1 subgoal):\n 1. Q P \\<sigma>1", "using small_to_csmall_nstep_pres[where Q=Q] Qpres Suc"], ["proof (prove)\nusing this:\n  (\\<sigma>1, coll1) \\<in> csmall_nstep P \\<sigma> n \\<and>\n  (\\<sigma>', coll2) \\<in> csmall P \\<sigma>1 \\<and>\n  combine coll1 coll2 = coll\n  \\<lbrakk>\\<And>P \\<sigma> \\<sigma>'.\n              \\<lbrakk>Q P \\<sigma>;\n               \\<sigma>' \\<in> small P \\<sigma>\\<rbrakk>\n              \\<Longrightarrow> Q P \\<sigma>';\n   Q ?P ?\\<sigma>;\n   (?\\<sigma>', ?coll) \\<in> csmall_nstep ?P ?\\<sigma> ?n\\<rbrakk>\n  \\<Longrightarrow> Q ?P ?\\<sigma>'\n  \\<lbrakk>Q ?P ?\\<sigma>; ?\\<sigma>' \\<in> small ?P ?\\<sigma>\\<rbrakk>\n  \\<Longrightarrow> Q ?P ?\\<sigma>'\n  \\<lbrakk>(?\\<sigma>', ?coll) \\<in> csmall_nstep P ?\\<sigma> n; R P ?coll;\n   Q P ?\\<sigma>\\<rbrakk>\n  \\<Longrightarrow> R' P ?\\<sigma> ?\\<sigma>' ?coll\n  (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> (Suc n)\n  R P coll\n  Q P \\<sigma>\n\ngoal (1 subgoal):\n 1. Q P \\<sigma>1", "by blast"], ["proof (state)\nthis:\n  Q P \\<sigma>1\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> \\<sigma>' coll.\n       \\<lbrakk>(\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> 0; R P coll;\n        Q P \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> R' P \\<sigma> \\<sigma>' coll\n 2. \\<And>n \\<sigma> \\<sigma>' coll.\n       \\<lbrakk>\\<And>\\<sigma> \\<sigma>' coll.\n                   \\<lbrakk>(\\<sigma>', coll)\n                            \\<in> csmall_nstep P \\<sigma> n;\n                    R P coll; Q P \\<sigma>\\<rbrakk>\n                   \\<Longrightarrow> R' P \\<sigma> \\<sigma>' coll;\n        (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> (Suc n); R P coll;\n        Q P \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> R' P \\<sigma> \\<sigma>' coll", "then"], ["proof (chain)\npicking this:\n  Q P \\<sigma>1", "show ?case"], ["proof (prove)\nusing this:\n  Q P \\<sigma>1\n\ngoal (1 subgoal):\n 1. R' P \\<sigma> \\<sigma>' coll", "using nstep assms Suc"], ["proof (prove)\nusing this:\n  Q P \\<sigma>1\n  (\\<sigma>1, coll1) \\<in> csmall_nstep P \\<sigma> n \\<and>\n  (\\<sigma>', coll2) \\<in> csmall P \\<sigma>1 \\<and>\n  combine coll1 coll2 = coll\n  \\<lbrakk>(?\\<sigma>', ?coll) \\<in> csmall ?P ?\\<sigma>; R ?P ?coll;\n   Q ?P ?\\<sigma>\\<rbrakk>\n  \\<Longrightarrow> R' ?P ?\\<sigma> ?\\<sigma>' ?coll\n  R ?P (combine ?coll1.0 ?coll2.0) = (R ?P ?coll1.0 \\<and> R ?P ?coll2.0)\n  \\<lbrakk>Q ?P ?\\<sigma>; ?\\<sigma>' \\<in> small ?P ?\\<sigma>\\<rbrakk>\n  \\<Longrightarrow> Q ?P ?\\<sigma>'\n  R' ?P ?\\<sigma> ?\\<sigma>1.0 ?coll1.0 \\<and>\n  R' ?P ?\\<sigma>1.0 ?\\<sigma>' ?coll2.0 \\<Longrightarrow>\n  R' ?P ?\\<sigma> ?\\<sigma>' (combine ?coll1.0 ?coll2.0)\n  R' P ?\\<sigma> ?\\<sigma> collect_id\n  \\<lbrakk>(?\\<sigma>', ?coll) \\<in> csmall_nstep P ?\\<sigma> n; R P ?coll;\n   Q P ?\\<sigma>\\<rbrakk>\n  \\<Longrightarrow> R' P ?\\<sigma> ?\\<sigma>' ?coll\n  (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> (Suc n)\n  R P coll\n  Q P \\<sigma>\n\ngoal (1 subgoal):\n 1. R' P \\<sigma> \\<sigma>' coll", "by auto blast"], ["proof (state)\nthis:\n  R' P \\<sigma> \\<sigma>' coll\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<sigma>' coll.\n       \\<lbrakk>(\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> 0; R P coll;\n        Q P \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> R' P \\<sigma> \\<sigma>' coll", "qed(simp add: base)"], ["", "lemma csmall_to_csmall_nstep_prop2:\nassumes cond: \"\\<And>P P' \\<sigma> \\<sigma>' coll. (\\<sigma>', coll) \\<in> csmall P \\<sigma>\n             \\<Longrightarrow> R P P' coll \\<Longrightarrow> Q \\<sigma> \\<Longrightarrow> (\\<sigma>', coll) \\<in> csmall P' \\<sigma>\"\n  and Rcomb: \"\\<And>P P' coll1 coll2. R P P' (combine coll1 coll2) = (R P P' coll1 \\<and> R P P' coll2)\"\n  and Qpres: \"\\<And>P \\<sigma> \\<sigma>'. Q \\<sigma> \\<Longrightarrow> \\<sigma>' \\<in> small P \\<sigma> \\<Longrightarrow> Q \\<sigma>'\"\nshows \"(\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n \\<Longrightarrow> R P P' coll \\<Longrightarrow> Q \\<sigma> \\<Longrightarrow> (\\<sigma>', coll) \\<in> csmall_nstep P' \\<sigma> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n; R P P' coll;\n     Q \\<sigma>\\<rbrakk>\n    \\<Longrightarrow> (\\<sigma>', coll) \\<in> csmall_nstep P' \\<sigma> n", "proof(induct n arbitrary: \\<sigma> \\<sigma>' coll)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> \\<sigma>' coll.\n       \\<lbrakk>(\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> 0;\n        R P P' coll; Q \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> (\\<sigma>', coll) \\<in> csmall_nstep P' \\<sigma> 0\n 2. \\<And>n \\<sigma> \\<sigma>' coll.\n       \\<lbrakk>\\<And>\\<sigma> \\<sigma>' coll.\n                   \\<lbrakk>(\\<sigma>', coll)\n                            \\<in> csmall_nstep P \\<sigma> n;\n                    R P P' coll; Q \\<sigma>\\<rbrakk>\n                   \\<Longrightarrow> (\\<sigma>', coll)\n                                     \\<in> csmall_nstep P' \\<sigma> n;\n        (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> (Suc n);\n        R P P' coll; Q \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> (\\<sigma>', coll)\n                         \\<in> csmall_nstep P' \\<sigma> (Suc n)", "case (Suc n)"], ["proof (state)\nthis:\n  \\<lbrakk>(?\\<sigma>', ?coll) \\<in> csmall_nstep P ?\\<sigma> n;\n   R P P' ?coll; Q ?\\<sigma>\\<rbrakk>\n  \\<Longrightarrow> (?\\<sigma>', ?coll) \\<in> csmall_nstep P' ?\\<sigma> n\n  (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> (Suc n)\n  R P P' coll\n  Q \\<sigma>\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> \\<sigma>' coll.\n       \\<lbrakk>(\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> 0;\n        R P P' coll; Q \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> (\\<sigma>', coll) \\<in> csmall_nstep P' \\<sigma> 0\n 2. \\<And>n \\<sigma> \\<sigma>' coll.\n       \\<lbrakk>\\<And>\\<sigma> \\<sigma>' coll.\n                   \\<lbrakk>(\\<sigma>', coll)\n                            \\<in> csmall_nstep P \\<sigma> n;\n                    R P P' coll; Q \\<sigma>\\<rbrakk>\n                   \\<Longrightarrow> (\\<sigma>', coll)\n                                     \\<in> csmall_nstep P' \\<sigma> n;\n        (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> (Suc n);\n        R P P' coll; Q \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> (\\<sigma>', coll)\n                         \\<in> csmall_nstep P' \\<sigma> (Suc n)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>(?\\<sigma>', ?coll) \\<in> csmall_nstep P ?\\<sigma> n;\n   R P P' ?coll; Q ?\\<sigma>\\<rbrakk>\n  \\<Longrightarrow> (?\\<sigma>', ?coll) \\<in> csmall_nstep P' ?\\<sigma> n\n  (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> (Suc n)\n  R P P' coll\n  Q \\<sigma>", "obtain \\<sigma>1 coll1 coll2 where nstep: \"(\\<sigma>1, coll1) \\<in> csmall_nstep P \\<sigma> n\n                      \\<and> (\\<sigma>', coll2) \\<in> csmall P \\<sigma>1 \\<and> combine coll1 coll2 = coll\""], ["proof (prove)\nusing this:\n  \\<lbrakk>(?\\<sigma>', ?coll) \\<in> csmall_nstep P ?\\<sigma> n;\n   R P P' ?coll; Q ?\\<sigma>\\<rbrakk>\n  \\<Longrightarrow> (?\\<sigma>', ?coll) \\<in> csmall_nstep P' ?\\<sigma> n\n  (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> (Suc n)\n  R P P' coll\n  Q \\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>1 coll1 coll2.\n        (\\<sigma>1, coll1) \\<in> csmall_nstep P \\<sigma> n \\<and>\n        (\\<sigma>', coll2) \\<in> csmall P \\<sigma>1 \\<and>\n        combine coll1 coll2 = coll \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  (\\<sigma>1, coll1) \\<in> csmall_nstep P \\<sigma> n \\<and>\n  (\\<sigma>', coll2) \\<in> csmall P \\<sigma>1 \\<and>\n  combine coll1 coll2 = coll\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> \\<sigma>' coll.\n       \\<lbrakk>(\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> 0;\n        R P P' coll; Q \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> (\\<sigma>', coll) \\<in> csmall_nstep P' \\<sigma> 0\n 2. \\<And>n \\<sigma> \\<sigma>' coll.\n       \\<lbrakk>\\<And>\\<sigma> \\<sigma>' coll.\n                   \\<lbrakk>(\\<sigma>', coll)\n                            \\<in> csmall_nstep P \\<sigma> n;\n                    R P P' coll; Q \\<sigma>\\<rbrakk>\n                   \\<Longrightarrow> (\\<sigma>', coll)\n                                     \\<in> csmall_nstep P' \\<sigma> n;\n        (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> (Suc n);\n        R P P' coll; Q \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> (\\<sigma>', coll)\n                         \\<in> csmall_nstep P' \\<sigma> (Suc n)", "then"], ["proof (chain)\npicking this:\n  (\\<sigma>1, coll1) \\<in> csmall_nstep P \\<sigma> n \\<and>\n  (\\<sigma>', coll2) \\<in> csmall P \\<sigma>1 \\<and>\n  combine coll1 coll2 = coll", "have \"Q \\<sigma>1\""], ["proof (prove)\nusing this:\n  (\\<sigma>1, coll1) \\<in> csmall_nstep P \\<sigma> n \\<and>\n  (\\<sigma>', coll2) \\<in> csmall P \\<sigma>1 \\<and>\n  combine coll1 coll2 = coll\n\ngoal (1 subgoal):\n 1. Q \\<sigma>1", "using small_to_csmall_nstep_pres[where Q=\"\\<lambda>P. Q\"] Qpres Suc"], ["proof (prove)\nusing this:\n  (\\<sigma>1, coll1) \\<in> csmall_nstep P \\<sigma> n \\<and>\n  (\\<sigma>', coll2) \\<in> csmall P \\<sigma>1 \\<and>\n  combine coll1 coll2 = coll\n  \\<lbrakk>\\<And>P \\<sigma> \\<sigma>'.\n              \\<lbrakk>Q \\<sigma>; \\<sigma>' \\<in> small P \\<sigma>\\<rbrakk>\n              \\<Longrightarrow> Q \\<sigma>';\n   Q ?\\<sigma>;\n   (?\\<sigma>', ?coll) \\<in> csmall_nstep ?P ?\\<sigma> ?n\\<rbrakk>\n  \\<Longrightarrow> Q ?\\<sigma>'\n  \\<lbrakk>Q ?\\<sigma>; ?\\<sigma>' \\<in> small ?P ?\\<sigma>\\<rbrakk>\n  \\<Longrightarrow> Q ?\\<sigma>'\n  \\<lbrakk>(?\\<sigma>', ?coll) \\<in> csmall_nstep P ?\\<sigma> n;\n   R P P' ?coll; Q ?\\<sigma>\\<rbrakk>\n  \\<Longrightarrow> (?\\<sigma>', ?coll) \\<in> csmall_nstep P' ?\\<sigma> n\n  (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> (Suc n)\n  R P P' coll\n  Q \\<sigma>\n\ngoal (1 subgoal):\n 1. Q \\<sigma>1", "by blast"], ["proof (state)\nthis:\n  Q \\<sigma>1\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> \\<sigma>' coll.\n       \\<lbrakk>(\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> 0;\n        R P P' coll; Q \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> (\\<sigma>', coll) \\<in> csmall_nstep P' \\<sigma> 0\n 2. \\<And>n \\<sigma> \\<sigma>' coll.\n       \\<lbrakk>\\<And>\\<sigma> \\<sigma>' coll.\n                   \\<lbrakk>(\\<sigma>', coll)\n                            \\<in> csmall_nstep P \\<sigma> n;\n                    R P P' coll; Q \\<sigma>\\<rbrakk>\n                   \\<Longrightarrow> (\\<sigma>', coll)\n                                     \\<in> csmall_nstep P' \\<sigma> n;\n        (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> (Suc n);\n        R P P' coll; Q \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> (\\<sigma>', coll)\n                         \\<in> csmall_nstep P' \\<sigma> (Suc n)", "then"], ["proof (chain)\npicking this:\n  Q \\<sigma>1", "show ?case"], ["proof (prove)\nusing this:\n  Q \\<sigma>1\n\ngoal (1 subgoal):\n 1. (\\<sigma>', coll) \\<in> csmall_nstep P' \\<sigma> (Suc n)", "using nstep assms Suc"], ["proof (prove)\nusing this:\n  Q \\<sigma>1\n  (\\<sigma>1, coll1) \\<in> csmall_nstep P \\<sigma> n \\<and>\n  (\\<sigma>', coll2) \\<in> csmall P \\<sigma>1 \\<and>\n  combine coll1 coll2 = coll\n  \\<lbrakk>(?\\<sigma>', ?coll) \\<in> csmall ?P ?\\<sigma>; R ?P ?P' ?coll;\n   Q ?\\<sigma>\\<rbrakk>\n  \\<Longrightarrow> (?\\<sigma>', ?coll) \\<in> csmall ?P' ?\\<sigma>\n  R ?P ?P' (combine ?coll1.0 ?coll2.0) =\n  (R ?P ?P' ?coll1.0 \\<and> R ?P ?P' ?coll2.0)\n  \\<lbrakk>Q ?\\<sigma>; ?\\<sigma>' \\<in> small ?P ?\\<sigma>\\<rbrakk>\n  \\<Longrightarrow> Q ?\\<sigma>'\n  \\<lbrakk>(?\\<sigma>', ?coll) \\<in> csmall_nstep P ?\\<sigma> n;\n   R P P' ?coll; Q ?\\<sigma>\\<rbrakk>\n  \\<Longrightarrow> (?\\<sigma>', ?coll) \\<in> csmall_nstep P' ?\\<sigma> n\n  (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> (Suc n)\n  R P P' coll\n  Q \\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<sigma>', coll) \\<in> csmall_nstep P' \\<sigma> (Suc n)", "by auto blast"], ["proof (state)\nthis:\n  (\\<sigma>', coll) \\<in> csmall_nstep P' \\<sigma> (Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<sigma>' coll.\n       \\<lbrakk>(\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> 0;\n        R P P' coll; Q \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> (\\<sigma>', coll) \\<in> csmall_nstep P' \\<sigma> 0", "qed(simp)"], ["", "subsection \"Extending @{term csmall} to a big-step semantics\""], ["", "definition cbig :: \"'prog \\<Rightarrow> 'state \\<Rightarrow> ('state \\<times> 'coll) set\" where\n\"cbig P \\<sigma> \\<equiv>\n  { (\\<sigma>', coll). \\<exists>n. (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n \\<and> \\<sigma>' \\<in> endset }\""], ["", "lemma cbigD:\n \"\\<lbrakk> (\\<sigma>',coll') \\<in> cbig P \\<sigma> \\<rbrakk> \\<Longrightarrow> \\<exists>n. (\\<sigma>',coll') \\<in> csmall_nstep P \\<sigma> n \\<and> \\<sigma>' \\<in> endset\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<sigma>', coll') \\<in> cbig P \\<sigma> \\<Longrightarrow>\n    \\<exists>n.\n       (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> n \\<and>\n       \\<sigma>' \\<in> endset", "by(simp add: cbig_def)"], ["", "lemma cbigD':\n \"\\<lbrakk> o' \\<in> cbig P \\<sigma> \\<rbrakk> \\<Longrightarrow> \\<exists>n. o' \\<in> csmall_nstep P \\<sigma> n \\<and> fst o' \\<in> endset\""], ["proof (prove)\ngoal (1 subgoal):\n 1. o' \\<in> cbig P \\<sigma> \\<Longrightarrow>\n    \\<exists>n.\n       o' \\<in> csmall_nstep P \\<sigma> n \\<and> fst o' \\<in> endset", "by(cases o', simp add: cbig_def)"], ["", "lemma cbig_def2:\n \"(\\<sigma>', coll) \\<in> cbig P \\<sigma> \\<longleftrightarrow> (\\<exists>n. (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n \\<and> \\<sigma>' \\<in> endset)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<sigma>', coll) \\<in> cbig P \\<sigma>) =\n    (\\<exists>n.\n        (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n \\<and>\n        \\<sigma>' \\<in> endset)", "proof(rule iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<sigma>', coll) \\<in> cbig P \\<sigma> \\<Longrightarrow>\n    \\<exists>n.\n       (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n \\<and>\n       \\<sigma>' \\<in> endset\n 2. \\<exists>n.\n       (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n \\<and>\n       \\<sigma>' \\<in> endset \\<Longrightarrow>\n    (\\<sigma>', coll) \\<in> cbig P \\<sigma>", "assume \"(\\<sigma>', coll) \\<in> cbig P \\<sigma>\""], ["proof (state)\nthis:\n  (\\<sigma>', coll) \\<in> cbig P \\<sigma>\n\ngoal (2 subgoals):\n 1. (\\<sigma>', coll) \\<in> cbig P \\<sigma> \\<Longrightarrow>\n    \\<exists>n.\n       (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n \\<and>\n       \\<sigma>' \\<in> endset\n 2. \\<exists>n.\n       (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n \\<and>\n       \\<sigma>' \\<in> endset \\<Longrightarrow>\n    (\\<sigma>', coll) \\<in> cbig P \\<sigma>", "then"], ["proof (chain)\npicking this:\n  (\\<sigma>', coll) \\<in> cbig P \\<sigma>", "show \"\\<exists>n. (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n \\<and> \\<sigma>' \\<in> endset\""], ["proof (prove)\nusing this:\n  (\\<sigma>', coll) \\<in> cbig P \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n \\<and>\n       \\<sigma>' \\<in> endset", "using bigD cbig_def"], ["proof (prove)\nusing this:\n  (\\<sigma>', coll) \\<in> cbig P \\<sigma>\n  ?\\<sigma>' \\<in> big ?P ?\\<sigma> \\<Longrightarrow>\n  \\<exists>n.\n     ?\\<sigma>' \\<in> small_nstep ?P ?\\<sigma> n \\<and>\n     ?\\<sigma>' \\<in> endset\n  cbig ?P ?\\<sigma> \\<equiv>\n  {(\\<sigma>', coll).\n   \\<exists>n.\n      (\\<sigma>', coll) \\<in> csmall_nstep ?P ?\\<sigma> n \\<and>\n      \\<sigma>' \\<in> endset}\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n \\<and>\n       \\<sigma>' \\<in> endset", "by auto"], ["proof (state)\nthis:\n  \\<exists>n.\n     (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n \\<and>\n     \\<sigma>' \\<in> endset\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n \\<and>\n       \\<sigma>' \\<in> endset \\<Longrightarrow>\n    (\\<sigma>', coll) \\<in> cbig P \\<sigma>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>n.\n       (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n \\<and>\n       \\<sigma>' \\<in> endset \\<Longrightarrow>\n    (\\<sigma>', coll) \\<in> cbig P \\<sigma>", "assume \"\\<exists>n. (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n \\<and> \\<sigma>' \\<in> endset\""], ["proof (state)\nthis:\n  \\<exists>n.\n     (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n \\<and>\n     \\<sigma>' \\<in> endset\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n \\<and>\n       \\<sigma>' \\<in> endset \\<Longrightarrow>\n    (\\<sigma>', coll) \\<in> cbig P \\<sigma>", "then"], ["proof (chain)\npicking this:\n  \\<exists>n.\n     (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n \\<and>\n     \\<sigma>' \\<in> endset", "show \"(\\<sigma>', coll) \\<in> cbig P \\<sigma>\""], ["proof (prove)\nusing this:\n  \\<exists>n.\n     (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n \\<and>\n     \\<sigma>' \\<in> endset\n\ngoal (1 subgoal):\n 1. (\\<sigma>', coll) \\<in> cbig P \\<sigma>", "using big_def cbig_def small_nstep_csmall_nstep_equiv"], ["proof (prove)\nusing this:\n  \\<exists>n.\n     (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma> n \\<and>\n     \\<sigma>' \\<in> endset\n  big ?P ?\\<sigma> \\<equiv>\n  {\\<sigma>'.\n   \\<exists>n.\n      \\<sigma>' \\<in> small_nstep ?P ?\\<sigma> n \\<and>\n      \\<sigma>' \\<in> endset}\n  cbig ?P ?\\<sigma> \\<equiv>\n  {(\\<sigma>', coll).\n   \\<exists>n.\n      (\\<sigma>', coll) \\<in> csmall_nstep ?P ?\\<sigma> n \\<and>\n      \\<sigma>' \\<in> endset}\n  small_nstep ?P ?\\<sigma> ?n =\n  {\\<sigma>'.\n   \\<exists>coll. (\\<sigma>', coll) \\<in> csmall_nstep ?P ?\\<sigma> ?n}\n\ngoal (1 subgoal):\n 1. (\\<sigma>', coll) \\<in> cbig P \\<sigma>", "by auto"], ["proof (state)\nthis:\n  (\\<sigma>', coll) \\<in> cbig P \\<sigma>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cbig_big_equiv:\n \"(\\<exists>coll. (\\<sigma>', coll) \\<in> cbig P \\<sigma>) \\<longleftrightarrow> \\<sigma>' \\<in> big P \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>coll. (\\<sigma>', coll) \\<in> cbig P \\<sigma>) =\n    (\\<sigma>' \\<in> big P \\<sigma>)", "proof(rule iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>coll. (\\<sigma>', coll) \\<in> cbig P \\<sigma> \\<Longrightarrow>\n    \\<sigma>' \\<in> big P \\<sigma>\n 2. \\<sigma>' \\<in> big P \\<sigma> \\<Longrightarrow>\n    \\<exists>coll. (\\<sigma>', coll) \\<in> cbig P \\<sigma>", "assume \"\\<exists>coll. (\\<sigma>', coll) \\<in> cbig P \\<sigma>\""], ["proof (state)\nthis:\n  \\<exists>coll. (\\<sigma>', coll) \\<in> cbig P \\<sigma>\n\ngoal (2 subgoals):\n 1. \\<exists>coll. (\\<sigma>', coll) \\<in> cbig P \\<sigma> \\<Longrightarrow>\n    \\<sigma>' \\<in> big P \\<sigma>\n 2. \\<sigma>' \\<in> big P \\<sigma> \\<Longrightarrow>\n    \\<exists>coll. (\\<sigma>', coll) \\<in> cbig P \\<sigma>", "then"], ["proof (chain)\npicking this:\n  \\<exists>coll. (\\<sigma>', coll) \\<in> cbig P \\<sigma>", "show \"\\<sigma>' \\<in> big P \\<sigma>\""], ["proof (prove)\nusing this:\n  \\<exists>coll. (\\<sigma>', coll) \\<in> cbig P \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<sigma>' \\<in> big P \\<sigma>", "by (auto simp: big_def cbig_def small_nstep_csmall_nstep_equiv)"], ["proof (state)\nthis:\n  \\<sigma>' \\<in> big P \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<sigma>' \\<in> big P \\<sigma> \\<Longrightarrow>\n    \\<exists>coll. (\\<sigma>', coll) \\<in> cbig P \\<sigma>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<sigma>' \\<in> big P \\<sigma> \\<Longrightarrow>\n    \\<exists>coll. (\\<sigma>', coll) \\<in> cbig P \\<sigma>", "assume \"\\<sigma>' \\<in> big P \\<sigma>\""], ["proof (state)\nthis:\n  \\<sigma>' \\<in> big P \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<sigma>' \\<in> big P \\<sigma> \\<Longrightarrow>\n    \\<exists>coll. (\\<sigma>', coll) \\<in> cbig P \\<sigma>", "then"], ["proof (chain)\npicking this:\n  \\<sigma>' \\<in> big P \\<sigma>", "show \"\\<exists>coll. (\\<sigma>', coll) \\<in> cbig P \\<sigma>\""], ["proof (prove)\nusing this:\n  \\<sigma>' \\<in> big P \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<exists>coll. (\\<sigma>', coll) \\<in> cbig P \\<sigma>", "by (fastforce simp: cbig_def dest: csmall_nstep_exists)"], ["proof (state)\nthis:\n  \\<exists>coll. (\\<sigma>', coll) \\<in> cbig P \\<sigma>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cbig_big_implies:\n \"(\\<sigma>', coll) \\<in> cbig P \\<sigma> \\<Longrightarrow> \\<sigma>' \\<in> big P \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<sigma>', coll) \\<in> cbig P \\<sigma> \\<Longrightarrow>\n    \\<sigma>' \\<in> big P \\<sigma>", "using cbig_big_equiv"], ["proof (prove)\nusing this:\n  (\\<exists>coll. (?\\<sigma>', coll) \\<in> cbig ?P ?\\<sigma>) =\n  (?\\<sigma>' \\<in> big ?P ?\\<sigma>)\n\ngoal (1 subgoal):\n 1. (\\<sigma>', coll) \\<in> cbig P \\<sigma> \\<Longrightarrow>\n    \\<sigma>' \\<in> big P \\<sigma>", "by blast"], ["", "lemma csmall_to_cbig_prop:\nassumes \"\\<And>P \\<sigma> \\<sigma>' coll. (\\<sigma>', coll) \\<in> csmall P \\<sigma> \\<Longrightarrow> R P coll \\<Longrightarrow> Q P \\<sigma> \\<Longrightarrow> R' P \\<sigma> \\<sigma>' coll\"\n  and \"\\<And>P coll1 coll2. R P (combine coll1 coll2) = (R P coll1 \\<and> R P coll2)\"\n  and \"\\<And>P \\<sigma> \\<sigma>'. Q P \\<sigma> \\<Longrightarrow> \\<sigma>' \\<in> small P \\<sigma> \\<Longrightarrow> Q P \\<sigma>'\"\n  and \"\\<And>P \\<sigma> \\<sigma>1 \\<sigma>' coll1 coll2.\n                        R' P \\<sigma> \\<sigma>1 coll1 \\<and> R' P \\<sigma>1 \\<sigma>' coll2 \\<Longrightarrow> R' P \\<sigma> \\<sigma>' (combine coll1 coll2)\"\n  and \"\\<And>\\<sigma>. R' P \\<sigma> \\<sigma> collect_id\"\nshows \"(\\<sigma>', coll) \\<in> cbig P \\<sigma> \\<Longrightarrow> R P coll \\<Longrightarrow> Q P \\<sigma> \\<Longrightarrow> R' P \\<sigma> \\<sigma>' coll\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<sigma>', coll) \\<in> cbig P \\<sigma>; R P coll;\n     Q P \\<sigma>\\<rbrakk>\n    \\<Longrightarrow> R' P \\<sigma> \\<sigma>' coll", "using assms csmall_to_csmall_nstep_prop[where R=R and Q=Q and R'=R' and \\<sigma>=\\<sigma>]"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?\\<sigma>', ?coll) \\<in> csmall ?P ?\\<sigma>; R ?P ?coll;\n   Q ?P ?\\<sigma>\\<rbrakk>\n  \\<Longrightarrow> R' ?P ?\\<sigma> ?\\<sigma>' ?coll\n  R ?P (combine ?coll1.0 ?coll2.0) = (R ?P ?coll1.0 \\<and> R ?P ?coll2.0)\n  \\<lbrakk>Q ?P ?\\<sigma>; ?\\<sigma>' \\<in> small ?P ?\\<sigma>\\<rbrakk>\n  \\<Longrightarrow> Q ?P ?\\<sigma>'\n  R' ?P ?\\<sigma> ?\\<sigma>1.0 ?coll1.0 \\<and>\n  R' ?P ?\\<sigma>1.0 ?\\<sigma>' ?coll2.0 \\<Longrightarrow>\n  R' ?P ?\\<sigma> ?\\<sigma>' (combine ?coll1.0 ?coll2.0)\n  R' P ?\\<sigma> ?\\<sigma> collect_id\n  \\<lbrakk>\\<And>P \\<sigma> \\<sigma>' coll.\n              \\<lbrakk>(\\<sigma>', coll) \\<in> csmall P \\<sigma>; R P coll;\n               Q P \\<sigma>\\<rbrakk>\n              \\<Longrightarrow> R' P \\<sigma> \\<sigma>' coll;\n   \\<And>P coll1 coll2.\n      R P (combine coll1 coll2) = (R P coll1 \\<and> R P coll2);\n   \\<And>P \\<sigma> \\<sigma>'.\n      \\<lbrakk>Q P \\<sigma>; \\<sigma>' \\<in> small P \\<sigma>\\<rbrakk>\n      \\<Longrightarrow> Q P \\<sigma>';\n   \\<And>P \\<sigma> \\<sigma>1 \\<sigma>' coll1 coll2.\n      R' P \\<sigma> \\<sigma>1 coll1 \\<and>\n      R' P \\<sigma>1 \\<sigma>' coll2 \\<Longrightarrow>\n      R' P \\<sigma> \\<sigma>' (combine coll1 coll2);\n   \\<And>\\<sigma>. R' ?P \\<sigma> \\<sigma> collect_id;\n   (?\\<sigma>', ?coll) \\<in> csmall_nstep ?P \\<sigma> ?n; R ?P ?coll;\n   Q ?P \\<sigma>\\<rbrakk>\n  \\<Longrightarrow> R' ?P \\<sigma> ?\\<sigma>' ?coll\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<sigma>', coll) \\<in> cbig P \\<sigma>; R P coll;\n     Q P \\<sigma>\\<rbrakk>\n    \\<Longrightarrow> R' P \\<sigma> \\<sigma>' coll", "by(auto simp: cbig_def2)"], ["", "lemma csmall_to_cbig_prop2:\nassumes \"\\<And>P P' \\<sigma> \\<sigma>' coll. (\\<sigma>', coll) \\<in> csmall P \\<sigma> \\<Longrightarrow> R P P' coll \\<Longrightarrow> Q \\<sigma> \\<Longrightarrow> (\\<sigma>', coll) \\<in> csmall P' \\<sigma>\"\n  and \"\\<And>P P' coll1 coll2. R P P' (combine coll1 coll2) = (R P P' coll1 \\<and> R P P' coll2)\"\n  and Qpres: \"\\<And>P \\<sigma> \\<sigma>'. Q \\<sigma> \\<Longrightarrow> \\<sigma>' \\<in> small P \\<sigma> \\<Longrightarrow> Q \\<sigma>'\"\nshows \"(\\<sigma>', coll) \\<in> cbig P \\<sigma> \\<Longrightarrow> R P P' coll \\<Longrightarrow> Q \\<sigma> \\<Longrightarrow> (\\<sigma>', coll) \\<in> cbig P' \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<sigma>', coll) \\<in> cbig P \\<sigma>; R P P' coll;\n     Q \\<sigma>\\<rbrakk>\n    \\<Longrightarrow> (\\<sigma>', coll) \\<in> cbig P' \\<sigma>", "using assms csmall_to_csmall_nstep_prop2[where R=R and Q=Q]"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?\\<sigma>', ?coll) \\<in> csmall ?P ?\\<sigma>; R ?P ?P' ?coll;\n   Q ?\\<sigma>\\<rbrakk>\n  \\<Longrightarrow> (?\\<sigma>', ?coll) \\<in> csmall ?P' ?\\<sigma>\n  R ?P ?P' (combine ?coll1.0 ?coll2.0) =\n  (R ?P ?P' ?coll1.0 \\<and> R ?P ?P' ?coll2.0)\n  \\<lbrakk>Q ?\\<sigma>; ?\\<sigma>' \\<in> small ?P ?\\<sigma>\\<rbrakk>\n  \\<Longrightarrow> Q ?\\<sigma>'\n  \\<lbrakk>\\<And>P P' \\<sigma> \\<sigma>' coll.\n              \\<lbrakk>(\\<sigma>', coll) \\<in> csmall P \\<sigma>;\n               R P P' coll; Q \\<sigma>\\<rbrakk>\n              \\<Longrightarrow> (\\<sigma>', coll) \\<in> csmall P' \\<sigma>;\n   \\<And>P P' coll1 coll2.\n      R P P' (combine coll1 coll2) = (R P P' coll1 \\<and> R P P' coll2);\n   \\<And>P \\<sigma> \\<sigma>'.\n      \\<lbrakk>Q \\<sigma>; \\<sigma>' \\<in> small P \\<sigma>\\<rbrakk>\n      \\<Longrightarrow> Q \\<sigma>';\n   (?\\<sigma>', ?coll) \\<in> csmall_nstep ?P ?\\<sigma> ?n; R ?P ?P' ?coll;\n   Q ?\\<sigma>\\<rbrakk>\n  \\<Longrightarrow> (?\\<sigma>', ?coll) \\<in> csmall_nstep ?P' ?\\<sigma> ?n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<sigma>', coll) \\<in> cbig P \\<sigma>; R P P' coll;\n     Q \\<sigma>\\<rbrakk>\n    \\<Longrightarrow> (\\<sigma>', coll) \\<in> cbig P' \\<sigma>", "by(auto simp: cbig_def2) blast"], ["", "lemma cbig_stepD:\nassumes cbig: \"(\\<sigma>',coll') \\<in> cbig P \\<sigma>\" and nend: \"\\<sigma> \\<notin> endset\"\nshows \"\\<exists>\\<sigma>1 coll1. (\\<sigma>1, coll1) \\<in> csmall P \\<sigma>\n   \\<and> (\\<exists>coll. coll' = combine coll1 coll \\<and> (\\<sigma>',coll) \\<in> cbig P \\<sigma>1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>1 coll1.\n       (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n       (\\<exists>coll.\n           coll' = combine coll1 coll \\<and>\n           (\\<sigma>', coll) \\<in> cbig P \\<sigma>1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>1 coll1.\n       (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n       (\\<exists>coll.\n           coll' = combine coll1 coll \\<and>\n           (\\<sigma>', coll) \\<in> cbig P \\<sigma>1)", "obtain n where n: \"(\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> n\" \"\\<sigma>' \\<in> endset\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>(\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> n;\n         \\<sigma>' \\<in> endset\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using cbig_def2 cbig"], ["proof (prove)\nusing this:\n  ((?\\<sigma>', ?coll) \\<in> cbig ?P ?\\<sigma>) =\n  (\\<exists>n.\n      (?\\<sigma>', ?coll) \\<in> csmall_nstep ?P ?\\<sigma> n \\<and>\n      ?\\<sigma>' \\<in> endset)\n  (\\<sigma>', coll') \\<in> cbig P \\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>(\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> n;\n         \\<sigma>' \\<in> endset\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> n\n  \\<sigma>' \\<in> endset\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>1 coll1.\n       (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n       (\\<exists>coll.\n           coll' = combine coll1 coll \\<and>\n           (\\<sigma>', coll) \\<in> cbig P \\<sigma>1)", "then"], ["proof (chain)\npicking this:\n  (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> n\n  \\<sigma>' \\<in> endset", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> n\n  \\<sigma>' \\<in> endset\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>1 coll1.\n       (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n       (\\<exists>coll.\n           coll' = combine coll1 coll \\<and>\n           (\\<sigma>', coll) \\<in> cbig P \\<sigma>1)", "using csmall_nstep_SucD nend cbig_def2"], ["proof (prove)\nusing this:\n  (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> n\n  \\<sigma>' \\<in> endset\n  (?\\<sigma>', ?coll')\n  \\<in> csmall_nstep ?P ?\\<sigma> (Suc ?n) \\<Longrightarrow>\n  \\<exists>\\<sigma>1 coll1.\n     (\\<sigma>1, coll1) \\<in> csmall ?P ?\\<sigma> \\<and>\n     (\\<exists>coll.\n         ?coll' = combine coll1 coll \\<and>\n         (?\\<sigma>', coll) \\<in> csmall_nstep ?P \\<sigma>1 ?n)\n  \\<sigma> \\<notin> endset\n  ((?\\<sigma>', ?coll) \\<in> cbig ?P ?\\<sigma>) =\n  (\\<exists>n.\n      (?\\<sigma>', ?coll) \\<in> csmall_nstep ?P ?\\<sigma> n \\<and>\n      ?\\<sigma>' \\<in> endset)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>1 coll1.\n       (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n       (\\<exists>coll.\n           coll' = combine coll1 coll \\<and>\n           (\\<sigma>', coll) \\<in> cbig P \\<sigma>1)", "by(cases n, simp) blast"], ["proof (state)\nthis:\n  \\<exists>\\<sigma>1 coll1.\n     (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n     (\\<exists>coll.\n         coll' = combine coll1 coll \\<and>\n         (\\<sigma>', coll) \\<in> cbig P \\<sigma>1)\n\ngoal:\nNo subgoals!", "qed"], ["", "(****)"], ["", "lemma csmall_nstep_det_last_eq:\nassumes det: \"\\<forall>\\<sigma>. small P \\<sigma> = {} \\<or> (\\<exists>\\<sigma>'. small P \\<sigma> = {\\<sigma>'})\"\nshows \"\\<lbrakk> (\\<sigma>',coll') \\<in> cbig P \\<sigma>; (\\<sigma>',coll') \\<in> csmall_nstep P \\<sigma> n; (\\<sigma>',coll'') \\<in> csmall_nstep P \\<sigma> n' \\<rbrakk>\n \\<Longrightarrow> n = n'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<sigma>', coll') \\<in> cbig P \\<sigma>;\n     (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> n;\n     (\\<sigma>', coll'') \\<in> csmall_nstep P \\<sigma> n'\\<rbrakk>\n    \\<Longrightarrow> n = n'", "proof(induct n arbitrary: n' \\<sigma> \\<sigma>' coll' coll'')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>n' \\<sigma> \\<sigma>' coll' coll''.\n       \\<lbrakk>(\\<sigma>', coll') \\<in> cbig P \\<sigma>;\n        (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> 0;\n        (\\<sigma>', coll'') \\<in> csmall_nstep P \\<sigma> n'\\<rbrakk>\n       \\<Longrightarrow> 0 = n'\n 2. \\<And>n n' \\<sigma> \\<sigma>' coll' coll''.\n       \\<lbrakk>\\<And>n' \\<sigma> \\<sigma>' coll' coll''.\n                   \\<lbrakk>(\\<sigma>', coll') \\<in> cbig P \\<sigma>;\n                    (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> n;\n                    (\\<sigma>', coll'')\n                    \\<in> csmall_nstep P \\<sigma> n'\\<rbrakk>\n                   \\<Longrightarrow> n = n';\n        (\\<sigma>', coll') \\<in> cbig P \\<sigma>;\n        (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> (Suc n);\n        (\\<sigma>', coll'') \\<in> csmall_nstep P \\<sigma> n'\\<rbrakk>\n       \\<Longrightarrow> Suc n = n'", "case 0"], ["proof (state)\nthis:\n  (\\<sigma>', coll') \\<in> cbig P \\<sigma>\n  (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> 0\n  (\\<sigma>', coll'') \\<in> csmall_nstep P \\<sigma> n'\n\ngoal (2 subgoals):\n 1. \\<And>n' \\<sigma> \\<sigma>' coll' coll''.\n       \\<lbrakk>(\\<sigma>', coll') \\<in> cbig P \\<sigma>;\n        (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> 0;\n        (\\<sigma>', coll'') \\<in> csmall_nstep P \\<sigma> n'\\<rbrakk>\n       \\<Longrightarrow> 0 = n'\n 2. \\<And>n n' \\<sigma> \\<sigma>' coll' coll''.\n       \\<lbrakk>\\<And>n' \\<sigma> \\<sigma>' coll' coll''.\n                   \\<lbrakk>(\\<sigma>', coll') \\<in> cbig P \\<sigma>;\n                    (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> n;\n                    (\\<sigma>', coll'')\n                    \\<in> csmall_nstep P \\<sigma> n'\\<rbrakk>\n                   \\<Longrightarrow> n = n';\n        (\\<sigma>', coll') \\<in> cbig P \\<sigma>;\n        (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> (Suc n);\n        (\\<sigma>', coll'') \\<in> csmall_nstep P \\<sigma> n'\\<rbrakk>\n       \\<Longrightarrow> Suc n = n'", "have \"\\<sigma>' = \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma>' = \\<sigma>", "using \"0.prems\"(2) csmall_nstep_base"], ["proof (prove)\nusing this:\n  (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> 0\n  csmall_nstep ?P ?\\<sigma> 0 = {(?\\<sigma>, collect_id)}\n\ngoal (1 subgoal):\n 1. \\<sigma>' = \\<sigma>", "by blast"], ["proof (state)\nthis:\n  \\<sigma>' = \\<sigma>\n\ngoal (2 subgoals):\n 1. \\<And>n' \\<sigma> \\<sigma>' coll' coll''.\n       \\<lbrakk>(\\<sigma>', coll') \\<in> cbig P \\<sigma>;\n        (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> 0;\n        (\\<sigma>', coll'') \\<in> csmall_nstep P \\<sigma> n'\\<rbrakk>\n       \\<Longrightarrow> 0 = n'\n 2. \\<And>n n' \\<sigma> \\<sigma>' coll' coll''.\n       \\<lbrakk>\\<And>n' \\<sigma> \\<sigma>' coll' coll''.\n                   \\<lbrakk>(\\<sigma>', coll') \\<in> cbig P \\<sigma>;\n                    (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> n;\n                    (\\<sigma>', coll'')\n                    \\<in> csmall_nstep P \\<sigma> n'\\<rbrakk>\n                   \\<Longrightarrow> n = n';\n        (\\<sigma>', coll') \\<in> cbig P \\<sigma>;\n        (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> (Suc n);\n        (\\<sigma>', coll'') \\<in> csmall_nstep P \\<sigma> n'\\<rbrakk>\n       \\<Longrightarrow> Suc n = n'", "then"], ["proof (chain)\npicking this:\n  \\<sigma>' = \\<sigma>", "have endset: \"\\<sigma> \\<in> endset\""], ["proof (prove)\nusing this:\n  \\<sigma>' = \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<in> endset", "using \"0.prems\"(1) cbigD"], ["proof (prove)\nusing this:\n  \\<sigma>' = \\<sigma>\n  (\\<sigma>', coll') \\<in> cbig P \\<sigma>\n  (?\\<sigma>', ?coll') \\<in> cbig ?P ?\\<sigma> \\<Longrightarrow>\n  \\<exists>n.\n     (?\\<sigma>', ?coll') \\<in> csmall_nstep ?P ?\\<sigma> n \\<and>\n     ?\\<sigma>' \\<in> endset\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<in> endset", "by blast"], ["proof (state)\nthis:\n  \\<sigma> \\<in> endset\n\ngoal (2 subgoals):\n 1. \\<And>n' \\<sigma> \\<sigma>' coll' coll''.\n       \\<lbrakk>(\\<sigma>', coll') \\<in> cbig P \\<sigma>;\n        (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> 0;\n        (\\<sigma>', coll'') \\<in> csmall_nstep P \\<sigma> n'\\<rbrakk>\n       \\<Longrightarrow> 0 = n'\n 2. \\<And>n n' \\<sigma> \\<sigma>' coll' coll''.\n       \\<lbrakk>\\<And>n' \\<sigma> \\<sigma>' coll' coll''.\n                   \\<lbrakk>(\\<sigma>', coll') \\<in> cbig P \\<sigma>;\n                    (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> n;\n                    (\\<sigma>', coll'')\n                    \\<in> csmall_nstep P \\<sigma> n'\\<rbrakk>\n                   \\<Longrightarrow> n = n';\n        (\\<sigma>', coll') \\<in> cbig P \\<sigma>;\n        (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> (Suc n);\n        (\\<sigma>', coll'') \\<in> csmall_nstep P \\<sigma> n'\\<rbrakk>\n       \\<Longrightarrow> Suc n = n'", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 = n'", "proof(cases n')"], ["proof (state)\ngoal (2 subgoals):\n 1. n' = 0 \\<Longrightarrow> 0 = n'\n 2. \\<And>nat. n' = Suc nat \\<Longrightarrow> 0 = n'", "case Suc"], ["proof (state)\nthis:\n  n' = Suc nat_\n\ngoal (2 subgoals):\n 1. n' = 0 \\<Longrightarrow> 0 = n'\n 2. \\<And>nat. n' = Suc nat \\<Longrightarrow> 0 = n'", "then"], ["proof (chain)\npicking this:\n  n' = Suc nat_", "show ?thesis"], ["proof (prove)\nusing this:\n  n' = Suc nat_\n\ngoal (1 subgoal):\n 1. 0 = n'", "using \"0.prems\"(3) csmall_nstep_Suc_nend endset"], ["proof (prove)\nusing this:\n  n' = Suc nat_\n  (\\<sigma>', coll'') \\<in> csmall_nstep P \\<sigma> n'\n  ?o' \\<in> csmall_nstep ?P ?\\<sigma> (Suc ?n1.0) \\<Longrightarrow>\n  ?\\<sigma> \\<notin> endset\n  \\<sigma> \\<in> endset\n\ngoal (1 subgoal):\n 1. 0 = n'", "by blast"], ["proof (state)\nthis:\n  0 = n'\n\ngoal (1 subgoal):\n 1. n' = 0 \\<Longrightarrow> 0 = n'", "qed(simp)"], ["proof (state)\nthis:\n  0 = n'\n\ngoal (1 subgoal):\n 1. \\<And>n n' \\<sigma> \\<sigma>' coll' coll''.\n       \\<lbrakk>\\<And>n' \\<sigma> \\<sigma>' coll' coll''.\n                   \\<lbrakk>(\\<sigma>', coll') \\<in> cbig P \\<sigma>;\n                    (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> n;\n                    (\\<sigma>', coll'')\n                    \\<in> csmall_nstep P \\<sigma> n'\\<rbrakk>\n                   \\<Longrightarrow> n = n';\n        (\\<sigma>', coll') \\<in> cbig P \\<sigma>;\n        (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> (Suc n);\n        (\\<sigma>', coll'') \\<in> csmall_nstep P \\<sigma> n'\\<rbrakk>\n       \\<Longrightarrow> Suc n = n'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n n' \\<sigma> \\<sigma>' coll' coll''.\n       \\<lbrakk>\\<And>n' \\<sigma> \\<sigma>' coll' coll''.\n                   \\<lbrakk>(\\<sigma>', coll') \\<in> cbig P \\<sigma>;\n                    (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> n;\n                    (\\<sigma>', coll'')\n                    \\<in> csmall_nstep P \\<sigma> n'\\<rbrakk>\n                   \\<Longrightarrow> n = n';\n        (\\<sigma>', coll') \\<in> cbig P \\<sigma>;\n        (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> (Suc n);\n        (\\<sigma>', coll'') \\<in> csmall_nstep P \\<sigma> n'\\<rbrakk>\n       \\<Longrightarrow> Suc n = n'", "case (Suc n1)"], ["proof (state)\nthis:\n  \\<lbrakk>(?\\<sigma>', ?coll') \\<in> cbig P ?\\<sigma>;\n   (?\\<sigma>', ?coll') \\<in> csmall_nstep P ?\\<sigma> n1;\n   (?\\<sigma>', ?coll'') \\<in> csmall_nstep P ?\\<sigma> ?n'\\<rbrakk>\n  \\<Longrightarrow> n1 = ?n'\n  (\\<sigma>', coll') \\<in> cbig P \\<sigma>\n  (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> (Suc n1)\n  (\\<sigma>', coll'') \\<in> csmall_nstep P \\<sigma> n'\n\ngoal (1 subgoal):\n 1. \\<And>n n' \\<sigma> \\<sigma>' coll' coll''.\n       \\<lbrakk>\\<And>n' \\<sigma> \\<sigma>' coll' coll''.\n                   \\<lbrakk>(\\<sigma>', coll') \\<in> cbig P \\<sigma>;\n                    (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> n;\n                    (\\<sigma>', coll'')\n                    \\<in> csmall_nstep P \\<sigma> n'\\<rbrakk>\n                   \\<Longrightarrow> n = n';\n        (\\<sigma>', coll') \\<in> cbig P \\<sigma>;\n        (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> (Suc n);\n        (\\<sigma>', coll'') \\<in> csmall_nstep P \\<sigma> n'\\<rbrakk>\n       \\<Longrightarrow> Suc n = n'", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>(?\\<sigma>', ?coll') \\<in> cbig P ?\\<sigma>;\n   (?\\<sigma>', ?coll') \\<in> csmall_nstep P ?\\<sigma> n1;\n   (?\\<sigma>', ?coll'') \\<in> csmall_nstep P ?\\<sigma> ?n'\\<rbrakk>\n  \\<Longrightarrow> n1 = ?n'\n  (\\<sigma>', coll') \\<in> cbig P \\<sigma>\n  (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> (Suc n1)\n  (\\<sigma>', coll'') \\<in> csmall_nstep P \\<sigma> n'", "have endset: \"\\<sigma>' \\<in> endset\""], ["proof (prove)\nusing this:\n  \\<lbrakk>(?\\<sigma>', ?coll') \\<in> cbig P ?\\<sigma>;\n   (?\\<sigma>', ?coll') \\<in> csmall_nstep P ?\\<sigma> n1;\n   (?\\<sigma>', ?coll'') \\<in> csmall_nstep P ?\\<sigma> ?n'\\<rbrakk>\n  \\<Longrightarrow> n1 = ?n'\n  (\\<sigma>', coll') \\<in> cbig P \\<sigma>\n  (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> (Suc n1)\n  (\\<sigma>', coll'') \\<in> csmall_nstep P \\<sigma> n'\n\ngoal (1 subgoal):\n 1. \\<sigma>' \\<in> endset", "using Suc.prems(1) cbigD"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?\\<sigma>', ?coll') \\<in> cbig P ?\\<sigma>;\n   (?\\<sigma>', ?coll') \\<in> csmall_nstep P ?\\<sigma> n1;\n   (?\\<sigma>', ?coll'') \\<in> csmall_nstep P ?\\<sigma> ?n'\\<rbrakk>\n  \\<Longrightarrow> n1 = ?n'\n  (\\<sigma>', coll') \\<in> cbig P \\<sigma>\n  (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> (Suc n1)\n  (\\<sigma>', coll'') \\<in> csmall_nstep P \\<sigma> n'\n  (\\<sigma>', coll') \\<in> cbig P \\<sigma>\n  (?\\<sigma>', ?coll') \\<in> cbig ?P ?\\<sigma> \\<Longrightarrow>\n  \\<exists>n.\n     (?\\<sigma>', ?coll') \\<in> csmall_nstep ?P ?\\<sigma> n \\<and>\n     ?\\<sigma>' \\<in> endset\n\ngoal (1 subgoal):\n 1. \\<sigma>' \\<in> endset", "by blast"], ["proof (state)\nthis:\n  \\<sigma>' \\<in> endset\n\ngoal (1 subgoal):\n 1. \\<And>n n' \\<sigma> \\<sigma>' coll' coll''.\n       \\<lbrakk>\\<And>n' \\<sigma> \\<sigma>' coll' coll''.\n                   \\<lbrakk>(\\<sigma>', coll') \\<in> cbig P \\<sigma>;\n                    (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> n;\n                    (\\<sigma>', coll'')\n                    \\<in> csmall_nstep P \\<sigma> n'\\<rbrakk>\n                   \\<Longrightarrow> n = n';\n        (\\<sigma>', coll') \\<in> cbig P \\<sigma>;\n        (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> (Suc n);\n        (\\<sigma>', coll'') \\<in> csmall_nstep P \\<sigma> n'\\<rbrakk>\n       \\<Longrightarrow> Suc n = n'", "have nend: \"\\<sigma> \\<notin> endset\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma> \\<notin> endset", "using csmall_nstep_Suc_nend[OF Suc.prems(2)]"], ["proof (prove)\nusing this:\n  \\<sigma> \\<notin> endset\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<notin> endset", "by simp"], ["proof (state)\nthis:\n  \\<sigma> \\<notin> endset\n\ngoal (1 subgoal):\n 1. \\<And>n n' \\<sigma> \\<sigma>' coll' coll''.\n       \\<lbrakk>\\<And>n' \\<sigma> \\<sigma>' coll' coll''.\n                   \\<lbrakk>(\\<sigma>', coll') \\<in> cbig P \\<sigma>;\n                    (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> n;\n                    (\\<sigma>', coll'')\n                    \\<in> csmall_nstep P \\<sigma> n'\\<rbrakk>\n                   \\<Longrightarrow> n = n';\n        (\\<sigma>', coll') \\<in> cbig P \\<sigma>;\n        (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> (Suc n);\n        (\\<sigma>', coll'') \\<in> csmall_nstep P \\<sigma> n'\\<rbrakk>\n       \\<Longrightarrow> Suc n = n'", "then"], ["proof (chain)\npicking this:\n  \\<sigma> \\<notin> endset", "have neq: \"\\<sigma>' \\<noteq> \\<sigma>\""], ["proof (prove)\nusing this:\n  \\<sigma> \\<notin> endset\n\ngoal (1 subgoal):\n 1. \\<sigma>' \\<noteq> \\<sigma>", "using endset"], ["proof (prove)\nusing this:\n  \\<sigma> \\<notin> endset\n  \\<sigma>' \\<in> endset\n\ngoal (1 subgoal):\n 1. \\<sigma>' \\<noteq> \\<sigma>", "by auto"], ["proof (state)\nthis:\n  \\<sigma>' \\<noteq> \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>n n' \\<sigma> \\<sigma>' coll' coll''.\n       \\<lbrakk>\\<And>n' \\<sigma> \\<sigma>' coll' coll''.\n                   \\<lbrakk>(\\<sigma>', coll') \\<in> cbig P \\<sigma>;\n                    (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> n;\n                    (\\<sigma>', coll'')\n                    \\<in> csmall_nstep P \\<sigma> n'\\<rbrakk>\n                   \\<Longrightarrow> n = n';\n        (\\<sigma>', coll') \\<in> cbig P \\<sigma>;\n        (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> (Suc n);\n        (\\<sigma>', coll'') \\<in> csmall_nstep P \\<sigma> n'\\<rbrakk>\n       \\<Longrightarrow> Suc n = n'", "obtain \\<sigma>1 coll coll1 where \\<sigma>1: \"(\\<sigma>1,coll1) \\<in> csmall P \\<sigma>\" \"coll' = combine coll1 coll\"\n     \"(\\<sigma>',coll) \\<in> csmall_nstep P \\<sigma>1 n1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>1 coll1 coll.\n        \\<lbrakk>(\\<sigma>1, coll1) \\<in> csmall P \\<sigma>;\n         coll' = combine coll1 coll;\n         (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma>1 n1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using csmall_nstep_SucD[OF Suc.prems(2)]"], ["proof (prove)\nusing this:\n  \\<exists>\\<sigma>1 coll1.\n     (\\<sigma>1, coll1) \\<in> csmall P \\<sigma> \\<and>\n     (\\<exists>coll.\n         coll' = combine coll1 coll \\<and>\n         (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma>1 n1)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>1 coll1 coll.\n        \\<lbrakk>(\\<sigma>1, coll1) \\<in> csmall P \\<sigma>;\n         coll' = combine coll1 coll;\n         (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma>1 n1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  (\\<sigma>1, coll1) \\<in> csmall P \\<sigma>\n  coll' = combine coll1 coll\n  (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma>1 n1\n\ngoal (1 subgoal):\n 1. \\<And>n n' \\<sigma> \\<sigma>' coll' coll''.\n       \\<lbrakk>\\<And>n' \\<sigma> \\<sigma>' coll' coll''.\n                   \\<lbrakk>(\\<sigma>', coll') \\<in> cbig P \\<sigma>;\n                    (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> n;\n                    (\\<sigma>', coll'')\n                    \\<in> csmall_nstep P \\<sigma> n'\\<rbrakk>\n                   \\<Longrightarrow> n = n';\n        (\\<sigma>', coll') \\<in> cbig P \\<sigma>;\n        (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> (Suc n);\n        (\\<sigma>', coll'') \\<in> csmall_nstep P \\<sigma> n'\\<rbrakk>\n       \\<Longrightarrow> Suc n = n'", "then"], ["proof (chain)\npicking this:\n  (\\<sigma>1, coll1) \\<in> csmall P \\<sigma>\n  coll' = combine coll1 coll\n  (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma>1 n1", "have cbig: \"(\\<sigma>',coll) \\<in> cbig P \\<sigma>1\""], ["proof (prove)\nusing this:\n  (\\<sigma>1, coll1) \\<in> csmall P \\<sigma>\n  coll' = combine coll1 coll\n  (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma>1 n1\n\ngoal (1 subgoal):\n 1. (\\<sigma>', coll) \\<in> cbig P \\<sigma>1", "using endset"], ["proof (prove)\nusing this:\n  (\\<sigma>1, coll1) \\<in> csmall P \\<sigma>\n  coll' = combine coll1 coll\n  (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma>1 n1\n  \\<sigma>' \\<in> endset\n\ngoal (1 subgoal):\n 1. (\\<sigma>', coll) \\<in> cbig P \\<sigma>1", "by(auto simp: cbig_def)"], ["proof (state)\nthis:\n  (\\<sigma>', coll) \\<in> cbig P \\<sigma>1\n\ngoal (1 subgoal):\n 1. \\<And>n n' \\<sigma> \\<sigma>' coll' coll''.\n       \\<lbrakk>\\<And>n' \\<sigma> \\<sigma>' coll' coll''.\n                   \\<lbrakk>(\\<sigma>', coll') \\<in> cbig P \\<sigma>;\n                    (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> n;\n                    (\\<sigma>', coll'')\n                    \\<in> csmall_nstep P \\<sigma> n'\\<rbrakk>\n                   \\<Longrightarrow> n = n';\n        (\\<sigma>', coll') \\<in> cbig P \\<sigma>;\n        (\\<sigma>', coll') \\<in> csmall_nstep P \\<sigma> (Suc n);\n        (\\<sigma>', coll'') \\<in> csmall_nstep P \\<sigma> n'\\<rbrakk>\n       \\<Longrightarrow> Suc n = n'", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc n1 = n'", "proof(cases n')"], ["proof (state)\ngoal (2 subgoals):\n 1. n' = 0 \\<Longrightarrow> Suc n1 = n'\n 2. \\<And>nat. n' = Suc nat \\<Longrightarrow> Suc n1 = n'", "case 0"], ["proof (state)\nthis:\n  n' = 0\n\ngoal (2 subgoals):\n 1. n' = 0 \\<Longrightarrow> Suc n1 = n'\n 2. \\<And>nat. n' = Suc nat \\<Longrightarrow> Suc n1 = n'", "then"], ["proof (chain)\npicking this:\n  n' = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  n' = 0\n\ngoal (1 subgoal):\n 1. Suc n1 = n'", "using neq Suc.prems(3)"], ["proof (prove)\nusing this:\n  n' = 0\n  \\<sigma>' \\<noteq> \\<sigma>\n  (\\<sigma>', coll'') \\<in> csmall_nstep P \\<sigma> n'\n\ngoal (1 subgoal):\n 1. Suc n1 = n'", "using csmall_nstep_base"], ["proof (prove)\nusing this:\n  n' = 0\n  \\<sigma>' \\<noteq> \\<sigma>\n  (\\<sigma>', coll'') \\<in> csmall_nstep P \\<sigma> n'\n  csmall_nstep ?P ?\\<sigma> 0 = {(?\\<sigma>, collect_id)}\n\ngoal (1 subgoal):\n 1. Suc n1 = n'", "by simp"], ["proof (state)\nthis:\n  Suc n1 = n'\n\ngoal (1 subgoal):\n 1. \\<And>nat. n' = Suc nat \\<Longrightarrow> Suc n1 = n'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat. n' = Suc nat \\<Longrightarrow> Suc n1 = n'", "case Suc': (Suc n1')"], ["proof (state)\nthis:\n  n' = Suc n1'\n\ngoal (1 subgoal):\n 1. \\<And>nat. n' = Suc nat \\<Longrightarrow> Suc n1 = n'", "then"], ["proof (chain)\npicking this:\n  n' = Suc n1'", "obtain \\<sigma>1' coll2 coll1' where \\<sigma>1': \"(\\<sigma>1',coll1') \\<in> csmall P \\<sigma>\" \"coll'' = combine coll1' coll2\"\n      \"(\\<sigma>',coll2) \\<in> csmall_nstep P \\<sigma>1' n1'\""], ["proof (prove)\nusing this:\n  n' = Suc n1'\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>1' coll1' coll2.\n        \\<lbrakk>(\\<sigma>1', coll1') \\<in> csmall P \\<sigma>;\n         coll'' = combine coll1' coll2;\n         (\\<sigma>', coll2) \\<in> csmall_nstep P \\<sigma>1' n1'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using csmall_nstep_SucD[where \\<sigma>=\\<sigma> and \\<sigma>'=\\<sigma>' and coll'=coll'' and n=n1'] Suc.prems(3)"], ["proof (prove)\nusing this:\n  n' = Suc n1'\n  (\\<sigma>', coll'')\n  \\<in> csmall_nstep ?P \\<sigma> (Suc n1') \\<Longrightarrow>\n  \\<exists>\\<sigma>1 coll1.\n     (\\<sigma>1, coll1) \\<in> csmall ?P \\<sigma> \\<and>\n     (\\<exists>coll.\n         coll'' = combine coll1 coll \\<and>\n         (\\<sigma>', coll) \\<in> csmall_nstep ?P \\<sigma>1 n1')\n  (\\<sigma>', coll'') \\<in> csmall_nstep P \\<sigma> n'\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>1' coll1' coll2.\n        \\<lbrakk>(\\<sigma>1', coll1') \\<in> csmall P \\<sigma>;\n         coll'' = combine coll1' coll2;\n         (\\<sigma>', coll2) \\<in> csmall_nstep P \\<sigma>1' n1'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (\\<sigma>1', coll1') \\<in> csmall P \\<sigma>\n  coll'' = combine coll1' coll2\n  (\\<sigma>', coll2) \\<in> csmall_nstep P \\<sigma>1' n1'\n\ngoal (1 subgoal):\n 1. \\<And>nat. n' = Suc nat \\<Longrightarrow> Suc n1 = n'", "then"], ["proof (chain)\npicking this:\n  (\\<sigma>1', coll1') \\<in> csmall P \\<sigma>\n  coll'' = combine coll1' coll2\n  (\\<sigma>', coll2) \\<in> csmall_nstep P \\<sigma>1' n1'", "have \"\\<sigma>1=\\<sigma>1'\""], ["proof (prove)\nusing this:\n  (\\<sigma>1', coll1') \\<in> csmall P \\<sigma>\n  coll'' = combine coll1' coll2\n  (\\<sigma>', coll2) \\<in> csmall_nstep P \\<sigma>1' n1'\n\ngoal (1 subgoal):\n 1. \\<sigma>1 = \\<sigma>1'", "using \\<sigma>1 det csmall_def"], ["proof (prove)\nusing this:\n  (\\<sigma>1', coll1') \\<in> csmall P \\<sigma>\n  coll'' = combine coll1' coll2\n  (\\<sigma>', coll2) \\<in> csmall_nstep P \\<sigma>1' n1'\n  (\\<sigma>1, coll1) \\<in> csmall P \\<sigma>\n  coll' = combine coll1 coll\n  (\\<sigma>', coll) \\<in> csmall_nstep P \\<sigma>1 n1\n  \\<forall>\\<sigma>.\n     small P \\<sigma> = {} \\<or>\n     (\\<exists>\\<sigma>'. small P \\<sigma> = {\\<sigma>'})\n  csmall ?P ?\\<sigma> \\<equiv>\n  {(\\<sigma>', coll).\n   \\<sigma>' \\<in> small ?P ?\\<sigma> \\<and>\n   collect ?P ?\\<sigma> \\<sigma>' = coll}\n\ngoal (1 subgoal):\n 1. \\<sigma>1 = \\<sigma>1'", "by auto"], ["proof (state)\nthis:\n  \\<sigma>1 = \\<sigma>1'\n\ngoal (1 subgoal):\n 1. \\<And>nat. n' = Suc nat \\<Longrightarrow> Suc n1 = n'", "then"], ["proof (chain)\npicking this:\n  \\<sigma>1 = \\<sigma>1'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<sigma>1 = \\<sigma>1'\n\ngoal (1 subgoal):\n 1. Suc n1 = n'", "using Suc.hyps(1)[OF cbig \\<sigma>1(3)] \\<sigma>1'(3) Suc'"], ["proof (prove)\nusing this:\n  \\<sigma>1 = \\<sigma>1'\n  (\\<sigma>', ?coll'') \\<in> csmall_nstep P \\<sigma>1 ?n' \\<Longrightarrow>\n  n1 = ?n'\n  (\\<sigma>', coll2) \\<in> csmall_nstep P \\<sigma>1' n1'\n  n' = Suc n1'\n\ngoal (1 subgoal):\n 1. Suc n1 = n'", "by blast"], ["proof (state)\nthis:\n  Suc n1 = n'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Suc n1 = n'\n\ngoal:\nNo subgoals!", "qed"], ["", "end \\<comment> \\<open> CollectionSemantics \\<close>"], ["", "end"]]}