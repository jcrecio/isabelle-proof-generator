{"file_name": "/home/qj213/afp-2021-10-22/thys/Regression_Test_Selection/Common/Semantics.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Regression_Test_Selection", "problem_names": ["lemma small_nstep_Rec2:\n \"small_nstep P \\<sigma> (Suc n) =\n  { \\<sigma>2. \\<exists>\\<sigma>1. \\<sigma>1 \\<in> small P \\<sigma> \\<and> \\<sigma>2 \\<in> small_nstep P \\<sigma>1 n }\"", "lemma small_nstep_SucD:\nassumes \"\\<sigma>' \\<in> small_nstep P \\<sigma> (Suc n)\"\nshows \"\\<exists>\\<sigma>1. \\<sigma>1 \\<in> small P \\<sigma> \\<and> \\<sigma>' \\<in> small_nstep P \\<sigma>1 n\"", "lemma small_nstep_Suc_nend: \"\\<sigma>' \\<in> small_nstep P \\<sigma> (Suc n1) \\<Longrightarrow> \\<sigma> \\<notin> endset\"", "lemma bigI:\n \"\\<lbrakk> \\<sigma>' \\<in> small_nstep P \\<sigma> n; \\<sigma>' \\<in> endset \\<rbrakk> \\<Longrightarrow> \\<sigma>' \\<in> big P \\<sigma>\"", "lemma bigD:\n \"\\<lbrakk> \\<sigma>' \\<in> big P \\<sigma> \\<rbrakk> \\<Longrightarrow> \\<exists>n. \\<sigma>' \\<in> small_nstep P \\<sigma> n \\<and> \\<sigma>' \\<in> endset\"", "lemma big_def2:\n \"\\<sigma>' \\<in> big P \\<sigma> \\<longleftrightarrow> (\\<exists>n. \\<sigma>' \\<in> small_nstep P \\<sigma> n \\<and> \\<sigma>' \\<in> endset)\"", "lemma big_stepD:\nassumes big: \"\\<sigma>' \\<in> big P \\<sigma>\" and nend: \"\\<sigma> \\<notin> endset\"\nshows \"\\<exists>\\<sigma>1. \\<sigma>1 \\<in> small P \\<sigma> \\<and> \\<sigma>' \\<in> big P \\<sigma>1\"", "lemma small_nstep_det_last_eq:\nassumes det: \"\\<forall>\\<sigma>. small P \\<sigma> = {} \\<or> (\\<exists>\\<sigma>'. small P \\<sigma> = {\\<sigma>'})\"\nshows \"\\<lbrakk> \\<sigma>' \\<in> big P \\<sigma>; \\<sigma>' \\<in> small_nstep P \\<sigma> n; \\<sigma>' \\<in> small_nstep P \\<sigma> n' \\<rbrakk> \\<Longrightarrow> n = n'\""], "translations": [["", "lemma small_nstep_Rec2:\n \"small_nstep P \\<sigma> (Suc n) =\n  { \\<sigma>2. \\<exists>\\<sigma>1. \\<sigma>1 \\<in> small P \\<sigma> \\<and> \\<sigma>2 \\<in> small_nstep P \\<sigma>1 n }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small_nstep P \\<sigma> (Suc n) =\n    {\\<sigma>2.\n     \\<exists>\\<sigma>1.\n        \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n        \\<sigma>2 \\<in> small_nstep P \\<sigma>1 n}", "proof(induct n arbitrary: \\<sigma>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<sigma>.\n       small_nstep P \\<sigma> (Suc 0) =\n       {\\<sigma>2.\n        \\<exists>\\<sigma>1.\n           \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n           \\<sigma>2 \\<in> small_nstep P \\<sigma>1 0}\n 2. \\<And>n \\<sigma>.\n       (\\<And>\\<sigma>.\n           small_nstep P \\<sigma> (Suc n) =\n           {\\<sigma>2.\n            \\<exists>\\<sigma>1.\n               \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n               \\<sigma>2 \\<in> small_nstep P \\<sigma>1 n}) \\<Longrightarrow>\n       small_nstep P \\<sigma> (Suc (Suc n)) =\n       {\\<sigma>2.\n        \\<exists>\\<sigma>1.\n           \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n           \\<sigma>2 \\<in> small_nstep P \\<sigma>1 (Suc n)}", "case (Suc n)"], ["proof (state)\nthis:\n  small_nstep P ?\\<sigma> (Suc n) =\n  {\\<sigma>2.\n   \\<exists>\\<sigma>1.\n      \\<sigma>1 \\<in> small P ?\\<sigma> \\<and>\n      \\<sigma>2 \\<in> small_nstep P \\<sigma>1 n}\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma>.\n       small_nstep P \\<sigma> (Suc 0) =\n       {\\<sigma>2.\n        \\<exists>\\<sigma>1.\n           \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n           \\<sigma>2 \\<in> small_nstep P \\<sigma>1 0}\n 2. \\<And>n \\<sigma>.\n       (\\<And>\\<sigma>.\n           small_nstep P \\<sigma> (Suc n) =\n           {\\<sigma>2.\n            \\<exists>\\<sigma>1.\n               \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n               \\<sigma>2 \\<in> small_nstep P \\<sigma>1 n}) \\<Longrightarrow>\n       small_nstep P \\<sigma> (Suc (Suc n)) =\n       {\\<sigma>2.\n        \\<exists>\\<sigma>1.\n           \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n           \\<sigma>2 \\<in> small_nstep P \\<sigma>1 (Suc n)}", "have right: \"\\<And>\\<sigma>'. \\<sigma>' \\<in> small_nstep P \\<sigma> (Suc(Suc n))\n    \\<Longrightarrow> \\<exists>\\<sigma>1. \\<sigma>1 \\<in> small P \\<sigma> \\<and> \\<sigma>' \\<in> small_nstep P \\<sigma>1 (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>''.\n       \\<sigma>''\n       \\<in> small_nstep P \\<sigma> (Suc (Suc n)) \\<Longrightarrow>\n       \\<exists>\\<sigma>1.\n          \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n          \\<sigma>'' \\<in> small_nstep P \\<sigma>1 (Suc n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>''.\n       \\<sigma>''\n       \\<in> small_nstep P \\<sigma> (Suc (Suc n)) \\<Longrightarrow>\n       \\<exists>\\<sigma>1.\n          \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n          \\<sigma>'' \\<in> small_nstep P \\<sigma>1 (Suc n)", "fix \\<sigma>'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>''.\n       \\<sigma>''\n       \\<in> small_nstep P \\<sigma> (Suc (Suc n)) \\<Longrightarrow>\n       \\<exists>\\<sigma>1.\n          \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n          \\<sigma>'' \\<in> small_nstep P \\<sigma>1 (Suc n)", "assume \"\\<sigma>' \\<in> small_nstep P \\<sigma> (Suc(Suc n))\""], ["proof (state)\nthis:\n  \\<sigma>' \\<in> small_nstep P \\<sigma> (Suc (Suc n))\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>''.\n       \\<sigma>''\n       \\<in> small_nstep P \\<sigma> (Suc (Suc n)) \\<Longrightarrow>\n       \\<exists>\\<sigma>1.\n          \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n          \\<sigma>'' \\<in> small_nstep P \\<sigma>1 (Suc n)", "then"], ["proof (chain)\npicking this:\n  \\<sigma>' \\<in> small_nstep P \\<sigma> (Suc (Suc n))", "obtain \\<sigma>1 where Sucnstep: \"\\<sigma>1 \\<in> small_nstep P \\<sigma> (Suc n)\" \"\\<sigma>' \\<in> small P \\<sigma>1\""], ["proof (prove)\nusing this:\n  \\<sigma>' \\<in> small_nstep P \\<sigma> (Suc (Suc n))\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>1.\n        \\<lbrakk>\\<sigma>1 \\<in> small_nstep P \\<sigma> (Suc n);\n         \\<sigma>' \\<in> small P \\<sigma>1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  \\<sigma>1 \\<in> small_nstep P \\<sigma> (Suc n)\n  \\<sigma>' \\<in> small P \\<sigma>1\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>''.\n       \\<sigma>''\n       \\<in> small_nstep P \\<sigma> (Suc (Suc n)) \\<Longrightarrow>\n       \\<exists>\\<sigma>1.\n          \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n          \\<sigma>'' \\<in> small_nstep P \\<sigma>1 (Suc n)", "obtain \\<sigma>12 where nstep: \"\\<sigma>12 \\<in> small P \\<sigma> \\<and> \\<sigma>1 \\<in> small_nstep P \\<sigma>12 n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>12.\n        \\<sigma>12 \\<in> small P \\<sigma> \\<and>\n        \\<sigma>1 \\<in> small_nstep P \\<sigma>12 n \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using Suc Sucnstep(1)"], ["proof (prove)\nusing this:\n  small_nstep P ?\\<sigma> (Suc n) =\n  {\\<sigma>2.\n   \\<exists>\\<sigma>1.\n      \\<sigma>1 \\<in> small P ?\\<sigma> \\<and>\n      \\<sigma>2 \\<in> small_nstep P \\<sigma>1 n}\n  \\<sigma>1 \\<in> small_nstep P \\<sigma> (Suc n)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>12.\n        \\<sigma>12 \\<in> small P \\<sigma> \\<and>\n        \\<sigma>1 \\<in> small_nstep P \\<sigma>12 n \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  \\<sigma>12 \\<in> small P \\<sigma> \\<and>\n  \\<sigma>1 \\<in> small_nstep P \\<sigma>12 n\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>''.\n       \\<sigma>''\n       \\<in> small_nstep P \\<sigma> (Suc (Suc n)) \\<Longrightarrow>\n       \\<exists>\\<sigma>1.\n          \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n          \\<sigma>'' \\<in> small_nstep P \\<sigma>1 (Suc n)", "then"], ["proof (chain)\npicking this:\n  \\<sigma>12 \\<in> small P \\<sigma> \\<and>\n  \\<sigma>1 \\<in> small_nstep P \\<sigma>12 n", "show \"\\<exists>\\<sigma>1. \\<sigma>1 \\<in> small P \\<sigma> \\<and> \\<sigma>' \\<in> small_nstep P \\<sigma>1 (Suc n)\""], ["proof (prove)\nusing this:\n  \\<sigma>12 \\<in> small P \\<sigma> \\<and>\n  \\<sigma>1 \\<in> small_nstep P \\<sigma>12 n\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>1.\n       \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n       \\<sigma>' \\<in> small_nstep P \\<sigma>1 (Suc n)", "using Sucnstep"], ["proof (prove)\nusing this:\n  \\<sigma>12 \\<in> small P \\<sigma> \\<and>\n  \\<sigma>1 \\<in> small_nstep P \\<sigma>12 n\n  \\<sigma>1 \\<in> small_nstep P \\<sigma> (Suc n)\n  \\<sigma>' \\<in> small P \\<sigma>1\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>1.\n       \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n       \\<sigma>' \\<in> small_nstep P \\<sigma>1 (Suc n)", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>\\<sigma>1.\n     \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n     \\<sigma>' \\<in> small_nstep P \\<sigma>1 (Suc n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?\\<sigma>' \\<in> small_nstep P \\<sigma> (Suc (Suc n)) \\<Longrightarrow>\n  \\<exists>\\<sigma>1.\n     \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n     ?\\<sigma>' \\<in> small_nstep P \\<sigma>1 (Suc n)\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma>.\n       small_nstep P \\<sigma> (Suc 0) =\n       {\\<sigma>2.\n        \\<exists>\\<sigma>1.\n           \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n           \\<sigma>2 \\<in> small_nstep P \\<sigma>1 0}\n 2. \\<And>n \\<sigma>.\n       (\\<And>\\<sigma>.\n           small_nstep P \\<sigma> (Suc n) =\n           {\\<sigma>2.\n            \\<exists>\\<sigma>1.\n               \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n               \\<sigma>2 \\<in> small_nstep P \\<sigma>1 n}) \\<Longrightarrow>\n       small_nstep P \\<sigma> (Suc (Suc n)) =\n       {\\<sigma>2.\n        \\<exists>\\<sigma>1.\n           \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n           \\<sigma>2 \\<in> small_nstep P \\<sigma>1 (Suc n)}", "have left: \"\\<And>\\<sigma>' . \\<exists>\\<sigma>1. \\<sigma>1 \\<in> small P \\<sigma> \\<and> \\<sigma>' \\<in> small_nstep P \\<sigma>1 (Suc n)\n    \\<Longrightarrow> \\<sigma>' \\<in> small_nstep P \\<sigma> (Suc(Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>''.\n       \\<exists>\\<sigma>1.\n          \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n          \\<sigma>'' \\<in> small_nstep P \\<sigma>1 (Suc n) \\<Longrightarrow>\n       \\<sigma>'' \\<in> small_nstep P \\<sigma> (Suc (Suc n))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>''.\n       \\<exists>\\<sigma>1.\n          \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n          \\<sigma>'' \\<in> small_nstep P \\<sigma>1 (Suc n) \\<Longrightarrow>\n       \\<sigma>'' \\<in> small_nstep P \\<sigma> (Suc (Suc n))", "fix \\<sigma>'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>''.\n       \\<exists>\\<sigma>1.\n          \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n          \\<sigma>'' \\<in> small_nstep P \\<sigma>1 (Suc n) \\<Longrightarrow>\n       \\<sigma>'' \\<in> small_nstep P \\<sigma> (Suc (Suc n))", "assume \"\\<exists>\\<sigma>1. \\<sigma>1 \\<in> small P \\<sigma> \\<and> \\<sigma>' \\<in> small_nstep P \\<sigma>1 (Suc n)\""], ["proof (state)\nthis:\n  \\<exists>\\<sigma>1.\n     \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n     \\<sigma>' \\<in> small_nstep P \\<sigma>1 (Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>''.\n       \\<exists>\\<sigma>1.\n          \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n          \\<sigma>'' \\<in> small_nstep P \\<sigma>1 (Suc n) \\<Longrightarrow>\n       \\<sigma>'' \\<in> small_nstep P \\<sigma> (Suc (Suc n))", "then"], ["proof (chain)\npicking this:\n  \\<exists>\\<sigma>1.\n     \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n     \\<sigma>' \\<in> small_nstep P \\<sigma>1 (Suc n)", "obtain \\<sigma>1 where Sucnstep: \"\\<sigma>1 \\<in> small P \\<sigma>\" \"\\<sigma>' \\<in> small_nstep P \\<sigma>1 (Suc n)\""], ["proof (prove)\nusing this:\n  \\<exists>\\<sigma>1.\n     \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n     \\<sigma>' \\<in> small_nstep P \\<sigma>1 (Suc n)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>1.\n        \\<lbrakk>\\<sigma>1 \\<in> small P \\<sigma>;\n         \\<sigma>' \\<in> small_nstep P \\<sigma>1 (Suc n)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  \\<sigma>1 \\<in> small P \\<sigma>\n  \\<sigma>' \\<in> small_nstep P \\<sigma>1 (Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>''.\n       \\<exists>\\<sigma>1.\n          \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n          \\<sigma>'' \\<in> small_nstep P \\<sigma>1 (Suc n) \\<Longrightarrow>\n       \\<sigma>'' \\<in> small_nstep P \\<sigma> (Suc (Suc n))", "obtain \\<sigma>12 where nstep: \"\\<sigma>12 \\<in> small_nstep P \\<sigma>1 n \\<and> \\<sigma>' \\<in> small P \\<sigma>12\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>12.\n        \\<sigma>12 \\<in> small_nstep P \\<sigma>1 n \\<and>\n        \\<sigma>' \\<in> small P \\<sigma>12 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using Sucnstep(2)"], ["proof (prove)\nusing this:\n  \\<sigma>' \\<in> small_nstep P \\<sigma>1 (Suc n)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>12.\n        \\<sigma>12 \\<in> small_nstep P \\<sigma>1 n \\<and>\n        \\<sigma>' \\<in> small P \\<sigma>12 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<sigma>12 \\<in> small_nstep P \\<sigma>1 n \\<and>\n  \\<sigma>' \\<in> small P \\<sigma>12\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>''.\n       \\<exists>\\<sigma>1.\n          \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n          \\<sigma>'' \\<in> small_nstep P \\<sigma>1 (Suc n) \\<Longrightarrow>\n       \\<sigma>'' \\<in> small_nstep P \\<sigma> (Suc (Suc n))", "then"], ["proof (chain)\npicking this:\n  \\<sigma>12 \\<in> small_nstep P \\<sigma>1 n \\<and>\n  \\<sigma>' \\<in> small P \\<sigma>12", "show \"\\<sigma>' \\<in> small_nstep P \\<sigma> (Suc(Suc n))\""], ["proof (prove)\nusing this:\n  \\<sigma>12 \\<in> small_nstep P \\<sigma>1 n \\<and>\n  \\<sigma>' \\<in> small P \\<sigma>12\n\ngoal (1 subgoal):\n 1. \\<sigma>' \\<in> small_nstep P \\<sigma> (Suc (Suc n))", "using Suc Sucnstep"], ["proof (prove)\nusing this:\n  \\<sigma>12 \\<in> small_nstep P \\<sigma>1 n \\<and>\n  \\<sigma>' \\<in> small P \\<sigma>12\n  small_nstep P ?\\<sigma> (Suc n) =\n  {\\<sigma>2.\n   \\<exists>\\<sigma>1.\n      \\<sigma>1 \\<in> small P ?\\<sigma> \\<and>\n      \\<sigma>2 \\<in> small_nstep P \\<sigma>1 n}\n  \\<sigma>1 \\<in> small P \\<sigma>\n  \\<sigma>' \\<in> small_nstep P \\<sigma>1 (Suc n)\n\ngoal (1 subgoal):\n 1. \\<sigma>' \\<in> small_nstep P \\<sigma> (Suc (Suc n))", "by fastforce"], ["proof (state)\nthis:\n  \\<sigma>' \\<in> small_nstep P \\<sigma> (Suc (Suc n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>\\<sigma>1.\n     \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n     ?\\<sigma>' \\<in> small_nstep P \\<sigma>1 (Suc n) \\<Longrightarrow>\n  ?\\<sigma>' \\<in> small_nstep P \\<sigma> (Suc (Suc n))\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma>.\n       small_nstep P \\<sigma> (Suc 0) =\n       {\\<sigma>2.\n        \\<exists>\\<sigma>1.\n           \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n           \\<sigma>2 \\<in> small_nstep P \\<sigma>1 0}\n 2. \\<And>n \\<sigma>.\n       (\\<And>\\<sigma>.\n           small_nstep P \\<sigma> (Suc n) =\n           {\\<sigma>2.\n            \\<exists>\\<sigma>1.\n               \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n               \\<sigma>2 \\<in> small_nstep P \\<sigma>1 n}) \\<Longrightarrow>\n       small_nstep P \\<sigma> (Suc (Suc n)) =\n       {\\<sigma>2.\n        \\<exists>\\<sigma>1.\n           \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n           \\<sigma>2 \\<in> small_nstep P \\<sigma>1 (Suc n)}", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. small_nstep P \\<sigma> (Suc (Suc n)) =\n    {\\<sigma>2.\n     \\<exists>\\<sigma>1.\n        \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n        \\<sigma>2 \\<in> small_nstep P \\<sigma>1 (Suc n)}", "using right left"], ["proof (prove)\nusing this:\n  ?\\<sigma>' \\<in> small_nstep P \\<sigma> (Suc (Suc n)) \\<Longrightarrow>\n  \\<exists>\\<sigma>1.\n     \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n     ?\\<sigma>' \\<in> small_nstep P \\<sigma>1 (Suc n)\n  \\<exists>\\<sigma>1.\n     \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n     ?\\<sigma>' \\<in> small_nstep P \\<sigma>1 (Suc n) \\<Longrightarrow>\n  ?\\<sigma>' \\<in> small_nstep P \\<sigma> (Suc (Suc n))\n\ngoal (1 subgoal):\n 1. small_nstep P \\<sigma> (Suc (Suc n)) =\n    {\\<sigma>2.\n     \\<exists>\\<sigma>1.\n        \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n        \\<sigma>2 \\<in> small_nstep P \\<sigma>1 (Suc n)}", "by fast"], ["proof (state)\nthis:\n  small_nstep P \\<sigma> (Suc (Suc n)) =\n  {\\<sigma>2.\n   \\<exists>\\<sigma>1.\n      \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n      \\<sigma>2 \\<in> small_nstep P \\<sigma>1 (Suc n)}\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>.\n       small_nstep P \\<sigma> (Suc 0) =\n       {\\<sigma>2.\n        \\<exists>\\<sigma>1.\n           \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n           \\<sigma>2 \\<in> small_nstep P \\<sigma>1 0}", "qed(simp)"], ["", "lemma small_nstep_SucD:\nassumes \"\\<sigma>' \\<in> small_nstep P \\<sigma> (Suc n)\"\nshows \"\\<exists>\\<sigma>1. \\<sigma>1 \\<in> small P \\<sigma> \\<and> \\<sigma>' \\<in> small_nstep P \\<sigma>1 n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>1.\n       \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n       \\<sigma>' \\<in> small_nstep P \\<sigma>1 n", "using small_nstep_Rec2 case_prodD assms"], ["proof (prove)\nusing this:\n  small_nstep ?P ?\\<sigma> (Suc ?n) =\n  {\\<sigma>2.\n   \\<exists>\\<sigma>1.\n      \\<sigma>1 \\<in> small ?P ?\\<sigma> \\<and>\n      \\<sigma>2 \\<in> small_nstep ?P \\<sigma>1 ?n}\n  case (?a, ?b) of (c, d) \\<Rightarrow> ?f c d \\<Longrightarrow> ?f ?a ?b\n  \\<sigma>' \\<in> small_nstep P \\<sigma> (Suc n)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>1.\n       \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n       \\<sigma>' \\<in> small_nstep P \\<sigma>1 n", "by fastforce"], ["", "lemma small_nstep_Suc_nend: \"\\<sigma>' \\<in> small_nstep P \\<sigma> (Suc n1) \\<Longrightarrow> \\<sigma> \\<notin> endset\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma>' \\<in> small_nstep P \\<sigma> (Suc n1) \\<Longrightarrow>\n    \\<sigma> \\<notin> endset", "using endset_final small_nstep_SucD"], ["proof (prove)\nusing this:\n  ?\\<sigma> \\<in> endset \\<Longrightarrow>\n  \\<forall>P. small P ?\\<sigma> = {}\n  ?\\<sigma>' \\<in> small_nstep ?P ?\\<sigma> (Suc ?n) \\<Longrightarrow>\n  \\<exists>\\<sigma>1.\n     \\<sigma>1 \\<in> small ?P ?\\<sigma> \\<and>\n     ?\\<sigma>' \\<in> small_nstep ?P \\<sigma>1 ?n\n\ngoal (1 subgoal):\n 1. \\<sigma>' \\<in> small_nstep P \\<sigma> (Suc n1) \\<Longrightarrow>\n    \\<sigma> \\<notin> endset", "by fastforce"], ["", "subsection \"Extending @{term small} to a big-step semantics\""], ["", "definition big :: \"'prog \\<Rightarrow> 'state \\<Rightarrow> 'state set\" where\n\"big P \\<sigma> \\<equiv> { \\<sigma>'. \\<exists>n. \\<sigma>' \\<in> small_nstep P \\<sigma> n \\<and> \\<sigma>' \\<in> endset }\""], ["", "lemma bigI:\n \"\\<lbrakk> \\<sigma>' \\<in> small_nstep P \\<sigma> n; \\<sigma>' \\<in> endset \\<rbrakk> \\<Longrightarrow> \\<sigma>' \\<in> big P \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<sigma>' \\<in> small_nstep P \\<sigma> n;\n     \\<sigma>' \\<in> endset\\<rbrakk>\n    \\<Longrightarrow> \\<sigma>' \\<in> big P \\<sigma>", "by (fastforce simp add: big_def)"], ["", "lemma bigD:\n \"\\<lbrakk> \\<sigma>' \\<in> big P \\<sigma> \\<rbrakk> \\<Longrightarrow> \\<exists>n. \\<sigma>' \\<in> small_nstep P \\<sigma> n \\<and> \\<sigma>' \\<in> endset\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma>' \\<in> big P \\<sigma> \\<Longrightarrow>\n    \\<exists>n.\n       \\<sigma>' \\<in> small_nstep P \\<sigma> n \\<and>\n       \\<sigma>' \\<in> endset", "by (simp add: big_def)"], ["", "lemma big_def2:\n \"\\<sigma>' \\<in> big P \\<sigma> \\<longleftrightarrow> (\\<exists>n. \\<sigma>' \\<in> small_nstep P \\<sigma> n \\<and> \\<sigma>' \\<in> endset)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<sigma>' \\<in> big P \\<sigma>) =\n    (\\<exists>n.\n        \\<sigma>' \\<in> small_nstep P \\<sigma> n \\<and>\n        \\<sigma>' \\<in> endset)", "proof(rule iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<sigma>' \\<in> big P \\<sigma> \\<Longrightarrow>\n    \\<exists>n.\n       \\<sigma>' \\<in> small_nstep P \\<sigma> n \\<and>\n       \\<sigma>' \\<in> endset\n 2. \\<exists>n.\n       \\<sigma>' \\<in> small_nstep P \\<sigma> n \\<and>\n       \\<sigma>' \\<in> endset \\<Longrightarrow>\n    \\<sigma>' \\<in> big P \\<sigma>", "assume \"\\<sigma>' \\<in> big P \\<sigma>\""], ["proof (state)\nthis:\n  \\<sigma>' \\<in> big P \\<sigma>\n\ngoal (2 subgoals):\n 1. \\<sigma>' \\<in> big P \\<sigma> \\<Longrightarrow>\n    \\<exists>n.\n       \\<sigma>' \\<in> small_nstep P \\<sigma> n \\<and>\n       \\<sigma>' \\<in> endset\n 2. \\<exists>n.\n       \\<sigma>' \\<in> small_nstep P \\<sigma> n \\<and>\n       \\<sigma>' \\<in> endset \\<Longrightarrow>\n    \\<sigma>' \\<in> big P \\<sigma>", "then"], ["proof (chain)\npicking this:\n  \\<sigma>' \\<in> big P \\<sigma>", "show \"\\<exists>n. \\<sigma>' \\<in> small_nstep P \\<sigma> n \\<and> \\<sigma>' \\<in> endset\""], ["proof (prove)\nusing this:\n  \\<sigma>' \\<in> big P \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       \\<sigma>' \\<in> small_nstep P \\<sigma> n \\<and>\n       \\<sigma>' \\<in> endset", "using bigD big_def"], ["proof (prove)\nusing this:\n  \\<sigma>' \\<in> big P \\<sigma>\n  ?\\<sigma>' \\<in> big ?P ?\\<sigma> \\<Longrightarrow>\n  \\<exists>n.\n     ?\\<sigma>' \\<in> small_nstep ?P ?\\<sigma> n \\<and>\n     ?\\<sigma>' \\<in> endset\n  big ?P ?\\<sigma> \\<equiv>\n  {\\<sigma>'.\n   \\<exists>n.\n      \\<sigma>' \\<in> small_nstep ?P ?\\<sigma> n \\<and>\n      \\<sigma>' \\<in> endset}\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       \\<sigma>' \\<in> small_nstep P \\<sigma> n \\<and>\n       \\<sigma>' \\<in> endset", "by auto"], ["proof (state)\nthis:\n  \\<exists>n.\n     \\<sigma>' \\<in> small_nstep P \\<sigma> n \\<and> \\<sigma>' \\<in> endset\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       \\<sigma>' \\<in> small_nstep P \\<sigma> n \\<and>\n       \\<sigma>' \\<in> endset \\<Longrightarrow>\n    \\<sigma>' \\<in> big P \\<sigma>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>n.\n       \\<sigma>' \\<in> small_nstep P \\<sigma> n \\<and>\n       \\<sigma>' \\<in> endset \\<Longrightarrow>\n    \\<sigma>' \\<in> big P \\<sigma>", "assume \"\\<exists>n. \\<sigma>' \\<in> small_nstep P \\<sigma> n \\<and> \\<sigma>' \\<in> endset\""], ["proof (state)\nthis:\n  \\<exists>n.\n     \\<sigma>' \\<in> small_nstep P \\<sigma> n \\<and> \\<sigma>' \\<in> endset\n\ngoal (1 subgoal):\n 1. \\<exists>n.\n       \\<sigma>' \\<in> small_nstep P \\<sigma> n \\<and>\n       \\<sigma>' \\<in> endset \\<Longrightarrow>\n    \\<sigma>' \\<in> big P \\<sigma>", "then"], ["proof (chain)\npicking this:\n  \\<exists>n.\n     \\<sigma>' \\<in> small_nstep P \\<sigma> n \\<and> \\<sigma>' \\<in> endset", "show \"\\<sigma>' \\<in> big P \\<sigma>\""], ["proof (prove)\nusing this:\n  \\<exists>n.\n     \\<sigma>' \\<in> small_nstep P \\<sigma> n \\<and> \\<sigma>' \\<in> endset\n\ngoal (1 subgoal):\n 1. \\<sigma>' \\<in> big P \\<sigma>", "using big_def big_def"], ["proof (prove)\nusing this:\n  \\<exists>n.\n     \\<sigma>' \\<in> small_nstep P \\<sigma> n \\<and> \\<sigma>' \\<in> endset\n  big ?P ?\\<sigma> \\<equiv>\n  {\\<sigma>'.\n   \\<exists>n.\n      \\<sigma>' \\<in> small_nstep ?P ?\\<sigma> n \\<and>\n      \\<sigma>' \\<in> endset}\n  big ?P ?\\<sigma> \\<equiv>\n  {\\<sigma>'.\n   \\<exists>n.\n      \\<sigma>' \\<in> small_nstep ?P ?\\<sigma> n \\<and>\n      \\<sigma>' \\<in> endset}\n\ngoal (1 subgoal):\n 1. \\<sigma>' \\<in> big P \\<sigma>", "by auto"], ["proof (state)\nthis:\n  \\<sigma>' \\<in> big P \\<sigma>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma big_stepD:\nassumes big: \"\\<sigma>' \\<in> big P \\<sigma>\" and nend: \"\\<sigma> \\<notin> endset\"\nshows \"\\<exists>\\<sigma>1. \\<sigma>1 \\<in> small P \\<sigma> \\<and> \\<sigma>' \\<in> big P \\<sigma>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>1.\n       \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n       \\<sigma>' \\<in> big P \\<sigma>1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>1.\n       \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n       \\<sigma>' \\<in> big P \\<sigma>1", "obtain n where n: \"\\<sigma>' \\<in> small_nstep P \\<sigma> n\" \"\\<sigma>' \\<in> endset\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>\\<sigma>' \\<in> small_nstep P \\<sigma> n;\n         \\<sigma>' \\<in> endset\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using big_def2 big"], ["proof (prove)\nusing this:\n  (?\\<sigma>' \\<in> big ?P ?\\<sigma>) =\n  (\\<exists>n.\n      ?\\<sigma>' \\<in> small_nstep ?P ?\\<sigma> n \\<and>\n      ?\\<sigma>' \\<in> endset)\n  \\<sigma>' \\<in> big P \\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>\\<sigma>' \\<in> small_nstep P \\<sigma> n;\n         \\<sigma>' \\<in> endset\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<sigma>' \\<in> small_nstep P \\<sigma> n\n  \\<sigma>' \\<in> endset\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>1.\n       \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n       \\<sigma>' \\<in> big P \\<sigma>1", "then"], ["proof (chain)\npicking this:\n  \\<sigma>' \\<in> small_nstep P \\<sigma> n\n  \\<sigma>' \\<in> endset", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<sigma>' \\<in> small_nstep P \\<sigma> n\n  \\<sigma>' \\<in> endset\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>1.\n       \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n       \\<sigma>' \\<in> big P \\<sigma>1", "using small_nstep_SucD nend big_def2"], ["proof (prove)\nusing this:\n  \\<sigma>' \\<in> small_nstep P \\<sigma> n\n  \\<sigma>' \\<in> endset\n  ?\\<sigma>' \\<in> small_nstep ?P ?\\<sigma> (Suc ?n) \\<Longrightarrow>\n  \\<exists>\\<sigma>1.\n     \\<sigma>1 \\<in> small ?P ?\\<sigma> \\<and>\n     ?\\<sigma>' \\<in> small_nstep ?P \\<sigma>1 ?n\n  \\<sigma> \\<notin> endset\n  (?\\<sigma>' \\<in> big ?P ?\\<sigma>) =\n  (\\<exists>n.\n      ?\\<sigma>' \\<in> small_nstep ?P ?\\<sigma> n \\<and>\n      ?\\<sigma>' \\<in> endset)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>1.\n       \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n       \\<sigma>' \\<in> big P \\<sigma>1", "by(cases n, simp) blast"], ["proof (state)\nthis:\n  \\<exists>\\<sigma>1.\n     \\<sigma>1 \\<in> small P \\<sigma> \\<and> \\<sigma>' \\<in> big P \\<sigma>1\n\ngoal:\nNo subgoals!", "qed"], ["", "(***)"], ["", "lemma small_nstep_det_last_eq:\nassumes det: \"\\<forall>\\<sigma>. small P \\<sigma> = {} \\<or> (\\<exists>\\<sigma>'. small P \\<sigma> = {\\<sigma>'})\"\nshows \"\\<lbrakk> \\<sigma>' \\<in> big P \\<sigma>; \\<sigma>' \\<in> small_nstep P \\<sigma> n; \\<sigma>' \\<in> small_nstep P \\<sigma> n' \\<rbrakk> \\<Longrightarrow> n = n'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<sigma>' \\<in> big P \\<sigma>;\n     \\<sigma>' \\<in> small_nstep P \\<sigma> n;\n     \\<sigma>' \\<in> small_nstep P \\<sigma> n'\\<rbrakk>\n    \\<Longrightarrow> n = n'", "proof(induct n arbitrary: n' \\<sigma> \\<sigma>')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>n' \\<sigma> \\<sigma>'.\n       \\<lbrakk>\\<sigma>' \\<in> big P \\<sigma>;\n        \\<sigma>' \\<in> small_nstep P \\<sigma> 0;\n        \\<sigma>' \\<in> small_nstep P \\<sigma> n'\\<rbrakk>\n       \\<Longrightarrow> 0 = n'\n 2. \\<And>n n' \\<sigma> \\<sigma>'.\n       \\<lbrakk>\\<And>n' \\<sigma> \\<sigma>'.\n                   \\<lbrakk>\\<sigma>' \\<in> big P \\<sigma>;\n                    \\<sigma>' \\<in> small_nstep P \\<sigma> n;\n                    \\<sigma>' \\<in> small_nstep P \\<sigma> n'\\<rbrakk>\n                   \\<Longrightarrow> n = n';\n        \\<sigma>' \\<in> big P \\<sigma>;\n        \\<sigma>' \\<in> small_nstep P \\<sigma> (Suc n);\n        \\<sigma>' \\<in> small_nstep P \\<sigma> n'\\<rbrakk>\n       \\<Longrightarrow> Suc n = n'", "case 0"], ["proof (state)\nthis:\n  \\<sigma>' \\<in> big P \\<sigma>\n  \\<sigma>' \\<in> small_nstep P \\<sigma> 0\n  \\<sigma>' \\<in> small_nstep P \\<sigma> n'\n\ngoal (2 subgoals):\n 1. \\<And>n' \\<sigma> \\<sigma>'.\n       \\<lbrakk>\\<sigma>' \\<in> big P \\<sigma>;\n        \\<sigma>' \\<in> small_nstep P \\<sigma> 0;\n        \\<sigma>' \\<in> small_nstep P \\<sigma> n'\\<rbrakk>\n       \\<Longrightarrow> 0 = n'\n 2. \\<And>n n' \\<sigma> \\<sigma>'.\n       \\<lbrakk>\\<And>n' \\<sigma> \\<sigma>'.\n                   \\<lbrakk>\\<sigma>' \\<in> big P \\<sigma>;\n                    \\<sigma>' \\<in> small_nstep P \\<sigma> n;\n                    \\<sigma>' \\<in> small_nstep P \\<sigma> n'\\<rbrakk>\n                   \\<Longrightarrow> n = n';\n        \\<sigma>' \\<in> big P \\<sigma>;\n        \\<sigma>' \\<in> small_nstep P \\<sigma> (Suc n);\n        \\<sigma>' \\<in> small_nstep P \\<sigma> n'\\<rbrakk>\n       \\<Longrightarrow> Suc n = n'", "have \"\\<sigma>' = \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma>' = \\<sigma>", "using \"0.prems\"(2) small_nstep_base"], ["proof (prove)\nusing this:\n  \\<sigma>' \\<in> small_nstep P \\<sigma> 0\n  small_nstep ?P ?\\<sigma> 0 = {?\\<sigma>}\n\ngoal (1 subgoal):\n 1. \\<sigma>' = \\<sigma>", "by blast"], ["proof (state)\nthis:\n  \\<sigma>' = \\<sigma>\n\ngoal (2 subgoals):\n 1. \\<And>n' \\<sigma> \\<sigma>'.\n       \\<lbrakk>\\<sigma>' \\<in> big P \\<sigma>;\n        \\<sigma>' \\<in> small_nstep P \\<sigma> 0;\n        \\<sigma>' \\<in> small_nstep P \\<sigma> n'\\<rbrakk>\n       \\<Longrightarrow> 0 = n'\n 2. \\<And>n n' \\<sigma> \\<sigma>'.\n       \\<lbrakk>\\<And>n' \\<sigma> \\<sigma>'.\n                   \\<lbrakk>\\<sigma>' \\<in> big P \\<sigma>;\n                    \\<sigma>' \\<in> small_nstep P \\<sigma> n;\n                    \\<sigma>' \\<in> small_nstep P \\<sigma> n'\\<rbrakk>\n                   \\<Longrightarrow> n = n';\n        \\<sigma>' \\<in> big P \\<sigma>;\n        \\<sigma>' \\<in> small_nstep P \\<sigma> (Suc n);\n        \\<sigma>' \\<in> small_nstep P \\<sigma> n'\\<rbrakk>\n       \\<Longrightarrow> Suc n = n'", "then"], ["proof (chain)\npicking this:\n  \\<sigma>' = \\<sigma>", "have endset: \"\\<sigma> \\<in> endset\""], ["proof (prove)\nusing this:\n  \\<sigma>' = \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<in> endset", "using \"0.prems\"(1) bigD"], ["proof (prove)\nusing this:\n  \\<sigma>' = \\<sigma>\n  \\<sigma>' \\<in> big P \\<sigma>\n  ?\\<sigma>' \\<in> big ?P ?\\<sigma> \\<Longrightarrow>\n  \\<exists>n.\n     ?\\<sigma>' \\<in> small_nstep ?P ?\\<sigma> n \\<and>\n     ?\\<sigma>' \\<in> endset\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<in> endset", "by blast"], ["proof (state)\nthis:\n  \\<sigma> \\<in> endset\n\ngoal (2 subgoals):\n 1. \\<And>n' \\<sigma> \\<sigma>'.\n       \\<lbrakk>\\<sigma>' \\<in> big P \\<sigma>;\n        \\<sigma>' \\<in> small_nstep P \\<sigma> 0;\n        \\<sigma>' \\<in> small_nstep P \\<sigma> n'\\<rbrakk>\n       \\<Longrightarrow> 0 = n'\n 2. \\<And>n n' \\<sigma> \\<sigma>'.\n       \\<lbrakk>\\<And>n' \\<sigma> \\<sigma>'.\n                   \\<lbrakk>\\<sigma>' \\<in> big P \\<sigma>;\n                    \\<sigma>' \\<in> small_nstep P \\<sigma> n;\n                    \\<sigma>' \\<in> small_nstep P \\<sigma> n'\\<rbrakk>\n                   \\<Longrightarrow> n = n';\n        \\<sigma>' \\<in> big P \\<sigma>;\n        \\<sigma>' \\<in> small_nstep P \\<sigma> (Suc n);\n        \\<sigma>' \\<in> small_nstep P \\<sigma> n'\\<rbrakk>\n       \\<Longrightarrow> Suc n = n'", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 = n'", "proof(cases n')"], ["proof (state)\ngoal (2 subgoals):\n 1. n' = 0 \\<Longrightarrow> 0 = n'\n 2. \\<And>nat. n' = Suc nat \\<Longrightarrow> 0 = n'", "case Suc"], ["proof (state)\nthis:\n  n' = Suc nat_\n\ngoal (2 subgoals):\n 1. n' = 0 \\<Longrightarrow> 0 = n'\n 2. \\<And>nat. n' = Suc nat \\<Longrightarrow> 0 = n'", "then"], ["proof (chain)\npicking this:\n  n' = Suc nat_", "show ?thesis"], ["proof (prove)\nusing this:\n  n' = Suc nat_\n\ngoal (1 subgoal):\n 1. 0 = n'", "using \"0.prems\"(3) small_nstep_SucD endset_final[OF endset]"], ["proof (prove)\nusing this:\n  n' = Suc nat_\n  \\<sigma>' \\<in> small_nstep P \\<sigma> n'\n  ?\\<sigma>' \\<in> small_nstep ?P ?\\<sigma> (Suc ?n) \\<Longrightarrow>\n  \\<exists>\\<sigma>1.\n     \\<sigma>1 \\<in> small ?P ?\\<sigma> \\<and>\n     ?\\<sigma>' \\<in> small_nstep ?P \\<sigma>1 ?n\n  \\<forall>P. small P \\<sigma> = {}\n\ngoal (1 subgoal):\n 1. 0 = n'", "by blast"], ["proof (state)\nthis:\n  0 = n'\n\ngoal (1 subgoal):\n 1. n' = 0 \\<Longrightarrow> 0 = n'", "qed(simp)"], ["proof (state)\nthis:\n  0 = n'\n\ngoal (1 subgoal):\n 1. \\<And>n n' \\<sigma> \\<sigma>'.\n       \\<lbrakk>\\<And>n' \\<sigma> \\<sigma>'.\n                   \\<lbrakk>\\<sigma>' \\<in> big P \\<sigma>;\n                    \\<sigma>' \\<in> small_nstep P \\<sigma> n;\n                    \\<sigma>' \\<in> small_nstep P \\<sigma> n'\\<rbrakk>\n                   \\<Longrightarrow> n = n';\n        \\<sigma>' \\<in> big P \\<sigma>;\n        \\<sigma>' \\<in> small_nstep P \\<sigma> (Suc n);\n        \\<sigma>' \\<in> small_nstep P \\<sigma> n'\\<rbrakk>\n       \\<Longrightarrow> Suc n = n'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n n' \\<sigma> \\<sigma>'.\n       \\<lbrakk>\\<And>n' \\<sigma> \\<sigma>'.\n                   \\<lbrakk>\\<sigma>' \\<in> big P \\<sigma>;\n                    \\<sigma>' \\<in> small_nstep P \\<sigma> n;\n                    \\<sigma>' \\<in> small_nstep P \\<sigma> n'\\<rbrakk>\n                   \\<Longrightarrow> n = n';\n        \\<sigma>' \\<in> big P \\<sigma>;\n        \\<sigma>' \\<in> small_nstep P \\<sigma> (Suc n);\n        \\<sigma>' \\<in> small_nstep P \\<sigma> n'\\<rbrakk>\n       \\<Longrightarrow> Suc n = n'", "case (Suc n1)"], ["proof (state)\nthis:\n  \\<lbrakk>?\\<sigma>' \\<in> big P ?\\<sigma>;\n   ?\\<sigma>' \\<in> small_nstep P ?\\<sigma> n1;\n   ?\\<sigma>' \\<in> small_nstep P ?\\<sigma> ?n'\\<rbrakk>\n  \\<Longrightarrow> n1 = ?n'\n  \\<sigma>' \\<in> big P \\<sigma>\n  \\<sigma>' \\<in> small_nstep P \\<sigma> (Suc n1)\n  \\<sigma>' \\<in> small_nstep P \\<sigma> n'\n\ngoal (1 subgoal):\n 1. \\<And>n n' \\<sigma> \\<sigma>'.\n       \\<lbrakk>\\<And>n' \\<sigma> \\<sigma>'.\n                   \\<lbrakk>\\<sigma>' \\<in> big P \\<sigma>;\n                    \\<sigma>' \\<in> small_nstep P \\<sigma> n;\n                    \\<sigma>' \\<in> small_nstep P \\<sigma> n'\\<rbrakk>\n                   \\<Longrightarrow> n = n';\n        \\<sigma>' \\<in> big P \\<sigma>;\n        \\<sigma>' \\<in> small_nstep P \\<sigma> (Suc n);\n        \\<sigma>' \\<in> small_nstep P \\<sigma> n'\\<rbrakk>\n       \\<Longrightarrow> Suc n = n'", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?\\<sigma>' \\<in> big P ?\\<sigma>;\n   ?\\<sigma>' \\<in> small_nstep P ?\\<sigma> n1;\n   ?\\<sigma>' \\<in> small_nstep P ?\\<sigma> ?n'\\<rbrakk>\n  \\<Longrightarrow> n1 = ?n'\n  \\<sigma>' \\<in> big P \\<sigma>\n  \\<sigma>' \\<in> small_nstep P \\<sigma> (Suc n1)\n  \\<sigma>' \\<in> small_nstep P \\<sigma> n'", "have endset: \"\\<sigma>' \\<in> endset\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<sigma>' \\<in> big P ?\\<sigma>;\n   ?\\<sigma>' \\<in> small_nstep P ?\\<sigma> n1;\n   ?\\<sigma>' \\<in> small_nstep P ?\\<sigma> ?n'\\<rbrakk>\n  \\<Longrightarrow> n1 = ?n'\n  \\<sigma>' \\<in> big P \\<sigma>\n  \\<sigma>' \\<in> small_nstep P \\<sigma> (Suc n1)\n  \\<sigma>' \\<in> small_nstep P \\<sigma> n'\n\ngoal (1 subgoal):\n 1. \\<sigma>' \\<in> endset", "using Suc.prems(1) bigD"], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<sigma>' \\<in> big P ?\\<sigma>;\n   ?\\<sigma>' \\<in> small_nstep P ?\\<sigma> n1;\n   ?\\<sigma>' \\<in> small_nstep P ?\\<sigma> ?n'\\<rbrakk>\n  \\<Longrightarrow> n1 = ?n'\n  \\<sigma>' \\<in> big P \\<sigma>\n  \\<sigma>' \\<in> small_nstep P \\<sigma> (Suc n1)\n  \\<sigma>' \\<in> small_nstep P \\<sigma> n'\n  \\<sigma>' \\<in> big P \\<sigma>\n  ?\\<sigma>' \\<in> big ?P ?\\<sigma> \\<Longrightarrow>\n  \\<exists>n.\n     ?\\<sigma>' \\<in> small_nstep ?P ?\\<sigma> n \\<and>\n     ?\\<sigma>' \\<in> endset\n\ngoal (1 subgoal):\n 1. \\<sigma>' \\<in> endset", "by blast"], ["proof (state)\nthis:\n  \\<sigma>' \\<in> endset\n\ngoal (1 subgoal):\n 1. \\<And>n n' \\<sigma> \\<sigma>'.\n       \\<lbrakk>\\<And>n' \\<sigma> \\<sigma>'.\n                   \\<lbrakk>\\<sigma>' \\<in> big P \\<sigma>;\n                    \\<sigma>' \\<in> small_nstep P \\<sigma> n;\n                    \\<sigma>' \\<in> small_nstep P \\<sigma> n'\\<rbrakk>\n                   \\<Longrightarrow> n = n';\n        \\<sigma>' \\<in> big P \\<sigma>;\n        \\<sigma>' \\<in> small_nstep P \\<sigma> (Suc n);\n        \\<sigma>' \\<in> small_nstep P \\<sigma> n'\\<rbrakk>\n       \\<Longrightarrow> Suc n = n'", "have nend: \"\\<sigma> \\<notin> endset\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma> \\<notin> endset", "using small_nstep_Suc_nend[OF Suc.prems(2)]"], ["proof (prove)\nusing this:\n  \\<sigma> \\<notin> endset\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<notin> endset", "by simp"], ["proof (state)\nthis:\n  \\<sigma> \\<notin> endset\n\ngoal (1 subgoal):\n 1. \\<And>n n' \\<sigma> \\<sigma>'.\n       \\<lbrakk>\\<And>n' \\<sigma> \\<sigma>'.\n                   \\<lbrakk>\\<sigma>' \\<in> big P \\<sigma>;\n                    \\<sigma>' \\<in> small_nstep P \\<sigma> n;\n                    \\<sigma>' \\<in> small_nstep P \\<sigma> n'\\<rbrakk>\n                   \\<Longrightarrow> n = n';\n        \\<sigma>' \\<in> big P \\<sigma>;\n        \\<sigma>' \\<in> small_nstep P \\<sigma> (Suc n);\n        \\<sigma>' \\<in> small_nstep P \\<sigma> n'\\<rbrakk>\n       \\<Longrightarrow> Suc n = n'", "then"], ["proof (chain)\npicking this:\n  \\<sigma> \\<notin> endset", "have neq: \"\\<sigma>' \\<noteq> \\<sigma>\""], ["proof (prove)\nusing this:\n  \\<sigma> \\<notin> endset\n\ngoal (1 subgoal):\n 1. \\<sigma>' \\<noteq> \\<sigma>", "using endset"], ["proof (prove)\nusing this:\n  \\<sigma> \\<notin> endset\n  \\<sigma>' \\<in> endset\n\ngoal (1 subgoal):\n 1. \\<sigma>' \\<noteq> \\<sigma>", "by auto"], ["proof (state)\nthis:\n  \\<sigma>' \\<noteq> \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>n n' \\<sigma> \\<sigma>'.\n       \\<lbrakk>\\<And>n' \\<sigma> \\<sigma>'.\n                   \\<lbrakk>\\<sigma>' \\<in> big P \\<sigma>;\n                    \\<sigma>' \\<in> small_nstep P \\<sigma> n;\n                    \\<sigma>' \\<in> small_nstep P \\<sigma> n'\\<rbrakk>\n                   \\<Longrightarrow> n = n';\n        \\<sigma>' \\<in> big P \\<sigma>;\n        \\<sigma>' \\<in> small_nstep P \\<sigma> (Suc n);\n        \\<sigma>' \\<in> small_nstep P \\<sigma> n'\\<rbrakk>\n       \\<Longrightarrow> Suc n = n'", "obtain \\<sigma>1 where \\<sigma>1: \"\\<sigma>1 \\<in> small P \\<sigma>\" \"\\<sigma>' \\<in> small_nstep P \\<sigma>1 n1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>1.\n        \\<lbrakk>\\<sigma>1 \\<in> small P \\<sigma>;\n         \\<sigma>' \\<in> small_nstep P \\<sigma>1 n1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using small_nstep_SucD[OF Suc.prems(2)]"], ["proof (prove)\nusing this:\n  \\<exists>\\<sigma>1.\n     \\<sigma>1 \\<in> small P \\<sigma> \\<and>\n     \\<sigma>' \\<in> small_nstep P \\<sigma>1 n1\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>1.\n        \\<lbrakk>\\<sigma>1 \\<in> small P \\<sigma>;\n         \\<sigma>' \\<in> small_nstep P \\<sigma>1 n1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  \\<sigma>1 \\<in> small P \\<sigma>\n  \\<sigma>' \\<in> small_nstep P \\<sigma>1 n1\n\ngoal (1 subgoal):\n 1. \\<And>n n' \\<sigma> \\<sigma>'.\n       \\<lbrakk>\\<And>n' \\<sigma> \\<sigma>'.\n                   \\<lbrakk>\\<sigma>' \\<in> big P \\<sigma>;\n                    \\<sigma>' \\<in> small_nstep P \\<sigma> n;\n                    \\<sigma>' \\<in> small_nstep P \\<sigma> n'\\<rbrakk>\n                   \\<Longrightarrow> n = n';\n        \\<sigma>' \\<in> big P \\<sigma>;\n        \\<sigma>' \\<in> small_nstep P \\<sigma> (Suc n);\n        \\<sigma>' \\<in> small_nstep P \\<sigma> n'\\<rbrakk>\n       \\<Longrightarrow> Suc n = n'", "then"], ["proof (chain)\npicking this:\n  \\<sigma>1 \\<in> small P \\<sigma>\n  \\<sigma>' \\<in> small_nstep P \\<sigma>1 n1", "have big: \"\\<sigma>' \\<in> big P \\<sigma>1\""], ["proof (prove)\nusing this:\n  \\<sigma>1 \\<in> small P \\<sigma>\n  \\<sigma>' \\<in> small_nstep P \\<sigma>1 n1\n\ngoal (1 subgoal):\n 1. \\<sigma>' \\<in> big P \\<sigma>1", "using endset"], ["proof (prove)\nusing this:\n  \\<sigma>1 \\<in> small P \\<sigma>\n  \\<sigma>' \\<in> small_nstep P \\<sigma>1 n1\n  \\<sigma>' \\<in> endset\n\ngoal (1 subgoal):\n 1. \\<sigma>' \\<in> big P \\<sigma>1", "by(auto simp: big_def)"], ["proof (state)\nthis:\n  \\<sigma>' \\<in> big P \\<sigma>1\n\ngoal (1 subgoal):\n 1. \\<And>n n' \\<sigma> \\<sigma>'.\n       \\<lbrakk>\\<And>n' \\<sigma> \\<sigma>'.\n                   \\<lbrakk>\\<sigma>' \\<in> big P \\<sigma>;\n                    \\<sigma>' \\<in> small_nstep P \\<sigma> n;\n                    \\<sigma>' \\<in> small_nstep P \\<sigma> n'\\<rbrakk>\n                   \\<Longrightarrow> n = n';\n        \\<sigma>' \\<in> big P \\<sigma>;\n        \\<sigma>' \\<in> small_nstep P \\<sigma> (Suc n);\n        \\<sigma>' \\<in> small_nstep P \\<sigma> n'\\<rbrakk>\n       \\<Longrightarrow> Suc n = n'", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc n1 = n'", "proof(cases n')"], ["proof (state)\ngoal (2 subgoals):\n 1. n' = 0 \\<Longrightarrow> Suc n1 = n'\n 2. \\<And>nat. n' = Suc nat \\<Longrightarrow> Suc n1 = n'", "case 0"], ["proof (state)\nthis:\n  n' = 0\n\ngoal (2 subgoals):\n 1. n' = 0 \\<Longrightarrow> Suc n1 = n'\n 2. \\<And>nat. n' = Suc nat \\<Longrightarrow> Suc n1 = n'", "then"], ["proof (chain)\npicking this:\n  n' = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  n' = 0\n\ngoal (1 subgoal):\n 1. Suc n1 = n'", "using neq Suc.prems(3)"], ["proof (prove)\nusing this:\n  n' = 0\n  \\<sigma>' \\<noteq> \\<sigma>\n  \\<sigma>' \\<in> small_nstep P \\<sigma> n'\n\ngoal (1 subgoal):\n 1. Suc n1 = n'", "using small_nstep_base"], ["proof (prove)\nusing this:\n  n' = 0\n  \\<sigma>' \\<noteq> \\<sigma>\n  \\<sigma>' \\<in> small_nstep P \\<sigma> n'\n  small_nstep ?P ?\\<sigma> 0 = {?\\<sigma>}\n\ngoal (1 subgoal):\n 1. Suc n1 = n'", "by blast"], ["proof (state)\nthis:\n  Suc n1 = n'\n\ngoal (1 subgoal):\n 1. \\<And>nat. n' = Suc nat \\<Longrightarrow> Suc n1 = n'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat. n' = Suc nat \\<Longrightarrow> Suc n1 = n'", "case Suc': (Suc n1')"], ["proof (state)\nthis:\n  n' = Suc n1'\n\ngoal (1 subgoal):\n 1. \\<And>nat. n' = Suc nat \\<Longrightarrow> Suc n1 = n'", "then"], ["proof (chain)\npicking this:\n  n' = Suc n1'", "obtain \\<sigma>1' where \\<sigma>1': \"\\<sigma>1' \\<in> small P \\<sigma>\" \"\\<sigma>' \\<in> small_nstep P \\<sigma>1' n1'\""], ["proof (prove)\nusing this:\n  n' = Suc n1'\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>1'.\n        \\<lbrakk>\\<sigma>1' \\<in> small P \\<sigma>;\n         \\<sigma>' \\<in> small_nstep P \\<sigma>1' n1'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using small_nstep_SucD[where \\<sigma>=\\<sigma> and \\<sigma>'=\\<sigma>' and n=n1'] Suc.prems(3)"], ["proof (prove)\nusing this:\n  n' = Suc n1'\n  \\<sigma>' \\<in> small_nstep ?P \\<sigma> (Suc n1') \\<Longrightarrow>\n  \\<exists>\\<sigma>1.\n     \\<sigma>1 \\<in> small ?P \\<sigma> \\<and>\n     \\<sigma>' \\<in> small_nstep ?P \\<sigma>1 n1'\n  \\<sigma>' \\<in> small_nstep P \\<sigma> n'\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>1'.\n        \\<lbrakk>\\<sigma>1' \\<in> small P \\<sigma>;\n         \\<sigma>' \\<in> small_nstep P \\<sigma>1' n1'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<sigma>1' \\<in> small P \\<sigma>\n  \\<sigma>' \\<in> small_nstep P \\<sigma>1' n1'\n\ngoal (1 subgoal):\n 1. \\<And>nat. n' = Suc nat \\<Longrightarrow> Suc n1 = n'", "then"], ["proof (chain)\npicking this:\n  \\<sigma>1' \\<in> small P \\<sigma>\n  \\<sigma>' \\<in> small_nstep P \\<sigma>1' n1'", "have \"\\<sigma>1=\\<sigma>1'\""], ["proof (prove)\nusing this:\n  \\<sigma>1' \\<in> small P \\<sigma>\n  \\<sigma>' \\<in> small_nstep P \\<sigma>1' n1'\n\ngoal (1 subgoal):\n 1. \\<sigma>1 = \\<sigma>1'", "using \\<sigma>1(1) det"], ["proof (prove)\nusing this:\n  \\<sigma>1' \\<in> small P \\<sigma>\n  \\<sigma>' \\<in> small_nstep P \\<sigma>1' n1'\n  \\<sigma>1 \\<in> small P \\<sigma>\n  \\<forall>\\<sigma>.\n     small P \\<sigma> = {} \\<or>\n     (\\<exists>\\<sigma>'. small P \\<sigma> = {\\<sigma>'})\n\ngoal (1 subgoal):\n 1. \\<sigma>1 = \\<sigma>1'", "by auto"], ["proof (state)\nthis:\n  \\<sigma>1 = \\<sigma>1'\n\ngoal (1 subgoal):\n 1. \\<And>nat. n' = Suc nat \\<Longrightarrow> Suc n1 = n'", "then"], ["proof (chain)\npicking this:\n  \\<sigma>1 = \\<sigma>1'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<sigma>1 = \\<sigma>1'\n\ngoal (1 subgoal):\n 1. Suc n1 = n'", "using Suc.hyps(1)[OF big \\<sigma>1(2)] \\<sigma>1'(2) Suc'"], ["proof (prove)\nusing this:\n  \\<sigma>1 = \\<sigma>1'\n  \\<sigma>' \\<in> small_nstep P \\<sigma>1 ?n' \\<Longrightarrow> n1 = ?n'\n  \\<sigma>' \\<in> small_nstep P \\<sigma>1' n1'\n  n' = Suc n1'\n\ngoal (1 subgoal):\n 1. Suc n1 = n'", "by blast"], ["proof (state)\nthis:\n  Suc n1 = n'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Suc n1 = n'\n\ngoal:\nNo subgoals!", "qed"], ["", "end \\<comment> \\<open> Semantics \\<close>"], ["", "end"]]}