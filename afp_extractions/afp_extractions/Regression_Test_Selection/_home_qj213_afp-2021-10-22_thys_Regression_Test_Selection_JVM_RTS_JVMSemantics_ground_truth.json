{"file_name": "/home/qj213/afp-2021-10-22/thys/Regression_Test_Selection/JVM_RTS/JVMSemantics.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Regression_Test_Selection", "problem_names": ["lemma JVMsmall_prealloc_pres:\nassumes pre: \"preallocated (fst(snd \\<sigma>))\"\n  and \"\\<sigma>' \\<in> JVMsmall P \\<sigma>\"\nshows \"preallocated (fst(snd \\<sigma>'))\"", "lemma JVMsmall_det: \"JVMsmall P \\<sigma> = {} \\<or> (\\<exists>\\<sigma>'. JVMsmall P \\<sigma> = {\\<sigma>'})\"", "lemma JVMendset_final: \"\\<sigma> \\<in> JVMendset \\<Longrightarrow> \\<forall>P. JVMsmall P \\<sigma> = {}\"", "lemma start_state_nend:\n \"start_state P \\<notin> JVMendset\""], "translations": [["", "lemma JVMsmall_prealloc_pres:\nassumes pre: \"preallocated (fst(snd \\<sigma>))\"\n  and \"\\<sigma>' \\<in> JVMsmall P \\<sigma>\"\nshows \"preallocated (fst(snd \\<sigma>'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preallocated (fst (snd \\<sigma>'))", "using exec_prealloc_pres[OF pre] assms"], ["proof (prove)\nusing this:\n  exec (?P, ?xp, fst (snd \\<sigma>), ?frs, ?sh) =\n  \\<lfloor>(?xp', ?h', ?frs', ?sh')\\<rfloor> \\<Longrightarrow>\n  preallocated ?h'\n  preallocated (fst (snd \\<sigma>))\n  \\<sigma>' \\<in> JVMsmall P \\<sigma>\n\ngoal (1 subgoal):\n 1. preallocated (fst (snd \\<sigma>'))", "by(cases \\<sigma>, cases \\<sigma>', auto)"], ["", "lemma JVMsmall_det: \"JVMsmall P \\<sigma> = {} \\<or> (\\<exists>\\<sigma>'. JVMsmall P \\<sigma> = {\\<sigma>'})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. JVMsmall P \\<sigma> = {} \\<or>\n    (\\<exists>\\<sigma>'. JVMsmall P \\<sigma> = {\\<sigma>'})", "by auto"], ["", "definition JVMendset :: \"jvm_state set\" where\n\"JVMendset \\<equiv> { (xp,h,frs,sh). frs = [] \\<or> (\\<exists>x. xp = Some x) }\""], ["", "lemma JVMendset_final: \"\\<sigma> \\<in> JVMendset \\<Longrightarrow> \\<forall>P. JVMsmall P \\<sigma> = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma> \\<in> JVMendset \\<Longrightarrow>\n    \\<forall>P. JVMsmall P \\<sigma> = {}", "by(auto simp: JVMendset_def)"], ["", "lemma start_state_nend:\n \"start_state P \\<notin> JVMendset\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_state P \\<notin> JVMendset", "by(simp add: start_state_def JVMendset_def)"], ["", "interpretation JVMSemantics: Semantics JVMsmall JVMendset"], ["proof (prove)\ngoal (1 subgoal):\n 1. Semantics JVMsmall JVMendset", "by unfold_locales (auto dest: JVMendset_final)"], ["", "end"]]}