{"file_name": "/home/qj213/afp-2021-10-22/thys/Regression_Test_Selection/JinjaSuppl/Subcls.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Regression_Test_Selection", "problem_names": ["lemma subcls_class_ex: \"\\<lbrakk> P \\<turnstile> C \\<preceq>\\<^sup>* C'; C \\<noteq> C' \\<rbrakk>\n \\<Longrightarrow> \\<exists>D' fs ms. class P C = \\<lfloor>(D', fs, ms)\\<rfloor>\"", "lemma class_subcls1:\n \"\\<lbrakk> class P y = class P' y; P \\<turnstile> y \\<prec>\\<^sup>1 z \\<rbrakk> \\<Longrightarrow> P' \\<turnstile> y \\<prec>\\<^sup>1 z\"", "lemma subcls1_single_valued: \"single_valued (subcls1 P)\"", "lemma subcls_confluent:\n  \"\\<lbrakk> P \\<turnstile> C \\<preceq>\\<^sup>* C'; P \\<turnstile> C \\<preceq>\\<^sup>* C'' \\<rbrakk> \\<Longrightarrow> P \\<turnstile> C' \\<preceq>\\<^sup>* C'' \\<or> P \\<turnstile> C'' \\<preceq>\\<^sup>* C'\"", "lemma subcls1_confluent: \"\\<lbrakk> P \\<turnstile> a \\<prec>\\<^sup>1 b; P \\<turnstile> a \\<preceq>\\<^sup>* c; a \\<noteq> c \\<rbrakk> \\<Longrightarrow> P \\<turnstile> b \\<preceq>\\<^sup>* c\"", "lemma subcls_self_superclass: \"\\<lbrakk> P \\<turnstile> C \\<prec>\\<^sup>1 C; P \\<turnstile> C \\<preceq>\\<^sup>* D \\<rbrakk> \\<Longrightarrow> D = C\"", "lemma subcls_of_Obj_acyclic:\n \"\\<lbrakk> P \\<turnstile> C \\<preceq>\\<^sup>* Object; C \\<noteq> D\\<rbrakk> \\<Longrightarrow> \\<not>(P \\<turnstile> C \\<preceq>\\<^sup>* D \\<and> P \\<turnstile> D \\<preceq>\\<^sup>* C)\"", "lemma subcls_of_Obj: \"\\<lbrakk> P \\<turnstile> C \\<preceq>\\<^sup>* Object; P \\<turnstile> C \\<preceq>\\<^sup>* D \\<rbrakk> \\<Longrightarrow> P \\<turnstile> D \\<preceq>\\<^sup>* Object\""], "translations": [["", "lemma subcls_class_ex: \"\\<lbrakk> P \\<turnstile> C \\<preceq>\\<^sup>* C'; C \\<noteq> C' \\<rbrakk>\n \\<Longrightarrow> \\<exists>D' fs ms. class P C = \\<lfloor>(D', fs, ms)\\<rfloor>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<turnstile> C \\<preceq>\\<^sup>* C'; C \\<noteq> C'\\<rbrakk>\n    \\<Longrightarrow> \\<exists>D' fs ms.\n                         class P C = \\<lfloor>(D', fs, ms)\\<rfloor>", "proof(induct rule: converse_rtrancl_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. C' \\<noteq> C' \\<Longrightarrow>\n    \\<exists>D' fs ms. class P C' = \\<lfloor>(D', fs, ms)\\<rfloor>\n 2. \\<And>y z.\n       \\<lbrakk>P \\<turnstile> y \\<prec>\\<^sup>1 z;\n        P \\<turnstile> z \\<preceq>\\<^sup>* C';\n        z \\<noteq> C' \\<Longrightarrow>\n        \\<exists>D' fs ms. class P z = \\<lfloor>(D', fs, ms)\\<rfloor>;\n        y \\<noteq> C'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>D' fs ms.\n                            class P y = \\<lfloor>(D', fs, ms)\\<rfloor>", "case (step y z)"], ["proof (state)\nthis:\n  P \\<turnstile> y \\<prec>\\<^sup>1 z\n  P \\<turnstile> z \\<preceq>\\<^sup>* C'\n  z \\<noteq> C' \\<Longrightarrow>\n  \\<exists>D' fs ms. class P z = \\<lfloor>(D', fs, ms)\\<rfloor>\n  y \\<noteq> C'\n\ngoal (2 subgoals):\n 1. C' \\<noteq> C' \\<Longrightarrow>\n    \\<exists>D' fs ms. class P C' = \\<lfloor>(D', fs, ms)\\<rfloor>\n 2. \\<And>y z.\n       \\<lbrakk>P \\<turnstile> y \\<prec>\\<^sup>1 z;\n        P \\<turnstile> z \\<preceq>\\<^sup>* C';\n        z \\<noteq> C' \\<Longrightarrow>\n        \\<exists>D' fs ms. class P z = \\<lfloor>(D', fs, ms)\\<rfloor>;\n        y \\<noteq> C'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>D' fs ms.\n                            class P y = \\<lfloor>(D', fs, ms)\\<rfloor>", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> y \\<prec>\\<^sup>1 z\n  P \\<turnstile> z \\<preceq>\\<^sup>* C'\n  z \\<noteq> C' \\<Longrightarrow>\n  \\<exists>D' fs ms. class P z = \\<lfloor>(D', fs, ms)\\<rfloor>\n  y \\<noteq> C'", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> y \\<prec>\\<^sup>1 z\n  P \\<turnstile> z \\<preceq>\\<^sup>* C'\n  z \\<noteq> C' \\<Longrightarrow>\n  \\<exists>D' fs ms. class P z = \\<lfloor>(D', fs, ms)\\<rfloor>\n  y \\<noteq> C'\n\ngoal (1 subgoal):\n 1. \\<exists>D' fs ms. class P y = \\<lfloor>(D', fs, ms)\\<rfloor>", "by(auto dest: subcls1D)"], ["proof (state)\nthis:\n  \\<exists>D' fs ms. class P y = \\<lfloor>(D', fs, ms)\\<rfloor>\n\ngoal (1 subgoal):\n 1. C' \\<noteq> C' \\<Longrightarrow>\n    \\<exists>D' fs ms. class P C' = \\<lfloor>(D', fs, ms)\\<rfloor>", "qed(simp)"], ["", "lemma class_subcls1:\n \"\\<lbrakk> class P y = class P' y; P \\<turnstile> y \\<prec>\\<^sup>1 z \\<rbrakk> \\<Longrightarrow> P' \\<turnstile> y \\<prec>\\<^sup>1 z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>class P y = class P' y;\n     P \\<turnstile> y \\<prec>\\<^sup>1 z\\<rbrakk>\n    \\<Longrightarrow> P' \\<turnstile> y \\<prec>\\<^sup>1 z", "by(auto dest!: subcls1D intro!: subcls1I intro: sym)"], ["", "lemma subcls1_single_valued: \"single_valued (subcls1 P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. single_valued (subcls1 P)", "by (clarsimp simp: single_valued_def subcls1.simps)"], ["", "lemma subcls_confluent:\n  \"\\<lbrakk> P \\<turnstile> C \\<preceq>\\<^sup>* C'; P \\<turnstile> C \\<preceq>\\<^sup>* C'' \\<rbrakk> \\<Longrightarrow> P \\<turnstile> C' \\<preceq>\\<^sup>* C'' \\<or> P \\<turnstile> C'' \\<preceq>\\<^sup>* C'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<turnstile> C \\<preceq>\\<^sup>* C';\n     P \\<turnstile> C \\<preceq>\\<^sup>* C''\\<rbrakk>\n    \\<Longrightarrow> P \\<turnstile> C' \\<preceq>\\<^sup>* C'' \\<or>\n                      P \\<turnstile> C'' \\<preceq>\\<^sup>* C'", "by (simp add: single_valued_confluent subcls1_single_valued)"], ["", "lemma subcls1_confluent: \"\\<lbrakk> P \\<turnstile> a \\<prec>\\<^sup>1 b; P \\<turnstile> a \\<preceq>\\<^sup>* c; a \\<noteq> c \\<rbrakk> \\<Longrightarrow> P \\<turnstile> b \\<preceq>\\<^sup>* c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<turnstile> a \\<prec>\\<^sup>1 b;\n     P \\<turnstile> a \\<preceq>\\<^sup>* c; a \\<noteq> c\\<rbrakk>\n    \\<Longrightarrow> P \\<turnstile> b \\<preceq>\\<^sup>* c", "using subcls1_single_valued"], ["proof (prove)\nusing this:\n  single_valued (subcls1 ?P)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<turnstile> a \\<prec>\\<^sup>1 b;\n     P \\<turnstile> a \\<preceq>\\<^sup>* c; a \\<noteq> c\\<rbrakk>\n    \\<Longrightarrow> P \\<turnstile> b \\<preceq>\\<^sup>* c", "by (auto elim!: converse_rtranclE[where x=a] simp: single_valued_def)"], ["", "lemma subcls_self_superclass: \"\\<lbrakk> P \\<turnstile> C \\<prec>\\<^sup>1 C; P \\<turnstile> C \\<preceq>\\<^sup>* D \\<rbrakk> \\<Longrightarrow> D = C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<turnstile> C \\<prec>\\<^sup>1 C;\n     P \\<turnstile> C \\<preceq>\\<^sup>* D\\<rbrakk>\n    \\<Longrightarrow> D = C", "using subcls1_single_valued"], ["proof (prove)\nusing this:\n  single_valued (subcls1 ?P)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<turnstile> C \\<prec>\\<^sup>1 C;\n     P \\<turnstile> C \\<preceq>\\<^sup>* D\\<rbrakk>\n    \\<Longrightarrow> D = C", "by (auto elim!: rtrancl_induct[where b=D] simp: single_valued_def)"], ["", "lemma subcls_of_Obj_acyclic:\n \"\\<lbrakk> P \\<turnstile> C \\<preceq>\\<^sup>* Object; C \\<noteq> D\\<rbrakk> \\<Longrightarrow> \\<not>(P \\<turnstile> C \\<preceq>\\<^sup>* D \\<and> P \\<turnstile> D \\<preceq>\\<^sup>* C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<turnstile> C \\<preceq>\\<^sup>* Object;\n     C \\<noteq> D\\<rbrakk>\n    \\<Longrightarrow> \\<not> (P \\<turnstile> C \\<preceq>\\<^sup>* D \\<and>\n                              P \\<turnstile> D \\<preceq>\\<^sup>* C)", "proof(induct arbitrary: D rule: converse_rtrancl_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>D.\n       Object \\<noteq> D \\<Longrightarrow>\n       \\<not> (P \\<turnstile> Object \\<preceq>\\<^sup>* D \\<and>\n               P \\<turnstile> D \\<preceq>\\<^sup>* Object)\n 2. \\<And>y z D.\n       \\<lbrakk>P \\<turnstile> y \\<prec>\\<^sup>1 z;\n        P \\<turnstile> z \\<preceq>\\<^sup>* Object;\n        \\<And>D.\n           z \\<noteq> D \\<Longrightarrow>\n           \\<not> (P \\<turnstile> z \\<preceq>\\<^sup>* D \\<and>\n                   P \\<turnstile> D \\<preceq>\\<^sup>* z);\n        y \\<noteq> D\\<rbrakk>\n       \\<Longrightarrow> \\<not> (P \\<turnstile> y \\<preceq>\\<^sup>* D \\<and>\n                                 P \\<turnstile> D \\<preceq>\\<^sup>* y)", "case base"], ["proof (state)\nthis:\n  Object \\<noteq> D\n\ngoal (2 subgoals):\n 1. \\<And>D.\n       Object \\<noteq> D \\<Longrightarrow>\n       \\<not> (P \\<turnstile> Object \\<preceq>\\<^sup>* D \\<and>\n               P \\<turnstile> D \\<preceq>\\<^sup>* Object)\n 2. \\<And>y z D.\n       \\<lbrakk>P \\<turnstile> y \\<prec>\\<^sup>1 z;\n        P \\<turnstile> z \\<preceq>\\<^sup>* Object;\n        \\<And>D.\n           z \\<noteq> D \\<Longrightarrow>\n           \\<not> (P \\<turnstile> z \\<preceq>\\<^sup>* D \\<and>\n                   P \\<turnstile> D \\<preceq>\\<^sup>* z);\n        y \\<noteq> D\\<rbrakk>\n       \\<Longrightarrow> \\<not> (P \\<turnstile> y \\<preceq>\\<^sup>* D \\<and>\n                                 P \\<turnstile> D \\<preceq>\\<^sup>* y)", "then"], ["proof (chain)\npicking this:\n  Object \\<noteq> D", "show ?case"], ["proof (prove)\nusing this:\n  Object \\<noteq> D\n\ngoal (1 subgoal):\n 1. \\<not> (P \\<turnstile> Object \\<preceq>\\<^sup>* D \\<and>\n            P \\<turnstile> D \\<preceq>\\<^sup>* Object)", "by simp"], ["proof (state)\nthis:\n  \\<not> (P \\<turnstile> Object \\<preceq>\\<^sup>* D \\<and>\n          P \\<turnstile> D \\<preceq>\\<^sup>* Object)\n\ngoal (1 subgoal):\n 1. \\<And>y z D.\n       \\<lbrakk>P \\<turnstile> y \\<prec>\\<^sup>1 z;\n        P \\<turnstile> z \\<preceq>\\<^sup>* Object;\n        \\<And>D.\n           z \\<noteq> D \\<Longrightarrow>\n           \\<not> (P \\<turnstile> z \\<preceq>\\<^sup>* D \\<and>\n                   P \\<turnstile> D \\<preceq>\\<^sup>* z);\n        y \\<noteq> D\\<rbrakk>\n       \\<Longrightarrow> \\<not> (P \\<turnstile> y \\<preceq>\\<^sup>* D \\<and>\n                                 P \\<turnstile> D \\<preceq>\\<^sup>* y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z D.\n       \\<lbrakk>P \\<turnstile> y \\<prec>\\<^sup>1 z;\n        P \\<turnstile> z \\<preceq>\\<^sup>* Object;\n        \\<And>D.\n           z \\<noteq> D \\<Longrightarrow>\n           \\<not> (P \\<turnstile> z \\<preceq>\\<^sup>* D \\<and>\n                   P \\<turnstile> D \\<preceq>\\<^sup>* z);\n        y \\<noteq> D\\<rbrakk>\n       \\<Longrightarrow> \\<not> (P \\<turnstile> y \\<preceq>\\<^sup>* D \\<and>\n                                 P \\<turnstile> D \\<preceq>\\<^sup>* y)", "case (step y z)"], ["proof (state)\nthis:\n  P \\<turnstile> y \\<prec>\\<^sup>1 z\n  P \\<turnstile> z \\<preceq>\\<^sup>* Object\n  z \\<noteq> ?D \\<Longrightarrow>\n  \\<not> (P \\<turnstile> z \\<preceq>\\<^sup>* ?D \\<and>\n          P \\<turnstile> ?D \\<preceq>\\<^sup>* z)\n  y \\<noteq> D\n\ngoal (1 subgoal):\n 1. \\<And>y z D.\n       \\<lbrakk>P \\<turnstile> y \\<prec>\\<^sup>1 z;\n        P \\<turnstile> z \\<preceq>\\<^sup>* Object;\n        \\<And>D.\n           z \\<noteq> D \\<Longrightarrow>\n           \\<not> (P \\<turnstile> z \\<preceq>\\<^sup>* D \\<and>\n                   P \\<turnstile> D \\<preceq>\\<^sup>* z);\n        y \\<noteq> D\\<rbrakk>\n       \\<Longrightarrow> \\<not> (P \\<turnstile> y \\<preceq>\\<^sup>* D \\<and>\n                                 P \\<turnstile> D \\<preceq>\\<^sup>* y)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (P \\<turnstile> y \\<preceq>\\<^sup>* D \\<and>\n            P \\<turnstile> D \\<preceq>\\<^sup>* y)", "proof(cases \"y=z\")"], ["proof (state)\ngoal (2 subgoals):\n 1. y = z \\<Longrightarrow>\n    \\<not> (P \\<turnstile> y \\<preceq>\\<^sup>* D \\<and>\n            P \\<turnstile> D \\<preceq>\\<^sup>* y)\n 2. y \\<noteq> z \\<Longrightarrow>\n    \\<not> (P \\<turnstile> y \\<preceq>\\<^sup>* D \\<and>\n            P \\<turnstile> D \\<preceq>\\<^sup>* y)", "case True"], ["proof (state)\nthis:\n  y = z\n\ngoal (2 subgoals):\n 1. y = z \\<Longrightarrow>\n    \\<not> (P \\<turnstile> y \\<preceq>\\<^sup>* D \\<and>\n            P \\<turnstile> D \\<preceq>\\<^sup>* y)\n 2. y \\<noteq> z \\<Longrightarrow>\n    \\<not> (P \\<turnstile> y \\<preceq>\\<^sup>* D \\<and>\n            P \\<turnstile> D \\<preceq>\\<^sup>* y)", "with step"], ["proof (chain)\npicking this:\n  P \\<turnstile> y \\<prec>\\<^sup>1 z\n  P \\<turnstile> z \\<preceq>\\<^sup>* Object\n  z \\<noteq> ?D \\<Longrightarrow>\n  \\<not> (P \\<turnstile> z \\<preceq>\\<^sup>* ?D \\<and>\n          P \\<turnstile> ?D \\<preceq>\\<^sup>* z)\n  y \\<noteq> D\n  y = z", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<turnstile> y \\<prec>\\<^sup>1 z\n  P \\<turnstile> z \\<preceq>\\<^sup>* Object\n  z \\<noteq> ?D \\<Longrightarrow>\n  \\<not> (P \\<turnstile> z \\<preceq>\\<^sup>* ?D \\<and>\n          P \\<turnstile> ?D \\<preceq>\\<^sup>* z)\n  y \\<noteq> D\n  y = z\n\ngoal (1 subgoal):\n 1. \\<not> (P \\<turnstile> y \\<preceq>\\<^sup>* D \\<and>\n            P \\<turnstile> D \\<preceq>\\<^sup>* y)", "by simp"], ["proof (state)\nthis:\n  \\<not> (P \\<turnstile> y \\<preceq>\\<^sup>* D \\<and>\n          P \\<turnstile> D \\<preceq>\\<^sup>* y)\n\ngoal (1 subgoal):\n 1. y \\<noteq> z \\<Longrightarrow>\n    \\<not> (P \\<turnstile> y \\<preceq>\\<^sup>* D \\<and>\n            P \\<turnstile> D \\<preceq>\\<^sup>* y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<noteq> z \\<Longrightarrow>\n    \\<not> (P \\<turnstile> y \\<preceq>\\<^sup>* D \\<and>\n            P \\<turnstile> D \\<preceq>\\<^sup>* y)", "case False"], ["proof (state)\nthis:\n  y \\<noteq> z\n\ngoal (1 subgoal):\n 1. y \\<noteq> z \\<Longrightarrow>\n    \\<not> (P \\<turnstile> y \\<preceq>\\<^sup>* D \\<and>\n            P \\<turnstile> D \\<preceq>\\<^sup>* y)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (P \\<turnstile> y \\<preceq>\\<^sup>* D \\<and>\n            P \\<turnstile> D \\<preceq>\\<^sup>* y)", "proof(cases \"z = D\")"], ["proof (state)\ngoal (2 subgoals):\n 1. z = D \\<Longrightarrow>\n    \\<not> (P \\<turnstile> y \\<preceq>\\<^sup>* D \\<and>\n            P \\<turnstile> D \\<preceq>\\<^sup>* y)\n 2. z \\<noteq> D \\<Longrightarrow>\n    \\<not> (P \\<turnstile> y \\<preceq>\\<^sup>* D \\<and>\n            P \\<turnstile> D \\<preceq>\\<^sup>* y)", "case True"], ["proof (state)\nthis:\n  z = D\n\ngoal (2 subgoals):\n 1. z = D \\<Longrightarrow>\n    \\<not> (P \\<turnstile> y \\<preceq>\\<^sup>* D \\<and>\n            P \\<turnstile> D \\<preceq>\\<^sup>* y)\n 2. z \\<noteq> D \\<Longrightarrow>\n    \\<not> (P \\<turnstile> y \\<preceq>\\<^sup>* D \\<and>\n            P \\<turnstile> D \\<preceq>\\<^sup>* y)", "with False step.hyps(3)[of y]"], ["proof (chain)\npicking this:\n  y \\<noteq> z\n  z \\<noteq> y \\<Longrightarrow>\n  \\<not> (P \\<turnstile> z \\<preceq>\\<^sup>* y \\<and>\n          P \\<turnstile> y \\<preceq>\\<^sup>* z)\n  z = D", "show ?thesis"], ["proof (prove)\nusing this:\n  y \\<noteq> z\n  z \\<noteq> y \\<Longrightarrow>\n  \\<not> (P \\<turnstile> z \\<preceq>\\<^sup>* y \\<and>\n          P \\<turnstile> y \\<preceq>\\<^sup>* z)\n  z = D\n\ngoal (1 subgoal):\n 1. \\<not> (P \\<turnstile> y \\<preceq>\\<^sup>* D \\<and>\n            P \\<turnstile> D \\<preceq>\\<^sup>* y)", "by clarsimp"], ["proof (state)\nthis:\n  \\<not> (P \\<turnstile> y \\<preceq>\\<^sup>* D \\<and>\n          P \\<turnstile> D \\<preceq>\\<^sup>* y)\n\ngoal (1 subgoal):\n 1. z \\<noteq> D \\<Longrightarrow>\n    \\<not> (P \\<turnstile> y \\<preceq>\\<^sup>* D \\<and>\n            P \\<turnstile> D \\<preceq>\\<^sup>* y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. z \\<noteq> D \\<Longrightarrow>\n    \\<not> (P \\<turnstile> y \\<preceq>\\<^sup>* D \\<and>\n            P \\<turnstile> D \\<preceq>\\<^sup>* y)", "case neq: False"], ["proof (state)\nthis:\n  z \\<noteq> D\n\ngoal (1 subgoal):\n 1. z \\<noteq> D \\<Longrightarrow>\n    \\<not> (P \\<turnstile> y \\<preceq>\\<^sup>* D \\<and>\n            P \\<turnstile> D \\<preceq>\\<^sup>* y)", "with step.hyps(3)"], ["proof (chain)\npicking this:\n  z \\<noteq> ?D \\<Longrightarrow>\n  \\<not> (P \\<turnstile> z \\<preceq>\\<^sup>* ?D \\<and>\n          P \\<turnstile> ?D \\<preceq>\\<^sup>* z)\n  z \\<noteq> D", "have \"\\<not>(P \\<turnstile> z \\<preceq>\\<^sup>* D \\<and> P \\<turnstile> D \\<preceq>\\<^sup>* z)\""], ["proof (prove)\nusing this:\n  z \\<noteq> ?D \\<Longrightarrow>\n  \\<not> (P \\<turnstile> z \\<preceq>\\<^sup>* ?D \\<and>\n          P \\<turnstile> ?D \\<preceq>\\<^sup>* z)\n  z \\<noteq> D\n\ngoal (1 subgoal):\n 1. \\<not> (P \\<turnstile> z \\<preceq>\\<^sup>* D \\<and>\n            P \\<turnstile> D \\<preceq>\\<^sup>* z)", "by simp"], ["proof (state)\nthis:\n  \\<not> (P \\<turnstile> z \\<preceq>\\<^sup>* D \\<and>\n          P \\<turnstile> D \\<preceq>\\<^sup>* z)\n\ngoal (1 subgoal):\n 1. z \\<noteq> D \\<Longrightarrow>\n    \\<not> (P \\<turnstile> y \\<preceq>\\<^sup>* D \\<and>\n            P \\<turnstile> D \\<preceq>\\<^sup>* y)", "moreover"], ["proof (state)\nthis:\n  \\<not> (P \\<turnstile> z \\<preceq>\\<^sup>* D \\<and>\n          P \\<turnstile> D \\<preceq>\\<^sup>* z)\n\ngoal (1 subgoal):\n 1. z \\<noteq> D \\<Longrightarrow>\n    \\<not> (P \\<turnstile> y \\<preceq>\\<^sup>* D \\<and>\n            P \\<turnstile> D \\<preceq>\\<^sup>* y)", "from step.hyps(1)"], ["proof (chain)\npicking this:\n  P \\<turnstile> y \\<prec>\\<^sup>1 z", "have \"P \\<turnstile> D \\<preceq>\\<^sup>* y \\<Longrightarrow> P \\<turnstile> D \\<preceq>\\<^sup>* z\""], ["proof (prove)\nusing this:\n  P \\<turnstile> y \\<prec>\\<^sup>1 z\n\ngoal (1 subgoal):\n 1. P \\<turnstile> D \\<preceq>\\<^sup>* y \\<Longrightarrow>\n    P \\<turnstile> D \\<preceq>\\<^sup>* z", "by(simp add: rtrancl_into_rtrancl)"], ["proof (state)\nthis:\n  P \\<turnstile> D \\<preceq>\\<^sup>* y \\<Longrightarrow>\n  P \\<turnstile> D \\<preceq>\\<^sup>* z\n\ngoal (1 subgoal):\n 1. z \\<noteq> D \\<Longrightarrow>\n    \\<not> (P \\<turnstile> y \\<preceq>\\<^sup>* D \\<and>\n            P \\<turnstile> D \\<preceq>\\<^sup>* y)", "moreover"], ["proof (state)\nthis:\n  P \\<turnstile> D \\<preceq>\\<^sup>* y \\<Longrightarrow>\n  P \\<turnstile> D \\<preceq>\\<^sup>* z\n\ngoal (1 subgoal):\n 1. z \\<noteq> D \\<Longrightarrow>\n    \\<not> (P \\<turnstile> y \\<preceq>\\<^sup>* D \\<and>\n            P \\<turnstile> D \\<preceq>\\<^sup>* y)", "from step.hyps(1) step.prems(1)"], ["proof (chain)\npicking this:\n  P \\<turnstile> y \\<prec>\\<^sup>1 z\n  y \\<noteq> D", "have \"P \\<turnstile> y \\<preceq>\\<^sup>* D \\<Longrightarrow> P \\<turnstile> z \\<preceq>\\<^sup>* D\""], ["proof (prove)\nusing this:\n  P \\<turnstile> y \\<prec>\\<^sup>1 z\n  y \\<noteq> D\n\ngoal (1 subgoal):\n 1. P \\<turnstile> y \\<preceq>\\<^sup>* D \\<Longrightarrow>\n    P \\<turnstile> z \\<preceq>\\<^sup>* D", "by(simp add: subcls1_confluent)"], ["proof (state)\nthis:\n  P \\<turnstile> y \\<preceq>\\<^sup>* D \\<Longrightarrow>\n  P \\<turnstile> z \\<preceq>\\<^sup>* D\n\ngoal (1 subgoal):\n 1. z \\<noteq> D \\<Longrightarrow>\n    \\<not> (P \\<turnstile> y \\<preceq>\\<^sup>* D \\<and>\n            P \\<turnstile> D \\<preceq>\\<^sup>* y)", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> (P \\<turnstile> z \\<preceq>\\<^sup>* D \\<and>\n          P \\<turnstile> D \\<preceq>\\<^sup>* z)\n  P \\<turnstile> D \\<preceq>\\<^sup>* y \\<Longrightarrow>\n  P \\<turnstile> D \\<preceq>\\<^sup>* z\n  P \\<turnstile> y \\<preceq>\\<^sup>* D \\<Longrightarrow>\n  P \\<turnstile> z \\<preceq>\\<^sup>* D", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> (P \\<turnstile> z \\<preceq>\\<^sup>* D \\<and>\n          P \\<turnstile> D \\<preceq>\\<^sup>* z)\n  P \\<turnstile> D \\<preceq>\\<^sup>* y \\<Longrightarrow>\n  P \\<turnstile> D \\<preceq>\\<^sup>* z\n  P \\<turnstile> y \\<preceq>\\<^sup>* D \\<Longrightarrow>\n  P \\<turnstile> z \\<preceq>\\<^sup>* D\n\ngoal (1 subgoal):\n 1. \\<not> (P \\<turnstile> y \\<preceq>\\<^sup>* D \\<and>\n            P \\<turnstile> D \\<preceq>\\<^sup>* y)", "by clarsimp"], ["proof (state)\nthis:\n  \\<not> (P \\<turnstile> y \\<preceq>\\<^sup>* D \\<and>\n          P \\<turnstile> D \\<preceq>\\<^sup>* y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> (P \\<turnstile> y \\<preceq>\\<^sup>* D \\<and>\n          P \\<turnstile> D \\<preceq>\\<^sup>* y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> (P \\<turnstile> y \\<preceq>\\<^sup>* D \\<and>\n          P \\<turnstile> D \\<preceq>\\<^sup>* y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subcls_of_Obj: \"\\<lbrakk> P \\<turnstile> C \\<preceq>\\<^sup>* Object; P \\<turnstile> C \\<preceq>\\<^sup>* D \\<rbrakk> \\<Longrightarrow> P \\<turnstile> D \\<preceq>\\<^sup>* Object\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<turnstile> C \\<preceq>\\<^sup>* Object;\n     P \\<turnstile> C \\<preceq>\\<^sup>* D\\<rbrakk>\n    \\<Longrightarrow> P \\<turnstile> D \\<preceq>\\<^sup>* Object", "by(auto dest: subcls_confluent)"], ["", "end"]]}