{"file_name": "/home/qj213/afp-2021-10-22/thys/Slicing/Basic/DynDataDependence.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Slicing", "problem_names": ["lemma dyn_influence_Cons_source:\n  \"n influences V in n' via a#as \\<Longrightarrow> sourcenode a = n\"", "lemma dyn_influence_source_notin_tl_edges: \n  assumes \"n influences V in n' via a#as\"\n  shows \"n \\<notin> set (sourcenodes as)\"", "lemma dyn_influence_only_first_edge:\n  assumes \"n influences V in n' via a#as\" and \"preds (kinds (a#as)) s\"\n  shows \"state_val (transfers (kinds (a#as)) s) V = \n         state_val (transfer (kind a) s) V\""], "translations": [["", "lemma dyn_influence_Cons_source:\n  \"n influences V in n' via a#as \\<Longrightarrow> sourcenode a = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n influences V in n' via a # as \\<Longrightarrow> sourcenode a = n", "by(simp add:dyn_data_dependence_def,auto elim:path.cases)"], ["", "lemma dyn_influence_source_notin_tl_edges: \n  assumes \"n influences V in n' via a#as\"\n  shows \"n \\<notin> set (sourcenodes as)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<notin> set (sourcenodes as)", "proof(rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> n \\<notin> set (sourcenodes as) \\<Longrightarrow> False", "assume \"\\<not> n \\<notin> set (sourcenodes as)\""], ["proof (state)\nthis:\n  \\<not> n \\<notin> set (sourcenodes as)\n\ngoal (1 subgoal):\n 1. \\<not> n \\<notin> set (sourcenodes as) \\<Longrightarrow> False", "hence \"n \\<in> set (sourcenodes as)\""], ["proof (prove)\nusing this:\n  \\<not> n \\<notin> set (sourcenodes as)\n\ngoal (1 subgoal):\n 1. n \\<in> set (sourcenodes as)", "by simp"], ["proof (state)\nthis:\n  n \\<in> set (sourcenodes as)\n\ngoal (1 subgoal):\n 1. \\<not> n \\<notin> set (sourcenodes as) \\<Longrightarrow> False", "from \\<open>n influences V in n' via a#as\\<close>"], ["proof (chain)\npicking this:\n  n influences V in n' via a # as", "have \"\\<forall>n'' \\<in> set (sourcenodes as). V \\<notin> Def n''\"\n    and \"V \\<in> Def n\""], ["proof (prove)\nusing this:\n  n influences V in n' via a # as\n\ngoal (1 subgoal):\n 1. \\<forall>n''\\<in>set (sourcenodes as). V \\<notin> Def n'' &&&\n    V \\<in> Def n", "by(simp_all add:dyn_data_dependence_def)"], ["proof (state)\nthis:\n  \\<forall>n''\\<in>set (sourcenodes as). V \\<notin> Def n''\n  V \\<in> Def n\n\ngoal (1 subgoal):\n 1. \\<not> n \\<notin> set (sourcenodes as) \\<Longrightarrow> False", "from \\<open>\\<forall>n'' \\<in> set (sourcenodes as). V \\<notin> Def n''\\<close> \n    \\<open>n \\<in> set (sourcenodes as)\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>n''\\<in>set (sourcenodes as). V \\<notin> Def n''\n  n \\<in> set (sourcenodes as)", "have \"V \\<notin> Def n\""], ["proof (prove)\nusing this:\n  \\<forall>n''\\<in>set (sourcenodes as). V \\<notin> Def n''\n  n \\<in> set (sourcenodes as)\n\ngoal (1 subgoal):\n 1. V \\<notin> Def n", "by simp"], ["proof (state)\nthis:\n  V \\<notin> Def n\n\ngoal (1 subgoal):\n 1. \\<not> n \\<notin> set (sourcenodes as) \\<Longrightarrow> False", "with \\<open>V \\<in> Def n\\<close>"], ["proof (chain)\npicking this:\n  V \\<in> Def n\n  V \\<notin> Def n", "show False"], ["proof (prove)\nusing this:\n  V \\<in> Def n\n  V \\<notin> Def n\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dyn_influence_only_first_edge:\n  assumes \"n influences V in n' via a#as\" and \"preds (kinds (a#as)) s\"\n  shows \"state_val (transfers (kinds (a#as)) s) V = \n         state_val (transfer (kind a) s) V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. state_val (transfers (kinds (a # as)) s) V =\n    state_val (transfer (kind a) s) V", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. state_val (transfers (kinds (a # as)) s) V =\n    state_val (transfer (kind a) s) V", "from \\<open>preds (kinds (a#as)) s\\<close>"], ["proof (chain)\npicking this:\n  preds (kinds (a # as)) s", "have \"preds (kinds as) (transfer (kind a) s)\""], ["proof (prove)\nusing this:\n  preds (kinds (a # as)) s\n\ngoal (1 subgoal):\n 1. preds (kinds as) (transfer (kind a) s)", "by(simp add:kinds_def)"], ["proof (state)\nthis:\n  preds (kinds as) (transfer (kind a) s)\n\ngoal (1 subgoal):\n 1. state_val (transfers (kinds (a # as)) s) V =\n    state_val (transfer (kind a) s) V", "from \\<open>n influences V in n' via a#as\\<close>"], ["proof (chain)\npicking this:\n  n influences V in n' via a # as", "have \"n -a#as\\<rightarrow>* n'\"\n    and \"\\<forall>n'' \\<in> set (sourcenodes as). V \\<notin> Def n''\""], ["proof (prove)\nusing this:\n  n influences V in n' via a # as\n\ngoal (1 subgoal):\n 1. n -a # as\\<rightarrow>* n' &&&\n    \\<forall>n''\\<in>set (sourcenodes as). V \\<notin> Def n''", "by(simp_all add:dyn_data_dependence_def)"], ["proof (state)\nthis:\n  n -a # as\\<rightarrow>* n'\n  \\<forall>n''\\<in>set (sourcenodes as). V \\<notin> Def n''\n\ngoal (1 subgoal):\n 1. state_val (transfers (kinds (a # as)) s) V =\n    state_val (transfer (kind a) s) V", "from \\<open>n -a#as\\<rightarrow>* n'\\<close>"], ["proof (chain)\npicking this:\n  n -a # as\\<rightarrow>* n'", "have \"n = sourcenode a\" and \"targetnode a -as\\<rightarrow>* n'\""], ["proof (prove)\nusing this:\n  n -a # as\\<rightarrow>* n'\n\ngoal (1 subgoal):\n 1. n = sourcenode a &&& targetnode a -as\\<rightarrow>* n'", "by(auto elim:path_split_Cons)"], ["proof (state)\nthis:\n  n = sourcenode a\n  targetnode a -as\\<rightarrow>* n'\n\ngoal (1 subgoal):\n 1. state_val (transfers (kinds (a # as)) s) V =\n    state_val (transfer (kind a) s) V", "from \\<open>n influences V in n' via a#as\\<close> \\<open>n = sourcenode a\\<close>"], ["proof (chain)\npicking this:\n  n influences V in n' via a # as\n  n = sourcenode a", "have \"sourcenode a \\<notin> set (sourcenodes as)\""], ["proof (prove)\nusing this:\n  n influences V in n' via a # as\n  n = sourcenode a\n\ngoal (1 subgoal):\n 1. sourcenode a \\<notin> set (sourcenodes as)", "by(fastforce intro!:dyn_influence_source_notin_tl_edges)"], ["proof (state)\nthis:\n  sourcenode a \\<notin> set (sourcenodes as)\n\ngoal (1 subgoal):\n 1. state_val (transfers (kinds (a # as)) s) V =\n    state_val (transfer (kind a) s) V", "{"], ["proof (state)\nthis:\n  sourcenode a \\<notin> set (sourcenodes as)\n\ngoal (1 subgoal):\n 1. state_val (transfers (kinds (a # as)) s) V =\n    state_val (transfer (kind a) s) V", "fix n''"], ["proof (state)\ngoal (1 subgoal):\n 1. state_val (transfers (kinds (a # as)) s) V =\n    state_val (transfer (kind a) s) V", "assume \"n'' \\<in> set (sourcenodes as)\""], ["proof (state)\nthis:\n  n'' \\<in> set (sourcenodes as)\n\ngoal (1 subgoal):\n 1. state_val (transfers (kinds (a # as)) s) V =\n    state_val (transfer (kind a) s) V", "with \\<open>sourcenode a \\<notin> set (sourcenodes as)\\<close> \\<open>n = sourcenode a\\<close>"], ["proof (chain)\npicking this:\n  sourcenode a \\<notin> set (sourcenodes as)\n  n = sourcenode a\n  n'' \\<in> set (sourcenodes as)", "have \"n'' \\<noteq> n\""], ["proof (prove)\nusing this:\n  sourcenode a \\<notin> set (sourcenodes as)\n  n = sourcenode a\n  n'' \\<in> set (sourcenodes as)\n\ngoal (1 subgoal):\n 1. n'' \\<noteq> n", "by(fastforce simp:sourcenodes_def)"], ["proof (state)\nthis:\n  n'' \\<noteq> n\n\ngoal (1 subgoal):\n 1. state_val (transfers (kinds (a # as)) s) V =\n    state_val (transfer (kind a) s) V", "with \\<open>\\<forall>n'' \\<in> set (sourcenodes as). V \\<notin> Def n''\\<close> \\<open>n'' \\<in> set (sourcenodes as)\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>n''\\<in>set (sourcenodes as). V \\<notin> Def n''\n  n'' \\<in> set (sourcenodes as)\n  n'' \\<noteq> n", "have \"V \\<notin> Def n''\""], ["proof (prove)\nusing this:\n  \\<forall>n''\\<in>set (sourcenodes as). V \\<notin> Def n''\n  n'' \\<in> set (sourcenodes as)\n  n'' \\<noteq> n\n\ngoal (1 subgoal):\n 1. V \\<notin> Def n''", "by(auto simp:sourcenodes_def)"], ["proof (state)\nthis:\n  V \\<notin> Def n''\n\ngoal (1 subgoal):\n 1. state_val (transfers (kinds (a # as)) s) V =\n    state_val (transfer (kind a) s) V", "}"], ["proof (state)\nthis:\n  ?n''2 \\<in> set (sourcenodes as) \\<Longrightarrow> V \\<notin> Def ?n''2\n\ngoal (1 subgoal):\n 1. state_val (transfers (kinds (a # as)) s) V =\n    state_val (transfer (kind a) s) V", "hence \"\\<forall>n'' \\<in> set (sourcenodes as). V \\<notin> Def n''\""], ["proof (prove)\nusing this:\n  ?n''2 \\<in> set (sourcenodes as) \\<Longrightarrow> V \\<notin> Def ?n''2\n\ngoal (1 subgoal):\n 1. \\<forall>n''\\<in>set (sourcenodes as). V \\<notin> Def n''", "by simp"], ["proof (state)\nthis:\n  \\<forall>n''\\<in>set (sourcenodes as). V \\<notin> Def n''\n\ngoal (1 subgoal):\n 1. state_val (transfers (kinds (a # as)) s) V =\n    state_val (transfer (kind a) s) V", "with \\<open>targetnode a -as\\<rightarrow>* n'\\<close> \\<open>preds (kinds as) (transfer (kind a) s)\\<close>"], ["proof (chain)\npicking this:\n  targetnode a -as\\<rightarrow>* n'\n  preds (kinds as) (transfer (kind a) s)\n  \\<forall>n''\\<in>set (sourcenodes as). V \\<notin> Def n''", "have \"state_val (transfers (kinds as) (transfer (kind a) s)) V = \n        state_val (transfer (kind a) s) V\""], ["proof (prove)\nusing this:\n  targetnode a -as\\<rightarrow>* n'\n  preds (kinds as) (transfer (kind a) s)\n  \\<forall>n''\\<in>set (sourcenodes as). V \\<notin> Def n''\n\ngoal (1 subgoal):\n 1. state_val (transfers (kinds as) (transfer (kind a) s)) V =\n    state_val (transfer (kind a) s) V", "by -(rule CFG_path_no_Def_equal)"], ["proof (state)\nthis:\n  state_val (transfers (kinds as) (transfer (kind a) s)) V =\n  state_val (transfer (kind a) s) V\n\ngoal (1 subgoal):\n 1. state_val (transfers (kinds (a # as)) s) V =\n    state_val (transfer (kind a) s) V", "thus ?thesis"], ["proof (prove)\nusing this:\n  state_val (transfers (kinds as) (transfer (kind a) s)) V =\n  state_val (transfer (kind a) s) V\n\ngoal (1 subgoal):\n 1. state_val (transfers (kinds (a # as)) s) V =\n    state_val (transfer (kind a) s) V", "by(auto simp:kinds_def)"], ["proof (state)\nthis:\n  state_val (transfers (kinds (a # as)) s) V =\n  state_val (transfer (kind a) s) V\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}