{"file_name": "/home/qj213/afp-2021-10-22/thys/Slicing/Dynamic/BitVector.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Slicing", "problem_names": ["lemma bv_length: \"xs \\<preceq>\\<^sub>b ys \\<Longrightarrow> length xs = length ys\"", "lemma [dest!]: \"xs \\<preceq>\\<^sub>b [] \\<Longrightarrow> xs = []\"", "lemma bv_leqs_AppendI:\n  \"\\<lbrakk>xs \\<preceq>\\<^sub>b ys; xs' \\<preceq>\\<^sub>b ys'\\<rbrakk> \\<Longrightarrow> (xs@xs') \\<preceq>\\<^sub>b (ys@ys')\"", "lemma bv_leqs_AppendD:\n  \"\\<lbrakk>(xs@xs') \\<preceq>\\<^sub>b (ys@ys'); length xs = length ys\\<rbrakk>\n  \\<Longrightarrow> xs \\<preceq>\\<^sub>b ys \\<and> xs' \\<preceq>\\<^sub>b ys'\"", "lemma bv_leqs_eq:\n  \"xs \\<preceq>\\<^sub>b ys = ((\\<forall>i < length xs. xs ! i \\<longrightarrow> ys ! i) \\<and> length xs = length ys)\"", "lemma minimal_element:\n  \"replicate (length xs) False \\<preceq>\\<^sub>b xs\"", "lemma maximal_element:\n  \"xs \\<preceq>\\<^sub>b replicate (length xs) True\"", "lemma bv_leqs_refl:\"xs \\<preceq>\\<^sub>b xs\"", "lemma bv_leqs_trans:\"\\<lbrakk>xs \\<preceq>\\<^sub>b ys; ys \\<preceq>\\<^sub>b zs\\<rbrakk> \\<Longrightarrow> xs \\<preceq>\\<^sub>b zs\"", "lemma bv_leqs_antisym:\"\\<lbrakk>xs \\<preceq>\\<^sub>b ys; ys \\<preceq>\\<^sub>b xs\\<rbrakk> \\<Longrightarrow> xs = ys\""], "translations": [["", "lemma bv_length: \"xs \\<preceq>\\<^sub>b ys \\<Longrightarrow> length xs = length ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<preceq>\\<^sub>b ys \\<Longrightarrow> length xs = length ys", "by(induct rule:bv_leqs.induct)auto"], ["", "lemma [dest!]: \"xs \\<preceq>\\<^sub>b [] \\<Longrightarrow> xs = []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<preceq>\\<^sub>b [] \\<Longrightarrow> xs = []", "by(induct xs) auto"], ["", "lemma bv_leqs_AppendI:\n  \"\\<lbrakk>xs \\<preceq>\\<^sub>b ys; xs' \\<preceq>\\<^sub>b ys'\\<rbrakk> \\<Longrightarrow> (xs@xs') \\<preceq>\\<^sub>b (ys@ys')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<preceq>\\<^sub>b ys; xs' \\<preceq>\\<^sub>b ys'\\<rbrakk>\n    \\<Longrightarrow> xs @ xs' \\<preceq>\\<^sub>b ys @ ys'", "by(induct xs ys rule:bv_leqs.induct,auto)"], ["", "lemma bv_leqs_AppendD:\n  \"\\<lbrakk>(xs@xs') \\<preceq>\\<^sub>b (ys@ys'); length xs = length ys\\<rbrakk>\n  \\<Longrightarrow> xs \\<preceq>\\<^sub>b ys \\<and> xs' \\<preceq>\\<^sub>b ys'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs @ xs' \\<preceq>\\<^sub>b ys @ ys';\n     length xs = length ys\\<rbrakk>\n    \\<Longrightarrow> xs \\<preceq>\\<^sub>b ys \\<and>\n                      xs' \\<preceq>\\<^sub>b ys'", "by(induct xs ys rule:bv_leqs.induct,auto)"], ["", "lemma bv_leqs_eq:\n  \"xs \\<preceq>\\<^sub>b ys = ((\\<forall>i < length xs. xs ! i \\<longrightarrow> ys ! i) \\<and> length xs = length ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<preceq>\\<^sub>b ys =\n    ((\\<forall>i<length xs. xs ! i \\<longrightarrow> ys ! i) \\<and>\n     length xs = length ys)", "proof(induct xs ys rule:bv_leqs.induct)"], ["proof (state)\ngoal (4 subgoals):\n 1. [] \\<preceq>\\<^sub>b [] =\n    ((\\<forall>i<length []. [] ! i \\<longrightarrow> [] ! i) \\<and>\n     length [] = length [])\n 2. \\<And>x xs y ys.\n       xs \\<preceq>\\<^sub>b ys =\n       ((\\<forall>i<length xs. xs ! i \\<longrightarrow> ys ! i) \\<and>\n        length xs = length ys) \\<Longrightarrow>\n       x # xs \\<preceq>\\<^sub>b y # ys =\n       ((\\<forall>i<length (x # xs).\n            (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n        length (x # xs) = length (y # ys))\n 3. \\<And>v va.\n       v # va \\<preceq>\\<^sub>b [] =\n       ((\\<forall>i<length (v # va).\n            (v # va) ! i \\<longrightarrow> [] ! i) \\<and>\n        length (v # va) = length [])\n 4. \\<And>v va.\n       [] \\<preceq>\\<^sub>b v # va =\n       ((\\<forall>i<length []. [] ! i \\<longrightarrow> (v # va) ! i) \\<and>\n        length [] = length (v # va))", "case (2 x xs y ys)"], ["proof (state)\nthis:\n  xs \\<preceq>\\<^sub>b ys =\n  ((\\<forall>i<length xs. xs ! i \\<longrightarrow> ys ! i) \\<and>\n   length xs = length ys)\n\ngoal (4 subgoals):\n 1. [] \\<preceq>\\<^sub>b [] =\n    ((\\<forall>i<length []. [] ! i \\<longrightarrow> [] ! i) \\<and>\n     length [] = length [])\n 2. \\<And>x xs y ys.\n       xs \\<preceq>\\<^sub>b ys =\n       ((\\<forall>i<length xs. xs ! i \\<longrightarrow> ys ! i) \\<and>\n        length xs = length ys) \\<Longrightarrow>\n       x # xs \\<preceq>\\<^sub>b y # ys =\n       ((\\<forall>i<length (x # xs).\n            (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n        length (x # xs) = length (y # ys))\n 3. \\<And>v va.\n       v # va \\<preceq>\\<^sub>b [] =\n       ((\\<forall>i<length (v # va).\n            (v # va) ! i \\<longrightarrow> [] ! i) \\<and>\n        length (v # va) = length [])\n 4. \\<And>v va.\n       [] \\<preceq>\\<^sub>b v # va =\n       ((\\<forall>i<length []. [] ! i \\<longrightarrow> (v # va) ! i) \\<and>\n        length [] = length (v # va))", "note eq = \\<open>xs \\<preceq>\\<^sub>b ys = \n    ((\\<forall>i < length xs. xs ! i \\<longrightarrow> ys ! i) \\<and> length xs = length ys)\\<close>"], ["proof (state)\nthis:\n  xs \\<preceq>\\<^sub>b ys =\n  ((\\<forall>i<length xs. xs ! i \\<longrightarrow> ys ! i) \\<and>\n   length xs = length ys)\n\ngoal (4 subgoals):\n 1. [] \\<preceq>\\<^sub>b [] =\n    ((\\<forall>i<length []. [] ! i \\<longrightarrow> [] ! i) \\<and>\n     length [] = length [])\n 2. \\<And>x xs y ys.\n       xs \\<preceq>\\<^sub>b ys =\n       ((\\<forall>i<length xs. xs ! i \\<longrightarrow> ys ! i) \\<and>\n        length xs = length ys) \\<Longrightarrow>\n       x # xs \\<preceq>\\<^sub>b y # ys =\n       ((\\<forall>i<length (x # xs).\n            (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n        length (x # xs) = length (y # ys))\n 3. \\<And>v va.\n       v # va \\<preceq>\\<^sub>b [] =\n       ((\\<forall>i<length (v # va).\n            (v # va) ! i \\<longrightarrow> [] ! i) \\<and>\n        length (v # va) = length [])\n 4. \\<And>v va.\n       [] \\<preceq>\\<^sub>b v # va =\n       ((\\<forall>i<length []. [] ! i \\<longrightarrow> (v # va) ! i) \\<and>\n        length [] = length (v # va))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. x # xs \\<preceq>\\<^sub>b y # ys =\n    ((\\<forall>i<length (x # xs).\n         (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n     length (x # xs) = length (y # ys))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. x # xs \\<preceq>\\<^sub>b y # ys \\<Longrightarrow>\n    (\\<forall>i<length (x # xs).\n        (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n    length (x # xs) = length (y # ys)\n 2. (\\<forall>i<length (x # xs).\n        (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n    length (x # xs) = length (y # ys) \\<Longrightarrow>\n    x # xs \\<preceq>\\<^sub>b y # ys", "assume leqs:\"x#xs \\<preceq>\\<^sub>b y#ys\""], ["proof (state)\nthis:\n  x # xs \\<preceq>\\<^sub>b y # ys\n\ngoal (2 subgoals):\n 1. x # xs \\<preceq>\\<^sub>b y # ys \\<Longrightarrow>\n    (\\<forall>i<length (x # xs).\n        (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n    length (x # xs) = length (y # ys)\n 2. (\\<forall>i<length (x # xs).\n        (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n    length (x # xs) = length (y # ys) \\<Longrightarrow>\n    x # xs \\<preceq>\\<^sub>b y # ys", "with eq"], ["proof (chain)\npicking this:\n  xs \\<preceq>\\<^sub>b ys =\n  ((\\<forall>i<length xs. xs ! i \\<longrightarrow> ys ! i) \\<and>\n   length xs = length ys)\n  x # xs \\<preceq>\\<^sub>b y # ys", "have \"x \\<longrightarrow> y\" and \"\\<forall>i < length xs. xs ! i \\<longrightarrow> ys ! i\"\n      and \"length xs = length ys\""], ["proof (prove)\nusing this:\n  xs \\<preceq>\\<^sub>b ys =\n  ((\\<forall>i<length xs. xs ! i \\<longrightarrow> ys ! i) \\<and>\n   length xs = length ys)\n  x # xs \\<preceq>\\<^sub>b y # ys\n\ngoal (1 subgoal):\n 1. x \\<longrightarrow> y &&&\n    \\<forall>i<length xs. xs ! i \\<longrightarrow> ys ! i &&&\n    length xs = length ys", "by simp_all"], ["proof (state)\nthis:\n  x \\<longrightarrow> y\n  \\<forall>i<length xs. xs ! i \\<longrightarrow> ys ! i\n  length xs = length ys\n\ngoal (2 subgoals):\n 1. x # xs \\<preceq>\\<^sub>b y # ys \\<Longrightarrow>\n    (\\<forall>i<length (x # xs).\n        (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n    length (x # xs) = length (y # ys)\n 2. (\\<forall>i<length (x # xs).\n        (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n    length (x # xs) = length (y # ys) \\<Longrightarrow>\n    x # xs \\<preceq>\\<^sub>b y # ys", "from \\<open>x \\<longrightarrow> y\\<close>"], ["proof (chain)\npicking this:\n  x \\<longrightarrow> y", "have \"(x#xs) ! 0 \\<longrightarrow> (y#ys) ! 0\""], ["proof (prove)\nusing this:\n  x \\<longrightarrow> y\n\ngoal (1 subgoal):\n 1. (x # xs) ! 0 \\<longrightarrow> (y # ys) ! 0", "by simp"], ["proof (state)\nthis:\n  (x # xs) ! 0 \\<longrightarrow> (y # ys) ! 0\n\ngoal (2 subgoals):\n 1. x # xs \\<preceq>\\<^sub>b y # ys \\<Longrightarrow>\n    (\\<forall>i<length (x # xs).\n        (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n    length (x # xs) = length (y # ys)\n 2. (\\<forall>i<length (x # xs).\n        (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n    length (x # xs) = length (y # ys) \\<Longrightarrow>\n    x # xs \\<preceq>\\<^sub>b y # ys", "{"], ["proof (state)\nthis:\n  (x # xs) ! 0 \\<longrightarrow> (y # ys) ! 0\n\ngoal (2 subgoals):\n 1. x # xs \\<preceq>\\<^sub>b y # ys \\<Longrightarrow>\n    (\\<forall>i<length (x # xs).\n        (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n    length (x # xs) = length (y # ys)\n 2. (\\<forall>i<length (x # xs).\n        (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n    length (x # xs) = length (y # ys) \\<Longrightarrow>\n    x # xs \\<preceq>\\<^sub>b y # ys", "fix i"], ["proof (state)\ngoal (2 subgoals):\n 1. x # xs \\<preceq>\\<^sub>b y # ys \\<Longrightarrow>\n    (\\<forall>i<length (x # xs).\n        (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n    length (x # xs) = length (y # ys)\n 2. (\\<forall>i<length (x # xs).\n        (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n    length (x # xs) = length (y # ys) \\<Longrightarrow>\n    x # xs \\<preceq>\\<^sub>b y # ys", "assume \"i > 0\" and \"i < length (x#xs)\""], ["proof (state)\nthis:\n  0 < i\n  i < length (x # xs)\n\ngoal (2 subgoals):\n 1. x # xs \\<preceq>\\<^sub>b y # ys \\<Longrightarrow>\n    (\\<forall>i<length (x # xs).\n        (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n    length (x # xs) = length (y # ys)\n 2. (\\<forall>i<length (x # xs).\n        (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n    length (x # xs) = length (y # ys) \\<Longrightarrow>\n    x # xs \\<preceq>\\<^sub>b y # ys", "then"], ["proof (chain)\npicking this:\n  0 < i\n  i < length (x # xs)", "obtain j where \"i = Suc j\" and \"j < length xs\""], ["proof (prove)\nusing this:\n  0 < i\n  i < length (x # xs)\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        \\<lbrakk>i = Suc j; j < length xs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(cases i) auto"], ["proof (state)\nthis:\n  i = Suc j\n  j < length xs\n\ngoal (2 subgoals):\n 1. x # xs \\<preceq>\\<^sub>b y # ys \\<Longrightarrow>\n    (\\<forall>i<length (x # xs).\n        (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n    length (x # xs) = length (y # ys)\n 2. (\\<forall>i<length (x # xs).\n        (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n    length (x # xs) = length (y # ys) \\<Longrightarrow>\n    x # xs \\<preceq>\\<^sub>b y # ys", "with \\<open>\\<forall>i < length xs. xs ! i \\<longrightarrow> ys ! i\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>i<length xs. xs ! i \\<longrightarrow> ys ! i\n  i = Suc j\n  j < length xs", "have \"(x#xs) ! i \\<longrightarrow> (y#ys) ! i\""], ["proof (prove)\nusing this:\n  \\<forall>i<length xs. xs ! i \\<longrightarrow> ys ! i\n  i = Suc j\n  j < length xs\n\ngoal (1 subgoal):\n 1. (x # xs) ! i \\<longrightarrow> (y # ys) ! i", "by auto"], ["proof (state)\nthis:\n  (x # xs) ! i \\<longrightarrow> (y # ys) ! i\n\ngoal (2 subgoals):\n 1. x # xs \\<preceq>\\<^sub>b y # ys \\<Longrightarrow>\n    (\\<forall>i<length (x # xs).\n        (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n    length (x # xs) = length (y # ys)\n 2. (\\<forall>i<length (x # xs).\n        (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n    length (x # xs) = length (y # ys) \\<Longrightarrow>\n    x # xs \\<preceq>\\<^sub>b y # ys", "}"], ["proof (state)\nthis:\n  \\<lbrakk>0 < ?i2; ?i2 < length (x # xs)\\<rbrakk>\n  \\<Longrightarrow> (x # xs) ! ?i2 \\<longrightarrow> (y # ys) ! ?i2\n\ngoal (2 subgoals):\n 1. x # xs \\<preceq>\\<^sub>b y # ys \\<Longrightarrow>\n    (\\<forall>i<length (x # xs).\n        (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n    length (x # xs) = length (y # ys)\n 2. (\\<forall>i<length (x # xs).\n        (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n    length (x # xs) = length (y # ys) \\<Longrightarrow>\n    x # xs \\<preceq>\\<^sub>b y # ys", "hence \"\\<forall>i < length (x#xs). i > 0 \\<longrightarrow> (x#xs) ! i \\<longrightarrow> (y#ys) ! i\""], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < ?i2; ?i2 < length (x # xs)\\<rbrakk>\n  \\<Longrightarrow> (x # xs) ! ?i2 \\<longrightarrow> (y # ys) ! ?i2\n\ngoal (1 subgoal):\n 1. \\<forall>i<length (x # xs).\n       0 < i \\<longrightarrow> (x # xs) ! i \\<longrightarrow> (y # ys) ! i", "by simp"], ["proof (state)\nthis:\n  \\<forall>i<length (x # xs).\n     0 < i \\<longrightarrow> (x # xs) ! i \\<longrightarrow> (y # ys) ! i\n\ngoal (2 subgoals):\n 1. x # xs \\<preceq>\\<^sub>b y # ys \\<Longrightarrow>\n    (\\<forall>i<length (x # xs).\n        (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n    length (x # xs) = length (y # ys)\n 2. (\\<forall>i<length (x # xs).\n        (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n    length (x # xs) = length (y # ys) \\<Longrightarrow>\n    x # xs \\<preceq>\\<^sub>b y # ys", "with \\<open>(x#xs) ! 0 \\<longrightarrow> (y#ys) ! 0\\<close> \\<open>length xs = length ys\\<close>"], ["proof (chain)\npicking this:\n  (x # xs) ! 0 \\<longrightarrow> (y # ys) ! 0\n  length xs = length ys\n  \\<forall>i<length (x # xs).\n     0 < i \\<longrightarrow> (x # xs) ! i \\<longrightarrow> (y # ys) ! i", "show \"(\\<forall>i < length (x#xs). (x#xs) ! i \\<longrightarrow> (y#ys) ! i) \\<and> \n      length (x#xs) = length (y#ys)\""], ["proof (prove)\nusing this:\n  (x # xs) ! 0 \\<longrightarrow> (y # ys) ! 0\n  length xs = length ys\n  \\<forall>i<length (x # xs).\n     0 < i \\<longrightarrow> (x # xs) ! i \\<longrightarrow> (y # ys) ! i\n\ngoal (1 subgoal):\n 1. (\\<forall>i<length (x # xs).\n        (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n    length (x # xs) = length (y # ys)", "by clarsimp(case_tac \"i>0\",auto)"], ["proof (state)\nthis:\n  (\\<forall>i<length (x # xs).\n      (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n  length (x # xs) = length (y # ys)\n\ngoal (1 subgoal):\n 1. (\\<forall>i<length (x # xs).\n        (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n    length (x # xs) = length (y # ys) \\<Longrightarrow>\n    x # xs \\<preceq>\\<^sub>b y # ys", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<forall>i<length (x # xs).\n        (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n    length (x # xs) = length (y # ys) \\<Longrightarrow>\n    x # xs \\<preceq>\\<^sub>b y # ys", "assume \"(\\<forall>i < length (x#xs). (x#xs) ! i \\<longrightarrow> (y#ys) ! i) \\<and> \n      length (x#xs) = length (y#ys)\""], ["proof (state)\nthis:\n  (\\<forall>i<length (x # xs).\n      (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n  length (x # xs) = length (y # ys)\n\ngoal (1 subgoal):\n 1. (\\<forall>i<length (x # xs).\n        (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n    length (x # xs) = length (y # ys) \\<Longrightarrow>\n    x # xs \\<preceq>\\<^sub>b y # ys", "hence \"\\<forall>i < length (x#xs). (x#xs) ! i \\<longrightarrow> (y#ys) ! i\" \n      and \"length (x#xs) = length (y#ys)\""], ["proof (prove)\nusing this:\n  (\\<forall>i<length (x # xs).\n      (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n  length (x # xs) = length (y # ys)\n\ngoal (1 subgoal):\n 1. \\<forall>i<length (x # xs).\n       (x # xs) ! i \\<longrightarrow> (y # ys) ! i &&&\n    length (x # xs) = length (y # ys)", "by simp_all"], ["proof (state)\nthis:\n  \\<forall>i<length (x # xs). (x # xs) ! i \\<longrightarrow> (y # ys) ! i\n  length (x # xs) = length (y # ys)\n\ngoal (1 subgoal):\n 1. (\\<forall>i<length (x # xs).\n        (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n    length (x # xs) = length (y # ys) \\<Longrightarrow>\n    x # xs \\<preceq>\\<^sub>b y # ys", "from \\<open>\\<forall>i < length (x#xs). (x#xs) ! i \\<longrightarrow> (y#ys) ! i\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>i<length (x # xs). (x # xs) ! i \\<longrightarrow> (y # ys) ! i", "have \"\\<forall>i < length xs. xs ! i \\<longrightarrow> ys ! i\""], ["proof (prove)\nusing this:\n  \\<forall>i<length (x # xs). (x # xs) ! i \\<longrightarrow> (y # ys) ! i\n\ngoal (1 subgoal):\n 1. \\<forall>i<length xs. xs ! i \\<longrightarrow> ys ! i", "by clarsimp(erule_tac x=\"Suc i\" in allE,auto)"], ["proof (state)\nthis:\n  \\<forall>i<length xs. xs ! i \\<longrightarrow> ys ! i\n\ngoal (1 subgoal):\n 1. (\\<forall>i<length (x # xs).\n        (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n    length (x # xs) = length (y # ys) \\<Longrightarrow>\n    x # xs \\<preceq>\\<^sub>b y # ys", "with eq \\<open>length (x#xs) = length (y#ys)\\<close>"], ["proof (chain)\npicking this:\n  xs \\<preceq>\\<^sub>b ys =\n  ((\\<forall>i<length xs. xs ! i \\<longrightarrow> ys ! i) \\<and>\n   length xs = length ys)\n  length (x # xs) = length (y # ys)\n  \\<forall>i<length xs. xs ! i \\<longrightarrow> ys ! i", "have \"xs \\<preceq>\\<^sub>b ys\""], ["proof (prove)\nusing this:\n  xs \\<preceq>\\<^sub>b ys =\n  ((\\<forall>i<length xs. xs ! i \\<longrightarrow> ys ! i) \\<and>\n   length xs = length ys)\n  length (x # xs) = length (y # ys)\n  \\<forall>i<length xs. xs ! i \\<longrightarrow> ys ! i\n\ngoal (1 subgoal):\n 1. xs \\<preceq>\\<^sub>b ys", "by simp"], ["proof (state)\nthis:\n  xs \\<preceq>\\<^sub>b ys\n\ngoal (1 subgoal):\n 1. (\\<forall>i<length (x # xs).\n        (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n    length (x # xs) = length (y # ys) \\<Longrightarrow>\n    x # xs \\<preceq>\\<^sub>b y # ys", "from \\<open>\\<forall>i < length (x#xs). (x#xs) ! i \\<longrightarrow> (y#ys) ! i\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>i<length (x # xs). (x # xs) ! i \\<longrightarrow> (y # ys) ! i", "have \"x \\<longrightarrow> y\""], ["proof (prove)\nusing this:\n  \\<forall>i<length (x # xs). (x # xs) ! i \\<longrightarrow> (y # ys) ! i\n\ngoal (1 subgoal):\n 1. x \\<longrightarrow> y", "by(erule_tac x=\"0\" in allE) simp"], ["proof (state)\nthis:\n  x \\<longrightarrow> y\n\ngoal (1 subgoal):\n 1. (\\<forall>i<length (x # xs).\n        (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n    length (x # xs) = length (y # ys) \\<Longrightarrow>\n    x # xs \\<preceq>\\<^sub>b y # ys", "with \\<open>xs \\<preceq>\\<^sub>b ys\\<close>"], ["proof (chain)\npicking this:\n  xs \\<preceq>\\<^sub>b ys\n  x \\<longrightarrow> y", "show \"x#xs \\<preceq>\\<^sub>b y#ys\""], ["proof (prove)\nusing this:\n  xs \\<preceq>\\<^sub>b ys\n  x \\<longrightarrow> y\n\ngoal (1 subgoal):\n 1. x # xs \\<preceq>\\<^sub>b y # ys", "by simp"], ["proof (state)\nthis:\n  x # xs \\<preceq>\\<^sub>b y # ys\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x # xs \\<preceq>\\<^sub>b y # ys =\n  ((\\<forall>i<length (x # xs).\n       (x # xs) ! i \\<longrightarrow> (y # ys) ! i) \\<and>\n   length (x # xs) = length (y # ys))\n\ngoal (3 subgoals):\n 1. [] \\<preceq>\\<^sub>b [] =\n    ((\\<forall>i<length []. [] ! i \\<longrightarrow> [] ! i) \\<and>\n     length [] = length [])\n 2. \\<And>v va.\n       v # va \\<preceq>\\<^sub>b [] =\n       ((\\<forall>i<length (v # va).\n            (v # va) ! i \\<longrightarrow> [] ! i) \\<and>\n        length (v # va) = length [])\n 3. \\<And>v va.\n       [] \\<preceq>\\<^sub>b v # va =\n       ((\\<forall>i<length []. [] ! i \\<longrightarrow> (v # va) ! i) \\<and>\n        length [] = length (v # va))", "qed simp_all"], ["", "subsection \\<open>$\\preceq_b$ is an order on bit vectors with minimal and \n  maximal element\\<close>"], ["", "lemma minimal_element:\n  \"replicate (length xs) False \\<preceq>\\<^sub>b xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. replicate (length xs) False \\<preceq>\\<^sub>b xs", "by(induct xs) auto"], ["", "lemma maximal_element:\n  \"xs \\<preceq>\\<^sub>b replicate (length xs) True\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<preceq>\\<^sub>b replicate (length xs) True", "by(induct xs) auto"], ["", "lemma bv_leqs_refl:\"xs \\<preceq>\\<^sub>b xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<preceq>\\<^sub>b xs", "by(induct xs) auto"], ["", "lemma bv_leqs_trans:\"\\<lbrakk>xs \\<preceq>\\<^sub>b ys; ys \\<preceq>\\<^sub>b zs\\<rbrakk> \\<Longrightarrow> xs \\<preceq>\\<^sub>b zs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<preceq>\\<^sub>b ys; ys \\<preceq>\\<^sub>b zs\\<rbrakk>\n    \\<Longrightarrow> xs \\<preceq>\\<^sub>b zs", "proof(induct xs ys arbitrary:zs rule:bv_leqs.induct)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>zs.\n       \\<lbrakk>[] \\<preceq>\\<^sub>b []; [] \\<preceq>\\<^sub>b zs\\<rbrakk>\n       \\<Longrightarrow> [] \\<preceq>\\<^sub>b zs\n 2. \\<And>x xs y ys zs.\n       \\<lbrakk>\\<And>zs.\n                   \\<lbrakk>xs \\<preceq>\\<^sub>b ys;\n                    ys \\<preceq>\\<^sub>b zs\\<rbrakk>\n                   \\<Longrightarrow> xs \\<preceq>\\<^sub>b zs;\n        x # xs \\<preceq>\\<^sub>b y # ys;\n        y # ys \\<preceq>\\<^sub>b zs\\<rbrakk>\n       \\<Longrightarrow> x # xs \\<preceq>\\<^sub>b zs\n 3. \\<And>v va zs.\n       \\<lbrakk>v # va \\<preceq>\\<^sub>b [];\n        [] \\<preceq>\\<^sub>b zs\\<rbrakk>\n       \\<Longrightarrow> v # va \\<preceq>\\<^sub>b zs\n 4. \\<And>v va zs.\n       \\<lbrakk>[] \\<preceq>\\<^sub>b v # va;\n        v # va \\<preceq>\\<^sub>b zs\\<rbrakk>\n       \\<Longrightarrow> [] \\<preceq>\\<^sub>b zs", "case (2 x xs y ys)"], ["proof (state)\nthis:\n  \\<lbrakk>xs \\<preceq>\\<^sub>b ys; ys \\<preceq>\\<^sub>b ?zs\\<rbrakk>\n  \\<Longrightarrow> xs \\<preceq>\\<^sub>b ?zs\n  x # xs \\<preceq>\\<^sub>b y # ys\n  y # ys \\<preceq>\\<^sub>b zs\n\ngoal (4 subgoals):\n 1. \\<And>zs.\n       \\<lbrakk>[] \\<preceq>\\<^sub>b []; [] \\<preceq>\\<^sub>b zs\\<rbrakk>\n       \\<Longrightarrow> [] \\<preceq>\\<^sub>b zs\n 2. \\<And>x xs y ys zs.\n       \\<lbrakk>\\<And>zs.\n                   \\<lbrakk>xs \\<preceq>\\<^sub>b ys;\n                    ys \\<preceq>\\<^sub>b zs\\<rbrakk>\n                   \\<Longrightarrow> xs \\<preceq>\\<^sub>b zs;\n        x # xs \\<preceq>\\<^sub>b y # ys;\n        y # ys \\<preceq>\\<^sub>b zs\\<rbrakk>\n       \\<Longrightarrow> x # xs \\<preceq>\\<^sub>b zs\n 3. \\<And>v va zs.\n       \\<lbrakk>v # va \\<preceq>\\<^sub>b [];\n        [] \\<preceq>\\<^sub>b zs\\<rbrakk>\n       \\<Longrightarrow> v # va \\<preceq>\\<^sub>b zs\n 4. \\<And>v va zs.\n       \\<lbrakk>[] \\<preceq>\\<^sub>b v # va;\n        v # va \\<preceq>\\<^sub>b zs\\<rbrakk>\n       \\<Longrightarrow> [] \\<preceq>\\<^sub>b zs", "note IH = \\<open>\\<And>zs. \\<lbrakk>xs \\<preceq>\\<^sub>b ys; ys \\<preceq>\\<^sub>b zs\\<rbrakk> \\<Longrightarrow> xs \\<preceq>\\<^sub>b zs\\<close>"], ["proof (state)\nthis:\n  \\<lbrakk>xs \\<preceq>\\<^sub>b ys; ys \\<preceq>\\<^sub>b ?zs\\<rbrakk>\n  \\<Longrightarrow> xs \\<preceq>\\<^sub>b ?zs\n\ngoal (4 subgoals):\n 1. \\<And>zs.\n       \\<lbrakk>[] \\<preceq>\\<^sub>b []; [] \\<preceq>\\<^sub>b zs\\<rbrakk>\n       \\<Longrightarrow> [] \\<preceq>\\<^sub>b zs\n 2. \\<And>x xs y ys zs.\n       \\<lbrakk>\\<And>zs.\n                   \\<lbrakk>xs \\<preceq>\\<^sub>b ys;\n                    ys \\<preceq>\\<^sub>b zs\\<rbrakk>\n                   \\<Longrightarrow> xs \\<preceq>\\<^sub>b zs;\n        x # xs \\<preceq>\\<^sub>b y # ys;\n        y # ys \\<preceq>\\<^sub>b zs\\<rbrakk>\n       \\<Longrightarrow> x # xs \\<preceq>\\<^sub>b zs\n 3. \\<And>v va zs.\n       \\<lbrakk>v # va \\<preceq>\\<^sub>b [];\n        [] \\<preceq>\\<^sub>b zs\\<rbrakk>\n       \\<Longrightarrow> v # va \\<preceq>\\<^sub>b zs\n 4. \\<And>v va zs.\n       \\<lbrakk>[] \\<preceq>\\<^sub>b v # va;\n        v # va \\<preceq>\\<^sub>b zs\\<rbrakk>\n       \\<Longrightarrow> [] \\<preceq>\\<^sub>b zs", "from \\<open>(x#xs) \\<preceq>\\<^sub>b (y#ys)\\<close>"], ["proof (chain)\npicking this:\n  x # xs \\<preceq>\\<^sub>b y # ys", "have \"xs \\<preceq>\\<^sub>b ys\" and \"x \\<longrightarrow> y\""], ["proof (prove)\nusing this:\n  x # xs \\<preceq>\\<^sub>b y # ys\n\ngoal (1 subgoal):\n 1. xs \\<preceq>\\<^sub>b ys &&& x \\<longrightarrow> y", "by simp_all"], ["proof (state)\nthis:\n  xs \\<preceq>\\<^sub>b ys\n  x \\<longrightarrow> y\n\ngoal (4 subgoals):\n 1. \\<And>zs.\n       \\<lbrakk>[] \\<preceq>\\<^sub>b []; [] \\<preceq>\\<^sub>b zs\\<rbrakk>\n       \\<Longrightarrow> [] \\<preceq>\\<^sub>b zs\n 2. \\<And>x xs y ys zs.\n       \\<lbrakk>\\<And>zs.\n                   \\<lbrakk>xs \\<preceq>\\<^sub>b ys;\n                    ys \\<preceq>\\<^sub>b zs\\<rbrakk>\n                   \\<Longrightarrow> xs \\<preceq>\\<^sub>b zs;\n        x # xs \\<preceq>\\<^sub>b y # ys;\n        y # ys \\<preceq>\\<^sub>b zs\\<rbrakk>\n       \\<Longrightarrow> x # xs \\<preceq>\\<^sub>b zs\n 3. \\<And>v va zs.\n       \\<lbrakk>v # va \\<preceq>\\<^sub>b [];\n        [] \\<preceq>\\<^sub>b zs\\<rbrakk>\n       \\<Longrightarrow> v # va \\<preceq>\\<^sub>b zs\n 4. \\<And>v va zs.\n       \\<lbrakk>[] \\<preceq>\\<^sub>b v # va;\n        v # va \\<preceq>\\<^sub>b zs\\<rbrakk>\n       \\<Longrightarrow> [] \\<preceq>\\<^sub>b zs", "from \\<open>(y#ys) \\<preceq>\\<^sub>b zs\\<close>"], ["proof (chain)\npicking this:\n  y # ys \\<preceq>\\<^sub>b zs", "obtain z zs' where \"zs = z#zs'\""], ["proof (prove)\nusing this:\n  y # ys \\<preceq>\\<^sub>b zs\n\ngoal (1 subgoal):\n 1. (\\<And>z zs'. zs = z # zs' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(cases zs) auto"], ["proof (state)\nthis:\n  zs = z # zs'\n\ngoal (4 subgoals):\n 1. \\<And>zs.\n       \\<lbrakk>[] \\<preceq>\\<^sub>b []; [] \\<preceq>\\<^sub>b zs\\<rbrakk>\n       \\<Longrightarrow> [] \\<preceq>\\<^sub>b zs\n 2. \\<And>x xs y ys zs.\n       \\<lbrakk>\\<And>zs.\n                   \\<lbrakk>xs \\<preceq>\\<^sub>b ys;\n                    ys \\<preceq>\\<^sub>b zs\\<rbrakk>\n                   \\<Longrightarrow> xs \\<preceq>\\<^sub>b zs;\n        x # xs \\<preceq>\\<^sub>b y # ys;\n        y # ys \\<preceq>\\<^sub>b zs\\<rbrakk>\n       \\<Longrightarrow> x # xs \\<preceq>\\<^sub>b zs\n 3. \\<And>v va zs.\n       \\<lbrakk>v # va \\<preceq>\\<^sub>b [];\n        [] \\<preceq>\\<^sub>b zs\\<rbrakk>\n       \\<Longrightarrow> v # va \\<preceq>\\<^sub>b zs\n 4. \\<And>v va zs.\n       \\<lbrakk>[] \\<preceq>\\<^sub>b v # va;\n        v # va \\<preceq>\\<^sub>b zs\\<rbrakk>\n       \\<Longrightarrow> [] \\<preceq>\\<^sub>b zs", "with \\<open>(y#ys) \\<preceq>\\<^sub>b zs\\<close>"], ["proof (chain)\npicking this:\n  y # ys \\<preceq>\\<^sub>b zs\n  zs = z # zs'", "have \"ys \\<preceq>\\<^sub>b zs'\" and \"y \\<longrightarrow> z\""], ["proof (prove)\nusing this:\n  y # ys \\<preceq>\\<^sub>b zs\n  zs = z # zs'\n\ngoal (1 subgoal):\n 1. ys \\<preceq>\\<^sub>b zs' &&& y \\<longrightarrow> z", "by simp_all"], ["proof (state)\nthis:\n  ys \\<preceq>\\<^sub>b zs'\n  y \\<longrightarrow> z\n\ngoal (4 subgoals):\n 1. \\<And>zs.\n       \\<lbrakk>[] \\<preceq>\\<^sub>b []; [] \\<preceq>\\<^sub>b zs\\<rbrakk>\n       \\<Longrightarrow> [] \\<preceq>\\<^sub>b zs\n 2. \\<And>x xs y ys zs.\n       \\<lbrakk>\\<And>zs.\n                   \\<lbrakk>xs \\<preceq>\\<^sub>b ys;\n                    ys \\<preceq>\\<^sub>b zs\\<rbrakk>\n                   \\<Longrightarrow> xs \\<preceq>\\<^sub>b zs;\n        x # xs \\<preceq>\\<^sub>b y # ys;\n        y # ys \\<preceq>\\<^sub>b zs\\<rbrakk>\n       \\<Longrightarrow> x # xs \\<preceq>\\<^sub>b zs\n 3. \\<And>v va zs.\n       \\<lbrakk>v # va \\<preceq>\\<^sub>b [];\n        [] \\<preceq>\\<^sub>b zs\\<rbrakk>\n       \\<Longrightarrow> v # va \\<preceq>\\<^sub>b zs\n 4. \\<And>v va zs.\n       \\<lbrakk>[] \\<preceq>\\<^sub>b v # va;\n        v # va \\<preceq>\\<^sub>b zs\\<rbrakk>\n       \\<Longrightarrow> [] \\<preceq>\\<^sub>b zs", "from IH[OF \\<open>xs \\<preceq>\\<^sub>b ys\\<close> \\<open>ys \\<preceq>\\<^sub>b zs'\\<close>]"], ["proof (chain)\npicking this:\n  xs \\<preceq>\\<^sub>b zs'", "have \"xs \\<preceq>\\<^sub>b zs'\""], ["proof (prove)\nusing this:\n  xs \\<preceq>\\<^sub>b zs'\n\ngoal (1 subgoal):\n 1. xs \\<preceq>\\<^sub>b zs'", "."], ["proof (state)\nthis:\n  xs \\<preceq>\\<^sub>b zs'\n\ngoal (4 subgoals):\n 1. \\<And>zs.\n       \\<lbrakk>[] \\<preceq>\\<^sub>b []; [] \\<preceq>\\<^sub>b zs\\<rbrakk>\n       \\<Longrightarrow> [] \\<preceq>\\<^sub>b zs\n 2. \\<And>x xs y ys zs.\n       \\<lbrakk>\\<And>zs.\n                   \\<lbrakk>xs \\<preceq>\\<^sub>b ys;\n                    ys \\<preceq>\\<^sub>b zs\\<rbrakk>\n                   \\<Longrightarrow> xs \\<preceq>\\<^sub>b zs;\n        x # xs \\<preceq>\\<^sub>b y # ys;\n        y # ys \\<preceq>\\<^sub>b zs\\<rbrakk>\n       \\<Longrightarrow> x # xs \\<preceq>\\<^sub>b zs\n 3. \\<And>v va zs.\n       \\<lbrakk>v # va \\<preceq>\\<^sub>b [];\n        [] \\<preceq>\\<^sub>b zs\\<rbrakk>\n       \\<Longrightarrow> v # va \\<preceq>\\<^sub>b zs\n 4. \\<And>v va zs.\n       \\<lbrakk>[] \\<preceq>\\<^sub>b v # va;\n        v # va \\<preceq>\\<^sub>b zs\\<rbrakk>\n       \\<Longrightarrow> [] \\<preceq>\\<^sub>b zs", "with \\<open>x \\<longrightarrow> y\\<close> \\<open>y \\<longrightarrow> z\\<close> \\<open>zs = z#zs'\\<close>"], ["proof (chain)\npicking this:\n  x \\<longrightarrow> y\n  y \\<longrightarrow> z\n  zs = z # zs'\n  xs \\<preceq>\\<^sub>b zs'", "show ?case"], ["proof (prove)\nusing this:\n  x \\<longrightarrow> y\n  y \\<longrightarrow> z\n  zs = z # zs'\n  xs \\<preceq>\\<^sub>b zs'\n\ngoal (1 subgoal):\n 1. x # xs \\<preceq>\\<^sub>b zs", "by simp"], ["proof (state)\nthis:\n  x # xs \\<preceq>\\<^sub>b zs\n\ngoal (3 subgoals):\n 1. \\<And>zs.\n       \\<lbrakk>[] \\<preceq>\\<^sub>b []; [] \\<preceq>\\<^sub>b zs\\<rbrakk>\n       \\<Longrightarrow> [] \\<preceq>\\<^sub>b zs\n 2. \\<And>v va zs.\n       \\<lbrakk>v # va \\<preceq>\\<^sub>b [];\n        [] \\<preceq>\\<^sub>b zs\\<rbrakk>\n       \\<Longrightarrow> v # va \\<preceq>\\<^sub>b zs\n 3. \\<And>v va zs.\n       \\<lbrakk>[] \\<preceq>\\<^sub>b v # va;\n        v # va \\<preceq>\\<^sub>b zs\\<rbrakk>\n       \\<Longrightarrow> [] \\<preceq>\\<^sub>b zs", "qed simp_all"], ["", "lemma bv_leqs_antisym:\"\\<lbrakk>xs \\<preceq>\\<^sub>b ys; ys \\<preceq>\\<^sub>b xs\\<rbrakk> \\<Longrightarrow> xs = ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<preceq>\\<^sub>b ys; ys \\<preceq>\\<^sub>b xs\\<rbrakk>\n    \\<Longrightarrow> xs = ys", "by(induct xs ys rule:bv_leqs.induct)auto"], ["", "definition bv_less :: \"bit_vector \\<Rightarrow> bit_vector \\<Rightarrow> bool\" (\"_ \\<prec>\\<^sub>b _\" 99)\n  where \"xs \\<prec>\\<^sub>b ys \\<equiv> xs \\<preceq>\\<^sub>b ys \\<and> xs \\<noteq> ys\""], ["", "interpretation order \"bv_leqs\" \"bv_less\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.order bv_leqs bv_less", "by(unfold_locales,\n   auto intro:bv_leqs_refl bv_leqs_trans bv_leqs_antisym simp:bv_less_def)"], ["", "end"]]}