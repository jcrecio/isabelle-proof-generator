{"file_name": "/home/qj213/afp-2021-10-22/thys/Slicing/While/Semantics.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Slicing", "problem_names": ["lemmas red_induct = red.induct[split_format (complete)]", "lemma step_label_less:\n  \"prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto> \\<langle>c',s',l'\\<rangle> \\<Longrightarrow> l < #:prog \\<and> l' < #:prog\"", "lemmas converse_rtranclp_induct3 =\n  converse_rtranclp_induct[of _ \"(ax,ay,az)\" \"(bx,by,bz)\", split_rule,\n                 consumes 1, case_names refl step]", "lemma step_red:\n  \"prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto> \\<langle>c',s',l'\\<rangle> \\<Longrightarrow> \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\"", "lemma steps_reds:\n  \"prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>* \\<langle>c',s',l'\\<rangle> \\<Longrightarrow> \\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>\"", "lemma red_step:\n  \"\\<lbrakk>labels prog l c; \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>l'. prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto> \\<langle>c',s',l'\\<rangle> \\<and> labels prog l' c'\"", "lemma reds_steps:\n  \"\\<lbrakk>\\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>; labels prog l c\\<rbrakk>\n  \\<Longrightarrow> \\<exists>l'. prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>* \\<langle>c',s',l'\\<rangle> \\<and> labels prog l' c'\"", "theorem reds_steps_bisimulation:\n  \"labels prog l c \\<Longrightarrow> (\\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>) = \n     (\\<exists>l'. prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>* \\<langle>c',s',l'\\<rangle> \\<and> labels prog l' c')\""], "translations": [["", "lemmas red_induct = red.induct[split_format (complete)]"], ["", "abbreviation reds ::\"cmd \\<Rightarrow> state \\<Rightarrow> cmd \\<Rightarrow> state \\<Rightarrow> bool\" \n   (\"((1\\<langle>_,/_\\<rangle>) \\<rightarrow>*/ (1\\<langle>_,/_\\<rangle>))\" [0,0,0,0] 81) where\n  \"\\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle> == red\\<^sup>*\\<^sup>* (c,s) (c',s')\""], ["", "subsection\\<open>Label Semantics\\<close>"], ["", "inductive step :: \"cmd \\<Rightarrow> cmd \\<Rightarrow> state \\<Rightarrow> nat \\<Rightarrow> cmd \\<Rightarrow> state \\<Rightarrow> nat \\<Rightarrow> bool\"\n   (\"(_ \\<turnstile> (1\\<langle>_,/_,/_\\<rangle>) \\<leadsto>/ (1\\<langle>_,/_,/_\\<rangle>))\" [51,0,0,0,0,0,0] 81)\nwhere\n\nStepLAss:\n  \"V:=e \\<turnstile> \\<langle>V:=e,s,0\\<rangle> \\<leadsto> \\<langle>Skip,s(V:=(interpret e s)),1\\<rangle>\"\n\n| StepSeq:\n  \"\\<lbrakk>labels (c\\<^sub>1;;c\\<^sub>2) l (Skip;;c\\<^sub>2); labels (c\\<^sub>1;;c\\<^sub>2) #:c\\<^sub>1 c\\<^sub>2; l < #:c\\<^sub>1\\<rbrakk> \n  \\<Longrightarrow> c\\<^sub>1;;c\\<^sub>2 \\<turnstile> \\<langle>Skip;;c\\<^sub>2,s,l\\<rangle> \\<leadsto> \\<langle>c\\<^sub>2,s,#:c\\<^sub>1\\<rangle>\"\n\n| StepSeqWhile:\n  \"labels (while (b) c') l (Skip;;while (b) c')\n  \\<Longrightarrow> while (b) c' \\<turnstile> \\<langle>Skip;;while (b) c',s,l\\<rangle> \\<leadsto> \\<langle>while (b) c',s,0\\<rangle>\"\n\n| StepCondTrue:\n  \"interpret b s = Some true \n     \\<Longrightarrow> if (b) c\\<^sub>1 else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,s,0\\<rangle> \\<leadsto> \\<langle>c\\<^sub>1,s,1\\<rangle>\"\n\n| StepCondFalse:\n  \"interpret b s = Some false \n  \\<Longrightarrow> if (b) c\\<^sub>1 else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,s,0\\<rangle> \\<leadsto> \\<langle>c\\<^sub>2,s,#:c\\<^sub>1 + 1\\<rangle>\"\n\n| StepWhileTrue:\n  \"interpret b s = Some true \n     \\<Longrightarrow> while (b) c \\<turnstile> \\<langle>while (b) c,s,0\\<rangle> \\<leadsto> \\<langle>c;;while (b) c,s,2\\<rangle>\"\n\n| StepWhileFalse:\n  \"interpret b s = Some false \\<Longrightarrow> while (b) c \\<turnstile> \\<langle>while (b) c,s,0\\<rangle> \\<leadsto> \\<langle>Skip,s,1\\<rangle>\"\n\n| StepRecSeq1:\n  \"prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto> \\<langle>c',s',l'\\<rangle>\n  \\<Longrightarrow> prog;;c\\<^sub>2 \\<turnstile> \\<langle>c;;c\\<^sub>2,s,l\\<rangle> \\<leadsto> \\<langle>c';;c\\<^sub>2,s',l'\\<rangle>\"\n\n| StepRecSeq2:\n  \"prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto> \\<langle>c',s',l'\\<rangle> \n  \\<Longrightarrow> c\\<^sub>1;;prog \\<turnstile> \\<langle>c,s,l + #:c\\<^sub>1\\<rangle> \\<leadsto> \\<langle>c',s',l' + #:c\\<^sub>1\\<rangle>\"\n\n| StepRecCond1:\n  \"prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto> \\<langle>c',s',l'\\<rangle> \n  \\<Longrightarrow> if (b) prog else c\\<^sub>2 \\<turnstile> \\<langle>c,s,l + 1\\<rangle> \\<leadsto> \\<langle>c',s',l' + 1\\<rangle>\"\n\n| StepRecCond2:\n  \"prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto> \\<langle>c',s',l'\\<rangle> \n  \\<Longrightarrow> if (b) c\\<^sub>1 else prog \\<turnstile> \\<langle>c,s,l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto> \\<langle>c',s',l' + #:c\\<^sub>1 + 1\\<rangle>\"\n\n| StepRecWhile:\n  \"cx \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto> \\<langle>c',s',l'\\<rangle>\n  \\<Longrightarrow> while (b) cx \\<turnstile> \\<langle>c;;while (b) cx,s,l + 2\\<rangle> \\<leadsto> \\<langle>c';;while (b) cx,s',l' + 2\\<rangle>\""], ["", "lemma step_label_less:\n  \"prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto> \\<langle>c',s',l'\\<rangle> \\<Longrightarrow> l < #:prog \\<and> l' < #:prog\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n    \\<langle>c',s',l'\\<rangle> \\<Longrightarrow>\n    l < #:prog \\<and> l' < #:prog", "proof(induct rule:step.induct)"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>V e s. 0 < #:V:=e \\<and> 1 < #:V:=e\n 2. \\<And>c\\<^sub>1 c\\<^sub>2 l s.\n       \\<lbrakk>labels (c\\<^sub>1;; c\\<^sub>2) l (Skip;; c\\<^sub>2);\n        labels (c\\<^sub>1;; c\\<^sub>2) #:c\\<^sub>1 c\\<^sub>2;\n        l < #:c\\<^sub>1\\<rbrakk>\n       \\<Longrightarrow> l < #:c\\<^sub>1;; c\\<^sub>2 \\<and>\n                         #:c\\<^sub>1 < #:c\\<^sub>1;; c\\<^sub>2\n 3. \\<And>b c' l s.\n       labels (while (b) c') l (Skip;; while (b) c') \\<Longrightarrow>\n       l < #:while (b) c' \\<and> 0 < #:while (b) c'\n 4. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some true \\<Longrightarrow>\n       0 < #:if (b) c\\<^sub>1 else c\\<^sub>2 \\<and>\n       1 < #:if (b) c\\<^sub>1 else c\\<^sub>2\n 5. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       0 < #:if (b) c\\<^sub>1 else c\\<^sub>2 \\<and>\n       #:c\\<^sub>1 + 1 < #:if (b) c\\<^sub>1 else c\\<^sub>2\n 6. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       0 < #:while (b) c \\<and> 2 < #:while (b) c\n 7. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       0 < #:while (b) c \\<and> 1 < #:while (b) c\n 8. \\<And>prog c s l c' s' l' c\\<^sub>2.\n       \\<lbrakk>prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                \\<langle>c',s',l'\\<rangle>;\n        l < #:prog \\<and> l' < #:prog\\<rbrakk>\n       \\<Longrightarrow> l < #:prog;; c\\<^sub>2 \\<and>\n                         l' < #:prog;; c\\<^sub>2\n 9. \\<And>prog c s l c' s' l' c\\<^sub>1.\n       \\<lbrakk>prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                \\<langle>c',s',l'\\<rangle>;\n        l < #:prog \\<and> l' < #:prog\\<rbrakk>\n       \\<Longrightarrow> l + #:c\\<^sub>1 < #:c\\<^sub>1;; prog \\<and>\n                         l' + #:c\\<^sub>1 < #:c\\<^sub>1;; prog\n 10. \\<And>prog c s l c' s' l' b c\\<^sub>2.\n        \\<lbrakk>prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                 \\<langle>c',s',l'\\<rangle>;\n         l < #:prog \\<and> l' < #:prog\\<rbrakk>\n        \\<Longrightarrow> l + 1 < #:if (b) prog else c\\<^sub>2 \\<and>\n                          l' + 1 < #:if (b) prog else c\\<^sub>2\nA total of 12 subgoals...", "case (StepSeq c\\<^sub>1 c\\<^sub>2 l s)"], ["proof (state)\nthis:\n  labels (c\\<^sub>1;; c\\<^sub>2) l (Skip;; c\\<^sub>2)\n  labels (c\\<^sub>1;; c\\<^sub>2) #:c\\<^sub>1 c\\<^sub>2\n  l < #:c\\<^sub>1\n\ngoal (12 subgoals):\n 1. \\<And>V e s. 0 < #:V:=e \\<and> 1 < #:V:=e\n 2. \\<And>c\\<^sub>1 c\\<^sub>2 l s.\n       \\<lbrakk>labels (c\\<^sub>1;; c\\<^sub>2) l (Skip;; c\\<^sub>2);\n        labels (c\\<^sub>1;; c\\<^sub>2) #:c\\<^sub>1 c\\<^sub>2;\n        l < #:c\\<^sub>1\\<rbrakk>\n       \\<Longrightarrow> l < #:c\\<^sub>1;; c\\<^sub>2 \\<and>\n                         #:c\\<^sub>1 < #:c\\<^sub>1;; c\\<^sub>2\n 3. \\<And>b c' l s.\n       labels (while (b) c') l (Skip;; while (b) c') \\<Longrightarrow>\n       l < #:while (b) c' \\<and> 0 < #:while (b) c'\n 4. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some true \\<Longrightarrow>\n       0 < #:if (b) c\\<^sub>1 else c\\<^sub>2 \\<and>\n       1 < #:if (b) c\\<^sub>1 else c\\<^sub>2\n 5. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       0 < #:if (b) c\\<^sub>1 else c\\<^sub>2 \\<and>\n       #:c\\<^sub>1 + 1 < #:if (b) c\\<^sub>1 else c\\<^sub>2\n 6. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       0 < #:while (b) c \\<and> 2 < #:while (b) c\n 7. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       0 < #:while (b) c \\<and> 1 < #:while (b) c\n 8. \\<And>prog c s l c' s' l' c\\<^sub>2.\n       \\<lbrakk>prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                \\<langle>c',s',l'\\<rangle>;\n        l < #:prog \\<and> l' < #:prog\\<rbrakk>\n       \\<Longrightarrow> l < #:prog;; c\\<^sub>2 \\<and>\n                         l' < #:prog;; c\\<^sub>2\n 9. \\<And>prog c s l c' s' l' c\\<^sub>1.\n       \\<lbrakk>prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                \\<langle>c',s',l'\\<rangle>;\n        l < #:prog \\<and> l' < #:prog\\<rbrakk>\n       \\<Longrightarrow> l + #:c\\<^sub>1 < #:c\\<^sub>1;; prog \\<and>\n                         l' + #:c\\<^sub>1 < #:c\\<^sub>1;; prog\n 10. \\<And>prog c s l c' s' l' b c\\<^sub>2.\n        \\<lbrakk>prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                 \\<langle>c',s',l'\\<rangle>;\n         l < #:prog \\<and> l' < #:prog\\<rbrakk>\n        \\<Longrightarrow> l + 1 < #:if (b) prog else c\\<^sub>2 \\<and>\n                          l' + 1 < #:if (b) prog else c\\<^sub>2\nA total of 12 subgoals...", "from \\<open>labels (c\\<^sub>1;;c\\<^sub>2) l (Skip;;c\\<^sub>2)\\<close>"], ["proof (chain)\npicking this:\n  labels (c\\<^sub>1;; c\\<^sub>2) l (Skip;; c\\<^sub>2)", "have \"l < #:(c\\<^sub>1;; c\\<^sub>2)\""], ["proof (prove)\nusing this:\n  labels (c\\<^sub>1;; c\\<^sub>2) l (Skip;; c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. l < #:c\\<^sub>1;; c\\<^sub>2", "by(rule label_less_num_inner_nodes)"], ["proof (state)\nthis:\n  l < #:c\\<^sub>1;; c\\<^sub>2\n\ngoal (12 subgoals):\n 1. \\<And>V e s. 0 < #:V:=e \\<and> 1 < #:V:=e\n 2. \\<And>c\\<^sub>1 c\\<^sub>2 l s.\n       \\<lbrakk>labels (c\\<^sub>1;; c\\<^sub>2) l (Skip;; c\\<^sub>2);\n        labels (c\\<^sub>1;; c\\<^sub>2) #:c\\<^sub>1 c\\<^sub>2;\n        l < #:c\\<^sub>1\\<rbrakk>\n       \\<Longrightarrow> l < #:c\\<^sub>1;; c\\<^sub>2 \\<and>\n                         #:c\\<^sub>1 < #:c\\<^sub>1;; c\\<^sub>2\n 3. \\<And>b c' l s.\n       labels (while (b) c') l (Skip;; while (b) c') \\<Longrightarrow>\n       l < #:while (b) c' \\<and> 0 < #:while (b) c'\n 4. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some true \\<Longrightarrow>\n       0 < #:if (b) c\\<^sub>1 else c\\<^sub>2 \\<and>\n       1 < #:if (b) c\\<^sub>1 else c\\<^sub>2\n 5. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       0 < #:if (b) c\\<^sub>1 else c\\<^sub>2 \\<and>\n       #:c\\<^sub>1 + 1 < #:if (b) c\\<^sub>1 else c\\<^sub>2\n 6. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       0 < #:while (b) c \\<and> 2 < #:while (b) c\n 7. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       0 < #:while (b) c \\<and> 1 < #:while (b) c\n 8. \\<And>prog c s l c' s' l' c\\<^sub>2.\n       \\<lbrakk>prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                \\<langle>c',s',l'\\<rangle>;\n        l < #:prog \\<and> l' < #:prog\\<rbrakk>\n       \\<Longrightarrow> l < #:prog;; c\\<^sub>2 \\<and>\n                         l' < #:prog;; c\\<^sub>2\n 9. \\<And>prog c s l c' s' l' c\\<^sub>1.\n       \\<lbrakk>prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                \\<langle>c',s',l'\\<rangle>;\n        l < #:prog \\<and> l' < #:prog\\<rbrakk>\n       \\<Longrightarrow> l + #:c\\<^sub>1 < #:c\\<^sub>1;; prog \\<and>\n                         l' + #:c\\<^sub>1 < #:c\\<^sub>1;; prog\n 10. \\<And>prog c s l c' s' l' b c\\<^sub>2.\n        \\<lbrakk>prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                 \\<langle>c',s',l'\\<rangle>;\n         l < #:prog \\<and> l' < #:prog\\<rbrakk>\n        \\<Longrightarrow> l + 1 < #:if (b) prog else c\\<^sub>2 \\<and>\n                          l' + 1 < #:if (b) prog else c\\<^sub>2\nA total of 12 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  l < #:c\\<^sub>1;; c\\<^sub>2\n\ngoal (1 subgoal):\n 1. l < #:c\\<^sub>1;; c\\<^sub>2 \\<and> #:c\\<^sub>1 < #:c\\<^sub>1;; c\\<^sub>2", "by(simp add:num_inner_nodes_gr_0)"], ["proof (state)\nthis:\n  l < #:c\\<^sub>1;; c\\<^sub>2 \\<and> #:c\\<^sub>1 < #:c\\<^sub>1;; c\\<^sub>2\n\ngoal (11 subgoals):\n 1. \\<And>V e s. 0 < #:V:=e \\<and> 1 < #:V:=e\n 2. \\<And>b c' l s.\n       labels (while (b) c') l (Skip;; while (b) c') \\<Longrightarrow>\n       l < #:while (b) c' \\<and> 0 < #:while (b) c'\n 3. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some true \\<Longrightarrow>\n       0 < #:if (b) c\\<^sub>1 else c\\<^sub>2 \\<and>\n       1 < #:if (b) c\\<^sub>1 else c\\<^sub>2\n 4. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       0 < #:if (b) c\\<^sub>1 else c\\<^sub>2 \\<and>\n       #:c\\<^sub>1 + 1 < #:if (b) c\\<^sub>1 else c\\<^sub>2\n 5. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       0 < #:while (b) c \\<and> 2 < #:while (b) c\n 6. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       0 < #:while (b) c \\<and> 1 < #:while (b) c\n 7. \\<And>prog c s l c' s' l' c\\<^sub>2.\n       \\<lbrakk>prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                \\<langle>c',s',l'\\<rangle>;\n        l < #:prog \\<and> l' < #:prog\\<rbrakk>\n       \\<Longrightarrow> l < #:prog;; c\\<^sub>2 \\<and>\n                         l' < #:prog;; c\\<^sub>2\n 8. \\<And>prog c s l c' s' l' c\\<^sub>1.\n       \\<lbrakk>prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                \\<langle>c',s',l'\\<rangle>;\n        l < #:prog \\<and> l' < #:prog\\<rbrakk>\n       \\<Longrightarrow> l + #:c\\<^sub>1 < #:c\\<^sub>1;; prog \\<and>\n                         l' + #:c\\<^sub>1 < #:c\\<^sub>1;; prog\n 9. \\<And>prog c s l c' s' l' b c\\<^sub>2.\n       \\<lbrakk>prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                \\<langle>c',s',l'\\<rangle>;\n        l < #:prog \\<and> l' < #:prog\\<rbrakk>\n       \\<Longrightarrow> l + 1 < #:if (b) prog else c\\<^sub>2 \\<and>\n                         l' + 1 < #:if (b) prog else c\\<^sub>2\n 10. \\<And>prog c s l c' s' l' b c\\<^sub>1.\n        \\<lbrakk>prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                 \\<langle>c',s',l'\\<rangle>;\n         l < #:prog \\<and> l' < #:prog\\<rbrakk>\n        \\<Longrightarrow> l + #:c\\<^sub>1 + 1 < #:if (b) c\\<^sub>1\n                          else prog \\<and>\n                          l' + #:c\\<^sub>1 + 1 < #:if (b) c\\<^sub>1\n                          else prog\nA total of 11 subgoals...", "next"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>V e s. 0 < #:V:=e \\<and> 1 < #:V:=e\n 2. \\<And>b c' l s.\n       labels (while (b) c') l (Skip;; while (b) c') \\<Longrightarrow>\n       l < #:while (b) c' \\<and> 0 < #:while (b) c'\n 3. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some true \\<Longrightarrow>\n       0 < #:if (b) c\\<^sub>1 else c\\<^sub>2 \\<and>\n       1 < #:if (b) c\\<^sub>1 else c\\<^sub>2\n 4. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       0 < #:if (b) c\\<^sub>1 else c\\<^sub>2 \\<and>\n       #:c\\<^sub>1 + 1 < #:if (b) c\\<^sub>1 else c\\<^sub>2\n 5. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       0 < #:while (b) c \\<and> 2 < #:while (b) c\n 6. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       0 < #:while (b) c \\<and> 1 < #:while (b) c\n 7. \\<And>prog c s l c' s' l' c\\<^sub>2.\n       \\<lbrakk>prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                \\<langle>c',s',l'\\<rangle>;\n        l < #:prog \\<and> l' < #:prog\\<rbrakk>\n       \\<Longrightarrow> l < #:prog;; c\\<^sub>2 \\<and>\n                         l' < #:prog;; c\\<^sub>2\n 8. \\<And>prog c s l c' s' l' c\\<^sub>1.\n       \\<lbrakk>prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                \\<langle>c',s',l'\\<rangle>;\n        l < #:prog \\<and> l' < #:prog\\<rbrakk>\n       \\<Longrightarrow> l + #:c\\<^sub>1 < #:c\\<^sub>1;; prog \\<and>\n                         l' + #:c\\<^sub>1 < #:c\\<^sub>1;; prog\n 9. \\<And>prog c s l c' s' l' b c\\<^sub>2.\n       \\<lbrakk>prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                \\<langle>c',s',l'\\<rangle>;\n        l < #:prog \\<and> l' < #:prog\\<rbrakk>\n       \\<Longrightarrow> l + 1 < #:if (b) prog else c\\<^sub>2 \\<and>\n                         l' + 1 < #:if (b) prog else c\\<^sub>2\n 10. \\<And>prog c s l c' s' l' b c\\<^sub>1.\n        \\<lbrakk>prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                 \\<langle>c',s',l'\\<rangle>;\n         l < #:prog \\<and> l' < #:prog\\<rbrakk>\n        \\<Longrightarrow> l + #:c\\<^sub>1 + 1 < #:if (b) c\\<^sub>1\n                          else prog \\<and>\n                          l' + #:c\\<^sub>1 + 1 < #:if (b) c\\<^sub>1\n                          else prog\nA total of 11 subgoals...", "case (StepSeqWhile b cx l s)"], ["proof (state)\nthis:\n  labels (while (b) cx) l (Skip;; while (b) cx)\n\ngoal (11 subgoals):\n 1. \\<And>V e s. 0 < #:V:=e \\<and> 1 < #:V:=e\n 2. \\<And>b c' l s.\n       labels (while (b) c') l (Skip;; while (b) c') \\<Longrightarrow>\n       l < #:while (b) c' \\<and> 0 < #:while (b) c'\n 3. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some true \\<Longrightarrow>\n       0 < #:if (b) c\\<^sub>1 else c\\<^sub>2 \\<and>\n       1 < #:if (b) c\\<^sub>1 else c\\<^sub>2\n 4. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       0 < #:if (b) c\\<^sub>1 else c\\<^sub>2 \\<and>\n       #:c\\<^sub>1 + 1 < #:if (b) c\\<^sub>1 else c\\<^sub>2\n 5. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       0 < #:while (b) c \\<and> 2 < #:while (b) c\n 6. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       0 < #:while (b) c \\<and> 1 < #:while (b) c\n 7. \\<And>prog c s l c' s' l' c\\<^sub>2.\n       \\<lbrakk>prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                \\<langle>c',s',l'\\<rangle>;\n        l < #:prog \\<and> l' < #:prog\\<rbrakk>\n       \\<Longrightarrow> l < #:prog;; c\\<^sub>2 \\<and>\n                         l' < #:prog;; c\\<^sub>2\n 8. \\<And>prog c s l c' s' l' c\\<^sub>1.\n       \\<lbrakk>prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                \\<langle>c',s',l'\\<rangle>;\n        l < #:prog \\<and> l' < #:prog\\<rbrakk>\n       \\<Longrightarrow> l + #:c\\<^sub>1 < #:c\\<^sub>1;; prog \\<and>\n                         l' + #:c\\<^sub>1 < #:c\\<^sub>1;; prog\n 9. \\<And>prog c s l c' s' l' b c\\<^sub>2.\n       \\<lbrakk>prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                \\<langle>c',s',l'\\<rangle>;\n        l < #:prog \\<and> l' < #:prog\\<rbrakk>\n       \\<Longrightarrow> l + 1 < #:if (b) prog else c\\<^sub>2 \\<and>\n                         l' + 1 < #:if (b) prog else c\\<^sub>2\n 10. \\<And>prog c s l c' s' l' b c\\<^sub>1.\n        \\<lbrakk>prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                 \\<langle>c',s',l'\\<rangle>;\n         l < #:prog \\<and> l' < #:prog\\<rbrakk>\n        \\<Longrightarrow> l + #:c\\<^sub>1 + 1 < #:if (b) c\\<^sub>1\n                          else prog \\<and>\n                          l' + #:c\\<^sub>1 + 1 < #:if (b) c\\<^sub>1\n                          else prog\nA total of 11 subgoals...", "from \\<open>labels (while (b) cx) l (Skip;;while (b) cx)\\<close>"], ["proof (chain)\npicking this:\n  labels (while (b) cx) l (Skip;; while (b) cx)", "have \"l < #:(while (b) cx)\""], ["proof (prove)\nusing this:\n  labels (while (b) cx) l (Skip;; while (b) cx)\n\ngoal (1 subgoal):\n 1. l < #:while (b) cx", "by(rule label_less_num_inner_nodes)"], ["proof (state)\nthis:\n  l < #:while (b) cx\n\ngoal (11 subgoals):\n 1. \\<And>V e s. 0 < #:V:=e \\<and> 1 < #:V:=e\n 2. \\<And>b c' l s.\n       labels (while (b) c') l (Skip;; while (b) c') \\<Longrightarrow>\n       l < #:while (b) c' \\<and> 0 < #:while (b) c'\n 3. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some true \\<Longrightarrow>\n       0 < #:if (b) c\\<^sub>1 else c\\<^sub>2 \\<and>\n       1 < #:if (b) c\\<^sub>1 else c\\<^sub>2\n 4. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       0 < #:if (b) c\\<^sub>1 else c\\<^sub>2 \\<and>\n       #:c\\<^sub>1 + 1 < #:if (b) c\\<^sub>1 else c\\<^sub>2\n 5. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       0 < #:while (b) c \\<and> 2 < #:while (b) c\n 6. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       0 < #:while (b) c \\<and> 1 < #:while (b) c\n 7. \\<And>prog c s l c' s' l' c\\<^sub>2.\n       \\<lbrakk>prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                \\<langle>c',s',l'\\<rangle>;\n        l < #:prog \\<and> l' < #:prog\\<rbrakk>\n       \\<Longrightarrow> l < #:prog;; c\\<^sub>2 \\<and>\n                         l' < #:prog;; c\\<^sub>2\n 8. \\<And>prog c s l c' s' l' c\\<^sub>1.\n       \\<lbrakk>prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                \\<langle>c',s',l'\\<rangle>;\n        l < #:prog \\<and> l' < #:prog\\<rbrakk>\n       \\<Longrightarrow> l + #:c\\<^sub>1 < #:c\\<^sub>1;; prog \\<and>\n                         l' + #:c\\<^sub>1 < #:c\\<^sub>1;; prog\n 9. \\<And>prog c s l c' s' l' b c\\<^sub>2.\n       \\<lbrakk>prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                \\<langle>c',s',l'\\<rangle>;\n        l < #:prog \\<and> l' < #:prog\\<rbrakk>\n       \\<Longrightarrow> l + 1 < #:if (b) prog else c\\<^sub>2 \\<and>\n                         l' + 1 < #:if (b) prog else c\\<^sub>2\n 10. \\<And>prog c s l c' s' l' b c\\<^sub>1.\n        \\<lbrakk>prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                 \\<langle>c',s',l'\\<rangle>;\n         l < #:prog \\<and> l' < #:prog\\<rbrakk>\n        \\<Longrightarrow> l + #:c\\<^sub>1 + 1 < #:if (b) c\\<^sub>1\n                          else prog \\<and>\n                          l' + #:c\\<^sub>1 + 1 < #:if (b) c\\<^sub>1\n                          else prog\nA total of 11 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  l < #:while (b) cx\n\ngoal (1 subgoal):\n 1. l < #:while (b) cx \\<and> 0 < #:while (b) cx", "by simp"], ["proof (state)\nthis:\n  l < #:while (b) cx \\<and> 0 < #:while (b) cx\n\ngoal (10 subgoals):\n 1. \\<And>V e s. 0 < #:V:=e \\<and> 1 < #:V:=e\n 2. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some true \\<Longrightarrow>\n       0 < #:if (b) c\\<^sub>1 else c\\<^sub>2 \\<and>\n       1 < #:if (b) c\\<^sub>1 else c\\<^sub>2\n 3. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       0 < #:if (b) c\\<^sub>1 else c\\<^sub>2 \\<and>\n       #:c\\<^sub>1 + 1 < #:if (b) c\\<^sub>1 else c\\<^sub>2\n 4. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       0 < #:while (b) c \\<and> 2 < #:while (b) c\n 5. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       0 < #:while (b) c \\<and> 1 < #:while (b) c\n 6. \\<And>prog c s l c' s' l' c\\<^sub>2.\n       \\<lbrakk>prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                \\<langle>c',s',l'\\<rangle>;\n        l < #:prog \\<and> l' < #:prog\\<rbrakk>\n       \\<Longrightarrow> l < #:prog;; c\\<^sub>2 \\<and>\n                         l' < #:prog;; c\\<^sub>2\n 7. \\<And>prog c s l c' s' l' c\\<^sub>1.\n       \\<lbrakk>prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                \\<langle>c',s',l'\\<rangle>;\n        l < #:prog \\<and> l' < #:prog\\<rbrakk>\n       \\<Longrightarrow> l + #:c\\<^sub>1 < #:c\\<^sub>1;; prog \\<and>\n                         l' + #:c\\<^sub>1 < #:c\\<^sub>1;; prog\n 8. \\<And>prog c s l c' s' l' b c\\<^sub>2.\n       \\<lbrakk>prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                \\<langle>c',s',l'\\<rangle>;\n        l < #:prog \\<and> l' < #:prog\\<rbrakk>\n       \\<Longrightarrow> l + 1 < #:if (b) prog else c\\<^sub>2 \\<and>\n                         l' + 1 < #:if (b) prog else c\\<^sub>2\n 9. \\<And>prog c s l c' s' l' b c\\<^sub>1.\n       \\<lbrakk>prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                \\<langle>c',s',l'\\<rangle>;\n        l < #:prog \\<and> l' < #:prog\\<rbrakk>\n       \\<Longrightarrow> l + #:c\\<^sub>1 + 1 < #:if (b) c\\<^sub>1\n                         else prog \\<and>\n                         l' + #:c\\<^sub>1 + 1 < #:if (b) c\\<^sub>1 else prog\n 10. \\<And>cx c s l c' s' l' b.\n        \\<lbrakk>cx \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                 \\<langle>c',s',l'\\<rangle>;\n         l < #:cx \\<and> l' < #:cx\\<rbrakk>\n        \\<Longrightarrow> l + 2 < #:while (b) cx \\<and>\n                          l' + 2 < #:while (b) cx", "qed (auto intro:num_inner_nodes_gr_0)"], ["", "abbreviation steps :: \"cmd \\<Rightarrow> cmd \\<Rightarrow> state \\<Rightarrow> nat \\<Rightarrow> cmd \\<Rightarrow> state \\<Rightarrow> nat \\<Rightarrow> bool\"\n   (\"(_ \\<turnstile> (1\\<langle>_,/_,/_\\<rangle>) \\<leadsto>*/ (1\\<langle>_,/_,/_\\<rangle>))\" [51,0,0,0,0,0,0] 81) where \n  \"prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>* \\<langle>c',s',l'\\<rangle> == \n     (\\<lambda>(c,s,l) (c',s',l'). prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto> \\<langle>c',s',l'\\<rangle>)\\<^sup>*\\<^sup>* (c,s,l) (c',s',l')\""], ["", "subsection\\<open>Proof of bisimulation of @{term \"\\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\"}\\\\\n  and @{term \"prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>* \\<langle>c',s',l'\\<rangle>\"} via @{term \"labels\"}\\<close>"], ["", "(*<*)"], ["", "lemmas converse_rtranclp_induct3 =\n  converse_rtranclp_induct[of _ \"(ax,ay,az)\" \"(bx,by,bz)\", split_rule,\n                 consumes 1, case_names refl step]"], ["", "(*>*)"], ["", "subsubsection \\<open>From @{term \"prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>* \\<langle>c',s',l'\\<rangle>\"} to\n  @{term \"\\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\"}\\<close>"], ["", "lemma step_red:\n  \"prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto> \\<langle>c',s',l'\\<rangle> \\<Longrightarrow> \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n    \\<langle>c',s',l'\\<rangle> \\<Longrightarrow>\n    \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>", "by(induct rule:step.induct,rule RedLAss,auto intro:red.intros)"], ["", "lemma steps_reds:\n  \"prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>* \\<langle>c',s',l'\\<rangle> \\<Longrightarrow> \\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>*\n    \\<langle>c',s',l'\\<rangle> \\<Longrightarrow>\n    \\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>", "proof(induct rule:converse_rtranclp_induct3)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<langle>c',s'\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>\n 2. \\<And>a aa b ab ac ba.\n       \\<lbrakk>(case (a, aa, b) of\n                 (c, s, l) \\<Rightarrow>\n                   \\<lambda>(c', x, y).\n                      prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                      \\<langle>c',x,y\\<rangle>)\n                 (ab, ac, ba);\n        prog \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<leadsto>*\n        \\<langle>c',s',l'\\<rangle>;\n        \\<langle>ab,ac\\<rangle> \\<rightarrow>*\n        \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<langle>a,aa\\<rangle> \\<rightarrow>*\n                         \\<langle>c',s'\\<rangle>", "case refl"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<langle>c',s'\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>\n 2. \\<And>a aa b ab ac ba.\n       \\<lbrakk>(case (a, aa, b) of\n                 (c, s, l) \\<Rightarrow>\n                   \\<lambda>(c', x, y).\n                      prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                      \\<langle>c',x,y\\<rangle>)\n                 (ab, ac, ba);\n        prog \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<leadsto>*\n        \\<langle>c',s',l'\\<rangle>;\n        \\<langle>ab,ac\\<rangle> \\<rightarrow>*\n        \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<langle>a,aa\\<rangle> \\<rightarrow>*\n                         \\<langle>c',s'\\<rangle>", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c',s'\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c',s'\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba.\n       \\<lbrakk>(case (a, aa, b) of\n                 (c, s, l) \\<Rightarrow>\n                   \\<lambda>(c', x, y).\n                      prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                      \\<langle>c',x,y\\<rangle>)\n                 (ab, ac, ba);\n        prog \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<leadsto>*\n        \\<langle>c',s',l'\\<rangle>;\n        \\<langle>ab,ac\\<rangle> \\<rightarrow>*\n        \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<langle>a,aa\\<rangle> \\<rightarrow>*\n                         \\<langle>c',s'\\<rangle>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba.\n       \\<lbrakk>(case (a, aa, b) of\n                 (c, s, l) \\<Rightarrow>\n                   \\<lambda>(c', x, y).\n                      prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                      \\<langle>c',x,y\\<rangle>)\n                 (ab, ac, ba);\n        prog \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<leadsto>*\n        \\<langle>c',s',l'\\<rangle>;\n        \\<langle>ab,ac\\<rangle> \\<rightarrow>*\n        \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<langle>a,aa\\<rangle> \\<rightarrow>*\n                         \\<langle>c',s'\\<rangle>", "case (step c s l c'' s'' l'')"], ["proof (state)\nthis:\n  (case (c, s, l) of\n   (c, s, l) \\<Rightarrow>\n     \\<lambda>(c', x, y).\n        prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n        \\<langle>c',x,y\\<rangle>)\n   (c'', s'', l'')\n  prog \\<turnstile> \\<langle>c'',s'',l''\\<rangle> \\<leadsto>*\n  \\<langle>c',s',l'\\<rangle>\n  \\<langle>c'',s''\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba.\n       \\<lbrakk>(case (a, aa, b) of\n                 (c, s, l) \\<Rightarrow>\n                   \\<lambda>(c', x, y).\n                      prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                      \\<langle>c',x,y\\<rangle>)\n                 (ab, ac, ba);\n        prog \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<leadsto>*\n        \\<langle>c',s',l'\\<rangle>;\n        \\<langle>ab,ac\\<rangle> \\<rightarrow>*\n        \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<langle>a,aa\\<rangle> \\<rightarrow>*\n                         \\<langle>c',s'\\<rangle>", "then"], ["proof (chain)\npicking this:\n  (case (c, s, l) of\n   (c, s, l) \\<Rightarrow>\n     \\<lambda>(c', x, y).\n        prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n        \\<langle>c',x,y\\<rangle>)\n   (c'', s'', l'')\n  prog \\<turnstile> \\<langle>c'',s'',l''\\<rangle> \\<leadsto>*\n  \\<langle>c',s',l'\\<rangle>\n  \\<langle>c'',s''\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>", "have \"prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto> \\<langle>c'',s'',l''\\<rangle>\"\n    and \"\\<langle>c'',s''\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>\""], ["proof (prove)\nusing this:\n  (case (c, s, l) of\n   (c, s, l) \\<Rightarrow>\n     \\<lambda>(c', x, y).\n        prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n        \\<langle>c',x,y\\<rangle>)\n   (c'', s'', l'')\n  prog \\<turnstile> \\<langle>c'',s'',l''\\<rangle> \\<leadsto>*\n  \\<langle>c',s',l'\\<rangle>\n  \\<langle>c'',s''\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>\n\ngoal (1 subgoal):\n 1. prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n    \\<langle>c'',s'',l''\\<rangle> &&&\n    \\<langle>c'',s''\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>", "by simp_all"], ["proof (state)\nthis:\n  prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n  \\<langle>c'',s'',l''\\<rangle>\n  \\<langle>c'',s''\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba.\n       \\<lbrakk>(case (a, aa, b) of\n                 (c, s, l) \\<Rightarrow>\n                   \\<lambda>(c', x, y).\n                      prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                      \\<langle>c',x,y\\<rangle>)\n                 (ab, ac, ba);\n        prog \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<leadsto>*\n        \\<langle>c',s',l'\\<rangle>;\n        \\<langle>ab,ac\\<rangle> \\<rightarrow>*\n        \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<langle>a,aa\\<rangle> \\<rightarrow>*\n                         \\<langle>c',s'\\<rangle>", "from \\<open>prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto> \\<langle>c'',s'',l''\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n  \\<langle>c'',s'',l''\\<rangle>", "have \"\\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c'',s''\\<rangle>\""], ["proof (prove)\nusing this:\n  prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n  \\<langle>c'',s'',l''\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c'',s''\\<rangle>", "by(fastforce intro:step_red)"], ["proof (state)\nthis:\n  \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c'',s''\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba.\n       \\<lbrakk>(case (a, aa, b) of\n                 (c, s, l) \\<Rightarrow>\n                   \\<lambda>(c', x, y).\n                      prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                      \\<langle>c',x,y\\<rangle>)\n                 (ab, ac, ba);\n        prog \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<leadsto>*\n        \\<langle>c',s',l'\\<rangle>;\n        \\<langle>ab,ac\\<rangle> \\<rightarrow>*\n        \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<langle>a,aa\\<rangle> \\<rightarrow>*\n                         \\<langle>c',s'\\<rangle>", "with \\<open>\\<langle>c'',s''\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  \\<langle>c'',s''\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>\n  \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c'',s''\\<rangle>", "show ?case"], ["proof (prove)\nusing this:\n  \\<langle>c'',s''\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>\n  \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c'',s''\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>", "by(fastforce intro:converse_rtranclp_into_rtranclp)"], ["proof (state)\nthis:\n  \\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "(*<*)"], ["", "declare fun_upd_apply [simp del] One_nat_def [simp del]"], ["", "(*>*)"], ["", "subsubsection \\<open>From @{term \"\\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\"} and @{term labels} to\n  @{term \"prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>* \\<langle>c',s',l'\\<rangle>\"}\\<close>"], ["", "lemma red_step:\n  \"\\<lbrakk>labels prog l c; \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>l'. prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto> \\<langle>c',s',l'\\<rangle> \\<and> labels prog l' c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>labels prog l c;\n     \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>l'.\n                         prog \\<turnstile> \\<langle>c,s,\n      l\\<rangle> \\<leadsto>\n                         \\<langle>c',s',l'\\<rangle> \\<and>\n                         labels prog l' c'", "proof(induct arbitrary:c' rule:labels.induct)"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>c c'.\n       \\<langle>c,s\\<rangle> \\<rightarrow>\n       \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          c \\<turnstile> \\<langle>c,s,0\\<rangle> \\<leadsto>\n          \\<langle>c',s',l'\\<rangle> \\<and>\n          labels c l' c'\n 2. \\<And>V e c'.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          V:=e \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c',s',l'\\<rangle> \\<and>\n          labels (V:=e) l' c'\n 3. \\<And>c\\<^sub>1 l c c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c;; c\\<^sub>2,s\\<rangle> \\<rightarrow>\n        \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,\n              l\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 4. \\<And>c\\<^sub>2 l c c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n              l + #:c\\<^sub>1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 5. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 6. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 7. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 8. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "case (Labels_Base c)"], ["proof (state)\nthis:\n  \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\n\ngoal (8 subgoals):\n 1. \\<And>c c'.\n       \\<langle>c,s\\<rangle> \\<rightarrow>\n       \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          c \\<turnstile> \\<langle>c,s,0\\<rangle> \\<leadsto>\n          \\<langle>c',s',l'\\<rangle> \\<and>\n          labels c l' c'\n 2. \\<And>V e c'.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          V:=e \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c',s',l'\\<rangle> \\<and>\n          labels (V:=e) l' c'\n 3. \\<And>c\\<^sub>1 l c c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c;; c\\<^sub>2,s\\<rangle> \\<rightarrow>\n        \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,\n              l\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 4. \\<And>c\\<^sub>2 l c c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n              l + #:c\\<^sub>1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 5. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 6. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 7. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 8. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "from \\<open>\\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>", "show ?case"], ["proof (prove)\nusing this:\n  \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>l'.\n       c \\<turnstile> \\<langle>c,s,0\\<rangle> \\<leadsto>\n       \\<langle>c',s',l'\\<rangle> \\<and>\n       labels c l' c'", "proof(induct rule:red_induct)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>V e s.\n       \\<exists>l'.\n          V:=e \\<turnstile> \\<langle>V:=e,s,0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s(V := interpret e s),l'\\<rangle> \\<and>\n          labels (V:=e) l' Skip\n 2. \\<And>c\\<^sub>1 s c\\<^sub>1' s' c\\<^sub>2.\n       \\<lbrakk>\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n                \\<langle>c\\<^sub>1',s'\\<rangle>;\n        \\<exists>l'.\n           c\\<^sub>1 \\<turnstile> \\<langle>c\\<^sub>1,s,0\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>1',s',l'\\<rangle> \\<and>\n           labels c\\<^sub>1 l' c\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c\\<^sub>1;;\n              c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>1';; c\\<^sub>2,s',\n                             l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l'\n                             (c\\<^sub>1';; c\\<^sub>2)\n 3. \\<And>c\\<^sub>2 s.\n       \\<exists>l'.\n          Skip;;\n          c\\<^sub>2 \\<turnstile> \\<langle>Skip;; c\\<^sub>2,s,\n                                  0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (Skip;; c\\<^sub>2) l' c\\<^sub>2\n 4. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>1,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>1\n 5. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>2\n 6. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' (c;; while (b) c)\n 7. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "case (RedLAss V e s)"], ["proof (state)\nthis:\n  \n\ngoal (7 subgoals):\n 1. \\<And>V e s.\n       \\<exists>l'.\n          V:=e \\<turnstile> \\<langle>V:=e,s,0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s(V := interpret e s),l'\\<rangle> \\<and>\n          labels (V:=e) l' Skip\n 2. \\<And>c\\<^sub>1 s c\\<^sub>1' s' c\\<^sub>2.\n       \\<lbrakk>\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n                \\<langle>c\\<^sub>1',s'\\<rangle>;\n        \\<exists>l'.\n           c\\<^sub>1 \\<turnstile> \\<langle>c\\<^sub>1,s,0\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>1',s',l'\\<rangle> \\<and>\n           labels c\\<^sub>1 l' c\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c\\<^sub>1;;\n              c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>1';; c\\<^sub>2,s',\n                             l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l'\n                             (c\\<^sub>1';; c\\<^sub>2)\n 3. \\<And>c\\<^sub>2 s.\n       \\<exists>l'.\n          Skip;;\n          c\\<^sub>2 \\<turnstile> \\<langle>Skip;; c\\<^sub>2,s,\n                                  0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (Skip;; c\\<^sub>2) l' c\\<^sub>2\n 4. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>1,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>1\n 5. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>2\n 6. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' (c;; while (b) c)\n 7. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "have \"V:=e \\<turnstile> \\<langle>V:=e,s,0\\<rangle> \\<leadsto> \\<langle>Skip,s(V:=(interpret e s)),1\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V:=e \\<turnstile> \\<langle>V:=e,s,0\\<rangle> \\<leadsto>\n    \\<langle>Skip,s(V := interpret e s),1\\<rangle>", "by(rule StepLAss)"], ["proof (state)\nthis:\n  V:=e \\<turnstile> \\<langle>V:=e,s,0\\<rangle> \\<leadsto>\n  \\<langle>Skip,s(V := interpret e s),1\\<rangle>\n\ngoal (7 subgoals):\n 1. \\<And>V e s.\n       \\<exists>l'.\n          V:=e \\<turnstile> \\<langle>V:=e,s,0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s(V := interpret e s),l'\\<rangle> \\<and>\n          labels (V:=e) l' Skip\n 2. \\<And>c\\<^sub>1 s c\\<^sub>1' s' c\\<^sub>2.\n       \\<lbrakk>\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n                \\<langle>c\\<^sub>1',s'\\<rangle>;\n        \\<exists>l'.\n           c\\<^sub>1 \\<turnstile> \\<langle>c\\<^sub>1,s,0\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>1',s',l'\\<rangle> \\<and>\n           labels c\\<^sub>1 l' c\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c\\<^sub>1;;\n              c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>1';; c\\<^sub>2,s',\n                             l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l'\n                             (c\\<^sub>1';; c\\<^sub>2)\n 3. \\<And>c\\<^sub>2 s.\n       \\<exists>l'.\n          Skip;;\n          c\\<^sub>2 \\<turnstile> \\<langle>Skip;; c\\<^sub>2,s,\n                                  0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (Skip;; c\\<^sub>2) l' c\\<^sub>2\n 4. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>1,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>1\n 5. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>2\n 6. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' (c;; while (b) c)\n 7. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "have \"labels (V:=e) 1 Skip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. labels (V:=e) 1 Skip", "by(fastforce intro:Labels_LAss)"], ["proof (state)\nthis:\n  labels (V:=e) 1 Skip\n\ngoal (7 subgoals):\n 1. \\<And>V e s.\n       \\<exists>l'.\n          V:=e \\<turnstile> \\<langle>V:=e,s,0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s(V := interpret e s),l'\\<rangle> \\<and>\n          labels (V:=e) l' Skip\n 2. \\<And>c\\<^sub>1 s c\\<^sub>1' s' c\\<^sub>2.\n       \\<lbrakk>\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n                \\<langle>c\\<^sub>1',s'\\<rangle>;\n        \\<exists>l'.\n           c\\<^sub>1 \\<turnstile> \\<langle>c\\<^sub>1,s,0\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>1',s',l'\\<rangle> \\<and>\n           labels c\\<^sub>1 l' c\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c\\<^sub>1;;\n              c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>1';; c\\<^sub>2,s',\n                             l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l'\n                             (c\\<^sub>1';; c\\<^sub>2)\n 3. \\<And>c\\<^sub>2 s.\n       \\<exists>l'.\n          Skip;;\n          c\\<^sub>2 \\<turnstile> \\<langle>Skip;; c\\<^sub>2,s,\n                                  0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (Skip;; c\\<^sub>2) l' c\\<^sub>2\n 4. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>1,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>1\n 5. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>2\n 6. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' (c;; while (b) c)\n 7. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "with \\<open>V:=e \\<turnstile> \\<langle>V:=e,s,0\\<rangle> \\<leadsto> \\<langle>Skip,s(V:=(interpret e s)),1\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  V:=e \\<turnstile> \\<langle>V:=e,s,0\\<rangle> \\<leadsto>\n  \\<langle>Skip,s(V := interpret e s),1\\<rangle>\n  labels (V:=e) 1 Skip", "show ?case"], ["proof (prove)\nusing this:\n  V:=e \\<turnstile> \\<langle>V:=e,s,0\\<rangle> \\<leadsto>\n  \\<langle>Skip,s(V := interpret e s),1\\<rangle>\n  labels (V:=e) 1 Skip\n\ngoal (1 subgoal):\n 1. \\<exists>l'.\n       V:=e \\<turnstile> \\<langle>V:=e,s,0\\<rangle> \\<leadsto>\n       \\<langle>Skip,s(V := interpret e s),l'\\<rangle> \\<and>\n       labels (V:=e) l' Skip", "by blast"], ["proof (state)\nthis:\n  \\<exists>l'.\n     V:=e \\<turnstile> \\<langle>V:=e,s,0\\<rangle> \\<leadsto>\n     \\<langle>Skip,s(V := interpret e s),l'\\<rangle> \\<and>\n     labels (V:=e) l' Skip\n\ngoal (6 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>1' s' c\\<^sub>2.\n       \\<lbrakk>\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n                \\<langle>c\\<^sub>1',s'\\<rangle>;\n        \\<exists>l'.\n           c\\<^sub>1 \\<turnstile> \\<langle>c\\<^sub>1,s,0\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>1',s',l'\\<rangle> \\<and>\n           labels c\\<^sub>1 l' c\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c\\<^sub>1;;\n              c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>1';; c\\<^sub>2,s',\n                             l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l'\n                             (c\\<^sub>1';; c\\<^sub>2)\n 2. \\<And>c\\<^sub>2 s.\n       \\<exists>l'.\n          Skip;;\n          c\\<^sub>2 \\<turnstile> \\<langle>Skip;; c\\<^sub>2,s,\n                                  0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (Skip;; c\\<^sub>2) l' c\\<^sub>2\n 3. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>1,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>1\n 4. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>2\n 5. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' (c;; while (b) c)\n 6. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>1' s' c\\<^sub>2.\n       \\<lbrakk>\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n                \\<langle>c\\<^sub>1',s'\\<rangle>;\n        \\<exists>l'.\n           c\\<^sub>1 \\<turnstile> \\<langle>c\\<^sub>1,s,0\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>1',s',l'\\<rangle> \\<and>\n           labels c\\<^sub>1 l' c\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c\\<^sub>1;;\n              c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>1';; c\\<^sub>2,s',\n                             l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l'\n                             (c\\<^sub>1';; c\\<^sub>2)\n 2. \\<And>c\\<^sub>2 s.\n       \\<exists>l'.\n          Skip;;\n          c\\<^sub>2 \\<turnstile> \\<langle>Skip;; c\\<^sub>2,s,\n                                  0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (Skip;; c\\<^sub>2) l' c\\<^sub>2\n 3. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>1,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>1\n 4. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>2\n 5. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' (c;; while (b) c)\n 6. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "case (SeqRed c\\<^sub>1 s c\\<^sub>1' s' c\\<^sub>2)"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n  \\<langle>c\\<^sub>1',s'\\<rangle>\n  \\<exists>l'.\n     c\\<^sub>1 \\<turnstile> \\<langle>c\\<^sub>1,s,0\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1',s',l'\\<rangle> \\<and>\n     labels c\\<^sub>1 l' c\\<^sub>1'\n\ngoal (6 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>1' s' c\\<^sub>2.\n       \\<lbrakk>\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n                \\<langle>c\\<^sub>1',s'\\<rangle>;\n        \\<exists>l'.\n           c\\<^sub>1 \\<turnstile> \\<langle>c\\<^sub>1,s,0\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>1',s',l'\\<rangle> \\<and>\n           labels c\\<^sub>1 l' c\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c\\<^sub>1;;\n              c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>1';; c\\<^sub>2,s',\n                             l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l'\n                             (c\\<^sub>1';; c\\<^sub>2)\n 2. \\<And>c\\<^sub>2 s.\n       \\<exists>l'.\n          Skip;;\n          c\\<^sub>2 \\<turnstile> \\<langle>Skip;; c\\<^sub>2,s,\n                                  0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (Skip;; c\\<^sub>2) l' c\\<^sub>2\n 3. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>1,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>1\n 4. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>2\n 5. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' (c;; while (b) c)\n 6. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "from \\<open>\\<exists>l'. c\\<^sub>1 \\<turnstile> \\<langle>c\\<^sub>1,s,0\\<rangle> \\<leadsto> \\<langle>c\\<^sub>1',s',l'\\<rangle> \\<and> labels c\\<^sub>1 l' c\\<^sub>1'\\<close>"], ["proof (chain)\npicking this:\n  \\<exists>l'.\n     c\\<^sub>1 \\<turnstile> \\<langle>c\\<^sub>1,s,0\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1',s',l'\\<rangle> \\<and>\n     labels c\\<^sub>1 l' c\\<^sub>1'", "obtain l' where \"c\\<^sub>1 \\<turnstile> \\<langle>c\\<^sub>1,s,0\\<rangle> \\<leadsto> \\<langle>c\\<^sub>1',s',l'\\<rangle>\" and \"labels c\\<^sub>1 l' c\\<^sub>1'\""], ["proof (prove)\nusing this:\n  \\<exists>l'.\n     c\\<^sub>1 \\<turnstile> \\<langle>c\\<^sub>1,s,0\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1',s',l'\\<rangle> \\<and>\n     labels c\\<^sub>1 l' c\\<^sub>1'\n\ngoal (1 subgoal):\n 1. (\\<And>l'.\n        \\<lbrakk>c\\<^sub>1 \\<turnstile> \\<langle>c\\<^sub>1,s,\n   0\\<rangle> \\<leadsto>\n                 \\<langle>c\\<^sub>1',s',l'\\<rangle>;\n         labels c\\<^sub>1 l' c\\<^sub>1'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  c\\<^sub>1 \\<turnstile> \\<langle>c\\<^sub>1,s,0\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1',s',l'\\<rangle>\n  labels c\\<^sub>1 l' c\\<^sub>1'\n\ngoal (6 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>1' s' c\\<^sub>2.\n       \\<lbrakk>\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n                \\<langle>c\\<^sub>1',s'\\<rangle>;\n        \\<exists>l'.\n           c\\<^sub>1 \\<turnstile> \\<langle>c\\<^sub>1,s,0\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>1',s',l'\\<rangle> \\<and>\n           labels c\\<^sub>1 l' c\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c\\<^sub>1;;\n              c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>1';; c\\<^sub>2,s',\n                             l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l'\n                             (c\\<^sub>1';; c\\<^sub>2)\n 2. \\<And>c\\<^sub>2 s.\n       \\<exists>l'.\n          Skip;;\n          c\\<^sub>2 \\<turnstile> \\<langle>Skip;; c\\<^sub>2,s,\n                                  0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (Skip;; c\\<^sub>2) l' c\\<^sub>2\n 3. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>1,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>1\n 4. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>2\n 5. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' (c;; while (b) c)\n 6. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "from \\<open>c\\<^sub>1 \\<turnstile> \\<langle>c\\<^sub>1,s,0\\<rangle> \\<leadsto> \\<langle>c\\<^sub>1',s',l'\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  c\\<^sub>1 \\<turnstile> \\<langle>c\\<^sub>1,s,0\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1',s',l'\\<rangle>", "have \"c\\<^sub>1;;c\\<^sub>2 \\<turnstile> \\<langle>c\\<^sub>1;;c\\<^sub>2,s,0\\<rangle> \\<leadsto> \\<langle>c\\<^sub>1';;c\\<^sub>2,s',l'\\<rangle>\""], ["proof (prove)\nusing this:\n  c\\<^sub>1 \\<turnstile> \\<langle>c\\<^sub>1,s,0\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1',s',l'\\<rangle>\n\ngoal (1 subgoal):\n 1. c\\<^sub>1;;\n    c\\<^sub>2 \\<turnstile> \\<langle>c\\<^sub>1;; c\\<^sub>2,s,\n                            0\\<rangle> \\<leadsto>\n    \\<langle>c\\<^sub>1';; c\\<^sub>2,s',l'\\<rangle>", "by(rule StepRecSeq1)"], ["proof (state)\nthis:\n  c\\<^sub>1;;\n  c\\<^sub>2 \\<turnstile> \\<langle>c\\<^sub>1;; c\\<^sub>2,s,\n                          0\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1';; c\\<^sub>2,s',l'\\<rangle>\n\ngoal (6 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>1' s' c\\<^sub>2.\n       \\<lbrakk>\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n                \\<langle>c\\<^sub>1',s'\\<rangle>;\n        \\<exists>l'.\n           c\\<^sub>1 \\<turnstile> \\<langle>c\\<^sub>1,s,0\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>1',s',l'\\<rangle> \\<and>\n           labels c\\<^sub>1 l' c\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c\\<^sub>1;;\n              c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>1';; c\\<^sub>2,s',\n                             l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l'\n                             (c\\<^sub>1';; c\\<^sub>2)\n 2. \\<And>c\\<^sub>2 s.\n       \\<exists>l'.\n          Skip;;\n          c\\<^sub>2 \\<turnstile> \\<langle>Skip;; c\\<^sub>2,s,\n                                  0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (Skip;; c\\<^sub>2) l' c\\<^sub>2\n 3. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>1,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>1\n 4. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>2\n 5. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' (c;; while (b) c)\n 6. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "moreover"], ["proof (state)\nthis:\n  c\\<^sub>1;;\n  c\\<^sub>2 \\<turnstile> \\<langle>c\\<^sub>1;; c\\<^sub>2,s,\n                          0\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1';; c\\<^sub>2,s',l'\\<rangle>\n\ngoal (6 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>1' s' c\\<^sub>2.\n       \\<lbrakk>\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n                \\<langle>c\\<^sub>1',s'\\<rangle>;\n        \\<exists>l'.\n           c\\<^sub>1 \\<turnstile> \\<langle>c\\<^sub>1,s,0\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>1',s',l'\\<rangle> \\<and>\n           labels c\\<^sub>1 l' c\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c\\<^sub>1;;\n              c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>1';; c\\<^sub>2,s',\n                             l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l'\n                             (c\\<^sub>1';; c\\<^sub>2)\n 2. \\<And>c\\<^sub>2 s.\n       \\<exists>l'.\n          Skip;;\n          c\\<^sub>2 \\<turnstile> \\<langle>Skip;; c\\<^sub>2,s,\n                                  0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (Skip;; c\\<^sub>2) l' c\\<^sub>2\n 3. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>1,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>1\n 4. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>2\n 5. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' (c;; while (b) c)\n 6. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "from \\<open>labels c\\<^sub>1 l' c\\<^sub>1'\\<close>"], ["proof (chain)\npicking this:\n  labels c\\<^sub>1 l' c\\<^sub>1'", "have \"labels (c\\<^sub>1;;c\\<^sub>2) l' (c\\<^sub>1';;c\\<^sub>2)\""], ["proof (prove)\nusing this:\n  labels c\\<^sub>1 l' c\\<^sub>1'\n\ngoal (1 subgoal):\n 1. labels (c\\<^sub>1;; c\\<^sub>2) l' (c\\<^sub>1';; c\\<^sub>2)", "by(rule Labels_Seq1)"], ["proof (state)\nthis:\n  labels (c\\<^sub>1;; c\\<^sub>2) l' (c\\<^sub>1';; c\\<^sub>2)\n\ngoal (6 subgoals):\n 1. \\<And>c\\<^sub>1 s c\\<^sub>1' s' c\\<^sub>2.\n       \\<lbrakk>\\<langle>c\\<^sub>1,s\\<rangle> \\<rightarrow>\n                \\<langle>c\\<^sub>1',s'\\<rangle>;\n        \\<exists>l'.\n           c\\<^sub>1 \\<turnstile> \\<langle>c\\<^sub>1,s,0\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>1',s',l'\\<rangle> \\<and>\n           labels c\\<^sub>1 l' c\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c\\<^sub>1;;\n              c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>1';; c\\<^sub>2,s',\n                             l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l'\n                             (c\\<^sub>1';; c\\<^sub>2)\n 2. \\<And>c\\<^sub>2 s.\n       \\<exists>l'.\n          Skip;;\n          c\\<^sub>2 \\<turnstile> \\<langle>Skip;; c\\<^sub>2,s,\n                                  0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (Skip;; c\\<^sub>2) l' c\\<^sub>2\n 3. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>1,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>1\n 4. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>2\n 5. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' (c;; while (b) c)\n 6. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "ultimately"], ["proof (chain)\npicking this:\n  c\\<^sub>1;;\n  c\\<^sub>2 \\<turnstile> \\<langle>c\\<^sub>1;; c\\<^sub>2,s,\n                          0\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1';; c\\<^sub>2,s',l'\\<rangle>\n  labels (c\\<^sub>1;; c\\<^sub>2) l' (c\\<^sub>1';; c\\<^sub>2)", "show ?case"], ["proof (prove)\nusing this:\n  c\\<^sub>1;;\n  c\\<^sub>2 \\<turnstile> \\<langle>c\\<^sub>1;; c\\<^sub>2,s,\n                          0\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1';; c\\<^sub>2,s',l'\\<rangle>\n  labels (c\\<^sub>1;; c\\<^sub>2) l' (c\\<^sub>1';; c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. \\<exists>l'.\n       c\\<^sub>1;;\n       c\\<^sub>2 \\<turnstile> \\<langle>c\\<^sub>1;; c\\<^sub>2,s,\n                               0\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>1';; c\\<^sub>2,s',l'\\<rangle> \\<and>\n       labels (c\\<^sub>1;; c\\<^sub>2) l' (c\\<^sub>1';; c\\<^sub>2)", "by blast"], ["proof (state)\nthis:\n  \\<exists>l'.\n     c\\<^sub>1;;\n     c\\<^sub>2 \\<turnstile> \\<langle>c\\<^sub>1;; c\\<^sub>2,s,\n                             0\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1';; c\\<^sub>2,s',l'\\<rangle> \\<and>\n     labels (c\\<^sub>1;; c\\<^sub>2) l' (c\\<^sub>1';; c\\<^sub>2)\n\ngoal (5 subgoals):\n 1. \\<And>c\\<^sub>2 s.\n       \\<exists>l'.\n          Skip;;\n          c\\<^sub>2 \\<turnstile> \\<langle>Skip;; c\\<^sub>2,s,\n                                  0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (Skip;; c\\<^sub>2) l' c\\<^sub>2\n 2. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>1,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>1\n 3. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>2\n 4. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' (c;; while (b) c)\n 5. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>c\\<^sub>2 s.\n       \\<exists>l'.\n          Skip;;\n          c\\<^sub>2 \\<turnstile> \\<langle>Skip;; c\\<^sub>2,s,\n                                  0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (Skip;; c\\<^sub>2) l' c\\<^sub>2\n 2. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>1,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>1\n 3. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>2\n 4. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' (c;; while (b) c)\n 5. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "case (RedSeq c\\<^sub>2 s)"], ["proof (state)\nthis:\n  \n\ngoal (5 subgoals):\n 1. \\<And>c\\<^sub>2 s.\n       \\<exists>l'.\n          Skip;;\n          c\\<^sub>2 \\<turnstile> \\<langle>Skip;; c\\<^sub>2,s,\n                                  0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (Skip;; c\\<^sub>2) l' c\\<^sub>2\n 2. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>1,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>1\n 3. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>2\n 4. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' (c;; while (b) c)\n 5. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "have \"labels c\\<^sub>2 0 c\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. labels c\\<^sub>2 0 c\\<^sub>2", "by(rule Labels.Labels_Base)"], ["proof (state)\nthis:\n  labels c\\<^sub>2 0 c\\<^sub>2\n\ngoal (5 subgoals):\n 1. \\<And>c\\<^sub>2 s.\n       \\<exists>l'.\n          Skip;;\n          c\\<^sub>2 \\<turnstile> \\<langle>Skip;; c\\<^sub>2,s,\n                                  0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (Skip;; c\\<^sub>2) l' c\\<^sub>2\n 2. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>1,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>1\n 3. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>2\n 4. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' (c;; while (b) c)\n 5. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "hence \"labels (Skip;;c\\<^sub>2) (0 + #:Skip) c\\<^sub>2\""], ["proof (prove)\nusing this:\n  labels c\\<^sub>2 0 c\\<^sub>2\n\ngoal (1 subgoal):\n 1. labels (Skip;; c\\<^sub>2) (0 + #:Skip) c\\<^sub>2", "by(rule Labels_Seq2)"], ["proof (state)\nthis:\n  labels (Skip;; c\\<^sub>2) (0 + #:Skip) c\\<^sub>2\n\ngoal (5 subgoals):\n 1. \\<And>c\\<^sub>2 s.\n       \\<exists>l'.\n          Skip;;\n          c\\<^sub>2 \\<turnstile> \\<langle>Skip;; c\\<^sub>2,s,\n                                  0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (Skip;; c\\<^sub>2) l' c\\<^sub>2\n 2. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>1,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>1\n 3. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>2\n 4. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' (c;; while (b) c)\n 5. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "have \"labels (Skip;;c\\<^sub>2) 0 (Skip;;c\\<^sub>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. labels (Skip;; c\\<^sub>2) 0 (Skip;; c\\<^sub>2)", "by(rule Labels.Labels_Base)"], ["proof (state)\nthis:\n  labels (Skip;; c\\<^sub>2) 0 (Skip;; c\\<^sub>2)\n\ngoal (5 subgoals):\n 1. \\<And>c\\<^sub>2 s.\n       \\<exists>l'.\n          Skip;;\n          c\\<^sub>2 \\<turnstile> \\<langle>Skip;; c\\<^sub>2,s,\n                                  0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (Skip;; c\\<^sub>2) l' c\\<^sub>2\n 2. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>1,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>1\n 3. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>2\n 4. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' (c;; while (b) c)\n 5. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "with \\<open>labels (Skip;;c\\<^sub>2) (0 + #:Skip) c\\<^sub>2\\<close>"], ["proof (chain)\npicking this:\n  labels (Skip;; c\\<^sub>2) (0 + #:Skip) c\\<^sub>2\n  labels (Skip;; c\\<^sub>2) 0 (Skip;; c\\<^sub>2)", "have \"Skip;;c\\<^sub>2 \\<turnstile> \\<langle>Skip;;c\\<^sub>2,s,0\\<rangle> \\<leadsto> \\<langle>c\\<^sub>2,s,#:Skip\\<rangle>\""], ["proof (prove)\nusing this:\n  labels (Skip;; c\\<^sub>2) (0 + #:Skip) c\\<^sub>2\n  labels (Skip;; c\\<^sub>2) 0 (Skip;; c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. Skip;;\n    c\\<^sub>2 \\<turnstile> \\<langle>Skip;; c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n    \\<langle>c\\<^sub>2,s,#:Skip\\<rangle>", "by(fastforce intro:StepSeq)"], ["proof (state)\nthis:\n  Skip;;\n  c\\<^sub>2 \\<turnstile> \\<langle>Skip;; c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2,s,#:Skip\\<rangle>\n\ngoal (5 subgoals):\n 1. \\<And>c\\<^sub>2 s.\n       \\<exists>l'.\n          Skip;;\n          c\\<^sub>2 \\<turnstile> \\<langle>Skip;; c\\<^sub>2,s,\n                                  0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (Skip;; c\\<^sub>2) l' c\\<^sub>2\n 2. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>1,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>1\n 3. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>2\n 4. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' (c;; while (b) c)\n 5. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "with \\<open>labels (Skip;;c\\<^sub>2) (0 + #:Skip) c\\<^sub>2\\<close>"], ["proof (chain)\npicking this:\n  labels (Skip;; c\\<^sub>2) (0 + #:Skip) c\\<^sub>2\n  Skip;;\n  c\\<^sub>2 \\<turnstile> \\<langle>Skip;; c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2,s,#:Skip\\<rangle>", "show ?case"], ["proof (prove)\nusing this:\n  labels (Skip;; c\\<^sub>2) (0 + #:Skip) c\\<^sub>2\n  Skip;;\n  c\\<^sub>2 \\<turnstile> \\<langle>Skip;; c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2,s,#:Skip\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>l'.\n       Skip;;\n       c\\<^sub>2 \\<turnstile> \\<langle>Skip;; c\\<^sub>2,s,\n                               0\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n       labels (Skip;; c\\<^sub>2) l' c\\<^sub>2", "by auto"], ["proof (state)\nthis:\n  \\<exists>l'.\n     Skip;;\n     c\\<^sub>2 \\<turnstile> \\<langle>Skip;; c\\<^sub>2,s,\n                             0\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n     labels (Skip;; c\\<^sub>2) l' c\\<^sub>2\n\ngoal (4 subgoals):\n 1. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>1,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>1\n 2. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>2\n 3. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' (c;; while (b) c)\n 4. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>1,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>1\n 2. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>2\n 3. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' (c;; while (b) c)\n 4. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "case (RedCondTrue b s c\\<^sub>1 c\\<^sub>2)"], ["proof (state)\nthis:\n  interpret b s = Some true\n\ngoal (4 subgoals):\n 1. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>1,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>1\n 2. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>2\n 3. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' (c;; while (b) c)\n 4. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "from \\<open>interpret b s = Some true\\<close>"], ["proof (chain)\npicking this:\n  interpret b s = Some true", "have \"if (b) c\\<^sub>1 else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,s,0\\<rangle> \\<leadsto> \\<langle>c\\<^sub>1,s,1\\<rangle>\""], ["proof (prove)\nusing this:\n  interpret b s = Some true\n\ngoal (1 subgoal):\n 1. if (b) c\\<^sub>1\n    else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,s,\n                                 0\\<rangle> \\<leadsto>\n    \\<langle>c\\<^sub>1,s,1\\<rangle>", "by(rule StepCondTrue)"], ["proof (state)\nthis:\n  if (b) c\\<^sub>1\n  else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,s,\n                               0\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1,s,1\\<rangle>\n\ngoal (4 subgoals):\n 1. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>1,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>1\n 2. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>2\n 3. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' (c;; while (b) c)\n 4. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "have \"labels (if (b) c\\<^sub>1 else c\\<^sub>2) (0 + 1) c\\<^sub>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. labels (if (b) c\\<^sub>1 else c\\<^sub>2) (0 + 1) c\\<^sub>1", "by(rule Labels_CondTrue,rule Labels.Labels_Base)"], ["proof (state)\nthis:\n  labels (if (b) c\\<^sub>1 else c\\<^sub>2) (0 + 1) c\\<^sub>1\n\ngoal (4 subgoals):\n 1. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>1,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>1\n 2. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>2\n 3. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' (c;; while (b) c)\n 4. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "with \\<open>if (b) c\\<^sub>1 else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,s,0\\<rangle> \\<leadsto> \\<langle>c\\<^sub>1,s,1\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  if (b) c\\<^sub>1\n  else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,s,\n                               0\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1,s,1\\<rangle>\n  labels (if (b) c\\<^sub>1 else c\\<^sub>2) (0 + 1) c\\<^sub>1", "show ?case"], ["proof (prove)\nusing this:\n  if (b) c\\<^sub>1\n  else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,s,\n                               0\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1,s,1\\<rangle>\n  labels (if (b) c\\<^sub>1 else c\\<^sub>2) (0 + 1) c\\<^sub>1\n\ngoal (1 subgoal):\n 1. \\<exists>l'.\n       if (b) c\\<^sub>1\n       else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,\n                                    s,0\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>1,s,l'\\<rangle> \\<and>\n       labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>1", "by auto"], ["proof (state)\nthis:\n  \\<exists>l'.\n     if (b) c\\<^sub>1\n     else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,s,\n                                  0\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1,s,l'\\<rangle> \\<and>\n     labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>1\n\ngoal (3 subgoals):\n 1. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>2\n 2. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' (c;; while (b) c)\n 3. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>2\n 2. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' (c;; while (b) c)\n 3. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "case (RedCondFalse b s c\\<^sub>1 c\\<^sub>2)"], ["proof (state)\nthis:\n  interpret b s = Some false\n\ngoal (3 subgoals):\n 1. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>2\n 2. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' (c;; while (b) c)\n 3. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "from \\<open>interpret b s = Some false\\<close>"], ["proof (chain)\npicking this:\n  interpret b s = Some false", "have \"if (b) c\\<^sub>1 else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,s,0\\<rangle> \\<leadsto> \\<langle>c\\<^sub>2,s,#:c\\<^sub>1 + 1\\<rangle>\""], ["proof (prove)\nusing this:\n  interpret b s = Some false\n\ngoal (1 subgoal):\n 1. if (b) c\\<^sub>1\n    else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,s,\n                                 0\\<rangle> \\<leadsto>\n    \\<langle>c\\<^sub>2,s,#:c\\<^sub>1 + 1\\<rangle>", "by(rule StepCondFalse)"], ["proof (state)\nthis:\n  if (b) c\\<^sub>1\n  else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,s,\n                               0\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2,s,#:c\\<^sub>1 + 1\\<rangle>\n\ngoal (3 subgoals):\n 1. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>2\n 2. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' (c;; while (b) c)\n 3. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "have \"labels (if (b) c\\<^sub>1 else c\\<^sub>2) (0 + #:c\\<^sub>1 + 1) c\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. labels (if (b) c\\<^sub>1 else c\\<^sub>2) (0 + #:c\\<^sub>1 + 1) c\\<^sub>2", "by(rule Labels_CondFalse,rule Labels.Labels_Base)"], ["proof (state)\nthis:\n  labels (if (b) c\\<^sub>1 else c\\<^sub>2) (0 + #:c\\<^sub>1 + 1) c\\<^sub>2\n\ngoal (3 subgoals):\n 1. \\<And>b s c\\<^sub>1 c\\<^sub>2.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          if (b) c\\<^sub>1\n          else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1\n else c\\<^sub>2,s,0\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n          labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>2\n 2. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' (c;; while (b) c)\n 3. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "with \\<open>if (b) c\\<^sub>1 else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,s,0\\<rangle> \\<leadsto> \\<langle>c\\<^sub>2,s,#:c\\<^sub>1 + 1\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  if (b) c\\<^sub>1\n  else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,s,\n                               0\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2,s,#:c\\<^sub>1 + 1\\<rangle>\n  labels (if (b) c\\<^sub>1 else c\\<^sub>2) (0 + #:c\\<^sub>1 + 1) c\\<^sub>2", "show ?case"], ["proof (prove)\nusing this:\n  if (b) c\\<^sub>1\n  else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,s,\n                               0\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2,s,#:c\\<^sub>1 + 1\\<rangle>\n  labels (if (b) c\\<^sub>1 else c\\<^sub>2) (0 + #:c\\<^sub>1 + 1) c\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<exists>l'.\n       if (b) c\\<^sub>1\n       else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,\n                                    s,0\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n       labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>2", "by auto"], ["proof (state)\nthis:\n  \\<exists>l'.\n     if (b) c\\<^sub>1\n     else c\\<^sub>2 \\<turnstile> \\<langle>if (b) c\\<^sub>1 else c\\<^sub>2,s,\n                                  0\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2,s,l'\\<rangle> \\<and>\n     labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c\\<^sub>2\n\ngoal (2 subgoals):\n 1. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' (c;; while (b) c)\n 2. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' (c;; while (b) c)\n 2. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "case (RedWhileTrue b s c)"], ["proof (state)\nthis:\n  interpret b s = Some true\n\ngoal (2 subgoals):\n 1. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' (c;; while (b) c)\n 2. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "from \\<open>interpret b s = Some true\\<close>"], ["proof (chain)\npicking this:\n  interpret b s = Some true", "have \"while (b) c \\<turnstile> \\<langle>while (b) c,s,0\\<rangle> \\<leadsto> \\<langle>c;; while (b) c,s,2\\<rangle>\""], ["proof (prove)\nusing this:\n  interpret b s = Some true\n\ngoal (1 subgoal):\n 1. while (b) c \\<turnstile> \\<langle>while (b) c,s,0\\<rangle> \\<leadsto>\n    \\<langle>c;; while (b) c,s,2\\<rangle>", "by(rule StepWhileTrue)"], ["proof (state)\nthis:\n  while (b) c \\<turnstile> \\<langle>while (b) c,s,0\\<rangle> \\<leadsto>\n  \\<langle>c;; while (b) c,s,2\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' (c;; while (b) c)\n 2. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "have \"labels (while (b) c) (0 + 2) (c;; while (b) c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. labels (while (b) c) (0 + 2) (c;; while (b) c)", "by(rule Labels_WhileBody,rule Labels.Labels_Base)"], ["proof (state)\nthis:\n  labels (while (b) c) (0 + 2) (c;; while (b) c)\n\ngoal (2 subgoals):\n 1. \\<And>b s c.\n       interpret b s = Some true \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' (c;; while (b) c)\n 2. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "with \\<open>while (b) c \\<turnstile> \\<langle>while (b) c,s,0\\<rangle> \\<leadsto> \\<langle>c;; while (b) c,s,2\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  while (b) c \\<turnstile> \\<langle>while (b) c,s,0\\<rangle> \\<leadsto>\n  \\<langle>c;; while (b) c,s,2\\<rangle>\n  labels (while (b) c) (0 + 2) (c;; while (b) c)", "show ?case"], ["proof (prove)\nusing this:\n  while (b) c \\<turnstile> \\<langle>while (b) c,s,0\\<rangle> \\<leadsto>\n  \\<langle>c;; while (b) c,s,2\\<rangle>\n  labels (while (b) c) (0 + 2) (c;; while (b) c)\n\ngoal (1 subgoal):\n 1. \\<exists>l'.\n       while (b) c \\<turnstile> \\<langle>while (b) c,s,0\\<rangle> \\<leadsto>\n       \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n       labels (while (b) c) l' (c;; while (b) c)", "by(auto simp del:add_2_eq_Suc')"], ["proof (state)\nthis:\n  \\<exists>l'.\n     while (b) c \\<turnstile> \\<langle>while (b) c,s,0\\<rangle> \\<leadsto>\n     \\<langle>c;; while (b) c,s,l'\\<rangle> \\<and>\n     labels (while (b) c) l' (c;; while (b) c)\n\ngoal (1 subgoal):\n 1. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "case (RedWhileFalse b s c)"], ["proof (state)\nthis:\n  interpret b s = Some false\n\ngoal (1 subgoal):\n 1. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "from \\<open>interpret b s = Some false\\<close>"], ["proof (chain)\npicking this:\n  interpret b s = Some false", "have \"while (b) c \\<turnstile> \\<langle>while (b) c,s,0\\<rangle> \\<leadsto> \\<langle>Skip,s,1\\<rangle>\""], ["proof (prove)\nusing this:\n  interpret b s = Some false\n\ngoal (1 subgoal):\n 1. while (b) c \\<turnstile> \\<langle>while (b) c,s,0\\<rangle> \\<leadsto>\n    \\<langle>Skip,s,1\\<rangle>", "by(rule StepWhileFalse)"], ["proof (state)\nthis:\n  while (b) c \\<turnstile> \\<langle>while (b) c,s,0\\<rangle> \\<leadsto>\n  \\<langle>Skip,s,1\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "have \"labels (while (b) c) 1 Skip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. labels (while (b) c) 1 Skip", "by(rule Labels_WhileExit)"], ["proof (state)\nthis:\n  labels (while (b) c) 1 Skip\n\ngoal (1 subgoal):\n 1. \\<And>b s c.\n       interpret b s = Some false \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c \\<turnstile> \\<langle>while (b) c,s,\n                                    0\\<rangle> \\<leadsto>\n          \\<langle>Skip,s,l'\\<rangle> \\<and>\n          labels (while (b) c) l' Skip", "with \\<open>while (b) c \\<turnstile> \\<langle>while (b) c,s,0\\<rangle> \\<leadsto> \\<langle>Skip,s,1\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  while (b) c \\<turnstile> \\<langle>while (b) c,s,0\\<rangle> \\<leadsto>\n  \\<langle>Skip,s,1\\<rangle>\n  labels (while (b) c) 1 Skip", "show ?case"], ["proof (prove)\nusing this:\n  while (b) c \\<turnstile> \\<langle>while (b) c,s,0\\<rangle> \\<leadsto>\n  \\<langle>Skip,s,1\\<rangle>\n  labels (while (b) c) 1 Skip\n\ngoal (1 subgoal):\n 1. \\<exists>l'.\n       while (b) c \\<turnstile> \\<langle>while (b) c,s,0\\<rangle> \\<leadsto>\n       \\<langle>Skip,s,l'\\<rangle> \\<and>\n       labels (while (b) c) l' Skip", "by auto"], ["proof (state)\nthis:\n  \\<exists>l'.\n     while (b) c \\<turnstile> \\<langle>while (b) c,s,0\\<rangle> \\<leadsto>\n     \\<langle>Skip,s,l'\\<rangle> \\<and>\n     labels (while (b) c) l' Skip\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>l'.\n     c \\<turnstile> \\<langle>c,s,0\\<rangle> \\<leadsto>\n     \\<langle>c',s',l'\\<rangle> \\<and>\n     labels c l' c'\n\ngoal (7 subgoals):\n 1. \\<And>V e c'.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          V:=e \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c',s',l'\\<rangle> \\<and>\n          labels (V:=e) l' c'\n 2. \\<And>c\\<^sub>1 l c c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c;; c\\<^sub>2,s\\<rangle> \\<rightarrow>\n        \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,\n              l\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 3. \\<And>c\\<^sub>2 l c c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n              l + #:c\\<^sub>1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 4. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 5. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 6. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 7. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>V e c'.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          V:=e \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c',s',l'\\<rangle> \\<and>\n          labels (V:=e) l' c'\n 2. \\<And>c\\<^sub>1 l c c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c;; c\\<^sub>2,s\\<rangle> \\<rightarrow>\n        \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,\n              l\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 3. \\<And>c\\<^sub>2 l c c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n              l + #:c\\<^sub>1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 4. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 5. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 6. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 7. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "case (Labels_LAss V e)"], ["proof (state)\nthis:\n  \\<langle>Skip,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\n\ngoal (7 subgoals):\n 1. \\<And>V e c'.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          V:=e \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c',s',l'\\<rangle> \\<and>\n          labels (V:=e) l' c'\n 2. \\<And>c\\<^sub>1 l c c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c;; c\\<^sub>2,s\\<rangle> \\<rightarrow>\n        \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,\n              l\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 3. \\<And>c\\<^sub>2 l c c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n              l + #:c\\<^sub>1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 4. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 5. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 6. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 7. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "from \\<open>\\<langle>Skip,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  \\<langle>Skip,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>", "have False"], ["proof (prove)\nusing this:\n  \\<langle>Skip,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\n\ngoal (1 subgoal):\n 1. False", "by(auto elim:red.cases)"], ["proof (state)\nthis:\n  False\n\ngoal (7 subgoals):\n 1. \\<And>V e c'.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          V:=e \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c',s',l'\\<rangle> \\<and>\n          labels (V:=e) l' c'\n 2. \\<And>c\\<^sub>1 l c c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c;; c\\<^sub>2,s\\<rangle> \\<rightarrow>\n        \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,\n              l\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 3. \\<And>c\\<^sub>2 l c c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n              l + #:c\\<^sub>1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 4. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 5. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 6. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 7. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>l'.\n       V:=e \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n       \\<langle>c',s',l'\\<rangle> \\<and>\n       labels (V:=e) l' c'", "by simp"], ["proof (state)\nthis:\n  \\<exists>l'.\n     V:=e \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n     \\<langle>c',s',l'\\<rangle> \\<and>\n     labels (V:=e) l' c'\n\ngoal (6 subgoals):\n 1. \\<And>c\\<^sub>1 l c c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c;; c\\<^sub>2,s\\<rangle> \\<rightarrow>\n        \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,\n              l\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 2. \\<And>c\\<^sub>2 l c c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n              l + #:c\\<^sub>1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 3. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 4. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 5. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 6. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>c\\<^sub>1 l c c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c;; c\\<^sub>2,s\\<rangle> \\<rightarrow>\n        \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,\n              l\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 2. \\<And>c\\<^sub>2 l c c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n              l + #:c\\<^sub>1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 3. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 4. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 5. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 6. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "case (Labels_Seq1 c\\<^sub>1 l c c\\<^sub>2)"], ["proof (state)\nthis:\n  labels c\\<^sub>1 l c\n  \\<langle>c,s\\<rangle> \\<rightarrow>\n  \\<langle>?c',s'\\<rangle> \\<Longrightarrow>\n  \\<exists>l'.\n     c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n     \\<langle>?c',s',l'\\<rangle> \\<and>\n     labels c\\<^sub>1 l' ?c'\n  \\<langle>c;; c\\<^sub>2,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\n\ngoal (6 subgoals):\n 1. \\<And>c\\<^sub>1 l c c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c;; c\\<^sub>2,s\\<rangle> \\<rightarrow>\n        \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,\n              l\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 2. \\<And>c\\<^sub>2 l c c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n              l + #:c\\<^sub>1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 3. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 4. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 5. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 6. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "note IH = \\<open>\\<And>c'. \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n        \\<exists>l'. c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto> \\<langle>c',s',l'\\<rangle> \\<and> labels c\\<^sub>1 l' c'\\<close>"], ["proof (state)\nthis:\n  \\<langle>c,s\\<rangle> \\<rightarrow>\n  \\<langle>?c',s'\\<rangle> \\<Longrightarrow>\n  \\<exists>l'.\n     c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n     \\<langle>?c',s',l'\\<rangle> \\<and>\n     labels c\\<^sub>1 l' ?c'\n\ngoal (6 subgoals):\n 1. \\<And>c\\<^sub>1 l c c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c;; c\\<^sub>2,s\\<rangle> \\<rightarrow>\n        \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,\n              l\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 2. \\<And>c\\<^sub>2 l c c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n              l + #:c\\<^sub>1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 3. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 4. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 5. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 6. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "from \\<open>\\<langle>c;;c\\<^sub>2,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  \\<langle>c;; c\\<^sub>2,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>", "have \"(c = Skip \\<and> c' = c\\<^sub>2 \\<and> s = s') \\<or> (\\<exists>c''. c' = c'';;c\\<^sub>2)\""], ["proof (prove)\nusing this:\n  \\<langle>c;; c\\<^sub>2,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\n\ngoal (1 subgoal):\n 1. c = Skip \\<and> c' = c\\<^sub>2 \\<and> s = s' \\<or>\n    (\\<exists>c''. c' = c'';; c\\<^sub>2)", "by -(erule red.cases,auto)"], ["proof (state)\nthis:\n  c = Skip \\<and> c' = c\\<^sub>2 \\<and> s = s' \\<or>\n  (\\<exists>c''. c' = c'';; c\\<^sub>2)\n\ngoal (6 subgoals):\n 1. \\<And>c\\<^sub>1 l c c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c;; c\\<^sub>2,s\\<rangle> \\<rightarrow>\n        \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,\n              l\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 2. \\<And>c\\<^sub>2 l c c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n              l + #:c\\<^sub>1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 3. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 4. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 5. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 6. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "thus ?case"], ["proof (prove)\nusing this:\n  c = Skip \\<and> c' = c\\<^sub>2 \\<and> s = s' \\<or>\n  (\\<exists>c''. c' = c'';; c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. \\<exists>l'.\n       c\\<^sub>1;;\n       c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n       \\<langle>c',s',l'\\<rangle> \\<and>\n       labels (c\\<^sub>1;; c\\<^sub>2) l' c'", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. c = Skip \\<and> c' = c\\<^sub>2 \\<and> s = s' \\<Longrightarrow>\n    \\<exists>l'.\n       c\\<^sub>1;;\n       c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n       \\<langle>c',s',l'\\<rangle> \\<and>\n       labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 2. \\<exists>c''. c' = c'';; c\\<^sub>2 \\<Longrightarrow>\n    \\<exists>l'.\n       c\\<^sub>1;;\n       c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n       \\<langle>c',s',l'\\<rangle> \\<and>\n       labels (c\\<^sub>1;; c\\<^sub>2) l' c'", "assume [simp]:\"c = Skip \\<and> c' = c\\<^sub>2 \\<and> s = s'\""], ["proof (state)\nthis:\n  c = Skip \\<and> c' = c\\<^sub>2 \\<and> s = s'\n\ngoal (2 subgoals):\n 1. c = Skip \\<and> c' = c\\<^sub>2 \\<and> s = s' \\<Longrightarrow>\n    \\<exists>l'.\n       c\\<^sub>1;;\n       c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n       \\<langle>c',s',l'\\<rangle> \\<and>\n       labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 2. \\<exists>c''. c' = c'';; c\\<^sub>2 \\<Longrightarrow>\n    \\<exists>l'.\n       c\\<^sub>1;;\n       c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n       \\<langle>c',s',l'\\<rangle> \\<and>\n       labels (c\\<^sub>1;; c\\<^sub>2) l' c'", "from \\<open>labels c\\<^sub>1 l c\\<close>"], ["proof (chain)\npicking this:\n  labels c\\<^sub>1 l c", "have \"l < #:c\\<^sub>1\""], ["proof (prove)\nusing this:\n  labels c\\<^sub>1 l c\n\ngoal (1 subgoal):\n 1. l < #:c\\<^sub>1", "by(rule label_less_num_inner_nodes[simplified])"], ["proof (state)\nthis:\n  l < #:c\\<^sub>1\n\ngoal (2 subgoals):\n 1. c = Skip \\<and> c' = c\\<^sub>2 \\<and> s = s' \\<Longrightarrow>\n    \\<exists>l'.\n       c\\<^sub>1;;\n       c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n       \\<langle>c',s',l'\\<rangle> \\<and>\n       labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 2. \\<exists>c''. c' = c'';; c\\<^sub>2 \\<Longrightarrow>\n    \\<exists>l'.\n       c\\<^sub>1;;\n       c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n       \\<langle>c',s',l'\\<rangle> \\<and>\n       labels (c\\<^sub>1;; c\\<^sub>2) l' c'", "have \"labels (c\\<^sub>1;;c\\<^sub>2) (0 + #:c\\<^sub>1) c\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. labels (c\\<^sub>1;; c\\<^sub>2) (0 + #:c\\<^sub>1) c\\<^sub>2", "by(rule Labels_Seq2,rule Labels_Base)"], ["proof (state)\nthis:\n  labels (c\\<^sub>1;; c\\<^sub>2) (0 + #:c\\<^sub>1) c\\<^sub>2\n\ngoal (2 subgoals):\n 1. c = Skip \\<and> c' = c\\<^sub>2 \\<and> s = s' \\<Longrightarrow>\n    \\<exists>l'.\n       c\\<^sub>1;;\n       c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n       \\<langle>c',s',l'\\<rangle> \\<and>\n       labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 2. \\<exists>c''. c' = c'';; c\\<^sub>2 \\<Longrightarrow>\n    \\<exists>l'.\n       c\\<^sub>1;;\n       c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n       \\<langle>c',s',l'\\<rangle> \\<and>\n       labels (c\\<^sub>1;; c\\<^sub>2) l' c'", "from \\<open>labels c\\<^sub>1 l c\\<close>"], ["proof (chain)\npicking this:\n  labels c\\<^sub>1 l c", "have \"labels (c\\<^sub>1;; c\\<^sub>2) l (Skip;;c\\<^sub>2)\""], ["proof (prove)\nusing this:\n  labels c\\<^sub>1 l c\n\ngoal (1 subgoal):\n 1. labels (c\\<^sub>1;; c\\<^sub>2) l (Skip;; c\\<^sub>2)", "by(fastforce intro:Labels.Labels_Seq1)"], ["proof (state)\nthis:\n  labels (c\\<^sub>1;; c\\<^sub>2) l (Skip;; c\\<^sub>2)\n\ngoal (2 subgoals):\n 1. c = Skip \\<and> c' = c\\<^sub>2 \\<and> s = s' \\<Longrightarrow>\n    \\<exists>l'.\n       c\\<^sub>1;;\n       c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n       \\<langle>c',s',l'\\<rangle> \\<and>\n       labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 2. \\<exists>c''. c' = c'';; c\\<^sub>2 \\<Longrightarrow>\n    \\<exists>l'.\n       c\\<^sub>1;;\n       c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n       \\<langle>c',s',l'\\<rangle> \\<and>\n       labels (c\\<^sub>1;; c\\<^sub>2) l' c'", "with \\<open>labels (c\\<^sub>1;;c\\<^sub>2) (0 + #:c\\<^sub>1) c\\<^sub>2\\<close> \\<open>l < #:c\\<^sub>1\\<close>"], ["proof (chain)\npicking this:\n  labels (c\\<^sub>1;; c\\<^sub>2) (0 + #:c\\<^sub>1) c\\<^sub>2\n  l < #:c\\<^sub>1\n  labels (c\\<^sub>1;; c\\<^sub>2) l (Skip;; c\\<^sub>2)", "have \"c\\<^sub>1;; c\\<^sub>2 \\<turnstile> \\<langle>Skip;;c\\<^sub>2,s,l\\<rangle> \\<leadsto> \\<langle>c\\<^sub>2,s,#:c\\<^sub>1\\<rangle>\""], ["proof (prove)\nusing this:\n  labels (c\\<^sub>1;; c\\<^sub>2) (0 + #:c\\<^sub>1) c\\<^sub>2\n  l < #:c\\<^sub>1\n  labels (c\\<^sub>1;; c\\<^sub>2) l (Skip;; c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. c\\<^sub>1;;\n    c\\<^sub>2 \\<turnstile> \\<langle>Skip;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n    \\<langle>c\\<^sub>2,s,#:c\\<^sub>1\\<rangle>", "by(fastforce intro:StepSeq)"], ["proof (state)\nthis:\n  c\\<^sub>1;;\n  c\\<^sub>2 \\<turnstile> \\<langle>Skip;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2,s,#:c\\<^sub>1\\<rangle>\n\ngoal (2 subgoals):\n 1. c = Skip \\<and> c' = c\\<^sub>2 \\<and> s = s' \\<Longrightarrow>\n    \\<exists>l'.\n       c\\<^sub>1;;\n       c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n       \\<langle>c',s',l'\\<rangle> \\<and>\n       labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 2. \\<exists>c''. c' = c'';; c\\<^sub>2 \\<Longrightarrow>\n    \\<exists>l'.\n       c\\<^sub>1;;\n       c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n       \\<langle>c',s',l'\\<rangle> \\<and>\n       labels (c\\<^sub>1;; c\\<^sub>2) l' c'", "with \\<open>labels (c\\<^sub>1;;c\\<^sub>2) (0 + #:c\\<^sub>1) c\\<^sub>2\\<close>"], ["proof (chain)\npicking this:\n  labels (c\\<^sub>1;; c\\<^sub>2) (0 + #:c\\<^sub>1) c\\<^sub>2\n  c\\<^sub>1;;\n  c\\<^sub>2 \\<turnstile> \\<langle>Skip;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2,s,#:c\\<^sub>1\\<rangle>", "show ?case"], ["proof (prove)\nusing this:\n  labels (c\\<^sub>1;; c\\<^sub>2) (0 + #:c\\<^sub>1) c\\<^sub>2\n  c\\<^sub>1;;\n  c\\<^sub>2 \\<turnstile> \\<langle>Skip;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2,s,#:c\\<^sub>1\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>l'.\n       c\\<^sub>1;;\n       c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n       \\<langle>c',s',l'\\<rangle> \\<and>\n       labels (c\\<^sub>1;; c\\<^sub>2) l' c'", "by auto"], ["proof (state)\nthis:\n  \\<exists>l'.\n     c\\<^sub>1;;\n     c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n     \\<langle>c',s',l'\\<rangle> \\<and>\n     labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n\ngoal (1 subgoal):\n 1. \\<exists>c''. c' = c'';; c\\<^sub>2 \\<Longrightarrow>\n    \\<exists>l'.\n       c\\<^sub>1;;\n       c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n       \\<langle>c',s',l'\\<rangle> \\<and>\n       labels (c\\<^sub>1;; c\\<^sub>2) l' c'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>c''. c' = c'';; c\\<^sub>2 \\<Longrightarrow>\n    \\<exists>l'.\n       c\\<^sub>1;;\n       c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n       \\<langle>c',s',l'\\<rangle> \\<and>\n       labels (c\\<^sub>1;; c\\<^sub>2) l' c'", "assume \"\\<exists>c''. c' = c'';;c\\<^sub>2\""], ["proof (state)\nthis:\n  \\<exists>c''. c' = c'';; c\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<exists>c''. c' = c'';; c\\<^sub>2 \\<Longrightarrow>\n    \\<exists>l'.\n       c\\<^sub>1;;\n       c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n       \\<langle>c',s',l'\\<rangle> \\<and>\n       labels (c\\<^sub>1;; c\\<^sub>2) l' c'", "then"], ["proof (chain)\npicking this:\n  \\<exists>c''. c' = c'';; c\\<^sub>2", "obtain c'' where [simp]:\"c' = c'';;c\\<^sub>2\""], ["proof (prove)\nusing this:\n  \\<exists>c''. c' = c'';; c\\<^sub>2\n\ngoal (1 subgoal):\n 1. (\\<And>c''.\n        c' = c'';; c\\<^sub>2 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  c' = c'';; c\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<exists>c''. c' = c'';; c\\<^sub>2 \\<Longrightarrow>\n    \\<exists>l'.\n       c\\<^sub>1;;\n       c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n       \\<langle>c',s',l'\\<rangle> \\<and>\n       labels (c\\<^sub>1;; c\\<^sub>2) l' c'", "have \"c\\<^sub>2 \\<noteq> c'';; c\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c\\<^sub>2 \\<noteq> c'';; c\\<^sub>2", "by (induction c\\<^sub>2) auto"], ["proof (state)\nthis:\n  c\\<^sub>2 \\<noteq> c'';; c\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<exists>c''. c' = c'';; c\\<^sub>2 \\<Longrightarrow>\n    \\<exists>l'.\n       c\\<^sub>1;;\n       c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n       \\<langle>c',s',l'\\<rangle> \\<and>\n       labels (c\\<^sub>1;; c\\<^sub>2) l' c'", "with \\<open>\\<langle>c;;c\\<^sub>2,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  \\<langle>c;; c\\<^sub>2,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\n  c\\<^sub>2 \\<noteq> c'';; c\\<^sub>2", "have \"\\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c'',s'\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>c;; c\\<^sub>2,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\n  c\\<^sub>2 \\<noteq> c'';; c\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c'',s'\\<rangle>", "by (auto elim!:red.cases)"], ["proof (state)\nthis:\n  \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c'',s'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c''. c' = c'';; c\\<^sub>2 \\<Longrightarrow>\n    \\<exists>l'.\n       c\\<^sub>1;;\n       c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n       \\<langle>c',s',l'\\<rangle> \\<and>\n       labels (c\\<^sub>1;; c\\<^sub>2) l' c'", "from IH[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>l'.\n     c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n     \\<langle>c'',s',l'\\<rangle> \\<and>\n     labels c\\<^sub>1 l' c''", "obtain l' where \"c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto> \\<langle>c'',s',l'\\<rangle>\"\n      and \"labels c\\<^sub>1 l' c''\""], ["proof (prove)\nusing this:\n  \\<exists>l'.\n     c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n     \\<langle>c'',s',l'\\<rangle> \\<and>\n     labels c\\<^sub>1 l' c''\n\ngoal (1 subgoal):\n 1. (\\<And>l'.\n        \\<lbrakk>c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                 \\<langle>c'',s',l'\\<rangle>;\n         labels c\\<^sub>1 l' c''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n  \\<langle>c'',s',l'\\<rangle>\n  labels c\\<^sub>1 l' c''\n\ngoal (1 subgoal):\n 1. \\<exists>c''. c' = c'';; c\\<^sub>2 \\<Longrightarrow>\n    \\<exists>l'.\n       c\\<^sub>1;;\n       c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n       \\<langle>c',s',l'\\<rangle> \\<and>\n       labels (c\\<^sub>1;; c\\<^sub>2) l' c'", "from \\<open>c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto> \\<langle>c'',s',l'\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n  \\<langle>c'',s',l'\\<rangle>", "have \"c\\<^sub>1;;c\\<^sub>2 \\<turnstile> \\<langle>c;;c\\<^sub>2,s,l\\<rangle> \\<leadsto> \\<langle>c'';;c\\<^sub>2,s',l'\\<rangle>\""], ["proof (prove)\nusing this:\n  c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n  \\<langle>c'',s',l'\\<rangle>\n\ngoal (1 subgoal):\n 1. c\\<^sub>1;;\n    c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n    \\<langle>c'';; c\\<^sub>2,s',l'\\<rangle>", "by(rule StepRecSeq1)"], ["proof (state)\nthis:\n  c\\<^sub>1;;\n  c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n  \\<langle>c'';; c\\<^sub>2,s',l'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c''. c' = c'';; c\\<^sub>2 \\<Longrightarrow>\n    \\<exists>l'.\n       c\\<^sub>1;;\n       c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n       \\<langle>c',s',l'\\<rangle> \\<and>\n       labels (c\\<^sub>1;; c\\<^sub>2) l' c'", "from \\<open>labels c\\<^sub>1 l' c''\\<close>"], ["proof (chain)\npicking this:\n  labels c\\<^sub>1 l' c''", "have \"labels (c\\<^sub>1;;c\\<^sub>2) l' (c'';;c\\<^sub>2)\""], ["proof (prove)\nusing this:\n  labels c\\<^sub>1 l' c''\n\ngoal (1 subgoal):\n 1. labels (c\\<^sub>1;; c\\<^sub>2) l' (c'';; c\\<^sub>2)", "by(rule Labels.Labels_Seq1)"], ["proof (state)\nthis:\n  labels (c\\<^sub>1;; c\\<^sub>2) l' (c'';; c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. \\<exists>c''. c' = c'';; c\\<^sub>2 \\<Longrightarrow>\n    \\<exists>l'.\n       c\\<^sub>1;;\n       c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n       \\<langle>c',s',l'\\<rangle> \\<and>\n       labels (c\\<^sub>1;; c\\<^sub>2) l' c'", "with \\<open>c\\<^sub>1;;c\\<^sub>2 \\<turnstile> \\<langle>c;;c\\<^sub>2,s,l\\<rangle> \\<leadsto> \\<langle>c'';;c\\<^sub>2,s',l'\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  c\\<^sub>1;;\n  c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n  \\<langle>c'';; c\\<^sub>2,s',l'\\<rangle>\n  labels (c\\<^sub>1;; c\\<^sub>2) l' (c'';; c\\<^sub>2)", "show ?case"], ["proof (prove)\nusing this:\n  c\\<^sub>1;;\n  c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n  \\<langle>c'';; c\\<^sub>2,s',l'\\<rangle>\n  labels (c\\<^sub>1;; c\\<^sub>2) l' (c'';; c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. \\<exists>l'.\n       c\\<^sub>1;;\n       c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n       \\<langle>c',s',l'\\<rangle> \\<and>\n       labels (c\\<^sub>1;; c\\<^sub>2) l' c'", "by auto"], ["proof (state)\nthis:\n  \\<exists>l'.\n     c\\<^sub>1;;\n     c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n     \\<langle>c',s',l'\\<rangle> \\<and>\n     labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>l'.\n     c\\<^sub>1;;\n     c\\<^sub>2 \\<turnstile> \\<langle>c;; c\\<^sub>2,s,l\\<rangle> \\<leadsto>\n     \\<langle>c',s',l'\\<rangle> \\<and>\n     labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n\ngoal (5 subgoals):\n 1. \\<And>c\\<^sub>2 l c c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n              l + #:c\\<^sub>1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 2. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 3. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 4. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 5. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>c\\<^sub>2 l c c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n              l + #:c\\<^sub>1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 2. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 3. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 4. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 5. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "case (Labels_Seq2 c\\<^sub>2 l c c\\<^sub>1 c')"], ["proof (state)\nthis:\n  labels c\\<^sub>2 l c\n  \\<langle>c,s\\<rangle> \\<rightarrow>\n  \\<langle>?c',s'\\<rangle> \\<Longrightarrow>\n  \\<exists>l'.\n     c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n     \\<langle>?c',s',l'\\<rangle> \\<and>\n     labels c\\<^sub>2 l' ?c'\n  \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\n\ngoal (5 subgoals):\n 1. \\<And>c\\<^sub>2 l c c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n              l + #:c\\<^sub>1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 2. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 3. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 4. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 5. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "note IH = \\<open>\\<And>c'. \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n            \\<exists>l'. c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto> \\<langle>c',s',l'\\<rangle> \\<and> labels c\\<^sub>2 l' c'\\<close>"], ["proof (state)\nthis:\n  \\<langle>c,s\\<rangle> \\<rightarrow>\n  \\<langle>?c',s'\\<rangle> \\<Longrightarrow>\n  \\<exists>l'.\n     c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n     \\<langle>?c',s',l'\\<rangle> \\<and>\n     labels c\\<^sub>2 l' ?c'\n\ngoal (5 subgoals):\n 1. \\<And>c\\<^sub>2 l c c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n              l + #:c\\<^sub>1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 2. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 3. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 4. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 5. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "from IH[OF \\<open>\\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<close>]"], ["proof (chain)\npicking this:\n  \\<exists>l'.\n     c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n     \\<langle>c',s',l'\\<rangle> \\<and>\n     labels c\\<^sub>2 l' c'", "obtain l' where \"c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto> \\<langle>c',s',l'\\<rangle>\"\n    and \"labels c\\<^sub>2 l' c'\""], ["proof (prove)\nusing this:\n  \\<exists>l'.\n     c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n     \\<langle>c',s',l'\\<rangle> \\<and>\n     labels c\\<^sub>2 l' c'\n\ngoal (1 subgoal):\n 1. (\\<And>l'.\n        \\<lbrakk>c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                 \\<langle>c',s',l'\\<rangle>;\n         labels c\\<^sub>2 l' c'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n  \\<langle>c',s',l'\\<rangle>\n  labels c\\<^sub>2 l' c'\n\ngoal (5 subgoals):\n 1. \\<And>c\\<^sub>2 l c c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n              l + #:c\\<^sub>1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 2. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 3. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 4. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 5. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "from \\<open>c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto> \\<langle>c',s',l'\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n  \\<langle>c',s',l'\\<rangle>", "have \"c\\<^sub>1;; c\\<^sub>2 \\<turnstile> \\<langle>c,s,l + #:c\\<^sub>1\\<rangle> \\<leadsto> \\<langle>c',s',l' + #:c\\<^sub>1\\<rangle>\""], ["proof (prove)\nusing this:\n  c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n  \\<langle>c',s',l'\\<rangle>\n\ngoal (1 subgoal):\n 1. c\\<^sub>1;;\n    c\\<^sub>2 \\<turnstile> \\<langle>c,s,l + #:c\\<^sub>1\\<rangle> \\<leadsto>\n    \\<langle>c',s',l' + #:c\\<^sub>1\\<rangle>", "by(rule StepRecSeq2)"], ["proof (state)\nthis:\n  c\\<^sub>1;;\n  c\\<^sub>2 \\<turnstile> \\<langle>c,s,l + #:c\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c',s',l' + #:c\\<^sub>1\\<rangle>\n\ngoal (5 subgoals):\n 1. \\<And>c\\<^sub>2 l c c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n              l + #:c\\<^sub>1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 2. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 3. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 4. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 5. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "moreover"], ["proof (state)\nthis:\n  c\\<^sub>1;;\n  c\\<^sub>2 \\<turnstile> \\<langle>c,s,l + #:c\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c',s',l' + #:c\\<^sub>1\\<rangle>\n\ngoal (5 subgoals):\n 1. \\<And>c\\<^sub>2 l c c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n              l + #:c\\<^sub>1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 2. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 3. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 4. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 5. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "from \\<open>labels c\\<^sub>2 l' c'\\<close>"], ["proof (chain)\npicking this:\n  labels c\\<^sub>2 l' c'", "have \"labels (c\\<^sub>1;;c\\<^sub>2) (l' + #:c\\<^sub>1) c'\""], ["proof (prove)\nusing this:\n  labels c\\<^sub>2 l' c'\n\ngoal (1 subgoal):\n 1. labels (c\\<^sub>1;; c\\<^sub>2) (l' + #:c\\<^sub>1) c'", "by(rule Labels.Labels_Seq2)"], ["proof (state)\nthis:\n  labels (c\\<^sub>1;; c\\<^sub>2) (l' + #:c\\<^sub>1) c'\n\ngoal (5 subgoals):\n 1. \\<And>c\\<^sub>2 l c c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            c\\<^sub>1;;\n                            c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n              l + #:c\\<^sub>1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n 2. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 3. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 4. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 5. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "ultimately"], ["proof (chain)\npicking this:\n  c\\<^sub>1;;\n  c\\<^sub>2 \\<turnstile> \\<langle>c,s,l + #:c\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c',s',l' + #:c\\<^sub>1\\<rangle>\n  labels (c\\<^sub>1;; c\\<^sub>2) (l' + #:c\\<^sub>1) c'", "show ?case"], ["proof (prove)\nusing this:\n  c\\<^sub>1;;\n  c\\<^sub>2 \\<turnstile> \\<langle>c,s,l + #:c\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c',s',l' + #:c\\<^sub>1\\<rangle>\n  labels (c\\<^sub>1;; c\\<^sub>2) (l' + #:c\\<^sub>1) c'\n\ngoal (1 subgoal):\n 1. \\<exists>l'.\n       c\\<^sub>1;;\n       c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                               l + #:c\\<^sub>1\\<rangle> \\<leadsto>\n       \\<langle>c',s',l'\\<rangle> \\<and>\n       labels (c\\<^sub>1;; c\\<^sub>2) l' c'", "by blast"], ["proof (state)\nthis:\n  \\<exists>l'.\n     c\\<^sub>1;;\n     c\\<^sub>2 \\<turnstile> \\<langle>c,s,l + #:c\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c',s',l'\\<rangle> \\<and>\n     labels (c\\<^sub>1;; c\\<^sub>2) l' c'\n\ngoal (4 subgoals):\n 1. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 2. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 3. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 4. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 2. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 3. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 4. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "case (Labels_CondTrue c\\<^sub>1 l c b c\\<^sub>2 c')"], ["proof (state)\nthis:\n  labels c\\<^sub>1 l c\n  \\<langle>c,s\\<rangle> \\<rightarrow>\n  \\<langle>?c',s'\\<rangle> \\<Longrightarrow>\n  \\<exists>l'.\n     c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n     \\<langle>?c',s',l'\\<rangle> \\<and>\n     labels c\\<^sub>1 l' ?c'\n  \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\n\ngoal (4 subgoals):\n 1. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 2. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 3. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 4. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "note label = \\<open>labels c\\<^sub>1 l c\\<close> and red = \\<open>\\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<close>\n    and IH = \\<open>\\<And>c'. \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n                   \\<exists>l'. c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto> \\<langle>c',s',l'\\<rangle> \\<and> labels c\\<^sub>1 l' c'\\<close>"], ["proof (state)\nthis:\n  labels c\\<^sub>1 l c\n  \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\n  \\<langle>c,s\\<rangle> \\<rightarrow>\n  \\<langle>?c',s'\\<rangle> \\<Longrightarrow>\n  \\<exists>l'.\n     c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n     \\<langle>?c',s',l'\\<rangle> \\<and>\n     labels c\\<^sub>1 l' ?c'\n\ngoal (4 subgoals):\n 1. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 2. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 3. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 4. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "from IH[OF \\<open>\\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<close>]"], ["proof (chain)\npicking this:\n  \\<exists>l'.\n     c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n     \\<langle>c',s',l'\\<rangle> \\<and>\n     labels c\\<^sub>1 l' c'", "obtain l' where \"c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto> \\<langle>c',s',l'\\<rangle>\"\n    and \"labels c\\<^sub>1 l' c'\""], ["proof (prove)\nusing this:\n  \\<exists>l'.\n     c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n     \\<langle>c',s',l'\\<rangle> \\<and>\n     labels c\\<^sub>1 l' c'\n\ngoal (1 subgoal):\n 1. (\\<And>l'.\n        \\<lbrakk>c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                 \\<langle>c',s',l'\\<rangle>;\n         labels c\\<^sub>1 l' c'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n  \\<langle>c',s',l'\\<rangle>\n  labels c\\<^sub>1 l' c'\n\ngoal (4 subgoals):\n 1. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 2. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 3. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 4. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "from \\<open>c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto> \\<langle>c',s',l'\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n  \\<langle>c',s',l'\\<rangle>", "have \"if (b) c\\<^sub>1 else c\\<^sub>2 \\<turnstile> \\<langle>c,s,l + 1\\<rangle> \\<leadsto> \\<langle>c',s',l' + 1\\<rangle>\""], ["proof (prove)\nusing this:\n  c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n  \\<langle>c',s',l'\\<rangle>\n\ngoal (1 subgoal):\n 1. if (b) c\\<^sub>1\n    else c\\<^sub>2 \\<turnstile> \\<langle>c,s,l + 1\\<rangle> \\<leadsto>\n    \\<langle>c',s',l' + 1\\<rangle>", "by(rule StepRecCond1)"], ["proof (state)\nthis:\n  if (b) c\\<^sub>1\n  else c\\<^sub>2 \\<turnstile> \\<langle>c,s,l + 1\\<rangle> \\<leadsto>\n  \\<langle>c',s',l' + 1\\<rangle>\n\ngoal (4 subgoals):\n 1. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 2. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 3. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 4. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "moreover"], ["proof (state)\nthis:\n  if (b) c\\<^sub>1\n  else c\\<^sub>2 \\<turnstile> \\<langle>c,s,l + 1\\<rangle> \\<leadsto>\n  \\<langle>c',s',l' + 1\\<rangle>\n\ngoal (4 subgoals):\n 1. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 2. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 3. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 4. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "from \\<open>labels c\\<^sub>1 l' c'\\<close>"], ["proof (chain)\npicking this:\n  labels c\\<^sub>1 l' c'", "have \"labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l' + 1) c'\""], ["proof (prove)\nusing this:\n  labels c\\<^sub>1 l' c'\n\ngoal (1 subgoal):\n 1. labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l' + 1) c'", "by(rule Labels.Labels_CondTrue)"], ["proof (state)\nthis:\n  labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l' + 1) c'\n\ngoal (4 subgoals):\n 1. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c'.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>1 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>1 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 2. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 3. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 4. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "ultimately"], ["proof (chain)\npicking this:\n  if (b) c\\<^sub>1\n  else c\\<^sub>2 \\<turnstile> \\<langle>c,s,l + 1\\<rangle> \\<leadsto>\n  \\<langle>c',s',l' + 1\\<rangle>\n  labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l' + 1) c'", "show ?case"], ["proof (prove)\nusing this:\n  if (b) c\\<^sub>1\n  else c\\<^sub>2 \\<turnstile> \\<langle>c,s,l + 1\\<rangle> \\<leadsto>\n  \\<langle>c',s',l' + 1\\<rangle>\n  labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l' + 1) c'\n\ngoal (1 subgoal):\n 1. \\<exists>l'.\n       if (b) c\\<^sub>1\n       else c\\<^sub>2 \\<turnstile> \\<langle>c,s,l + 1\\<rangle> \\<leadsto>\n       \\<langle>c',s',l'\\<rangle> \\<and>\n       labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'", "by blast"], ["proof (state)\nthis:\n  \\<exists>l'.\n     if (b) c\\<^sub>1\n     else c\\<^sub>2 \\<turnstile> \\<langle>c,s,l + 1\\<rangle> \\<leadsto>\n     \\<langle>c',s',l'\\<rangle> \\<and>\n     labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n\ngoal (3 subgoals):\n 1. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 2. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 3. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 2. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 3. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "case (Labels_CondFalse c\\<^sub>2 l c b c\\<^sub>1 c')"], ["proof (state)\nthis:\n  labels c\\<^sub>2 l c\n  \\<langle>c,s\\<rangle> \\<rightarrow>\n  \\<langle>?c',s'\\<rangle> \\<Longrightarrow>\n  \\<exists>l'.\n     c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n     \\<langle>?c',s',l'\\<rangle> \\<and>\n     labels c\\<^sub>2 l' ?c'\n  \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\n\ngoal (3 subgoals):\n 1. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 2. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 3. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "note IH = \\<open>\\<And>c'. \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n            \\<exists>l'. c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto> \\<langle>c',s',l'\\<rangle> \\<and> labels c\\<^sub>2 l' c'\\<close>"], ["proof (state)\nthis:\n  \\<langle>c,s\\<rangle> \\<rightarrow>\n  \\<langle>?c',s'\\<rangle> \\<Longrightarrow>\n  \\<exists>l'.\n     c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n     \\<langle>?c',s',l'\\<rangle> \\<and>\n     labels c\\<^sub>2 l' ?c'\n\ngoal (3 subgoals):\n 1. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 2. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 3. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "from IH[OF \\<open>\\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<close>]"], ["proof (chain)\npicking this:\n  \\<exists>l'.\n     c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n     \\<langle>c',s',l'\\<rangle> \\<and>\n     labels c\\<^sub>2 l' c'", "obtain l' where \"c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto> \\<langle>c',s',l'\\<rangle>\"\n    and \"labels c\\<^sub>2 l' c'\""], ["proof (prove)\nusing this:\n  \\<exists>l'.\n     c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n     \\<langle>c',s',l'\\<rangle> \\<and>\n     labels c\\<^sub>2 l' c'\n\ngoal (1 subgoal):\n 1. (\\<And>l'.\n        \\<lbrakk>c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                 \\<langle>c',s',l'\\<rangle>;\n         labels c\\<^sub>2 l' c'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n  \\<langle>c',s',l'\\<rangle>\n  labels c\\<^sub>2 l' c'\n\ngoal (3 subgoals):\n 1. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 2. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 3. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "from \\<open>c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto> \\<langle>c',s',l'\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n  \\<langle>c',s',l'\\<rangle>", "have \"if (b) c\\<^sub>1 else c\\<^sub>2 \\<turnstile> \\<langle>c,s,l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto> \\<langle>c',s',l' + #:c\\<^sub>1 + 1\\<rangle>\""], ["proof (prove)\nusing this:\n  c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n  \\<langle>c',s',l'\\<rangle>\n\ngoal (1 subgoal):\n 1. if (b) c\\<^sub>1\n    else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                                 l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n    \\<langle>c',s',l' + #:c\\<^sub>1 + 1\\<rangle>", "by(rule StepRecCond2)"], ["proof (state)\nthis:\n  if (b) c\\<^sub>1\n  else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                               l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n  \\<langle>c',s',l' + #:c\\<^sub>1 + 1\\<rangle>\n\ngoal (3 subgoals):\n 1. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 2. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 3. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "moreover"], ["proof (state)\nthis:\n  if (b) c\\<^sub>1\n  else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                               l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n  \\<langle>c',s',l' + #:c\\<^sub>1 + 1\\<rangle>\n\ngoal (3 subgoals):\n 1. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 2. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 3. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "from \\<open>labels c\\<^sub>2 l' c'\\<close>"], ["proof (chain)\npicking this:\n  labels c\\<^sub>2 l' c'", "have \"labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l' + #:c\\<^sub>1 + 1) c'\""], ["proof (prove)\nusing this:\n  labels c\\<^sub>2 l' c'\n\ngoal (1 subgoal):\n 1. labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l' + #:c\\<^sub>1 + 1) c'", "by(rule Labels.Labels_CondFalse)"], ["proof (state)\nthis:\n  labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l' + #:c\\<^sub>1 + 1) c'\n\ngoal (3 subgoals):\n 1. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c'.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c'.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c',s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c\\<^sub>2 \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c',s',l'\\<rangle> \\<and>\n              labels c\\<^sub>2 l' c';\n        \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            if (b) c\\<^sub>1\n                            else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                   l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n                            \\<langle>c',s',l'\\<rangle> \\<and>\n                            labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n 2. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 3. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "ultimately"], ["proof (chain)\npicking this:\n  if (b) c\\<^sub>1\n  else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                               l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n  \\<langle>c',s',l' + #:c\\<^sub>1 + 1\\<rangle>\n  labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l' + #:c\\<^sub>1 + 1) c'", "show ?case"], ["proof (prove)\nusing this:\n  if (b) c\\<^sub>1\n  else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                               l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n  \\<langle>c',s',l' + #:c\\<^sub>1 + 1\\<rangle>\n  labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l' + #:c\\<^sub>1 + 1) c'\n\ngoal (1 subgoal):\n 1. \\<exists>l'.\n       if (b) c\\<^sub>1\n       else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                                    l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n       \\<langle>c',s',l'\\<rangle> \\<and>\n       labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'", "by blast"], ["proof (state)\nthis:\n  \\<exists>l'.\n     if (b) c\\<^sub>1\n     else c\\<^sub>2 \\<turnstile> \\<langle>c,s,\n                                  l + #:c\\<^sub>1 + 1\\<rangle> \\<leadsto>\n     \\<langle>c',s',l'\\<rangle> \\<and>\n     labels (if (b) c\\<^sub>1 else c\\<^sub>2) l' c'\n\ngoal (2 subgoals):\n 1. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 2. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 2. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "case (Labels_WhileBody c' l c b cx)"], ["proof (state)\nthis:\n  labels c' l c\n  \\<langle>c,s\\<rangle> \\<rightarrow>\n  \\<langle>?c',s'\\<rangle> \\<Longrightarrow>\n  \\<exists>l'.\n     c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n     \\<langle>?c',s',l'\\<rangle> \\<and>\n     labels c' l' ?c'\n  \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow> \\<langle>cx,s'\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 2. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "note IH = \\<open>\\<And>c''. \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c'',s'\\<rangle> \\<Longrightarrow>\n            \\<exists>l'. c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto> \\<langle>c'',s',l'\\<rangle> \\<and> labels c' l' c''\\<close>"], ["proof (state)\nthis:\n  \\<langle>c,s\\<rangle> \\<rightarrow>\n  \\<langle>?c'',s'\\<rangle> \\<Longrightarrow>\n  \\<exists>l'.\n     c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n     \\<langle>?c'',s',l'\\<rangle> \\<and>\n     labels c' l' ?c''\n\ngoal (2 subgoals):\n 1. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 2. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "from \\<open>\\<langle>c;;while (b) c',s\\<rangle> \\<rightarrow> \\<langle>cx,s'\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow> \\<langle>cx,s'\\<rangle>", "have \"(c = Skip \\<and> cx = while (b) c' \\<and> s = s') \\<or> (\\<exists>c''. cx = c'';;while (b) c')\""], ["proof (prove)\nusing this:\n  \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow> \\<langle>cx,s'\\<rangle>\n\ngoal (1 subgoal):\n 1. c = Skip \\<and> cx = while (b) c' \\<and> s = s' \\<or>\n    (\\<exists>c''. cx = c'';; while (b) c')", "by -(erule red.cases,auto)"], ["proof (state)\nthis:\n  c = Skip \\<and> cx = while (b) c' \\<and> s = s' \\<or>\n  (\\<exists>c''. cx = c'';; while (b) c')\n\ngoal (2 subgoals):\n 1. \\<And>c' l c b c'a.\n       \\<lbrakk>labels c' l c;\n        \\<And>c'a.\n           \\<langle>c,s\\<rangle> \\<rightarrow>\n           \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n           \\<exists>l'.\n              c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n              \\<langle>c'a,s',l'\\<rangle> \\<and>\n              labels c' l' c'a;\n        \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow>\n        \\<langle>c'a,s'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            while (b) c' \\<turnstile> \\<langle>c;;\n                 while (b) c',s,l + 2\\<rangle> \\<leadsto>\n                            \\<langle>c'a,s',l'\\<rangle> \\<and>\n                            labels (while (b) c') l' c'a\n 2. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "thus ?case"], ["proof (prove)\nusing this:\n  c = Skip \\<and> cx = while (b) c' \\<and> s = s' \\<or>\n  (\\<exists>c''. cx = c'';; while (b) c')\n\ngoal (1 subgoal):\n 1. \\<exists>l'.\n       while (b) c' \\<turnstile> \\<langle>c;; while (b) c',s,\n                                  l + 2\\<rangle> \\<leadsto>\n       \\<langle>cx,s',l'\\<rangle> \\<and>\n       labels (while (b) c') l' cx", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. c = Skip \\<and> cx = while (b) c' \\<and> s = s' \\<Longrightarrow>\n    \\<exists>l'.\n       while (b) c' \\<turnstile> \\<langle>c;; while (b) c',s,\n                                  l + 2\\<rangle> \\<leadsto>\n       \\<langle>cx,s',l'\\<rangle> \\<and>\n       labels (while (b) c') l' cx\n 2. \\<exists>c''. cx = c'';; while (b) c' \\<Longrightarrow>\n    \\<exists>l'.\n       while (b) c' \\<turnstile> \\<langle>c;; while (b) c',s,\n                                  l + 2\\<rangle> \\<leadsto>\n       \\<langle>cx,s',l'\\<rangle> \\<and>\n       labels (while (b) c') l' cx", "assume [simp]:\"c = Skip \\<and> cx = while (b) c' \\<and> s = s'\""], ["proof (state)\nthis:\n  c = Skip \\<and> cx = while (b) c' \\<and> s = s'\n\ngoal (2 subgoals):\n 1. c = Skip \\<and> cx = while (b) c' \\<and> s = s' \\<Longrightarrow>\n    \\<exists>l'.\n       while (b) c' \\<turnstile> \\<langle>c;; while (b) c',s,\n                                  l + 2\\<rangle> \\<leadsto>\n       \\<langle>cx,s',l'\\<rangle> \\<and>\n       labels (while (b) c') l' cx\n 2. \\<exists>c''. cx = c'';; while (b) c' \\<Longrightarrow>\n    \\<exists>l'.\n       while (b) c' \\<turnstile> \\<langle>c;; while (b) c',s,\n                                  l + 2\\<rangle> \\<leadsto>\n       \\<langle>cx,s',l'\\<rangle> \\<and>\n       labels (while (b) c') l' cx", "have \"labels (while (b) c') 0 (while (b) c')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. labels (while (b) c') 0 (while (b) c')", "by(fastforce intro:Labels_Base)"], ["proof (state)\nthis:\n  labels (while (b) c') 0 (while (b) c')\n\ngoal (2 subgoals):\n 1. c = Skip \\<and> cx = while (b) c' \\<and> s = s' \\<Longrightarrow>\n    \\<exists>l'.\n       while (b) c' \\<turnstile> \\<langle>c;; while (b) c',s,\n                                  l + 2\\<rangle> \\<leadsto>\n       \\<langle>cx,s',l'\\<rangle> \\<and>\n       labels (while (b) c') l' cx\n 2. \\<exists>c''. cx = c'';; while (b) c' \\<Longrightarrow>\n    \\<exists>l'.\n       while (b) c' \\<turnstile> \\<langle>c;; while (b) c',s,\n                                  l + 2\\<rangle> \\<leadsto>\n       \\<langle>cx,s',l'\\<rangle> \\<and>\n       labels (while (b) c') l' cx", "from \\<open>labels c' l c\\<close>"], ["proof (chain)\npicking this:\n  labels c' l c", "have \"labels (while (b) c') (l + 2) (Skip;;while (b) c')\""], ["proof (prove)\nusing this:\n  labels c' l c\n\ngoal (1 subgoal):\n 1. labels (while (b) c') (l + 2) (Skip;; while (b) c')", "by(fastforce intro:Labels.Labels_WhileBody simp del:add_2_eq_Suc')"], ["proof (state)\nthis:\n  labels (while (b) c') (l + 2) (Skip;; while (b) c')\n\ngoal (2 subgoals):\n 1. c = Skip \\<and> cx = while (b) c' \\<and> s = s' \\<Longrightarrow>\n    \\<exists>l'.\n       while (b) c' \\<turnstile> \\<langle>c;; while (b) c',s,\n                                  l + 2\\<rangle> \\<leadsto>\n       \\<langle>cx,s',l'\\<rangle> \\<and>\n       labels (while (b) c') l' cx\n 2. \\<exists>c''. cx = c'';; while (b) c' \\<Longrightarrow>\n    \\<exists>l'.\n       while (b) c' \\<turnstile> \\<langle>c;; while (b) c',s,\n                                  l + 2\\<rangle> \\<leadsto>\n       \\<langle>cx,s',l'\\<rangle> \\<and>\n       labels (while (b) c') l' cx", "hence \"while (b) c' \\<turnstile> \\<langle>Skip;;while (b) c',s,l + 2\\<rangle> \\<leadsto> \\<langle>while (b) c',s,0\\<rangle>\""], ["proof (prove)\nusing this:\n  labels (while (b) c') (l + 2) (Skip;; while (b) c')\n\ngoal (1 subgoal):\n 1. while (b) c' \\<turnstile> \\<langle>Skip;; while (b) c',s,\n                               l + 2\\<rangle> \\<leadsto>\n    \\<langle>while (b) c',s,0\\<rangle>", "by(rule StepSeqWhile)"], ["proof (state)\nthis:\n  while (b) c' \\<turnstile> \\<langle>Skip;; while (b) c',s,\n                             l + 2\\<rangle> \\<leadsto>\n  \\<langle>while (b) c',s,0\\<rangle>\n\ngoal (2 subgoals):\n 1. c = Skip \\<and> cx = while (b) c' \\<and> s = s' \\<Longrightarrow>\n    \\<exists>l'.\n       while (b) c' \\<turnstile> \\<langle>c;; while (b) c',s,\n                                  l + 2\\<rangle> \\<leadsto>\n       \\<langle>cx,s',l'\\<rangle> \\<and>\n       labels (while (b) c') l' cx\n 2. \\<exists>c''. cx = c'';; while (b) c' \\<Longrightarrow>\n    \\<exists>l'.\n       while (b) c' \\<turnstile> \\<langle>c;; while (b) c',s,\n                                  l + 2\\<rangle> \\<leadsto>\n       \\<langle>cx,s',l'\\<rangle> \\<and>\n       labels (while (b) c') l' cx", "with \\<open>labels (while (b) c') 0 (while (b) c')\\<close>"], ["proof (chain)\npicking this:\n  labels (while (b) c') 0 (while (b) c')\n  while (b) c' \\<turnstile> \\<langle>Skip;; while (b) c',s,\n                             l + 2\\<rangle> \\<leadsto>\n  \\<langle>while (b) c',s,0\\<rangle>", "show ?case"], ["proof (prove)\nusing this:\n  labels (while (b) c') 0 (while (b) c')\n  while (b) c' \\<turnstile> \\<langle>Skip;; while (b) c',s,\n                             l + 2\\<rangle> \\<leadsto>\n  \\<langle>while (b) c',s,0\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>l'.\n       while (b) c' \\<turnstile> \\<langle>c;; while (b) c',s,\n                                  l + 2\\<rangle> \\<leadsto>\n       \\<langle>cx,s',l'\\<rangle> \\<and>\n       labels (while (b) c') l' cx", "by simp blast"], ["proof (state)\nthis:\n  \\<exists>l'.\n     while (b) c' \\<turnstile> \\<langle>c;; while (b) c',s,\n                                l + 2\\<rangle> \\<leadsto>\n     \\<langle>cx,s',l'\\<rangle> \\<and>\n     labels (while (b) c') l' cx\n\ngoal (1 subgoal):\n 1. \\<exists>c''. cx = c'';; while (b) c' \\<Longrightarrow>\n    \\<exists>l'.\n       while (b) c' \\<turnstile> \\<langle>c;; while (b) c',s,\n                                  l + 2\\<rangle> \\<leadsto>\n       \\<langle>cx,s',l'\\<rangle> \\<and>\n       labels (while (b) c') l' cx", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>c''. cx = c'';; while (b) c' \\<Longrightarrow>\n    \\<exists>l'.\n       while (b) c' \\<turnstile> \\<langle>c;; while (b) c',s,\n                                  l + 2\\<rangle> \\<leadsto>\n       \\<langle>cx,s',l'\\<rangle> \\<and>\n       labels (while (b) c') l' cx", "assume \"\\<exists>c''. cx = c'';;while (b) c'\""], ["proof (state)\nthis:\n  \\<exists>c''. cx = c'';; while (b) c'\n\ngoal (1 subgoal):\n 1. \\<exists>c''. cx = c'';; while (b) c' \\<Longrightarrow>\n    \\<exists>l'.\n       while (b) c' \\<turnstile> \\<langle>c;; while (b) c',s,\n                                  l + 2\\<rangle> \\<leadsto>\n       \\<langle>cx,s',l'\\<rangle> \\<and>\n       labels (while (b) c') l' cx", "then"], ["proof (chain)\npicking this:\n  \\<exists>c''. cx = c'';; while (b) c'", "obtain c'' where [simp]:\"cx = c'';;while (b) c'\""], ["proof (prove)\nusing this:\n  \\<exists>c''. cx = c'';; while (b) c'\n\ngoal (1 subgoal):\n 1. (\\<And>c''.\n        cx = c'';; while (b) c' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  cx = c'';; while (b) c'\n\ngoal (1 subgoal):\n 1. \\<exists>c''. cx = c'';; while (b) c' \\<Longrightarrow>\n    \\<exists>l'.\n       while (b) c' \\<turnstile> \\<langle>c;; while (b) c',s,\n                                  l + 2\\<rangle> \\<leadsto>\n       \\<langle>cx,s',l'\\<rangle> \\<and>\n       labels (while (b) c') l' cx", "with \\<open>\\<langle>c;;while (b) c',s\\<rangle> \\<rightarrow> \\<langle>cx,s'\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow> \\<langle>cx,s'\\<rangle>\n  cx = c'';; while (b) c'", "have \"\\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c'',s'\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>c;; while (b) c',s\\<rangle> \\<rightarrow> \\<langle>cx,s'\\<rangle>\n  cx = c'';; while (b) c'\n\ngoal (1 subgoal):\n 1. \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c'',s'\\<rangle>", "by(auto elim:red.cases)"], ["proof (state)\nthis:\n  \\<langle>c,s\\<rangle> \\<rightarrow> \\<langle>c'',s'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c''. cx = c'';; while (b) c' \\<Longrightarrow>\n    \\<exists>l'.\n       while (b) c' \\<turnstile> \\<langle>c;; while (b) c',s,\n                                  l + 2\\<rangle> \\<leadsto>\n       \\<langle>cx,s',l'\\<rangle> \\<and>\n       labels (while (b) c') l' cx", "from IH[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>l'.\n     c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n     \\<langle>c'',s',l'\\<rangle> \\<and>\n     labels c' l' c''", "obtain l' where \"c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto> \\<langle>c'',s',l'\\<rangle>\"\n      and \"labels c' l' c''\""], ["proof (prove)\nusing this:\n  \\<exists>l'.\n     c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n     \\<langle>c'',s',l'\\<rangle> \\<and>\n     labels c' l' c''\n\ngoal (1 subgoal):\n 1. (\\<And>l'.\n        \\<lbrakk>c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n                 \\<langle>c'',s',l'\\<rangle>;\n         labels c' l' c''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n  \\<langle>c'',s',l'\\<rangle>\n  labels c' l' c''\n\ngoal (1 subgoal):\n 1. \\<exists>c''. cx = c'';; while (b) c' \\<Longrightarrow>\n    \\<exists>l'.\n       while (b) c' \\<turnstile> \\<langle>c;; while (b) c',s,\n                                  l + 2\\<rangle> \\<leadsto>\n       \\<langle>cx,s',l'\\<rangle> \\<and>\n       labels (while (b) c') l' cx", "from \\<open>c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto> \\<langle>c'',s',l'\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n  \\<langle>c'',s',l'\\<rangle>", "have \"while (b) c' \\<turnstile> \\<langle>c;;while (b) c',s,l + 2\\<rangle> \\<leadsto> \\<langle>c'';;while (b) c',s',l' + 2\\<rangle>\""], ["proof (prove)\nusing this:\n  c' \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>\n  \\<langle>c'',s',l'\\<rangle>\n\ngoal (1 subgoal):\n 1. while (b) c' \\<turnstile> \\<langle>c;; while (b) c',s,\n                               l + 2\\<rangle> \\<leadsto>\n    \\<langle>c'';; while (b) c',s',l' + 2\\<rangle>", "by(rule StepRecWhile)"], ["proof (state)\nthis:\n  while (b) c' \\<turnstile> \\<langle>c;; while (b) c',s,\n                             l + 2\\<rangle> \\<leadsto>\n  \\<langle>c'';; while (b) c',s',l' + 2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c''. cx = c'';; while (b) c' \\<Longrightarrow>\n    \\<exists>l'.\n       while (b) c' \\<turnstile> \\<langle>c;; while (b) c',s,\n                                  l + 2\\<rangle> \\<leadsto>\n       \\<langle>cx,s',l'\\<rangle> \\<and>\n       labels (while (b) c') l' cx", "moreover"], ["proof (state)\nthis:\n  while (b) c' \\<turnstile> \\<langle>c;; while (b) c',s,\n                             l + 2\\<rangle> \\<leadsto>\n  \\<langle>c'';; while (b) c',s',l' + 2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c''. cx = c'';; while (b) c' \\<Longrightarrow>\n    \\<exists>l'.\n       while (b) c' \\<turnstile> \\<langle>c;; while (b) c',s,\n                                  l + 2\\<rangle> \\<leadsto>\n       \\<langle>cx,s',l'\\<rangle> \\<and>\n       labels (while (b) c') l' cx", "from \\<open>labels c' l' c''\\<close>"], ["proof (chain)\npicking this:\n  labels c' l' c''", "have \"labels (while (b) c') (l' + 2) (c'';;while (b) c')\""], ["proof (prove)\nusing this:\n  labels c' l' c''\n\ngoal (1 subgoal):\n 1. labels (while (b) c') (l' + 2) (c'';; while (b) c')", "by(rule Labels.Labels_WhileBody)"], ["proof (state)\nthis:\n  labels (while (b) c') (l' + 2) (c'';; while (b) c')\n\ngoal (1 subgoal):\n 1. \\<exists>c''. cx = c'';; while (b) c' \\<Longrightarrow>\n    \\<exists>l'.\n       while (b) c' \\<turnstile> \\<langle>c;; while (b) c',s,\n                                  l + 2\\<rangle> \\<leadsto>\n       \\<langle>cx,s',l'\\<rangle> \\<and>\n       labels (while (b) c') l' cx", "ultimately"], ["proof (chain)\npicking this:\n  while (b) c' \\<turnstile> \\<langle>c;; while (b) c',s,\n                             l + 2\\<rangle> \\<leadsto>\n  \\<langle>c'';; while (b) c',s',l' + 2\\<rangle>\n  labels (while (b) c') (l' + 2) (c'';; while (b) c')", "show ?case"], ["proof (prove)\nusing this:\n  while (b) c' \\<turnstile> \\<langle>c;; while (b) c',s,\n                             l + 2\\<rangle> \\<leadsto>\n  \\<langle>c'';; while (b) c',s',l' + 2\\<rangle>\n  labels (while (b) c') (l' + 2) (c'';; while (b) c')\n\ngoal (1 subgoal):\n 1. \\<exists>l'.\n       while (b) c' \\<turnstile> \\<langle>c;; while (b) c',s,\n                                  l + 2\\<rangle> \\<leadsto>\n       \\<langle>cx,s',l'\\<rangle> \\<and>\n       labels (while (b) c') l' cx", "by simp blast"], ["proof (state)\nthis:\n  \\<exists>l'.\n     while (b) c' \\<turnstile> \\<langle>c;; while (b) c',s,\n                                l + 2\\<rangle> \\<leadsto>\n     \\<langle>cx,s',l'\\<rangle> \\<and>\n     labels (while (b) c') l' cx\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>l'.\n     while (b) c' \\<turnstile> \\<langle>c;; while (b) c',s,\n                                l + 2\\<rangle> \\<leadsto>\n     \\<langle>cx,s',l'\\<rangle> \\<and>\n     labels (while (b) c') l' cx\n\ngoal (1 subgoal):\n 1. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "case (Labels_WhileExit b c' c'')"], ["proof (state)\nthis:\n  \\<langle>Skip,s\\<rangle> \\<rightarrow> \\<langle>c'',s'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "from \\<open>\\<langle>Skip,s\\<rangle> \\<rightarrow> \\<langle>c'',s'\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  \\<langle>Skip,s\\<rangle> \\<rightarrow> \\<langle>c'',s'\\<rangle>", "have False"], ["proof (prove)\nusing this:\n  \\<langle>Skip,s\\<rangle> \\<rightarrow> \\<langle>c'',s'\\<rangle>\n\ngoal (1 subgoal):\n 1. False", "by(auto elim:red.cases)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>b c' c'a.\n       \\<langle>Skip,s\\<rangle> \\<rightarrow>\n       \\<langle>c'a,s'\\<rangle> \\<Longrightarrow>\n       \\<exists>l'.\n          while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n          \\<langle>c'a,s',l'\\<rangle> \\<and>\n          labels (while (b) c') l' c'a", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>l'.\n       while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n       \\<langle>c'',s',l'\\<rangle> \\<and>\n       labels (while (b) c') l' c''", "by simp"], ["proof (state)\nthis:\n  \\<exists>l'.\n     while (b) c' \\<turnstile> \\<langle>Skip,s,1\\<rangle> \\<leadsto>\n     \\<langle>c'',s',l'\\<rangle> \\<and>\n     labels (while (b) c') l' c''\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma reds_steps:\n  \"\\<lbrakk>\\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>; labels prog l c\\<rbrakk>\n  \\<Longrightarrow> \\<exists>l'. prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>* \\<langle>c',s',l'\\<rangle> \\<and> labels prog l' c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>;\n     labels prog l c\\<rbrakk>\n    \\<Longrightarrow> \\<exists>l'.\n                         prog \\<turnstile> \\<langle>c,s,\n      l\\<rangle> \\<leadsto>*\n                         \\<langle>c',s',l'\\<rangle> \\<and>\n                         labels prog l' c'", "proof(induct rule:rtranclp_induct2)"], ["proof (state)\ngoal (2 subgoals):\n 1. labels prog l c \\<Longrightarrow>\n    \\<exists>l'.\n       prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>*\n       \\<langle>c,s,l'\\<rangle> \\<and>\n       labels prog l' c\n 2. \\<And>a b aa ba.\n       \\<lbrakk>\\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>a,b\\<rangle>;\n        \\<langle>a,b\\<rangle> \\<rightarrow> \\<langle>aa,ba\\<rangle>;\n        labels prog l c \\<Longrightarrow>\n        \\<exists>l'.\n           prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>*\n           \\<langle>a,b,l'\\<rangle> \\<and>\n           labels prog l' a;\n        labels prog l c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            prog \\<turnstile> \\<langle>c,s,\n         l\\<rangle> \\<leadsto>*\n                            \\<langle>aa,ba,l'\\<rangle> \\<and>\n                            labels prog l' aa", "case refl"], ["proof (state)\nthis:\n  labels prog l c\n\ngoal (2 subgoals):\n 1. labels prog l c \\<Longrightarrow>\n    \\<exists>l'.\n       prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>*\n       \\<langle>c,s,l'\\<rangle> \\<and>\n       labels prog l' c\n 2. \\<And>a b aa ba.\n       \\<lbrakk>\\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>a,b\\<rangle>;\n        \\<langle>a,b\\<rangle> \\<rightarrow> \\<langle>aa,ba\\<rangle>;\n        labels prog l c \\<Longrightarrow>\n        \\<exists>l'.\n           prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>*\n           \\<langle>a,b,l'\\<rangle> \\<and>\n           labels prog l' a;\n        labels prog l c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            prog \\<turnstile> \\<langle>c,s,\n         l\\<rangle> \\<leadsto>*\n                            \\<langle>aa,ba,l'\\<rangle> \\<and>\n                            labels prog l' aa", "from \\<open>labels prog l c\\<close>"], ["proof (chain)\npicking this:\n  labels prog l c", "show ?case"], ["proof (prove)\nusing this:\n  labels prog l c\n\ngoal (1 subgoal):\n 1. \\<exists>l'.\n       prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>*\n       \\<langle>c,s,l'\\<rangle> \\<and>\n       labels prog l' c", "by blast"], ["proof (state)\nthis:\n  \\<exists>l'.\n     prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>*\n     \\<langle>c,s,l'\\<rangle> \\<and>\n     labels prog l' c\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>\\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>a,b\\<rangle>;\n        \\<langle>a,b\\<rangle> \\<rightarrow> \\<langle>aa,ba\\<rangle>;\n        labels prog l c \\<Longrightarrow>\n        \\<exists>l'.\n           prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>*\n           \\<langle>a,b,l'\\<rangle> \\<and>\n           labels prog l' a;\n        labels prog l c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            prog \\<turnstile> \\<langle>c,s,\n         l\\<rangle> \\<leadsto>*\n                            \\<langle>aa,ba,l'\\<rangle> \\<and>\n                            labels prog l' aa", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>\\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>a,b\\<rangle>;\n        \\<langle>a,b\\<rangle> \\<rightarrow> \\<langle>aa,ba\\<rangle>;\n        labels prog l c \\<Longrightarrow>\n        \\<exists>l'.\n           prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>*\n           \\<langle>a,b,l'\\<rangle> \\<and>\n           labels prog l' a;\n        labels prog l c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            prog \\<turnstile> \\<langle>c,s,\n         l\\<rangle> \\<leadsto>*\n                            \\<langle>aa,ba,l'\\<rangle> \\<and>\n                            labels prog l' aa", "case (step c'' s'' c' s')"], ["proof (state)\nthis:\n  \\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>c'',s''\\<rangle>\n  \\<langle>c'',s''\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\n  labels prog l c \\<Longrightarrow>\n  \\<exists>l'.\n     prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>*\n     \\<langle>c'',s'',l'\\<rangle> \\<and>\n     labels prog l' c''\n  labels prog l c\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>\\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>a,b\\<rangle>;\n        \\<langle>a,b\\<rangle> \\<rightarrow> \\<langle>aa,ba\\<rangle>;\n        labels prog l c \\<Longrightarrow>\n        \\<exists>l'.\n           prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>*\n           \\<langle>a,b,l'\\<rangle> \\<and>\n           labels prog l' a;\n        labels prog l c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            prog \\<turnstile> \\<langle>c,s,\n         l\\<rangle> \\<leadsto>*\n                            \\<langle>aa,ba,l'\\<rangle> \\<and>\n                            labels prog l' aa", "note IH = \\<open>labels prog l c \\<Longrightarrow>    \n    \\<exists>l'. prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>* \\<langle>c'',s'',l'\\<rangle> \\<and> labels prog l' c''\\<close>"], ["proof (state)\nthis:\n  labels prog l c \\<Longrightarrow>\n  \\<exists>l'.\n     prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>*\n     \\<langle>c'',s'',l'\\<rangle> \\<and>\n     labels prog l' c''\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>\\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>a,b\\<rangle>;\n        \\<langle>a,b\\<rangle> \\<rightarrow> \\<langle>aa,ba\\<rangle>;\n        labels prog l c \\<Longrightarrow>\n        \\<exists>l'.\n           prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>*\n           \\<langle>a,b,l'\\<rangle> \\<and>\n           labels prog l' a;\n        labels prog l c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            prog \\<turnstile> \\<langle>c,s,\n         l\\<rangle> \\<leadsto>*\n                            \\<langle>aa,ba,l'\\<rangle> \\<and>\n                            labels prog l' aa", "from IH[OF \\<open>labels prog l c\\<close>]"], ["proof (chain)\npicking this:\n  \\<exists>l'.\n     prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>*\n     \\<langle>c'',s'',l'\\<rangle> \\<and>\n     labels prog l' c''", "obtain l'' where \"prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>* \\<langle>c'',s'',l''\\<rangle>\"\n    and \"labels prog l'' c''\""], ["proof (prove)\nusing this:\n  \\<exists>l'.\n     prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>*\n     \\<langle>c'',s'',l'\\<rangle> \\<and>\n     labels prog l' c''\n\ngoal (1 subgoal):\n 1. (\\<And>l''.\n        \\<lbrakk>prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>*\n                 \\<langle>c'',s'',l''\\<rangle>;\n         labels prog l'' c''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>*\n  \\<langle>c'',s'',l''\\<rangle>\n  labels prog l'' c''\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>\\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>a,b\\<rangle>;\n        \\<langle>a,b\\<rangle> \\<rightarrow> \\<langle>aa,ba\\<rangle>;\n        labels prog l c \\<Longrightarrow>\n        \\<exists>l'.\n           prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>*\n           \\<langle>a,b,l'\\<rangle> \\<and>\n           labels prog l' a;\n        labels prog l c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            prog \\<turnstile> \\<langle>c,s,\n         l\\<rangle> \\<leadsto>*\n                            \\<langle>aa,ba,l'\\<rangle> \\<and>\n                            labels prog l' aa", "from \\<open>labels prog l'' c''\\<close> \\<open>\\<langle>c'',s''\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  labels prog l'' c''\n  \\<langle>c'',s''\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>", "obtain l'\n    where \"prog \\<turnstile> \\<langle>c'',s'',l''\\<rangle> \\<leadsto> \\<langle>c',s',l'\\<rangle>\"\n    and \"labels prog l' c'\""], ["proof (prove)\nusing this:\n  labels prog l'' c''\n  \\<langle>c'',s''\\<rangle> \\<rightarrow> \\<langle>c',s'\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>l'.\n        \\<lbrakk>prog \\<turnstile> \\<langle>c'',s'',l''\\<rangle> \\<leadsto>\n                 \\<langle>c',s',l'\\<rangle>;\n         labels prog l' c'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto dest:red_step)"], ["proof (state)\nthis:\n  prog \\<turnstile> \\<langle>c'',s'',l''\\<rangle> \\<leadsto>\n  \\<langle>c',s',l'\\<rangle>\n  labels prog l' c'\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>\\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>a,b\\<rangle>;\n        \\<langle>a,b\\<rangle> \\<rightarrow> \\<langle>aa,ba\\<rangle>;\n        labels prog l c \\<Longrightarrow>\n        \\<exists>l'.\n           prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>*\n           \\<langle>a,b,l'\\<rangle> \\<and>\n           labels prog l' a;\n        labels prog l c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            prog \\<turnstile> \\<langle>c,s,\n         l\\<rangle> \\<leadsto>*\n                            \\<langle>aa,ba,l'\\<rangle> \\<and>\n                            labels prog l' aa", "from \\<open>prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>* \\<langle>c'',s'',l''\\<rangle>\\<close> \\<open>prog \\<turnstile> \\<langle>c'',s'',l''\\<rangle> \\<leadsto> \\<langle>c',s',l'\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>*\n  \\<langle>c'',s'',l''\\<rangle>\n  prog \\<turnstile> \\<langle>c'',s'',l''\\<rangle> \\<leadsto>\n  \\<langle>c',s',l'\\<rangle>", "have \"prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>* \\<langle>c',s',l'\\<rangle>\""], ["proof (prove)\nusing this:\n  prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>*\n  \\<langle>c'',s'',l''\\<rangle>\n  prog \\<turnstile> \\<langle>c'',s'',l''\\<rangle> \\<leadsto>\n  \\<langle>c',s',l'\\<rangle>\n\ngoal (1 subgoal):\n 1. prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>*\n    \\<langle>c',s',l'\\<rangle>", "by(fastforce elim:rtranclp_trans)"], ["proof (state)\nthis:\n  prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>*\n  \\<langle>c',s',l'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>\\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>a,b\\<rangle>;\n        \\<langle>a,b\\<rangle> \\<rightarrow> \\<langle>aa,ba\\<rangle>;\n        labels prog l c \\<Longrightarrow>\n        \\<exists>l'.\n           prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>*\n           \\<langle>a,b,l'\\<rangle> \\<and>\n           labels prog l' a;\n        labels prog l c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l'.\n                            prog \\<turnstile> \\<langle>c,s,\n         l\\<rangle> \\<leadsto>*\n                            \\<langle>aa,ba,l'\\<rangle> \\<and>\n                            labels prog l' aa", "with \\<open>labels prog l' c'\\<close>"], ["proof (chain)\npicking this:\n  labels prog l' c'\n  prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>*\n  \\<langle>c',s',l'\\<rangle>", "show ?case"], ["proof (prove)\nusing this:\n  labels prog l' c'\n  prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>*\n  \\<langle>c',s',l'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>l'.\n       prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>*\n       \\<langle>c',s',l'\\<rangle> \\<and>\n       labels prog l' c'", "by blast"], ["proof (state)\nthis:\n  \\<exists>l'.\n     prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>*\n     \\<langle>c',s',l'\\<rangle> \\<and>\n     labels prog l' c'\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>The bisimulation theorem\\<close>"], ["", "theorem reds_steps_bisimulation:\n  \"labels prog l c \\<Longrightarrow> (\\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle>) = \n     (\\<exists>l'. prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>* \\<langle>c',s',l'\\<rangle> \\<and> labels prog l' c')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. labels prog l c \\<Longrightarrow>\n    \\<langle>c,s\\<rangle> \\<rightarrow>* \\<langle>c',s'\\<rangle> =\n    (\\<exists>l'.\n        prog \\<turnstile> \\<langle>c,s,l\\<rangle> \\<leadsto>*\n        \\<langle>c',s',l'\\<rangle> \\<and>\n        labels prog l' c')", "by(fastforce intro:reds_steps elim:steps_reds)"], ["", "end"]]}