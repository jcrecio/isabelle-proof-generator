{"file_name": "/home/qj213/afp-2021-10-22/thys/Slicing/StaticIntra/ControlDependenceRelations.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Slicing", "problem_names": ["lemma standard_control_implies_weak_order: \n  assumes \"n controls\\<^sub>s n'\" shows \"n \\<longrightarrow>\\<^sub>w\\<^sub>o\\<^sub>d n',(_Exit_)\""], "translations": [["", "lemma standard_control_implies_weak_order: \n  assumes \"n controls\\<^sub>s n'\" shows \"n \\<longrightarrow>\\<^sub>w\\<^sub>o\\<^sub>d n',(_Exit_)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<longrightarrow>\\<^sub>w\\<^sub>o\\<^sub>d n',(_Exit_)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<longrightarrow>\\<^sub>w\\<^sub>o\\<^sub>d n',(_Exit_)", "from \\<open>n controls\\<^sub>s n'\\<close>"], ["proof (chain)\npicking this:\n  n controls\\<^sub>s n'", "obtain as a a' as' where \"as = a#as'\"\n    and \"n' \\<notin> set(sourcenodes as)\" and \"n -as\\<rightarrow>* n'\"\n    and \"n' postdominates (targetnode a)\"\n    and \"valid_edge a'\" and \"sourcenode a' = n\"\n    and \"\\<not> n' postdominates (targetnode a')\""], ["proof (prove)\nusing this:\n  n controls\\<^sub>s n'\n\ngoal (1 subgoal):\n 1. (\\<And>as a as' a'.\n        \\<lbrakk>as = a # as'; n' \\<notin> set (sourcenodes as);\n         n -as\\<rightarrow>* n'; n' postdominates targetnode a;\n         valid_edge a'; sourcenode a' = n;\n         \\<not> n' postdominates targetnode a'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto simp:standard_control_dependence_def)"], ["proof (state)\nthis:\n  as = a # as'\n  n' \\<notin> set (sourcenodes as)\n  n -as\\<rightarrow>* n'\n  n' postdominates targetnode a\n  valid_edge a'\n  sourcenode a' = n\n  \\<not> n' postdominates targetnode a'\n\ngoal (1 subgoal):\n 1. n \\<longrightarrow>\\<^sub>w\\<^sub>o\\<^sub>d n',(_Exit_)", "from \\<open>n -as\\<rightarrow>* n'\\<close> \\<open>as = a#as'\\<close>"], ["proof (chain)\npicking this:\n  n -as\\<rightarrow>* n'\n  as = a # as'", "have \"sourcenode a = n\""], ["proof (prove)\nusing this:\n  n -as\\<rightarrow>* n'\n  as = a # as'\n\ngoal (1 subgoal):\n 1. sourcenode a = n", "by(auto elim:path.cases)"], ["proof (state)\nthis:\n  sourcenode a = n\n\ngoal (1 subgoal):\n 1. n \\<longrightarrow>\\<^sub>w\\<^sub>o\\<^sub>d n',(_Exit_)", "from \\<open>n -as\\<rightarrow>* n'\\<close> \\<open>as = a#as'\\<close> \\<open>n' \\<notin> set(sourcenodes as)\\<close>"], ["proof (chain)\npicking this:\n  n -as\\<rightarrow>* n'\n  as = a # as'\n  n' \\<notin> set (sourcenodes as)", "have \"n \\<noteq> n'\""], ["proof (prove)\nusing this:\n  n -as\\<rightarrow>* n'\n  as = a # as'\n  n' \\<notin> set (sourcenodes as)\n\ngoal (1 subgoal):\n 1. n \\<noteq> n'", "by(induct rule:path.induct,auto simp:sourcenodes_def)"], ["proof (state)\nthis:\n  n \\<noteq> n'\n\ngoal (1 subgoal):\n 1. n \\<longrightarrow>\\<^sub>w\\<^sub>o\\<^sub>d n',(_Exit_)", "from \\<open>n -as\\<rightarrow>* n'\\<close> \\<open>as = a#as'\\<close>"], ["proof (chain)\npicking this:\n  n -as\\<rightarrow>* n'\n  as = a # as'", "have \"valid_edge a\""], ["proof (prove)\nusing this:\n  n -as\\<rightarrow>* n'\n  as = a # as'\n\ngoal (1 subgoal):\n 1. valid_edge a", "by(auto elim:path.cases)"], ["proof (state)\nthis:\n  valid_edge a\n\ngoal (1 subgoal):\n 1. n \\<longrightarrow>\\<^sub>w\\<^sub>o\\<^sub>d n',(_Exit_)", "from \\<open>n controls\\<^sub>s n'\\<close>"], ["proof (chain)\npicking this:\n  n controls\\<^sub>s n'", "have \"n' \\<noteq> (_Exit_)\""], ["proof (prove)\nusing this:\n  n controls\\<^sub>s n'\n\ngoal (1 subgoal):\n 1. n' \\<noteq> (_Exit_)", "by(fastforce dest:Exit_not_standard_control_dependent)"], ["proof (state)\nthis:\n  n' \\<noteq> (_Exit_)\n\ngoal (1 subgoal):\n 1. n \\<longrightarrow>\\<^sub>w\\<^sub>o\\<^sub>d n',(_Exit_)", "from \\<open>n -as\\<rightarrow>* n'\\<close>"], ["proof (chain)\npicking this:\n  n -as\\<rightarrow>* n'", "have \"(_Exit_) \\<notin> set (sourcenodes as)\""], ["proof (prove)\nusing this:\n  n -as\\<rightarrow>* n'\n\ngoal (1 subgoal):\n 1. (_Exit_) \\<notin> set (sourcenodes as)", "by fastforce"], ["proof (state)\nthis:\n  (_Exit_) \\<notin> set (sourcenodes as)\n\ngoal (1 subgoal):\n 1. n \\<longrightarrow>\\<^sub>w\\<^sub>o\\<^sub>d n',(_Exit_)", "from \\<open>n -as\\<rightarrow>* n'\\<close>"], ["proof (chain)\npicking this:\n  n -as\\<rightarrow>* n'", "have \"valid_node n\" and \"valid_node n'\""], ["proof (prove)\nusing this:\n  n -as\\<rightarrow>* n'\n\ngoal (1 subgoal):\n 1. valid_node n &&& valid_node n'", "by(auto dest:path_valid_node)"], ["proof (state)\nthis:\n  valid_node n\n  valid_node n'\n\ngoal (1 subgoal):\n 1. n \\<longrightarrow>\\<^sub>w\\<^sub>o\\<^sub>d n',(_Exit_)", "with \\<open>\\<not> n' postdominates (targetnode a')\\<close> \\<open>valid_edge a'\\<close>"], ["proof (chain)\npicking this:\n  \\<not> n' postdominates targetnode a'\n  valid_edge a'\n  valid_node n\n  valid_node n'", "obtain asx where \"targetnode a' -asx\\<rightarrow>* (_Exit_)\" and \"n' \\<notin> set(sourcenodes asx)\""], ["proof (prove)\nusing this:\n  \\<not> n' postdominates targetnode a'\n  valid_edge a'\n  valid_node n\n  valid_node n'\n\ngoal (1 subgoal):\n 1. (\\<And>asx.\n        \\<lbrakk>targetnode a' -asx\\<rightarrow>* (_Exit_);\n         n' \\<notin> set (sourcenodes asx)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto simp:postdominate_def)"], ["proof (state)\nthis:\n  targetnode a' -asx\\<rightarrow>* (_Exit_)\n  n' \\<notin> set (sourcenodes asx)\n\ngoal (1 subgoal):\n 1. n \\<longrightarrow>\\<^sub>w\\<^sub>o\\<^sub>d n',(_Exit_)", "with \\<open>valid_edge a'\\<close> \\<open>sourcenode a' = n\\<close>"], ["proof (chain)\npicking this:\n  valid_edge a'\n  sourcenode a' = n\n  targetnode a' -asx\\<rightarrow>* (_Exit_)\n  n' \\<notin> set (sourcenodes asx)", "have \"n -a'#asx\\<rightarrow>* (_Exit_)\""], ["proof (prove)\nusing this:\n  valid_edge a'\n  sourcenode a' = n\n  targetnode a' -asx\\<rightarrow>* (_Exit_)\n  n' \\<notin> set (sourcenodes asx)\n\ngoal (1 subgoal):\n 1. n -a' # asx\\<rightarrow>* (_Exit_)", "by(fastforce intro:Cons_path)"], ["proof (state)\nthis:\n  n -a' # asx\\<rightarrow>* (_Exit_)\n\ngoal (1 subgoal):\n 1. n \\<longrightarrow>\\<^sub>w\\<^sub>o\\<^sub>d n',(_Exit_)", "with \\<open>n \\<noteq> n'\\<close> \\<open>sourcenode a' = n\\<close> \\<open>n' \\<notin> set(sourcenodes asx)\\<close>"], ["proof (chain)\npicking this:\n  n \\<noteq> n'\n  sourcenode a' = n\n  n' \\<notin> set (sourcenodes asx)\n  n -a' # asx\\<rightarrow>* (_Exit_)", "have \"n' \\<notin> set(sourcenodes (a'#asx))\""], ["proof (prove)\nusing this:\n  n \\<noteq> n'\n  sourcenode a' = n\n  n' \\<notin> set (sourcenodes asx)\n  n -a' # asx\\<rightarrow>* (_Exit_)\n\ngoal (1 subgoal):\n 1. n' \\<notin> set (sourcenodes (a' # asx))", "by(simp add:sourcenodes_def)"], ["proof (state)\nthis:\n  n' \\<notin> set (sourcenodes (a' # asx))\n\ngoal (1 subgoal):\n 1. n \\<longrightarrow>\\<^sub>w\\<^sub>o\\<^sub>d n',(_Exit_)", "from \\<open>n' postdominates (targetnode a)\\<close>"], ["proof (chain)\npicking this:\n  n' postdominates targetnode a", "obtain asx' where \"targetnode a -asx'\\<rightarrow>* n'\""], ["proof (prove)\nusing this:\n  n' postdominates targetnode a\n\ngoal (1 subgoal):\n 1. (\\<And>asx'.\n        targetnode a -asx'\\<rightarrow>* n' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(erule postdominate_implies_path)"], ["proof (state)\nthis:\n  targetnode a -asx'\\<rightarrow>* n'\n\ngoal (1 subgoal):\n 1. n \\<longrightarrow>\\<^sub>w\\<^sub>o\\<^sub>d n',(_Exit_)", "from \\<open>n' postdominates (targetnode a)\\<close>"], ["proof (chain)\npicking this:\n  n' postdominates targetnode a", "have \"\\<forall>as'. targetnode a -as'\\<rightarrow>* (_Exit_) \\<longrightarrow> n' \\<in> set(sourcenodes as')\""], ["proof (prove)\nusing this:\n  n' postdominates targetnode a\n\ngoal (1 subgoal):\n 1. \\<forall>as'.\n       targetnode a -as'\\<rightarrow>* (_Exit_) \\<longrightarrow>\n       n' \\<in> set (sourcenodes as')", "by(auto simp:postdominate_def)"], ["proof (state)\nthis:\n  \\<forall>as'.\n     targetnode a -as'\\<rightarrow>* (_Exit_) \\<longrightarrow>\n     n' \\<in> set (sourcenodes as')\n\ngoal (1 subgoal):\n 1. n \\<longrightarrow>\\<^sub>w\\<^sub>o\\<^sub>d n',(_Exit_)", "with \\<open>n' \\<noteq> (_Exit_)\\<close> \\<open>n -as\\<rightarrow>* n'\\<close> \\<open>(_Exit_) \\<notin> set (sourcenodes as)\\<close>\n    \\<open>n -a'#asx\\<rightarrow>* (_Exit_)\\<close> \\<open>n' \\<notin> set(sourcenodes (a'#asx))\\<close>\n    \\<open>valid_edge a\\<close> \\<open>sourcenode a = n\\<close> \\<open>targetnode a -asx'\\<rightarrow>* n'\\<close>"], ["proof (chain)\npicking this:\n  n' \\<noteq> (_Exit_)\n  n -as\\<rightarrow>* n'\n  (_Exit_) \\<notin> set (sourcenodes as)\n  n -a' # asx\\<rightarrow>* (_Exit_)\n  n' \\<notin> set (sourcenodes (a' # asx))\n  valid_edge a\n  sourcenode a = n\n  targetnode a -asx'\\<rightarrow>* n'\n  \\<forall>as'.\n     targetnode a -as'\\<rightarrow>* (_Exit_) \\<longrightarrow>\n     n' \\<in> set (sourcenodes as')", "show ?thesis"], ["proof (prove)\nusing this:\n  n' \\<noteq> (_Exit_)\n  n -as\\<rightarrow>* n'\n  (_Exit_) \\<notin> set (sourcenodes as)\n  n -a' # asx\\<rightarrow>* (_Exit_)\n  n' \\<notin> set (sourcenodes (a' # asx))\n  valid_edge a\n  sourcenode a = n\n  targetnode a -asx'\\<rightarrow>* n'\n  \\<forall>as'.\n     targetnode a -as'\\<rightarrow>* (_Exit_) \\<longrightarrow>\n     n' \\<in> set (sourcenodes as')\n\ngoal (1 subgoal):\n 1. n \\<longrightarrow>\\<^sub>w\\<^sub>o\\<^sub>d n',(_Exit_)", "by(auto simp:wod_def)"], ["proof (state)\nthis:\n  n \\<longrightarrow>\\<^sub>w\\<^sub>o\\<^sub>d n',(_Exit_)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}