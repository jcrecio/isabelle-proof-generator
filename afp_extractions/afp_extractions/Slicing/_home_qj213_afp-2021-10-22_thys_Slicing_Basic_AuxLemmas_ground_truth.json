{"file_name": "/home/qj213/afp-2021-10-22/thys/Slicing/Basic/AuxLemmas.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Slicing", "problem_names": ["lemma leftmost_element_property:\n  assumes \"\\<exists>x \\<in> set xs. P x\"\n  obtains zs x' ys where \"xs = zs@x'#ys\" and \"P x'\" and \"\\<forall>z \\<in> set zs. \\<not> P z\"", "lemma rightmost_element_property:\n  assumes \"\\<exists>x \\<in> set xs. P x\"\n  obtains ys x' zs where \"xs = ys@x'#zs\" and \"P x'\" and \"\\<forall>z \\<in> set zs. \\<not> P z\"", "lemma map_append_append_maps:\n  assumes map:\"map f xs = ys@zs\"\n  obtains xs' xs'' where \"map f xs' = ys\" and \"map f xs'' = zs\" and \"xs=xs'@xs''\"", "lemma  path_split_general:\nassumes all:\"\\<forall>zs. xs \\<noteq> ys@zs\"\nobtains j zs where \"xs = (take j ys)@zs\" and \"j < length ys\"\n  and \"\\<forall>k > j. \\<forall>zs'. xs \\<noteq> (take k ys)@zs'\""], "translations": [["", "lemma leftmost_element_property:\n  assumes \"\\<exists>x \\<in> set xs. P x\"\n  obtains zs x' ys where \"xs = zs@x'#ys\" and \"P x'\" and \"\\<forall>z \\<in> set zs. \\<not> P z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>zs x' ys.\n        \\<lbrakk>xs = zs @ x' # ys; P x';\n         \\<forall>z\\<in>set zs. \\<not> P z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof(atomize_elim)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>zs x' ys.\n       xs = zs @ x' # ys \\<and>\n       P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "from \\<open>\\<exists>x \\<in> set xs. P x\\<close>"], ["proof (chain)\npicking this:\n  \\<exists>x\\<in>set xs. P x", "show \"\\<exists>zs x' ys. xs = zs @ x' # ys \\<and> P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)\""], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>set xs. P x\n\ngoal (1 subgoal):\n 1. \\<exists>zs x' ys.\n       xs = zs @ x' # ys \\<and>\n       P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "proof(induct xs)"], ["proof (state)\ngoal (2 subgoals):\n 1. Bex (set []) P \\<Longrightarrow>\n    \\<exists>zs x' ys.\n       [] = zs @ x' # ys \\<and>\n       P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)\n 2. \\<And>a xs.\n       \\<lbrakk>Bex (set xs) P \\<Longrightarrow>\n                \\<exists>zs x' ys.\n                   xs = zs @ x' # ys \\<and>\n                   P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z);\n        Bex (set (a # xs)) P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>zs x' ys.\n                            a # xs = zs @ x' # ys \\<and>\n                            P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "case Nil"], ["proof (state)\nthis:\n  \\<exists>a\\<in>set []. P a\n\ngoal (2 subgoals):\n 1. Bex (set []) P \\<Longrightarrow>\n    \\<exists>zs x' ys.\n       [] = zs @ x' # ys \\<and>\n       P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)\n 2. \\<And>a xs.\n       \\<lbrakk>Bex (set xs) P \\<Longrightarrow>\n                \\<exists>zs x' ys.\n                   xs = zs @ x' # ys \\<and>\n                   P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z);\n        Bex (set (a # xs)) P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>zs x' ys.\n                            a # xs = zs @ x' # ys \\<and>\n                            P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<exists>a\\<in>set []. P a\n\ngoal (1 subgoal):\n 1. \\<exists>zs x' ys.\n       [] = zs @ x' # ys \\<and>\n       P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "by simp"], ["proof (state)\nthis:\n  \\<exists>zs x' ys.\n     [] = zs @ x' # ys \\<and>\n     P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>Bex (set xs) P \\<Longrightarrow>\n                \\<exists>zs x' ys.\n                   xs = zs @ x' # ys \\<and>\n                   P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z);\n        Bex (set (a # xs)) P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>zs x' ys.\n                            a # xs = zs @ x' # ys \\<and>\n                            P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>Bex (set xs) P \\<Longrightarrow>\n                \\<exists>zs x' ys.\n                   xs = zs @ x' # ys \\<and>\n                   P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z);\n        Bex (set (a # xs)) P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>zs x' ys.\n                            a # xs = zs @ x' # ys \\<and>\n                            P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "case (Cons x' xs')"], ["proof (state)\nthis:\n  \\<exists>a\\<in>set xs'. P a \\<Longrightarrow>\n  \\<exists>zs x' ys.\n     xs' = zs @ x' # ys \\<and>\n     P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)\n  \\<exists>a\\<in>set (x' # xs'). P a\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>Bex (set xs) P \\<Longrightarrow>\n                \\<exists>zs x' ys.\n                   xs = zs @ x' # ys \\<and>\n                   P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z);\n        Bex (set (a # xs)) P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>zs x' ys.\n                            a # xs = zs @ x' # ys \\<and>\n                            P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "note IH = \\<open>\\<exists>a\\<in>set xs'. P a\n      \\<Longrightarrow> \\<exists>zs x' ys. xs' = zs@x'#ys \\<and> P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)\\<close>"], ["proof (state)\nthis:\n  \\<exists>a\\<in>set xs'. P a \\<Longrightarrow>\n  \\<exists>zs x' ys.\n     xs' = zs @ x' # ys \\<and>\n     P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>Bex (set xs) P \\<Longrightarrow>\n                \\<exists>zs x' ys.\n                   xs = zs @ x' # ys \\<and>\n                   P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z);\n        Bex (set (a # xs)) P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>zs x' ys.\n                            a # xs = zs @ x' # ys \\<and>\n                            P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>zs x'a ys.\n       x' # xs' = zs @ x'a # ys \\<and>\n       P x'a \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "proof (cases \"P x'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. P x' \\<Longrightarrow>\n    \\<exists>zs x'a ys.\n       x' # xs' = zs @ x'a # ys \\<and>\n       P x'a \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)\n 2. \\<not> P x' \\<Longrightarrow>\n    \\<exists>zs x'a ys.\n       x' # xs' = zs @ x'a # ys \\<and>\n       P x'a \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "case True"], ["proof (state)\nthis:\n  P x'\n\ngoal (2 subgoals):\n 1. P x' \\<Longrightarrow>\n    \\<exists>zs x'a ys.\n       x' # xs' = zs @ x'a # ys \\<and>\n       P x'a \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)\n 2. \\<not> P x' \\<Longrightarrow>\n    \\<exists>zs x'a ys.\n       x' # xs' = zs @ x'a # ys \\<and>\n       P x'a \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "then"], ["proof (chain)\npicking this:\n  P x'", "have \"(\\<exists>ys. x' # xs' = [] @ x' # ys) \\<and> P x' \\<and> (\\<forall>x\\<in>set []. \\<not> P x)\""], ["proof (prove)\nusing this:\n  P x'\n\ngoal (1 subgoal):\n 1. (\\<exists>ys. x' # xs' = [] @ x' # ys) \\<and>\n    P x' \\<and> (\\<forall>x\\<in>set []. \\<not> P x)", "by simp"], ["proof (state)\nthis:\n  (\\<exists>ys. x' # xs' = [] @ x' # ys) \\<and>\n  P x' \\<and> (\\<forall>x\\<in>set []. \\<not> P x)\n\ngoal (2 subgoals):\n 1. P x' \\<Longrightarrow>\n    \\<exists>zs x'a ys.\n       x' # xs' = zs @ x'a # ys \\<and>\n       P x'a \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)\n 2. \\<not> P x' \\<Longrightarrow>\n    \\<exists>zs x'a ys.\n       x' # xs' = zs @ x'a # ys \\<and>\n       P x'a \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "then"], ["proof (chain)\npicking this:\n  (\\<exists>ys. x' # xs' = [] @ x' # ys) \\<and>\n  P x' \\<and> (\\<forall>x\\<in>set []. \\<not> P x)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<exists>ys. x' # xs' = [] @ x' # ys) \\<and>\n  P x' \\<and> (\\<forall>x\\<in>set []. \\<not> P x)\n\ngoal (1 subgoal):\n 1. \\<exists>zs x'a ys.\n       x' # xs' = zs @ x'a # ys \\<and>\n       P x'a \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "by blast"], ["proof (state)\nthis:\n  \\<exists>zs x'a ys.\n     x' # xs' = zs @ x'a # ys \\<and>\n     P x'a \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)\n\ngoal (1 subgoal):\n 1. \\<not> P x' \\<Longrightarrow>\n    \\<exists>zs x'a ys.\n       x' # xs' = zs @ x'a # ys \\<and>\n       P x'a \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> P x' \\<Longrightarrow>\n    \\<exists>zs x'a ys.\n       x' # xs' = zs @ x'a # ys \\<and>\n       P x'a \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "case False"], ["proof (state)\nthis:\n  \\<not> P x'\n\ngoal (1 subgoal):\n 1. \\<not> P x' \\<Longrightarrow>\n    \\<exists>zs x'a ys.\n       x' # xs' = zs @ x'a # ys \\<and>\n       P x'a \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "with \\<open>\\<exists>y\\<in>set (x'#xs'). P y\\<close>"], ["proof (chain)\npicking this:\n  \\<exists>y\\<in>set (x' # xs'). P y\n  \\<not> P x'", "have \"\\<exists>y\\<in>set xs'. P y\""], ["proof (prove)\nusing this:\n  \\<exists>y\\<in>set (x' # xs'). P y\n  \\<not> P x'\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>set xs'. P y", "by simp"], ["proof (state)\nthis:\n  \\<exists>y\\<in>set xs'. P y\n\ngoal (1 subgoal):\n 1. \\<not> P x' \\<Longrightarrow>\n    \\<exists>zs x'a ys.\n       x' # xs' = zs @ x'a # ys \\<and>\n       P x'a \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "from IH[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>zs x' ys.\n     xs' = zs @ x' # ys \\<and>\n     P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "obtain y ys zs where \"xs' = zs@y#ys\"\n        and \"P y\" and \"\\<forall>z\\<in>set zs. \\<not> P z\""], ["proof (prove)\nusing this:\n  \\<exists>zs x' ys.\n     xs' = zs @ x' # ys \\<and>\n     P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)\n\ngoal (1 subgoal):\n 1. (\\<And>zs y ys.\n        \\<lbrakk>xs' = zs @ y # ys; P y;\n         \\<forall>z\\<in>set zs. \\<not> P z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  xs' = zs @ y # ys\n  P y\n  \\<forall>z\\<in>set zs. \\<not> P z\n\ngoal (1 subgoal):\n 1. \\<not> P x' \\<Longrightarrow>\n    \\<exists>zs x'a ys.\n       x' # xs' = zs @ x'a # ys \\<and>\n       P x'a \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "from \\<open>\\<forall>z\\<in>set zs. \\<not> P z\\<close> False"], ["proof (chain)\npicking this:\n  \\<forall>z\\<in>set zs. \\<not> P z\n  \\<not> P x'", "have \"\\<forall>z\\<in>set (x'#zs). \\<not> P z\""], ["proof (prove)\nusing this:\n  \\<forall>z\\<in>set zs. \\<not> P z\n  \\<not> P x'\n\ngoal (1 subgoal):\n 1. \\<forall>z\\<in>set (x' # zs). \\<not> P z", "by simp"], ["proof (state)\nthis:\n  \\<forall>z\\<in>set (x' # zs). \\<not> P z\n\ngoal (1 subgoal):\n 1. \\<not> P x' \\<Longrightarrow>\n    \\<exists>zs x'a ys.\n       x' # xs' = zs @ x'a # ys \\<and>\n       P x'a \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "with \\<open>xs' = zs@y#ys\\<close> \\<open>P y\\<close>"], ["proof (chain)\npicking this:\n  xs' = zs @ y # ys\n  P y\n  \\<forall>z\\<in>set (x' # zs). \\<not> P z", "show ?thesis"], ["proof (prove)\nusing this:\n  xs' = zs @ y # ys\n  P y\n  \\<forall>z\\<in>set (x' # zs). \\<not> P z\n\ngoal (1 subgoal):\n 1. \\<exists>zs x'a ys.\n       x' # xs' = zs @ x'a # ys \\<and>\n       P x'a \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "by (metis Cons_eq_append_conv)"], ["proof (state)\nthis:\n  \\<exists>zs x'a ys.\n     x' # xs' = zs @ x'a # ys \\<and>\n     P x'a \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>zs x'a ys.\n     x' # xs' = zs @ x'a # ys \\<and>\n     P x'a \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>zs x' ys.\n     xs = zs @ x' # ys \\<and>\n     P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rightmost_element_property:\n  assumes \"\\<exists>x \\<in> set xs. P x\"\n  obtains ys x' zs where \"xs = ys@x'#zs\" and \"P x'\" and \"\\<forall>z \\<in> set zs. \\<not> P z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ys x' zs.\n        \\<lbrakk>xs = ys @ x' # zs; P x';\n         \\<forall>z\\<in>set zs. \\<not> P z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof(atomize_elim)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>ys x' zs.\n       xs = ys @ x' # zs \\<and>\n       P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "from \\<open>\\<exists>x \\<in> set xs. P x\\<close>"], ["proof (chain)\npicking this:\n  \\<exists>x\\<in>set xs. P x", "show \"\\<exists>ys x' zs. xs = ys @ x' # zs \\<and> P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)\""], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>set xs. P x\n\ngoal (1 subgoal):\n 1. \\<exists>ys x' zs.\n       xs = ys @ x' # zs \\<and>\n       P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "proof(induct xs)"], ["proof (state)\ngoal (2 subgoals):\n 1. Bex (set []) P \\<Longrightarrow>\n    \\<exists>ys x' zs.\n       [] = ys @ x' # zs \\<and>\n       P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)\n 2. \\<And>a xs.\n       \\<lbrakk>Bex (set xs) P \\<Longrightarrow>\n                \\<exists>ys x' zs.\n                   xs = ys @ x' # zs \\<and>\n                   P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z);\n        Bex (set (a # xs)) P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys x' zs.\n                            a # xs = ys @ x' # zs \\<and>\n                            P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "case Nil"], ["proof (state)\nthis:\n  \\<exists>a\\<in>set []. P a\n\ngoal (2 subgoals):\n 1. Bex (set []) P \\<Longrightarrow>\n    \\<exists>ys x' zs.\n       [] = ys @ x' # zs \\<and>\n       P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)\n 2. \\<And>a xs.\n       \\<lbrakk>Bex (set xs) P \\<Longrightarrow>\n                \\<exists>ys x' zs.\n                   xs = ys @ x' # zs \\<and>\n                   P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z);\n        Bex (set (a # xs)) P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys x' zs.\n                            a # xs = ys @ x' # zs \\<and>\n                            P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<exists>a\\<in>set []. P a\n\ngoal (1 subgoal):\n 1. \\<exists>ys x' zs.\n       [] = ys @ x' # zs \\<and>\n       P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "by simp"], ["proof (state)\nthis:\n  \\<exists>ys x' zs.\n     [] = ys @ x' # zs \\<and>\n     P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>Bex (set xs) P \\<Longrightarrow>\n                \\<exists>ys x' zs.\n                   xs = ys @ x' # zs \\<and>\n                   P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z);\n        Bex (set (a # xs)) P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys x' zs.\n                            a # xs = ys @ x' # zs \\<and>\n                            P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>Bex (set xs) P \\<Longrightarrow>\n                \\<exists>ys x' zs.\n                   xs = ys @ x' # zs \\<and>\n                   P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z);\n        Bex (set (a # xs)) P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys x' zs.\n                            a # xs = ys @ x' # zs \\<and>\n                            P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "case (Cons x' xs')"], ["proof (state)\nthis:\n  \\<exists>a\\<in>set xs'. P a \\<Longrightarrow>\n  \\<exists>ys x' zs.\n     xs' = ys @ x' # zs \\<and>\n     P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)\n  \\<exists>a\\<in>set (x' # xs'). P a\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>Bex (set xs) P \\<Longrightarrow>\n                \\<exists>ys x' zs.\n                   xs = ys @ x' # zs \\<and>\n                   P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z);\n        Bex (set (a # xs)) P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys x' zs.\n                            a # xs = ys @ x' # zs \\<and>\n                            P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "note IH = \\<open>\\<exists>a\\<in>set xs'. P a\n      \\<Longrightarrow> \\<exists>ys x' zs. xs' = ys @ x' # zs \\<and> P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)\\<close>"], ["proof (state)\nthis:\n  \\<exists>a\\<in>set xs'. P a \\<Longrightarrow>\n  \\<exists>ys x' zs.\n     xs' = ys @ x' # zs \\<and>\n     P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>Bex (set xs) P \\<Longrightarrow>\n                \\<exists>ys x' zs.\n                   xs = ys @ x' # zs \\<and>\n                   P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z);\n        Bex (set (a # xs)) P\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys x' zs.\n                            a # xs = ys @ x' # zs \\<and>\n                            P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys x'a zs.\n       x' # xs' = ys @ x'a # zs \\<and>\n       P x'a \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "proof(cases \"\\<exists>y\\<in>set xs'. P y\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>y\\<in>set xs'. P y \\<Longrightarrow>\n    \\<exists>ys x'a zs.\n       x' # xs' = ys @ x'a # zs \\<and>\n       P x'a \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)\n 2. \\<not> (\\<exists>y\\<in>set xs'. P y) \\<Longrightarrow>\n    \\<exists>ys x'a zs.\n       x' # xs' = ys @ x'a # zs \\<and>\n       P x'a \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "case True"], ["proof (state)\nthis:\n  \\<exists>y\\<in>set xs'. P y\n\ngoal (2 subgoals):\n 1. \\<exists>y\\<in>set xs'. P y \\<Longrightarrow>\n    \\<exists>ys x'a zs.\n       x' # xs' = ys @ x'a # zs \\<and>\n       P x'a \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)\n 2. \\<not> (\\<exists>y\\<in>set xs'. P y) \\<Longrightarrow>\n    \\<exists>ys x'a zs.\n       x' # xs' = ys @ x'a # zs \\<and>\n       P x'a \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "from IH[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>ys x' zs.\n     xs' = ys @ x' # zs \\<and>\n     P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "obtain y ys zs where \"xs' = ys @ y # zs\"\n        and \"P y\" and \"\\<forall>z\\<in>set zs. \\<not> P z\""], ["proof (prove)\nusing this:\n  \\<exists>ys x' zs.\n     xs' = ys @ x' # zs \\<and>\n     P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)\n\ngoal (1 subgoal):\n 1. (\\<And>ys y zs.\n        \\<lbrakk>xs' = ys @ y # zs; P y;\n         \\<forall>z\\<in>set zs. \\<not> P z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  xs' = ys @ y # zs\n  P y\n  \\<forall>z\\<in>set zs. \\<not> P z\n\ngoal (2 subgoals):\n 1. \\<exists>y\\<in>set xs'. P y \\<Longrightarrow>\n    \\<exists>ys x'a zs.\n       x' # xs' = ys @ x'a # zs \\<and>\n       P x'a \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)\n 2. \\<not> (\\<exists>y\\<in>set xs'. P y) \\<Longrightarrow>\n    \\<exists>ys x'a zs.\n       x' # xs' = ys @ x'a # zs \\<and>\n       P x'a \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "thus ?thesis"], ["proof (prove)\nusing this:\n  xs' = ys @ y # zs\n  P y\n  \\<forall>z\\<in>set zs. \\<not> P z\n\ngoal (1 subgoal):\n 1. \\<exists>ys x'a zs.\n       x' # xs' = ys @ x'a # zs \\<and>\n       P x'a \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "by (metis Cons_eq_append_conv)"], ["proof (state)\nthis:\n  \\<exists>ys x'a zs.\n     x' # xs' = ys @ x'a # zs \\<and>\n     P x'a \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>y\\<in>set xs'. P y) \\<Longrightarrow>\n    \\<exists>ys x'a zs.\n       x' # xs' = ys @ x'a # zs \\<and>\n       P x'a \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>y\\<in>set xs'. P y) \\<Longrightarrow>\n    \\<exists>ys x'a zs.\n       x' # xs' = ys @ x'a # zs \\<and>\n       P x'a \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "case False"], ["proof (state)\nthis:\n  \\<not> (\\<exists>y\\<in>set xs'. P y)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>y\\<in>set xs'. P y) \\<Longrightarrow>\n    \\<exists>ys x'a zs.\n       x' # xs' = ys @ x'a # zs \\<and>\n       P x'a \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "with \\<open>\\<exists>y\\<in>set (x'#xs'). P y\\<close>"], ["proof (chain)\npicking this:\n  \\<exists>y\\<in>set (x' # xs'). P y\n  \\<not> (\\<exists>y\\<in>set xs'. P y)", "have \"P x'\""], ["proof (prove)\nusing this:\n  \\<exists>y\\<in>set (x' # xs'). P y\n  \\<not> (\\<exists>y\\<in>set xs'. P y)\n\ngoal (1 subgoal):\n 1. P x'", "by simp"], ["proof (state)\nthis:\n  P x'\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>y\\<in>set xs'. P y) \\<Longrightarrow>\n    \\<exists>ys x'a zs.\n       x' # xs' = ys @ x'a # zs \\<and>\n       P x'a \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "with False"], ["proof (chain)\npicking this:\n  \\<not> (\\<exists>y\\<in>set xs'. P y)\n  P x'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>y\\<in>set xs'. P y)\n  P x'\n\ngoal (1 subgoal):\n 1. \\<exists>ys x'a zs.\n       x' # xs' = ys @ x'a # zs \\<and>\n       P x'a \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)", "by (metis eq_Nil_appendI)"], ["proof (state)\nthis:\n  \\<exists>ys x'a zs.\n     x' # xs' = ys @ x'a # zs \\<and>\n     P x'a \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys x'a zs.\n     x' # xs' = ys @ x'a # zs \\<and>\n     P x'a \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys x' zs.\n     xs = ys @ x' # zs \\<and>\n     P x' \\<and> (\\<forall>z\\<in>set zs. \\<not> P z)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Lemma concerning maps and \\<open>@\\<close>\\<close>"], ["", "lemma map_append_append_maps:\n  assumes map:\"map f xs = ys@zs\"\n  obtains xs' xs'' where \"map f xs' = ys\" and \"map f xs'' = zs\" and \"xs=xs'@xs''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>xs' xs''.\n        \\<lbrakk>map f xs' = ys; map f xs'' = zs; xs = xs' @ xs''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis append_eq_conv_conj append_take_drop_id assms drop_map take_map that)"], ["", "text \\<open>Lemma concerning splitting of @{term list}s\\<close>"], ["", "lemma  path_split_general:\nassumes all:\"\\<forall>zs. xs \\<noteq> ys@zs\"\nobtains j zs where \"xs = (take j ys)@zs\" and \"j < length ys\"\n  and \"\\<forall>k > j. \\<forall>zs'. xs \\<noteq> (take k ys)@zs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>j zs.\n        \\<lbrakk>xs = take j ys @ zs; j < length ys;\n         \\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k ys @ zs'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof(atomize_elim)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>j zs.\n       xs = take j ys @ zs \\<and>\n       j < length ys \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k ys @ zs')", "from \\<open>\\<forall>zs. xs \\<noteq> ys@zs\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>zs. xs \\<noteq> ys @ zs", "show \"\\<exists>j zs. xs = take j ys @ zs \\<and> j < length ys \\<and> \n               (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k ys @ zs')\""], ["proof (prove)\nusing this:\n  \\<forall>zs. xs \\<noteq> ys @ zs\n\ngoal (1 subgoal):\n 1. \\<exists>j zs.\n       xs = take j ys @ zs \\<and>\n       j < length ys \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k ys @ zs')", "proof(induct ys arbitrary:xs)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xs.\n       \\<forall>zs. xs \\<noteq> [] @ zs \\<Longrightarrow>\n       \\<exists>j zs.\n          xs = take j [] @ zs \\<and>\n          j < length [] \\<and>\n          (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k [] @ zs')\n 2. \\<And>a ys xs.\n       \\<lbrakk>\\<And>xs.\n                   \\<forall>zs. xs \\<noteq> ys @ zs \\<Longrightarrow>\n                   \\<exists>j zs.\n                      xs = take j ys @ zs \\<and>\n                      j < length ys \\<and>\n                      (\\<forall>k>j.\n                          \\<forall>zs'. xs \\<noteq> take k ys @ zs');\n        \\<forall>zs. xs \\<noteq> (a # ys) @ zs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>j zs.\n                            xs = take j (a # ys) @ zs \\<and>\n                            j < length (a # ys) \\<and>\n                            (\\<forall>k>j.\n                                \\<forall>zs'.\n                                   xs \\<noteq> take k (a # ys) @ zs')", "case Nil"], ["proof (state)\nthis:\n  \\<forall>zs. xs \\<noteq> [] @ zs\n\ngoal (2 subgoals):\n 1. \\<And>xs.\n       \\<forall>zs. xs \\<noteq> [] @ zs \\<Longrightarrow>\n       \\<exists>j zs.\n          xs = take j [] @ zs \\<and>\n          j < length [] \\<and>\n          (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k [] @ zs')\n 2. \\<And>a ys xs.\n       \\<lbrakk>\\<And>xs.\n                   \\<forall>zs. xs \\<noteq> ys @ zs \\<Longrightarrow>\n                   \\<exists>j zs.\n                      xs = take j ys @ zs \\<and>\n                      j < length ys \\<and>\n                      (\\<forall>k>j.\n                          \\<forall>zs'. xs \\<noteq> take k ys @ zs');\n        \\<forall>zs. xs \\<noteq> (a # ys) @ zs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>j zs.\n                            xs = take j (a # ys) @ zs \\<and>\n                            j < length (a # ys) \\<and>\n                            (\\<forall>k>j.\n                                \\<forall>zs'.\n                                   xs \\<noteq> take k (a # ys) @ zs')", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>zs. xs \\<noteq> [] @ zs\n\ngoal (1 subgoal):\n 1. \\<exists>j zs.\n       xs = take j [] @ zs \\<and>\n       j < length [] \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k [] @ zs')", "by auto"], ["proof (state)\nthis:\n  \\<exists>j zs.\n     xs = take j [] @ zs \\<and>\n     j < length [] \\<and>\n     (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k [] @ zs')\n\ngoal (1 subgoal):\n 1. \\<And>a ys xs.\n       \\<lbrakk>\\<And>xs.\n                   \\<forall>zs. xs \\<noteq> ys @ zs \\<Longrightarrow>\n                   \\<exists>j zs.\n                      xs = take j ys @ zs \\<and>\n                      j < length ys \\<and>\n                      (\\<forall>k>j.\n                          \\<forall>zs'. xs \\<noteq> take k ys @ zs');\n        \\<forall>zs. xs \\<noteq> (a # ys) @ zs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>j zs.\n                            xs = take j (a # ys) @ zs \\<and>\n                            j < length (a # ys) \\<and>\n                            (\\<forall>k>j.\n                                \\<forall>zs'.\n                                   xs \\<noteq> take k (a # ys) @ zs')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a ys xs.\n       \\<lbrakk>\\<And>xs.\n                   \\<forall>zs. xs \\<noteq> ys @ zs \\<Longrightarrow>\n                   \\<exists>j zs.\n                      xs = take j ys @ zs \\<and>\n                      j < length ys \\<and>\n                      (\\<forall>k>j.\n                          \\<forall>zs'. xs \\<noteq> take k ys @ zs');\n        \\<forall>zs. xs \\<noteq> (a # ys) @ zs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>j zs.\n                            xs = take j (a # ys) @ zs \\<and>\n                            j < length (a # ys) \\<and>\n                            (\\<forall>k>j.\n                                \\<forall>zs'.\n                                   xs \\<noteq> take k (a # ys) @ zs')", "case (Cons y' ys')"], ["proof (state)\nthis:\n  \\<forall>zs. ?xs \\<noteq> ys' @ zs \\<Longrightarrow>\n  \\<exists>j zs.\n     ?xs = take j ys' @ zs \\<and>\n     j < length ys' \\<and>\n     (\\<forall>k>j. \\<forall>zs'. ?xs \\<noteq> take k ys' @ zs')\n  \\<forall>zs. xs \\<noteq> (y' # ys') @ zs\n\ngoal (1 subgoal):\n 1. \\<And>a ys xs.\n       \\<lbrakk>\\<And>xs.\n                   \\<forall>zs. xs \\<noteq> ys @ zs \\<Longrightarrow>\n                   \\<exists>j zs.\n                      xs = take j ys @ zs \\<and>\n                      j < length ys \\<and>\n                      (\\<forall>k>j.\n                          \\<forall>zs'. xs \\<noteq> take k ys @ zs');\n        \\<forall>zs. xs \\<noteq> (a # ys) @ zs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>j zs.\n                            xs = take j (a # ys) @ zs \\<and>\n                            j < length (a # ys) \\<and>\n                            (\\<forall>k>j.\n                                \\<forall>zs'.\n                                   xs \\<noteq> take k (a # ys) @ zs')", "note IH = \\<open>\\<And>xs. \\<forall>zs. xs \\<noteq> ys' @ zs \\<Longrightarrow>\n      \\<exists>j zs. xs = take j ys' @ zs \\<and> j < length ys' \\<and> \n      (\\<forall>k. j < k \\<longrightarrow> (\\<forall>zs'. xs \\<noteq> take k ys' @ zs'))\\<close>"], ["proof (state)\nthis:\n  \\<forall>zs. ?xs \\<noteq> ys' @ zs \\<Longrightarrow>\n  \\<exists>j zs.\n     ?xs = take j ys' @ zs \\<and>\n     j < length ys' \\<and>\n     (\\<forall>k>j. \\<forall>zs'. ?xs \\<noteq> take k ys' @ zs')\n\ngoal (1 subgoal):\n 1. \\<And>a ys xs.\n       \\<lbrakk>\\<And>xs.\n                   \\<forall>zs. xs \\<noteq> ys @ zs \\<Longrightarrow>\n                   \\<exists>j zs.\n                      xs = take j ys @ zs \\<and>\n                      j < length ys \\<and>\n                      (\\<forall>k>j.\n                          \\<forall>zs'. xs \\<noteq> take k ys @ zs');\n        \\<forall>zs. xs \\<noteq> (a # ys) @ zs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>j zs.\n                            xs = take j (a # ys) @ zs \\<and>\n                            j < length (a # ys) \\<and>\n                            (\\<forall>k>j.\n                                \\<forall>zs'.\n                                   xs \\<noteq> take k (a # ys) @ zs')", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')", "proof(cases xs)"], ["proof (state)\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')\n 2. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<exists>j zs.\n          xs = take j (y' # ys') @ zs \\<and>\n          j < length (y' # ys') \\<and>\n          (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')", "case Nil"], ["proof (state)\nthis:\n  xs = []\n\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')\n 2. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<exists>j zs.\n          xs = take j (y' # ys') @ zs \\<and>\n          j < length (y' # ys') \\<and>\n          (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')", "thus ?thesis"], ["proof (prove)\nusing this:\n  xs = []\n\ngoal (1 subgoal):\n 1. \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')", "by simp"], ["proof (state)\nthis:\n  \\<exists>j zs.\n     xs = take j (y' # ys') @ zs \\<and>\n     j < length (y' # ys') \\<and>\n     (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<exists>j zs.\n          xs = take j (y' # ys') @ zs \\<and>\n          j < length (y' # ys') \\<and>\n          (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<exists>j zs.\n          xs = take j (y' # ys') @ zs \\<and>\n          j < length (y' # ys') \\<and>\n          (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')", "case (Cons x' xs')"], ["proof (state)\nthis:\n  xs = x' # xs'\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<exists>j zs.\n          xs = take j (y' # ys') @ zs \\<and>\n          j < length (y' # ys') \\<and>\n          (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')", "with \\<open>\\<forall>zs. xs \\<noteq> (y' # ys') @ zs\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>zs. xs \\<noteq> (y' # ys') @ zs\n  xs = x' # xs'", "have \"x' \\<noteq> y' \\<or> (\\<forall>zs. xs' \\<noteq> ys' @ zs)\""], ["proof (prove)\nusing this:\n  \\<forall>zs. xs \\<noteq> (y' # ys') @ zs\n  xs = x' # xs'\n\ngoal (1 subgoal):\n 1. x' \\<noteq> y' \\<or> (\\<forall>zs. xs' \\<noteq> ys' @ zs)", "by simp"], ["proof (state)\nthis:\n  x' \\<noteq> y' \\<or> (\\<forall>zs. xs' \\<noteq> ys' @ zs)\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<exists>j zs.\n          xs = take j (y' # ys') @ zs \\<and>\n          j < length (y' # ys') \\<and>\n          (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')", "proof(cases \"x' = y'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x' = y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')\n 2. x' \\<noteq> y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')", "case True"], ["proof (state)\nthis:\n  x' = y'\n\ngoal (2 subgoals):\n 1. x' = y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')\n 2. x' \\<noteq> y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')", "with \\<open>x' \\<noteq> y' \\<or> (\\<forall>zs. xs' \\<noteq> ys' @ zs)\\<close>"], ["proof (chain)\npicking this:\n  x' \\<noteq> y' \\<or> (\\<forall>zs. xs' \\<noteq> ys' @ zs)\n  x' = y'", "have \"\\<forall>zs. xs' \\<noteq> ys' @ zs\""], ["proof (prove)\nusing this:\n  x' \\<noteq> y' \\<or> (\\<forall>zs. xs' \\<noteq> ys' @ zs)\n  x' = y'\n\ngoal (1 subgoal):\n 1. \\<forall>zs. xs' \\<noteq> ys' @ zs", "by simp"], ["proof (state)\nthis:\n  \\<forall>zs. xs' \\<noteq> ys' @ zs\n\ngoal (2 subgoals):\n 1. x' = y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')\n 2. x' \\<noteq> y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')", "from IH[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>j zs.\n     xs' = take j ys' @ zs \\<and>\n     j < length ys' \\<and>\n     (\\<forall>k>j. \\<forall>zs'. xs' \\<noteq> take k ys' @ zs')", "have \"\\<exists>j zs. xs' = take j ys' @ zs \\<and> j < length ys' \\<and>\n          (\\<forall>k. j < k \\<longrightarrow> (\\<forall>zs'. xs' \\<noteq> take k ys' @ zs'))\""], ["proof (prove)\nusing this:\n  \\<exists>j zs.\n     xs' = take j ys' @ zs \\<and>\n     j < length ys' \\<and>\n     (\\<forall>k>j. \\<forall>zs'. xs' \\<noteq> take k ys' @ zs')\n\ngoal (1 subgoal):\n 1. \\<exists>j zs.\n       xs' = take j ys' @ zs \\<and>\n       j < length ys' \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs' \\<noteq> take k ys' @ zs')", "."], ["proof (state)\nthis:\n  \\<exists>j zs.\n     xs' = take j ys' @ zs \\<and>\n     j < length ys' \\<and>\n     (\\<forall>k>j. \\<forall>zs'. xs' \\<noteq> take k ys' @ zs')\n\ngoal (2 subgoals):\n 1. x' = y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')\n 2. x' \\<noteq> y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')", "then"], ["proof (chain)\npicking this:\n  \\<exists>j zs.\n     xs' = take j ys' @ zs \\<and>\n     j < length ys' \\<and>\n     (\\<forall>k>j. \\<forall>zs'. xs' \\<noteq> take k ys' @ zs')", "obtain j zs where \"xs' = take j ys' @ zs\"\n          and \"j < length ys'\"\n          and all_sub:\"\\<forall>k. j < k \\<longrightarrow> (\\<forall>zs'. xs' \\<noteq> take k ys' @ zs')\""], ["proof (prove)\nusing this:\n  \\<exists>j zs.\n     xs' = take j ys' @ zs \\<and>\n     j < length ys' \\<and>\n     (\\<forall>k>j. \\<forall>zs'. xs' \\<noteq> take k ys' @ zs')\n\ngoal (1 subgoal):\n 1. (\\<And>j zs.\n        \\<lbrakk>xs' = take j ys' @ zs; j < length ys';\n         \\<forall>k>j. \\<forall>zs'. xs' \\<noteq> take k ys' @ zs'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  xs' = take j ys' @ zs\n  j < length ys'\n  \\<forall>k>j. \\<forall>zs'. xs' \\<noteq> take k ys' @ zs'\n\ngoal (2 subgoals):\n 1. x' = y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')\n 2. x' \\<noteq> y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')", "from \\<open>xs' = take j ys' @ zs\\<close> True"], ["proof (chain)\npicking this:\n  xs' = take j ys' @ zs\n  x' = y'", "have \"(x'#xs') = take (Suc j) (y' # ys') @ zs\""], ["proof (prove)\nusing this:\n  xs' = take j ys' @ zs\n  x' = y'\n\ngoal (1 subgoal):\n 1. x' # xs' = take (Suc j) (y' # ys') @ zs", "by simp"], ["proof (state)\nthis:\n  x' # xs' = take (Suc j) (y' # ys') @ zs\n\ngoal (2 subgoals):\n 1. x' = y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')\n 2. x' \\<noteq> y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')", "from all_sub True"], ["proof (chain)\npicking this:\n  \\<forall>k>j. \\<forall>zs'. xs' \\<noteq> take k ys' @ zs'\n  x' = y'", "have all_imp:\"\\<forall>k. j < k \\<longrightarrow> \n          (\\<forall>zs'. (x'#xs') \\<noteq> take (Suc k) (y' # ys') @ zs')\""], ["proof (prove)\nusing this:\n  \\<forall>k>j. \\<forall>zs'. xs' \\<noteq> take k ys' @ zs'\n  x' = y'\n\ngoal (1 subgoal):\n 1. \\<forall>k>j.\n       \\<forall>zs'. x' # xs' \\<noteq> take (Suc k) (y' # ys') @ zs'", "by auto"], ["proof (state)\nthis:\n  \\<forall>k>j.\n     \\<forall>zs'. x' # xs' \\<noteq> take (Suc k) (y' # ys') @ zs'\n\ngoal (2 subgoals):\n 1. x' = y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')\n 2. x' \\<noteq> y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')", "{"], ["proof (state)\nthis:\n  \\<forall>k>j.\n     \\<forall>zs'. x' # xs' \\<noteq> take (Suc k) (y' # ys') @ zs'\n\ngoal (2 subgoals):\n 1. x' = y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')\n 2. x' \\<noteq> y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')", "fix l"], ["proof (state)\ngoal (2 subgoals):\n 1. x' = y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')\n 2. x' \\<noteq> y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')", "assume \"(Suc j) < l\""], ["proof (state)\nthis:\n  Suc j < l\n\ngoal (2 subgoals):\n 1. x' = y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')\n 2. x' \\<noteq> y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')", "then"], ["proof (chain)\npicking this:\n  Suc j < l", "obtain k where [simp]:\"l = Suc k\""], ["proof (prove)\nusing this:\n  Suc j < l\n\ngoal (1 subgoal):\n 1. (\\<And>k. l = Suc k \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by(cases l) auto"], ["proof (state)\nthis:\n  l = Suc k\n\ngoal (2 subgoals):\n 1. x' = y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')\n 2. x' \\<noteq> y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')", "with \\<open>(Suc j) < l\\<close>"], ["proof (chain)\npicking this:\n  Suc j < l\n  l = Suc k", "have \"j < k\""], ["proof (prove)\nusing this:\n  Suc j < l\n  l = Suc k\n\ngoal (1 subgoal):\n 1. j < k", "by simp"], ["proof (state)\nthis:\n  j < k\n\ngoal (2 subgoals):\n 1. x' = y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')\n 2. x' \\<noteq> y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')", "with all_imp"], ["proof (chain)\npicking this:\n  \\<forall>k>j.\n     \\<forall>zs'. x' # xs' \\<noteq> take (Suc k) (y' # ys') @ zs'\n  j < k", "have \"\\<forall>zs'. (x'#xs') \\<noteq> take (Suc k) (y' # ys') @ zs'\""], ["proof (prove)\nusing this:\n  \\<forall>k>j.\n     \\<forall>zs'. x' # xs' \\<noteq> take (Suc k) (y' # ys') @ zs'\n  j < k\n\ngoal (1 subgoal):\n 1. \\<forall>zs'. x' # xs' \\<noteq> take (Suc k) (y' # ys') @ zs'", "by simp"], ["proof (state)\nthis:\n  \\<forall>zs'. x' # xs' \\<noteq> take (Suc k) (y' # ys') @ zs'\n\ngoal (2 subgoals):\n 1. x' = y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')\n 2. x' \\<noteq> y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')", "hence \"\\<forall>zs'. (x'#xs') \\<noteq> take l (y' # ys') @ zs'\""], ["proof (prove)\nusing this:\n  \\<forall>zs'. x' # xs' \\<noteq> take (Suc k) (y' # ys') @ zs'\n\ngoal (1 subgoal):\n 1. \\<forall>zs'. x' # xs' \\<noteq> take l (y' # ys') @ zs'", "by simp"], ["proof (state)\nthis:\n  \\<forall>zs'. x' # xs' \\<noteq> take l (y' # ys') @ zs'\n\ngoal (2 subgoals):\n 1. x' = y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')\n 2. x' \\<noteq> y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')", "}"], ["proof (state)\nthis:\n  Suc j < ?l2 \\<Longrightarrow>\n  \\<forall>zs'. x' # xs' \\<noteq> take ?l2 (y' # ys') @ zs'\n\ngoal (2 subgoals):\n 1. x' = y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')\n 2. x' \\<noteq> y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')", "with \\<open>(x'#xs') = take (Suc j) (y' # ys') @ zs\\<close> \\<open>j < length ys'\\<close> Cons"], ["proof (chain)\npicking this:\n  x' # xs' = take (Suc j) (y' # ys') @ zs\n  j < length ys'\n  xs = x' # xs'\n  Suc j < ?l2 \\<Longrightarrow>\n  \\<forall>zs'. x' # xs' \\<noteq> take ?l2 (y' # ys') @ zs'", "show ?thesis"], ["proof (prove)\nusing this:\n  x' # xs' = take (Suc j) (y' # ys') @ zs\n  j < length ys'\n  xs = x' # xs'\n  Suc j < ?l2 \\<Longrightarrow>\n  \\<forall>zs'. x' # xs' \\<noteq> take ?l2 (y' # ys') @ zs'\n\ngoal (1 subgoal):\n 1. \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')", "by (metis Suc_length_conv less_Suc_eq_0_disj)"], ["proof (state)\nthis:\n  \\<exists>j zs.\n     xs = take j (y' # ys') @ zs \\<and>\n     j < length (y' # ys') \\<and>\n     (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')\n\ngoal (1 subgoal):\n 1. x' \\<noteq> y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x' \\<noteq> y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')", "case False"], ["proof (state)\nthis:\n  x' \\<noteq> y'\n\ngoal (1 subgoal):\n 1. x' \\<noteq> y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')", "with Cons"], ["proof (chain)\npicking this:\n  xs = x' # xs'\n  x' \\<noteq> y'", "have \"\\<forall>i zs'. i > 0 \\<longrightarrow> xs \\<noteq> take i (y' # ys') @ zs'\""], ["proof (prove)\nusing this:\n  xs = x' # xs'\n  x' \\<noteq> y'\n\ngoal (1 subgoal):\n 1. \\<forall>i zs'.\n       0 < i \\<longrightarrow> xs \\<noteq> take i (y' # ys') @ zs'", "by auto(case_tac i,auto)"], ["proof (state)\nthis:\n  \\<forall>i zs'.\n     0 < i \\<longrightarrow> xs \\<noteq> take i (y' # ys') @ zs'\n\ngoal (1 subgoal):\n 1. x' \\<noteq> y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')", "moreover"], ["proof (state)\nthis:\n  \\<forall>i zs'.\n     0 < i \\<longrightarrow> xs \\<noteq> take i (y' # ys') @ zs'\n\ngoal (1 subgoal):\n 1. x' \\<noteq> y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')", "have \"\\<exists>zs. xs = take 0 (y' # ys') @ zs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>zs. xs = take 0 (y' # ys') @ zs", "by simp"], ["proof (state)\nthis:\n  \\<exists>zs. xs = take 0 (y' # ys') @ zs\n\ngoal (1 subgoal):\n 1. x' \\<noteq> y' \\<Longrightarrow>\n    \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>i zs'.\n     0 < i \\<longrightarrow> xs \\<noteq> take i (y' # ys') @ zs'\n  \\<exists>zs. xs = take 0 (y' # ys') @ zs", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>i zs'.\n     0 < i \\<longrightarrow> xs \\<noteq> take i (y' # ys') @ zs'\n  \\<exists>zs. xs = take 0 (y' # ys') @ zs\n\ngoal (1 subgoal):\n 1. \\<exists>j zs.\n       xs = take j (y' # ys') @ zs \\<and>\n       j < length (y' # ys') \\<and>\n       (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')", "by(rule_tac x=\"0\" in exI,auto)"], ["proof (state)\nthis:\n  \\<exists>j zs.\n     xs = take j (y' # ys') @ zs \\<and>\n     j < length (y' # ys') \\<and>\n     (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>j zs.\n     xs = take j (y' # ys') @ zs \\<and>\n     j < length (y' # ys') \\<and>\n     (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>j zs.\n     xs = take j (y' # ys') @ zs \\<and>\n     j < length (y' # ys') \\<and>\n     (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k (y' # ys') @ zs')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>j zs.\n     xs = take j ys @ zs \\<and>\n     j < length ys \\<and>\n     (\\<forall>k>j. \\<forall>zs'. xs \\<noteq> take k ys @ zs')\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}