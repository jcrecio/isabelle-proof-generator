{"file_name": "/home/qj213/afp-2021-10-22/thys/LLL_Factorization/Factorization_Algorithm_16_22.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/LLL_Factorization", "problem_names": ["lemma irreducible_m_dvdm_prod_list_connect:\n  assumes irr: \"irreducible_m a\"\n  and dvd: \"a dvdm (prod_list xs)\"\nshows \"\\<exists> b \\<in> set xs. a dvdm b\"", "lemma (in poly_mod_prime) irreducible_m_dvdm_prod_list:\n  assumes irr: \"irreducible_m a\"\n  and dvd: \"a dvdm (prod_list xs)\"\n  shows \"\\<exists> b \\<in> set xs. a dvdm b\"", "lemma (in poly_mod_prime) Mp_smult_p_removal: \"poly_mod.Mp (p * p ^ k) (smult p f) = 0 \\<Longrightarrow> poly_mod.Mp (p^k) f = 0\"", "lemma (in poly_mod_prime) eq_m_smult_p_removal: \"poly_mod.eq_m (p * p ^ k) (smult p f) (smult p g) \n  \\<Longrightarrow> poly_mod.eq_m (p^k) f g\"", "lemma content_le_lead_coeff: \"abs (content (f :: int poly)) \\<le> abs (lead_coeff f)\"", "lemma poly_mod_dvd_drop_smult: assumes u: \"monic u\" and p: \"prime p\" and c: \"c \\<noteq> 0\" \"\\<bar>c\\<bar> < p^l\"\n  and dvd: \"poly_mod.dvdm (p^l) u (smult c f)\" \nshows \"poly_mod.dvdm p u f\"", "lemma F0: \"F\\<noteq>0\"", "lemma p1: \"p > 1\"", "lemma B2_2: \"2 \\<le> B2_LLL F\"", "lemma l_gt_0: \"l > 0\"", "lemma l0: \"l \\<noteq> 0\"", "lemma pl_not0: \"p ^ l \\<noteq> 0\"", "lemmas pl_dvdm_imp_p_dvdm = p.pl_dvdm_imp_p_dvdm[OF l0]", "lemma p_Mp_pl_Mp[simp]: \"p.Mp (pl.Mp k) = p.Mp k\"", "lemma f0: \"f \\<noteq> 0\"", "lemma Mpf0: \"pl.Mp f \\<noteq> 0\"", "lemma pMpf0: \"p.Mp f \\<noteq> 0\"", "lemma dn: \"d \\<le> n\"", "lemma n0: \"n > 0\"", "lemma B2_0[intro!]: \"B2_LLL F > 0\"", "lemma deg_u: \"degree u > 0\"", "lemma n_le_N: \"n\\<le>N\"", "lemma dvdm_power: assumes \"g dvd f\" \n  shows \"p.dvdm u g \\<longleftrightarrow> pl.dvdm u g\"", "lemma uf: \"pl.dvdm u f\"", "lemma exists_reconstruction: \"\\<exists>h0. irreducible\\<^sub>d h0 \\<and> p.dvdm u h0 \\<and> h0 dvd f\"", "lemma factor_dvd_f_0: assumes \"factor dvd f\" \n  shows \"pl.Mp factor \\<noteq> 0\"", "lemma degree_factor_ge_degree_u:\n  assumes u_dvdm_factor: \"p.dvdm u factor\" \n    and factor_dvd: \"factor dvd f\" shows \"degree u \\<le> degree factor\"", "lemma jn: \"j \\<le> n\"", "lemma factor_irreducible\\<^sub>dI: assumes hf: \"h dvd f\" \n  and puh: \"p.dvdm u h\" \n  and degh: \"degree h > 0\" \n  and degh_j: \"degree h \\<le> j'\"\nshows \"irreducible\\<^sub>d h\"", "lemma ll: \"ll \\<le> l\"", "lemma ll0: \"ll \\<noteq> 0\"", "lemma pll1: \"p^ll > 1\"", "lemma pll0: \"p^ll \\<noteq> 0\"", "lemma dvdm_l_ll: assumes \"pl.dvdm a b\"\n  shows \"pll.dvdm a b\"", "lemma deg_g_j: \"degree g < j\" \n    and g0: \"g \\<noteq> 0\" \n    and ug :\"pll.dvdm u g\" \n    and short_g: \"h \\<noteq> 0 \\<Longrightarrow> pll.dvdm u h \\<Longrightarrow> degree h \\<le> j' \\<Longrightarrow> \\<parallel>g\\<parallel>\\<^sup>2 \\<le> 2 ^ j' * \\<parallel>h\\<parallel>\\<^sup>2\"", "lemma LLL_reconstruction_inner_simps: \"LLL_reconstruction_inner p l gs f u Degs j\n  = (if j' \\<notin> Degs then None else if p ^ ll \\<le> \\<bar>lead_coeff g\\<bar> then None\n   else case div_int_poly f (primitive_part g) of None \\<Rightarrow> None\n        | Some f' \\<Rightarrow> Some ([gi\\<leftarrow>gs . \\<not> p.dvdm gi (primitive_part g)], lead_coeff f', f', primitive_part g))\"", "lemma LLL_reconstruction_inner_complete:\n  assumes ret: \"LLL_reconstruction_inner p l gs f u Degs j = None\"\n  shows \"\\<And>factor. p.dvdm u factor \\<Longrightarrow> factor dvd f \\<Longrightarrow> degree factor \\<ge> j\"", "lemma LLL_reconstruction_inner_sound:\n  assumes ret: \"LLL_reconstruction_inner p l gs f u Degs j = Some (gs',b',f',h)\" \n  shows \"f = f' * h\" (is \"?g1\")\n    and \"irreducible\\<^sub>d h\" (is \"?g2\")\n    and \"b' = lead_coeff f'\" (is \"?g3\")\n    and \"pl.unique_factorization_m f' (lead_coeff f', mset gs')\" (is \"?g4\")\n    and \"p.dvdm u h\" (is ?g5)\n    and \"degree h = j'\" (is ?g6)\n    and \"length gs' < length gs\" (is ?g7)\n    and \"set gs' \\<subseteq> set gs\" (is ?g8)\n    and \"gs' \\<noteq> []\" (is ?g9)", "lemma LLL_reconstruction_inner_None_upt_j':\n  assumes ij: \"\\<forall>i\\<in>{d+1..j}. LLL_reconstruction_inner p l gs f u Degs i = None\" \n    and dj: \"d<j\" and \"j\\<le>n\"\n  shows \"\\<And>factor. p.dvdm u factor \\<Longrightarrow> factor dvd f \\<Longrightarrow> degree factor \\<ge> j\"", "lemma LLL_reconstruction_inner_all_None_imp_irreducible:\n  assumes i: \"\\<forall>i\\<in>{d+1..n}. LLL_reconstruction_inner p l gs f u Degs i = None\"\n  shows \"irreducible\\<^sub>d f\"", "lemma irreducible_imp_LLL_reconstruction_inner_all_None:\n  assumes irr_f: \"irreducible\\<^sub>d f\"\n  shows \"\\<forall>i\\<in>{d+1..n}. LLL_reconstruction_inner p l gs f u Degs i = None\"", "lemma LLL_reconstruction_inner_all_None:\n  assumes i: \"\\<forall>i\\<in>{d+1..n}. LLL_reconstruction_inner p l gs f u Degs i = None\"\n  and dj: \"d<j\"\nshows \"LLL_reconstruction_inner_loop p l gs f u Degs j = ([],1,1,f)\"", "lemma exists_index_LLL_reconstruction_inner_Some:\n  assumes inner_loop: \"LLL_reconstruction_inner_loop p l gs f u Degs j = (gs',b',f',factor)\"\n    and i: \"\\<forall>i\\<in>{d+1..<j}. LLL_reconstruction_inner p l gs f u Degs i = None\"\n    and dj: \"d<j\" and jn: \"j\\<le>n\" and f: \"\\<not> irreducible\\<^sub>d f\"\n  shows \"\\<exists>j'. j \\<le> j' \\<and> j'\\<le>n \\<and> d<j'\n    \\<and> (LLL_reconstruction_inner p l gs f u Degs j' = Some (gs', b', f', factor))\n    \\<and> (\\<forall>i\\<in>{d+1..<j'}. LLL_reconstruction_inner p l gs f u Degs i = None)\"", "lemma unique_factorization_m_1: \"pl.unique_factorization_m 1 (1, {#})\"", "lemma LLL_reconstruction_inner_loop_j_le_n:\n  assumes ret: \"LLL_reconstruction_inner_loop p l gs f u Degs j = (gs',b',f',factor)\"\n    and ij: \"\\<forall>i\\<in>{d+1..<j}. LLL_reconstruction_inner p l gs f u Degs i = None\"\n    and n: \"n = degree f\"\n    and jn: \"j \\<le> n\"\n    and dj: \"d < j\"\n  shows \"f = f' * factor\" (is \"?g1\")\n    and \"irreducible\\<^sub>d factor\" (is \"?g2\")\n    and \"b' = lead_coeff f'\" (is \"?g3\")\n    and \"pl.unique_factorization_m f' (b', mset gs')\" (is \"?g4\")\n    and \"p.dvdm u factor\" (is ?g5)\n    and \"gs \\<noteq> [] \\<longrightarrow> length gs' < length gs\" (is ?g6)\n    and \"factor dvd f\" (is ?g7)\n    and \"f' dvd f\" (is ?g8)\n    and \"set gs' \\<subseteq> set gs\" (is ?g9)\n    and \"gs' = [] \\<longrightarrow> f' = 1\" (is ?g10)", "lemma LLL_reconstruction_inner_loop_j_ge_n:\n  assumes ret: \"LLL_reconstruction_inner_loop p l gs f u Degs j = (gs',b',f',factor)\"\n    and ij: \"\\<forall>i\\<in>{d+1..n}. LLL_reconstruction_inner p l gs f u Degs i = None\"\n    and dj: \"d < j\"\n    and jn: \"j>n\"\n  shows \"f = f' * factor\" (is \"?g1\")\n    and \"irreducible\\<^sub>d factor\" (is \"?g2\")\n    and \"b' = lead_coeff f'\" (is \"?g3\")\n    and \"pl.unique_factorization_m f' (b', mset gs')\" (is \"?g4\") \n    and \"p.dvdm u factor\" (is ?g5)\n    and \"gs \\<noteq> [] \\<longrightarrow> length gs' < length gs\" (is ?g6)\n    and \"factor dvd f\" (is ?g7)\n    and \"f' dvd f\" (is ?g8)\n    and \"set gs' \\<subseteq> set gs\" (is ?g9)\n    and \"f' = 1\" (is ?g10)", "lemma LLL_reconstruction_inner_loop:\n  assumes ret: \"LLL_reconstruction_inner_loop p l gs f u Degs j = (gs',b',f',factor)\"\n    and ij: \"\\<forall>i\\<in>{d+1..<j}. LLL_reconstruction_inner p l gs f u Degs i = None\"\n    and n: \"n = degree f\"\n    and dj: \"d < j\"\n  shows \"f = f' * factor\" (is \"?g1\")\n    and \"irreducible\\<^sub>d factor\" (is \"?g2\")\n    and \"b' = lead_coeff f'\" (is \"?g3\")\n    and \"pl.unique_factorization_m f' (b', mset gs')\" (is \"?g4\") \n    and \"p.dvdm u factor\" (is ?g5)\n    and \"gs \\<noteq> [] \\<longrightarrow> length gs' < length gs\" (is ?g6)\n    and \"factor dvd f\" (is ?g7)\n    and \"f' dvd f\" (is ?g8)\n    and \"set gs' \\<subseteq> set gs\" (is ?g9)\n    and \"gs' = [] \\<longrightarrow> f' = 1\" (is ?g10)", "lemma LLL_reconstruction'':\n  assumes 1: \"LLL_reconstruction'' p l gs b f G = G'\"\n    and irreducible_G: \"\\<And>factor. factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor\" \n    and 3: \"F = f * prod_list G\"\n    and 4: \"pl.unique_factorization_m f (lead_coeff f, mset gs)\"\n    and 5: \"gs \\<noteq> []\"\n    and 6: \"\\<And> gi. gi \\<in> set gs \\<Longrightarrow> pl.Mp gi = gi\"\n    and 7: \"\\<And> gi. gi \\<in> set gs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi\" \n    and 8: \"p.square_free_m f\" \n    and 9: \"coprime (lead_coeff f) p\" \n    and sf_F: \"square_free F\" \n  shows \"(\\<forall>g \\<in> set G'. irreducible\\<^sub>d g) \\<and> F = prod_list G'\"", "lemma gs_not_empty: \"gs \\<noteq> []\"", "lemma reconstruction_of_algorithm_16_22:   \n  assumes 1: \"reconstruction_of_algorithm_16_22 p l gs F = G\"\n  shows \"(\\<forall>g\\<in>set G. irreducible\\<^sub>d g) \\<and> F = prod_list G\"", "lemma factorization_algorithm_16_22:\n  assumes res: \"factorization_algorithm_16_22 f = G\"\n  and sff: \"square_free f\"\n  and deg: \"degree f > 0\" \n  shows \"(\\<forall>g\\<in>set G. irreducible\\<^sub>d g) \\<and> f = prod_list G\""], "translations": [["", "lemma irreducible_m_dvdm_prod_list_connect:\n  assumes irr: \"irreducible_m a\"\n  and dvd: \"a dvdm (prod_list xs)\"\nshows \"\\<exists> b \\<in> set xs. a dvdm b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>set xs. a dvdm b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>set xs. a dvdm b", "let ?A=\"(of_int_poly a)::'a mod_ring poly\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>set xs. a dvdm b", "let ?XS=\"(map of_int_poly xs)::'a mod_ring poly list\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>set xs. a dvdm b", "let ?XS1 = \"(of_int_poly (prod_list xs))::'a mod_ring poly\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>set xs. a dvdm b", "have [transfer_rule]: \"MP_Rel a ?A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. MP_Rel a (of_int_poly a)", "by (simp add: MP_Rel_def Mp_f_representative)"], ["proof (state)\nthis:\n  MP_Rel a (of_int_poly a)\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>set xs. a dvdm b", "have [transfer_rule]: \"MP_Rel (prod_list xs) ?XS1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. MP_Rel (prod_list xs) (of_int_poly (prod_list xs))", "by (simp add: MP_Rel_def Mp_f_representative)"], ["proof (state)\nthis:\n  MP_Rel (prod_list xs) (of_int_poly (prod_list xs))\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>set xs. a dvdm b", "have [transfer_rule]: \"list_all2 MP_Rel xs ?XS\""], ["proof (prove)\ngoal (1 subgoal):\n 1. list_all2 MP_Rel xs (map of_int_poly xs)", "by (simp add: MP_Rel_def Mp_f_representative list_all2_conv_all_nth)"], ["proof (state)\nthis:\n  list_all2 MP_Rel xs (map of_int_poly xs)\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>set xs. a dvdm b", "have A: \"?A dvd ?XS1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_int_poly a dvd of_int_poly (prod_list xs)", "using dvd"], ["proof (prove)\nusing this:\n  a dvdm prod_list xs\n\ngoal (1 subgoal):\n 1. of_int_poly a dvd of_int_poly (prod_list xs)", "by transfer"], ["proof (state)\nthis:\n  of_int_poly a dvd of_int_poly (prod_list xs)\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>set xs. a dvdm b", "have \"\\<exists> b \\<in> set ?XS. ?A dvd b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>set (map of_int_poly xs). of_int_poly a dvd b", "by (rule irreducible_dvd_prod_list, insert irr, transfer, auto simp add: A)"], ["proof (state)\nthis:\n  \\<exists>b\\<in>set (map of_int_poly xs). of_int_poly a dvd b\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>set xs. a dvdm b", "from this[untransferred]"], ["proof (chain)\npicking this:\n  \\<exists>b\\<in>set xs. a dvdm b", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>b\\<in>set xs. a dvdm b\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>set xs. a dvdm b", "."], ["proof (state)\nthis:\n  \\<exists>b\\<in>set xs. a dvdm b\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "lemma (in poly_mod_prime) irreducible_m_dvdm_prod_list:\n  assumes irr: \"irreducible_m a\"\n  and dvd: \"a dvdm (prod_list xs)\"\n  shows \"\\<exists> b \\<in> set xs. a dvdm b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>set xs. a dvdm b", "by (rule poly_mod_prime_type.irreducible_m_dvdm_prod_list_connect[unfolded poly_mod_type_simps, \n        internalize_sort \"'a :: prime_card\", OF type_to_set, unfolded remove_duplicate_premise, \n        cancel_type_definition, OF non_empty irr dvd])"], ["", "subsection \\<open>The modified version of Algorithm 16.22\\<close>"], ["", "(* Implementation of the for loop of step 8. The loop will finishes in two cases:\n      - If j>n'\n      - If a divisor is found *)"], ["", "definition B2_LLL :: \"int poly \\<Rightarrow> int\" where\n  \"B2_LLL f = 2 ^ (2 * degree f) * \\<parallel>f\\<parallel>\\<^sup>2\""], ["", "hide_const (open) factors"], ["", "hide_const (open) factors"], ["", "hide_const (open) factor"], ["", "hide_const (open) factor"], ["", "context\n  fixes p :: int and l :: nat\nbegin"], ["", "context\n  fixes gs :: \"int poly list\" \n    and f :: \"int poly\"\n    and u :: \"int poly\"\n    and Degs :: \"nat set\" \nbegin"], ["", "text \\<open>This is the critical inner loop.\n\n  In the textbook there is a bug, namely that the filter\n  is applied to $g'$ and not to the primitive part of $g'$. (Problems occur if the content\n  of $g'$ is divisible by $p$.) We have fixed this problem in the obvious way.\n\n  However, there also is a second problem,\n  namely it is only guaranteed that $g'$ is divisible by $u$ modulo $p^l$. However, for soundness\n  we need to know that then also the primitive part of $g'$ is divisible by $u$ modulo $p^l$. \n  This is not necessary true, e.g., if $g' = p^l$, then the primitive part is $1$ which is not\n  divisible by $u$ modulo $p^l$. \n  It is open, whether such a large $g'$ can actually occur. Therefore, the current fix\n  is to manually test whether the leading coefficient of $g'$ is strictly smaller than $p^l$.\n\n  With these two modifications, Algorithm 16.22 will become sound as proven below.\\<close>"], ["", "definition \"LLL_reconstruction_inner j \\<equiv>\n  let j' = j - 1 in\n  \\<comment> \\<open>optimization: check whether degree j' is possible\\<close>\n  if j' \\<notin> Degs then None else\n  \\<comment> \\<open>short vector computation\\<close>\n  let \n      ll = (let n = sqrt_int_ceiling (\\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')); \n      ll' = find_exponent p n in if ll' < l then ll' else l);\n  \\<comment> \\<open>optimization: dynamically adjust the modulus\\<close>\n      pl = p^ll;\n      g' = LLL_short_polynomial pl j u \n  \\<comment> \\<open>fix: forbid multiples of $p^l$ as short vector, unclear whether this is really required\\<close>\n  in if abs (lead_coeff g') \\<ge> pl then None else \n  let ppg = primitive_part g'\n  in\n  \\<comment> \\<open>slight deviation from textbook: we check divisibility instead of norm-inequality\\<close>\n  case div_int_poly f ppg of Some f' \\<Rightarrow>\n    \\<comment> \\<open>fix: consider modular factors of ppg and not of g'\\<close>\n    Some (filter (\\<lambda>gi. \\<not> poly_mod.dvdm p gi ppg) gs, lead_coeff f', f', ppg)  \n  | None \\<Rightarrow> None\""], ["", "function LLL_reconstruction_inner_loop where\n \"LLL_reconstruction_inner_loop j =\n  (if j > degree f then ([],1,1,f)\n   else case LLL_reconstruction_inner j\n     of Some tuple \\<Rightarrow> tuple\n     |  None \\<Rightarrow> LLL_reconstruction_inner_loop (j+1))\""], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>P x. (\\<And>j. x = j \\<Longrightarrow> P) \\<Longrightarrow> P\n 2. \\<And>j ja.\n       j = ja \\<Longrightarrow>\n       (if degree f < j then ([], 1, 1, f)\n        else case local.LLL_reconstruction_inner j of\n             None \\<Rightarrow> LLL_reconstruction_inner_loop_sumC (j + 1)\n             | Some tuple \\<Rightarrow> tuple) =\n       (if degree f < ja then ([], 1, 1, f)\n        else case local.LLL_reconstruction_inner ja of\n             None \\<Rightarrow> LLL_reconstruction_inner_loop_sumC (ja + 1)\n             | Some tuple \\<Rightarrow> tuple)", "by auto"], ["", "termination"], ["proof (prove)\ngoal (1 subgoal):\n 1. All local.LLL_reconstruction_inner_loop_dom", "by (relation \"measure (\\<lambda> j. Suc (degree f) - j)\", auto)"], ["", "end"], ["", "(*The main loop (line 6)*)"], ["", "partial_function (tailrec) LLL_reconstruction'' where [code]:\n \"LLL_reconstruction'' gs b f factors =\n  (if gs = [] then factors\n   else\n     let u = choose_u gs;\n         d = degree u;\n         gs' = remove1 u gs;\n         degs = map degree gs';\n         Degs = ((+) d) ` sub_mset_sums degs;\n         (gs', b', f', factor) = LLL_reconstruction_inner_loop gs f u Degs (d+1)\n     in LLL_reconstruction'' gs' b' f' (factor#factors)\n   )\""], ["", "definition \"reconstruction_of_algorithm_16_22 gs f \\<equiv>\n  let G = [];\n      b = lead_coeff f\n  in LLL_reconstruction'' gs b f G\""], ["", "end"], ["", "definition factorization_algorithm_16_22 :: \"int poly \\<Rightarrow> int poly list\" where\n  \"factorization_algorithm_16_22 f = (let \n     \\<comment> \\<open>find suitable prime\\<close>\n     p = suitable_prime_bz f;\n     \\<comment> \\<open>compute finite field factorization\\<close>\n     (_, fs) = finite_field_factorization_int p f;\n     \\<comment> \\<open>determine l and B\\<close>\n     n = degree f;\n     \\<comment> \\<open>bound improved according to textbook, which uses $no = (n + 1) * (max-norm f)^2$\\<close>\n     no = \\<parallel>f\\<parallel>\\<^sup>2;\n     \\<comment> \\<open>possible improvement: $B = sqrt (2 ^{5 * n * (n - 1)} * no ^ {2 * n - 1}$, cf. @{const LLL_factorization}\\<close>\n     B = sqrt_int_ceiling (2 ^ (5 * n * n) * no ^ (2 * n));\n     l = find_exponent p B;\n     \\<comment> \\<open>perform hensel lifting to lift factorization to mod $p^l$\\<close>\n     vs = hensel_lifting p l f fs\n     \\<comment> \\<open>reconstruct integer factors\\<close>\n   in reconstruction_of_algorithm_16_22 p l vs f)\""], ["", "subsection \\<open>Soundness proof\\<close>"], ["", "subsubsection \\<open>Starting the proof\\<close>"], ["", "text \\<open>Key lemma to show that forbidding values of $p^l$ or larger suffices to find correct factors.\\<close>"], ["", "lemma (in poly_mod_prime) Mp_smult_p_removal: \"poly_mod.Mp (p * p ^ k) (smult p f) = 0 \\<Longrightarrow> poly_mod.Mp (p^k) f = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly_mod.Mp (p * p ^ k) (smult p f) = 0 \\<Longrightarrow>\n    poly_mod.Mp (p ^ k) f = 0", "by (smt add.left_neutral m1 poly_mod.Dp_Mp_eq poly_mod.Mp_smult_m_0 sdiv_poly_smult smult_smult)"], ["", "lemma (in poly_mod_prime) eq_m_smult_p_removal: \"poly_mod.eq_m (p * p ^ k) (smult p f) (smult p g) \n  \\<Longrightarrow> poly_mod.eq_m (p^k) f g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly_mod.Mp (p * p ^ k) (smult p f) =\n    poly_mod.Mp (p * p ^ k) (smult p g) \\<Longrightarrow>\n    poly_mod.Mp (p ^ k) f = poly_mod.Mp (p ^ k) g", "using Mp_smult_p_removal[of k \"f - g\"]"], ["proof (prove)\nusing this:\n  poly_mod.Mp (p * p ^ k) (smult p (f - g)) = 0 \\<Longrightarrow>\n  poly_mod.Mp (p ^ k) (f - g) = 0\n\ngoal (1 subgoal):\n 1. poly_mod.Mp (p * p ^ k) (smult p f) =\n    poly_mod.Mp (p * p ^ k) (smult p g) \\<Longrightarrow>\n    poly_mod.Mp (p ^ k) f = poly_mod.Mp (p ^ k) g", "by (metis add_diff_cancel_left' diff_add_cancel diff_self poly_mod.Mp_0 poly_mod.minus_Mp(2) smult_diff_right)"], ["", "lemma content_le_lead_coeff: \"abs (content (f :: int poly)) \\<le> abs (lead_coeff f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>content f\\<bar> \\<le> \\<bar>lead_coeff f\\<bar>", "proof (cases \"f = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. f = 0 \\<Longrightarrow>\n    \\<bar>content f\\<bar> \\<le> \\<bar>lead_coeff f\\<bar>\n 2. f \\<noteq> 0 \\<Longrightarrow>\n    \\<bar>content f\\<bar> \\<le> \\<bar>lead_coeff f\\<bar>", "case False"], ["proof (state)\nthis:\n  f \\<noteq> 0\n\ngoal (2 subgoals):\n 1. f = 0 \\<Longrightarrow>\n    \\<bar>content f\\<bar> \\<le> \\<bar>lead_coeff f\\<bar>\n 2. f \\<noteq> 0 \\<Longrightarrow>\n    \\<bar>content f\\<bar> \\<le> \\<bar>lead_coeff f\\<bar>", "from content_dvd_coeff[of f \"degree f\"]"], ["proof (chain)\npicking this:\n  content f dvd lead_coeff f", "have \"abs (content f) dvd abs (lead_coeff f)\""], ["proof (prove)\nusing this:\n  content f dvd lead_coeff f\n\ngoal (1 subgoal):\n 1. \\<bar>content f\\<bar> dvd \\<bar>lead_coeff f\\<bar>", "by auto"], ["proof (state)\nthis:\n  \\<bar>content f\\<bar> dvd \\<bar>lead_coeff f\\<bar>\n\ngoal (2 subgoals):\n 1. f = 0 \\<Longrightarrow>\n    \\<bar>content f\\<bar> \\<le> \\<bar>lead_coeff f\\<bar>\n 2. f \\<noteq> 0 \\<Longrightarrow>\n    \\<bar>content f\\<bar> \\<le> \\<bar>lead_coeff f\\<bar>", "moreover"], ["proof (state)\nthis:\n  \\<bar>content f\\<bar> dvd \\<bar>lead_coeff f\\<bar>\n\ngoal (2 subgoals):\n 1. f = 0 \\<Longrightarrow>\n    \\<bar>content f\\<bar> \\<le> \\<bar>lead_coeff f\\<bar>\n 2. f \\<noteq> 0 \\<Longrightarrow>\n    \\<bar>content f\\<bar> \\<le> \\<bar>lead_coeff f\\<bar>", "have \"abs (lead_coeff f) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>lead_coeff f\\<bar> \\<noteq> 0", "using False"], ["proof (prove)\nusing this:\n  f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<bar>lead_coeff f\\<bar> \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  \\<bar>lead_coeff f\\<bar> \\<noteq> 0\n\ngoal (2 subgoals):\n 1. f = 0 \\<Longrightarrow>\n    \\<bar>content f\\<bar> \\<le> \\<bar>lead_coeff f\\<bar>\n 2. f \\<noteq> 0 \\<Longrightarrow>\n    \\<bar>content f\\<bar> \\<le> \\<bar>lead_coeff f\\<bar>", "ultimately"], ["proof (chain)\npicking this:\n  \\<bar>content f\\<bar> dvd \\<bar>lead_coeff f\\<bar>\n  \\<bar>lead_coeff f\\<bar> \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<bar>content f\\<bar> dvd \\<bar>lead_coeff f\\<bar>\n  \\<bar>lead_coeff f\\<bar> \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<bar>content f\\<bar> \\<le> \\<bar>lead_coeff f\\<bar>", "by (smt dvd_imp_le_int)"], ["proof (state)\nthis:\n  \\<bar>content f\\<bar> \\<le> \\<bar>lead_coeff f\\<bar>\n\ngoal (1 subgoal):\n 1. f = 0 \\<Longrightarrow>\n    \\<bar>content f\\<bar> \\<le> \\<bar>lead_coeff f\\<bar>", "qed auto"], ["", "lemma poly_mod_dvd_drop_smult: assumes u: \"monic u\" and p: \"prime p\" and c: \"c \\<noteq> 0\" \"\\<bar>c\\<bar> < p^l\"\n  and dvd: \"poly_mod.dvdm (p^l) u (smult c f)\" \nshows \"poly_mod.dvdm p u f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly_mod.dvdm p u f", "using c dvd"], ["proof (prove)\nusing this:\n  c \\<noteq> 0\n  \\<bar>c\\<bar> < p ^ l\n  poly_mod.dvdm (p ^ l) u (smult c f)\n\ngoal (1 subgoal):\n 1. poly_mod.dvdm p u f", "proof (induct l arbitrary: c rule: less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x c.\n       \\<lbrakk>\\<And>y c.\n                   \\<lbrakk>y < x; c \\<noteq> 0; \\<bar>c\\<bar> < p ^ y;\n                    poly_mod.dvdm (p ^ y) u (smult c f)\\<rbrakk>\n                   \\<Longrightarrow> poly_mod.dvdm p u f;\n        c \\<noteq> 0; \\<bar>c\\<bar> < p ^ x;\n        poly_mod.dvdm (p ^ x) u (smult c f)\\<rbrakk>\n       \\<Longrightarrow> poly_mod.dvdm p u f", "case (less l c)"], ["proof (state)\nthis:\n  \\<lbrakk>?y < l; ?c \\<noteq> 0; \\<bar>?c\\<bar> < p ^ ?y;\n   poly_mod.dvdm (p ^ ?y) u (smult ?c f)\\<rbrakk>\n  \\<Longrightarrow> poly_mod.dvdm p u f\n  c \\<noteq> 0\n  \\<bar>c\\<bar> < p ^ l\n  poly_mod.dvdm (p ^ l) u (smult c f)\n\ngoal (1 subgoal):\n 1. \\<And>x c.\n       \\<lbrakk>\\<And>y c.\n                   \\<lbrakk>y < x; c \\<noteq> 0; \\<bar>c\\<bar> < p ^ y;\n                    poly_mod.dvdm (p ^ y) u (smult c f)\\<rbrakk>\n                   \\<Longrightarrow> poly_mod.dvdm p u f;\n        c \\<noteq> 0; \\<bar>c\\<bar> < p ^ x;\n        poly_mod.dvdm (p ^ x) u (smult c f)\\<rbrakk>\n       \\<Longrightarrow> poly_mod.dvdm p u f", "interpret poly_mod_prime p"], ["proof (prove)\ngoal (1 subgoal):\n 1. poly_mod_prime p", "by (unfold_locales, insert p, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x c.\n       \\<lbrakk>\\<And>y c.\n                   \\<lbrakk>y < x; c \\<noteq> 0; \\<bar>c\\<bar> < p ^ y;\n                    poly_mod.dvdm (p ^ y) u (smult c f)\\<rbrakk>\n                   \\<Longrightarrow> u dvdm f;\n        c \\<noteq> 0; \\<bar>c\\<bar> < p ^ x;\n        poly_mod.dvdm (p ^ x) u (smult c f)\\<rbrakk>\n       \\<Longrightarrow> u dvdm f", "note c = less(2-3)"], ["proof (state)\nthis:\n  c \\<noteq> 0\n  \\<bar>c\\<bar> < p ^ l\n\ngoal (1 subgoal):\n 1. \\<And>x c.\n       \\<lbrakk>\\<And>y c.\n                   \\<lbrakk>y < x; c \\<noteq> 0; \\<bar>c\\<bar> < p ^ y;\n                    poly_mod.dvdm (p ^ y) u (smult c f)\\<rbrakk>\n                   \\<Longrightarrow> u dvdm f;\n        c \\<noteq> 0; \\<bar>c\\<bar> < p ^ x;\n        poly_mod.dvdm (p ^ x) u (smult c f)\\<rbrakk>\n       \\<Longrightarrow> u dvdm f", "note dvd = less(4)"], ["proof (state)\nthis:\n  poly_mod.dvdm (p ^ l) u (smult c f)\n\ngoal (1 subgoal):\n 1. \\<And>x c.\n       \\<lbrakk>\\<And>y c.\n                   \\<lbrakk>y < x; c \\<noteq> 0; \\<bar>c\\<bar> < p ^ y;\n                    poly_mod.dvdm (p ^ y) u (smult c f)\\<rbrakk>\n                   \\<Longrightarrow> u dvdm f;\n        c \\<noteq> 0; \\<bar>c\\<bar> < p ^ x;\n        poly_mod.dvdm (p ^ x) u (smult c f)\\<rbrakk>\n       \\<Longrightarrow> u dvdm f", "note IH = less(1)"], ["proof (state)\nthis:\n  \\<lbrakk>?y < l; ?c \\<noteq> 0; \\<bar>?c\\<bar> < p ^ ?y;\n   poly_mod.dvdm (p ^ ?y) u (smult ?c f)\\<rbrakk>\n  \\<Longrightarrow> u dvdm f\n\ngoal (1 subgoal):\n 1. \\<And>x c.\n       \\<lbrakk>\\<And>y c.\n                   \\<lbrakk>y < x; c \\<noteq> 0; \\<bar>c\\<bar> < p ^ y;\n                    poly_mod.dvdm (p ^ y) u (smult c f)\\<rbrakk>\n                   \\<Longrightarrow> u dvdm f;\n        c \\<noteq> 0; \\<bar>c\\<bar> < p ^ x;\n        poly_mod.dvdm (p ^ x) u (smult c f)\\<rbrakk>\n       \\<Longrightarrow> u dvdm f", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. u dvdm f", "proof (cases \"l = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. l = 0 \\<Longrightarrow> u dvdm f\n 2. l \\<noteq> 0 \\<Longrightarrow> u dvdm f", "case True"], ["proof (state)\nthis:\n  l = 0\n\ngoal (2 subgoals):\n 1. l = 0 \\<Longrightarrow> u dvdm f\n 2. l \\<noteq> 0 \\<Longrightarrow> u dvdm f", "thus ?thesis"], ["proof (prove)\nusing this:\n  l = 0\n\ngoal (1 subgoal):\n 1. u dvdm f", "using c dvd"], ["proof (prove)\nusing this:\n  l = 0\n  c \\<noteq> 0\n  \\<bar>c\\<bar> < p ^ l\n  poly_mod.dvdm (p ^ l) u (smult c f)\n\ngoal (1 subgoal):\n 1. u dvdm f", "by auto"], ["proof (state)\nthis:\n  u dvdm f\n\ngoal (1 subgoal):\n 1. l \\<noteq> 0 \\<Longrightarrow> u dvdm f", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. l \\<noteq> 0 \\<Longrightarrow> u dvdm f", "case l0: False"], ["proof (state)\nthis:\n  l \\<noteq> 0\n\ngoal (1 subgoal):\n 1. l \\<noteq> 0 \\<Longrightarrow> u dvdm f", "interpret pl: poly_mod_2 \"p^l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly_mod_2 (p ^ l)", "by (unfold_locales, insert m1 l0, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. l \\<noteq> 0 \\<Longrightarrow> u dvdm f", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. u dvdm f", "proof (cases \"p dvd c\")"], ["proof (state)\ngoal (2 subgoals):\n 1. p dvd c \\<Longrightarrow> u dvdm f\n 2. \\<not> p dvd c \\<Longrightarrow> u dvdm f", "case False"], ["proof (state)\nthis:\n  \\<not> p dvd c\n\ngoal (2 subgoals):\n 1. p dvd c \\<Longrightarrow> u dvdm f\n 2. \\<not> p dvd c \\<Longrightarrow> u dvdm f", "let ?i = \"inverse_mod c (p ^ l)\""], ["proof (state)\ngoal (2 subgoals):\n 1. p dvd c \\<Longrightarrow> u dvdm f\n 2. \\<not> p dvd c \\<Longrightarrow> u dvdm f", "have \"gcd c p = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd c p = 1", "using p False"], ["proof (prove)\nusing this:\n  prime p\n  \\<not> p dvd c\n\ngoal (1 subgoal):\n 1. gcd c p = 1", "by (metis Primes.prime_int_iff gcd_ge_0_int semiring_gcd_class.gcd_dvd1 semiring_gcd_class.gcd_dvd2)"], ["proof (state)\nthis:\n  gcd c p = 1\n\ngoal (2 subgoals):\n 1. p dvd c \\<Longrightarrow> u dvdm f\n 2. \\<not> p dvd c \\<Longrightarrow> u dvdm f", "hence \"coprime c p\""], ["proof (prove)\nusing this:\n  gcd c p = 1\n\ngoal (1 subgoal):\n 1. comm_monoid_mult_class.coprime c p", "by (metis dvd_refl gcd_dvd_1)"], ["proof (state)\nthis:\n  comm_monoid_mult_class.coprime c p\n\ngoal (2 subgoals):\n 1. p dvd c \\<Longrightarrow> u dvdm f\n 2. \\<not> p dvd c \\<Longrightarrow> u dvdm f", "from pl.inverse_mod_coprime_exp[OF refl p l0 this]"], ["proof (chain)\npicking this:\n  pl.M (inverse_mod c (p ^ l) * c) = 1", "have id: \"pl.M (?i * c) = 1\""], ["proof (prove)\nusing this:\n  pl.M (inverse_mod c (p ^ l) * c) = 1\n\ngoal (1 subgoal):\n 1. pl.M (inverse_mod c (p ^ l) * c) = 1", "."], ["proof (state)\nthis:\n  pl.M (inverse_mod c (p ^ l) * c) = 1\n\ngoal (2 subgoals):\n 1. p dvd c \\<Longrightarrow> u dvdm f\n 2. \\<not> p dvd c \\<Longrightarrow> u dvdm f", "have \"pl.Mp (smult ?i (smult c f)) = pl.Mp (smult (pl.M (?i * c)) f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pl.eq_m (smult (inverse_mod c (p ^ l)) (smult c f))\n     (smult (pl.M (inverse_mod c (p ^ l) * c)) f)", "by simp"], ["proof (state)\nthis:\n  pl.eq_m (smult (inverse_mod c (p ^ l)) (smult c f))\n   (smult (pl.M (inverse_mod c (p ^ l) * c)) f)\n\ngoal (2 subgoals):\n 1. p dvd c \\<Longrightarrow> u dvdm f\n 2. \\<not> p dvd c \\<Longrightarrow> u dvdm f", "also"], ["proof (state)\nthis:\n  pl.eq_m (smult (inverse_mod c (p ^ l)) (smult c f))\n   (smult (pl.M (inverse_mod c (p ^ l) * c)) f)\n\ngoal (2 subgoals):\n 1. p dvd c \\<Longrightarrow> u dvdm f\n 2. \\<not> p dvd c \\<Longrightarrow> u dvdm f", "have \"\\<dots> = pl.Mp f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pl.eq_m (smult (pl.M (inverse_mod c (p ^ l) * c)) f) f", "unfolding id"], ["proof (prove)\ngoal (1 subgoal):\n 1. pl.eq_m (smult 1 f) f", "by simp"], ["proof (state)\nthis:\n  pl.eq_m (smult (pl.M (inverse_mod c (p ^ l) * c)) f) f\n\ngoal (2 subgoals):\n 1. p dvd c \\<Longrightarrow> u dvdm f\n 2. \\<not> p dvd c \\<Longrightarrow> u dvdm f", "finally"], ["proof (chain)\npicking this:\n  pl.eq_m (smult (inverse_mod c (p ^ l)) (smult c f)) f", "have \"pl.dvdm u f\""], ["proof (prove)\nusing this:\n  pl.eq_m (smult (inverse_mod c (p ^ l)) (smult c f)) f\n\ngoal (1 subgoal):\n 1. pl.dvdm u f", "using pl.dvdm_smult[OF dvd, of ?i]"], ["proof (prove)\nusing this:\n  pl.eq_m (smult (inverse_mod c (p ^ l)) (smult c f)) f\n  pl.dvdm u (smult (inverse_mod c (p ^ l)) (smult c f))\n\ngoal (1 subgoal):\n 1. pl.dvdm u f", "unfolding pl.dvdm_def"], ["proof (prove)\nusing this:\n  pl.eq_m (smult (inverse_mod c (p ^ l)) (smult c f)) f\n  \\<exists>h. pl.eq_m (smult (inverse_mod c (p ^ l)) (smult c f)) (u * h)\n\ngoal (1 subgoal):\n 1. \\<exists>h. pl.eq_m f (u * h)", "by simp"], ["proof (state)\nthis:\n  pl.dvdm u f\n\ngoal (2 subgoals):\n 1. p dvd c \\<Longrightarrow> u dvdm f\n 2. \\<not> p dvd c \\<Longrightarrow> u dvdm f", "thus \"u dvdm f\""], ["proof (prove)\nusing this:\n  pl.dvdm u f\n\ngoal (1 subgoal):\n 1. u dvdm f", "using l0 pl_dvdm_imp_p_dvdm"], ["proof (prove)\nusing this:\n  pl.dvdm u f\n  l \\<noteq> 0\n  \\<lbrakk>?l \\<noteq> 0; poly_mod.dvdm (p ^ ?l) ?a ?b\\<rbrakk>\n  \\<Longrightarrow> ?a dvdm ?b\n\ngoal (1 subgoal):\n 1. u dvdm f", "by blast"], ["proof (state)\nthis:\n  u dvdm f\n\ngoal (1 subgoal):\n 1. p dvd c \\<Longrightarrow> u dvdm f", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p dvd c \\<Longrightarrow> u dvdm f", "case True"], ["proof (state)\nthis:\n  p dvd c\n\ngoal (1 subgoal):\n 1. p dvd c \\<Longrightarrow> u dvdm f", "then"], ["proof (chain)\npicking this:\n  p dvd c", "obtain d where cpd: \"c = p * d\""], ["proof (prove)\nusing this:\n  p dvd c\n\ngoal (1 subgoal):\n 1. (\\<And>d. c = p * d \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  \\<exists>k. c = p * k\n\ngoal (1 subgoal):\n 1. (\\<And>d. c = p * d \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  c = p * d\n\ngoal (1 subgoal):\n 1. p dvd c \\<Longrightarrow> u dvdm f", "from cpd c"], ["proof (chain)\npicking this:\n  c = p * d\n  c \\<noteq> 0\n  \\<bar>c\\<bar> < p ^ l", "have d0: \"d \\<noteq> 0\""], ["proof (prove)\nusing this:\n  c = p * d\n  c \\<noteq> 0\n  \\<bar>c\\<bar> < p ^ l\n\ngoal (1 subgoal):\n 1. d \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  d \\<noteq> 0\n\ngoal (1 subgoal):\n 1. p dvd c \\<Longrightarrow> u dvdm f", "note to_p = Mp_Mp_pow_is_Mp[OF l0 m1]"], ["proof (state)\nthis:\n  pl.Mp ?f =m ?f\n\ngoal (1 subgoal):\n 1. p dvd c \\<Longrightarrow> u dvdm f", "from dvd"], ["proof (chain)\npicking this:\n  pl.dvdm u (smult c f)", "obtain v where eq: \"pl.eq_m (u * v) (smult p (smult d f))\""], ["proof (prove)\nusing this:\n  pl.dvdm u (smult c f)\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        pl.eq_m (u * v) (smult p (smult d f)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding pl.dvdm_def cpd"], ["proof (prove)\nusing this:\n  \\<exists>h. pl.eq_m (smult (p * d) f) (u * h)\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        pl.eq_m (u * v) (smult p (smult d f)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  pl.eq_m (u * v) (smult p (smult d f))\n\ngoal (1 subgoal):\n 1. p dvd c \\<Longrightarrow> u dvdm f", "from arg_cong[OF this, of Mp, unfolded to_p]"], ["proof (chain)\npicking this:\n  u * v =m smult p (smult d f)", "have \"Mp (u * v) = 0\""], ["proof (prove)\nusing this:\n  u * v =m smult p (smult d f)\n\ngoal (1 subgoal):\n 1. Mp (u * v) = 0", "unfolding Mp_smult_m_0"], ["proof (prove)\nusing this:\n  Mp (u * v) = 0\n\ngoal (1 subgoal):\n 1. Mp (u * v) = 0", "."], ["proof (state)\nthis:\n  Mp (u * v) = 0\n\ngoal (1 subgoal):\n 1. p dvd c \\<Longrightarrow> u dvdm f", "with u"], ["proof (chain)\npicking this:\n  monic u\n  Mp (u * v) = 0", "have \"Mp v = 0\""], ["proof (prove)\nusing this:\n  monic u\n  Mp (u * v) = 0\n\ngoal (1 subgoal):\n 1. Mp v = 0", "by (metis Mp_0 add_eq_0_iff_both_eq_0 degree_0 \n            degree_m_mult_eq monic_degree_0 monic_degree_m mult_cancel_right2)"], ["proof (state)\nthis:\n  Mp v = 0\n\ngoal (1 subgoal):\n 1. p dvd c \\<Longrightarrow> u dvdm f", "from Mp_0_smult_sdiv_poly[OF this]"], ["proof (chain)\npicking this:\n  smult p (sdiv_poly v p) = v", "obtain w where v: \"v = smult p w\""], ["proof (prove)\nusing this:\n  smult p (sdiv_poly v p) = v\n\ngoal (1 subgoal):\n 1. (\\<And>w. v = smult p w \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  v = smult p w\n\ngoal (1 subgoal):\n 1. p dvd c \\<Longrightarrow> u dvdm f", "with eq"], ["proof (chain)\npicking this:\n  pl.eq_m (u * v) (smult p (smult d f))\n  v = smult p w", "have eq: \"pl.eq_m (smult p (u * w)) (smult p (smult d f))\""], ["proof (prove)\nusing this:\n  pl.eq_m (u * v) (smult p (smult d f))\n  v = smult p w\n\ngoal (1 subgoal):\n 1. pl.eq_m (smult p (u * w)) (smult p (smult d f))", "by simp"], ["proof (state)\nthis:\n  pl.eq_m (smult p (u * w)) (smult p (smult d f))\n\ngoal (1 subgoal):\n 1. p dvd c \\<Longrightarrow> u dvdm f", "from l0"], ["proof (chain)\npicking this:\n  l \\<noteq> 0", "obtain ll where \"l = Suc ll\""], ["proof (prove)\nusing this:\n  l \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>ll. l = Suc ll \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (cases l, auto)"], ["proof (state)\nthis:\n  l = Suc ll\n\ngoal (1 subgoal):\n 1. p dvd c \\<Longrightarrow> u dvdm f", "hence pl: \"p^l = p * p^ll\" and ll: \"ll < l\""], ["proof (prove)\nusing this:\n  l = Suc ll\n\ngoal (1 subgoal):\n 1. p ^ l = p * p ^ ll &&& ll < l", "by auto"], ["proof (state)\nthis:\n  p ^ l = p * p ^ ll\n  ll < l\n\ngoal (1 subgoal):\n 1. p dvd c \\<Longrightarrow> u dvdm f", "from c(2)"], ["proof (chain)\npicking this:\n  \\<bar>c\\<bar> < p ^ l", "have d_small: \"\\<bar>d\\<bar> < p^ll\""], ["proof (prove)\nusing this:\n  \\<bar>c\\<bar> < p ^ l\n\ngoal (1 subgoal):\n 1. \\<bar>d\\<bar> < p ^ ll", "unfolding pl cpd abs_mult"], ["proof (prove)\nusing this:\n  \\<bar>p\\<bar> * \\<bar>d\\<bar> < p * p ^ ll\n\ngoal (1 subgoal):\n 1. \\<bar>d\\<bar> < p ^ ll", "using mult_less_cancel_left_pos[of p d \"p^ll\"] m1"], ["proof (prove)\nusing this:\n  \\<bar>p\\<bar> * \\<bar>d\\<bar> < p * p ^ ll\n  0 < p \\<Longrightarrow> (p * d < p * p ^ ll) = (d < p ^ ll)\n  1 < p\n\ngoal (1 subgoal):\n 1. \\<bar>d\\<bar> < p ^ ll", "by auto"], ["proof (state)\nthis:\n  \\<bar>d\\<bar> < p ^ ll\n\ngoal (1 subgoal):\n 1. p dvd c \\<Longrightarrow> u dvdm f", "from eq_m_smult_p_removal[OF eq[unfolded pl]]"], ["proof (chain)\npicking this:\n  poly_mod.Mp (p ^ ll) (u * w) = poly_mod.Mp (p ^ ll) (smult d f)", "have \"poly_mod.eq_m (p^ll) (u * w) (smult d f)\""], ["proof (prove)\nusing this:\n  poly_mod.Mp (p ^ ll) (u * w) = poly_mod.Mp (p ^ ll) (smult d f)\n\ngoal (1 subgoal):\n 1. poly_mod.Mp (p ^ ll) (u * w) = poly_mod.Mp (p ^ ll) (smult d f)", "."], ["proof (state)\nthis:\n  poly_mod.Mp (p ^ ll) (u * w) = poly_mod.Mp (p ^ ll) (smult d f)\n\ngoal (1 subgoal):\n 1. p dvd c \\<Longrightarrow> u dvdm f", "hence dvd: \"poly_mod.dvdm (p^ll) u (smult d f)\""], ["proof (prove)\nusing this:\n  poly_mod.Mp (p ^ ll) (u * w) = poly_mod.Mp (p ^ ll) (smult d f)\n\ngoal (1 subgoal):\n 1. poly_mod.dvdm (p ^ ll) u (smult d f)", "unfolding poly_mod.dvdm_def"], ["proof (prove)\nusing this:\n  poly_mod.Mp (p ^ ll) (u * w) = poly_mod.Mp (p ^ ll) (smult d f)\n\ngoal (1 subgoal):\n 1. \\<exists>h.\n       poly_mod.Mp (p ^ ll) (smult d f) = poly_mod.Mp (p ^ ll) (u * h)", "by metis"], ["proof (state)\nthis:\n  poly_mod.dvdm (p ^ ll) u (smult d f)\n\ngoal (1 subgoal):\n 1. p dvd c \\<Longrightarrow> u dvdm f", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. u dvdm f", "by (rule IH[OF ll d0 d_small dvd])"], ["proof (state)\nthis:\n  u dvdm f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  u dvdm f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  u dvdm f\n\ngoal:\nNo subgoals!", "qed"], ["", "context\n  fixes p :: int\n    and F :: \"int poly\"\n    and N :: nat\n    and l :: nat\n  defines [simp]: \"N \\<equiv> degree F\"\n  assumes p: \"prime p\"\n      and N0: \"N > 0\"\n      and bound_l: \"2 ^ N\\<^sup>2 * B2_LLL F ^ (2 * N) \\<le> (p^l)\\<^sup>2\"\nbegin"], ["", "private"], ["", "lemma F0: \"F\\<noteq>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<noteq> 0", "using N0"], ["proof (prove)\nusing this:\n  0 < N\n\ngoal (1 subgoal):\n 1. F \\<noteq> 0", "by fastforce"], ["", "private"], ["", "lemma p1: \"p > 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < p", "using p prime_gt_1_int"], ["proof (prove)\nusing this:\n  prime p\n  prime ?p \\<Longrightarrow> 1 < ?p\n\ngoal (1 subgoal):\n 1. 1 < p", "by auto"], ["", "interpretation p: poly_mod_prime p"], ["proof (prove)\ngoal (1 subgoal):\n 1. poly_mod_prime p", "using p"], ["proof (prove)\nusing this:\n  prime p\n\ngoal (1 subgoal):\n 1. poly_mod_prime p", "by unfold_locales"], ["", "interpretation pl: poly_mod \"p^l\""], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "lemma B2_2: \"2 \\<le> B2_LLL F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 \\<le> B2_LLL F", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 2 \\<le> B2_LLL F", "from F0"], ["proof (chain)\npicking this:\n  F \\<noteq> 0", "have \"\\<parallel>F\\<parallel>\\<^sup>2 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  F \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<parallel>F\\<parallel>\\<^sup>2 \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  \\<parallel>F\\<parallel>\\<^sup>2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 2 \\<le> B2_LLL F", "hence F1: \"\\<parallel>F\\<parallel>\\<^sup>2 \\<ge> 1\""], ["proof (prove)\nusing this:\n  \\<parallel>F\\<parallel>\\<^sup>2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 1 \\<le> \\<parallel>F\\<parallel>\\<^sup>2", "using sq_norm_poly_pos[of F] F0"], ["proof (prove)\nusing this:\n  \\<parallel>F\\<parallel>\\<^sup>2 \\<noteq> 0\n  (0 < \\<parallel>F\\<parallel>\\<^sup>2) = (F \\<noteq> 0)\n  F \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 1 \\<le> \\<parallel>F\\<parallel>\\<^sup>2", "by linarith"], ["proof (state)\nthis:\n  1 \\<le> \\<parallel>F\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. 2 \\<le> B2_LLL F", "have \"(2 :: int) = 2^1 * 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 = 2 ^ 1 * 1", "by simp"], ["proof (state)\nthis:\n  2 = 2 ^ 1 * 1\n\ngoal (1 subgoal):\n 1. 2 \\<le> B2_LLL F", "also"], ["proof (state)\nthis:\n  2 = 2 ^ 1 * 1\n\ngoal (1 subgoal):\n 1. 2 \\<le> B2_LLL F", "have \"\\<dots> \\<le> B2_LLL F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ 1 * 1 \\<le> B2_LLL F", "unfolding B2_LLL_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ 1 * 1 \\<le> 2 ^ (2 * degree F) * \\<parallel>F\\<parallel>\\<^sup>2", "by (intro mult_mono power_increasing F1, insert N0, auto)"], ["proof (state)\nthis:\n  2 ^ 1 * 1 \\<le> B2_LLL F\n\ngoal (1 subgoal):\n 1. 2 \\<le> B2_LLL F", "finally"], ["proof (chain)\npicking this:\n  2 \\<le> B2_LLL F", "show \"2 \\<le> B2_LLL F\""], ["proof (prove)\nusing this:\n  2 \\<le> B2_LLL F\n\ngoal (1 subgoal):\n 1. 2 \\<le> B2_LLL F", "."], ["proof (state)\nthis:\n  2 \\<le> B2_LLL F\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma l_gt_0: \"l > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < l", "proof (cases l)"], ["proof (state)\ngoal (2 subgoals):\n 1. l = 0 \\<Longrightarrow> 0 < l\n 2. \\<And>nat. l = Suc nat \\<Longrightarrow> 0 < l", "case 0"], ["proof (state)\nthis:\n  l = 0\n\ngoal (2 subgoals):\n 1. l = 0 \\<Longrightarrow> 0 < l\n 2. \\<And>nat. l = Suc nat \\<Longrightarrow> 0 < l", "have \"1 * 2 \\<le> 2 ^ N\\<^sup>2 * B2_LLL F ^ (2 * N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 * 2 \\<le> 2 ^ N\\<^sup>2 * B2_LLL F ^ (2 * N)", "proof (rule mult_mono)"], ["proof (state)\ngoal (4 subgoals):\n 1. 1 \\<le> 2 ^ N\\<^sup>2\n 2. 2 \\<le> B2_LLL F ^ (2 * N)\n 3. 0 \\<le> 2 ^ N\\<^sup>2\n 4. 0 \\<le> 2", "have \"2 * 1 \\<le> (2 :: int) * (2 ^ (2*N - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * 1 \\<le> 2 * 2 ^ (2 * N - 1)", "by (rule mult_left_mono, auto)"], ["proof (state)\nthis:\n  2 * 1 \\<le> 2 * 2 ^ (2 * N - 1)\n\ngoal (4 subgoals):\n 1. 1 \\<le> 2 ^ N\\<^sup>2\n 2. 2 \\<le> B2_LLL F ^ (2 * N)\n 3. 0 \\<le> 2 ^ N\\<^sup>2\n 4. 0 \\<le> 2", "also"], ["proof (state)\nthis:\n  2 * 1 \\<le> 2 * 2 ^ (2 * N - 1)\n\ngoal (4 subgoals):\n 1. 1 \\<le> 2 ^ N\\<^sup>2\n 2. 2 \\<le> B2_LLL F ^ (2 * N)\n 3. 0 \\<le> 2 ^ N\\<^sup>2\n 4. 0 \\<le> 2", "have \"\\<dots> = 2 ^ (2 * N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * 2 ^ (2 * N - 1) = 2 ^ (2 * N)", "using N0"], ["proof (prove)\nusing this:\n  0 < N\n\ngoal (1 subgoal):\n 1. 2 * 2 ^ (2 * N - 1) = 2 ^ (2 * N)", "by (cases N, auto)"], ["proof (state)\nthis:\n  2 * 2 ^ (2 * N - 1) = 2 ^ (2 * N)\n\ngoal (4 subgoals):\n 1. 1 \\<le> 2 ^ N\\<^sup>2\n 2. 2 \\<le> B2_LLL F ^ (2 * N)\n 3. 0 \\<le> 2 ^ N\\<^sup>2\n 4. 0 \\<le> 2", "also"], ["proof (state)\nthis:\n  2 * 2 ^ (2 * N - 1) = 2 ^ (2 * N)\n\ngoal (4 subgoals):\n 1. 1 \\<le> 2 ^ N\\<^sup>2\n 2. 2 \\<le> B2_LLL F ^ (2 * N)\n 3. 0 \\<le> 2 ^ N\\<^sup>2\n 4. 0 \\<le> 2", "have \"\\<dots> \\<le> B2_LLL F ^ (2 * N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (2 * N) \\<le> B2_LLL F ^ (2 * N)", "by (rule power_mono[OF B2_2], force)"], ["proof (state)\nthis:\n  2 ^ (2 * N) \\<le> B2_LLL F ^ (2 * N)\n\ngoal (4 subgoals):\n 1. 1 \\<le> 2 ^ N\\<^sup>2\n 2. 2 \\<le> B2_LLL F ^ (2 * N)\n 3. 0 \\<le> 2 ^ N\\<^sup>2\n 4. 0 \\<le> 2", "finally"], ["proof (chain)\npicking this:\n  2 * 1 \\<le> B2_LLL F ^ (2 * N)", "show \"2 \\<le> B2_LLL F ^ (2 * N)\""], ["proof (prove)\nusing this:\n  2 * 1 \\<le> B2_LLL F ^ (2 * N)\n\ngoal (1 subgoal):\n 1. 2 \\<le> B2_LLL F ^ (2 * N)", "by simp"], ["proof (state)\nthis:\n  2 \\<le> B2_LLL F ^ (2 * N)\n\ngoal (3 subgoals):\n 1. 1 \\<le> 2 ^ N\\<^sup>2\n 2. 0 \\<le> 2 ^ N\\<^sup>2\n 3. 0 \\<le> 2", "qed auto"], ["proof (state)\nthis:\n  1 * 2 \\<le> 2 ^ N\\<^sup>2 * B2_LLL F ^ (2 * N)\n\ngoal (2 subgoals):\n 1. l = 0 \\<Longrightarrow> 0 < l\n 2. \\<And>nat. l = Suc nat \\<Longrightarrow> 0 < l", "also"], ["proof (state)\nthis:\n  1 * 2 \\<le> 2 ^ N\\<^sup>2 * B2_LLL F ^ (2 * N)\n\ngoal (2 subgoals):\n 1. l = 0 \\<Longrightarrow> 0 < l\n 2. \\<And>nat. l = Suc nat \\<Longrightarrow> 0 < l", "have \"\\<dots> \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ N\\<^sup>2 * B2_LLL F ^ (2 * N) \\<le> 1", "using bound_l[unfolded 0]"], ["proof (prove)\nusing this:\n  2 ^ N\\<^sup>2 * B2_LLL F ^ (2 * N) \\<le> (p ^ 0)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 2 ^ N\\<^sup>2 * B2_LLL F ^ (2 * N) \\<le> 1", "by auto"], ["proof (state)\nthis:\n  2 ^ N\\<^sup>2 * B2_LLL F ^ (2 * N) \\<le> 1\n\ngoal (2 subgoals):\n 1. l = 0 \\<Longrightarrow> 0 < l\n 2. \\<And>nat. l = Suc nat \\<Longrightarrow> 0 < l", "finally"], ["proof (chain)\npicking this:\n  1 * 2 \\<le> 1", "show ?thesis"], ["proof (prove)\nusing this:\n  1 * 2 \\<le> 1\n\ngoal (1 subgoal):\n 1. 0 < l", "by auto"], ["proof (state)\nthis:\n  0 < l\n\ngoal (1 subgoal):\n 1. \\<And>nat. l = Suc nat \\<Longrightarrow> 0 < l", "qed auto"], ["", "lemma l0: \"l \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l \\<noteq> 0", "using l_gt_0"], ["proof (prove)\nusing this:\n  0 < l\n\ngoal (1 subgoal):\n 1. l \\<noteq> 0", "by auto"], ["", "lemma pl_not0: \"p ^ l \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p ^ l \\<noteq> 0", "using p1 l0"], ["proof (prove)\nusing this:\n  1 < p\n  l \\<noteq> 0\n\ngoal (1 subgoal):\n 1. p ^ l \\<noteq> 0", "by auto"], ["", "interpretation pl: poly_mod_2 \"p^l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly_mod_2 (p ^ l)", "by (standard, insert p1 l0, auto)"], ["", "private"], ["", "lemmas pl_dvdm_imp_p_dvdm = p.pl_dvdm_imp_p_dvdm[OF l0]"], ["", "lemma p_Mp_pl_Mp[simp]: \"p.Mp (pl.Mp k) = p.Mp k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p.eq_m (pl.Mp k) k", "using Mp_Mp_pow_is_Mp[OF l0 p.m1]"], ["proof (prove)\nusing this:\n  p.eq_m (pl.Mp ?f) ?f\n\ngoal (1 subgoal):\n 1. p.eq_m (pl.Mp k) k", "."], ["", "context\n  fixes u :: \"int poly\"\n    and d and f and n\n    and gs :: \"int poly list\" \n    and Degs :: \"nat set\" \n  defines [simp]: \"d \\<equiv> degree u\"\n  assumes d0: \"d > 0\"\n      and u: \"monic u\"\n      and irred_u: \"p.irreducible_m u\"\n      and u_f: \"p.dvdm u f\"\n      and f_dvd_F: \"f dvd F\"\n      and [simp]: \"n == degree f\"\n      and f_gs: \"pl.unique_factorization_m f (lead_coeff f, mset gs)\" \n      and cop: \"coprime (lead_coeff f) p\" \n      and sf: \"p.square_free_m f\"\n      and sf_F: \"square_free f\" \n      and u_gs: \"u \\<in> set gs\" \n      and norm_gs: \"map pl.Mp gs = gs\" \n      and Degs: \"\\<And> factor. factor dvd f \\<Longrightarrow> p.dvdm u factor \\<Longrightarrow> degree factor \\<in> Degs\" \nbegin"], ["", "interpretation pl: poly_mod_2 \"p^l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly_mod_2 (p ^ l)", "using l0 p1"], ["proof (prove)\nusing this:\n  l \\<noteq> 0\n  1 < p\n\ngoal (1 subgoal):\n 1. poly_mod_2 (p ^ l)", "by (unfold_locales, auto)"], ["", "private"], ["", "lemma f0: \"f \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<noteq> 0", "using sf_F"], ["proof (prove)\nusing this:\n  square_free f\n\ngoal (1 subgoal):\n 1. f \\<noteq> 0", "unfolding square_free_def"], ["proof (prove)\nusing this:\n  f \\<noteq> 0 \\<and>\n  (\\<forall>q. 0 < degree q \\<longrightarrow> \\<not> q * q dvd f)\n\ngoal (1 subgoal):\n 1. f \\<noteq> 0", "by fastforce"], ["", "private"], ["", "lemma Mpf0: \"pl.Mp f \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pl.Mp f \\<noteq> 0", "by (metis p.square_free_m_def p_Mp_pl_Mp sf)"], ["", "private"], ["", "lemma pMpf0: \"p.Mp f \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p.Mp f \\<noteq> 0", "using p.square_free_m_def sf"], ["proof (prove)\nusing this:\n  p.square_free_m ?f =\n  (p.Mp ?f \\<noteq> p.Mp 0 \\<and>\n   (\\<forall>g.\n       p.degree_m g \\<noteq> 0 \\<longrightarrow> \\<not> p.dvdm (g * g) ?f))\n  p.square_free_m f\n\ngoal (1 subgoal):\n 1. p.Mp f \\<noteq> 0", "by auto"], ["", "private"], ["", "lemma dn: \"d \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d \\<le> n", "using p.dvdm_imp_degree_le[OF u_f u pMpf0 p1]"], ["proof (prove)\nusing this:\n  degree u \\<le> degree f\n\ngoal (1 subgoal):\n 1. d \\<le> n", "by auto"], ["", "private"], ["", "lemma n0: \"n > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n", "using d0 dn"], ["proof (prove)\nusing this:\n  0 < d\n  d \\<le> n\n\ngoal (1 subgoal):\n 1. 0 < n", "by auto"], ["", "private"], ["", "lemma B2_0[intro!]: \"B2_LLL F > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < B2_LLL F", "using B2_2"], ["proof (prove)\nusing this:\n  2 \\<le> B2_LLL F\n\ngoal (1 subgoal):\n 1. 0 < B2_LLL F", "by auto"], ["", "private"], ["", "lemma deg_u: \"degree u > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < degree u", "using d0 d_def"], ["proof (prove)\nusing this:\n  0 < d\n  d \\<equiv> degree u\n\ngoal (1 subgoal):\n 1. 0 < degree u", "by auto"], ["", "private"], ["", "lemma n_le_N: \"n\\<le>N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> N", "by (simp add: dvd_imp_degree_le[OF f_dvd_F F0])"], ["", "lemma dvdm_power: assumes \"g dvd f\" \n  shows \"p.dvdm u g \\<longleftrightarrow> pl.dvdm u g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p.dvdm u g = pl.dvdm u g", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. p.dvdm u g \\<Longrightarrow> pl.dvdm u g\n 2. pl.dvdm u g \\<Longrightarrow> p.dvdm u g", "assume \"pl.dvdm u g\""], ["proof (state)\nthis:\n  pl.dvdm u g\n\ngoal (2 subgoals):\n 1. p.dvdm u g \\<Longrightarrow> pl.dvdm u g\n 2. pl.dvdm u g \\<Longrightarrow> p.dvdm u g", "thus \"p.dvdm u g\""], ["proof (prove)\nusing this:\n  pl.dvdm u g\n\ngoal (1 subgoal):\n 1. p.dvdm u g", "by (rule pl_dvdm_imp_p_dvdm)"], ["proof (state)\nthis:\n  p.dvdm u g\n\ngoal (1 subgoal):\n 1. p.dvdm u g \\<Longrightarrow> pl.dvdm u g", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p.dvdm u g \\<Longrightarrow> pl.dvdm u g", "assume dvd: \"p.dvdm u g\""], ["proof (state)\nthis:\n  p.dvdm u g\n\ngoal (1 subgoal):\n 1. p.dvdm u g \\<Longrightarrow> pl.dvdm u g", "from norm_gs"], ["proof (chain)\npicking this:\n  map pl.Mp gs = gs", "have norm_gsp: \"\\<And> f. f \\<in> set gs \\<Longrightarrow> pl.Mp f = f\""], ["proof (prove)\nusing this:\n  map pl.Mp gs = gs\n\ngoal (1 subgoal):\n 1. \\<And>f. f \\<in> set gs \\<Longrightarrow> pl.Mp f = f", "by (induct gs, auto)"], ["proof (state)\nthis:\n  ?f1 \\<in> set gs \\<Longrightarrow> pl.Mp ?f1 = ?f1\n\ngoal (1 subgoal):\n 1. p.dvdm u g \\<Longrightarrow> pl.dvdm u g", "with f_gs[unfolded pl.unique_factorization_m_alt_def pl.factorization_m_def split]"], ["proof (chain)\npicking this:\n  (pl.eq_m f (smult (lead_coeff f) (\\<Prod>\\<^sub># (mset gs))) \\<and>\n   (\\<forall>f\\<in>#mset gs.\n       pl.irreducible\\<^sub>d_m f \\<and> monic (pl.Mp f))) \\<and>\n  (\\<forall>dgs.\n      (case dgs of\n       (c, fs) \\<Rightarrow>\n         pl.eq_m f (smult c (\\<Prod>\\<^sub># fs)) \\<and>\n         (\\<forall>f\\<in>#fs.\n             pl.irreducible\\<^sub>d_m f \\<and>\n             monic (pl.Mp f))) \\<longrightarrow>\n      pl.Mf dgs = pl.Mf (lead_coeff f, mset gs))\n  ?f1 \\<in> set gs \\<Longrightarrow> pl.Mp ?f1 = ?f1", "have gs_irred_mon: \"\\<And> f. f \\<in># mset gs \\<Longrightarrow> pl.irreducible\\<^sub>d_m f \\<and> monic f\""], ["proof (prove)\nusing this:\n  (pl.eq_m f (smult (lead_coeff f) (\\<Prod>\\<^sub># (mset gs))) \\<and>\n   (\\<forall>f\\<in>#mset gs.\n       pl.irreducible\\<^sub>d_m f \\<and> monic (pl.Mp f))) \\<and>\n  (\\<forall>dgs.\n      (case dgs of\n       (c, fs) \\<Rightarrow>\n         pl.eq_m f (smult c (\\<Prod>\\<^sub># fs)) \\<and>\n         (\\<forall>f\\<in>#fs.\n             pl.irreducible\\<^sub>d_m f \\<and>\n             monic (pl.Mp f))) \\<longrightarrow>\n      pl.Mf dgs = pl.Mf (lead_coeff f, mset gs))\n  ?f1 \\<in> set gs \\<Longrightarrow> pl.Mp ?f1 = ?f1\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in># mset gs \\<Longrightarrow>\n       pl.irreducible\\<^sub>d_m f \\<and> monic f", "by auto"], ["proof (state)\nthis:\n  ?f1 \\<in># mset gs \\<Longrightarrow>\n  pl.irreducible\\<^sub>d_m ?f1 \\<and> monic ?f1\n\ngoal (1 subgoal):\n 1. p.dvdm u g \\<Longrightarrow> pl.dvdm u g", "from norm_gs"], ["proof (chain)\npicking this:\n  map pl.Mp gs = gs", "have norm_gs: \"image_mset pl.Mp (mset gs) = mset gs\""], ["proof (prove)\nusing this:\n  map pl.Mp gs = gs\n\ngoal (1 subgoal):\n 1. image_mset pl.Mp (mset gs) = mset gs", "by (induct gs, auto)"], ["proof (state)\nthis:\n  image_mset pl.Mp (mset gs) = mset gs\n\ngoal (1 subgoal):\n 1. p.dvdm u g \\<Longrightarrow> pl.dvdm u g", "from assms"], ["proof (chain)\npicking this:\n  g dvd f", "obtain h where f: \"f = g * h\""], ["proof (prove)\nusing this:\n  g dvd f\n\ngoal (1 subgoal):\n 1. (\\<And>h. f = g * h \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  \\<exists>k. f = g * k\n\ngoal (1 subgoal):\n 1. (\\<And>h. f = g * h \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  f = g * h\n\ngoal (1 subgoal):\n 1. p.dvdm u g \\<Longrightarrow> pl.dvdm u g", "from pl.unique_factorization_m_factor[OF p.prime f_gs[unfolded f] _ _ l0 refl, folded f, \n      OF cop sf, unfolded pl.Mf_def split] norm_gs"], ["proof (chain)\npicking this:\n  \\<exists>fs gsa.\n     pl.unique_factorization_m g (lead_coeff g, fs) \\<and>\n     pl.unique_factorization_m h (lead_coeff h, gsa) \\<and>\n     (pl.M (lead_coeff f), image_mset pl.Mp (mset gs)) =\n     (pl.M (lead_coeff g * lead_coeff h),\n      image_mset pl.Mp (fs + gsa)) \\<and>\n     image_mset pl.Mp fs = fs \\<and> image_mset pl.Mp gsa = gsa\n  image_mset pl.Mp (mset gs) = mset gs", "obtain hs fs where uf: \"pl.unique_factorization_m h (lead_coeff h, hs)\" \n      \"pl.unique_factorization_m g (lead_coeff g, fs)\" \n     and id: \"mset gs = fs + hs\" \n     and norm: \"image_mset pl.Mp fs = fs\" \"image_mset pl.Mp hs = hs\""], ["proof (prove)\nusing this:\n  \\<exists>fs gsa.\n     pl.unique_factorization_m g (lead_coeff g, fs) \\<and>\n     pl.unique_factorization_m h (lead_coeff h, gsa) \\<and>\n     (pl.M (lead_coeff f), image_mset pl.Mp (mset gs)) =\n     (pl.M (lead_coeff g * lead_coeff h),\n      image_mset pl.Mp (fs + gsa)) \\<and>\n     image_mset pl.Mp fs = fs \\<and> image_mset pl.Mp gsa = gsa\n  image_mset pl.Mp (mset gs) = mset gs\n\ngoal (1 subgoal):\n 1. (\\<And>hs fs.\n        \\<lbrakk>pl.unique_factorization_m h (lead_coeff h, hs);\n         pl.unique_factorization_m g (lead_coeff g, fs); mset gs = fs + hs;\n         image_mset pl.Mp fs = fs; image_mset pl.Mp hs = hs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  pl.unique_factorization_m h (lead_coeff h, hs)\n  pl.unique_factorization_m g (lead_coeff g, fs)\n  mset gs = fs + hs\n  image_mset pl.Mp fs = fs\n  image_mset pl.Mp hs = hs\n\ngoal (1 subgoal):\n 1. p.dvdm u g \\<Longrightarrow> pl.dvdm u g", "from p.square_free_m_prod_imp_coprime_m[OF sf[unfolded f]]"], ["proof (chain)\npicking this:\n  p.coprime_m g h", "have cop_h_f: \"p.coprime_m g h\""], ["proof (prove)\nusing this:\n  p.coprime_m g h\n\ngoal (1 subgoal):\n 1. p.coprime_m g h", "by auto"], ["proof (state)\nthis:\n  p.coprime_m g h\n\ngoal (1 subgoal):\n 1. p.dvdm u g \\<Longrightarrow> pl.dvdm u g", "show \"pl.dvdm u g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pl.dvdm u g", "proof (cases \"u \\<in># fs\")"], ["proof (state)\ngoal (2 subgoals):\n 1. u \\<in># fs \\<Longrightarrow> pl.dvdm u g\n 2. u \\<notin># fs \\<Longrightarrow> pl.dvdm u g", "case True"], ["proof (state)\nthis:\n  u \\<in># fs\n\ngoal (2 subgoals):\n 1. u \\<in># fs \\<Longrightarrow> pl.dvdm u g\n 2. u \\<notin># fs \\<Longrightarrow> pl.dvdm u g", "hence \"pl.Mp u \\<in># image_mset pl.Mp fs\""], ["proof (prove)\nusing this:\n  u \\<in># fs\n\ngoal (1 subgoal):\n 1. pl.Mp u \\<in># image_mset pl.Mp fs", "by auto"], ["proof (state)\nthis:\n  pl.Mp u \\<in># image_mset pl.Mp fs\n\ngoal (2 subgoals):\n 1. u \\<in># fs \\<Longrightarrow> pl.dvdm u g\n 2. u \\<notin># fs \\<Longrightarrow> pl.dvdm u g", "from pl.factorization_m_mem_dvdm[OF pl.unique_factorization_m_imp_factorization[OF uf(2)] this]"], ["proof (chain)\npicking this:\n  pl.dvdm u g", "show ?thesis"], ["proof (prove)\nusing this:\n  pl.dvdm u g\n\ngoal (1 subgoal):\n 1. pl.dvdm u g", "."], ["proof (state)\nthis:\n  pl.dvdm u g\n\ngoal (1 subgoal):\n 1. u \\<notin># fs \\<Longrightarrow> pl.dvdm u g", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. u \\<notin># fs \\<Longrightarrow> pl.dvdm u g", "case False"], ["proof (state)\nthis:\n  u \\<notin># fs\n\ngoal (1 subgoal):\n 1. u \\<notin># fs \\<Longrightarrow> pl.dvdm u g", "from u_gs"], ["proof (chain)\npicking this:\n  u \\<in> set gs", "have \"u \\<in># mset gs\""], ["proof (prove)\nusing this:\n  u \\<in> set gs\n\ngoal (1 subgoal):\n 1. u \\<in># mset gs", "by auto"], ["proof (state)\nthis:\n  u \\<in># mset gs\n\ngoal (1 subgoal):\n 1. u \\<notin># fs \\<Longrightarrow> pl.dvdm u g", "from this[unfolded id] False"], ["proof (chain)\npicking this:\n  u \\<in># fs + hs\n  u \\<notin># fs", "have \"u \\<in># hs\""], ["proof (prove)\nusing this:\n  u \\<in># fs + hs\n  u \\<notin># fs\n\ngoal (1 subgoal):\n 1. u \\<in># hs", "by auto"], ["proof (state)\nthis:\n  u \\<in># hs\n\ngoal (1 subgoal):\n 1. u \\<notin># fs \\<Longrightarrow> pl.dvdm u g", "hence \"pl.Mp u \\<in># image_mset pl.Mp hs\""], ["proof (prove)\nusing this:\n  u \\<in># hs\n\ngoal (1 subgoal):\n 1. pl.Mp u \\<in># image_mset pl.Mp hs", "by auto"], ["proof (state)\nthis:\n  pl.Mp u \\<in># image_mset pl.Mp hs\n\ngoal (1 subgoal):\n 1. u \\<notin># fs \\<Longrightarrow> pl.dvdm u g", "from pl.factorization_m_mem_dvdm[OF pl.unique_factorization_m_imp_factorization[OF uf(1)] this]"], ["proof (chain)\npicking this:\n  pl.dvdm u h", "have \"pl.dvdm u h\""], ["proof (prove)\nusing this:\n  pl.dvdm u h\n\ngoal (1 subgoal):\n 1. pl.dvdm u h", "by auto"], ["proof (state)\nthis:\n  pl.dvdm u h\n\ngoal (1 subgoal):\n 1. u \\<notin># fs \\<Longrightarrow> pl.dvdm u g", "from pl_dvdm_imp_p_dvdm[OF this]"], ["proof (chain)\npicking this:\n  p.dvdm u h", "have \"p.dvdm u h\""], ["proof (prove)\nusing this:\n  p.dvdm u h\n\ngoal (1 subgoal):\n 1. p.dvdm u h", "by auto"], ["proof (state)\nthis:\n  p.dvdm u h\n\ngoal (1 subgoal):\n 1. u \\<notin># fs \\<Longrightarrow> pl.dvdm u g", "from cop_h_f[unfolded p.coprime_m_def, rule_format, OF dvd this]"], ["proof (chain)\npicking this:\n  p.dvdm u 1", "have \"p.dvdm u 1\""], ["proof (prove)\nusing this:\n  p.dvdm u 1\n\ngoal (1 subgoal):\n 1. p.dvdm u 1", "."], ["proof (state)\nthis:\n  p.dvdm u 1\n\ngoal (1 subgoal):\n 1. u \\<notin># fs \\<Longrightarrow> pl.dvdm u g", "from p.dvdm_imp_degree_le[OF this u _ p.m1]"], ["proof (chain)\npicking this:\n  p.Mp 1 \\<noteq> 0 \\<Longrightarrow> degree u \\<le> degree 1", "have \"degree u = 0\""], ["proof (prove)\nusing this:\n  p.Mp 1 \\<noteq> 0 \\<Longrightarrow> degree u \\<le> degree 1\n\ngoal (1 subgoal):\n 1. degree u = 0", "by auto"], ["proof (state)\nthis:\n  degree u = 0\n\ngoal (1 subgoal):\n 1. u \\<notin># fs \\<Longrightarrow> pl.dvdm u g", "with deg_u"], ["proof (chain)\npicking this:\n  0 < degree u\n  degree u = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < degree u\n  degree u = 0\n\ngoal (1 subgoal):\n 1. pl.dvdm u g", "by auto"], ["proof (state)\nthis:\n  pl.dvdm u g\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pl.dvdm u g\n\ngoal:\nNo subgoals!", "qed"], ["", "private"], ["", "lemma uf: \"pl.dvdm u f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pl.dvdm u f", "using dvdm_power[OF dvd_refl] u_f"], ["proof (prove)\nusing this:\n  p.dvdm u f = pl.dvdm u f\n  p.dvdm u f\n\ngoal (1 subgoal):\n 1. pl.dvdm u f", "by simp"], ["", "lemma exists_reconstruction: \"\\<exists>h0. irreducible\\<^sub>d h0 \\<and> p.dvdm u h0 \\<and> h0 dvd f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>h0. irreducible\\<^sub>d h0 \\<and> p.dvdm u h0 \\<and> h0 dvd f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>h0. irreducible\\<^sub>d h0 \\<and> p.dvdm u h0 \\<and> h0 dvd f", "have deg_f: \"degree f > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < degree f", "using \\<open>n \\<equiv> degree f\\<close> n0"], ["proof (prove)\nusing this:\n  n \\<equiv> degree f\n  0 < n\n\ngoal (1 subgoal):\n 1. 0 < degree f", "by blast"], ["proof (state)\nthis:\n  0 < degree f\n\ngoal (1 subgoal):\n 1. \\<exists>h0. irreducible\\<^sub>d h0 \\<and> p.dvdm u h0 \\<and> h0 dvd f", "from berlekamp_zassenhaus_factorization_irreducible\\<^sub>d[OF refl sf_F deg_f]"], ["proof (chain)\npicking this:\n  f = prod_list (berlekamp_zassenhaus_factorization f) \\<and>\n  (\\<forall>fi\\<in>set (berlekamp_zassenhaus_factorization f).\n      irreducible\\<^sub>d fi)", "obtain fs where f_fs: \"f = prod_list fs\"\n    and c: \"(\\<forall>fi\\<in>set fs. irreducible\\<^sub>d fi \\<and> 0 < degree fi )\""], ["proof (prove)\nusing this:\n  f = prod_list (berlekamp_zassenhaus_factorization f) \\<and>\n  (\\<forall>fi\\<in>set (berlekamp_zassenhaus_factorization f).\n      irreducible\\<^sub>d fi)\n\ngoal (1 subgoal):\n 1. (\\<And>fs.\n        \\<lbrakk>f = prod_list fs;\n         \\<forall>fi\\<in>set fs.\n            irreducible\\<^sub>d fi \\<and> 0 < degree fi\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  f = prod_list fs\n  \\<forall>fi\\<in>set fs. irreducible\\<^sub>d fi \\<and> 0 < degree fi\n\ngoal (1 subgoal):\n 1. \\<exists>h0. irreducible\\<^sub>d h0 \\<and> p.dvdm u h0 \\<and> h0 dvd f", "have \"pl.dvdm u (prod_list fs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pl.dvdm u (prod_list fs)", "using uf f_fs"], ["proof (prove)\nusing this:\n  pl.dvdm u f\n  f = prod_list fs\n\ngoal (1 subgoal):\n 1. pl.dvdm u (prod_list fs)", "by simp"], ["proof (state)\nthis:\n  pl.dvdm u (prod_list fs)\n\ngoal (1 subgoal):\n 1. \\<exists>h0. irreducible\\<^sub>d h0 \\<and> p.dvdm u h0 \\<and> h0 dvd f", "hence \"p.dvdm u (prod_list fs)\""], ["proof (prove)\nusing this:\n  pl.dvdm u (prod_list fs)\n\ngoal (1 subgoal):\n 1. p.dvdm u (prod_list fs)", "by (rule pl_dvdm_imp_p_dvdm)"], ["proof (state)\nthis:\n  p.dvdm u (prod_list fs)\n\ngoal (1 subgoal):\n 1. \\<exists>h0. irreducible\\<^sub>d h0 \\<and> p.dvdm u h0 \\<and> h0 dvd f", "from this"], ["proof (chain)\npicking this:\n  p.dvdm u (prod_list fs)", "obtain h0 where h0: \"h0 \\<in> set fs\" and dvdm_u_h0: \"p.dvdm u h0\""], ["proof (prove)\nusing this:\n  p.dvdm u (prod_list fs)\n\ngoal (1 subgoal):\n 1. (\\<And>h0.\n        \\<lbrakk>h0 \\<in> set fs; p.dvdm u h0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using p.irreducible_m_dvdm_prod_list[OF irred_u]"], ["proof (prove)\nusing this:\n  p.dvdm u (prod_list fs)\n  p.dvdm u (prod_list ?xs) \\<Longrightarrow>\n  \\<exists>b\\<in>set ?xs. p.dvdm u b\n\ngoal (1 subgoal):\n 1. (\\<And>h0.\n        \\<lbrakk>h0 \\<in> set fs; p.dvdm u h0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  h0 \\<in> set fs\n  p.dvdm u h0\n\ngoal (1 subgoal):\n 1. \\<exists>h0. irreducible\\<^sub>d h0 \\<and> p.dvdm u h0 \\<and> h0 dvd f", "moreover"], ["proof (state)\nthis:\n  h0 \\<in> set fs\n  p.dvdm u h0\n\ngoal (1 subgoal):\n 1. \\<exists>h0. irreducible\\<^sub>d h0 \\<and> p.dvdm u h0 \\<and> h0 dvd f", "have \"h0 dvd f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h0 dvd f", "by (unfold f_fs, rule prod_list_dvd[OF h0])"], ["proof (state)\nthis:\n  h0 dvd f\n\ngoal (1 subgoal):\n 1. \\<exists>h0. irreducible\\<^sub>d h0 \\<and> p.dvdm u h0 \\<and> h0 dvd f", "moreover"], ["proof (state)\nthis:\n  h0 dvd f\n\ngoal (1 subgoal):\n 1. \\<exists>h0. irreducible\\<^sub>d h0 \\<and> p.dvdm u h0 \\<and> h0 dvd f", "have \"irreducible\\<^sub>d h0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. irreducible\\<^sub>d h0", "using c h0"], ["proof (prove)\nusing this:\n  \\<forall>fi\\<in>set fs. irreducible\\<^sub>d fi \\<and> 0 < degree fi\n  h0 \\<in> set fs\n\ngoal (1 subgoal):\n 1. irreducible\\<^sub>d h0", "by auto"], ["proof (state)\nthis:\n  irreducible\\<^sub>d h0\n\ngoal (1 subgoal):\n 1. \\<exists>h0. irreducible\\<^sub>d h0 \\<and> p.dvdm u h0 \\<and> h0 dvd f", "ultimately"], ["proof (chain)\npicking this:\n  h0 \\<in> set fs\n  p.dvdm u h0\n  h0 dvd f\n  irreducible\\<^sub>d h0", "show ?thesis"], ["proof (prove)\nusing this:\n  h0 \\<in> set fs\n  p.dvdm u h0\n  h0 dvd f\n  irreducible\\<^sub>d h0\n\ngoal (1 subgoal):\n 1. \\<exists>h0. irreducible\\<^sub>d h0 \\<and> p.dvdm u h0 \\<and> h0 dvd f", "by blast"], ["proof (state)\nthis:\n  \\<exists>h0. irreducible\\<^sub>d h0 \\<and> p.dvdm u h0 \\<and> h0 dvd f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma factor_dvd_f_0: assumes \"factor dvd f\" \n  shows \"pl.Mp factor \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pl.Mp factor \\<noteq> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pl.Mp factor \\<noteq> 0", "from assms"], ["proof (chain)\npicking this:\n  factor dvd f", "obtain h where f: \"f = factor * h\""], ["proof (prove)\nusing this:\n  factor dvd f\n\ngoal (1 subgoal):\n 1. (\\<And>h. f = factor * h \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  \\<exists>k. f = factor * k\n\ngoal (1 subgoal):\n 1. (\\<And>h. f = factor * h \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  f = factor * h\n\ngoal (1 subgoal):\n 1. pl.Mp factor \\<noteq> 0", "from arg_cong[OF this, of pl.Mp]"], ["proof (chain)\npicking this:\n  pl.eq_m f (factor * h)", "have \"0 \\<noteq> pl.Mp (pl.Mp factor * h)\""], ["proof (prove)\nusing this:\n  pl.eq_m f (factor * h)\n\ngoal (1 subgoal):\n 1. 0 \\<noteq> pl.Mp (pl.Mp factor * h)", "using Mpf0"], ["proof (prove)\nusing this:\n  pl.eq_m f (factor * h)\n  pl.Mp f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 \\<noteq> pl.Mp (pl.Mp factor * h)", "by auto"], ["proof (state)\nthis:\n  0 \\<noteq> pl.Mp (pl.Mp factor * h)\n\ngoal (1 subgoal):\n 1. pl.Mp factor \\<noteq> 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  0 \\<noteq> pl.Mp (pl.Mp factor * h)\n\ngoal (1 subgoal):\n 1. pl.Mp factor \\<noteq> 0", "by fastforce"], ["proof (state)\nthis:\n  pl.Mp factor \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma degree_factor_ge_degree_u:\n  assumes u_dvdm_factor: \"p.dvdm u factor\" \n    and factor_dvd: \"factor dvd f\" shows \"degree u \\<le> degree factor\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree u \\<le> degree factor", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. degree u \\<le> degree factor", "from factor_dvd_f_0[OF factor_dvd]"], ["proof (chain)\npicking this:\n  pl.Mp factor \\<noteq> 0", "have factor0: \"pl.Mp factor \\<noteq> 0\""], ["proof (prove)\nusing this:\n  pl.Mp factor \\<noteq> 0\n\ngoal (1 subgoal):\n 1. pl.Mp factor \\<noteq> 0", "."], ["proof (state)\nthis:\n  pl.Mp factor \\<noteq> 0\n\ngoal (1 subgoal):\n 1. degree u \\<le> degree factor", "from u_dvdm_factor[unfolded dvdm_power[OF factor_dvd] pl.dvdm_def]"], ["proof (chain)\npicking this:\n  \\<exists>h. pl.eq_m factor (u * h)", "obtain v where\n    *: \"pl.Mp factor = pl.Mp (u * pl.Mp v)\""], ["proof (prove)\nusing this:\n  \\<exists>h. pl.eq_m factor (u * h)\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        pl.eq_m factor (u * pl.Mp v) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  pl.eq_m factor (u * pl.Mp v)\n\ngoal (1 subgoal):\n 1. degree u \\<le> degree factor", "with factor0"], ["proof (chain)\npicking this:\n  pl.Mp factor \\<noteq> 0\n  pl.eq_m factor (u * pl.Mp v)", "have v0: \"pl.Mp v \\<noteq> 0\""], ["proof (prove)\nusing this:\n  pl.Mp factor \\<noteq> 0\n  pl.eq_m factor (u * pl.Mp v)\n\ngoal (1 subgoal):\n 1. pl.Mp v \\<noteq> 0", "by fastforce"], ["proof (state)\nthis:\n  pl.Mp v \\<noteq> 0\n\ngoal (1 subgoal):\n 1. degree u \\<le> degree factor", "hence \"0 \\<noteq> lead_coeff (pl.Mp v)\""], ["proof (prove)\nusing this:\n  pl.Mp v \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 \\<noteq> lead_coeff (pl.Mp v)", "by auto"], ["proof (state)\nthis:\n  0 \\<noteq> lead_coeff (pl.Mp v)\n\ngoal (1 subgoal):\n 1. degree u \\<le> degree factor", "also"], ["proof (state)\nthis:\n  0 \\<noteq> lead_coeff (pl.Mp v)\n\ngoal (1 subgoal):\n 1. degree u \\<le> degree factor", "have \"lead_coeff (pl.Mp v) = pl.M (lead_coeff (pl.Mp v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lead_coeff (pl.Mp v) = pl.M (lead_coeff (pl.Mp v))", "by (auto simp: pl.Mp_def coeff_map_poly)"], ["proof (state)\nthis:\n  lead_coeff (pl.Mp v) = pl.M (lead_coeff (pl.Mp v))\n\ngoal (1 subgoal):\n 1. degree u \\<le> degree factor", "finally"], ["proof (chain)\npicking this:\n  0 \\<noteq> pl.M (lead_coeff (pl.Mp v))", "have **: \"lead_coeff (pl.Mp v) \\<noteq> p ^ l * r\" for r"], ["proof (prove)\nusing this:\n  0 \\<noteq> pl.M (lead_coeff (pl.Mp v))\n\ngoal (1 subgoal):\n 1. lead_coeff (pl.Mp v) \\<noteq> p ^ l * r", "by (auto simp: pl.M_def)"], ["proof (state)\nthis:\n  lead_coeff (pl.Mp v) \\<noteq> p ^ l * ?r1\n\ngoal (1 subgoal):\n 1. degree u \\<le> degree factor", "from *"], ["proof (chain)\npicking this:\n  pl.eq_m factor (u * pl.Mp v)", "have \"degree factor \\<ge> pl.degree_m (u * pl.Mp v)\""], ["proof (prove)\nusing this:\n  pl.eq_m factor (u * pl.Mp v)\n\ngoal (1 subgoal):\n 1. pl.degree_m (u * pl.Mp v) \\<le> degree factor", "using pl.degree_m_le[of factor]"], ["proof (prove)\nusing this:\n  pl.eq_m factor (u * pl.Mp v)\n  pl.degree_m factor \\<le> degree factor\n\ngoal (1 subgoal):\n 1. pl.degree_m (u * pl.Mp v) \\<le> degree factor", "by auto"], ["proof (state)\nthis:\n  pl.degree_m (u * pl.Mp v) \\<le> degree factor\n\ngoal (1 subgoal):\n 1. degree u \\<le> degree factor", "also"], ["proof (state)\nthis:\n  pl.degree_m (u * pl.Mp v) \\<le> degree factor\n\ngoal (1 subgoal):\n 1. degree u \\<le> degree factor", "have \"pl.degree_m (u * pl.Mp v) = degree (u * pl.Mp v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pl.degree_m (u * pl.Mp v) = degree (u * pl.Mp v)", "by (rule pl.degree_m_eq, unfold lead_coeff_mult, insert u pl.m1 **, auto)"], ["proof (state)\nthis:\n  pl.degree_m (u * pl.Mp v) = degree (u * pl.Mp v)\n\ngoal (1 subgoal):\n 1. degree u \\<le> degree factor", "also"], ["proof (state)\nthis:\n  pl.degree_m (u * pl.Mp v) = degree (u * pl.Mp v)\n\ngoal (1 subgoal):\n 1. degree u \\<le> degree factor", "have \"\\<dots> = degree u + degree (pl.Mp v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree (u * pl.Mp v) = degree u + pl.degree_m v", "by (rule degree_mult_eq, insert v0 u, auto)"], ["proof (state)\nthis:\n  degree (u * pl.Mp v) = degree u + pl.degree_m v\n\ngoal (1 subgoal):\n 1. degree u \\<le> degree factor", "finally"], ["proof (chain)\npicking this:\n  degree u + pl.degree_m v \\<le> degree factor", "show ?thesis"], ["proof (prove)\nusing this:\n  degree u + pl.degree_m v \\<le> degree factor\n\ngoal (1 subgoal):\n 1. degree u \\<le> degree factor", "by auto"], ["proof (state)\nthis:\n  degree u \\<le> degree factor\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Inner loop\\<close>"], ["", "context\n  fixes j' :: nat\n  assumes dj': \"d \\<le> j'\"\n      and j'n: \"j' < n\"\n      and deg: \"\\<And>factor. p.dvdm u factor \\<Longrightarrow> factor dvd f \\<Longrightarrow> degree factor \\<ge> j'\"\nbegin"], ["", "private"], ["", "abbreviation (input) \"j \\<equiv> Suc j'\""], ["", "private"], ["", "lemma jn: \"j \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc j' \\<le> n", "using j'n"], ["proof (prove)\nusing this:\n  j' < n\n\ngoal (1 subgoal):\n 1. Suc j' \\<le> n", "by auto"], ["", "private"], ["", "lemma factor_irreducible\\<^sub>dI: assumes hf: \"h dvd f\" \n  and puh: \"p.dvdm u h\" \n  and degh: \"degree h > 0\" \n  and degh_j: \"degree h \\<le> j'\"\nshows \"irreducible\\<^sub>d h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. irreducible\\<^sub>d h", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. irreducible\\<^sub>d h", "from dvdm_power[OF hf] puh"], ["proof (chain)\npicking this:\n  p.dvdm u h = pl.dvdm u h\n  p.dvdm u h", "have pluh: \"pl.dvdm u h\""], ["proof (prove)\nusing this:\n  p.dvdm u h = pl.dvdm u h\n  p.dvdm u h\n\ngoal (1 subgoal):\n 1. pl.dvdm u h", "by simp"], ["proof (state)\nthis:\n  pl.dvdm u h\n\ngoal (1 subgoal):\n 1. irreducible\\<^sub>d h", "note uf_partition = p.unique_factorization_m_factor_partition[OF l0]"], ["proof (state)\nthis:\n  \\<lbrakk>pl.unique_factorization_m ?f (lead_coeff ?f, mset ?gs);\n   ?f = ?f1.0 * ?f2.0; comm_monoid_mult_class.coprime (lead_coeff ?f) p;\n   p.square_free_m ?f;\n   List.partition (\\<lambda>gi. p.dvdm gi ?f1.0) ?gs =\n   (?gs1.0, ?gs2.0)\\<rbrakk>\n  \\<Longrightarrow> pl.unique_factorization_m ?f1.0\n                     (lead_coeff ?f1.0, mset ?gs1.0)\n  \\<lbrakk>pl.unique_factorization_m ?f (lead_coeff ?f, mset ?gs);\n   ?f = ?f1.0 * ?f2.0; comm_monoid_mult_class.coprime (lead_coeff ?f) p;\n   p.square_free_m ?f;\n   List.partition (\\<lambda>gi. p.dvdm gi ?f1.0) ?gs =\n   (?gs1.0, ?gs2.0)\\<rbrakk>\n  \\<Longrightarrow> pl.unique_factorization_m ?f2.0\n                     (lead_coeff ?f2.0, mset ?gs2.0)\n\ngoal (1 subgoal):\n 1. irreducible\\<^sub>d h", "obtain gs1 gs2 where part: \"List.partition (\\<lambda>gi. p.dvdm gi h) gs = (gs1, gs2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>gs1 gs2.\n        List.partition (\\<lambda>gi. p.dvdm gi h) gs =\n        (gs1, gs2) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  List.partition (\\<lambda>gi. p.dvdm gi h) gs = (gs1, gs2)\n\ngoal (1 subgoal):\n 1. irreducible\\<^sub>d h", "from part u_gs puh"], ["proof (chain)\npicking this:\n  List.partition (\\<lambda>gi. p.dvdm gi h) gs = (gs1, gs2)\n  u \\<in> set gs\n  p.dvdm u h", "have u_gs1: \"u \\<in> set gs1\""], ["proof (prove)\nusing this:\n  List.partition (\\<lambda>gi. p.dvdm gi h) gs = (gs1, gs2)\n  u \\<in> set gs\n  p.dvdm u h\n\ngoal (1 subgoal):\n 1. u \\<in> set gs1", "unfolding p"], ["proof (prove)\nusing this:\n  List.partition (\\<lambda>gi. p.dvdm gi h) gs = (gs1, gs2)\n  u \\<in> set gs\n  p.dvdm u h\n\ngoal (1 subgoal):\n 1. u \\<in> set gs1", "by auto"], ["proof (state)\nthis:\n  u \\<in> set gs1\n\ngoal (1 subgoal):\n 1. irreducible\\<^sub>d h", "have gs1: \"gs1 = filter (\\<lambda> gi. p.dvdm gi h) gs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gs1 = filter (\\<lambda>gi. p.dvdm gi h) gs", "using part"], ["proof (prove)\nusing this:\n  List.partition (\\<lambda>gi. p.dvdm gi h) gs = (gs1, gs2)\n\ngoal (1 subgoal):\n 1. gs1 = filter (\\<lambda>gi. p.dvdm gi h) gs", "by auto"], ["proof (state)\nthis:\n  gs1 = filter (\\<lambda>gi. p.dvdm gi h) gs\n\ngoal (1 subgoal):\n 1. irreducible\\<^sub>d h", "obtain k where f: \"f = h * k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k. f = h * k \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using hf"], ["proof (prove)\nusing this:\n  h dvd f\n\ngoal (1 subgoal):\n 1. (\\<And>k. f = h * k \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  \\<exists>k. f = h * k\n\ngoal (1 subgoal):\n 1. (\\<And>k. f = h * k \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  f = h * k\n\ngoal (1 subgoal):\n 1. irreducible\\<^sub>d h", "from uf_partition[OF f_gs f cop sf part]"], ["proof (chain)\npicking this:\n  pl.unique_factorization_m h (lead_coeff h, mset gs1)\n  pl.unique_factorization_m k (lead_coeff k, mset gs2)", "have uf_h: \"pl.unique_factorization_m h (lead_coeff h, mset gs1)\""], ["proof (prove)\nusing this:\n  pl.unique_factorization_m h (lead_coeff h, mset gs1)\n  pl.unique_factorization_m k (lead_coeff k, mset gs2)\n\ngoal (1 subgoal):\n 1. pl.unique_factorization_m h (lead_coeff h, mset gs1)", "by auto"], ["proof (state)\nthis:\n  pl.unique_factorization_m h (lead_coeff h, mset gs1)\n\ngoal (1 subgoal):\n 1. irreducible\\<^sub>d h", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. irreducible\\<^sub>d h", "proof (intro irreducible\\<^sub>dI degh)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q r.\n       \\<lbrakk>0 < degree q; degree q < degree h; 0 < degree r;\n        degree r < degree h; h = q * r\\<rbrakk>\n       \\<Longrightarrow> False", "fix q r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q r.\n       \\<lbrakk>0 < degree q; degree q < degree h; 0 < degree r;\n        degree r < degree h; h = q * r\\<rbrakk>\n       \\<Longrightarrow> False", "assume deg_q: \"degree q > 0\" \"degree q < degree h\"\n      and deg_r: \"degree r > 0\" \"degree r < degree h\"\n      and h: \"h = q * r\""], ["proof (state)\nthis:\n  0 < degree q\n  degree q < degree h\n  0 < degree r\n  degree r < degree h\n  h = q * r\n\ngoal (1 subgoal):\n 1. \\<And>q r.\n       \\<lbrakk>0 < degree q; degree q < degree h; 0 < degree r;\n        degree r < degree h; h = q * r\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  0 < degree q\n  degree q < degree h\n  0 < degree r\n  degree r < degree h\n  h = q * r", "have \"r dvd h\""], ["proof (prove)\nusing this:\n  0 < degree q\n  degree q < degree h\n  0 < degree r\n  degree r < degree h\n  h = q * r\n\ngoal (1 subgoal):\n 1. r dvd h", "by auto"], ["proof (state)\nthis:\n  r dvd h\n\ngoal (1 subgoal):\n 1. \\<And>q r.\n       \\<lbrakk>0 < degree q; degree q < degree h; 0 < degree r;\n        degree r < degree h; h = q * r\\<rbrakk>\n       \\<Longrightarrow> False", "with h dvd_trans[OF _ hf]"], ["proof (chain)\npicking this:\n  h = q * r\n  ?a dvd h \\<Longrightarrow> ?a dvd f\n  r dvd h", "have 1: \"q dvd f\" \"r dvd f\""], ["proof (prove)\nusing this:\n  h = q * r\n  ?a dvd h \\<Longrightarrow> ?a dvd f\n  r dvd h\n\ngoal (1 subgoal):\n 1. q dvd f &&& r dvd f", "by auto"], ["proof (state)\nthis:\n  q dvd f\n  r dvd f\n\ngoal (1 subgoal):\n 1. \\<And>q r.\n       \\<lbrakk>0 < degree q; degree q < degree h; 0 < degree r;\n        degree r < degree h; h = q * r\\<rbrakk>\n       \\<Longrightarrow> False", "from cop[unfolded f]"], ["proof (chain)\npicking this:\n  comm_monoid_mult_class.coprime (lead_coeff (h * k)) p", "have cop: \"coprime (lead_coeff h) p\""], ["proof (prove)\nusing this:\n  comm_monoid_mult_class.coprime (lead_coeff (h * k)) p\n\ngoal (1 subgoal):\n 1. comm_monoid_mult_class.coprime (lead_coeff h) p", "using p.prime pl.coprime_lead_coeff_factor(1)"], ["proof (prove)\nusing this:\n  comm_monoid_mult_class.coprime (lead_coeff (h * k)) p\n  prime p\n  \\<lbrakk>prime ?p;\n   comm_monoid_mult_class.coprime (lead_coeff (?f * ?g)) ?p\\<rbrakk>\n  \\<Longrightarrow> comm_monoid_mult_class.coprime (lead_coeff ?f) ?p\n\ngoal (1 subgoal):\n 1. comm_monoid_mult_class.coprime (lead_coeff h) p", "by blast"], ["proof (state)\nthis:\n  comm_monoid_mult_class.coprime (lead_coeff h) p\n\ngoal (1 subgoal):\n 1. \\<And>q r.\n       \\<lbrakk>0 < degree q; degree q < degree h; 0 < degree r;\n        degree r < degree h; h = q * r\\<rbrakk>\n       \\<Longrightarrow> False", "from sf[unfolded f]"], ["proof (chain)\npicking this:\n  p.square_free_m (h * k)", "have sf: \"p.square_free_m h\""], ["proof (prove)\nusing this:\n  p.square_free_m (h * k)\n\ngoal (1 subgoal):\n 1. p.square_free_m h", "using p.square_free_m_factor"], ["proof (prove)\nusing this:\n  p.square_free_m (h * k)\n  p.square_free_m (?f * ?g) \\<Longrightarrow> p.square_free_m ?f\n  p.square_free_m (?f * ?g) \\<Longrightarrow> p.square_free_m ?g\n\ngoal (1 subgoal):\n 1. p.square_free_m h", "by metis"], ["proof (state)\nthis:\n  p.square_free_m h\n\ngoal (1 subgoal):\n 1. \\<And>q r.\n       \\<lbrakk>0 < degree q; degree q < degree h; 0 < degree r;\n        degree r < degree h; h = q * r\\<rbrakk>\n       \\<Longrightarrow> False", "have norm_gs1: \"image_mset pl.Mp (mset gs1) = mset gs1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. image_mset pl.Mp (mset gs1) = mset gs1", "using norm_gs"], ["proof (prove)\nusing this:\n  map pl.Mp gs = gs\n\ngoal (1 subgoal):\n 1. image_mset pl.Mp (mset gs1) = mset gs1", "unfolding gs1"], ["proof (prove)\nusing this:\n  map pl.Mp gs = gs\n\ngoal (1 subgoal):\n 1. image_mset pl.Mp (mset (filter (\\<lambda>gi. p.dvdm gi h) gs)) =\n    mset (filter (\\<lambda>gi. p.dvdm gi h) gs)", "by (induct gs, auto)"], ["proof (state)\nthis:\n  image_mset pl.Mp (mset gs1) = mset gs1\n\ngoal (1 subgoal):\n 1. \\<And>q r.\n       \\<lbrakk>0 < degree q; degree q < degree h; 0 < degree r;\n        degree r < degree h; h = q * r\\<rbrakk>\n       \\<Longrightarrow> False", "from pl.unique_factorization_m_factor[OF p uf_h[unfolded h], folded h, OF cop sf l0 refl]"], ["proof (chain)\npicking this:\n  \\<exists>fs gs.\n     pl.unique_factorization_m q (lead_coeff q, fs) \\<and>\n     pl.unique_factorization_m r (lead_coeff r, gs) \\<and>\n     pl.Mf (lead_coeff h, mset gs1) =\n     pl.Mf (lead_coeff q * lead_coeff r, fs + gs) \\<and>\n     image_mset pl.Mp fs = fs \\<and> image_mset pl.Mp gs = gs", "obtain fs gs where uf_q: \"pl.unique_factorization_m q (lead_coeff q, fs)\"\n     and uf_r: \"pl.unique_factorization_m r (lead_coeff r, gs)\"\n     and id: \"mset gs1 = fs + gs\""], ["proof (prove)\nusing this:\n  \\<exists>fs gs.\n     pl.unique_factorization_m q (lead_coeff q, fs) \\<and>\n     pl.unique_factorization_m r (lead_coeff r, gs) \\<and>\n     pl.Mf (lead_coeff h, mset gs1) =\n     pl.Mf (lead_coeff q * lead_coeff r, fs + gs) \\<and>\n     image_mset pl.Mp fs = fs \\<and> image_mset pl.Mp gs = gs\n\ngoal (1 subgoal):\n 1. (\\<And>fs gs.\n        \\<lbrakk>pl.unique_factorization_m q (lead_coeff q, fs);\n         pl.unique_factorization_m r (lead_coeff r, gs);\n         mset gs1 = fs + gs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding pl.Mf_def split"], ["proof (prove)\nusing this:\n  \\<exists>fs gs.\n     pl.unique_factorization_m q (lead_coeff q, fs) \\<and>\n     pl.unique_factorization_m r (lead_coeff r, gs) \\<and>\n     (pl.M (lead_coeff h), image_mset pl.Mp (mset gs1)) =\n     (pl.M (lead_coeff q * lead_coeff r), image_mset pl.Mp (fs + gs)) \\<and>\n     image_mset pl.Mp fs = fs \\<and> image_mset pl.Mp gs = gs\n\ngoal (1 subgoal):\n 1. (\\<And>fs gs.\n        \\<lbrakk>pl.unique_factorization_m q (lead_coeff q, fs);\n         pl.unique_factorization_m r (lead_coeff r, gs);\n         mset gs1 = fs + gs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using norm_gs1"], ["proof (prove)\nusing this:\n  \\<exists>fs gs.\n     pl.unique_factorization_m q (lead_coeff q, fs) \\<and>\n     pl.unique_factorization_m r (lead_coeff r, gs) \\<and>\n     (pl.M (lead_coeff h), image_mset pl.Mp (mset gs1)) =\n     (pl.M (lead_coeff q * lead_coeff r), image_mset pl.Mp (fs + gs)) \\<and>\n     image_mset pl.Mp fs = fs \\<and> image_mset pl.Mp gs = gs\n  image_mset pl.Mp (mset gs1) = mset gs1\n\ngoal (1 subgoal):\n 1. (\\<And>fs gs.\n        \\<lbrakk>pl.unique_factorization_m q (lead_coeff q, fs);\n         pl.unique_factorization_m r (lead_coeff r, gs);\n         mset gs1 = fs + gs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  pl.unique_factorization_m q (lead_coeff q, fs)\n  pl.unique_factorization_m r (lead_coeff r, gs)\n  mset gs1 = fs + gs\n\ngoal (1 subgoal):\n 1. \\<And>q r.\n       \\<lbrakk>0 < degree q; degree q < degree h; 0 < degree r;\n        degree r < degree h; h = q * r\\<rbrakk>\n       \\<Longrightarrow> False", "from degh degh_j deg_q deg_r"], ["proof (chain)\npicking this:\n  0 < degree h\n  degree h \\<le> j'\n  0 < degree q\n  degree q < degree h\n  0 < degree r\n  degree r < degree h", "have qj': \"degree q < j'\" and rj': \"degree r < j'\""], ["proof (prove)\nusing this:\n  0 < degree h\n  degree h \\<le> j'\n  0 < degree q\n  degree q < degree h\n  0 < degree r\n  degree r < degree h\n\ngoal (1 subgoal):\n 1. degree q < j' &&& degree r < j'", "by auto"], ["proof (state)\nthis:\n  degree q < j'\n  degree r < j'\n\ngoal (1 subgoal):\n 1. \\<And>q r.\n       \\<lbrakk>0 < degree q; degree q < degree h; 0 < degree r;\n        degree r < degree h; h = q * r\\<rbrakk>\n       \\<Longrightarrow> False", "have intro: \"u \\<in># r \\<Longrightarrow> pl.Mp u \\<in># image_mset pl.Mp r\" for r"], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in># r \\<Longrightarrow> pl.Mp u \\<in># image_mset pl.Mp r", "by auto"], ["proof (state)\nthis:\n  u \\<in># ?r1 \\<Longrightarrow> pl.Mp u \\<in># image_mset pl.Mp ?r1\n\ngoal (1 subgoal):\n 1. \\<And>q r.\n       \\<lbrakk>0 < degree q; degree q < degree h; 0 < degree r;\n        degree r < degree h; h = q * r\\<rbrakk>\n       \\<Longrightarrow> False", "note dvdI = pl.factorization_m_mem_dvdm[OF pl.unique_factorization_m_imp_factorization intro]"], ["proof (state)\nthis:\n  \\<lbrakk>pl.unique_factorization_m ?f (?c, ?fs); u \\<in># ?fs\\<rbrakk>\n  \\<Longrightarrow> pl.dvdm u ?f\n\ngoal (1 subgoal):\n 1. \\<And>q r.\n       \\<lbrakk>0 < degree q; degree q < degree h; 0 < degree r;\n        degree r < degree h; h = q * r\\<rbrakk>\n       \\<Longrightarrow> False", "from u_gs1 id"], ["proof (chain)\npicking this:\n  u \\<in> set gs1\n  mset gs1 = fs + gs", "have \"u \\<in># fs \\<or> u \\<in># gs\""], ["proof (prove)\nusing this:\n  u \\<in> set gs1\n  mset gs1 = fs + gs\n\ngoal (1 subgoal):\n 1. u \\<in># fs \\<or> u \\<in># gs", "unfolding in_multiset_in_set[symmetric]"], ["proof (prove)\nusing this:\n  u \\<in># mset gs1\n  mset gs1 = fs + gs\n\ngoal (1 subgoal):\n 1. u \\<in># fs \\<or> u \\<in># gs", "by auto"], ["proof (state)\nthis:\n  u \\<in># fs \\<or> u \\<in># gs\n\ngoal (1 subgoal):\n 1. \\<And>q r.\n       \\<lbrakk>0 < degree q; degree q < degree h; 0 < degree r;\n        degree r < degree h; h = q * r\\<rbrakk>\n       \\<Longrightarrow> False", "with dvdI[OF uf_q] dvdI[OF uf_r]"], ["proof (chain)\npicking this:\n  u \\<in># fs \\<Longrightarrow> pl.dvdm u q\n  u \\<in># gs \\<Longrightarrow> pl.dvdm u r\n  u \\<in># fs \\<or> u \\<in># gs", "have \"pl.dvdm u q \\<or> pl.dvdm u r\""], ["proof (prove)\nusing this:\n  u \\<in># fs \\<Longrightarrow> pl.dvdm u q\n  u \\<in># gs \\<Longrightarrow> pl.dvdm u r\n  u \\<in># fs \\<or> u \\<in># gs\n\ngoal (1 subgoal):\n 1. pl.dvdm u q \\<or> pl.dvdm u r", "by auto"], ["proof (state)\nthis:\n  pl.dvdm u q \\<or> pl.dvdm u r\n\ngoal (1 subgoal):\n 1. \\<And>q r.\n       \\<lbrakk>0 < degree q; degree q < degree h; 0 < degree r;\n        degree r < degree h; h = q * r\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"p.dvdm u q \\<or> p.dvdm u r\""], ["proof (prove)\nusing this:\n  pl.dvdm u q \\<or> pl.dvdm u r\n\ngoal (1 subgoal):\n 1. p.dvdm u q \\<or> p.dvdm u r", "using pl_dvdm_imp_p_dvdm"], ["proof (prove)\nusing this:\n  pl.dvdm u q \\<or> pl.dvdm u r\n  pl.dvdm ?a ?b \\<Longrightarrow> p.dvdm ?a ?b\n\ngoal (1 subgoal):\n 1. p.dvdm u q \\<or> p.dvdm u r", "by blast"], ["proof (state)\nthis:\n  p.dvdm u q \\<or> p.dvdm u r\n\ngoal (1 subgoal):\n 1. \\<And>q r.\n       \\<lbrakk>0 < degree q; degree q < degree h; 0 < degree r;\n        degree r < degree h; h = q * r\\<rbrakk>\n       \\<Longrightarrow> False", "with 1 qj' rj'"], ["proof (chain)\npicking this:\n  q dvd f\n  r dvd f\n  degree q < j'\n  degree r < j'\n  p.dvdm u q \\<or> p.dvdm u r", "show False"], ["proof (prove)\nusing this:\n  q dvd f\n  r dvd f\n  degree q < j'\n  degree r < j'\n  p.dvdm u q \\<or> p.dvdm u r\n\ngoal (1 subgoal):\n 1. False", "by (elim disjE, auto dest!: deg)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  irreducible\\<^sub>d h\n\ngoal:\nNo subgoals!", "qed"], ["", "private"], ["", "definition \"ll = (let n = sqrt_int_ceiling (\\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')); \n    ll' = find_exponent p n in if ll' < l then ll' else l)\""], ["", "lemma ll: \"ll \\<le> l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ll \\<le> l", "unfolding ll_def Let_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if find_exponent p\n         (sqrt_int_ceiling\n           (\\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')))\n        < l\n     then find_exponent p\n           (sqrt_int_ceiling\n             (\\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') *\n              2 ^ (5 * j' * j')))\n     else l)\n    \\<le> l", "by auto"], ["", "lemma ll0: \"ll \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ll \\<noteq> 0", "using l0 find_exponent[OF p.m1]"], ["proof (prove)\nusing this:\n  l \\<noteq> 0\n  ?bnd < p ^ find_exponent p ?bnd\n  find_exponent p ?bnd \\<noteq> 0\n\ngoal (1 subgoal):\n 1. ll \\<noteq> 0", "unfolding ll_def Let_def"], ["proof (prove)\nusing this:\n  l \\<noteq> 0\n  ?bnd < p ^ find_exponent p ?bnd\n  find_exponent p ?bnd \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (if find_exponent p\n         (sqrt_int_ceiling\n           (\\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')))\n        < l\n     then find_exponent p\n           (sqrt_int_ceiling\n             (\\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') *\n              2 ^ (5 * j' * j')))\n     else l) \\<noteq>\n    0", "by auto"], ["", "lemma pll1: \"p^ll > 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < p ^ ll", "using ll0 p.m1"], ["proof (prove)\nusing this:\n  ll \\<noteq> 0\n  1 < p\n\ngoal (1 subgoal):\n 1. 1 < p ^ ll", "by auto"], ["", "interpretation pll: poly_mod_2 \"p^ll\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly_mod_2 (p ^ ll)", "using ll0 p.m1"], ["proof (prove)\nusing this:\n  ll \\<noteq> 0\n  1 < p\n\ngoal (1 subgoal):\n 1. poly_mod_2 (p ^ ll)", "by (unfold_locales, auto)"], ["", "lemma pll0: \"p^ll \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p ^ ll \\<noteq> 0", "using p"], ["proof (prove)\nusing this:\n  prime p\n\ngoal (1 subgoal):\n 1. p ^ ll \\<noteq> 0", "by auto"], ["", "lemma dvdm_l_ll: assumes \"pl.dvdm a b\"\n  shows \"pll.dvdm a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pll.dvdm a b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pll.dvdm a b", "have id: \"p^l = p^ll * p ^ (l - ll)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p ^ l = p ^ ll * p ^ (l - ll)", "using ll"], ["proof (prove)\nusing this:\n  ll \\<le> l\n\ngoal (1 subgoal):\n 1. p ^ l = p ^ ll * p ^ (l - ll)", "unfolding power_add[symmetric]"], ["proof (prove)\nusing this:\n  ll \\<le> l\n\ngoal (1 subgoal):\n 1. p ^ l = p ^ (ll + (l - ll))", "by auto"], ["proof (state)\nthis:\n  p ^ l = p ^ ll * p ^ (l - ll)\n\ngoal (1 subgoal):\n 1. pll.dvdm a b", "from assms[unfolded pl.dvdm_def]"], ["proof (chain)\npicking this:\n  \\<exists>h. pl.eq_m b (a * h)", "obtain c where eq: \"pl.eq_m b (a * c)\""], ["proof (prove)\nusing this:\n  \\<exists>h. pl.eq_m b (a * h)\n\ngoal (1 subgoal):\n 1. (\\<And>c. pl.eq_m b (a * c) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  pl.eq_m b (a * c)\n\ngoal (1 subgoal):\n 1. pll.dvdm a b", "from pll.Mp_shrink_modulus[OF eq[unfolded id]] p"], ["proof (chain)\npicking this:\n  p ^ (l - ll) \\<noteq> 0 \\<Longrightarrow> pll.eq_m b (a * c)\n  prime p", "have \"pll.eq_m b (a * c)\""], ["proof (prove)\nusing this:\n  p ^ (l - ll) \\<noteq> 0 \\<Longrightarrow> pll.eq_m b (a * c)\n  prime p\n\ngoal (1 subgoal):\n 1. pll.eq_m b (a * c)", "by auto"], ["proof (state)\nthis:\n  pll.eq_m b (a * c)\n\ngoal (1 subgoal):\n 1. pll.dvdm a b", "thus ?thesis"], ["proof (prove)\nusing this:\n  pll.eq_m b (a * c)\n\ngoal (1 subgoal):\n 1. pll.dvdm a b", "unfolding pll.dvdm_def"], ["proof (prove)\nusing this:\n  pll.eq_m b (a * c)\n\ngoal (1 subgoal):\n 1. \\<exists>h. pll.eq_m b (a * h)", ".."], ["proof (state)\nthis:\n  pll.dvdm a b\n\ngoal:\nNo subgoals!", "qed"], ["", "private"], ["", "definition \"g \\<equiv> LLL_short_polynomial (p^ll) j u\""], ["", "lemma deg_g_j: \"degree g < j\" \n    and g0: \"g \\<noteq> 0\" \n    and ug :\"pll.dvdm u g\" \n    and short_g: \"h \\<noteq> 0 \\<Longrightarrow> pll.dvdm u h \\<Longrightarrow> degree h \\<le> j' \\<Longrightarrow> \\<parallel>g\\<parallel>\\<^sup>2 \\<le> 2 ^ j' * \\<parallel>h\\<parallel>\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (degree g < Suc j' &&& g \\<noteq> 0) &&&\n    pll.dvdm u g &&&\n    (\\<lbrakk>h \\<noteq> 0; pll.dvdm u h; degree h \\<le> j'\\<rbrakk>\n     \\<Longrightarrow> \\<parallel>g\\<parallel>\\<^sup>2\n                       \\<le> 2 ^ j' * \\<parallel>h\\<parallel>\\<^sup>2)", "proof (atomize(full), goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. (degree g < Suc j' \\<and> g \\<noteq> 0) \\<and>\n    pll.dvdm u g \\<and>\n    (h \\<noteq> 0 \\<longrightarrow>\n     pll.dvdm u h \\<longrightarrow>\n     degree h \\<le> j' \\<longrightarrow>\n     \\<parallel>g\\<parallel>\\<^sup>2\n     \\<le> 2 ^ j' * \\<parallel>h\\<parallel>\\<^sup>2)", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. (degree g < Suc j' \\<and> g \\<noteq> 0) \\<and>\n    pll.dvdm u g \\<and>\n    (h \\<noteq> 0 \\<longrightarrow>\n     pll.dvdm u h \\<longrightarrow>\n     degree h \\<le> j' \\<longrightarrow>\n     \\<parallel>g\\<parallel>\\<^sup>2\n     \\<le> 2 ^ j' * \\<parallel>h\\<parallel>\\<^sup>2)", "from deg_u"], ["proof (chain)\npicking this:\n  0 < degree u", "have degu0: \"degree u \\<noteq> 0\""], ["proof (prove)\nusing this:\n  0 < degree u\n\ngoal (1 subgoal):\n 1. degree u \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  degree u \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (degree g < Suc j' \\<and> g \\<noteq> 0) \\<and>\n    pll.dvdm u g \\<and>\n    (h \\<noteq> 0 \\<longrightarrow>\n     pll.dvdm u h \\<longrightarrow>\n     degree h \\<le> j' \\<longrightarrow>\n     \\<parallel>g\\<parallel>\\<^sup>2\n     \\<le> 2 ^ j' * \\<parallel>h\\<parallel>\\<^sup>2)", "have ju: \"j \\<ge> degree u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree u \\<le> Suc j'", "using d_def dj' le_Suc_eq"], ["proof (prove)\nusing this:\n  d \\<equiv> degree u\n  d \\<le> j'\n  (?m \\<le> Suc ?n) = (?m \\<le> ?n \\<or> ?m = Suc ?n)\n\ngoal (1 subgoal):\n 1. degree u \\<le> Suc j'", "by blast"], ["proof (state)\nthis:\n  degree u \\<le> Suc j'\n\ngoal (1 subgoal):\n 1. (degree g < Suc j' \\<and> g \\<noteq> 0) \\<and>\n    pll.dvdm u g \\<and>\n    (h \\<noteq> 0 \\<longrightarrow>\n     pll.dvdm u h \\<longrightarrow>\n     degree h \\<le> j' \\<longrightarrow>\n     \\<parallel>g\\<parallel>\\<^sup>2\n     \\<le> 2 ^ j' * \\<parallel>h\\<parallel>\\<^sup>2)", "have ju': \"j > degree u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree u < Suc j'", "using d_def dj'"], ["proof (prove)\nusing this:\n  d \\<equiv> degree u\n  d \\<le> j'\n\ngoal (1 subgoal):\n 1. degree u < Suc j'", "by auto"], ["proof (state)\nthis:\n  degree u < Suc j'\n\ngoal (1 subgoal):\n 1. (degree g < Suc j' \\<and> g \\<noteq> 0) \\<and>\n    pll.dvdm u g \\<and>\n    (h \\<noteq> 0 \\<longrightarrow>\n     pll.dvdm u h \\<longrightarrow>\n     degree h \\<le> j' \\<longrightarrow>\n     \\<parallel>g\\<parallel>\\<^sup>2\n     \\<le> 2 ^ j' * \\<parallel>h\\<parallel>\\<^sup>2)", "note short = LLL_short_polynomial[OF degu0 ju pll1 u, folded g_def]"], ["proof (state)\nthis:\n  degree g < Suc j'\n  g \\<noteq> 0\n  pll.dvdm u g\n  \\<lbrakk>degree u < Suc j'; ?f \\<noteq> 0; pll.dvdm u ?f;\n   degree ?f < Suc j'\\<rbrakk>\n  \\<Longrightarrow> \\<parallel>g\\<parallel>\\<^sup>2\n                    \\<le> 2 ^ (Suc j' - 1) *\n                          \\<parallel>?f\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. (degree g < Suc j' \\<and> g \\<noteq> 0) \\<and>\n    pll.dvdm u g \\<and>\n    (h \\<noteq> 0 \\<longrightarrow>\n     pll.dvdm u h \\<longrightarrow>\n     degree h \\<le> j' \\<longrightarrow>\n     \\<parallel>g\\<parallel>\\<^sup>2\n     \\<le> 2 ^ j' * \\<parallel>h\\<parallel>\\<^sup>2)", "from short(1-3) short(4)[OF ju']"], ["proof (chain)\npicking this:\n  degree g < Suc j'\n  g \\<noteq> 0\n  pll.dvdm u g\n  \\<lbrakk>?f \\<noteq> 0; pll.dvdm u ?f; degree ?f < Suc j'\\<rbrakk>\n  \\<Longrightarrow> \\<parallel>g\\<parallel>\\<^sup>2\n                    \\<le> 2 ^ (Suc j' - 1) *\n                          \\<parallel>?f\\<parallel>\\<^sup>2", "show ?case"], ["proof (prove)\nusing this:\n  degree g < Suc j'\n  g \\<noteq> 0\n  pll.dvdm u g\n  \\<lbrakk>?f \\<noteq> 0; pll.dvdm u ?f; degree ?f < Suc j'\\<rbrakk>\n  \\<Longrightarrow> \\<parallel>g\\<parallel>\\<^sup>2\n                    \\<le> 2 ^ (Suc j' - 1) *\n                          \\<parallel>?f\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. (degree g < Suc j' \\<and> g \\<noteq> 0) \\<and>\n    pll.dvdm u g \\<and>\n    (h \\<noteq> 0 \\<longrightarrow>\n     pll.dvdm u h \\<longrightarrow>\n     degree h \\<le> j' \\<longrightarrow>\n     \\<parallel>g\\<parallel>\\<^sup>2\n     \\<le> 2 ^ j' * \\<parallel>h\\<parallel>\\<^sup>2)", "by auto"], ["proof (state)\nthis:\n  (degree g < Suc j' \\<and> g \\<noteq> 0) \\<and>\n  pll.dvdm u g \\<and>\n  (h \\<noteq> 0 \\<longrightarrow>\n   pll.dvdm u h \\<longrightarrow>\n   degree h \\<le> j' \\<longrightarrow>\n   \\<parallel>g\\<parallel>\\<^sup>2\n   \\<le> 2 ^ j' * \\<parallel>h\\<parallel>\\<^sup>2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma LLL_reconstruction_inner_simps: \"LLL_reconstruction_inner p l gs f u Degs j\n  = (if j' \\<notin> Degs then None else if p ^ ll \\<le> \\<bar>lead_coeff g\\<bar> then None\n   else case div_int_poly f (primitive_part g) of None \\<Rightarrow> None\n        | Some f' \\<Rightarrow> Some ([gi\\<leftarrow>gs . \\<not> p.dvdm gi (primitive_part g)], lead_coeff f', f', primitive_part g))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs (Suc j') =\n    (if j' \\<notin> Degs then None\n     else if p ^ ll \\<le> \\<bar>lead_coeff g\\<bar> then None\n          else case div_int_poly f (primitive_part g) of\n               None \\<Rightarrow> None\n               | Some f' \\<Rightarrow>\n                   Some\n                    (filter\n                      (\\<lambda>gi. \\<not> p.dvdm gi (primitive_part g)) gs,\n                     lead_coeff f', f', primitive_part g))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs (Suc j') =\n    (if j' \\<notin> Degs then None\n     else if p ^ ll \\<le> \\<bar>lead_coeff g\\<bar> then None\n          else case div_int_poly f (primitive_part g) of\n               None \\<Rightarrow> None\n               | Some f' \\<Rightarrow>\n                   Some\n                    (filter\n                      (\\<lambda>gi. \\<not> p.dvdm gi (primitive_part g)) gs,\n                     lead_coeff f', f', primitive_part g))", "have Suc: \"Suc j' - 1 = j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc j' - 1 = j'", "by simp"], ["proof (state)\nthis:\n  Suc j' - 1 = j'\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs (Suc j') =\n    (if j' \\<notin> Degs then None\n     else if p ^ ll \\<le> \\<bar>lead_coeff g\\<bar> then None\n          else case div_int_poly f (primitive_part g) of\n               None \\<Rightarrow> None\n               | Some f' \\<Rightarrow>\n                   Some\n                    (filter\n                      (\\<lambda>gi. \\<not> p.dvdm gi (primitive_part g)) gs,\n                     lead_coeff f', f', primitive_part g))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs (Suc j') =\n    (if j' \\<notin> Degs then None\n     else if p ^ ll \\<le> \\<bar>lead_coeff g\\<bar> then None\n          else case div_int_poly f (primitive_part g) of\n               None \\<Rightarrow> None\n               | Some f' \\<Rightarrow>\n                   Some\n                    (filter\n                      (\\<lambda>gi. \\<not> p.dvdm gi (primitive_part g)) gs,\n                     lead_coeff f', f', primitive_part g))", "unfolding LLL_reconstruction_inner_def Suc Let_def ll_def[unfolded Let_def, symmetric]\n     g_def[unfolded Let_def, symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if j' \\<notin> Degs then None\n     else if p ^ ll \\<le> \\<bar>lead_coeff g\\<bar> then None\n          else case div_int_poly f (primitive_part g) of\n               None \\<Rightarrow> None\n               | Some f' \\<Rightarrow>\n                   Some\n                    (filter\n                      (\\<lambda>gi. \\<not> p.dvdm gi (primitive_part g)) gs,\n                     lead_coeff f', f', primitive_part g)) =\n    (if j' \\<notin> Degs then None\n     else if p ^ ll \\<le> \\<bar>lead_coeff g\\<bar> then None\n          else case div_int_poly f (primitive_part g) of\n               None \\<Rightarrow> None\n               | Some f' \\<Rightarrow>\n                   Some\n                    (filter\n                      (\\<lambda>gi. \\<not> p.dvdm gi (primitive_part g)) gs,\n                     lead_coeff f', f', primitive_part g))", "by simp"], ["proof (state)\nthis:\n  LLL_reconstruction_inner p l gs f u Degs (Suc j') =\n  (if j' \\<notin> Degs then None\n   else if p ^ ll \\<le> \\<bar>lead_coeff g\\<bar> then None\n        else case div_int_poly f (primitive_part g) of\n             None \\<Rightarrow> None\n             | Some f' \\<Rightarrow>\n                 Some\n                  (filter (\\<lambda>gi. \\<not> p.dvdm gi (primitive_part g))\n                    gs,\n                   lead_coeff f', f', primitive_part g))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma LLL_reconstruction_inner_complete:\n  assumes ret: \"LLL_reconstruction_inner p l gs f u Degs j = None\"\n  shows \"\\<And>factor. p.dvdm u factor \\<Longrightarrow> factor dvd f \\<Longrightarrow> degree factor \\<ge> j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n       \\<Longrightarrow> Suc j' \\<le> degree factor", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "fix factor"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "assume pu_factor: \"p.dvdm u factor\"\n     and factor_f: \"factor dvd f\"\n     and deg_factor2: \"\\<not> j \\<le> degree factor\""], ["proof (state)\nthis:\n  p.dvdm u factor\n  factor dvd f\n  \\<not> Suc j' \\<le> degree factor\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "with deg[OF this(1,2)]"], ["proof (chain)\npicking this:\n  j' \\<le> degree factor\n  p.dvdm u factor\n  factor dvd f\n  \\<not> Suc j' \\<le> degree factor", "have deg_factor_j [simp]: \"degree factor = j'\" and deg_factor_lt_j: \"degree factor < j\""], ["proof (prove)\nusing this:\n  j' \\<le> degree factor\n  p.dvdm u factor\n  factor dvd f\n  \\<not> Suc j' \\<le> degree factor\n\ngoal (1 subgoal):\n 1. degree factor = j' &&& degree factor < Suc j'", "by auto"], ["proof (state)\nthis:\n  degree factor = j'\n  degree factor < Suc j'\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "from Degs[OF factor_f pu_factor]"], ["proof (chain)\npicking this:\n  degree factor \\<in> Degs", "have Degs: \"(j' \\<notin> Degs) = False\""], ["proof (prove)\nusing this:\n  degree factor \\<in> Degs\n\ngoal (1 subgoal):\n 1. (j' \\<notin> Degs) = False", "by auto"], ["proof (state)\nthis:\n  (j' \\<notin> Degs) = False\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "from dvdm_power[OF factor_f] pu_factor"], ["proof (chain)\npicking this:\n  p.dvdm u factor = pl.dvdm u factor\n  p.dvdm u factor", "have u_factor: \"pl.dvdm u factor\""], ["proof (prove)\nusing this:\n  p.dvdm u factor = pl.dvdm u factor\n  p.dvdm u factor\n\ngoal (1 subgoal):\n 1. pl.dvdm u factor", "by auto"], ["proof (state)\nthis:\n  pl.dvdm u factor\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "from dvdm_l_ll[OF u_factor]"], ["proof (chain)\npicking this:\n  pll.dvdm u factor", "have pll_u_factor: \"pll.dvdm u factor\""], ["proof (prove)\nusing this:\n  pll.dvdm u factor\n\ngoal (1 subgoal):\n 1. pll.dvdm u factor", "by auto"], ["proof (state)\nthis:\n  pll.dvdm u factor\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "have deg_factor: \"degree factor > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < degree factor", "using d0 deg_factor_j dj'"], ["proof (prove)\nusing this:\n  0 < d\n  degree factor = j'\n  d \\<le> j'\n\ngoal (1 subgoal):\n 1. 0 < degree factor", "by linarith"], ["proof (state)\nthis:\n  0 < degree factor\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "from f0 deg_factor divides_degree[OF factor_f]"], ["proof (chain)\npicking this:\n  f \\<noteq> 0\n  0 < degree factor\n  degree factor \\<le> degree f \\<or> f = 0", "have deg_f: \"degree f > 0\""], ["proof (prove)\nusing this:\n  f \\<noteq> 0\n  0 < degree factor\n  degree factor \\<le> degree f \\<or> f = 0\n\ngoal (1 subgoal):\n 1. 0 < degree f", "by auto"], ["proof (state)\nthis:\n  0 < degree f\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "from deg_factor"], ["proof (chain)\npicking this:\n  0 < degree factor", "have j'0: \"j' > 0\""], ["proof (prove)\nusing this:\n  0 < degree factor\n\ngoal (1 subgoal):\n 1. 0 < j'", "by simp"], ["proof (state)\nthis:\n  0 < j'\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "from factor_f f0"], ["proof (chain)\npicking this:\n  factor dvd f\n  f \\<noteq> 0", "have factor0: \"factor \\<noteq> 0\""], ["proof (prove)\nusing this:\n  factor dvd f\n  f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. factor \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  factor \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "from factor_f"], ["proof (chain)\npicking this:\n  factor dvd f", "obtain f2 where f: \"f = factor * f2\""], ["proof (prove)\nusing this:\n  factor dvd f\n\ngoal (1 subgoal):\n 1. (\\<And>f2. f = factor * f2 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  \\<exists>k. f = factor * k\n\ngoal (1 subgoal):\n 1. (\\<And>f2. f = factor * f2 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  f = factor * f2\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "from deg_u"], ["proof (chain)\npicking this:\n  0 < degree u", "have deg_u0: \"degree u \\<noteq> 0\""], ["proof (prove)\nusing this:\n  0 < degree u\n\ngoal (1 subgoal):\n 1. degree u \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  degree u \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "from pu_factor u"], ["proof (chain)\npicking this:\n  p.dvdm u factor\n  monic u", "have u_j': \"degree u \\<le> j'\""], ["proof (prove)\nusing this:\n  p.dvdm u factor\n  monic u\n\ngoal (1 subgoal):\n 1. degree u \\<le> j'", "unfolding deg_factor_j[symmetric]"], ["proof (prove)\nusing this:\n  p.dvdm u factor\n  monic u\n\ngoal (1 subgoal):\n 1. degree u \\<le> degree factor", "using d_def deg_factor_j dj'"], ["proof (prove)\nusing this:\n  p.dvdm u factor\n  monic u\n  d \\<equiv> degree u\n  degree factor = j'\n  d \\<le> j'\n\ngoal (1 subgoal):\n 1. degree u \\<le> degree factor", "by blast"], ["proof (state)\nthis:\n  degree u \\<le> j'\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "hence u_j: \"degree u \\<le> j\" \"degree u < j\""], ["proof (prove)\nusing this:\n  degree u \\<le> j'\n\ngoal (1 subgoal):\n 1. degree u \\<le> Suc j' &&& degree u < Suc j'", "by auto"], ["proof (state)\nthis:\n  degree u \\<le> Suc j'\n  degree u < Suc j'\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "note LLL = LLL_short_polynomial[OF deg_u0 u_j(1) pll1 u, folded g_def]"], ["proof (state)\nthis:\n  degree g < Suc j'\n  g \\<noteq> 0\n  pll.dvdm u g\n  \\<lbrakk>degree u < Suc j'; ?f \\<noteq> 0; pll.dvdm u ?f;\n   degree ?f < Suc j'\\<rbrakk>\n  \\<Longrightarrow> \\<parallel>g\\<parallel>\\<^sup>2\n                    \\<le> 2 ^ (Suc j' - 1) *\n                          \\<parallel>?f\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "note ret = ret[unfolded LLL_reconstruction_inner_simps Degs if_False]"], ["proof (state)\nthis:\n  (if p ^ ll \\<le> \\<bar>lead_coeff g\\<bar> then None\n   else case div_int_poly f (primitive_part g) of None \\<Rightarrow> None\n        | Some f' \\<Rightarrow>\n            Some\n             (filter (\\<lambda>gi. \\<not> p.dvdm gi (primitive_part g)) gs,\n              lead_coeff f', f', primitive_part g)) =\n  None\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "note LLL = LLL(1-3) LLL(4)[OF u_j(2) factor0 pll_u_factor deg_factor_lt_j]"], ["proof (state)\nthis:\n  degree g < Suc j'\n  g \\<noteq> 0\n  pll.dvdm u g\n  \\<parallel>g\\<parallel>\\<^sup>2\n  \\<le> 2 ^ (Suc j' - 1) * \\<parallel>factor\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "hence deg_g: \"degree g \\<le> j'\""], ["proof (prove)\nusing this:\n  degree g < Suc j'\n  g \\<noteq> 0\n  pll.dvdm u g\n  \\<parallel>g\\<parallel>\\<^sup>2\n  \\<le> 2 ^ (Suc j' - 1) * \\<parallel>factor\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. degree g \\<le> j'", "by simp"], ["proof (state)\nthis:\n  degree g \\<le> j'\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "from LLL(2)"], ["proof (chain)\npicking this:\n  g \\<noteq> 0", "have normg: \"\\<parallel>g\\<parallel>\\<^sup>2 \\<ge> 1\""], ["proof (prove)\nusing this:\n  g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 1 \\<le> \\<parallel>g\\<parallel>\\<^sup>2", "using sq_norm_poly_pos[of g]"], ["proof (prove)\nusing this:\n  g \\<noteq> 0\n  (0 < \\<parallel>g\\<parallel>\\<^sup>2) = (g \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. 1 \\<le> \\<parallel>g\\<parallel>\\<^sup>2", "by presburger"], ["proof (state)\nthis:\n  1 \\<le> \\<parallel>g\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "from f0"], ["proof (chain)\npicking this:\n  f \\<noteq> 0", "have normf: \"\\<parallel>f\\<parallel>\\<^sup>2 \\<ge> 1\""], ["proof (prove)\nusing this:\n  f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 1 \\<le> \\<parallel>f\\<parallel>\\<^sup>2", "using sq_norm_poly_pos[of f]"], ["proof (prove)\nusing this:\n  f \\<noteq> 0\n  (0 < \\<parallel>f\\<parallel>\\<^sup>2) = (f \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. 1 \\<le> \\<parallel>f\\<parallel>\\<^sup>2", "by presburger"], ["proof (state)\nthis:\n  1 \\<le> \\<parallel>f\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "from factor0"], ["proof (chain)\npicking this:\n  factor \\<noteq> 0", "have normf1: \"\\<parallel>factor\\<parallel>\\<^sup>2 \\<ge> 1\""], ["proof (prove)\nusing this:\n  factor \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 1 \\<le> \\<parallel>factor\\<parallel>\\<^sup>2", "using sq_norm_poly_pos[of factor]"], ["proof (prove)\nusing this:\n  factor \\<noteq> 0\n  (0 < \\<parallel>factor\\<parallel>\\<^sup>2) = (factor \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. 1 \\<le> \\<parallel>factor\\<parallel>\\<^sup>2", "by presburger"], ["proof (state)\nthis:\n  1 \\<le> \\<parallel>factor\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "from F0"], ["proof (chain)\npicking this:\n  F \\<noteq> 0", "have normF: \"\\<parallel>F\\<parallel>\\<^sup>2 \\<ge> 1\""], ["proof (prove)\nusing this:\n  F \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 1 \\<le> \\<parallel>F\\<parallel>\\<^sup>2", "using sq_norm_poly_pos[of F]"], ["proof (prove)\nusing this:\n  F \\<noteq> 0\n  (0 < \\<parallel>F\\<parallel>\\<^sup>2) = (F \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. 1 \\<le> \\<parallel>F\\<parallel>\\<^sup>2", "by presburger"], ["proof (state)\nthis:\n  1 \\<le> \\<parallel>F\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "from factor_f \\<open>f dvd F\\<close>"], ["proof (chain)\npicking this:\n  factor dvd f\n  f dvd F", "have factor_F: \"factor dvd F\""], ["proof (prove)\nusing this:\n  factor dvd f\n  f dvd F\n\ngoal (1 subgoal):\n 1. factor dvd F", "by (rule dvd_trans)"], ["proof (state)\nthis:\n  factor dvd F\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "have \"\\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g * \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor \\<le> \\<parallel>factor\\<parallel>\\<^sup>2 ^ j' * \\<parallel>g\\<parallel>\\<^sup>2 ^ j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    \\<le> \\<parallel>factor\\<parallel>\\<^sup>2 ^ j' *\n          \\<parallel>g\\<parallel>\\<^sup>2 ^ j'", "by (rule mult_mono[OF power_increasing], insert normg normf1 deg_g, auto)"], ["proof (state)\nthis:\n  \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n  \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n  \\<le> \\<parallel>factor\\<parallel>\\<^sup>2 ^ j' *\n        \\<parallel>g\\<parallel>\\<^sup>2 ^ j'\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n  \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n  \\<le> \\<parallel>factor\\<parallel>\\<^sup>2 ^ j' *\n        \\<parallel>g\\<parallel>\\<^sup>2 ^ j'\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "have \"\\<dots> = (\\<parallel>factor\\<parallel>\\<^sup>2 * \\<parallel>g\\<parallel>\\<^sup>2)^j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>factor\\<parallel>\\<^sup>2 ^ j' *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ j' =\n    (\\<parallel>factor\\<parallel>\\<^sup>2 *\n     \\<parallel>g\\<parallel>\\<^sup>2) ^\n    j'", "by (simp add: power_mult_distrib)"], ["proof (state)\nthis:\n  \\<parallel>factor\\<parallel>\\<^sup>2 ^ j' *\n  \\<parallel>g\\<parallel>\\<^sup>2 ^ j' =\n  (\\<parallel>factor\\<parallel>\\<^sup>2 * \\<parallel>g\\<parallel>\\<^sup>2) ^\n  j'\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  \\<parallel>factor\\<parallel>\\<^sup>2 ^ j' *\n  \\<parallel>g\\<parallel>\\<^sup>2 ^ j' =\n  (\\<parallel>factor\\<parallel>\\<^sup>2 * \\<parallel>g\\<parallel>\\<^sup>2) ^\n  j'\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "have \"\\<dots> \\<le> (\\<parallel>factor\\<parallel>\\<^sup>2 * (2 ^ j' * \\<parallel>factor\\<parallel>\\<^sup>2))^j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<parallel>factor\\<parallel>\\<^sup>2 *\n     \\<parallel>g\\<parallel>\\<^sup>2) ^\n    j'\n    \\<le> (\\<parallel>factor\\<parallel>\\<^sup>2 *\n           (2 ^ j' * \\<parallel>factor\\<parallel>\\<^sup>2)) ^\n          j'", "by (rule power_mono[OF mult_left_mono], insert LLL(4), auto)"], ["proof (state)\nthis:\n  (\\<parallel>factor\\<parallel>\\<^sup>2 * \\<parallel>g\\<parallel>\\<^sup>2) ^\n  j'\n  \\<le> (\\<parallel>factor\\<parallel>\\<^sup>2 *\n         (2 ^ j' * \\<parallel>factor\\<parallel>\\<^sup>2)) ^\n        j'\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  (\\<parallel>factor\\<parallel>\\<^sup>2 * \\<parallel>g\\<parallel>\\<^sup>2) ^\n  j'\n  \\<le> (\\<parallel>factor\\<parallel>\\<^sup>2 *\n         (2 ^ j' * \\<parallel>factor\\<parallel>\\<^sup>2)) ^\n        j'\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "have \"\\<dots> = \\<parallel>factor\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (j' * j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<parallel>factor\\<parallel>\\<^sup>2 *\n     (2 ^ j' * \\<parallel>factor\\<parallel>\\<^sup>2)) ^\n    j' =\n    \\<parallel>factor\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (j' * j')", "unfolding power_mult_distrib power_mult power_add mult_2"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>factor\\<parallel>\\<^sup>2 ^ j' *\n    ((2 ^ j') ^ j' * \\<parallel>factor\\<parallel>\\<^sup>2 ^ j') =\n    \\<parallel>factor\\<parallel>\\<^sup>2 ^ j' *\n    \\<parallel>factor\\<parallel>\\<^sup>2 ^ j' *\n    (2 ^ j') ^ j'", "by simp"], ["proof (state)\nthis:\n  (\\<parallel>factor\\<parallel>\\<^sup>2 *\n   (2 ^ j' * \\<parallel>factor\\<parallel>\\<^sup>2)) ^\n  j' =\n  \\<parallel>factor\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (j' * j')\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n  \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n  \\<le> \\<parallel>factor\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (j' * j')", "have approx_part_1: \"\\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g * \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor \\<le> \\<parallel>factor\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (j' * j')\""], ["proof (prove)\nusing this:\n  \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n  \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n  \\<le> \\<parallel>factor\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (j' * j')\n\ngoal (1 subgoal):\n 1. \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    \\<le> \\<parallel>factor\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (j' * j')", "."], ["proof (state)\nthis:\n  \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n  \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n  \\<le> \\<parallel>factor\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (j' * j')\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n  \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n  \\<le> \\<parallel>factor\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (j' * j')\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "fix f :: \"int poly\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "assume *: \"factor dvd f\" \"f \\<noteq> 0\""], ["proof (state)\nthis:\n  factor dvd f\n  f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "note approx_part_1"], ["proof (state)\nthis:\n  \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n  \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n  \\<le> \\<parallel>factor\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (j' * j')\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n  \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n  \\<le> \\<parallel>factor\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (j' * j')\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "have \"\\<parallel>factor\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (j' * j') \\<le> (2^(2*j') * \\<parallel>f\\<parallel>\\<^sup>2) ^ (2 * j') * 2 ^ (j' * j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>factor\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (j' * j')\n    \\<le> (2 ^ (2 * j') * \\<parallel>f\\<parallel>\\<^sup>2) ^ (2 * j') *\n          2 ^ (j' * j')", "by (rule mult_right_mono[OF power_mono], insert sq_norm_factor_bound[OF *], auto)"], ["proof (state)\nthis:\n  \\<parallel>factor\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (j' * j')\n  \\<le> (2 ^ (2 * j') * \\<parallel>f\\<parallel>\\<^sup>2) ^ (2 * j') *\n        2 ^ (j' * j')\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  \\<parallel>factor\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (j' * j')\n  \\<le> (2 ^ (2 * j') * \\<parallel>f\\<parallel>\\<^sup>2) ^ (2 * j') *\n        2 ^ (j' * j')\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "have \"\\<dots> = \\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (2*j' * 2*j' + j' * j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 ^ (2 * j') * \\<parallel>f\\<parallel>\\<^sup>2) ^ (2 * j') *\n    2 ^ (j' * j') =\n    \\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') *\n    2 ^ (2 * j' * 2 * j' + j' * j')", "unfolding power_mult_distrib power_add"], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 ^ (2 * j')) ^ (2 * j') * \\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') *\n    2 ^ (j' * j') =\n    \\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') *\n    (2 ^ (2 * j' * 2 * j') * 2 ^ (j' * j'))", "by (simp add: power_mult[symmetric])"], ["proof (state)\nthis:\n  (2 ^ (2 * j') * \\<parallel>f\\<parallel>\\<^sup>2) ^ (2 * j') *\n  2 ^ (j' * j') =\n  \\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') *\n  2 ^ (2 * j' * 2 * j' + j' * j')\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  (2 ^ (2 * j') * \\<parallel>f\\<parallel>\\<^sup>2) ^ (2 * j') *\n  2 ^ (j' * j') =\n  \\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') *\n  2 ^ (2 * j' * 2 * j' + j' * j')\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "have \"2*j' * 2*j' + j' * j' = 5 * j' * j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * j' * 2 * j' + j' * j' = 5 * j' * j'", "by simp"], ["proof (state)\nthis:\n  2 * j' * 2 * j' + j' * j' = 5 * j' * j'\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n  \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n  \\<le> \\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')", "have \"\\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g * \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor \\<le> \\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')\""], ["proof (prove)\nusing this:\n  \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n  \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n  \\<le> \\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')\n\ngoal (1 subgoal):\n 1. \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    \\<le> \\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')", "."], ["proof (state)\nthis:\n  \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n  \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n  \\<le> \\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  \\<lbrakk>factor dvd ?fa3; ?fa3 \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n                    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n                    \\<le> \\<parallel>?fa3\\<parallel>\\<^sup>2 ^ (2 * j') *\n                          2 ^ (5 * j' * j')\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "note approx = this"], ["proof (state)\nthis:\n  \\<lbrakk>factor dvd ?fa3; ?fa3 \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n                    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n                    \\<le> \\<parallel>?fa3\\<parallel>\\<^sup>2 ^ (2 * j') *\n                          2 ^ (5 * j' * j')\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "note approx_1 = approx[OF factor_f f0]"], ["proof (state)\nthis:\n  \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n  \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n  \\<le> \\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "note approx_2_part = approx[OF factor_F F0]"], ["proof (state)\nthis:\n  \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n  \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n  \\<le> \\<parallel>F\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "have large: \"\\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g * \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor < (p^ll)\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    < (p ^ ll)\\<^sup>2", "proof (cases \"ll = l\")"], ["proof (state)\ngoal (2 subgoals):\n 1. ll = l \\<Longrightarrow>\n    \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    < (p ^ ll)\\<^sup>2\n 2. ll \\<noteq> l \\<Longrightarrow>\n    \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    < (p ^ ll)\\<^sup>2", "case False"], ["proof (state)\nthis:\n  ll \\<noteq> l\n\ngoal (2 subgoals):\n 1. ll = l \\<Longrightarrow>\n    \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    < (p ^ ll)\\<^sup>2\n 2. ll \\<noteq> l \\<Longrightarrow>\n    \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    < (p ^ ll)\\<^sup>2", "let ?n = \"\\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')\""], ["proof (state)\ngoal (2 subgoals):\n 1. ll = l \\<Longrightarrow>\n    \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    < (p ^ ll)\\<^sup>2\n 2. ll \\<noteq> l \\<Longrightarrow>\n    \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    < (p ^ ll)\\<^sup>2", "have n: \"?n \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> \\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')", "by auto"], ["proof (state)\nthis:\n  0 \\<le> \\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')\n\ngoal (2 subgoals):\n 1. ll = l \\<Longrightarrow>\n    \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    < (p ^ ll)\\<^sup>2\n 2. ll \\<noteq> l \\<Longrightarrow>\n    \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    < (p ^ ll)\\<^sup>2", "let ?s = \"sqrt_int_ceiling ?n\""], ["proof (state)\ngoal (2 subgoals):\n 1. ll = l \\<Longrightarrow>\n    \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    < (p ^ ll)\\<^sup>2\n 2. ll \\<noteq> l \\<Longrightarrow>\n    \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    < (p ^ ll)\\<^sup>2", "from False"], ["proof (chain)\npicking this:\n  ll \\<noteq> l", "have \"ll = find_exponent p ?s\""], ["proof (prove)\nusing this:\n  ll \\<noteq> l\n\ngoal (1 subgoal):\n 1. ll =\n    find_exponent p\n     (sqrt_int_ceiling\n       (\\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')))", "unfolding ll_def Let_def"], ["proof (prove)\nusing this:\n  (if find_exponent p\n       (sqrt_int_ceiling\n         (\\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')))\n      < l\n   then find_exponent p\n         (sqrt_int_ceiling\n           (\\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')))\n   else l) \\<noteq>\n  l\n\ngoal (1 subgoal):\n 1. (if find_exponent p\n         (sqrt_int_ceiling\n           (\\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')))\n        < l\n     then find_exponent p\n           (sqrt_int_ceiling\n             (\\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') *\n              2 ^ (5 * j' * j')))\n     else l) =\n    find_exponent p\n     (sqrt_int_ceiling\n       (\\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')))", "by auto"], ["proof (state)\nthis:\n  ll =\n  find_exponent p\n   (sqrt_int_ceiling\n     (\\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')))\n\ngoal (2 subgoals):\n 1. ll = l \\<Longrightarrow>\n    \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    < (p ^ ll)\\<^sup>2\n 2. ll \\<noteq> l \\<Longrightarrow>\n    \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    < (p ^ ll)\\<^sup>2", "hence spll: \"?s < p^ll\""], ["proof (prove)\nusing this:\n  ll =\n  find_exponent p\n   (sqrt_int_ceiling\n     (\\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')))\n\ngoal (1 subgoal):\n 1. sqrt_int_ceiling\n     (\\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j'))\n    < p ^ ll", "using find_exponent(1)[OF p.m1]"], ["proof (prove)\nusing this:\n  ll =\n  find_exponent p\n   (sqrt_int_ceiling\n     (\\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')))\n  ?bnd < p ^ find_exponent p ?bnd\n\ngoal (1 subgoal):\n 1. sqrt_int_ceiling\n     (\\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j'))\n    < p ^ ll", "by auto"], ["proof (state)\nthis:\n  sqrt_int_ceiling\n   (\\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j'))\n  < p ^ ll\n\ngoal (2 subgoals):\n 1. ll = l \\<Longrightarrow>\n    \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    < (p ^ ll)\\<^sup>2\n 2. ll \\<noteq> l \\<Longrightarrow>\n    \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    < (p ^ ll)\\<^sup>2", "have \"sqrt ?n \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> sqrt\n             (real_of_int\n               (\\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') *\n                2 ^ (5 * j' * j')))", "by auto"], ["proof (state)\nthis:\n  0 \\<le> sqrt\n           (real_of_int\n             (\\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') *\n              2 ^ (5 * j' * j')))\n\ngoal (2 subgoals):\n 1. ll = l \\<Longrightarrow>\n    \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    < (p ^ ll)\\<^sup>2\n 2. ll \\<noteq> l \\<Longrightarrow>\n    \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    < (p ^ ll)\\<^sup>2", "hence sqrt: \"sqrt ?n > -1\""], ["proof (prove)\nusing this:\n  0 \\<le> sqrt\n           (real_of_int\n             (\\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') *\n              2 ^ (5 * j' * j')))\n\ngoal (1 subgoal):\n 1. - 1\n    < sqrt\n       (real_of_int\n         (\\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')))", "by linarith"], ["proof (state)\nthis:\n  - 1\n  < sqrt\n     (real_of_int\n       (\\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')))\n\ngoal (2 subgoals):\n 1. ll = l \\<Longrightarrow>\n    \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    < (p ^ ll)\\<^sup>2\n 2. ll \\<noteq> l \\<Longrightarrow>\n    \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    < (p ^ ll)\\<^sup>2", "have ns: \"?n \\<le> ?s^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')\n    \\<le> (sqrt_int_ceiling\n            (\\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') *\n             2 ^ (5 * j' * j')))\\<^sup>2", "using sqrt_int_ceiling_bound[OF n]"], ["proof (prove)\nusing this:\n  \\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')\n  \\<le> (sqrt_int_ceiling\n          (\\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') *\n           2 ^ (5 * j' * j')))\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')\n    \\<le> (sqrt_int_ceiling\n            (\\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') *\n             2 ^ (5 * j' * j')))\\<^sup>2", "."], ["proof (state)\nthis:\n  \\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')\n  \\<le> (sqrt_int_ceiling\n          (\\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') *\n           2 ^ (5 * j' * j')))\\<^sup>2\n\ngoal (2 subgoals):\n 1. ll = l \\<Longrightarrow>\n    \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    < (p ^ ll)\\<^sup>2\n 2. ll \\<noteq> l \\<Longrightarrow>\n    \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    < (p ^ ll)\\<^sup>2", "also"], ["proof (state)\nthis:\n  \\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')\n  \\<le> (sqrt_int_ceiling\n          (\\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') *\n           2 ^ (5 * j' * j')))\\<^sup>2\n\ngoal (2 subgoals):\n 1. ll = l \\<Longrightarrow>\n    \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    < (p ^ ll)\\<^sup>2\n 2. ll \\<noteq> l \\<Longrightarrow>\n    \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    < (p ^ ll)\\<^sup>2", "have \"\\<dots> < (p^ll)^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (sqrt_int_ceiling\n      (\\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') *\n       2 ^ (5 * j' * j')))\\<^sup>2\n    < (p ^ ll)\\<^sup>2", "by (rule power_strict_mono[OF spll], insert sqrt, auto)"], ["proof (state)\nthis:\n  (sqrt_int_ceiling\n    (\\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') *\n     2 ^ (5 * j' * j')))\\<^sup>2\n  < (p ^ ll)\\<^sup>2\n\ngoal (2 subgoals):\n 1. ll = l \\<Longrightarrow>\n    \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    < (p ^ ll)\\<^sup>2\n 2. ll \\<noteq> l \\<Longrightarrow>\n    \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    < (p ^ ll)\\<^sup>2", "finally"], ["proof (chain)\npicking this:\n  \\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')\n  < (p ^ ll)\\<^sup>2", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')\n  < (p ^ ll)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    < (p ^ ll)\\<^sup>2", "using approx_1"], ["proof (prove)\nusing this:\n  \\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')\n  < (p ^ ll)\\<^sup>2\n  \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n  \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n  \\<le> \\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')\n\ngoal (1 subgoal):\n 1. \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    < (p ^ ll)\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n  \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n  < (p ^ ll)\\<^sup>2\n\ngoal (1 subgoal):\n 1. ll = l \\<Longrightarrow>\n    \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    < (p ^ ll)\\<^sup>2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. ll = l \\<Longrightarrow>\n    \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    < (p ^ ll)\\<^sup>2", "case True"], ["proof (state)\nthis:\n  ll = l\n\ngoal (1 subgoal):\n 1. ll = l \\<Longrightarrow>\n    \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    < (p ^ ll)\\<^sup>2", "hence ll: \"p^ll = p^l\""], ["proof (prove)\nusing this:\n  ll = l\n\ngoal (1 subgoal):\n 1. p ^ ll = p ^ l", "by simp"], ["proof (state)\nthis:\n  p ^ ll = p ^ l\n\ngoal (1 subgoal):\n 1. ll = l \\<Longrightarrow>\n    \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    < (p ^ ll)\\<^sup>2", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    < (p ^ ll)\\<^sup>2", "unfolding ll"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    < (p ^ l)\\<^sup>2", "proof (rule less_le_trans[OF le_less_trans[OF approx_2_part] bound_l])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<parallel>F\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')\n    < 2 ^ N\\<^sup>2 * B2_LLL F ^ (2 * N)", "have \"\\<parallel>F\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j') \n          = 2 ^ (2 * j' * j' + 3 * j' * j') * \\<parallel>F\\<parallel>\\<^sup>2 ^ (j' + j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>F\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j') =\n    2 ^ (2 * j' * j' + 3 * j' * j') *\n    \\<parallel>F\\<parallel>\\<^sup>2 ^ (j' + j')", "unfolding mult_2"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>F\\<parallel>\\<^sup>2 ^ (j' + j') * 2 ^ (5 * j' * j') =\n    2 ^ ((j' + j') * j' + 3 * j' * j') *\n    \\<parallel>F\\<parallel>\\<^sup>2 ^ (j' + j')", "by simp"], ["proof (state)\nthis:\n  \\<parallel>F\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j') =\n  2 ^ (2 * j' * j' + 3 * j' * j') *\n  \\<parallel>F\\<parallel>\\<^sup>2 ^ (j' + j')\n\ngoal (1 subgoal):\n 1. \\<parallel>F\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')\n    < 2 ^ N\\<^sup>2 * B2_LLL F ^ (2 * N)", "also"], ["proof (state)\nthis:\n  \\<parallel>F\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j') =\n  2 ^ (2 * j' * j' + 3 * j' * j') *\n  \\<parallel>F\\<parallel>\\<^sup>2 ^ (j' + j')\n\ngoal (1 subgoal):\n 1. \\<parallel>F\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')\n    < 2 ^ N\\<^sup>2 * B2_LLL F ^ (2 * N)", "have \"\\<dots> < 2 ^ (N\\<^sup>2 + 4 * N*N) * \\<parallel>F\\<parallel>\\<^sup>2 ^ (2 * N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (2 * j' * j' + 3 * j' * j') *\n    \\<parallel>F\\<parallel>\\<^sup>2 ^ (j' + j')\n    < 2 ^ (N\\<^sup>2 + 4 * N * N) *\n      \\<parallel>F\\<parallel>\\<^sup>2 ^ (2 * N)", "proof (rule mult_less_le_imp_less[OF power_strict_increasing pow_mono_exp])"], ["proof (state)\ngoal (6 subgoals):\n 1. 2 * j' * j' + 3 * j' * j' < N\\<^sup>2 + 4 * N * N\n 2. 1 < 2\n 3. 1 \\<le> \\<parallel>F\\<parallel>\\<^sup>2\n 4. j' + j' \\<le> 2 * N\n 5. 0 \\<le> 2 ^ (2 * j' * j' + 3 * j' * j')\n 6. 0 < \\<parallel>F\\<parallel>\\<^sup>2 ^ (j' + j')", "show \"1 \\<le> \\<parallel>F\\<parallel>\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> \\<parallel>F\\<parallel>\\<^sup>2", "by (rule normF)"], ["proof (state)\nthis:\n  1 \\<le> \\<parallel>F\\<parallel>\\<^sup>2\n\ngoal (5 subgoals):\n 1. 2 * j' * j' + 3 * j' * j' < N\\<^sup>2 + 4 * N * N\n 2. 1 < 2\n 3. j' + j' \\<le> 2 * N\n 4. 0 \\<le> 2 ^ (2 * j' * j' + 3 * j' * j')\n 5. 0 < \\<parallel>F\\<parallel>\\<^sup>2 ^ (j' + j')", "have jN': \"j' < N\" and jN: \"j' \\<le> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j' < N &&& j' \\<le> N", "using jn divides_degree[OF \\<open>f dvd F\\<close>] F0"], ["proof (prove)\nusing this:\n  Suc j' \\<le> n\n  degree f \\<le> degree F \\<or> F = 0\n  F \\<noteq> 0\n\ngoal (1 subgoal):\n 1. j' < N &&& j' \\<le> N", "by auto"], ["proof (state)\nthis:\n  j' < N\n  j' \\<le> N\n\ngoal (5 subgoals):\n 1. 2 * j' * j' + 3 * j' * j' < N\\<^sup>2 + 4 * N * N\n 2. 1 < 2\n 3. j' + j' \\<le> 2 * N\n 4. 0 \\<le> 2 ^ (2 * j' * j' + 3 * j' * j')\n 5. 0 < \\<parallel>F\\<parallel>\\<^sup>2 ^ (j' + j')", "have \"j' + j' \\<le> j' + j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j' + j' \\<le> j' + j'", "using deg_g j'n"], ["proof (prove)\nusing this:\n  degree g \\<le> j'\n  j' < n\n\ngoal (1 subgoal):\n 1. j' + j' \\<le> j' + j'", "by auto"], ["proof (state)\nthis:\n  j' + j' \\<le> j' + j'\n\ngoal (5 subgoals):\n 1. 2 * j' * j' + 3 * j' * j' < N\\<^sup>2 + 4 * N * N\n 2. 1 < 2\n 3. j' + j' \\<le> 2 * N\n 4. 0 \\<le> 2 ^ (2 * j' * j' + 3 * j' * j')\n 5. 0 < \\<parallel>F\\<parallel>\\<^sup>2 ^ (j' + j')", "also"], ["proof (state)\nthis:\n  j' + j' \\<le> j' + j'\n\ngoal (5 subgoals):\n 1. 2 * j' * j' + 3 * j' * j' < N\\<^sup>2 + 4 * N * N\n 2. 1 < 2\n 3. j' + j' \\<le> 2 * N\n 4. 0 \\<le> 2 ^ (2 * j' * j' + 3 * j' * j')\n 5. 0 < \\<parallel>F\\<parallel>\\<^sup>2 ^ (j' + j')", "have \"\\<dots> = 2 * j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j' + j' = 2 * j'", "by auto"], ["proof (state)\nthis:\n  j' + j' = 2 * j'\n\ngoal (5 subgoals):\n 1. 2 * j' * j' + 3 * j' * j' < N\\<^sup>2 + 4 * N * N\n 2. 1 < 2\n 3. j' + j' \\<le> 2 * N\n 4. 0 \\<le> 2 ^ (2 * j' * j' + 3 * j' * j')\n 5. 0 < \\<parallel>F\\<parallel>\\<^sup>2 ^ (j' + j')", "also"], ["proof (state)\nthis:\n  j' + j' = 2 * j'\n\ngoal (5 subgoals):\n 1. 2 * j' * j' + 3 * j' * j' < N\\<^sup>2 + 4 * N * N\n 2. 1 < 2\n 3. j' + j' \\<le> 2 * N\n 4. 0 \\<le> 2 ^ (2 * j' * j' + 3 * j' * j')\n 5. 0 < \\<parallel>F\\<parallel>\\<^sup>2 ^ (j' + j')", "have \"\\<dots> \\<le> 2 * N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * j' \\<le> 2 * N", "using jN"], ["proof (prove)\nusing this:\n  j' \\<le> N\n\ngoal (1 subgoal):\n 1. 2 * j' \\<le> 2 * N", "by auto"], ["proof (state)\nthis:\n  2 * j' \\<le> 2 * N\n\ngoal (5 subgoals):\n 1. 2 * j' * j' + 3 * j' * j' < N\\<^sup>2 + 4 * N * N\n 2. 1 < 2\n 3. j' + j' \\<le> 2 * N\n 4. 0 \\<le> 2 ^ (2 * j' * j' + 3 * j' * j')\n 5. 0 < \\<parallel>F\\<parallel>\\<^sup>2 ^ (j' + j')", "finally"], ["proof (chain)\npicking this:\n  j' + j' \\<le> 2 * N", "show \"j' + j' \\<le> 2 * N\""], ["proof (prove)\nusing this:\n  j' + j' \\<le> 2 * N\n\ngoal (1 subgoal):\n 1. j' + j' \\<le> 2 * N", "."], ["proof (state)\nthis:\n  j' + j' \\<le> 2 * N\n\ngoal (4 subgoals):\n 1. 2 * j' * j' + 3 * j' * j' < N\\<^sup>2 + 4 * N * N\n 2. 1 < 2\n 3. 0 \\<le> 2 ^ (2 * j' * j' + 3 * j' * j')\n 4. 0 < \\<parallel>F\\<parallel>\\<^sup>2 ^ (j' + j')", "show \"0 < \\<parallel>F\\<parallel>\\<^sup>2 ^ (j' + j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < \\<parallel>F\\<parallel>\\<^sup>2 ^ (j' + j')", "by (rule zero_less_power, insert normF, auto)"], ["proof (state)\nthis:\n  0 < \\<parallel>F\\<parallel>\\<^sup>2 ^ (j' + j')\n\ngoal (3 subgoals):\n 1. 2 * j' * j' + 3 * j' * j' < N\\<^sup>2 + 4 * N * N\n 2. 1 < 2\n 3. 0 \\<le> 2 ^ (2 * j' * j' + 3 * j' * j')", "have \"2 * j' * j' + 3 * j' * j' \\<le> 2 * j' * j' + 3 * j' * j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * j' * j' + 3 * j' * j' \\<le> 2 * j' * j' + 3 * j' * j'", "by auto"], ["proof (state)\nthis:\n  2 * j' * j' + 3 * j' * j' \\<le> 2 * j' * j' + 3 * j' * j'\n\ngoal (3 subgoals):\n 1. 2 * j' * j' + 3 * j' * j' < N\\<^sup>2 + 4 * N * N\n 2. 1 < 2\n 3. 0 \\<le> 2 ^ (2 * j' * j' + 3 * j' * j')", "also"], ["proof (state)\nthis:\n  2 * j' * j' + 3 * j' * j' \\<le> 2 * j' * j' + 3 * j' * j'\n\ngoal (3 subgoals):\n 1. 2 * j' * j' + 3 * j' * j' < N\\<^sup>2 + 4 * N * N\n 2. 1 < 2\n 3. 0 \\<le> 2 ^ (2 * j' * j' + 3 * j' * j')", "have \"\\<dots> = 5 * (j' * j')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * j' * j' + 3 * j' * j' = 5 * (j' * j')", "by auto"], ["proof (state)\nthis:\n  2 * j' * j' + 3 * j' * j' = 5 * (j' * j')\n\ngoal (3 subgoals):\n 1. 2 * j' * j' + 3 * j' * j' < N\\<^sup>2 + 4 * N * N\n 2. 1 < 2\n 3. 0 \\<le> 2 ^ (2 * j' * j' + 3 * j' * j')", "also"], ["proof (state)\nthis:\n  2 * j' * j' + 3 * j' * j' = 5 * (j' * j')\n\ngoal (3 subgoals):\n 1. 2 * j' * j' + 3 * j' * j' < N\\<^sup>2 + 4 * N * N\n 2. 1 < 2\n 3. 0 \\<le> 2 ^ (2 * j' * j' + 3 * j' * j')", "have \"\\<dots> < 5 * (N * N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 5 * (j' * j') < 5 * (N * N)", "by (rule mult_strict_left_mono[OF mult_strict_mono], insert jN', auto)"], ["proof (state)\nthis:\n  5 * (j' * j') < 5 * (N * N)\n\ngoal (3 subgoals):\n 1. 2 * j' * j' + 3 * j' * j' < N\\<^sup>2 + 4 * N * N\n 2. 1 < 2\n 3. 0 \\<le> 2 ^ (2 * j' * j' + 3 * j' * j')", "also"], ["proof (state)\nthis:\n  5 * (j' * j') < 5 * (N * N)\n\ngoal (3 subgoals):\n 1. 2 * j' * j' + 3 * j' * j' < N\\<^sup>2 + 4 * N * N\n 2. 1 < 2\n 3. 0 \\<le> 2 ^ (2 * j' * j' + 3 * j' * j')", "have \"\\<dots> = N\\<^sup>2 + 4 * N * N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 5 * (N * N) = N\\<^sup>2 + 4 * N * N", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  5 * (N * N) = N\\<^sup>2 + 4 * N * N\n\ngoal (3 subgoals):\n 1. 2 * j' * j' + 3 * j' * j' < N\\<^sup>2 + 4 * N * N\n 2. 1 < 2\n 3. 0 \\<le> 2 ^ (2 * j' * j' + 3 * j' * j')", "finally"], ["proof (chain)\npicking this:\n  2 * j' * j' + 3 * j' * j' < N\\<^sup>2 + 4 * N * N", "show \"2 * j' * j' + 3 * j' * j' < N\\<^sup>2 + 4 * N * N\""], ["proof (prove)\nusing this:\n  2 * j' * j' + 3 * j' * j' < N\\<^sup>2 + 4 * N * N\n\ngoal (1 subgoal):\n 1. 2 * j' * j' + 3 * j' * j' < N\\<^sup>2 + 4 * N * N", "."], ["proof (state)\nthis:\n  2 * j' * j' + 3 * j' * j' < N\\<^sup>2 + 4 * N * N\n\ngoal (2 subgoals):\n 1. 1 < 2\n 2. 0 \\<le> 2 ^ (2 * j' * j' + 3 * j' * j')", "qed auto"], ["proof (state)\nthis:\n  2 ^ (2 * j' * j' + 3 * j' * j') *\n  \\<parallel>F\\<parallel>\\<^sup>2 ^ (j' + j')\n  < 2 ^ (N\\<^sup>2 + 4 * N * N) * \\<parallel>F\\<parallel>\\<^sup>2 ^ (2 * N)\n\ngoal (1 subgoal):\n 1. \\<parallel>F\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')\n    < 2 ^ N\\<^sup>2 * B2_LLL F ^ (2 * N)", "also"], ["proof (state)\nthis:\n  2 ^ (2 * j' * j' + 3 * j' * j') *\n  \\<parallel>F\\<parallel>\\<^sup>2 ^ (j' + j')\n  < 2 ^ (N\\<^sup>2 + 4 * N * N) * \\<parallel>F\\<parallel>\\<^sup>2 ^ (2 * N)\n\ngoal (1 subgoal):\n 1. \\<parallel>F\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')\n    < 2 ^ N\\<^sup>2 * B2_LLL F ^ (2 * N)", "have \"\\<dots> = 2 ^ N\\<^sup>2 * (2 ^ (2 * N) * \\<parallel>F\\<parallel>\\<^sup>2) ^ (2 * N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (N\\<^sup>2 + 4 * N * N) *\n    \\<parallel>F\\<parallel>\\<^sup>2 ^ (2 * N) =\n    2 ^ N\\<^sup>2 *\n    (2 ^ (2 * N) * \\<parallel>F\\<parallel>\\<^sup>2) ^ (2 * N)", "unfolding power_mult_distrib power_add"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ N\\<^sup>2 * 2 ^ (4 * N * N) *\n    \\<parallel>F\\<parallel>\\<^sup>2 ^ (2 * N) =\n    2 ^ N\\<^sup>2 *\n    ((2 ^ (2 * N)) ^ (2 * N) * \\<parallel>F\\<parallel>\\<^sup>2 ^ (2 * N))", "by (simp add: power_mult[symmetric])"], ["proof (state)\nthis:\n  2 ^ (N\\<^sup>2 + 4 * N * N) * \\<parallel>F\\<parallel>\\<^sup>2 ^ (2 * N) =\n  2 ^ N\\<^sup>2 * (2 ^ (2 * N) * \\<parallel>F\\<parallel>\\<^sup>2) ^ (2 * N)\n\ngoal (1 subgoal):\n 1. \\<parallel>F\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')\n    < 2 ^ N\\<^sup>2 * B2_LLL F ^ (2 * N)", "finally"], ["proof (chain)\npicking this:\n  \\<parallel>F\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')\n  < 2 ^ N\\<^sup>2 *\n    (2 ^ (2 * N) * \\<parallel>F\\<parallel>\\<^sup>2) ^ (2 * N)", "show \"\\<parallel>F\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j') < 2 ^ N\\<^sup>2 * B2_LLL F ^ (2 * N)\""], ["proof (prove)\nusing this:\n  \\<parallel>F\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')\n  < 2 ^ N\\<^sup>2 *\n    (2 ^ (2 * N) * \\<parallel>F\\<parallel>\\<^sup>2) ^ (2 * N)\n\ngoal (1 subgoal):\n 1. \\<parallel>F\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')\n    < 2 ^ N\\<^sup>2 * B2_LLL F ^ (2 * N)", "unfolding B2_LLL_def"], ["proof (prove)\nusing this:\n  \\<parallel>F\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')\n  < 2 ^ N\\<^sup>2 *\n    (2 ^ (2 * N) * \\<parallel>F\\<parallel>\\<^sup>2) ^ (2 * N)\n\ngoal (1 subgoal):\n 1. \\<parallel>F\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')\n    < 2 ^ N\\<^sup>2 *\n      (2 ^ (2 * degree F) * \\<parallel>F\\<parallel>\\<^sup>2) ^ (2 * N)", "by simp"], ["proof (state)\nthis:\n  \\<parallel>F\\<parallel>\\<^sup>2 ^ (2 * j') * 2 ^ (5 * j' * j')\n  < 2 ^ N\\<^sup>2 * B2_LLL F ^ (2 * N)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n  \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n  < (p ^ ll)\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n  \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n  < (p ^ ll)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "have \"(\\<bar>lead_coeff g\\<bar>)^2 < (p^ll)^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>lead_coeff g\\<bar>\\<^sup>2 < (p ^ ll)\\<^sup>2", "proof (rule le_less_trans[OF _ large])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<bar>lead_coeff g\\<bar>\\<^sup>2\n    \\<le> \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n          \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor", "have \"1 * (\\<bar>lead_coeff g\\<bar>\\<^sup>2)^1 \\<le> \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g * \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 * \\<bar>lead_coeff g\\<bar>\\<^sup>2 ^ 1\n    \\<le> \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n          \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor", "by (rule mult_mono[OF _ order.trans[OF power_mono pow_mono_exp]], \n      insert normg normf1 deg_f g0 coeff_le_sq_norm[of g] j'0, \n      auto intro: pow_mono_one)"], ["proof (state)\nthis:\n  1 * \\<bar>lead_coeff g\\<bar>\\<^sup>2 ^ 1\n  \\<le> \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n        \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n\ngoal (1 subgoal):\n 1. \\<bar>lead_coeff g\\<bar>\\<^sup>2\n    \\<le> \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n          \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor", "thus \"\\<bar>lead_coeff g\\<bar>\\<^sup>2 \\<le> \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g * \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\""], ["proof (prove)\nusing this:\n  1 * \\<bar>lead_coeff g\\<bar>\\<^sup>2 ^ 1\n  \\<le> \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n        \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n\ngoal (1 subgoal):\n 1. \\<bar>lead_coeff g\\<bar>\\<^sup>2\n    \\<le> \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n          \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor", "by simp"], ["proof (state)\nthis:\n  \\<bar>lead_coeff g\\<bar>\\<^sup>2\n  \\<le> \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n        \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<bar>lead_coeff g\\<bar>\\<^sup>2 < (p ^ ll)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"(lead_coeff g)^2 < (p^ll)^2\""], ["proof (prove)\nusing this:\n  \\<bar>lead_coeff g\\<bar>\\<^sup>2 < (p ^ ll)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (lead_coeff g)\\<^sup>2 < (p ^ ll)\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  (lead_coeff g)\\<^sup>2 < (p ^ ll)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"\\<bar>lead_coeff g\\<bar> < p^ll\""], ["proof (prove)\nusing this:\n  (lead_coeff g)\\<^sup>2 < (p ^ ll)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<bar>lead_coeff g\\<bar> < p ^ ll", "using p.m1 abs_le_square_iff[of \"p^ll\" \"lead_coeff g\"]"], ["proof (prove)\nusing this:\n  (lead_coeff g)\\<^sup>2 < (p ^ ll)\\<^sup>2\n  1 < p\n  (\\<bar>p ^ ll\\<bar> \\<le> \\<bar>lead_coeff g\\<bar>) =\n  ((p ^ ll)\\<^sup>2 \\<le> (lead_coeff g)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<bar>lead_coeff g\\<bar> < p ^ ll", "by auto"], ["proof (state)\nthis:\n  \\<bar>lead_coeff g\\<bar> < p ^ ll\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"(p^ll \\<le> \\<bar>lead_coeff g\\<bar>) = False\""], ["proof (prove)\nusing this:\n  \\<bar>lead_coeff g\\<bar> < p ^ ll\n\ngoal (1 subgoal):\n 1. (p ^ ll \\<le> \\<bar>lead_coeff g\\<bar>) = False", "by auto"], ["proof (state)\nthis:\n  (p ^ ll \\<le> \\<bar>lead_coeff g\\<bar>) = False\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "note ret = ret[unfolded this if_False]"], ["proof (state)\nthis:\n  (case div_int_poly f (primitive_part g) of None \\<Rightarrow> None\n   | Some f' \\<Rightarrow>\n       Some\n        (filter (\\<lambda>gi. \\<not> p.dvdm gi (primitive_part g)) gs,\n         lead_coeff f', f', primitive_part g)) =\n  None\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "have deg_f: \"degree f > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < degree f", "using n0"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. 0 < degree f", "by auto"], ["proof (state)\nthis:\n  0 < degree f\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "have deg_ug: \"degree u \\<le> degree g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree u \\<le> degree g", "proof (rule pll.dvdm_degree[OF u LLL(3)], standard)"], ["proof (state)\ngoal (1 subgoal):\n 1. pll.Mp g = 0 \\<Longrightarrow> False", "assume \"pll.Mp g = 0\""], ["proof (state)\nthis:\n  pll.Mp g = 0\n\ngoal (1 subgoal):\n 1. pll.Mp g = 0 \\<Longrightarrow> False", "from arg_cong[OF this, of \"\\<lambda> p. coeff p (degree g)\"]"], ["proof (chain)\npicking this:\n  coeff (pll.Mp g) (degree g) = coeff 0 (degree g)", "have \"pll.M (coeff g (degree g)) = 0\""], ["proof (prove)\nusing this:\n  coeff (pll.Mp g) (degree g) = coeff 0 (degree g)\n\ngoal (1 subgoal):\n 1. pll.M (lead_coeff g) = 0", "by (auto simp: pll.Mp_def coeff_map_poly)"], ["proof (state)\nthis:\n  pll.M (lead_coeff g) = 0\n\ngoal (1 subgoal):\n 1. pll.Mp g = 0 \\<Longrightarrow> False", "from this[unfolded pll.M_def]"], ["proof (chain)\npicking this:\n  lead_coeff g mod p ^ ll = 0", "obtain c where lg: \"lead_coeff g = p^ll * c\""], ["proof (prove)\nusing this:\n  lead_coeff g mod p ^ ll = 0\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        lead_coeff g = p ^ ll * c \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  lead_coeff g = p ^ ll * c\n\ngoal (1 subgoal):\n 1. pll.Mp g = 0 \\<Longrightarrow> False", "with LLL(2)"], ["proof (chain)\npicking this:\n  g \\<noteq> 0\n  lead_coeff g = p ^ ll * c", "have c0: \"c \\<noteq> 0\""], ["proof (prove)\nusing this:\n  g \\<noteq> 0\n  lead_coeff g = p ^ ll * c\n\ngoal (1 subgoal):\n 1. c \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. pll.Mp g = 0 \\<Longrightarrow> False", "hence \"(p^ll)^2 \\<le> (lead_coeff g)^2\""], ["proof (prove)\nusing this:\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (p ^ ll)\\<^sup>2 \\<le> (lead_coeff g)\\<^sup>2", "unfolding lg abs_le_square_iff[symmetric]"], ["proof (prove)\nusing this:\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<bar>p ^ ll\\<bar> \\<le> \\<bar>p ^ ll * c\\<bar>", "by (rule aux_abs_int)"], ["proof (state)\nthis:\n  (p ^ ll)\\<^sup>2 \\<le> (lead_coeff g)\\<^sup>2\n\ngoal (1 subgoal):\n 1. pll.Mp g = 0 \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  (p ^ ll)\\<^sup>2 \\<le> (lead_coeff g)\\<^sup>2\n\ngoal (1 subgoal):\n 1. pll.Mp g = 0 \\<Longrightarrow> False", "have \"\\<dots> \\<le> \\<parallel>g\\<parallel>\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (lead_coeff g)\\<^sup>2 \\<le> \\<parallel>g\\<parallel>\\<^sup>2", "using coeff_le_sq_norm[of g]"], ["proof (prove)\nusing this:\n  \\<bar>coeff g ?i\\<bar>\\<^sup>2 \\<le> \\<parallel>g\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. (lead_coeff g)\\<^sup>2 \\<le> \\<parallel>g\\<parallel>\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  (lead_coeff g)\\<^sup>2 \\<le> \\<parallel>g\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. pll.Mp g = 0 \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  (lead_coeff g)\\<^sup>2 \\<le> \\<parallel>g\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. pll.Mp g = 0 \\<Longrightarrow> False", "have \"\\<dots> = \\<parallel>g\\<parallel>\\<^sup>2 ^ 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>g\\<parallel>\\<^sup>2 = \\<parallel>g\\<parallel>\\<^sup>2 ^ 1", "by simp"], ["proof (state)\nthis:\n  \\<parallel>g\\<parallel>\\<^sup>2 = \\<parallel>g\\<parallel>\\<^sup>2 ^ 1\n\ngoal (1 subgoal):\n 1. pll.Mp g = 0 \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  \\<parallel>g\\<parallel>\\<^sup>2 = \\<parallel>g\\<parallel>\\<^sup>2 ^ 1\n\ngoal (1 subgoal):\n 1. pll.Mp g = 0 \\<Longrightarrow> False", "have \"\\<dots> \\<le> \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>g\\<parallel>\\<^sup>2 ^ 1\n    \\<le> \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor", "by (rule pow_mono_exp, insert deg_f normg j'0, auto)"], ["proof (state)\nthis:\n  \\<parallel>g\\<parallel>\\<^sup>2 ^ 1\n  \\<le> \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n\ngoal (1 subgoal):\n 1. pll.Mp g = 0 \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  \\<parallel>g\\<parallel>\\<^sup>2 ^ 1\n  \\<le> \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n\ngoal (1 subgoal):\n 1. pll.Mp g = 0 \\<Longrightarrow> False", "have \"\\<dots> = 1 * \\<dots>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor =\n    1 * \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor", "by simp"], ["proof (state)\nthis:\n  \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor =\n  1 * \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n\ngoal (1 subgoal):\n 1. pll.Mp g = 0 \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor =\n  1 * \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n\ngoal (1 subgoal):\n 1. pll.Mp g = 0 \\<Longrightarrow> False", "have \"\\<dots> \\<le> \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g * \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 * \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    \\<le> \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n          \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor", "by (rule mult_right_mono, insert normf1, auto)"], ["proof (state)\nthis:\n  1 * \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n  \\<le> \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n        \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n\ngoal (1 subgoal):\n 1. pll.Mp g = 0 \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  1 * \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n  \\<le> \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n        \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n\ngoal (1 subgoal):\n 1. pll.Mp g = 0 \\<Longrightarrow> False", "have \"\\<dots> < (p^ll)\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n    < (p ^ ll)\\<^sup>2", "by (rule large)"], ["proof (state)\nthis:\n  \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n  \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n  < (p ^ ll)\\<^sup>2\n\ngoal (1 subgoal):\n 1. pll.Mp g = 0 \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n  \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n  < \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor", "show False"], ["proof (prove)\nusing this:\n  \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n  \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n  < \\<parallel>factor\\<parallel>\\<^sup>2 ^ degree g *\n    \\<parallel>g\\<parallel>\\<^sup>2 ^ degree factor\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  degree u \\<le> degree g\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "with deg_u"], ["proof (chain)\npicking this:\n  0 < degree u\n  degree u \\<le> degree g", "have deg_g: \"degree g > 0\""], ["proof (prove)\nusing this:\n  0 < degree u\n  degree u \\<le> degree g\n\ngoal (1 subgoal):\n 1. 0 < degree g", "by simp"], ["proof (state)\nthis:\n  0 < degree g\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "from j'0"], ["proof (chain)\npicking this:\n  0 < j'", "have deg_factor: \"degree factor > 0\""], ["proof (prove)\nusing this:\n  0 < j'\n\ngoal (1 subgoal):\n 1. 0 < degree factor", "by simp"], ["proof (state)\nthis:\n  0 < degree factor\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "let ?g = \"gcd factor g\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "from common_factor_via_short[OF deg_factor deg_g u deg_u pll_u_factor LLL(3) large] pll.m1"], ["proof (chain)\npicking this:\n  0 \\<le> p ^ ll \\<Longrightarrow> 0 < degree (gcd factor g)\n  1 < p ^ ll", "have gcd: \"0 < degree ?g\""], ["proof (prove)\nusing this:\n  0 \\<le> p ^ ll \\<Longrightarrow> 0 < degree (gcd factor g)\n  1 < p ^ ll\n\ngoal (1 subgoal):\n 1. 0 < degree (gcd factor g)", "by auto"], ["proof (state)\nthis:\n  0 < degree (gcd factor g)\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "have gcd_factor: \"?g dvd factor\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd factor g dvd factor", "by auto"], ["proof (state)\nthis:\n  gcd factor g dvd factor\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "from dvd_trans[OF this factor_f]"], ["proof (chain)\npicking this:\n  gcd factor g dvd f", "have gcd_f: \"?g dvd f\""], ["proof (prove)\nusing this:\n  gcd factor g dvd f\n\ngoal (1 subgoal):\n 1. gcd factor g dvd f", "."], ["proof (state)\nthis:\n  gcd factor g dvd f\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "from deg_g"], ["proof (chain)\npicking this:\n  0 < degree g", "have g0: \"g \\<noteq> 0\""], ["proof (prove)\nusing this:\n  0 < degree g\n\ngoal (1 subgoal):\n 1. g \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "have gcd_g: \"degree ?g \\<le> degree g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree (gcd factor g) \\<le> degree g", "using g0"], ["proof (prove)\nusing this:\n  g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. degree (gcd factor g) \\<le> degree g", "using divides_degree"], ["proof (prove)\nusing this:\n  g \\<noteq> 0\n  ?p dvd ?q \\<Longrightarrow> degree ?p \\<le> degree ?q \\<or> ?q = 0\n\ngoal (1 subgoal):\n 1. degree (gcd factor g) \\<le> degree g", "by blast"], ["proof (state)\nthis:\n  degree (gcd factor g) \\<le> degree g\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "from gcd_g LLL(1)"], ["proof (chain)\npicking this:\n  degree (gcd factor g) \\<le> degree g\n  degree g < Suc j'", "have hj': \"degree ?g \\<le> j'\""], ["proof (prove)\nusing this:\n  degree (gcd factor g) \\<le> degree g\n  degree g < Suc j'\n\ngoal (1 subgoal):\n 1. degree (gcd factor g) \\<le> j'", "by auto"], ["proof (state)\nthis:\n  degree (gcd factor g) \\<le> j'\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "let ?pp = \"primitive_part g\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "from ret"], ["proof (chain)\npicking this:\n  (case div_int_poly f (primitive_part g) of None \\<Rightarrow> None\n   | Some f' \\<Rightarrow>\n       Some\n        (filter (\\<lambda>gi. \\<not> p.dvdm gi (primitive_part g)) gs,\n         lead_coeff f', f', primitive_part g)) =\n  None", "have \"div_int_poly f ?pp = None\""], ["proof (prove)\nusing this:\n  (case div_int_poly f (primitive_part g) of None \\<Rightarrow> None\n   | Some f' \\<Rightarrow>\n       Some\n        (filter (\\<lambda>gi. \\<not> p.dvdm gi (primitive_part g)) gs,\n         lead_coeff f', f', primitive_part g)) =\n  None\n\ngoal (1 subgoal):\n 1. div_int_poly f (primitive_part g) = None", "by (auto split: option.splits)"], ["proof (state)\nthis:\n  div_int_poly f (primitive_part g) = None\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "from div_int_poly[of f ?pp, unfolded this] g0"], ["proof (chain)\npicking this:\n  (None = Some ?r) =\n  (primitive_part g \\<noteq> 0 \\<and> f = ?r * primitive_part g)\n  g \\<noteq> 0", "have ppf: \"\\<not> ?pp dvd f\""], ["proof (prove)\nusing this:\n  (None = Some ?r) =\n  (primitive_part g \\<noteq> 0 \\<and> f = ?r * primitive_part g)\n  g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> primitive_part g dvd f", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  (None = Some ?r) =\n  (primitive_part g \\<noteq> 0 \\<and> f = ?r * primitive_part g)\n  g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<nexists>k. f = primitive_part g * k", "by (auto simp: ac_simps)"], ["proof (state)\nthis:\n  \\<not> primitive_part g dvd f\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "have irr_f1: \"irreducible\\<^sub>d factor\""], ["proof (prove)\ngoal (1 subgoal):\n 1. irreducible\\<^sub>d factor", "by (rule factor_irreducible\\<^sub>dI[OF factor_f pu_factor deg_factor], simp)"], ["proof (state)\nthis:\n  irreducible\\<^sub>d factor\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "from gcd_factor"], ["proof (chain)\npicking this:\n  gcd factor g dvd factor", "obtain h where factor: \"factor = ?g * h\""], ["proof (prove)\nusing this:\n  gcd factor g dvd factor\n\ngoal (1 subgoal):\n 1. (\\<And>h.\n        factor = gcd factor g * h \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  \\<exists>k. factor = gcd factor g * k\n\ngoal (1 subgoal):\n 1. (\\<And>h.\n        factor = gcd factor g * h \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  factor = gcd factor g * h\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "from irreducible\\<^sub>dD(2)[OF irr_f1, of ?g h, folded factor]"], ["proof (chain)\npicking this:\n  \\<lbrakk>degree (gcd factor g) < degree factor;\n   degree h < degree factor\\<rbrakk>\n  \\<Longrightarrow> factor \\<noteq> factor", "have \"\\<not> (degree ?g < j' \\<and> degree h < j')\""], ["proof (prove)\nusing this:\n  \\<lbrakk>degree (gcd factor g) < degree factor;\n   degree h < degree factor\\<rbrakk>\n  \\<Longrightarrow> factor \\<noteq> factor\n\ngoal (1 subgoal):\n 1. \\<not> (degree (gcd factor g) < j' \\<and> degree h < j')", "by auto"], ["proof (state)\nthis:\n  \\<not> (degree (gcd factor g) < j' \\<and> degree h < j')\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  \\<not> (degree (gcd factor g) < j' \\<and> degree h < j')\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "have \"j' = degree ?g + degree h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j' = degree (gcd factor g) + degree h", "using factor0 arg_cong[OF factor, of degree]"], ["proof (prove)\nusing this:\n  factor \\<noteq> 0\n  degree factor = degree (gcd factor g * h)\n\ngoal (1 subgoal):\n 1. j' = degree (gcd factor g) + degree h", "by (subst (asm) degree_mult_eq, insert j'0, auto)"], ["proof (state)\nthis:\n  j' = degree (gcd factor g) + degree h\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> (degree (gcd factor g) < j' \\<and> degree h < j')\n  j' = degree (gcd factor g) + degree h", "have \"degree h = 0\""], ["proof (prove)\nusing this:\n  \\<not> (degree (gcd factor g) < j' \\<and> degree h < j')\n  j' = degree (gcd factor g) + degree h\n\ngoal (1 subgoal):\n 1. degree h = 0", "using gcd"], ["proof (prove)\nusing this:\n  \\<not> (degree (gcd factor g) < j' \\<and> degree h < j')\n  j' = degree (gcd factor g) + degree h\n  0 < degree (gcd factor g)\n\ngoal (1 subgoal):\n 1. degree h = 0", "by linarith"], ["proof (state)\nthis:\n  degree h = 0\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "from degree0_coeffs[OF this] factor factor0"], ["proof (chain)\npicking this:\n  \\<exists>a. h = [:a:]\n  factor = gcd factor g * h\n  factor \\<noteq> 0", "obtain c where h: \"h = [:c:]\" and c: \"c \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<exists>a. h = [:a:]\n  factor = gcd factor g * h\n  factor \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>h = [:c:]; c \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  h = [:c:]\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "from arg_cong[OF factor, of degree]"], ["proof (chain)\npicking this:\n  degree factor = degree (gcd factor g * h)", "have id: \"degree ?g = degree factor\""], ["proof (prove)\nusing this:\n  degree factor = degree (gcd factor g * h)\n\ngoal (1 subgoal):\n 1. degree (gcd factor g) = degree factor", "unfolding h"], ["proof (prove)\nusing this:\n  degree factor = degree (gcd factor g * [:c:])\n\ngoal (1 subgoal):\n 1. degree (gcd factor g) = degree factor", "using c"], ["proof (prove)\nusing this:\n  degree factor = degree (gcd factor g * [:c:])\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. degree (gcd factor g) = degree factor", "by auto"], ["proof (state)\nthis:\n  degree (gcd factor g) = degree factor\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  degree (gcd factor g) = degree factor\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "have \"degree ?g \\<le> degree g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree (gcd factor g) \\<le> degree g", "by (subst gcd.commute, rule degree_gcd1[OF g0])"], ["proof (state)\nthis:\n  degree (gcd factor g) \\<le> degree g\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  degree (gcd factor g) = degree factor\n  degree (gcd factor g) \\<le> degree g", "have \"degree g \\<ge> degree factor\""], ["proof (prove)\nusing this:\n  degree (gcd factor g) = degree factor\n  degree (gcd factor g) \\<le> degree g\n\ngoal (1 subgoal):\n 1. degree factor \\<le> degree g", "by auto"], ["proof (state)\nthis:\n  degree factor \\<le> degree g\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "with id deg_factor2 deg_g_j"], ["proof (chain)\npicking this:\n  degree (gcd factor g) = degree factor\n  \\<not> Suc j' \\<le> degree factor\n  degree g < Suc j'\n  degree factor \\<le> degree g", "have deg: \"degree ?g = degree g\" \n    and \"degree g = degree factor\""], ["proof (prove)\nusing this:\n  degree (gcd factor g) = degree factor\n  \\<not> Suc j' \\<le> degree factor\n  degree g < Suc j'\n  degree factor \\<le> degree g\n\ngoal (1 subgoal):\n 1. degree (gcd factor g) = degree g &&& degree g = degree factor", "by auto"], ["proof (state)\nthis:\n  degree (gcd factor g) = degree g\n  degree g = degree factor\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "have \"?g dvd g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd factor g dvd g", "by auto"], ["proof (state)\nthis:\n  gcd factor g dvd g\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  gcd factor g dvd g", "obtain q where g: \"g = ?g * q\""], ["proof (prove)\nusing this:\n  gcd factor g dvd g\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        g = gcd factor g * q \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  \\<exists>k. g = gcd factor g * k\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        g = gcd factor g * q \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  g = gcd factor g * q\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "from arg_cong[OF this, of degree] deg"], ["proof (chain)\npicking this:\n  degree g = degree (gcd factor g * q)\n  degree (gcd factor g) = degree g", "have \"degree q = 0\""], ["proof (prove)\nusing this:\n  degree g = degree (gcd factor g * q)\n  degree (gcd factor g) = degree g\n\ngoal (1 subgoal):\n 1. degree q = 0", "by (subst (asm) degree_mult_eq, insert g g0, force, force) simp"], ["proof (state)\nthis:\n  degree q = 0\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "from degree0_coeffs[OF this] g g0"], ["proof (chain)\npicking this:\n  \\<exists>a. q = [:a:]\n  g = gcd factor g * q\n  g \\<noteq> 0", "obtain d where p: \"q = [:d:]\" and d: \"d \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<exists>a. q = [:a:]\n  g = gcd factor g * q\n  g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>d.\n        \\<lbrakk>q = [:d:]; d \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  q = [:d:]\n  d \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "from arg_cong[OF factor, of \"(*) q\"]"], ["proof (chain)\npicking this:\n  q * factor = q * (gcd factor g * h)", "have \"q * factor = h * g\""], ["proof (prove)\nusing this:\n  q * factor = q * (gcd factor g * h)\n\ngoal (1 subgoal):\n 1. q * factor = h * g", "by (subst g, auto simp: ac_simps)"], ["proof (state)\nthis:\n  q * factor = h * g\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"smult d factor = h * g\""], ["proof (prove)\nusing this:\n  q * factor = h * g\n\ngoal (1 subgoal):\n 1. smult d factor = h * g", "unfolding p h"], ["proof (prove)\nusing this:\n  [:d:] * factor = [:c:] * g\n\ngoal (1 subgoal):\n 1. smult d factor = [:c:] * g", "by auto"], ["proof (state)\nthis:\n  smult d factor = h * g\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"g dvd smult d factor\""], ["proof (prove)\nusing this:\n  smult d factor = h * g\n\ngoal (1 subgoal):\n 1. g dvd smult d factor", "by simp"], ["proof (state)\nthis:\n  g dvd smult d factor\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "from dvd_smult_int[OF d this]"], ["proof (chain)\npicking this:\n  primitive_part g dvd factor", "have \"primitive_part g dvd factor\""], ["proof (prove)\nusing this:\n  primitive_part g dvd factor\n\ngoal (1 subgoal):\n 1. primitive_part g dvd factor", "."], ["proof (state)\nthis:\n  primitive_part g dvd factor\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<not> Suc j' \\<le> degree factor\\<rbrakk>\n       \\<Longrightarrow> False", "from dvd_trans[OF this factor_f] ppf"], ["proof (chain)\npicking this:\n  primitive_part g dvd f\n  \\<not> primitive_part g dvd f", "show False"], ["proof (prove)\nusing this:\n  primitive_part g dvd f\n  \\<not> primitive_part g dvd f\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma LLL_reconstruction_inner_sound:\n  assumes ret: \"LLL_reconstruction_inner p l gs f u Degs j = Some (gs',b',f',h)\" \n  shows \"f = f' * h\" (is \"?g1\")\n    and \"irreducible\\<^sub>d h\" (is \"?g2\")\n    and \"b' = lead_coeff f'\" (is \"?g3\")\n    and \"pl.unique_factorization_m f' (lead_coeff f', mset gs')\" (is \"?g4\")\n    and \"p.dvdm u h\" (is ?g5)\n    and \"degree h = j'\" (is ?g6)\n    and \"length gs' < length gs\" (is ?g7)\n    and \"set gs' \\<subseteq> set gs\" (is ?g8)\n    and \"gs' \\<noteq> []\" (is ?g9)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((f = f' * h &&& irreducible\\<^sub>d h) &&&\n     b' = lead_coeff f' &&&\n     pl.unique_factorization_m f' (lead_coeff f', mset gs')) &&&\n    (p.dvdm u h &&& degree h = j') &&&\n    length gs' < length gs &&&\n    set gs' \\<subseteq> set gs &&& gs' \\<noteq> []", "proof -"], ["proof (state)\ngoal (9 subgoals):\n 1. f = f' * h\n 2. irreducible\\<^sub>d h\n 3. b' = lead_coeff f'\n 4. pl.unique_factorization_m f' (lead_coeff f', mset gs')\n 5. p.dvdm u h\n 6. degree h = j'\n 7. length gs' < length gs\n 8. set gs' \\<subseteq> set gs\n 9. gs' \\<noteq> []", "let ?ppg = \"primitive_part g\""], ["proof (state)\ngoal (9 subgoals):\n 1. f = f' * h\n 2. irreducible\\<^sub>d h\n 3. b' = lead_coeff f'\n 4. pl.unique_factorization_m f' (lead_coeff f', mset gs')\n 5. p.dvdm u h\n 6. degree h = j'\n 7. length gs' < length gs\n 8. set gs' \\<subseteq> set gs\n 9. gs' \\<noteq> []", "note ret = ret[unfolded LLL_reconstruction_inner_simps]"], ["proof (state)\nthis:\n  (if j' \\<notin> Degs then None\n   else if p ^ ll \\<le> \\<bar>lead_coeff g\\<bar> then None\n        else case div_int_poly f (primitive_part g) of\n             None \\<Rightarrow> None\n             | Some f' \\<Rightarrow>\n                 Some\n                  (filter (\\<lambda>gi. \\<not> p.dvdm gi (primitive_part g))\n                    gs,\n                   lead_coeff f', f', primitive_part g)) =\n  Some (gs', b', f', h)\n\ngoal (9 subgoals):\n 1. f = f' * h\n 2. irreducible\\<^sub>d h\n 3. b' = lead_coeff f'\n 4. pl.unique_factorization_m f' (lead_coeff f', mset gs')\n 5. p.dvdm u h\n 6. degree h = j'\n 7. length gs' < length gs\n 8. set gs' \\<subseteq> set gs\n 9. gs' \\<noteq> []", "from ret"], ["proof (chain)\npicking this:\n  (if j' \\<notin> Degs then None\n   else if p ^ ll \\<le> \\<bar>lead_coeff g\\<bar> then None\n        else case div_int_poly f (primitive_part g) of\n             None \\<Rightarrow> None\n             | Some f' \\<Rightarrow>\n                 Some\n                  (filter (\\<lambda>gi. \\<not> p.dvdm gi (primitive_part g))\n                    gs,\n                   lead_coeff f', f', primitive_part g)) =\n  Some (gs', b', f', h)", "have lc: \"abs (lead_coeff g) < p^ll\""], ["proof (prove)\nusing this:\n  (if j' \\<notin> Degs then None\n   else if p ^ ll \\<le> \\<bar>lead_coeff g\\<bar> then None\n        else case div_int_poly f (primitive_part g) of\n             None \\<Rightarrow> None\n             | Some f' \\<Rightarrow>\n                 Some\n                  (filter (\\<lambda>gi. \\<not> p.dvdm gi (primitive_part g))\n                    gs,\n                   lead_coeff f', f', primitive_part g)) =\n  Some (gs', b', f', h)\n\ngoal (1 subgoal):\n 1. \\<bar>lead_coeff g\\<bar> < p ^ ll", "by (auto split: if_splits)"], ["proof (state)\nthis:\n  \\<bar>lead_coeff g\\<bar> < p ^ ll\n\ngoal (9 subgoals):\n 1. f = f' * h\n 2. irreducible\\<^sub>d h\n 3. b' = lead_coeff f'\n 4. pl.unique_factorization_m f' (lead_coeff f', mset gs')\n 5. p.dvdm u h\n 6. degree h = j'\n 7. length gs' < length gs\n 8. set gs' \\<subseteq> set gs\n 9. gs' \\<noteq> []", "from ret"], ["proof (chain)\npicking this:\n  (if j' \\<notin> Degs then None\n   else if p ^ ll \\<le> \\<bar>lead_coeff g\\<bar> then None\n        else case div_int_poly f (primitive_part g) of\n             None \\<Rightarrow> None\n             | Some f' \\<Rightarrow>\n                 Some\n                  (filter (\\<lambda>gi. \\<not> p.dvdm gi (primitive_part g))\n                    gs,\n                   lead_coeff f', f', primitive_part g)) =\n  Some (gs', b', f', h)", "obtain rest where rest: \"div_int_poly f (primitive_part g) = Some rest\""], ["proof (prove)\nusing this:\n  (if j' \\<notin> Degs then None\n   else if p ^ ll \\<le> \\<bar>lead_coeff g\\<bar> then None\n        else case div_int_poly f (primitive_part g) of\n             None \\<Rightarrow> None\n             | Some f' \\<Rightarrow>\n                 Some\n                  (filter (\\<lambda>gi. \\<not> p.dvdm gi (primitive_part g))\n                    gs,\n                   lead_coeff f', f', primitive_part g)) =\n  Some (gs', b', f', h)\n\ngoal (1 subgoal):\n 1. (\\<And>rest.\n        div_int_poly f (primitive_part g) = Some rest \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto split: if_splits option.splits)"], ["proof (state)\nthis:\n  div_int_poly f (primitive_part g) = Some rest\n\ngoal (9 subgoals):\n 1. f = f' * h\n 2. irreducible\\<^sub>d h\n 3. b' = lead_coeff f'\n 4. pl.unique_factorization_m f' (lead_coeff f', mset gs')\n 5. p.dvdm u h\n 6. degree h = j'\n 7. length gs' < length gs\n 8. set gs' \\<subseteq> set gs\n 9. gs' \\<noteq> []", "from ret[unfolded this] div_int_then_rqp[OF this] lc"], ["proof (chain)\npicking this:\n  (if j' \\<notin> Degs then None\n   else if p ^ ll \\<le> \\<bar>lead_coeff g\\<bar> then None\n        else case Some rest of None \\<Rightarrow> None\n             | Some f' \\<Rightarrow>\n                 Some\n                  (filter (\\<lambda>gi. \\<not> p.dvdm gi (primitive_part g))\n                    gs,\n                   lead_coeff f', f', primitive_part g)) =\n  Some (gs', b', f', h)\n  rest * primitive_part g = f\n  primitive_part g \\<noteq> 0\n  \\<bar>lead_coeff g\\<bar> < p ^ ll", "have out [simp]: \"h = ?ppg\" \"gs' = filter (\\<lambda> gi. \\<not> p.dvdm gi ?ppg) gs\" \n    \"f' = rest\" \"b' = lead_coeff rest\"\n   and f: \"f = ?ppg * rest\""], ["proof (prove)\nusing this:\n  (if j' \\<notin> Degs then None\n   else if p ^ ll \\<le> \\<bar>lead_coeff g\\<bar> then None\n        else case Some rest of None \\<Rightarrow> None\n             | Some f' \\<Rightarrow>\n                 Some\n                  (filter (\\<lambda>gi. \\<not> p.dvdm gi (primitive_part g))\n                    gs,\n                   lead_coeff f', f', primitive_part g)) =\n  Some (gs', b', f', h)\n  rest * primitive_part g = f\n  primitive_part g \\<noteq> 0\n  \\<bar>lead_coeff g\\<bar> < p ^ ll\n\ngoal (1 subgoal):\n 1. ((h = primitive_part g &&&\n      gs' =\n      filter (\\<lambda>gi. \\<not> p.dvdm gi (primitive_part g)) gs) &&&\n     f' = rest &&& b' = lead_coeff rest) &&&\n    f = primitive_part g * rest", "by (auto split: if_splits)"], ["proof (state)\nthis:\n  h = primitive_part g\n  gs' = filter (\\<lambda>gi. \\<not> p.dvdm gi (primitive_part g)) gs\n  f' = rest\n  b' = lead_coeff rest\n  f = primitive_part g * rest\n\ngoal (9 subgoals):\n 1. f = f' * h\n 2. irreducible\\<^sub>d h\n 3. b' = lead_coeff f'\n 4. pl.unique_factorization_m f' (lead_coeff f', mset gs')\n 5. p.dvdm u h\n 6. degree h = j'\n 7. length gs' < length gs\n 8. set gs' \\<subseteq> set gs\n 9. gs' \\<noteq> []", "with div_int_then_rqp[OF rest]"], ["proof (chain)\npicking this:\n  rest * primitive_part g = f\n  primitive_part g \\<noteq> 0\n  h = primitive_part g\n  gs' = filter (\\<lambda>gi. \\<not> p.dvdm gi (primitive_part g)) gs\n  f' = rest\n  b' = lead_coeff rest\n  f = primitive_part g * rest", "show ?g1 ?g3"], ["proof (prove)\nusing this:\n  rest * primitive_part g = f\n  primitive_part g \\<noteq> 0\n  h = primitive_part g\n  gs' = filter (\\<lambda>gi. \\<not> p.dvdm gi (primitive_part g)) gs\n  f' = rest\n  b' = lead_coeff rest\n  f = primitive_part g * rest\n\ngoal (1 subgoal):\n 1. f = f' * h &&& b' = lead_coeff f'", "by auto"], ["proof (state)\nthis:\n  f = f' * h\n  b' = lead_coeff f'\n\ngoal (7 subgoals):\n 1. irreducible\\<^sub>d h\n 2. pl.unique_factorization_m f' (lead_coeff f', mset gs')\n 3. p.dvdm u h\n 4. degree h = j'\n 5. length gs' < length gs\n 6. set gs' \\<subseteq> set gs\n 7. gs' \\<noteq> []", "from \\<open>?g1\\<close> f0"], ["proof (chain)\npicking this:\n  f = f' * h\n  f \\<noteq> 0", "have h0: \"h \\<noteq> 0\""], ["proof (prove)\nusing this:\n  f = f' * h\n  f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. h \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  h \\<noteq> 0\n\ngoal (7 subgoals):\n 1. irreducible\\<^sub>d h\n 2. pl.unique_factorization_m f' (lead_coeff f', mset gs')\n 3. p.dvdm u h\n 4. degree h = j'\n 5. length gs' < length gs\n 6. set gs' \\<subseteq> set gs\n 7. gs' \\<noteq> []", "let ?c = \"content g\""], ["proof (state)\ngoal (7 subgoals):\n 1. irreducible\\<^sub>d h\n 2. pl.unique_factorization_m f' (lead_coeff f', mset gs')\n 3. p.dvdm u h\n 4. degree h = j'\n 5. length gs' < length gs\n 6. set gs' \\<subseteq> set gs\n 7. gs' \\<noteq> []", "from g0"], ["proof (chain)\npicking this:\n  g \\<noteq> 0", "have ct0: \"?c \\<noteq> 0\""], ["proof (prove)\nusing this:\n  g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. content g \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  content g \\<noteq> 0\n\ngoal (7 subgoals):\n 1. irreducible\\<^sub>d h\n 2. pl.unique_factorization_m f' (lead_coeff f', mset gs')\n 3. p.dvdm u h\n 4. degree h = j'\n 5. length gs' < length gs\n 6. set gs' \\<subseteq> set gs\n 7. gs' \\<noteq> []", "have \"\\<bar>?c\\<bar> \\<le> \\<bar>lead_coeff g\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>content g\\<bar> \\<le> \\<bar>lead_coeff g\\<bar>", "by (rule content_le_lead_coeff)"], ["proof (state)\nthis:\n  \\<bar>content g\\<bar> \\<le> \\<bar>lead_coeff g\\<bar>\n\ngoal (7 subgoals):\n 1. irreducible\\<^sub>d h\n 2. pl.unique_factorization_m f' (lead_coeff f', mset gs')\n 3. p.dvdm u h\n 4. degree h = j'\n 5. length gs' < length gs\n 6. set gs' \\<subseteq> set gs\n 7. gs' \\<noteq> []", "also"], ["proof (state)\nthis:\n  \\<bar>content g\\<bar> \\<le> \\<bar>lead_coeff g\\<bar>\n\ngoal (7 subgoals):\n 1. irreducible\\<^sub>d h\n 2. pl.unique_factorization_m f' (lead_coeff f', mset gs')\n 3. p.dvdm u h\n 4. degree h = j'\n 5. length gs' < length gs\n 6. set gs' \\<subseteq> set gs\n 7. gs' \\<noteq> []", "have \"\\<dots> < p^ll\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>lead_coeff g\\<bar> < p ^ ll", "by fact"], ["proof (state)\nthis:\n  \\<bar>lead_coeff g\\<bar> < p ^ ll\n\ngoal (7 subgoals):\n 1. irreducible\\<^sub>d h\n 2. pl.unique_factorization_m f' (lead_coeff f', mset gs')\n 3. p.dvdm u h\n 4. degree h = j'\n 5. length gs' < length gs\n 6. set gs' \\<subseteq> set gs\n 7. gs' \\<noteq> []", "finally"], ["proof (chain)\npicking this:\n  \\<bar>content g\\<bar> < p ^ ll", "have ct_pl: \"\\<bar>?c\\<bar> < p^ll\""], ["proof (prove)\nusing this:\n  \\<bar>content g\\<bar> < p ^ ll\n\ngoal (1 subgoal):\n 1. \\<bar>content g\\<bar> < p ^ ll", "."], ["proof (state)\nthis:\n  \\<bar>content g\\<bar> < p ^ ll\n\ngoal (7 subgoals):\n 1. irreducible\\<^sub>d h\n 2. pl.unique_factorization_m f' (lead_coeff f', mset gs')\n 3. p.dvdm u h\n 4. degree h = j'\n 5. length gs' < length gs\n 6. set gs' \\<subseteq> set gs\n 7. gs' \\<noteq> []", "from ug"], ["proof (chain)\npicking this:\n  pll.dvdm u g", "have \"pll.dvdm u (smult ?c ?ppg)\""], ["proof (prove)\nusing this:\n  pll.dvdm u g\n\ngoal (1 subgoal):\n 1. pll.dvdm u (smult (content g) (primitive_part g))", "by simp"], ["proof (state)\nthis:\n  pll.dvdm u (smult (content g) (primitive_part g))\n\ngoal (7 subgoals):\n 1. irreducible\\<^sub>d h\n 2. pl.unique_factorization_m f' (lead_coeff f', mset gs')\n 3. p.dvdm u h\n 4. degree h = j'\n 5. length gs' < length gs\n 6. set gs' \\<subseteq> set gs\n 7. gs' \\<noteq> []", "from poly_mod_dvd_drop_smult[OF u p ct0 ct_pl this]"], ["proof (chain)\npicking this:\n  p.dvdm u (primitive_part g)", "show puh: \"p.dvdm u h\""], ["proof (prove)\nusing this:\n  p.dvdm u (primitive_part g)\n\ngoal (1 subgoal):\n 1. p.dvdm u h", "by simp"], ["proof (state)\nthis:\n  p.dvdm u h\n\ngoal (6 subgoals):\n 1. irreducible\\<^sub>d h\n 2. pl.unique_factorization_m f' (lead_coeff f', mset gs')\n 3. degree h = j'\n 4. length gs' < length gs\n 5. set gs' \\<subseteq> set gs\n 6. gs' \\<noteq> []", "with dvdm_power[of h] f"], ["proof (chain)\npicking this:\n  h dvd f \\<Longrightarrow> p.dvdm u h = pl.dvdm u h\n  f = primitive_part g * rest\n  p.dvdm u h", "have uh: \"pl.dvdm u h\""], ["proof (prove)\nusing this:\n  h dvd f \\<Longrightarrow> p.dvdm u h = pl.dvdm u h\n  f = primitive_part g * rest\n  p.dvdm u h\n\ngoal (1 subgoal):\n 1. pl.dvdm u h", "by (auto simp: dvd_def)"], ["proof (state)\nthis:\n  pl.dvdm u h\n\ngoal (6 subgoals):\n 1. irreducible\\<^sub>d h\n 2. pl.unique_factorization_m f' (lead_coeff f', mset gs')\n 3. degree h = j'\n 4. length gs' < length gs\n 5. set gs' \\<subseteq> set gs\n 6. gs' \\<noteq> []", "from f"], ["proof (chain)\npicking this:\n  f = primitive_part g * rest", "have hf: \"h dvd f\""], ["proof (prove)\nusing this:\n  f = primitive_part g * rest\n\ngoal (1 subgoal):\n 1. h dvd f", "by (auto intro:dvdI)"], ["proof (state)\nthis:\n  h dvd f\n\ngoal (6 subgoals):\n 1. irreducible\\<^sub>d h\n 2. pl.unique_factorization_m f' (lead_coeff f', mset gs')\n 3. degree h = j'\n 4. length gs' < length gs\n 5. set gs' \\<subseteq> set gs\n 6. gs' \\<noteq> []", "have degh: \"degree h > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < degree h", "by (metis d_def deg deg_u puh dj' hf le_neq_implies_less not_less0 neq0_conv)"], ["proof (state)\nthis:\n  0 < degree h\n\ngoal (6 subgoals):\n 1. irreducible\\<^sub>d h\n 2. pl.unique_factorization_m f' (lead_coeff f', mset gs')\n 3. degree h = j'\n 4. length gs' < length gs\n 5. set gs' \\<subseteq> set gs\n 6. gs' \\<noteq> []", "show irr_h: ?g2"], ["proof (prove)\ngoal (1 subgoal):\n 1. irreducible\\<^sub>d h", "by (intro factor_irreducible\\<^sub>dI degh hf puh, insert deg_g_j, simp)"], ["proof (state)\nthis:\n  irreducible\\<^sub>d h\n\ngoal (5 subgoals):\n 1. pl.unique_factorization_m f' (lead_coeff f', mset gs')\n 2. degree h = j'\n 3. length gs' < length gs\n 4. set gs' \\<subseteq> set gs\n 5. gs' \\<noteq> []", "show deg_h: ?g6"], ["proof (prove)\ngoal (1 subgoal):\n 1. degree h = j'", "using deg deg_g_j g_def hf le_less_Suc_eq puh degree_primitive_part"], ["proof (prove)\nusing this:\n  \\<lbrakk>p.dvdm u ?factor1; ?factor1 dvd f\\<rbrakk>\n  \\<Longrightarrow> j' \\<le> degree ?factor1\n  degree g < Suc j'\n  g \\<equiv> LLL_short_polynomial (p ^ ll) (Suc j') u\n  h dvd f\n  ?m \\<le> ?n \\<Longrightarrow> (?n < Suc ?m) = (?n = ?m)\n  p.dvdm u h\n  degree (primitive_part ?p) = degree ?p\n\ngoal (1 subgoal):\n 1. degree h = j'", "by force"], ["proof (state)\nthis:\n  degree h = j'\n\ngoal (4 subgoals):\n 1. pl.unique_factorization_m f' (lead_coeff f', mset gs')\n 2. length gs' < length gs\n 3. set gs' \\<subseteq> set gs\n 4. gs' \\<noteq> []", "show ?g7"], ["proof (prove)\ngoal (1 subgoal):\n 1. length gs' < length gs", "unfolding out"], ["proof (prove)\ngoal (1 subgoal):\n 1. length (filter (\\<lambda>gi. \\<not> p.dvdm gi (primitive_part g)) gs)\n    < length gs", "by (rule length_filter_less[of u], insert pl_dvdm_imp_p_dvdm[OF uh] u_gs, auto)"], ["proof (state)\nthis:\n  length gs' < length gs\n\ngoal (3 subgoals):\n 1. pl.unique_factorization_m f' (lead_coeff f', mset gs')\n 2. set gs' \\<subseteq> set gs\n 3. gs' \\<noteq> []", "show ?g8"], ["proof (prove)\ngoal (1 subgoal):\n 1. set gs' \\<subseteq> set gs", "by auto"], ["proof (state)\nthis:\n  set gs' \\<subseteq> set gs\n\ngoal (2 subgoals):\n 1. pl.unique_factorization_m f' (lead_coeff f', mset gs')\n 2. gs' \\<noteq> []", "from f out"], ["proof (chain)\npicking this:\n  f = primitive_part g * rest\n  h = primitive_part g\n  gs' = filter (\\<lambda>gi. \\<not> p.dvdm gi (primitive_part g)) gs\n  f' = rest\n  b' = lead_coeff rest", "have fh: \"f = h * f'\" and gs': \"gs' = [gi \\<leftarrow> gs. \\<not> p.dvdm gi h]\""], ["proof (prove)\nusing this:\n  f = primitive_part g * rest\n  h = primitive_part g\n  gs' = filter (\\<lambda>gi. \\<not> p.dvdm gi (primitive_part g)) gs\n  f' = rest\n  b' = lead_coeff rest\n\ngoal (1 subgoal):\n 1. f = h * f' &&& gs' = filter (\\<lambda>gi. \\<not> p.dvdm gi h) gs", "by auto"], ["proof (state)\nthis:\n  f = h * f'\n  gs' = filter (\\<lambda>gi. \\<not> p.dvdm gi h) gs\n\ngoal (2 subgoals):\n 1. pl.unique_factorization_m f' (lead_coeff f', mset gs')\n 2. gs' \\<noteq> []", "note [simp del] = out"], ["proof (state)\nthis:\n  h = primitive_part g\n  gs' = filter (\\<lambda>gi. \\<not> p.dvdm gi (primitive_part g)) gs\n  f' = rest\n  b' = lead_coeff rest\n\ngoal (2 subgoals):\n 1. pl.unique_factorization_m f' (lead_coeff f', mset gs')\n 2. gs' \\<noteq> []", "let ?fs = \"filter (\\<lambda>gi. p.dvdm gi h) gs\""], ["proof (state)\ngoal (2 subgoals):\n 1. pl.unique_factorization_m f' (lead_coeff f', mset gs')\n 2. gs' \\<noteq> []", "have part: \"List.partition (\\<lambda>gi. p.dvdm gi h) gs = (?fs, gs')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. List.partition (\\<lambda>gi. p.dvdm gi h) gs =\n    (filter (\\<lambda>gi. p.dvdm gi h) gs, gs')", "unfolding gs'"], ["proof (prove)\ngoal (1 subgoal):\n 1. List.partition (\\<lambda>gi. p.dvdm gi h) gs =\n    (filter (\\<lambda>gi. p.dvdm gi h) gs,\n     filter (\\<lambda>gi. \\<not> p.dvdm gi h) gs)", "by (auto simp: o_def)"], ["proof (state)\nthis:\n  List.partition (\\<lambda>gi. p.dvdm gi h) gs =\n  (filter (\\<lambda>gi. p.dvdm gi h) gs, gs')\n\ngoal (2 subgoals):\n 1. pl.unique_factorization_m f' (lead_coeff f', mset gs')\n 2. gs' \\<noteq> []", "from p.unique_factorization_m_factor_partition[OF l0 f_gs fh cop sf part]"], ["proof (chain)\npicking this:\n  pl.unique_factorization_m h\n   (lead_coeff h, mset (filter (\\<lambda>gi. p.dvdm gi h) gs))\n  pl.unique_factorization_m f' (lead_coeff f', mset gs')", "show uf: \"pl.unique_factorization_m f' (lead_coeff f', mset gs')\""], ["proof (prove)\nusing this:\n  pl.unique_factorization_m h\n   (lead_coeff h, mset (filter (\\<lambda>gi. p.dvdm gi h) gs))\n  pl.unique_factorization_m f' (lead_coeff f', mset gs')\n\ngoal (1 subgoal):\n 1. pl.unique_factorization_m f' (lead_coeff f', mset gs')", "by auto"], ["proof (state)\nthis:\n  pl.unique_factorization_m f' (lead_coeff f', mset gs')\n\ngoal (1 subgoal):\n 1. gs' \\<noteq> []", "show ?g9"], ["proof (prove)\ngoal (1 subgoal):\n 1. gs' \\<noteq> []", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. gs' = [] \\<Longrightarrow> False", "assume \"gs' = []\""], ["proof (state)\nthis:\n  gs' = []\n\ngoal (1 subgoal):\n 1. gs' = [] \\<Longrightarrow> False", "with pl.unique_factorization_m_imp_factorization[OF uf, unfolded pl.factorization_m_def]"], ["proof (chain)\npicking this:\n  case (lead_coeff f', mset gs') of\n  (c, fs) \\<Rightarrow>\n    pl.eq_m f' (smult c (\\<Prod>\\<^sub># fs)) \\<and>\n    (\\<forall>f\\<in>#fs. pl.irreducible\\<^sub>d_m f \\<and> monic (pl.Mp f))\n  gs' = []", "have \"pl.Mp f' = pl.Mp (smult (lead_coeff f') 1)\""], ["proof (prove)\nusing this:\n  case (lead_coeff f', mset gs') of\n  (c, fs) \\<Rightarrow>\n    pl.eq_m f' (smult c (\\<Prod>\\<^sub># fs)) \\<and>\n    (\\<forall>f\\<in>#fs. pl.irreducible\\<^sub>d_m f \\<and> monic (pl.Mp f))\n  gs' = []\n\ngoal (1 subgoal):\n 1. pl.eq_m f' (smult (lead_coeff f') 1)", "by auto"], ["proof (state)\nthis:\n  pl.eq_m f' (smult (lead_coeff f') 1)\n\ngoal (1 subgoal):\n 1. gs' = [] \\<Longrightarrow> False", "from arg_cong[OF this, of degree] pl.degree_m_le[of \"smult (lead_coeff f') 1\"]"], ["proof (chain)\npicking this:\n  pl.degree_m f' = pl.degree_m (smult (lead_coeff f') 1)\n  pl.degree_m (smult (lead_coeff f') 1)\n  \\<le> degree (smult (lead_coeff f') 1)", "have \"pl.degree_m f' = 0\""], ["proof (prove)\nusing this:\n  pl.degree_m f' = pl.degree_m (smult (lead_coeff f') 1)\n  pl.degree_m (smult (lead_coeff f') 1)\n  \\<le> degree (smult (lead_coeff f') 1)\n\ngoal (1 subgoal):\n 1. pl.degree_m f' = 0", "by simp"], ["proof (state)\nthis:\n  pl.degree_m f' = 0\n\ngoal (1 subgoal):\n 1. gs' = [] \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  pl.degree_m f' = 0\n\ngoal (1 subgoal):\n 1. gs' = [] \\<Longrightarrow> False", "have \"pl.degree_m f' = degree f'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pl.degree_m f' = degree f'", "proof (rule poly_mod.degree_m_eq[OF _ pl.m1])"], ["proof (state)\ngoal (1 subgoal):\n 1. lead_coeff f' mod p ^ l \\<noteq> 0", "have \"coprime (lead_coeff f') p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comm_monoid_mult_class.coprime (lead_coeff f') p", "by (rule  p.coprime_lead_coeff_factor[OF p.prime cop[unfolded fh]])"], ["proof (state)\nthis:\n  comm_monoid_mult_class.coprime (lead_coeff f') p\n\ngoal (1 subgoal):\n 1. lead_coeff f' mod p ^ l \\<noteq> 0", "thus \"lead_coeff f' mod p ^ l \\<noteq> 0\""], ["proof (prove)\nusing this:\n  comm_monoid_mult_class.coprime (lead_coeff f') p\n\ngoal (1 subgoal):\n 1. lead_coeff f' mod p ^ l \\<noteq> 0", "using l0 p.prime"], ["proof (prove)\nusing this:\n  comm_monoid_mult_class.coprime (lead_coeff f') p\n  l \\<noteq> 0\n  prime p\n\ngoal (1 subgoal):\n 1. lead_coeff f' mod p ^ l \\<noteq> 0", "by fastforce"], ["proof (state)\nthis:\n  lead_coeff f' mod p ^ l \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pl.degree_m f' = degree f'\n\ngoal (1 subgoal):\n 1. gs' = [] \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  degree f' = 0", "have degf': \"degree f' = 0\""], ["proof (prove)\nusing this:\n  degree f' = 0\n\ngoal (1 subgoal):\n 1. degree f' = 0", "by auto"], ["proof (state)\nthis:\n  degree f' = 0\n\ngoal (1 subgoal):\n 1. gs' = [] \\<Longrightarrow> False", "from degree0_coeffs[OF this] f0 fh"], ["proof (chain)\npicking this:\n  \\<exists>a. f' = [:a:]\n  f \\<noteq> 0\n  f = h * f'", "obtain c where \"f' = [:c:]\" and c: \"c \\<noteq> 0\" and fch: \"f = smult c h\""], ["proof (prove)\nusing this:\n  \\<exists>a. f' = [:a:]\n  f \\<noteq> 0\n  f = h * f'\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>f' = [:c:]; c \\<noteq> 0; f = smult c h\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  f' = [:c:]\n  c \\<noteq> 0\n  f = smult c h\n\ngoal (1 subgoal):\n 1. gs' = [] \\<Longrightarrow> False", "from \\<open>irreducible\\<^sub>d h\\<close>"], ["proof (chain)\npicking this:\n  irreducible\\<^sub>d h", "have irr_f: \"irreducible\\<^sub>d f\""], ["proof (prove)\nusing this:\n  irreducible\\<^sub>d h\n\ngoal (1 subgoal):\n 1. irreducible\\<^sub>d f", "using irreducible\\<^sub>d_smult_int[OF c, of h]"], ["proof (prove)\nusing this:\n  irreducible\\<^sub>d h\n  irreducible\\<^sub>d (smult c h) = irreducible\\<^sub>d h\n\ngoal (1 subgoal):\n 1. irreducible\\<^sub>d f", "unfolding fch"], ["proof (prove)\nusing this:\n  irreducible\\<^sub>d h\n  irreducible\\<^sub>d (smult c h) = irreducible\\<^sub>d h\n\ngoal (1 subgoal):\n 1. irreducible\\<^sub>d (smult c h)", "by auto"], ["proof (state)\nthis:\n  irreducible\\<^sub>d f\n\ngoal (1 subgoal):\n 1. gs' = [] \\<Longrightarrow> False", "have \"degree f = j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree f = j'", "using hf irr_h deg_h"], ["proof (prove)\nusing this:\n  h dvd f\n  irreducible\\<^sub>d h\n  degree h = j'\n\ngoal (1 subgoal):\n 1. degree f = j'", "using irr_f \\<open>n \\<equiv> degree f\\<close> degh j'n"], ["proof (prove)\nusing this:\n  h dvd f\n  irreducible\\<^sub>d h\n  degree h = j'\n  irreducible\\<^sub>d f\n  n \\<equiv> degree f\n  0 < degree h\n  j' < n\n\ngoal (1 subgoal):\n 1. degree f = j'", "by (metis add.right_neutral degf' degree_mult_eq f0 fh mult_not_zero)"], ["proof (state)\nthis:\n  degree f = j'\n\ngoal (1 subgoal):\n 1. gs' = [] \\<Longrightarrow> False", "thus \"False\""], ["proof (prove)\nusing this:\n  degree f = j'\n\ngoal (1 subgoal):\n 1. False", "using j'n"], ["proof (prove)\nusing this:\n  degree f = j'\n  j' < n\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  gs' \\<noteq> []\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "interpretation LLL d"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "lemma LLL_reconstruction_inner_None_upt_j':\n  assumes ij: \"\\<forall>i\\<in>{d+1..j}. LLL_reconstruction_inner p l gs f u Degs i = None\" \n    and dj: \"d<j\" and \"j\\<le>n\"\n  shows \"\\<And>factor. p.dvdm u factor \\<Longrightarrow> factor dvd f \\<Longrightarrow> degree factor \\<ge> j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n       \\<Longrightarrow> j \\<le> degree factor", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>{d + 1..j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  d < j\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n       \\<Longrightarrow> j \\<le> degree factor", "proof (induct j)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<forall>i\\<in>{d + 1..0}.\n           LLL_reconstruction_inner p l gs f u Degs i = None;\n        d < 0; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> degree factor\n 2. \\<And>j factor.\n       \\<lbrakk>\\<And>factor.\n                   \\<lbrakk>p.dvdm u factor; factor dvd f;\n                    \\<forall>i\\<in>{d + 1..j}.\n                       LLL_reconstruction_inner p l gs f u Degs i = None;\n                    d < j; j \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> j \\<le> degree factor;\n        p.dvdm u factor; factor dvd f;\n        \\<forall>i\\<in>{d + 1..Suc j}.\n           LLL_reconstruction_inner p l gs f u Degs i = None;\n        d < Suc j; Suc j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> Suc j \\<le> degree factor", "case (Suc j)"], ["proof (state)\nthis:\n  \\<lbrakk>p.dvdm u ?factor1; ?factor1 dvd f;\n   \\<forall>i\\<in>{d + 1..j}.\n      LLL_reconstruction_inner p l gs f u Degs i = None;\n   d < j; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> j \\<le> degree ?factor1\n  p.dvdm u factor\n  factor dvd f\n  \\<forall>i\\<in>{d + 1..Suc j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  d < Suc j\n  Suc j \\<le> n\n\ngoal (2 subgoals):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<forall>i\\<in>{d + 1..0}.\n           LLL_reconstruction_inner p l gs f u Degs i = None;\n        d < 0; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> degree factor\n 2. \\<And>j factor.\n       \\<lbrakk>\\<And>factor.\n                   \\<lbrakk>p.dvdm u factor; factor dvd f;\n                    \\<forall>i\\<in>{d + 1..j}.\n                       LLL_reconstruction_inner p l gs f u Degs i = None;\n                    d < j; j \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> j \\<le> degree factor;\n        p.dvdm u factor; factor dvd f;\n        \\<forall>i\\<in>{d + 1..Suc j}.\n           LLL_reconstruction_inner p l gs f u Degs i = None;\n        d < Suc j; Suc j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> Suc j \\<le> degree factor", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc j \\<le> degree factor", "proof (rule LLL_reconstruction_inner_complete)"], ["proof (state)\ngoal (6 subgoals):\n 1. d \\<le> j\n 2. j < n\n 3. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n       \\<Longrightarrow> j \\<le> degree factor\n 4. LLL_reconstruction_inner p l gs f u Degs (Suc j) = None\n 5. p.dvdm u factor\n 6. factor dvd f", "show \"\\<And>factor2. p.dvdm u factor2 \\<Longrightarrow> factor2 dvd f \\<Longrightarrow> j \\<le> degree factor2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>factor2.\n       \\<lbrakk>p.dvdm u factor2; factor2 dvd f\\<rbrakk>\n       \\<Longrightarrow> j \\<le> degree factor2", "proof (cases \"d = j\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>factor2.\n       \\<lbrakk>p.dvdm u factor2; factor2 dvd f; d = j\\<rbrakk>\n       \\<Longrightarrow> j \\<le> degree factor2\n 2. \\<And>factor2.\n       \\<lbrakk>p.dvdm u factor2; factor2 dvd f; d \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> j \\<le> degree factor2", "case False"], ["proof (state)\nthis:\n  d \\<noteq> j\n\ngoal (2 subgoals):\n 1. \\<And>factor2.\n       \\<lbrakk>p.dvdm u factor2; factor2 dvd f; d = j\\<rbrakk>\n       \\<Longrightarrow> j \\<le> degree factor2\n 2. \\<And>factor2.\n       \\<lbrakk>p.dvdm u factor2; factor2 dvd f; d \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> j \\<le> degree factor2", "show \"\\<And>factor2. p.dvdm u factor2 \\<Longrightarrow> factor2 dvd f \\<Longrightarrow> j \\<le> degree factor2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>factor2.\n       \\<lbrakk>p.dvdm u factor2; factor2 dvd f\\<rbrakk>\n       \\<Longrightarrow> j \\<le> degree factor2", "by (rule Suc.hyps, insert Suc.prems False, auto)"], ["proof (state)\nthis:\n  \\<lbrakk>p.dvdm u ?factor2.1; ?factor2.1 dvd f\\<rbrakk>\n  \\<Longrightarrow> j \\<le> degree ?factor2.1\n\ngoal (1 subgoal):\n 1. \\<And>factor2.\n       \\<lbrakk>p.dvdm u factor2; factor2 dvd f; d = j\\<rbrakk>\n       \\<Longrightarrow> j \\<le> degree factor2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>factor2.\n       \\<lbrakk>p.dvdm u factor2; factor2 dvd f; d = j\\<rbrakk>\n       \\<Longrightarrow> j \\<le> degree factor2", "case True"], ["proof (state)\nthis:\n  d = j\n\ngoal (1 subgoal):\n 1. \\<And>factor2.\n       \\<lbrakk>p.dvdm u factor2; factor2 dvd f; d = j\\<rbrakk>\n       \\<Longrightarrow> j \\<le> degree factor2", "then"], ["proof (chain)\npicking this:\n  d = j", "show \"\\<And>factor2. p.dvdm u factor2 \\<Longrightarrow> factor2 dvd f \\<Longrightarrow> j \\<le> degree factor2\""], ["proof (prove)\nusing this:\n  d = j\n\ngoal (1 subgoal):\n 1. \\<And>factor2.\n       \\<lbrakk>p.dvdm u factor2; factor2 dvd f\\<rbrakk>\n       \\<Longrightarrow> j \\<le> degree factor2", "using degree_factor_ge_degree_u"], ["proof (prove)\nusing this:\n  d = j\n  \\<lbrakk>p.dvdm u ?factor; ?factor dvd f\\<rbrakk>\n  \\<Longrightarrow> degree u \\<le> degree ?factor\n\ngoal (1 subgoal):\n 1. \\<And>factor2.\n       \\<lbrakk>p.dvdm u factor2; factor2 dvd f\\<rbrakk>\n       \\<Longrightarrow> j \\<le> degree factor2", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>p.dvdm u ?factor2.1; ?factor2.1 dvd f\\<rbrakk>\n  \\<Longrightarrow> j \\<le> degree ?factor2.1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>p.dvdm u ?factor2.1; ?factor2.1 dvd f\\<rbrakk>\n  \\<Longrightarrow> j \\<le> degree ?factor2.1\n\ngoal (5 subgoals):\n 1. d \\<le> j\n 2. j < n\n 3. LLL_reconstruction_inner p l gs f u Degs (Suc j) = None\n 4. p.dvdm u factor\n 5. factor dvd f", "qed (insert Suc.prems, auto)"], ["proof (state)\nthis:\n  Suc j \\<le> degree factor\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f;\n        \\<forall>i\\<in>{d + 1..0}.\n           LLL_reconstruction_inner p l gs f u Degs i = None;\n        d < 0; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> degree factor", "qed auto"], ["", "corollary LLL_reconstruction_inner_None_upt_j:\n  assumes ij: \"\\<forall>i\\<in>{d+1..j}. LLL_reconstruction_inner p l gs f u Degs i = None\" \n    and dj: \"d\\<le>j\" and jn: \"j\\<le>n\"\n  shows \"\\<And>factor. p.dvdm u factor \\<Longrightarrow> factor dvd f \\<Longrightarrow> degree factor \\<ge> j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n       \\<Longrightarrow> j \\<le> degree factor", "proof (cases \"d=j\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f; d = j\\<rbrakk>\n       \\<Longrightarrow> j \\<le> degree factor\n 2. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f; d \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> j \\<le> degree factor", "case True"], ["proof (state)\nthis:\n  d = j\n\ngoal (2 subgoals):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f; d = j\\<rbrakk>\n       \\<Longrightarrow> j \\<le> degree factor\n 2. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f; d \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> j \\<le> degree factor", "then"], ["proof (chain)\npicking this:\n  d = j", "show \"\\<And>factor. p.dvdm u factor \\<Longrightarrow> factor dvd f \\<Longrightarrow> d = j \\<Longrightarrow> j \\<le> degree factor\""], ["proof (prove)\nusing this:\n  d = j\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f; d = j\\<rbrakk>\n       \\<Longrightarrow> j \\<le> degree factor", "using degree_factor_ge_degree_u"], ["proof (prove)\nusing this:\n  d = j\n  \\<lbrakk>p.dvdm u ?factor; ?factor dvd f\\<rbrakk>\n  \\<Longrightarrow> degree u \\<le> degree ?factor\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f; d = j\\<rbrakk>\n       \\<Longrightarrow> j \\<le> degree factor", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>p.dvdm u ?factor1; ?factor1 dvd f; d = j\\<rbrakk>\n  \\<Longrightarrow> j \\<le> degree ?factor1\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f; d \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> j \\<le> degree factor", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f; d \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> j \\<le> degree factor", "case False"], ["proof (state)\nthis:\n  d \\<noteq> j\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f; d \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> j \\<le> degree factor", "hence dj2: \"d<j\""], ["proof (prove)\nusing this:\n  d \\<noteq> j\n\ngoal (1 subgoal):\n 1. d < j", "using dj"], ["proof (prove)\nusing this:\n  d \\<noteq> j\n  d \\<le> j\n\ngoal (1 subgoal):\n 1. d < j", "by auto"], ["proof (state)\nthis:\n  d < j\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f; d \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> j \\<le> degree factor", "then"], ["proof (chain)\npicking this:\n  d < j", "show \"\\<And>factor. p.dvdm u factor \\<Longrightarrow> factor dvd f \\<Longrightarrow> d \\<noteq> j \\<Longrightarrow> j \\<le> degree factor\""], ["proof (prove)\nusing this:\n  d < j\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f; d \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> j \\<le> degree factor", "using LLL_reconstruction_inner_None_upt_j'[OF ij dj2 jn]"], ["proof (prove)\nusing this:\n  d < j\n  \\<lbrakk>p.dvdm u ?factor; ?factor dvd f\\<rbrakk>\n  \\<Longrightarrow> j \\<le> degree ?factor\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f; d \\<noteq> j\\<rbrakk>\n       \\<Longrightarrow> j \\<le> degree factor", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>p.dvdm u ?factor1; ?factor1 dvd f; d \\<noteq> j\\<rbrakk>\n  \\<Longrightarrow> j \\<le> degree ?factor1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma LLL_reconstruction_inner_all_None_imp_irreducible:\n  assumes i: \"\\<forall>i\\<in>{d+1..n}. LLL_reconstruction_inner p l gs f u Degs i = None\"\n  shows \"irreducible\\<^sub>d f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. irreducible\\<^sub>d f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. irreducible\\<^sub>d f", "obtain factor \n    where irreducible_factor: \"irreducible\\<^sub>d factor\" \n      and dvdp_u_factor: \"p.dvdm u factor\" and factor_dvd_f: \"factor dvd f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>factor.\n        \\<lbrakk>irreducible\\<^sub>d factor; p.dvdm u factor;\n         factor dvd f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using exists_reconstruction"], ["proof (prove)\nusing this:\n  \\<exists>h0. irreducible\\<^sub>d h0 \\<and> p.dvdm u h0 \\<and> h0 dvd f\n\ngoal (1 subgoal):\n 1. (\\<And>factor.\n        \\<lbrakk>irreducible\\<^sub>d factor; p.dvdm u factor;\n         factor dvd f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  irreducible\\<^sub>d factor\n  p.dvdm u factor\n  factor dvd f\n\ngoal (1 subgoal):\n 1. irreducible\\<^sub>d f", "have f0: \"f \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<noteq> 0", "using n0"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. f \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. irreducible\\<^sub>d f", "have deg_factor1: \"degree u \\<le> degree factor\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree u \\<le> degree factor", "by (rule degree_factor_ge_degree_u[OF dvdp_u_factor factor_dvd_f])"], ["proof (state)\nthis:\n  degree u \\<le> degree factor\n\ngoal (1 subgoal):\n 1. irreducible\\<^sub>d f", "hence factor_not0: \"factor \\<noteq> 0\""], ["proof (prove)\nusing this:\n  degree u \\<le> degree factor\n\ngoal (1 subgoal):\n 1. factor \\<noteq> 0", "using d0"], ["proof (prove)\nusing this:\n  degree u \\<le> degree factor\n  0 < d\n\ngoal (1 subgoal):\n 1. factor \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  factor \\<noteq> 0\n\ngoal (1 subgoal):\n 1. irreducible\\<^sub>d f", "hence deg_factor2: \"degree factor \\<le> degree f\""], ["proof (prove)\nusing this:\n  factor \\<noteq> 0\n\ngoal (1 subgoal):\n 1. degree factor \\<le> degree f", "using divides_degree[OF factor_dvd_f] f0"], ["proof (prove)\nusing this:\n  factor \\<noteq> 0\n  degree factor \\<le> degree f \\<or> f = 0\n  f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. degree factor \\<le> degree f", "by auto"], ["proof (state)\nthis:\n  degree factor \\<le> degree f\n\ngoal (1 subgoal):\n 1. irreducible\\<^sub>d f", "let ?j = \"degree factor\""], ["proof (state)\ngoal (1 subgoal):\n 1. irreducible\\<^sub>d f", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. irreducible\\<^sub>d f", "proof (cases \"degree factor = degree f\")"], ["proof (state)\ngoal (2 subgoals):\n 1. degree factor = degree f \\<Longrightarrow> irreducible\\<^sub>d f\n 2. degree factor \\<noteq> degree f \\<Longrightarrow> irreducible\\<^sub>d f", "case True"], ["proof (state)\nthis:\n  degree factor = degree f\n\ngoal (2 subgoals):\n 1. degree factor = degree f \\<Longrightarrow> irreducible\\<^sub>d f\n 2. degree factor \\<noteq> degree f \\<Longrightarrow> irreducible\\<^sub>d f", "from factor_dvd_f"], ["proof (chain)\npicking this:\n  factor dvd f", "obtain g where f_factor: \"f = factor * g\""], ["proof (prove)\nusing this:\n  factor dvd f\n\ngoal (1 subgoal):\n 1. (\\<And>g. f = factor * g \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  \\<exists>k. f = factor * k\n\ngoal (1 subgoal):\n 1. (\\<And>g. f = factor * g \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  f = factor * g\n\ngoal (2 subgoals):\n 1. degree factor = degree f \\<Longrightarrow> irreducible\\<^sub>d f\n 2. degree factor \\<noteq> degree f \\<Longrightarrow> irreducible\\<^sub>d f", "from True[unfolded f_factor] f0[unfolded f_factor]"], ["proof (chain)\npicking this:\n  degree factor = degree (factor * g)\n  factor * g \\<noteq> 0", "have \"degree g = 0\" \"g \\<noteq> 0\""], ["proof (prove)\nusing this:\n  degree factor = degree (factor * g)\n  factor * g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. degree g = 0 &&& g \\<noteq> 0", "by (subst (asm) degree_mult_eq, auto)"], ["proof (state)\nthis:\n  degree g = 0\n  g \\<noteq> 0\n\ngoal (2 subgoals):\n 1. degree factor = degree f \\<Longrightarrow> irreducible\\<^sub>d f\n 2. degree factor \\<noteq> degree f \\<Longrightarrow> irreducible\\<^sub>d f", "from degree0_coeffs[OF this(1)] this(2)"], ["proof (chain)\npicking this:\n  \\<exists>a. g = [:a:]\n  g \\<noteq> 0", "obtain c where \"g = [:c:]\" and c: \"c \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<exists>a. g = [:a:]\n  g \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>g = [:c:]; c \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  g = [:c:]\n  c \\<noteq> 0\n\ngoal (2 subgoals):\n 1. degree factor = degree f \\<Longrightarrow> irreducible\\<^sub>d f\n 2. degree factor \\<noteq> degree f \\<Longrightarrow> irreducible\\<^sub>d f", "with f_factor"], ["proof (chain)\npicking this:\n  f = factor * g\n  g = [:c:]\n  c \\<noteq> 0", "have fc: \"f = smult c factor\""], ["proof (prove)\nusing this:\n  f = factor * g\n  g = [:c:]\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. f = smult c factor", "by auto"], ["proof (state)\nthis:\n  f = smult c factor\n\ngoal (2 subgoals):\n 1. degree factor = degree f \\<Longrightarrow> irreducible\\<^sub>d f\n 2. degree factor \\<noteq> degree f \\<Longrightarrow> irreducible\\<^sub>d f", "from irreducible_factor irreducible\\<^sub>d_smult_int[OF c, of factor, folded fc]"], ["proof (chain)\npicking this:\n  irreducible\\<^sub>d factor\n  irreducible\\<^sub>d f = irreducible\\<^sub>d factor", "show ?thesis"], ["proof (prove)\nusing this:\n  irreducible\\<^sub>d factor\n  irreducible\\<^sub>d f = irreducible\\<^sub>d factor\n\ngoal (1 subgoal):\n 1. irreducible\\<^sub>d f", "by simp"], ["proof (state)\nthis:\n  irreducible\\<^sub>d f\n\ngoal (1 subgoal):\n 1. degree factor \\<noteq> degree f \\<Longrightarrow> irreducible\\<^sub>d f", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. degree factor \\<noteq> degree f \\<Longrightarrow> irreducible\\<^sub>d f", "case False"], ["proof (state)\nthis:\n  degree factor \\<noteq> degree f\n\ngoal (1 subgoal):\n 1. degree factor \\<noteq> degree f \\<Longrightarrow> irreducible\\<^sub>d f", "hence Suc_j: \"Suc ?j \\<le> degree f\""], ["proof (prove)\nusing this:\n  degree factor \\<noteq> degree f\n\ngoal (1 subgoal):\n 1. Suc (degree factor) \\<le> degree f", "using deg_factor2"], ["proof (prove)\nusing this:\n  degree factor \\<noteq> degree f\n  degree factor \\<le> degree f\n\ngoal (1 subgoal):\n 1. Suc (degree factor) \\<le> degree f", "by auto"], ["proof (state)\nthis:\n  Suc (degree factor) \\<le> degree f\n\ngoal (1 subgoal):\n 1. degree factor \\<noteq> degree f \\<Longrightarrow> irreducible\\<^sub>d f", "have \"Suc ?j \\<le> degree factor\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (degree factor) \\<le> degree factor", "proof (rule LLL_reconstruction_inner_None_upt_j[OF _ _ _ dvdp_u_factor factor_dvd_f])"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<forall>i\\<in>{d + 1..Suc (degree factor)}.\n       LLL_reconstruction_inner p l gs f u Degs i = None\n 2. d \\<le> Suc (degree factor)\n 3. Suc (degree factor) \\<le> n", "show \"d \\<le> Suc ?j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d \\<le> Suc (degree factor)", "using deg_factor1"], ["proof (prove)\nusing this:\n  degree u \\<le> degree factor\n\ngoal (1 subgoal):\n 1. d \\<le> Suc (degree factor)", "by auto"], ["proof (state)\nthis:\n  d \\<le> Suc (degree factor)\n\ngoal (2 subgoals):\n 1. \\<forall>i\\<in>{d + 1..Suc (degree factor)}.\n       LLL_reconstruction_inner p l gs f u Degs i = None\n 2. Suc (degree factor) \\<le> n", "show \"\\<forall>i\\<in>{d + 1..(Suc ?j)}. LLL_reconstruction_inner p l gs f u Degs i = None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{d + 1..Suc (degree factor)}.\n       LLL_reconstruction_inner p l gs f u Degs i = None", "using Suc_j i"], ["proof (prove)\nusing this:\n  Suc (degree factor) \\<le> degree f\n  \\<forall>i\\<in>{d + 1..n}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{d + 1..Suc (degree factor)}.\n       LLL_reconstruction_inner p l gs f u Degs i = None", "by auto"], ["proof (state)\nthis:\n  \\<forall>i\\<in>{d + 1..Suc (degree factor)}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n\ngoal (1 subgoal):\n 1. Suc (degree factor) \\<le> n", "show \"Suc ?j \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (degree factor) \\<le> n", "using Suc_j"], ["proof (prove)\nusing this:\n  Suc (degree factor) \\<le> degree f\n\ngoal (1 subgoal):\n 1. Suc (degree factor) \\<le> n", "by simp"], ["proof (state)\nthis:\n  Suc (degree factor) \\<le> n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Suc (degree factor) \\<le> degree factor\n\ngoal (1 subgoal):\n 1. degree factor \\<noteq> degree f \\<Longrightarrow> irreducible\\<^sub>d f", "then"], ["proof (chain)\npicking this:\n  Suc (degree factor) \\<le> degree factor", "show ?thesis"], ["proof (prove)\nusing this:\n  Suc (degree factor) \\<le> degree factor\n\ngoal (1 subgoal):\n 1. irreducible\\<^sub>d f", "by auto"], ["proof (state)\nthis:\n  irreducible\\<^sub>d f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  irreducible\\<^sub>d f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma irreducible_imp_LLL_reconstruction_inner_all_None:\n  assumes irr_f: \"irreducible\\<^sub>d f\"\n  shows \"\\<forall>i\\<in>{d+1..n}. LLL_reconstruction_inner p l gs f u Degs i = None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{d + 1..n}.\n       LLL_reconstruction_inner p l gs f u Degs i = None", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>{d + 1..n}.\n               LLL_reconstruction_inner p l gs f u Degs i =\n               None) \\<Longrightarrow>\n    False", "let ?LLL_inner = \"\\<lambda>i. LLL_reconstruction_inner p l gs f u Degs i\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>{d + 1..n}.\n               LLL_reconstruction_inner p l gs f u Degs i =\n               None) \\<Longrightarrow>\n    False", "let ?G =\"{j. j \\<in> {d + 1..n} \\<and> ?LLL_inner j \\<noteq> None}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>{d + 1..n}.\n               LLL_reconstruction_inner p l gs f u Degs i =\n               None) \\<Longrightarrow>\n    False", "assume \"\\<not> (\\<forall>i\\<in>{d + 1..n}. ?LLL_inner i = None)\""], ["proof (state)\nthis:\n  \\<not> (\\<forall>i\\<in>{d + 1..n}.\n             LLL_reconstruction_inner p l gs f u Degs i = None)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>{d + 1..n}.\n               LLL_reconstruction_inner p l gs f u Degs i =\n               None) \\<Longrightarrow>\n    False", "hence G_not_empty: \"?G \\<noteq> {}\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>i\\<in>{d + 1..n}.\n             LLL_reconstruction_inner p l gs f u Degs i = None)\n\ngoal (1 subgoal):\n 1. {j \\<in> {d + 1..n}.\n     LLL_reconstruction_inner p l gs f u Degs j \\<noteq> None} \\<noteq>\n    {}", "by auto"], ["proof (state)\nthis:\n  {j \\<in> {d + 1..n}.\n   LLL_reconstruction_inner p l gs f u Degs j \\<noteq> None} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>{d + 1..n}.\n               LLL_reconstruction_inner p l gs f u Degs i =\n               None) \\<Longrightarrow>\n    False", "define j where \"j = Min ?G\""], ["proof (state)\nthis:\n  j =\n  Min {j \\<in> {d + 1..n}.\n       LLL_reconstruction_inner p l gs f u Degs j \\<noteq> None}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>{d + 1..n}.\n               LLL_reconstruction_inner p l gs f u Degs i =\n               None) \\<Longrightarrow>\n    False", "have j_in_G: \"j \\<in> ?G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j \\<in> {j \\<in> {d + 1..n}.\n             LLL_reconstruction_inner p l gs f u Degs j \\<noteq> None}", "by (unfold j_def, rule Min_in[OF _ G_not_empty], simp)"], ["proof (state)\nthis:\n  j \\<in> {j \\<in> {d + 1..n}.\n           LLL_reconstruction_inner p l gs f u Degs j \\<noteq> None}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>{d + 1..n}.\n               LLL_reconstruction_inner p l gs f u Degs i =\n               None) \\<Longrightarrow>\n    False", "hence j: \"j \\<in> {d + 1..n}\" and LLL_not_None: \"?LLL_inner j \\<noteq> None\""], ["proof (prove)\nusing this:\n  j \\<in> {j \\<in> {d + 1..n}.\n           LLL_reconstruction_inner p l gs f u Degs j \\<noteq> None}\n\ngoal (1 subgoal):\n 1. j \\<in> {d + 1..n} &&&\n    LLL_reconstruction_inner p l gs f u Degs j \\<noteq> None", "using j_in_G"], ["proof (prove)\nusing this:\n  j \\<in> {j \\<in> {d + 1..n}.\n           LLL_reconstruction_inner p l gs f u Degs j \\<noteq> None}\n  j \\<in> {j \\<in> {d + 1..n}.\n           LLL_reconstruction_inner p l gs f u Degs j \\<noteq> None}\n\ngoal (1 subgoal):\n 1. j \\<in> {d + 1..n} &&&\n    LLL_reconstruction_inner p l gs f u Degs j \\<noteq> None", "by auto"], ["proof (state)\nthis:\n  j \\<in> {d + 1..n}\n  LLL_reconstruction_inner p l gs f u Degs j \\<noteq> None\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>{d + 1..n}.\n               LLL_reconstruction_inner p l gs f u Degs i =\n               None) \\<Longrightarrow>\n    False", "have \"\\<forall>i\\<in>{d+1..<j}. ?LLL_inner i = None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{d + 1..<j}.\n       LLL_reconstruction_inner p l gs f u Degs i = None", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>{d + 1..<j}.\n               LLL_reconstruction_inner p l gs f u Degs i =\n               None) \\<Longrightarrow>\n    False", "assume \"\\<not> (\\<forall>i\\<in>{d + 1..<j}. ?LLL_inner i = None)\""], ["proof (state)\nthis:\n  \\<not> (\\<forall>i\\<in>{d + 1..<j}.\n             LLL_reconstruction_inner p l gs f u Degs i = None)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>{d + 1..<j}.\n               LLL_reconstruction_inner p l gs f u Degs i =\n               None) \\<Longrightarrow>\n    False", "from this"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>i\\<in>{d + 1..<j}.\n             LLL_reconstruction_inner p l gs f u Degs i = None)", "obtain i where i: \"i \\<in> {d + 1..<j}\" and LLL_i: \"?LLL_inner i \\<noteq> None\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>i\\<in>{d + 1..<j}.\n             LLL_reconstruction_inner p l gs f u Degs i = None)\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i \\<in> {d + 1..<j};\n         LLL_reconstruction_inner p l gs f u Degs i \\<noteq> None\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  i \\<in> {d + 1..<j}\n  LLL_reconstruction_inner p l gs f u Degs i \\<noteq> None\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>{d + 1..<j}.\n               LLL_reconstruction_inner p l gs f u Degs i =\n               None) \\<Longrightarrow>\n    False", "hence iG: \"i \\<in> ?G\""], ["proof (prove)\nusing this:\n  i \\<in> {d + 1..<j}\n  LLL_reconstruction_inner p l gs f u Degs i \\<noteq> None\n\ngoal (1 subgoal):\n 1. i \\<in> {j \\<in> {d + 1..n}.\n             LLL_reconstruction_inner p l gs f u Degs j \\<noteq> None}", "using j_def G_not_empty"], ["proof (prove)\nusing this:\n  i \\<in> {d + 1..<j}\n  LLL_reconstruction_inner p l gs f u Degs i \\<noteq> None\n  j =\n  Min {j \\<in> {d + 1..n}.\n       LLL_reconstruction_inner p l gs f u Degs j \\<noteq> None}\n  {j \\<in> {d + 1..n}.\n   LLL_reconstruction_inner p l gs f u Degs j \\<noteq> None} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. i \\<in> {j \\<in> {d + 1..n}.\n             LLL_reconstruction_inner p l gs f u Degs j \\<noteq> None}", "by auto"], ["proof (state)\nthis:\n  i \\<in> {j \\<in> {d + 1..n}.\n           LLL_reconstruction_inner p l gs f u Degs j \\<noteq> None}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>{d + 1..<j}.\n               LLL_reconstruction_inner p l gs f u Degs i =\n               None) \\<Longrightarrow>\n    False", "have \"i<j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < j", "using i"], ["proof (prove)\nusing this:\n  i \\<in> {d + 1..<j}\n\ngoal (1 subgoal):\n 1. i < j", "by auto"], ["proof (state)\nthis:\n  i < j\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>{d + 1..<j}.\n               LLL_reconstruction_inner p l gs f u Degs i =\n               None) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  i < j\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>{d + 1..<j}.\n               LLL_reconstruction_inner p l gs f u Degs i =\n               None) \\<Longrightarrow>\n    False", "have \"j\\<le>i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j \\<le> i", "using iG j_def"], ["proof (prove)\nusing this:\n  i \\<in> {j \\<in> {d + 1..n}.\n           LLL_reconstruction_inner p l gs f u Degs j \\<noteq> None}\n  j =\n  Min {j \\<in> {d + 1..n}.\n       LLL_reconstruction_inner p l gs f u Degs j \\<noteq> None}\n\ngoal (1 subgoal):\n 1. j \\<le> i", "by auto"], ["proof (state)\nthis:\n  j \\<le> i\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>{d + 1..<j}.\n               LLL_reconstruction_inner p l gs f u Degs i =\n               None) \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  i < j\n  j \\<le> i", "show False"], ["proof (prove)\nusing this:\n  i < j\n  j \\<le> i\n\ngoal (1 subgoal):\n 1. False", "by linarith"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i\\<in>{d + 1..<j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>{d + 1..n}.\n               LLL_reconstruction_inner p l gs f u Degs i =\n               None) \\<Longrightarrow>\n    False", "hence all_None: \"\\<forall>i\\<in>{d+1..j-1}. ?LLL_inner i = None\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>{d + 1..<j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{d + 1..j - 1}.\n       LLL_reconstruction_inner p l gs f u Degs i = None", "by auto"], ["proof (state)\nthis:\n  \\<forall>i\\<in>{d + 1..j - 1}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>{d + 1..n}.\n               LLL_reconstruction_inner p l gs f u Degs i =\n               None) \\<Longrightarrow>\n    False", "obtain gs' b' f' factor where LLL_inner_eq: \"?LLL_inner j = Some (gs', b', f', factor)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>gs' b' f' factor.\n        LLL_reconstruction_inner p l gs f u Degs j =\n        Some (gs', b', f', factor) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using LLL_not_None"], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner p l gs f u Degs j \\<noteq> None\n\ngoal (1 subgoal):\n 1. (\\<And>gs' b' f' factor.\n        LLL_reconstruction_inner p l gs f u Degs j =\n        Some (gs', b', f', factor) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  LLL_reconstruction_inner p l gs f u Degs j = Some (gs', b', f', factor)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>{d + 1..n}.\n               LLL_reconstruction_inner p l gs f u Degs i =\n               None) \\<Longrightarrow>\n    False", "have Suc_j1_eq: \"Suc (j - 1) = j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (j - 1) = j", "using j d0"], ["proof (prove)\nusing this:\n  j \\<in> {d + 1..n}\n  0 < d\n\ngoal (1 subgoal):\n 1. Suc (j - 1) = j", "by auto"], ["proof (state)\nthis:\n  Suc (j - 1) = j\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>{d + 1..n}.\n               LLL_reconstruction_inner p l gs f u Degs i =\n               None) \\<Longrightarrow>\n    False", "have jn: \"j - 1 < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j - 1 < n", "using j"], ["proof (prove)\nusing this:\n  j \\<in> {d + 1..n}\n\ngoal (1 subgoal):\n 1. j - 1 < n", "by auto"], ["proof (state)\nthis:\n  j - 1 < n\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>{d + 1..n}.\n               LLL_reconstruction_inner p l gs f u Degs i =\n               None) \\<Longrightarrow>\n    False", "have dj: \"d \\<le> j-1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d \\<le> j - 1", "using j d0"], ["proof (prove)\nusing this:\n  j \\<in> {d + 1..n}\n  0 < d\n\ngoal (1 subgoal):\n 1. d \\<le> j - 1", "by auto"], ["proof (state)\nthis:\n  d \\<le> j - 1\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>{d + 1..n}.\n               LLL_reconstruction_inner p l gs f u Degs i =\n               None) \\<Longrightarrow>\n    False", "have degree: \"\\<And>factor. p.dvdm u factor \\<Longrightarrow> factor dvd f \\<Longrightarrow> j - 1 \\<le> degree factor\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n       \\<Longrightarrow> j - 1 \\<le> degree factor", "by (rule LLL_reconstruction_inner_None_upt_j[OF all_None dj], insert jn, auto)"], ["proof (state)\nthis:\n  \\<lbrakk>p.dvdm u ?factor1; ?factor1 dvd f\\<rbrakk>\n  \\<Longrightarrow> j - 1 \\<le> degree ?factor1\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>{d + 1..n}.\n               LLL_reconstruction_inner p l gs f u Degs i =\n               None) \\<Longrightarrow>\n    False", "have LLL_inner_Some: \"?LLL_inner (Suc (j - 1)) = Some (gs', b', f', factor)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs (Suc (j - 1)) =\n    Some (gs', b', f', factor)", "using LLL_inner_eq Suc_j1_eq"], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner p l gs f u Degs j = Some (gs', b', f', factor)\n  Suc (j - 1) = j\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs (Suc (j - 1)) =\n    Some (gs', b', f', factor)", "by auto"], ["proof (state)\nthis:\n  LLL_reconstruction_inner p l gs f u Degs (Suc (j - 1)) =\n  Some (gs', b', f', factor)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>{d + 1..n}.\n               LLL_reconstruction_inner p l gs f u Degs i =\n               None) \\<Longrightarrow>\n    False", "have deg_factor: \"degree factor = j-1\" \n    and ff': \"f = f' * factor\"\n    and irreducible_factor: \"irreducible\\<^sub>d factor\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree factor = j - 1 &&& f = f' * factor &&& irreducible\\<^sub>d factor", "using LLL_reconstruction_inner_sound[OF dj jn degree LLL_inner_Some]"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n              \\<Longrightarrow> p.dvdm u factor;\n   \\<And>factor.\n      \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n      \\<Longrightarrow> factor dvd f\\<rbrakk>\n  \\<Longrightarrow> f = f' * factor\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n              \\<Longrightarrow> p.dvdm u factor;\n   \\<And>factor.\n      \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n      \\<Longrightarrow> factor dvd f\\<rbrakk>\n  \\<Longrightarrow> irreducible\\<^sub>d factor\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n              \\<Longrightarrow> p.dvdm u factor;\n   \\<And>factor.\n      \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n      \\<Longrightarrow> factor dvd f\\<rbrakk>\n  \\<Longrightarrow> b' = lead_coeff f'\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n              \\<Longrightarrow> p.dvdm u factor;\n   \\<And>factor.\n      \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n      \\<Longrightarrow> factor dvd f\\<rbrakk>\n  \\<Longrightarrow> pl.unique_factorization_m f' (lead_coeff f', mset gs')\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n              \\<Longrightarrow> p.dvdm u factor;\n   \\<And>factor.\n      \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n      \\<Longrightarrow> factor dvd f\\<rbrakk>\n  \\<Longrightarrow> p.dvdm u factor\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n              \\<Longrightarrow> p.dvdm u factor;\n   \\<And>factor.\n      \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n      \\<Longrightarrow> factor dvd f\\<rbrakk>\n  \\<Longrightarrow> degree factor = j - 1\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n              \\<Longrightarrow> p.dvdm u factor;\n   \\<And>factor.\n      \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n      \\<Longrightarrow> factor dvd f\\<rbrakk>\n  \\<Longrightarrow> length gs' < length gs\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n              \\<Longrightarrow> p.dvdm u factor;\n   \\<And>factor.\n      \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n      \\<Longrightarrow> factor dvd f\\<rbrakk>\n  \\<Longrightarrow> set gs' \\<subseteq> set gs\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n              \\<Longrightarrow> p.dvdm u factor;\n   \\<And>factor.\n      \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n      \\<Longrightarrow> factor dvd f\\<rbrakk>\n  \\<Longrightarrow> gs' \\<noteq> []\n\ngoal (1 subgoal):\n 1. degree factor = j - 1 &&& f = f' * factor &&& irreducible\\<^sub>d factor", "by (metis+)"], ["proof (state)\nthis:\n  degree factor = j - 1\n  f = f' * factor\n  irreducible\\<^sub>d factor\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>{d + 1..n}.\n               LLL_reconstruction_inner p l gs f u Degs i =\n               None) \\<Longrightarrow>\n    False", "have \"degree f' = n - (j - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree f' = n - (j - 1)", "using arg_cong[OF ff', of degree]"], ["proof (prove)\nusing this:\n  degree f = degree (f' * factor)\n\ngoal (1 subgoal):\n 1. degree f' = n - (j - 1)", "by (subst (asm) degree_mult_eq, insert f0 ff' deg_factor, auto)"], ["proof (state)\nthis:\n  degree f' = n - (j - 1)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>{d + 1..n}.\n               LLL_reconstruction_inner p l gs f u Degs i =\n               None) \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  degree f' = n - (j - 1)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>{d + 1..n}.\n               LLL_reconstruction_inner p l gs f u Degs i =\n               None) \\<Longrightarrow>\n    False", "have \"\\<dots> < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n - (j - 1) < n", "using irreducible_factor jn"], ["proof (prove)\nusing this:\n  irreducible\\<^sub>d factor\n  j - 1 < n\n\ngoal (1 subgoal):\n 1. n - (j - 1) < n", "unfolding irreducible\\<^sub>d_def deg_factor"], ["proof (prove)\nusing this:\n  0 < j - 1 \\<and>\n  (\\<forall>q r.\n      degree q < j - 1 \\<longrightarrow>\n      degree r < j - 1 \\<longrightarrow> factor \\<noteq> q * r)\n  j - 1 < n\n\ngoal (1 subgoal):\n 1. n - (j - 1) < n", "by auto"], ["proof (state)\nthis:\n  n - (j - 1) < n\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>{d + 1..n}.\n               LLL_reconstruction_inner p l gs f u Degs i =\n               None) \\<Longrightarrow>\n    False", "finally"], ["proof (chain)\npicking this:\n  degree f' < n", "have deg_f': \"degree f' < degree f\""], ["proof (prove)\nusing this:\n  degree f' < n\n\ngoal (1 subgoal):\n 1. degree f' < degree f", "by auto"], ["proof (state)\nthis:\n  degree f' < degree f\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>{d + 1..n}.\n               LLL_reconstruction_inner p l gs f u Degs i =\n               None) \\<Longrightarrow>\n    False", "from ff'"], ["proof (chain)\npicking this:\n  f = f' * factor", "have factor_dvd_f: \"factor dvd f\""], ["proof (prove)\nusing this:\n  f = f' * factor\n\ngoal (1 subgoal):\n 1. factor dvd f", "by auto"], ["proof (state)\nthis:\n  factor dvd f\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>{d + 1..n}.\n               LLL_reconstruction_inner p l gs f u Degs i =\n               None) \\<Longrightarrow>\n    False", "have \"\\<not> irreducible\\<^sub>d f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> irreducible\\<^sub>d f", "by (rule reducible\\<^sub>dI, rule exI[of _ f'], rule exI[of _ factor], \n        intro conjI ff', insert deg_factor jn deg_f', auto)"], ["proof (state)\nthis:\n  \\<not> irreducible\\<^sub>d f\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i\\<in>{d + 1..n}.\n               LLL_reconstruction_inner p l gs f u Degs i =\n               None) \\<Longrightarrow>\n    False", "thus False"], ["proof (prove)\nusing this:\n  \\<not> irreducible\\<^sub>d f\n\ngoal (1 subgoal):\n 1. False", "using irr_f"], ["proof (prove)\nusing this:\n  \\<not> irreducible\\<^sub>d f\n  irreducible\\<^sub>d f\n\ngoal (1 subgoal):\n 1. False", "by contradiction"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma LLL_reconstruction_inner_all_None:\n  assumes i: \"\\<forall>i\\<in>{d+1..n}. LLL_reconstruction_inner p l gs f u Degs i = None\"\n  and dj: \"d<j\"\nshows \"LLL_reconstruction_inner_loop p l gs f u Degs j = ([],1,1,f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner_loop p l gs f u Degs j = ([], 1, 1, f)", "using dj"], ["proof (prove)\nusing this:\n  d < j\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner_loop p l gs f u Degs j = ([], 1, 1, f)", "proof (induct j rule: LLL_reconstruction_inner_loop.induct[of f p l gs u Degs])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<not> degree f < j;\n                 LLL_reconstruction_inner p l gs f u Degs j = None;\n                 d < j + 1\\<rbrakk>\n                \\<Longrightarrow> LLL_reconstruction_inner_loop p l gs f u\n                                   Degs (j + 1) =\n                                  ([], 1, 1, f);\n        d < j\\<rbrakk>\n       \\<Longrightarrow> LLL_reconstruction_inner_loop p l gs f u Degs j =\n                         ([], 1, 1, f)", "case (1 j)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<not> degree f < j;\n   LLL_reconstruction_inner p l gs f u Degs j = None; d < j + 1\\<rbrakk>\n  \\<Longrightarrow> LLL_reconstruction_inner_loop p l gs f u Degs (j + 1) =\n                    ([], 1, 1, f)\n  d < j\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<not> degree f < j;\n                 LLL_reconstruction_inner p l gs f u Degs j = None;\n                 d < j + 1\\<rbrakk>\n                \\<Longrightarrow> LLL_reconstruction_inner_loop p l gs f u\n                                   Degs (j + 1) =\n                                  ([], 1, 1, f);\n        d < j\\<rbrakk>\n       \\<Longrightarrow> LLL_reconstruction_inner_loop p l gs f u Degs j =\n                         ([], 1, 1, f)", "let ?innerl = \"LLL_reconstruction_inner_loop p l gs f u Degs\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<not> degree f < j;\n                 LLL_reconstruction_inner p l gs f u Degs j = None;\n                 d < j + 1\\<rbrakk>\n                \\<Longrightarrow> LLL_reconstruction_inner_loop p l gs f u\n                                   Degs (j + 1) =\n                                  ([], 1, 1, f);\n        d < j\\<rbrakk>\n       \\<Longrightarrow> LLL_reconstruction_inner_loop p l gs f u Degs j =\n                         ([], 1, 1, f)", "let ?inner = \"LLL_reconstruction_inner p l gs f u Degs\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<not> degree f < j;\n                 LLL_reconstruction_inner p l gs f u Degs j = None;\n                 d < j + 1\\<rbrakk>\n                \\<Longrightarrow> LLL_reconstruction_inner_loop p l gs f u\n                                   Degs (j + 1) =\n                                  ([], 1, 1, f);\n        d < j\\<rbrakk>\n       \\<Longrightarrow> LLL_reconstruction_inner_loop p l gs f u Degs j =\n                         ([], 1, 1, f)", "note hyp = \"1.hyps\""], ["proof (state)\nthis:\n  \\<lbrakk>\\<not> degree f < j;\n   LLL_reconstruction_inner p l gs f u Degs j = None; d < j + 1\\<rbrakk>\n  \\<Longrightarrow> LLL_reconstruction_inner_loop p l gs f u Degs (j + 1) =\n                    ([], 1, 1, f)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<not> degree f < j;\n                 LLL_reconstruction_inner p l gs f u Degs j = None;\n                 d < j + 1\\<rbrakk>\n                \\<Longrightarrow> LLL_reconstruction_inner_loop p l gs f u\n                                   Degs (j + 1) =\n                                  ([], 1, 1, f);\n        d < j\\<rbrakk>\n       \\<Longrightarrow> LLL_reconstruction_inner_loop p l gs f u Degs j =\n                         ([], 1, 1, f)", "note dj = \"1.prems\"(1)"], ["proof (state)\nthis:\n  d < j\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<not> degree f < j;\n                 LLL_reconstruction_inner p l gs f u Degs j = None;\n                 d < j + 1\\<rbrakk>\n                \\<Longrightarrow> LLL_reconstruction_inner_loop p l gs f u\n                                   Degs (j + 1) =\n                                  ([], 1, 1, f);\n        d < j\\<rbrakk>\n       \\<Longrightarrow> LLL_reconstruction_inner_loop p l gs f u Degs j =\n                         ([], 1, 1, f)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner_loop p l gs f u Degs j = ([], 1, 1, f)", "proof (cases \"j\\<le>n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j \\<le> n \\<Longrightarrow>\n    LLL_reconstruction_inner_loop p l gs f u Degs j = ([], 1, 1, f)\n 2. \\<not> j \\<le> n \\<Longrightarrow>\n    LLL_reconstruction_inner_loop p l gs f u Degs j = ([], 1, 1, f)", "case True"], ["proof (state)\nthis:\n  j \\<le> n\n\ngoal (2 subgoals):\n 1. j \\<le> n \\<Longrightarrow>\n    LLL_reconstruction_inner_loop p l gs f u Degs j = ([], 1, 1, f)\n 2. \\<not> j \\<le> n \\<Longrightarrow>\n    LLL_reconstruction_inner_loop p l gs f u Degs j = ([], 1, 1, f)", "note jn = True"], ["proof (state)\nthis:\n  j \\<le> n\n\ngoal (2 subgoals):\n 1. j \\<le> n \\<Longrightarrow>\n    LLL_reconstruction_inner_loop p l gs f u Degs j = ([], 1, 1, f)\n 2. \\<not> j \\<le> n \\<Longrightarrow>\n    LLL_reconstruction_inner_loop p l gs f u Degs j = ([], 1, 1, f)", "have step: \"?inner j = None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs j = None", "by (cases \"d=j\", insert  i jn dj, auto)"], ["proof (state)\nthis:\n  LLL_reconstruction_inner p l gs f u Degs j = None\n\ngoal (2 subgoals):\n 1. j \\<le> n \\<Longrightarrow>\n    LLL_reconstruction_inner_loop p l gs f u Degs j = ([], 1, 1, f)\n 2. \\<not> j \\<le> n \\<Longrightarrow>\n    LLL_reconstruction_inner_loop p l gs f u Degs j = ([], 1, 1, f)", "have \"?innerl j = ?innerl (j+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner_loop p l gs f u Degs j =\n    LLL_reconstruction_inner_loop p l gs f u Degs (j + 1)", "using jn step"], ["proof (prove)\nusing this:\n  j \\<le> n\n  LLL_reconstruction_inner p l gs f u Degs j = None\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner_loop p l gs f u Degs j =\n    LLL_reconstruction_inner_loop p l gs f u Degs (j + 1)", "by auto"], ["proof (state)\nthis:\n  LLL_reconstruction_inner_loop p l gs f u Degs j =\n  LLL_reconstruction_inner_loop p l gs f u Degs (j + 1)\n\ngoal (2 subgoals):\n 1. j \\<le> n \\<Longrightarrow>\n    LLL_reconstruction_inner_loop p l gs f u Degs j = ([], 1, 1, f)\n 2. \\<not> j \\<le> n \\<Longrightarrow>\n    LLL_reconstruction_inner_loop p l gs f u Degs j = ([], 1, 1, f)", "also"], ["proof (state)\nthis:\n  LLL_reconstruction_inner_loop p l gs f u Degs j =\n  LLL_reconstruction_inner_loop p l gs f u Degs (j + 1)\n\ngoal (2 subgoals):\n 1. j \\<le> n \\<Longrightarrow>\n    LLL_reconstruction_inner_loop p l gs f u Degs j = ([], 1, 1, f)\n 2. \\<not> j \\<le> n \\<Longrightarrow>\n    LLL_reconstruction_inner_loop p l gs f u Degs j = ([], 1, 1, f)", "have \"... = ([], 1, 1, f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner_loop p l gs f u Degs (j + 1) = ([], 1, 1, f)", "by (rule hyp[OF _ step], insert jn dj, auto simp add: jn dj)"], ["proof (state)\nthis:\n  LLL_reconstruction_inner_loop p l gs f u Degs (j + 1) = ([], 1, 1, f)\n\ngoal (2 subgoals):\n 1. j \\<le> n \\<Longrightarrow>\n    LLL_reconstruction_inner_loop p l gs f u Degs j = ([], 1, 1, f)\n 2. \\<not> j \\<le> n \\<Longrightarrow>\n    LLL_reconstruction_inner_loop p l gs f u Degs j = ([], 1, 1, f)", "finally"], ["proof (chain)\npicking this:\n  LLL_reconstruction_inner_loop p l gs f u Degs j = ([], 1, 1, f)", "show ?thesis"], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner_loop p l gs f u Degs j = ([], 1, 1, f)\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner_loop p l gs f u Degs j = ([], 1, 1, f)", "."], ["proof (state)\nthis:\n  LLL_reconstruction_inner_loop p l gs f u Degs j = ([], 1, 1, f)\n\ngoal (1 subgoal):\n 1. \\<not> j \\<le> n \\<Longrightarrow>\n    LLL_reconstruction_inner_loop p l gs f u Degs j = ([], 1, 1, f)", "qed auto"], ["proof (state)\nthis:\n  LLL_reconstruction_inner_loop p l gs f u Degs j = ([], 1, 1, f)\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary irreducible_imp_LLL_reconstruction_inner_loop_f:\n  assumes irr_f: \"irreducible\\<^sub>d f\" and dj: \"d<j\" \nshows \"LLL_reconstruction_inner_loop p l gs f u Degs j = ([],1,1,f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner_loop p l gs f u Degs j = ([], 1, 1, f)", "using irreducible_imp_LLL_reconstruction_inner_all_None[OF irr_f]"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>{d + 1..n}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner_loop p l gs f u Degs j = ([], 1, 1, f)", "using LLL_reconstruction_inner_all_None[OF _ dj]"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>{d + 1..n}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  \\<forall>i\\<in>{d + 1..n}.\n     LLL_reconstruction_inner p l gs f u Degs i = None \\<Longrightarrow>\n  LLL_reconstruction_inner_loop p l gs f u Degs j = ([], 1, 1, f)\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner_loop p l gs f u Degs j = ([], 1, 1, f)", "by auto"], ["", "lemma exists_index_LLL_reconstruction_inner_Some:\n  assumes inner_loop: \"LLL_reconstruction_inner_loop p l gs f u Degs j = (gs',b',f',factor)\"\n    and i: \"\\<forall>i\\<in>{d+1..<j}. LLL_reconstruction_inner p l gs f u Degs i = None\"\n    and dj: \"d<j\" and jn: \"j\\<le>n\" and f: \"\\<not> irreducible\\<^sub>d f\"\n  shows \"\\<exists>j'. j \\<le> j' \\<and> j'\\<le>n \\<and> d<j'\n    \\<and> (LLL_reconstruction_inner p l gs f u Degs j' = Some (gs', b', f', factor))\n    \\<and> (\\<forall>i\\<in>{d+1..<j'}. LLL_reconstruction_inner p l gs f u Degs i = None)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "using inner_loop i dj jn"], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner_loop p l gs f u Degs j = (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  d < j\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "proof (induct j rule: LLL_reconstruction_inner_loop.induct[of f p l gs u Degs])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<not> degree f < j;\n                 LLL_reconstruction_inner p l gs f u Degs j = None;\n                 LLL_reconstruction_inner_loop p l gs f u Degs (j + 1) =\n                 (gs', b', f', factor);\n                 \\<forall>i\\<in>{d + 1..<j + 1}.\n                    LLL_reconstruction_inner p l gs f u Degs i = None;\n                 d < j + 1; j + 1 \\<le> n\\<rbrakk>\n                \\<Longrightarrow> \\<exists>j'\\<ge>j + 1.\n                                     j' \\<le> n \\<and>\n                                     d < j' \\<and>\n                                     LLL_reconstruction_inner p l gs f u\nDegs j' =\n                                     Some (gs', b', f', factor) \\<and>\n                                     (\\<forall>i\\<in>{d + 1..<j'}.\n   LLL_reconstruction_inner p l gs f u Degs i = None);\n        LLL_reconstruction_inner_loop p l gs f u Degs j =\n        (gs', b', f', factor);\n        \\<forall>i\\<in>{d + 1..<j}.\n           LLL_reconstruction_inner p l gs f u Degs i = None;\n        d < j; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>j'\\<ge>j.\n                            j' \\<le> n \\<and>\n                            d < j' \\<and>\n                            LLL_reconstruction_inner p l gs f u Degs j' =\n                            Some (gs', b', f', factor) \\<and>\n                            (\\<forall>i\\<in>{d + 1..<j'}.\n                                LLL_reconstruction_inner p l gs f u Degs i =\n                                None)", "case (1 j)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<not> degree f < j;\n   LLL_reconstruction_inner p l gs f u Degs j = None;\n   LLL_reconstruction_inner_loop p l gs f u Degs (j + 1) =\n   (gs', b', f', factor);\n   \\<forall>i\\<in>{d + 1..<j + 1}.\n      LLL_reconstruction_inner p l gs f u Degs i = None;\n   d < j + 1; j + 1 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>j'\\<ge>j + 1.\n                       j' \\<le> n \\<and>\n                       d < j' \\<and>\n                       LLL_reconstruction_inner p l gs f u Degs j' =\n                       Some (gs', b', f', factor) \\<and>\n                       (\\<forall>i\\<in>{d + 1..<j'}.\n                           LLL_reconstruction_inner p l gs f u Degs i =\n                           None)\n  LLL_reconstruction_inner_loop p l gs f u Degs j = (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  d < j\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<not> degree f < j;\n                 LLL_reconstruction_inner p l gs f u Degs j = None;\n                 LLL_reconstruction_inner_loop p l gs f u Degs (j + 1) =\n                 (gs', b', f', factor);\n                 \\<forall>i\\<in>{d + 1..<j + 1}.\n                    LLL_reconstruction_inner p l gs f u Degs i = None;\n                 d < j + 1; j + 1 \\<le> n\\<rbrakk>\n                \\<Longrightarrow> \\<exists>j'\\<ge>j + 1.\n                                     j' \\<le> n \\<and>\n                                     d < j' \\<and>\n                                     LLL_reconstruction_inner p l gs f u\nDegs j' =\n                                     Some (gs', b', f', factor) \\<and>\n                                     (\\<forall>i\\<in>{d + 1..<j'}.\n   LLL_reconstruction_inner p l gs f u Degs i = None);\n        LLL_reconstruction_inner_loop p l gs f u Degs j =\n        (gs', b', f', factor);\n        \\<forall>i\\<in>{d + 1..<j}.\n           LLL_reconstruction_inner p l gs f u Degs i = None;\n        d < j; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>j'\\<ge>j.\n                            j' \\<le> n \\<and>\n                            d < j' \\<and>\n                            LLL_reconstruction_inner p l gs f u Degs j' =\n                            Some (gs', b', f', factor) \\<and>\n                            (\\<forall>i\\<in>{d + 1..<j'}.\n                                LLL_reconstruction_inner p l gs f u Degs i =\n                                None)", "let ?innerl = \"LLL_reconstruction_inner_loop p l gs f u Degs\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<not> degree f < j;\n                 LLL_reconstruction_inner p l gs f u Degs j = None;\n                 LLL_reconstruction_inner_loop p l gs f u Degs (j + 1) =\n                 (gs', b', f', factor);\n                 \\<forall>i\\<in>{d + 1..<j + 1}.\n                    LLL_reconstruction_inner p l gs f u Degs i = None;\n                 d < j + 1; j + 1 \\<le> n\\<rbrakk>\n                \\<Longrightarrow> \\<exists>j'\\<ge>j + 1.\n                                     j' \\<le> n \\<and>\n                                     d < j' \\<and>\n                                     LLL_reconstruction_inner p l gs f u\nDegs j' =\n                                     Some (gs', b', f', factor) \\<and>\n                                     (\\<forall>i\\<in>{d + 1..<j'}.\n   LLL_reconstruction_inner p l gs f u Degs i = None);\n        LLL_reconstruction_inner_loop p l gs f u Degs j =\n        (gs', b', f', factor);\n        \\<forall>i\\<in>{d + 1..<j}.\n           LLL_reconstruction_inner p l gs f u Degs i = None;\n        d < j; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>j'\\<ge>j.\n                            j' \\<le> n \\<and>\n                            d < j' \\<and>\n                            LLL_reconstruction_inner p l gs f u Degs j' =\n                            Some (gs', b', f', factor) \\<and>\n                            (\\<forall>i\\<in>{d + 1..<j'}.\n                                LLL_reconstruction_inner p l gs f u Degs i =\n                                None)", "let ?inner = \"LLL_reconstruction_inner p l gs f u Degs\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<not> degree f < j;\n                 LLL_reconstruction_inner p l gs f u Degs j = None;\n                 LLL_reconstruction_inner_loop p l gs f u Degs (j + 1) =\n                 (gs', b', f', factor);\n                 \\<forall>i\\<in>{d + 1..<j + 1}.\n                    LLL_reconstruction_inner p l gs f u Degs i = None;\n                 d < j + 1; j + 1 \\<le> n\\<rbrakk>\n                \\<Longrightarrow> \\<exists>j'\\<ge>j + 1.\n                                     j' \\<le> n \\<and>\n                                     d < j' \\<and>\n                                     LLL_reconstruction_inner p l gs f u\nDegs j' =\n                                     Some (gs', b', f', factor) \\<and>\n                                     (\\<forall>i\\<in>{d + 1..<j'}.\n   LLL_reconstruction_inner p l gs f u Degs i = None);\n        LLL_reconstruction_inner_loop p l gs f u Degs j =\n        (gs', b', f', factor);\n        \\<forall>i\\<in>{d + 1..<j}.\n           LLL_reconstruction_inner p l gs f u Degs i = None;\n        d < j; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>j'\\<ge>j.\n                            j' \\<le> n \\<and>\n                            d < j' \\<and>\n                            LLL_reconstruction_inner p l gs f u Degs j' =\n                            Some (gs', b', f', factor) \\<and>\n                            (\\<forall>i\\<in>{d + 1..<j'}.\n                                LLL_reconstruction_inner p l gs f u Degs i =\n                                None)", "note hyp = \"1.hyps\""], ["proof (state)\nthis:\n  \\<lbrakk>\\<not> degree f < j;\n   LLL_reconstruction_inner p l gs f u Degs j = None;\n   LLL_reconstruction_inner_loop p l gs f u Degs (j + 1) =\n   (gs', b', f', factor);\n   \\<forall>i\\<in>{d + 1..<j + 1}.\n      LLL_reconstruction_inner p l gs f u Degs i = None;\n   d < j + 1; j + 1 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>j'\\<ge>j + 1.\n                       j' \\<le> n \\<and>\n                       d < j' \\<and>\n                       LLL_reconstruction_inner p l gs f u Degs j' =\n                       Some (gs', b', f', factor) \\<and>\n                       (\\<forall>i\\<in>{d + 1..<j'}.\n                           LLL_reconstruction_inner p l gs f u Degs i =\n                           None)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<not> degree f < j;\n                 LLL_reconstruction_inner p l gs f u Degs j = None;\n                 LLL_reconstruction_inner_loop p l gs f u Degs (j + 1) =\n                 (gs', b', f', factor);\n                 \\<forall>i\\<in>{d + 1..<j + 1}.\n                    LLL_reconstruction_inner p l gs f u Degs i = None;\n                 d < j + 1; j + 1 \\<le> n\\<rbrakk>\n                \\<Longrightarrow> \\<exists>j'\\<ge>j + 1.\n                                     j' \\<le> n \\<and>\n                                     d < j' \\<and>\n                                     LLL_reconstruction_inner p l gs f u\nDegs j' =\n                                     Some (gs', b', f', factor) \\<and>\n                                     (\\<forall>i\\<in>{d + 1..<j'}.\n   LLL_reconstruction_inner p l gs f u Degs i = None);\n        LLL_reconstruction_inner_loop p l gs f u Degs j =\n        (gs', b', f', factor);\n        \\<forall>i\\<in>{d + 1..<j}.\n           LLL_reconstruction_inner p l gs f u Degs i = None;\n        d < j; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>j'\\<ge>j.\n                            j' \\<le> n \\<and>\n                            d < j' \\<and>\n                            LLL_reconstruction_inner p l gs f u Degs j' =\n                            Some (gs', b', f', factor) \\<and>\n                            (\\<forall>i\\<in>{d + 1..<j'}.\n                                LLL_reconstruction_inner p l gs f u Degs i =\n                                None)", "note 1 = \"1.prems\"(1)"], ["proof (state)\nthis:\n  LLL_reconstruction_inner_loop p l gs f u Degs j = (gs', b', f', factor)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<not> degree f < j;\n                 LLL_reconstruction_inner p l gs f u Degs j = None;\n                 LLL_reconstruction_inner_loop p l gs f u Degs (j + 1) =\n                 (gs', b', f', factor);\n                 \\<forall>i\\<in>{d + 1..<j + 1}.\n                    LLL_reconstruction_inner p l gs f u Degs i = None;\n                 d < j + 1; j + 1 \\<le> n\\<rbrakk>\n                \\<Longrightarrow> \\<exists>j'\\<ge>j + 1.\n                                     j' \\<le> n \\<and>\n                                     d < j' \\<and>\n                                     LLL_reconstruction_inner p l gs f u\nDegs j' =\n                                     Some (gs', b', f', factor) \\<and>\n                                     (\\<forall>i\\<in>{d + 1..<j'}.\n   LLL_reconstruction_inner p l gs f u Degs i = None);\n        LLL_reconstruction_inner_loop p l gs f u Degs j =\n        (gs', b', f', factor);\n        \\<forall>i\\<in>{d + 1..<j}.\n           LLL_reconstruction_inner p l gs f u Degs i = None;\n        d < j; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>j'\\<ge>j.\n                            j' \\<le> n \\<and>\n                            d < j' \\<and>\n                            LLL_reconstruction_inner p l gs f u Degs j' =\n                            Some (gs', b', f', factor) \\<and>\n                            (\\<forall>i\\<in>{d + 1..<j'}.\n                                LLL_reconstruction_inner p l gs f u Degs i =\n                                None)", "note 2 = \"1.prems\"(2)"], ["proof (state)\nthis:\n  \\<forall>i\\<in>{d + 1..<j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<not> degree f < j;\n                 LLL_reconstruction_inner p l gs f u Degs j = None;\n                 LLL_reconstruction_inner_loop p l gs f u Degs (j + 1) =\n                 (gs', b', f', factor);\n                 \\<forall>i\\<in>{d + 1..<j + 1}.\n                    LLL_reconstruction_inner p l gs f u Degs i = None;\n                 d < j + 1; j + 1 \\<le> n\\<rbrakk>\n                \\<Longrightarrow> \\<exists>j'\\<ge>j + 1.\n                                     j' \\<le> n \\<and>\n                                     d < j' \\<and>\n                                     LLL_reconstruction_inner p l gs f u\nDegs j' =\n                                     Some (gs', b', f', factor) \\<and>\n                                     (\\<forall>i\\<in>{d + 1..<j'}.\n   LLL_reconstruction_inner p l gs f u Degs i = None);\n        LLL_reconstruction_inner_loop p l gs f u Degs j =\n        (gs', b', f', factor);\n        \\<forall>i\\<in>{d + 1..<j}.\n           LLL_reconstruction_inner p l gs f u Degs i = None;\n        d < j; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>j'\\<ge>j.\n                            j' \\<le> n \\<and>\n                            d < j' \\<and>\n                            LLL_reconstruction_inner p l gs f u Degs j' =\n                            Some (gs', b', f', factor) \\<and>\n                            (\\<forall>i\\<in>{d + 1..<j'}.\n                                LLL_reconstruction_inner p l gs f u Degs i =\n                                None)", "note dj = \"1.prems\"(3)"], ["proof (state)\nthis:\n  d < j\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<not> degree f < j;\n                 LLL_reconstruction_inner p l gs f u Degs j = None;\n                 LLL_reconstruction_inner_loop p l gs f u Degs (j + 1) =\n                 (gs', b', f', factor);\n                 \\<forall>i\\<in>{d + 1..<j + 1}.\n                    LLL_reconstruction_inner p l gs f u Degs i = None;\n                 d < j + 1; j + 1 \\<le> n\\<rbrakk>\n                \\<Longrightarrow> \\<exists>j'\\<ge>j + 1.\n                                     j' \\<le> n \\<and>\n                                     d < j' \\<and>\n                                     LLL_reconstruction_inner p l gs f u\nDegs j' =\n                                     Some (gs', b', f', factor) \\<and>\n                                     (\\<forall>i\\<in>{d + 1..<j'}.\n   LLL_reconstruction_inner p l gs f u Degs i = None);\n        LLL_reconstruction_inner_loop p l gs f u Degs j =\n        (gs', b', f', factor);\n        \\<forall>i\\<in>{d + 1..<j}.\n           LLL_reconstruction_inner p l gs f u Degs i = None;\n        d < j; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>j'\\<ge>j.\n                            j' \\<le> n \\<and>\n                            d < j' \\<and>\n                            LLL_reconstruction_inner p l gs f u Degs j' =\n                            Some (gs', b', f', factor) \\<and>\n                            (\\<forall>i\\<in>{d + 1..<j'}.\n                                LLL_reconstruction_inner p l gs f u Degs i =\n                                None)", "note jn = \"1.prems\"(4)"], ["proof (state)\nthis:\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<not> degree f < j;\n                 LLL_reconstruction_inner p l gs f u Degs j = None;\n                 LLL_reconstruction_inner_loop p l gs f u Degs (j + 1) =\n                 (gs', b', f', factor);\n                 \\<forall>i\\<in>{d + 1..<j + 1}.\n                    LLL_reconstruction_inner p l gs f u Degs i = None;\n                 d < j + 1; j + 1 \\<le> n\\<rbrakk>\n                \\<Longrightarrow> \\<exists>j'\\<ge>j + 1.\n                                     j' \\<le> n \\<and>\n                                     d < j' \\<and>\n                                     LLL_reconstruction_inner p l gs f u\nDegs j' =\n                                     Some (gs', b', f', factor) \\<and>\n                                     (\\<forall>i\\<in>{d + 1..<j'}.\n   LLL_reconstruction_inner p l gs f u Degs i = None);\n        LLL_reconstruction_inner_loop p l gs f u Degs j =\n        (gs', b', f', factor);\n        \\<forall>i\\<in>{d + 1..<j}.\n           LLL_reconstruction_inner p l gs f u Degs i = None;\n        d < j; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>j'\\<ge>j.\n                            j' \\<le> n \\<and>\n                            d < j' \\<and>\n                            LLL_reconstruction_inner p l gs f u Degs j' =\n                            Some (gs', b', f', factor) \\<and>\n                            (\\<forall>i\\<in>{d + 1..<j'}.\n                                LLL_reconstruction_inner p l gs f u Degs i =\n                                None)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "proof (cases \"?inner j = None\")"], ["proof (state)\ngoal (2 subgoals):\n 1. LLL_reconstruction_inner p l gs f u Degs j = None \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)\n 2. LLL_reconstruction_inner p l gs f u Degs j \\<noteq>\n    None \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "case True"], ["proof (state)\nthis:\n  LLL_reconstruction_inner p l gs f u Degs j = None\n\ngoal (2 subgoals):\n 1. LLL_reconstruction_inner p l gs f u Degs j = None \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)\n 2. LLL_reconstruction_inner p l gs f u Degs j \\<noteq>\n    None \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "proof (cases \"j=n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j = n \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)\n 2. j \\<noteq> n \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "case True"], ["proof (state)\nthis:\n  j = n\n\ngoal (2 subgoals):\n 1. j = n \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)\n 2. j \\<noteq> n \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "note j_eq_n = True"], ["proof (state)\nthis:\n  j = n\n\ngoal (2 subgoals):\n 1. j = n \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)\n 2. j \\<noteq> n \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "proof (cases \"?inner n = None\")"], ["proof (state)\ngoal (2 subgoals):\n 1. LLL_reconstruction_inner p l gs f u Degs n = None \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)\n 2. LLL_reconstruction_inner p l gs f u Degs n \\<noteq>\n    None \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "case True"], ["proof (state)\nthis:\n  LLL_reconstruction_inner p l gs f u Degs n = None\n\ngoal (2 subgoals):\n 1. LLL_reconstruction_inner p l gs f u Degs n = None \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)\n 2. LLL_reconstruction_inner p l gs f u Degs n \\<noteq>\n    None \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "have i2: \"\\<forall>i\\<in>{d + 1..n}. ?inner i = None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{d + 1..n}.\n       LLL_reconstruction_inner p l gs f u Degs i = None", "using 2 j_eq_n True"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>{d + 1..<j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  j = n\n  LLL_reconstruction_inner p l gs f u Degs n = None\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{d + 1..n}.\n       LLL_reconstruction_inner p l gs f u Degs i = None", "by auto"], ["proof (state)\nthis:\n  \\<forall>i\\<in>{d + 1..n}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n\ngoal (2 subgoals):\n 1. LLL_reconstruction_inner p l gs f u Degs n = None \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)\n 2. LLL_reconstruction_inner p l gs f u Degs n \\<noteq>\n    None \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "have \"irreducible\\<^sub>d f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. irreducible\\<^sub>d f", "by(rule LLL_reconstruction_inner_all_None_imp_irreducible[OF i2])"], ["proof (state)\nthis:\n  irreducible\\<^sub>d f\n\ngoal (2 subgoals):\n 1. LLL_reconstruction_inner p l gs f u Degs n = None \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)\n 2. LLL_reconstruction_inner p l gs f u Degs n \\<noteq>\n    None \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "thus ?thesis"], ["proof (prove)\nusing this:\n  irreducible\\<^sub>d f\n\ngoal (1 subgoal):\n 1. \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "using f"], ["proof (prove)\nusing this:\n  irreducible\\<^sub>d f\n  \\<not> irreducible\\<^sub>d f\n\ngoal (1 subgoal):\n 1. \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "by simp"], ["proof (state)\nthis:\n  \\<exists>j'\\<ge>j.\n     j' \\<le> n \\<and>\n     d < j' \\<and>\n     LLL_reconstruction_inner p l gs f u Degs j' =\n     Some (gs', b', f', factor) \\<and>\n     (\\<forall>i\\<in>{d + 1..<j'}.\n         LLL_reconstruction_inner p l gs f u Degs i = None)\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs n \\<noteq>\n    None \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs n \\<noteq>\n    None \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "case False"], ["proof (state)\nthis:\n  LLL_reconstruction_inner p l gs f u Degs n \\<noteq> None\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs n \\<noteq>\n    None \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "have \"?inner n = Some (gs', b', f', factor)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs n = Some (gs', b', f', factor)", "using False 1 j_eq_n"], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner p l gs f u Degs n \\<noteq> None\n  LLL_reconstruction_inner_loop p l gs f u Degs j = (gs', b', f', factor)\n  j = n\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs n = Some (gs', b', f', factor)", "by auto"], ["proof (state)\nthis:\n  LLL_reconstruction_inner p l gs f u Degs n = Some (gs', b', f', factor)\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs n \\<noteq>\n    None \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "moreover"], ["proof (state)\nthis:\n  LLL_reconstruction_inner p l gs f u Degs n = Some (gs', b', f', factor)\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs n \\<noteq>\n    None \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "have \"\\<forall>i\\<in>{d + 1..<n}. ?inner i = None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{d + 1..<n}.\n       LLL_reconstruction_inner p l gs f u Degs i = None", "using 2 j_eq_n"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>{d + 1..<j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  j = n\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{d + 1..<n}.\n       LLL_reconstruction_inner p l gs f u Degs i = None", "by simp"], ["proof (state)\nthis:\n  \\<forall>i\\<in>{d + 1..<n}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs n \\<noteq>\n    None \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "moreover"], ["proof (state)\nthis:\n  \\<forall>i\\<in>{d + 1..<n}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs n \\<noteq>\n    None \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "have \"d < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d < n", "using 1 2 jn j_eq_n"], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner_loop p l gs f u Degs j = (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  j \\<le> n\n  j = n\n\ngoal (1 subgoal):\n 1. d < n", "using False  dn nat_less_le"], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner_loop p l gs f u Degs j = (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  j \\<le> n\n  j = n\n  LLL_reconstruction_inner p l gs f u Degs n \\<noteq> None\n  d \\<le> n\n  (?m < ?n) = (?m \\<le> ?n \\<and> ?m \\<noteq> ?n)\n\ngoal (1 subgoal):\n 1. d < n", "using d_def dj"], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner_loop p l gs f u Degs j = (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  j \\<le> n\n  j = n\n  LLL_reconstruction_inner p l gs f u Degs n \\<noteq> None\n  d \\<le> n\n  (?m < ?n) = (?m \\<le> ?n \\<and> ?m \\<noteq> ?n)\n  d ?fs ?k = gs.Gramian_determinant ?fs ?k\n  d < j\n\ngoal (1 subgoal):\n 1. d < n", "by auto"], ["proof (state)\nthis:\n  d < n\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs n \\<noteq>\n    None \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "ultimately"], ["proof (chain)\npicking this:\n  LLL_reconstruction_inner p l gs f u Degs n = Some (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<n}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  d < n", "show ?thesis"], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner p l gs f u Degs n = Some (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<n}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  d < n\n\ngoal (1 subgoal):\n 1. \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "using j_eq_n"], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner p l gs f u Degs n = Some (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<n}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  d < n\n  j = n\n\ngoal (1 subgoal):\n 1. \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>j'\\<ge>j.\n     j' \\<le> n \\<and>\n     d < j' \\<and>\n     LLL_reconstruction_inner p l gs f u Degs j' =\n     Some (gs', b', f', factor) \\<and>\n     (\\<forall>i\\<in>{d + 1..<j'}.\n         LLL_reconstruction_inner p l gs f u Degs i = None)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>j'\\<ge>j.\n     j' \\<le> n \\<and>\n     d < j' \\<and>\n     LLL_reconstruction_inner p l gs f u Degs j' =\n     Some (gs', b', f', factor) \\<and>\n     (\\<forall>i\\<in>{d + 1..<j'}.\n         LLL_reconstruction_inner p l gs f u Degs i = None)\n\ngoal (1 subgoal):\n 1. j \\<noteq> n \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. j \\<noteq> n \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "case False"], ["proof (state)\nthis:\n  j \\<noteq> n\n\ngoal (1 subgoal):\n 1. j \\<noteq> n \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "have \"\\<exists>j'\\<ge>j + 1. j' \\<le> n \\<and> d < j' \\<and>\n                 ?inner j' = Some (gs', b', f', factor) \\<and>\n                 (\\<forall>i\\<in>{d + 1..<j'}. ?inner i = None)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j'\\<ge>j + 1.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "proof (rule hyp)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<not> degree f < j\n 2. LLL_reconstruction_inner p l gs f u Degs j = None\n 3. LLL_reconstruction_inner_loop p l gs f u Degs (j + 1) =\n    (gs', b', f', factor)\n 4. \\<forall>i\\<in>{d + 1..<j + 1}.\n       LLL_reconstruction_inner p l gs f u Degs i = None\n 5. d < j + 1\n 6. j + 1 \\<le> n", "show \"\\<not> degree f < j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> degree f < j", "using jn"], ["proof (prove)\nusing this:\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. \\<not> degree f < j", "by auto"], ["proof (state)\nthis:\n  \\<not> degree f < j\n\ngoal (5 subgoals):\n 1. LLL_reconstruction_inner p l gs f u Degs j = None\n 2. LLL_reconstruction_inner_loop p l gs f u Degs (j + 1) =\n    (gs', b', f', factor)\n 3. \\<forall>i\\<in>{d + 1..<j + 1}.\n       LLL_reconstruction_inner p l gs f u Degs i = None\n 4. d < j + 1\n 5. j + 1 \\<le> n", "show \"?inner j = None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs j = None", "using True"], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner p l gs f u Degs j = None\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs j = None", "by auto"], ["proof (state)\nthis:\n  LLL_reconstruction_inner p l gs f u Degs j = None\n\ngoal (4 subgoals):\n 1. LLL_reconstruction_inner_loop p l gs f u Degs (j + 1) =\n    (gs', b', f', factor)\n 2. \\<forall>i\\<in>{d + 1..<j + 1}.\n       LLL_reconstruction_inner p l gs f u Degs i = None\n 3. d < j + 1\n 4. j + 1 \\<le> n", "show \"?innerl (j + 1) = (gs', b', f', factor)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner_loop p l gs f u Degs (j + 1) =\n    (gs', b', f', factor)", "using 1 True jn"], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner_loop p l gs f u Degs j = (gs', b', f', factor)\n  LLL_reconstruction_inner p l gs f u Degs j = None\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner_loop p l gs f u Degs (j + 1) =\n    (gs', b', f', factor)", "by auto"], ["proof (state)\nthis:\n  LLL_reconstruction_inner_loop p l gs f u Degs (j + 1) =\n  (gs', b', f', factor)\n\ngoal (3 subgoals):\n 1. \\<forall>i\\<in>{d + 1..<j + 1}.\n       LLL_reconstruction_inner p l gs f u Degs i = None\n 2. d < j + 1\n 3. j + 1 \\<le> n", "show \"\\<forall>i\\<in>{d + 1..<j + 1}. ?inner i = None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{d + 1..<j + 1}.\n       LLL_reconstruction_inner p l gs f u Degs i = None", "by (metis \"2\" One_nat_def True add.comm_neutral add_Suc_right atLeastLessThan_iff \n              le_neq_implies_less less_Suc_eq_le)"], ["proof (state)\nthis:\n  \\<forall>i\\<in>{d + 1..<j + 1}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n\ngoal (2 subgoals):\n 1. d < j + 1\n 2. j + 1 \\<le> n", "show \"d < j + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d < j + 1", "using dj"], ["proof (prove)\nusing this:\n  d < j\n\ngoal (1 subgoal):\n 1. d < j + 1", "by auto"], ["proof (state)\nthis:\n  d < j + 1\n\ngoal (1 subgoal):\n 1. j + 1 \\<le> n", "show \" j + 1 \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j + 1 \\<le> n", "using jn False"], ["proof (prove)\nusing this:\n  j \\<le> n\n  j \\<noteq> n\n\ngoal (1 subgoal):\n 1. j + 1 \\<le> n", "by auto"], ["proof (state)\nthis:\n  j + 1 \\<le> n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>j'\\<ge>j + 1.\n     j' \\<le> n \\<and>\n     d < j' \\<and>\n     LLL_reconstruction_inner p l gs f u Degs j' =\n     Some (gs', b', f', factor) \\<and>\n     (\\<forall>i\\<in>{d + 1..<j'}.\n         LLL_reconstruction_inner p l gs f u Degs i = None)\n\ngoal (1 subgoal):\n 1. j \\<noteq> n \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "from this"], ["proof (chain)\npicking this:\n  \\<exists>j'\\<ge>j + 1.\n     j' \\<le> n \\<and>\n     d < j' \\<and>\n     LLL_reconstruction_inner p l gs f u Degs j' =\n     Some (gs', b', f', factor) \\<and>\n     (\\<forall>i\\<in>{d + 1..<j'}.\n         LLL_reconstruction_inner p l gs f u Degs i = None)", "obtain j' where a1: \"j'\\<ge>j + 1\" and a2: \"j' \\<le> n\" and a3: \"d < j'\"\n        and a4: \"?inner j' = Some (gs', b', f', factor)\"\n        and a5: \"(\\<forall>i\\<in>{d + 1..<j'}. ?inner i = None)\""], ["proof (prove)\nusing this:\n  \\<exists>j'\\<ge>j + 1.\n     j' \\<le> n \\<and>\n     d < j' \\<and>\n     LLL_reconstruction_inner p l gs f u Degs j' =\n     Some (gs', b', f', factor) \\<and>\n     (\\<forall>i\\<in>{d + 1..<j'}.\n         LLL_reconstruction_inner p l gs f u Degs i = None)\n\ngoal (1 subgoal):\n 1. (\\<And>j'.\n        \\<lbrakk>j + 1 \\<le> j'; j' \\<le> n; d < j';\n         LLL_reconstruction_inner p l gs f u Degs j' =\n         Some (gs', b', f', factor);\n         \\<forall>i\\<in>{d + 1..<j'}.\n            LLL_reconstruction_inner p l gs f u Degs i = None\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  j + 1 \\<le> j'\n  j' \\<le> n\n  d < j'\n  LLL_reconstruction_inner p l gs f u Degs j' = Some (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<j'}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n\ngoal (1 subgoal):\n 1. j \\<noteq> n \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "moreover"], ["proof (state)\nthis:\n  j + 1 \\<le> j'\n  j' \\<le> n\n  d < j'\n  LLL_reconstruction_inner p l gs f u Degs j' = Some (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<j'}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n\ngoal (1 subgoal):\n 1. j \\<noteq> n \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "have \"j'\\<ge>j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j \\<le> j'", "using a1"], ["proof (prove)\nusing this:\n  j + 1 \\<le> j'\n\ngoal (1 subgoal):\n 1. j \\<le> j'", "by auto"], ["proof (state)\nthis:\n  j \\<le> j'\n\ngoal (1 subgoal):\n 1. j \\<noteq> n \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "ultimately"], ["proof (chain)\npicking this:\n  j + 1 \\<le> j'\n  j' \\<le> n\n  d < j'\n  LLL_reconstruction_inner p l gs f u Degs j' = Some (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<j'}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  j \\<le> j'", "show ?thesis"], ["proof (prove)\nusing this:\n  j + 1 \\<le> j'\n  j' \\<le> n\n  d < j'\n  LLL_reconstruction_inner p l gs f u Degs j' = Some (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<j'}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  j \\<le> j'\n\ngoal (1 subgoal):\n 1. \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>j'\\<ge>j.\n     j' \\<le> n \\<and>\n     d < j' \\<and>\n     LLL_reconstruction_inner p l gs f u Degs j' =\n     Some (gs', b', f', factor) \\<and>\n     (\\<forall>i\\<in>{d + 1..<j'}.\n         LLL_reconstruction_inner p l gs f u Degs i = None)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>j'\\<ge>j.\n     j' \\<le> n \\<and>\n     d < j' \\<and>\n     LLL_reconstruction_inner p l gs f u Degs j' =\n     Some (gs', b', f', factor) \\<and>\n     (\\<forall>i\\<in>{d + 1..<j'}.\n         LLL_reconstruction_inner p l gs f u Degs i = None)\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs j \\<noteq>\n    None \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs j \\<noteq>\n    None \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "case False"], ["proof (state)\nthis:\n  LLL_reconstruction_inner p l gs f u Degs j \\<noteq> None\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs j \\<noteq>\n    None \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "have 1: \"?inner j = Some (gs', b', f', factor)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs j = Some (gs', b', f', factor)", "using False 1 jn"], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner p l gs f u Degs j \\<noteq> None\n  LLL_reconstruction_inner_loop p l gs f u Degs j = (gs', b', f', factor)\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs j = Some (gs', b', f', factor)", "by auto"], ["proof (state)\nthis:\n  LLL_reconstruction_inner p l gs f u Degs j = Some (gs', b', f', factor)\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs j \\<noteq>\n    None \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "moreover"], ["proof (state)\nthis:\n  LLL_reconstruction_inner p l gs f u Degs j = Some (gs', b', f', factor)\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs j \\<noteq>\n    None \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "have 2: \"(\\<forall>i\\<in>{d + 1..<j}. ?inner i = None)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{d + 1..<j}.\n       LLL_reconstruction_inner p l gs f u Degs i = None", "by (rule 2)"], ["proof (state)\nthis:\n  \\<forall>i\\<in>{d + 1..<j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs j \\<noteq>\n    None \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "moreover"], ["proof (state)\nthis:\n  \\<forall>i\\<in>{d + 1..<j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs j \\<noteq>\n    None \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "have 3: \"j \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j \\<le> n", "using jn"], ["proof (prove)\nusing this:\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. j \\<le> n", "by auto"], ["proof (state)\nthis:\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs j \\<noteq>\n    None \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "moreover"], ["proof (state)\nthis:\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs j \\<noteq>\n    None \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "have 4: \"d < j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d < j", "using 2 False dj jn"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>{d + 1..<j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  LLL_reconstruction_inner p l gs f u Degs j \\<noteq> None\n  d < j\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. d < j", "using le_neq_implies_less"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>{d + 1..<j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  LLL_reconstruction_inner p l gs f u Degs j \\<noteq> None\n  d < j\n  j \\<le> n\n  \\<lbrakk>?m \\<le> ?n; ?m \\<noteq> ?n\\<rbrakk> \\<Longrightarrow> ?m < ?n\n\ngoal (1 subgoal):\n 1. d < j", "by fastforce"], ["proof (state)\nthis:\n  d < j\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs j \\<noteq>\n    None \\<Longrightarrow>\n    \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "ultimately"], ["proof (chain)\npicking this:\n  LLL_reconstruction_inner p l gs f u Degs j = Some (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  j \\<le> n\n  d < j", "show ?thesis"], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner p l gs f u Degs j = Some (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  j \\<le> n\n  d < j\n\ngoal (1 subgoal):\n 1. \\<exists>j'\\<ge>j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "by auto"], ["proof (state)\nthis:\n  \\<exists>j'\\<ge>j.\n     j' \\<le> n \\<and>\n     d < j' \\<and>\n     LLL_reconstruction_inner p l gs f u Degs j' =\n     Some (gs', b', f', factor) \\<and>\n     (\\<forall>i\\<in>{d + 1..<j'}.\n         LLL_reconstruction_inner p l gs f u Degs i = None)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>j'\\<ge>j.\n     j' \\<le> n \\<and>\n     d < j' \\<and>\n     LLL_reconstruction_inner p l gs f u Degs j' =\n     Some (gs', b', f', factor) \\<and>\n     (\\<forall>i\\<in>{d + 1..<j'}.\n         LLL_reconstruction_inner p l gs f u Degs i = None)\n\ngoal:\nNo subgoals!", "qed"], ["", "(* TODO: move *)"], ["", "lemma unique_factorization_m_1: \"pl.unique_factorization_m 1 (1, {#})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pl.unique_factorization_m 1 (1, {#})", "proof (intro pl.unique_factorization_mI)"], ["proof (state)\ngoal (2 subgoals):\n 1. pl.factorization_m 1 (1, {#})\n 2. \\<And>d gs.\n       pl.factorization_m 1 (d, gs) \\<Longrightarrow>\n       pl.Mf (d, gs) = pl.Mf (1, {#})", "fix d gs"], ["proof (state)\ngoal (2 subgoals):\n 1. pl.factorization_m 1 (1, {#})\n 2. \\<And>d gs.\n       pl.factorization_m 1 (d, gs) \\<Longrightarrow>\n       pl.Mf (d, gs) = pl.Mf (1, {#})", "assume pl: \"pl.factorization_m 1 (d,gs)\""], ["proof (state)\nthis:\n  pl.factorization_m 1 (d, gs)\n\ngoal (2 subgoals):\n 1. pl.factorization_m 1 (1, {#})\n 2. \\<And>d gs.\n       pl.factorization_m 1 (d, gs) \\<Longrightarrow>\n       pl.Mf (d, gs) = pl.Mf (1, {#})", "from pl.factorization_m_degree[OF this]"], ["proof (chain)\npicking this:\n  pl.Mp 1 \\<noteq> 0 \\<Longrightarrow>\n  pl.degree_m 1 = \\<Sum>\\<^sub># (image_mset pl.degree_m gs)", "have deg0: \"\\<And> g. g \\<in># gs \\<Longrightarrow> pl.degree_m g = 0\""], ["proof (prove)\nusing this:\n  pl.Mp 1 \\<noteq> 0 \\<Longrightarrow>\n  pl.degree_m 1 = \\<Sum>\\<^sub># (image_mset pl.degree_m gs)\n\ngoal (1 subgoal):\n 1. \\<And>g. g \\<in># gs \\<Longrightarrow> pl.degree_m g = 0", "by auto"], ["proof (state)\nthis:\n  ?g1 \\<in># gs \\<Longrightarrow> pl.degree_m ?g1 = 0\n\ngoal (2 subgoals):\n 1. pl.factorization_m 1 (1, {#})\n 2. \\<And>d gs.\n       pl.factorization_m 1 (d, gs) \\<Longrightarrow>\n       pl.Mf (d, gs) = pl.Mf (1, {#})", "{"], ["proof (state)\nthis:\n  ?g1 \\<in># gs \\<Longrightarrow> pl.degree_m ?g1 = 0\n\ngoal (2 subgoals):\n 1. pl.factorization_m 1 (1, {#})\n 2. \\<And>d gs.\n       pl.factorization_m 1 (d, gs) \\<Longrightarrow>\n       pl.Mf (d, gs) = pl.Mf (1, {#})", "assume \"gs \\<noteq> {#}\""], ["proof (state)\nthis:\n  gs \\<noteq> {#}\n\ngoal (2 subgoals):\n 1. pl.factorization_m 1 (1, {#})\n 2. \\<And>d gs.\n       pl.factorization_m 1 (d, gs) \\<Longrightarrow>\n       pl.Mf (d, gs) = pl.Mf (1, {#})", "then"], ["proof (chain)\npicking this:\n  gs \\<noteq> {#}", "obtain g hs where gs: \"gs = {# g #} + hs\""], ["proof (prove)\nusing this:\n  gs \\<noteq> {#}\n\ngoal (1 subgoal):\n 1. (\\<And>g hs. gs = {#g#} + hs \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases gs, auto)"], ["proof (state)\nthis:\n  gs = {#g#} + hs\n\ngoal (2 subgoals):\n 1. pl.factorization_m 1 (1, {#})\n 2. \\<And>d gs.\n       pl.factorization_m 1 (d, gs) \\<Longrightarrow>\n       pl.Mf (d, gs) = pl.Mf (1, {#})", "with pl"], ["proof (chain)\npicking this:\n  pl.factorization_m 1 (d, gs)\n  gs = {#g#} + hs", "have *: \"pl.irreducible\\<^sub>d_m (pl.Mp g)\" \n      \"monic (pl.Mp g)\""], ["proof (prove)\nusing this:\n  pl.factorization_m 1 (d, gs)\n  gs = {#g#} + hs\n\ngoal (1 subgoal):\n 1. pl.irreducible\\<^sub>d_m (pl.Mp g) &&& monic (pl.Mp g)", "by (auto simp: pl.factorization_m_def)"], ["proof (state)\nthis:\n  pl.irreducible\\<^sub>d_m (pl.Mp g)\n  monic (pl.Mp g)\n\ngoal (2 subgoals):\n 1. pl.factorization_m 1 (1, {#})\n 2. \\<And>d gs.\n       pl.factorization_m 1 (d, gs) \\<Longrightarrow>\n       pl.Mf (d, gs) = pl.Mf (1, {#})", "with deg0[of g, unfolded gs]"], ["proof (chain)\npicking this:\n  g \\<in># {#g#} + hs \\<Longrightarrow> pl.degree_m g = 0\n  pl.irreducible\\<^sub>d_m (pl.Mp g)\n  monic (pl.Mp g)", "have False"], ["proof (prove)\nusing this:\n  g \\<in># {#g#} + hs \\<Longrightarrow> pl.degree_m g = 0\n  pl.irreducible\\<^sub>d_m (pl.Mp g)\n  monic (pl.Mp g)\n\ngoal (1 subgoal):\n 1. False", "by (auto simp: pl.irreducible\\<^sub>d_m_def)"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. pl.factorization_m 1 (1, {#})\n 2. \\<And>d gs.\n       pl.factorization_m 1 (d, gs) \\<Longrightarrow>\n       pl.Mf (d, gs) = pl.Mf (1, {#})", "}"], ["proof (state)\nthis:\n  gs \\<noteq> {#} \\<Longrightarrow> False\n\ngoal (2 subgoals):\n 1. pl.factorization_m 1 (1, {#})\n 2. \\<And>d gs.\n       pl.factorization_m 1 (d, gs) \\<Longrightarrow>\n       pl.Mf (d, gs) = pl.Mf (1, {#})", "hence \"gs = {#}\""], ["proof (prove)\nusing this:\n  gs \\<noteq> {#} \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. gs = {#}", "by auto"], ["proof (state)\nthis:\n  gs = {#}\n\ngoal (2 subgoals):\n 1. pl.factorization_m 1 (1, {#})\n 2. \\<And>d gs.\n       pl.factorization_m 1 (d, gs) \\<Longrightarrow>\n       pl.Mf (d, gs) = pl.Mf (1, {#})", "with pl"], ["proof (chain)\npicking this:\n  pl.factorization_m 1 (d, gs)\n  gs = {#}", "show \"pl.Mf (d, gs) = pl.Mf (1, {#})\""], ["proof (prove)\nusing this:\n  pl.factorization_m 1 (d, gs)\n  gs = {#}\n\ngoal (1 subgoal):\n 1. pl.Mf (d, gs) = pl.Mf (1, {#})", "by (cases \"d = 0\", \n    auto simp: pl.factorization_m_def pl.Mf_def pl.Mp_def)"], ["proof (state)\nthis:\n  pl.Mf (d, gs) = pl.Mf (1, {#})\n\ngoal (1 subgoal):\n 1. pl.factorization_m 1 (1, {#})", "qed (auto simp: pl.factorization_m_def)"], ["", "lemma LLL_reconstruction_inner_loop_j_le_n:\n  assumes ret: \"LLL_reconstruction_inner_loop p l gs f u Degs j = (gs',b',f',factor)\"\n    and ij: \"\\<forall>i\\<in>{d+1..<j}. LLL_reconstruction_inner p l gs f u Degs i = None\"\n    and n: \"n = degree f\"\n    and jn: \"j \\<le> n\"\n    and dj: \"d < j\"\n  shows \"f = f' * factor\" (is \"?g1\")\n    and \"irreducible\\<^sub>d factor\" (is \"?g2\")\n    and \"b' = lead_coeff f'\" (is \"?g3\")\n    and \"pl.unique_factorization_m f' (b', mset gs')\" (is \"?g4\")\n    and \"p.dvdm u factor\" (is ?g5)\n    and \"gs \\<noteq> [] \\<longrightarrow> length gs' < length gs\" (is ?g6)\n    and \"factor dvd f\" (is ?g7)\n    and \"f' dvd f\" (is ?g8)\n    and \"set gs' \\<subseteq> set gs\" (is ?g9)\n    and \"gs' = [] \\<longrightarrow> f' = 1\" (is ?g10)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((f = f' * factor &&& irreducible\\<^sub>d factor) &&&\n     b' = lead_coeff f' &&&\n     pl.unique_factorization_m f' (b', mset gs') &&& p.dvdm u factor) &&&\n    (gs \\<noteq> [] \\<longrightarrow> length gs' < length gs &&&\n     factor dvd f) &&&\n    f' dvd f &&&\n    set gs' \\<subseteq> set gs &&& gs' = [] \\<longrightarrow> f' = 1", "using ret ij jn dj"], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner_loop p l gs f u Degs j = (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  j \\<le> n\n  d < j\n\ngoal (1 subgoal):\n 1. ((f = f' * factor &&& irreducible\\<^sub>d factor) &&&\n     b' = lead_coeff f' &&&\n     pl.unique_factorization_m f' (b', mset gs') &&& p.dvdm u factor) &&&\n    (gs \\<noteq> [] \\<longrightarrow> length gs' < length gs &&&\n     factor dvd f) &&&\n    f' dvd f &&&\n    set gs' \\<subseteq> set gs &&& gs' = [] \\<longrightarrow> f' = 1", "proof (atomize(full), induct j)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>LLL_reconstruction_inner_loop p l gs f u Degs 0 =\n             (gs', b', f', factor);\n     \\<forall>i\\<in>{d + 1..<0}.\n        LLL_reconstruction_inner p l gs f u Degs i = None;\n     0 \\<le> n; d < 0\\<rbrakk>\n    \\<Longrightarrow> ((f = f' * factor \\<and>\n                        irreducible\\<^sub>d factor) \\<and>\n                       b' = lead_coeff f' \\<and>\n                       pl.unique_factorization_m f' (b', mset gs') \\<and>\n                       p.dvdm u factor) \\<and>\n                      ((gs \\<noteq> [] \\<longrightarrow>\n                        length gs' < length gs) \\<and>\n                       factor dvd f) \\<and>\n                      f' dvd f \\<and>\n                      set gs' \\<subseteq> set gs \\<and>\n                      (gs' = [] \\<longrightarrow> f' = 1)\n 2. \\<And>j.\n       \\<lbrakk>\\<lbrakk>LLL_reconstruction_inner_loop p l gs f u Degs j =\n                         (gs', b', f', factor);\n                 \\<forall>i\\<in>{d + 1..<j}.\n                    LLL_reconstruction_inner p l gs f u Degs i = None;\n                 j \\<le> n; d < j\\<rbrakk>\n                \\<Longrightarrow> ((f = f' * factor \\<and>\n                                    irreducible\\<^sub>d factor) \\<and>\n                                   b' = lead_coeff f' \\<and>\n                                   pl.unique_factorization_m f'\n                                    (b', mset gs') \\<and>\n                                   p.dvdm u factor) \\<and>\n                                  ((gs \\<noteq> [] \\<longrightarrow>\n                                    length gs' < length gs) \\<and>\n                                   factor dvd f) \\<and>\n                                  f' dvd f \\<and>\n                                  set gs' \\<subseteq> set gs \\<and>\n                                  (gs' = [] \\<longrightarrow> f' = 1);\n        LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n        (gs', b', f', factor);\n        \\<forall>i\\<in>{d + 1..<Suc j}.\n           LLL_reconstruction_inner p l gs f u Degs i = None;\n        Suc j \\<le> n; d < Suc j\\<rbrakk>\n       \\<Longrightarrow> ((f = f' * factor \\<and>\n                           irreducible\\<^sub>d factor) \\<and>\n                          b' = lead_coeff f' \\<and>\n                          pl.unique_factorization_m f' (b', mset gs') \\<and>\n                          p.dvdm u factor) \\<and>\n                         ((gs \\<noteq> [] \\<longrightarrow>\n                           length gs' < length gs) \\<and>\n                          factor dvd f) \\<and>\n                         f' dvd f \\<and>\n                         set gs' \\<subseteq> set gs \\<and>\n                         (gs' = [] \\<longrightarrow> f' = 1)", "case 0"], ["proof (state)\nthis:\n  LLL_reconstruction_inner_loop p l gs f u Degs 0 = (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<0}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  0 \\<le> n\n  d < 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>LLL_reconstruction_inner_loop p l gs f u Degs 0 =\n             (gs', b', f', factor);\n     \\<forall>i\\<in>{d + 1..<0}.\n        LLL_reconstruction_inner p l gs f u Degs i = None;\n     0 \\<le> n; d < 0\\<rbrakk>\n    \\<Longrightarrow> ((f = f' * factor \\<and>\n                        irreducible\\<^sub>d factor) \\<and>\n                       b' = lead_coeff f' \\<and>\n                       pl.unique_factorization_m f' (b', mset gs') \\<and>\n                       p.dvdm u factor) \\<and>\n                      ((gs \\<noteq> [] \\<longrightarrow>\n                        length gs' < length gs) \\<and>\n                       factor dvd f) \\<and>\n                      f' dvd f \\<and>\n                      set gs' \\<subseteq> set gs \\<and>\n                      (gs' = [] \\<longrightarrow> f' = 1)\n 2. \\<And>j.\n       \\<lbrakk>\\<lbrakk>LLL_reconstruction_inner_loop p l gs f u Degs j =\n                         (gs', b', f', factor);\n                 \\<forall>i\\<in>{d + 1..<j}.\n                    LLL_reconstruction_inner p l gs f u Degs i = None;\n                 j \\<le> n; d < j\\<rbrakk>\n                \\<Longrightarrow> ((f = f' * factor \\<and>\n                                    irreducible\\<^sub>d factor) \\<and>\n                                   b' = lead_coeff f' \\<and>\n                                   pl.unique_factorization_m f'\n                                    (b', mset gs') \\<and>\n                                   p.dvdm u factor) \\<and>\n                                  ((gs \\<noteq> [] \\<longrightarrow>\n                                    length gs' < length gs) \\<and>\n                                   factor dvd f) \\<and>\n                                  f' dvd f \\<and>\n                                  set gs' \\<subseteq> set gs \\<and>\n                                  (gs' = [] \\<longrightarrow> f' = 1);\n        LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n        (gs', b', f', factor);\n        \\<forall>i\\<in>{d + 1..<Suc j}.\n           LLL_reconstruction_inner p l gs f u Degs i = None;\n        Suc j \\<le> n; d < Suc j\\<rbrakk>\n       \\<Longrightarrow> ((f = f' * factor \\<and>\n                           irreducible\\<^sub>d factor) \\<and>\n                          b' = lead_coeff f' \\<and>\n                          pl.unique_factorization_m f' (b', mset gs') \\<and>\n                          p.dvdm u factor) \\<and>\n                         ((gs \\<noteq> [] \\<longrightarrow>\n                           length gs' < length gs) \\<and>\n                          factor dvd f) \\<and>\n                         f' dvd f \\<and>\n                         set gs' \\<subseteq> set gs \\<and>\n                         (gs' = [] \\<longrightarrow> f' = 1)", "then"], ["proof (chain)\npicking this:\n  LLL_reconstruction_inner_loop p l gs f u Degs 0 = (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<0}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  0 \\<le> n\n  d < 0", "show ?case"], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner_loop p l gs f u Degs 0 = (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<0}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  0 \\<le> n\n  d < 0\n\ngoal (1 subgoal):\n 1. ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "using deg_u"], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner_loop p l gs f u Degs 0 = (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<0}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  0 \\<le> n\n  d < 0\n  0 < degree u\n\ngoal (1 subgoal):\n 1. ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "by auto"], ["proof (state)\nthis:\n  ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n   b' = lead_coeff f' \\<and>\n   pl.unique_factorization_m f' (b', mset gs') \\<and>\n   p.dvdm u factor) \\<and>\n  ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n   factor dvd f) \\<and>\n  f' dvd f \\<and>\n  set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>LLL_reconstruction_inner_loop p l gs f u Degs j =\n                         (gs', b', f', factor);\n                 \\<forall>i\\<in>{d + 1..<j}.\n                    LLL_reconstruction_inner p l gs f u Degs i = None;\n                 j \\<le> n; d < j\\<rbrakk>\n                \\<Longrightarrow> ((f = f' * factor \\<and>\n                                    irreducible\\<^sub>d factor) \\<and>\n                                   b' = lead_coeff f' \\<and>\n                                   pl.unique_factorization_m f'\n                                    (b', mset gs') \\<and>\n                                   p.dvdm u factor) \\<and>\n                                  ((gs \\<noteq> [] \\<longrightarrow>\n                                    length gs' < length gs) \\<and>\n                                   factor dvd f) \\<and>\n                                  f' dvd f \\<and>\n                                  set gs' \\<subseteq> set gs \\<and>\n                                  (gs' = [] \\<longrightarrow> f' = 1);\n        LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n        (gs', b', f', factor);\n        \\<forall>i\\<in>{d + 1..<Suc j}.\n           LLL_reconstruction_inner p l gs f u Degs i = None;\n        Suc j \\<le> n; d < Suc j\\<rbrakk>\n       \\<Longrightarrow> ((f = f' * factor \\<and>\n                           irreducible\\<^sub>d factor) \\<and>\n                          b' = lead_coeff f' \\<and>\n                          pl.unique_factorization_m f' (b', mset gs') \\<and>\n                          p.dvdm u factor) \\<and>\n                         ((gs \\<noteq> [] \\<longrightarrow>\n                           length gs' < length gs) \\<and>\n                          factor dvd f) \\<and>\n                         f' dvd f \\<and>\n                         set gs' \\<subseteq> set gs \\<and>\n                         (gs' = [] \\<longrightarrow> f' = 1)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>LLL_reconstruction_inner_loop p l gs f u Degs j =\n                         (gs', b', f', factor);\n                 \\<forall>i\\<in>{d + 1..<j}.\n                    LLL_reconstruction_inner p l gs f u Degs i = None;\n                 j \\<le> n; d < j\\<rbrakk>\n                \\<Longrightarrow> ((f = f' * factor \\<and>\n                                    irreducible\\<^sub>d factor) \\<and>\n                                   b' = lead_coeff f' \\<and>\n                                   pl.unique_factorization_m f'\n                                    (b', mset gs') \\<and>\n                                   p.dvdm u factor) \\<and>\n                                  ((gs \\<noteq> [] \\<longrightarrow>\n                                    length gs' < length gs) \\<and>\n                                   factor dvd f) \\<and>\n                                  f' dvd f \\<and>\n                                  set gs' \\<subseteq> set gs \\<and>\n                                  (gs' = [] \\<longrightarrow> f' = 1);\n        LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n        (gs', b', f', factor);\n        \\<forall>i\\<in>{d + 1..<Suc j}.\n           LLL_reconstruction_inner p l gs f u Degs i = None;\n        Suc j \\<le> n; d < Suc j\\<rbrakk>\n       \\<Longrightarrow> ((f = f' * factor \\<and>\n                           irreducible\\<^sub>d factor) \\<and>\n                          b' = lead_coeff f' \\<and>\n                          pl.unique_factorization_m f' (b', mset gs') \\<and>\n                          p.dvdm u factor) \\<and>\n                         ((gs \\<noteq> [] \\<longrightarrow>\n                           length gs' < length gs) \\<and>\n                          factor dvd f) \\<and>\n                         f' dvd f \\<and>\n                         set gs' \\<subseteq> set gs \\<and>\n                         (gs' = [] \\<longrightarrow> f' = 1)", "case (Suc j)"], ["proof (state)\nthis:\n  \\<lbrakk>LLL_reconstruction_inner_loop p l gs f u Degs j =\n           (gs', b', f', factor);\n   \\<forall>i\\<in>{d + 1..<j}.\n      LLL_reconstruction_inner p l gs f u Degs i = None;\n   j \\<le> n; d < j\\<rbrakk>\n  \\<Longrightarrow> ((f = f' * factor \\<and>\n                      irreducible\\<^sub>d factor) \\<and>\n                     b' = lead_coeff f' \\<and>\n                     pl.unique_factorization_m f' (b', mset gs') \\<and>\n                     p.dvdm u factor) \\<and>\n                    ((gs \\<noteq> [] \\<longrightarrow>\n                      length gs' < length gs) \\<and>\n                     factor dvd f) \\<and>\n                    f' dvd f \\<and>\n                    set gs' \\<subseteq> set gs \\<and>\n                    (gs' = [] \\<longrightarrow> f' = 1)\n  LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n  (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<Suc j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  Suc j \\<le> n\n  d < Suc j\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>LLL_reconstruction_inner_loop p l gs f u Degs j =\n                         (gs', b', f', factor);\n                 \\<forall>i\\<in>{d + 1..<j}.\n                    LLL_reconstruction_inner p l gs f u Degs i = None;\n                 j \\<le> n; d < j\\<rbrakk>\n                \\<Longrightarrow> ((f = f' * factor \\<and>\n                                    irreducible\\<^sub>d factor) \\<and>\n                                   b' = lead_coeff f' \\<and>\n                                   pl.unique_factorization_m f'\n                                    (b', mset gs') \\<and>\n                                   p.dvdm u factor) \\<and>\n                                  ((gs \\<noteq> [] \\<longrightarrow>\n                                    length gs' < length gs) \\<and>\n                                   factor dvd f) \\<and>\n                                  f' dvd f \\<and>\n                                  set gs' \\<subseteq> set gs \\<and>\n                                  (gs' = [] \\<longrightarrow> f' = 1);\n        LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n        (gs', b', f', factor);\n        \\<forall>i\\<in>{d + 1..<Suc j}.\n           LLL_reconstruction_inner p l gs f u Degs i = None;\n        Suc j \\<le> n; d < Suc j\\<rbrakk>\n       \\<Longrightarrow> ((f = f' * factor \\<and>\n                           irreducible\\<^sub>d factor) \\<and>\n                          b' = lead_coeff f' \\<and>\n                          pl.unique_factorization_m f' (b', mset gs') \\<and>\n                          p.dvdm u factor) \\<and>\n                         ((gs \\<noteq> [] \\<longrightarrow>\n                           length gs' < length gs) \\<and>\n                          factor dvd f) \\<and>\n                         f' dvd f \\<and>\n                         set gs' \\<subseteq> set gs \\<and>\n                         (gs' = [] \\<longrightarrow> f' = 1)", "let ?innerl = \"LLL_reconstruction_inner_loop p l gs f u Degs\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>LLL_reconstruction_inner_loop p l gs f u Degs j =\n                         (gs', b', f', factor);\n                 \\<forall>i\\<in>{d + 1..<j}.\n                    LLL_reconstruction_inner p l gs f u Degs i = None;\n                 j \\<le> n; d < j\\<rbrakk>\n                \\<Longrightarrow> ((f = f' * factor \\<and>\n                                    irreducible\\<^sub>d factor) \\<and>\n                                   b' = lead_coeff f' \\<and>\n                                   pl.unique_factorization_m f'\n                                    (b', mset gs') \\<and>\n                                   p.dvdm u factor) \\<and>\n                                  ((gs \\<noteq> [] \\<longrightarrow>\n                                    length gs' < length gs) \\<and>\n                                   factor dvd f) \\<and>\n                                  f' dvd f \\<and>\n                                  set gs' \\<subseteq> set gs \\<and>\n                                  (gs' = [] \\<longrightarrow> f' = 1);\n        LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n        (gs', b', f', factor);\n        \\<forall>i\\<in>{d + 1..<Suc j}.\n           LLL_reconstruction_inner p l gs f u Degs i = None;\n        Suc j \\<le> n; d < Suc j\\<rbrakk>\n       \\<Longrightarrow> ((f = f' * factor \\<and>\n                           irreducible\\<^sub>d factor) \\<and>\n                          b' = lead_coeff f' \\<and>\n                          pl.unique_factorization_m f' (b', mset gs') \\<and>\n                          p.dvdm u factor) \\<and>\n                         ((gs \\<noteq> [] \\<longrightarrow>\n                           length gs' < length gs) \\<and>\n                          factor dvd f) \\<and>\n                         f' dvd f \\<and>\n                         set gs' \\<subseteq> set gs \\<and>\n                         (gs' = [] \\<longrightarrow> f' = 1)", "let ?inner = \"LLL_reconstruction_inner p l gs f u Degs\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>LLL_reconstruction_inner_loop p l gs f u Degs j =\n                         (gs', b', f', factor);\n                 \\<forall>i\\<in>{d + 1..<j}.\n                    LLL_reconstruction_inner p l gs f u Degs i = None;\n                 j \\<le> n; d < j\\<rbrakk>\n                \\<Longrightarrow> ((f = f' * factor \\<and>\n                                    irreducible\\<^sub>d factor) \\<and>\n                                   b' = lead_coeff f' \\<and>\n                                   pl.unique_factorization_m f'\n                                    (b', mset gs') \\<and>\n                                   p.dvdm u factor) \\<and>\n                                  ((gs \\<noteq> [] \\<longrightarrow>\n                                    length gs' < length gs) \\<and>\n                                   factor dvd f) \\<and>\n                                  f' dvd f \\<and>\n                                  set gs' \\<subseteq> set gs \\<and>\n                                  (gs' = [] \\<longrightarrow> f' = 1);\n        LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n        (gs', b', f', factor);\n        \\<forall>i\\<in>{d + 1..<Suc j}.\n           LLL_reconstruction_inner p l gs f u Degs i = None;\n        Suc j \\<le> n; d < Suc j\\<rbrakk>\n       \\<Longrightarrow> ((f = f' * factor \\<and>\n                           irreducible\\<^sub>d factor) \\<and>\n                          b' = lead_coeff f' \\<and>\n                          pl.unique_factorization_m f' (b', mset gs') \\<and>\n                          p.dvdm u factor) \\<and>\n                         ((gs \\<noteq> [] \\<longrightarrow>\n                           length gs' < length gs) \\<and>\n                          factor dvd f) \\<and>\n                         f' dvd f \\<and>\n                         set gs' \\<subseteq> set gs \\<and>\n                         (gs' = [] \\<longrightarrow> f' = 1)", "have ij: \"\\<forall>i\\<in>{d+1..j}. ?inner i = None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{d + 1..j}.\n       LLL_reconstruction_inner p l gs f u Degs i = None", "using Suc.prems"], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n  (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<Suc j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  Suc j \\<le> n\n  d < Suc j\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{d + 1..j}.\n       LLL_reconstruction_inner p l gs f u Degs i = None", "by auto"], ["proof (state)\nthis:\n  \\<forall>i\\<in>{d + 1..j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>LLL_reconstruction_inner_loop p l gs f u Degs j =\n                         (gs', b', f', factor);\n                 \\<forall>i\\<in>{d + 1..<j}.\n                    LLL_reconstruction_inner p l gs f u Degs i = None;\n                 j \\<le> n; d < j\\<rbrakk>\n                \\<Longrightarrow> ((f = f' * factor \\<and>\n                                    irreducible\\<^sub>d factor) \\<and>\n                                   b' = lead_coeff f' \\<and>\n                                   pl.unique_factorization_m f'\n                                    (b', mset gs') \\<and>\n                                   p.dvdm u factor) \\<and>\n                                  ((gs \\<noteq> [] \\<longrightarrow>\n                                    length gs' < length gs) \\<and>\n                                   factor dvd f) \\<and>\n                                  f' dvd f \\<and>\n                                  set gs' \\<subseteq> set gs \\<and>\n                                  (gs' = [] \\<longrightarrow> f' = 1);\n        LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n        (gs', b', f', factor);\n        \\<forall>i\\<in>{d + 1..<Suc j}.\n           LLL_reconstruction_inner p l gs f u Degs i = None;\n        Suc j \\<le> n; d < Suc j\\<rbrakk>\n       \\<Longrightarrow> ((f = f' * factor \\<and>\n                           irreducible\\<^sub>d factor) \\<and>\n                          b' = lead_coeff f' \\<and>\n                          pl.unique_factorization_m f' (b', mset gs') \\<and>\n                          p.dvdm u factor) \\<and>\n                         ((gs \\<noteq> [] \\<longrightarrow>\n                           length gs' < length gs) \\<and>\n                          factor dvd f) \\<and>\n                         f' dvd f \\<and>\n                         set gs' \\<subseteq> set gs \\<and>\n                         (gs' = [] \\<longrightarrow> f' = 1)", "have dj: \"d \\<le> j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d \\<le> j", "using Suc.prems"], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n  (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<Suc j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  Suc j \\<le> n\n  d < Suc j\n\ngoal (1 subgoal):\n 1. d \\<le> j", "by auto"], ["proof (state)\nthis:\n  d \\<le> j\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>LLL_reconstruction_inner_loop p l gs f u Degs j =\n                         (gs', b', f', factor);\n                 \\<forall>i\\<in>{d + 1..<j}.\n                    LLL_reconstruction_inner p l gs f u Degs i = None;\n                 j \\<le> n; d < j\\<rbrakk>\n                \\<Longrightarrow> ((f = f' * factor \\<and>\n                                    irreducible\\<^sub>d factor) \\<and>\n                                   b' = lead_coeff f' \\<and>\n                                   pl.unique_factorization_m f'\n                                    (b', mset gs') \\<and>\n                                   p.dvdm u factor) \\<and>\n                                  ((gs \\<noteq> [] \\<longrightarrow>\n                                    length gs' < length gs) \\<and>\n                                   factor dvd f) \\<and>\n                                  f' dvd f \\<and>\n                                  set gs' \\<subseteq> set gs \\<and>\n                                  (gs' = [] \\<longrightarrow> f' = 1);\n        LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n        (gs', b', f', factor);\n        \\<forall>i\\<in>{d + 1..<Suc j}.\n           LLL_reconstruction_inner p l gs f u Degs i = None;\n        Suc j \\<le> n; d < Suc j\\<rbrakk>\n       \\<Longrightarrow> ((f = f' * factor \\<and>\n                           irreducible\\<^sub>d factor) \\<and>\n                          b' = lead_coeff f' \\<and>\n                          pl.unique_factorization_m f' (b', mset gs') \\<and>\n                          p.dvdm u factor) \\<and>\n                         ((gs \\<noteq> [] \\<longrightarrow>\n                           length gs' < length gs) \\<and>\n                          factor dvd f) \\<and>\n                         f' dvd f \\<and>\n                         set gs' \\<subseteq> set gs \\<and>\n                         (gs' = [] \\<longrightarrow> f' = 1)", "have jn: \"j<n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j < n", "using Suc.prems"], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n  (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<Suc j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  Suc j \\<le> n\n  d < Suc j\n\ngoal (1 subgoal):\n 1. j < n", "by auto"], ["proof (state)\nthis:\n  j < n\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>LLL_reconstruction_inner_loop p l gs f u Degs j =\n                         (gs', b', f', factor);\n                 \\<forall>i\\<in>{d + 1..<j}.\n                    LLL_reconstruction_inner p l gs f u Degs i = None;\n                 j \\<le> n; d < j\\<rbrakk>\n                \\<Longrightarrow> ((f = f' * factor \\<and>\n                                    irreducible\\<^sub>d factor) \\<and>\n                                   b' = lead_coeff f' \\<and>\n                                   pl.unique_factorization_m f'\n                                    (b', mset gs') \\<and>\n                                   p.dvdm u factor) \\<and>\n                                  ((gs \\<noteq> [] \\<longrightarrow>\n                                    length gs' < length gs) \\<and>\n                                   factor dvd f) \\<and>\n                                  f' dvd f \\<and>\n                                  set gs' \\<subseteq> set gs \\<and>\n                                  (gs' = [] \\<longrightarrow> f' = 1);\n        LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n        (gs', b', f', factor);\n        \\<forall>i\\<in>{d + 1..<Suc j}.\n           LLL_reconstruction_inner p l gs f u Degs i = None;\n        Suc j \\<le> n; d < Suc j\\<rbrakk>\n       \\<Longrightarrow> ((f = f' * factor \\<and>\n                           irreducible\\<^sub>d factor) \\<and>\n                          b' = lead_coeff f' \\<and>\n                          pl.unique_factorization_m f' (b', mset gs') \\<and>\n                          p.dvdm u factor) \\<and>\n                         ((gs \\<noteq> [] \\<longrightarrow>\n                           length gs' < length gs) \\<and>\n                          factor dvd f) \\<and>\n                         f' dvd f \\<and>\n                         set gs' \\<subseteq> set gs \\<and>\n                         (gs' = [] \\<longrightarrow> f' = 1)", "have deg: \"Suc j \\<le> degree f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc j \\<le> degree f", "using Suc.prems"], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n  (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<Suc j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  Suc j \\<le> n\n  d < Suc j\n\ngoal (1 subgoal):\n 1. Suc j \\<le> degree f", "by auto"], ["proof (state)\nthis:\n  Suc j \\<le> degree f\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>LLL_reconstruction_inner_loop p l gs f u Degs j =\n                         (gs', b', f', factor);\n                 \\<forall>i\\<in>{d + 1..<j}.\n                    LLL_reconstruction_inner p l gs f u Degs i = None;\n                 j \\<le> n; d < j\\<rbrakk>\n                \\<Longrightarrow> ((f = f' * factor \\<and>\n                                    irreducible\\<^sub>d factor) \\<and>\n                                   b' = lead_coeff f' \\<and>\n                                   pl.unique_factorization_m f'\n                                    (b', mset gs') \\<and>\n                                   p.dvdm u factor) \\<and>\n                                  ((gs \\<noteq> [] \\<longrightarrow>\n                                    length gs' < length gs) \\<and>\n                                   factor dvd f) \\<and>\n                                  f' dvd f \\<and>\n                                  set gs' \\<subseteq> set gs \\<and>\n                                  (gs' = [] \\<longrightarrow> f' = 1);\n        LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n        (gs', b', f', factor);\n        \\<forall>i\\<in>{d + 1..<Suc j}.\n           LLL_reconstruction_inner p l gs f u Degs i = None;\n        Suc j \\<le> n; d < Suc j\\<rbrakk>\n       \\<Longrightarrow> ((f = f' * factor \\<and>\n                           irreducible\\<^sub>d factor) \\<and>\n                          b' = lead_coeff f' \\<and>\n                          pl.unique_factorization_m f' (b', mset gs') \\<and>\n                          p.dvdm u factor) \\<and>\n                         ((gs \\<noteq> [] \\<longrightarrow>\n                           length gs' < length gs) \\<and>\n                          factor dvd f) \\<and>\n                         f' dvd f \\<and>\n                         set gs' \\<subseteq> set gs \\<and>\n                         (gs' = [] \\<longrightarrow> f' = 1)", "have c: \"\\<And>factor. p.dvdm u factor \\<Longrightarrow> factor dvd f \\<Longrightarrow> j \\<le> degree factor\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n       \\<Longrightarrow> j \\<le> degree factor", "by (rule LLL_reconstruction_inner_None_upt_j[OF ij dj], insert n jn, auto)"], ["proof (state)\nthis:\n  \\<lbrakk>p.dvdm u ?factor1; ?factor1 dvd f\\<rbrakk>\n  \\<Longrightarrow> j \\<le> degree ?factor1\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>LLL_reconstruction_inner_loop p l gs f u Degs j =\n                         (gs', b', f', factor);\n                 \\<forall>i\\<in>{d + 1..<j}.\n                    LLL_reconstruction_inner p l gs f u Degs i = None;\n                 j \\<le> n; d < j\\<rbrakk>\n                \\<Longrightarrow> ((f = f' * factor \\<and>\n                                    irreducible\\<^sub>d factor) \\<and>\n                                   b' = lead_coeff f' \\<and>\n                                   pl.unique_factorization_m f'\n                                    (b', mset gs') \\<and>\n                                   p.dvdm u factor) \\<and>\n                                  ((gs \\<noteq> [] \\<longrightarrow>\n                                    length gs' < length gs) \\<and>\n                                   factor dvd f) \\<and>\n                                  f' dvd f \\<and>\n                                  set gs' \\<subseteq> set gs \\<and>\n                                  (gs' = [] \\<longrightarrow> f' = 1);\n        LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n        (gs', b', f', factor);\n        \\<forall>i\\<in>{d + 1..<Suc j}.\n           LLL_reconstruction_inner p l gs f u Degs i = None;\n        Suc j \\<le> n; d < Suc j\\<rbrakk>\n       \\<Longrightarrow> ((f = f' * factor \\<and>\n                           irreducible\\<^sub>d factor) \\<and>\n                          b' = lead_coeff f' \\<and>\n                          pl.unique_factorization_m f' (b', mset gs') \\<and>\n                          p.dvdm u factor) \\<and>\n                         ((gs \\<noteq> [] \\<longrightarrow>\n                           length gs' < length gs) \\<and>\n                          factor dvd f) \\<and>\n                         f' dvd f \\<and>\n                         set gs' \\<subseteq> set gs \\<and>\n                         (gs' = [] \\<longrightarrow> f' = 1)", "have 1: \"?innerl (Suc j) = (gs', b', f', factor)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n    (gs', b', f', factor)", "using Suc.prems"], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n  (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<Suc j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  Suc j \\<le> n\n  d < Suc j\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n    (gs', b', f', factor)", "by auto"], ["proof (state)\nthis:\n  LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n  (gs', b', f', factor)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>LLL_reconstruction_inner_loop p l gs f u Degs j =\n                         (gs', b', f', factor);\n                 \\<forall>i\\<in>{d + 1..<j}.\n                    LLL_reconstruction_inner p l gs f u Degs i = None;\n                 j \\<le> n; d < j\\<rbrakk>\n                \\<Longrightarrow> ((f = f' * factor \\<and>\n                                    irreducible\\<^sub>d factor) \\<and>\n                                   b' = lead_coeff f' \\<and>\n                                   pl.unique_factorization_m f'\n                                    (b', mset gs') \\<and>\n                                   p.dvdm u factor) \\<and>\n                                  ((gs \\<noteq> [] \\<longrightarrow>\n                                    length gs' < length gs) \\<and>\n                                   factor dvd f) \\<and>\n                                  f' dvd f \\<and>\n                                  set gs' \\<subseteq> set gs \\<and>\n                                  (gs' = [] \\<longrightarrow> f' = 1);\n        LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n        (gs', b', f', factor);\n        \\<forall>i\\<in>{d + 1..<Suc j}.\n           LLL_reconstruction_inner p l gs f u Degs i = None;\n        Suc j \\<le> n; d < Suc j\\<rbrakk>\n       \\<Longrightarrow> ((f = f' * factor \\<and>\n                           irreducible\\<^sub>d factor) \\<and>\n                          b' = lead_coeff f' \\<and>\n                          pl.unique_factorization_m f' (b', mset gs') \\<and>\n                          p.dvdm u factor) \\<and>\n                         ((gs \\<noteq> [] \\<longrightarrow>\n                           length gs' < length gs) \\<and>\n                          factor dvd f) \\<and>\n                         f' dvd f \\<and>\n                         set gs' \\<subseteq> set gs \\<and>\n                         (gs' = [] \\<longrightarrow> f' = 1)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "proof (cases \"?inner (Suc j) = None\")"], ["proof (state)\ngoal (2 subgoals):\n 1. LLL_reconstruction_inner p l gs f u Degs (Suc j) =\n    None \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)\n 2. LLL_reconstruction_inner p l gs f u Degs (Suc j) \\<noteq>\n    None \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "case False"], ["proof (state)\nthis:\n  LLL_reconstruction_inner p l gs f u Degs (Suc j) \\<noteq> None\n\ngoal (2 subgoals):\n 1. LLL_reconstruction_inner p l gs f u Degs (Suc j) =\n    None \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)\n 2. LLL_reconstruction_inner p l gs f u Degs (Suc j) \\<noteq>\n    None \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "have LLL_rw: \"?inner (Suc j) = Some (gs', b', f', factor)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs (Suc j) =\n    Some (gs', b', f', factor)", "using False deg Suc.prems"], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner p l gs f u Degs (Suc j) \\<noteq> None\n  Suc j \\<le> degree f\n  LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n  (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<Suc j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  Suc j \\<le> n\n  d < Suc j\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs (Suc j) =\n    Some (gs', b', f', factor)", "by auto"], ["proof (state)\nthis:\n  LLL_reconstruction_inner p l gs f u Degs (Suc j) =\n  Some (gs', b', f', factor)\n\ngoal (2 subgoals):\n 1. LLL_reconstruction_inner p l gs f u Degs (Suc j) =\n    None \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)\n 2. LLL_reconstruction_inner p l gs f u Degs (Suc j) \\<noteq>\n    None \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "using LLL_reconstruction_inner_sound[OF dj jn c LLL_rw]"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n              \\<Longrightarrow> p.dvdm u factor;\n   \\<And>factor.\n      \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n      \\<Longrightarrow> factor dvd f\\<rbrakk>\n  \\<Longrightarrow> f = f' * factor\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n              \\<Longrightarrow> p.dvdm u factor;\n   \\<And>factor.\n      \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n      \\<Longrightarrow> factor dvd f\\<rbrakk>\n  \\<Longrightarrow> irreducible\\<^sub>d factor\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n              \\<Longrightarrow> p.dvdm u factor;\n   \\<And>factor.\n      \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n      \\<Longrightarrow> factor dvd f\\<rbrakk>\n  \\<Longrightarrow> b' = lead_coeff f'\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n              \\<Longrightarrow> p.dvdm u factor;\n   \\<And>factor.\n      \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n      \\<Longrightarrow> factor dvd f\\<rbrakk>\n  \\<Longrightarrow> pl.unique_factorization_m f' (lead_coeff f', mset gs')\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n              \\<Longrightarrow> p.dvdm u factor;\n   \\<And>factor.\n      \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n      \\<Longrightarrow> factor dvd f\\<rbrakk>\n  \\<Longrightarrow> p.dvdm u factor\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n              \\<Longrightarrow> p.dvdm u factor;\n   \\<And>factor.\n      \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n      \\<Longrightarrow> factor dvd f\\<rbrakk>\n  \\<Longrightarrow> degree factor = j\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n              \\<Longrightarrow> p.dvdm u factor;\n   \\<And>factor.\n      \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n      \\<Longrightarrow> factor dvd f\\<rbrakk>\n  \\<Longrightarrow> length gs' < length gs\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n              \\<Longrightarrow> p.dvdm u factor;\n   \\<And>factor.\n      \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n      \\<Longrightarrow> factor dvd f\\<rbrakk>\n  \\<Longrightarrow> set gs' \\<subseteq> set gs\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n              \\<Longrightarrow> p.dvdm u factor;\n   \\<And>factor.\n      \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n      \\<Longrightarrow> factor dvd f\\<rbrakk>\n  \\<Longrightarrow> gs' \\<noteq> []\n\ngoal (1 subgoal):\n 1. ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "by fastforce"], ["proof (state)\nthis:\n  ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n   b' = lead_coeff f' \\<and>\n   pl.unique_factorization_m f' (b', mset gs') \\<and>\n   p.dvdm u factor) \\<and>\n  ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n   factor dvd f) \\<and>\n  f' dvd f \\<and>\n  set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs (Suc j) =\n    None \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs (Suc j) =\n    None \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "case True"], ["proof (state)\nthis:\n  LLL_reconstruction_inner p l gs f u Degs (Suc j) = None\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs (Suc j) =\n    None \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "note Suc_j_None = True"], ["proof (state)\nthis:\n  LLL_reconstruction_inner p l gs f u Degs (Suc j) = None\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs (Suc j) =\n    None \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "proof (cases \"d = j\")"], ["proof (state)\ngoal (2 subgoals):\n 1. d = j \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)\n 2. d \\<noteq> j \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "case False"], ["proof (state)\nthis:\n  d \\<noteq> j\n\ngoal (2 subgoals):\n 1. d = j \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)\n 2. d \\<noteq> j \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "have nj: \"j \\<le> degree f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j \\<le> degree f", "using Suc.prems False"], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n  (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<Suc j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  Suc j \\<le> n\n  d < Suc j\n  d \\<noteq> j\n\ngoal (1 subgoal):\n 1. j \\<le> degree f", "by auto"], ["proof (state)\nthis:\n  j \\<le> degree f\n\ngoal (2 subgoals):\n 1. d = j \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)\n 2. d \\<noteq> j \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "moreover"], ["proof (state)\nthis:\n  j \\<le> degree f\n\ngoal (2 subgoals):\n 1. d = j \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)\n 2. d \\<noteq> j \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "have dj2: \"d < j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d < j", "using Suc.prems False"], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n  (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<Suc j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  Suc j \\<le> n\n  d < Suc j\n  d \\<noteq> j\n\ngoal (1 subgoal):\n 1. d < j", "by auto"], ["proof (state)\nthis:\n  d < j\n\ngoal (2 subgoals):\n 1. d = j \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)\n 2. d \\<noteq> j \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "ultimately"], ["proof (chain)\npicking this:\n  j \\<le> degree f\n  d < j", "show ?thesis"], ["proof (prove)\nusing this:\n  j \\<le> degree f\n  d < j\n\ngoal (1 subgoal):\n 1. ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "using Suc.prems Suc.hyps"], ["proof (prove)\nusing this:\n  j \\<le> degree f\n  d < j\n  LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n  (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<Suc j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  Suc j \\<le> n\n  d < Suc j\n  \\<lbrakk>LLL_reconstruction_inner_loop p l gs f u Degs j =\n           (gs', b', f', factor);\n   \\<forall>i\\<in>{d + 1..<j}.\n      LLL_reconstruction_inner p l gs f u Degs i = None;\n   j \\<le> n; d < j\\<rbrakk>\n  \\<Longrightarrow> ((f = f' * factor \\<and>\n                      irreducible\\<^sub>d factor) \\<and>\n                     b' = lead_coeff f' \\<and>\n                     pl.unique_factorization_m f' (b', mset gs') \\<and>\n                     p.dvdm u factor) \\<and>\n                    ((gs \\<noteq> [] \\<longrightarrow>\n                      length gs' < length gs) \\<and>\n                     factor dvd f) \\<and>\n                    f' dvd f \\<and>\n                    set gs' \\<subseteq> set gs \\<and>\n                    (gs' = [] \\<longrightarrow> f' = 1)\n\ngoal (1 subgoal):\n 1. ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "by fastforce"], ["proof (state)\nthis:\n  ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n   b' = lead_coeff f' \\<and>\n   pl.unique_factorization_m f' (b', mset gs') \\<and>\n   p.dvdm u factor) \\<and>\n  ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n   factor dvd f) \\<and>\n  f' dvd f \\<and>\n  set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)\n\ngoal (1 subgoal):\n 1. d = j \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. d = j \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "case True"], ["proof (state)\nthis:\n  d = j\n\ngoal (1 subgoal):\n 1. d = j \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "note d_eq_j = True"], ["proof (state)\nthis:\n  d = j\n\ngoal (1 subgoal):\n 1. d = j \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "proof (cases \"irreducible\\<^sub>d f\")"], ["proof (state)\ngoal (2 subgoals):\n 1. irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)\n 2. \\<not> irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "case True"], ["proof (state)\nthis:\n  irreducible\\<^sub>d f\n\ngoal (2 subgoals):\n 1. irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)\n 2. \\<not> irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "have pl_Mp_1: \"pl.Mp 1 = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pl.Mp 1 = 1", "by auto"], ["proof (state)\nthis:\n  pl.Mp 1 = 1\n\ngoal (2 subgoals):\n 1. irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)\n 2. \\<not> irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "have d_Suc_j: \"d < Suc j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d < Suc j", "using Suc.prems"], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n  (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<Suc j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  Suc j \\<le> n\n  d < Suc j\n\ngoal (1 subgoal):\n 1. d < Suc j", "by auto"], ["proof (state)\nthis:\n  d < Suc j\n\ngoal (2 subgoals):\n 1. irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)\n 2. \\<not> irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "have \"?innerl (Suc j) = ([],1,1,f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) = ([], 1, 1, f)", "by (rule irreducible_imp_LLL_reconstruction_inner_loop_f[OF True d_Suc_j])"], ["proof (state)\nthis:\n  LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) = ([], 1, 1, f)\n\ngoal (2 subgoals):\n 1. irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)\n 2. \\<not> irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "hence result_eq: \"([],1,1,f) = (gs', b', f', factor)\""], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) = ([], 1, 1, f)\n\ngoal (1 subgoal):\n 1. ([], 1, 1, f) = (gs', b', f', factor)", "using Suc.prems"], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) = ([], 1, 1, f)\n  LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n  (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<Suc j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  Suc j \\<le> n\n  d < Suc j\n\ngoal (1 subgoal):\n 1. ([], 1, 1, f) = (gs', b', f', factor)", "by auto"], ["proof (state)\nthis:\n  ([], 1, 1, f) = (gs', b', f', factor)\n\ngoal (2 subgoals):\n 1. irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)\n 2. \\<not> irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "moreover"], ["proof (state)\nthis:\n  ([], 1, 1, f) = (gs', b', f', factor)\n\ngoal (2 subgoals):\n 1. irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)\n 2. \\<not> irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "have thesis1: \"p.dvdm u factor\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p.dvdm u factor", "using u_f result_eq"], ["proof (prove)\nusing this:\n  p.dvdm u f\n  ([], 1, 1, f) = (gs', b', f', factor)\n\ngoal (1 subgoal):\n 1. p.dvdm u factor", "by auto"], ["proof (state)\nthis:\n  p.dvdm u factor\n\ngoal (2 subgoals):\n 1. irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)\n 2. \\<not> irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "moreover"], ["proof (state)\nthis:\n  p.dvdm u factor\n\ngoal (2 subgoals):\n 1. irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)\n 2. \\<not> irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "have thesis2: \"f' = pl.Mp (Polynomial.smult b' (prod_list gs'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f' = pl.Mp (smult b' (prod_list gs'))", "using result_eq pl_Mp_1"], ["proof (prove)\nusing this:\n  ([], 1, 1, f) = (gs', b', f', factor)\n  pl.Mp 1 = 1\n\ngoal (1 subgoal):\n 1. f' = pl.Mp (smult b' (prod_list gs'))", "by auto"], ["proof (state)\nthis:\n  f' = pl.Mp (smult b' (prod_list gs'))\n\ngoal (2 subgoals):\n 1. irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)\n 2. \\<not> irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "ultimately"], ["proof (chain)\npicking this:\n  ([], 1, 1, f) = (gs', b', f', factor)\n  p.dvdm u factor\n  f' = pl.Mp (smult b' (prod_list gs'))", "show ?thesis"], ["proof (prove)\nusing this:\n  ([], 1, 1, f) = (gs', b', f', factor)\n  p.dvdm u factor\n  f' = pl.Mp (smult b' (prod_list gs'))\n\ngoal (1 subgoal):\n 1. ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "using True"], ["proof (prove)\nusing this:\n  ([], 1, 1, f) = (gs', b', f', factor)\n  p.dvdm u factor\n  f' = pl.Mp (smult b' (prod_list gs'))\n  irreducible\\<^sub>d f\n\ngoal (1 subgoal):\n 1. ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "by (auto simp: unique_factorization_m_1)"], ["proof (state)\nthis:\n  ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n   b' = lead_coeff f' \\<and>\n   pl.unique_factorization_m f' (b', mset gs') \\<and>\n   p.dvdm u factor) \\<and>\n  ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n   factor dvd f) \\<and>\n  f' dvd f \\<and>\n  set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)\n\ngoal (1 subgoal):\n 1. \\<not> irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "case False"], ["proof (state)\nthis:\n  \\<not> irreducible\\<^sub>d f\n\ngoal (1 subgoal):\n 1. \\<not> irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "note irreducible_f = False"], ["proof (state)\nthis:\n  \\<not> irreducible\\<^sub>d f\n\ngoal (1 subgoal):\n 1. \\<not> irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "have \"\\<exists>j'. Suc j \\<le> j' \\<and> j'\\<le>n \\<and> d<j'\n        \\<and> (?inner j' = Some (gs', b', f', factor))\n        \\<and> (\\<forall>i\\<in>{d+1..<j'}. ?inner i = None)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j'\\<ge>Suc j.\n       j' \\<le> n \\<and>\n       d < j' \\<and>\n       LLL_reconstruction_inner p l gs f u Degs j' =\n       Some (gs', b', f', factor) \\<and>\n       (\\<forall>i\\<in>{d + 1..<j'}.\n           LLL_reconstruction_inner p l gs f u Degs i = None)", "proof (rule exists_index_LLL_reconstruction_inner_Some[OF _ _ _ _ False])"], ["proof (state)\ngoal (4 subgoals):\n 1. LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n    (gs', b', f', factor)\n 2. \\<forall>i\\<in>{d + 1..<Suc j}.\n       LLL_reconstruction_inner p l gs f u Degs i = None\n 3. d < Suc j\n 4. Suc j \\<le> n", "show \"?innerl (Suc j) = (gs', b', f', factor)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n    (gs', b', f', factor)", "using Suc.prems"], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n  (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<Suc j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  Suc j \\<le> n\n  d < Suc j\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n    (gs', b', f', factor)", "by auto"], ["proof (state)\nthis:\n  LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n  (gs', b', f', factor)\n\ngoal (3 subgoals):\n 1. \\<forall>i\\<in>{d + 1..<Suc j}.\n       LLL_reconstruction_inner p l gs f u Degs i = None\n 2. d < Suc j\n 3. Suc j \\<le> n", "show \"\\<forall>i \\<in> {d + 1..<Suc j}. ?inner i = None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{d + 1..<Suc j}.\n       LLL_reconstruction_inner p l gs f u Degs i = None", "using Suc.prems"], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n  (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<Suc j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  Suc j \\<le> n\n  d < Suc j\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{d + 1..<Suc j}.\n       LLL_reconstruction_inner p l gs f u Degs i = None", "by auto"], ["proof (state)\nthis:\n  \\<forall>i\\<in>{d + 1..<Suc j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n\ngoal (2 subgoals):\n 1. d < Suc j\n 2. Suc j \\<le> n", "show \"Suc j \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc j \\<le> n", "using jn"], ["proof (prove)\nusing this:\n  j < n\n\ngoal (1 subgoal):\n 1. Suc j \\<le> n", "by auto"], ["proof (state)\nthis:\n  Suc j \\<le> n\n\ngoal (1 subgoal):\n 1. d < Suc j", "show \"d < Suc j \""], ["proof (prove)\ngoal (1 subgoal):\n 1. d < Suc j", "using Suc.prems"], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner_loop p l gs f u Degs (Suc j) =\n  (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<Suc j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  Suc j \\<le> n\n  d < Suc j\n\ngoal (1 subgoal):\n 1. d < Suc j", "by auto"], ["proof (state)\nthis:\n  d < Suc j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>j'\\<ge>Suc j.\n     j' \\<le> n \\<and>\n     d < j' \\<and>\n     LLL_reconstruction_inner p l gs f u Degs j' =\n     Some (gs', b', f', factor) \\<and>\n     (\\<forall>i\\<in>{d + 1..<j'}.\n         LLL_reconstruction_inner p l gs f u Degs i = None)\n\ngoal (1 subgoal):\n 1. \\<not> irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "from this"], ["proof (chain)\npicking this:\n  \\<exists>j'\\<ge>Suc j.\n     j' \\<le> n \\<and>\n     d < j' \\<and>\n     LLL_reconstruction_inner p l gs f u Degs j' =\n     Some (gs', b', f', factor) \\<and>\n     (\\<forall>i\\<in>{d + 1..<j'}.\n         LLL_reconstruction_inner p l gs f u Degs i = None)", "obtain a where da: \"d < a\" and an: \"a \\<le> n\" and ja: \"j \\<le> a\"\n          and a1: \"?inner a = Some (gs', b', f', factor)\"\n          and a2: \"\\<forall>i\\<in>{d+1..<a}. ?inner i = None\""], ["proof (prove)\nusing this:\n  \\<exists>j'\\<ge>Suc j.\n     j' \\<le> n \\<and>\n     d < j' \\<and>\n     LLL_reconstruction_inner p l gs f u Degs j' =\n     Some (gs', b', f', factor) \\<and>\n     (\\<forall>i\\<in>{d + 1..<j'}.\n         LLL_reconstruction_inner p l gs f u Degs i = None)\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>d < a; a \\<le> n; j \\<le> a;\n         LLL_reconstruction_inner p l gs f u Degs a =\n         Some (gs', b', f', factor);\n         \\<forall>i\\<in>{d + 1..<a}.\n            LLL_reconstruction_inner p l gs f u Degs i = None\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  d < a\n  a \\<le> n\n  j \\<le> a\n  LLL_reconstruction_inner p l gs f u Degs a = Some (gs', b', f', factor)\n  \\<forall>i\\<in>{d + 1..<a}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n\ngoal (1 subgoal):\n 1. \\<not> irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "define j' where j'[simp]: \"j'\\<equiv>a-1\""], ["proof (state)\nthis:\n  j' \\<equiv> a - 1\n\ngoal (1 subgoal):\n 1. \\<not> irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "have dj': \"d \\<le> j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d \\<le> j'", "using da"], ["proof (prove)\nusing this:\n  d < a\n\ngoal (1 subgoal):\n 1. d \\<le> j'", "by auto"], ["proof (state)\nthis:\n  d \\<le> j'\n\ngoal (1 subgoal):\n 1. \\<not> irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "have j': \"j' \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j' \\<noteq> 0", "using dj' d0"], ["proof (prove)\nusing this:\n  d \\<le> j'\n  0 < d\n\ngoal (1 subgoal):\n 1. j' \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  j' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "hence j'n: \"j' < n\""], ["proof (prove)\nusing this:\n  j' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. j' < n", "using an"], ["proof (prove)\nusing this:\n  j' \\<noteq> 0\n  a \\<le> n\n\ngoal (1 subgoal):\n 1. j' < n", "by auto"], ["proof (state)\nthis:\n  j' < n\n\ngoal (1 subgoal):\n 1. \\<not> irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "have LLL: \"?inner (Suc j') = Some (gs', b', f', factor)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs (Suc j') =\n    Some (gs', b', f', factor)", "using a1 j'"], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner p l gs f u Degs a = Some (gs', b', f', factor)\n  j' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner p l gs f u Degs (Suc j') =\n    Some (gs', b', f', factor)", "by auto"], ["proof (state)\nthis:\n  LLL_reconstruction_inner p l gs f u Degs (Suc j') =\n  Some (gs', b', f', factor)\n\ngoal (1 subgoal):\n 1. \\<not> irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "have prev_None: \"\\<forall>i\\<in>{d+1..j'}. ?inner i = None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{d + 1..j'}.\n       LLL_reconstruction_inner p l gs f u Degs i = None", "using a2 j'"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>{d + 1..<a}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  j' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{d + 1..j'}.\n       LLL_reconstruction_inner p l gs f u Degs i = None", "by auto"], ["proof (state)\nthis:\n  \\<forall>i\\<in>{d + 1..j'}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n\ngoal (1 subgoal):\n 1. \\<not> irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "have Suc_rw: \"Suc (j'- 1) = j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (j' - 1) = j'", "using j'"], ["proof (prove)\nusing this:\n  j' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Suc (j' - 1) = j'", "by auto"], ["proof (state)\nthis:\n  Suc (j' - 1) = j'\n\ngoal (1 subgoal):\n 1. \\<not> irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "have c: \"\\<And>factor. p.dvdm u factor \\<Longrightarrow> factor dvd f \\<Longrightarrow> Suc (j' - 1) \\<le> degree factor\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n       \\<Longrightarrow> Suc (j' - 1) \\<le> degree factor", "by (rule LLL_reconstruction_inner_None_upt_j, insert dj' Suc_rw j'n prev_None, auto)"], ["proof (state)\nthis:\n  \\<lbrakk>p.dvdm u ?factor1; ?factor1 dvd f\\<rbrakk>\n  \\<Longrightarrow> Suc (j' - 1) \\<le> degree ?factor1\n\ngoal (1 subgoal):\n 1. \\<not> irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "hence c2: \"\\<And>factor. p.dvdm u factor \\<Longrightarrow> factor dvd f \\<Longrightarrow> j' \\<le> degree factor\""], ["proof (prove)\nusing this:\n  \\<lbrakk>p.dvdm u ?factor1; ?factor1 dvd f\\<rbrakk>\n  \\<Longrightarrow> Suc (j' - 1) \\<le> degree ?factor1\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n       \\<Longrightarrow> j' \\<le> degree factor", "using j'"], ["proof (prove)\nusing this:\n  \\<lbrakk>p.dvdm u ?factor1; ?factor1 dvd f\\<rbrakk>\n  \\<Longrightarrow> Suc (j' - 1) \\<le> degree ?factor1\n  j' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>factor.\n       \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n       \\<Longrightarrow> j' \\<le> degree factor", "by force"], ["proof (state)\nthis:\n  \\<lbrakk>p.dvdm u ?factor1; ?factor1 dvd f\\<rbrakk>\n  \\<Longrightarrow> j' \\<le> degree ?factor1\n\ngoal (1 subgoal):\n 1. \\<not> irreducible\\<^sub>d f \\<Longrightarrow>\n    ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "using LLL_reconstruction_inner_sound[OF dj' j'n c2 LLL]"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n              \\<Longrightarrow> p.dvdm u factor;\n   \\<And>factor.\n      \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n      \\<Longrightarrow> factor dvd f\\<rbrakk>\n  \\<Longrightarrow> f = f' * factor\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n              \\<Longrightarrow> p.dvdm u factor;\n   \\<And>factor.\n      \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n      \\<Longrightarrow> factor dvd f\\<rbrakk>\n  \\<Longrightarrow> irreducible\\<^sub>d factor\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n              \\<Longrightarrow> p.dvdm u factor;\n   \\<And>factor.\n      \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n      \\<Longrightarrow> factor dvd f\\<rbrakk>\n  \\<Longrightarrow> b' = lead_coeff f'\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n              \\<Longrightarrow> p.dvdm u factor;\n   \\<And>factor.\n      \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n      \\<Longrightarrow> factor dvd f\\<rbrakk>\n  \\<Longrightarrow> pl.unique_factorization_m f' (lead_coeff f', mset gs')\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n              \\<Longrightarrow> p.dvdm u factor;\n   \\<And>factor.\n      \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n      \\<Longrightarrow> factor dvd f\\<rbrakk>\n  \\<Longrightarrow> p.dvdm u factor\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n              \\<Longrightarrow> p.dvdm u factor;\n   \\<And>factor.\n      \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n      \\<Longrightarrow> factor dvd f\\<rbrakk>\n  \\<Longrightarrow> degree factor = j'\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n              \\<Longrightarrow> p.dvdm u factor;\n   \\<And>factor.\n      \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n      \\<Longrightarrow> factor dvd f\\<rbrakk>\n  \\<Longrightarrow> length gs' < length gs\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n              \\<Longrightarrow> p.dvdm u factor;\n   \\<And>factor.\n      \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n      \\<Longrightarrow> factor dvd f\\<rbrakk>\n  \\<Longrightarrow> set gs' \\<subseteq> set gs\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n              \\<Longrightarrow> p.dvdm u factor;\n   \\<And>factor.\n      \\<lbrakk>p.dvdm u factor; factor dvd f\\<rbrakk>\n      \\<Longrightarrow> factor dvd f\\<rbrakk>\n  \\<Longrightarrow> gs' \\<noteq> []\n\ngoal (1 subgoal):\n 1. ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n     b' = lead_coeff f' \\<and>\n     pl.unique_factorization_m f' (b', mset gs') \\<and>\n     p.dvdm u factor) \\<and>\n    ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n     factor dvd f) \\<and>\n    f' dvd f \\<and>\n    set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)", "by fastforce"], ["proof (state)\nthis:\n  ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n   b' = lead_coeff f' \\<and>\n   pl.unique_factorization_m f' (b', mset gs') \\<and>\n   p.dvdm u factor) \\<and>\n  ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n   factor dvd f) \\<and>\n  f' dvd f \\<and>\n  set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n   b' = lead_coeff f' \\<and>\n   pl.unique_factorization_m f' (b', mset gs') \\<and>\n   p.dvdm u factor) \\<and>\n  ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n   factor dvd f) \\<and>\n  f' dvd f \\<and>\n  set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n   b' = lead_coeff f' \\<and>\n   pl.unique_factorization_m f' (b', mset gs') \\<and>\n   p.dvdm u factor) \\<and>\n  ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n   factor dvd f) \\<and>\n  f' dvd f \\<and>\n  set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((f = f' * factor \\<and> irreducible\\<^sub>d factor) \\<and>\n   b' = lead_coeff f' \\<and>\n   pl.unique_factorization_m f' (b', mset gs') \\<and>\n   p.dvdm u factor) \\<and>\n  ((gs \\<noteq> [] \\<longrightarrow> length gs' < length gs) \\<and>\n   factor dvd f) \\<and>\n  f' dvd f \\<and>\n  set gs' \\<subseteq> set gs \\<and> (gs' = [] \\<longrightarrow> f' = 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma LLL_reconstruction_inner_loop_j_ge_n:\n  assumes ret: \"LLL_reconstruction_inner_loop p l gs f u Degs j = (gs',b',f',factor)\"\n    and ij: \"\\<forall>i\\<in>{d+1..n}. LLL_reconstruction_inner p l gs f u Degs i = None\"\n    and dj: \"d < j\"\n    and jn: \"j>n\"\n  shows \"f = f' * factor\" (is \"?g1\")\n    and \"irreducible\\<^sub>d factor\" (is \"?g2\")\n    and \"b' = lead_coeff f'\" (is \"?g3\")\n    and \"pl.unique_factorization_m f' (b', mset gs')\" (is \"?g4\") \n    and \"p.dvdm u factor\" (is ?g5)\n    and \"gs \\<noteq> [] \\<longrightarrow> length gs' < length gs\" (is ?g6)\n    and \"factor dvd f\" (is ?g7)\n    and \"f' dvd f\" (is ?g8)\n    and \"set gs' \\<subseteq> set gs\" (is ?g9)\n    and \"f' = 1\" (is ?g10)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((f = f' * factor &&& irreducible\\<^sub>d factor) &&&\n     b' = lead_coeff f' &&&\n     pl.unique_factorization_m f' (b', mset gs') &&& p.dvdm u factor) &&&\n    (gs \\<noteq> [] \\<longrightarrow> length gs' < length gs &&&\n     factor dvd f) &&&\n    f' dvd f &&& set gs' \\<subseteq> set gs &&& f' = 1", "proof -"], ["proof (state)\ngoal (10 subgoals):\n 1. f = f' * factor\n 2. irreducible\\<^sub>d factor\n 3. b' = lead_coeff f'\n 4. pl.unique_factorization_m f' (b', mset gs')\n 5. p.dvdm u factor\n 6. gs \\<noteq> [] \\<longrightarrow> length gs' < length gs\n 7. factor dvd f\n 8. f' dvd f\n 9. set gs' \\<subseteq> set gs\n 10. f' = 1", "have \"LLL_reconstruction_inner_loop p l gs f u Degs j = ([],1,1,f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner_loop p l gs f u Degs j = ([], 1, 1, f)", "using jn"], ["proof (prove)\nusing this:\n  n < j\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner_loop p l gs f u Degs j = ([], 1, 1, f)", "by auto"], ["proof (state)\nthis:\n  LLL_reconstruction_inner_loop p l gs f u Degs j = ([], 1, 1, f)\n\ngoal (10 subgoals):\n 1. f = f' * factor\n 2. irreducible\\<^sub>d factor\n 3. b' = lead_coeff f'\n 4. pl.unique_factorization_m f' (b', mset gs')\n 5. p.dvdm u factor\n 6. gs \\<noteq> [] \\<longrightarrow> length gs' < length gs\n 7. factor dvd f\n 8. f' dvd f\n 9. set gs' \\<subseteq> set gs\n 10. f' = 1", "hence gs': \"gs'=[]\" and b': \"b'=1\" and f': \"f' = 1\" and factor: \"factor = f\""], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner_loop p l gs f u Degs j = ([], 1, 1, f)\n\ngoal (1 subgoal):\n 1. (gs' = [] &&& b' = 1) &&& f' = 1 &&& factor = f", "using ret"], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner_loop p l gs f u Degs j = ([], 1, 1, f)\n  LLL_reconstruction_inner_loop p l gs f u Degs j = (gs', b', f', factor)\n\ngoal (1 subgoal):\n 1. (gs' = [] &&& b' = 1) &&& f' = 1 &&& factor = f", "by auto"], ["proof (state)\nthis:\n  gs' = []\n  b' = 1\n  f' = 1\n  factor = f\n\ngoal (10 subgoals):\n 1. f = f' * factor\n 2. irreducible\\<^sub>d factor\n 3. b' = lead_coeff f'\n 4. pl.unique_factorization_m f' (b', mset gs')\n 5. p.dvdm u factor\n 6. gs \\<noteq> [] \\<longrightarrow> length gs' < length gs\n 7. factor dvd f\n 8. f' dvd f\n 9. set gs' \\<subseteq> set gs\n 10. f' = 1", "have \"irreducible\\<^sub>d f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. irreducible\\<^sub>d f", "by (rule LLL_reconstruction_inner_all_None_imp_irreducible[OF ij])"], ["proof (state)\nthis:\n  irreducible\\<^sub>d f\n\ngoal (10 subgoals):\n 1. f = f' * factor\n 2. irreducible\\<^sub>d factor\n 3. b' = lead_coeff f'\n 4. pl.unique_factorization_m f' (b', mset gs')\n 5. p.dvdm u factor\n 6. gs \\<noteq> [] \\<longrightarrow> length gs' < length gs\n 7. factor dvd f\n 8. f' dvd f\n 9. set gs' \\<subseteq> set gs\n 10. f' = 1", "thus ?g1 ?g2 ?g3 ?g4 ?g5 ?g6 ?g7 ?g8 ?g9 ?g10"], ["proof (prove)\nusing this:\n  irreducible\\<^sub>d f\n\ngoal (1 subgoal):\n 1. ((f = f' * factor &&& irreducible\\<^sub>d factor) &&&\n     b' = lead_coeff f' &&&\n     pl.unique_factorization_m f' (b', mset gs') &&& p.dvdm u factor) &&&\n    (gs \\<noteq> [] \\<longrightarrow> length gs' < length gs &&&\n     factor dvd f) &&&\n    f' dvd f &&& set gs' \\<subseteq> set gs &&& f' = 1", "using f' factor b' gs' u_f"], ["proof (prove)\nusing this:\n  irreducible\\<^sub>d f\n  f' = 1\n  factor = f\n  b' = 1\n  gs' = []\n  p.dvdm u f\n\ngoal (1 subgoal):\n 1. ((f = f' * factor &&& irreducible\\<^sub>d factor) &&&\n     b' = lead_coeff f' &&&\n     pl.unique_factorization_m f' (b', mset gs') &&& p.dvdm u factor) &&&\n    (gs \\<noteq> [] \\<longrightarrow> length gs' < length gs &&&\n     factor dvd f) &&&\n    f' dvd f &&& set gs' \\<subseteq> set gs &&& f' = 1", "by (auto simp: unique_factorization_m_1)"], ["proof (state)\nthis:\n  f = f' * factor\n  irreducible\\<^sub>d factor\n  b' = lead_coeff f'\n  pl.unique_factorization_m f' (b', mset gs')\n  p.dvdm u factor\n  gs \\<noteq> [] \\<longrightarrow> length gs' < length gs\n  factor dvd f\n  f' dvd f\n  set gs' \\<subseteq> set gs\n  f' = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma LLL_reconstruction_inner_loop:\n  assumes ret: \"LLL_reconstruction_inner_loop p l gs f u Degs j = (gs',b',f',factor)\"\n    and ij: \"\\<forall>i\\<in>{d+1..<j}. LLL_reconstruction_inner p l gs f u Degs i = None\"\n    and n: \"n = degree f\"\n    and dj: \"d < j\"\n  shows \"f = f' * factor\" (is \"?g1\")\n    and \"irreducible\\<^sub>d factor\" (is \"?g2\")\n    and \"b' = lead_coeff f'\" (is \"?g3\")\n    and \"pl.unique_factorization_m f' (b', mset gs')\" (is \"?g4\") \n    and \"p.dvdm u factor\" (is ?g5)\n    and \"gs \\<noteq> [] \\<longrightarrow> length gs' < length gs\" (is ?g6)\n    and \"factor dvd f\" (is ?g7)\n    and \"f' dvd f\" (is ?g8)\n    and \"set gs' \\<subseteq> set gs\" (is ?g9)\n    and \"gs' = [] \\<longrightarrow> f' = 1\" (is ?g10)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((f = f' * factor &&& irreducible\\<^sub>d factor) &&&\n     b' = lead_coeff f' &&&\n     pl.unique_factorization_m f' (b', mset gs') &&& p.dvdm u factor) &&&\n    (gs \\<noteq> [] \\<longrightarrow> length gs' < length gs &&&\n     factor dvd f) &&&\n    f' dvd f &&&\n    set gs' \\<subseteq> set gs &&& gs' = [] \\<longrightarrow> f' = 1", "proof (atomize(full),(cases \"j>n\"; intro conjI))"], ["proof (state)\ngoal (20 subgoals):\n 1. n < j \\<Longrightarrow> f = f' * factor\n 2. n < j \\<Longrightarrow> irreducible\\<^sub>d factor\n 3. n < j \\<Longrightarrow> b' = lead_coeff f'\n 4. n < j \\<Longrightarrow> pl.unique_factorization_m f' (b', mset gs')\n 5. n < j \\<Longrightarrow> p.dvdm u factor\n 6. n < j \\<Longrightarrow>\n    gs \\<noteq> [] \\<longrightarrow> length gs' < length gs\n 7. n < j \\<Longrightarrow> factor dvd f\n 8. n < j \\<Longrightarrow> f' dvd f\n 9. n < j \\<Longrightarrow> set gs' \\<subseteq> set gs\n 10. n < j \\<Longrightarrow> gs' = [] \\<longrightarrow> f' = 1\nA total of 20 subgoals...", "case True"], ["proof (state)\nthis:\n  n < j\n\ngoal (20 subgoals):\n 1. n < j \\<Longrightarrow> f = f' * factor\n 2. n < j \\<Longrightarrow> irreducible\\<^sub>d factor\n 3. n < j \\<Longrightarrow> b' = lead_coeff f'\n 4. n < j \\<Longrightarrow> pl.unique_factorization_m f' (b', mset gs')\n 5. n < j \\<Longrightarrow> p.dvdm u factor\n 6. n < j \\<Longrightarrow>\n    gs \\<noteq> [] \\<longrightarrow> length gs' < length gs\n 7. n < j \\<Longrightarrow> factor dvd f\n 8. n < j \\<Longrightarrow> f' dvd f\n 9. n < j \\<Longrightarrow> set gs' \\<subseteq> set gs\n 10. n < j \\<Longrightarrow> gs' = [] \\<longrightarrow> f' = 1\nA total of 20 subgoals...", "have ij2: \"\\<forall>i\\<in>{d + 1..n}. LLL_reconstruction_inner p l gs f u Degs i = None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{d + 1..n}.\n       LLL_reconstruction_inner p l gs f u Degs i = None", "using ij True"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>{d + 1..<j}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n  n < j\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{d + 1..n}.\n       LLL_reconstruction_inner p l gs f u Degs i = None", "by auto"], ["proof (state)\nthis:\n  \\<forall>i\\<in>{d + 1..n}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n\ngoal (20 subgoals):\n 1. n < j \\<Longrightarrow> f = f' * factor\n 2. n < j \\<Longrightarrow> irreducible\\<^sub>d factor\n 3. n < j \\<Longrightarrow> b' = lead_coeff f'\n 4. n < j \\<Longrightarrow> pl.unique_factorization_m f' (b', mset gs')\n 5. n < j \\<Longrightarrow> p.dvdm u factor\n 6. n < j \\<Longrightarrow>\n    gs \\<noteq> [] \\<longrightarrow> length gs' < length gs\n 7. n < j \\<Longrightarrow> factor dvd f\n 8. n < j \\<Longrightarrow> f' dvd f\n 9. n < j \\<Longrightarrow> set gs' \\<subseteq> set gs\n 10. n < j \\<Longrightarrow> gs' = [] \\<longrightarrow> f' = 1\nA total of 20 subgoals...", "show ?g1 ?g2 ?g3 ?g4 ?g5 ?g6 ?g7 ?g8 ?g9 ?g10"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((f = f' * factor &&& irreducible\\<^sub>d factor) &&&\n     b' = lead_coeff f' &&&\n     pl.unique_factorization_m f' (b', mset gs') &&& p.dvdm u factor) &&&\n    (gs \\<noteq> [] \\<longrightarrow> length gs' < length gs &&&\n     factor dvd f) &&&\n    f' dvd f &&&\n    set gs' \\<subseteq> set gs &&& gs' = [] \\<longrightarrow> f' = 1", "using LLL_reconstruction_inner_loop_j_ge_n[OF ret ij2 dj True]"], ["proof (prove)\nusing this:\n  f = f' * factor\n  irreducible\\<^sub>d factor\n  b' = lead_coeff f'\n  pl.unique_factorization_m f' (b', mset gs')\n  p.dvdm u factor\n  gs \\<noteq> [] \\<longrightarrow> length gs' < length gs\n  factor dvd f\n  f' dvd f\n  set gs' \\<subseteq> set gs\n  f' = 1\n\ngoal (1 subgoal):\n 1. ((f = f' * factor &&& irreducible\\<^sub>d factor) &&&\n     b' = lead_coeff f' &&&\n     pl.unique_factorization_m f' (b', mset gs') &&& p.dvdm u factor) &&&\n    (gs \\<noteq> [] \\<longrightarrow> length gs' < length gs &&&\n     factor dvd f) &&&\n    f' dvd f &&&\n    set gs' \\<subseteq> set gs &&& gs' = [] \\<longrightarrow> f' = 1", "by blast+"], ["proof (state)\nthis:\n  f = f' * factor\n  irreducible\\<^sub>d factor\n  b' = lead_coeff f'\n  pl.unique_factorization_m f' (b', mset gs')\n  p.dvdm u factor\n  gs \\<noteq> [] \\<longrightarrow> length gs' < length gs\n  factor dvd f\n  f' dvd f\n  set gs' \\<subseteq> set gs\n  gs' = [] \\<longrightarrow> f' = 1\n\ngoal (10 subgoals):\n 1. \\<not> n < j \\<Longrightarrow> f = f' * factor\n 2. \\<not> n < j \\<Longrightarrow> irreducible\\<^sub>d factor\n 3. \\<not> n < j \\<Longrightarrow> b' = lead_coeff f'\n 4. \\<not> n < j \\<Longrightarrow>\n    pl.unique_factorization_m f' (b', mset gs')\n 5. \\<not> n < j \\<Longrightarrow> p.dvdm u factor\n 6. \\<not> n < j \\<Longrightarrow>\n    gs \\<noteq> [] \\<longrightarrow> length gs' < length gs\n 7. \\<not> n < j \\<Longrightarrow> factor dvd f\n 8. \\<not> n < j \\<Longrightarrow> f' dvd f\n 9. \\<not> n < j \\<Longrightarrow> set gs' \\<subseteq> set gs\n 10. \\<not> n < j \\<Longrightarrow> gs' = [] \\<longrightarrow> f' = 1", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<not> n < j \\<Longrightarrow> f = f' * factor\n 2. \\<not> n < j \\<Longrightarrow> irreducible\\<^sub>d factor\n 3. \\<not> n < j \\<Longrightarrow> b' = lead_coeff f'\n 4. \\<not> n < j \\<Longrightarrow>\n    pl.unique_factorization_m f' (b', mset gs')\n 5. \\<not> n < j \\<Longrightarrow> p.dvdm u factor\n 6. \\<not> n < j \\<Longrightarrow>\n    gs \\<noteq> [] \\<longrightarrow> length gs' < length gs\n 7. \\<not> n < j \\<Longrightarrow> factor dvd f\n 8. \\<not> n < j \\<Longrightarrow> f' dvd f\n 9. \\<not> n < j \\<Longrightarrow> set gs' \\<subseteq> set gs\n 10. \\<not> n < j \\<Longrightarrow> gs' = [] \\<longrightarrow> f' = 1", "case False"], ["proof (state)\nthis:\n  \\<not> n < j\n\ngoal (10 subgoals):\n 1. \\<not> n < j \\<Longrightarrow> f = f' * factor\n 2. \\<not> n < j \\<Longrightarrow> irreducible\\<^sub>d factor\n 3. \\<not> n < j \\<Longrightarrow> b' = lead_coeff f'\n 4. \\<not> n < j \\<Longrightarrow>\n    pl.unique_factorization_m f' (b', mset gs')\n 5. \\<not> n < j \\<Longrightarrow> p.dvdm u factor\n 6. \\<not> n < j \\<Longrightarrow>\n    gs \\<noteq> [] \\<longrightarrow> length gs' < length gs\n 7. \\<not> n < j \\<Longrightarrow> factor dvd f\n 8. \\<not> n < j \\<Longrightarrow> f' dvd f\n 9. \\<not> n < j \\<Longrightarrow> set gs' \\<subseteq> set gs\n 10. \\<not> n < j \\<Longrightarrow> gs' = [] \\<longrightarrow> f' = 1", "hence jn: \"j\\<le>n\""], ["proof (prove)\nusing this:\n  \\<not> n < j\n\ngoal (1 subgoal):\n 1. j \\<le> n", "by simp"], ["proof (state)\nthis:\n  j \\<le> n\n\ngoal (10 subgoals):\n 1. \\<not> n < j \\<Longrightarrow> f = f' * factor\n 2. \\<not> n < j \\<Longrightarrow> irreducible\\<^sub>d factor\n 3. \\<not> n < j \\<Longrightarrow> b' = lead_coeff f'\n 4. \\<not> n < j \\<Longrightarrow>\n    pl.unique_factorization_m f' (b', mset gs')\n 5. \\<not> n < j \\<Longrightarrow> p.dvdm u factor\n 6. \\<not> n < j \\<Longrightarrow>\n    gs \\<noteq> [] \\<longrightarrow> length gs' < length gs\n 7. \\<not> n < j \\<Longrightarrow> factor dvd f\n 8. \\<not> n < j \\<Longrightarrow> f' dvd f\n 9. \\<not> n < j \\<Longrightarrow> set gs' \\<subseteq> set gs\n 10. \\<not> n < j \\<Longrightarrow> gs' = [] \\<longrightarrow> f' = 1", "show ?g1 ?g2 ?g3 ?g4 ?g5 ?g6 ?g7 ?g8 ?g9 ?g10"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((f = f' * factor &&& irreducible\\<^sub>d factor) &&&\n     b' = lead_coeff f' &&&\n     pl.unique_factorization_m f' (b', mset gs') &&& p.dvdm u factor) &&&\n    (gs \\<noteq> [] \\<longrightarrow> length gs' < length gs &&&\n     factor dvd f) &&&\n    f' dvd f &&&\n    set gs' \\<subseteq> set gs &&& gs' = [] \\<longrightarrow> f' = 1", "using LLL_reconstruction_inner_loop_j_le_n[OF ret ij n jn dj]"], ["proof (prove)\nusing this:\n  f = f' * factor\n  irreducible\\<^sub>d factor\n  b' = lead_coeff f'\n  pl.unique_factorization_m f' (b', mset gs')\n  p.dvdm u factor\n  gs \\<noteq> [] \\<longrightarrow> length gs' < length gs\n  factor dvd f\n  f' dvd f\n  set gs' \\<subseteq> set gs\n  gs' = [] \\<longrightarrow> f' = 1\n\ngoal (1 subgoal):\n 1. ((f = f' * factor &&& irreducible\\<^sub>d factor) &&&\n     b' = lead_coeff f' &&&\n     pl.unique_factorization_m f' (b', mset gs') &&& p.dvdm u factor) &&&\n    (gs \\<noteq> [] \\<longrightarrow> length gs' < length gs &&&\n     factor dvd f) &&&\n    f' dvd f &&&\n    set gs' \\<subseteq> set gs &&& gs' = [] \\<longrightarrow> f' = 1", "by blast+"], ["proof (state)\nthis:\n  f = f' * factor\n  irreducible\\<^sub>d factor\n  b' = lead_coeff f'\n  pl.unique_factorization_m f' (b', mset gs')\n  p.dvdm u factor\n  gs \\<noteq> [] \\<longrightarrow> length gs' < length gs\n  factor dvd f\n  f' dvd f\n  set gs' \\<subseteq> set gs\n  gs' = [] \\<longrightarrow> f' = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsubsection \\<open>Outer loop\\<close>"], ["", "lemma LLL_reconstruction'':\n  assumes 1: \"LLL_reconstruction'' p l gs b f G = G'\"\n    and irreducible_G: \"\\<And>factor. factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor\" \n    and 3: \"F = f * prod_list G\"\n    and 4: \"pl.unique_factorization_m f (lead_coeff f, mset gs)\"\n    and 5: \"gs \\<noteq> []\"\n    and 6: \"\\<And> gi. gi \\<in> set gs \\<Longrightarrow> pl.Mp gi = gi\"\n    and 7: \"\\<And> gi. gi \\<in> set gs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi\" \n    and 8: \"p.square_free_m f\" \n    and 9: \"coprime (lead_coeff f) p\" \n    and sf_F: \"square_free F\" \n  shows \"(\\<forall>g \\<in> set G'. irreducible\\<^sub>d g) \\<and> F = prod_list G'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>g\\<in>set G'. irreducible\\<^sub>d g) \\<and> F = prod_list G'", "using 1 irreducible_G 3 4 5 6 7 8 9"], ["proof (prove)\nusing this:\n  LLL_reconstruction'' p l gs b f G = G'\n  ?factor1 \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d ?factor1\n  F = f * prod_list G\n  pl.unique_factorization_m f (lead_coeff f, mset gs)\n  gs \\<noteq> []\n  ?gi1 \\<in> set gs \\<Longrightarrow> pl.Mp ?gi1 = ?gi1\n  ?gi1 \\<in> set gs \\<Longrightarrow> p.irreducible\\<^sub>d_m ?gi1\n  p.square_free_m f\n  comm_monoid_mult_class.coprime (lead_coeff f) p\n\ngoal (1 subgoal):\n 1. (\\<forall>g\\<in>set G'. irreducible\\<^sub>d g) \\<and> F = prod_list G'", "proof (induction gs arbitrary: b f G G' rule: length_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "case (1 gs)"], ["proof (state)\nthis:\n  \\<forall>ys.\n     length ys < length gs \\<longrightarrow>\n     (\\<forall>x xa xb xc.\n         LLL_reconstruction'' p l ys x xa xb = xc \\<longrightarrow>\n         (\\<forall>x.\n             x \\<in> set xb \\<longrightarrow>\n             irreducible\\<^sub>d x) \\<longrightarrow>\n         F = xa * prod_list xb \\<longrightarrow>\n         pl.unique_factorization_m xa\n          (lead_coeff xa, mset ys) \\<longrightarrow>\n         ys \\<noteq> [] \\<longrightarrow>\n         (\\<forall>x.\n             x \\<in> set ys \\<longrightarrow> pl.Mp x = x) \\<longrightarrow>\n         (\\<forall>x.\n             x \\<in> set ys \\<longrightarrow>\n             p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n         p.square_free_m xa \\<longrightarrow>\n         comm_monoid_mult_class.coprime (lead_coeff xa) p \\<longrightarrow>\n         (\\<forall>a\\<in>set xc. irreducible\\<^sub>d a) \\<and>\n         F = prod_list xc)\n  LLL_reconstruction'' p l gs b f G = G'\n  ?factor1 \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d ?factor1\n  F = f * prod_list G\n  pl.unique_factorization_m f (lead_coeff f, mset gs)\n  gs \\<noteq> []\n  ?gi1 \\<in> set gs \\<Longrightarrow> pl.Mp ?gi1 = ?gi1\n  ?gi1 \\<in> set gs \\<Longrightarrow> p.irreducible\\<^sub>d_m ?gi1\n  p.square_free_m f\n  comm_monoid_mult_class.coprime (lead_coeff f) p\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "note LLL_f' = \"1.prems\"(1)"], ["proof (state)\nthis:\n  LLL_reconstruction'' p l gs b f G = G'\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "note irreducible_G = \"1.prems\"(2)"], ["proof (state)\nthis:\n  ?factor1 \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d ?factor1\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "note F_f_G = \"1.prems\" (3)"], ["proof (state)\nthis:\n  F = f * prod_list G\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "note f_gs_factor = \"1.prems\" (4)"], ["proof (state)\nthis:\n  pl.unique_factorization_m f (lead_coeff f, mset gs)\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "note gs_not_empty = \"1.prems\" (5)"], ["proof (state)\nthis:\n  gs \\<noteq> []\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "note norm = \"1.prems\"(6)"], ["proof (state)\nthis:\n  ?gi1 \\<in> set gs \\<Longrightarrow> pl.Mp ?gi1 = ?gi1\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "note irred_p = \"1.prems\"(7)"], ["proof (state)\nthis:\n  ?gi1 \\<in> set gs \\<Longrightarrow> p.irreducible\\<^sub>d_m ?gi1\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "note sf = \"1.prems\"(8)"], ["proof (state)\nthis:\n  p.square_free_m f\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "note cop = \"1.prems\"(9)"], ["proof (state)\nthis:\n  comm_monoid_mult_class.coprime (lead_coeff f) p\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "obtain u where choose_u_result: \"choose_u gs = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u. choose_u gs = u \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  choose_u gs = u\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "from choose_u_member[OF  gs_not_empty, unfolded choose_u_result]"], ["proof (chain)\npicking this:\n  u \\<in> set gs", "have u_gs: \"u \\<in> set gs\""], ["proof (prove)\nusing this:\n  u \\<in> set gs\n\ngoal (1 subgoal):\n 1. u \\<in> set gs", "by auto"], ["proof (state)\nthis:\n  u \\<in> set gs\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "define d n where [simp]: \"d = degree u\" \"n = degree f\""], ["proof (state)\nthis:\n  d = degree u\n  n = degree f\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "hence n_def: \"n = degree f\" \"n \\<equiv> degree f\""], ["proof (prove)\nusing this:\n  d = degree u\n  n = degree f\n\ngoal (1 subgoal):\n 1. n = degree f &&& n \\<equiv> degree f", "by auto"], ["proof (state)\nthis:\n  n = degree f\n  n \\<equiv> degree f\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "define gs'' where \"gs'' = remove1 u gs\""], ["proof (state)\nthis:\n  gs'' = remove1 u gs\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "define degs where \"degs = map degree gs''\""], ["proof (state)\nthis:\n  degs = map degree gs''\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "define Degs where \"Degs = (+) d ` sub_mset_sums degs\""], ["proof (state)\nthis:\n  Degs = (+) d ` sub_mset_sums degs\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "obtain gs' b' h factor where inner_loop_result: \n    \"LLL_reconstruction_inner_loop p l gs f u Degs (d+1) = (gs',b',h,factor)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>gs' b' h factor.\n        LLL_reconstruction_inner_loop p l gs f u Degs (d + 1) =\n        (gs', b', h, factor) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis prod_cases4)"], ["proof (state)\nthis:\n  LLL_reconstruction_inner_loop p l gs f u Degs (d + 1) =\n  (gs', b', h, factor)\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "have a1: \n    \"LLL_reconstruction_inner_loop p l gs f u Degs (d+1) = (gs', b', h, factor)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner_loop p l gs f u Degs (d + 1) =\n    (gs', b', h, factor)", "using inner_loop_result"], ["proof (prove)\nusing this:\n  LLL_reconstruction_inner_loop p l gs f u Degs (d + 1) =\n  (gs', b', h, factor)\n\ngoal (1 subgoal):\n 1. LLL_reconstruction_inner_loop p l gs f u Degs (d + 1) =\n    (gs', b', h, factor)", "by auto"], ["proof (state)\nthis:\n  LLL_reconstruction_inner_loop p l gs f u Degs (d + 1) =\n  (gs', b', h, factor)\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "have a2: \n    \"\\<forall>i\\<in>{degree u + 1..<(d+1)}. LLL_reconstruction_inner p l gs f u Degs i = None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{degree u + 1..<d + 1}.\n       LLL_reconstruction_inner p l gs f u Degs i = None", "by auto"], ["proof (state)\nthis:\n  \\<forall>i\\<in>{degree u + 1..<d + 1}.\n     LLL_reconstruction_inner p l gs f u Degs i = None\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "have \"LLL_reconstruction'' p l gs b f G = LLL_reconstruction'' p l gs' b' h (factor # G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LLL_reconstruction'' p l gs b f G =\n    LLL_reconstruction'' p l gs' b' h (factor # G)", "unfolding LLL_reconstruction''.simps[of p l gs]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if gs = [] then G\n     else let u = choose_u gs; d = degree u; gs' = remove1 u gs;\n              degs = map degree gs'; Degs = (+) d ` sub_mset_sums degs;\n              (gs', b', f', factor) =\n                LLL_reconstruction_inner_loop p l gs f u Degs (d + 1)\n          in LLL_reconstruction'' p l gs' b' f' (factor # G)) =\n    LLL_reconstruction'' p l gs' b' h (factor # G)", "using gs_not_empty"], ["proof (prove)\nusing this:\n  gs \\<noteq> []\n\ngoal (1 subgoal):\n 1. (if gs = [] then G\n     else let u = choose_u gs; d = degree u; gs' = remove1 u gs;\n              degs = map degree gs'; Degs = (+) d ` sub_mset_sums degs;\n              (gs', b', f', factor) =\n                LLL_reconstruction_inner_loop p l gs f u Degs (d + 1)\n          in LLL_reconstruction'' p l gs' b' f' (factor # G)) =\n    LLL_reconstruction'' p l gs' b' h (factor # G)", "unfolding Let_def"], ["proof (prove)\nusing this:\n  gs \\<noteq> []\n\ngoal (1 subgoal):\n 1. (if gs = [] then G\n     else case LLL_reconstruction_inner_loop p l gs f (choose_u gs)\n                ((+) (degree (choose_u gs)) `\n                 sub_mset_sums (map degree (remove1 (choose_u gs) gs)))\n                (degree (choose_u gs) + 1) of\n          (gs', b', f', factor) \\<Rightarrow>\n            LLL_reconstruction'' p l gs' b' f' (factor # G)) =\n    LLL_reconstruction'' p l gs' b' h (factor # G)", "using choose_u_result inner_loop_result"], ["proof (prove)\nusing this:\n  gs \\<noteq> []\n  choose_u gs = u\n  LLL_reconstruction_inner_loop p l gs f u Degs (d + 1) =\n  (gs', b', h, factor)\n\ngoal (1 subgoal):\n 1. (if gs = [] then G\n     else case LLL_reconstruction_inner_loop p l gs f (choose_u gs)\n                ((+) (degree (choose_u gs)) `\n                 sub_mset_sums (map degree (remove1 (choose_u gs) gs)))\n                (degree (choose_u gs) + 1) of\n          (gs', b', f', factor) \\<Rightarrow>\n            LLL_reconstruction'' p l gs' b' f' (factor # G)) =\n    LLL_reconstruction'' p l gs' b' h (factor # G)", "unfolding Degs_def degs_def gs''_def"], ["proof (prove)\nusing this:\n  gs \\<noteq> []\n  choose_u gs = u\n  LLL_reconstruction_inner_loop p l gs f u\n   ((+) d ` sub_mset_sums (map degree (remove1 u gs))) (d + 1) =\n  (gs', b', h, factor)\n\ngoal (1 subgoal):\n 1. (if gs = [] then G\n     else case LLL_reconstruction_inner_loop p l gs f (choose_u gs)\n                ((+) (degree (choose_u gs)) `\n                 sub_mset_sums (map degree (remove1 (choose_u gs) gs)))\n                (degree (choose_u gs) + 1) of\n          (gs', b', f', factor) \\<Rightarrow>\n            LLL_reconstruction'' p l gs' b' f' (factor # G)) =\n    LLL_reconstruction'' p l gs' b' h (factor # G)", "by auto"], ["proof (state)\nthis:\n  LLL_reconstruction'' p l gs b f G =\n  LLL_reconstruction'' p l gs' b' h (factor # G)\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "hence LLL_eq: \"LLL_reconstruction'' p l gs' b' h (factor # G) = G'\""], ["proof (prove)\nusing this:\n  LLL_reconstruction'' p l gs b f G =\n  LLL_reconstruction'' p l gs' b' h (factor # G)\n\ngoal (1 subgoal):\n 1. LLL_reconstruction'' p l gs' b' h (factor # G) = G'", "using LLL_f'"], ["proof (prove)\nusing this:\n  LLL_reconstruction'' p l gs b f G =\n  LLL_reconstruction'' p l gs' b' h (factor # G)\n  LLL_reconstruction'' p l gs b f G = G'\n\ngoal (1 subgoal):\n 1. LLL_reconstruction'' p l gs' b' h (factor # G) = G'", "by auto"], ["proof (state)\nthis:\n  LLL_reconstruction'' p l gs' b' h (factor # G) = G'\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "from pl.unique_factorization_m_imp_factorization[OF f_gs_factor, \n    unfolded pl.factorization_m_def] norm"], ["proof (chain)\npicking this:\n  case (lead_coeff f, mset gs) of\n  (c, fs) \\<Rightarrow>\n    pl.eq_m f (smult c (\\<Prod>\\<^sub># fs)) \\<and>\n    (\\<forall>f\\<in>#fs. pl.irreducible\\<^sub>d_m f \\<and> monic (pl.Mp f))\n  ?gi1 \\<in> set gs \\<Longrightarrow> pl.Mp ?gi1 = ?gi1", "have f_gs: \"pl.eq_m f (smult (lead_coeff f) (prod_mset (mset gs)))\" and \n    mon: \"g \\<in> set gs \\<Longrightarrow> monic g\" and irred: \"g \\<in> set gs \\<Longrightarrow> pl.irreducible\\<^sub>d_m g\" for g"], ["proof (prove)\nusing this:\n  case (lead_coeff f, mset gs) of\n  (c, fs) \\<Rightarrow>\n    pl.eq_m f (smult c (\\<Prod>\\<^sub># fs)) \\<and>\n    (\\<forall>f\\<in>#fs. pl.irreducible\\<^sub>d_m f \\<and> monic (pl.Mp f))\n  ?gi1 \\<in> set gs \\<Longrightarrow> pl.Mp ?gi1 = ?gi1\n\ngoal (1 subgoal):\n 1. pl.eq_m f (smult (lead_coeff f) (\\<Prod>\\<^sub># (mset gs))) &&&\n    (g \\<in> set gs \\<Longrightarrow> monic g) &&&\n    (g \\<in> set gs \\<Longrightarrow> pl.irreducible\\<^sub>d_m g)", "by auto"], ["proof (state)\nthis:\n  pl.eq_m f (smult (lead_coeff f) (\\<Prod>\\<^sub># (mset gs)))\n  ?g1 \\<in> set gs \\<Longrightarrow> monic ?g1\n  ?g1 \\<in> set gs \\<Longrightarrow> pl.irreducible\\<^sub>d_m ?g1\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "{"], ["proof (state)\nthis:\n  pl.eq_m f (smult (lead_coeff f) (\\<Prod>\\<^sub># (mset gs)))\n  ?g1 \\<in> set gs \\<Longrightarrow> monic ?g1\n  ?g1 \\<in> set gs \\<Longrightarrow> pl.irreducible\\<^sub>d_m ?g1\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "from split_list[OF u_gs]"], ["proof (chain)\npicking this:\n  \\<exists>ys zs. gs = ys @ u # zs", "obtain gs1 gs2 where gs: \"gs = gs1 @ u # gs2\""], ["proof (prove)\nusing this:\n  \\<exists>ys zs. gs = ys @ u # zs\n\ngoal (1 subgoal):\n 1. (\\<And>gs1 gs2.\n        gs = gs1 @ u # gs2 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  gs = gs1 @ u # gs2\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "from f_gs[unfolded gs]"], ["proof (chain)\npicking this:\n  pl.eq_m f (smult (lead_coeff f) (\\<Prod>\\<^sub># (mset (gs1 @ u # gs2))))", "have \"pl.dvdm u f\""], ["proof (prove)\nusing this:\n  pl.eq_m f (smult (lead_coeff f) (\\<Prod>\\<^sub># (mset (gs1 @ u # gs2))))\n\ngoal (1 subgoal):\n 1. pl.dvdm u f", "unfolding pl.dvdm_def"], ["proof (prove)\nusing this:\n  pl.eq_m f (smult (lead_coeff f) (\\<Prod>\\<^sub># (mset (gs1 @ u # gs2))))\n\ngoal (1 subgoal):\n 1. \\<exists>h. pl.eq_m f (u * h)", "by (intro exI[of  _ \"smult (lead_coeff f) (prod_mset (mset (gs1 @ gs2)))\"], auto)"], ["proof (state)\nthis:\n  pl.dvdm u f\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "}"], ["proof (state)\nthis:\n  pl.dvdm u f\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "note pl_uf = this"], ["proof (state)\nthis:\n  pl.dvdm u f\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "hence p_uf: \"p.dvdm u f\""], ["proof (prove)\nusing this:\n  pl.dvdm u f\n\ngoal (1 subgoal):\n 1. p.dvdm u f", "by (rule pl_dvdm_imp_p_dvdm)"], ["proof (state)\nthis:\n  p.dvdm u f\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "have monic_u: \"monic u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. monic u", "using mon[OF u_gs]"], ["proof (prove)\nusing this:\n  monic u\n\ngoal (1 subgoal):\n 1. monic u", "."], ["proof (state)\nthis:\n  monic u\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "have irred_u: \"p.irreducible_m u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p.irreducible_m u", "using irred_p[OF u_gs]"], ["proof (prove)\nusing this:\n  p.irreducible\\<^sub>d_m u\n\ngoal (1 subgoal):\n 1. p.irreducible_m u", "by auto"], ["proof (state)\nthis:\n  p.irreducible_m u\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "have degree_m_u: \"p.degree_m u = degree u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p.degree_m u = degree u", "using monic_u"], ["proof (prove)\nusing this:\n  monic u\n\ngoal (1 subgoal):\n 1. p.degree_m u = degree u", "by simp"], ["proof (state)\nthis:\n  p.degree_m u = degree u\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "have degree_u[simp]: \"0 < degree u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < degree u", "using irred_u"], ["proof (prove)\nusing this:\n  p.irreducible_m u\n\ngoal (1 subgoal):\n 1. 0 < degree u", "by (fold degree_m_u, auto simp add: p.irreducible_degree)"], ["proof (state)\nthis:\n  0 < degree u\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "have deg_u_d: \"degree u < d + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree u < d + 1", "by auto"], ["proof (state)\nthis:\n  degree u < d + 1\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "from F_f_G"], ["proof (chain)\npicking this:\n  F = f * prod_list G", "have f_dvd_F: \"f dvd F\""], ["proof (prove)\nusing this:\n  F = f * prod_list G\n\ngoal (1 subgoal):\n 1. f dvd F", "by auto"], ["proof (state)\nthis:\n  f dvd F\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "from square_free_factor[OF f_dvd_F sf_F]"], ["proof (chain)\npicking this:\n  square_free f", "have sf_f: \"square_free f\""], ["proof (prove)\nusing this:\n  square_free f\n\ngoal (1 subgoal):\n 1. square_free f", "."], ["proof (state)\nthis:\n  square_free f\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "from norm"], ["proof (chain)\npicking this:\n  ?gi1 \\<in> set gs \\<Longrightarrow> pl.Mp ?gi1 = ?gi1", "have norm_map: \"map pl.Mp gs = gs\""], ["proof (prove)\nusing this:\n  ?gi1 \\<in> set gs \\<Longrightarrow> pl.Mp ?gi1 = ?gi1\n\ngoal (1 subgoal):\n 1. map pl.Mp gs = gs", "by (induct gs, auto)"], ["proof (state)\nthis:\n  map pl.Mp gs = gs\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "{"], ["proof (state)\nthis:\n  map pl.Mp gs = gs\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "fix factor"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "assume factor_f: \"factor dvd f\" and u_factor: \"p.dvdm u factor\""], ["proof (state)\nthis:\n  factor dvd f\n  p.dvdm u factor\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "from factor_f"], ["proof (chain)\npicking this:\n  factor dvd f", "obtain h where f: \"f = factor * h\""], ["proof (prove)\nusing this:\n  factor dvd f\n\ngoal (1 subgoal):\n 1. (\\<And>h. f = factor * h \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  \\<exists>k. f = factor * k\n\ngoal (1 subgoal):\n 1. (\\<And>h. f = factor * h \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  f = factor * h\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "obtain gs1 gs2 where part: \"List.partition (\\<lambda>gi. p.dvdm gi factor) gs = (gs1, gs2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>gs1 gs2.\n        List.partition (\\<lambda>gi. p.dvdm gi factor) gs =\n        (gs1, gs2) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  List.partition (\\<lambda>gi. p.dvdm gi factor) gs = (gs1, gs2)\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "from p.unique_factorization_m_factor_partition[OF l0 f_gs_factor f cop sf part]"], ["proof (chain)\npicking this:\n  pl.unique_factorization_m factor (lead_coeff factor, mset gs1)\n  pl.unique_factorization_m h (lead_coeff h, mset gs2)", "have factor: \"pl.unique_factorization_m factor (lead_coeff factor, mset gs1)\""], ["proof (prove)\nusing this:\n  pl.unique_factorization_m factor (lead_coeff factor, mset gs1)\n  pl.unique_factorization_m h (lead_coeff h, mset gs2)\n\ngoal (1 subgoal):\n 1. pl.unique_factorization_m factor (lead_coeff factor, mset gs1)", "by auto"], ["proof (state)\nthis:\n  pl.unique_factorization_m factor (lead_coeff factor, mset gs1)\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "from u_factor part u_gs"], ["proof (chain)\npicking this:\n  p.dvdm u factor\n  List.partition (\\<lambda>gi. p.dvdm gi factor) gs = (gs1, gs2)\n  u \\<in> set gs", "have u_gs1: \"u \\<in> set gs1\""], ["proof (prove)\nusing this:\n  p.dvdm u factor\n  List.partition (\\<lambda>gi. p.dvdm gi factor) gs = (gs1, gs2)\n  u \\<in> set gs\n\ngoal (1 subgoal):\n 1. u \\<in> set gs1", "by auto"], ["proof (state)\nthis:\n  u \\<in> set gs1\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "define gs1' where \"gs1' = remove1 u gs1\""], ["proof (state)\nthis:\n  gs1' = remove1 u gs1\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "from remove1_mset[OF u_gs1, folded gs1'_def]"], ["proof (chain)\npicking this:\n  mset gs1' + {#u#} = mset gs1", "have gs1: \"mset gs1 = add_mset u (mset gs1')\""], ["proof (prove)\nusing this:\n  mset gs1' + {#u#} = mset gs1\n\ngoal (1 subgoal):\n 1. mset gs1 = add_mset u (mset gs1')", "by auto"], ["proof (state)\nthis:\n  mset gs1 = add_mset u (mset gs1')\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "from remove1_mset[OF u_gs, folded gs''_def]"], ["proof (chain)\npicking this:\n  mset gs'' + {#u#} = mset gs", "have gs: \"mset gs = add_mset u (mset gs'')\""], ["proof (prove)\nusing this:\n  mset gs'' + {#u#} = mset gs\n\ngoal (1 subgoal):\n 1. mset gs = add_mset u (mset gs'')", "by auto"], ["proof (state)\nthis:\n  mset gs = add_mset u (mset gs'')\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "from part"], ["proof (chain)\npicking this:\n  List.partition (\\<lambda>gi. p.dvdm gi factor) gs = (gs1, gs2)", "have filter: \"gs1 = [gi\\<leftarrow>gs . p.dvdm gi factor]\""], ["proof (prove)\nusing this:\n  List.partition (\\<lambda>gi. p.dvdm gi factor) gs = (gs1, gs2)\n\ngoal (1 subgoal):\n 1. gs1 = filter (\\<lambda>gi. p.dvdm gi factor) gs", "by auto"], ["proof (state)\nthis:\n  gs1 = filter (\\<lambda>gi. p.dvdm gi factor) gs\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "have \"mset gs1 \\<subseteq># mset gs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mset gs1 \\<subseteq># mset gs", "unfolding filter mset_filter"], ["proof (prove)\ngoal (1 subgoal):\n 1. {#gi \\<in># mset gs. p.dvdm gi factor#} \\<subseteq># mset gs", "by simp"], ["proof (state)\nthis:\n  mset gs1 \\<subseteq># mset gs\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "hence sub: \"mset gs1' \\<subseteq># mset gs''\""], ["proof (prove)\nusing this:\n  mset gs1 \\<subseteq># mset gs\n\ngoal (1 subgoal):\n 1. mset gs1' \\<subseteq># mset gs''", "unfolding gs gs1"], ["proof (prove)\nusing this:\n  add_mset u (mset gs1') \\<subseteq># add_mset u (mset gs'')\n\ngoal (1 subgoal):\n 1. mset gs1' \\<subseteq># mset gs''", "by auto"], ["proof (state)\nthis:\n  mset gs1' \\<subseteq># mset gs''\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "from p.coprime_lead_coeff_factor[OF \\<open>prime p\\<close> cop[unfolded f]]"], ["proof (chain)\npicking this:\n  comm_monoid_mult_class.coprime (lead_coeff factor) p\n  comm_monoid_mult_class.coprime (lead_coeff h) p", "have cop': \"coprime (lead_coeff factor) p\""], ["proof (prove)\nusing this:\n  comm_monoid_mult_class.coprime (lead_coeff factor) p\n  comm_monoid_mult_class.coprime (lead_coeff h) p\n\ngoal (1 subgoal):\n 1. comm_monoid_mult_class.coprime (lead_coeff factor) p", "by auto"], ["proof (state)\nthis:\n  comm_monoid_mult_class.coprime (lead_coeff factor) p\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "have p_factor0: \"p.Mp factor \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p.Mp factor \\<noteq> 0", "by (metis f p.Mp_0 p.square_free_m_def poly_mod.square_free_m_factor(1) sf)"], ["proof (state)\nthis:\n  p.Mp factor \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "have pl_factor0: \"pl.Mp factor \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pl.Mp factor \\<noteq> 0", "using p_factor0 l0"], ["proof (prove)\nusing this:\n  p.Mp factor \\<noteq> 0\n  l \\<noteq> 0\n\ngoal (1 subgoal):\n 1. pl.Mp factor \\<noteq> 0", "by (metis p.Mp_0 p_Mp_pl_Mp)"], ["proof (state)\nthis:\n  pl.Mp factor \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "from pl.factorization_m_degree[OF pl.unique_factorization_m_imp_factorization[OF factor] pl_factor0]"], ["proof (chain)\npicking this:\n  pl.degree_m factor = \\<Sum>\\<^sub># (image_mset pl.degree_m (mset gs1))", "have \"pl.degree_m factor = sum_mset (image_mset pl.degree_m (mset gs1))\""], ["proof (prove)\nusing this:\n  pl.degree_m factor = \\<Sum>\\<^sub># (image_mset pl.degree_m (mset gs1))\n\ngoal (1 subgoal):\n 1. pl.degree_m factor = \\<Sum>\\<^sub># (image_mset pl.degree_m (mset gs1))", "."], ["proof (state)\nthis:\n  pl.degree_m factor = \\<Sum>\\<^sub># (image_mset pl.degree_m (mset gs1))\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "also"], ["proof (state)\nthis:\n  pl.degree_m factor = \\<Sum>\\<^sub># (image_mset pl.degree_m (mset gs1))\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "have \"image_mset pl.degree_m (mset gs1) = image_mset degree (mset gs1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. image_mset pl.degree_m (mset gs1) = image_mset degree (mset gs1)", "by (rule image_mset_cong, rule pl.monic_degree_m[OF mon], insert part, auto)"], ["proof (state)\nthis:\n  image_mset pl.degree_m (mset gs1) = image_mset degree (mset gs1)\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "also"], ["proof (state)\nthis:\n  image_mset pl.degree_m (mset gs1) = image_mset degree (mset gs1)\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "have \"pl.degree_m factor = degree factor\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pl.degree_m factor = degree factor", "by (rule pl.degree_m_eq[OF p.coprime_exp_mod[OF cop' l0] pl.m1])"], ["proof (state)\nthis:\n  pl.degree_m factor = degree factor\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "finally"], ["proof (chain)\npicking this:\n  degree factor = \\<Sum>\\<^sub># (image_mset degree (mset gs1))", "have \"degree factor = d + sum_mset (image_mset degree (mset gs1'))\""], ["proof (prove)\nusing this:\n  degree factor = \\<Sum>\\<^sub># (image_mset degree (mset gs1))\n\ngoal (1 subgoal):\n 1. degree factor = d + \\<Sum>\\<^sub># (image_mset degree (mset gs1'))", "unfolding gs1"], ["proof (prove)\nusing this:\n  degree factor =\n  \\<Sum>\\<^sub># (image_mset degree (add_mset u (mset gs1')))\n\ngoal (1 subgoal):\n 1. degree factor = d + \\<Sum>\\<^sub># (image_mset degree (mset gs1'))", "by auto"], ["proof (state)\nthis:\n  degree factor = d + \\<Sum>\\<^sub># (image_mset degree (mset gs1'))\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "moreover"], ["proof (state)\nthis:\n  degree factor = d + \\<Sum>\\<^sub># (image_mset degree (mset gs1'))\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "have \"sum_mset (image_mset degree (mset gs1')) \\<in> sub_mset_sums degs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sum>\\<^sub># (image_mset degree (mset gs1')) \\<in> sub_mset_sums degs", "unfolding degs_def\n      sub_mset_sums mset_map"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sum>\\<^sub># (image_mset degree (mset gs1'))\n    \\<in> \\<Sum>\\<^sub># `\n          {ys. ys \\<subseteq># image_mset degree (mset gs'')}", "by (intro imageI CollectI image_mset_subseteq_mono[OF sub])"], ["proof (state)\nthis:\n  \\<Sum>\\<^sub># (image_mset degree (mset gs1')) \\<in> sub_mset_sums degs\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "ultimately"], ["proof (chain)\npicking this:\n  degree factor = d + \\<Sum>\\<^sub># (image_mset degree (mset gs1'))\n  \\<Sum>\\<^sub># (image_mset degree (mset gs1')) \\<in> sub_mset_sums degs", "have \"degree factor \\<in> Degs\""], ["proof (prove)\nusing this:\n  degree factor = d + \\<Sum>\\<^sub># (image_mset degree (mset gs1'))\n  \\<Sum>\\<^sub># (image_mset degree (mset gs1')) \\<in> sub_mset_sums degs\n\ngoal (1 subgoal):\n 1. degree factor \\<in> Degs", "unfolding Degs_def"], ["proof (prove)\nusing this:\n  degree factor = d + \\<Sum>\\<^sub># (image_mset degree (mset gs1'))\n  \\<Sum>\\<^sub># (image_mset degree (mset gs1')) \\<in> sub_mset_sums degs\n\ngoal (1 subgoal):\n 1. degree factor \\<in> (+) d ` sub_mset_sums degs", "by auto"], ["proof (state)\nthis:\n  degree factor \\<in> Degs\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?factora3 dvd f; p.dvdm u ?factora3\\<rbrakk>\n  \\<Longrightarrow> degree ?factora3 \\<in> Degs\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "note Degs = this"], ["proof (state)\nthis:\n  \\<lbrakk>?factora3 dvd f; p.dvdm u ?factora3\\<rbrakk>\n  \\<Longrightarrow> degree ?factora3 \\<in> Degs\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "have length_less: \"length gs' < length gs\" \n    and irreducible_factor: \"irreducible\\<^sub>d factor\"\n    and h_dvd_f: \"h dvd f\"\n    and f_h_factor: \"f = h * factor\" \n    and h_eq: \"pl.unique_factorization_m h (b', mset gs')\"\n    and gs'_gs: \"set gs' \\<subseteq> set gs\"\n    and b': \"b' = lead_coeff h\" \n    and h1: \"gs' = [] \\<longrightarrow> h = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((length gs' < length gs &&& irreducible\\<^sub>d factor) &&&\n     h dvd f &&& f = h * factor) &&&\n    (pl.unique_factorization_m h (b', mset gs') &&&\n     set gs' \\<subseteq> set gs) &&&\n    b' = lead_coeff h &&& gs' = [] \\<longrightarrow> h = 1", "using LLL_reconstruction_inner_loop[OF degree_u monic_u irred_u p_uf f_dvd_F n_def(2)\n      f_gs_factor cop sf sf_f u_gs norm_map Degs\n      a1 a2 n_def(1)] deg_u_d gs_not_empty"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>factor dvd f; p.dvdm u factor\\<rbrakk>\n              \\<Longrightarrow> factor dvd f;\n   \\<And>factor.\n      \\<lbrakk>factor dvd f; p.dvdm u factor\\<rbrakk>\n      \\<Longrightarrow> p.dvdm u factor;\n   degree u < d + 1\\<rbrakk>\n  \\<Longrightarrow> f = h * factor\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>factor dvd f; p.dvdm u factor\\<rbrakk>\n              \\<Longrightarrow> factor dvd f;\n   \\<And>factor.\n      \\<lbrakk>factor dvd f; p.dvdm u factor\\<rbrakk>\n      \\<Longrightarrow> p.dvdm u factor;\n   degree u < d + 1\\<rbrakk>\n  \\<Longrightarrow> irreducible\\<^sub>d factor\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>factor dvd f; p.dvdm u factor\\<rbrakk>\n              \\<Longrightarrow> factor dvd f;\n   \\<And>factor.\n      \\<lbrakk>factor dvd f; p.dvdm u factor\\<rbrakk>\n      \\<Longrightarrow> p.dvdm u factor;\n   degree u < d + 1\\<rbrakk>\n  \\<Longrightarrow> b' = lead_coeff h\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>factor dvd f; p.dvdm u factor\\<rbrakk>\n              \\<Longrightarrow> factor dvd f;\n   \\<And>factor.\n      \\<lbrakk>factor dvd f; p.dvdm u factor\\<rbrakk>\n      \\<Longrightarrow> p.dvdm u factor;\n   degree u < d + 1\\<rbrakk>\n  \\<Longrightarrow> pl.unique_factorization_m h (b', mset gs')\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>factor dvd f; p.dvdm u factor\\<rbrakk>\n              \\<Longrightarrow> factor dvd f;\n   \\<And>factor.\n      \\<lbrakk>factor dvd f; p.dvdm u factor\\<rbrakk>\n      \\<Longrightarrow> p.dvdm u factor;\n   degree u < d + 1\\<rbrakk>\n  \\<Longrightarrow> p.dvdm u factor\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>factor dvd f; p.dvdm u factor\\<rbrakk>\n              \\<Longrightarrow> factor dvd f;\n   \\<And>factor.\n      \\<lbrakk>factor dvd f; p.dvdm u factor\\<rbrakk>\n      \\<Longrightarrow> p.dvdm u factor;\n   degree u < d + 1\\<rbrakk>\n  \\<Longrightarrow> gs \\<noteq> [] \\<longrightarrow> length gs' < length gs\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>factor dvd f; p.dvdm u factor\\<rbrakk>\n              \\<Longrightarrow> factor dvd f;\n   \\<And>factor.\n      \\<lbrakk>factor dvd f; p.dvdm u factor\\<rbrakk>\n      \\<Longrightarrow> p.dvdm u factor;\n   degree u < d + 1\\<rbrakk>\n  \\<Longrightarrow> factor dvd f\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>factor dvd f; p.dvdm u factor\\<rbrakk>\n              \\<Longrightarrow> factor dvd f;\n   \\<And>factor.\n      \\<lbrakk>factor dvd f; p.dvdm u factor\\<rbrakk>\n      \\<Longrightarrow> p.dvdm u factor;\n   degree u < d + 1\\<rbrakk>\n  \\<Longrightarrow> h dvd f\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>factor dvd f; p.dvdm u factor\\<rbrakk>\n              \\<Longrightarrow> factor dvd f;\n   \\<And>factor.\n      \\<lbrakk>factor dvd f; p.dvdm u factor\\<rbrakk>\n      \\<Longrightarrow> p.dvdm u factor;\n   degree u < d + 1\\<rbrakk>\n  \\<Longrightarrow> set gs' \\<subseteq> set gs\n  \\<lbrakk>\\<And>factor.\n              \\<lbrakk>factor dvd f; p.dvdm u factor\\<rbrakk>\n              \\<Longrightarrow> factor dvd f;\n   \\<And>factor.\n      \\<lbrakk>factor dvd f; p.dvdm u factor\\<rbrakk>\n      \\<Longrightarrow> p.dvdm u factor;\n   degree u < d + 1\\<rbrakk>\n  \\<Longrightarrow> gs' = [] \\<longrightarrow> h = 1\n  degree u < d + 1\n  gs \\<noteq> []\n\ngoal (1 subgoal):\n 1. ((length gs' < length gs &&& irreducible\\<^sub>d factor) &&&\n     h dvd f &&& f = h * factor) &&&\n    (pl.unique_factorization_m h (b', mset gs') &&&\n     set gs' \\<subseteq> set gs) &&&\n    b' = lead_coeff h &&& gs' = [] \\<longrightarrow> h = 1", "by metis+"], ["proof (state)\nthis:\n  length gs' < length gs\n  irreducible\\<^sub>d factor\n  h dvd f\n  f = h * factor\n  pl.unique_factorization_m h (b', mset gs')\n  set gs' \\<subseteq> set gs\n  b' = lead_coeff h\n  gs' = [] \\<longrightarrow> h = 1\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "have F_h_factor_G: \"F = h * prod_list (factor # G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F = h * prod_list (factor # G)", "using F_f_G f_h_factor"], ["proof (prove)\nusing this:\n  F = f * prod_list G\n  f = h * factor\n\ngoal (1 subgoal):\n 1. F = h * prod_list (factor # G)", "by auto"], ["proof (state)\nthis:\n  F = h * prod_list (factor # G)\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "hence h_dvd_F: \"h dvd F\""], ["proof (prove)\nusing this:\n  F = h * prod_list (factor # G)\n\ngoal (1 subgoal):\n 1. h dvd F", "using f_dvd_F dvd_trans"], ["proof (prove)\nusing this:\n  F = h * prod_list (factor # G)\n  f dvd F\n  \\<lbrakk>?a dvd ?b; ?b dvd ?c\\<rbrakk> \\<Longrightarrow> ?a dvd ?c\n\ngoal (1 subgoal):\n 1. h dvd F", "by auto"], ["proof (state)\nthis:\n  h dvd F\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "have irreducible_factor_G: \"\\<And> x. x \\<in> set (factor # G) \\<Longrightarrow> irreducible\\<^sub>d x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (factor # G) \\<Longrightarrow> irreducible\\<^sub>d x", "using irreducible_factor irreducible_G"], ["proof (prove)\nusing this:\n  irreducible\\<^sub>d factor\n  ?factor1 \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d ?factor1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (factor # G) \\<Longrightarrow> irreducible\\<^sub>d x", "by auto"], ["proof (state)\nthis:\n  ?x1 \\<in> set (factor # G) \\<Longrightarrow> irreducible\\<^sub>d ?x1\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "from p.coprime_lead_coeff_factor[OF \\<open>prime p\\<close> cop[unfolded f_h_factor]]"], ["proof (chain)\npicking this:\n  comm_monoid_mult_class.coprime (lead_coeff h) p\n  comm_monoid_mult_class.coprime (lead_coeff factor) p", "have cop': \"coprime (lead_coeff h) p\""], ["proof (prove)\nusing this:\n  comm_monoid_mult_class.coprime (lead_coeff h) p\n  comm_monoid_mult_class.coprime (lead_coeff factor) p\n\ngoal (1 subgoal):\n 1. comm_monoid_mult_class.coprime (lead_coeff h) p", "by auto"], ["proof (state)\nthis:\n  comm_monoid_mult_class.coprime (lead_coeff h) p\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "have lc': \"lead_coeff (smult (lead_coeff h) (prod_list gs')) = lead_coeff h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lead_coeff (smult (lead_coeff h) (prod_list gs')) = lead_coeff h", "by (insert gs'_gs, auto intro!: monic_prod_list intro: mon)"], ["proof (state)\nthis:\n  lead_coeff (smult (lead_coeff h) (prod_list gs')) = lead_coeff h\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "have lc: \"lead_coeff (pl.Mp (smult (lead_coeff h) (prod_list gs'))) = pl.M (lead_coeff h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lead_coeff (pl.Mp (smult (lead_coeff h) (prod_list gs'))) =\n    pl.M (lead_coeff h)", "proof (subst pl.degree_m_eq_lead_coeff[OF pl.degree_m_eq[OF _ pl.m1]]; unfold lc')"], ["proof (state)\ngoal (2 subgoals):\n 1. lead_coeff h mod p ^ l \\<noteq> 0\n 2. pl.M (lead_coeff h) = pl.M (lead_coeff h)", "show \"lead_coeff h mod p^l \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lead_coeff h mod p ^ l \\<noteq> 0", "using p.coprime_exp_mod[OF cop' l0]"], ["proof (prove)\nusing this:\n  lead_coeff h mod p ^ l \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lead_coeff h mod p ^ l \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  lead_coeff h mod p ^ l \\<noteq> 0\n\ngoal (1 subgoal):\n 1. pl.M (lead_coeff h) = pl.M (lead_coeff h)", "qed auto"], ["proof (state)\nthis:\n  lead_coeff (pl.Mp (smult (lead_coeff h) (prod_list gs'))) =\n  pl.M (lead_coeff h)\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "have uh: \"pl.unique_factorization_m h (lead_coeff h, mset gs')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pl.unique_factorization_m h (lead_coeff h, mset gs')", "using h_eq"], ["proof (prove)\nusing this:\n  pl.unique_factorization_m h (b', mset gs')\n\ngoal (1 subgoal):\n 1. pl.unique_factorization_m h (lead_coeff h, mset gs')", "unfolding b'"], ["proof (prove)\nusing this:\n  pl.unique_factorization_m h (lead_coeff h, mset gs')\n\ngoal (1 subgoal):\n 1. pl.unique_factorization_m h (lead_coeff h, mset gs')", "."], ["proof (state)\nthis:\n  pl.unique_factorization_m h (lead_coeff h, mset gs')\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "from p.square_free_m_factor[OF sf[unfolded f_h_factor]]"], ["proof (chain)\npicking this:\n  p.square_free_m h\n  p.square_free_m factor", "have sf': \"p.square_free_m h\""], ["proof (prove)\nusing this:\n  p.square_free_m h\n  p.square_free_m factor\n\ngoal (1 subgoal):\n 1. p.square_free_m h", "by auto"], ["proof (state)\nthis:\n  p.square_free_m h\n\ngoal (1 subgoal):\n 1. \\<And>xs b f G G'.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   (\\<forall>x xa xb xc.\n                       LLL_reconstruction'' p l ys x xa xb =\n                       xc \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set xb \\<longrightarrow>\n                           irreducible\\<^sub>d x) \\<longrightarrow>\n                       F = xa * prod_list xb \\<longrightarrow>\n                       pl.unique_factorization_m xa\n                        (lead_coeff xa, mset ys) \\<longrightarrow>\n                       ys \\<noteq> [] \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           pl.Mp x = x) \\<longrightarrow>\n                       (\\<forall>x.\n                           x \\<in> set ys \\<longrightarrow>\n                           p.irreducible\\<^sub>d_m x) \\<longrightarrow>\n                       p.square_free_m xa \\<longrightarrow>\n                       comm_monoid_mult_class.coprime (lead_coeff xa)\n                        p \\<longrightarrow>\n                       Ball (set xc) irreducible\\<^sub>d \\<and>\n                       F = prod_list xc);\n        LLL_reconstruction'' p l xs b f G = G';\n        \\<And>factor.\n           factor \\<in> set G \\<Longrightarrow> irreducible\\<^sub>d factor;\n        F = f * prod_list G;\n        pl.unique_factorization_m f (lead_coeff f, mset xs); xs \\<noteq> [];\n        \\<And>gi. gi \\<in> set xs \\<Longrightarrow> pl.Mp gi = gi;\n        \\<And>gi.\n           gi \\<in> set xs \\<Longrightarrow> p.irreducible\\<^sub>d_m gi;\n        p.square_free_m f;\n        comm_monoid_mult_class.coprime (lead_coeff f) p\\<rbrakk>\n       \\<Longrightarrow> Ball (set G') irreducible\\<^sub>d \\<and>\n                         F = prod_list G'", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>a\\<in>set G'. irreducible\\<^sub>d a) \\<and> F = prod_list G'", "proof (cases \"gs' \\<noteq> []\")"], ["proof (state)\ngoal (2 subgoals):\n 1. gs' \\<noteq> [] \\<Longrightarrow>\n    (\\<forall>a\\<in>set G'. irreducible\\<^sub>d a) \\<and> F = prod_list G'\n 2. \\<not> gs' \\<noteq> [] \\<Longrightarrow>\n    (\\<forall>a\\<in>set G'. irreducible\\<^sub>d a) \\<and> F = prod_list G'", "case gs'_not_empty: True"], ["proof (state)\nthis:\n  gs' \\<noteq> []\n\ngoal (2 subgoals):\n 1. gs' \\<noteq> [] \\<Longrightarrow>\n    (\\<forall>a\\<in>set G'. irreducible\\<^sub>d a) \\<and> F = prod_list G'\n 2. \\<not> gs' \\<noteq> [] \\<Longrightarrow>\n    (\\<forall>a\\<in>set G'. irreducible\\<^sub>d a) \\<and> F = prod_list G'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>a\\<in>set G'. irreducible\\<^sub>d a) \\<and> F = prod_list G'", "by (rule \"1.IH\"[rule_format, OF length_less LLL_eq irreducible_factor_G F_h_factor_G \n        uh gs'_not_empty norm irred_p sf' cop'], insert gs'_gs, auto)"], ["proof (state)\nthis:\n  (\\<forall>a\\<in>set G'. irreducible\\<^sub>d a) \\<and> F = prod_list G'\n\ngoal (1 subgoal):\n 1. \\<not> gs' \\<noteq> [] \\<Longrightarrow>\n    (\\<forall>a\\<in>set G'. irreducible\\<^sub>d a) \\<and> F = prod_list G'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> gs' \\<noteq> [] \\<Longrightarrow>\n    (\\<forall>a\\<in>set G'. irreducible\\<^sub>d a) \\<and> F = prod_list G'", "case False"], ["proof (state)\nthis:\n  \\<not> gs' \\<noteq> []\n\ngoal (1 subgoal):\n 1. \\<not> gs' \\<noteq> [] \\<Longrightarrow>\n    (\\<forall>a\\<in>set G'. irreducible\\<^sub>d a) \\<and> F = prod_list G'", "have pl_ge0: \"p^l > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < p ^ l", "using p1"], ["proof (prove)\nusing this:\n  1 < p\n\ngoal (1 subgoal):\n 1. 0 < p ^ l", "by auto"], ["proof (state)\nthis:\n  0 < p ^ l\n\ngoal (1 subgoal):\n 1. \\<not> gs' \\<noteq> [] \\<Longrightarrow>\n    (\\<forall>a\\<in>set G'. irreducible\\<^sub>d a) \\<and> F = prod_list G'", "have G'_eq: \"G' = factor # G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G' = factor # G", "using LLL_eq False"], ["proof (prove)\nusing this:\n  LLL_reconstruction'' p l gs' b' h (factor # G) = G'\n  \\<not> gs' \\<noteq> []\n\ngoal (1 subgoal):\n 1. G' = factor # G", "using LLL_reconstruction''.simps"], ["proof (prove)\nusing this:\n  LLL_reconstruction'' p l gs' b' h (factor # G) = G'\n  \\<not> gs' \\<noteq> []\n  LLL_reconstruction'' ?p ?l ?gs ?b ?f ?factors =\n  (if ?gs = [] then ?factors\n   else let u = choose_u ?gs; d = degree u; gs' = remove1 u ?gs;\n            degs = map degree gs'; Degs = (+) d ` sub_mset_sums degs;\n            (gs', b', f', factor) =\n              LLL_reconstruction_inner_loop ?p ?l ?gs ?f u Degs (d + 1)\n        in LLL_reconstruction'' ?p ?l gs' b' f' (factor # ?factors))\n\ngoal (1 subgoal):\n 1. G' = factor # G", "by auto"], ["proof (state)\nthis:\n  G' = factor # G\n\ngoal (1 subgoal):\n 1. \\<not> gs' \\<noteq> [] \\<Longrightarrow>\n    (\\<forall>a\\<in>set G'. irreducible\\<^sub>d a) \\<and> F = prod_list G'", "have condition1: \"(\\<forall>a\\<in>set G'. irreducible\\<^sub>d a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>set G'. irreducible\\<^sub>d a", "using irreducible_factor_G G'_eq"], ["proof (prove)\nusing this:\n  ?x1 \\<in> set (factor # G) \\<Longrightarrow> irreducible\\<^sub>d ?x1\n  G' = factor # G\n\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>set G'. irreducible\\<^sub>d a", "by auto"], ["proof (state)\nthis:\n  \\<forall>a\\<in>set G'. irreducible\\<^sub>d a\n\ngoal (1 subgoal):\n 1. \\<not> gs' \\<noteq> [] \\<Longrightarrow>\n    (\\<forall>a\\<in>set G'. irreducible\\<^sub>d a) \\<and> F = prod_list G'", "have h_eq2: \"pl.Mp h = pl.Mp [:b':]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pl.eq_m h [:b':]", "using h_eq False"], ["proof (prove)\nusing this:\n  pl.unique_factorization_m h (b', mset gs')\n  \\<not> gs' \\<noteq> []\n\ngoal (1 subgoal):\n 1. pl.eq_m h [:b':]", "unfolding pl.unique_factorization_m_alt_def pl.factorization_m_def"], ["proof (prove)\nusing this:\n  (case (b', mset gs') of\n   (c, fs) \\<Rightarrow>\n     pl.eq_m h (smult c (\\<Prod>\\<^sub># fs)) \\<and>\n     (\\<forall>f\\<in>#fs.\n         pl.irreducible\\<^sub>d_m f \\<and> monic (pl.Mp f))) \\<and>\n  (\\<forall>dgs.\n      (case dgs of\n       (c, fs) \\<Rightarrow>\n         pl.eq_m h (smult c (\\<Prod>\\<^sub># fs)) \\<and>\n         (\\<forall>f\\<in>#fs.\n             pl.irreducible\\<^sub>d_m f \\<and>\n             monic (pl.Mp f))) \\<longrightarrow>\n      pl.Mf dgs = pl.Mf (b', mset gs'))\n  \\<not> gs' \\<noteq> []\n\ngoal (1 subgoal):\n 1. pl.eq_m h [:b':]", "by auto"], ["proof (state)\nthis:\n  pl.eq_m h [:b':]\n\ngoal (1 subgoal):\n 1. \\<not> gs' \\<noteq> [] \\<Longrightarrow>\n    (\\<forall>a\\<in>set G'. irreducible\\<^sub>d a) \\<and> F = prod_list G'", "have Mp_const_rw[simp]: \"pl.Mp [:b':] = [:b' mod p^l:]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pl.Mp [:b':] = [:b' mod p ^ l:]", "using pl.Mp_const_poly"], ["proof (prove)\nusing this:\n  pl.Mp [:?a:] = [:?a mod p ^ l:]\n\ngoal (1 subgoal):\n 1. pl.Mp [:b':] = [:b' mod p ^ l:]", "by blast"], ["proof (state)\nthis:\n  pl.Mp [:b':] = [:b' mod p ^ l:]\n\ngoal (1 subgoal):\n 1. \\<not> gs' \\<noteq> [] \\<Longrightarrow>\n    (\\<forall>a\\<in>set G'. irreducible\\<^sub>d a) \\<and> F = prod_list G'", "have condition2: \"F = prod_list G'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F = prod_list G'", "using h1 False f_h_factor G'_eq F_h_factor_G"], ["proof (prove)\nusing this:\n  gs' = [] \\<longrightarrow> h = 1\n  \\<not> gs' \\<noteq> []\n  f = h * factor\n  G' = factor # G\n  F = h * prod_list (factor # G)\n\ngoal (1 subgoal):\n 1. F = prod_list G'", "by auto"], ["proof (state)\nthis:\n  F = prod_list G'\n\ngoal (1 subgoal):\n 1. \\<not> gs' \\<noteq> [] \\<Longrightarrow>\n    (\\<forall>a\\<in>set G'. irreducible\\<^sub>d a) \\<and> F = prod_list G'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>a\\<in>set G'. irreducible\\<^sub>d a) \\<and> F = prod_list G'", "using condition1 condition2"], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>set G'. irreducible\\<^sub>d a\n  F = prod_list G'\n\ngoal (1 subgoal):\n 1. (\\<forall>a\\<in>set G'. irreducible\\<^sub>d a) \\<and> F = prod_list G'", "by auto"], ["proof (state)\nthis:\n  (\\<forall>a\\<in>set G'. irreducible\\<^sub>d a) \\<and> F = prod_list G'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<forall>a\\<in>set G'. irreducible\\<^sub>d a) \\<and> F = prod_list G'\n\ngoal:\nNo subgoals!", "qed"], ["", "context\n  fixes gs :: \"int poly list\" \n  assumes gs_hen: \"berlekamp_hensel p l F = gs\" \n   and cop: \"coprime (lead_coeff F) p\" \n   and sf: \"poly_mod.square_free_m p F\" \n   and sf_F: \"square_free F\" \nbegin"], ["", "lemma gs_not_empty: \"gs \\<noteq> []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gs \\<noteq> []", "proof (rule ccontr, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. gs = [] \\<Longrightarrow> False", "assume gs: \"gs = []\""], ["proof (state)\nthis:\n  gs = []\n\ngoal (1 subgoal):\n 1. gs = [] \\<Longrightarrow> False", "obtain c fs where c_fs: \"finite_field_factorization_int p F = (c, fs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c fs.\n        finite_field_factorization_int p F = (c, fs) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  finite_field_factorization_int p F = (c, fs)\n\ngoal (1 subgoal):\n 1. gs = [] \\<Longrightarrow> False", "have \"sort (map degree fs) = sort (map degree gs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sort (map degree fs) = sort (map degree gs)", "by (rule p.berlekamp_hensel_main(2)[OF _ gs_hen cop sf c_fs], simp add: l0)"], ["proof (state)\nthis:\n  sort (map degree fs) = sort (map degree gs)\n\ngoal (1 subgoal):\n 1. gs = [] \\<Longrightarrow> False", "hence fs_empty: \"fs = []\""], ["proof (prove)\nusing this:\n  sort (map degree fs) = sort (map degree gs)\n\ngoal (1 subgoal):\n 1. fs = []", "using gs"], ["proof (prove)\nusing this:\n  sort (map degree fs) = sort (map degree gs)\n  gs = []\n\ngoal (1 subgoal):\n 1. fs = []", "by (cases fs, auto)"], ["proof (state)\nthis:\n  fs = []\n\ngoal (1 subgoal):\n 1. gs = [] \\<Longrightarrow> False", "hence fs: \"mset fs = {#}\""], ["proof (prove)\nusing this:\n  fs = []\n\ngoal (1 subgoal):\n 1. mset fs = {#}", "by auto"], ["proof (state)\nthis:\n  mset fs = {#}\n\ngoal (1 subgoal):\n 1. gs = [] \\<Longrightarrow> False", "have \"p.unique_factorization_m F (c, mset fs)\" and c: \"c \\<in> {0..<p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p.unique_factorization_m F (c, mset fs) &&& c \\<in> {0..<p}", "using p.finite_field_factorization_int[OF sf c_fs]"], ["proof (prove)\nusing this:\n  p.unique_factorization_m F (c, mset fs) \\<and>\n  c \\<in> {0..<p} \\<and>\n  (\\<forall>fi\\<in>set fs. set (coeffs fi) \\<subseteq> {0..<p})\n\ngoal (1 subgoal):\n 1. p.unique_factorization_m F (c, mset fs) &&& c \\<in> {0..<p}", "by auto"], ["proof (state)\nthis:\n  p.unique_factorization_m F (c, mset fs)\n  c \\<in> {0..<p}\n\ngoal (1 subgoal):\n 1. gs = [] \\<Longrightarrow> False", "hence \"p.factorization_m F (c, mset fs)\""], ["proof (prove)\nusing this:\n  p.unique_factorization_m F (c, mset fs)\n  c \\<in> {0..<p}\n\ngoal (1 subgoal):\n 1. p.factorization_m F (c, mset fs)", "using p.unique_factorization_m_imp_factorization"], ["proof (prove)\nusing this:\n  p.unique_factorization_m F (c, mset fs)\n  c \\<in> {0..<p}\n  p.unique_factorization_m ?f ?cfs \\<Longrightarrow>\n  p.factorization_m ?f ?cfs\n\ngoal (1 subgoal):\n 1. p.factorization_m F (c, mset fs)", "by auto"], ["proof (state)\nthis:\n  p.factorization_m F (c, mset fs)\n\ngoal (1 subgoal):\n 1. gs = [] \\<Longrightarrow> False", "hence eq_m_F: \"p.eq_m F [:c:]\""], ["proof (prove)\nusing this:\n  p.factorization_m F (c, mset fs)\n\ngoal (1 subgoal):\n 1. p.eq_m F [:c:]", "unfolding fs p.factorization_m_def"], ["proof (prove)\nusing this:\n  case (c, {#}) of\n  (c, fs) \\<Rightarrow>\n    p.eq_m F (smult c (\\<Prod>\\<^sub># fs)) \\<and>\n    (\\<forall>f\\<in>#fs. p.irreducible\\<^sub>d_m f \\<and> monic (p.Mp f))\n\ngoal (1 subgoal):\n 1. p.eq_m F [:c:]", "by auto"], ["proof (state)\nthis:\n  p.eq_m F [:c:]\n\ngoal (1 subgoal):\n 1. gs = [] \\<Longrightarrow> False", "hence \"0 = p.degree_m F\""], ["proof (prove)\nusing this:\n  p.eq_m F [:c:]\n\ngoal (1 subgoal):\n 1. 0 = p.degree_m F", "by (simp add: p.Mp_const_poly)"], ["proof (state)\nthis:\n  0 = p.degree_m F\n\ngoal (1 subgoal):\n 1. gs = [] \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  0 = p.degree_m F\n\ngoal (1 subgoal):\n 1. gs = [] \\<Longrightarrow> False", "have \"... = degree F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p.degree_m F = degree F", "by (rule p.degree_m_eq[OF _ p1], insert cop p1, auto)"], ["proof (state)\nthis:\n  p.degree_m F = degree F\n\ngoal (1 subgoal):\n 1. gs = [] \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  0 = degree F", "have \"degree F = 0\""], ["proof (prove)\nusing this:\n  0 = degree F\n\ngoal (1 subgoal):\n 1. degree F = 0", ".."], ["proof (state)\nthis:\n  degree F = 0\n\ngoal (1 subgoal):\n 1. gs = [] \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  degree F = 0\n\ngoal (1 subgoal):\n 1. False", "using N0"], ["proof (prove)\nusing this:\n  degree F = 0\n  0 < N\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma reconstruction_of_algorithm_16_22:   \n  assumes 1: \"reconstruction_of_algorithm_16_22 p l gs F = G\"\n  shows \"(\\<forall>g\\<in>set G. irreducible\\<^sub>d g) \\<and> F = prod_list G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>g\\<in>set G. irreducible\\<^sub>d g) \\<and> F = prod_list G", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<forall>g\\<in>set G. irreducible\\<^sub>d g) \\<and> F = prod_list G", "note * = p.berlekamp_hensel_unique[OF cop sf gs_hen l0]"], ["proof (state)\nthis:\n  pl.unique_factorization_m F (lead_coeff F, mset gs)\n  ?g \\<in> set gs \\<Longrightarrow> pl.Mp ?g = ?g\n\ngoal (1 subgoal):\n 1. (\\<forall>g\\<in>set G. irreducible\\<^sub>d g) \\<and> F = prod_list G", "obtain c fs where \"finite_field_factorization_int p F = (c, fs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c fs.\n        finite_field_factorization_int p F = (c, fs) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  finite_field_factorization_int p F = (c, fs)\n\ngoal (1 subgoal):\n 1. (\\<forall>g\\<in>set G. irreducible\\<^sub>d g) \\<and> F = prod_list G", "from p.berlekamp_hensel_main[OF l0 gs_hen cop sf this]"], ["proof (chain)\npicking this:\n  pl.factorization_m F (lead_coeff F, mset gs)\n  sort (map degree fs) = sort (map degree gs)\n  ?g \\<in> set gs \\<Longrightarrow>\n  monic ?g \\<and>\n  pl.Mp ?g = ?g \\<and> p.irreducible_m ?g \\<and> p.degree_m ?g = degree ?g", "show ?thesis"], ["proof (prove)\nusing this:\n  pl.factorization_m F (lead_coeff F, mset gs)\n  sort (map degree fs) = sort (map degree gs)\n  ?g \\<in> set gs \\<Longrightarrow>\n  monic ?g \\<and>\n  pl.Mp ?g = ?g \\<and> p.irreducible_m ?g \\<and> p.degree_m ?g = degree ?g\n\ngoal (1 subgoal):\n 1. (\\<forall>g\\<in>set G. irreducible\\<^sub>d g) \\<and> F = prod_list G", "using 1"], ["proof (prove)\nusing this:\n  pl.factorization_m F (lead_coeff F, mset gs)\n  sort (map degree fs) = sort (map degree gs)\n  ?g \\<in> set gs \\<Longrightarrow>\n  monic ?g \\<and>\n  pl.Mp ?g = ?g \\<and> p.irreducible_m ?g \\<and> p.degree_m ?g = degree ?g\n  reconstruction_of_algorithm_16_22 p l gs F = G\n\ngoal (1 subgoal):\n 1. (\\<forall>g\\<in>set G. irreducible\\<^sub>d g) \\<and> F = prod_list G", "unfolding reconstruction_of_algorithm_16_22_def Let_def"], ["proof (prove)\nusing this:\n  pl.factorization_m F (lead_coeff F, mset gs)\n  sort (map degree fs) = sort (map degree gs)\n  ?g \\<in> set gs \\<Longrightarrow>\n  monic ?g \\<and>\n  pl.Mp ?g = ?g \\<and> p.irreducible_m ?g \\<and> p.degree_m ?g = degree ?g\n  LLL_reconstruction'' p l gs (lead_coeff F) F [] = G\n\ngoal (1 subgoal):\n 1. (\\<forall>g\\<in>set G. irreducible\\<^sub>d g) \\<and> F = prod_list G", "by (intro LLL_reconstruction''[OF _ _ _ _ gs_not_empty], insert * sf sf_F cop, auto)"], ["proof (state)\nthis:\n  (\\<forall>g\\<in>set G. irreducible\\<^sub>d g) \\<and> F = prod_list G\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"], ["", "subsubsection \\<open>Final statement\\<close>"], ["", "lemma factorization_algorithm_16_22:\n  assumes res: \"factorization_algorithm_16_22 f = G\"\n  and sff: \"square_free f\"\n  and deg: \"degree f > 0\" \n  shows \"(\\<forall>g\\<in>set G. irreducible\\<^sub>d g) \\<and> f = prod_list G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>g\\<in>set G. irreducible\\<^sub>d g) \\<and> f = prod_list G", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<forall>g\\<in>set G. irreducible\\<^sub>d g) \\<and> f = prod_list G", "let ?lc = \"lead_coeff f\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<forall>g\\<in>set G. irreducible\\<^sub>d g) \\<and> f = prod_list G", "define p where \"p \\<equiv> suitable_prime_bz f\""], ["proof (state)\nthis:\n  p \\<equiv> suitable_prime_bz f\n\ngoal (1 subgoal):\n 1. (\\<forall>g\\<in>set G. irreducible\\<^sub>d g) \\<and> f = prod_list G", "obtain c gs where fff: \"finite_field_factorization_int p f = (c,gs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c gs.\n        finite_field_factorization_int p f = (c, gs) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  finite_field_factorization_int p f = (c, gs)\n\ngoal (1 subgoal):\n 1. (\\<forall>g\\<in>set G. irreducible\\<^sub>d g) \\<and> f = prod_list G", "let ?degs = \"map degree gs\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<forall>g\\<in>set G. irreducible\\<^sub>d g) \\<and> f = prod_list G", "note res = res[unfolded factorization_algorithm_16_22_def Let_def, folded p_def,\n    unfolded fff split, folded]"], ["proof (state)\nthis:\n  reconstruction_of_algorithm_16_22 p\n   (find_exponent p\n     (sqrt_int_ceiling\n       (2 ^ (5 * degree f * degree f) *\n        \\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * degree f))))\n   (hensel_lifting p\n     (find_exponent p\n       (sqrt_int_ceiling\n         (2 ^ (5 * degree f * degree f) *\n          \\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * degree f))))\n     f gs)\n   f =\n  G\n\ngoal (1 subgoal):\n 1. (\\<forall>g\\<in>set G. irreducible\\<^sub>d g) \\<and> f = prod_list G", "from suitable_prime_bz[OF sff refl]"], ["proof (chain)\npicking this:\n  prime (suitable_prime_bz f)\n  comm_monoid_mult_class.coprime (lead_coeff f) (suitable_prime_bz f)\n  poly_mod.square_free_m (suitable_prime_bz f) f", "have prime: \"prime p\" and cop: \"coprime ?lc p\" and sf: \"poly_mod.square_free_m p f\""], ["proof (prove)\nusing this:\n  prime (suitable_prime_bz f)\n  comm_monoid_mult_class.coprime (lead_coeff f) (suitable_prime_bz f)\n  poly_mod.square_free_m (suitable_prime_bz f) f\n\ngoal (1 subgoal):\n 1. prime p &&&\n    comm_monoid_mult_class.coprime (lead_coeff f) p &&&\n    poly_mod.square_free_m p f", "unfolding p_def"], ["proof (prove)\nusing this:\n  prime (suitable_prime_bz f)\n  comm_monoid_mult_class.coprime (lead_coeff f) (suitable_prime_bz f)\n  poly_mod.square_free_m (suitable_prime_bz f) f\n\ngoal (1 subgoal):\n 1. prime (suitable_prime_bz f) &&&\n    comm_monoid_mult_class.coprime (lead_coeff f) (suitable_prime_bz f) &&&\n    poly_mod.square_free_m (suitable_prime_bz f) f", "by auto"], ["proof (state)\nthis:\n  prime p\n  comm_monoid_mult_class.coprime (lead_coeff f) p\n  poly_mod.square_free_m p f\n\ngoal (1 subgoal):\n 1. (\\<forall>g\\<in>set G. irreducible\\<^sub>d g) \\<and> f = prod_list G", "note res"], ["proof (state)\nthis:\n  reconstruction_of_algorithm_16_22 p\n   (find_exponent p\n     (sqrt_int_ceiling\n       (2 ^ (5 * degree f * degree f) *\n        \\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * degree f))))\n   (hensel_lifting p\n     (find_exponent p\n       (sqrt_int_ceiling\n         (2 ^ (5 * degree f * degree f) *\n          \\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * degree f))))\n     f gs)\n   f =\n  G\n\ngoal (1 subgoal):\n 1. (\\<forall>g\\<in>set G. irreducible\\<^sub>d g) \\<and> f = prod_list G", "from prime"], ["proof (chain)\npicking this:\n  prime p", "interpret poly_mod_prime p"], ["proof (prove)\nusing this:\n  prime p\n\ngoal (1 subgoal):\n 1. poly_mod_prime p", "by unfold_locales"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<forall>g\\<in>set G. irreducible\\<^sub>d g) \\<and> f = prod_list G", "define K where \"K = 2 ^ (5 * degree f * degree f) *\n            \\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * degree f)\""], ["proof (state)\nthis:\n  K =\n  2 ^ (5 * degree f * degree f) *\n  \\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * degree f)\n\ngoal (1 subgoal):\n 1. (\\<forall>g\\<in>set G. irreducible\\<^sub>d g) \\<and> f = prod_list G", "define N where \"N = sqrt_int_ceiling K\""], ["proof (state)\nthis:\n  N = sqrt_int_ceiling K\n\ngoal (1 subgoal):\n 1. (\\<forall>g\\<in>set G. irreducible\\<^sub>d g) \\<and> f = prod_list G", "have K0: \"K \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> K", "unfolding K_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> 2 ^ (5 * degree f * degree f) *\n            \\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * degree f)", "by auto"], ["proof (state)\nthis:\n  0 \\<le> K\n\ngoal (1 subgoal):\n 1. (\\<forall>g\\<in>set G. irreducible\\<^sub>d g) \\<and> f = prod_list G", "have N0: \"N \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> N", "unfolding N_def sqrt_int_ceiling"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> \\<lceil>sqrt (real_of_int K)\\<rceil>", "using K0"], ["proof (prove)\nusing this:\n  0 \\<le> K\n\ngoal (1 subgoal):\n 1. 0 \\<le> \\<lceil>sqrt (real_of_int K)\\<rceil>", "by (smt of_int_nonneg real_sqrt_ge_0_iff zero_le_ceiling)"], ["proof (state)\nthis:\n  0 \\<le> N\n\ngoal (1 subgoal):\n 1. (\\<forall>g\\<in>set G. irreducible\\<^sub>d g) \\<and> f = prod_list G", "define n where \"n = find_exponent p N\""], ["proof (state)\nthis:\n  n = find_exponent p N\n\ngoal (1 subgoal):\n 1. (\\<forall>g\\<in>set G. irreducible\\<^sub>d g) \\<and> f = prod_list G", "note res = res[folded n_def[unfolded N_def K_def]]"], ["proof (state)\nthis:\n  reconstruction_of_algorithm_16_22 p n (hensel_lifting p n f gs) f = G\n\ngoal (1 subgoal):\n 1. (\\<forall>g\\<in>set G. irreducible\\<^sub>d g) \\<and> f = prod_list G", "note n = find_exponent[OF m1, of N, folded n_def]"], ["proof (state)\nthis:\n  N < p ^ n\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<forall>g\\<in>set G. irreducible\\<^sub>d g) \\<and> f = prod_list G", "note bh = berlekamp_and_hensel_separated[OF cop sf refl fff n(2)]"], ["proof (state)\nthis:\n  berlekamp_hensel p n f = hensel_lifting p n f gs\n  sort (map degree gs) = sort (map degree (hensel_lifting p n f gs))\n\ngoal (1 subgoal):\n 1. (\\<forall>g\\<in>set G. irreducible\\<^sub>d g) \\<and> f = prod_list G", "note res = res[folded bh(1)]"], ["proof (state)\nthis:\n  reconstruction_of_algorithm_16_22 p n (berlekamp_hensel p n f) f = G\n\ngoal (1 subgoal):\n 1. (\\<forall>g\\<in>set G. irreducible\\<^sub>d g) \\<and> f = prod_list G", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>g\\<in>set G. irreducible\\<^sub>d g) \\<and> f = prod_list G", "proof (rule reconstruction_of_algorithm_16_22[OF prime deg _ refl cop sf sff res])"], ["proof (state)\ngoal (1 subgoal):\n 1. 2 ^ (degree f)\\<^sup>2 * B2_LLL f ^ (2 * degree f) \\<le> (p ^ n)\\<^sup>2", "from n(1)"], ["proof (chain)\npicking this:\n  N < p ^ n", "have \"N \\<le> p ^ n\""], ["proof (prove)\nusing this:\n  N < p ^ n\n\ngoal (1 subgoal):\n 1. N \\<le> p ^ n", "by simp"], ["proof (state)\nthis:\n  N \\<le> p ^ n\n\ngoal (1 subgoal):\n 1. 2 ^ (degree f)\\<^sup>2 * B2_LLL f ^ (2 * degree f) \\<le> (p ^ n)\\<^sup>2", "hence *: \"N^2 \\<le> (p^n)^2\""], ["proof (prove)\nusing this:\n  N \\<le> p ^ n\n\ngoal (1 subgoal):\n 1. N\\<^sup>2 \\<le> (p ^ n)\\<^sup>2", "by (intro power_mono N0, auto)"], ["proof (state)\nthis:\n  N\\<^sup>2 \\<le> (p ^ n)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 2 ^ (degree f)\\<^sup>2 * B2_LLL f ^ (2 * degree f) \\<le> (p ^ n)\\<^sup>2", "show \"2 ^ (degree f)\\<^sup>2 * B2_LLL f ^ (2 * degree f) \\<le> (p ^ n)\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (degree f)\\<^sup>2 * B2_LLL f ^ (2 * degree f) \\<le> (p ^ n)\\<^sup>2", "proof (rule order.trans[OF _ *])"], ["proof (state)\ngoal (1 subgoal):\n 1. 2 ^ (degree f)\\<^sup>2 * B2_LLL f ^ (2 * degree f) \\<le> N\\<^sup>2", "have \"2 ^ (degree f)\\<^sup>2 * B2_LLL f ^ (2 * degree f) = K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (degree f)\\<^sup>2 * B2_LLL f ^ (2 * degree f) = K", "unfolding K_def B2_LLL_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 ^ (degree f)\\<^sup>2 *\n    (2 ^ (2 * degree f) * \\<parallel>f\\<parallel>\\<^sup>2) ^\n    (2 * degree f) =\n    2 ^ (5 * degree f * degree f) *\n    \\<parallel>f\\<parallel>\\<^sup>2 ^ (2 * degree f)", "by (simp add: ac_simps \n          power_mult_distrib power2_eq_square power_mult[symmetric] power_add[symmetric])"], ["proof (state)\nthis:\n  2 ^ (degree f)\\<^sup>2 * B2_LLL f ^ (2 * degree f) = K\n\ngoal (1 subgoal):\n 1. 2 ^ (degree f)\\<^sup>2 * B2_LLL f ^ (2 * degree f) \\<le> N\\<^sup>2", "also"], ["proof (state)\nthis:\n  2 ^ (degree f)\\<^sup>2 * B2_LLL f ^ (2 * degree f) = K\n\ngoal (1 subgoal):\n 1. 2 ^ (degree f)\\<^sup>2 * B2_LLL f ^ (2 * degree f) \\<le> N\\<^sup>2", "have \"\\<dots> \\<le> N\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. K \\<le> N\\<^sup>2", "unfolding N_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. K \\<le> (sqrt_int_ceiling K)\\<^sup>2", "by (rule sqrt_int_ceiling_bound[OF K0])"], ["proof (state)\nthis:\n  K \\<le> N\\<^sup>2\n\ngoal (1 subgoal):\n 1. 2 ^ (degree f)\\<^sup>2 * B2_LLL f ^ (2 * degree f) \\<le> N\\<^sup>2", "finally"], ["proof (chain)\npicking this:\n  2 ^ (degree f)\\<^sup>2 * B2_LLL f ^ (2 * degree f) \\<le> N\\<^sup>2", "show \"2 ^ (degree f)\\<^sup>2 * B2_LLL f ^ (2 * degree f) \\<le> N\\<^sup>2\""], ["proof (prove)\nusing this:\n  2 ^ (degree f)\\<^sup>2 * B2_LLL f ^ (2 * degree f) \\<le> N\\<^sup>2\n\ngoal (1 subgoal):\n 1. 2 ^ (degree f)\\<^sup>2 * B2_LLL f ^ (2 * degree f) \\<le> N\\<^sup>2", "."], ["proof (state)\nthis:\n  2 ^ (degree f)\\<^sup>2 * B2_LLL f ^ (2 * degree f) \\<le> N\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  2 ^ (degree f)\\<^sup>2 * B2_LLL f ^ (2 * degree f) \\<le> (p ^ n)\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<forall>g\\<in>set G. irreducible\\<^sub>d g) \\<and> f = prod_list G\n\ngoal:\nNo subgoals!", "qed"], ["", "lift_definition increasing_lattices_LLL_factorization :: int_poly_factorization_algorithm\n  is factorization_algorithm_16_22"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>poly list.\n       \\<lbrakk>square_free poly; 0 < degree poly;\n        factorization_algorithm_16_22 poly = list\\<rbrakk>\n       \\<Longrightarrow> poly = prod_list list \\<and>\n                         Ball (set list) irreducible\\<^sub>d", "using factorization_algorithm_16_22"], ["proof (prove)\nusing this:\n  \\<lbrakk>factorization_algorithm_16_22 ?f = ?G; square_free ?f;\n   0 < degree ?f\\<rbrakk>\n  \\<Longrightarrow> (\\<forall>g\\<in>set ?G. irreducible\\<^sub>d g) \\<and>\n                    ?f = prod_list ?G\n\ngoal (1 subgoal):\n 1. \\<And>poly list.\n       \\<lbrakk>square_free poly; 0 < degree poly;\n        factorization_algorithm_16_22 poly = list\\<rbrakk>\n       \\<Longrightarrow> poly = prod_list list \\<and>\n                         Ball (set list) irreducible\\<^sub>d", "by auto"], ["", "thm factorize_int_poly[of increasing_lattices_LLL_factorization]"], ["", "end"]]}