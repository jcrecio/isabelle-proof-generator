{"file_name": "/home/qj213/afp-2021-10-22/thys/Relational_Forests/Algorithms.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Relational_Forests", "problem_names": ["lemma choose_arc_below:\n  \"choose_arc x \\<le> --x\"", "lemma choose_arc_arc:\n  assumes \"x \\<noteq> bot\"\n  shows \"arc (choose_arc x)\"", "lemma choose_arc_bot:\n  \"choose_arc bot = bot\"", "lemma choose_arc_bot_iff:\n  \"choose_arc x = bot \\<longleftrightarrow> x = bot\"", "lemma choose_arc_regular:\n  \"regular (choose_arc x)\"", "lemma spanning_forest_spanning:\n  \"spanning_forest f g \\<Longrightarrow> spanning (--g) f\"", "lemma spanning_forest_spanning_regular:\n  assumes \"regular f\"\n      and \"regular g\"\n  shows \"spanning_forest f g \\<longleftrightarrow> spanning g f\"", "lemma kruskal_vc_1:\n  assumes \"symmetric g\"\n    shows \"kruskal_spanning_invariant bot g g\"", "lemma kruskal_vc_2:\n  assumes \"kruskal_spanning_invariant f g h\"\n      and \"h \\<noteq> bot\"\n    shows \"(choose_arc h \\<le> -forest_components f \\<longrightarrow> kruskal_spanning_invariant ((f \\<sqinter> -(top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)) \\<squnion> (f \\<sqinter> top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion> choose_arc h) g (h \\<sqinter> -choose_arc h \\<sqinter> -choose_arc h\\<^sup>T)\n                                               \\<and> card { x . regular x \\<and> x \\<le> --h \\<and> x \\<le> -choose_arc h \\<and> x \\<le> -choose_arc h\\<^sup>T } < card { x . regular x \\<and> x \\<le> --h }) \\<and>\n           (\\<not> choose_arc h \\<le> -forest_components f \\<longrightarrow> kruskal_spanning_invariant f g (h \\<sqinter> -choose_arc h \\<sqinter> -choose_arc h\\<^sup>T)\n                                                 \\<and> card { x . regular x \\<and> x \\<le> --h \\<and> x \\<le> -choose_arc h \\<and> x \\<le> -choose_arc h\\<^sup>T } < card { x . regular x \\<and> x \\<le> --h })\"", "theorem kruskal_spanning:\n  \"VARS e f h\n  [ symmetric g ]\n  f := bot;\n  h := g;\n  WHILE h \\<noteq> bot\n    INV { kruskal_spanning_invariant f g h }\n    VAR { card { x . regular x \\<and> x \\<le> --h } }\n     DO e := choose_arc h;\n        IF e \\<le> -forest_components f THEN\n          f := (f \\<sqinter> -(top * e * f\\<^sup>T\\<^sup>\\<star>)) \\<squnion> (f \\<sqinter> top * e * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion> e\n        ELSE\n          SKIP\n        FI;\n        h := h \\<sqinter> -e \\<sqinter> -e\\<^sup>T\n     OD\n  [ spanning_forest f g ]\"", "lemma kruskal_exists_spanning:\n  \"symmetric g \\<Longrightarrow> \\<exists>f . spanning_forest f g\"", "lemma symmetric_spannable:\n  \"symmetric g \\<Longrightarrow> spannable (--g)\"", "theorem bfs_reachability:\n  \"VARS p q t\n  [ regular r \\<and> regular s \\<and> vector s ]\n  t := bot;\n  q := s;\n  p := -s \\<sqinter> r\\<^sup>T * s;\n  WHILE p \\<noteq> bot\n    INV { regular r \\<and> regular q \\<and> vector q \\<and> asymmetric t \\<and> t \\<le> r \\<and> t \\<le> q \\<and> q = t\\<^sup>T\\<^sup>\\<star> * s \\<and> p = -q \\<sqinter> r\\<^sup>T * q }\n    VAR { card { x . regular x \\<and> x \\<le> --(-q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s) } }\n     DO t := t \\<squnion> (r \\<sqinter> q * p\\<^sup>T);\n        q := q \\<squnion> p;\n        p := -q \\<sqinter> r\\<^sup>T * p\n     OD\n  [ asymmetric t \\<and> t \\<le> r \\<and> q = t\\<^sup>T\\<^sup>\\<star> * s \\<and> q = r\\<^sup>T\\<^sup>\\<star> * s ]\"", "lemma bfs_reachability_exists:\n  \"regular r \\<and> regular s \\<and> vector s \\<Longrightarrow> \\<exists>t . asymmetric t \\<and> t \\<le> r \\<and> t\\<^sup>T\\<^sup>\\<star> * s = r\\<^sup>T\\<^sup>\\<star> * s\"", "lemma orientable_path:\n  \"arc x \\<Longrightarrow> x \\<le> --y\\<^sup>\\<star> \\<Longrightarrow> \\<exists>z . z \\<le> y \\<and> asymmetric z \\<and> x \\<le> --z\\<^sup>\\<star>\"", "theorem szpilrajn:\n  \"VARS e t\n  [ order p \\<and> regular p ]\n  t := p;\n  WHILE t \\<squnion> t\\<^sup>T \\<noteq> top\n    INV { order t \\<and> regular t \\<and> p \\<le> t }\n    VAR { card { x . regular x \\<and> x \\<le> -(t \\<squnion> t\\<^sup>T) } }\n     DO e := choose_arc (-(t \\<squnion> t\\<^sup>T));\n        t := t \\<squnion> t * e * t\n     OD\n  [ linear_order t \\<and> p \\<le> t ]\"", "lemma szpilrajn_exists:\n  \"order p \\<and> regular p \\<Longrightarrow> \\<exists>t . linear_order t \\<and> p \\<le> t\"", "lemma complement_one_transitively_orientable:\n  \"transitively_orientable (-1)\""], "translations": [["", "lemma choose_arc_below:\n  \"choose_arc x \\<le> --x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. choose_arc x \\<le> - - x", "proof (cases \"x = bot\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = bot \\<Longrightarrow> choose_arc x \\<le> - - x\n 2. x \\<noteq> bot \\<Longrightarrow> choose_arc x \\<le> - - x", "case True"], ["proof (state)\nthis:\n  x = bot\n\ngoal (2 subgoals):\n 1. x = bot \\<Longrightarrow> choose_arc x \\<le> - - x\n 2. x \\<noteq> bot \\<Longrightarrow> choose_arc x \\<le> - - x", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = bot\n\ngoal (1 subgoal):\n 1. choose_arc x \\<le> - - x", "using choose_arc_def"], ["proof (prove)\nusing this:\n  x = bot\n  choose_arc ?x \\<equiv>\n  if ?x = bot then bot else SOME y. arc y \\<and> y \\<le> - - ?x\n\ngoal (1 subgoal):\n 1. choose_arc x \\<le> - - x", "by auto"], ["proof (state)\nthis:\n  choose_arc x \\<le> - - x\n\ngoal (1 subgoal):\n 1. x \\<noteq> bot \\<Longrightarrow> choose_arc x \\<le> - - x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> bot \\<Longrightarrow> choose_arc x \\<le> - - x", "let ?P = \"\\<lambda>y . arc y \\<and> y \\<le> --x\""], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> bot \\<Longrightarrow> choose_arc x \\<le> - - x", "case False"], ["proof (state)\nthis:\n  x \\<noteq> bot\n\ngoal (1 subgoal):\n 1. x \\<noteq> bot \\<Longrightarrow> choose_arc x \\<le> - - x", "have \"?P (SOME y . ?P y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arc (SOME y. arc y \\<and> y \\<le> - - x) \\<and>\n    (SOME y. arc y \\<and> y \\<le> - - x) \\<le> - - x", "apply (rule someI_ex)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>xa. arc xa \\<and> xa \\<le> - - x", "using someI_ex False arc_axiom"], ["proof (prove)\nusing this:\n  \\<exists>x. ?P x \\<Longrightarrow> ?P (SOME x. ?P x)\n  x \\<noteq> bot\n  ?x \\<noteq> bot \\<Longrightarrow> \\<exists>y. arc y \\<and> y \\<le> - - ?x\n\ngoal (1 subgoal):\n 1. \\<exists>xa. arc xa \\<and> xa \\<le> - - x", "by auto"], ["proof (state)\nthis:\n  arc (SOME y. arc y \\<and> y \\<le> - - x) \\<and>\n  (SOME y. arc y \\<and> y \\<le> - - x) \\<le> - - x\n\ngoal (1 subgoal):\n 1. x \\<noteq> bot \\<Longrightarrow> choose_arc x \\<le> - - x", "thus ?thesis"], ["proof (prove)\nusing this:\n  arc (SOME y. arc y \\<and> y \\<le> - - x) \\<and>\n  (SOME y. arc y \\<and> y \\<le> - - x) \\<le> - - x\n\ngoal (1 subgoal):\n 1. choose_arc x \\<le> - - x", "using False choose_arc_def"], ["proof (prove)\nusing this:\n  arc (SOME y. arc y \\<and> y \\<le> - - x) \\<and>\n  (SOME y. arc y \\<and> y \\<le> - - x) \\<le> - - x\n  x \\<noteq> bot\n  choose_arc ?x \\<equiv>\n  if ?x = bot then bot else SOME y. arc y \\<and> y \\<le> - - ?x\n\ngoal (1 subgoal):\n 1. choose_arc x \\<le> - - x", "by auto"], ["proof (state)\nthis:\n  choose_arc x \\<le> - - x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma choose_arc_arc:\n  assumes \"x \\<noteq> bot\"\n  shows \"arc (choose_arc x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arc (choose_arc x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. arc (choose_arc x)", "let ?P = \"\\<lambda>y . arc y \\<and> y \\<le> --x\""], ["proof (state)\ngoal (1 subgoal):\n 1. arc (choose_arc x)", "have \"?P (SOME y . ?P y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arc (SOME y. arc y \\<and> y \\<le> - - x) \\<and>\n    (SOME y. arc y \\<and> y \\<le> - - x) \\<le> - - x", "apply (rule someI_ex)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>xa. arc xa \\<and> xa \\<le> - - x", "using someI_ex assms arc_axiom"], ["proof (prove)\nusing this:\n  \\<exists>x. ?P x \\<Longrightarrow> ?P (SOME x. ?P x)\n  x \\<noteq> bot\n  ?x \\<noteq> bot \\<Longrightarrow> \\<exists>y. arc y \\<and> y \\<le> - - ?x\n\ngoal (1 subgoal):\n 1. \\<exists>xa. arc xa \\<and> xa \\<le> - - x", "by auto"], ["proof (state)\nthis:\n  arc (SOME y. arc y \\<and> y \\<le> - - x) \\<and>\n  (SOME y. arc y \\<and> y \\<le> - - x) \\<le> - - x\n\ngoal (1 subgoal):\n 1. arc (choose_arc x)", "thus ?thesis"], ["proof (prove)\nusing this:\n  arc (SOME y. arc y \\<and> y \\<le> - - x) \\<and>\n  (SOME y. arc y \\<and> y \\<le> - - x) \\<le> - - x\n\ngoal (1 subgoal):\n 1. arc (choose_arc x)", "using assms choose_arc_def"], ["proof (prove)\nusing this:\n  arc (SOME y. arc y \\<and> y \\<le> - - x) \\<and>\n  (SOME y. arc y \\<and> y \\<le> - - x) \\<le> - - x\n  x \\<noteq> bot\n  choose_arc ?x \\<equiv>\n  if ?x = bot then bot else SOME y. arc y \\<and> y \\<le> - - ?x\n\ngoal (1 subgoal):\n 1. arc (choose_arc x)", "by auto"], ["proof (state)\nthis:\n  arc (choose_arc x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma choose_arc_bot:\n  \"choose_arc bot = bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. choose_arc bot = bot", "by (metis bot_unique choose_arc_below regular_closed_bot)"], ["", "lemma choose_arc_bot_iff:\n  \"choose_arc x = bot \\<longleftrightarrow> x = bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (choose_arc x = bot) = (x = bot)", "using covector_bot_closed inf_bot_right choose_arc_arc vector_bot_closed choose_arc_bot"], ["proof (prove)\nusing this:\n  covector bot\n  ?x \\<sqinter> bot = bot\n  ?x \\<noteq> bot \\<Longrightarrow> arc (choose_arc ?x)\n  vector bot\n  choose_arc bot = bot\n\ngoal (1 subgoal):\n 1. (choose_arc x = bot) = (x = bot)", "by fastforce"], ["", "lemma choose_arc_regular:\n  \"regular (choose_arc x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. regular (choose_arc x)", "proof (cases \"x = bot\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = bot \\<Longrightarrow> regular (choose_arc x)\n 2. x \\<noteq> bot \\<Longrightarrow> regular (choose_arc x)", "assume \"x = bot\""], ["proof (state)\nthis:\n  x = bot\n\ngoal (2 subgoals):\n 1. x = bot \\<Longrightarrow> regular (choose_arc x)\n 2. x \\<noteq> bot \\<Longrightarrow> regular (choose_arc x)", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = bot\n\ngoal (1 subgoal):\n 1. regular (choose_arc x)", "by (simp add: choose_arc_bot)"], ["proof (state)\nthis:\n  regular (choose_arc x)\n\ngoal (1 subgoal):\n 1. x \\<noteq> bot \\<Longrightarrow> regular (choose_arc x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> bot \\<Longrightarrow> regular (choose_arc x)", "assume \"x \\<noteq> bot\""], ["proof (state)\nthis:\n  x \\<noteq> bot\n\ngoal (1 subgoal):\n 1. x \\<noteq> bot \\<Longrightarrow> regular (choose_arc x)", "thus ?thesis"], ["proof (prove)\nusing this:\n  x \\<noteq> bot\n\ngoal (1 subgoal):\n 1. regular (choose_arc x)", "by (simp add: arc_regular choose_arc_arc)"], ["proof (state)\nthis:\n  regular (choose_arc x)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Constructing a spanning tree\\<close>"], ["", "definition \"spanning_forest f g \\<equiv> forest f \\<and> f \\<le> --g \\<and> components g \\<le> forest_components f \\<and> regular f\""], ["", "definition \"kruskal_spanning_invariant f g h \\<equiv> symmetric g \\<and> h = h\\<^sup>T \\<and> g \\<sqinter> --h = h \\<and> spanning_forest f (-h \\<sqinter> g)\""], ["", "lemma spanning_forest_spanning:\n  \"spanning_forest f g \\<Longrightarrow> spanning (--g) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spanning_forest f g \\<Longrightarrow> spanning (- - g) f", "by (smt (z3) cancel_separate_1 order_trans star.circ_increasing spanning_forest_def)"], ["", "lemma spanning_forest_spanning_regular:\n  assumes \"regular f\"\n      and \"regular g\"\n  shows \"spanning_forest f g \\<longleftrightarrow> spanning g f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spanning_forest f g = spanning g f", "by (smt (z3) assms cancel_separate_1 components_increasing dual_order.trans forest_components_star star_isotone spanning_forest_def)"], ["", "text \\<open>\nWe prove total correctness of Kruskal's spanning tree algorithm (ignoring edge weights) \\cite{Kruskal1956}.\nThe algorithm and proof are adapted from the AFP theory \\<open>Relational_Minimum_Spanning_Trees.Kruskal\\<close> to work in Stone-Kleene relation algebras \\cite{Guttmann2017c,Guttmann2018c}.\n\\<close>"], ["", "lemma kruskal_vc_1:\n  assumes \"symmetric g\"\n    shows \"kruskal_spanning_invariant bot g g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. kruskal_spanning_invariant bot g g", "proof (unfold kruskal_spanning_invariant_def, intro conjI)"], ["proof (state)\ngoal (4 subgoals):\n 1. symmetric g\n 2. g = g\\<^sup>T\n 3. g \\<sqinter> - - g = g\n 4. spanning_forest bot (- g \\<sqinter> g)", "show \"symmetric g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symmetric g", "using assms"], ["proof (prove)\nusing this:\n  symmetric g\n\ngoal (1 subgoal):\n 1. symmetric g", "by simp"], ["proof (state)\nthis:\n  symmetric g\n\ngoal (3 subgoals):\n 1. g = g\\<^sup>T\n 2. g \\<sqinter> - - g = g\n 3. spanning_forest bot (- g \\<sqinter> g)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. g = g\\<^sup>T\n 2. g \\<sqinter> - - g = g\n 3. spanning_forest bot (- g \\<sqinter> g)", "show \"g = g\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g = g\\<^sup>T", "using assms"], ["proof (prove)\nusing this:\n  symmetric g\n\ngoal (1 subgoal):\n 1. g = g\\<^sup>T", "by simp"], ["proof (state)\nthis:\n  g = g\\<^sup>T\n\ngoal (2 subgoals):\n 1. g \\<sqinter> - - g = g\n 2. spanning_forest bot (- g \\<sqinter> g)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. g \\<sqinter> - - g = g\n 2. spanning_forest bot (- g \\<sqinter> g)", "show \"g \\<sqinter> --g = g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<sqinter> - - g = g", "using inf.sup_monoid.add_commute selection_closed_id"], ["proof (prove)\nusing this:\n  ?a \\<sqinter> ?b = ?b \\<sqinter> ?a\n  selection ?x ?x\n\ngoal (1 subgoal):\n 1. g \\<sqinter> - - g = g", "by simp"], ["proof (state)\nthis:\n  g \\<sqinter> - - g = g\n\ngoal (1 subgoal):\n 1. spanning_forest bot (- g \\<sqinter> g)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. spanning_forest bot (- g \\<sqinter> g)", "show \"spanning_forest bot (-g \\<sqinter> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spanning_forest bot (- g \\<sqinter> g)", "using star.circ_transitive_equal spanning_forest_def"], ["proof (prove)\nusing this:\n  idempotent (?x\\<^sup>\\<star>)\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (1 subgoal):\n 1. spanning_forest bot (- g \\<sqinter> g)", "by simp"], ["proof (state)\nthis:\n  spanning_forest bot (- g \\<sqinter> g)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\nFor the remainder of this theory we assume there are finitely many regular elements.\nThis means that the graphs are finite and is needed for proving termination of the algorithms.\n\\<close>"], ["", "context\n  assumes finite_regular: \"finite { x . regular x }\"\nbegin"], ["", "lemma kruskal_vc_2:\n  assumes \"kruskal_spanning_invariant f g h\"\n      and \"h \\<noteq> bot\"\n    shows \"(choose_arc h \\<le> -forest_components f \\<longrightarrow> kruskal_spanning_invariant ((f \\<sqinter> -(top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)) \\<squnion> (f \\<sqinter> top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion> choose_arc h) g (h \\<sqinter> -choose_arc h \\<sqinter> -choose_arc h\\<^sup>T)\n                                               \\<and> card { x . regular x \\<and> x \\<le> --h \\<and> x \\<le> -choose_arc h \\<and> x \\<le> -choose_arc h\\<^sup>T } < card { x . regular x \\<and> x \\<le> --h }) \\<and>\n           (\\<not> choose_arc h \\<le> -forest_components f \\<longrightarrow> kruskal_spanning_invariant f g (h \\<sqinter> -choose_arc h \\<sqinter> -choose_arc h\\<^sup>T)\n                                                 \\<and> card { x . regular x \\<and> x \\<le> --h \\<and> x \\<le> -choose_arc h \\<and> x \\<le> -choose_arc h\\<^sup>T } < card { x . regular x \\<and> x \\<le> --h })\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (choose_arc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant\n      (f \\<sqinter>\n       - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (f \\<sqinter>\n        top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       choose_arc h)\n      g (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n    (\\<not> choose_arc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant f g\n      (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (choose_arc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant\n      (f \\<sqinter>\n       - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (f \\<sqinter>\n        top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       choose_arc h)\n      g (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n    (\\<not> choose_arc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant f g\n      (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h})", "let ?e = \"choose_arc h\""], ["proof (state)\ngoal (1 subgoal):\n 1. (choose_arc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant\n      (f \\<sqinter>\n       - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (f \\<sqinter>\n        top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       choose_arc h)\n      g (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n    (\\<not> choose_arc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant f g\n      (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h})", "let ?f = \"(f \\<sqinter> -(top * ?e * f\\<^sup>T\\<^sup>\\<star>)) \\<squnion> (f \\<sqinter> top * ?e * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion> ?e\""], ["proof (state)\ngoal (1 subgoal):\n 1. (choose_arc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant\n      (f \\<sqinter>\n       - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (f \\<sqinter>\n        top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       choose_arc h)\n      g (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n    (\\<not> choose_arc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant f g\n      (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h})", "let ?h = \"h \\<sqinter> -?e \\<sqinter> -?e\\<^sup>T\""], ["proof (state)\ngoal (1 subgoal):\n 1. (choose_arc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant\n      (f \\<sqinter>\n       - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (f \\<sqinter>\n        top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       choose_arc h)\n      g (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n    (\\<not> choose_arc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant f g\n      (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h})", "let ?F = \"forest_components f\""], ["proof (state)\ngoal (1 subgoal):\n 1. (choose_arc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant\n      (f \\<sqinter>\n       - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (f \\<sqinter>\n        top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       choose_arc h)\n      g (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n    (\\<not> choose_arc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant f g\n      (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h})", "let ?n1 = \"card { x . regular x \\<and> x \\<le> --h }\""], ["proof (state)\ngoal (1 subgoal):\n 1. (choose_arc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant\n      (f \\<sqinter>\n       - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (f \\<sqinter>\n        top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       choose_arc h)\n      g (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n    (\\<not> choose_arc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant f g\n      (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h})", "let ?n2 = \"card { x . regular x \\<and> x \\<le> --h \\<and> x \\<le> -?e \\<and> x \\<le> -?e\\<^sup>T }\""], ["proof (state)\ngoal (1 subgoal):\n 1. (choose_arc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant\n      (f \\<sqinter>\n       - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (f \\<sqinter>\n        top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       choose_arc h)\n      g (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n    (\\<not> choose_arc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant f g\n      (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h})", "have 1: \"regular f \\<and> regular ?e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. regular f \\<and> regular (choose_arc h)", "by (metis assms(1) kruskal_spanning_invariant_def spanning_forest_def choose_arc_regular)"], ["proof (state)\nthis:\n  regular f \\<and> regular (choose_arc h)\n\ngoal (1 subgoal):\n 1. (choose_arc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant\n      (f \\<sqinter>\n       - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (f \\<sqinter>\n        top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       choose_arc h)\n      g (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n    (\\<not> choose_arc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant f g\n      (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h})", "hence 2: \"regular ?f \\<and> regular ?F \\<and> regular (?e\\<^sup>T)\""], ["proof (prove)\nusing this:\n  regular f \\<and> regular (choose_arc h)\n\ngoal (1 subgoal):\n 1. regular\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h) \\<and>\n    regular (forest_components f) \\<and> regular (choose_arc h\\<^sup>T)", "using regular_closed_star regular_conv_closed regular_mult_closed"], ["proof (prove)\nusing this:\n  regular f \\<and> regular (choose_arc h)\n  regular ?x \\<Longrightarrow> regular (?x\\<^sup>\\<star>)\n  regular ?x \\<Longrightarrow> regular (?x\\<^sup>T)\n  \\<lbrakk>regular ?x; regular ?y\\<rbrakk>\n  \\<Longrightarrow> regular (?x * ?y)\n\ngoal (1 subgoal):\n 1. regular\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h) \\<and>\n    regular (forest_components f) \\<and> regular (choose_arc h\\<^sup>T)", "by simp"], ["proof (state)\nthis:\n  regular\n   (f \\<sqinter> - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    choose_arc h) \\<and>\n  regular (forest_components f) \\<and> regular (choose_arc h\\<^sup>T)\n\ngoal (1 subgoal):\n 1. (choose_arc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant\n      (f \\<sqinter>\n       - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (f \\<sqinter>\n        top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       choose_arc h)\n      g (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n    (\\<not> choose_arc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant f g\n      (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h})", "have 3: \"\\<not> ?e \\<le> -?e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> choose_arc h \\<le> - choose_arc h", "using assms(2) inf.orderE choose_arc_bot_iff"], ["proof (prove)\nusing this:\n  h \\<noteq> bot\n  \\<lbrakk>?a \\<le> ?b;\n   ?a = ?a \\<sqinter> ?b \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  (choose_arc ?x = bot) = (?x = bot)\n\ngoal (1 subgoal):\n 1. \\<not> choose_arc h \\<le> - choose_arc h", "by fastforce"], ["proof (state)\nthis:\n  \\<not> choose_arc h \\<le> - choose_arc h\n\ngoal (1 subgoal):\n 1. (choose_arc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant\n      (f \\<sqinter>\n       - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (f \\<sqinter>\n        top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       choose_arc h)\n      g (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n    (\\<not> choose_arc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant f g\n      (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h})", "have 4: \"?n2 < ?n1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "apply (rule psubset_card_mono)"], ["proof (prove)\ngoal (2 subgoals):\n 1. finite {x. regular x \\<and> x \\<le> - - h}\n 2. {x. regular x \\<and>\n        x \\<le> - - h \\<and>\n        x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    \\<subset> {x. regular x \\<and> x \\<le> - - h}", "using finite_regular"], ["proof (prove)\nusing this:\n  finite {x. regular x}\n\ngoal (2 subgoals):\n 1. finite {x. regular x \\<and> x \\<le> - - h}\n 2. {x. regular x \\<and>\n        x \\<le> - - h \\<and>\n        x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    \\<subset> {x. regular x \\<and> x \\<le> - - h}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. regular x \\<and>\n        x \\<le> - - h \\<and>\n        x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    \\<subset> {x. regular x \\<and> x \\<le> - - h}", "using 1 3 kruskal_spanning_invariant_def choose_arc_below"], ["proof (prove)\nusing this:\n  regular f \\<and> regular (choose_arc h)\n  \\<not> choose_arc h \\<le> - choose_arc h\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n  choose_arc ?x \\<le> - - ?x\n\ngoal (1 subgoal):\n 1. {x. regular x \\<and>\n        x \\<le> - - h \\<and>\n        x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    \\<subset> {x. regular x \\<and> x \\<le> - - h}", "by auto"], ["proof (state)\nthis:\n  card\n   {x. regular x \\<and>\n       x \\<le> - - h \\<and>\n       x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n  < card {x. regular x \\<and> x \\<le> - - h}\n\ngoal (1 subgoal):\n 1. (choose_arc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant\n      (f \\<sqinter>\n       - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (f \\<sqinter>\n        top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       choose_arc h)\n      g (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n    (\\<not> choose_arc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant f g\n      (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h})", "show \"(?e \\<le> -?F \\<longrightarrow> kruskal_spanning_invariant ?f g ?h \\<and> ?n2 < ?n1) \\<and> (\\<not> ?e \\<le> -?F \\<longrightarrow> kruskal_spanning_invariant f g ?h \\<and> ?n2 < ?n1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (choose_arc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant\n      (f \\<sqinter>\n       - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n       (f \\<sqinter>\n        top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n       choose_arc h)\n      g (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n    (\\<not> choose_arc h \\<le> - forest_components f \\<longrightarrow>\n     kruskal_spanning_invariant f g\n      (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) \\<and>\n     card\n      {x. regular x \\<and>\n          x \\<le> - - h \\<and>\n          x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n     < card {x. regular x \\<and> x \\<le> - - h})", "proof (rule conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. choose_arc h \\<le> - forest_components f \\<longrightarrow>\n    kruskal_spanning_invariant\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)\n     g (h \\<sqinter> - choose_arc h \\<sqinter>\n        - choose_arc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}\n 2. \\<not> choose_arc h \\<le> - forest_components f \\<longrightarrow>\n    kruskal_spanning_invariant f g\n     (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "have 5: \"injective ?f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. injective\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)", "apply (rule kruskal_injective_inv)"], ["proof (prove)\ngoal (7 subgoals):\n 1. injective f\n 2. covector (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\n 3. top * choose_arc h * f\\<^sup>T\\<^sup>\\<star> * f\\<^sup>T\n    \\<le> top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>\n 4. choose_arc h \\<le> top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>\n 5. top * choose_arc h * f\\<^sup>T\\<^sup>\\<star> * f\\<^sup>T\n    \\<le> - choose_arc h\n 6. injective (choose_arc h)\n 7. coreflexive\n     ((top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n      (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      f\\<^sup>T * f)", "using assms(1) kruskal_spanning_invariant_def spanning_forest_def"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (7 subgoals):\n 1. injective f\n 2. covector (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\n 3. top * choose_arc h * f\\<^sup>T\\<^sup>\\<star> * f\\<^sup>T\n    \\<le> top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>\n 4. choose_arc h \\<le> top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>\n 5. top * choose_arc h * f\\<^sup>T\\<^sup>\\<star> * f\\<^sup>T\n    \\<le> - choose_arc h\n 6. injective (choose_arc h)\n 7. coreflexive\n     ((top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n      (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      f\\<^sup>T * f)", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. covector (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\n 2. top * choose_arc h * f\\<^sup>T\\<^sup>\\<star> * f\\<^sup>T\n    \\<le> top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>\n 3. choose_arc h \\<le> top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>\n 4. top * choose_arc h * f\\<^sup>T\\<^sup>\\<star> * f\\<^sup>T\n    \\<le> - choose_arc h\n 5. injective (choose_arc h)\n 6. coreflexive\n     ((top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n      (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      f\\<^sup>T * f)", "apply (simp add: covector_mult_closed)"], ["proof (prove)\ngoal (5 subgoals):\n 1. top * choose_arc h * f\\<^sup>T\\<^sup>\\<star> * f\\<^sup>T\n    \\<le> top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>\n 2. choose_arc h \\<le> top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>\n 3. top * choose_arc h * f\\<^sup>T\\<^sup>\\<star> * f\\<^sup>T\n    \\<le> - choose_arc h\n 4. injective (choose_arc h)\n 5. coreflexive\n     ((top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n      (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      f\\<^sup>T * f)", "apply (simp add: comp_associative comp_isotone star.right_plus_below_circ)"], ["proof (prove)\ngoal (4 subgoals):\n 1. choose_arc h \\<le> top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>\n 2. top * choose_arc h * f\\<^sup>T\\<^sup>\\<star> * f\\<^sup>T\n    \\<le> - choose_arc h\n 3. injective (choose_arc h)\n 4. coreflexive\n     ((top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n      (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      f\\<^sup>T * f)", "apply (meson mult_left_isotone order_lesseq_imp star_outer_increasing top.extremum)"], ["proof (prove)\ngoal (3 subgoals):\n 1. top * choose_arc h * f\\<^sup>T\\<^sup>\\<star> * f\\<^sup>T\n    \\<le> - choose_arc h\n 2. injective (choose_arc h)\n 3. coreflexive\n     ((top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n      (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      f\\<^sup>T * f)", "using assms(1,2) kruskal_spanning_invariant_def kruskal_injective_inv_2 choose_arc_arc spanning_forest_def"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n  h \\<noteq> bot\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n  \\<lbrakk>arc ?e; pd_kleene_allegory_class.acyclic ?f\\<rbrakk>\n  \\<Longrightarrow> top * ?e * ?f\\<^sup>T\\<^sup>\\<star> * ?f\\<^sup>T\n                    \\<le> - ?e\n  ?x \\<noteq> bot \\<Longrightarrow> arc (choose_arc ?x)\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (3 subgoals):\n 1. top * choose_arc h * f\\<^sup>T\\<^sup>\\<star> * f\\<^sup>T\n    \\<le> - choose_arc h\n 2. injective (choose_arc h)\n 3. coreflexive\n     ((top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n      (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      f\\<^sup>T * f)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. injective (choose_arc h)\n 2. coreflexive\n     ((top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n      (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      f\\<^sup>T * f)", "using assms(2) arc_injective choose_arc_arc"], ["proof (prove)\nusing this:\n  h \\<noteq> bot\n  arc ?x \\<Longrightarrow> injective ?x\n  ?x \\<noteq> bot \\<Longrightarrow> arc (choose_arc ?x)\n\ngoal (2 subgoals):\n 1. injective (choose_arc h)\n 2. coreflexive\n     ((top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n      (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      f\\<^sup>T * f)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. coreflexive\n     ((top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n      (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      f\\<^sup>T * f)", "using assms(1,2) kruskal_spanning_invariant_def kruskal_injective_inv_3 choose_arc_arc spanning_forest_def"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n  h \\<noteq> bot\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n  \\<lbrakk>arc ?e; forest ?f\\<rbrakk>\n  \\<Longrightarrow> coreflexive\n                     ((top * ?e * ?f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n                      (top * ?e * ?f\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n                      ?f\\<^sup>T * ?f)\n  ?x \\<noteq> bot \\<Longrightarrow> arc (choose_arc ?x)\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (1 subgoal):\n 1. coreflexive\n     ((top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n      (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<sqinter>\n      f\\<^sup>T * f)", "by simp"], ["proof (state)\nthis:\n  injective\n   (f \\<sqinter> - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    choose_arc h)\n\ngoal (2 subgoals):\n 1. choose_arc h \\<le> - forest_components f \\<longrightarrow>\n    kruskal_spanning_invariant\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)\n     g (h \\<sqinter> - choose_arc h \\<sqinter>\n        - choose_arc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}\n 2. \\<not> choose_arc h \\<le> - forest_components f \\<longrightarrow>\n    kruskal_spanning_invariant f g\n     (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "show \"?e \\<le> -?F \\<longrightarrow> kruskal_spanning_invariant ?f g ?h \\<and> ?n2 < ?n1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. choose_arc h \\<le> - forest_components f \\<longrightarrow>\n    kruskal_spanning_invariant\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)\n     g (h \\<sqinter> - choose_arc h \\<sqinter>\n        - choose_arc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. choose_arc h \\<le> - forest_components f \\<Longrightarrow>\n    kruskal_spanning_invariant\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)\n     g (h \\<sqinter> - choose_arc h \\<sqinter>\n        - choose_arc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "assume 6: \"?e \\<le> -?F\""], ["proof (state)\nthis:\n  choose_arc h \\<le> - forest_components f\n\ngoal (1 subgoal):\n 1. choose_arc h \\<le> - forest_components f \\<Longrightarrow>\n    kruskal_spanning_invariant\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)\n     g (h \\<sqinter> - choose_arc h \\<sqinter>\n        - choose_arc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "have 7: \"equivalence ?F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. equivalence (forest_components f)", "using assms(1) kruskal_spanning_invariant_def forest_components_equivalence spanning_forest_def"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n  injective ?x \\<Longrightarrow> equivalence (forest_components ?x)\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (1 subgoal):\n 1. equivalence (forest_components f)", "by simp"], ["proof (state)\nthis:\n  equivalence (forest_components f)\n\ngoal (1 subgoal):\n 1. choose_arc h \\<le> - forest_components f \\<Longrightarrow>\n    kruskal_spanning_invariant\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)\n     g (h \\<sqinter> - choose_arc h \\<sqinter>\n        - choose_arc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "have \"?e\\<^sup>T * top * ?e\\<^sup>T = ?e\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. choose_arc h\\<^sup>T * top * choose_arc h\\<^sup>T = choose_arc h\\<^sup>T", "using assms(2)"], ["proof (prove)\nusing this:\n  h \\<noteq> bot\n\ngoal (1 subgoal):\n 1. choose_arc h\\<^sup>T * top * choose_arc h\\<^sup>T = choose_arc h\\<^sup>T", "by (simp add: arc_top_arc choose_arc_arc)"], ["proof (state)\nthis:\n  choose_arc h\\<^sup>T * top * choose_arc h\\<^sup>T = choose_arc h\\<^sup>T\n\ngoal (1 subgoal):\n 1. choose_arc h \\<le> - forest_components f \\<Longrightarrow>\n    kruskal_spanning_invariant\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)\n     g (h \\<sqinter> - choose_arc h \\<sqinter>\n        - choose_arc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "hence \"?e\\<^sup>T * top * ?e\\<^sup>T \\<le> -?F\""], ["proof (prove)\nusing this:\n  choose_arc h\\<^sup>T * top * choose_arc h\\<^sup>T = choose_arc h\\<^sup>T\n\ngoal (1 subgoal):\n 1. choose_arc h\\<^sup>T * top * choose_arc h\\<^sup>T\n    \\<le> - forest_components f", "using 6 7 conv_complement conv_isotone"], ["proof (prove)\nusing this:\n  choose_arc h\\<^sup>T * top * choose_arc h\\<^sup>T = choose_arc h\\<^sup>T\n  choose_arc h \\<le> - forest_components f\n  equivalence (forest_components f)\n  (- ?x)\\<^sup>T = - ?x\\<^sup>T\n  ?x \\<le> ?y \\<Longrightarrow> ?x\\<^sup>T \\<le> ?y\\<^sup>T\n\ngoal (1 subgoal):\n 1. choose_arc h\\<^sup>T * top * choose_arc h\\<^sup>T\n    \\<le> - forest_components f", "by fastforce"], ["proof (state)\nthis:\n  choose_arc h\\<^sup>T * top * choose_arc h\\<^sup>T\n  \\<le> - forest_components f\n\ngoal (1 subgoal):\n 1. choose_arc h \\<le> - forest_components f \\<Longrightarrow>\n    kruskal_spanning_invariant\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)\n     g (h \\<sqinter> - choose_arc h \\<sqinter>\n        - choose_arc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "hence 8: \"?e * ?F * ?e = bot\""], ["proof (prove)\nusing this:\n  choose_arc h\\<^sup>T * top * choose_arc h\\<^sup>T\n  \\<le> - forest_components f\n\ngoal (1 subgoal):\n 1. choose_arc h * forest_components f * choose_arc h = bot", "using le_bot triple_schroeder_p"], ["proof (prove)\nusing this:\n  choose_arc h\\<^sup>T * top * choose_arc h\\<^sup>T\n  \\<le> - forest_components f\n  ?a \\<le> bot \\<Longrightarrow> ?a = bot\n  (?x * ?y * ?z \\<le> - ?w) = (?x\\<^sup>T * ?w * ?z\\<^sup>T \\<le> - ?y)\n\ngoal (1 subgoal):\n 1. choose_arc h * forest_components f * choose_arc h = bot", "by simp"], ["proof (state)\nthis:\n  choose_arc h * forest_components f * choose_arc h = bot\n\ngoal (1 subgoal):\n 1. choose_arc h \\<le> - forest_components f \\<Longrightarrow>\n    kruskal_spanning_invariant\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)\n     g (h \\<sqinter> - choose_arc h \\<sqinter>\n        - choose_arc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "show \"kruskal_spanning_invariant ?f g ?h \\<and> ?n2 < ?n1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. kruskal_spanning_invariant\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)\n     g (h \\<sqinter> - choose_arc h \\<sqinter>\n        - choose_arc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "proof (unfold kruskal_spanning_invariant_def, intro conjI)"], ["proof (state)\ngoal (5 subgoals):\n 1. symmetric g\n 2. h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T =\n    (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T)\\<^sup>T\n 3. g \\<sqinter>\n    - - (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) =\n    h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T\n 4. spanning_forest\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)\n 5. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "show \"symmetric g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symmetric g", "using assms(1) kruskal_spanning_invariant_def"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n\ngoal (1 subgoal):\n 1. symmetric g", "by simp"], ["proof (state)\nthis:\n  symmetric g\n\ngoal (4 subgoals):\n 1. h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T =\n    (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T)\\<^sup>T\n 2. g \\<sqinter>\n    - - (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) =\n    h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T\n 3. spanning_forest\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)\n 4. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T =\n    (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T)\\<^sup>T\n 2. g \\<sqinter>\n    - - (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) =\n    h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T\n 3. spanning_forest\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)\n 4. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "show \"?h = ?h\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T =\n    (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T)\\<^sup>T", "using assms(1)"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n\ngoal (1 subgoal):\n 1. h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T =\n    (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T)\\<^sup>T", "by (simp add: conv_complement conv_dist_inf inf_commute inf_left_commute kruskal_spanning_invariant_def)"], ["proof (state)\nthis:\n  h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T =\n  (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T)\\<^sup>T\n\ngoal (3 subgoals):\n 1. g \\<sqinter>\n    - - (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) =\n    h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T\n 2. spanning_forest\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)\n 3. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. g \\<sqinter>\n    - - (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) =\n    h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T\n 2. spanning_forest\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)\n 3. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "show \"g \\<sqinter> --?h = ?h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<sqinter>\n    - - (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) =\n    h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T", "using 1 2"], ["proof (prove)\nusing this:\n  regular f \\<and> regular (choose_arc h)\n  regular\n   (f \\<sqinter> - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    choose_arc h) \\<and>\n  regular (forest_components f) \\<and> regular (choose_arc h\\<^sup>T)\n\ngoal (1 subgoal):\n 1. g \\<sqinter>\n    - - (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) =\n    h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T", "by (metis (hide_lams) assms(1) kruskal_spanning_invariant_def inf_assoc pp_dist_inf)"], ["proof (state)\nthis:\n  g \\<sqinter>\n  - - (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) =\n  h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T\n\ngoal (2 subgoals):\n 1. spanning_forest\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)\n 2. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. spanning_forest\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)\n 2. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "show \"spanning_forest ?f (-?h \\<sqinter> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spanning_forest\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)", "proof (unfold spanning_forest_def, intro conjI)"], ["proof (state)\ngoal (5 subgoals):\n 1. injective\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)\n 2. pd_kleene_allegory_class.acyclic\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)\n 3. f \\<sqinter> - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    choose_arc h\n    \\<le> - - (- (h \\<sqinter> - choose_arc h \\<sqinter>\n                  - choose_arc h\\<^sup>T) \\<sqinter>\n               g)\n 4. components\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components\n           (f \\<sqinter>\n            - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (f \\<sqinter>\n             top * choose_arc h *\n             f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n            choose_arc h)\n 5. regular\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)", "show \"injective ?f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. injective\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)", "using 5"], ["proof (prove)\nusing this:\n  injective\n   (f \\<sqinter> - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    choose_arc h)\n\ngoal (1 subgoal):\n 1. injective\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)", "by simp"], ["proof (state)\nthis:\n  injective\n   (f \\<sqinter> - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    choose_arc h)\n\ngoal (4 subgoals):\n 1. pd_kleene_allegory_class.acyclic\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)\n 2. f \\<sqinter> - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    choose_arc h\n    \\<le> - - (- (h \\<sqinter> - choose_arc h \\<sqinter>\n                  - choose_arc h\\<^sup>T) \\<sqinter>\n               g)\n 3. components\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components\n           (f \\<sqinter>\n            - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (f \\<sqinter>\n             top * choose_arc h *\n             f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n            choose_arc h)\n 4. regular\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. pd_kleene_allegory_class.acyclic\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)\n 2. f \\<sqinter> - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    choose_arc h\n    \\<le> - - (- (h \\<sqinter> - choose_arc h \\<sqinter>\n                  - choose_arc h\\<^sup>T) \\<sqinter>\n               g)\n 3. components\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components\n           (f \\<sqinter>\n            - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (f \\<sqinter>\n             top * choose_arc h *\n             f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n            choose_arc h)\n 4. regular\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)", "show \"acyclic ?f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pd_kleene_allegory_class.acyclic\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)", "apply (rule kruskal_acyclic_inv)"], ["proof (prove)\ngoal (5 subgoals):\n 1. pd_kleene_allegory_class.acyclic f\n 2. covector (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\n 3. (f \\<sqinter> top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n    f\\<^sup>\\<star> *\n    choose_arc h =\n    bot\n 4. choose_arc h * f\\<^sup>\\<star> * choose_arc h = bot\n 5. forest_components f \\<le> - choose_arc h", "using assms(1) kruskal_spanning_invariant_def spanning_forest_def"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (5 subgoals):\n 1. pd_kleene_allegory_class.acyclic f\n 2. covector (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\n 3. (f \\<sqinter> top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n    f\\<^sup>\\<star> *\n    choose_arc h =\n    bot\n 4. choose_arc h * f\\<^sup>\\<star> * choose_arc h = bot\n 5. forest_components f \\<le> - choose_arc h", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. covector (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\n 2. (f \\<sqinter> top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n    f\\<^sup>\\<star> *\n    choose_arc h =\n    bot\n 3. choose_arc h * f\\<^sup>\\<star> * choose_arc h = bot\n 4. forest_components f \\<le> - choose_arc h", "apply (simp add: covector_mult_closed)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (f \\<sqinter> top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n    f\\<^sup>\\<star> *\n    choose_arc h =\n    bot\n 2. choose_arc h * f\\<^sup>\\<star> * choose_arc h = bot\n 3. forest_components f \\<le> - choose_arc h", "using 8 assms(1) kruskal_spanning_invariant_def spanning_forest_def kruskal_acyclic_inv_1"], ["proof (prove)\nusing this:\n  choose_arc h * forest_components f * choose_arc h = bot\n  kruskal_spanning_invariant f g h\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n  \\<lbrakk>injective ?f; ?e * forest_components ?f * ?e = bot\\<rbrakk>\n  \\<Longrightarrow> (?f \\<sqinter>\n                     top * ?e * ?f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n                    ?f\\<^sup>\\<star> *\n                    ?e =\n                    bot\n\ngoal (3 subgoals):\n 1. (f \\<sqinter> top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T *\n    f\\<^sup>\\<star> *\n    choose_arc h =\n    bot\n 2. choose_arc h * f\\<^sup>\\<star> * choose_arc h = bot\n 3. forest_components f \\<le> - choose_arc h", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. choose_arc h * f\\<^sup>\\<star> * choose_arc h = bot\n 2. forest_components f \\<le> - choose_arc h", "using 8"], ["proof (prove)\nusing this:\n  choose_arc h * forest_components f * choose_arc h = bot\n\ngoal (2 subgoals):\n 1. choose_arc h * f\\<^sup>\\<star> * choose_arc h = bot\n 2. forest_components f \\<le> - choose_arc h", "apply (metis comp_associative mult_left_sub_dist_sup_left star.circ_loop_fixpoint sup_commute le_bot)"], ["proof (prove)\ngoal (1 subgoal):\n 1. forest_components f \\<le> - choose_arc h", "using 6"], ["proof (prove)\nusing this:\n  choose_arc h \\<le> - forest_components f\n\ngoal (1 subgoal):\n 1. forest_components f \\<le> - choose_arc h", "by (simp add: p_antitone_iff)"], ["proof (state)\nthis:\n  pd_kleene_allegory_class.acyclic\n   (f \\<sqinter> - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    choose_arc h)\n\ngoal (3 subgoals):\n 1. f \\<sqinter> - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    choose_arc h\n    \\<le> - - (- (h \\<sqinter> - choose_arc h \\<sqinter>\n                  - choose_arc h\\<^sup>T) \\<sqinter>\n               g)\n 2. components\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components\n           (f \\<sqinter>\n            - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (f \\<sqinter>\n             top * choose_arc h *\n             f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n            choose_arc h)\n 3. regular\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. f \\<sqinter> - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    choose_arc h\n    \\<le> - - (- (h \\<sqinter> - choose_arc h \\<sqinter>\n                  - choose_arc h\\<^sup>T) \\<sqinter>\n               g)\n 2. components\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components\n           (f \\<sqinter>\n            - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (f \\<sqinter>\n             top * choose_arc h *\n             f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n            choose_arc h)\n 3. regular\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)", "show \"?f \\<le> --(-?h \\<sqinter> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<sqinter> - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    choose_arc h\n    \\<le> - - (- (h \\<sqinter> - choose_arc h \\<sqinter>\n                  - choose_arc h\\<^sup>T) \\<sqinter>\n               g)", "apply (rule kruskal_subgraph_inv)"], ["proof (prove)\ngoal (4 subgoals):\n 1. f \\<le> - - (- h \\<sqinter> g)\n 2. choose_arc h \\<le> - - g\n 3. symmetric h\n 4. symmetric g", "using assms(1) kruskal_spanning_invariant_def spanning_forest_def"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (4 subgoals):\n 1. f \\<le> - - (- h \\<sqinter> g)\n 2. choose_arc h \\<le> - - g\n 3. symmetric h\n 4. symmetric g", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. choose_arc h \\<le> - - g\n 2. symmetric h\n 3. symmetric g", "using assms(1)"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n\ngoal (3 subgoals):\n 1. choose_arc h \\<le> - - g\n 2. symmetric h\n 3. symmetric g", "apply (metis kruskal_spanning_invariant_def choose_arc_below order.trans pp_isotone_inf)"], ["proof (prove)\ngoal (2 subgoals):\n 1. symmetric h\n 2. symmetric g", "using assms(1) kruskal_spanning_invariant_def"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n\ngoal (2 subgoals):\n 1. symmetric h\n 2. symmetric g", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. symmetric g", "using assms(1) kruskal_spanning_invariant_def"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n\ngoal (1 subgoal):\n 1. symmetric g", "by simp"], ["proof (state)\nthis:\n  f \\<sqinter> - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n  (f \\<sqinter>\n   top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n  choose_arc h\n  \\<le> - - (- (h \\<sqinter> - choose_arc h \\<sqinter>\n                - choose_arc h\\<^sup>T) \\<sqinter>\n             g)\n\ngoal (2 subgoals):\n 1. components\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components\n           (f \\<sqinter>\n            - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (f \\<sqinter>\n             top * choose_arc h *\n             f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n            choose_arc h)\n 2. regular\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. components\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components\n           (f \\<sqinter>\n            - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (f \\<sqinter>\n             top * choose_arc h *\n             f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n            choose_arc h)\n 2. regular\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)", "show \"components (-?h \\<sqinter> g) \\<le> forest_components ?f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. components\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components\n           (f \\<sqinter>\n            - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n            (f \\<sqinter>\n             top * choose_arc h *\n             f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n            choose_arc h)", "apply (rule kruskal_spanning_inv)"], ["proof (prove)\ngoal (4 subgoals):\n 1. injective\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)\n 2. regular (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\n 3. regular (choose_arc h)\n 4. (- h \\<sqinter> - - g)\\<^sup>\\<star> \\<le> forest_components f", "using 5"], ["proof (prove)\nusing this:\n  injective\n   (f \\<sqinter> - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    choose_arc h)\n\ngoal (4 subgoals):\n 1. injective\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)\n 2. regular (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\n 3. regular (choose_arc h)\n 4. (- h \\<sqinter> - - g)\\<^sup>\\<star> \\<le> forest_components f", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. regular (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\n 2. regular (choose_arc h)\n 3. (- h \\<sqinter> - - g)\\<^sup>\\<star> \\<le> forest_components f", "using 1 regular_closed_star regular_conv_closed regular_mult_closed"], ["proof (prove)\nusing this:\n  regular f \\<and> regular (choose_arc h)\n  regular ?x \\<Longrightarrow> regular (?x\\<^sup>\\<star>)\n  regular ?x \\<Longrightarrow> regular (?x\\<^sup>T)\n  \\<lbrakk>regular ?x; regular ?y\\<rbrakk>\n  \\<Longrightarrow> regular (?x * ?y)\n\ngoal (3 subgoals):\n 1. regular (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\n 2. regular (choose_arc h)\n 3. (- h \\<sqinter> - - g)\\<^sup>\\<star> \\<le> forest_components f", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. regular (choose_arc h)\n 2. (- h \\<sqinter> - - g)\\<^sup>\\<star> \\<le> forest_components f", "using 1"], ["proof (prove)\nusing this:\n  regular f \\<and> regular (choose_arc h)\n\ngoal (2 subgoals):\n 1. regular (choose_arc h)\n 2. (- h \\<sqinter> - - g)\\<^sup>\\<star> \\<le> forest_components f", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (- h \\<sqinter> - - g)\\<^sup>\\<star> \\<le> forest_components f", "using assms(1) kruskal_spanning_invariant_def spanning_forest_def"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (1 subgoal):\n 1. (- h \\<sqinter> - - g)\\<^sup>\\<star> \\<le> forest_components f", "by simp"], ["proof (state)\nthis:\n  components\n   (- (h \\<sqinter> - choose_arc h \\<sqinter>\n       - choose_arc h\\<^sup>T) \\<sqinter>\n    g)\n  \\<le> forest_components\n         (f \\<sqinter>\n          - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (f \\<sqinter>\n           top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n          choose_arc h)\n\ngoal (1 subgoal):\n 1. regular\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. regular\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)", "show \"regular ?f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. regular\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)", "using 2"], ["proof (prove)\nusing this:\n  regular\n   (f \\<sqinter> - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    choose_arc h) \\<and>\n  regular (forest_components f) \\<and> regular (choose_arc h\\<^sup>T)\n\ngoal (1 subgoal):\n 1. regular\n     (f \\<sqinter>\n      - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n      (f \\<sqinter>\n       top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n      choose_arc h)", "by simp"], ["proof (state)\nthis:\n  regular\n   (f \\<sqinter> - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    choose_arc h)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  spanning_forest\n   (f \\<sqinter> - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    choose_arc h)\n   (- (h \\<sqinter> - choose_arc h \\<sqinter>\n       - choose_arc h\\<^sup>T) \\<sqinter>\n    g)\n\ngoal (1 subgoal):\n 1. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "show \"?n2 < ?n1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "using 4"], ["proof (prove)\nusing this:\n  card\n   {x. regular x \\<and>\n       x \\<le> - - h \\<and>\n       x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n  < card {x. regular x \\<and> x \\<le> - - h}\n\ngoal (1 subgoal):\n 1. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "by simp"], ["proof (state)\nthis:\n  card\n   {x. regular x \\<and>\n       x \\<le> - - h \\<and>\n       x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n  < card {x. regular x \\<and> x \\<le> - - h}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  kruskal_spanning_invariant\n   (f \\<sqinter> - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    choose_arc h)\n   g (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - h \\<and>\n       x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n  < card {x. regular x \\<and> x \\<le> - - h}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  choose_arc h \\<le> - forest_components f \\<longrightarrow>\n  kruskal_spanning_invariant\n   (f \\<sqinter> - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    choose_arc h)\n   g (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - h \\<and>\n       x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n  < card {x. regular x \\<and> x \\<le> - - h}\n\ngoal (1 subgoal):\n 1. \\<not> choose_arc h \\<le> - forest_components f \\<longrightarrow>\n    kruskal_spanning_invariant f g\n     (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> choose_arc h \\<le> - forest_components f \\<longrightarrow>\n    kruskal_spanning_invariant f g\n     (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "show \"\\<not> ?e \\<le> -?F \\<longrightarrow> kruskal_spanning_invariant f g ?h \\<and> ?n2 < ?n1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> choose_arc h \\<le> - forest_components f \\<longrightarrow>\n    kruskal_spanning_invariant f g\n     (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> choose_arc h \\<le> - forest_components f \\<Longrightarrow>\n    kruskal_spanning_invariant f g\n     (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "assume \"\\<not> ?e \\<le> -?F\""], ["proof (state)\nthis:\n  \\<not> choose_arc h \\<le> - forest_components f\n\ngoal (1 subgoal):\n 1. \\<not> choose_arc h \\<le> - forest_components f \\<Longrightarrow>\n    kruskal_spanning_invariant f g\n     (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "hence 9: \"?e \\<le> ?F\""], ["proof (prove)\nusing this:\n  \\<not> choose_arc h \\<le> - forest_components f\n\ngoal (1 subgoal):\n 1. choose_arc h \\<le> forest_components f", "using 2 assms(2) arc_in_partition choose_arc_arc"], ["proof (prove)\nusing this:\n  \\<not> choose_arc h \\<le> - forest_components f\n  regular\n   (f \\<sqinter> - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    choose_arc h) \\<and>\n  regular (forest_components f) \\<and> regular (choose_arc h\\<^sup>T)\n  h \\<noteq> bot\n  arc ?x \\<Longrightarrow> ?x \\<le> - ?y \\<or> ?x \\<le> - - ?y\n  ?x \\<noteq> bot \\<Longrightarrow> arc (choose_arc ?x)\n\ngoal (1 subgoal):\n 1. choose_arc h \\<le> forest_components f", "by fastforce"], ["proof (state)\nthis:\n  choose_arc h \\<le> forest_components f\n\ngoal (1 subgoal):\n 1. \\<not> choose_arc h \\<le> - forest_components f \\<Longrightarrow>\n    kruskal_spanning_invariant f g\n     (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "show \"kruskal_spanning_invariant f g ?h \\<and> ?n2 < ?n1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. kruskal_spanning_invariant f g\n     (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "proof (unfold kruskal_spanning_invariant_def, intro conjI)"], ["proof (state)\ngoal (5 subgoals):\n 1. symmetric g\n 2. h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T =\n    (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T)\\<^sup>T\n 3. g \\<sqinter>\n    - - (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) =\n    h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T\n 4. spanning_forest f\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)\n 5. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "show \"symmetric g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symmetric g", "using assms(1) kruskal_spanning_invariant_def"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n\ngoal (1 subgoal):\n 1. symmetric g", "by simp"], ["proof (state)\nthis:\n  symmetric g\n\ngoal (4 subgoals):\n 1. h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T =\n    (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T)\\<^sup>T\n 2. g \\<sqinter>\n    - - (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) =\n    h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T\n 3. spanning_forest f\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)\n 4. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T =\n    (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T)\\<^sup>T\n 2. g \\<sqinter>\n    - - (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) =\n    h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T\n 3. spanning_forest f\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)\n 4. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "show \"?h = ?h\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T =\n    (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T)\\<^sup>T", "using assms(1)"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n\ngoal (1 subgoal):\n 1. h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T =\n    (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T)\\<^sup>T", "by (simp add: conv_complement conv_dist_inf inf_commute inf_left_commute kruskal_spanning_invariant_def)"], ["proof (state)\nthis:\n  h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T =\n  (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T)\\<^sup>T\n\ngoal (3 subgoals):\n 1. g \\<sqinter>\n    - - (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) =\n    h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T\n 2. spanning_forest f\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)\n 3. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. g \\<sqinter>\n    - - (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) =\n    h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T\n 2. spanning_forest f\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)\n 3. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "show \"g \\<sqinter> --?h = ?h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<sqinter>\n    - - (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) =\n    h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T", "using 1 2"], ["proof (prove)\nusing this:\n  regular f \\<and> regular (choose_arc h)\n  regular\n   (f \\<sqinter> - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n    (f \\<sqinter>\n     top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n    choose_arc h) \\<and>\n  regular (forest_components f) \\<and> regular (choose_arc h\\<^sup>T)\n\ngoal (1 subgoal):\n 1. g \\<sqinter>\n    - - (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) =\n    h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T", "by (metis (hide_lams) assms(1) kruskal_spanning_invariant_def inf_assoc pp_dist_inf)"], ["proof (state)\nthis:\n  g \\<sqinter>\n  - - (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) =\n  h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T\n\ngoal (2 subgoals):\n 1. spanning_forest f\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)\n 2. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. spanning_forest f\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)\n 2. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "show \"spanning_forest f (-?h \\<sqinter> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spanning_forest f\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)", "proof (unfold spanning_forest_def, intro conjI)"], ["proof (state)\ngoal (5 subgoals):\n 1. injective f\n 2. pd_kleene_allegory_class.acyclic f\n 3. f \\<le> - - (- (h \\<sqinter> - choose_arc h \\<sqinter>\n                    - choose_arc h\\<^sup>T) \\<sqinter>\n                 g)\n 4. components\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components f\n 5. regular f", "show \"injective f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. injective f", "using assms(1) kruskal_spanning_invariant_def spanning_forest_def"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (1 subgoal):\n 1. injective f", "by simp"], ["proof (state)\nthis:\n  injective f\n\ngoal (4 subgoals):\n 1. pd_kleene_allegory_class.acyclic f\n 2. f \\<le> - - (- (h \\<sqinter> - choose_arc h \\<sqinter>\n                    - choose_arc h\\<^sup>T) \\<sqinter>\n                 g)\n 3. components\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components f\n 4. regular f", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. pd_kleene_allegory_class.acyclic f\n 2. f \\<le> - - (- (h \\<sqinter> - choose_arc h \\<sqinter>\n                    - choose_arc h\\<^sup>T) \\<sqinter>\n                 g)\n 3. components\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components f\n 4. regular f", "show \"acyclic f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pd_kleene_allegory_class.acyclic f", "using assms(1) kruskal_spanning_invariant_def spanning_forest_def"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (1 subgoal):\n 1. pd_kleene_allegory_class.acyclic f", "by simp"], ["proof (state)\nthis:\n  pd_kleene_allegory_class.acyclic f\n\ngoal (3 subgoals):\n 1. f \\<le> - - (- (h \\<sqinter> - choose_arc h \\<sqinter>\n                    - choose_arc h\\<^sup>T) \\<sqinter>\n                 g)\n 2. components\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components f\n 3. regular f", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. f \\<le> - - (- (h \\<sqinter> - choose_arc h \\<sqinter>\n                    - choose_arc h\\<^sup>T) \\<sqinter>\n                 g)\n 2. components\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components f\n 3. regular f", "have \"f \\<le> --(-h \\<sqinter> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<le> - - (- h \\<sqinter> g)", "using assms(1) kruskal_spanning_invariant_def spanning_forest_def"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (1 subgoal):\n 1. f \\<le> - - (- h \\<sqinter> g)", "by simp"], ["proof (state)\nthis:\n  f \\<le> - - (- h \\<sqinter> g)\n\ngoal (3 subgoals):\n 1. f \\<le> - - (- (h \\<sqinter> - choose_arc h \\<sqinter>\n                    - choose_arc h\\<^sup>T) \\<sqinter>\n                 g)\n 2. components\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components f\n 3. regular f", "also"], ["proof (state)\nthis:\n  f \\<le> - - (- h \\<sqinter> g)\n\ngoal (3 subgoals):\n 1. f \\<le> - - (- (h \\<sqinter> - choose_arc h \\<sqinter>\n                    - choose_arc h\\<^sup>T) \\<sqinter>\n                 g)\n 2. components\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components f\n 3. regular f", "have \"... \\<le> --(-?h \\<sqinter> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - - (- h \\<sqinter> g)\n    \\<le> - - (- (h \\<sqinter> - choose_arc h \\<sqinter>\n                  - choose_arc h\\<^sup>T) \\<sqinter>\n               g)", "using comp_inf.mult_right_isotone inf.sup_monoid.add_commute inf_left_commute p_antitone_inf pp_isotone"], ["proof (prove)\nusing this:\n  ?x \\<le> ?y \\<Longrightarrow> ?z \\<sqinter> ?x \\<le> ?z \\<sqinter> ?y\n  ?a \\<sqinter> ?b = ?b \\<sqinter> ?a\n  ?x \\<sqinter> (?y \\<sqinter> ?z) = ?y \\<sqinter> (?x \\<sqinter> ?z)\n  - ?x \\<le> - (?x \\<sqinter> ?y)\n  ?x \\<le> ?y \\<Longrightarrow> - - ?x \\<le> - - ?y\n\ngoal (1 subgoal):\n 1. - - (- h \\<sqinter> g)\n    \\<le> - - (- (h \\<sqinter> - choose_arc h \\<sqinter>\n                  - choose_arc h\\<^sup>T) \\<sqinter>\n               g)", "by auto"], ["proof (state)\nthis:\n  - - (- h \\<sqinter> g)\n  \\<le> - - (- (h \\<sqinter> - choose_arc h \\<sqinter>\n                - choose_arc h\\<^sup>T) \\<sqinter>\n             g)\n\ngoal (3 subgoals):\n 1. f \\<le> - - (- (h \\<sqinter> - choose_arc h \\<sqinter>\n                    - choose_arc h\\<^sup>T) \\<sqinter>\n                 g)\n 2. components\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components f\n 3. regular f", "finally"], ["proof (chain)\npicking this:\n  f \\<le> - - (- (h \\<sqinter> - choose_arc h \\<sqinter>\n                  - choose_arc h\\<^sup>T) \\<sqinter>\n               g)", "show \"f \\<le> --(-?h \\<sqinter> g)\""], ["proof (prove)\nusing this:\n  f \\<le> - - (- (h \\<sqinter> - choose_arc h \\<sqinter>\n                  - choose_arc h\\<^sup>T) \\<sqinter>\n               g)\n\ngoal (1 subgoal):\n 1. f \\<le> - - (- (h \\<sqinter> - choose_arc h \\<sqinter>\n                    - choose_arc h\\<^sup>T) \\<sqinter>\n                 g)", "by simp"], ["proof (state)\nthis:\n  f \\<le> - - (- (h \\<sqinter> - choose_arc h \\<sqinter>\n                  - choose_arc h\\<^sup>T) \\<sqinter>\n               g)\n\ngoal (2 subgoals):\n 1. components\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components f\n 2. regular f", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. components\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components f\n 2. regular f", "show \"components (-?h \\<sqinter> g) \\<le> ?F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. components\n     (- (h \\<sqinter> - choose_arc h \\<sqinter>\n         - choose_arc h\\<^sup>T) \\<sqinter>\n      g)\n    \\<le> forest_components f", "apply (rule kruskal_spanning_inv_1)"], ["proof (prove)\ngoal (4 subgoals):\n 1. choose_arc h \\<le> forest_components f\n 2. regular (choose_arc h)\n 3. components (- h \\<sqinter> g) \\<le> forest_components f\n 4. equivalence (forest_components f)", "using 9"], ["proof (prove)\nusing this:\n  choose_arc h \\<le> forest_components f\n\ngoal (4 subgoals):\n 1. choose_arc h \\<le> forest_components f\n 2. regular (choose_arc h)\n 3. components (- h \\<sqinter> g) \\<le> forest_components f\n 4. equivalence (forest_components f)", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. regular (choose_arc h)\n 2. components (- h \\<sqinter> g) \\<le> forest_components f\n 3. equivalence (forest_components f)", "using 1"], ["proof (prove)\nusing this:\n  regular f \\<and> regular (choose_arc h)\n\ngoal (3 subgoals):\n 1. regular (choose_arc h)\n 2. components (- h \\<sqinter> g) \\<le> forest_components f\n 3. equivalence (forest_components f)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. components (- h \\<sqinter> g) \\<le> forest_components f\n 2. equivalence (forest_components f)", "using assms(1) kruskal_spanning_invariant_def spanning_forest_def"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (2 subgoals):\n 1. components (- h \\<sqinter> g) \\<le> forest_components f\n 2. equivalence (forest_components f)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. equivalence (forest_components f)", "using assms(1) kruskal_spanning_invariant_def forest_components_equivalence spanning_forest_def"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant f g h\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n  injective ?x \\<Longrightarrow> equivalence (forest_components ?x)\n  spanning_forest ?f ?g \\<equiv>\n  forest ?f \\<and>\n  ?f \\<le> - - ?g \\<and>\n  components ?g \\<le> forest_components ?f \\<and> regular ?f\n\ngoal (1 subgoal):\n 1. equivalence (forest_components f)", "by simp"], ["proof (state)\nthis:\n  components\n   (- (h \\<sqinter> - choose_arc h \\<sqinter>\n       - choose_arc h\\<^sup>T) \\<sqinter>\n    g)\n  \\<le> forest_components f\n\ngoal (1 subgoal):\n 1. regular f", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. regular f", "show \"regular f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. regular f", "using 1"], ["proof (prove)\nusing this:\n  regular f \\<and> regular (choose_arc h)\n\ngoal (1 subgoal):\n 1. regular f", "by simp"], ["proof (state)\nthis:\n  regular f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  spanning_forest f\n   (- (h \\<sqinter> - choose_arc h \\<sqinter>\n       - choose_arc h\\<^sup>T) \\<sqinter>\n    g)\n\ngoal (1 subgoal):\n 1. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "show \"?n2 < ?n1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "using 4"], ["proof (prove)\nusing this:\n  card\n   {x. regular x \\<and>\n       x \\<le> - - h \\<and>\n       x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n  < card {x. regular x \\<and> x \\<le> - - h}\n\ngoal (1 subgoal):\n 1. card\n     {x. regular x \\<and>\n         x \\<le> - - h \\<and>\n         x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - - h}", "by simp"], ["proof (state)\nthis:\n  card\n   {x. regular x \\<and>\n       x \\<le> - - h \\<and>\n       x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n  < card {x. regular x \\<and> x \\<le> - - h}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  kruskal_spanning_invariant f g\n   (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - h \\<and>\n       x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n  < card {x. regular x \\<and> x \\<le> - - h}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> choose_arc h \\<le> - forest_components f \\<longrightarrow>\n  kruskal_spanning_invariant f g\n   (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - h \\<and>\n       x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n  < card {x. regular x \\<and> x \\<le> - - h}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (choose_arc h \\<le> - forest_components f \\<longrightarrow>\n   kruskal_spanning_invariant\n    (f \\<sqinter>\n     - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n     (f \\<sqinter>\n      top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n     choose_arc h)\n    g (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) \\<and>\n   card\n    {x. regular x \\<and>\n        x \\<le> - - h \\<and>\n        x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n   < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n  (\\<not> choose_arc h \\<le> - forest_components f \\<longrightarrow>\n   kruskal_spanning_invariant f g\n    (h \\<sqinter> - choose_arc h \\<sqinter> - choose_arc h\\<^sup>T) \\<and>\n   card\n    {x. regular x \\<and>\n        x \\<le> - - h \\<and>\n        x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n   < card {x. regular x \\<and> x \\<le> - - h})\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem kruskal_spanning:\n  \"VARS e f h\n  [ symmetric g ]\n  f := bot;\n  h := g;\n  WHILE h \\<noteq> bot\n    INV { kruskal_spanning_invariant f g h }\n    VAR { card { x . regular x \\<and> x \\<le> --h } }\n     DO e := choose_arc h;\n        IF e \\<le> -forest_components f THEN\n          f := (f \\<sqinter> -(top * e * f\\<^sup>T\\<^sup>\\<star>)) \\<squnion> (f \\<sqinter> top * e * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion> e\n        ELSE\n          SKIP\n        FI;\n        h := h \\<sqinter> -e \\<sqinter> -e\\<^sup>T\n     OD\n  [ spanning_forest f g ]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [symmetric g] \n     f := bot;\n     h := g;\n     WHILE h \\<noteq> bot INV {kruskal_spanning_invariant f g h} \n      VAR {\\<lambda>(e, f, h). card {x. regular x \\<and> x \\<le> - - h}} \n      DO e := choose_arc h;\n         IF e \\<le> - forest_components f\n          THEN f := f \\<sqinter>\n                    - (top * e * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                    (f \\<sqinter>\n                     top * e * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n                    e \n          ELSE SKIP FI;\n         h := h \\<sqinter> - e \\<sqinter> - e\\<^sup>T \n      OD \n     [spanning_forest f g]", "apply vcg_tc_simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. symmetric g \\<Longrightarrow> kruskal_spanning_invariant bot g g\n 2. \\<And>f h.\n       kruskal_spanning_invariant f g h \\<and>\n       h \\<noteq> bot \\<Longrightarrow>\n       (choose_arc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_spanning_invariant\n         (f \\<sqinter>\n          - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (f \\<sqinter>\n           top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n          choose_arc h)\n         g (h \\<sqinter> - choose_arc h \\<sqinter>\n            - choose_arc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n       (\\<not> choose_arc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_spanning_invariant f g\n         (h \\<sqinter> - choose_arc h \\<sqinter>\n          - choose_arc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h})\n 3. \\<And>f.\n       kruskal_spanning_invariant f g bot \\<Longrightarrow>\n       spanning_forest f g", "using kruskal_vc_1"], ["proof (prove)\nusing this:\n  symmetric ?g \\<Longrightarrow> kruskal_spanning_invariant bot ?g ?g\n\ngoal (3 subgoals):\n 1. symmetric g \\<Longrightarrow> kruskal_spanning_invariant bot g g\n 2. \\<And>f h.\n       kruskal_spanning_invariant f g h \\<and>\n       h \\<noteq> bot \\<Longrightarrow>\n       (choose_arc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_spanning_invariant\n         (f \\<sqinter>\n          - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (f \\<sqinter>\n           top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n          choose_arc h)\n         g (h \\<sqinter> - choose_arc h \\<sqinter>\n            - choose_arc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n       (\\<not> choose_arc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_spanning_invariant f g\n         (h \\<sqinter> - choose_arc h \\<sqinter>\n          - choose_arc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h})\n 3. \\<And>f.\n       kruskal_spanning_invariant f g bot \\<Longrightarrow>\n       spanning_forest f g", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f h.\n       kruskal_spanning_invariant f g h \\<and>\n       h \\<noteq> bot \\<Longrightarrow>\n       (choose_arc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_spanning_invariant\n         (f \\<sqinter>\n          - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (f \\<sqinter>\n           top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n          choose_arc h)\n         g (h \\<sqinter> - choose_arc h \\<sqinter>\n            - choose_arc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n       (\\<not> choose_arc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_spanning_invariant f g\n         (h \\<sqinter> - choose_arc h \\<sqinter>\n          - choose_arc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h})\n 2. \\<And>f.\n       kruskal_spanning_invariant f g bot \\<Longrightarrow>\n       spanning_forest f g", "using kruskal_vc_2"], ["proof (prove)\nusing this:\n  \\<lbrakk>kruskal_spanning_invariant ?f ?g ?h; ?h \\<noteq> bot\\<rbrakk>\n  \\<Longrightarrow> (choose_arc ?h\n                     \\<le> - forest_components ?f \\<longrightarrow>\n                     kruskal_spanning_invariant\n                      (?f \\<sqinter>\n                       - (top * choose_arc ?h *\n                          ?f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                       (?f \\<sqinter>\n                        top * choose_arc ?h *\n                        ?f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n                       choose_arc ?h)\n                      ?g (?h \\<sqinter> - choose_arc ?h \\<sqinter>\n                          - choose_arc ?h\\<^sup>T) \\<and>\n                     card\n                      {x. regular x \\<and>\n                          x \\<le> - - ?h \\<and>\n                          x \\<le> - choose_arc ?h \\<and>\n                          x \\<le> - choose_arc ?h\\<^sup>T}\n                     < card {x. regular x \\<and> x \\<le> - - ?h}) \\<and>\n                    (\\<not> choose_arc ?h\n                            \\<le> - forest_components ?f \\<longrightarrow>\n                     kruskal_spanning_invariant ?f ?g\n                      (?h \\<sqinter> - choose_arc ?h \\<sqinter>\n                       - choose_arc ?h\\<^sup>T) \\<and>\n                     card\n                      {x. regular x \\<and>\n                          x \\<le> - - ?h \\<and>\n                          x \\<le> - choose_arc ?h \\<and>\n                          x \\<le> - choose_arc ?h\\<^sup>T}\n                     < card {x. regular x \\<and> x \\<le> - - ?h})\n\ngoal (2 subgoals):\n 1. \\<And>f h.\n       kruskal_spanning_invariant f g h \\<and>\n       h \\<noteq> bot \\<Longrightarrow>\n       (choose_arc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_spanning_invariant\n         (f \\<sqinter>\n          - (top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n          (f \\<sqinter>\n           top * choose_arc h * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n          choose_arc h)\n         g (h \\<sqinter> - choose_arc h \\<sqinter>\n            - choose_arc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h}) \\<and>\n       (\\<not> choose_arc h \\<le> - forest_components f \\<longrightarrow>\n        kruskal_spanning_invariant f g\n         (h \\<sqinter> - choose_arc h \\<sqinter>\n          - choose_arc h\\<^sup>T) \\<and>\n        card\n         {x. regular x \\<and>\n             x \\<le> - - h \\<and>\n             x \\<le> - choose_arc h \\<and> x \\<le> - choose_arc h\\<^sup>T}\n        < card {x. regular x \\<and> x \\<le> - - h})\n 2. \\<And>f.\n       kruskal_spanning_invariant f g bot \\<Longrightarrow>\n       spanning_forest f g", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f h.\n       \\<lbrakk>kruskal_spanning_invariant f g h \\<and> h \\<noteq> bot;\n        \\<And>f g h.\n           \\<lbrakk>kruskal_spanning_invariant f g h;\n            h \\<noteq> bot\\<rbrakk>\n           \\<Longrightarrow> (choose_arc h\n                              \\<le> - forest_components f \\<longrightarrow>\n                              kruskal_spanning_invariant\n                               (f \\<sqinter>\n                                - (top * choose_arc h *\n                                   f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                                (f \\<sqinter>\n                                 top * choose_arc h *\n                                 f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n                                choose_arc h)\n                               g (h \\<sqinter> - choose_arc h \\<sqinter>\n                                  - choose_arc h\\<^sup>T) \\<and>\n                              card\n                               {x. regular x \\<and>\n                                   x \\<le> - - h \\<and>\n                                   x \\<le> - choose_arc h \\<and>\n                                   x \\<le> - choose_arc h\\<^sup>T}\n                              < card\n                                 {x. regular x \\<and> x \\<le> - - h}) \\<and>\n                             (\\<not> choose_arc h\n                                     \\<le> - forest_components\n        f \\<longrightarrow>\n                              kruskal_spanning_invariant f g\n                               (h \\<sqinter> - choose_arc h \\<sqinter>\n                                - choose_arc h\\<^sup>T) \\<and>\n                              card\n                               {x. regular x \\<and>\n                                   x \\<le> - - h \\<and>\n                                   x \\<le> - choose_arc h \\<and>\n                                   x \\<le> - choose_arc h\\<^sup>T}\n                              < card\n                                 {x. regular x \\<and>\n                                     x \\<le> - - h})\\<rbrakk>\n       \\<Longrightarrow> card\n                          {x. regular x \\<and>\n                              x \\<le> - - h \\<and>\n                              x \\<le> - choose_arc h \\<and>\n                              x \\<le> - choose_arc h\\<^sup>T}\n                         < card {x. regular x \\<and> x \\<le> - - h}\n 2. \\<And>f.\n       kruskal_spanning_invariant f g bot \\<Longrightarrow>\n       spanning_forest f g", "using kruskal_spanning_invariant_def"], ["proof (prove)\nusing this:\n  kruskal_spanning_invariant ?f ?g ?h \\<equiv>\n  symmetric ?g \\<and>\n  ?h = ?h\\<^sup>T \\<and>\n  ?g \\<sqinter> - - ?h = ?h \\<and> spanning_forest ?f (- ?h \\<sqinter> ?g)\n\ngoal (2 subgoals):\n 1. \\<And>f h.\n       \\<lbrakk>kruskal_spanning_invariant f g h \\<and> h \\<noteq> bot;\n        \\<And>f g h.\n           \\<lbrakk>kruskal_spanning_invariant f g h;\n            h \\<noteq> bot\\<rbrakk>\n           \\<Longrightarrow> (choose_arc h\n                              \\<le> - forest_components f \\<longrightarrow>\n                              kruskal_spanning_invariant\n                               (f \\<sqinter>\n                                - (top * choose_arc h *\n                                   f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                                (f \\<sqinter>\n                                 top * choose_arc h *\n                                 f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n                                choose_arc h)\n                               g (h \\<sqinter> - choose_arc h \\<sqinter>\n                                  - choose_arc h\\<^sup>T) \\<and>\n                              card\n                               {x. regular x \\<and>\n                                   x \\<le> - - h \\<and>\n                                   x \\<le> - choose_arc h \\<and>\n                                   x \\<le> - choose_arc h\\<^sup>T}\n                              < card\n                                 {x. regular x \\<and> x \\<le> - - h}) \\<and>\n                             (\\<not> choose_arc h\n                                     \\<le> - forest_components\n        f \\<longrightarrow>\n                              kruskal_spanning_invariant f g\n                               (h \\<sqinter> - choose_arc h \\<sqinter>\n                                - choose_arc h\\<^sup>T) \\<and>\n                              card\n                               {x. regular x \\<and>\n                                   x \\<le> - - h \\<and>\n                                   x \\<le> - choose_arc h \\<and>\n                                   x \\<le> - choose_arc h\\<^sup>T}\n                              < card\n                                 {x. regular x \\<and>\n                                     x \\<le> - - h})\\<rbrakk>\n       \\<Longrightarrow> card\n                          {x. regular x \\<and>\n                              x \\<le> - - h \\<and>\n                              x \\<le> - choose_arc h \\<and>\n                              x \\<le> - choose_arc h\\<^sup>T}\n                         < card {x. regular x \\<and> x \\<le> - - h}\n 2. \\<And>f.\n       kruskal_spanning_invariant f g bot \\<Longrightarrow>\n       spanning_forest f g", "by auto"], ["", "lemma kruskal_exists_spanning:\n  \"symmetric g \\<Longrightarrow> \\<exists>f . spanning_forest f g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symmetric g \\<Longrightarrow> \\<exists>f. spanning_forest f g", "using tc_extract_function kruskal_spanning"], ["proof (prove)\nusing this:\n  [?p] \n   ?c \n   [?q] \\<Longrightarrow>\n  \\<exists>f. \\<forall>s. s \\<in> ?p \\<longrightarrow> f s \\<in> ?q\n  [symmetric ?g] \n   f := bot;\n   h := ?g;\n   WHILE h \\<noteq> bot INV {kruskal_spanning_invariant f ?g h} \n    VAR {\\<lambda>(e, f, h). card {x. regular x \\<and> x \\<le> - - h}} \n    DO e := choose_arc h;\n       IF e \\<le> - forest_components f\n        THEN f := f \\<sqinter>\n                  - (top * e * f\\<^sup>T\\<^sup>\\<star>) \\<squnion>\n                  (f \\<sqinter>\n                   top * e * f\\<^sup>T\\<^sup>\\<star>)\\<^sup>T \\<squnion>\n                  e \n        ELSE SKIP FI;\n       h := h \\<sqinter> - e \\<sqinter> - e\\<^sup>T \n    OD \n   [spanning_forest f ?g]\n\ngoal (1 subgoal):\n 1. symmetric g \\<Longrightarrow> \\<exists>f. spanning_forest f g", "by blast"], ["", "text \\<open>Theorem 16\\<close>"], ["", "lemma symmetric_spannable:\n  \"symmetric g \\<Longrightarrow> spannable (--g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symmetric g \\<Longrightarrow> spannable (- - g)", "using kruskal_exists_spanning spanning_forest_spanning spannable_def"], ["proof (prove)\nusing this:\n  symmetric ?g \\<Longrightarrow> \\<exists>f. spanning_forest f ?g\n  spanning_forest ?f ?g \\<Longrightarrow> spanning (- - ?g) ?f\n  spannable ?x \\<equiv> \\<exists>y. spanning ?x y\n\ngoal (1 subgoal):\n 1. symmetric g \\<Longrightarrow> spannable (- - g)", "by blast"], ["", "subsection \\<open>Breadth-first search\\<close>"], ["", "text \\<open>\nWe prove total correctness of a simple breadth-first search algorithm.\nIt is a variant of an algorithm discussed in \\cite{Berghammer1999}.\n\\<close>"], ["", "theorem bfs_reachability:\n  \"VARS p q t\n  [ regular r \\<and> regular s \\<and> vector s ]\n  t := bot;\n  q := s;\n  p := -s \\<sqinter> r\\<^sup>T * s;\n  WHILE p \\<noteq> bot\n    INV { regular r \\<and> regular q \\<and> vector q \\<and> asymmetric t \\<and> t \\<le> r \\<and> t \\<le> q \\<and> q = t\\<^sup>T\\<^sup>\\<star> * s \\<and> p = -q \\<sqinter> r\\<^sup>T * q }\n    VAR { card { x . regular x \\<and> x \\<le> --(-q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s) } }\n     DO t := t \\<squnion> (r \\<sqinter> q * p\\<^sup>T);\n        q := q \\<squnion> p;\n        p := -q \\<sqinter> r\\<^sup>T * p\n     OD\n  [ asymmetric t \\<and> t \\<le> r \\<and> q = t\\<^sup>T\\<^sup>\\<star> * s \\<and> q = r\\<^sup>T\\<^sup>\\<star> * s ]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [regular r \\<and> regular s \\<and> vector s] \n     t := bot;\n     q := s;\n     p := - s \\<sqinter> r\\<^sup>T * s;\n     WHILE p \\<noteq> bot\n      INV {regular r \\<and>\n           regular q \\<and>\n           vector q \\<and>\n           asymmetric t \\<and>\n           t \\<le> r \\<and>\n           t \\<le> q \\<and>\n           q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n           p = - q \\<sqinter> r\\<^sup>T * q} \n      VAR {\\<lambda>(p, q, t).\n              card\n               {x. regular x \\<and>\n                   x \\<le> - - (- q \\<sqinter>\n                                r\\<^sup>T\\<^sup>\\<star> * s)}} \n      DO t := t \\<squnion> r \\<sqinter> q * p\\<^sup>T;\n         q := q \\<squnion> p; p := - q \\<sqinter> r\\<^sup>T * p \n      OD \n     [asymmetric t \\<and>\n      t \\<le> r \\<and>\n      q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n      q = r\\<^sup>T\\<^sup>\\<star> * s]", "proof vcg_tc"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>p q t.\n       regular r \\<and> regular s \\<and> vector s \\<Longrightarrow>\n       regular r \\<and>\n       regular s \\<and>\n       vector s \\<and>\n       asymmetric bot \\<and>\n       bot \\<le> r \\<and>\n       bot \\<le> s \\<and>\n       s = bot\\<^sup>T\\<^sup>\\<star> * s \\<and>\n       - s \\<sqinter> r\\<^sup>T * s = - s \\<sqinter> r\\<^sup>T * s\n 2. \\<And>n p q t.\n       ((regular r \\<and>\n         regular q \\<and>\n         vector q \\<and>\n         asymmetric t \\<and>\n         t \\<le> r \\<and>\n         t \\<le> q \\<and>\n         q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n         p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n        p \\<noteq> bot) \\<and>\n       card\n        {x. regular x \\<and>\n            x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n       n \\<Longrightarrow>\n       (- (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p, q \\<squnion> p,\n        t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\n       \\<in> {sa.\n              (case sa of\n               (p, q, t) \\<Rightarrow>\n                 regular r \\<and>\n                 regular q \\<and>\n                 vector q \\<and>\n                 asymmetric t \\<and>\n                 t \\<le> r \\<and>\n                 t \\<le> q \\<and>\n                 q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n                 p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n              (case sa of\n               (p, q, t) \\<Rightarrow>\n                 card\n                  {x. regular x \\<and>\n                      x \\<le> - - (- q \\<sqinter>\n                                   r\\<^sup>T\\<^sup>\\<star> * s)})\n              < n}\n 3. \\<And>p q t.\n       (regular r \\<and>\n        regular q \\<and>\n        vector q \\<and>\n        asymmetric t \\<and>\n        t \\<le> r \\<and>\n        t \\<le> q \\<and>\n        q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n        p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n       \\<not> p \\<noteq> bot \\<Longrightarrow>\n       asymmetric t \\<and>\n       t \\<le> r \\<and>\n       q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n       q = r\\<^sup>T\\<^sup>\\<star> * s", "fix p q t"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>p q t.\n       regular r \\<and> regular s \\<and> vector s \\<Longrightarrow>\n       regular r \\<and>\n       regular s \\<and>\n       vector s \\<and>\n       asymmetric bot \\<and>\n       bot \\<le> r \\<and>\n       bot \\<le> s \\<and>\n       s = bot\\<^sup>T\\<^sup>\\<star> * s \\<and>\n       - s \\<sqinter> r\\<^sup>T * s = - s \\<sqinter> r\\<^sup>T * s\n 2. \\<And>n p q t.\n       ((regular r \\<and>\n         regular q \\<and>\n         vector q \\<and>\n         asymmetric t \\<and>\n         t \\<le> r \\<and>\n         t \\<le> q \\<and>\n         q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n         p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n        p \\<noteq> bot) \\<and>\n       card\n        {x. regular x \\<and>\n            x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n       n \\<Longrightarrow>\n       (- (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p, q \\<squnion> p,\n        t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\n       \\<in> {sa.\n              (case sa of\n               (p, q, t) \\<Rightarrow>\n                 regular r \\<and>\n                 regular q \\<and>\n                 vector q \\<and>\n                 asymmetric t \\<and>\n                 t \\<le> r \\<and>\n                 t \\<le> q \\<and>\n                 q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n                 p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n              (case sa of\n               (p, q, t) \\<Rightarrow>\n                 card\n                  {x. regular x \\<and>\n                      x \\<le> - - (- q \\<sqinter>\n                                   r\\<^sup>T\\<^sup>\\<star> * s)})\n              < n}\n 3. \\<And>p q t.\n       (regular r \\<and>\n        regular q \\<and>\n        vector q \\<and>\n        asymmetric t \\<and>\n        t \\<le> r \\<and>\n        t \\<le> q \\<and>\n        q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n        p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n       \\<not> p \\<noteq> bot \\<Longrightarrow>\n       asymmetric t \\<and>\n       t \\<le> r \\<and>\n       q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n       q = r\\<^sup>T\\<^sup>\\<star> * s", "assume \"regular r \\<and> regular s \\<and> vector s\""], ["proof (state)\nthis:\n  regular r \\<and> regular s \\<and> vector s\n\ngoal (3 subgoals):\n 1. \\<And>p q t.\n       regular r \\<and> regular s \\<and> vector s \\<Longrightarrow>\n       regular r \\<and>\n       regular s \\<and>\n       vector s \\<and>\n       asymmetric bot \\<and>\n       bot \\<le> r \\<and>\n       bot \\<le> s \\<and>\n       s = bot\\<^sup>T\\<^sup>\\<star> * s \\<and>\n       - s \\<sqinter> r\\<^sup>T * s = - s \\<sqinter> r\\<^sup>T * s\n 2. \\<And>n p q t.\n       ((regular r \\<and>\n         regular q \\<and>\n         vector q \\<and>\n         asymmetric t \\<and>\n         t \\<le> r \\<and>\n         t \\<le> q \\<and>\n         q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n         p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n        p \\<noteq> bot) \\<and>\n       card\n        {x. regular x \\<and>\n            x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n       n \\<Longrightarrow>\n       (- (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p, q \\<squnion> p,\n        t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\n       \\<in> {sa.\n              (case sa of\n               (p, q, t) \\<Rightarrow>\n                 regular r \\<and>\n                 regular q \\<and>\n                 vector q \\<and>\n                 asymmetric t \\<and>\n                 t \\<le> r \\<and>\n                 t \\<le> q \\<and>\n                 q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n                 p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n              (case sa of\n               (p, q, t) \\<Rightarrow>\n                 card\n                  {x. regular x \\<and>\n                      x \\<le> - - (- q \\<sqinter>\n                                   r\\<^sup>T\\<^sup>\\<star> * s)})\n              < n}\n 3. \\<And>p q t.\n       (regular r \\<and>\n        regular q \\<and>\n        vector q \\<and>\n        asymmetric t \\<and>\n        t \\<le> r \\<and>\n        t \\<le> q \\<and>\n        q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n        p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n       \\<not> p \\<noteq> bot \\<Longrightarrow>\n       asymmetric t \\<and>\n       t \\<le> r \\<and>\n       q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n       q = r\\<^sup>T\\<^sup>\\<star> * s", "thus \"regular r \\<and> regular s \\<and> vector s \\<and> asymmetric bot \\<and> bot \\<le> r \\<and> bot \\<le> s \\<and> s = bot\\<^sup>T\\<^sup>\\<star> * s \\<and> -s \\<sqinter> r\\<^sup>T * s = -s \\<sqinter> r\\<^sup>T * s\""], ["proof (prove)\nusing this:\n  regular r \\<and> regular s \\<and> vector s\n\ngoal (1 subgoal):\n 1. regular r \\<and>\n    regular s \\<and>\n    vector s \\<and>\n    asymmetric bot \\<and>\n    bot \\<le> r \\<and>\n    bot \\<le> s \\<and>\n    s = bot\\<^sup>T\\<^sup>\\<star> * s \\<and>\n    - s \\<sqinter> r\\<^sup>T * s = - s \\<sqinter> r\\<^sup>T * s", "by (simp add: star.circ_zero)"], ["proof (state)\nthis:\n  regular r \\<and>\n  regular s \\<and>\n  vector s \\<and>\n  asymmetric bot \\<and>\n  bot \\<le> r \\<and>\n  bot \\<le> s \\<and>\n  s = bot\\<^sup>T\\<^sup>\\<star> * s \\<and>\n  - s \\<sqinter> r\\<^sup>T * s = - s \\<sqinter> r\\<^sup>T * s\n\ngoal (2 subgoals):\n 1. \\<And>n p q t.\n       ((regular r \\<and>\n         regular q \\<and>\n         vector q \\<and>\n         asymmetric t \\<and>\n         t \\<le> r \\<and>\n         t \\<le> q \\<and>\n         q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n         p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n        p \\<noteq> bot) \\<and>\n       card\n        {x. regular x \\<and>\n            x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n       n \\<Longrightarrow>\n       (- (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p, q \\<squnion> p,\n        t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\n       \\<in> {sa.\n              (case sa of\n               (p, q, t) \\<Rightarrow>\n                 regular r \\<and>\n                 regular q \\<and>\n                 vector q \\<and>\n                 asymmetric t \\<and>\n                 t \\<le> r \\<and>\n                 t \\<le> q \\<and>\n                 q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n                 p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n              (case sa of\n               (p, q, t) \\<Rightarrow>\n                 card\n                  {x. regular x \\<and>\n                      x \\<le> - - (- q \\<sqinter>\n                                   r\\<^sup>T\\<^sup>\\<star> * s)})\n              < n}\n 2. \\<And>p q t.\n       (regular r \\<and>\n        regular q \\<and>\n        vector q \\<and>\n        asymmetric t \\<and>\n        t \\<le> r \\<and>\n        t \\<le> q \\<and>\n        q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n        p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n       \\<not> p \\<noteq> bot \\<Longrightarrow>\n       asymmetric t \\<and>\n       t \\<le> r \\<and>\n       q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n       q = r\\<^sup>T\\<^sup>\\<star> * s", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>n p q t.\n       ((regular r \\<and>\n         regular q \\<and>\n         vector q \\<and>\n         asymmetric t \\<and>\n         t \\<le> r \\<and>\n         t \\<le> q \\<and>\n         q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n         p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n        p \\<noteq> bot) \\<and>\n       card\n        {x. regular x \\<and>\n            x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n       n \\<Longrightarrow>\n       (- (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p, q \\<squnion> p,\n        t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\n       \\<in> {sa.\n              (case sa of\n               (p, q, t) \\<Rightarrow>\n                 regular r \\<and>\n                 regular q \\<and>\n                 vector q \\<and>\n                 asymmetric t \\<and>\n                 t \\<le> r \\<and>\n                 t \\<le> q \\<and>\n                 q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n                 p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n              (case sa of\n               (p, q, t) \\<Rightarrow>\n                 card\n                  {x. regular x \\<and>\n                      x \\<le> - - (- q \\<sqinter>\n                                   r\\<^sup>T\\<^sup>\\<star> * s)})\n              < n}\n 2. \\<And>p q t.\n       (regular r \\<and>\n        regular q \\<and>\n        vector q \\<and>\n        asymmetric t \\<and>\n        t \\<le> r \\<and>\n        t \\<le> q \\<and>\n        q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n        p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n       \\<not> p \\<noteq> bot \\<Longrightarrow>\n       asymmetric t \\<and>\n       t \\<le> r \\<and>\n       q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n       q = r\\<^sup>T\\<^sup>\\<star> * s", "fix p q t"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>n p q t.\n       ((regular r \\<and>\n         regular q \\<and>\n         vector q \\<and>\n         asymmetric t \\<and>\n         t \\<le> r \\<and>\n         t \\<le> q \\<and>\n         q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n         p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n        p \\<noteq> bot) \\<and>\n       card\n        {x. regular x \\<and>\n            x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n       n \\<Longrightarrow>\n       (- (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p, q \\<squnion> p,\n        t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\n       \\<in> {sa.\n              (case sa of\n               (p, q, t) \\<Rightarrow>\n                 regular r \\<and>\n                 regular q \\<and>\n                 vector q \\<and>\n                 asymmetric t \\<and>\n                 t \\<le> r \\<and>\n                 t \\<le> q \\<and>\n                 q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n                 p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n              (case sa of\n               (p, q, t) \\<Rightarrow>\n                 card\n                  {x. regular x \\<and>\n                      x \\<le> - - (- q \\<sqinter>\n                                   r\\<^sup>T\\<^sup>\\<star> * s)})\n              < n}\n 2. \\<And>p q t.\n       (regular r \\<and>\n        regular q \\<and>\n        vector q \\<and>\n        asymmetric t \\<and>\n        t \\<le> r \\<and>\n        t \\<le> q \\<and>\n        q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n        p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n       \\<not> p \\<noteq> bot \\<Longrightarrow>\n       asymmetric t \\<and>\n       t \\<le> r \\<and>\n       q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n       q = r\\<^sup>T\\<^sup>\\<star> * s", "assume 1: \"(regular r \\<and> regular q \\<and> vector q \\<and> asymmetric t \\<and> t \\<le> r \\<and> t \\<le> q \\<and> q = t\\<^sup>T\\<^sup>\\<star> * s \\<and> p = -q \\<sqinter> r\\<^sup>T * q) \\<and> \\<not> p \\<noteq> bot\""], ["proof (state)\nthis:\n  (regular r \\<and>\n   regular q \\<and>\n   vector q \\<and>\n   asymmetric t \\<and>\n   t \\<le> r \\<and>\n   t \\<le> q \\<and>\n   q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n   p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n  \\<not> p \\<noteq> bot\n\ngoal (2 subgoals):\n 1. \\<And>n p q t.\n       ((regular r \\<and>\n         regular q \\<and>\n         vector q \\<and>\n         asymmetric t \\<and>\n         t \\<le> r \\<and>\n         t \\<le> q \\<and>\n         q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n         p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n        p \\<noteq> bot) \\<and>\n       card\n        {x. regular x \\<and>\n            x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n       n \\<Longrightarrow>\n       (- (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p, q \\<squnion> p,\n        t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\n       \\<in> {sa.\n              (case sa of\n               (p, q, t) \\<Rightarrow>\n                 regular r \\<and>\n                 regular q \\<and>\n                 vector q \\<and>\n                 asymmetric t \\<and>\n                 t \\<le> r \\<and>\n                 t \\<le> q \\<and>\n                 q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n                 p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n              (case sa of\n               (p, q, t) \\<Rightarrow>\n                 card\n                  {x. regular x \\<and>\n                      x \\<le> - - (- q \\<sqinter>\n                                   r\\<^sup>T\\<^sup>\\<star> * s)})\n              < n}\n 2. \\<And>p q t.\n       (regular r \\<and>\n        regular q \\<and>\n        vector q \\<and>\n        asymmetric t \\<and>\n        t \\<le> r \\<and>\n        t \\<le> q \\<and>\n        q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n        p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n       \\<not> p \\<noteq> bot \\<Longrightarrow>\n       asymmetric t \\<and>\n       t \\<le> r \\<and>\n       q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n       q = r\\<^sup>T\\<^sup>\\<star> * s", "have \"q = r\\<^sup>T\\<^sup>\\<star> * s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q = r\\<^sup>T\\<^sup>\\<star> * s", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. q \\<le> r\\<^sup>T\\<^sup>\\<star> * s\n 2. r\\<^sup>T\\<^sup>\\<star> * s \\<le> q", "using 1 conv_order mult_left_isotone star_isotone"], ["proof (prove)\nusing this:\n  (regular r \\<and>\n   regular q \\<and>\n   vector q \\<and>\n   asymmetric t \\<and>\n   t \\<le> r \\<and>\n   t \\<le> q \\<and>\n   q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n   p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n  \\<not> p \\<noteq> bot\n  (?x \\<le> ?y) = (?x\\<^sup>T \\<le> ?y\\<^sup>T)\n  ?x \\<le> ?y \\<Longrightarrow> ?x * ?z \\<le> ?y * ?z\n  ?x \\<le> ?y \\<Longrightarrow> ?x\\<^sup>\\<star> \\<le> ?y\\<^sup>\\<star>\n\ngoal (2 subgoals):\n 1. q \\<le> r\\<^sup>T\\<^sup>\\<star> * s\n 2. r\\<^sup>T\\<^sup>\\<star> * s \\<le> q", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. r\\<^sup>T\\<^sup>\\<star> * s \\<le> q", "using 1"], ["proof (prove)\nusing this:\n  (regular r \\<and>\n   regular q \\<and>\n   vector q \\<and>\n   asymmetric t \\<and>\n   t \\<le> r \\<and>\n   t \\<le> q \\<and>\n   q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n   p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n  \\<not> p \\<noteq> bot\n\ngoal (1 subgoal):\n 1. r\\<^sup>T\\<^sup>\\<star> * s \\<le> q", "by (metis inf.sup_monoid.add_commute mult_1_left mult_left_isotone mult_right_isotone order_lesseq_imp pseudo_complement star.circ_reflexive star_left_induct_mult)"], ["proof (state)\nthis:\n  q = r\\<^sup>T\\<^sup>\\<star> * s\n\ngoal (2 subgoals):\n 1. \\<And>n p q t.\n       ((regular r \\<and>\n         regular q \\<and>\n         vector q \\<and>\n         asymmetric t \\<and>\n         t \\<le> r \\<and>\n         t \\<le> q \\<and>\n         q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n         p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n        p \\<noteq> bot) \\<and>\n       card\n        {x. regular x \\<and>\n            x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n       n \\<Longrightarrow>\n       (- (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p, q \\<squnion> p,\n        t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\n       \\<in> {sa.\n              (case sa of\n               (p, q, t) \\<Rightarrow>\n                 regular r \\<and>\n                 regular q \\<and>\n                 vector q \\<and>\n                 asymmetric t \\<and>\n                 t \\<le> r \\<and>\n                 t \\<le> q \\<and>\n                 q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n                 p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n              (case sa of\n               (p, q, t) \\<Rightarrow>\n                 card\n                  {x. regular x \\<and>\n                      x \\<le> - - (- q \\<sqinter>\n                                   r\\<^sup>T\\<^sup>\\<star> * s)})\n              < n}\n 2. \\<And>p q t.\n       (regular r \\<and>\n        regular q \\<and>\n        vector q \\<and>\n        asymmetric t \\<and>\n        t \\<le> r \\<and>\n        t \\<le> q \\<and>\n        q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n        p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n       \\<not> p \\<noteq> bot \\<Longrightarrow>\n       asymmetric t \\<and>\n       t \\<le> r \\<and>\n       q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n       q = r\\<^sup>T\\<^sup>\\<star> * s", "thus \"asymmetric t \\<and> t \\<le> r \\<and> q = t\\<^sup>T\\<^sup>\\<star> * s \\<and> q = r\\<^sup>T\\<^sup>\\<star> * s\""], ["proof (prove)\nusing this:\n  q = r\\<^sup>T\\<^sup>\\<star> * s\n\ngoal (1 subgoal):\n 1. asymmetric t \\<and>\n    t \\<le> r \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and> q = r\\<^sup>T\\<^sup>\\<star> * s", "using 1"], ["proof (prove)\nusing this:\n  q = r\\<^sup>T\\<^sup>\\<star> * s\n  (regular r \\<and>\n   regular q \\<and>\n   vector q \\<and>\n   asymmetric t \\<and>\n   t \\<le> r \\<and>\n   t \\<le> q \\<and>\n   q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n   p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n  \\<not> p \\<noteq> bot\n\ngoal (1 subgoal):\n 1. asymmetric t \\<and>\n    t \\<le> r \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and> q = r\\<^sup>T\\<^sup>\\<star> * s", "by simp"], ["proof (state)\nthis:\n  asymmetric t \\<and>\n  t \\<le> r \\<and>\n  q = t\\<^sup>T\\<^sup>\\<star> * s \\<and> q = r\\<^sup>T\\<^sup>\\<star> * s\n\ngoal (1 subgoal):\n 1. \\<And>n p q t.\n       ((regular r \\<and>\n         regular q \\<and>\n         vector q \\<and>\n         asymmetric t \\<and>\n         t \\<le> r \\<and>\n         t \\<le> q \\<and>\n         q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n         p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n        p \\<noteq> bot) \\<and>\n       card\n        {x. regular x \\<and>\n            x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n       n \\<Longrightarrow>\n       (- (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p, q \\<squnion> p,\n        t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\n       \\<in> {sa.\n              (case sa of\n               (p, q, t) \\<Rightarrow>\n                 regular r \\<and>\n                 regular q \\<and>\n                 vector q \\<and>\n                 asymmetric t \\<and>\n                 t \\<le> r \\<and>\n                 t \\<le> q \\<and>\n                 q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n                 p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n              (case sa of\n               (p, q, t) \\<Rightarrow>\n                 card\n                  {x. regular x \\<and>\n                      x \\<le> - - (- q \\<sqinter>\n                                   r\\<^sup>T\\<^sup>\\<star> * s)})\n              < n}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n p q t.\n       ((regular r \\<and>\n         regular q \\<and>\n         vector q \\<and>\n         asymmetric t \\<and>\n         t \\<le> r \\<and>\n         t \\<le> q \\<and>\n         q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n         p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n        p \\<noteq> bot) \\<and>\n       card\n        {x. regular x \\<and>\n            x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n       n \\<Longrightarrow>\n       (- (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p, q \\<squnion> p,\n        t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\n       \\<in> {sa.\n              (case sa of\n               (p, q, t) \\<Rightarrow>\n                 regular r \\<and>\n                 regular q \\<and>\n                 vector q \\<and>\n                 asymmetric t \\<and>\n                 t \\<le> r \\<and>\n                 t \\<le> q \\<and>\n                 q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n                 p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n              (case sa of\n               (p, q, t) \\<Rightarrow>\n                 card\n                  {x. regular x \\<and>\n                      x \\<le> - - (- q \\<sqinter>\n                                   r\\<^sup>T\\<^sup>\\<star> * s)})\n              < n}", "fix n p q t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n p q t.\n       ((regular r \\<and>\n         regular q \\<and>\n         vector q \\<and>\n         asymmetric t \\<and>\n         t \\<le> r \\<and>\n         t \\<le> q \\<and>\n         q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n         p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n        p \\<noteq> bot) \\<and>\n       card\n        {x. regular x \\<and>\n            x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n       n \\<Longrightarrow>\n       (- (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p, q \\<squnion> p,\n        t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\n       \\<in> {sa.\n              (case sa of\n               (p, q, t) \\<Rightarrow>\n                 regular r \\<and>\n                 regular q \\<and>\n                 vector q \\<and>\n                 asymmetric t \\<and>\n                 t \\<le> r \\<and>\n                 t \\<le> q \\<and>\n                 q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n                 p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n              (case sa of\n               (p, q, t) \\<Rightarrow>\n                 card\n                  {x. regular x \\<and>\n                      x \\<le> - - (- q \\<sqinter>\n                                   r\\<^sup>T\\<^sup>\\<star> * s)})\n              < n}", "assume 2: \"((regular r \\<and> regular q \\<and> vector q \\<and> asymmetric t \\<and> t \\<le> r \\<and> t \\<le> q \\<and> q = t\\<^sup>T\\<^sup>\\<star> * s \\<and> p = -q \\<sqinter> r\\<^sup>T * q) \\<and> p \\<noteq> bot) \\<and> card { x . regular x \\<and> x \\<le> --(-q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s) } = n\""], ["proof (state)\nthis:\n  ((regular r \\<and>\n    regular q \\<and>\n    vector q \\<and>\n    asymmetric t \\<and>\n    t \\<le> r \\<and>\n    t \\<le> q \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n    p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n   p \\<noteq> bot) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n  n\n\ngoal (1 subgoal):\n 1. \\<And>n p q t.\n       ((regular r \\<and>\n         regular q \\<and>\n         vector q \\<and>\n         asymmetric t \\<and>\n         t \\<le> r \\<and>\n         t \\<le> q \\<and>\n         q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n         p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n        p \\<noteq> bot) \\<and>\n       card\n        {x. regular x \\<and>\n            x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n       n \\<Longrightarrow>\n       (- (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p, q \\<squnion> p,\n        t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\n       \\<in> {sa.\n              (case sa of\n               (p, q, t) \\<Rightarrow>\n                 regular r \\<and>\n                 regular q \\<and>\n                 vector q \\<and>\n                 asymmetric t \\<and>\n                 t \\<le> r \\<and>\n                 t \\<le> q \\<and>\n                 q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n                 p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n              (case sa of\n               (p, q, t) \\<Rightarrow>\n                 card\n                  {x. regular x \\<and>\n                      x \\<le> - - (- q \\<sqinter>\n                                   r\\<^sup>T\\<^sup>\\<star> * s)})\n              < n}", "hence 3: \"vector p\""], ["proof (prove)\nusing this:\n  ((regular r \\<and>\n    regular q \\<and>\n    vector q \\<and>\n    asymmetric t \\<and>\n    t \\<le> r \\<and>\n    t \\<le> q \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n    p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n   p \\<noteq> bot) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n  n\n\ngoal (1 subgoal):\n 1. vector p", "using vector_complement_closed vector_inf_closed vector_mult_closed"], ["proof (prove)\nusing this:\n  ((regular r \\<and>\n    regular q \\<and>\n    vector q \\<and>\n    asymmetric t \\<and>\n    t \\<le> r \\<and>\n    t \\<le> q \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n    p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n   p \\<noteq> bot) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n  n\n  vector ?x \\<Longrightarrow> vector (- ?x)\n  \\<lbrakk>vector ?x; vector ?y\\<rbrakk>\n  \\<Longrightarrow> vector (?x \\<sqinter> ?y)\n  vector ?y \\<Longrightarrow> vector (?x * ?y)\n\ngoal (1 subgoal):\n 1. vector p", "by blast"], ["proof (state)\nthis:\n  vector p\n\ngoal (1 subgoal):\n 1. \\<And>n p q t.\n       ((regular r \\<and>\n         regular q \\<and>\n         vector q \\<and>\n         asymmetric t \\<and>\n         t \\<le> r \\<and>\n         t \\<le> q \\<and>\n         q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n         p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n        p \\<noteq> bot) \\<and>\n       card\n        {x. regular x \\<and>\n            x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n       n \\<Longrightarrow>\n       (- (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p, q \\<squnion> p,\n        t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\n       \\<in> {sa.\n              (case sa of\n               (p, q, t) \\<Rightarrow>\n                 regular r \\<and>\n                 regular q \\<and>\n                 vector q \\<and>\n                 asymmetric t \\<and>\n                 t \\<le> r \\<and>\n                 t \\<le> q \\<and>\n                 q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n                 p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n              (case sa of\n               (p, q, t) \\<Rightarrow>\n                 card\n                  {x. regular x \\<and>\n                      x \\<le> - - (- q \\<sqinter>\n                                   r\\<^sup>T\\<^sup>\\<star> * s)})\n              < n}", "show \"(-(q \\<squnion> p) \\<sqinter> r\\<^sup>T * p, q \\<squnion> p, t \\<squnion> (r \\<sqinter> q * p\\<^sup>T))\n        \\<in> { trip . (case trip of (p, q, t) \\<Rightarrow> regular r \\<and> regular q \\<and> vector q \\<and> asymmetric t \\<and> t \\<le> r \\<and> t \\<le> q \\<and> q = t\\<^sup>T\\<^sup>\\<star> * s \\<and> p = -q \\<sqinter> r\\<^sup>T * q) \\<and>\n                   (case trip of (p, q, t) \\<Rightarrow> card { x . regular x \\<and> x \\<le> --(-q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s) }) < n }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (- (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p, q \\<squnion> p,\n     t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\n    \\<in> {trip.\n           (case trip of\n            (p, q, t) \\<Rightarrow>\n              regular r \\<and>\n              regular q \\<and>\n              vector q \\<and>\n              asymmetric t \\<and>\n              t \\<le> r \\<and>\n              t \\<le> q \\<and>\n              q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n              p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n           (case trip of\n            (p, q, t) \\<Rightarrow>\n              card\n               {x. regular x \\<and>\n                   x \\<le> - - (- q \\<sqinter>\n                                r\\<^sup>T\\<^sup>\\<star> * s)})\n           < n}", "apply (rule CollectI, rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. case (- (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p, q \\<squnion> p,\n          t \\<squnion> r \\<sqinter> q * p\\<^sup>T) of\n    (p, q, t) \\<Rightarrow>\n      regular r \\<and>\n      regular q \\<and>\n      vector q \\<and>\n      asymmetric t \\<and>\n      t \\<le> r \\<and>\n      t \\<le> q \\<and>\n      q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n      p = - q \\<sqinter> r\\<^sup>T * q\n 2. (case (- (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p, q \\<squnion> p,\n           t \\<squnion> r \\<sqinter> q * p\\<^sup>T) of\n     (p, q, t) \\<Rightarrow>\n       card\n        {x. regular x \\<and>\n            x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)})\n    < n", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. case (- (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p, q \\<squnion> p,\n          t \\<squnion> r \\<sqinter> q * p\\<^sup>T) of\n    (p, q, t) \\<Rightarrow>\n      regular r \\<and>\n      regular q \\<and>\n      vector q \\<and>\n      asymmetric t \\<and>\n      t \\<le> r \\<and>\n      t \\<le> q \\<and>\n      q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n      p = - q \\<sqinter> r\\<^sup>T * q", "proof (intro case_prodI, intro conjI)"], ["proof (state)\ngoal (8 subgoals):\n 1. regular r\n 2. regular (q \\<squnion> p)\n 3. vector (q \\<squnion> p)\n 4. asymmetric (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\n 5. t \\<squnion> r \\<sqinter> q * p\\<^sup>T \\<le> r\n 6. t \\<squnion> r \\<sqinter> q * p\\<^sup>T \\<le> q \\<squnion> p\n 7. q \\<squnion> p =\n    (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n 8. - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p =\n    - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * (q \\<squnion> p)", "show \"regular r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. regular r", "using 2"], ["proof (prove)\nusing this:\n  ((regular r \\<and>\n    regular q \\<and>\n    vector q \\<and>\n    asymmetric t \\<and>\n    t \\<le> r \\<and>\n    t \\<le> q \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n    p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n   p \\<noteq> bot) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n  n\n\ngoal (1 subgoal):\n 1. regular r", "by blast"], ["proof (state)\nthis:\n  regular r\n\ngoal (7 subgoals):\n 1. regular (q \\<squnion> p)\n 2. vector (q \\<squnion> p)\n 3. asymmetric (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\n 4. t \\<squnion> r \\<sqinter> q * p\\<^sup>T \\<le> r\n 5. t \\<squnion> r \\<sqinter> q * p\\<^sup>T \\<le> q \\<squnion> p\n 6. q \\<squnion> p =\n    (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n 7. - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p =\n    - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * (q \\<squnion> p)", "show \"regular (q \\<squnion> p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. regular (q \\<squnion> p)", "using 2 regular_conv_closed regular_mult_closed"], ["proof (prove)\nusing this:\n  ((regular r \\<and>\n    regular q \\<and>\n    vector q \\<and>\n    asymmetric t \\<and>\n    t \\<le> r \\<and>\n    t \\<le> q \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n    p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n   p \\<noteq> bot) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n  n\n  regular ?x \\<Longrightarrow> regular (?x\\<^sup>T)\n  \\<lbrakk>regular ?x; regular ?y\\<rbrakk>\n  \\<Longrightarrow> regular (?x * ?y)\n\ngoal (1 subgoal):\n 1. regular (q \\<squnion> p)", "by force"], ["proof (state)\nthis:\n  regular (q \\<squnion> p)\n\ngoal (6 subgoals):\n 1. vector (q \\<squnion> p)\n 2. asymmetric (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\n 3. t \\<squnion> r \\<sqinter> q * p\\<^sup>T \\<le> r\n 4. t \\<squnion> r \\<sqinter> q * p\\<^sup>T \\<le> q \\<squnion> p\n 5. q \\<squnion> p =\n    (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n 6. - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p =\n    - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * (q \\<squnion> p)", "show \"vector (q \\<squnion> p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vector (q \\<squnion> p)", "using 2 vector_complement_closed vector_inf_closed vector_mult_closed vector_sup_closed"], ["proof (prove)\nusing this:\n  ((regular r \\<and>\n    regular q \\<and>\n    vector q \\<and>\n    asymmetric t \\<and>\n    t \\<le> r \\<and>\n    t \\<le> q \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n    p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n   p \\<noteq> bot) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n  n\n  vector ?x \\<Longrightarrow> vector (- ?x)\n  \\<lbrakk>vector ?x; vector ?y\\<rbrakk>\n  \\<Longrightarrow> vector (?x \\<sqinter> ?y)\n  vector ?y \\<Longrightarrow> vector (?x * ?y)\n  \\<lbrakk>vector ?x; vector ?y\\<rbrakk>\n  \\<Longrightarrow> vector (?x \\<squnion> ?y)\n\ngoal (1 subgoal):\n 1. vector (q \\<squnion> p)", "by force"], ["proof (state)\nthis:\n  vector (q \\<squnion> p)\n\ngoal (5 subgoals):\n 1. asymmetric (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\n 2. t \\<squnion> r \\<sqinter> q * p\\<^sup>T \\<le> r\n 3. t \\<squnion> r \\<sqinter> q * p\\<^sup>T \\<le> q \\<squnion> p\n 4. q \\<squnion> p =\n    (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n 5. - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p =\n    - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * (q \\<squnion> p)", "show \"asymmetric (t \\<squnion> (r \\<sqinter> q * p\\<^sup>T))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. asymmetric (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. asymmetric (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)", "have \"t \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T \\<le> t \\<sqinter> p * q\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\n    \\<le> t \\<sqinter> p * q\\<^sup>T", "by (metis comp_inf.mult_right_isotone conv_dist_comp conv_involutive conv_order inf.cobounded2)"], ["proof (state)\nthis:\n  t \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\n  \\<le> t \\<sqinter> p * q\\<^sup>T\n\ngoal (1 subgoal):\n 1. asymmetric (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)", "also"], ["proof (state)\nthis:\n  t \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\n  \\<le> t \\<sqinter> p * q\\<^sup>T\n\ngoal (1 subgoal):\n 1. asymmetric (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)", "have \"... \\<le> t \\<sqinter> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<sqinter> p * q\\<^sup>T \\<le> t \\<sqinter> p", "using 3"], ["proof (prove)\nusing this:\n  vector p\n\ngoal (1 subgoal):\n 1. t \\<sqinter> p * q\\<^sup>T \\<le> t \\<sqinter> p", "by (metis comp_inf.mult_right_isotone comp_inf.star.circ_sup_sub_sup_one_1 inf.boundedE le_sup_iff mult_right_isotone)"], ["proof (state)\nthis:\n  t \\<sqinter> p * q\\<^sup>T \\<le> t \\<sqinter> p\n\ngoal (1 subgoal):\n 1. asymmetric (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)", "finally"], ["proof (chain)\npicking this:\n  t \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T \\<le> t \\<sqinter> p", "have 4: \"t \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T = bot\""], ["proof (prove)\nusing this:\n  t \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T \\<le> t \\<sqinter> p\n\ngoal (1 subgoal):\n 1. t \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T = bot", "using 2"], ["proof (prove)\nusing this:\n  t \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T \\<le> t \\<sqinter> p\n  ((regular r \\<and>\n    regular q \\<and>\n    vector q \\<and>\n    asymmetric t \\<and>\n    t \\<le> r \\<and>\n    t \\<le> q \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n    p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n   p \\<noteq> bot) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n  n\n\ngoal (1 subgoal):\n 1. t \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T = bot", "by (metis antisym bot_least inf.sup_monoid.add_assoc pseudo_complement)"], ["proof (state)\nthis:\n  t \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T = bot\n\ngoal (1 subgoal):\n 1. asymmetric (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)", "hence 5: \"r \\<sqinter> q * p\\<^sup>T \\<sqinter> t\\<^sup>T = bot\""], ["proof (prove)\nusing this:\n  t \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T = bot\n\ngoal (1 subgoal):\n 1. r \\<sqinter> q * p\\<^sup>T \\<sqinter> t\\<^sup>T = bot", "using conv_inf_bot_iff inf_commute"], ["proof (prove)\nusing this:\n  t \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T = bot\n  (bot = ?x\\<^sup>T \\<sqinter> ?y) = (bot = ?x \\<sqinter> ?y\\<^sup>T)\n  ?x \\<sqinter> ?y = ?y \\<sqinter> ?x\n\ngoal (1 subgoal):\n 1. r \\<sqinter> q * p\\<^sup>T \\<sqinter> t\\<^sup>T = bot", "by force"], ["proof (state)\nthis:\n  r \\<sqinter> q * p\\<^sup>T \\<sqinter> t\\<^sup>T = bot\n\ngoal (1 subgoal):\n 1. asymmetric (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)", "have \"r \\<sqinter> q * p\\<^sup>T \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T \\<le> q * p\\<^sup>T \\<sqinter> p * q\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<sqinter> q * p\\<^sup>T \\<sqinter>\n    (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\n    \\<le> q * p\\<^sup>T \\<sqinter> p * q\\<^sup>T", "by (metis comp_inf.comp_isotone conv_dist_comp conv_involutive conv_order inf.cobounded2)"], ["proof (state)\nthis:\n  r \\<sqinter> q * p\\<^sup>T \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\n  \\<le> q * p\\<^sup>T \\<sqinter> p * q\\<^sup>T\n\ngoal (1 subgoal):\n 1. asymmetric (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)", "also"], ["proof (state)\nthis:\n  r \\<sqinter> q * p\\<^sup>T \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\n  \\<le> q * p\\<^sup>T \\<sqinter> p * q\\<^sup>T\n\ngoal (1 subgoal):\n 1. asymmetric (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)", "have \"... \\<le> q \\<sqinter> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q * p\\<^sup>T \\<sqinter> p * q\\<^sup>T \\<le> q \\<sqinter> p", "using 2 3"], ["proof (prove)\nusing this:\n  ((regular r \\<and>\n    regular q \\<and>\n    vector q \\<and>\n    asymmetric t \\<and>\n    t \\<le> r \\<and>\n    t \\<le> q \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n    p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n   p \\<noteq> bot) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n  n\n  vector p\n\ngoal (1 subgoal):\n 1. q * p\\<^sup>T \\<sqinter> p * q\\<^sup>T \\<le> q \\<sqinter> p", "by (metis comp_inf.comp_isotone inf.cobounded1 vector_covector)"], ["proof (state)\nthis:\n  q * p\\<^sup>T \\<sqinter> p * q\\<^sup>T \\<le> q \\<sqinter> p\n\ngoal (1 subgoal):\n 1. asymmetric (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)", "finally"], ["proof (chain)\npicking this:\n  r \\<sqinter> q * p\\<^sup>T \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\n  \\<le> q \\<sqinter> p", "have 6: \"r \\<sqinter> q * p\\<^sup>T \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T = bot\""], ["proof (prove)\nusing this:\n  r \\<sqinter> q * p\\<^sup>T \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\n  \\<le> q \\<sqinter> p\n\ngoal (1 subgoal):\n 1. asymmetric (r \\<sqinter> q * p\\<^sup>T)", "using 2"], ["proof (prove)\nusing this:\n  r \\<sqinter> q * p\\<^sup>T \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\n  \\<le> q \\<sqinter> p\n  ((regular r \\<and>\n    regular q \\<and>\n    vector q \\<and>\n    asymmetric t \\<and>\n    t \\<le> r \\<and>\n    t \\<le> q \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n    p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n   p \\<noteq> bot) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n  n\n\ngoal (1 subgoal):\n 1. asymmetric (r \\<sqinter> q * p\\<^sup>T)", "by (metis inf.cobounded1 inf.sup_monoid.add_commute le_bot pseudo_complement)"], ["proof (state)\nthis:\n  asymmetric (r \\<sqinter> q * p\\<^sup>T)\n\ngoal (1 subgoal):\n 1. asymmetric (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)", "have \"(t \\<squnion> (r \\<sqinter> q * p\\<^sup>T)) \\<sqinter> (t \\<squnion> (r \\<sqinter> q * p\\<^sup>T))\\<^sup>T = (t \\<sqinter> t\\<^sup>T) \\<squnion> (t \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T) \\<squnion> (r \\<sqinter> q * p\\<^sup>T \\<sqinter> t\\<^sup>T) \\<squnion> (r \\<sqinter> q * p\\<^sup>T \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T) \\<sqinter>\n    (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T =\n    t \\<sqinter> t\\<^sup>T \\<squnion>\n    t \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T \\<squnion>\n    r \\<sqinter> q * p\\<^sup>T \\<sqinter> t\\<^sup>T \\<squnion>\n    r \\<sqinter> q * p\\<^sup>T \\<sqinter>\n    (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T", "by (simp add: sup.commute sup.left_commute conv_dist_sup inf_sup_distrib1 inf_sup_distrib2)"], ["proof (state)\nthis:\n  (t \\<squnion> r \\<sqinter> q * p\\<^sup>T) \\<sqinter>\n  (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T =\n  t \\<sqinter> t\\<^sup>T \\<squnion>\n  t \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T \\<squnion>\n  r \\<sqinter> q * p\\<^sup>T \\<sqinter> t\\<^sup>T \\<squnion>\n  r \\<sqinter> q * p\\<^sup>T \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\n\ngoal (1 subgoal):\n 1. asymmetric (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)", "also"], ["proof (state)\nthis:\n  (t \\<squnion> r \\<sqinter> q * p\\<^sup>T) \\<sqinter>\n  (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T =\n  t \\<sqinter> t\\<^sup>T \\<squnion>\n  t \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T \\<squnion>\n  r \\<sqinter> q * p\\<^sup>T \\<sqinter> t\\<^sup>T \\<squnion>\n  r \\<sqinter> q * p\\<^sup>T \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\n\ngoal (1 subgoal):\n 1. asymmetric (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)", "have \"... = bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<sqinter> t\\<^sup>T \\<squnion>\n    t \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T \\<squnion>\n    r \\<sqinter> q * p\\<^sup>T \\<sqinter> t\\<^sup>T \\<squnion>\n    r \\<sqinter> q * p\\<^sup>T \\<sqinter>\n    (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T =\n    bot", "using 2 4 5 6"], ["proof (prove)\nusing this:\n  ((regular r \\<and>\n    regular q \\<and>\n    vector q \\<and>\n    asymmetric t \\<and>\n    t \\<le> r \\<and>\n    t \\<le> q \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n    p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n   p \\<noteq> bot) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n  n\n  t \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T = bot\n  r \\<sqinter> q * p\\<^sup>T \\<sqinter> t\\<^sup>T = bot\n  asymmetric (r \\<sqinter> q * p\\<^sup>T)\n\ngoal (1 subgoal):\n 1. t \\<sqinter> t\\<^sup>T \\<squnion>\n    t \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T \\<squnion>\n    r \\<sqinter> q * p\\<^sup>T \\<sqinter> t\\<^sup>T \\<squnion>\n    r \\<sqinter> q * p\\<^sup>T \\<sqinter>\n    (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T =\n    bot", "by auto"], ["proof (state)\nthis:\n  t \\<sqinter> t\\<^sup>T \\<squnion>\n  t \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T \\<squnion>\n  r \\<sqinter> q * p\\<^sup>T \\<sqinter> t\\<^sup>T \\<squnion>\n  r \\<sqinter> q * p\\<^sup>T \\<sqinter>\n  (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T =\n  bot\n\ngoal (1 subgoal):\n 1. asymmetric (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)", "finally"], ["proof (chain)\npicking this:\n  asymmetric (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)", "show ?thesis"], ["proof (prove)\nusing this:\n  asymmetric (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\n\ngoal (1 subgoal):\n 1. asymmetric (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)", "."], ["proof (state)\nthis:\n  asymmetric (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  asymmetric (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\n\ngoal (4 subgoals):\n 1. t \\<squnion> r \\<sqinter> q * p\\<^sup>T \\<le> r\n 2. t \\<squnion> r \\<sqinter> q * p\\<^sup>T \\<le> q \\<squnion> p\n 3. q \\<squnion> p =\n    (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n 4. - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p =\n    - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * (q \\<squnion> p)", "show \"t \\<squnion> (r \\<sqinter> q * p\\<^sup>T) \\<le> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<squnion> r \\<sqinter> q * p\\<^sup>T \\<le> r", "using 2"], ["proof (prove)\nusing this:\n  ((regular r \\<and>\n    regular q \\<and>\n    vector q \\<and>\n    asymmetric t \\<and>\n    t \\<le> r \\<and>\n    t \\<le> q \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n    p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n   p \\<noteq> bot) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n  n\n\ngoal (1 subgoal):\n 1. t \\<squnion> r \\<sqinter> q * p\\<^sup>T \\<le> r", "by (meson inf.cobounded1 le_supI)"], ["proof (state)\nthis:\n  t \\<squnion> r \\<sqinter> q * p\\<^sup>T \\<le> r\n\ngoal (3 subgoals):\n 1. t \\<squnion> r \\<sqinter> q * p\\<^sup>T \\<le> q \\<squnion> p\n 2. q \\<squnion> p =\n    (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n 3. - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p =\n    - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * (q \\<squnion> p)", "show \"t \\<squnion> (r \\<sqinter> q * p\\<^sup>T) \\<le> q \\<squnion> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<squnion> r \\<sqinter> q * p\\<^sup>T \\<le> q \\<squnion> p", "using 2"], ["proof (prove)\nusing this:\n  ((regular r \\<and>\n    regular q \\<and>\n    vector q \\<and>\n    asymmetric t \\<and>\n    t \\<le> r \\<and>\n    t \\<le> q \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n    p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n   p \\<noteq> bot) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n  n\n\ngoal (1 subgoal):\n 1. t \\<squnion> r \\<sqinter> q * p\\<^sup>T \\<le> q \\<squnion> p", "by (metis comp_inf.star.circ_sup_sub_sup_one_1 inf.absorb2 inf.coboundedI2 inf.sup_monoid.add_commute le_sup_iff mult_right_isotone sup_left_divisibility)"], ["proof (state)\nthis:\n  t \\<squnion> r \\<sqinter> q * p\\<^sup>T \\<le> q \\<squnion> p\n\ngoal (2 subgoals):\n 1. q \\<squnion> p =\n    (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n 2. - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p =\n    - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * (q \\<squnion> p)", "show \"q \\<squnion> p = (t \\<squnion> (r \\<sqinter> q * p\\<^sup>T))\\<^sup>T\\<^sup>\\<star> * s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<squnion> p =\n    (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. q \\<squnion> p\n    \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> *\n          s\n 2. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "have 7: \"q \\<le> (t \\<squnion> (r \\<sqinter> q * p\\<^sup>T))\\<^sup>T\\<^sup>\\<star> * s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<le> (t \\<squnion>\n             r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> *\n            s", "using 2"], ["proof (prove)\nusing this:\n  ((regular r \\<and>\n    regular q \\<and>\n    vector q \\<and>\n    asymmetric t \\<and>\n    t \\<le> r \\<and>\n    t \\<le> q \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n    p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n   p \\<noteq> bot) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n  n\n\ngoal (1 subgoal):\n 1. q \\<le> (t \\<squnion>\n             r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> *\n            s", "by (metis conv_order mult_left_isotone star_isotone sup_left_divisibility)"], ["proof (state)\nthis:\n  q \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> *\n          s\n\ngoal (2 subgoals):\n 1. q \\<squnion> p\n    \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> *\n          s\n 2. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "have \"-q \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * q \\<le> (t \\<squnion> (r \\<sqinter> q * p\\<^sup>T))\\<^sup>T * t\\<^sup>T\\<^sup>\\<star> * s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - q \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * q\n    \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T *\n          t\\<^sup>T\\<^sup>\\<star> *\n          s", "using 2 comp_associative conv_dist_sup inf.coboundedI2 mult_right_sub_dist_sup_right"], ["proof (prove)\nusing this:\n  ((regular r \\<and>\n    regular q \\<and>\n    vector q \\<and>\n    asymmetric t \\<and>\n    t \\<le> r \\<and>\n    t \\<le> q \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n    p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n   p \\<noteq> bot) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n  n\n  ?x * ?y * ?z = ?x * (?y * ?z)\n  (?x \\<squnion> ?y)\\<^sup>T = ?x\\<^sup>T \\<squnion> ?y\\<^sup>T\n  ?b \\<le> ?c \\<Longrightarrow> ?a \\<sqinter> ?b \\<le> ?c\n  ?y * ?z \\<le> (?x \\<squnion> ?y) * ?z\n\ngoal (1 subgoal):\n 1. - q \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * q\n    \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T *\n          t\\<^sup>T\\<^sup>\\<star> *\n          s", "by auto"], ["proof (state)\nthis:\n  - q \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * q\n  \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T *\n        t\\<^sup>T\\<^sup>\\<star> *\n        s\n\ngoal (2 subgoals):\n 1. q \\<squnion> p\n    \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> *\n          s\n 2. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "also"], ["proof (state)\nthis:\n  - q \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * q\n  \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T *\n        t\\<^sup>T\\<^sup>\\<star> *\n        s\n\ngoal (2 subgoals):\n 1. q \\<squnion> p\n    \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> *\n          s\n 2. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "have \"... \\<le> (t \\<squnion> (r \\<sqinter> q * p\\<^sup>T))\\<^sup>T\\<^sup>\\<star> * s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T *\n    t\\<^sup>T\\<^sup>\\<star> *\n    s\n    \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> *\n          s", "by (simp add: conv_dist_sup mult_left_isotone star.circ_increasing star.circ_mult_upper_bound star.circ_sub_dist)"], ["proof (state)\nthis:\n  (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T *\n  t\\<^sup>T\\<^sup>\\<star> *\n  s\n  \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n\ngoal (2 subgoals):\n 1. q \\<squnion> p\n    \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> *\n          s\n 2. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "finally"], ["proof (chain)\npicking this:\n  - q \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * q\n  \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s", "have 8: \"-q \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * q \\<le> (t \\<squnion> (r \\<sqinter> q * p\\<^sup>T))\\<^sup>T\\<^sup>\\<star> * s\""], ["proof (prove)\nusing this:\n  - q \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * q\n  \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n\ngoal (1 subgoal):\n 1. - q \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * q\n    \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> *\n          s", "."], ["proof (state)\nthis:\n  - q \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * q\n  \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n\ngoal (2 subgoals):\n 1. q \\<squnion> p\n    \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> *\n          s\n 2. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "have 9: \"(r \\<sqinter> -q)\\<^sup>T * q = bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (r \\<sqinter> - q)\\<^sup>T * q = bot", "using 2"], ["proof (prove)\nusing this:\n  ((regular r \\<and>\n    regular q \\<and>\n    vector q \\<and>\n    asymmetric t \\<and>\n    t \\<le> r \\<and>\n    t \\<le> q \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n    p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n   p \\<noteq> bot) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n  n\n\ngoal (1 subgoal):\n 1. (r \\<sqinter> - q)\\<^sup>T * q = bot", "by (metis conv_dist_inf covector_inf_comp_3 pp_inf_p semiring.mult_not_zero vector_complement_closed)"], ["proof (state)\nthis:\n  (r \\<sqinter> - q)\\<^sup>T * q = bot\n\ngoal (2 subgoals):\n 1. q \\<squnion> p\n    \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> *\n          s\n 2. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "have \"-q \\<sqinter> (r \\<sqinter> -(q * p\\<^sup>T))\\<^sup>T * q = -q \\<sqinter> (r \\<sqinter> (-q \\<squnion> -p\\<^sup>T))\\<^sup>T * q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - q \\<sqinter> (r \\<sqinter> - (q * p\\<^sup>T))\\<^sup>T * q =\n    - q \\<sqinter> (r \\<sqinter> (- q \\<squnion> - p\\<^sup>T))\\<^sup>T * q", "using 2 3"], ["proof (prove)\nusing this:\n  ((regular r \\<and>\n    regular q \\<and>\n    vector q \\<and>\n    asymmetric t \\<and>\n    t \\<le> r \\<and>\n    t \\<le> q \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n    p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n   p \\<noteq> bot) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n  n\n  vector p\n\ngoal (1 subgoal):\n 1. - q \\<sqinter> (r \\<sqinter> - (q * p\\<^sup>T))\\<^sup>T * q =\n    - q \\<sqinter> (r \\<sqinter> (- q \\<squnion> - p\\<^sup>T))\\<^sup>T * q", "by (metis p_dist_inf vector_covector)"], ["proof (state)\nthis:\n  - q \\<sqinter> (r \\<sqinter> - (q * p\\<^sup>T))\\<^sup>T * q =\n  - q \\<sqinter> (r \\<sqinter> (- q \\<squnion> - p\\<^sup>T))\\<^sup>T * q\n\ngoal (2 subgoals):\n 1. q \\<squnion> p\n    \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> *\n          s\n 2. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "also"], ["proof (state)\nthis:\n  - q \\<sqinter> (r \\<sqinter> - (q * p\\<^sup>T))\\<^sup>T * q =\n  - q \\<sqinter> (r \\<sqinter> (- q \\<squnion> - p\\<^sup>T))\\<^sup>T * q\n\ngoal (2 subgoals):\n 1. q \\<squnion> p\n    \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> *\n          s\n 2. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "have \"... = (-q \\<sqinter> (r \\<sqinter> -q)\\<^sup>T * q) \\<squnion> (-q \\<sqinter> (r \\<sqinter> -p\\<^sup>T)\\<^sup>T * q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - q \\<sqinter> (r \\<sqinter> (- q \\<squnion> - p\\<^sup>T))\\<^sup>T * q =\n    - q \\<sqinter> (r \\<sqinter> - q)\\<^sup>T * q \\<squnion>\n    - q \\<sqinter> (r \\<sqinter> - p\\<^sup>T)\\<^sup>T * q", "by (simp add: conv_dist_sup inf_sup_distrib1 mult_right_dist_sup)"], ["proof (state)\nthis:\n  - q \\<sqinter> (r \\<sqinter> (- q \\<squnion> - p\\<^sup>T))\\<^sup>T * q =\n  - q \\<sqinter> (r \\<sqinter> - q)\\<^sup>T * q \\<squnion>\n  - q \\<sqinter> (r \\<sqinter> - p\\<^sup>T)\\<^sup>T * q\n\ngoal (2 subgoals):\n 1. q \\<squnion> p\n    \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> *\n          s\n 2. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "also"], ["proof (state)\nthis:\n  - q \\<sqinter> (r \\<sqinter> (- q \\<squnion> - p\\<^sup>T))\\<^sup>T * q =\n  - q \\<sqinter> (r \\<sqinter> - q)\\<^sup>T * q \\<squnion>\n  - q \\<sqinter> (r \\<sqinter> - p\\<^sup>T)\\<^sup>T * q\n\ngoal (2 subgoals):\n 1. q \\<squnion> p\n    \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> *\n          s\n 2. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "have \"... = -q \\<sqinter> (r \\<sqinter> -p\\<^sup>T)\\<^sup>T * q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - q \\<sqinter> (r \\<sqinter> - q)\\<^sup>T * q \\<squnion>\n    - q \\<sqinter> (r \\<sqinter> - p\\<^sup>T)\\<^sup>T * q =\n    - q \\<sqinter> (r \\<sqinter> - p\\<^sup>T)\\<^sup>T * q", "using 9"], ["proof (prove)\nusing this:\n  (r \\<sqinter> - q)\\<^sup>T * q = bot\n\ngoal (1 subgoal):\n 1. - q \\<sqinter> (r \\<sqinter> - q)\\<^sup>T * q \\<squnion>\n    - q \\<sqinter> (r \\<sqinter> - p\\<^sup>T)\\<^sup>T * q =\n    - q \\<sqinter> (r \\<sqinter> - p\\<^sup>T)\\<^sup>T * q", "by simp"], ["proof (state)\nthis:\n  - q \\<sqinter> (r \\<sqinter> - q)\\<^sup>T * q \\<squnion>\n  - q \\<sqinter> (r \\<sqinter> - p\\<^sup>T)\\<^sup>T * q =\n  - q \\<sqinter> (r \\<sqinter> - p\\<^sup>T)\\<^sup>T * q\n\ngoal (2 subgoals):\n 1. q \\<squnion> p\n    \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> *\n          s\n 2. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "also"], ["proof (state)\nthis:\n  - q \\<sqinter> (r \\<sqinter> - q)\\<^sup>T * q \\<squnion>\n  - q \\<sqinter> (r \\<sqinter> - p\\<^sup>T)\\<^sup>T * q =\n  - q \\<sqinter> (r \\<sqinter> - p\\<^sup>T)\\<^sup>T * q\n\ngoal (2 subgoals):\n 1. q \\<squnion> p\n    \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> *\n          s\n 2. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "have \"... = -q \\<sqinter> -p \\<sqinter> r\\<^sup>T * q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - q \\<sqinter> (r \\<sqinter> - p\\<^sup>T)\\<^sup>T * q =\n    - q \\<sqinter> - p \\<sqinter> r\\<^sup>T * q", "using 3"], ["proof (prove)\nusing this:\n  vector p\n\ngoal (1 subgoal):\n 1. - q \\<sqinter> (r \\<sqinter> - p\\<^sup>T)\\<^sup>T * q =\n    - q \\<sqinter> - p \\<sqinter> r\\<^sup>T * q", "by (metis conv_complement conv_dist_inf conv_involutive inf.sup_monoid.add_assoc inf_vector_comp vector_complement_closed)"], ["proof (state)\nthis:\n  - q \\<sqinter> (r \\<sqinter> - p\\<^sup>T)\\<^sup>T * q =\n  - q \\<sqinter> - p \\<sqinter> r\\<^sup>T * q\n\ngoal (2 subgoals):\n 1. q \\<squnion> p\n    \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> *\n          s\n 2. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "finally"], ["proof (chain)\npicking this:\n  - q \\<sqinter> (r \\<sqinter> - (q * p\\<^sup>T))\\<^sup>T * q =\n  - q \\<sqinter> - p \\<sqinter> r\\<^sup>T * q", "have 10: \"-q \\<sqinter> (r \\<sqinter> -(q * p\\<^sup>T))\\<^sup>T * q = bot\""], ["proof (prove)\nusing this:\n  - q \\<sqinter> (r \\<sqinter> - (q * p\\<^sup>T))\\<^sup>T * q =\n  - q \\<sqinter> - p \\<sqinter> r\\<^sup>T * q\n\ngoal (1 subgoal):\n 1. - q \\<sqinter> (r \\<sqinter> - (q * p\\<^sup>T))\\<^sup>T * q = bot", "using 2 inf_import_p pseudo_complement"], ["proof (prove)\nusing this:\n  - q \\<sqinter> (r \\<sqinter> - (q * p\\<^sup>T))\\<^sup>T * q =\n  - q \\<sqinter> - p \\<sqinter> r\\<^sup>T * q\n  ((regular r \\<and>\n    regular q \\<and>\n    vector q \\<and>\n    asymmetric t \\<and>\n    t \\<le> r \\<and>\n    t \\<le> q \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n    p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n   p \\<noteq> bot) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n  n\n  ?x \\<sqinter> - (?x \\<sqinter> ?y) = ?x \\<sqinter> - ?y\n  (?x \\<sqinter> ?y = bot) = (?x \\<le> - ?y)\n\ngoal (1 subgoal):\n 1. - q \\<sqinter> (r \\<sqinter> - (q * p\\<^sup>T))\\<^sup>T * q = bot", "by auto"], ["proof (state)\nthis:\n  - q \\<sqinter> (r \\<sqinter> - (q * p\\<^sup>T))\\<^sup>T * q = bot\n\ngoal (2 subgoals):\n 1. q \\<squnion> p\n    \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> *\n          s\n 2. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "have \"r = (r \\<sqinter> q * p\\<^sup>T) \\<squnion> (r \\<sqinter> -(q * p\\<^sup>T))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r = r \\<sqinter> q * p\\<^sup>T \\<squnion> r \\<sqinter> - (q * p\\<^sup>T)", "using 2"], ["proof (prove)\nusing this:\n  ((regular r \\<and>\n    regular q \\<and>\n    vector q \\<and>\n    asymmetric t \\<and>\n    t \\<le> r \\<and>\n    t \\<le> q \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n    p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n   p \\<noteq> bot) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n  n\n\ngoal (1 subgoal):\n 1. r = r \\<sqinter> q * p\\<^sup>T \\<squnion> r \\<sqinter> - (q * p\\<^sup>T)", "by (smt (z3) maddux_3_11_pp pp_dist_comp regular_closed_inf regular_conv_closed)"], ["proof (state)\nthis:\n  r = r \\<sqinter> q * p\\<^sup>T \\<squnion> r \\<sqinter> - (q * p\\<^sup>T)\n\ngoal (2 subgoals):\n 1. q \\<squnion> p\n    \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> *\n          s\n 2. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "hence \"p = -q \\<sqinter> ((r \\<sqinter> q * p\\<^sup>T) \\<squnion> (r \\<sqinter> -(q * p\\<^sup>T)))\\<^sup>T * q\""], ["proof (prove)\nusing this:\n  r = r \\<sqinter> q * p\\<^sup>T \\<squnion> r \\<sqinter> - (q * p\\<^sup>T)\n\ngoal (1 subgoal):\n 1. p =\n    - q \\<sqinter>\n    (r \\<sqinter> q * p\\<^sup>T \\<squnion>\n     r \\<sqinter> - (q * p\\<^sup>T))\\<^sup>T *\n    q", "using 2"], ["proof (prove)\nusing this:\n  r = r \\<sqinter> q * p\\<^sup>T \\<squnion> r \\<sqinter> - (q * p\\<^sup>T)\n  ((regular r \\<and>\n    regular q \\<and>\n    vector q \\<and>\n    asymmetric t \\<and>\n    t \\<le> r \\<and>\n    t \\<le> q \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n    p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n   p \\<noteq> bot) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n  n\n\ngoal (1 subgoal):\n 1. p =\n    - q \\<sqinter>\n    (r \\<sqinter> q * p\\<^sup>T \\<squnion>\n     r \\<sqinter> - (q * p\\<^sup>T))\\<^sup>T *\n    q", "by auto"], ["proof (state)\nthis:\n  p =\n  - q \\<sqinter>\n  (r \\<sqinter> q * p\\<^sup>T \\<squnion>\n   r \\<sqinter> - (q * p\\<^sup>T))\\<^sup>T *\n  q\n\ngoal (2 subgoals):\n 1. q \\<squnion> p\n    \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> *\n          s\n 2. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "also"], ["proof (state)\nthis:\n  p =\n  - q \\<sqinter>\n  (r \\<sqinter> q * p\\<^sup>T \\<squnion>\n   r \\<sqinter> - (q * p\\<^sup>T))\\<^sup>T *\n  q\n\ngoal (2 subgoals):\n 1. q \\<squnion> p\n    \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> *\n          s\n 2. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "have \"... = (-q \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * q) \\<squnion> (-q \\<sqinter> (r \\<sqinter> -(q * p\\<^sup>T))\\<^sup>T * q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - q \\<sqinter>\n    (r \\<sqinter> q * p\\<^sup>T \\<squnion>\n     r \\<sqinter> - (q * p\\<^sup>T))\\<^sup>T *\n    q =\n    - q \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * q \\<squnion>\n    - q \\<sqinter> (r \\<sqinter> - (q * p\\<^sup>T))\\<^sup>T * q", "by (simp add: conv_dist_sup inf_sup_distrib1 semiring.distrib_right)"], ["proof (state)\nthis:\n  - q \\<sqinter>\n  (r \\<sqinter> q * p\\<^sup>T \\<squnion>\n   r \\<sqinter> - (q * p\\<^sup>T))\\<^sup>T *\n  q =\n  - q \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * q \\<squnion>\n  - q \\<sqinter> (r \\<sqinter> - (q * p\\<^sup>T))\\<^sup>T * q\n\ngoal (2 subgoals):\n 1. q \\<squnion> p\n    \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> *\n          s\n 2. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "also"], ["proof (state)\nthis:\n  - q \\<sqinter>\n  (r \\<sqinter> q * p\\<^sup>T \\<squnion>\n   r \\<sqinter> - (q * p\\<^sup>T))\\<^sup>T *\n  q =\n  - q \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * q \\<squnion>\n  - q \\<sqinter> (r \\<sqinter> - (q * p\\<^sup>T))\\<^sup>T * q\n\ngoal (2 subgoals):\n 1. q \\<squnion> p\n    \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> *\n          s\n 2. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "have \"... \\<le> (t \\<squnion> (r \\<sqinter> q * p\\<^sup>T))\\<^sup>T\\<^sup>\\<star> * s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - q \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * q \\<squnion>\n    - q \\<sqinter> (r \\<sqinter> - (q * p\\<^sup>T))\\<^sup>T * q\n    \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> *\n          s", "using 8 10 le_sup_iff bot_least"], ["proof (prove)\nusing this:\n  - q \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * q\n  \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n  - q \\<sqinter> (r \\<sqinter> - (q * p\\<^sup>T))\\<^sup>T * q = bot\n  (?x \\<squnion> ?y \\<le> ?z) = (?x \\<le> ?z \\<and> ?y \\<le> ?z)\n  bot \\<le> ?a\n\ngoal (1 subgoal):\n 1. - q \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * q \\<squnion>\n    - q \\<sqinter> (r \\<sqinter> - (q * p\\<^sup>T))\\<^sup>T * q\n    \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> *\n          s", "by blast"], ["proof (state)\nthis:\n  - q \\<sqinter> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * q \\<squnion>\n  - q \\<sqinter> (r \\<sqinter> - (q * p\\<^sup>T))\\<^sup>T * q\n  \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n\ngoal (2 subgoals):\n 1. q \\<squnion> p\n    \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> *\n          s\n 2. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "finally"], ["proof (chain)\npicking this:\n  p \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> *\n          s", "show \"q \\<squnion> p \\<le> (t \\<squnion> (r \\<sqinter> q * p\\<^sup>T))\\<^sup>T\\<^sup>\\<star> * s\""], ["proof (prove)\nusing this:\n  p \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> *\n          s\n\ngoal (1 subgoal):\n 1. q \\<squnion> p\n    \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> *\n          s", "using 7"], ["proof (prove)\nusing this:\n  p \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> *\n          s\n  q \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> *\n          s\n\ngoal (1 subgoal):\n 1. q \\<squnion> p\n    \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> *\n          s", "by simp"], ["proof (state)\nthis:\n  q \\<squnion> p\n  \\<le> (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n\ngoal (1 subgoal):\n 1. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "have 11: \"t\\<^sup>T * q \\<le> r\\<^sup>T * q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t\\<^sup>T * q \\<le> r\\<^sup>T * q", "using 2 conv_order mult_left_isotone"], ["proof (prove)\nusing this:\n  ((regular r \\<and>\n    regular q \\<and>\n    vector q \\<and>\n    asymmetric t \\<and>\n    t \\<le> r \\<and>\n    t \\<le> q \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n    p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n   p \\<noteq> bot) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n  n\n  (?x \\<le> ?y) = (?x\\<^sup>T \\<le> ?y\\<^sup>T)\n  ?x \\<le> ?y \\<Longrightarrow> ?x * ?z \\<le> ?y * ?z\n\ngoal (1 subgoal):\n 1. t\\<^sup>T * q \\<le> r\\<^sup>T * q", "by auto"], ["proof (state)\nthis:\n  t\\<^sup>T * q \\<le> r\\<^sup>T * q\n\ngoal (1 subgoal):\n 1. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "have \"t\\<^sup>T * p \\<le> t\\<^sup>T * top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t\\<^sup>T * p \\<le> t\\<^sup>T * top", "by (simp add: mult_right_isotone)"], ["proof (state)\nthis:\n  t\\<^sup>T * p \\<le> t\\<^sup>T * top\n\ngoal (1 subgoal):\n 1. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "also"], ["proof (state)\nthis:\n  t\\<^sup>T * p \\<le> t\\<^sup>T * top\n\ngoal (1 subgoal):\n 1. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "have \"... = t\\<^sup>T * q \\<squnion> t\\<^sup>T * -q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t\\<^sup>T * top = t\\<^sup>T * q \\<squnion> t\\<^sup>T * - q", "using 2 regular_complement_top semiring.distrib_left"], ["proof (prove)\nusing this:\n  ((regular r \\<and>\n    regular q \\<and>\n    vector q \\<and>\n    asymmetric t \\<and>\n    t \\<le> r \\<and>\n    t \\<le> q \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n    p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n   p \\<noteq> bot) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n  n\n  regular ?x \\<Longrightarrow> ?x \\<squnion> - ?x = top\n  ?a * (?b \\<squnion> ?c) = ?a * ?b \\<squnion> ?a * ?c\n\ngoal (1 subgoal):\n 1. t\\<^sup>T * top = t\\<^sup>T * q \\<squnion> t\\<^sup>T * - q", "by force"], ["proof (state)\nthis:\n  t\\<^sup>T * top = t\\<^sup>T * q \\<squnion> t\\<^sup>T * - q\n\ngoal (1 subgoal):\n 1. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "also"], ["proof (state)\nthis:\n  t\\<^sup>T * top = t\\<^sup>T * q \\<squnion> t\\<^sup>T * - q\n\ngoal (1 subgoal):\n 1. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "have \"... = t\\<^sup>T * q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t\\<^sup>T * q \\<squnion> t\\<^sup>T * - q = t\\<^sup>T * q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. t\\<^sup>T * q \\<squnion> t\\<^sup>T * - q = t\\<^sup>T * q", "have \"t\\<^sup>T * -q = bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t\\<^sup>T * - q = bot", "using 2"], ["proof (prove)\nusing this:\n  ((regular r \\<and>\n    regular q \\<and>\n    vector q \\<and>\n    asymmetric t \\<and>\n    t \\<le> r \\<and>\n    t \\<le> q \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n    p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n   p \\<noteq> bot) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n  n\n\ngoal (1 subgoal):\n 1. t\\<^sup>T * - q = bot", "by (metis bot_least conv_complement_sub conv_dist_comp conv_involutive mult_right_isotone regular_closed_bot stone sup.absorb2 sup_commute)"], ["proof (state)\nthis:\n  t\\<^sup>T * - q = bot\n\ngoal (1 subgoal):\n 1. t\\<^sup>T * q \\<squnion> t\\<^sup>T * - q = t\\<^sup>T * q", "thus ?thesis"], ["proof (prove)\nusing this:\n  t\\<^sup>T * - q = bot\n\ngoal (1 subgoal):\n 1. t\\<^sup>T * q \\<squnion> t\\<^sup>T * - q = t\\<^sup>T * q", "by simp"], ["proof (state)\nthis:\n  t\\<^sup>T * q \\<squnion> t\\<^sup>T * - q = t\\<^sup>T * q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  t\\<^sup>T * q \\<squnion> t\\<^sup>T * - q = t\\<^sup>T * q\n\ngoal (1 subgoal):\n 1. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "finally"], ["proof (chain)\npicking this:\n  t\\<^sup>T * p \\<le> t\\<^sup>T * q", "have 12: \"t\\<^sup>T * p \\<le> r\\<^sup>T * q\""], ["proof (prove)\nusing this:\n  t\\<^sup>T * p \\<le> t\\<^sup>T * q\n\ngoal (1 subgoal):\n 1. t\\<^sup>T * p \\<le> r\\<^sup>T * q", "using 11 order.trans"], ["proof (prove)\nusing this:\n  t\\<^sup>T * p \\<le> t\\<^sup>T * q\n  t\\<^sup>T * q \\<le> r\\<^sup>T * q\n  \\<lbrakk>?a \\<le> ?b; ?b \\<le> ?c\\<rbrakk> \\<Longrightarrow> ?a \\<le> ?c\n\ngoal (1 subgoal):\n 1. t\\<^sup>T * p \\<le> r\\<^sup>T * q", "by blast"], ["proof (state)\nthis:\n  t\\<^sup>T * p \\<le> r\\<^sup>T * q\n\ngoal (1 subgoal):\n 1. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "have 13: \"(r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * q \\<le> r\\<^sup>T * q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * q \\<le> r\\<^sup>T * q", "by (simp add: conv_dist_inf mult_left_isotone)"], ["proof (state)\nthis:\n  (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * q \\<le> r\\<^sup>T * q\n\ngoal (1 subgoal):\n 1. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "have \"(r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * p \\<le> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * p \\<le> p", "using 3"], ["proof (prove)\nusing this:\n  vector p\n\ngoal (1 subgoal):\n 1. (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * p \\<le> p", "by (metis conv_dist_comp conv_dist_inf conv_involutive inf.coboundedI2 mult_isotone mult_right_isotone top.extremum)"], ["proof (state)\nthis:\n  (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * p \\<le> p\n\ngoal (1 subgoal):\n 1. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "hence 14: \"(r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * p \\<le> r\\<^sup>T * q\""], ["proof (prove)\nusing this:\n  (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * p \\<le> p\n\ngoal (1 subgoal):\n 1. (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * p \\<le> r\\<^sup>T * q", "using 2 le_infE"], ["proof (prove)\nusing this:\n  (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * p \\<le> p\n  ((regular r \\<and>\n    regular q \\<and>\n    vector q \\<and>\n    asymmetric t \\<and>\n    t \\<le> r \\<and>\n    t \\<le> q \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n    p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n   p \\<noteq> bot) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n  n\n  \\<lbrakk>?x \\<le> ?a \\<sqinter> ?b;\n   \\<lbrakk>?x \\<le> ?a; ?x \\<le> ?b\\<rbrakk> \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * p \\<le> r\\<^sup>T * q", "by blast"], ["proof (state)\nthis:\n  (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * p \\<le> r\\<^sup>T * q\n\ngoal (1 subgoal):\n 1. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "have \"(t \\<squnion> (r \\<sqinter> q * p\\<^sup>T))\\<^sup>T * (q \\<squnion> p) = t\\<^sup>T * q \\<squnion> t\\<^sup>T * p \\<squnion> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * q \\<squnion> (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * (q \\<squnion> p) =\n    t\\<^sup>T * q \\<squnion> t\\<^sup>T * p \\<squnion>\n    (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * q \\<squnion>\n    (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * p", "by (metis conv_dist_sup semiring.distrib_left semiring.distrib_right sup_assoc)"], ["proof (state)\nthis:\n  (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * (q \\<squnion> p) =\n  t\\<^sup>T * q \\<squnion> t\\<^sup>T * p \\<squnion>\n  (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * q \\<squnion>\n  (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * p\n\ngoal (1 subgoal):\n 1. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "also"], ["proof (state)\nthis:\n  (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * (q \\<squnion> p) =\n  t\\<^sup>T * q \\<squnion> t\\<^sup>T * p \\<squnion>\n  (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * q \\<squnion>\n  (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * p\n\ngoal (1 subgoal):\n 1. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "have \"... \\<le> r\\<^sup>T * q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t\\<^sup>T * q \\<squnion> t\\<^sup>T * p \\<squnion>\n    (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * q \\<squnion>\n    (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * p\n    \\<le> r\\<^sup>T * q", "using 11 12 13 14"], ["proof (prove)\nusing this:\n  t\\<^sup>T * q \\<le> r\\<^sup>T * q\n  t\\<^sup>T * p \\<le> r\\<^sup>T * q\n  (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * q \\<le> r\\<^sup>T * q\n  (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * p \\<le> r\\<^sup>T * q\n\ngoal (1 subgoal):\n 1. t\\<^sup>T * q \\<squnion> t\\<^sup>T * p \\<squnion>\n    (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * q \\<squnion>\n    (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * p\n    \\<le> r\\<^sup>T * q", "by simp"], ["proof (state)\nthis:\n  t\\<^sup>T * q \\<squnion> t\\<^sup>T * p \\<squnion>\n  (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * q \\<squnion>\n  (r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * p\n  \\<le> r\\<^sup>T * q\n\ngoal (1 subgoal):\n 1. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "finally"], ["proof (chain)\npicking this:\n  (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * (q \\<squnion> p)\n  \\<le> r\\<^sup>T * q", "have \"(t \\<squnion> (r \\<sqinter> q * p\\<^sup>T))\\<^sup>T * (q \\<squnion> p) \\<le> q \\<squnion> p\""], ["proof (prove)\nusing this:\n  (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * (q \\<squnion> p)\n  \\<le> r\\<^sup>T * q\n\ngoal (1 subgoal):\n 1. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * (q \\<squnion> p)\n    \\<le> q \\<squnion> p", "using 2"], ["proof (prove)\nusing this:\n  (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * (q \\<squnion> p)\n  \\<le> r\\<^sup>T * q\n  ((regular r \\<and>\n    regular q \\<and>\n    vector q \\<and>\n    asymmetric t \\<and>\n    t \\<le> r \\<and>\n    t \\<le> q \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n    p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n   p \\<noteq> bot) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n  n\n\ngoal (1 subgoal):\n 1. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * (q \\<squnion> p)\n    \\<le> q \\<squnion> p", "by (metis maddux_3_21_pp sup.boundedE sup_right_divisibility)"], ["proof (state)\nthis:\n  (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * (q \\<squnion> p)\n  \\<le> q \\<squnion> p\n\ngoal (1 subgoal):\n 1. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "thus \"(t \\<squnion> (r \\<sqinter> q * p\\<^sup>T))\\<^sup>T\\<^sup>\\<star> * s \\<le> q \\<squnion> p\""], ["proof (prove)\nusing this:\n  (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * (q \\<squnion> p)\n  \\<le> q \\<squnion> p\n\ngoal (1 subgoal):\n 1. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "using 2"], ["proof (prove)\nusing this:\n  (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T * (q \\<squnion> p)\n  \\<le> q \\<squnion> p\n  ((regular r \\<and>\n    regular q \\<and>\n    vector q \\<and>\n    asymmetric t \\<and>\n    t \\<le> r \\<and>\n    t \\<le> q \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n    p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n   p \\<noteq> bot) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n  n\n\ngoal (1 subgoal):\n 1. (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n    \\<le> q \\<squnion> p", "by (smt (verit, ccfv_SIG) star.circ_loop_fixpoint star_left_induct sup.bounded_iff sup_left_divisibility)"], ["proof (state)\nthis:\n  (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n  \\<le> q \\<squnion> p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  q \\<squnion> p =\n  (t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\\<^sup>T\\<^sup>\\<star> * s\n\ngoal (1 subgoal):\n 1. - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p =\n    - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * (q \\<squnion> p)", "show \"-(q \\<squnion> p) \\<sqinter> r\\<^sup>T * p = -(q \\<squnion> p) \\<sqinter> r\\<^sup>T * (q \\<squnion> p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p =\n    - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * (q \\<squnion> p)", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p\n    \\<le> - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * (q \\<squnion> p)\n 2. - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * (q \\<squnion> p)\n    \\<le> - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p", "show \"-(q \\<squnion> p) \\<sqinter> r\\<^sup>T * p \\<le> -(q \\<squnion> p) \\<sqinter> r\\<^sup>T * (q \\<squnion> p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p\n    \\<le> - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * (q \\<squnion> p)", "using inf.sup_right_isotone mult_left_sub_dist_sup_right"], ["proof (prove)\nusing this:\n  ?y \\<le> ?x \\<Longrightarrow> ?z \\<sqinter> ?y \\<le> ?z \\<sqinter> ?x\n  ?x * ?z \\<le> ?x * (?y \\<squnion> ?z)\n\ngoal (1 subgoal):\n 1. - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p\n    \\<le> - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * (q \\<squnion> p)", "by blast"], ["proof (state)\nthis:\n  - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p\n  \\<le> - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * (q \\<squnion> p)\n\ngoal (1 subgoal):\n 1. - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * (q \\<squnion> p)\n    \\<le> - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p", "have 15: \"- (q \\<squnion> p) \\<sqinter> r\\<^sup>T * (q \\<squnion> p) = - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * q \\<squnion> - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * (q \\<squnion> p) =\n    - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * q \\<squnion>\n    - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p", "by (simp add: comp_inf.semiring.distrib_left mult_left_dist_sup)"], ["proof (state)\nthis:\n  - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * (q \\<squnion> p) =\n  - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * q \\<squnion>\n  - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p\n\ngoal (1 subgoal):\n 1. - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * (q \\<squnion> p)\n    \\<le> - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p", "have \"- (q \\<squnion> p) \\<sqinter> r\\<^sup>T * q \\<le> - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * q\n    \\<le> - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p", "using 2"], ["proof (prove)\nusing this:\n  ((regular r \\<and>\n    regular q \\<and>\n    vector q \\<and>\n    asymmetric t \\<and>\n    t \\<le> r \\<and>\n    t \\<le> q \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n    p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n   p \\<noteq> bot) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n  n\n\ngoal (1 subgoal):\n 1. - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * q\n    \\<le> - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p", "by (metis bot_least p_dist_inf p_dist_sup p_inf_sup_below pseudo_complement)"], ["proof (state)\nthis:\n  - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * q\n  \\<le> - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p\n\ngoal (1 subgoal):\n 1. - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * (q \\<squnion> p)\n    \\<le> - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p", "thus \"- (q \\<squnion> p) \\<sqinter> r\\<^sup>T * (q \\<squnion> p) \\<le> - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p\""], ["proof (prove)\nusing this:\n  - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * q\n  \\<le> - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p\n\ngoal (1 subgoal):\n 1. - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * (q \\<squnion> p)\n    \\<le> - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p", "using 15 sup.absorb2"], ["proof (prove)\nusing this:\n  - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * q\n  \\<le> - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p\n  - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * (q \\<squnion> p) =\n  - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * q \\<squnion>\n  - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p\n  ?a \\<le> ?b \\<Longrightarrow> ?a \\<squnion> ?b = ?b\n\ngoal (1 subgoal):\n 1. - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * (q \\<squnion> p)\n    \\<le> - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p", "by force"], ["proof (state)\nthis:\n  - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * (q \\<squnion> p)\n  \\<le> - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p =\n  - (q \\<squnion> p) \\<sqinter> r\\<^sup>T * (q \\<squnion> p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal (1 subgoal):\n 1. (case (- (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p, q \\<squnion> p,\n           t \\<squnion> r \\<sqinter> q * p\\<^sup>T) of\n     (p, q, t) \\<Rightarrow>\n       card\n        {x. regular x \\<and>\n            x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)})\n    < n", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (case (- (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p, q \\<squnion> p,\n           t \\<squnion> r \\<sqinter> q * p\\<^sup>T) of\n     (p, q, t) \\<Rightarrow>\n       card\n        {x. regular x \\<and>\n            x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)})\n    < n", "proof clarsimp"], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     {x. regular x \\<and>\n         x \\<le> - q \\<and>\n         x \\<le> - p \\<and> x \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s)}\n    < n", "have \"card { x . regular x \\<and> x \\<le> -q \\<and> x \\<le> -p \\<and> x \\<le> --(r\\<^sup>T\\<^sup>\\<star> * s) } < card { x . regular x \\<and> x \\<le> --(-q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s) }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     {x. regular x \\<and>\n         x \\<le> - q \\<and>\n         x \\<le> - p \\<and> x \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s)}\n    < card\n       {x. regular x \\<and>\n           x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)}", "proof (rule psubset_card_mono)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite\n     {x. regular x \\<and>\n         x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)}\n 2. {x. regular x \\<and>\n        x \\<le> - q \\<and>\n        x \\<le> - p \\<and> x \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s)}\n    \\<subset> {x. regular x \\<and>\n                  x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)}", "show \"finite { x . regular x \\<and> x \\<le> --(-q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s) }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {x. regular x \\<and>\n         x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)}", "using finite_regular"], ["proof (prove)\nusing this:\n  finite {x. regular x}\n\ngoal (1 subgoal):\n 1. finite\n     {x. regular x \\<and>\n         x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)}", "by simp"], ["proof (state)\nthis:\n  finite\n   {x. regular x \\<and>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)}\n\ngoal (1 subgoal):\n 1. {x. regular x \\<and>\n        x \\<le> - q \\<and>\n        x \\<le> - p \\<and> x \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s)}\n    \\<subset> {x. regular x \\<and>\n                  x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)}", "show \"{ x . regular x \\<and> x \\<le> -q \\<and> x \\<le> -p \\<and> x \\<le> --(r\\<^sup>T\\<^sup>\\<star> * s) } \\<subset> { x . regular x \\<and> x \\<le> --(-q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s) }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. regular x \\<and>\n        x \\<le> - q \\<and>\n        x \\<le> - p \\<and> x \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s)}\n    \\<subset> {x. regular x \\<and>\n                  x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {x. regular x \\<and>\n        x \\<le> - q \\<and>\n        x \\<le> - p \\<and> x \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s)}\n    \\<subset> {x. regular x \\<and>\n                  x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)}", "have \"\\<forall>x . x \\<le> -q \\<and> x \\<le> --(r\\<^sup>T\\<^sup>\\<star> * s) \\<longrightarrow> x \\<le> --(-q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       x \\<le> - q \\<and>\n       x \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s) \\<longrightarrow>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)", "by auto"], ["proof (state)\nthis:\n  \\<forall>x.\n     x \\<le> - q \\<and>\n     x \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s) \\<longrightarrow>\n     x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)\n\ngoal (1 subgoal):\n 1. {x. regular x \\<and>\n        x \\<le> - q \\<and>\n        x \\<le> - p \\<and> x \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s)}\n    \\<subset> {x. regular x \\<and>\n                  x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)}", "hence 16: \"{ x . regular x \\<and> x \\<le> -q \\<and> x \\<le> -p \\<and> x \\<le> --(r\\<^sup>T\\<^sup>\\<star> * s) } \\<subseteq> { x . regular x \\<and> x \\<le> --(-q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s) }\""], ["proof (prove)\nusing this:\n  \\<forall>x.\n     x \\<le> - q \\<and>\n     x \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s) \\<longrightarrow>\n     x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)\n\ngoal (1 subgoal):\n 1. {x. regular x \\<and>\n        x \\<le> - q \\<and>\n        x \\<le> - p \\<and> x \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s)}\n    \\<subseteq> {x. regular x \\<and>\n                    x \\<le> - - (- q \\<sqinter>\n                                 r\\<^sup>T\\<^sup>\\<star> * s)}", "by blast"], ["proof (state)\nthis:\n  {x. regular x \\<and>\n      x \\<le> - q \\<and>\n      x \\<le> - p \\<and> x \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s)}\n  \\<subseteq> {x. regular x \\<and>\n                  x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)}\n\ngoal (1 subgoal):\n 1. {x. regular x \\<and>\n        x \\<le> - q \\<and>\n        x \\<le> - p \\<and> x \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s)}\n    \\<subset> {x. regular x \\<and>\n                  x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)}", "have 17: \"regular p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. regular p", "using 2 regular_conv_closed regular_mult_closed"], ["proof (prove)\nusing this:\n  ((regular r \\<and>\n    regular q \\<and>\n    vector q \\<and>\n    asymmetric t \\<and>\n    t \\<le> r \\<and>\n    t \\<le> q \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n    p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n   p \\<noteq> bot) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n  n\n  regular ?x \\<Longrightarrow> regular (?x\\<^sup>T)\n  \\<lbrakk>regular ?x; regular ?y\\<rbrakk>\n  \\<Longrightarrow> regular (?x * ?y)\n\ngoal (1 subgoal):\n 1. regular p", "by force"], ["proof (state)\nthis:\n  regular p\n\ngoal (1 subgoal):\n 1. {x. regular x \\<and>\n        x \\<le> - q \\<and>\n        x \\<le> - p \\<and> x \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s)}\n    \\<subset> {x. regular x \\<and>\n                  x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)}", "hence 18: \"\\<not> p \\<le> -p\""], ["proof (prove)\nusing this:\n  regular p\n\ngoal (1 subgoal):\n 1. \\<not> p \\<le> - p", "using 2"], ["proof (prove)\nusing this:\n  regular p\n  ((regular r \\<and>\n    regular q \\<and>\n    vector q \\<and>\n    asymmetric t \\<and>\n    t \\<le> r \\<and>\n    t \\<le> q \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n    p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n   p \\<noteq> bot) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n  n\n\ngoal (1 subgoal):\n 1. \\<not> p \\<le> - p", "by (metis inf.absorb1 pp_inf_p)"], ["proof (state)\nthis:\n  \\<not> p \\<le> - p\n\ngoal (1 subgoal):\n 1. {x. regular x \\<and>\n        x \\<le> - q \\<and>\n        x \\<le> - p \\<and> x \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s)}\n    \\<subset> {x. regular x \\<and>\n                  x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)}", "have 19: \"p \\<le> -q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<le> - q", "using 2"], ["proof (prove)\nusing this:\n  ((regular r \\<and>\n    regular q \\<and>\n    vector q \\<and>\n    asymmetric t \\<and>\n    t \\<le> r \\<and>\n    t \\<le> q \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n    p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n   p \\<noteq> bot) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n  n\n\ngoal (1 subgoal):\n 1. p \\<le> - q", "by simp"], ["proof (state)\nthis:\n  p \\<le> - q\n\ngoal (1 subgoal):\n 1. {x. regular x \\<and>\n        x \\<le> - q \\<and>\n        x \\<le> - p \\<and> x \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s)}\n    \\<subset> {x. regular x \\<and>\n                  x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)}", "have \"r\\<^sup>T * q \\<le> r\\<^sup>T\\<^sup>\\<star> * s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r\\<^sup>T * q \\<le> r\\<^sup>T\\<^sup>\\<star> * s", "using 2"], ["proof (prove)\nusing this:\n  ((regular r \\<and>\n    regular q \\<and>\n    vector q \\<and>\n    asymmetric t \\<and>\n    t \\<le> r \\<and>\n    t \\<le> q \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n    p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n   p \\<noteq> bot) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n  n\n\ngoal (1 subgoal):\n 1. r\\<^sup>T * q \\<le> r\\<^sup>T\\<^sup>\\<star> * s", "by (metis (no_types, lifting) comp_associative conv_dist_sup mult_left_isotone star.circ_increasing star.circ_mult_upper_bound star.circ_sub_dist sup_left_divisibility)"], ["proof (state)\nthis:\n  r\\<^sup>T * q \\<le> r\\<^sup>T\\<^sup>\\<star> * s\n\ngoal (1 subgoal):\n 1. {x. regular x \\<and>\n        x \\<le> - q \\<and>\n        x \\<le> - p \\<and> x \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s)}\n    \\<subset> {x. regular x \\<and>\n                  x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)}", "hence 20: \"p \\<le> --(r\\<^sup>T\\<^sup>\\<star> * s)\""], ["proof (prove)\nusing this:\n  r\\<^sup>T * q \\<le> r\\<^sup>T\\<^sup>\\<star> * s\n\ngoal (1 subgoal):\n 1. p \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s)", "using 2 le_infI2 order_lesseq_imp pp_increasing"], ["proof (prove)\nusing this:\n  r\\<^sup>T * q \\<le> r\\<^sup>T\\<^sup>\\<star> * s\n  ((regular r \\<and>\n    regular q \\<and>\n    vector q \\<and>\n    asymmetric t \\<and>\n    t \\<le> r \\<and>\n    t \\<le> q \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n    p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n   p \\<noteq> bot) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n  n\n  ?b \\<le> ?x \\<Longrightarrow> ?a \\<sqinter> ?b \\<le> ?x\n  (\\<forall>z\\<ge>?x. ?y \\<le> z) = (?y \\<le> ?x)\n  ?x \\<le> - - ?x\n\ngoal (1 subgoal):\n 1. p \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s)", "by blast"], ["proof (state)\nthis:\n  p \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s)\n\ngoal (1 subgoal):\n 1. {x. regular x \\<and>\n        x \\<le> - q \\<and>\n        x \\<le> - p \\<and> x \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s)}\n    \\<subset> {x. regular x \\<and>\n                  x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)}", "hence 21: \"p \\<le> --(-q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)\""], ["proof (prove)\nusing this:\n  p \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s)\n\ngoal (1 subgoal):\n 1. p \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)", "using 2"], ["proof (prove)\nusing this:\n  p \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s)\n  ((regular r \\<and>\n    regular q \\<and>\n    vector q \\<and>\n    asymmetric t \\<and>\n    t \\<le> r \\<and>\n    t \\<le> q \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n    p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n   p \\<noteq> bot) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n  n\n\ngoal (1 subgoal):\n 1. p \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)", "by simp"], ["proof (state)\nthis:\n  p \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)\n\ngoal (1 subgoal):\n 1. {x. regular x \\<and>\n        x \\<le> - q \\<and>\n        x \\<le> - p \\<and> x \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s)}\n    \\<subset> {x. regular x \\<and>\n                  x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. regular x \\<and>\n        x \\<le> - q \\<and>\n        x \\<le> - p \\<and> x \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s)}\n    \\<subset> {x. regular x \\<and>\n                  x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)}", "using 16 17 18 19 20 21"], ["proof (prove)\nusing this:\n  {x. regular x \\<and>\n      x \\<le> - q \\<and>\n      x \\<le> - p \\<and> x \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s)}\n  \\<subseteq> {x. regular x \\<and>\n                  x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)}\n  regular p\n  \\<not> p \\<le> - p\n  p \\<le> - q\n  p \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s)\n  p \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)\n\ngoal (1 subgoal):\n 1. {x. regular x \\<and>\n        x \\<le> - q \\<and>\n        x \\<le> - p \\<and> x \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s)}\n    \\<subset> {x. regular x \\<and>\n                  x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)}", "by blast"], ["proof (state)\nthis:\n  {x. regular x \\<and>\n      x \\<le> - q \\<and>\n      x \\<le> - p \\<and> x \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s)}\n  \\<subset> {x. regular x \\<and>\n                x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {x. regular x \\<and>\n      x \\<le> - q \\<and>\n      x \\<le> - p \\<and> x \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s)}\n  \\<subset> {x. regular x \\<and>\n                x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card\n   {x. regular x \\<and>\n       x \\<le> - q \\<and>\n       x \\<le> - p \\<and> x \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s)}\n  < card\n     {x. regular x \\<and>\n         x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)}\n\ngoal (1 subgoal):\n 1. card\n     {x. regular x \\<and>\n         x \\<le> - q \\<and>\n         x \\<le> - p \\<and> x \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s)}\n    < n", "thus \"card { x . regular x \\<and> x \\<le> -q \\<and> x \\<le> -p \\<and> x \\<le> --(r\\<^sup>T\\<^sup>\\<star> * s) } < n\""], ["proof (prove)\nusing this:\n  card\n   {x. regular x \\<and>\n       x \\<le> - q \\<and>\n       x \\<le> - p \\<and> x \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s)}\n  < card\n     {x. regular x \\<and>\n         x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)}\n\ngoal (1 subgoal):\n 1. card\n     {x. regular x \\<and>\n         x \\<le> - q \\<and>\n         x \\<le> - p \\<and> x \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s)}\n    < n", "using 2"], ["proof (prove)\nusing this:\n  card\n   {x. regular x \\<and>\n       x \\<le> - q \\<and>\n       x \\<le> - p \\<and> x \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s)}\n  < card\n     {x. regular x \\<and>\n         x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)}\n  ((regular r \\<and>\n    regular q \\<and>\n    vector q \\<and>\n    asymmetric t \\<and>\n    t \\<le> r \\<and>\n    t \\<le> q \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n    p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n   p \\<noteq> bot) \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)} =\n  n\n\ngoal (1 subgoal):\n 1. card\n     {x. regular x \\<and>\n         x \\<le> - q \\<and>\n         x \\<le> - p \\<and> x \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s)}\n    < n", "by auto"], ["proof (state)\nthis:\n  card\n   {x. regular x \\<and>\n       x \\<le> - q \\<and>\n       x \\<le> - p \\<and> x \\<le> - - (r\\<^sup>T\\<^sup>\\<star> * s)}\n  < n\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (- (q \\<squnion> p) \\<sqinter> r\\<^sup>T * p, q \\<squnion> p,\n   t \\<squnion> r \\<sqinter> q * p\\<^sup>T)\n  \\<in> {trip.\n         (case trip of\n          (p, q, t) \\<Rightarrow>\n            regular r \\<and>\n            regular q \\<and>\n            vector q \\<and>\n            asymmetric t \\<and>\n            t \\<le> r \\<and>\n            t \\<le> q \\<and>\n            q = t\\<^sup>T\\<^sup>\\<star> * s \\<and>\n            p = - q \\<sqinter> r\\<^sup>T * q) \\<and>\n         (case trip of\n          (p, q, t) \\<Rightarrow>\n            card\n             {x. regular x \\<and>\n                 x \\<le> - - (- q \\<sqinter> r\\<^sup>T\\<^sup>\\<star> * s)})\n         < n}\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Theorem 18\\<close>"], ["", "lemma bfs_reachability_exists:\n  \"regular r \\<and> regular s \\<and> vector s \\<Longrightarrow> \\<exists>t . asymmetric t \\<and> t \\<le> r \\<and> t\\<^sup>T\\<^sup>\\<star> * s = r\\<^sup>T\\<^sup>\\<star> * s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. regular r \\<and> regular s \\<and> vector s \\<Longrightarrow>\n    \\<exists>t.\n       asymmetric t \\<and>\n       t \\<le> r \\<and>\n       t\\<^sup>T\\<^sup>\\<star> * s = r\\<^sup>T\\<^sup>\\<star> * s", "using tc_extract_function bfs_reachability"], ["proof (prove)\nusing this:\n  [?p] \n   ?c \n   [?q] \\<Longrightarrow>\n  \\<exists>f. \\<forall>s. s \\<in> ?p \\<longrightarrow> f s \\<in> ?q\n  [regular ?r \\<and> regular ?s \\<and> vector ?s] \n   t := bot;\n   q := ?s;\n   p := - ?s \\<sqinter> ?r\\<^sup>T * ?s;\n   WHILE p \\<noteq> bot\n    INV {regular ?r \\<and>\n         regular q \\<and>\n         vector q \\<and>\n         asymmetric t \\<and>\n         t \\<le> ?r \\<and>\n         t \\<le> q \\<and>\n         q = t\\<^sup>T\\<^sup>\\<star> * ?s \\<and>\n         p = - q \\<sqinter> ?r\\<^sup>T * q} \n    VAR {\\<lambda>(p, q, t).\n            card\n             {x. regular x \\<and>\n                 x \\<le> - - (- q \\<sqinter>\n                              ?r\\<^sup>T\\<^sup>\\<star> * ?s)}} \n    DO t := t \\<squnion> ?r \\<sqinter> q * p\\<^sup>T;\n       q := q \\<squnion> p; p := - q \\<sqinter> ?r\\<^sup>T * p \n    OD \n   [asymmetric t \\<and>\n    t \\<le> ?r \\<and>\n    q = t\\<^sup>T\\<^sup>\\<star> * ?s \\<and>\n    q = ?r\\<^sup>T\\<^sup>\\<star> * ?s]\n\ngoal (1 subgoal):\n 1. regular r \\<and> regular s \\<and> vector s \\<Longrightarrow>\n    \\<exists>t.\n       asymmetric t \\<and>\n       t \\<le> r \\<and>\n       t\\<^sup>T\\<^sup>\\<star> * s = r\\<^sup>T\\<^sup>\\<star> * s", "by blast"], ["", "text \\<open>Theorem 17\\<close>"], ["", "lemma orientable_path:\n  \"arc x \\<Longrightarrow> x \\<le> --y\\<^sup>\\<star> \\<Longrightarrow> \\<exists>z . z \\<le> y \\<and> asymmetric z \\<and> x \\<le> --z\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>arc x; x \\<le> - - y\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>z\\<le>y.\n                         asymmetric z \\<and> x \\<le> - - z\\<^sup>\\<star>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>arc x; x \\<le> - - y\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>z\\<le>y.\n                         asymmetric z \\<and> x \\<le> - - z\\<^sup>\\<star>", "assume 1: \"arc x\" and 2: \"x \\<le> --y\\<^sup>\\<star>\""], ["proof (state)\nthis:\n  arc x\n  x \\<le> - - y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>arc x; x \\<le> - - y\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>z\\<le>y.\n                         asymmetric z \\<and> x \\<le> - - z\\<^sup>\\<star>", "hence \"regular (--y) \\<and> regular (x * top) \\<and> vector (x * top)\""], ["proof (prove)\nusing this:\n  arc x\n  x \\<le> - - y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. regular (- - y) \\<and> regular (x * top) \\<and> vector (x * top)", "using bijective_regular mult_assoc"], ["proof (prove)\nusing this:\n  arc x\n  x \\<le> - - y\\<^sup>\\<star>\n  bijective ?x \\<Longrightarrow> regular ?x\n  ?a * ?b * ?c = ?a * (?b * ?c)\n\ngoal (1 subgoal):\n 1. regular (- - y) \\<and> regular (x * top) \\<and> vector (x * top)", "by auto"], ["proof (state)\nthis:\n  regular (- - y) \\<and> regular (x * top) \\<and> vector (x * top)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>arc x; x \\<le> - - y\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>z\\<le>y.\n                         asymmetric z \\<and> x \\<le> - - z\\<^sup>\\<star>", "from this"], ["proof (chain)\npicking this:\n  regular (- - y) \\<and> regular (x * top) \\<and> vector (x * top)", "obtain t where 3: \"asymmetric t \\<and> t \\<le> --y \\<and> t\\<^sup>T\\<^sup>\\<star> * (x * top) = (--y)\\<^sup>T\\<^sup>\\<star> * (x * top)\""], ["proof (prove)\nusing this:\n  regular (- - y) \\<and> regular (x * top) \\<and> vector (x * top)\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        asymmetric t \\<and>\n        t \\<le> - - y \\<and>\n        t\\<^sup>T\\<^sup>\\<star> * (x * top) =\n        (- - y)\\<^sup>T\\<^sup>\\<star> * (x * top) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using bfs_reachability_exists"], ["proof (prove)\nusing this:\n  regular (- - y) \\<and> regular (x * top) \\<and> vector (x * top)\n  regular ?r \\<and> regular ?s \\<and> vector ?s \\<Longrightarrow>\n  \\<exists>t.\n     asymmetric t \\<and>\n     t \\<le> ?r \\<and>\n     t\\<^sup>T\\<^sup>\\<star> * ?s = ?r\\<^sup>T\\<^sup>\\<star> * ?s\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        asymmetric t \\<and>\n        t \\<le> - - y \\<and>\n        t\\<^sup>T\\<^sup>\\<star> * (x * top) =\n        (- - y)\\<^sup>T\\<^sup>\\<star> * (x * top) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  asymmetric t \\<and>\n  t \\<le> - - y \\<and>\n  t\\<^sup>T\\<^sup>\\<star> * (x * top) =\n  (- - y)\\<^sup>T\\<^sup>\\<star> * (x * top)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>arc x; x \\<le> - - y\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>z\\<le>y.\n                         asymmetric z \\<and> x \\<le> - - z\\<^sup>\\<star>", "let ?z = \"t \\<sqinter> y\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>arc x; x \\<le> - - y\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>z\\<le>y.\n                         asymmetric z \\<and> x \\<le> - - z\\<^sup>\\<star>", "have \"x\\<^sup>T * top * x\\<^sup>T \\<le> (--y)\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>T * top * x\\<^sup>T \\<le> (- - y)\\<^sup>T\\<^sup>\\<star>", "using 1 2"], ["proof (prove)\nusing this:\n  arc x\n  x \\<le> - - y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x\\<^sup>T * top * x\\<^sup>T \\<le> (- - y)\\<^sup>T\\<^sup>\\<star>", "by (metis arc_top_arc conv_complement conv_isotone conv_star_commute arc_conv_closed pp_dist_star)"], ["proof (state)\nthis:\n  x\\<^sup>T * top * x\\<^sup>T \\<le> (- - y)\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>arc x; x \\<le> - - y\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>z\\<le>y.\n                         asymmetric z \\<and> x \\<le> - - z\\<^sup>\\<star>", "hence \"x\\<^sup>T \\<le> (--y)\\<^sup>T\\<^sup>\\<star> * x * top\""], ["proof (prove)\nusing this:\n  x\\<^sup>T * top * x\\<^sup>T \\<le> (- - y)\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x\\<^sup>T \\<le> (- - y)\\<^sup>T\\<^sup>\\<star> * x * top", "using 1 comp_associative conv_dist_comp shunt_bijective"], ["proof (prove)\nusing this:\n  x\\<^sup>T * top * x\\<^sup>T \\<le> (- - y)\\<^sup>T\\<^sup>\\<star>\n  arc x\n  ?x * ?y * ?z = ?x * (?y * ?z)\n  (?x * ?y)\\<^sup>T = ?y\\<^sup>T * ?x\\<^sup>T\n  bijective ?z \\<Longrightarrow>\n  (?x \\<le> ?y * ?z) = (?x * ?z\\<^sup>T \\<le> ?y)\n\ngoal (1 subgoal):\n 1. x\\<^sup>T \\<le> (- - y)\\<^sup>T\\<^sup>\\<star> * x * top", "by force"], ["proof (state)\nthis:\n  x\\<^sup>T \\<le> (- - y)\\<^sup>T\\<^sup>\\<star> * x * top\n\ngoal (1 subgoal):\n 1. \\<lbrakk>arc x; x \\<le> - - y\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>z\\<le>y.\n                         asymmetric z \\<and> x \\<le> - - z\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  x\\<^sup>T \\<le> (- - y)\\<^sup>T\\<^sup>\\<star> * x * top\n\ngoal (1 subgoal):\n 1. \\<lbrakk>arc x; x \\<le> - - y\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>z\\<le>y.\n                         asymmetric z \\<and> x \\<le> - - z\\<^sup>\\<star>", "have \"... = t\\<^sup>T\\<^sup>\\<star> * x * top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (- - y)\\<^sup>T\\<^sup>\\<star> * x * top =\n    t\\<^sup>T\\<^sup>\\<star> * x * top", "using 3 mult_assoc"], ["proof (prove)\nusing this:\n  asymmetric t \\<and>\n  t \\<le> - - y \\<and>\n  t\\<^sup>T\\<^sup>\\<star> * (x * top) =\n  (- - y)\\<^sup>T\\<^sup>\\<star> * (x * top)\n  ?a * ?b * ?c = ?a * (?b * ?c)\n\ngoal (1 subgoal):\n 1. (- - y)\\<^sup>T\\<^sup>\\<star> * x * top =\n    t\\<^sup>T\\<^sup>\\<star> * x * top", "by force"], ["proof (state)\nthis:\n  (- - y)\\<^sup>T\\<^sup>\\<star> * x * top =\n  t\\<^sup>T\\<^sup>\\<star> * x * top\n\ngoal (1 subgoal):\n 1. \\<lbrakk>arc x; x \\<le> - - y\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>z\\<le>y.\n                         asymmetric z \\<and> x \\<le> - - z\\<^sup>\\<star>", "finally"], ["proof (chain)\npicking this:\n  x\\<^sup>T \\<le> t\\<^sup>T\\<^sup>\\<star> * x * top", "have \"x\\<^sup>T * top * x\\<^sup>T \\<le> t\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  x\\<^sup>T \\<le> t\\<^sup>T\\<^sup>\\<star> * x * top\n\ngoal (1 subgoal):\n 1. x\\<^sup>T * top * x\\<^sup>T \\<le> t\\<^sup>T\\<^sup>\\<star>", "using 1 comp_associative conv_dist_comp shunt_bijective"], ["proof (prove)\nusing this:\n  x\\<^sup>T \\<le> t\\<^sup>T\\<^sup>\\<star> * x * top\n  arc x\n  ?x * ?y * ?z = ?x * (?y * ?z)\n  (?x * ?y)\\<^sup>T = ?y\\<^sup>T * ?x\\<^sup>T\n  bijective ?z \\<Longrightarrow>\n  (?x \\<le> ?y * ?z) = (?x * ?z\\<^sup>T \\<le> ?y)\n\ngoal (1 subgoal):\n 1. x\\<^sup>T * top * x\\<^sup>T \\<le> t\\<^sup>T\\<^sup>\\<star>", "by force"], ["proof (state)\nthis:\n  x\\<^sup>T * top * x\\<^sup>T \\<le> t\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>arc x; x \\<le> - - y\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>z\\<le>y.\n                         asymmetric z \\<and> x \\<le> - - z\\<^sup>\\<star>", "hence \"x\\<^sup>T \\<le> t\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  x\\<^sup>T * top * x\\<^sup>T \\<le> t\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x\\<^sup>T \\<le> t\\<^sup>T\\<^sup>\\<star>", "using 1"], ["proof (prove)\nusing this:\n  x\\<^sup>T * top * x\\<^sup>T \\<le> t\\<^sup>T\\<^sup>\\<star>\n  arc x\n\ngoal (1 subgoal):\n 1. x\\<^sup>T \\<le> t\\<^sup>T\\<^sup>\\<star>", "by (metis arc_top_arc arc_conv_closed)"], ["proof (state)\nthis:\n  x\\<^sup>T \\<le> t\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>arc x; x \\<le> - - y\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>z\\<le>y.\n                         asymmetric z \\<and> x \\<le> - - z\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  x\\<^sup>T \\<le> t\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>arc x; x \\<le> - - y\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>z\\<le>y.\n                         asymmetric z \\<and> x \\<le> - - z\\<^sup>\\<star>", "have \"... \\<le> (--?z)\\<^sup>T\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t\\<^sup>T\\<^sup>\\<star>\n    \\<le> (- - (t \\<sqinter> y))\\<^sup>T\\<^sup>\\<star>", "using 3"], ["proof (prove)\nusing this:\n  asymmetric t \\<and>\n  t \\<le> - - y \\<and>\n  t\\<^sup>T\\<^sup>\\<star> * (x * top) =\n  (- - y)\\<^sup>T\\<^sup>\\<star> * (x * top)\n\ngoal (1 subgoal):\n 1. t\\<^sup>T\\<^sup>\\<star>\n    \\<le> (- - (t \\<sqinter> y))\\<^sup>T\\<^sup>\\<star>", "by (metis conv_order inf.orderE inf_pp_semi_commute star_isotone)"], ["proof (state)\nthis:\n  t\\<^sup>T\\<^sup>\\<star> \\<le> (- - (t \\<sqinter> y))\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>arc x; x \\<le> - - y\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>z\\<le>y.\n                         asymmetric z \\<and> x \\<le> - - z\\<^sup>\\<star>", "finally"], ["proof (chain)\npicking this:\n  x\\<^sup>T \\<le> (- - (t \\<sqinter> y))\\<^sup>T\\<^sup>\\<star>", "have \"x \\<le> --?z\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  x\\<^sup>T \\<le> (- - (t \\<sqinter> y))\\<^sup>T\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x \\<le> - - (t \\<sqinter> y)\\<^sup>\\<star>", "using conv_order conv_star_commute pp_dist_star"], ["proof (prove)\nusing this:\n  x\\<^sup>T \\<le> (- - (t \\<sqinter> y))\\<^sup>T\\<^sup>\\<star>\n  (?x \\<le> ?y) = (?x\\<^sup>T \\<le> ?y\\<^sup>T)\n  ?x\\<^sup>\\<star>\\<^sup>T = ?x\\<^sup>T\\<^sup>\\<star>\n  - - ?x\\<^sup>\\<star> = components ?x\n\ngoal (1 subgoal):\n 1. x \\<le> - - (t \\<sqinter> y)\\<^sup>\\<star>", "by fastforce"], ["proof (state)\nthis:\n  x \\<le> - - (t \\<sqinter> y)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>arc x; x \\<le> - - y\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>z\\<le>y.\n                         asymmetric z \\<and> x \\<le> - - z\\<^sup>\\<star>", "thus \"\\<exists>z . z \\<le> y \\<and> asymmetric z \\<and> x \\<le> --z\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  x \\<le> - - (t \\<sqinter> y)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<exists>z\\<le>y. asymmetric z \\<and> x \\<le> - - z\\<^sup>\\<star>", "using 3 asymmetric_inf_closed inf.cobounded2"], ["proof (prove)\nusing this:\n  x \\<le> - - (t \\<sqinter> y)\\<^sup>\\<star>\n  asymmetric t \\<and>\n  t \\<le> - - y \\<and>\n  t\\<^sup>T\\<^sup>\\<star> * (x * top) =\n  (- - y)\\<^sup>T\\<^sup>\\<star> * (x * top)\n  asymmetric ?x \\<Longrightarrow> asymmetric (?x \\<sqinter> ?y)\n  ?a \\<sqinter> ?b \\<le> ?b\n\ngoal (1 subgoal):\n 1. \\<exists>z\\<le>y. asymmetric z \\<and> x \\<le> - - z\\<^sup>\\<star>", "by blast"], ["proof (state)\nthis:\n  \\<exists>z\\<le>y. asymmetric z \\<and> x \\<le> - - z\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Extending partial orders to linear orders\\<close>"], ["", "text \\<open>\nWe prove total correctness of Szpilrajn's algorithm \\cite{Szpilrajn1930}.\nA partial-correctness proof using Prover9 is given in \\cite{BerghammerStruth2010}.\n\\<close>"], ["", "theorem szpilrajn:\n  \"VARS e t\n  [ order p \\<and> regular p ]\n  t := p;\n  WHILE t \\<squnion> t\\<^sup>T \\<noteq> top\n    INV { order t \\<and> regular t \\<and> p \\<le> t }\n    VAR { card { x . regular x \\<and> x \\<le> -(t \\<squnion> t\\<^sup>T) } }\n     DO e := choose_arc (-(t \\<squnion> t\\<^sup>T));\n        t := t \\<squnion> t * e * t\n     OD\n  [ linear_order t \\<and> p \\<le> t ]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [order p \\<and> regular p] \n     t := p;\n     WHILE \\<not> linear t INV {order t \\<and> regular t \\<and> p \\<le> t} \n      VAR {\\<lambda>(e, t).\n              card\n               {x. regular x \\<and> x \\<le> - (t \\<squnion> t\\<^sup>T)}} \n      DO e := choose_arc (- (t \\<squnion> t\\<^sup>T));\n         t := t \\<squnion> t * e * t \n      OD \n     [linear_orderable_1 t \\<and> p \\<le> t]", "proof vcg_tc_simp"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       reflexive t \\<and>\n       transitive t \\<and>\n       antisymmetric t \\<and>\n       regular t \\<and> p \\<le> t \\<and> \\<not> linear t \\<Longrightarrow>\n       reflexive\n        (t \\<squnion>\n         t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       transitive\n        (t \\<squnion>\n         t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       antisymmetric\n        (t \\<squnion>\n         t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t =\n       t \\<squnion>\n       - - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       p \\<le> t \\<squnion>\n               t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t \\<and>\n       card\n        {x. regular x \\<and>\n            x \\<le> - t \\<and>\n            x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                       t) \\<and>\n            x \\<le> - (t \\<squnion>\n                       t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                       t)\\<^sup>T}\n       < card {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       reflexive t \\<and>\n       transitive t \\<and>\n       antisymmetric t \\<and>\n       regular t \\<and> p \\<le> t \\<and> \\<not> linear t \\<Longrightarrow>\n       reflexive\n        (t \\<squnion>\n         t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       transitive\n        (t \\<squnion>\n         t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       antisymmetric\n        (t \\<squnion>\n         t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t =\n       t \\<squnion>\n       - - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       p \\<le> t \\<squnion>\n               t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t \\<and>\n       card\n        {x. regular x \\<and>\n            x \\<le> - t \\<and>\n            x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                       t) \\<and>\n            x \\<le> - (t \\<squnion>\n                       t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                       t)\\<^sup>T}\n       < card {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "let ?e = \"choose_arc (-t \\<sqinter> -t\\<^sup>T)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       reflexive t \\<and>\n       transitive t \\<and>\n       antisymmetric t \\<and>\n       regular t \\<and> p \\<le> t \\<and> \\<not> linear t \\<Longrightarrow>\n       reflexive\n        (t \\<squnion>\n         t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       transitive\n        (t \\<squnion>\n         t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       antisymmetric\n        (t \\<squnion>\n         t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t =\n       t \\<squnion>\n       - - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       p \\<le> t \\<squnion>\n               t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t \\<and>\n       card\n        {x. regular x \\<and>\n            x \\<le> - t \\<and>\n            x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                       t) \\<and>\n            x \\<le> - (t \\<squnion>\n                       t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                       t)\\<^sup>T}\n       < card {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "let ?tet = \"t * ?e * t\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       reflexive t \\<and>\n       transitive t \\<and>\n       antisymmetric t \\<and>\n       regular t \\<and> p \\<le> t \\<and> \\<not> linear t \\<Longrightarrow>\n       reflexive\n        (t \\<squnion>\n         t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       transitive\n        (t \\<squnion>\n         t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       antisymmetric\n        (t \\<squnion>\n         t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t =\n       t \\<squnion>\n       - - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       p \\<le> t \\<squnion>\n               t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t \\<and>\n       card\n        {x. regular x \\<and>\n            x \\<le> - t \\<and>\n            x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                       t) \\<and>\n            x \\<le> - (t \\<squnion>\n                       t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                       t)\\<^sup>T}\n       < card {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "let ?t = \"t \\<squnion> ?tet\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       reflexive t \\<and>\n       transitive t \\<and>\n       antisymmetric t \\<and>\n       regular t \\<and> p \\<le> t \\<and> \\<not> linear t \\<Longrightarrow>\n       reflexive\n        (t \\<squnion>\n         t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       transitive\n        (t \\<squnion>\n         t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       antisymmetric\n        (t \\<squnion>\n         t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t =\n       t \\<squnion>\n       - - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       p \\<le> t \\<squnion>\n               t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t \\<and>\n       card\n        {x. regular x \\<and>\n            x \\<le> - t \\<and>\n            x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                       t) \\<and>\n            x \\<le> - (t \\<squnion>\n                       t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                       t)\\<^sup>T}\n       < card {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "let ?s1 = \"{ x . regular x \\<and> x \\<le> -t \\<and> x \\<le> -?tet \\<and> x \\<le> -?t\\<^sup>T }\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       reflexive t \\<and>\n       transitive t \\<and>\n       antisymmetric t \\<and>\n       regular t \\<and> p \\<le> t \\<and> \\<not> linear t \\<Longrightarrow>\n       reflexive\n        (t \\<squnion>\n         t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       transitive\n        (t \\<squnion>\n         t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       antisymmetric\n        (t \\<squnion>\n         t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t =\n       t \\<squnion>\n       - - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       p \\<le> t \\<squnion>\n               t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t \\<and>\n       card\n        {x. regular x \\<and>\n            x \\<le> - t \\<and>\n            x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                       t) \\<and>\n            x \\<le> - (t \\<squnion>\n                       t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                       t)\\<^sup>T}\n       < card {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "let ?s2 = \"{ x . regular x \\<and> x \\<le> -t \\<and> x \\<le> -t\\<^sup>T }\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       reflexive t \\<and>\n       transitive t \\<and>\n       antisymmetric t \\<and>\n       regular t \\<and> p \\<le> t \\<and> \\<not> linear t \\<Longrightarrow>\n       reflexive\n        (t \\<squnion>\n         t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       transitive\n        (t \\<squnion>\n         t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       antisymmetric\n        (t \\<squnion>\n         t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t =\n       t \\<squnion>\n       - - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       p \\<le> t \\<squnion>\n               t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t \\<and>\n       card\n        {x. regular x \\<and>\n            x \\<le> - t \\<and>\n            x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                       t) \\<and>\n            x \\<le> - (t \\<squnion>\n                       t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                       t)\\<^sup>T}\n       < card {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "assume 1: \"reflexive t \\<and> transitive t \\<and> antisymmetric t \\<and> regular t \\<and> p \\<le> t \\<and> \\<not> linear t\""], ["proof (state)\nthis:\n  reflexive t \\<and>\n  transitive t \\<and>\n  antisymmetric t \\<and> regular t \\<and> p \\<le> t \\<and> \\<not> linear t\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       reflexive t \\<and>\n       transitive t \\<and>\n       antisymmetric t \\<and>\n       regular t \\<and> p \\<le> t \\<and> \\<not> linear t \\<Longrightarrow>\n       reflexive\n        (t \\<squnion>\n         t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       transitive\n        (t \\<squnion>\n         t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       antisymmetric\n        (t \\<squnion>\n         t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t =\n       t \\<squnion>\n       - - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       p \\<le> t \\<squnion>\n               t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t \\<and>\n       card\n        {x. regular x \\<and>\n            x \\<le> - t \\<and>\n            x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                       t) \\<and>\n            x \\<le> - (t \\<squnion>\n                       t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                       t)\\<^sup>T}\n       < card {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "show \"reflexive ?t \\<and>\n        transitive ?t \\<and>\n        antisymmetric ?t \\<and>\n        ?t = t \\<squnion> --?tet \\<and>\n        p \\<le> ?t \\<and>\n        card ?s1 < card ?s2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reflexive\n     (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n    transitive\n     (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n    antisymmetric\n     (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n    t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t =\n    t \\<squnion>\n    - - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n    p \\<le> t \\<squnion>\n            t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t \\<and>\n    card\n     {x. regular x \\<and>\n         x \\<le> - t \\<and>\n         x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n         x \\<le> - (t \\<squnion>\n                    t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                    t)\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "proof (intro conjI)"], ["proof (state)\ngoal (6 subgoals):\n 1. reflexive (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 2. transitive\n     (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 3. antisymmetric\n     (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 4. t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t =\n    t \\<squnion> - - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 5. p \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n 6. card\n     {x. regular x \\<and>\n         x \\<le> - t \\<and>\n         x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n         x \\<le> - (t \\<squnion>\n                    t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                    t)\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "show \"reflexive ?t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reflexive (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)", "using 1"], ["proof (prove)\nusing this:\n  reflexive t \\<and>\n  transitive t \\<and>\n  antisymmetric t \\<and> regular t \\<and> p \\<le> t \\<and> \\<not> linear t\n\ngoal (1 subgoal):\n 1. reflexive (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)", "by (simp add: sup.coboundedI1)"], ["proof (state)\nthis:\n  reflexive (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n\ngoal (5 subgoals):\n 1. transitive\n     (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 2. antisymmetric\n     (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 3. t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t =\n    t \\<squnion> - - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 4. p \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n 5. card\n     {x. regular x \\<and>\n         x \\<le> - t \\<and>\n         x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n         x \\<le> - (t \\<squnion>\n                    t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                    t)\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "have \"-t \\<sqinter> -t\\<^sup>T \\<noteq> bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - t \\<sqinter> - t\\<^sup>T \\<noteq> bot", "using 1 regular_closed_top regular_conv_closed"], ["proof (prove)\nusing this:\n  reflexive t \\<and>\n  transitive t \\<and>\n  antisymmetric t \\<and> regular t \\<and> p \\<le> t \\<and> \\<not> linear t\n  regular top\n  regular ?x \\<Longrightarrow> regular (?x\\<^sup>T)\n\ngoal (1 subgoal):\n 1. - t \\<sqinter> - t\\<^sup>T \\<noteq> bot", "by force"], ["proof (state)\nthis:\n  - t \\<sqinter> - t\\<^sup>T \\<noteq> bot\n\ngoal (5 subgoals):\n 1. transitive\n     (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 2. antisymmetric\n     (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 3. t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t =\n    t \\<squnion> - - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 4. p \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n 5. card\n     {x. regular x \\<and>\n         x \\<le> - t \\<and>\n         x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n         x \\<le> - (t \\<squnion>\n                    t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                    t)\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "hence 2: \"arc ?e\""], ["proof (prove)\nusing this:\n  - t \\<sqinter> - t\\<^sup>T \\<noteq> bot\n\ngoal (1 subgoal):\n 1. arc (choose_arc (- t \\<sqinter> - t\\<^sup>T))", "using choose_arc_arc"], ["proof (prove)\nusing this:\n  - t \\<sqinter> - t\\<^sup>T \\<noteq> bot\n  ?x \\<noteq> bot \\<Longrightarrow> arc (choose_arc ?x)\n\ngoal (1 subgoal):\n 1. arc (choose_arc (- t \\<sqinter> - t\\<^sup>T))", "by blast"], ["proof (state)\nthis:\n  arc (choose_arc (- t \\<sqinter> - t\\<^sup>T))\n\ngoal (5 subgoals):\n 1. transitive\n     (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 2. antisymmetric\n     (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 3. t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t =\n    t \\<squnion> - - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 4. p \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n 5. card\n     {x. regular x \\<and>\n         x \\<le> - t \\<and>\n         x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n         x \\<le> - (t \\<squnion>\n                    t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                    t)\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "have \"?t * ?t = t * t \\<squnion> t * ?tet \\<squnion> ?tet * t \\<squnion> ?tet * ?tet\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) *\n    (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) =\n    t * t \\<squnion>\n    t * (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<squnion>\n    t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t * t \\<squnion>\n    t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t *\n    (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)", "by (smt (z3) mult_left_dist_sup mult_right_dist_sup sup_assoc)"], ["proof (state)\nthis:\n  (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) *\n  (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) =\n  t * t \\<squnion>\n  t * (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<squnion>\n  t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t * t \\<squnion>\n  t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t *\n  (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n\ngoal (5 subgoals):\n 1. transitive\n     (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 2. antisymmetric\n     (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 3. t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t =\n    t \\<squnion> - - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 4. p \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n 5. card\n     {x. regular x \\<and>\n         x \\<le> - t \\<and>\n         x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n         x \\<le> - (t \\<squnion>\n                    t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                    t)\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "also"], ["proof (state)\nthis:\n  (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) *\n  (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) =\n  t * t \\<squnion>\n  t * (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<squnion>\n  t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t * t \\<squnion>\n  t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t *\n  (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n\ngoal (5 subgoals):\n 1. transitive\n     (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 2. antisymmetric\n     (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 3. t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t =\n    t \\<squnion> - - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 4. p \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n 5. card\n     {x. regular x \\<and>\n         x \\<le> - t \\<and>\n         x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n         x \\<le> - (t \\<squnion>\n                    t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                    t)\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "have \"... \\<le> ?t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t * t \\<squnion>\n    t * (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<squnion>\n    t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t * t \\<squnion>\n    t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t *\n    (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n    \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t", "proof (intro sup_least)"], ["proof (state)\ngoal (4 subgoals):\n 1. t * t \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n 2. t * (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n    \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n 3. t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t * t\n    \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n 4. t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t *\n    (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n    \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t", "show \"t * t \\<le> ?t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t * t \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t", "using 1 sup.coboundedI1"], ["proof (prove)\nusing this:\n  reflexive t \\<and>\n  transitive t \\<and>\n  antisymmetric t \\<and> regular t \\<and> p \\<le> t \\<and> \\<not> linear t\n  ?c \\<le> ?a \\<Longrightarrow> ?c \\<le> ?a \\<squnion> ?b\n\ngoal (1 subgoal):\n 1. t * t \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t", "by blast"], ["proof (state)\nthis:\n  t * t \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n\ngoal (3 subgoals):\n 1. t * (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n    \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n 2. t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t * t\n    \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n 3. t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t *\n    (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n    \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t", "show \"t * ?tet \\<le> ?t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t * (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n    \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t", "using 1"], ["proof (prove)\nusing this:\n  reflexive t \\<and>\n  transitive t \\<and>\n  antisymmetric t \\<and> regular t \\<and> p \\<le> t \\<and> \\<not> linear t\n\ngoal (1 subgoal):\n 1. t * (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n    \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t", "by (metis le_supI2 mult_left_isotone mult_assoc)"], ["proof (state)\nthis:\n  t * (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n  \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n\ngoal (2 subgoals):\n 1. t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t * t\n    \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n 2. t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t *\n    (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n    \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t", "show \"?tet * t \\<le> ?t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t * t\n    \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t", "using 1 mult_right_isotone sup.coboundedI2 mult_assoc"], ["proof (prove)\nusing this:\n  reflexive t \\<and>\n  transitive t \\<and>\n  antisymmetric t \\<and> regular t \\<and> p \\<le> t \\<and> \\<not> linear t\n  ?x \\<le> ?y \\<Longrightarrow> ?z * ?x \\<le> ?z * ?y\n  ?c \\<le> ?b \\<Longrightarrow> ?c \\<le> ?a \\<squnion> ?b\n  ?a * ?b * ?c = ?a * (?b * ?c)\n\ngoal (1 subgoal):\n 1. t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t * t\n    \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t", "by auto"], ["proof (state)\nthis:\n  t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t * t\n  \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n\ngoal (1 subgoal):\n 1. t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t *\n    (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n    \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t", "have \"?e * t * t * ?e \\<le> ?e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. choose_arc (- t \\<sqinter> - t\\<^sup>T) * t * t *\n    choose_arc (- t \\<sqinter> - t\\<^sup>T)\n    \\<le> choose_arc (- t \\<sqinter> - t\\<^sup>T)", "using 2"], ["proof (prove)\nusing this:\n  arc (choose_arc (- t \\<sqinter> - t\\<^sup>T))\n\ngoal (1 subgoal):\n 1. choose_arc (- t \\<sqinter> - t\\<^sup>T) * t * t *\n    choose_arc (- t \\<sqinter> - t\\<^sup>T)\n    \\<le> choose_arc (- t \\<sqinter> - t\\<^sup>T)", "by (smt arc_top_arc mult_assoc mult_right_isotone mult_left_isotone top_greatest)"], ["proof (state)\nthis:\n  choose_arc (- t \\<sqinter> - t\\<^sup>T) * t * t *\n  choose_arc (- t \\<sqinter> - t\\<^sup>T)\n  \\<le> choose_arc (- t \\<sqinter> - t\\<^sup>T)\n\ngoal (1 subgoal):\n 1. t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t *\n    (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n    \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t", "hence \"transitive ?tet\""], ["proof (prove)\nusing this:\n  choose_arc (- t \\<sqinter> - t\\<^sup>T) * t * t *\n  choose_arc (- t \\<sqinter> - t\\<^sup>T)\n  \\<le> choose_arc (- t \\<sqinter> - t\\<^sup>T)\n\ngoal (1 subgoal):\n 1. transitive (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)", "by (smt mult_assoc mult_right_isotone mult_left_isotone)"], ["proof (state)\nthis:\n  transitive (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n\ngoal (1 subgoal):\n 1. t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t *\n    (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n    \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t", "thus \"?tet * ?tet \\<le> ?t\""], ["proof (prove)\nusing this:\n  transitive (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n\ngoal (1 subgoal):\n 1. t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t *\n    (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n    \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t", "using le_supI2"], ["proof (prove)\nusing this:\n  transitive (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n  ?x \\<le> ?b \\<Longrightarrow> ?x \\<le> ?a \\<squnion> ?b\n\ngoal (1 subgoal):\n 1. t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t *\n    (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n    \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t", "by auto"], ["proof (state)\nthis:\n  t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t *\n  (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n  \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  t * t \\<squnion>\n  t * (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<squnion>\n  t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t * t \\<squnion>\n  t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t *\n  (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n  \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n\ngoal (5 subgoals):\n 1. transitive\n     (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 2. antisymmetric\n     (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 3. t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t =\n    t \\<squnion> - - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 4. p \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n 5. card\n     {x. regular x \\<and>\n         x \\<le> - t \\<and>\n         x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n         x \\<le> - (t \\<squnion>\n                    t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                    t)\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "finally"], ["proof (chain)\npicking this:\n  transitive (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)", "show \"transitive ?t\""], ["proof (prove)\nusing this:\n  transitive (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n\ngoal (1 subgoal):\n 1. transitive\n     (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)", "."], ["proof (state)\nthis:\n  transitive (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n\ngoal (4 subgoals):\n 1. antisymmetric\n     (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 2. t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t =\n    t \\<squnion> - - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 3. p \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n 4. card\n     {x. regular x \\<and>\n         x \\<le> - t \\<and>\n         x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n         x \\<le> - (t \\<squnion>\n                    t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                    t)\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "have 3: \"?e \\<le> -t\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. choose_arc (- t \\<sqinter> - t\\<^sup>T) \\<le> - t\\<^sup>T", "by (metis choose_arc_below inf.cobounded2 order_lesseq_imp p_dist_sup regular_closed_p)"], ["proof (state)\nthis:\n  choose_arc (- t \\<sqinter> - t\\<^sup>T) \\<le> - t\\<^sup>T\n\ngoal (4 subgoals):\n 1. antisymmetric\n     (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 2. t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t =\n    t \\<squnion> - - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 3. p \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n 4. card\n     {x. regular x \\<and>\n         x \\<le> - t \\<and>\n         x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n         x \\<le> - (t \\<squnion>\n                    t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                    t)\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "have 4: \"?e \\<le> -t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. choose_arc (- t \\<sqinter> - t\\<^sup>T) \\<le> - t", "by (metis choose_arc_below inf.cobounded1 order_trans regular_closed_inf regular_closed_p)"], ["proof (state)\nthis:\n  choose_arc (- t \\<sqinter> - t\\<^sup>T) \\<le> - t\n\ngoal (4 subgoals):\n 1. antisymmetric\n     (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 2. t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t =\n    t \\<squnion> - - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 3. p \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n 4. card\n     {x. regular x \\<and>\n         x \\<le> - t \\<and>\n         x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n         x \\<le> - (t \\<squnion>\n                    t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                    t)\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "have \"?t \\<sqinter> ?t\\<^sup>T = (t \\<sqinter> t\\<^sup>T) \\<squnion> (t \\<sqinter> ?tet\\<^sup>T) \\<squnion> (?tet \\<sqinter> t\\<^sup>T) \\<squnion> (?tet \\<sqinter> ?tet\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t \\<squnion>\n     t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<sqinter>\n    (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T =\n    t \\<sqinter> t\\<^sup>T \\<squnion>\n    t \\<sqinter>\n    (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T \\<squnion>\n    t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t \\<sqinter>\n    t\\<^sup>T \\<squnion>\n    t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t \\<sqinter>\n    (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T", "by (smt (z3) conv_dist_sup inf_sup_distrib1 inf_sup_distrib2 sup_monoid.add_assoc)"], ["proof (state)\nthis:\n  (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<sqinter>\n  (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T =\n  t \\<sqinter> t\\<^sup>T \\<squnion>\n  t \\<sqinter>\n  (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T \\<squnion>\n  t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t \\<sqinter>\n  t\\<^sup>T \\<squnion>\n  t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t \\<sqinter>\n  (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T\n\ngoal (4 subgoals):\n 1. antisymmetric\n     (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 2. t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t =\n    t \\<squnion> - - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 3. p \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n 4. card\n     {x. regular x \\<and>\n         x \\<le> - t \\<and>\n         x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n         x \\<le> - (t \\<squnion>\n                    t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                    t)\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "also"], ["proof (state)\nthis:\n  (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<sqinter>\n  (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T =\n  t \\<sqinter> t\\<^sup>T \\<squnion>\n  t \\<sqinter>\n  (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T \\<squnion>\n  t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t \\<sqinter>\n  t\\<^sup>T \\<squnion>\n  t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t \\<sqinter>\n  (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T\n\ngoal (4 subgoals):\n 1. antisymmetric\n     (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 2. t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t =\n    t \\<squnion> - - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 3. p \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n 4. card\n     {x. regular x \\<and>\n         x \\<le> - t \\<and>\n         x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n         x \\<le> - (t \\<squnion>\n                    t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                    t)\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "have \"... \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coreflexive\n     (t \\<sqinter> t\\<^sup>T \\<squnion>\n      t \\<sqinter>\n      (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T \\<squnion>\n      t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t \\<sqinter>\n      t\\<^sup>T \\<squnion>\n      t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t \\<sqinter>\n      (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T)", "proof (intro sup_least)"], ["proof (state)\ngoal (4 subgoals):\n 1. antisymmetric t\n 2. coreflexive\n     (t \\<sqinter>\n      (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T)\n 3. coreflexive\n     (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t \\<sqinter> t\\<^sup>T)\n 4. antisymmetric (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)", "show \"antisymmetric t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. antisymmetric t", "using 1"], ["proof (prove)\nusing this:\n  reflexive t \\<and>\n  transitive t \\<and>\n  antisymmetric t \\<and> regular t \\<and> p \\<le> t \\<and> \\<not> linear t\n\ngoal (1 subgoal):\n 1. antisymmetric t", "by simp"], ["proof (state)\nthis:\n  antisymmetric t\n\ngoal (3 subgoals):\n 1. coreflexive\n     (t \\<sqinter>\n      (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T)\n 2. coreflexive\n     (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t \\<sqinter> t\\<^sup>T)\n 3. antisymmetric (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)", "have \"t * t * t = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t * t * t = t", "using 1 preorder_idempotent"], ["proof (prove)\nusing this:\n  reflexive t \\<and>\n  transitive t \\<and>\n  antisymmetric t \\<and> regular t \\<and> p \\<le> t \\<and> \\<not> linear t\n  preorder ?x \\<Longrightarrow> idempotent ?x\n\ngoal (1 subgoal):\n 1. t * t * t = t", "by fastforce"], ["proof (state)\nthis:\n  t * t * t = t\n\ngoal (3 subgoals):\n 1. coreflexive\n     (t \\<sqinter>\n      (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T)\n 2. coreflexive\n     (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t \\<sqinter> t\\<^sup>T)\n 3. antisymmetric (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)", "also"], ["proof (state)\nthis:\n  t * t * t = t\n\ngoal (3 subgoals):\n 1. coreflexive\n     (t \\<sqinter>\n      (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T)\n 2. coreflexive\n     (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t \\<sqinter> t\\<^sup>T)\n 3. antisymmetric (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)", "have \"... \\<le> -?e\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<le> - choose_arc (- t \\<sqinter> - t\\<^sup>T)\\<^sup>T", "using 3"], ["proof (prove)\nusing this:\n  choose_arc (- t \\<sqinter> - t\\<^sup>T) \\<le> - t\\<^sup>T\n\ngoal (1 subgoal):\n 1. t \\<le> - choose_arc (- t \\<sqinter> - t\\<^sup>T)\\<^sup>T", "by (metis p_antitone_iff conv_complement conv_order conv_involutive)"], ["proof (state)\nthis:\n  t \\<le> - choose_arc (- t \\<sqinter> - t\\<^sup>T)\\<^sup>T\n\ngoal (3 subgoals):\n 1. coreflexive\n     (t \\<sqinter>\n      (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T)\n 2. coreflexive\n     (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t \\<sqinter> t\\<^sup>T)\n 3. antisymmetric (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)", "finally"], ["proof (chain)\npicking this:\n  t * t * t \\<le> - choose_arc (- t \\<sqinter> - t\\<^sup>T)\\<^sup>T", "have \"t\\<^sup>T * ?e\\<^sup>T * t\\<^sup>T \\<le> -t\""], ["proof (prove)\nusing this:\n  t * t * t \\<le> - choose_arc (- t \\<sqinter> - t\\<^sup>T)\\<^sup>T\n\ngoal (1 subgoal):\n 1. t\\<^sup>T * choose_arc (- t \\<sqinter> - t\\<^sup>T)\\<^sup>T * t\\<^sup>T\n    \\<le> - t", "using triple_schroeder_p"], ["proof (prove)\nusing this:\n  t * t * t \\<le> - choose_arc (- t \\<sqinter> - t\\<^sup>T)\\<^sup>T\n  (?x * ?y * ?z \\<le> - ?w) = (?x\\<^sup>T * ?w * ?z\\<^sup>T \\<le> - ?y)\n\ngoal (1 subgoal):\n 1. t\\<^sup>T * choose_arc (- t \\<sqinter> - t\\<^sup>T)\\<^sup>T * t\\<^sup>T\n    \\<le> - t", "by blast"], ["proof (state)\nthis:\n  t\\<^sup>T * choose_arc (- t \\<sqinter> - t\\<^sup>T)\\<^sup>T * t\\<^sup>T\n  \\<le> - t\n\ngoal (3 subgoals):\n 1. coreflexive\n     (t \\<sqinter>\n      (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T)\n 2. coreflexive\n     (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t \\<sqinter> t\\<^sup>T)\n 3. antisymmetric (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)", "hence \"t \\<sqinter> ?tet\\<^sup>T = bot\""], ["proof (prove)\nusing this:\n  t\\<^sup>T * choose_arc (- t \\<sqinter> - t\\<^sup>T)\\<^sup>T * t\\<^sup>T\n  \\<le> - t\n\ngoal (1 subgoal):\n 1. t \\<sqinter> (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T =\n    bot", "by (simp add: comp_associative conv_dist_comp p_antitone pseudo_complement_pp)"], ["proof (state)\nthis:\n  t \\<sqinter> (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T =\n  bot\n\ngoal (3 subgoals):\n 1. coreflexive\n     (t \\<sqinter>\n      (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T)\n 2. coreflexive\n     (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t \\<sqinter> t\\<^sup>T)\n 3. antisymmetric (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)", "thus \"t \\<sqinter> ?tet\\<^sup>T \\<le> 1\""], ["proof (prove)\nusing this:\n  t \\<sqinter> (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T =\n  bot\n\ngoal (1 subgoal):\n 1. coreflexive\n     (t \\<sqinter>\n      (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T)", "by simp"], ["proof (state)\nthis:\n  coreflexive\n   (t \\<sqinter> (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T)\n\ngoal (2 subgoals):\n 1. coreflexive\n     (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t \\<sqinter> t\\<^sup>T)\n 2. antisymmetric (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)", "thus \"?tet \\<sqinter> t\\<^sup>T \\<le> 1\""], ["proof (prove)\nusing this:\n  coreflexive\n   (t \\<sqinter> (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T)\n\ngoal (1 subgoal):\n 1. coreflexive\n     (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t \\<sqinter> t\\<^sup>T)", "by (smt conv_isotone inf_commute conv_one conv_dist_inf conv_involutive)"], ["proof (state)\nthis:\n  coreflexive\n   (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t \\<sqinter> t\\<^sup>T)\n\ngoal (1 subgoal):\n 1. antisymmetric (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)", "have \"?e * t * ?e \\<le> ?e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. choose_arc (- t \\<sqinter> - t\\<^sup>T) * t *\n    choose_arc (- t \\<sqinter> - t\\<^sup>T)\n    \\<le> choose_arc (- t \\<sqinter> - t\\<^sup>T)", "using 2"], ["proof (prove)\nusing this:\n  arc (choose_arc (- t \\<sqinter> - t\\<^sup>T))\n\ngoal (1 subgoal):\n 1. choose_arc (- t \\<sqinter> - t\\<^sup>T) * t *\n    choose_arc (- t \\<sqinter> - t\\<^sup>T)\n    \\<le> choose_arc (- t \\<sqinter> - t\\<^sup>T)", "by (smt arc_top_arc mult_assoc mult_right_isotone mult_left_isotone top_greatest)"], ["proof (state)\nthis:\n  choose_arc (- t \\<sqinter> - t\\<^sup>T) * t *\n  choose_arc (- t \\<sqinter> - t\\<^sup>T)\n  \\<le> choose_arc (- t \\<sqinter> - t\\<^sup>T)\n\ngoal (1 subgoal):\n 1. antisymmetric (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)", "also"], ["proof (state)\nthis:\n  choose_arc (- t \\<sqinter> - t\\<^sup>T) * t *\n  choose_arc (- t \\<sqinter> - t\\<^sup>T)\n  \\<le> choose_arc (- t \\<sqinter> - t\\<^sup>T)\n\ngoal (1 subgoal):\n 1. antisymmetric (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)", "have \"... \\<le> -t\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. choose_arc (- t \\<sqinter> - t\\<^sup>T) \\<le> - t\\<^sup>T", "using 3"], ["proof (prove)\nusing this:\n  choose_arc (- t \\<sqinter> - t\\<^sup>T) \\<le> - t\\<^sup>T\n\ngoal (1 subgoal):\n 1. choose_arc (- t \\<sqinter> - t\\<^sup>T) \\<le> - t\\<^sup>T", "by simp"], ["proof (state)\nthis:\n  choose_arc (- t \\<sqinter> - t\\<^sup>T) \\<le> - t\\<^sup>T\n\ngoal (1 subgoal):\n 1. antisymmetric (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)", "finally"], ["proof (chain)\npicking this:\n  choose_arc (- t \\<sqinter> - t\\<^sup>T) * t *\n  choose_arc (- t \\<sqinter> - t\\<^sup>T)\n  \\<le> - t\\<^sup>T", "have \"?tet \\<le> -?e\\<^sup>T\""], ["proof (prove)\nusing this:\n  choose_arc (- t \\<sqinter> - t\\<^sup>T) * t *\n  choose_arc (- t \\<sqinter> - t\\<^sup>T)\n  \\<le> - t\\<^sup>T\n\ngoal (1 subgoal):\n 1. t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n    \\<le> - choose_arc (- t \\<sqinter> - t\\<^sup>T)\\<^sup>T", "by (metis conv_dist_comp schroeder_3_p triple_schroeder_p)"], ["proof (state)\nthis:\n  t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n  \\<le> - choose_arc (- t \\<sqinter> - t\\<^sup>T)\\<^sup>T\n\ngoal (1 subgoal):\n 1. antisymmetric (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)", "hence \"t * t * ?e * t * t \\<le> -?e\\<^sup>T\""], ["proof (prove)\nusing this:\n  t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n  \\<le> - choose_arc (- t \\<sqinter> - t\\<^sup>T)\\<^sup>T\n\ngoal (1 subgoal):\n 1. t * t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t * t\n    \\<le> - choose_arc (- t \\<sqinter> - t\\<^sup>T)\\<^sup>T", "using 1"], ["proof (prove)\nusing this:\n  t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n  \\<le> - choose_arc (- t \\<sqinter> - t\\<^sup>T)\\<^sup>T\n  reflexive t \\<and>\n  transitive t \\<and>\n  antisymmetric t \\<and> regular t \\<and> p \\<le> t \\<and> \\<not> linear t\n\ngoal (1 subgoal):\n 1. t * t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t * t\n    \\<le> - choose_arc (- t \\<sqinter> - t\\<^sup>T)\\<^sup>T", "by (metis preorder_idempotent mult_assoc)"], ["proof (state)\nthis:\n  t * t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t * t\n  \\<le> - choose_arc (- t \\<sqinter> - t\\<^sup>T)\\<^sup>T\n\ngoal (1 subgoal):\n 1. antisymmetric (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)", "hence \"t\\<^sup>T * ?e\\<^sup>T * t\\<^sup>T \\<le> -?tet\""], ["proof (prove)\nusing this:\n  t * t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t * t\n  \\<le> - choose_arc (- t \\<sqinter> - t\\<^sup>T)\\<^sup>T\n\ngoal (1 subgoal):\n 1. t\\<^sup>T * choose_arc (- t \\<sqinter> - t\\<^sup>T)\\<^sup>T * t\\<^sup>T\n    \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)", "using triple_schroeder_p mult_assoc"], ["proof (prove)\nusing this:\n  t * t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t * t\n  \\<le> - choose_arc (- t \\<sqinter> - t\\<^sup>T)\\<^sup>T\n  (?x * ?y * ?z \\<le> - ?w) = (?x\\<^sup>T * ?w * ?z\\<^sup>T \\<le> - ?y)\n  ?a * ?b * ?c = ?a * (?b * ?c)\n\ngoal (1 subgoal):\n 1. t\\<^sup>T * choose_arc (- t \\<sqinter> - t\\<^sup>T)\\<^sup>T * t\\<^sup>T\n    \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)", "by auto"], ["proof (state)\nthis:\n  t\\<^sup>T * choose_arc (- t \\<sqinter> - t\\<^sup>T)\\<^sup>T * t\\<^sup>T\n  \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n\ngoal (1 subgoal):\n 1. antisymmetric (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)", "hence \"?tet \\<sqinter> ?tet\\<^sup>T = bot\""], ["proof (prove)\nusing this:\n  t\\<^sup>T * choose_arc (- t \\<sqinter> - t\\<^sup>T)\\<^sup>T * t\\<^sup>T\n  \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n\ngoal (1 subgoal):\n 1. asymmetric (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)", "by (simp add: conv_dist_comp p_antitone pseudo_complement_pp mult_assoc)"], ["proof (state)\nthis:\n  asymmetric (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n\ngoal (1 subgoal):\n 1. antisymmetric (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)", "thus \"antisymmetric ?tet\""], ["proof (prove)\nusing this:\n  asymmetric (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n\ngoal (1 subgoal):\n 1. antisymmetric (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)", "by simp"], ["proof (state)\nthis:\n  antisymmetric (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  coreflexive\n   (t \\<sqinter> t\\<^sup>T \\<squnion>\n    t \\<sqinter>\n    (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T \\<squnion>\n    t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t \\<sqinter>\n    t\\<^sup>T \\<squnion>\n    t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t \\<sqinter>\n    (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T)\n\ngoal (4 subgoals):\n 1. antisymmetric\n     (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 2. t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t =\n    t \\<squnion> - - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 3. p \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n 4. card\n     {x. regular x \\<and>\n         x \\<le> - t \\<and>\n         x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n         x \\<le> - (t \\<squnion>\n                    t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                    t)\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "finally"], ["proof (chain)\npicking this:\n  antisymmetric\n   (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)", "show \"antisymmetric ?t\""], ["proof (prove)\nusing this:\n  antisymmetric\n   (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n\ngoal (1 subgoal):\n 1. antisymmetric\n     (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)", "."], ["proof (state)\nthis:\n  antisymmetric\n   (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n\ngoal (3 subgoals):\n 1. t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t =\n    t \\<squnion> - - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n 2. p \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n 3. card\n     {x. regular x \\<and>\n         x \\<le> - t \\<and>\n         x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n         x \\<le> - (t \\<squnion>\n                    t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                    t)\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "show \"?t = t \\<squnion> --?tet\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t =\n    t \\<squnion> - - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)", "using 1 choose_arc_regular regular_mult_closed"], ["proof (prove)\nusing this:\n  reflexive t \\<and>\n  transitive t \\<and>\n  antisymmetric t \\<and> regular t \\<and> p \\<le> t \\<and> \\<not> linear t\n  regular (choose_arc ?x)\n  \\<lbrakk>regular ?x; regular ?y\\<rbrakk>\n  \\<Longrightarrow> regular (?x * ?y)\n\ngoal (1 subgoal):\n 1. t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t =\n    t \\<squnion> - - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)", "by auto"], ["proof (state)\nthis:\n  t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t =\n  t \\<squnion> - - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n\ngoal (2 subgoals):\n 1. p \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n 2. card\n     {x. regular x \\<and>\n         x \\<le> - t \\<and>\n         x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n         x \\<le> - (t \\<squnion>\n                    t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                    t)\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "show \"p \\<le> ?t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t", "using 1"], ["proof (prove)\nusing this:\n  reflexive t \\<and>\n  transitive t \\<and>\n  antisymmetric t \\<and> regular t \\<and> p \\<le> t \\<and> \\<not> linear t\n\ngoal (1 subgoal):\n 1. p \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t", "by (simp add: le_supI1)"], ["proof (state)\nthis:\n  p \\<le> t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n\ngoal (1 subgoal):\n 1. card\n     {x. regular x \\<and>\n         x \\<le> - t \\<and>\n         x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n         x \\<le> - (t \\<squnion>\n                    t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                    t)\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "show \"card ?s1 < card ?s2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     {x. regular x \\<and>\n         x \\<le> - t \\<and>\n         x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n         x \\<le> - (t \\<squnion>\n                    t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                    t)\\<^sup>T}\n    < card {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "proof (rule psubset_card_mono)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}\n 2. {x. regular x \\<and>\n        x \\<le> - t \\<and>\n        x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n        x \\<le> - (t \\<squnion>\n                   t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T}\n    \\<subset> {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "show \"finite { x . regular x \\<and> x \\<le> -t \\<and> x \\<le> -t\\<^sup>T }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "using finite_regular"], ["proof (prove)\nusing this:\n  finite {x. regular x}\n\ngoal (1 subgoal):\n 1. finite {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "by simp"], ["proof (state)\nthis:\n  finite {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}\n\ngoal (1 subgoal):\n 1. {x. regular x \\<and>\n        x \\<le> - t \\<and>\n        x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n        x \\<le> - (t \\<squnion>\n                   t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T}\n    \\<subset> {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "show \"{ x . regular x \\<and> x \\<le> -t \\<and> x \\<le> -?tet \\<and> x \\<le> -?t\\<^sup>T } \\<subset> { x . regular x \\<and> x \\<le> -t \\<and> x \\<le> -t\\<^sup>T }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. regular x \\<and>\n        x \\<le> - t \\<and>\n        x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n        x \\<le> - (t \\<squnion>\n                   t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T}\n    \\<subset> {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {x. regular x \\<and>\n        x \\<le> - t \\<and>\n        x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n        x \\<le> - (t \\<squnion>\n                   t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T}\n    \\<subset> {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "have \"\\<forall>x . regular x \\<and> x \\<le> -t \\<and> x \\<le> -?tet \\<and> x \\<le> -?t\\<^sup>T \\<longrightarrow> regular x \\<and> x \\<le> -t \\<and> x \\<le> -t\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       regular x \\<and>\n       x \\<le> - t \\<and>\n       x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       x \\<le> - (t \\<squnion>\n                  t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                  t)\\<^sup>T \\<longrightarrow>\n       regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T", "using conv_dist_sup"], ["proof (prove)\nusing this:\n  (?x \\<squnion> ?y)\\<^sup>T = ?x\\<^sup>T \\<squnion> ?y\\<^sup>T\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       regular x \\<and>\n       x \\<le> - t \\<and>\n       x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       x \\<le> - (t \\<squnion>\n                  t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                  t)\\<^sup>T \\<longrightarrow>\n       regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T", "by auto"], ["proof (state)\nthis:\n  \\<forall>x.\n     regular x \\<and>\n     x \\<le> - t \\<and>\n     x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n     x \\<le> - (t \\<squnion>\n                t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                t)\\<^sup>T \\<longrightarrow>\n     regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T\n\ngoal (1 subgoal):\n 1. {x. regular x \\<and>\n        x \\<le> - t \\<and>\n        x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n        x \\<le> - (t \\<squnion>\n                   t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T}\n    \\<subset> {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "hence 5: \"{ x . regular x \\<and> x \\<le> -t \\<and> x \\<le> -?tet \\<and> x \\<le> -?t\\<^sup>T } \\<subseteq> { x . regular x \\<and> x \\<le> -t \\<and> x \\<le> -t\\<^sup>T }\""], ["proof (prove)\nusing this:\n  \\<forall>x.\n     regular x \\<and>\n     x \\<le> - t \\<and>\n     x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n     x \\<le> - (t \\<squnion>\n                t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n                t)\\<^sup>T \\<longrightarrow>\n     regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T\n\ngoal (1 subgoal):\n 1. {x. regular x \\<and>\n        x \\<le> - t \\<and>\n        x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n        x \\<le> - (t \\<squnion>\n                   t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T}\n    \\<subseteq> {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "by blast"], ["proof (state)\nthis:\n  {x. regular x \\<and>\n      x \\<le> - t \\<and>\n      x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n      x \\<le> - (t \\<squnion>\n                 t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T}\n  \\<subseteq> {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}\n\ngoal (1 subgoal):\n 1. {x. regular x \\<and>\n        x \\<le> - t \\<and>\n        x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n        x \\<le> - (t \\<squnion>\n                   t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T}\n    \\<subset> {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "have 6: \"regular ?e \\<and> ?e \\<le> -t \\<and> ?e \\<le> -t\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. regular (choose_arc (- t \\<sqinter> - t\\<^sup>T)) \\<and>\n    choose_arc (- t \\<sqinter> - t\\<^sup>T) \\<le> - t \\<and>\n    choose_arc (- t \\<sqinter> - t\\<^sup>T) \\<le> - t\\<^sup>T", "using 2 3 4 choose_arc_regular"], ["proof (prove)\nusing this:\n  arc (choose_arc (- t \\<sqinter> - t\\<^sup>T))\n  choose_arc (- t \\<sqinter> - t\\<^sup>T) \\<le> - t\\<^sup>T\n  choose_arc (- t \\<sqinter> - t\\<^sup>T) \\<le> - t\n  regular (choose_arc ?x)\n\ngoal (1 subgoal):\n 1. regular (choose_arc (- t \\<sqinter> - t\\<^sup>T)) \\<and>\n    choose_arc (- t \\<sqinter> - t\\<^sup>T) \\<le> - t \\<and>\n    choose_arc (- t \\<sqinter> - t\\<^sup>T) \\<le> - t\\<^sup>T", "by blast"], ["proof (state)\nthis:\n  regular (choose_arc (- t \\<sqinter> - t\\<^sup>T)) \\<and>\n  choose_arc (- t \\<sqinter> - t\\<^sup>T) \\<le> - t \\<and>\n  choose_arc (- t \\<sqinter> - t\\<^sup>T) \\<le> - t\\<^sup>T\n\ngoal (1 subgoal):\n 1. {x. regular x \\<and>\n        x \\<le> - t \\<and>\n        x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n        x \\<le> - (t \\<squnion>\n                   t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T}\n    \\<subset> {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "have \"\\<not> ?e \\<le> -?tet\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> choose_arc (- t \\<sqinter> - t\\<^sup>T)\n           \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. choose_arc (- t \\<sqinter> - t\\<^sup>T)\n    \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n             t) \\<Longrightarrow>\n    False", "assume 7: \"?e \\<le> -?tet\""], ["proof (state)\nthis:\n  choose_arc (- t \\<sqinter> - t\\<^sup>T)\n  \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n\ngoal (1 subgoal):\n 1. choose_arc (- t \\<sqinter> - t\\<^sup>T)\n    \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n             t) \\<Longrightarrow>\n    False", "have \"?e \\<le> ?e * t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. choose_arc (- t \\<sqinter> - t\\<^sup>T)\n    \\<le> choose_arc (- t \\<sqinter> - t\\<^sup>T) * t", "using 1"], ["proof (prove)\nusing this:\n  reflexive t \\<and>\n  transitive t \\<and>\n  antisymmetric t \\<and> regular t \\<and> p \\<le> t \\<and> \\<not> linear t\n\ngoal (1 subgoal):\n 1. choose_arc (- t \\<sqinter> - t\\<^sup>T)\n    \\<le> choose_arc (- t \\<sqinter> - t\\<^sup>T) * t", "by (meson mult_right_isotone mult_sub_right_one order.trans)"], ["proof (state)\nthis:\n  choose_arc (- t \\<sqinter> - t\\<^sup>T)\n  \\<le> choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n\ngoal (1 subgoal):\n 1. choose_arc (- t \\<sqinter> - t\\<^sup>T)\n    \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n             t) \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  choose_arc (- t \\<sqinter> - t\\<^sup>T)\n  \\<le> choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n\ngoal (1 subgoal):\n 1. choose_arc (- t \\<sqinter> - t\\<^sup>T)\n    \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n             t) \\<Longrightarrow>\n    False", "have \"?e * t \\<le> -(t\\<^sup>T * ?e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n    \\<le> - (t\\<^sup>T * choose_arc (- t \\<sqinter> - t\\<^sup>T))", "using 7 p_antitone_iff schroeder_3_p mult_assoc"], ["proof (prove)\nusing this:\n  choose_arc (- t \\<sqinter> - t\\<^sup>T)\n  \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n  (?x \\<le> - ?y) = (?y \\<le> - ?x)\n  (?x * ?y \\<le> - ?z) = (?x\\<^sup>T * ?z \\<le> - ?y)\n  ?a * ?b * ?c = ?a * (?b * ?c)\n\ngoal (1 subgoal):\n 1. choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n    \\<le> - (t\\<^sup>T * choose_arc (- t \\<sqinter> - t\\<^sup>T))", "by auto"], ["proof (state)\nthis:\n  choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n  \\<le> - (t\\<^sup>T * choose_arc (- t \\<sqinter> - t\\<^sup>T))\n\ngoal (1 subgoal):\n 1. choose_arc (- t \\<sqinter> - t\\<^sup>T)\n    \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n             t) \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  choose_arc (- t \\<sqinter> - t\\<^sup>T) * t\n  \\<le> - (t\\<^sup>T * choose_arc (- t \\<sqinter> - t\\<^sup>T))\n\ngoal (1 subgoal):\n 1. choose_arc (- t \\<sqinter> - t\\<^sup>T)\n    \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n             t) \\<Longrightarrow>\n    False", "have \"... \\<le> -(1\\<^sup>T * ?e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (t\\<^sup>T * choose_arc (- t \\<sqinter> - t\\<^sup>T))\n    \\<le> - ((1::'a)\\<^sup>T * choose_arc (- t \\<sqinter> - t\\<^sup>T))", "using 1 conv_isotone mult_left_isotone p_antitone"], ["proof (prove)\nusing this:\n  reflexive t \\<and>\n  transitive t \\<and>\n  antisymmetric t \\<and> regular t \\<and> p \\<le> t \\<and> \\<not> linear t\n  ?x \\<le> ?y \\<Longrightarrow> ?x\\<^sup>T \\<le> ?y\\<^sup>T\n  ?x \\<le> ?y \\<Longrightarrow> ?x * ?z \\<le> ?y * ?z\n  ?x \\<le> ?y \\<Longrightarrow> - ?y \\<le> - ?x\n\ngoal (1 subgoal):\n 1. - (t\\<^sup>T * choose_arc (- t \\<sqinter> - t\\<^sup>T))\n    \\<le> - ((1::'a)\\<^sup>T * choose_arc (- t \\<sqinter> - t\\<^sup>T))", "by blast"], ["proof (state)\nthis:\n  - (t\\<^sup>T * choose_arc (- t \\<sqinter> - t\\<^sup>T))\n  \\<le> - ((1::'a)\\<^sup>T * choose_arc (- t \\<sqinter> - t\\<^sup>T))\n\ngoal (1 subgoal):\n 1. choose_arc (- t \\<sqinter> - t\\<^sup>T)\n    \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n             t) \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  - (t\\<^sup>T * choose_arc (- t \\<sqinter> - t\\<^sup>T))\n  \\<le> - ((1::'a)\\<^sup>T * choose_arc (- t \\<sqinter> - t\\<^sup>T))\n\ngoal (1 subgoal):\n 1. choose_arc (- t \\<sqinter> - t\\<^sup>T)\n    \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n             t) \\<Longrightarrow>\n    False", "have \"... = -?e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - ((1::'a)\\<^sup>T * choose_arc (- t \\<sqinter> - t\\<^sup>T)) =\n    - choose_arc (- t \\<sqinter> - t\\<^sup>T)", "by simp"], ["proof (state)\nthis:\n  - ((1::'a)\\<^sup>T * choose_arc (- t \\<sqinter> - t\\<^sup>T)) =\n  - choose_arc (- t \\<sqinter> - t\\<^sup>T)\n\ngoal (1 subgoal):\n 1. choose_arc (- t \\<sqinter> - t\\<^sup>T)\n    \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) *\n             t) \\<Longrightarrow>\n    False", "finally"], ["proof (chain)\npicking this:\n  choose_arc (- t \\<sqinter> - t\\<^sup>T)\n  \\<le> - choose_arc (- t \\<sqinter> - t\\<^sup>T)", "show False"], ["proof (prove)\nusing this:\n  choose_arc (- t \\<sqinter> - t\\<^sup>T)\n  \\<le> - choose_arc (- t \\<sqinter> - t\\<^sup>T)\n\ngoal (1 subgoal):\n 1. False", "using 1 2"], ["proof (prove)\nusing this:\n  choose_arc (- t \\<sqinter> - t\\<^sup>T)\n  \\<le> - choose_arc (- t \\<sqinter> - t\\<^sup>T)\n  reflexive t \\<and>\n  transitive t \\<and>\n  antisymmetric t \\<and> regular t \\<and> p \\<le> t \\<and> \\<not> linear t\n  arc (choose_arc (- t \\<sqinter> - t\\<^sup>T))\n\ngoal (1 subgoal):\n 1. False", "by (smt (z3) bot_least eq_refl inf.absorb1 pseudo_complement semiring.mult_not_zero top_le)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> choose_arc (- t \\<sqinter> - t\\<^sup>T)\n         \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n\ngoal (1 subgoal):\n 1. {x. regular x \\<and>\n        x \\<le> - t \\<and>\n        x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n        x \\<le> - (t \\<squnion>\n                   t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T}\n    \\<subset> {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> choose_arc (- t \\<sqinter> - t\\<^sup>T)\n         \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n\ngoal (1 subgoal):\n 1. {x. regular x \\<and>\n        x \\<le> - t \\<and>\n        x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n        x \\<le> - (t \\<squnion>\n                   t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T}\n    \\<subset> {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "using 5 6"], ["proof (prove)\nusing this:\n  \\<not> choose_arc (- t \\<sqinter> - t\\<^sup>T)\n         \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\n  {x. regular x \\<and>\n      x \\<le> - t \\<and>\n      x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n      x \\<le> - (t \\<squnion>\n                 t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T}\n  \\<subseteq> {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}\n  regular (choose_arc (- t \\<sqinter> - t\\<^sup>T)) \\<and>\n  choose_arc (- t \\<sqinter> - t\\<^sup>T) \\<le> - t \\<and>\n  choose_arc (- t \\<sqinter> - t\\<^sup>T) \\<le> - t\\<^sup>T\n\ngoal (1 subgoal):\n 1. {x. regular x \\<and>\n        x \\<le> - t \\<and>\n        x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n        x \\<le> - (t \\<squnion>\n                   t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T}\n    \\<subset> {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}", "by blast"], ["proof (state)\nthis:\n  {x. regular x \\<and>\n      x \\<le> - t \\<and>\n      x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n      x \\<le> - (t \\<squnion>\n                 t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T}\n  \\<subset> {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {x. regular x \\<and>\n      x \\<le> - t \\<and>\n      x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n      x \\<le> - (t \\<squnion>\n                 t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T}\n  \\<subset> {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card\n   {x. regular x \\<and>\n       x \\<le> - t \\<and>\n       x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       x \\<le> - (t \\<squnion>\n                  t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T}\n  < card {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  reflexive\n   (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n  transitive\n   (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n  antisymmetric\n   (t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n  t \\<squnion> t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t =\n  t \\<squnion> - - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n  p \\<le> t \\<squnion>\n          t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t \\<and>\n  card\n   {x. regular x \\<and>\n       x \\<le> - t \\<and>\n       x \\<le> - (t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t) \\<and>\n       x \\<le> - (t \\<squnion>\n                  t * choose_arc (- t \\<sqinter> - t\\<^sup>T) * t)\\<^sup>T}\n  < card {x. regular x \\<and> x \\<le> - t \\<and> x \\<le> - t\\<^sup>T}\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Theorem 15\\<close>"], ["", "lemma szpilrajn_exists:\n  \"order p \\<and> regular p \\<Longrightarrow> \\<exists>t . linear_order t \\<and> p \\<le> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. order p \\<and> regular p \\<Longrightarrow>\n    \\<exists>t. linear_orderable_1 t \\<and> p \\<le> t", "using tc_extract_function szpilrajn"], ["proof (prove)\nusing this:\n  [?p] \n   ?c \n   [?q] \\<Longrightarrow>\n  \\<exists>f. \\<forall>s. s \\<in> ?p \\<longrightarrow> f s \\<in> ?q\n  [order ?p \\<and> regular ?p] \n   t := ?p;\n   WHILE \\<not> linear t INV {order t \\<and> regular t \\<and> ?p \\<le> t} \n    VAR {\\<lambda>(e, t).\n            card {x. regular x \\<and> x \\<le> - (t \\<squnion> t\\<^sup>T)}} \n    DO e := choose_arc (- (t \\<squnion> t\\<^sup>T));\n       t := t \\<squnion> t * e * t \n    OD \n   [linear_orderable_1 t \\<and> ?p \\<le> t]\n\ngoal (1 subgoal):\n 1. order p \\<and> regular p \\<Longrightarrow>\n    \\<exists>t. linear_orderable_1 t \\<and> p \\<le> t", "by blast"], ["", "lemma complement_one_transitively_orientable:\n  \"transitively_orientable (-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. transitively_orientable (- (1::'a))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. transitively_orientable (- (1::'a))", "have \"\\<exists>t . linear_order t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t. linear_orderable_1 t", "using szpilrajn_exists bijective_one_closed bijective_regular order_one_closed"], ["proof (prove)\nusing this:\n  order ?p \\<and> regular ?p \\<Longrightarrow>\n  \\<exists>t. linear_orderable_1 t \\<and> ?p \\<le> t\n  bijective (1::'a)\n  bijective ?x \\<Longrightarrow> regular ?x\n  (coreflexive (1::'a) \\<and> transitive (1::'a)) \\<and>\n  antisymmetric (1::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>t. linear_orderable_1 t", "by blast"], ["proof (state)\nthis:\n  \\<exists>t. linear_orderable_1 t\n\ngoal (1 subgoal):\n 1. transitively_orientable (- (1::'a))", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>t. linear_orderable_1 t\n\ngoal (1 subgoal):\n 1. transitively_orientable (- (1::'a))", "using exists_split_characterisations(4)"], ["proof (prove)\nusing this:\n  \\<exists>t. linear_orderable_1 t\n  (\\<exists>x. linear_orderable_1 x) = transitively_orientable (- (1::'a))\n\ngoal (1 subgoal):\n 1. transitively_orientable (- (1::'a))", "by blast"], ["proof (state)\nthis:\n  transitively_orientable (- (1::'a))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"], ["", "end"]]}