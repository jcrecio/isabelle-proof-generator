{"file_name": "/home/qj213/afp-2021-10-22/thys/Stuttering_Equivalence/Samplers.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Stuttering_Equivalence", "problem_names": ["lemma strict_mono_exceeds:\n  assumes f: \"strict_mono (f::nat \\<Rightarrow> nat)\"\n  shows \"\\<exists>k. n < f k\"", "lemma strict_mono_interval:\n  assumes f: \"strict_mono (f::nat \\<Rightarrow> nat)\" and n: \"f 0 \\<le> n\"\n  obtains k where \"f k \\<le> n\" and \"n < f (Suc k)\"", "lemma strict_mono_comp:\n  assumes g: \"strict_mono (g::'a::order \\<Rightarrow> 'b::order)\"\n      and f: \"strict_mono (f::'b::order \\<Rightarrow> 'c::order)\"\n  shows \"strict_mono (f \\<circ> g)\"", "lemma stutter_sampler_0: \"stutter_sampler f \\<sigma> \\<Longrightarrow> f 0 = 0\"", "lemma stutter_sampler_mono: \"stutter_sampler f \\<sigma> \\<Longrightarrow> strict_mono f\"", "lemma stutter_sampler_between:\n  assumes f: \"stutter_sampler f \\<sigma>\"\n      and lo: \"f k \\<le> n\" and hi: \"n < f (Suc k)\"\n    shows \"\\<sigma> n = \\<sigma> (f k)\"", "lemma stutter_sampler_interval:\n  assumes f: \"stutter_sampler f \\<sigma>\"\n  obtains k where \"f k \\<le> n\" and \"n < f (Suc k)\"", "lemma id_stutter_sampler [iff]: \"stutter_sampler id \\<sigma>\"", "lemma stutter_sampler_comp:\n  assumes f: \"stutter_sampler f \\<sigma>\"\n      and g: \"stutter_sampler g (\\<sigma> \\<circ> f)\"\n  shows \"stutter_sampler (f \\<circ> g) \\<sigma>\"", "lemma stutter_sampler_suffix:\n  assumes f: \"stutter_sampler f \\<sigma>\"\n  shows \"stutter_sampler (\\<lambda>k. f (n+k) - f n) (suffix (f n) \\<sigma>)\"", "lemma stutter_sampled_0:\n  assumes \"stutter_sampler f \\<sigma>\"\n  shows \"\\<sigma> (f 0) = \\<sigma> 0\"", "lemma stutter_sampled_in_range:\n  assumes f: \"stutter_sampler f \\<sigma>\" and s: \"s \\<in> range \\<sigma>\"\n  shows \"s \\<in> range (\\<sigma> \\<circ> f)\"", "lemma stutter_sampled_range:\n  \"range (\\<sigma> \\<circ> f) = range \\<sigma>\" if \"stutter_sampler f \\<sigma>\"", "lemma stutter_sampled_precedence:\n  assumes f: \"stutter_sampler f \\<sigma>\" and ij: \"i \\<le> j\"\n  obtains k l where \"k \\<le> l\" \"\\<sigma> (f k) = \\<sigma> i\" \"\\<sigma> (f l) = \\<sigma> j\"", "lemma max_stutter_sampler: \n  \"stutter_sampler (max_stutter_sampler \\<sigma>) \\<sigma>\" (is \"stutter_sampler ?ms _\")", "lemma stutter_freeI:\n  assumes \"\\<And>k n. \\<lbrakk>\\<sigma> (Suc k) = \\<sigma> k; n>k\\<rbrakk> \\<Longrightarrow> \\<sigma> n = \\<sigma> k\"\n  shows \"stutter_free \\<sigma>\"", "lemma stutter_freeD:\n  assumes \"stutter_free \\<sigma>\" and \"\\<sigma> (Suc k) = \\<sigma> k\" and \"n>k\"\n  shows \"\\<sigma> n = \\<sigma> k\"", "lemma stutter_free_suffix: \n  assumes sigma: \"stutter_free \\<sigma>\"\n  shows \"stutter_free (suffix k \\<sigma>)\"", "lemma stutter_reduced_0: \"(\\<natural>\\<sigma>) 0 = \\<sigma> 0\"", "lemma stutter_free_reduced:\n  assumes sigma: \"stutter_free \\<sigma>\"\n  shows \"\\<natural>\\<sigma> = \\<sigma>\"", "lemma max_stutter_sampler_nostuttering:\n  assumes stut: \"\\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> (max_stutter_sampler \\<sigma> k)\"\n      and n: \"n > max_stutter_sampler \\<sigma> k\" (is \"_ > ?ms k\")\n  shows \"\\<sigma> n = \\<sigma> (?ms k)\"", "lemma stutter_reduced_stutter_free: \"stutter_free (\\<natural>\\<sigma>)\"", "lemma stutter_reduced_suffix: \"\\<natural> (suffix k (\\<natural>\\<sigma>)) = suffix k (\\<natural>\\<sigma>)\"", "lemma stutter_reduced_reduced: \"\\<natural>\\<natural>\\<sigma> = \\<natural>\\<sigma>\"", "theorem sample_max_sample:\n  assumes f: \"stutter_sampler f \\<sigma>\"\n  shows \"\\<natural>(\\<sigma> \\<circ> f) = \\<natural>\\<sigma>\""], "translations": [["", "lemma strict_mono_exceeds:\n  assumes f: \"strict_mono (f::nat \\<Rightarrow> nat)\"\n  shows \"\\<exists>k. n < f k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k. n < f k", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>k. 0 < f k\n 2. \\<And>n. \\<exists>k. n < f k \\<Longrightarrow> \\<exists>k. Suc n < f k", "from f"], ["proof (chain)\npicking this:\n  strict_mono f", "have \"f 0 < f 1\""], ["proof (prove)\nusing this:\n  strict_mono f\n\ngoal (1 subgoal):\n 1. f 0 < f 1", "by (rule strict_monoD) simp"], ["proof (state)\nthis:\n  f 0 < f 1\n\ngoal (2 subgoals):\n 1. \\<exists>k. 0 < f k\n 2. \\<And>n. \\<exists>k. n < f k \\<Longrightarrow> \\<exists>k. Suc n < f k", "hence \"0 < f 1\""], ["proof (prove)\nusing this:\n  f 0 < f 1\n\ngoal (1 subgoal):\n 1. 0 < f 1", "by simp"], ["proof (state)\nthis:\n  0 < f 1\n\ngoal (2 subgoals):\n 1. \\<exists>k. 0 < f k\n 2. \\<And>n. \\<exists>k. n < f k \\<Longrightarrow> \\<exists>k. Suc n < f k", "thus \"\\<exists>k. 0 < f k\""], ["proof (prove)\nusing this:\n  0 < f 1\n\ngoal (1 subgoal):\n 1. \\<exists>k. 0 < f k", ".."], ["proof (state)\nthis:\n  \\<exists>k. 0 < f k\n\ngoal (1 subgoal):\n 1. \\<And>n. \\<exists>k. n < f k \\<Longrightarrow> \\<exists>k. Suc n < f k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. \\<exists>k. n < f k \\<Longrightarrow> \\<exists>k. Suc n < f k", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. \\<exists>k. n < f k \\<Longrightarrow> \\<exists>k. Suc n < f k", "assume \"\\<exists>k. n < f k\""], ["proof (state)\nthis:\n  \\<exists>k. n < f k\n\ngoal (1 subgoal):\n 1. \\<And>n. \\<exists>k. n < f k \\<Longrightarrow> \\<exists>k. Suc n < f k", "then"], ["proof (chain)\npicking this:\n  \\<exists>k. n < f k", "obtain k where \"n < f k\""], ["proof (prove)\nusing this:\n  \\<exists>k. n < f k\n\ngoal (1 subgoal):\n 1. (\\<And>k. n < f k \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", ".."], ["proof (state)\nthis:\n  n < f k\n\ngoal (1 subgoal):\n 1. \\<And>n. \\<exists>k. n < f k \\<Longrightarrow> \\<exists>k. Suc n < f k", "hence \"Suc n \\<le> f k\""], ["proof (prove)\nusing this:\n  n < f k\n\ngoal (1 subgoal):\n 1. Suc n \\<le> f k", "by simp"], ["proof (state)\nthis:\n  Suc n \\<le> f k\n\ngoal (1 subgoal):\n 1. \\<And>n. \\<exists>k. n < f k \\<Longrightarrow> \\<exists>k. Suc n < f k", "also"], ["proof (state)\nthis:\n  Suc n \\<le> f k\n\ngoal (1 subgoal):\n 1. \\<And>n. \\<exists>k. n < f k \\<Longrightarrow> \\<exists>k. Suc n < f k", "from f"], ["proof (chain)\npicking this:\n  strict_mono f", "have \"f k < f (Suc k)\""], ["proof (prove)\nusing this:\n  strict_mono f\n\ngoal (1 subgoal):\n 1. f k < f (Suc k)", "by (rule strict_monoD) simp"], ["proof (state)\nthis:\n  f k < f (Suc k)\n\ngoal (1 subgoal):\n 1. \\<And>n. \\<exists>k. n < f k \\<Longrightarrow> \\<exists>k. Suc n < f k", "finally"], ["proof (chain)\npicking this:\n  Suc n < f (Suc k)", "show \"\\<exists>k. Suc n < f k\""], ["proof (prove)\nusing this:\n  Suc n < f (Suc k)\n\ngoal (1 subgoal):\n 1. \\<exists>k. Suc n < f k", ".."], ["proof (state)\nthis:\n  \\<exists>k. Suc n < f k\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  More precisely, any natural number \\<open>n \\<ge> f 0\\<close> lies in the interval\n  between \\<open>f k\\<close> and \\<open>f (Suc k)\\<close>, for some \\<open>k\\<close>.\n\\<close>"], ["", "lemma strict_mono_interval:\n  assumes f: \"strict_mono (f::nat \\<Rightarrow> nat)\" and n: \"f 0 \\<le> n\"\n  obtains k where \"f k \\<le> n\" and \"n < f (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>f k \\<le> n; n < f (Suc k)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>f k \\<le> n; n < f (Suc k)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from f[THEN strict_mono_exceeds]"], ["proof (chain)\npicking this:\n  \\<exists>k. ?n < f k", "obtain m where m: \"n < f m\""], ["proof (prove)\nusing this:\n  \\<exists>k. ?n < f k\n\ngoal (1 subgoal):\n 1. (\\<And>m. n < f m \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", ".."], ["proof (state)\nthis:\n  n < f m\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>f k \\<le> n; n < f (Suc k)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"m \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<noteq> 0", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. m = 0 \\<Longrightarrow> False", "assume \"m = 0\""], ["proof (state)\nthis:\n  m = 0\n\ngoal (1 subgoal):\n 1. m = 0 \\<Longrightarrow> False", "with m n"], ["proof (chain)\npicking this:\n  n < f m\n  f 0 \\<le> n\n  m = 0", "show \"False\""], ["proof (prove)\nusing this:\n  n < f m\n  f 0 \\<le> n\n  m = 0\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>f k \\<le> n; n < f (Suc k)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with m"], ["proof (chain)\npicking this:\n  n < f m\n  m \\<noteq> 0", "obtain m' where m': \"n < f (Suc m')\""], ["proof (prove)\nusing this:\n  n < f m\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>m'. n < f (Suc m') \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: gr0_conv_Suc)"], ["proof (state)\nthis:\n  n < f (Suc m')\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>f k \\<le> n; n < f (Suc k)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "let ?k = \"LEAST k. n < f (Suc k)\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>f k \\<le> n; n < f (Suc k)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from m'"], ["proof (chain)\npicking this:\n  n < f (Suc m')", "have 1: \"n < f (Suc ?k)\""], ["proof (prove)\nusing this:\n  n < f (Suc m')\n\ngoal (1 subgoal):\n 1. n < f (Suc (LEAST k. n < f (Suc k)))", "by (rule LeastI)"], ["proof (state)\nthis:\n  n < f (Suc (LEAST k. n < f (Suc k)))\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>f k \\<le> n; n < f (Suc k)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"f ?k \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (LEAST k. n < f (Suc k)) \\<le> n", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> f (LEAST k. n < f (Suc k)) \\<le> n \\<Longrightarrow> False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> f (LEAST k. n < f (Suc k)) \\<le> n\n\ngoal (1 subgoal):\n 1. \\<not> f (LEAST k. n < f (Suc k)) \\<le> n \\<Longrightarrow> False", "hence k: \"n < f ?k\""], ["proof (prove)\nusing this:\n  \\<not> f (LEAST k. n < f (Suc k)) \\<le> n\n\ngoal (1 subgoal):\n 1. n < f (LEAST k. n < f (Suc k))", "by simp"], ["proof (state)\nthis:\n  n < f (LEAST k. n < f (Suc k))\n\ngoal (1 subgoal):\n 1. \\<not> f (LEAST k. n < f (Suc k)) \\<le> n \\<Longrightarrow> False", "show \"False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof (cases \"?k\")"], ["proof (state)\ngoal (2 subgoals):\n 1. (LEAST k. n < f (Suc k)) = 0 \\<Longrightarrow> False\n 2. \\<And>nat. (LEAST k. n < f (Suc k)) = Suc nat \\<Longrightarrow> False", "case 0"], ["proof (state)\nthis:\n  (LEAST k. n < f (Suc k)) = 0\n\ngoal (2 subgoals):\n 1. (LEAST k. n < f (Suc k)) = 0 \\<Longrightarrow> False\n 2. \\<And>nat. (LEAST k. n < f (Suc k)) = Suc nat \\<Longrightarrow> False", "with k n"], ["proof (chain)\npicking this:\n  n < f (LEAST k. n < f (Suc k))\n  f 0 \\<le> n\n  (LEAST k. n < f (Suc k)) = 0", "show \"False\""], ["proof (prove)\nusing this:\n  n < f (LEAST k. n < f (Suc k))\n  f 0 \\<le> n\n  (LEAST k. n < f (Suc k)) = 0\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>nat. (LEAST k. n < f (Suc k)) = Suc nat \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat. (LEAST k. n < f (Suc k)) = Suc nat \\<Longrightarrow> False", "case Suc"], ["proof (state)\nthis:\n  (LEAST k. n < f (Suc k)) = Suc nat_\n\ngoal (1 subgoal):\n 1. \\<And>nat. (LEAST k. n < f (Suc k)) = Suc nat \\<Longrightarrow> False", "with k"], ["proof (chain)\npicking this:\n  n < f (LEAST k. n < f (Suc k))\n  (LEAST k. n < f (Suc k)) = Suc nat_", "show \"False\""], ["proof (prove)\nusing this:\n  n < f (LEAST k. n < f (Suc k))\n  (LEAST k. n < f (Suc k)) = Suc nat_\n\ngoal (1 subgoal):\n 1. False", "by (auto dest: Least_le)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f (LEAST k. n < f (Suc k)) \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>f k \\<le> n; n < f (Suc k)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with 1 that"], ["proof (chain)\npicking this:\n  n < f (Suc (LEAST k. n < f (Suc k)))\n  \\<lbrakk>f ?k \\<le> n; n < f (Suc ?k)\\<rbrakk> \\<Longrightarrow> thesis\n  f (LEAST k. n < f (Suc k)) \\<le> n", "show ?thesis"], ["proof (prove)\nusing this:\n  n < f (Suc (LEAST k. n < f (Suc k)))\n  \\<lbrakk>f ?k \\<le> n; n < f (Suc ?k)\\<rbrakk> \\<Longrightarrow> thesis\n  f (LEAST k. n < f (Suc k)) \\<le> n\n\ngoal (1 subgoal):\n 1. thesis", "by simp"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma strict_mono_comp:\n  assumes g: \"strict_mono (g::'a::order \\<Rightarrow> 'b::order)\"\n      and f: \"strict_mono (f::'b::order \\<Rightarrow> 'c::order)\"\n  shows \"strict_mono (f \\<circ> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_mono (f \\<circ> g)", "using assms"], ["proof (prove)\nusing this:\n  strict_mono g\n  strict_mono f\n\ngoal (1 subgoal):\n 1. strict_mono (f \\<circ> g)", "by (auto simp: strict_mono_def)"], ["", "section \\<open>Stuttering Sampling Functions\\<close>"], ["", "text \\<open>\n  Given an \\<open>\\<omega>\\<close>-sequence \\<open>\\<sigma>\\<close>, a stuttering sampling function \n  is a strictly monotonic function \\<open>f::nat \\<Rightarrow> nat\\<close> such that\n  \\<open>f 0 = 0\\<close> and for all \\<open>i\\<close> and all \\<open>f i \\<le> k < f (i+1)\\<close>,\n  the elements \\<open>\\<sigma> k\\<close> are the same. In other words, \\<open>f\\<close> skips some\n  (but not necessarily all) stuttering steps, but never skips a non-stuttering step.\n  Given such \\<open>\\<sigma>\\<close> and \\<open>f\\<close>, the (stuttering-)sampled\n  reduction of \\<open>\\<sigma>\\<close> is the sequence of elements of \\<open>\\<sigma>\\<close> at the\n  indices \\<open>f i\\<close>, which can simply be written as \\<open>\\<sigma> \\<circ> f\\<close>.\n\\<close>"], ["", "subsection \\<open>Definition and elementary properties\\<close>"], ["", "definition stutter_sampler where\n  \\<comment> \\<open>f is a stuttering sampling function for @{text \"\\<sigma>\"}\\<close>\n  \"stutter_sampler (f::nat \\<Rightarrow> nat) \\<sigma> \\<equiv>\n     f 0 = 0\n   \\<and> strict_mono f\n   \\<and> (\\<forall>k n. f k < n \\<and> n < f (Suc k) \\<longrightarrow> \\<sigma> n = \\<sigma> (f k))\""], ["", "lemma stutter_sampler_0: \"stutter_sampler f \\<sigma> \\<Longrightarrow> f 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stutter_sampler f \\<sigma> \\<Longrightarrow> f 0 = 0", "by (simp add: stutter_sampler_def)"], ["", "lemma stutter_sampler_mono: \"stutter_sampler f \\<sigma> \\<Longrightarrow> strict_mono f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stutter_sampler f \\<sigma> \\<Longrightarrow> strict_mono f", "by (simp add: stutter_sampler_def)"], ["", "lemma stutter_sampler_between:\n  assumes f: \"stutter_sampler f \\<sigma>\"\n      and lo: \"f k \\<le> n\" and hi: \"n < f (Suc k)\"\n    shows \"\\<sigma> n = \\<sigma> (f k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma> n = \\<sigma> (f k)", "using assms"], ["proof (prove)\nusing this:\n  stutter_sampler f \\<sigma>\n  f k \\<le> n\n  n < f (Suc k)\n\ngoal (1 subgoal):\n 1. \\<sigma> n = \\<sigma> (f k)", "by (auto simp: stutter_sampler_def less_le)"], ["", "lemma stutter_sampler_interval:\n  assumes f: \"stutter_sampler f \\<sigma>\"\n  obtains k where \"f k \\<le> n\" and \"n < f (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>f k \\<le> n; n < f (Suc k)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using f[THEN stutter_sampler_mono]"], ["proof (prove)\nusing this:\n  strict_mono f\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>f k \\<le> n; n < f (Suc k)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (rule strict_mono_interval)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<And>k.\n        \\<lbrakk>f k \\<le> n; n < f (Suc k)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    f 0 \\<le> ?n2\n 2. \\<And>k.\n       \\<lbrakk>\\<And>k.\n                   \\<lbrakk>f k \\<le> n; n < f (Suc k)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        f k \\<le> ?n2; ?n2 < f (Suc k)\\<rbrakk>\n       \\<Longrightarrow> thesis", "from f"], ["proof (chain)\npicking this:\n  stutter_sampler f \\<sigma>", "show \"f 0 \\<le> n\""], ["proof (prove)\nusing this:\n  stutter_sampler f \\<sigma>\n\ngoal (1 subgoal):\n 1. f 0 \\<le> n", "by (simp add: stutter_sampler_0)"], ["proof (state)\nthis:\n  f 0 \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<And>k.\n                   \\<lbrakk>f k \\<le> n; n < f (Suc k)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        f k \\<le> n; n < f (Suc k)\\<rbrakk>\n       \\<Longrightarrow> thesis", "qed"], ["", "text \\<open>\n  The identity function is a stuttering sampling function for any \\<open>\\<sigma>\\<close>.\n\\<close>"], ["", "lemma id_stutter_sampler [iff]: \"stutter_sampler id \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stutter_sampler id \\<sigma>", "by (auto simp: stutter_sampler_def strict_mono_def)"], ["", "text \\<open>\n  Stuttering sampling functions compose, sort of.\n\\<close>"], ["", "lemma stutter_sampler_comp:\n  assumes f: \"stutter_sampler f \\<sigma>\"\n      and g: \"stutter_sampler g (\\<sigma> \\<circ> f)\"\n  shows \"stutter_sampler (f \\<circ> g) \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stutter_sampler (f \\<circ> g) \\<sigma>", "proof (auto simp: stutter_sampler_def)"], ["proof (state)\ngoal (3 subgoals):\n 1. f (g 0) = 0\n 2. strict_mono (f \\<circ> g)\n 3. \\<And>k n.\n       \\<lbrakk>f (g k) < n; n < f (g (Suc k))\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> n = \\<sigma> (f (g k))", "from f g"], ["proof (chain)\npicking this:\n  stutter_sampler f \\<sigma>\n  stutter_sampler g (\\<sigma> \\<circ> f)", "show \"f (g 0) = 0\""], ["proof (prove)\nusing this:\n  stutter_sampler f \\<sigma>\n  stutter_sampler g (\\<sigma> \\<circ> f)\n\ngoal (1 subgoal):\n 1. f (g 0) = 0", "by (simp add: stutter_sampler_0)"], ["proof (state)\nthis:\n  f (g 0) = 0\n\ngoal (2 subgoals):\n 1. strict_mono (f \\<circ> g)\n 2. \\<And>k n.\n       \\<lbrakk>f (g k) < n; n < f (g (Suc k))\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> n = \\<sigma> (f (g k))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. strict_mono (f \\<circ> g)\n 2. \\<And>k n.\n       \\<lbrakk>f (g k) < n; n < f (g (Suc k))\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> n = \\<sigma> (f (g k))", "from g[THEN stutter_sampler_mono] f[THEN stutter_sampler_mono]"], ["proof (chain)\npicking this:\n  strict_mono g\n  strict_mono f", "show \"strict_mono (f \\<circ> g)\""], ["proof (prove)\nusing this:\n  strict_mono g\n  strict_mono f\n\ngoal (1 subgoal):\n 1. strict_mono (f \\<circ> g)", "by (rule strict_mono_comp)"], ["proof (state)\nthis:\n  strict_mono (f \\<circ> g)\n\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>f (g k) < n; n < f (g (Suc k))\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> n = \\<sigma> (f (g k))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>f (g k) < n; n < f (g (Suc k))\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> n = \\<sigma> (f (g k))", "fix i k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>f (g k) < n; n < f (g (Suc k))\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> n = \\<sigma> (f (g k))", "assume lo: \"f (g i) < k\" and hi: \"k < f (g (Suc i))\""], ["proof (state)\nthis:\n  f (g i) < k\n  k < f (g (Suc i))\n\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>f (g k) < n; n < f (g (Suc k))\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> n = \\<sigma> (f (g k))", "from f"], ["proof (chain)\npicking this:\n  stutter_sampler f \\<sigma>", "obtain m where 1: \"f m \\<le> k\" and 2: \"k < f (Suc m)\""], ["proof (prove)\nusing this:\n  stutter_sampler f \\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>f m \\<le> k; k < f (Suc m)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule stutter_sampler_interval)"], ["proof (state)\nthis:\n  f m \\<le> k\n  k < f (Suc m)\n\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>f (g k) < n; n < f (g (Suc k))\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> n = \\<sigma> (f (g k))", "with f"], ["proof (chain)\npicking this:\n  stutter_sampler f \\<sigma>\n  f m \\<le> k\n  k < f (Suc m)", "have 3: \"\\<sigma> k = \\<sigma> (f m)\""], ["proof (prove)\nusing this:\n  stutter_sampler f \\<sigma>\n  f m \\<le> k\n  k < f (Suc m)\n\ngoal (1 subgoal):\n 1. \\<sigma> k = \\<sigma> (f m)", "by (rule stutter_sampler_between)"], ["proof (state)\nthis:\n  \\<sigma> k = \\<sigma> (f m)\n\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>f (g k) < n; n < f (g (Suc k))\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> n = \\<sigma> (f (g k))", "from lo 2"], ["proof (chain)\npicking this:\n  f (g i) < k\n  k < f (Suc m)", "have \"f (g i) < f (Suc m)\""], ["proof (prove)\nusing this:\n  f (g i) < k\n  k < f (Suc m)\n\ngoal (1 subgoal):\n 1. f (g i) < f (Suc m)", "by simp"], ["proof (state)\nthis:\n  f (g i) < f (Suc m)\n\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>f (g k) < n; n < f (g (Suc k))\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> n = \\<sigma> (f (g k))", "with f[THEN stutter_sampler_mono]"], ["proof (chain)\npicking this:\n  strict_mono f\n  f (g i) < f (Suc m)", "have 4: \"g i \\<le> m\""], ["proof (prove)\nusing this:\n  strict_mono f\n  f (g i) < f (Suc m)\n\ngoal (1 subgoal):\n 1. g i \\<le> m", "by (simp add: strict_mono_less)"], ["proof (state)\nthis:\n  g i \\<le> m\n\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>f (g k) < n; n < f (g (Suc k))\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> n = \\<sigma> (f (g k))", "from 1 hi"], ["proof (chain)\npicking this:\n  f m \\<le> k\n  k < f (g (Suc i))", "have \"f m < f (g (Suc i))\""], ["proof (prove)\nusing this:\n  f m \\<le> k\n  k < f (g (Suc i))\n\ngoal (1 subgoal):\n 1. f m < f (g (Suc i))", "by simp"], ["proof (state)\nthis:\n  f m < f (g (Suc i))\n\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>f (g k) < n; n < f (g (Suc k))\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> n = \\<sigma> (f (g k))", "with f[THEN stutter_sampler_mono]"], ["proof (chain)\npicking this:\n  strict_mono f\n  f m < f (g (Suc i))", "have 5: \"m < g (Suc i)\""], ["proof (prove)\nusing this:\n  strict_mono f\n  f m < f (g (Suc i))\n\ngoal (1 subgoal):\n 1. m < g (Suc i)", "by (simp add: strict_mono_less)"], ["proof (state)\nthis:\n  m < g (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>f (g k) < n; n < f (g (Suc k))\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> n = \\<sigma> (f (g k))", "from g 4 5"], ["proof (chain)\npicking this:\n  stutter_sampler g (\\<sigma> \\<circ> f)\n  g i \\<le> m\n  m < g (Suc i)", "have \"(\\<sigma> \\<circ> f) m = (\\<sigma> \\<circ> f) (g i)\""], ["proof (prove)\nusing this:\n  stutter_sampler g (\\<sigma> \\<circ> f)\n  g i \\<le> m\n  m < g (Suc i)\n\ngoal (1 subgoal):\n 1. (\\<sigma> \\<circ> f) m = (\\<sigma> \\<circ> f) (g i)", "by (rule stutter_sampler_between)"], ["proof (state)\nthis:\n  (\\<sigma> \\<circ> f) m = (\\<sigma> \\<circ> f) (g i)\n\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>f (g k) < n; n < f (g (Suc k))\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> n = \\<sigma> (f (g k))", "with 3"], ["proof (chain)\npicking this:\n  \\<sigma> k = \\<sigma> (f m)\n  (\\<sigma> \\<circ> f) m = (\\<sigma> \\<circ> f) (g i)", "show \"\\<sigma> k = \\<sigma> (f (g i))\""], ["proof (prove)\nusing this:\n  \\<sigma> k = \\<sigma> (f m)\n  (\\<sigma> \\<circ> f) m = (\\<sigma> \\<circ> f) (g i)\n\ngoal (1 subgoal):\n 1. \\<sigma> k = \\<sigma> (f (g i))", "by simp"], ["proof (state)\nthis:\n  \\<sigma> k = \\<sigma> (f (g i))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Stuttering sampling functions can be extended to suffixes.\n\\<close>"], ["", "lemma stutter_sampler_suffix:\n  assumes f: \"stutter_sampler f \\<sigma>\"\n  shows \"stutter_sampler (\\<lambda>k. f (n+k) - f n) (suffix (f n) \\<sigma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stutter_sampler (\\<lambda>k. f (n + k) - f n) (suffix (f n) \\<sigma>)", "proof (auto simp: stutter_sampler_def strict_mono_def)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y. x < y \\<Longrightarrow> f (n + x) - f n < f (n + y) - f n\n 2. \\<And>k na.\n       \\<lbrakk>f (n + k) - f n < na; na < f (Suc (n + k)) - f n\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> (f n + na) =\n                         \\<sigma> (f n + (f (n + k) - f n))", "fix i j"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y. x < y \\<Longrightarrow> f (n + x) - f n < f (n + y) - f n\n 2. \\<And>k na.\n       \\<lbrakk>f (n + k) - f n < na; na < f (Suc (n + k)) - f n\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> (f n + na) =\n                         \\<sigma> (f n + (f (n + k) - f n))", "assume ij: \"(i::nat) < j\""], ["proof (state)\nthis:\n  i < j\n\ngoal (2 subgoals):\n 1. \\<And>x y. x < y \\<Longrightarrow> f (n + x) - f n < f (n + y) - f n\n 2. \\<And>k na.\n       \\<lbrakk>f (n + k) - f n < na; na < f (Suc (n + k)) - f n\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> (f n + na) =\n                         \\<sigma> (f n + (f (n + k) - f n))", "from f"], ["proof (chain)\npicking this:\n  stutter_sampler f \\<sigma>", "have mono: \"strict_mono f\""], ["proof (prove)\nusing this:\n  stutter_sampler f \\<sigma>\n\ngoal (1 subgoal):\n 1. strict_mono f", "by (rule stutter_sampler_mono)"], ["proof (state)\nthis:\n  strict_mono f\n\ngoal (2 subgoals):\n 1. \\<And>x y. x < y \\<Longrightarrow> f (n + x) - f n < f (n + y) - f n\n 2. \\<And>k na.\n       \\<lbrakk>f (n + k) - f n < na; na < f (Suc (n + k)) - f n\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> (f n + na) =\n                         \\<sigma> (f n + (f (n + k) - f n))", "from mono[THEN strict_mono_mono]"], ["proof (chain)\npicking this:\n  mono f", "have \"f n \\<le> f (n+i)\""], ["proof (prove)\nusing this:\n  mono f\n\ngoal (1 subgoal):\n 1. f n \\<le> f (n + i)", "by (rule monoD) simp"], ["proof (state)\nthis:\n  f n \\<le> f (n + i)\n\ngoal (2 subgoals):\n 1. \\<And>x y. x < y \\<Longrightarrow> f (n + x) - f n < f (n + y) - f n\n 2. \\<And>k na.\n       \\<lbrakk>f (n + k) - f n < na; na < f (Suc (n + k)) - f n\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> (f n + na) =\n                         \\<sigma> (f n + (f (n + k) - f n))", "moreover"], ["proof (state)\nthis:\n  f n \\<le> f (n + i)\n\ngoal (2 subgoals):\n 1. \\<And>x y. x < y \\<Longrightarrow> f (n + x) - f n < f (n + y) - f n\n 2. \\<And>k na.\n       \\<lbrakk>f (n + k) - f n < na; na < f (Suc (n + k)) - f n\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> (f n + na) =\n                         \\<sigma> (f n + (f (n + k) - f n))", "from mono[THEN strict_mono_mono]"], ["proof (chain)\npicking this:\n  mono f", "have \"f n \\<le> f (n+j)\""], ["proof (prove)\nusing this:\n  mono f\n\ngoal (1 subgoal):\n 1. f n \\<le> f (n + j)", "by (rule monoD) simp"], ["proof (state)\nthis:\n  f n \\<le> f (n + j)\n\ngoal (2 subgoals):\n 1. \\<And>x y. x < y \\<Longrightarrow> f (n + x) - f n < f (n + y) - f n\n 2. \\<And>k na.\n       \\<lbrakk>f (n + k) - f n < na; na < f (Suc (n + k)) - f n\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> (f n + na) =\n                         \\<sigma> (f n + (f (n + k) - f n))", "moreover"], ["proof (state)\nthis:\n  f n \\<le> f (n + j)\n\ngoal (2 subgoals):\n 1. \\<And>x y. x < y \\<Longrightarrow> f (n + x) - f n < f (n + y) - f n\n 2. \\<And>k na.\n       \\<lbrakk>f (n + k) - f n < na; na < f (Suc (n + k)) - f n\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> (f n + na) =\n                         \\<sigma> (f n + (f (n + k) - f n))", "from mono ij"], ["proof (chain)\npicking this:\n  strict_mono f\n  i < j", "have \"f (n+i) < f (n+j)\""], ["proof (prove)\nusing this:\n  strict_mono f\n  i < j\n\ngoal (1 subgoal):\n 1. f (n + i) < f (n + j)", "by (auto intro: strict_monoD)"], ["proof (state)\nthis:\n  f (n + i) < f (n + j)\n\ngoal (2 subgoals):\n 1. \\<And>x y. x < y \\<Longrightarrow> f (n + x) - f n < f (n + y) - f n\n 2. \\<And>k na.\n       \\<lbrakk>f (n + k) - f n < na; na < f (Suc (n + k)) - f n\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> (f n + na) =\n                         \\<sigma> (f n + (f (n + k) - f n))", "ultimately"], ["proof (chain)\npicking this:\n  f n \\<le> f (n + i)\n  f n \\<le> f (n + j)\n  f (n + i) < f (n + j)", "show \"f (n+i) - f n < f (n+j) - f n\""], ["proof (prove)\nusing this:\n  f n \\<le> f (n + i)\n  f n \\<le> f (n + j)\n  f (n + i) < f (n + j)\n\ngoal (1 subgoal):\n 1. f (n + i) - f n < f (n + j) - f n", "by simp"], ["proof (state)\nthis:\n  f (n + i) - f n < f (n + j) - f n\n\ngoal (1 subgoal):\n 1. \\<And>k na.\n       \\<lbrakk>f (n + k) - f n < na; na < f (Suc (n + k)) - f n\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> (f n + na) =\n                         \\<sigma> (f n + (f (n + k) - f n))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k na.\n       \\<lbrakk>f (n + k) - f n < na; na < f (Suc (n + k)) - f n\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> (f n + na) =\n                         \\<sigma> (f n + (f (n + k) - f n))", "fix i k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k na.\n       \\<lbrakk>f (n + k) - f n < na; na < f (Suc (n + k)) - f n\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> (f n + na) =\n                         \\<sigma> (f n + (f (n + k) - f n))", "assume lo: \"f (n+i) - f n < k\" and hi: \"k < f (Suc (n+i)) - f n\""], ["proof (state)\nthis:\n  f (n + i) - f n < k\n  k < f (Suc (n + i)) - f n\n\ngoal (1 subgoal):\n 1. \\<And>k na.\n       \\<lbrakk>f (n + k) - f n < na; na < f (Suc (n + k)) - f n\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> (f n + na) =\n                         \\<sigma> (f n + (f (n + k) - f n))", "from lo"], ["proof (chain)\npicking this:\n  f (n + i) - f n < k", "have \"f (n+i) \\<le> f n + k\""], ["proof (prove)\nusing this:\n  f (n + i) - f n < k\n\ngoal (1 subgoal):\n 1. f (n + i) \\<le> f n + k", "by simp"], ["proof (state)\nthis:\n  f (n + i) \\<le> f n + k\n\ngoal (1 subgoal):\n 1. \\<And>k na.\n       \\<lbrakk>f (n + k) - f n < na; na < f (Suc (n + k)) - f n\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> (f n + na) =\n                         \\<sigma> (f n + (f (n + k) - f n))", "moreover"], ["proof (state)\nthis:\n  f (n + i) \\<le> f n + k\n\ngoal (1 subgoal):\n 1. \\<And>k na.\n       \\<lbrakk>f (n + k) - f n < na; na < f (Suc (n + k)) - f n\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> (f n + na) =\n                         \\<sigma> (f n + (f (n + k) - f n))", "from hi"], ["proof (chain)\npicking this:\n  k < f (Suc (n + i)) - f n", "have \"f n + k < f (Suc (n + i))\""], ["proof (prove)\nusing this:\n  k < f (Suc (n + i)) - f n\n\ngoal (1 subgoal):\n 1. f n + k < f (Suc (n + i))", "by simp"], ["proof (state)\nthis:\n  f n + k < f (Suc (n + i))\n\ngoal (1 subgoal):\n 1. \\<And>k na.\n       \\<lbrakk>f (n + k) - f n < na; na < f (Suc (n + k)) - f n\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> (f n + na) =\n                         \\<sigma> (f n + (f (n + k) - f n))", "moreover"], ["proof (state)\nthis:\n  f n + k < f (Suc (n + i))\n\ngoal (1 subgoal):\n 1. \\<And>k na.\n       \\<lbrakk>f (n + k) - f n < na; na < f (Suc (n + k)) - f n\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> (f n + na) =\n                         \\<sigma> (f n + (f (n + k) - f n))", "from f[THEN stutter_sampler_mono, THEN strict_mono_mono]"], ["proof (chain)\npicking this:\n  mono f", "have \"f n \\<le> f (n+i)\""], ["proof (prove)\nusing this:\n  mono f\n\ngoal (1 subgoal):\n 1. f n \\<le> f (n + i)", "by (rule monoD) simp"], ["proof (state)\nthis:\n  f n \\<le> f (n + i)\n\ngoal (1 subgoal):\n 1. \\<And>k na.\n       \\<lbrakk>f (n + k) - f n < na; na < f (Suc (n + k)) - f n\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> (f n + na) =\n                         \\<sigma> (f n + (f (n + k) - f n))", "ultimately"], ["proof (chain)\npicking this:\n  f (n + i) \\<le> f n + k\n  f n + k < f (Suc (n + i))\n  f n \\<le> f (n + i)", "show \"\\<sigma> (f n + k) = \\<sigma> (f n + (f (n+i) - f n))\""], ["proof (prove)\nusing this:\n  f (n + i) \\<le> f n + k\n  f n + k < f (Suc (n + i))\n  f n \\<le> f (n + i)\n\ngoal (1 subgoal):\n 1. \\<sigma> (f n + k) = \\<sigma> (f n + (f (n + i) - f n))", "by (auto dest: stutter_sampler_between[OF f])"], ["proof (state)\nthis:\n  \\<sigma> (f n + k) = \\<sigma> (f n + (f (n + i) - f n))\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Preservation of properties through stuttering sampling\\<close>"], ["", "text \\<open>\n  Stuttering sampling preserves the initial element of the sequence, as well as\n  the presence and relative ordering of different elements.\n\\<close>"], ["", "lemma stutter_sampled_0:\n  assumes \"stutter_sampler f \\<sigma>\"\n  shows \"\\<sigma> (f 0) = \\<sigma> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma> (f 0) = \\<sigma> 0", "using assms[THEN stutter_sampler_0]"], ["proof (prove)\nusing this:\n  f 0 = 0\n\ngoal (1 subgoal):\n 1. \\<sigma> (f 0) = \\<sigma> 0", "by simp"], ["", "lemma stutter_sampled_in_range:\n  assumes f: \"stutter_sampler f \\<sigma>\" and s: \"s \\<in> range \\<sigma>\"\n  shows \"s \\<in> range (\\<sigma> \\<circ> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> range (\\<sigma> \\<circ> f)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<in> range (\\<sigma> \\<circ> f)", "from s"], ["proof (chain)\npicking this:\n  s \\<in> range \\<sigma>", "obtain n where n: \"\\<sigma> n = s\""], ["proof (prove)\nusing this:\n  s \\<in> range \\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<And>n. \\<sigma> n = s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<sigma> n = s\n\ngoal (1 subgoal):\n 1. s \\<in> range (\\<sigma> \\<circ> f)", "from f"], ["proof (chain)\npicking this:\n  stutter_sampler f \\<sigma>", "obtain k where \"f k \\<le> n\" \"n < f (Suc k)\""], ["proof (prove)\nusing this:\n  stutter_sampler f \\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>f k \\<le> n; n < f (Suc k)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule stutter_sampler_interval)"], ["proof (state)\nthis:\n  f k \\<le> n\n  n < f (Suc k)\n\ngoal (1 subgoal):\n 1. s \\<in> range (\\<sigma> \\<circ> f)", "with f"], ["proof (chain)\npicking this:\n  stutter_sampler f \\<sigma>\n  f k \\<le> n\n  n < f (Suc k)", "have \"\\<sigma> n = \\<sigma> (f k)\""], ["proof (prove)\nusing this:\n  stutter_sampler f \\<sigma>\n  f k \\<le> n\n  n < f (Suc k)\n\ngoal (1 subgoal):\n 1. \\<sigma> n = \\<sigma> (f k)", "by (rule stutter_sampler_between)"], ["proof (state)\nthis:\n  \\<sigma> n = \\<sigma> (f k)\n\ngoal (1 subgoal):\n 1. s \\<in> range (\\<sigma> \\<circ> f)", "with n"], ["proof (chain)\npicking this:\n  \\<sigma> n = s\n  \\<sigma> n = \\<sigma> (f k)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<sigma> n = s\n  \\<sigma> n = \\<sigma> (f k)\n\ngoal (1 subgoal):\n 1. s \\<in> range (\\<sigma> \\<circ> f)", "by auto"], ["proof (state)\nthis:\n  s \\<in> range (\\<sigma> \\<circ> f)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stutter_sampled_range:\n  \"range (\\<sigma> \\<circ> f) = range \\<sigma>\" if \"stutter_sampler f \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (\\<sigma> \\<circ> f) = range \\<sigma>", "using that stutter_sampled_in_range [of f \\<sigma>]"], ["proof (prove)\nusing this:\n  stutter_sampler f \\<sigma>\n  \\<lbrakk>stutter_sampler f \\<sigma>; ?s \\<in> range \\<sigma>\\<rbrakk>\n  \\<Longrightarrow> ?s \\<in> range (\\<sigma> \\<circ> f)\n\ngoal (1 subgoal):\n 1. range (\\<sigma> \\<circ> f) = range \\<sigma>", "by auto"], ["", "lemma stutter_sampled_precedence:\n  assumes f: \"stutter_sampler f \\<sigma>\" and ij: \"i \\<le> j\"\n  obtains k l where \"k \\<le> l\" \"\\<sigma> (f k) = \\<sigma> i\" \"\\<sigma> (f l) = \\<sigma> j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k l.\n        \\<lbrakk>k \\<le> l; \\<sigma> (f k) = \\<sigma> i;\n         \\<sigma> (f l) = \\<sigma> j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>k l.\n        \\<lbrakk>k \\<le> l; \\<sigma> (f k) = \\<sigma> i;\n         \\<sigma> (f l) = \\<sigma> j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from f"], ["proof (chain)\npicking this:\n  stutter_sampler f \\<sigma>", "obtain k where k: \"f k \\<le> i\" \"i < f (Suc k)\""], ["proof (prove)\nusing this:\n  stutter_sampler f \\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>f k \\<le> i; i < f (Suc k)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule stutter_sampler_interval)"], ["proof (state)\nthis:\n  f k \\<le> i\n  i < f (Suc k)\n\ngoal (1 subgoal):\n 1. (\\<And>k l.\n        \\<lbrakk>k \\<le> l; \\<sigma> (f k) = \\<sigma> i;\n         \\<sigma> (f l) = \\<sigma> j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with f"], ["proof (chain)\npicking this:\n  stutter_sampler f \\<sigma>\n  f k \\<le> i\n  i < f (Suc k)", "have 1: \"\\<sigma> i = \\<sigma> (f k)\""], ["proof (prove)\nusing this:\n  stutter_sampler f \\<sigma>\n  f k \\<le> i\n  i < f (Suc k)\n\ngoal (1 subgoal):\n 1. \\<sigma> i = \\<sigma> (f k)", "by (rule stutter_sampler_between)"], ["proof (state)\nthis:\n  \\<sigma> i = \\<sigma> (f k)\n\ngoal (1 subgoal):\n 1. (\\<And>k l.\n        \\<lbrakk>k \\<le> l; \\<sigma> (f k) = \\<sigma> i;\n         \\<sigma> (f l) = \\<sigma> j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from f"], ["proof (chain)\npicking this:\n  stutter_sampler f \\<sigma>", "obtain l where l: \"f l \\<le> j\" \"j < f (Suc l)\""], ["proof (prove)\nusing this:\n  stutter_sampler f \\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>f l \\<le> j; j < f (Suc l)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule stutter_sampler_interval)"], ["proof (state)\nthis:\n  f l \\<le> j\n  j < f (Suc l)\n\ngoal (1 subgoal):\n 1. (\\<And>k l.\n        \\<lbrakk>k \\<le> l; \\<sigma> (f k) = \\<sigma> i;\n         \\<sigma> (f l) = \\<sigma> j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with f"], ["proof (chain)\npicking this:\n  stutter_sampler f \\<sigma>\n  f l \\<le> j\n  j < f (Suc l)", "have 2: \"\\<sigma> j = \\<sigma> (f l)\""], ["proof (prove)\nusing this:\n  stutter_sampler f \\<sigma>\n  f l \\<le> j\n  j < f (Suc l)\n\ngoal (1 subgoal):\n 1. \\<sigma> j = \\<sigma> (f l)", "by (rule stutter_sampler_between)"], ["proof (state)\nthis:\n  \\<sigma> j = \\<sigma> (f l)\n\ngoal (1 subgoal):\n 1. (\\<And>k l.\n        \\<lbrakk>k \\<le> l; \\<sigma> (f k) = \\<sigma> i;\n         \\<sigma> (f l) = \\<sigma> j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from k l ij"], ["proof (chain)\npicking this:\n  f k \\<le> i\n  i < f (Suc k)\n  f l \\<le> j\n  j < f (Suc l)\n  i \\<le> j", "have \"f k < f (Suc l)\""], ["proof (prove)\nusing this:\n  f k \\<le> i\n  i < f (Suc k)\n  f l \\<le> j\n  j < f (Suc l)\n  i \\<le> j\n\ngoal (1 subgoal):\n 1. f k < f (Suc l)", "by simp"], ["proof (state)\nthis:\n  f k < f (Suc l)\n\ngoal (1 subgoal):\n 1. (\\<And>k l.\n        \\<lbrakk>k \\<le> l; \\<sigma> (f k) = \\<sigma> i;\n         \\<sigma> (f l) = \\<sigma> j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with f[THEN stutter_sampler_mono]"], ["proof (chain)\npicking this:\n  strict_mono f\n  f k < f (Suc l)", "have \"k \\<le> l\""], ["proof (prove)\nusing this:\n  strict_mono f\n  f k < f (Suc l)\n\ngoal (1 subgoal):\n 1. k \\<le> l", "by (simp add: strict_mono_less)"], ["proof (state)\nthis:\n  k \\<le> l\n\ngoal (1 subgoal):\n 1. (\\<And>k l.\n        \\<lbrakk>k \\<le> l; \\<sigma> (f k) = \\<sigma> i;\n         \\<sigma> (f l) = \\<sigma> j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with 1 2 that"], ["proof (chain)\npicking this:\n  \\<sigma> i = \\<sigma> (f k)\n  \\<sigma> j = \\<sigma> (f l)\n  \\<lbrakk>?k \\<le> ?l; \\<sigma> (f ?k) = \\<sigma> i;\n   \\<sigma> (f ?l) = \\<sigma> j\\<rbrakk>\n  \\<Longrightarrow> thesis\n  k \\<le> l", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<sigma> i = \\<sigma> (f k)\n  \\<sigma> j = \\<sigma> (f l)\n  \\<lbrakk>?k \\<le> ?l; \\<sigma> (f ?k) = \\<sigma> i;\n   \\<sigma> (f ?l) = \\<sigma> j\\<rbrakk>\n  \\<Longrightarrow> thesis\n  k \\<le> l\n\ngoal (1 subgoal):\n 1. thesis", "by simp"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Maximal stuttering sampling\\<close>"], ["", "text \\<open>\n  We define a particular sampling function that is maximal in the sense that it\n  eliminates all finite stuttering. If a sequence ends with infinite stuttering\n  then it behaves as the identity over the (maximal such) suffix.\n\\<close>"], ["", "fun max_stutter_sampler where\n  \"max_stutter_sampler \\<sigma> 0 = 0\"\n| \"max_stutter_sampler \\<sigma> (Suc n) =\n    (let prev = max_stutter_sampler \\<sigma> n\n     in  if (\\<forall>k > prev. \\<sigma> k = \\<sigma> prev)\n         then Suc prev\n         else (LEAST k. prev < k \\<and> \\<sigma> k \\<noteq> \\<sigma> prev))\""], ["", "text \\<open>\n  \\<open>max_stutter_sampler\\<close> is indeed a stuttering sampling function.\n\\<close>"], ["", "lemma max_stutter_sampler: \n  \"stutter_sampler (max_stutter_sampler \\<sigma>) \\<sigma>\" (is \"stutter_sampler ?ms _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. stutter_sampler (max_stutter_sampler \\<sigma>) \\<sigma>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. stutter_sampler (max_stutter_sampler \\<sigma>) \\<sigma>", "have \"?ms 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> 0 = 0", "by simp"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> 0 = 0\n\ngoal (1 subgoal):\n 1. stutter_sampler (max_stutter_sampler \\<sigma>) \\<sigma>", "moreover"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> 0 = 0\n\ngoal (1 subgoal):\n 1. stutter_sampler (max_stutter_sampler \\<sigma>) \\<sigma>", "have \"\\<forall>n. ?ms n < ?ms (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n.\n       max_stutter_sampler \\<sigma> n < max_stutter_sampler \\<sigma> (Suc n)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       max_stutter_sampler \\<sigma> n < max_stutter_sampler \\<sigma> (Suc n)", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       max_stutter_sampler \\<sigma> n < max_stutter_sampler \\<sigma> (Suc n)", "show \"?ms n < ?ms (Suc n)\" (is \"?prev < ?next\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> n < max_stutter_sampler \\<sigma> (Suc n)", "proof (cases \"\\<forall>k > ?prev. \\<sigma> k = \\<sigma> ?prev\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>k>max_stutter_sampler \\<sigma> n.\n       \\<sigma> k =\n       \\<sigma> (max_stutter_sampler \\<sigma> n) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> n < max_stutter_sampler \\<sigma> (Suc n)\n 2. \\<not> (\\<forall>k>max_stutter_sampler \\<sigma> n.\n               \\<sigma> k =\n               \\<sigma> (max_stutter_sampler \\<sigma> n)) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> n < max_stutter_sampler \\<sigma> (Suc n)", "case True"], ["proof (state)\nthis:\n  \\<forall>k>max_stutter_sampler \\<sigma> n.\n     \\<sigma> k = \\<sigma> (max_stutter_sampler \\<sigma> n)\n\ngoal (2 subgoals):\n 1. \\<forall>k>max_stutter_sampler \\<sigma> n.\n       \\<sigma> k =\n       \\<sigma> (max_stutter_sampler \\<sigma> n) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> n < max_stutter_sampler \\<sigma> (Suc n)\n 2. \\<not> (\\<forall>k>max_stutter_sampler \\<sigma> n.\n               \\<sigma> k =\n               \\<sigma> (max_stutter_sampler \\<sigma> n)) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> n < max_stutter_sampler \\<sigma> (Suc n)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>k>max_stutter_sampler \\<sigma> n.\n     \\<sigma> k = \\<sigma> (max_stutter_sampler \\<sigma> n)\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> n < max_stutter_sampler \\<sigma> (Suc n)", "by (simp add: Let_def)"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> n < max_stutter_sampler \\<sigma> (Suc n)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k>max_stutter_sampler \\<sigma> n.\n               \\<sigma> k =\n               \\<sigma> (max_stutter_sampler \\<sigma> n)) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> n < max_stutter_sampler \\<sigma> (Suc n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k>max_stutter_sampler \\<sigma> n.\n               \\<sigma> k =\n               \\<sigma> (max_stutter_sampler \\<sigma> n)) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> n < max_stutter_sampler \\<sigma> (Suc n)", "case False"], ["proof (state)\nthis:\n  \\<not> (\\<forall>k>max_stutter_sampler \\<sigma> n.\n             \\<sigma> k = \\<sigma> (max_stutter_sampler \\<sigma> n))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k>max_stutter_sampler \\<sigma> n.\n               \\<sigma> k =\n               \\<sigma> (max_stutter_sampler \\<sigma> n)) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> n < max_stutter_sampler \\<sigma> (Suc n)", "hence \"\\<exists>k. ?prev < k \\<and> \\<sigma> k \\<noteq> \\<sigma> ?prev\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>k>max_stutter_sampler \\<sigma> n.\n             \\<sigma> k = \\<sigma> (max_stutter_sampler \\<sigma> n))\n\ngoal (1 subgoal):\n 1. \\<exists>k>max_stutter_sampler \\<sigma> n.\n       \\<sigma> k \\<noteq> \\<sigma> (max_stutter_sampler \\<sigma> n)", "by simp"], ["proof (state)\nthis:\n  \\<exists>k>max_stutter_sampler \\<sigma> n.\n     \\<sigma> k \\<noteq> \\<sigma> (max_stutter_sampler \\<sigma> n)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k>max_stutter_sampler \\<sigma> n.\n               \\<sigma> k =\n               \\<sigma> (max_stutter_sampler \\<sigma> n)) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> n < max_stutter_sampler \\<sigma> (Suc n)", "from this[THEN LeastI_ex]"], ["proof (chain)\npicking this:\n  max_stutter_sampler \\<sigma> n\n  < (LEAST k.\n        max_stutter_sampler \\<sigma> n < k \\<and>\n        \\<sigma> k \\<noteq>\n        \\<sigma> (max_stutter_sampler \\<sigma> n)) \\<and>\n  \\<sigma>\n   (LEAST k.\n       max_stutter_sampler \\<sigma> n < k \\<and>\n       \\<sigma> k \\<noteq>\n       \\<sigma> (max_stutter_sampler \\<sigma> n)) \\<noteq>\n  \\<sigma> (max_stutter_sampler \\<sigma> n)", "have \"?prev < (LEAST k. ?prev < k \\<and> \\<sigma> k \\<noteq> \\<sigma> ?prev)\""], ["proof (prove)\nusing this:\n  max_stutter_sampler \\<sigma> n\n  < (LEAST k.\n        max_stutter_sampler \\<sigma> n < k \\<and>\n        \\<sigma> k \\<noteq>\n        \\<sigma> (max_stutter_sampler \\<sigma> n)) \\<and>\n  \\<sigma>\n   (LEAST k.\n       max_stutter_sampler \\<sigma> n < k \\<and>\n       \\<sigma> k \\<noteq>\n       \\<sigma> (max_stutter_sampler \\<sigma> n)) \\<noteq>\n  \\<sigma> (max_stutter_sampler \\<sigma> n)\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> n\n    < (LEAST k.\n          max_stutter_sampler \\<sigma> n < k \\<and>\n          \\<sigma> k \\<noteq> \\<sigma> (max_stutter_sampler \\<sigma> n))", ".."], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> n\n  < (LEAST k.\n        max_stutter_sampler \\<sigma> n < k \\<and>\n        \\<sigma> k \\<noteq> \\<sigma> (max_stutter_sampler \\<sigma> n))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k>max_stutter_sampler \\<sigma> n.\n               \\<sigma> k =\n               \\<sigma> (max_stutter_sampler \\<sigma> n)) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> n < max_stutter_sampler \\<sigma> (Suc n)", "with False"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>k>max_stutter_sampler \\<sigma> n.\n             \\<sigma> k = \\<sigma> (max_stutter_sampler \\<sigma> n))\n  max_stutter_sampler \\<sigma> n\n  < (LEAST k.\n        max_stutter_sampler \\<sigma> n < k \\<and>\n        \\<sigma> k \\<noteq> \\<sigma> (max_stutter_sampler \\<sigma> n))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>k>max_stutter_sampler \\<sigma> n.\n             \\<sigma> k = \\<sigma> (max_stutter_sampler \\<sigma> n))\n  max_stutter_sampler \\<sigma> n\n  < (LEAST k.\n        max_stutter_sampler \\<sigma> n < k \\<and>\n        \\<sigma> k \\<noteq> \\<sigma> (max_stutter_sampler \\<sigma> n))\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> n < max_stutter_sampler \\<sigma> (Suc n)", "by (simp add: Let_def)"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> n < max_stutter_sampler \\<sigma> (Suc n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> n < max_stutter_sampler \\<sigma> (Suc n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n.\n     max_stutter_sampler \\<sigma> n < max_stutter_sampler \\<sigma> (Suc n)\n\ngoal (1 subgoal):\n 1. stutter_sampler (max_stutter_sampler \\<sigma>) \\<sigma>", "hence \"strict_mono ?ms\""], ["proof (prove)\nusing this:\n  \\<forall>n.\n     max_stutter_sampler \\<sigma> n < max_stutter_sampler \\<sigma> (Suc n)\n\ngoal (1 subgoal):\n 1. strict_mono (max_stutter_sampler \\<sigma>)", "unfolding strict_mono_def"], ["proof (prove)\nusing this:\n  \\<forall>n.\n     max_stutter_sampler \\<sigma> n < max_stutter_sampler \\<sigma> (Suc n)\n\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       x < y \\<longrightarrow>\n       max_stutter_sampler \\<sigma> x < max_stutter_sampler \\<sigma> y", "by (blast intro: lift_Suc_mono_less)"], ["proof (state)\nthis:\n  strict_mono (max_stutter_sampler \\<sigma>)\n\ngoal (1 subgoal):\n 1. stutter_sampler (max_stutter_sampler \\<sigma>) \\<sigma>", "moreover"], ["proof (state)\nthis:\n  strict_mono (max_stutter_sampler \\<sigma>)\n\ngoal (1 subgoal):\n 1. stutter_sampler (max_stutter_sampler \\<sigma>) \\<sigma>", "have \"\\<forall>n k. ?ms n < k \\<and> k < ?ms (Suc n) \\<longrightarrow> \\<sigma> k = \\<sigma> (?ms n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n k.\n       max_stutter_sampler \\<sigma> n < k \\<and>\n       k < max_stutter_sampler \\<sigma> (Suc n) \\<longrightarrow>\n       \\<sigma> k = \\<sigma> (max_stutter_sampler \\<sigma> n)", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n k.\n       \\<lbrakk>max_stutter_sampler \\<sigma> n < k;\n        k < max_stutter_sampler \\<sigma> (Suc n)\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> k =\n                         \\<sigma> (max_stutter_sampler \\<sigma> n)", "fix n k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n k.\n       \\<lbrakk>max_stutter_sampler \\<sigma> n < k;\n        k < max_stutter_sampler \\<sigma> (Suc n)\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> k =\n                         \\<sigma> (max_stutter_sampler \\<sigma> n)", "assume lo: \"?ms n < k\" (is \"?prev < k\")\n       and hi: \"k < ?ms (Suc n)\" (is \"k < ?next\")"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> n < k\n  k < max_stutter_sampler \\<sigma> (Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>n k.\n       \\<lbrakk>max_stutter_sampler \\<sigma> n < k;\n        k < max_stutter_sampler \\<sigma> (Suc n)\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> k =\n                         \\<sigma> (max_stutter_sampler \\<sigma> n)", "show \"\\<sigma> k = \\<sigma> ?prev\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma> k = \\<sigma> (max_stutter_sampler \\<sigma> n)", "proof (cases \"\\<forall>k > ?prev. \\<sigma> k = \\<sigma> ?prev\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>k>max_stutter_sampler \\<sigma> n.\n       \\<sigma> k =\n       \\<sigma> (max_stutter_sampler \\<sigma> n) \\<Longrightarrow>\n    \\<sigma> k = \\<sigma> (max_stutter_sampler \\<sigma> n)\n 2. \\<not> (\\<forall>k>max_stutter_sampler \\<sigma> n.\n               \\<sigma> k =\n               \\<sigma> (max_stutter_sampler \\<sigma> n)) \\<Longrightarrow>\n    \\<sigma> k = \\<sigma> (max_stutter_sampler \\<sigma> n)", "case True"], ["proof (state)\nthis:\n  \\<forall>k>max_stutter_sampler \\<sigma> n.\n     \\<sigma> k = \\<sigma> (max_stutter_sampler \\<sigma> n)\n\ngoal (2 subgoals):\n 1. \\<forall>k>max_stutter_sampler \\<sigma> n.\n       \\<sigma> k =\n       \\<sigma> (max_stutter_sampler \\<sigma> n) \\<Longrightarrow>\n    \\<sigma> k = \\<sigma> (max_stutter_sampler \\<sigma> n)\n 2. \\<not> (\\<forall>k>max_stutter_sampler \\<sigma> n.\n               \\<sigma> k =\n               \\<sigma> (max_stutter_sampler \\<sigma> n)) \\<Longrightarrow>\n    \\<sigma> k = \\<sigma> (max_stutter_sampler \\<sigma> n)", "hence \"?next = Suc ?prev\""], ["proof (prove)\nusing this:\n  \\<forall>k>max_stutter_sampler \\<sigma> n.\n     \\<sigma> k = \\<sigma> (max_stutter_sampler \\<sigma> n)\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> (Suc n) =\n    Suc (max_stutter_sampler \\<sigma> n)", "by (simp add: Let_def)"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> (Suc n) =\n  Suc (max_stutter_sampler \\<sigma> n)\n\ngoal (2 subgoals):\n 1. \\<forall>k>max_stutter_sampler \\<sigma> n.\n       \\<sigma> k =\n       \\<sigma> (max_stutter_sampler \\<sigma> n) \\<Longrightarrow>\n    \\<sigma> k = \\<sigma> (max_stutter_sampler \\<sigma> n)\n 2. \\<not> (\\<forall>k>max_stutter_sampler \\<sigma> n.\n               \\<sigma> k =\n               \\<sigma> (max_stutter_sampler \\<sigma> n)) \\<Longrightarrow>\n    \\<sigma> k = \\<sigma> (max_stutter_sampler \\<sigma> n)", "with lo hi"], ["proof (chain)\npicking this:\n  max_stutter_sampler \\<sigma> n < k\n  k < max_stutter_sampler \\<sigma> (Suc n)\n  max_stutter_sampler \\<sigma> (Suc n) =\n  Suc (max_stutter_sampler \\<sigma> n)", "show ?thesis"], ["proof (prove)\nusing this:\n  max_stutter_sampler \\<sigma> n < k\n  k < max_stutter_sampler \\<sigma> (Suc n)\n  max_stutter_sampler \\<sigma> (Suc n) =\n  Suc (max_stutter_sampler \\<sigma> n)\n\ngoal (1 subgoal):\n 1. \\<sigma> k = \\<sigma> (max_stutter_sampler \\<sigma> n)", "by simp  \\<comment> \\<open>no room for intermediate index\\<close>"], ["proof (state)\nthis:\n  \\<sigma> k = \\<sigma> (max_stutter_sampler \\<sigma> n)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k>max_stutter_sampler \\<sigma> n.\n               \\<sigma> k =\n               \\<sigma> (max_stutter_sampler \\<sigma> n)) \\<Longrightarrow>\n    \\<sigma> k = \\<sigma> (max_stutter_sampler \\<sigma> n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k>max_stutter_sampler \\<sigma> n.\n               \\<sigma> k =\n               \\<sigma> (max_stutter_sampler \\<sigma> n)) \\<Longrightarrow>\n    \\<sigma> k = \\<sigma> (max_stutter_sampler \\<sigma> n)", "case False"], ["proof (state)\nthis:\n  \\<not> (\\<forall>k>max_stutter_sampler \\<sigma> n.\n             \\<sigma> k = \\<sigma> (max_stutter_sampler \\<sigma> n))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k>max_stutter_sampler \\<sigma> n.\n               \\<sigma> k =\n               \\<sigma> (max_stutter_sampler \\<sigma> n)) \\<Longrightarrow>\n    \\<sigma> k = \\<sigma> (max_stutter_sampler \\<sigma> n)", "hence \"?next = (LEAST k. ?prev < k \\<and> \\<sigma> k \\<noteq> \\<sigma> ?prev)\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>k>max_stutter_sampler \\<sigma> n.\n             \\<sigma> k = \\<sigma> (max_stutter_sampler \\<sigma> n))\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> (Suc n) =\n    (LEAST k.\n        max_stutter_sampler \\<sigma> n < k \\<and>\n        \\<sigma> k \\<noteq> \\<sigma> (max_stutter_sampler \\<sigma> n))", "by (auto simp add: Let_def)"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> (Suc n) =\n  (LEAST k.\n      max_stutter_sampler \\<sigma> n < k \\<and>\n      \\<sigma> k \\<noteq> \\<sigma> (max_stutter_sampler \\<sigma> n))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k>max_stutter_sampler \\<sigma> n.\n               \\<sigma> k =\n               \\<sigma> (max_stutter_sampler \\<sigma> n)) \\<Longrightarrow>\n    \\<sigma> k = \\<sigma> (max_stutter_sampler \\<sigma> n)", "with lo hi"], ["proof (chain)\npicking this:\n  max_stutter_sampler \\<sigma> n < k\n  k < max_stutter_sampler \\<sigma> (Suc n)\n  max_stutter_sampler \\<sigma> (Suc n) =\n  (LEAST k.\n      max_stutter_sampler \\<sigma> n < k \\<and>\n      \\<sigma> k \\<noteq> \\<sigma> (max_stutter_sampler \\<sigma> n))", "show ?thesis"], ["proof (prove)\nusing this:\n  max_stutter_sampler \\<sigma> n < k\n  k < max_stutter_sampler \\<sigma> (Suc n)\n  max_stutter_sampler \\<sigma> (Suc n) =\n  (LEAST k.\n      max_stutter_sampler \\<sigma> n < k \\<and>\n      \\<sigma> k \\<noteq> \\<sigma> (max_stutter_sampler \\<sigma> n))\n\ngoal (1 subgoal):\n 1. \\<sigma> k = \\<sigma> (max_stutter_sampler \\<sigma> n)", "by (auto dest: not_less_Least)"], ["proof (state)\nthis:\n  \\<sigma> k = \\<sigma> (max_stutter_sampler \\<sigma> n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<sigma> k = \\<sigma> (max_stutter_sampler \\<sigma> n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n k.\n     max_stutter_sampler \\<sigma> n < k \\<and>\n     k < max_stutter_sampler \\<sigma> (Suc n) \\<longrightarrow>\n     \\<sigma> k = \\<sigma> (max_stutter_sampler \\<sigma> n)\n\ngoal (1 subgoal):\n 1. stutter_sampler (max_stutter_sampler \\<sigma>) \\<sigma>", "ultimately"], ["proof (chain)\npicking this:\n  max_stutter_sampler \\<sigma> 0 = 0\n  strict_mono (max_stutter_sampler \\<sigma>)\n  \\<forall>n k.\n     max_stutter_sampler \\<sigma> n < k \\<and>\n     k < max_stutter_sampler \\<sigma> (Suc n) \\<longrightarrow>\n     \\<sigma> k = \\<sigma> (max_stutter_sampler \\<sigma> n)", "show ?thesis"], ["proof (prove)\nusing this:\n  max_stutter_sampler \\<sigma> 0 = 0\n  strict_mono (max_stutter_sampler \\<sigma>)\n  \\<forall>n k.\n     max_stutter_sampler \\<sigma> n < k \\<and>\n     k < max_stutter_sampler \\<sigma> (Suc n) \\<longrightarrow>\n     \\<sigma> k = \\<sigma> (max_stutter_sampler \\<sigma> n)\n\ngoal (1 subgoal):\n 1. stutter_sampler (max_stutter_sampler \\<sigma>) \\<sigma>", "unfolding stutter_sampler_def"], ["proof (prove)\nusing this:\n  max_stutter_sampler \\<sigma> 0 = 0\n  strict_mono (max_stutter_sampler \\<sigma>)\n  \\<forall>n k.\n     max_stutter_sampler \\<sigma> n < k \\<and>\n     k < max_stutter_sampler \\<sigma> (Suc n) \\<longrightarrow>\n     \\<sigma> k = \\<sigma> (max_stutter_sampler \\<sigma> n)\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> 0 = 0 \\<and>\n    strict_mono (max_stutter_sampler \\<sigma>) \\<and>\n    (\\<forall>k n.\n        max_stutter_sampler \\<sigma> k < n \\<and>\n        n < max_stutter_sampler \\<sigma> (Suc k) \\<longrightarrow>\n        \\<sigma> n = \\<sigma> (max_stutter_sampler \\<sigma> k))", "by blast"], ["proof (state)\nthis:\n  stutter_sampler (max_stutter_sampler \\<sigma>) \\<sigma>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  We write \\<open>\\<natural>\\<sigma>\\<close> for the sequence \\<open>\\<sigma>\\<close> sampled by the\n  maximal stuttering sampler. Also, a sequence is \\emph{stutter free}\n  if it contains no finite stuttering: whenever two subsequent\n  elements are equal then all subsequent elements are the same.\n\\<close>"], ["", "definition stutter_reduced (\"\\<natural>_\" [100] 100) where\n  \"\\<natural>\\<sigma> = \\<sigma> \\<circ> (max_stutter_sampler \\<sigma>)\""], ["", "definition stutter_free where\n  \"stutter_free \\<sigma> \\<equiv> \\<forall>k. \\<sigma> (Suc k) = \\<sigma> k \\<longrightarrow> (\\<forall>n>k. \\<sigma> n = \\<sigma> k)\""], ["", "lemma stutter_freeI:\n  assumes \"\\<And>k n. \\<lbrakk>\\<sigma> (Suc k) = \\<sigma> k; n>k\\<rbrakk> \\<Longrightarrow> \\<sigma> n = \\<sigma> k\"\n  shows \"stutter_free \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stutter_free \\<sigma>", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<sigma> (Suc ?k) = \\<sigma> ?k; ?k < ?n\\<rbrakk>\n  \\<Longrightarrow> \\<sigma> ?n = \\<sigma> ?k\n\ngoal (1 subgoal):\n 1. stutter_free \\<sigma>", "unfolding stutter_free_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<sigma> (Suc ?k) = \\<sigma> ?k; ?k < ?n\\<rbrakk>\n  \\<Longrightarrow> \\<sigma> ?n = \\<sigma> ?k\n\ngoal (1 subgoal):\n 1. \\<forall>k.\n       \\<sigma> (Suc k) = \\<sigma> k \\<longrightarrow>\n       (\\<forall>n>k. \\<sigma> n = \\<sigma> k)", "by blast"], ["", "lemma stutter_freeD:\n  assumes \"stutter_free \\<sigma>\" and \"\\<sigma> (Suc k) = \\<sigma> k\" and \"n>k\"\n  shows \"\\<sigma> n = \\<sigma> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma> n = \\<sigma> k", "using assms"], ["proof (prove)\nusing this:\n  stutter_free \\<sigma>\n  \\<sigma> (Suc k) = \\<sigma> k\n  k < n\n\ngoal (1 subgoal):\n 1. \\<sigma> n = \\<sigma> k", "unfolding stutter_free_def"], ["proof (prove)\nusing this:\n  \\<forall>k.\n     \\<sigma> (Suc k) = \\<sigma> k \\<longrightarrow>\n     (\\<forall>n>k. \\<sigma> n = \\<sigma> k)\n  \\<sigma> (Suc k) = \\<sigma> k\n  k < n\n\ngoal (1 subgoal):\n 1. \\<sigma> n = \\<sigma> k", "by blast"], ["", "text \\<open>\n  Any suffix of a stutter free sequence is itself stutter free.\n\\<close>"], ["", "lemma stutter_free_suffix: \n  assumes sigma: \"stutter_free \\<sigma>\"\n  shows \"stutter_free (suffix k \\<sigma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stutter_free (suffix k \\<sigma>)", "proof (rule stutter_freeI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ka n.\n       \\<lbrakk>suffix k \\<sigma> (Suc ka) = suffix k \\<sigma> ka;\n        ka < n\\<rbrakk>\n       \\<Longrightarrow> suffix k \\<sigma> n = suffix k \\<sigma> ka", "fix j n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ka n.\n       \\<lbrakk>suffix k \\<sigma> (Suc ka) = suffix k \\<sigma> ka;\n        ka < n\\<rbrakk>\n       \\<Longrightarrow> suffix k \\<sigma> n = suffix k \\<sigma> ka", "assume j: \"(suffix k \\<sigma>) (Suc j) = (suffix k \\<sigma>) j\" and n: \"j < n\""], ["proof (state)\nthis:\n  suffix k \\<sigma> (Suc j) = suffix k \\<sigma> j\n  j < n\n\ngoal (1 subgoal):\n 1. \\<And>ka n.\n       \\<lbrakk>suffix k \\<sigma> (Suc ka) = suffix k \\<sigma> ka;\n        ka < n\\<rbrakk>\n       \\<Longrightarrow> suffix k \\<sigma> n = suffix k \\<sigma> ka", "from j"], ["proof (chain)\npicking this:\n  suffix k \\<sigma> (Suc j) = suffix k \\<sigma> j", "have \"\\<sigma> (Suc (k+j)) = \\<sigma> (k+j)\""], ["proof (prove)\nusing this:\n  suffix k \\<sigma> (Suc j) = suffix k \\<sigma> j\n\ngoal (1 subgoal):\n 1. \\<sigma> (Suc (k + j)) = \\<sigma> (k + j)", "by simp"], ["proof (state)\nthis:\n  \\<sigma> (Suc (k + j)) = \\<sigma> (k + j)\n\ngoal (1 subgoal):\n 1. \\<And>ka n.\n       \\<lbrakk>suffix k \\<sigma> (Suc ka) = suffix k \\<sigma> ka;\n        ka < n\\<rbrakk>\n       \\<Longrightarrow> suffix k \\<sigma> n = suffix k \\<sigma> ka", "moreover"], ["proof (state)\nthis:\n  \\<sigma> (Suc (k + j)) = \\<sigma> (k + j)\n\ngoal (1 subgoal):\n 1. \\<And>ka n.\n       \\<lbrakk>suffix k \\<sigma> (Suc ka) = suffix k \\<sigma> ka;\n        ka < n\\<rbrakk>\n       \\<Longrightarrow> suffix k \\<sigma> n = suffix k \\<sigma> ka", "from n"], ["proof (chain)\npicking this:\n  j < n", "have \"k+n > k+j\""], ["proof (prove)\nusing this:\n  j < n\n\ngoal (1 subgoal):\n 1. k + j < k + n", "by simp"], ["proof (state)\nthis:\n  k + j < k + n\n\ngoal (1 subgoal):\n 1. \\<And>ka n.\n       \\<lbrakk>suffix k \\<sigma> (Suc ka) = suffix k \\<sigma> ka;\n        ka < n\\<rbrakk>\n       \\<Longrightarrow> suffix k \\<sigma> n = suffix k \\<sigma> ka", "ultimately"], ["proof (chain)\npicking this:\n  \\<sigma> (Suc (k + j)) = \\<sigma> (k + j)\n  k + j < k + n", "have \"\\<sigma> (k+n) = \\<sigma> (k+j)\""], ["proof (prove)\nusing this:\n  \\<sigma> (Suc (k + j)) = \\<sigma> (k + j)\n  k + j < k + n\n\ngoal (1 subgoal):\n 1. \\<sigma> (k + n) = \\<sigma> (k + j)", "by (rule stutter_freeD[OF sigma])"], ["proof (state)\nthis:\n  \\<sigma> (k + n) = \\<sigma> (k + j)\n\ngoal (1 subgoal):\n 1. \\<And>ka n.\n       \\<lbrakk>suffix k \\<sigma> (Suc ka) = suffix k \\<sigma> ka;\n        ka < n\\<rbrakk>\n       \\<Longrightarrow> suffix k \\<sigma> n = suffix k \\<sigma> ka", "thus \"(suffix k \\<sigma>) n = (suffix k \\<sigma>) j\""], ["proof (prove)\nusing this:\n  \\<sigma> (k + n) = \\<sigma> (k + j)\n\ngoal (1 subgoal):\n 1. suffix k \\<sigma> n = suffix k \\<sigma> j", "by simp"], ["proof (state)\nthis:\n  suffix k \\<sigma> n = suffix k \\<sigma> j\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stutter_reduced_0: \"(\\<natural>\\<sigma>) 0 = \\<sigma> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<natural>\\<sigma>) 0 = \\<sigma> 0", "by (simp add: stutter_reduced_def stutter_sampled_0 max_stutter_sampler)"], ["", "lemma stutter_free_reduced:\n  assumes sigma: \"stutter_free \\<sigma>\"\n  shows \"\\<natural>\\<sigma> = \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<natural>\\<sigma> = \\<sigma>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<natural>\\<sigma> = \\<sigma>", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<natural>\\<sigma> = \\<sigma>", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<natural>\\<sigma> = \\<sigma>", "have \"max_stutter_sampler \\<sigma> n = n\" (is \"?ms n = n\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> n = n", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. max_stutter_sampler \\<sigma> 0 = 0\n 2. \\<And>n.\n       max_stutter_sampler \\<sigma> n = n \\<Longrightarrow>\n       max_stutter_sampler \\<sigma> (Suc n) = Suc n", "show \"?ms 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> 0 = 0", "by simp"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> 0 = 0\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       max_stutter_sampler \\<sigma> n = n \\<Longrightarrow>\n       max_stutter_sampler \\<sigma> (Suc n) = Suc n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       max_stutter_sampler \\<sigma> n = n \\<Longrightarrow>\n       max_stutter_sampler \\<sigma> (Suc n) = Suc n", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       max_stutter_sampler \\<sigma> n = n \\<Longrightarrow>\n       max_stutter_sampler \\<sigma> (Suc n) = Suc n", "assume ih: \"?ms n = n\""], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> n = n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       max_stutter_sampler \\<sigma> n = n \\<Longrightarrow>\n       max_stutter_sampler \\<sigma> (Suc n) = Suc n", "show \"?ms (Suc n) = Suc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> (Suc n) = Suc n", "proof (cases \"\\<sigma> (Suc n) = \\<sigma> (?ms n)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<sigma> (Suc n) =\n    \\<sigma> (max_stutter_sampler \\<sigma> n) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc n) = Suc n\n 2. \\<sigma> (Suc n) \\<noteq>\n    \\<sigma> (max_stutter_sampler \\<sigma> n) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc n) = Suc n", "case True"], ["proof (state)\nthis:\n  \\<sigma> (Suc n) = \\<sigma> (max_stutter_sampler \\<sigma> n)\n\ngoal (2 subgoals):\n 1. \\<sigma> (Suc n) =\n    \\<sigma> (max_stutter_sampler \\<sigma> n) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc n) = Suc n\n 2. \\<sigma> (Suc n) \\<noteq>\n    \\<sigma> (max_stutter_sampler \\<sigma> n) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc n) = Suc n", "with ih"], ["proof (chain)\npicking this:\n  max_stutter_sampler \\<sigma> n = n\n  \\<sigma> (Suc n) = \\<sigma> (max_stutter_sampler \\<sigma> n)", "have \"\\<sigma> (Suc n) = \\<sigma> n\""], ["proof (prove)\nusing this:\n  max_stutter_sampler \\<sigma> n = n\n  \\<sigma> (Suc n) = \\<sigma> (max_stutter_sampler \\<sigma> n)\n\ngoal (1 subgoal):\n 1. \\<sigma> (Suc n) = \\<sigma> n", "by simp"], ["proof (state)\nthis:\n  \\<sigma> (Suc n) = \\<sigma> n\n\ngoal (2 subgoals):\n 1. \\<sigma> (Suc n) =\n    \\<sigma> (max_stutter_sampler \\<sigma> n) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc n) = Suc n\n 2. \\<sigma> (Suc n) \\<noteq>\n    \\<sigma> (max_stutter_sampler \\<sigma> n) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc n) = Suc n", "with sigma"], ["proof (chain)\npicking this:\n  stutter_free \\<sigma>\n  \\<sigma> (Suc n) = \\<sigma> n", "have \"\\<forall>k > n. \\<sigma> k = \\<sigma> n\""], ["proof (prove)\nusing this:\n  stutter_free \\<sigma>\n  \\<sigma> (Suc n) = \\<sigma> n\n\ngoal (1 subgoal):\n 1. \\<forall>k>n. \\<sigma> k = \\<sigma> n", "unfolding stutter_free_def"], ["proof (prove)\nusing this:\n  \\<forall>k.\n     \\<sigma> (Suc k) = \\<sigma> k \\<longrightarrow>\n     (\\<forall>n>k. \\<sigma> n = \\<sigma> k)\n  \\<sigma> (Suc n) = \\<sigma> n\n\ngoal (1 subgoal):\n 1. \\<forall>k>n. \\<sigma> k = \\<sigma> n", "by blast"], ["proof (state)\nthis:\n  \\<forall>k>n. \\<sigma> k = \\<sigma> n\n\ngoal (2 subgoals):\n 1. \\<sigma> (Suc n) =\n    \\<sigma> (max_stutter_sampler \\<sigma> n) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc n) = Suc n\n 2. \\<sigma> (Suc n) \\<noteq>\n    \\<sigma> (max_stutter_sampler \\<sigma> n) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc n) = Suc n", "with ih"], ["proof (chain)\npicking this:\n  max_stutter_sampler \\<sigma> n = n\n  \\<forall>k>n. \\<sigma> k = \\<sigma> n", "show ?thesis"], ["proof (prove)\nusing this:\n  max_stutter_sampler \\<sigma> n = n\n  \\<forall>k>n. \\<sigma> k = \\<sigma> n\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> (Suc n) = Suc n", "by (simp add: Let_def)"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> (Suc n) = Suc n\n\ngoal (1 subgoal):\n 1. \\<sigma> (Suc n) \\<noteq>\n    \\<sigma> (max_stutter_sampler \\<sigma> n) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc n) = Suc n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<sigma> (Suc n) \\<noteq>\n    \\<sigma> (max_stutter_sampler \\<sigma> n) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc n) = Suc n", "case False"], ["proof (state)\nthis:\n  \\<sigma> (Suc n) \\<noteq> \\<sigma> (max_stutter_sampler \\<sigma> n)\n\ngoal (1 subgoal):\n 1. \\<sigma> (Suc n) \\<noteq>\n    \\<sigma> (max_stutter_sampler \\<sigma> n) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc n) = Suc n", "with ih"], ["proof (chain)\npicking this:\n  max_stutter_sampler \\<sigma> n = n\n  \\<sigma> (Suc n) \\<noteq> \\<sigma> (max_stutter_sampler \\<sigma> n)", "have \"(LEAST k. k>n \\<and> \\<sigma> k \\<noteq> \\<sigma> (?ms n)) = Suc n\""], ["proof (prove)\nusing this:\n  max_stutter_sampler \\<sigma> n = n\n  \\<sigma> (Suc n) \\<noteq> \\<sigma> (max_stutter_sampler \\<sigma> n)\n\ngoal (1 subgoal):\n 1. (LEAST k.\n        n < k \\<and>\n        \\<sigma> k \\<noteq> \\<sigma> (max_stutter_sampler \\<sigma> n)) =\n    Suc n", "by (auto intro: Least_equality)"], ["proof (state)\nthis:\n  (LEAST k.\n      n < k \\<and>\n      \\<sigma> k \\<noteq> \\<sigma> (max_stutter_sampler \\<sigma> n)) =\n  Suc n\n\ngoal (1 subgoal):\n 1. \\<sigma> (Suc n) \\<noteq>\n    \\<sigma> (max_stutter_sampler \\<sigma> n) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc n) = Suc n", "with ih False"], ["proof (chain)\npicking this:\n  max_stutter_sampler \\<sigma> n = n\n  \\<sigma> (Suc n) \\<noteq> \\<sigma> (max_stutter_sampler \\<sigma> n)\n  (LEAST k.\n      n < k \\<and>\n      \\<sigma> k \\<noteq> \\<sigma> (max_stutter_sampler \\<sigma> n)) =\n  Suc n", "show ?thesis"], ["proof (prove)\nusing this:\n  max_stutter_sampler \\<sigma> n = n\n  \\<sigma> (Suc n) \\<noteq> \\<sigma> (max_stutter_sampler \\<sigma> n)\n  (LEAST k.\n      n < k \\<and>\n      \\<sigma> k \\<noteq> \\<sigma> (max_stutter_sampler \\<sigma> n)) =\n  Suc n\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> (Suc n) = Suc n", "by (simp add: Let_def)"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> (Suc n) = Suc n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> (Suc n) = Suc n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> n = n\n\ngoal (1 subgoal):\n 1. \\<natural>\\<sigma> = \\<sigma>", "}"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> ?n2 = ?n2\n\ngoal (1 subgoal):\n 1. \\<natural>\\<sigma> = \\<sigma>", "thus ?thesis"], ["proof (prove)\nusing this:\n  max_stutter_sampler \\<sigma> ?n2 = ?n2\n\ngoal (1 subgoal):\n 1. \\<natural>\\<sigma> = \\<sigma>", "by (auto simp: stutter_reduced_def)"], ["proof (state)\nthis:\n  \\<natural>\\<sigma> = \\<sigma>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Whenever two sequence elements at two consecutive sampling points of the \n  maximal stuttering sampler are equal then the sequence stutters infinitely \n  from the first sampling point onwards. In particular, \\<open>\\<natural>\\<sigma>\\<close> is\n  stutter free.\n\\<close>"], ["", "lemma max_stutter_sampler_nostuttering:\n  assumes stut: \"\\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> (max_stutter_sampler \\<sigma> k)\"\n      and n: \"n > max_stutter_sampler \\<sigma> k\" (is \"_ > ?ms k\")\n  shows \"\\<sigma> n = \\<sigma> (?ms k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma> n = \\<sigma> (max_stutter_sampler \\<sigma> k)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<sigma> n \\<noteq>\n    \\<sigma> (max_stutter_sampler \\<sigma> k) \\<Longrightarrow>\n    False", "assume contr: \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<sigma> n \\<noteq> \\<sigma> (max_stutter_sampler \\<sigma> k)\n\ngoal (1 subgoal):\n 1. \\<sigma> n \\<noteq>\n    \\<sigma> (max_stutter_sampler \\<sigma> k) \\<Longrightarrow>\n    False", "with n"], ["proof (chain)\npicking this:\n  max_stutter_sampler \\<sigma> k < n\n  \\<sigma> n \\<noteq> \\<sigma> (max_stutter_sampler \\<sigma> k)", "have \"?ms k < n \\<and> \\<sigma> n \\<noteq> \\<sigma> (?ms k)\" (is \"?diff n\")"], ["proof (prove)\nusing this:\n  max_stutter_sampler \\<sigma> k < n\n  \\<sigma> n \\<noteq> \\<sigma> (max_stutter_sampler \\<sigma> k)\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> k < n \\<and>\n    \\<sigma> n \\<noteq> \\<sigma> (max_stutter_sampler \\<sigma> k)", ".."], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> k < n \\<and>\n  \\<sigma> n \\<noteq> \\<sigma> (max_stutter_sampler \\<sigma> k)\n\ngoal (1 subgoal):\n 1. \\<sigma> n \\<noteq>\n    \\<sigma> (max_stutter_sampler \\<sigma> k) \\<Longrightarrow>\n    False", "hence \"?diff (LEAST n. ?diff n)\""], ["proof (prove)\nusing this:\n  max_stutter_sampler \\<sigma> k < n \\<and>\n  \\<sigma> n \\<noteq> \\<sigma> (max_stutter_sampler \\<sigma> k)\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> k\n    < (LEAST n.\n          max_stutter_sampler \\<sigma> k < n \\<and>\n          \\<sigma> n \\<noteq>\n          \\<sigma> (max_stutter_sampler \\<sigma> k)) \\<and>\n    \\<sigma>\n     (LEAST n.\n         max_stutter_sampler \\<sigma> k < n \\<and>\n         \\<sigma> n \\<noteq>\n         \\<sigma> (max_stutter_sampler \\<sigma> k)) \\<noteq>\n    \\<sigma> (max_stutter_sampler \\<sigma> k)", "by (rule LeastI)"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> k\n  < (LEAST n.\n        max_stutter_sampler \\<sigma> k < n \\<and>\n        \\<sigma> n \\<noteq>\n        \\<sigma> (max_stutter_sampler \\<sigma> k)) \\<and>\n  \\<sigma>\n   (LEAST n.\n       max_stutter_sampler \\<sigma> k < n \\<and>\n       \\<sigma> n \\<noteq>\n       \\<sigma> (max_stutter_sampler \\<sigma> k)) \\<noteq>\n  \\<sigma> (max_stutter_sampler \\<sigma> k)\n\ngoal (1 subgoal):\n 1. \\<sigma> n \\<noteq>\n    \\<sigma> (max_stutter_sampler \\<sigma> k) \\<Longrightarrow>\n    False", "with contr"], ["proof (chain)\npicking this:\n  \\<sigma> n \\<noteq> \\<sigma> (max_stutter_sampler \\<sigma> k)\n  max_stutter_sampler \\<sigma> k\n  < (LEAST n.\n        max_stutter_sampler \\<sigma> k < n \\<and>\n        \\<sigma> n \\<noteq>\n        \\<sigma> (max_stutter_sampler \\<sigma> k)) \\<and>\n  \\<sigma>\n   (LEAST n.\n       max_stutter_sampler \\<sigma> k < n \\<and>\n       \\<sigma> n \\<noteq>\n       \\<sigma> (max_stutter_sampler \\<sigma> k)) \\<noteq>\n  \\<sigma> (max_stutter_sampler \\<sigma> k)", "have \"\\<sigma> (?ms (Suc k)) \\<noteq> \\<sigma> (?ms k)\""], ["proof (prove)\nusing this:\n  \\<sigma> n \\<noteq> \\<sigma> (max_stutter_sampler \\<sigma> k)\n  max_stutter_sampler \\<sigma> k\n  < (LEAST n.\n        max_stutter_sampler \\<sigma> k < n \\<and>\n        \\<sigma> n \\<noteq>\n        \\<sigma> (max_stutter_sampler \\<sigma> k)) \\<and>\n  \\<sigma>\n   (LEAST n.\n       max_stutter_sampler \\<sigma> k < n \\<and>\n       \\<sigma> n \\<noteq>\n       \\<sigma> (max_stutter_sampler \\<sigma> k)) \\<noteq>\n  \\<sigma> (max_stutter_sampler \\<sigma> k)\n\ngoal (1 subgoal):\n 1. \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) \\<noteq>\n    \\<sigma> (max_stutter_sampler \\<sigma> k)", "by (auto simp add: Let_def)"], ["proof (state)\nthis:\n  \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) \\<noteq>\n  \\<sigma> (max_stutter_sampler \\<sigma> k)\n\ngoal (1 subgoal):\n 1. \\<sigma> n \\<noteq>\n    \\<sigma> (max_stutter_sampler \\<sigma> k) \\<Longrightarrow>\n    False", "from this stut"], ["proof (chain)\npicking this:\n  \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) \\<noteq>\n  \\<sigma> (max_stutter_sampler \\<sigma> k)\n  \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) =\n  \\<sigma> (max_stutter_sampler \\<sigma> k)", "show \"False\""], ["proof (prove)\nusing this:\n  \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) \\<noteq>\n  \\<sigma> (max_stutter_sampler \\<sigma> k)\n  \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) =\n  \\<sigma> (max_stutter_sampler \\<sigma> k)\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stutter_reduced_stutter_free: \"stutter_free (\\<natural>\\<sigma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stutter_free (\\<natural>\\<sigma>)", "proof (rule stutter_freeI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>(\\<natural>\\<sigma>) (Suc k) = (\\<natural>\\<sigma>) k;\n        k < n\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<sigma>) n = (\\<natural>\\<sigma>) k", "fix k n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>(\\<natural>\\<sigma>) (Suc k) = (\\<natural>\\<sigma>) k;\n        k < n\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<sigma>) n = (\\<natural>\\<sigma>) k", "assume k: \"(\\<natural>\\<sigma>) (Suc k) = (\\<natural>\\<sigma>) k\" and n: \"k < n\""], ["proof (state)\nthis:\n  (\\<natural>\\<sigma>) (Suc k) = (\\<natural>\\<sigma>) k\n  k < n\n\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>(\\<natural>\\<sigma>) (Suc k) = (\\<natural>\\<sigma>) k;\n        k < n\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<sigma>) n = (\\<natural>\\<sigma>) k", "from n"], ["proof (chain)\npicking this:\n  k < n", "have \"max_stutter_sampler \\<sigma> k < max_stutter_sampler \\<sigma> n\""], ["proof (prove)\nusing this:\n  k < n\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> k < max_stutter_sampler \\<sigma> n", "using max_stutter_sampler[THEN stutter_sampler_mono, THEN strict_monoD]"], ["proof (prove)\nusing this:\n  k < n\n  ?x < ?y \\<Longrightarrow>\n  max_stutter_sampler ?\\<sigma>1 ?x < max_stutter_sampler ?\\<sigma>1 ?y\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> k < max_stutter_sampler \\<sigma> n", "by blast"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> k < max_stutter_sampler \\<sigma> n\n\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>(\\<natural>\\<sigma>) (Suc k) = (\\<natural>\\<sigma>) k;\n        k < n\\<rbrakk>\n       \\<Longrightarrow> (\\<natural>\\<sigma>) n = (\\<natural>\\<sigma>) k", "with k"], ["proof (chain)\npicking this:\n  (\\<natural>\\<sigma>) (Suc k) = (\\<natural>\\<sigma>) k\n  max_stutter_sampler \\<sigma> k < max_stutter_sampler \\<sigma> n", "show \"(\\<natural>\\<sigma>) n = (\\<natural>\\<sigma>) k\""], ["proof (prove)\nusing this:\n  (\\<natural>\\<sigma>) (Suc k) = (\\<natural>\\<sigma>) k\n  max_stutter_sampler \\<sigma> k < max_stutter_sampler \\<sigma> n\n\ngoal (1 subgoal):\n 1. (\\<natural>\\<sigma>) n = (\\<natural>\\<sigma>) k", "unfolding stutter_reduced_def"], ["proof (prove)\nusing this:\n  (\\<sigma> \\<circ> max_stutter_sampler \\<sigma>) (Suc k) =\n  (\\<sigma> \\<circ> max_stutter_sampler \\<sigma>) k\n  max_stutter_sampler \\<sigma> k < max_stutter_sampler \\<sigma> n\n\ngoal (1 subgoal):\n 1. (\\<sigma> \\<circ> max_stutter_sampler \\<sigma>) n =\n    (\\<sigma> \\<circ> max_stutter_sampler \\<sigma>) k", "by (auto elim: max_stutter_sampler_nostuttering \n             simp del: max_stutter_sampler.simps)"], ["proof (state)\nthis:\n  (\\<natural>\\<sigma>) n = (\\<natural>\\<sigma>) k\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stutter_reduced_suffix: \"\\<natural> (suffix k (\\<natural>\\<sigma>)) = suffix k (\\<natural>\\<sigma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<natural>suffix k (\\<natural>\\<sigma>) = suffix k (\\<natural>\\<sigma>)", "proof (rule stutter_free_reduced)"], ["proof (state)\ngoal (1 subgoal):\n 1. stutter_free (suffix k (\\<natural>\\<sigma>))", "have \"stutter_free (\\<natural>\\<sigma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stutter_free (\\<natural>\\<sigma>)", "by (rule stutter_reduced_stutter_free)"], ["proof (state)\nthis:\n  stutter_free (\\<natural>\\<sigma>)\n\ngoal (1 subgoal):\n 1. stutter_free (suffix k (\\<natural>\\<sigma>))", "thus \"stutter_free (suffix k (\\<natural>\\<sigma>))\""], ["proof (prove)\nusing this:\n  stutter_free (\\<natural>\\<sigma>)\n\ngoal (1 subgoal):\n 1. stutter_free (suffix k (\\<natural>\\<sigma>))", "by (rule stutter_free_suffix)"], ["proof (state)\nthis:\n  stutter_free (suffix k (\\<natural>\\<sigma>))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stutter_reduced_reduced: \"\\<natural>\\<natural>\\<sigma> = \\<natural>\\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<natural>\\<natural>\\<sigma> = \\<natural>\\<sigma>", "by (insert stutter_reduced_suffix[of 0 \"\\<sigma>\", simplified])"], ["", "text \\<open>\n  One can define a partial order on sampling functions for a given sequence\n  \\<open>\\<sigma>\\<close> by saying that function \\<open>g\\<close> is better than function \\<open>f\\<close>\n  if the reduced sequence induced by \\<open>f\\<close> can be further reduced to obtain\n  the reduced sequence corresponding to \\<open>g\\<close>, i.e. if there exists a\n  stuttering sampling function \\<open>h\\<close> for the reduced sequence \\<open>\\<sigma> \\<circ> f\\<close>\n  such that \\<open>\\<sigma> \\<circ> f \\<circ> h = \\<sigma> \\<circ> g\\<close>. (Note that \\<open>f \\<circ> h\\<close> is indeed a stuttering\n  sampling function for \\<open>\\<sigma>\\<close>, by theorem \\<open>stutter_sampler_comp\\<close>.)\n\n  We do not formalize this notion but prove that \\<open>max_stutter_sampler \\<sigma>\\<close>\n  is the best sampling function according to this order.\n\\<close>"], ["", "theorem sample_max_sample:\n  assumes f: \"stutter_sampler f \\<sigma>\"\n  shows \"\\<natural>(\\<sigma> \\<circ> f) = \\<natural>\\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<natural>(\\<sigma> \\<circ> f) = \\<natural>\\<sigma>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<natural>(\\<sigma> \\<circ> f) = \\<natural>\\<sigma>", "let ?mss = \"max_stutter_sampler \\<sigma>\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<natural>(\\<sigma> \\<circ> f) = \\<natural>\\<sigma>", "let ?mssf = \"max_stutter_sampler (\\<sigma> \\<circ> f)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<natural>(\\<sigma> \\<circ> f) = \\<natural>\\<sigma>", "from f"], ["proof (chain)\npicking this:\n  stutter_sampler f \\<sigma>", "have mssf: \"stutter_sampler (f \\<circ> ?mssf) \\<sigma>\""], ["proof (prove)\nusing this:\n  stutter_sampler f \\<sigma>\n\ngoal (1 subgoal):\n 1. stutter_sampler (f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f))\n     \\<sigma>", "by (blast intro: stutter_sampler_comp max_stutter_sampler)"], ["proof (state)\nthis:\n  stutter_sampler (f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f))\n   \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<natural>(\\<sigma> \\<circ> f) = \\<natural>\\<sigma>", "txt \\<open>\n    The following is the core invariant of the proof: the sampling functions\n    \\<open>max_stutter_sampler \\<sigma>\\<close> and \\<open>f \\<circ> (max_stutter_sampler (\\<sigma> \\<circ> f))\\<close>\n    work in lock-step (i.e., sample the same points), except if \\<open>\\<sigma>\\<close> ends\n    in infinite stuttering, at which point function \\<open>f\\<close> may make larger\n    steps than the maximal sampling functions.\n\\<close>"], ["proof (state)\nthis:\n  stutter_sampler (f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f))\n   \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<natural>(\\<sigma> \\<circ> f) = \\<natural>\\<sigma>", "{"], ["proof (state)\nthis:\n  stutter_sampler (f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f))\n   \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<natural>(\\<sigma> \\<circ> f) = \\<natural>\\<sigma>", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<natural>(\\<sigma> \\<circ> f) = \\<natural>\\<sigma>", "have \"  ?mss k = f (?mssf k)\n          \\<or> ?mss k \\<le> f (?mssf k) \\<and> (\\<forall>n \\<ge> ?mss k. \\<sigma> (?mss k) = \\<sigma> n)\"\n          (is \"?P k\" is \"?A k \\<or> ?B k\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> k =\n    f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<or>\n    max_stutter_sampler \\<sigma> k\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n        \\<sigma> (max_stutter_sampler \\<sigma> k) = \\<sigma> n)", "proof (induct k)"], ["proof (state)\ngoal (2 subgoals):\n 1. max_stutter_sampler \\<sigma> 0 =\n    f (max_stutter_sampler (\\<sigma> \\<circ> f) 0) \\<or>\n    max_stutter_sampler \\<sigma> 0\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) 0) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> 0.\n        \\<sigma> (max_stutter_sampler \\<sigma> 0) = \\<sigma> n)\n 2. \\<And>k.\n       max_stutter_sampler \\<sigma> k =\n       f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<or>\n       max_stutter_sampler \\<sigma> k\n       \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n       (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n           \\<sigma> (max_stutter_sampler \\<sigma> k) =\n           \\<sigma> n) \\<Longrightarrow>\n       max_stutter_sampler \\<sigma> (Suc k) =\n       f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n       max_stutter_sampler \\<sigma> (Suc k)\n       \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n       (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n           \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "from f mssf"], ["proof (chain)\npicking this:\n  stutter_sampler f \\<sigma>\n  stutter_sampler (f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f))\n   \\<sigma>", "have \"?mss 0 = f (?mssf 0)\""], ["proof (prove)\nusing this:\n  stutter_sampler f \\<sigma>\n  stutter_sampler (f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f))\n   \\<sigma>\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> 0 =\n    f (max_stutter_sampler (\\<sigma> \\<circ> f) 0)", "by (simp add: max_stutter_sampler stutter_sampler_0)"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> 0 =\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) 0)\n\ngoal (2 subgoals):\n 1. max_stutter_sampler \\<sigma> 0 =\n    f (max_stutter_sampler (\\<sigma> \\<circ> f) 0) \\<or>\n    max_stutter_sampler \\<sigma> 0\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) 0) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> 0.\n        \\<sigma> (max_stutter_sampler \\<sigma> 0) = \\<sigma> n)\n 2. \\<And>k.\n       max_stutter_sampler \\<sigma> k =\n       f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<or>\n       max_stutter_sampler \\<sigma> k\n       \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n       (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n           \\<sigma> (max_stutter_sampler \\<sigma> k) =\n           \\<sigma> n) \\<Longrightarrow>\n       max_stutter_sampler \\<sigma> (Suc k) =\n       f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n       max_stutter_sampler \\<sigma> (Suc k)\n       \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n       (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n           \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "thus \"?P 0\""], ["proof (prove)\nusing this:\n  max_stutter_sampler \\<sigma> 0 =\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) 0)\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> 0 =\n    f (max_stutter_sampler (\\<sigma> \\<circ> f) 0) \\<or>\n    max_stutter_sampler \\<sigma> 0\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) 0) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> 0.\n        \\<sigma> (max_stutter_sampler \\<sigma> 0) = \\<sigma> n)", ".."], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> 0 =\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) 0) \\<or>\n  max_stutter_sampler \\<sigma> 0\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) 0) \\<and>\n  (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> 0.\n      \\<sigma> (max_stutter_sampler \\<sigma> 0) = \\<sigma> n)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       max_stutter_sampler \\<sigma> k =\n       f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<or>\n       max_stutter_sampler \\<sigma> k\n       \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n       (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n           \\<sigma> (max_stutter_sampler \\<sigma> k) =\n           \\<sigma> n) \\<Longrightarrow>\n       max_stutter_sampler \\<sigma> (Suc k) =\n       f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n       max_stutter_sampler \\<sigma> (Suc k)\n       \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n       (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n           \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       max_stutter_sampler \\<sigma> k =\n       f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<or>\n       max_stutter_sampler \\<sigma> k\n       \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n       (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n           \\<sigma> (max_stutter_sampler \\<sigma> k) =\n           \\<sigma> n) \\<Longrightarrow>\n       max_stutter_sampler \\<sigma> (Suc k) =\n       f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n       max_stutter_sampler \\<sigma> (Suc k)\n       \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n       (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n           \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       max_stutter_sampler \\<sigma> k =\n       f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<or>\n       max_stutter_sampler \\<sigma> k\n       \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n       (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n           \\<sigma> (max_stutter_sampler \\<sigma> k) =\n           \\<sigma> n) \\<Longrightarrow>\n       max_stutter_sampler \\<sigma> (Suc k) =\n       f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n       max_stutter_sampler \\<sigma> (Suc k)\n       \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n       (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n           \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "assume ih: \"?P k\""], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> k =\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<or>\n  max_stutter_sampler \\<sigma> k\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n  (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n      \\<sigma> (max_stutter_sampler \\<sigma> k) = \\<sigma> n)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       max_stutter_sampler \\<sigma> k =\n       f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<or>\n       max_stutter_sampler \\<sigma> k\n       \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n       (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n           \\<sigma> (max_stutter_sampler \\<sigma> k) =\n           \\<sigma> n) \\<Longrightarrow>\n       max_stutter_sampler \\<sigma> (Suc k) =\n       f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n       max_stutter_sampler \\<sigma> (Suc k)\n       \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n       (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n           \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "have b: \"?B k \\<longrightarrow> ?B (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> k\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n        \\<sigma> (max_stutter_sampler \\<sigma> k) =\n        \\<sigma> n) \\<longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> k\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n        \\<sigma> (max_stutter_sampler \\<sigma> k) =\n        \\<sigma> n) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "assume 0: \"?B k\""], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> k\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n  (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n      \\<sigma> (max_stutter_sampler \\<sigma> k) = \\<sigma> n)\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> k\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n        \\<sigma> (max_stutter_sampler \\<sigma> k) =\n        \\<sigma> n) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "hence 1: \"?mss k \\<le> f (?mssf k)\""], ["proof (prove)\nusing this:\n  max_stutter_sampler \\<sigma> k\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n  (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n      \\<sigma> (max_stutter_sampler \\<sigma> k) = \\<sigma> n)\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> k\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k)", ".."], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> k\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k)\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> k\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n        \\<sigma> (max_stutter_sampler \\<sigma> k) =\n        \\<sigma> n) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "(* NB: For some reason \"... hence 1: ... and 2: ...\" cannot be proved *)"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> k\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k)\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> k\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n        \\<sigma> (max_stutter_sampler \\<sigma> k) =\n        \\<sigma> n) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "from 0"], ["proof (chain)\npicking this:\n  max_stutter_sampler \\<sigma> k\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n  (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n      \\<sigma> (max_stutter_sampler \\<sigma> k) = \\<sigma> n)", "have 2: \"\\<forall>n \\<ge> ?mss k. \\<sigma> (?mss k) = \\<sigma> n\""], ["proof (prove)\nusing this:\n  max_stutter_sampler \\<sigma> k\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n  (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n      \\<sigma> (max_stutter_sampler \\<sigma> k) = \\<sigma> n)\n\ngoal (1 subgoal):\n 1. \\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n       \\<sigma> (max_stutter_sampler \\<sigma> k) = \\<sigma> n", ".."], ["proof (state)\nthis:\n  \\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n     \\<sigma> (max_stutter_sampler \\<sigma> k) = \\<sigma> n\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> k\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n        \\<sigma> (max_stutter_sampler \\<sigma> k) =\n        \\<sigma> n) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "hence \"\\<forall>n > ?mss k. \\<sigma> (?mss k) = \\<sigma> n\""], ["proof (prove)\nusing this:\n  \\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n     \\<sigma> (max_stutter_sampler \\<sigma> k) = \\<sigma> n\n\ngoal (1 subgoal):\n 1. \\<forall>n>max_stutter_sampler \\<sigma> k.\n       \\<sigma> (max_stutter_sampler \\<sigma> k) = \\<sigma> n", "by auto"], ["proof (state)\nthis:\n  \\<forall>n>max_stutter_sampler \\<sigma> k.\n     \\<sigma> (max_stutter_sampler \\<sigma> k) = \\<sigma> n\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> k\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n        \\<sigma> (max_stutter_sampler \\<sigma> k) =\n        \\<sigma> n) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "hence \"\\<forall>n > ?mss k. \\<sigma> n = \\<sigma> (?mss k)\""], ["proof (prove)\nusing this:\n  \\<forall>n>max_stutter_sampler \\<sigma> k.\n     \\<sigma> (max_stutter_sampler \\<sigma> k) = \\<sigma> n\n\ngoal (1 subgoal):\n 1. \\<forall>n>max_stutter_sampler \\<sigma> k.\n       \\<sigma> n = \\<sigma> (max_stutter_sampler \\<sigma> k)", "by auto"], ["proof (state)\nthis:\n  \\<forall>n>max_stutter_sampler \\<sigma> k.\n     \\<sigma> n = \\<sigma> (max_stutter_sampler \\<sigma> k)\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> k\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n        \\<sigma> (max_stutter_sampler \\<sigma> k) =\n        \\<sigma> n) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "hence 3: \"?mss (Suc k) = Suc (?mss k)\""], ["proof (prove)\nusing this:\n  \\<forall>n>max_stutter_sampler \\<sigma> k.\n     \\<sigma> n = \\<sigma> (max_stutter_sampler \\<sigma> k)\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> (Suc k) =\n    Suc (max_stutter_sampler \\<sigma> k)", "by (simp add: Let_def)"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> (Suc k) =\n  Suc (max_stutter_sampler \\<sigma> k)\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> k\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n        \\<sigma> (max_stutter_sampler \\<sigma> k) =\n        \\<sigma> n) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "with 2"], ["proof (chain)\npicking this:\n  \\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n     \\<sigma> (max_stutter_sampler \\<sigma> k) = \\<sigma> n\n  max_stutter_sampler \\<sigma> (Suc k) =\n  Suc (max_stutter_sampler \\<sigma> k)", "have \"\\<sigma> (?mss k) = \\<sigma> (?mss (Suc k))\""], ["proof (prove)\nusing this:\n  \\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n     \\<sigma> (max_stutter_sampler \\<sigma> k) = \\<sigma> n\n  max_stutter_sampler \\<sigma> (Suc k) =\n  Suc (max_stutter_sampler \\<sigma> k)\n\ngoal (1 subgoal):\n 1. \\<sigma> (max_stutter_sampler \\<sigma> k) =\n    \\<sigma> (max_stutter_sampler \\<sigma> (Suc k))", "by (auto simp del: max_stutter_sampler.simps)"], ["proof (state)\nthis:\n  \\<sigma> (max_stutter_sampler \\<sigma> k) =\n  \\<sigma> (max_stutter_sampler \\<sigma> (Suc k))\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> k\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n        \\<sigma> (max_stutter_sampler \\<sigma> k) =\n        \\<sigma> n) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "from sym[OF this] 2 3"], ["proof (chain)\npicking this:\n  \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) =\n  \\<sigma> (max_stutter_sampler \\<sigma> k)\n  \\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n     \\<sigma> (max_stutter_sampler \\<sigma> k) = \\<sigma> n\n  max_stutter_sampler \\<sigma> (Suc k) =\n  Suc (max_stutter_sampler \\<sigma> k)", "have \"\\<forall>n \\<ge> ?mss (Suc k). \\<sigma> (?mss (Suc k)) = \\<sigma> n\""], ["proof (prove)\nusing this:\n  \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) =\n  \\<sigma> (max_stutter_sampler \\<sigma> k)\n  \\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n     \\<sigma> (max_stutter_sampler \\<sigma> k) = \\<sigma> n\n  max_stutter_sampler \\<sigma> (Suc k) =\n  Suc (max_stutter_sampler \\<sigma> k)\n\ngoal (1 subgoal):\n 1. \\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n       \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n", "by (auto simp del: max_stutter_sampler.simps)"], ["proof (state)\nthis:\n  \\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n     \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> k\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n        \\<sigma> (max_stutter_sampler \\<sigma> k) =\n        \\<sigma> n) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "moreover"], ["proof (state)\nthis:\n  \\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n     \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> k\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n        \\<sigma> (max_stutter_sampler \\<sigma> k) =\n        \\<sigma> n) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "from mssf[THEN stutter_sampler_mono, THEN strict_monoD]"], ["proof (chain)\npicking this:\n  ?x < ?y \\<Longrightarrow>\n  (f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f)) ?x\n  < (f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f)) ?y", "have \"f (?mssf k) < f (?mssf (Suc k))\""], ["proof (prove)\nusing this:\n  ?x < ?y \\<Longrightarrow>\n  (f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f)) ?x\n  < (f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f)) ?y\n\ngoal (1 subgoal):\n 1. f (max_stutter_sampler (\\<sigma> \\<circ> f) k)\n    < f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))", "by (simp del: max_stutter_sampler.simps)"], ["proof (state)\nthis:\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k)\n  < f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> k\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n        \\<sigma> (max_stutter_sampler \\<sigma> k) =\n        \\<sigma> n) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "with 1 3"], ["proof (chain)\npicking this:\n  max_stutter_sampler \\<sigma> k\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k)\n  max_stutter_sampler \\<sigma> (Suc k) =\n  Suc (max_stutter_sampler \\<sigma> k)\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k)\n  < f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))", "have \"?mss (Suc k) \\<le> f (?mssf (Suc k))\""], ["proof (prove)\nusing this:\n  max_stutter_sampler \\<sigma> k\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k)\n  max_stutter_sampler \\<sigma> (Suc k) =\n  Suc (max_stutter_sampler \\<sigma> k)\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k)\n  < f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))", "by (simp del: max_stutter_sampler.simps)"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> (Suc k)\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> k\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n        \\<sigma> (max_stutter_sampler \\<sigma> k) =\n        \\<sigma> n) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n     \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n\n  max_stutter_sampler \\<sigma> (Suc k)\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))", "show \"?B (Suc k)\""], ["proof (prove)\nusing this:\n  \\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n     \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n\n  max_stutter_sampler \\<sigma> (Suc k)\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "by blast"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> (Suc k)\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n  (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n      \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> k\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n  (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n      \\<sigma> (max_stutter_sampler \\<sigma> k) =\n      \\<sigma> n) \\<longrightarrow>\n  max_stutter_sampler \\<sigma> (Suc k)\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n  (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n      \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       max_stutter_sampler \\<sigma> k =\n       f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<or>\n       max_stutter_sampler \\<sigma> k\n       \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n       (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n           \\<sigma> (max_stutter_sampler \\<sigma> k) =\n           \\<sigma> n) \\<Longrightarrow>\n       max_stutter_sampler \\<sigma> (Suc k) =\n       f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n       max_stutter_sampler \\<sigma> (Suc k)\n       \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n       (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n           \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "from ih"], ["proof (chain)\npicking this:\n  max_stutter_sampler \\<sigma> k =\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<or>\n  max_stutter_sampler \\<sigma> k\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n  (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n      \\<sigma> (max_stutter_sampler \\<sigma> k) = \\<sigma> n)", "show \"?P (Suc k)\""], ["proof (prove)\nusing this:\n  max_stutter_sampler \\<sigma> k =\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<or>\n  max_stutter_sampler \\<sigma> k\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n  (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n      \\<sigma> (max_stutter_sampler \\<sigma> k) = \\<sigma> n)\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> (Suc k) =\n    f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. max_stutter_sampler \\<sigma> k =\n    f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc k) =\n    f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)\n 2. max_stutter_sampler \\<sigma> k\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n        \\<sigma> (max_stutter_sampler \\<sigma> k) =\n        \\<sigma> n) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc k) =\n    f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "assume a: \"?A k\""], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> k =\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k)\n\ngoal (2 subgoals):\n 1. max_stutter_sampler \\<sigma> k =\n    f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc k) =\n    f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)\n 2. max_stutter_sampler \\<sigma> k\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n        \\<sigma> (max_stutter_sampler \\<sigma> k) =\n        \\<sigma> n) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc k) =\n    f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> (Suc k) =\n    f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "proof (cases \"\\<forall>n > ?mss k. \\<sigma> n = \\<sigma> (?mss k)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>n>max_stutter_sampler \\<sigma> k.\n       \\<sigma> n =\n       \\<sigma> (max_stutter_sampler \\<sigma> k) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc k) =\n    f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)\n 2. \\<not> (\\<forall>n>max_stutter_sampler \\<sigma> k.\n               \\<sigma> n =\n               \\<sigma> (max_stutter_sampler \\<sigma> k)) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc k) =\n    f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "case True"], ["proof (state)\nthis:\n  \\<forall>n>max_stutter_sampler \\<sigma> k.\n     \\<sigma> n = \\<sigma> (max_stutter_sampler \\<sigma> k)\n\ngoal (2 subgoals):\n 1. \\<forall>n>max_stutter_sampler \\<sigma> k.\n       \\<sigma> n =\n       \\<sigma> (max_stutter_sampler \\<sigma> k) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc k) =\n    f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)\n 2. \\<not> (\\<forall>n>max_stutter_sampler \\<sigma> k.\n               \\<sigma> n =\n               \\<sigma> (max_stutter_sampler \\<sigma> k)) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc k) =\n    f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "hence \"\\<forall>n \\<ge> ?mss k. \\<sigma> (?mss k) = \\<sigma> n\""], ["proof (prove)\nusing this:\n  \\<forall>n>max_stutter_sampler \\<sigma> k.\n     \\<sigma> n = \\<sigma> (max_stutter_sampler \\<sigma> k)\n\ngoal (1 subgoal):\n 1. \\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n       \\<sigma> (max_stutter_sampler \\<sigma> k) = \\<sigma> n", "by (auto simp: le_less)"], ["proof (state)\nthis:\n  \\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n     \\<sigma> (max_stutter_sampler \\<sigma> k) = \\<sigma> n\n\ngoal (2 subgoals):\n 1. \\<forall>n>max_stutter_sampler \\<sigma> k.\n       \\<sigma> n =\n       \\<sigma> (max_stutter_sampler \\<sigma> k) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc k) =\n    f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)\n 2. \\<not> (\\<forall>n>max_stutter_sampler \\<sigma> k.\n               \\<sigma> n =\n               \\<sigma> (max_stutter_sampler \\<sigma> k)) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc k) =\n    f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "with a"], ["proof (chain)\npicking this:\n  max_stutter_sampler \\<sigma> k =\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k)\n  \\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n     \\<sigma> (max_stutter_sampler \\<sigma> k) = \\<sigma> n", "have \"?B k\""], ["proof (prove)\nusing this:\n  max_stutter_sampler \\<sigma> k =\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k)\n  \\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n     \\<sigma> (max_stutter_sampler \\<sigma> k) = \\<sigma> n\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> k\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n        \\<sigma> (max_stutter_sampler \\<sigma> k) = \\<sigma> n)", "by simp"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> k\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n  (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n      \\<sigma> (max_stutter_sampler \\<sigma> k) = \\<sigma> n)\n\ngoal (2 subgoals):\n 1. \\<forall>n>max_stutter_sampler \\<sigma> k.\n       \\<sigma> n =\n       \\<sigma> (max_stutter_sampler \\<sigma> k) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc k) =\n    f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)\n 2. \\<not> (\\<forall>n>max_stutter_sampler \\<sigma> k.\n               \\<sigma> n =\n               \\<sigma> (max_stutter_sampler \\<sigma> k)) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc k) =\n    f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "with b"], ["proof (chain)\npicking this:\n  max_stutter_sampler \\<sigma> k\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n  (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n      \\<sigma> (max_stutter_sampler \\<sigma> k) =\n      \\<sigma> n) \\<longrightarrow>\n  max_stutter_sampler \\<sigma> (Suc k)\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n  (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n      \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)\n  max_stutter_sampler \\<sigma> k\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n  (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n      \\<sigma> (max_stutter_sampler \\<sigma> k) = \\<sigma> n)", "show ?thesis"], ["proof (prove)\nusing this:\n  max_stutter_sampler \\<sigma> k\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n  (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n      \\<sigma> (max_stutter_sampler \\<sigma> k) =\n      \\<sigma> n) \\<longrightarrow>\n  max_stutter_sampler \\<sigma> (Suc k)\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n  (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n      \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)\n  max_stutter_sampler \\<sigma> k\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n  (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n      \\<sigma> (max_stutter_sampler \\<sigma> k) = \\<sigma> n)\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> (Suc k) =\n    f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "by (simp del: max_stutter_sampler.simps)"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> (Suc k) =\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n  max_stutter_sampler \\<sigma> (Suc k)\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n  (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n      \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n>max_stutter_sampler \\<sigma> k.\n               \\<sigma> n =\n               \\<sigma> (max_stutter_sampler \\<sigma> k)) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc k) =\n    f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n>max_stutter_sampler \\<sigma> k.\n               \\<sigma> n =\n               \\<sigma> (max_stutter_sampler \\<sigma> k)) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc k) =\n    f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "case False"], ["proof (state)\nthis:\n  \\<not> (\\<forall>n>max_stutter_sampler \\<sigma> k.\n             \\<sigma> n = \\<sigma> (max_stutter_sampler \\<sigma> k))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n>max_stutter_sampler \\<sigma> k.\n               \\<sigma> n =\n               \\<sigma> (max_stutter_sampler \\<sigma> k)) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc k) =\n    f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "hence diff: \"\\<sigma> (?mss (Suc k)) \\<noteq> \\<sigma> (?mss k)\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>n>max_stutter_sampler \\<sigma> k.\n             \\<sigma> n = \\<sigma> (max_stutter_sampler \\<sigma> k))\n\ngoal (1 subgoal):\n 1. \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) \\<noteq>\n    \\<sigma> (max_stutter_sampler \\<sigma> k)", "by (blast dest: max_stutter_sampler_nostuttering)"], ["proof (state)\nthis:\n  \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) \\<noteq>\n  \\<sigma> (max_stutter_sampler \\<sigma> k)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n>max_stutter_sampler \\<sigma> k.\n               \\<sigma> n =\n               \\<sigma> (max_stutter_sampler \\<sigma> k)) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc k) =\n    f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "have \"?A (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> (Suc k) =\n    f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))\n 2. f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))\n    \\<le> max_stutter_sampler \\<sigma> (Suc k)", "show \"f (?mssf (Suc k)) \\<le> ?mss (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))\n    \\<le> max_stutter_sampler \\<sigma> (Suc k)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))\n           \\<le> max_stutter_sampler \\<sigma> (Suc k) \\<Longrightarrow>\n    False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))\n         \\<le> max_stutter_sampler \\<sigma> (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))\n           \\<le> max_stutter_sampler \\<sigma> (Suc k) \\<Longrightarrow>\n    False", "hence contr: \"?mss (Suc k) < f (?mssf (Suc k))\""], ["proof (prove)\nusing this:\n  \\<not> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))\n         \\<le> max_stutter_sampler \\<sigma> (Suc k)\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> (Suc k)\n    < f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))", "by simp"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> (Suc k)\n  < f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))\n\ngoal (1 subgoal):\n 1. \\<not> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))\n           \\<le> max_stutter_sampler \\<sigma> (Suc k) \\<Longrightarrow>\n    False", "from mssf"], ["proof (chain)\npicking this:\n  stutter_sampler (f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f))\n   \\<sigma>", "have \"\\<sigma> (?mss (Suc k)) = \\<sigma> ((f \\<circ> ?mssf) k)\""], ["proof (prove)\nusing this:\n  stutter_sampler (f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f))\n   \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) =\n    \\<sigma> ((f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f)) k)", "proof (rule stutter_sampler_between)"], ["proof (state)\ngoal (2 subgoals):\n 1. (f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f)) k\n    \\<le> max_stutter_sampler \\<sigma> (Suc k)\n 2. max_stutter_sampler \\<sigma> (Suc k)\n    < (f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f)) (Suc k)", "from max_stutter_sampler[of \"\\<sigma>\", THEN stutter_sampler_mono]"], ["proof (chain)\npicking this:\n  strict_mono (max_stutter_sampler \\<sigma>)", "have \"?mss k < ?mss (Suc k)\""], ["proof (prove)\nusing this:\n  strict_mono (max_stutter_sampler \\<sigma>)\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> k < max_stutter_sampler \\<sigma> (Suc k)", "by (rule strict_monoD) simp"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> k < max_stutter_sampler \\<sigma> (Suc k)\n\ngoal (2 subgoals):\n 1. (f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f)) k\n    \\<le> max_stutter_sampler \\<sigma> (Suc k)\n 2. max_stutter_sampler \\<sigma> (Suc k)\n    < (f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f)) (Suc k)", "with a"], ["proof (chain)\npicking this:\n  max_stutter_sampler \\<sigma> k =\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k)\n  max_stutter_sampler \\<sigma> k < max_stutter_sampler \\<sigma> (Suc k)", "show \"(f \\<circ> ?mssf) k \\<le> ?mss (Suc k)\""], ["proof (prove)\nusing this:\n  max_stutter_sampler \\<sigma> k =\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k)\n  max_stutter_sampler \\<sigma> k < max_stutter_sampler \\<sigma> (Suc k)\n\ngoal (1 subgoal):\n 1. (f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f)) k\n    \\<le> max_stutter_sampler \\<sigma> (Suc k)", "by (simp add: o_def del: max_stutter_sampler.simps)"], ["proof (state)\nthis:\n  (f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f)) k\n  \\<le> max_stutter_sampler \\<sigma> (Suc k)\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> (Suc k)\n    < (f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f)) (Suc k)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> (Suc k)\n    < (f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f)) (Suc k)", "from contr"], ["proof (chain)\npicking this:\n  max_stutter_sampler \\<sigma> (Suc k)\n  < f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))", "show \"?mss (Suc k) < (f \\<circ> ?mssf) (Suc k)\""], ["proof (prove)\nusing this:\n  max_stutter_sampler \\<sigma> (Suc k)\n  < f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> (Suc k)\n    < (f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f)) (Suc k)", "by simp"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> (Suc k)\n  < (f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f)) (Suc k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) =\n  \\<sigma> ((f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f)) k)\n\ngoal (1 subgoal):\n 1. \\<not> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))\n           \\<le> max_stutter_sampler \\<sigma> (Suc k) \\<Longrightarrow>\n    False", "with a"], ["proof (chain)\npicking this:\n  max_stutter_sampler \\<sigma> k =\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k)\n  \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) =\n  \\<sigma> ((f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f)) k)", "have \"\\<sigma> (?mss (Suc k)) = \\<sigma> (?mss k)\""], ["proof (prove)\nusing this:\n  max_stutter_sampler \\<sigma> k =\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k)\n  \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) =\n  \\<sigma> ((f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f)) k)\n\ngoal (1 subgoal):\n 1. \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) =\n    \\<sigma> (max_stutter_sampler \\<sigma> k)", "by (simp add: o_def del: max_stutter_sampler.simps)"], ["proof (state)\nthis:\n  \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) =\n  \\<sigma> (max_stutter_sampler \\<sigma> k)\n\ngoal (1 subgoal):\n 1. \\<not> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))\n           \\<le> max_stutter_sampler \\<sigma> (Suc k) \\<Longrightarrow>\n    False", "with diff"], ["proof (chain)\npicking this:\n  \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) \\<noteq>\n  \\<sigma> (max_stutter_sampler \\<sigma> k)\n  \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) =\n  \\<sigma> (max_stutter_sampler \\<sigma> k)", "show \"False\""], ["proof (prove)\nusing this:\n  \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) \\<noteq>\n  \\<sigma> (max_stutter_sampler \\<sigma> k)\n  \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) =\n  \\<sigma> (max_stutter_sampler \\<sigma> k)\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))\n  \\<le> max_stutter_sampler \\<sigma> (Suc k)\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))", "have \"\\<exists>m > ?mssf k. f m = ?mss (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m>max_stutter_sampler (\\<sigma> \\<circ> f) k.\n       f m = max_stutter_sampler \\<sigma> (Suc k)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>m>max_stutter_sampler (\\<sigma> \\<circ> f) k.\n               f m = max_stutter_sampler \\<sigma> (Suc k)) \\<Longrightarrow>\n    False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> (\\<exists>m>max_stutter_sampler (\\<sigma> \\<circ> f) k.\n             f m = max_stutter_sampler \\<sigma> (Suc k))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>m>max_stutter_sampler (\\<sigma> \\<circ> f) k.\n               f m = max_stutter_sampler \\<sigma> (Suc k)) \\<Longrightarrow>\n    False", "hence contr: \"\\<forall>i. f ((?mssf k) + Suc i) \\<noteq> ?mss (Suc k)\""], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>m>max_stutter_sampler (\\<sigma> \\<circ> f) k.\n             f m = max_stutter_sampler \\<sigma> (Suc k))\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i) \\<noteq>\n       max_stutter_sampler \\<sigma> (Suc k)", "by simp"], ["proof (state)\nthis:\n  \\<forall>i.\n     f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i) \\<noteq>\n     max_stutter_sampler \\<sigma> (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>m>max_stutter_sampler (\\<sigma> \\<circ> f) k.\n               f m = max_stutter_sampler \\<sigma> (Suc k)) \\<Longrightarrow>\n    False", "{"], ["proof (state)\nthis:\n  \\<forall>i.\n     f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i) \\<noteq>\n     max_stutter_sampler \\<sigma> (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>m>max_stutter_sampler (\\<sigma> \\<circ> f) k.\n               f m = max_stutter_sampler \\<sigma> (Suc k)) \\<Longrightarrow>\n    False", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>m>max_stutter_sampler (\\<sigma> \\<circ> f) k.\n               f m = max_stutter_sampler \\<sigma> (Suc k)) \\<Longrightarrow>\n    False", "have \"f (?mssf k + i) < ?mss (Suc k)\" (is \"?F i\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)\n    < max_stutter_sampler \\<sigma> (Suc k)", "proof (induct i)"], ["proof (state)\ngoal (2 subgoals):\n 1. f (max_stutter_sampler (\\<sigma> \\<circ> f) k + 0)\n    < max_stutter_sampler \\<sigma> (Suc k)\n 2. \\<And>i.\n       f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)\n       < max_stutter_sampler \\<sigma> (Suc k) \\<Longrightarrow>\n       f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i)\n       < max_stutter_sampler \\<sigma> (Suc k)", "from a"], ["proof (chain)\npicking this:\n  max_stutter_sampler \\<sigma> k =\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k)", "have \"f (?mssf k + 0) = ?mss k\""], ["proof (prove)\nusing this:\n  max_stutter_sampler \\<sigma> k =\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k)\n\ngoal (1 subgoal):\n 1. f (max_stutter_sampler (\\<sigma> \\<circ> f) k + 0) =\n    max_stutter_sampler \\<sigma> k", "by (simp add: o_def)"], ["proof (state)\nthis:\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k + 0) =\n  max_stutter_sampler \\<sigma> k\n\ngoal (2 subgoals):\n 1. f (max_stutter_sampler (\\<sigma> \\<circ> f) k + 0)\n    < max_stutter_sampler \\<sigma> (Suc k)\n 2. \\<And>i.\n       f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)\n       < max_stutter_sampler \\<sigma> (Suc k) \\<Longrightarrow>\n       f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i)\n       < max_stutter_sampler \\<sigma> (Suc k)", "also"], ["proof (state)\nthis:\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k + 0) =\n  max_stutter_sampler \\<sigma> k\n\ngoal (2 subgoals):\n 1. f (max_stutter_sampler (\\<sigma> \\<circ> f) k + 0)\n    < max_stutter_sampler \\<sigma> (Suc k)\n 2. \\<And>i.\n       f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)\n       < max_stutter_sampler \\<sigma> (Suc k) \\<Longrightarrow>\n       f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i)\n       < max_stutter_sampler \\<sigma> (Suc k)", "from max_stutter_sampler[of \"\\<sigma>\", THEN stutter_sampler_mono]"], ["proof (chain)\npicking this:\n  strict_mono (max_stutter_sampler \\<sigma>)", "have \"... < ?mss (Suc k)\""], ["proof (prove)\nusing this:\n  strict_mono (max_stutter_sampler \\<sigma>)\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> k < max_stutter_sampler \\<sigma> (Suc k)", "by (rule strict_monoD) simp"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> k < max_stutter_sampler \\<sigma> (Suc k)\n\ngoal (2 subgoals):\n 1. f (max_stutter_sampler (\\<sigma> \\<circ> f) k + 0)\n    < max_stutter_sampler \\<sigma> (Suc k)\n 2. \\<And>i.\n       f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)\n       < max_stutter_sampler \\<sigma> (Suc k) \\<Longrightarrow>\n       f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i)\n       < max_stutter_sampler \\<sigma> (Suc k)", "finally"], ["proof (chain)\npicking this:\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k + 0)\n  < max_stutter_sampler \\<sigma> (Suc k)", "show \"?F 0\""], ["proof (prove)\nusing this:\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k + 0)\n  < max_stutter_sampler \\<sigma> (Suc k)\n\ngoal (1 subgoal):\n 1. f (max_stutter_sampler (\\<sigma> \\<circ> f) k + 0)\n    < max_stutter_sampler \\<sigma> (Suc k)", "."], ["proof (state)\nthis:\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k + 0)\n  < max_stutter_sampler \\<sigma> (Suc k)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)\n       < max_stutter_sampler \\<sigma> (Suc k) \\<Longrightarrow>\n       f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i)\n       < max_stutter_sampler \\<sigma> (Suc k)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)\n       < max_stutter_sampler \\<sigma> (Suc k) \\<Longrightarrow>\n       f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i)\n       < max_stutter_sampler \\<sigma> (Suc k)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)\n       < max_stutter_sampler \\<sigma> (Suc k) \\<Longrightarrow>\n       f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i)\n       < max_stutter_sampler \\<sigma> (Suc k)", "assume ih: \"?F i\""], ["proof (state)\nthis:\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)\n  < max_stutter_sampler \\<sigma> (Suc k)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)\n       < max_stutter_sampler \\<sigma> (Suc k) \\<Longrightarrow>\n       f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i)\n       < max_stutter_sampler \\<sigma> (Suc k)", "show \"?F (Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i)\n    < max_stutter_sampler \\<sigma> (Suc k)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i)\n           < max_stutter_sampler \\<sigma> (Suc k) \\<Longrightarrow>\n    False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i)\n         < max_stutter_sampler \\<sigma> (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i)\n           < max_stutter_sampler \\<sigma> (Suc k) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i)\n         < max_stutter_sampler \\<sigma> (Suc k)", "have \"?mss (Suc k) \\<le> f (?mssf k + Suc i)\""], ["proof (prove)\nusing this:\n  \\<not> f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i)\n         < max_stutter_sampler \\<sigma> (Suc k)\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i)", "by (simp add: o_def)"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> (Suc k)\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i)\n\ngoal (1 subgoal):\n 1. \\<not> f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i)\n           < max_stutter_sampler \\<sigma> (Suc k) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> (Suc k)\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i)\n\ngoal (1 subgoal):\n 1. \\<not> f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i)\n           < max_stutter_sampler \\<sigma> (Suc k) \\<Longrightarrow>\n    False", "from contr"], ["proof (chain)\npicking this:\n  \\<forall>i.\n     f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i) \\<noteq>\n     max_stutter_sampler \\<sigma> (Suc k)", "have \"f (?mssf k + Suc i) \\<noteq> ?mss (Suc k)\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i) \\<noteq>\n     max_stutter_sampler \\<sigma> (Suc k)\n\ngoal (1 subgoal):\n 1. f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i) \\<noteq>\n    max_stutter_sampler \\<sigma> (Suc k)", "by blast"], ["proof (state)\nthis:\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i) \\<noteq>\n  max_stutter_sampler \\<sigma> (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i)\n           < max_stutter_sampler \\<sigma> (Suc k) \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  max_stutter_sampler \\<sigma> (Suc k)\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i)\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i) \\<noteq>\n  max_stutter_sampler \\<sigma> (Suc k)", "have i: \"?mss (Suc k) < f (?mssf k + Suc i)\""], ["proof (prove)\nusing this:\n  max_stutter_sampler \\<sigma> (Suc k)\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i)\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i) \\<noteq>\n  max_stutter_sampler \\<sigma> (Suc k)\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> (Suc k)\n    < f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i)", "by (simp add: less_le)"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> (Suc k)\n  < f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i)\n\ngoal (1 subgoal):\n 1. \\<not> f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i)\n           < max_stutter_sampler \\<sigma> (Suc k) \\<Longrightarrow>\n    False", "from f"], ["proof (chain)\npicking this:\n  stutter_sampler f \\<sigma>", "have \"\\<sigma> (?mss (Suc k)) = \\<sigma> (f (?mssf k + i))\""], ["proof (prove)\nusing this:\n  stutter_sampler f \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) =\n    \\<sigma> (f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i))", "proof (rule stutter_sampler_between)"], ["proof (state)\ngoal (2 subgoals):\n 1. f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)\n    \\<le> max_stutter_sampler \\<sigma> (Suc k)\n 2. max_stutter_sampler \\<sigma> (Suc k)\n    < f (Suc (max_stutter_sampler (\\<sigma> \\<circ> f) k + i))", "from ih"], ["proof (chain)\npicking this:\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)\n  < max_stutter_sampler \\<sigma> (Suc k)", "show \"f (?mssf k + i) \\<le> ?mss (Suc k)\""], ["proof (prove)\nusing this:\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)\n  < max_stutter_sampler \\<sigma> (Suc k)\n\ngoal (1 subgoal):\n 1. f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)\n    \\<le> max_stutter_sampler \\<sigma> (Suc k)", "by (simp add: o_def)"], ["proof (state)\nthis:\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)\n  \\<le> max_stutter_sampler \\<sigma> (Suc k)\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> (Suc k)\n    < f (Suc (max_stutter_sampler (\\<sigma> \\<circ> f) k + i))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> (Suc k)\n    < f (Suc (max_stutter_sampler (\\<sigma> \\<circ> f) k + i))", "from i"], ["proof (chain)\npicking this:\n  max_stutter_sampler \\<sigma> (Suc k)\n  < f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i)", "show \"?mss (Suc k) < f (Suc (?mssf k + i))\""], ["proof (prove)\nusing this:\n  max_stutter_sampler \\<sigma> (Suc k)\n  < f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i)\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> (Suc k)\n    < f (Suc (max_stutter_sampler (\\<sigma> \\<circ> f) k + i))", "by simp"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> (Suc k)\n  < f (Suc (max_stutter_sampler (\\<sigma> \\<circ> f) k + i))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) =\n  \\<sigma> (f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i))\n\ngoal (1 subgoal):\n 1. \\<not> f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i)\n           < max_stutter_sampler \\<sigma> (Suc k) \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) =\n  \\<sigma> (f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i))\n\ngoal (1 subgoal):\n 1. \\<not> f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i)\n           < max_stutter_sampler \\<sigma> (Suc k) \\<Longrightarrow>\n    False", "from max_stutter_sampler"], ["proof (chain)\npicking this:\n  stutter_sampler (max_stutter_sampler ?\\<sigma>) ?\\<sigma>", "have \"... = \\<sigma> (?mss k)\""], ["proof (prove)\nusing this:\n  stutter_sampler (max_stutter_sampler ?\\<sigma>) ?\\<sigma>\n\ngoal (1 subgoal):\n 1. \\<sigma> (f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)) =\n    \\<sigma> (max_stutter_sampler \\<sigma> k)", "proof (rule stutter_sampler_between)"], ["proof (state)\ngoal (2 subgoals):\n 1. max_stutter_sampler \\<sigma> k\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)\n 2. f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)\n    < max_stutter_sampler \\<sigma> (Suc k)", "from f[THEN stutter_sampler_mono, THEN strict_mono_mono]"], ["proof (chain)\npicking this:\n  mono f", "have \"f (?mssf k) \\<le> f (?mssf k + i)\""], ["proof (prove)\nusing this:\n  mono f\n\ngoal (1 subgoal):\n 1. f (max_stutter_sampler (\\<sigma> \\<circ> f) k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)", "by (rule monoD) simp"], ["proof (state)\nthis:\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k)\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)\n\ngoal (2 subgoals):\n 1. max_stutter_sampler \\<sigma> k\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)\n 2. f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)\n    < max_stutter_sampler \\<sigma> (Suc k)", "with a"], ["proof (chain)\npicking this:\n  max_stutter_sampler \\<sigma> k =\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k)\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k)\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)", "show \"?mss k \\<le> f (?mssf k + i)\""], ["proof (prove)\nusing this:\n  max_stutter_sampler \\<sigma> k =\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k)\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k)\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> k\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)", "by (simp add: o_def)"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> k\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)\n\ngoal (1 subgoal):\n 1. f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)\n    < max_stutter_sampler \\<sigma> (Suc k)", "qed (rule ih)"], ["proof (state)\nthis:\n  \\<sigma> (f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)) =\n  \\<sigma> (max_stutter_sampler \\<sigma> k)\n\ngoal (1 subgoal):\n 1. \\<not> f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i)\n           < max_stutter_sampler \\<sigma> (Suc k) \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  \\<sigma> (f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)) =\n  \\<sigma> (max_stutter_sampler \\<sigma> k)\n\ngoal (1 subgoal):\n 1. \\<not> f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i)\n           < max_stutter_sampler \\<sigma> (Suc k) \\<Longrightarrow>\n    False", "note diff"], ["proof (state)\nthis:\n  \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) \\<noteq>\n  \\<sigma> (max_stutter_sampler \\<sigma> k)\n\ngoal (1 subgoal):\n 1. \\<not> f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i)\n           < max_stutter_sampler \\<sigma> (Suc k) \\<Longrightarrow>\n    False", "finally"], ["proof (chain)\npicking this:\n  \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) \\<noteq>\n  \\<sigma> (max_stutter_sampler \\<sigma> (Suc k))", "show \"False\""], ["proof (prove)\nusing this:\n  \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) \\<noteq>\n  \\<sigma> (max_stutter_sampler \\<sigma> (Suc k))\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k + Suc i)\n  < max_stutter_sampler \\<sigma> (Suc k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)\n  < max_stutter_sampler \\<sigma> (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>m>max_stutter_sampler (\\<sigma> \\<circ> f) k.\n               f m = max_stutter_sampler \\<sigma> (Suc k)) \\<Longrightarrow>\n    False", "}"], ["proof (state)\nthis:\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k + ?i2)\n  < max_stutter_sampler \\<sigma> (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>m>max_stutter_sampler (\\<sigma> \\<circ> f) k.\n               f m = max_stutter_sampler \\<sigma> (Suc k)) \\<Longrightarrow>\n    False", "note bounded = this"], ["proof (state)\nthis:\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k + ?i2)\n  < max_stutter_sampler \\<sigma> (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>m>max_stutter_sampler (\\<sigma> \\<circ> f) k.\n               f m = max_stutter_sampler \\<sigma> (Suc k)) \\<Longrightarrow>\n    False", "from f[THEN stutter_sampler_mono]"], ["proof (chain)\npicking this:\n  strict_mono f", "have \"strict_mono (\\<lambda>i. f (?mssf k + i))\""], ["proof (prove)\nusing this:\n  strict_mono f\n\ngoal (1 subgoal):\n 1. strict_mono\n     (\\<lambda>i. f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i))", "by (auto simp: strict_mono_def)"], ["proof (state)\nthis:\n  strict_mono\n   (\\<lambda>i. f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>m>max_stutter_sampler (\\<sigma> \\<circ> f) k.\n               f m = max_stutter_sampler \\<sigma> (Suc k)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  strict_mono\n   (\\<lambda>i. f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i))", "obtain i where i: \"?mss (Suc k) < f (?mssf k + i)\""], ["proof (prove)\nusing this:\n  strict_mono\n   (\\<lambda>i. f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i))\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        max_stutter_sampler \\<sigma> (Suc k)\n        < f (max_stutter_sampler (\\<sigma> \\<circ> f) k +\n             i) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (blast dest: strict_mono_exceeds)"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> (Suc k)\n  < f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>m>max_stutter_sampler (\\<sigma> \\<circ> f) k.\n               f m = max_stutter_sampler \\<sigma> (Suc k)) \\<Longrightarrow>\n    False", "from bounded"], ["proof (chain)\npicking this:\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k + ?i2)\n  < max_stutter_sampler \\<sigma> (Suc k)", "have \"f (?mssf k + i) < ?mss (Suc k)\""], ["proof (prove)\nusing this:\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k + ?i2)\n  < max_stutter_sampler \\<sigma> (Suc k)\n\ngoal (1 subgoal):\n 1. f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)\n    < max_stutter_sampler \\<sigma> (Suc k)", "."], ["proof (state)\nthis:\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)\n  < max_stutter_sampler \\<sigma> (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>m>max_stutter_sampler (\\<sigma> \\<circ> f) k.\n               f m = max_stutter_sampler \\<sigma> (Suc k)) \\<Longrightarrow>\n    False", "with i"], ["proof (chain)\npicking this:\n  max_stutter_sampler \\<sigma> (Suc k)\n  < f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)\n  < max_stutter_sampler \\<sigma> (Suc k)", "show \"False\""], ["proof (prove)\nusing this:\n  max_stutter_sampler \\<sigma> (Suc k)\n  < f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k + i)\n  < max_stutter_sampler \\<sigma> (Suc k)\n\ngoal (1 subgoal):\n 1. False", "by (simp del: max_stutter_sampler.simps)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>m>max_stutter_sampler (\\<sigma> \\<circ> f) k.\n     f m = max_stutter_sampler \\<sigma> (Suc k)\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))", "then"], ["proof (chain)\npicking this:\n  \\<exists>m>max_stutter_sampler (\\<sigma> \\<circ> f) k.\n     f m = max_stutter_sampler \\<sigma> (Suc k)", "obtain m where m: \"m > ?mssf k\" and m': \"f m = ?mss (Suc k)\""], ["proof (prove)\nusing this:\n  \\<exists>m>max_stutter_sampler (\\<sigma> \\<circ> f) k.\n     f m = max_stutter_sampler \\<sigma> (Suc k)\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>max_stutter_sampler (\\<sigma> \\<circ> f) k < m;\n         f m = max_stutter_sampler \\<sigma> (Suc k)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  max_stutter_sampler (\\<sigma> \\<circ> f) k < m\n  f m = max_stutter_sampler \\<sigma> (Suc k)\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))", "show \"?mss (Suc k) \\<le> f (?mssf (Suc k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> max_stutter_sampler \\<sigma> (Suc k)\n           \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f)\n                     (Suc k)) \\<Longrightarrow>\n    False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> max_stutter_sampler \\<sigma> (Suc k)\n         \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))\n\ngoal (1 subgoal):\n 1. \\<not> max_stutter_sampler \\<sigma> (Suc k)\n           \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f)\n                     (Suc k)) \\<Longrightarrow>\n    False", "hence contr: \"f (?mssf (Suc k)) < ?mss (Suc k)\""], ["proof (prove)\nusing this:\n  \\<not> max_stutter_sampler \\<sigma> (Suc k)\n         \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))\n\ngoal (1 subgoal):\n 1. f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))\n    < max_stutter_sampler \\<sigma> (Suc k)", "by simp"], ["proof (state)\nthis:\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))\n  < max_stutter_sampler \\<sigma> (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> max_stutter_sampler \\<sigma> (Suc k)\n           \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f)\n                     (Suc k)) \\<Longrightarrow>\n    False", "from mssf[THEN stutter_sampler_mono]"], ["proof (chain)\npicking this:\n  strict_mono (f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f))", "have \"(f \\<circ> ?mssf) k < (f \\<circ> ?mssf) (Suc k)\""], ["proof (prove)\nusing this:\n  strict_mono (f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f))\n\ngoal (1 subgoal):\n 1. (f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f)) k\n    < (f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f)) (Suc k)", "by (rule strict_monoD) simp"], ["proof (state)\nthis:\n  (f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f)) k\n  < (f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f)) (Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> max_stutter_sampler \\<sigma> (Suc k)\n           \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f)\n                     (Suc k)) \\<Longrightarrow>\n    False", "with a"], ["proof (chain)\npicking this:\n  max_stutter_sampler \\<sigma> k =\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k)\n  (f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f)) k\n  < (f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f)) (Suc k)", "have \"?mss k \\<le> f (?mssf (Suc k))\""], ["proof (prove)\nusing this:\n  max_stutter_sampler \\<sigma> k =\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k)\n  (f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f)) k\n  < (f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f)) (Suc k)\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> k\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))", "by (simp add: o_def)"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> k\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))\n\ngoal (1 subgoal):\n 1. \\<not> max_stutter_sampler \\<sigma> (Suc k)\n           \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f)\n                     (Suc k)) \\<Longrightarrow>\n    False", "from this contr"], ["proof (chain)\npicking this:\n  max_stutter_sampler \\<sigma> k\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))\n  < max_stutter_sampler \\<sigma> (Suc k)", "have \"\\<sigma> (f (?mssf (Suc k))) = \\<sigma> (?mss k)\""], ["proof (prove)\nusing this:\n  max_stutter_sampler \\<sigma> k\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))\n  < max_stutter_sampler \\<sigma> (Suc k)\n\ngoal (1 subgoal):\n 1. \\<sigma> (f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))) =\n    \\<sigma> (max_stutter_sampler \\<sigma> k)", "by (rule stutter_sampler_between[OF max_stutter_sampler])"], ["proof (state)\nthis:\n  \\<sigma> (f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))) =\n  \\<sigma> (max_stutter_sampler \\<sigma> k)\n\ngoal (1 subgoal):\n 1. \\<not> max_stutter_sampler \\<sigma> (Suc k)\n           \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f)\n                     (Suc k)) \\<Longrightarrow>\n    False", "with a"], ["proof (chain)\npicking this:\n  max_stutter_sampler \\<sigma> k =\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k)\n  \\<sigma> (f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))) =\n  \\<sigma> (max_stutter_sampler \\<sigma> k)", "have stut: \"(\\<sigma> \\<circ> f) (?mssf (Suc k)) = (\\<sigma> \\<circ> f) (?mssf k)\""], ["proof (prove)\nusing this:\n  max_stutter_sampler \\<sigma> k =\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k)\n  \\<sigma> (f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))) =\n  \\<sigma> (max_stutter_sampler \\<sigma> k)\n\ngoal (1 subgoal):\n 1. (\\<sigma> \\<circ> f)\n     (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) =\n    (\\<sigma> \\<circ> f) (max_stutter_sampler (\\<sigma> \\<circ> f) k)", "by (simp add: o_def)"], ["proof (state)\nthis:\n  (\\<sigma> \\<circ> f) (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) =\n  (\\<sigma> \\<circ> f) (max_stutter_sampler (\\<sigma> \\<circ> f) k)\n\ngoal (1 subgoal):\n 1. \\<not> max_stutter_sampler \\<sigma> (Suc k)\n           \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f)\n                     (Suc k)) \\<Longrightarrow>\n    False", "from this m"], ["proof (chain)\npicking this:\n  (\\<sigma> \\<circ> f) (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) =\n  (\\<sigma> \\<circ> f) (max_stutter_sampler (\\<sigma> \\<circ> f) k)\n  max_stutter_sampler (\\<sigma> \\<circ> f) k < m", "have \"(\\<sigma> \\<circ> f) m = (\\<sigma> \\<circ> f) (?mssf k)\""], ["proof (prove)\nusing this:\n  (\\<sigma> \\<circ> f) (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) =\n  (\\<sigma> \\<circ> f) (max_stutter_sampler (\\<sigma> \\<circ> f) k)\n  max_stutter_sampler (\\<sigma> \\<circ> f) k < m\n\ngoal (1 subgoal):\n 1. (\\<sigma> \\<circ> f) m =\n    (\\<sigma> \\<circ> f) (max_stutter_sampler (\\<sigma> \\<circ> f) k)", "by (blast intro: max_stutter_sampler_nostuttering)"], ["proof (state)\nthis:\n  (\\<sigma> \\<circ> f) m =\n  (\\<sigma> \\<circ> f) (max_stutter_sampler (\\<sigma> \\<circ> f) k)\n\ngoal (1 subgoal):\n 1. \\<not> max_stutter_sampler \\<sigma> (Suc k)\n           \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f)\n                     (Suc k)) \\<Longrightarrow>\n    False", "with diff m' a"], ["proof (chain)\npicking this:\n  \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) \\<noteq>\n  \\<sigma> (max_stutter_sampler \\<sigma> k)\n  f m = max_stutter_sampler \\<sigma> (Suc k)\n  max_stutter_sampler \\<sigma> k =\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k)\n  (\\<sigma> \\<circ> f) m =\n  (\\<sigma> \\<circ> f) (max_stutter_sampler (\\<sigma> \\<circ> f) k)", "show \"False\""], ["proof (prove)\nusing this:\n  \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) \\<noteq>\n  \\<sigma> (max_stutter_sampler \\<sigma> k)\n  f m = max_stutter_sampler \\<sigma> (Suc k)\n  max_stutter_sampler \\<sigma> k =\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k)\n  (\\<sigma> \\<circ> f) m =\n  (\\<sigma> \\<circ> f) (max_stutter_sampler (\\<sigma> \\<circ> f) k)\n\ngoal (1 subgoal):\n 1. False", "by (simp add: o_def)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> (Suc k)\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> (Suc k) =\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>n>max_stutter_sampler \\<sigma> k.\n               \\<sigma> n =\n               \\<sigma> (max_stutter_sampler \\<sigma> k)) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc k) =\n    f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "thus ?thesis"], ["proof (prove)\nusing this:\n  max_stutter_sampler \\<sigma> (Suc k) =\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k))\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> (Suc k) =\n    f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", ".."], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> (Suc k) =\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n  max_stutter_sampler \\<sigma> (Suc k)\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n  (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n      \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> (Suc k) =\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n  max_stutter_sampler \\<sigma> (Suc k)\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n  (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n      \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> k\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n        \\<sigma> (max_stutter_sampler \\<sigma> k) =\n        \\<sigma> n) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc k) =\n    f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> k\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n        \\<sigma> (max_stutter_sampler \\<sigma> k) =\n        \\<sigma> n) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc k) =\n    f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "assume \"?B k\""], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> k\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n  (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n      \\<sigma> (max_stutter_sampler \\<sigma> k) = \\<sigma> n)\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> k\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n        \\<sigma> (max_stutter_sampler \\<sigma> k) =\n        \\<sigma> n) \\<Longrightarrow>\n    max_stutter_sampler \\<sigma> (Suc k) =\n    f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "with b"], ["proof (chain)\npicking this:\n  max_stutter_sampler \\<sigma> k\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n  (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n      \\<sigma> (max_stutter_sampler \\<sigma> k) =\n      \\<sigma> n) \\<longrightarrow>\n  max_stutter_sampler \\<sigma> (Suc k)\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n  (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n      \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)\n  max_stutter_sampler \\<sigma> k\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n  (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n      \\<sigma> (max_stutter_sampler \\<sigma> k) = \\<sigma> n)", "show ?thesis"], ["proof (prove)\nusing this:\n  max_stutter_sampler \\<sigma> k\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n  (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n      \\<sigma> (max_stutter_sampler \\<sigma> k) =\n      \\<sigma> n) \\<longrightarrow>\n  max_stutter_sampler \\<sigma> (Suc k)\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n  (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n      \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)\n  max_stutter_sampler \\<sigma> k\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n  (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n      \\<sigma> (max_stutter_sampler \\<sigma> k) = \\<sigma> n)\n\ngoal (1 subgoal):\n 1. max_stutter_sampler \\<sigma> (Suc k) =\n    f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n    max_stutter_sampler \\<sigma> (Suc k)\n    \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n    (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n        \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)", "by (simp del: max_stutter_sampler.simps)"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> (Suc k) =\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n  max_stutter_sampler \\<sigma> (Suc k)\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n  (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n      \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> (Suc k) =\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<or>\n  max_stutter_sampler \\<sigma> (Suc k)\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) (Suc k)) \\<and>\n  (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> (Suc k).\n      \\<sigma> (max_stutter_sampler \\<sigma> (Suc k)) = \\<sigma> n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> k =\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<or>\n  max_stutter_sampler \\<sigma> k\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) k) \\<and>\n  (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> k.\n      \\<sigma> (max_stutter_sampler \\<sigma> k) = \\<sigma> n)\n\ngoal (1 subgoal):\n 1. \\<natural>(\\<sigma> \\<circ> f) = \\<natural>\\<sigma>", "}"], ["proof (state)\nthis:\n  max_stutter_sampler \\<sigma> ?k2 =\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) ?k2) \\<or>\n  max_stutter_sampler \\<sigma> ?k2\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) ?k2) \\<and>\n  (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> ?k2.\n      \\<sigma> (max_stutter_sampler \\<sigma> ?k2) = \\<sigma> n)\n\ngoal (1 subgoal):\n 1. \\<natural>(\\<sigma> \\<circ> f) = \\<natural>\\<sigma>", "hence \"\\<natural>\\<sigma> = \\<natural>(\\<sigma> \\<circ> f)\""], ["proof (prove)\nusing this:\n  max_stutter_sampler \\<sigma> ?k2 =\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) ?k2) \\<or>\n  max_stutter_sampler \\<sigma> ?k2\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) ?k2) \\<and>\n  (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> ?k2.\n      \\<sigma> (max_stutter_sampler \\<sigma> ?k2) = \\<sigma> n)\n\ngoal (1 subgoal):\n 1. \\<natural>\\<sigma> = \\<natural>(\\<sigma> \\<circ> f)", "unfolding stutter_reduced_def"], ["proof (prove)\nusing this:\n  max_stutter_sampler \\<sigma> ?k2 =\n  f (max_stutter_sampler (\\<sigma> \\<circ> f) ?k2) \\<or>\n  max_stutter_sampler \\<sigma> ?k2\n  \\<le> f (max_stutter_sampler (\\<sigma> \\<circ> f) ?k2) \\<and>\n  (\\<forall>n\\<ge>max_stutter_sampler \\<sigma> ?k2.\n      \\<sigma> (max_stutter_sampler \\<sigma> ?k2) = \\<sigma> n)\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<circ> max_stutter_sampler \\<sigma> =\n    \\<sigma> \\<circ> f \\<circ> max_stutter_sampler (\\<sigma> \\<circ> f)", "by force"], ["proof (state)\nthis:\n  \\<natural>\\<sigma> = \\<natural>(\\<sigma> \\<circ> f)\n\ngoal (1 subgoal):\n 1. \\<natural>(\\<sigma> \\<circ> f) = \\<natural>\\<sigma>", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<natural>\\<sigma> = \\<natural>(\\<sigma> \\<circ> f)\n\ngoal (1 subgoal):\n 1. \\<natural>(\\<sigma> \\<circ> f) = \\<natural>\\<sigma>", "by (rule sym)"], ["proof (state)\nthis:\n  \\<natural>(\\<sigma> \\<circ> f) = \\<natural>\\<sigma>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* theory Samplers *)"]]}