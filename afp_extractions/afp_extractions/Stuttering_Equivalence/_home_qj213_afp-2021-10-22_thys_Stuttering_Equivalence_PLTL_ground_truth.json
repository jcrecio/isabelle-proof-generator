{"file_name": "/home/qj213/afp-2021-10-22/thys/Stuttering_Equivalence/PLTL.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Stuttering_Equivalence", "problem_names": ["lemma fold_graph_OR: \"finite \\<Phi> \\<Longrightarrow> fold_graph Or_ltlp False_ltlp \\<Phi> (OR \\<Phi>)\"", "lemma fold_graph_AND: \"finite \\<Phi> \\<Longrightarrow> fold_graph And_ltlp True_ltlp \\<Phi> (AND \\<Phi>)\"", "lemma holds_of_OR [simp]: \n  assumes fin: \"finite (\\<Phi>::'a pltl set)\"\n  shows \"(\\<sigma> \\<Turnstile>\\<^sub>p OR \\<Phi>) = (\\<exists>\\<phi>\\<in>\\<Phi>. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\"", "lemma holds_of_AND [simp]: \n  assumes fin: \"finite (\\<Phi>::'a pltl set)\"\n  shows \"(\\<sigma> \\<Turnstile>\\<^sub>p AND \\<Phi>) = (\\<forall>\\<phi>\\<in>\\<Phi>. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\"", "lemma next_free_not [simp]: \n  \"next_free (not\\<^sub>p \\<phi>) = next_free \\<phi>\"", "lemma next_free_true [simp]: \n  \"next_free true\\<^sub>p\"", "lemma next_free_or [simp]: \n  \"next_free (\\<phi> or\\<^sub>p \\<psi>) = (next_free \\<phi> \\<and> next_free \\<psi>)\"", "lemma next_free_and [simp]: \"next_free (\\<phi> and\\<^sub>p \\<psi>) = (next_free \\<phi> \\<and> next_free \\<psi>)\"", "lemma next_free_eventually [simp]: \n  \"next_free (F\\<^sub>p \\<phi>) = next_free \\<phi>\"", "lemma next_free_always [simp]: \n  \"next_free (G\\<^sub>p \\<phi>) = next_free \\<phi>\"", "lemma next_free_release [simp]:\n  \"next_free (\\<phi> R\\<^sub>p \\<psi>) = (next_free \\<phi> \\<and> next_free \\<psi>)\"", "lemma next_free_weak_until [simp]:\n  \"next_free (\\<phi> W\\<^sub>p \\<psi>) = (next_free \\<phi> \\<and> next_free \\<psi>)\"", "lemma next_free_strong_release [simp]:\n  \"next_free (\\<phi> M\\<^sub>p \\<psi>) = (next_free \\<phi> \\<and> next_free \\<psi>)\"", "lemma next_free_OR [simp]: \n  assumes fin: \"finite (\\<Phi>::'a pltl set)\"\n  shows \"next_free (OR \\<Phi>) = (\\<forall>\\<phi>\\<in>\\<Phi>. next_free \\<phi>)\"", "lemma next_free_AND [simp]: \n  assumes fin: \"finite (\\<Phi>::'a pltl set)\"\n  shows \"next_free (AND \\<Phi>) = (\\<forall>\\<phi>\\<in>\\<Phi>. next_free \\<phi>)\"", "lemma stutter_invariantI [intro!]:\n  assumes \"\\<And>\\<sigma> \\<tau>. \\<lbrakk>\\<sigma> \\<approx> \\<tau>; \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk> \\<Longrightarrow> \\<tau> \\<Turnstile>\\<^sub>p \\<phi>\"\n  shows \"stutter_invariant \\<phi>\"", "lemma stutter_invariantD [dest]:\n  assumes \"stutter_invariant \\<phi>\" and \"\\<sigma> \\<approx> \\<tau>\"\n  shows \"(\\<sigma> \\<Turnstile>\\<^sub>p \\<phi>) = (\\<tau> \\<Turnstile>\\<^sub>p \\<phi>)\"", "theorem next_free_stutter_invariant:\n  \"next_free \\<phi> \\<Longrightarrow> stutter_invariant (\\<phi>::'a pltl)\"", "lemma atoms_pltl_OR [simp]:\n  assumes fin: \"finite (\\<Phi>::'a pltl set)\"\n  shows \"atoms_pltl (OR \\<Phi>) = (\\<Union>\\<phi>\\<in>\\<Phi>. atoms_pltl \\<phi>)\"", "lemma atoms_pltl_AND [simp]:\n  assumes fin: \"finite (\\<Phi>::'a pltl set)\"\n  shows \"atoms_pltl (AND \\<Phi>) = (\\<Union>\\<phi>\\<in>\\<Phi>. atoms_pltl \\<phi>)\"", "lemma state_sim_refl [simp]: \"s ~A~ s\"", "lemma state_sim_sym: \"s ~A~ t \\<Longrightarrow> t ~A~ s\"", "lemma state_sim_trans[trans]: \"s ~A~ t \\<Longrightarrow> t ~A~ u \\<Longrightarrow> s ~A~ u\"", "lemma state_sim_mono:\n  assumes \"s ~A~ t\" and \"B \\<subseteq> A\"\n  shows \"s ~B~ t\"", "lemma seq_sim_refl [simp]: \"\\<sigma> \\<simeq>A\\<simeq> \\<sigma>\"", "lemma seq_sim_sym: \"\\<sigma> \\<simeq>A\\<simeq> \\<tau> \\<Longrightarrow> \\<tau> \\<simeq>A\\<simeq> \\<sigma>\"", "lemma seq_sim_trans[trans]: \"\\<rho> \\<simeq>A\\<simeq> \\<sigma> \\<Longrightarrow> \\<sigma> \\<simeq>A\\<simeq> \\<tau> \\<Longrightarrow> \\<rho> \\<simeq>A\\<simeq> \\<tau>\"", "lemma seq_sim_mono:\n  assumes \"\\<sigma> \\<simeq>A\\<simeq> \\<tau>\" and \"B \\<subseteq> A\"\n  shows \"\\<sigma> \\<simeq>B\\<simeq> \\<tau>\"", "lemma pltl_seq_sim: \"\\<sigma> \\<simeq> atoms_pltl \\<phi> \\<simeq> \\<tau> \\<Longrightarrow> (\\<sigma> \\<Turnstile>\\<^sub>p \\<phi>) = (\\<tau> \\<Turnstile>\\<^sub>p \\<phi>)\"\n  (is \"?sim \\<sigma> \\<phi> \\<tau> \\<Longrightarrow> ?P \\<sigma> \\<phi> \\<tau>\")", "lemma canonize_state_sim: \"canonize A s ~A~ s\"", "lemma canonize_canonical:\n  assumes st: \"s ~A~ t\"\n  shows \"canonize A s = canonize A t\"", "lemma canonize_idempotent:\n  \"canonize A (canonize A s) = canonize A s\"", "lemma canonical_suffix:\n  \"canonical_sequence A \\<sigma> \\<Longrightarrow> canonical_sequence A (\\<sigma>[k..])\"", "lemma canonical_sampled:\n  \"canonical_sequence A \\<sigma> \\<Longrightarrow> canonical_sequence A (\\<sigma> \\<circ> f)\"", "lemma canonical_reduced:\n  \"canonical_sequence A \\<sigma> \\<Longrightarrow> canonical_sequence A (\\<natural>\\<sigma>)\"", "lemma canonical_exists:\n  obtains \\<tau> where \"\\<tau> \\<simeq>A\\<simeq> \\<sigma>\" \"canonical_sequence A \\<tau>\"", "lemma characteristic_holds: \n  \"finite A \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p characteristic_formula A (\\<sigma> 0)\"", "lemma characteristic_state_sim:\n  assumes fin: \"finite A\"\n  shows \"(\\<sigma> 0 ~A~ \\<tau> 0) = (\\<tau> \\<Turnstile>\\<^sub>p characteristic_formula A (\\<sigma> (0::nat)))\"", "lemma ex_next_free_stutter_free_canonical:\n  assumes A: \"atoms_pltl \\<phi> \\<subseteq> A\" and fin: \"finite A\"\n  shows \"\\<exists>\\<psi>. next_free \\<psi> \\<and> atoms_pltl \\<psi> \\<subseteq> A \\<and>\n             (\\<forall>\\<sigma>. stutter_free \\<sigma> \\<and> canonical_sequence A \\<sigma> \\<longrightarrow> (\\<sigma> \\<Turnstile>\\<^sub>p \\<psi>) = (\\<sigma> \\<Turnstile>\\<^sub>p \\<phi>))\"\n    (is \"\\<exists>\\<psi>. ?P \\<phi> \\<psi>\")", "theorem stutter_invariant_next_free:\n  assumes phi: \"stutter_invariant \\<phi>\"\n  obtains \\<psi> where \"next_free \\<psi>\" \"atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi>\"\n                  \"\\<forall>\\<sigma>. (\\<sigma> \\<Turnstile>\\<^sub>p \\<psi>) = (\\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\"", "theorem pltl_stutter_invariant:\n  \"stutter_invariant \\<phi> \\<longleftrightarrow> \n   (\\<exists>\\<psi>. next_free \\<psi> \\<and> atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi> \\<and> (\\<forall>\\<sigma>. \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> \\<longleftrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>))\"", "lemma ltlc_next_free_iff[simp]: \"next_free (ltlc_to_pltl \\<phi>) \\<longleftrightarrow> ltlc_next_free \\<phi>\"", "theorem ltlc_next_free_stutter_invariant:\n  assumes next_free: \"ltlc_next_free \\<phi>\"\n  assumes eq: \"r \\<approx> r'\"\n  shows \"r \\<Turnstile>\\<^sub>c \\<phi> \\<longleftrightarrow> r' \\<Turnstile>\\<^sub>c \\<phi>\""], "translations": [["", "lemma fold_graph_OR: \"finite \\<Phi> \\<Longrightarrow> fold_graph Or_ltlp False_ltlp \\<Phi> (OR \\<Phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite \\<Phi> \\<Longrightarrow>\n    fold_graph Or_ltlp false\\<^sub>p \\<Phi> (OR \\<Phi>)", "unfolding OR_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite \\<Phi> \\<Longrightarrow>\n    fold_graph Or_ltlp false\\<^sub>p \\<Phi>\n     (SOME \\<phi>. fold_graph Or_ltlp false\\<^sub>p \\<Phi> \\<phi>)", "by (rule someI2_ex[OF finite_imp_fold_graph])"], ["", "lemma fold_graph_AND: \"finite \\<Phi> \\<Longrightarrow> fold_graph And_ltlp True_ltlp \\<Phi> (AND \\<Phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite \\<Phi> \\<Longrightarrow>\n    fold_graph And_ltlp true\\<^sub>p \\<Phi> (AND \\<Phi>)", "unfolding AND_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite \\<Phi> \\<Longrightarrow>\n    fold_graph And_ltlp true\\<^sub>p \\<Phi>\n     (SOME \\<phi>. fold_graph And_ltlp true\\<^sub>p \\<Phi> \\<phi>)", "by (rule someI2_ex[OF finite_imp_fold_graph])"], ["", "lemma holds_of_OR [simp]: \n  assumes fin: \"finite (\\<Phi>::'a pltl set)\"\n  shows \"(\\<sigma> \\<Turnstile>\\<^sub>p OR \\<Phi>) = (\\<exists>\\<phi>\\<in>\\<Phi>. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p OR \\<Phi> =\n    (\\<exists>\\<phi>\\<in>\\<Phi>. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p OR \\<Phi> =\n    (\\<exists>\\<phi>\\<in>\\<Phi>. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p OR \\<Phi> =\n    (\\<exists>\\<phi>\\<in>\\<Phi>. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)", "fix \\<psi>::\"'a pltl\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p OR \\<Phi> =\n    (\\<exists>\\<phi>\\<in>\\<Phi>. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)", "assume \"fold_graph Or_ltlp False_ltlp \\<Phi> \\<psi>\""], ["proof (state)\nthis:\n  fold_graph Or_ltlp false\\<^sub>p \\<Phi> \\<psi>\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p OR \\<Phi> =\n    (\\<exists>\\<phi>\\<in>\\<Phi>. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)", "hence \"(\\<sigma> \\<Turnstile>\\<^sub>p \\<psi>) = (\\<exists>\\<phi>\\<in>\\<Phi>. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\""], ["proof (prove)\nusing this:\n  fold_graph Or_ltlp false\\<^sub>p \\<Phi> \\<psi>\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n    (\\<exists>\\<phi>\\<in>\\<Phi>. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)", "by (rule fold_graph.induct) auto"], ["proof (state)\nthis:\n  \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n  (\\<exists>\\<phi>\\<in>\\<Phi>. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p OR \\<Phi> =\n    (\\<exists>\\<phi>\\<in>\\<Phi>. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)", "}"], ["proof (state)\nthis:\n  fold_graph Or_ltlp false\\<^sub>p \\<Phi> ?\\<psi>2 \\<Longrightarrow>\n  \\<sigma> \\<Turnstile>\\<^sub>p ?\\<psi>2 =\n  (\\<exists>\\<phi>\\<in>\\<Phi>. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p OR \\<Phi> =\n    (\\<exists>\\<phi>\\<in>\\<Phi>. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)", "with fold_graph_OR[OF fin]"], ["proof (chain)\npicking this:\n  fold_graph Or_ltlp false\\<^sub>p \\<Phi> (OR \\<Phi>)\n  fold_graph Or_ltlp false\\<^sub>p \\<Phi> ?\\<psi>2 \\<Longrightarrow>\n  \\<sigma> \\<Turnstile>\\<^sub>p ?\\<psi>2 =\n  (\\<exists>\\<phi>\\<in>\\<Phi>. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)", "show ?thesis"], ["proof (prove)\nusing this:\n  fold_graph Or_ltlp false\\<^sub>p \\<Phi> (OR \\<Phi>)\n  fold_graph Or_ltlp false\\<^sub>p \\<Phi> ?\\<psi>2 \\<Longrightarrow>\n  \\<sigma> \\<Turnstile>\\<^sub>p ?\\<psi>2 =\n  (\\<exists>\\<phi>\\<in>\\<Phi>. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p OR \\<Phi> =\n    (\\<exists>\\<phi>\\<in>\\<Phi>. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)", "by simp"], ["proof (state)\nthis:\n  \\<sigma> \\<Turnstile>\\<^sub>p OR \\<Phi> =\n  (\\<exists>\\<phi>\\<in>\\<Phi>. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma holds_of_AND [simp]: \n  assumes fin: \"finite (\\<Phi>::'a pltl set)\"\n  shows \"(\\<sigma> \\<Turnstile>\\<^sub>p AND \\<Phi>) = (\\<forall>\\<phi>\\<in>\\<Phi>. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p AND \\<Phi> =\n    (\\<forall>\\<phi>\\<in>\\<Phi>. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p AND \\<Phi> =\n    (\\<forall>\\<phi>\\<in>\\<Phi>. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p AND \\<Phi> =\n    (\\<forall>\\<phi>\\<in>\\<Phi>. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)", "fix \\<psi>::\"'a pltl\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p AND \\<Phi> =\n    (\\<forall>\\<phi>\\<in>\\<Phi>. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)", "assume \"fold_graph And_ltlp True_ltlp \\<Phi> \\<psi>\""], ["proof (state)\nthis:\n  fold_graph And_ltlp true\\<^sub>p \\<Phi> \\<psi>\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p AND \\<Phi> =\n    (\\<forall>\\<phi>\\<in>\\<Phi>. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)", "hence \"(\\<sigma> \\<Turnstile>\\<^sub>p \\<psi>) = (\\<forall>\\<phi>\\<in>\\<Phi>. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\""], ["proof (prove)\nusing this:\n  fold_graph And_ltlp true\\<^sub>p \\<Phi> \\<psi>\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n    (\\<forall>\\<phi>\\<in>\\<Phi>. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)", "by (rule fold_graph.induct) auto"], ["proof (state)\nthis:\n  \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n  (\\<forall>\\<phi>\\<in>\\<Phi>. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p AND \\<Phi> =\n    (\\<forall>\\<phi>\\<in>\\<Phi>. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)", "}"], ["proof (state)\nthis:\n  fold_graph And_ltlp true\\<^sub>p \\<Phi> ?\\<psi>2 \\<Longrightarrow>\n  \\<sigma> \\<Turnstile>\\<^sub>p ?\\<psi>2 =\n  (\\<forall>\\<phi>\\<in>\\<Phi>. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p AND \\<Phi> =\n    (\\<forall>\\<phi>\\<in>\\<Phi>. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)", "with fold_graph_AND[OF fin]"], ["proof (chain)\npicking this:\n  fold_graph And_ltlp true\\<^sub>p \\<Phi> (AND \\<Phi>)\n  fold_graph And_ltlp true\\<^sub>p \\<Phi> ?\\<psi>2 \\<Longrightarrow>\n  \\<sigma> \\<Turnstile>\\<^sub>p ?\\<psi>2 =\n  (\\<forall>\\<phi>\\<in>\\<Phi>. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)", "show ?thesis"], ["proof (prove)\nusing this:\n  fold_graph And_ltlp true\\<^sub>p \\<Phi> (AND \\<Phi>)\n  fold_graph And_ltlp true\\<^sub>p \\<Phi> ?\\<psi>2 \\<Longrightarrow>\n  \\<sigma> \\<Turnstile>\\<^sub>p ?\\<psi>2 =\n  (\\<forall>\\<phi>\\<in>\\<Phi>. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p AND \\<Phi> =\n    (\\<forall>\\<phi>\\<in>\\<Phi>. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)", "by simp"], ["proof (state)\nthis:\n  \\<sigma> \\<Turnstile>\\<^sub>p AND \\<Phi> =\n  (\\<forall>\\<phi>\\<in>\\<Phi>. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Next-Free PLTL Formulas\\<close>"], ["", "text \\<open>\n  A PLTL formula is called \\emph{next-free} if it does not contain any\n  subformula.\n\\<close>"], ["", "fun next_free :: \"'a pltl \\<Rightarrow> bool\"\nwhere\n  \"next_free false\\<^sub>p = True\"\n| \"next_free (atom\\<^sub>p(p)) = True\"\n| \"next_free (\\<phi> implies\\<^sub>p \\<psi>) = (next_free \\<phi> \\<and> next_free \\<psi>)\"\n| \"next_free (X\\<^sub>p \\<phi>) = False\"\n| \"next_free (\\<phi> U\\<^sub>p \\<psi>) = (next_free \\<phi> \\<and> next_free \\<psi>)\""], ["", "lemma next_free_not [simp]: \n  \"next_free (not\\<^sub>p \\<phi>) = next_free \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next_free (not\\<^sub>p \\<phi>) = next_free \\<phi>", "by (simp add: Not_ltlp_def)"], ["", "lemma next_free_true [simp]: \n  \"next_free true\\<^sub>p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next_free true\\<^sub>p", "by (simp add: True_ltlp_def)"], ["", "lemma next_free_or [simp]: \n  \"next_free (\\<phi> or\\<^sub>p \\<psi>) = (next_free \\<phi> \\<and> next_free \\<psi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next_free (\\<phi> or\\<^sub>p \\<psi>) =\n    (next_free \\<phi> \\<and> next_free \\<psi>)", "by (simp add: Or_ltlp_def)"], ["", "lemma next_free_and [simp]: \"next_free (\\<phi> and\\<^sub>p \\<psi>) = (next_free \\<phi> \\<and> next_free \\<psi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next_free (\\<phi> and\\<^sub>p \\<psi>) =\n    (next_free \\<phi> \\<and> next_free \\<psi>)", "by (simp add: And_ltlp_def)"], ["", "lemma next_free_eventually [simp]: \n  \"next_free (F\\<^sub>p \\<phi>) = next_free \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next_free (F\\<^sub>p \\<phi>) = next_free \\<phi>", "by (simp add: Eventually_ltlp_def)"], ["", "lemma next_free_always [simp]: \n  \"next_free (G\\<^sub>p \\<phi>) = next_free \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next_free (G\\<^sub>p \\<phi>) = next_free \\<phi>", "by (simp add: Always_ltlp_def)"], ["", "lemma next_free_release [simp]:\n  \"next_free (\\<phi> R\\<^sub>p \\<psi>) = (next_free \\<phi> \\<and> next_free \\<psi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next_free (\\<phi> R\\<^sub>p \\<psi>) =\n    (next_free \\<phi> \\<and> next_free \\<psi>)", "by (simp add: Release_ltlp_def)"], ["", "lemma next_free_weak_until [simp]:\n  \"next_free (\\<phi> W\\<^sub>p \\<psi>) = (next_free \\<phi> \\<and> next_free \\<psi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next_free (\\<phi> W\\<^sub>p \\<psi>) =\n    (next_free \\<phi> \\<and> next_free \\<psi>)", "by (auto simp: WeakUntil_ltlp_def)"], ["", "lemma next_free_strong_release [simp]:\n  \"next_free (\\<phi> M\\<^sub>p \\<psi>) = (next_free \\<phi> \\<and> next_free \\<psi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next_free (\\<phi> M\\<^sub>p \\<psi>) =\n    (next_free \\<phi> \\<and> next_free \\<psi>)", "by (auto simp: StrongRelease_ltlp_def)"], ["", "lemma next_free_OR [simp]: \n  assumes fin: \"finite (\\<Phi>::'a pltl set)\"\n  shows \"next_free (OR \\<Phi>) = (\\<forall>\\<phi>\\<in>\\<Phi>. next_free \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next_free (OR \\<Phi>) = (\\<forall>\\<phi>\\<in>\\<Phi>. next_free \\<phi>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. next_free (OR \\<Phi>) = (\\<forall>\\<phi>\\<in>\\<Phi>. next_free \\<phi>)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. next_free (OR \\<Phi>) = (\\<forall>\\<phi>\\<in>\\<Phi>. next_free \\<phi>)", "fix \\<psi>::\"'a pltl\""], ["proof (state)\ngoal (1 subgoal):\n 1. next_free (OR \\<Phi>) = (\\<forall>\\<phi>\\<in>\\<Phi>. next_free \\<phi>)", "assume \"fold_graph Or_ltlp False_ltlp \\<Phi> \\<psi>\""], ["proof (state)\nthis:\n  fold_graph Or_ltlp false\\<^sub>p \\<Phi> \\<psi>\n\ngoal (1 subgoal):\n 1. next_free (OR \\<Phi>) = (\\<forall>\\<phi>\\<in>\\<Phi>. next_free \\<phi>)", "hence \"next_free \\<psi> = (\\<forall>\\<phi>\\<in>\\<Phi>. next_free \\<phi>)\""], ["proof (prove)\nusing this:\n  fold_graph Or_ltlp false\\<^sub>p \\<Phi> \\<psi>\n\ngoal (1 subgoal):\n 1. next_free \\<psi> = (\\<forall>\\<phi>\\<in>\\<Phi>. next_free \\<phi>)", "by (rule fold_graph.induct) auto"], ["proof (state)\nthis:\n  next_free \\<psi> = (\\<forall>\\<phi>\\<in>\\<Phi>. next_free \\<phi>)\n\ngoal (1 subgoal):\n 1. next_free (OR \\<Phi>) = (\\<forall>\\<phi>\\<in>\\<Phi>. next_free \\<phi>)", "}"], ["proof (state)\nthis:\n  fold_graph Or_ltlp false\\<^sub>p \\<Phi> ?\\<psi>2 \\<Longrightarrow>\n  next_free ?\\<psi>2 = (\\<forall>\\<phi>\\<in>\\<Phi>. next_free \\<phi>)\n\ngoal (1 subgoal):\n 1. next_free (OR \\<Phi>) = (\\<forall>\\<phi>\\<in>\\<Phi>. next_free \\<phi>)", "with fold_graph_OR[OF fin]"], ["proof (chain)\npicking this:\n  fold_graph Or_ltlp false\\<^sub>p \\<Phi> (OR \\<Phi>)\n  fold_graph Or_ltlp false\\<^sub>p \\<Phi> ?\\<psi>2 \\<Longrightarrow>\n  next_free ?\\<psi>2 = (\\<forall>\\<phi>\\<in>\\<Phi>. next_free \\<phi>)", "show ?thesis"], ["proof (prove)\nusing this:\n  fold_graph Or_ltlp false\\<^sub>p \\<Phi> (OR \\<Phi>)\n  fold_graph Or_ltlp false\\<^sub>p \\<Phi> ?\\<psi>2 \\<Longrightarrow>\n  next_free ?\\<psi>2 = (\\<forall>\\<phi>\\<in>\\<Phi>. next_free \\<phi>)\n\ngoal (1 subgoal):\n 1. next_free (OR \\<Phi>) = (\\<forall>\\<phi>\\<in>\\<Phi>. next_free \\<phi>)", "by simp"], ["proof (state)\nthis:\n  next_free (OR \\<Phi>) = (\\<forall>\\<phi>\\<in>\\<Phi>. next_free \\<phi>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma next_free_AND [simp]: \n  assumes fin: \"finite (\\<Phi>::'a pltl set)\"\n  shows \"next_free (AND \\<Phi>) = (\\<forall>\\<phi>\\<in>\\<Phi>. next_free \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next_free (AND \\<Phi>) = (\\<forall>\\<phi>\\<in>\\<Phi>. next_free \\<phi>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. next_free (AND \\<Phi>) = (\\<forall>\\<phi>\\<in>\\<Phi>. next_free \\<phi>)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. next_free (AND \\<Phi>) = (\\<forall>\\<phi>\\<in>\\<Phi>. next_free \\<phi>)", "fix \\<psi>::\"'a pltl\""], ["proof (state)\ngoal (1 subgoal):\n 1. next_free (AND \\<Phi>) = (\\<forall>\\<phi>\\<in>\\<Phi>. next_free \\<phi>)", "assume \"fold_graph And_ltlp True_ltlp \\<Phi> \\<psi>\""], ["proof (state)\nthis:\n  fold_graph And_ltlp true\\<^sub>p \\<Phi> \\<psi>\n\ngoal (1 subgoal):\n 1. next_free (AND \\<Phi>) = (\\<forall>\\<phi>\\<in>\\<Phi>. next_free \\<phi>)", "hence \"next_free \\<psi> = (\\<forall>\\<phi>\\<in>\\<Phi>. next_free \\<phi>)\""], ["proof (prove)\nusing this:\n  fold_graph And_ltlp true\\<^sub>p \\<Phi> \\<psi>\n\ngoal (1 subgoal):\n 1. next_free \\<psi> = (\\<forall>\\<phi>\\<in>\\<Phi>. next_free \\<phi>)", "by (rule fold_graph.induct) auto"], ["proof (state)\nthis:\n  next_free \\<psi> = (\\<forall>\\<phi>\\<in>\\<Phi>. next_free \\<phi>)\n\ngoal (1 subgoal):\n 1. next_free (AND \\<Phi>) = (\\<forall>\\<phi>\\<in>\\<Phi>. next_free \\<phi>)", "}"], ["proof (state)\nthis:\n  fold_graph And_ltlp true\\<^sub>p \\<Phi> ?\\<psi>2 \\<Longrightarrow>\n  next_free ?\\<psi>2 = (\\<forall>\\<phi>\\<in>\\<Phi>. next_free \\<phi>)\n\ngoal (1 subgoal):\n 1. next_free (AND \\<Phi>) = (\\<forall>\\<phi>\\<in>\\<Phi>. next_free \\<phi>)", "with fold_graph_AND[OF fin]"], ["proof (chain)\npicking this:\n  fold_graph And_ltlp true\\<^sub>p \\<Phi> (AND \\<Phi>)\n  fold_graph And_ltlp true\\<^sub>p \\<Phi> ?\\<psi>2 \\<Longrightarrow>\n  next_free ?\\<psi>2 = (\\<forall>\\<phi>\\<in>\\<Phi>. next_free \\<phi>)", "show ?thesis"], ["proof (prove)\nusing this:\n  fold_graph And_ltlp true\\<^sub>p \\<Phi> (AND \\<Phi>)\n  fold_graph And_ltlp true\\<^sub>p \\<Phi> ?\\<psi>2 \\<Longrightarrow>\n  next_free ?\\<psi>2 = (\\<forall>\\<phi>\\<in>\\<Phi>. next_free \\<phi>)\n\ngoal (1 subgoal):\n 1. next_free (AND \\<Phi>) = (\\<forall>\\<phi>\\<in>\\<Phi>. next_free \\<phi>)", "by simp"], ["proof (state)\nthis:\n  next_free (AND \\<Phi>) = (\\<forall>\\<phi>\\<in>\\<Phi>. next_free \\<phi>)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Stuttering Invariance of PLTL Without ``Next''\\<close>"], ["", "text \\<open>\n  A PLTL formula is \\emph{stuttering invariant} if for any stuttering equivalent\n  state sequences \\<open>\\<sigma> \\<approx> \\<tau>\\<close>, the formula holds of \\<open>\\<sigma>\\<close> iff it\n  holds of \\<open>\\<tau>\\<close>.\n\\<close>"], ["", "definition stutter_invariant where\n  \"stutter_invariant \\<phi> = (\\<forall>\\<sigma> \\<tau>. (\\<sigma> \\<approx> \\<tau>) \\<longrightarrow> (\\<sigma> \\<Turnstile>\\<^sub>p \\<phi>) = (\\<tau> \\<Turnstile>\\<^sub>p \\<phi>))\""], ["", "text \\<open>\n  Since stuttering equivalence is symmetric, it is enough to show an\n  implication in the above definition instead of an equivalence.\n\\<close>"], ["", "lemma stutter_invariantI [intro!]:\n  assumes \"\\<And>\\<sigma> \\<tau>. \\<lbrakk>\\<sigma> \\<approx> \\<tau>; \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk> \\<Longrightarrow> \\<tau> \\<Turnstile>\\<^sub>p \\<phi>\"\n  shows \"stutter_invariant \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stutter_invariant \\<phi>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. stutter_invariant \\<phi>", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. stutter_invariant \\<phi>", "fix \\<sigma> \\<tau>"], ["proof (state)\ngoal (1 subgoal):\n 1. stutter_invariant \\<phi>", "assume st: \"\\<sigma> \\<approx> \\<tau>\" and f: \"\\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\""], ["proof (state)\nthis:\n  \\<sigma> \\<approx> \\<tau>\n  \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\n\ngoal (1 subgoal):\n 1. stutter_invariant \\<phi>", "hence \"\\<tau> \\<Turnstile>\\<^sub>p \\<phi>\""], ["proof (prove)\nusing this:\n  \\<sigma> \\<approx> \\<tau>\n  \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\n\ngoal (1 subgoal):\n 1. \\<tau> \\<Turnstile>\\<^sub>p \\<phi>", "by (rule assms)"], ["proof (state)\nthis:\n  \\<tau> \\<Turnstile>\\<^sub>p \\<phi>\n\ngoal (1 subgoal):\n 1. stutter_invariant \\<phi>", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?\\<sigma>2 \\<approx> ?\\<tau>2;\n   ?\\<sigma>2 \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n  \\<Longrightarrow> ?\\<tau>2 \\<Turnstile>\\<^sub>p \\<phi>\n\ngoal (1 subgoal):\n 1. stutter_invariant \\<phi>", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>?\\<sigma>2 \\<approx> ?\\<tau>2;\n   ?\\<sigma>2 \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n  \\<Longrightarrow> ?\\<tau>2 \\<Turnstile>\\<^sub>p \\<phi>\n\ngoal (1 subgoal):\n 1. stutter_invariant \\<phi>", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?\\<sigma>2 \\<approx> ?\\<tau>2;\n   ?\\<sigma>2 \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n  \\<Longrightarrow> ?\\<tau>2 \\<Turnstile>\\<^sub>p \\<phi>\n\ngoal (1 subgoal):\n 1. stutter_invariant \\<phi>", "fix \\<sigma> \\<tau>"], ["proof (state)\ngoal (1 subgoal):\n 1. stutter_invariant \\<phi>", "assume st: \"\\<sigma> \\<approx> \\<tau>\" and f: \"\\<tau> \\<Turnstile>\\<^sub>p \\<phi>\""], ["proof (state)\nthis:\n  \\<sigma> \\<approx> \\<tau>\n  \\<tau> \\<Turnstile>\\<^sub>p \\<phi>\n\ngoal (1 subgoal):\n 1. stutter_invariant \\<phi>", "from st"], ["proof (chain)\npicking this:\n  \\<sigma> \\<approx> \\<tau>", "have \"\\<tau> \\<approx> \\<sigma>\""], ["proof (prove)\nusing this:\n  \\<sigma> \\<approx> \\<tau>\n\ngoal (1 subgoal):\n 1. \\<tau> \\<approx> \\<sigma>", "by (rule stutter_equiv_sym)"], ["proof (state)\nthis:\n  \\<tau> \\<approx> \\<sigma>\n\ngoal (1 subgoal):\n 1. stutter_invariant \\<phi>", "from this f"], ["proof (chain)\npicking this:\n  \\<tau> \\<approx> \\<sigma>\n  \\<tau> \\<Turnstile>\\<^sub>p \\<phi>", "have \"\\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\""], ["proof (prove)\nusing this:\n  \\<tau> \\<approx> \\<sigma>\n  \\<tau> \\<Turnstile>\\<^sub>p \\<phi>\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>", "by (rule assms)"], ["proof (state)\nthis:\n  \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\n\ngoal (1 subgoal):\n 1. stutter_invariant \\<phi>", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?\\<sigma>2 \\<approx> ?\\<tau>2;\n   ?\\<tau>2 \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n  \\<Longrightarrow> ?\\<sigma>2 \\<Turnstile>\\<^sub>p \\<phi>\n\ngoal (1 subgoal):\n 1. stutter_invariant \\<phi>", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>?\\<sigma>2 \\<approx> ?\\<tau>2;\n   ?\\<sigma>2 \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n  \\<Longrightarrow> ?\\<tau>2 \\<Turnstile>\\<^sub>p \\<phi>\n  \\<lbrakk>?\\<sigma>2 \\<approx> ?\\<tau>2;\n   ?\\<tau>2 \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n  \\<Longrightarrow> ?\\<sigma>2 \\<Turnstile>\\<^sub>p \\<phi>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<sigma>2 \\<approx> ?\\<tau>2;\n   ?\\<sigma>2 \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n  \\<Longrightarrow> ?\\<tau>2 \\<Turnstile>\\<^sub>p \\<phi>\n  \\<lbrakk>?\\<sigma>2 \\<approx> ?\\<tau>2;\n   ?\\<tau>2 \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n  \\<Longrightarrow> ?\\<sigma>2 \\<Turnstile>\\<^sub>p \\<phi>\n\ngoal (1 subgoal):\n 1. stutter_invariant \\<phi>", "by (auto simp: stutter_invariant_def)"], ["proof (state)\nthis:\n  stutter_invariant \\<phi>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stutter_invariantD [dest]:\n  assumes \"stutter_invariant \\<phi>\" and \"\\<sigma> \\<approx> \\<tau>\"\n  shows \"(\\<sigma> \\<Turnstile>\\<^sub>p \\<phi>) = (\\<tau> \\<Turnstile>\\<^sub>p \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> =\n    \\<tau> \\<Turnstile>\\<^sub>p \\<phi>", "using assms"], ["proof (prove)\nusing this:\n  stutter_invariant \\<phi>\n  \\<sigma> \\<approx> \\<tau>\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> =\n    \\<tau> \\<Turnstile>\\<^sub>p \\<phi>", "by (auto simp: stutter_invariant_def)"], ["", "text \\<open>\n  We first show that next-free PLTL formulas are indeed stuttering invariant.\n  The proof proceeds by straightforward induction on the syntax of PLTL formulas.\n\\<close>"], ["", "theorem next_free_stutter_invariant:\n  \"next_free \\<phi> \\<Longrightarrow> stutter_invariant (\\<phi>::'a pltl)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next_free \\<phi> \\<Longrightarrow> stutter_invariant \\<phi>", "proof (induct \"\\<phi>\")"], ["proof (state)\ngoal (5 subgoals):\n 1. next_free false\\<^sub>p \\<Longrightarrow>\n    stutter_invariant false\\<^sub>p\n 2. \\<And>x.\n       next_free atom\\<^sub>p(x) \\<Longrightarrow>\n       stutter_invariant atom\\<^sub>p(x)\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>next_free \\<phi>1 \\<Longrightarrow>\n                stutter_invariant \\<phi>1;\n        next_free \\<phi>2 \\<Longrightarrow> stutter_invariant \\<phi>2;\n        next_free (\\<phi>1 implies\\<^sub>p \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (\\<phi>1 implies\\<^sub>p \\<phi>2)\n 4. \\<And>\\<phi>.\n       \\<lbrakk>next_free \\<phi> \\<Longrightarrow> stutter_invariant \\<phi>;\n        next_free (X\\<^sub>p \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (X\\<^sub>p \\<phi>)\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>next_free \\<phi>1 \\<Longrightarrow>\n                stutter_invariant \\<phi>1;\n        next_free \\<phi>2 \\<Longrightarrow> stutter_invariant \\<phi>2;\n        next_free (\\<phi>1 U\\<^sub>p \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (\\<phi>1 U\\<^sub>p \\<phi>2)", "show \"stutter_invariant false\\<^sub>p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stutter_invariant false\\<^sub>p", "by auto"], ["proof (state)\nthis:\n  stutter_invariant false\\<^sub>p\n\ngoal (4 subgoals):\n 1. \\<And>x.\n       next_free atom\\<^sub>p(x) \\<Longrightarrow>\n       stutter_invariant atom\\<^sub>p(x)\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>next_free \\<phi>1 \\<Longrightarrow>\n                stutter_invariant \\<phi>1;\n        next_free \\<phi>2 \\<Longrightarrow> stutter_invariant \\<phi>2;\n        next_free (\\<phi>1 implies\\<^sub>p \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (\\<phi>1 implies\\<^sub>p \\<phi>2)\n 3. \\<And>\\<phi>.\n       \\<lbrakk>next_free \\<phi> \\<Longrightarrow> stutter_invariant \\<phi>;\n        next_free (X\\<^sub>p \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (X\\<^sub>p \\<phi>)\n 4. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>next_free \\<phi>1 \\<Longrightarrow>\n                stutter_invariant \\<phi>1;\n        next_free \\<phi>2 \\<Longrightarrow> stutter_invariant \\<phi>2;\n        next_free (\\<phi>1 U\\<^sub>p \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (\\<phi>1 U\\<^sub>p \\<phi>2)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x.\n       next_free atom\\<^sub>p(x) \\<Longrightarrow>\n       stutter_invariant atom\\<^sub>p(x)\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>next_free \\<phi>1 \\<Longrightarrow>\n                stutter_invariant \\<phi>1;\n        next_free \\<phi>2 \\<Longrightarrow> stutter_invariant \\<phi>2;\n        next_free (\\<phi>1 implies\\<^sub>p \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (\\<phi>1 implies\\<^sub>p \\<phi>2)\n 3. \\<And>\\<phi>.\n       \\<lbrakk>next_free \\<phi> \\<Longrightarrow> stutter_invariant \\<phi>;\n        next_free (X\\<^sub>p \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (X\\<^sub>p \\<phi>)\n 4. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>next_free \\<phi>1 \\<Longrightarrow>\n                stutter_invariant \\<phi>1;\n        next_free \\<phi>2 \\<Longrightarrow> stutter_invariant \\<phi>2;\n        next_free (\\<phi>1 U\\<^sub>p \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (\\<phi>1 U\\<^sub>p \\<phi>2)", "fix p :: \"'a \\<Rightarrow> bool\""], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x.\n       next_free atom\\<^sub>p(x) \\<Longrightarrow>\n       stutter_invariant atom\\<^sub>p(x)\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>next_free \\<phi>1 \\<Longrightarrow>\n                stutter_invariant \\<phi>1;\n        next_free \\<phi>2 \\<Longrightarrow> stutter_invariant \\<phi>2;\n        next_free (\\<phi>1 implies\\<^sub>p \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (\\<phi>1 implies\\<^sub>p \\<phi>2)\n 3. \\<And>\\<phi>.\n       \\<lbrakk>next_free \\<phi> \\<Longrightarrow> stutter_invariant \\<phi>;\n        next_free (X\\<^sub>p \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (X\\<^sub>p \\<phi>)\n 4. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>next_free \\<phi>1 \\<Longrightarrow>\n                stutter_invariant \\<phi>1;\n        next_free \\<phi>2 \\<Longrightarrow> stutter_invariant \\<phi>2;\n        next_free (\\<phi>1 U\\<^sub>p \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (\\<phi>1 U\\<^sub>p \\<phi>2)", "show \"stutter_invariant (atom\\<^sub>p(p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stutter_invariant atom\\<^sub>p(p)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau>.\n       \\<lbrakk>\\<sigma> \\<approx> \\<tau>;\n        \\<sigma> \\<Turnstile>\\<^sub>p atom\\<^sub>p(p)\\<rbrakk>\n       \\<Longrightarrow> \\<tau> \\<Turnstile>\\<^sub>p atom\\<^sub>p(p)", "fix \\<sigma> \\<tau>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau>.\n       \\<lbrakk>\\<sigma> \\<approx> \\<tau>;\n        \\<sigma> \\<Turnstile>\\<^sub>p atom\\<^sub>p(p)\\<rbrakk>\n       \\<Longrightarrow> \\<tau> \\<Turnstile>\\<^sub>p atom\\<^sub>p(p)", "assume \"\\<sigma> \\<approx> \\<tau>\" \"\\<sigma> \\<Turnstile>\\<^sub>p atom\\<^sub>p(p)\""], ["proof (state)\nthis:\n  \\<sigma> \\<approx> \\<tau>\n  \\<sigma> \\<Turnstile>\\<^sub>p atom\\<^sub>p(p)\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau>.\n       \\<lbrakk>\\<sigma> \\<approx> \\<tau>;\n        \\<sigma> \\<Turnstile>\\<^sub>p atom\\<^sub>p(p)\\<rbrakk>\n       \\<Longrightarrow> \\<tau> \\<Turnstile>\\<^sub>p atom\\<^sub>p(p)", "thus \"\\<tau> \\<Turnstile>\\<^sub>p atom\\<^sub>p(p)\""], ["proof (prove)\nusing this:\n  \\<sigma> \\<approx> \\<tau>\n  \\<sigma> \\<Turnstile>\\<^sub>p atom\\<^sub>p(p)\n\ngoal (1 subgoal):\n 1. \\<tau> \\<Turnstile>\\<^sub>p atom\\<^sub>p(p)", "by (simp add: stutter_equiv_0)"], ["proof (state)\nthis:\n  \\<tau> \\<Turnstile>\\<^sub>p atom\\<^sub>p(p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  stutter_invariant atom\\<^sub>p(p)\n\ngoal (3 subgoals):\n 1. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>next_free \\<phi>1 \\<Longrightarrow>\n                stutter_invariant \\<phi>1;\n        next_free \\<phi>2 \\<Longrightarrow> stutter_invariant \\<phi>2;\n        next_free (\\<phi>1 implies\\<^sub>p \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (\\<phi>1 implies\\<^sub>p \\<phi>2)\n 2. \\<And>\\<phi>.\n       \\<lbrakk>next_free \\<phi> \\<Longrightarrow> stutter_invariant \\<phi>;\n        next_free (X\\<^sub>p \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (X\\<^sub>p \\<phi>)\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>next_free \\<phi>1 \\<Longrightarrow>\n                stutter_invariant \\<phi>1;\n        next_free \\<phi>2 \\<Longrightarrow> stutter_invariant \\<phi>2;\n        next_free (\\<phi>1 U\\<^sub>p \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (\\<phi>1 U\\<^sub>p \\<phi>2)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>next_free \\<phi>1 \\<Longrightarrow>\n                stutter_invariant \\<phi>1;\n        next_free \\<phi>2 \\<Longrightarrow> stutter_invariant \\<phi>2;\n        next_free (\\<phi>1 implies\\<^sub>p \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (\\<phi>1 implies\\<^sub>p \\<phi>2)\n 2. \\<And>\\<phi>.\n       \\<lbrakk>next_free \\<phi> \\<Longrightarrow> stutter_invariant \\<phi>;\n        next_free (X\\<^sub>p \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (X\\<^sub>p \\<phi>)\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>next_free \\<phi>1 \\<Longrightarrow>\n                stutter_invariant \\<phi>1;\n        next_free \\<phi>2 \\<Longrightarrow> stutter_invariant \\<phi>2;\n        next_free (\\<phi>1 U\\<^sub>p \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (\\<phi>1 U\\<^sub>p \\<phi>2)", "fix \\<phi> \\<psi> :: \"'a pltl\""], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>next_free \\<phi>1 \\<Longrightarrow>\n                stutter_invariant \\<phi>1;\n        next_free \\<phi>2 \\<Longrightarrow> stutter_invariant \\<phi>2;\n        next_free (\\<phi>1 implies\\<^sub>p \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (\\<phi>1 implies\\<^sub>p \\<phi>2)\n 2. \\<And>\\<phi>.\n       \\<lbrakk>next_free \\<phi> \\<Longrightarrow> stutter_invariant \\<phi>;\n        next_free (X\\<^sub>p \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (X\\<^sub>p \\<phi>)\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>next_free \\<phi>1 \\<Longrightarrow>\n                stutter_invariant \\<phi>1;\n        next_free \\<phi>2 \\<Longrightarrow> stutter_invariant \\<phi>2;\n        next_free (\\<phi>1 U\\<^sub>p \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (\\<phi>1 U\\<^sub>p \\<phi>2)", "assume ih: \"next_free \\<phi> \\<Longrightarrow> stutter_invariant \\<phi>\"\n             \"next_free \\<psi> \\<Longrightarrow> stutter_invariant \\<psi>\""], ["proof (state)\nthis:\n  next_free \\<phi> \\<Longrightarrow> stutter_invariant \\<phi>\n  next_free \\<psi> \\<Longrightarrow> stutter_invariant \\<psi>\n\ngoal (3 subgoals):\n 1. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>next_free \\<phi>1 \\<Longrightarrow>\n                stutter_invariant \\<phi>1;\n        next_free \\<phi>2 \\<Longrightarrow> stutter_invariant \\<phi>2;\n        next_free (\\<phi>1 implies\\<^sub>p \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (\\<phi>1 implies\\<^sub>p \\<phi>2)\n 2. \\<And>\\<phi>.\n       \\<lbrakk>next_free \\<phi> \\<Longrightarrow> stutter_invariant \\<phi>;\n        next_free (X\\<^sub>p \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (X\\<^sub>p \\<phi>)\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>next_free \\<phi>1 \\<Longrightarrow>\n                stutter_invariant \\<phi>1;\n        next_free \\<phi>2 \\<Longrightarrow> stutter_invariant \\<phi>2;\n        next_free (\\<phi>1 U\\<^sub>p \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (\\<phi>1 U\\<^sub>p \\<phi>2)", "assume \"next_free (\\<phi> implies\\<^sub>p \\<psi>)\""], ["proof (state)\nthis:\n  next_free (\\<phi> implies\\<^sub>p \\<psi>)\n\ngoal (3 subgoals):\n 1. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>next_free \\<phi>1 \\<Longrightarrow>\n                stutter_invariant \\<phi>1;\n        next_free \\<phi>2 \\<Longrightarrow> stutter_invariant \\<phi>2;\n        next_free (\\<phi>1 implies\\<^sub>p \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (\\<phi>1 implies\\<^sub>p \\<phi>2)\n 2. \\<And>\\<phi>.\n       \\<lbrakk>next_free \\<phi> \\<Longrightarrow> stutter_invariant \\<phi>;\n        next_free (X\\<^sub>p \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (X\\<^sub>p \\<phi>)\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>next_free \\<phi>1 \\<Longrightarrow>\n                stutter_invariant \\<phi>1;\n        next_free \\<phi>2 \\<Longrightarrow> stutter_invariant \\<phi>2;\n        next_free (\\<phi>1 U\\<^sub>p \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (\\<phi>1 U\\<^sub>p \\<phi>2)", "with ih"], ["proof (chain)\npicking this:\n  next_free \\<phi> \\<Longrightarrow> stutter_invariant \\<phi>\n  next_free \\<psi> \\<Longrightarrow> stutter_invariant \\<psi>\n  next_free (\\<phi> implies\\<^sub>p \\<psi>)", "show \"stutter_invariant (\\<phi> implies\\<^sub>p \\<psi>)\""], ["proof (prove)\nusing this:\n  next_free \\<phi> \\<Longrightarrow> stutter_invariant \\<phi>\n  next_free \\<psi> \\<Longrightarrow> stutter_invariant \\<psi>\n  next_free (\\<phi> implies\\<^sub>p \\<psi>)\n\ngoal (1 subgoal):\n 1. stutter_invariant (\\<phi> implies\\<^sub>p \\<psi>)", "by auto"], ["proof (state)\nthis:\n  stutter_invariant (\\<phi> implies\\<^sub>p \\<psi>)\n\ngoal (2 subgoals):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>next_free \\<phi> \\<Longrightarrow> stutter_invariant \\<phi>;\n        next_free (X\\<^sub>p \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (X\\<^sub>p \\<phi>)\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>next_free \\<phi>1 \\<Longrightarrow>\n                stutter_invariant \\<phi>1;\n        next_free \\<phi>2 \\<Longrightarrow> stutter_invariant \\<phi>2;\n        next_free (\\<phi>1 U\\<^sub>p \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (\\<phi>1 U\\<^sub>p \\<phi>2)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>next_free \\<phi> \\<Longrightarrow> stutter_invariant \\<phi>;\n        next_free (X\\<^sub>p \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (X\\<^sub>p \\<phi>)\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>next_free \\<phi>1 \\<Longrightarrow>\n                stutter_invariant \\<phi>1;\n        next_free \\<phi>2 \\<Longrightarrow> stutter_invariant \\<phi>2;\n        next_free (\\<phi>1 U\\<^sub>p \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (\\<phi>1 U\\<^sub>p \\<phi>2)", "fix \\<phi> :: \"'a pltl\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>next_free \\<phi> \\<Longrightarrow> stutter_invariant \\<phi>;\n        next_free (X\\<^sub>p \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (X\\<^sub>p \\<phi>)\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>next_free \\<phi>1 \\<Longrightarrow>\n                stutter_invariant \\<phi>1;\n        next_free \\<phi>2 \\<Longrightarrow> stutter_invariant \\<phi>2;\n        next_free (\\<phi>1 U\\<^sub>p \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (\\<phi>1 U\\<^sub>p \\<phi>2)", "assume \"next_free (X\\<^sub>p \\<phi>)\"  \\<comment> \\<open>hence contradiction\\<close>"], ["proof (state)\nthis:\n  next_free (X\\<^sub>p \\<phi>)\n\ngoal (2 subgoals):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>next_free \\<phi> \\<Longrightarrow> stutter_invariant \\<phi>;\n        next_free (X\\<^sub>p \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (X\\<^sub>p \\<phi>)\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>next_free \\<phi>1 \\<Longrightarrow>\n                stutter_invariant \\<phi>1;\n        next_free \\<phi>2 \\<Longrightarrow> stutter_invariant \\<phi>2;\n        next_free (\\<phi>1 U\\<^sub>p \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (\\<phi>1 U\\<^sub>p \\<phi>2)", "thus \"stutter_invariant (X\\<^sub>p \\<phi>)\""], ["proof (prove)\nusing this:\n  next_free (X\\<^sub>p \\<phi>)\n\ngoal (1 subgoal):\n 1. stutter_invariant (X\\<^sub>p \\<phi>)", "by simp"], ["proof (state)\nthis:\n  stutter_invariant (X\\<^sub>p \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>next_free \\<phi>1 \\<Longrightarrow>\n                stutter_invariant \\<phi>1;\n        next_free \\<phi>2 \\<Longrightarrow> stutter_invariant \\<phi>2;\n        next_free (\\<phi>1 U\\<^sub>p \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (\\<phi>1 U\\<^sub>p \\<phi>2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>next_free \\<phi>1 \\<Longrightarrow>\n                stutter_invariant \\<phi>1;\n        next_free \\<phi>2 \\<Longrightarrow> stutter_invariant \\<phi>2;\n        next_free (\\<phi>1 U\\<^sub>p \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (\\<phi>1 U\\<^sub>p \\<phi>2)", "fix \\<phi> \\<psi> :: \"'a pltl\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>next_free \\<phi>1 \\<Longrightarrow>\n                stutter_invariant \\<phi>1;\n        next_free \\<phi>2 \\<Longrightarrow> stutter_invariant \\<phi>2;\n        next_free (\\<phi>1 U\\<^sub>p \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (\\<phi>1 U\\<^sub>p \\<phi>2)", "assume ih: \"next_free \\<phi> \\<Longrightarrow> stutter_invariant \\<phi>\"\n             \"next_free \\<psi> \\<Longrightarrow> stutter_invariant \\<psi>\""], ["proof (state)\nthis:\n  next_free \\<phi> \\<Longrightarrow> stutter_invariant \\<phi>\n  next_free \\<psi> \\<Longrightarrow> stutter_invariant \\<psi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>next_free \\<phi>1 \\<Longrightarrow>\n                stutter_invariant \\<phi>1;\n        next_free \\<phi>2 \\<Longrightarrow> stutter_invariant \\<phi>2;\n        next_free (\\<phi>1 U\\<^sub>p \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (\\<phi>1 U\\<^sub>p \\<phi>2)", "assume \"next_free (\\<phi> U\\<^sub>p \\<psi>)\""], ["proof (state)\nthis:\n  next_free (\\<phi> U\\<^sub>p \\<psi>)\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>next_free \\<phi>1 \\<Longrightarrow>\n                stutter_invariant \\<phi>1;\n        next_free \\<phi>2 \\<Longrightarrow> stutter_invariant \\<phi>2;\n        next_free (\\<phi>1 U\\<^sub>p \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (\\<phi>1 U\\<^sub>p \\<phi>2)", "with ih"], ["proof (chain)\npicking this:\n  next_free \\<phi> \\<Longrightarrow> stutter_invariant \\<phi>\n  next_free \\<psi> \\<Longrightarrow> stutter_invariant \\<psi>\n  next_free (\\<phi> U\\<^sub>p \\<psi>)", "have stinv: \"stutter_invariant \\<phi>\" \"stutter_invariant \\<psi>\""], ["proof (prove)\nusing this:\n  next_free \\<phi> \\<Longrightarrow> stutter_invariant \\<phi>\n  next_free \\<psi> \\<Longrightarrow> stutter_invariant \\<psi>\n  next_free (\\<phi> U\\<^sub>p \\<psi>)\n\ngoal (1 subgoal):\n 1. stutter_invariant \\<phi> &&& stutter_invariant \\<psi>", "by auto"], ["proof (state)\nthis:\n  stutter_invariant \\<phi>\n  stutter_invariant \\<psi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>next_free \\<phi>1 \\<Longrightarrow>\n                stutter_invariant \\<phi>1;\n        next_free \\<phi>2 \\<Longrightarrow> stutter_invariant \\<phi>2;\n        next_free (\\<phi>1 U\\<^sub>p \\<phi>2)\\<rbrakk>\n       \\<Longrightarrow> stutter_invariant (\\<phi>1 U\\<^sub>p \\<phi>2)", "show \"stutter_invariant (\\<phi> U\\<^sub>p \\<psi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stutter_invariant (\\<phi> U\\<^sub>p \\<psi>)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau>.\n       \\<lbrakk>\\<sigma> \\<approx> \\<tau>;\n        \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>\\<rbrakk>\n       \\<Longrightarrow> \\<tau> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>", "fix \\<sigma> \\<tau>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau>.\n       \\<lbrakk>\\<sigma> \\<approx> \\<tau>;\n        \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>\\<rbrakk>\n       \\<Longrightarrow> \\<tau> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>", "assume st: \"\\<sigma> \\<approx> \\<tau>\" and unt: \"\\<sigma> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>\""], ["proof (state)\nthis:\n  \\<sigma> \\<approx> \\<tau>\n  \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau>.\n       \\<lbrakk>\\<sigma> \\<approx> \\<tau>;\n        \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>\\<rbrakk>\n       \\<Longrightarrow> \\<tau> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>", "from unt"], ["proof (chain)\npicking this:\n  \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>", "obtain m\n      where 1: \"\\<sigma>[m..] \\<Turnstile>\\<^sub>p \\<psi>\" and 2: \"\\<forall>j<m. (\\<sigma>[j..] \\<Turnstile>\\<^sub>p \\<phi>)\""], ["proof (prove)\nusing this:\n  \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>\\<sigma> [m..] \\<Turnstile>\\<^sub>p \\<psi>;\n         \\<forall>j<m. \\<sigma> [j..] \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<sigma> [m..] \\<Turnstile>\\<^sub>p \\<psi>\n  \\<forall>j<m. \\<sigma> [j..] \\<Turnstile>\\<^sub>p \\<phi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau>.\n       \\<lbrakk>\\<sigma> \\<approx> \\<tau>;\n        \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>\\<rbrakk>\n       \\<Longrightarrow> \\<tau> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>", "from st"], ["proof (chain)\npicking this:\n  \\<sigma> \\<approx> \\<tau>", "obtain n\n      where 3: \"(\\<sigma>[m..]) \\<approx> (\\<tau>[n..])\" and 4: \"\\<forall>i<n. \\<exists>j<m. (\\<sigma>[j..]) \\<approx> (\\<tau>[i..])\""], ["proof (prove)\nusing this:\n  \\<sigma> \\<approx> \\<tau>\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n         \\<forall>i<n.\n            \\<exists>j<m. \\<sigma> [j..] \\<approx> \\<tau> [i..]\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule stutter_equiv_suffixes_right)"], ["proof (state)\nthis:\n  \\<sigma> [m..] \\<approx> \\<tau> [n..]\n  \\<forall>i<n. \\<exists>j<m. \\<sigma> [j..] \\<approx> \\<tau> [i..]\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau>.\n       \\<lbrakk>\\<sigma> \\<approx> \\<tau>;\n        \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>\\<rbrakk>\n       \\<Longrightarrow> \\<tau> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>", "from 1 3 stinv"], ["proof (chain)\npicking this:\n  \\<sigma> [m..] \\<Turnstile>\\<^sub>p \\<psi>\n  \\<sigma> [m..] \\<approx> \\<tau> [n..]\n  stutter_invariant \\<phi>\n  stutter_invariant \\<psi>", "have \"\\<tau>[n..] \\<Turnstile>\\<^sub>p \\<psi>\""], ["proof (prove)\nusing this:\n  \\<sigma> [m..] \\<Turnstile>\\<^sub>p \\<psi>\n  \\<sigma> [m..] \\<approx> \\<tau> [n..]\n  stutter_invariant \\<phi>\n  stutter_invariant \\<psi>\n\ngoal (1 subgoal):\n 1. \\<tau> [n..] \\<Turnstile>\\<^sub>p \\<psi>", "by auto"], ["proof (state)\nthis:\n  \\<tau> [n..] \\<Turnstile>\\<^sub>p \\<psi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau>.\n       \\<lbrakk>\\<sigma> \\<approx> \\<tau>;\n        \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>\\<rbrakk>\n       \\<Longrightarrow> \\<tau> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>", "moreover"], ["proof (state)\nthis:\n  \\<tau> [n..] \\<Turnstile>\\<^sub>p \\<psi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau>.\n       \\<lbrakk>\\<sigma> \\<approx> \\<tau>;\n        \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>\\<rbrakk>\n       \\<Longrightarrow> \\<tau> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>", "from 2 4 stinv"], ["proof (chain)\npicking this:\n  \\<forall>j<m. \\<sigma> [j..] \\<Turnstile>\\<^sub>p \\<phi>\n  \\<forall>i<n. \\<exists>j<m. \\<sigma> [j..] \\<approx> \\<tau> [i..]\n  stutter_invariant \\<phi>\n  stutter_invariant \\<psi>", "have \"\\<forall>i<n. (\\<tau>[i..] \\<Turnstile>\\<^sub>p \\<phi>)\""], ["proof (prove)\nusing this:\n  \\<forall>j<m. \\<sigma> [j..] \\<Turnstile>\\<^sub>p \\<phi>\n  \\<forall>i<n. \\<exists>j<m. \\<sigma> [j..] \\<approx> \\<tau> [i..]\n  stutter_invariant \\<phi>\n  stutter_invariant \\<psi>\n\ngoal (1 subgoal):\n 1. \\<forall>i<n. \\<tau> [i..] \\<Turnstile>\\<^sub>p \\<phi>", "by force"], ["proof (state)\nthis:\n  \\<forall>i<n. \\<tau> [i..] \\<Turnstile>\\<^sub>p \\<phi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau>.\n       \\<lbrakk>\\<sigma> \\<approx> \\<tau>;\n        \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>\\<rbrakk>\n       \\<Longrightarrow> \\<tau> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>", "ultimately"], ["proof (chain)\npicking this:\n  \\<tau> [n..] \\<Turnstile>\\<^sub>p \\<psi>\n  \\<forall>i<n. \\<tau> [i..] \\<Turnstile>\\<^sub>p \\<phi>", "show \"\\<tau> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>\""], ["proof (prove)\nusing this:\n  \\<tau> [n..] \\<Turnstile>\\<^sub>p \\<psi>\n  \\<forall>i<n. \\<tau> [i..] \\<Turnstile>\\<^sub>p \\<phi>\n\ngoal (1 subgoal):\n 1. \\<tau> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>", "by auto"], ["proof (state)\nthis:\n  \\<tau> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  stutter_invariant (\\<phi> U\\<^sub>p \\<psi>)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Atoms, Canonical State Sequences, and Characteristic Formulas\\<close>"], ["", "text \\<open>\n  We now address the converse implication: any stutter invariant PLTL\n  formula \\<open>\\<phi>\\<close> can be equivalently expressed by a next-free formula.\n  The construction of that formula requires attention to the atomic\n  formulas that appear in \\<open>\\<phi>\\<close>. We will also prove that the\n  next-free formula does not need any new atoms beyond those present\n  in \\<open>\\<phi>\\<close>.\n\n  The following function collects the atoms (of type \\<open>'a \\<Rightarrow> bool\\<close>)\n  of a PLTL formula.\n\\<close>"], ["", "lemma atoms_pltl_OR [simp]:\n  assumes fin: \"finite (\\<Phi>::'a pltl set)\"\n  shows \"atoms_pltl (OR \\<Phi>) = (\\<Union>\\<phi>\\<in>\\<Phi>. atoms_pltl \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atoms_pltl (OR \\<Phi>) = \\<Union> (atoms_pltl ` \\<Phi>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. atoms_pltl (OR \\<Phi>) = \\<Union> (atoms_pltl ` \\<Phi>)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. atoms_pltl (OR \\<Phi>) = \\<Union> (atoms_pltl ` \\<Phi>)", "fix \\<psi>::\"'a pltl\""], ["proof (state)\ngoal (1 subgoal):\n 1. atoms_pltl (OR \\<Phi>) = \\<Union> (atoms_pltl ` \\<Phi>)", "assume \"fold_graph Or_ltlp False_ltlp \\<Phi> \\<psi>\""], ["proof (state)\nthis:\n  fold_graph Or_ltlp false\\<^sub>p \\<Phi> \\<psi>\n\ngoal (1 subgoal):\n 1. atoms_pltl (OR \\<Phi>) = \\<Union> (atoms_pltl ` \\<Phi>)", "hence \"atoms_pltl \\<psi> = (\\<Union>\\<phi>\\<in>\\<Phi>. atoms_pltl \\<phi>)\""], ["proof (prove)\nusing this:\n  fold_graph Or_ltlp false\\<^sub>p \\<Phi> \\<psi>\n\ngoal (1 subgoal):\n 1. atoms_pltl \\<psi> = \\<Union> (atoms_pltl ` \\<Phi>)", "by (rule fold_graph.induct) auto"], ["proof (state)\nthis:\n  atoms_pltl \\<psi> = \\<Union> (atoms_pltl ` \\<Phi>)\n\ngoal (1 subgoal):\n 1. atoms_pltl (OR \\<Phi>) = \\<Union> (atoms_pltl ` \\<Phi>)", "}"], ["proof (state)\nthis:\n  fold_graph Or_ltlp false\\<^sub>p \\<Phi> ?\\<psi>2 \\<Longrightarrow>\n  atoms_pltl ?\\<psi>2 = \\<Union> (atoms_pltl ` \\<Phi>)\n\ngoal (1 subgoal):\n 1. atoms_pltl (OR \\<Phi>) = \\<Union> (atoms_pltl ` \\<Phi>)", "with fold_graph_OR[OF fin]"], ["proof (chain)\npicking this:\n  fold_graph Or_ltlp false\\<^sub>p \\<Phi> (OR \\<Phi>)\n  fold_graph Or_ltlp false\\<^sub>p \\<Phi> ?\\<psi>2 \\<Longrightarrow>\n  atoms_pltl ?\\<psi>2 = \\<Union> (atoms_pltl ` \\<Phi>)", "show ?thesis"], ["proof (prove)\nusing this:\n  fold_graph Or_ltlp false\\<^sub>p \\<Phi> (OR \\<Phi>)\n  fold_graph Or_ltlp false\\<^sub>p \\<Phi> ?\\<psi>2 \\<Longrightarrow>\n  atoms_pltl ?\\<psi>2 = \\<Union> (atoms_pltl ` \\<Phi>)\n\ngoal (1 subgoal):\n 1. atoms_pltl (OR \\<Phi>) = \\<Union> (atoms_pltl ` \\<Phi>)", "by simp"], ["proof (state)\nthis:\n  atoms_pltl (OR \\<Phi>) = \\<Union> (atoms_pltl ` \\<Phi>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma atoms_pltl_AND [simp]:\n  assumes fin: \"finite (\\<Phi>::'a pltl set)\"\n  shows \"atoms_pltl (AND \\<Phi>) = (\\<Union>\\<phi>\\<in>\\<Phi>. atoms_pltl \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atoms_pltl (AND \\<Phi>) = \\<Union> (atoms_pltl ` \\<Phi>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. atoms_pltl (AND \\<Phi>) = \\<Union> (atoms_pltl ` \\<Phi>)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. atoms_pltl (AND \\<Phi>) = \\<Union> (atoms_pltl ` \\<Phi>)", "fix \\<psi>::\"'a pltl\""], ["proof (state)\ngoal (1 subgoal):\n 1. atoms_pltl (AND \\<Phi>) = \\<Union> (atoms_pltl ` \\<Phi>)", "assume \"fold_graph And_ltlp True_ltlp \\<Phi> \\<psi>\""], ["proof (state)\nthis:\n  fold_graph And_ltlp true\\<^sub>p \\<Phi> \\<psi>\n\ngoal (1 subgoal):\n 1. atoms_pltl (AND \\<Phi>) = \\<Union> (atoms_pltl ` \\<Phi>)", "hence \"atoms_pltl \\<psi> = (\\<Union>\\<phi>\\<in>\\<Phi>. atoms_pltl \\<phi>)\""], ["proof (prove)\nusing this:\n  fold_graph And_ltlp true\\<^sub>p \\<Phi> \\<psi>\n\ngoal (1 subgoal):\n 1. atoms_pltl \\<psi> = \\<Union> (atoms_pltl ` \\<Phi>)", "by (rule fold_graph.induct) auto"], ["proof (state)\nthis:\n  atoms_pltl \\<psi> = \\<Union> (atoms_pltl ` \\<Phi>)\n\ngoal (1 subgoal):\n 1. atoms_pltl (AND \\<Phi>) = \\<Union> (atoms_pltl ` \\<Phi>)", "}"], ["proof (state)\nthis:\n  fold_graph And_ltlp true\\<^sub>p \\<Phi> ?\\<psi>2 \\<Longrightarrow>\n  atoms_pltl ?\\<psi>2 = \\<Union> (atoms_pltl ` \\<Phi>)\n\ngoal (1 subgoal):\n 1. atoms_pltl (AND \\<Phi>) = \\<Union> (atoms_pltl ` \\<Phi>)", "with fold_graph_AND[OF fin]"], ["proof (chain)\npicking this:\n  fold_graph And_ltlp true\\<^sub>p \\<Phi> (AND \\<Phi>)\n  fold_graph And_ltlp true\\<^sub>p \\<Phi> ?\\<psi>2 \\<Longrightarrow>\n  atoms_pltl ?\\<psi>2 = \\<Union> (atoms_pltl ` \\<Phi>)", "show ?thesis"], ["proof (prove)\nusing this:\n  fold_graph And_ltlp true\\<^sub>p \\<Phi> (AND \\<Phi>)\n  fold_graph And_ltlp true\\<^sub>p \\<Phi> ?\\<psi>2 \\<Longrightarrow>\n  atoms_pltl ?\\<psi>2 = \\<Union> (atoms_pltl ` \\<Phi>)\n\ngoal (1 subgoal):\n 1. atoms_pltl (AND \\<Phi>) = \\<Union> (atoms_pltl ` \\<Phi>)", "by simp"], ["proof (state)\nthis:\n  atoms_pltl (AND \\<Phi>) = \\<Union> (atoms_pltl ` \\<Phi>)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Given a set of atoms \\<open>A\\<close> as above, we say that two states\n  are \\<open>A\\<close>-similar if they agree on all atoms in \\<open>A\\<close>.\n  Two state sequences \\<open>\\<sigma>\\<close> and \\<open>\\<tau>\\<close> are \\<open>A\\<close>-similar\n  if corresponding states are \\<open>A\\<close>-equal.\n\\<close>"], ["", "definition state_sim :: \"['a, ('a \\<Rightarrow> bool) set, 'a] \\<Rightarrow> bool\" \n  (\"_ ~_~ _\" [70,100,70] 50) where\n  \"s ~A~ t = (\\<forall>p\\<in>A. p s \\<longleftrightarrow> p t)\""], ["", "definition seq_sim :: \"[nat \\<Rightarrow> 'a, ('a \\<Rightarrow> bool) set, nat \\<Rightarrow> 'a] \\<Rightarrow> bool\"\n  (\"_ \\<simeq>_\\<simeq> _\" [70,100,70] 50)  where\n  \"\\<sigma> \\<simeq>A\\<simeq> \\<tau> = (\\<forall>n. (\\<sigma> n) ~A~ (\\<tau> n))\""], ["", "text \\<open>\n  These relations are (indexed) equivalence relations. Moreover\n  \\<open>s ~A~ t\\<close> implies \\<open>s ~B~ t\\<close> for \\<open>B \\<subseteq> A\\<close>,\n  and similar for \\<open>\\<sigma> \\<simeq>A\\<simeq> \\<tau>\\<close> and \\<open>\\<sigma> \\<simeq>B\\<simeq> \\<tau>\\<close>.\n\\<close>"], ["", "lemma state_sim_refl [simp]: \"s ~A~ s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s ~A~ s", "by (simp add: state_sim_def)"], ["", "lemma state_sim_sym: \"s ~A~ t \\<Longrightarrow> t ~A~ s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s ~A~ t \\<Longrightarrow> t ~A~ s", "by (auto simp: state_sim_def)"], ["", "lemma state_sim_trans[trans]: \"s ~A~ t \\<Longrightarrow> t ~A~ u \\<Longrightarrow> s ~A~ u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s ~A~ t; t ~A~ u\\<rbrakk> \\<Longrightarrow> s ~A~ u", "unfolding state_sim_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>p\\<in>A. p s = p t;\n     \\<forall>p\\<in>A. p t = p u\\<rbrakk>\n    \\<Longrightarrow> \\<forall>p\\<in>A. p s = p u", "by blast"], ["", "lemma state_sim_mono:\n  assumes \"s ~A~ t\" and \"B \\<subseteq> A\"\n  shows \"s ~B~ t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s ~B~ t", "using assms"], ["proof (prove)\nusing this:\n  s ~A~ t\n  B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. s ~B~ t", "unfolding state_sim_def"], ["proof (prove)\nusing this:\n  \\<forall>p\\<in>A. p s = p t\n  B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<forall>p\\<in>B. p s = p t", "by auto"], ["", "lemma seq_sim_refl [simp]: \"\\<sigma> \\<simeq>A\\<simeq> \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma> \\<simeq>A\\<simeq> \\<sigma>", "by (simp add: seq_sim_def)"], ["", "lemma seq_sim_sym: \"\\<sigma> \\<simeq>A\\<simeq> \\<tau> \\<Longrightarrow> \\<tau> \\<simeq>A\\<simeq> \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma> \\<simeq>A\\<simeq> \\<tau> \\<Longrightarrow>\n    \\<tau> \\<simeq>A\\<simeq> \\<sigma>", "by (auto simp: seq_sim_def state_sim_sym)"], ["", "lemma seq_sim_trans[trans]: \"\\<rho> \\<simeq>A\\<simeq> \\<sigma> \\<Longrightarrow> \\<sigma> \\<simeq>A\\<simeq> \\<tau> \\<Longrightarrow> \\<rho> \\<simeq>A\\<simeq> \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<rho> \\<simeq>A\\<simeq> \\<sigma>;\n     \\<sigma> \\<simeq>A\\<simeq> \\<tau>\\<rbrakk>\n    \\<Longrightarrow> \\<rho> \\<simeq>A\\<simeq> \\<tau>", "unfolding seq_sim_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>n. \\<rho> n ~A~ \\<sigma> n;\n     \\<forall>n. \\<sigma> n ~A~ \\<tau> n\\<rbrakk>\n    \\<Longrightarrow> \\<forall>n. \\<rho> n ~A~ \\<tau> n", "by (blast intro: state_sim_trans)"], ["", "lemma seq_sim_mono:\n  assumes \"\\<sigma> \\<simeq>A\\<simeq> \\<tau>\" and \"B \\<subseteq> A\"\n  shows \"\\<sigma> \\<simeq>B\\<simeq> \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma> \\<simeq>B\\<simeq> \\<tau>", "using assms"], ["proof (prove)\nusing this:\n  \\<sigma> \\<simeq>A\\<simeq> \\<tau>\n  B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<simeq>B\\<simeq> \\<tau>", "unfolding seq_sim_def"], ["proof (prove)\nusing this:\n  \\<forall>n. \\<sigma> n ~A~ \\<tau> n\n  B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<forall>n. \\<sigma> n ~B~ \\<tau> n", "by (blast intro: state_sim_mono)"], ["", "text \\<open>\n  State sequences that are similar w.r.t. the atoms of a PLTL formula\n  evaluate that formula to the same value.  \n\\<close>"], ["", "lemma pltl_seq_sim: \"\\<sigma> \\<simeq> atoms_pltl \\<phi> \\<simeq> \\<tau> \\<Longrightarrow> (\\<sigma> \\<Turnstile>\\<^sub>p \\<phi>) = (\\<tau> \\<Turnstile>\\<^sub>p \\<phi>)\"\n  (is \"?sim \\<sigma> \\<phi> \\<tau> \\<Longrightarrow> ?P \\<sigma> \\<phi> \\<tau>\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma> \\<simeq>atoms_pltl \\<phi>\\<simeq> \\<tau> \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> =\n    \\<tau> \\<Turnstile>\\<^sub>p \\<phi>", "proof (induct \\<phi> arbitrary: \\<sigma> \\<tau>)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>\\<sigma> \\<tau>.\n       \\<sigma> \\<simeq>atoms_pltl\n                         false\\<^sub>p\\<simeq> \\<tau> \\<Longrightarrow>\n       \\<sigma> \\<Turnstile>\\<^sub>p false\\<^sub>p =\n       \\<tau> \\<Turnstile>\\<^sub>p false\\<^sub>p\n 2. \\<And>x \\<sigma> \\<tau>.\n       \\<sigma> \\<simeq>atoms_pltl\n                         atom\\<^sub>p(x)\\<simeq> \\<tau> \\<Longrightarrow>\n       \\<sigma> \\<Turnstile>\\<^sub>p atom\\<^sub>p(x) =\n       \\<tau> \\<Turnstile>\\<^sub>p atom\\<^sub>p(x)\n 3. \\<And>\\<phi>1 \\<phi>2 \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>1\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1;\n        \\<And>\\<sigma> \\<tau>.\n           \\<sigma> \\<simeq>atoms_pltl\n                             \\<phi>2\\<simeq> \\<tau> \\<Longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2 =\n           \\<tau> \\<Turnstile>\\<^sub>p \\<phi>2;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (\\<phi>1 implies\\<^sub>p \\<phi>2)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2 =\n                         \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2\n 4. \\<And>\\<phi> \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (X\\<^sub>p \\<phi>)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n                         \\<tau> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>\n 5. \\<And>\\<phi>1 \\<phi>2 \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>1\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1;\n        \\<And>\\<sigma> \\<tau>.\n           \\<sigma> \\<simeq>atoms_pltl\n                             \\<phi>2\\<simeq> \\<tau> \\<Longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2 =\n           \\<tau> \\<Turnstile>\\<^sub>p \\<phi>2;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (\\<phi>1 U\\<^sub>p \\<phi>2)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2 =\n                         \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2", "fix \\<sigma> \\<tau>"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>\\<sigma> \\<tau>.\n       \\<sigma> \\<simeq>atoms_pltl\n                         false\\<^sub>p\\<simeq> \\<tau> \\<Longrightarrow>\n       \\<sigma> \\<Turnstile>\\<^sub>p false\\<^sub>p =\n       \\<tau> \\<Turnstile>\\<^sub>p false\\<^sub>p\n 2. \\<And>x \\<sigma> \\<tau>.\n       \\<sigma> \\<simeq>atoms_pltl\n                         atom\\<^sub>p(x)\\<simeq> \\<tau> \\<Longrightarrow>\n       \\<sigma> \\<Turnstile>\\<^sub>p atom\\<^sub>p(x) =\n       \\<tau> \\<Turnstile>\\<^sub>p atom\\<^sub>p(x)\n 3. \\<And>\\<phi>1 \\<phi>2 \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>1\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1;\n        \\<And>\\<sigma> \\<tau>.\n           \\<sigma> \\<simeq>atoms_pltl\n                             \\<phi>2\\<simeq> \\<tau> \\<Longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2 =\n           \\<tau> \\<Turnstile>\\<^sub>p \\<phi>2;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (\\<phi>1 implies\\<^sub>p \\<phi>2)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2 =\n                         \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2\n 4. \\<And>\\<phi> \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (X\\<^sub>p \\<phi>)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n                         \\<tau> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>\n 5. \\<And>\\<phi>1 \\<phi>2 \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>1\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1;\n        \\<And>\\<sigma> \\<tau>.\n           \\<sigma> \\<simeq>atoms_pltl\n                             \\<phi>2\\<simeq> \\<tau> \\<Longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2 =\n           \\<tau> \\<Turnstile>\\<^sub>p \\<phi>2;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (\\<phi>1 U\\<^sub>p \\<phi>2)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2 =\n                         \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2", "show \"?P \\<sigma> false\\<^sub>p \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p false\\<^sub>p =\n    \\<tau> \\<Turnstile>\\<^sub>p false\\<^sub>p", "by simp"], ["proof (state)\nthis:\n  \\<sigma> \\<Turnstile>\\<^sub>p false\\<^sub>p =\n  \\<tau> \\<Turnstile>\\<^sub>p false\\<^sub>p\n\ngoal (4 subgoals):\n 1. \\<And>x \\<sigma> \\<tau>.\n       \\<sigma> \\<simeq>atoms_pltl\n                         atom\\<^sub>p(x)\\<simeq> \\<tau> \\<Longrightarrow>\n       \\<sigma> \\<Turnstile>\\<^sub>p atom\\<^sub>p(x) =\n       \\<tau> \\<Turnstile>\\<^sub>p atom\\<^sub>p(x)\n 2. \\<And>\\<phi>1 \\<phi>2 \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>1\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1;\n        \\<And>\\<sigma> \\<tau>.\n           \\<sigma> \\<simeq>atoms_pltl\n                             \\<phi>2\\<simeq> \\<tau> \\<Longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2 =\n           \\<tau> \\<Turnstile>\\<^sub>p \\<phi>2;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (\\<phi>1 implies\\<^sub>p \\<phi>2)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2 =\n                         \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2\n 3. \\<And>\\<phi> \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (X\\<^sub>p \\<phi>)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n                         \\<tau> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>\n 4. \\<And>\\<phi>1 \\<phi>2 \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>1\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1;\n        \\<And>\\<sigma> \\<tau>.\n           \\<sigma> \\<simeq>atoms_pltl\n                             \\<phi>2\\<simeq> \\<tau> \\<Longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2 =\n           \\<tau> \\<Turnstile>\\<^sub>p \\<phi>2;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (\\<phi>1 U\\<^sub>p \\<phi>2)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2 =\n                         \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x \\<sigma> \\<tau>.\n       \\<sigma> \\<simeq>atoms_pltl\n                         atom\\<^sub>p(x)\\<simeq> \\<tau> \\<Longrightarrow>\n       \\<sigma> \\<Turnstile>\\<^sub>p atom\\<^sub>p(x) =\n       \\<tau> \\<Turnstile>\\<^sub>p atom\\<^sub>p(x)\n 2. \\<And>\\<phi>1 \\<phi>2 \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>1\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1;\n        \\<And>\\<sigma> \\<tau>.\n           \\<sigma> \\<simeq>atoms_pltl\n                             \\<phi>2\\<simeq> \\<tau> \\<Longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2 =\n           \\<tau> \\<Turnstile>\\<^sub>p \\<phi>2;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (\\<phi>1 implies\\<^sub>p \\<phi>2)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2 =\n                         \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2\n 3. \\<And>\\<phi> \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (X\\<^sub>p \\<phi>)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n                         \\<tau> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>\n 4. \\<And>\\<phi>1 \\<phi>2 \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>1\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1;\n        \\<And>\\<sigma> \\<tau>.\n           \\<sigma> \\<simeq>atoms_pltl\n                             \\<phi>2\\<simeq> \\<tau> \\<Longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2 =\n           \\<tau> \\<Turnstile>\\<^sub>p \\<phi>2;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (\\<phi>1 U\\<^sub>p \\<phi>2)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2 =\n                         \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2", "fix p \\<sigma> \\<tau>"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x \\<sigma> \\<tau>.\n       \\<sigma> \\<simeq>atoms_pltl\n                         atom\\<^sub>p(x)\\<simeq> \\<tau> \\<Longrightarrow>\n       \\<sigma> \\<Turnstile>\\<^sub>p atom\\<^sub>p(x) =\n       \\<tau> \\<Turnstile>\\<^sub>p atom\\<^sub>p(x)\n 2. \\<And>\\<phi>1 \\<phi>2 \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>1\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1;\n        \\<And>\\<sigma> \\<tau>.\n           \\<sigma> \\<simeq>atoms_pltl\n                             \\<phi>2\\<simeq> \\<tau> \\<Longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2 =\n           \\<tau> \\<Turnstile>\\<^sub>p \\<phi>2;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (\\<phi>1 implies\\<^sub>p \\<phi>2)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2 =\n                         \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2\n 3. \\<And>\\<phi> \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (X\\<^sub>p \\<phi>)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n                         \\<tau> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>\n 4. \\<And>\\<phi>1 \\<phi>2 \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>1\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1;\n        \\<And>\\<sigma> \\<tau>.\n           \\<sigma> \\<simeq>atoms_pltl\n                             \\<phi>2\\<simeq> \\<tau> \\<Longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2 =\n           \\<tau> \\<Turnstile>\\<^sub>p \\<phi>2;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (\\<phi>1 U\\<^sub>p \\<phi>2)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2 =\n                         \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2", "assume \"?sim \\<sigma> (atom\\<^sub>p(p)) \\<tau>\""], ["proof (state)\nthis:\n  \\<sigma> \\<simeq>atoms_pltl atom\\<^sub>p(p)\\<simeq> \\<tau>\n\ngoal (4 subgoals):\n 1. \\<And>x \\<sigma> \\<tau>.\n       \\<sigma> \\<simeq>atoms_pltl\n                         atom\\<^sub>p(x)\\<simeq> \\<tau> \\<Longrightarrow>\n       \\<sigma> \\<Turnstile>\\<^sub>p atom\\<^sub>p(x) =\n       \\<tau> \\<Turnstile>\\<^sub>p atom\\<^sub>p(x)\n 2. \\<And>\\<phi>1 \\<phi>2 \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>1\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1;\n        \\<And>\\<sigma> \\<tau>.\n           \\<sigma> \\<simeq>atoms_pltl\n                             \\<phi>2\\<simeq> \\<tau> \\<Longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2 =\n           \\<tau> \\<Turnstile>\\<^sub>p \\<phi>2;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (\\<phi>1 implies\\<^sub>p \\<phi>2)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2 =\n                         \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2\n 3. \\<And>\\<phi> \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (X\\<^sub>p \\<phi>)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n                         \\<tau> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>\n 4. \\<And>\\<phi>1 \\<phi>2 \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>1\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1;\n        \\<And>\\<sigma> \\<tau>.\n           \\<sigma> \\<simeq>atoms_pltl\n                             \\<phi>2\\<simeq> \\<tau> \\<Longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2 =\n           \\<tau> \\<Turnstile>\\<^sub>p \\<phi>2;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (\\<phi>1 U\\<^sub>p \\<phi>2)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2 =\n                         \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2", "thus \"?P \\<sigma> (atom\\<^sub>p(p)) \\<tau>\""], ["proof (prove)\nusing this:\n  \\<sigma> \\<simeq>atoms_pltl atom\\<^sub>p(p)\\<simeq> \\<tau>\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p atom\\<^sub>p(p) =\n    \\<tau> \\<Turnstile>\\<^sub>p atom\\<^sub>p(p)", "by (auto simp: seq_sim_def state_sim_def)"], ["proof (state)\nthis:\n  \\<sigma> \\<Turnstile>\\<^sub>p atom\\<^sub>p(p) =\n  \\<tau> \\<Turnstile>\\<^sub>p atom\\<^sub>p(p)\n\ngoal (3 subgoals):\n 1. \\<And>\\<phi>1 \\<phi>2 \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>1\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1;\n        \\<And>\\<sigma> \\<tau>.\n           \\<sigma> \\<simeq>atoms_pltl\n                             \\<phi>2\\<simeq> \\<tau> \\<Longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2 =\n           \\<tau> \\<Turnstile>\\<^sub>p \\<phi>2;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (\\<phi>1 implies\\<^sub>p \\<phi>2)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2 =\n                         \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2\n 2. \\<And>\\<phi> \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (X\\<^sub>p \\<phi>)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n                         \\<tau> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>\n 3. \\<And>\\<phi>1 \\<phi>2 \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>1\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1;\n        \\<And>\\<sigma> \\<tau>.\n           \\<sigma> \\<simeq>atoms_pltl\n                             \\<phi>2\\<simeq> \\<tau> \\<Longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2 =\n           \\<tau> \\<Turnstile>\\<^sub>p \\<phi>2;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (\\<phi>1 U\\<^sub>p \\<phi>2)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2 =\n                         \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<phi>1 \\<phi>2 \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>1\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1;\n        \\<And>\\<sigma> \\<tau>.\n           \\<sigma> \\<simeq>atoms_pltl\n                             \\<phi>2\\<simeq> \\<tau> \\<Longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2 =\n           \\<tau> \\<Turnstile>\\<^sub>p \\<phi>2;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (\\<phi>1 implies\\<^sub>p \\<phi>2)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2 =\n                         \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2\n 2. \\<And>\\<phi> \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (X\\<^sub>p \\<phi>)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n                         \\<tau> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>\n 3. \\<And>\\<phi>1 \\<phi>2 \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>1\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1;\n        \\<And>\\<sigma> \\<tau>.\n           \\<sigma> \\<simeq>atoms_pltl\n                             \\<phi>2\\<simeq> \\<tau> \\<Longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2 =\n           \\<tau> \\<Turnstile>\\<^sub>p \\<phi>2;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (\\<phi>1 U\\<^sub>p \\<phi>2)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2 =\n                         \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2", "fix \\<phi> \\<psi> \\<sigma> \\<tau>"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<phi>1 \\<phi>2 \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>1\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1;\n        \\<And>\\<sigma> \\<tau>.\n           \\<sigma> \\<simeq>atoms_pltl\n                             \\<phi>2\\<simeq> \\<tau> \\<Longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2 =\n           \\<tau> \\<Turnstile>\\<^sub>p \\<phi>2;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (\\<phi>1 implies\\<^sub>p \\<phi>2)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2 =\n                         \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2\n 2. \\<And>\\<phi> \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (X\\<^sub>p \\<phi>)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n                         \\<tau> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>\n 3. \\<And>\\<phi>1 \\<phi>2 \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>1\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1;\n        \\<And>\\<sigma> \\<tau>.\n           \\<sigma> \\<simeq>atoms_pltl\n                             \\<phi>2\\<simeq> \\<tau> \\<Longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2 =\n           \\<tau> \\<Turnstile>\\<^sub>p \\<phi>2;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (\\<phi>1 U\\<^sub>p \\<phi>2)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2 =\n                         \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2", "assume ih: \"\\<And>\\<sigma> \\<tau>. ?sim \\<sigma> \\<phi> \\<tau> \\<Longrightarrow> ?P \\<sigma> \\<phi> \\<tau>\" \n             \"\\<And>\\<sigma> \\<tau>. ?sim \\<sigma> \\<psi> \\<tau> \\<Longrightarrow> ?P \\<sigma> \\<psi> \\<tau>\"\n     and sim: \"?sim \\<sigma> (\\<phi> implies\\<^sub>p \\<psi>) \\<tau>\""], ["proof (state)\nthis:\n  ?\\<sigma> \\<simeq>atoms_pltl \\<phi>\\<simeq> ?\\<tau> \\<Longrightarrow>\n  ?\\<sigma> \\<Turnstile>\\<^sub>p \\<phi> =\n  ?\\<tau> \\<Turnstile>\\<^sub>p \\<phi>\n  ?\\<sigma> \\<simeq>atoms_pltl \\<psi>\\<simeq> ?\\<tau> \\<Longrightarrow>\n  ?\\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n  ?\\<tau> \\<Turnstile>\\<^sub>p \\<psi>\n  \\<sigma> \\<simeq>atoms_pltl (\\<phi> implies\\<^sub>p \\<psi>)\\<simeq> \\<tau>\n\ngoal (3 subgoals):\n 1. \\<And>\\<phi>1 \\<phi>2 \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>1\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1;\n        \\<And>\\<sigma> \\<tau>.\n           \\<sigma> \\<simeq>atoms_pltl\n                             \\<phi>2\\<simeq> \\<tau> \\<Longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2 =\n           \\<tau> \\<Turnstile>\\<^sub>p \\<phi>2;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (\\<phi>1 implies\\<^sub>p \\<phi>2)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2 =\n                         \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2\n 2. \\<And>\\<phi> \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (X\\<^sub>p \\<phi>)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n                         \\<tau> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>\n 3. \\<And>\\<phi>1 \\<phi>2 \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>1\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1;\n        \\<And>\\<sigma> \\<tau>.\n           \\<sigma> \\<simeq>atoms_pltl\n                             \\<phi>2\\<simeq> \\<tau> \\<Longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2 =\n           \\<tau> \\<Turnstile>\\<^sub>p \\<phi>2;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (\\<phi>1 U\\<^sub>p \\<phi>2)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2 =\n                         \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2", "from sim"], ["proof (chain)\npicking this:\n  \\<sigma> \\<simeq>atoms_pltl (\\<phi> implies\\<^sub>p \\<psi>)\\<simeq> \\<tau>", "have \"?sim \\<sigma> \\<phi> \\<tau>\" \"?sim \\<sigma> \\<psi> \\<tau>\""], ["proof (prove)\nusing this:\n  \\<sigma> \\<simeq>atoms_pltl (\\<phi> implies\\<^sub>p \\<psi>)\\<simeq> \\<tau>\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<simeq>atoms_pltl \\<phi>\\<simeq> \\<tau> &&&\n    \\<sigma> \\<simeq>atoms_pltl \\<psi>\\<simeq> \\<tau>", "by (auto elim: seq_sim_mono)"], ["proof (state)\nthis:\n  \\<sigma> \\<simeq>atoms_pltl \\<phi>\\<simeq> \\<tau>\n  \\<sigma> \\<simeq>atoms_pltl \\<psi>\\<simeq> \\<tau>\n\ngoal (3 subgoals):\n 1. \\<And>\\<phi>1 \\<phi>2 \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>1\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1;\n        \\<And>\\<sigma> \\<tau>.\n           \\<sigma> \\<simeq>atoms_pltl\n                             \\<phi>2\\<simeq> \\<tau> \\<Longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2 =\n           \\<tau> \\<Turnstile>\\<^sub>p \\<phi>2;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (\\<phi>1 implies\\<^sub>p \\<phi>2)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2 =\n                         \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2\n 2. \\<And>\\<phi> \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (X\\<^sub>p \\<phi>)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n                         \\<tau> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>\n 3. \\<And>\\<phi>1 \\<phi>2 \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>1\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1;\n        \\<And>\\<sigma> \\<tau>.\n           \\<sigma> \\<simeq>atoms_pltl\n                             \\<phi>2\\<simeq> \\<tau> \\<Longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2 =\n           \\<tau> \\<Turnstile>\\<^sub>p \\<phi>2;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (\\<phi>1 U\\<^sub>p \\<phi>2)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2 =\n                         \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2", "with ih"], ["proof (chain)\npicking this:\n  ?\\<sigma> \\<simeq>atoms_pltl \\<phi>\\<simeq> ?\\<tau> \\<Longrightarrow>\n  ?\\<sigma> \\<Turnstile>\\<^sub>p \\<phi> =\n  ?\\<tau> \\<Turnstile>\\<^sub>p \\<phi>\n  ?\\<sigma> \\<simeq>atoms_pltl \\<psi>\\<simeq> ?\\<tau> \\<Longrightarrow>\n  ?\\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n  ?\\<tau> \\<Turnstile>\\<^sub>p \\<psi>\n  \\<sigma> \\<simeq>atoms_pltl \\<phi>\\<simeq> \\<tau>\n  \\<sigma> \\<simeq>atoms_pltl \\<psi>\\<simeq> \\<tau>", "show \"?P \\<sigma> (\\<phi> implies\\<^sub>p \\<psi>) \\<tau>\""], ["proof (prove)\nusing this:\n  ?\\<sigma> \\<simeq>atoms_pltl \\<phi>\\<simeq> ?\\<tau> \\<Longrightarrow>\n  ?\\<sigma> \\<Turnstile>\\<^sub>p \\<phi> =\n  ?\\<tau> \\<Turnstile>\\<^sub>p \\<phi>\n  ?\\<sigma> \\<simeq>atoms_pltl \\<psi>\\<simeq> ?\\<tau> \\<Longrightarrow>\n  ?\\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n  ?\\<tau> \\<Turnstile>\\<^sub>p \\<psi>\n  \\<sigma> \\<simeq>atoms_pltl \\<phi>\\<simeq> \\<tau>\n  \\<sigma> \\<simeq>atoms_pltl \\<psi>\\<simeq> \\<tau>\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> implies\\<^sub>p \\<psi> =\n    \\<tau> \\<Turnstile>\\<^sub>p \\<phi> implies\\<^sub>p \\<psi>", "by simp"], ["proof (state)\nthis:\n  \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> implies\\<^sub>p \\<psi> =\n  \\<tau> \\<Turnstile>\\<^sub>p \\<phi> implies\\<^sub>p \\<psi>\n\ngoal (2 subgoals):\n 1. \\<And>\\<phi> \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (X\\<^sub>p \\<phi>)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n                         \\<tau> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>\n 2. \\<And>\\<phi>1 \\<phi>2 \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>1\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1;\n        \\<And>\\<sigma> \\<tau>.\n           \\<sigma> \\<simeq>atoms_pltl\n                             \\<phi>2\\<simeq> \\<tau> \\<Longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2 =\n           \\<tau> \\<Turnstile>\\<^sub>p \\<phi>2;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (\\<phi>1 U\\<^sub>p \\<phi>2)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2 =\n                         \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<phi> \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (X\\<^sub>p \\<phi>)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n                         \\<tau> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>\n 2. \\<And>\\<phi>1 \\<phi>2 \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>1\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1;\n        \\<And>\\<sigma> \\<tau>.\n           \\<sigma> \\<simeq>atoms_pltl\n                             \\<phi>2\\<simeq> \\<tau> \\<Longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2 =\n           \\<tau> \\<Turnstile>\\<^sub>p \\<phi>2;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (\\<phi>1 U\\<^sub>p \\<phi>2)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2 =\n                         \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2", "fix \\<phi> \\<sigma> \\<tau>"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<phi> \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (X\\<^sub>p \\<phi>)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n                         \\<tau> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>\n 2. \\<And>\\<phi>1 \\<phi>2 \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>1\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1;\n        \\<And>\\<sigma> \\<tau>.\n           \\<sigma> \\<simeq>atoms_pltl\n                             \\<phi>2\\<simeq> \\<tau> \\<Longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2 =\n           \\<tau> \\<Turnstile>\\<^sub>p \\<phi>2;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (\\<phi>1 U\\<^sub>p \\<phi>2)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2 =\n                         \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2", "assume ih: \"\\<And>\\<sigma> \\<tau>. ?sim \\<sigma> \\<phi> \\<tau> \\<Longrightarrow> ?P \\<sigma> \\<phi> \\<tau>\"\n     and sim: \"\\<sigma> \\<simeq> atoms_pltl (X\\<^sub>p \\<phi>) \\<simeq> \\<tau>\""], ["proof (state)\nthis:\n  ?\\<sigma> \\<simeq>atoms_pltl \\<phi>\\<simeq> ?\\<tau> \\<Longrightarrow>\n  ?\\<sigma> \\<Turnstile>\\<^sub>p \\<phi> =\n  ?\\<tau> \\<Turnstile>\\<^sub>p \\<phi>\n  \\<sigma> \\<simeq>atoms_pltl (X\\<^sub>p \\<phi>)\\<simeq> \\<tau>\n\ngoal (2 subgoals):\n 1. \\<And>\\<phi> \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (X\\<^sub>p \\<phi>)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n                         \\<tau> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>\n 2. \\<And>\\<phi>1 \\<phi>2 \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>1\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1;\n        \\<And>\\<sigma> \\<tau>.\n           \\<sigma> \\<simeq>atoms_pltl\n                             \\<phi>2\\<simeq> \\<tau> \\<Longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2 =\n           \\<tau> \\<Turnstile>\\<^sub>p \\<phi>2;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (\\<phi>1 U\\<^sub>p \\<phi>2)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2 =\n                         \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2", "from sim"], ["proof (chain)\npicking this:\n  \\<sigma> \\<simeq>atoms_pltl (X\\<^sub>p \\<phi>)\\<simeq> \\<tau>", "have \"(\\<sigma>[1..]) \\<simeq> atoms_pltl \\<phi> \\<simeq> (\\<tau>[1..])\""], ["proof (prove)\nusing this:\n  \\<sigma> \\<simeq>atoms_pltl (X\\<^sub>p \\<phi>)\\<simeq> \\<tau>\n\ngoal (1 subgoal):\n 1. \\<sigma> [1..] \\<simeq>atoms_pltl \\<phi>\\<simeq> \\<tau> [1..]", "by (auto simp: seq_sim_def)"], ["proof (state)\nthis:\n  \\<sigma> [1..] \\<simeq>atoms_pltl \\<phi>\\<simeq> \\<tau> [1..]\n\ngoal (2 subgoals):\n 1. \\<And>\\<phi> \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (X\\<^sub>p \\<phi>)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n                         \\<tau> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>\n 2. \\<And>\\<phi>1 \\<phi>2 \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>1\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1;\n        \\<And>\\<sigma> \\<tau>.\n           \\<sigma> \\<simeq>atoms_pltl\n                             \\<phi>2\\<simeq> \\<tau> \\<Longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2 =\n           \\<tau> \\<Turnstile>\\<^sub>p \\<phi>2;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (\\<phi>1 U\\<^sub>p \\<phi>2)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2 =\n                         \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2", "with ih"], ["proof (chain)\npicking this:\n  ?\\<sigma> \\<simeq>atoms_pltl \\<phi>\\<simeq> ?\\<tau> \\<Longrightarrow>\n  ?\\<sigma> \\<Turnstile>\\<^sub>p \\<phi> =\n  ?\\<tau> \\<Turnstile>\\<^sub>p \\<phi>\n  \\<sigma> [1..] \\<simeq>atoms_pltl \\<phi>\\<simeq> \\<tau> [1..]", "show \"?P \\<sigma> (X\\<^sub>p \\<phi>) \\<tau>\""], ["proof (prove)\nusing this:\n  ?\\<sigma> \\<simeq>atoms_pltl \\<phi>\\<simeq> ?\\<tau> \\<Longrightarrow>\n  ?\\<sigma> \\<Turnstile>\\<^sub>p \\<phi> =\n  ?\\<tau> \\<Turnstile>\\<^sub>p \\<phi>\n  \\<sigma> [1..] \\<simeq>atoms_pltl \\<phi>\\<simeq> \\<tau> [1..]\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<tau> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>", "by auto"], ["proof (state)\nthis:\n  \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n  \\<tau> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi>1 \\<phi>2 \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>1\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1;\n        \\<And>\\<sigma> \\<tau>.\n           \\<sigma> \\<simeq>atoms_pltl\n                             \\<phi>2\\<simeq> \\<tau> \\<Longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2 =\n           \\<tau> \\<Turnstile>\\<^sub>p \\<phi>2;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (\\<phi>1 U\\<^sub>p \\<phi>2)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2 =\n                         \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<phi>1 \\<phi>2 \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>1\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1;\n        \\<And>\\<sigma> \\<tau>.\n           \\<sigma> \\<simeq>atoms_pltl\n                             \\<phi>2\\<simeq> \\<tau> \\<Longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2 =\n           \\<tau> \\<Turnstile>\\<^sub>p \\<phi>2;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (\\<phi>1 U\\<^sub>p \\<phi>2)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2 =\n                         \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2", "fix \\<phi> \\<psi> \\<sigma> \\<tau>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<phi>1 \\<phi>2 \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>1\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1;\n        \\<And>\\<sigma> \\<tau>.\n           \\<sigma> \\<simeq>atoms_pltl\n                             \\<phi>2\\<simeq> \\<tau> \\<Longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2 =\n           \\<tau> \\<Turnstile>\\<^sub>p \\<phi>2;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (\\<phi>1 U\\<^sub>p \\<phi>2)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2 =\n                         \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2", "assume ih: \"\\<And>\\<sigma> \\<tau>. ?sim \\<sigma> \\<phi> \\<tau> \\<Longrightarrow> ?P \\<sigma> \\<phi> \\<tau>\" \n             \"\\<And>\\<sigma> \\<tau>. ?sim \\<sigma> \\<psi> \\<tau> \\<Longrightarrow> ?P \\<sigma> \\<psi> \\<tau>\"\n     and sim: \"?sim \\<sigma> (\\<phi> U\\<^sub>p \\<psi>) \\<tau>\""], ["proof (state)\nthis:\n  ?\\<sigma> \\<simeq>atoms_pltl \\<phi>\\<simeq> ?\\<tau> \\<Longrightarrow>\n  ?\\<sigma> \\<Turnstile>\\<^sub>p \\<phi> =\n  ?\\<tau> \\<Turnstile>\\<^sub>p \\<phi>\n  ?\\<sigma> \\<simeq>atoms_pltl \\<psi>\\<simeq> ?\\<tau> \\<Longrightarrow>\n  ?\\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n  ?\\<tau> \\<Turnstile>\\<^sub>p \\<psi>\n  \\<sigma> \\<simeq>atoms_pltl (\\<phi> U\\<^sub>p \\<psi>)\\<simeq> \\<tau>\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi>1 \\<phi>2 \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>1\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1;\n        \\<And>\\<sigma> \\<tau>.\n           \\<sigma> \\<simeq>atoms_pltl\n                             \\<phi>2\\<simeq> \\<tau> \\<Longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2 =\n           \\<tau> \\<Turnstile>\\<^sub>p \\<phi>2;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (\\<phi>1 U\\<^sub>p \\<phi>2)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2 =\n                         \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2", "from sim"], ["proof (chain)\npicking this:\n  \\<sigma> \\<simeq>atoms_pltl (\\<phi> U\\<^sub>p \\<psi>)\\<simeq> \\<tau>", "have \"\\<forall>i. (\\<sigma>[i..]) \\<simeq> atoms_pltl \\<phi> \\<simeq> (\\<tau>[i..])\" \"\\<forall>j. (\\<sigma>[j..]) \\<simeq> atoms_pltl \\<psi> \\<simeq> (\\<tau>[j..])\""], ["proof (prove)\nusing this:\n  \\<sigma> \\<simeq>atoms_pltl (\\<phi> U\\<^sub>p \\<psi>)\\<simeq> \\<tau>\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       \\<sigma> [i..] \\<simeq>atoms_pltl \\<phi>\\<simeq> \\<tau> [i..] &&&\n    \\<forall>j.\n       \\<sigma> [j..] \\<simeq>atoms_pltl \\<psi>\\<simeq> \\<tau> [j..]", "by (auto simp: seq_sim_def state_sim_def)"], ["proof (state)\nthis:\n  \\<forall>i. \\<sigma> [i..] \\<simeq>atoms_pltl \\<phi>\\<simeq> \\<tau> [i..]\n  \\<forall>j. \\<sigma> [j..] \\<simeq>atoms_pltl \\<psi>\\<simeq> \\<tau> [j..]\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi>1 \\<phi>2 \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>1\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1;\n        \\<And>\\<sigma> \\<tau>.\n           \\<sigma> \\<simeq>atoms_pltl\n                             \\<phi>2\\<simeq> \\<tau> \\<Longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2 =\n           \\<tau> \\<Turnstile>\\<^sub>p \\<phi>2;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (\\<phi>1 U\\<^sub>p \\<phi>2)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2 =\n                         \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2", "with ih"], ["proof (chain)\npicking this:\n  ?\\<sigma> \\<simeq>atoms_pltl \\<phi>\\<simeq> ?\\<tau> \\<Longrightarrow>\n  ?\\<sigma> \\<Turnstile>\\<^sub>p \\<phi> =\n  ?\\<tau> \\<Turnstile>\\<^sub>p \\<phi>\n  ?\\<sigma> \\<simeq>atoms_pltl \\<psi>\\<simeq> ?\\<tau> \\<Longrightarrow>\n  ?\\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n  ?\\<tau> \\<Turnstile>\\<^sub>p \\<psi>\n  \\<forall>i. \\<sigma> [i..] \\<simeq>atoms_pltl \\<phi>\\<simeq> \\<tau> [i..]\n  \\<forall>j. \\<sigma> [j..] \\<simeq>atoms_pltl \\<psi>\\<simeq> \\<tau> [j..]", "have \"\\<forall>i. ?P (\\<sigma>[i..]) \\<phi> (\\<tau>[i..])\" \"\\<forall>j. ?P (\\<sigma>[j..]) \\<psi> (\\<tau>[j..])\""], ["proof (prove)\nusing this:\n  ?\\<sigma> \\<simeq>atoms_pltl \\<phi>\\<simeq> ?\\<tau> \\<Longrightarrow>\n  ?\\<sigma> \\<Turnstile>\\<^sub>p \\<phi> =\n  ?\\<tau> \\<Turnstile>\\<^sub>p \\<phi>\n  ?\\<sigma> \\<simeq>atoms_pltl \\<psi>\\<simeq> ?\\<tau> \\<Longrightarrow>\n  ?\\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n  ?\\<tau> \\<Turnstile>\\<^sub>p \\<psi>\n  \\<forall>i. \\<sigma> [i..] \\<simeq>atoms_pltl \\<phi>\\<simeq> \\<tau> [i..]\n  \\<forall>j. \\<sigma> [j..] \\<simeq>atoms_pltl \\<psi>\\<simeq> \\<tau> [j..]\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       \\<sigma> [i..] \\<Turnstile>\\<^sub>p \\<phi> =\n       \\<tau> [i..] \\<Turnstile>\\<^sub>p \\<phi> &&&\n    \\<forall>j.\n       \\<sigma> [j..] \\<Turnstile>\\<^sub>p \\<psi> =\n       \\<tau> [j..] \\<Turnstile>\\<^sub>p \\<psi>", "by blast+"], ["proof (state)\nthis:\n  \\<forall>i.\n     \\<sigma> [i..] \\<Turnstile>\\<^sub>p \\<phi> =\n     \\<tau> [i..] \\<Turnstile>\\<^sub>p \\<phi>\n  \\<forall>j.\n     \\<sigma> [j..] \\<Turnstile>\\<^sub>p \\<psi> =\n     \\<tau> [j..] \\<Turnstile>\\<^sub>p \\<psi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi>1 \\<phi>2 \\<sigma> \\<tau>.\n       \\<lbrakk>\\<And>\\<sigma> \\<tau>.\n                   \\<sigma> \\<simeq>atoms_pltl\n                                     \\<phi>1\\<simeq> \\<tau> \\<Longrightarrow>\n                   \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 =\n                   \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1;\n        \\<And>\\<sigma> \\<tau>.\n           \\<sigma> \\<simeq>atoms_pltl\n                             \\<phi>2\\<simeq> \\<tau> \\<Longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2 =\n           \\<tau> \\<Turnstile>\\<^sub>p \\<phi>2;\n        \\<sigma> \\<simeq>atoms_pltl\n                          (\\<phi>1 U\\<^sub>p \\<phi>2)\\<simeq> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2 =\n                         \\<tau> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2", "thus \"?P \\<sigma> (\\<phi> U\\<^sub>p \\<psi>) \\<tau>\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     \\<sigma> [i..] \\<Turnstile>\\<^sub>p \\<phi> =\n     \\<tau> [i..] \\<Turnstile>\\<^sub>p \\<phi>\n  \\<forall>j.\n     \\<sigma> [j..] \\<Turnstile>\\<^sub>p \\<psi> =\n     \\<tau> [j..] \\<Turnstile>\\<^sub>p \\<psi>\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi> =\n    \\<tau> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>", "by (meson semantics_pltl.simps(5))"], ["proof (state)\nthis:\n  \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi> =\n  \\<tau> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  The following function picks an arbitrary representative among\n  \\<open>A\\<close>-similar states. Because the choice is functional,\n  any two \\<open>A\\<close>-similar states are mapped to the same state.\n\\<close>"], ["", "definition canonize where\n  \"canonize A s \\<equiv> SOME t. t ~A~ s\""], ["", "lemma canonize_state_sim: \"canonize A s ~A~ s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. canonize A s ~A~ s", "unfolding canonize_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (SOME t. t ~A~ s) ~A~ s", "by (rule someI, rule state_sim_refl)"], ["", "lemma canonize_canonical:\n  assumes st: \"s ~A~ t\"\n  shows \"canonize A s = canonize A t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. canonize A s = canonize A t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. canonize A s = canonize A t", "from st"], ["proof (chain)\npicking this:\n  s ~A~ t", "have \"\\<forall>u. (u ~A~s) = (u ~A~ t)\""], ["proof (prove)\nusing this:\n  s ~A~ t\n\ngoal (1 subgoal):\n 1. \\<forall>u. (u ~A~ s) = (u ~A~ t)", "by (auto elim: state_sim_sym state_sim_trans)"], ["proof (state)\nthis:\n  \\<forall>u. (u ~A~ s) = (u ~A~ t)\n\ngoal (1 subgoal):\n 1. canonize A s = canonize A t", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>u. (u ~A~ s) = (u ~A~ t)\n\ngoal (1 subgoal):\n 1. canonize A s = canonize A t", "unfolding canonize_def"], ["proof (prove)\nusing this:\n  \\<forall>u. (u ~A~ s) = (u ~A~ t)\n\ngoal (1 subgoal):\n 1. (SOME t. t ~A~ s) = (SOME ta. ta ~A~ t)", "by simp"], ["proof (state)\nthis:\n  canonize A s = canonize A t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma canonize_idempotent:\n  \"canonize A (canonize A s) = canonize A s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. canonize A (canonize A s) = canonize A s", "by (rule canonize_canonical[OF canonize_state_sim])"], ["", "text \\<open>\n  In a canonical state sequence, any two \\<open>A\\<close>-similar states\n  are in fact equal.\n\\<close>"], ["", "definition canonical_sequence where\n  \"canonical_sequence A \\<sigma> \\<equiv> \\<forall>m (n::nat). \\<sigma> m ~A~ \\<sigma> n \\<longrightarrow> \\<sigma> m = \\<sigma> n\""], ["", "text \\<open>\n  Every suffix of a canonical sequence is canonical, as is any\n  (sampled) subsequence, in particular any stutter-sampling.\n\\<close>"], ["", "lemma canonical_suffix:\n  \"canonical_sequence A \\<sigma> \\<Longrightarrow> canonical_sequence A (\\<sigma>[k..])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. canonical_sequence A \\<sigma> \\<Longrightarrow>\n    canonical_sequence A \\<sigma> [k..]", "by (auto simp: canonical_sequence_def)"], ["", "lemma canonical_sampled:\n  \"canonical_sequence A \\<sigma> \\<Longrightarrow> canonical_sequence A (\\<sigma> \\<circ> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. canonical_sequence A \\<sigma> \\<Longrightarrow>\n    canonical_sequence A (\\<sigma> \\<circ> f)", "by (auto simp: canonical_sequence_def)"], ["", "lemma canonical_reduced:\n  \"canonical_sequence A \\<sigma> \\<Longrightarrow> canonical_sequence A (\\<natural>\\<sigma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. canonical_sequence A \\<sigma> \\<Longrightarrow>\n    canonical_sequence A (\\<natural>\\<sigma>)", "unfolding stutter_reduced_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. canonical_sequence A \\<sigma> \\<Longrightarrow>\n    canonical_sequence A (\\<sigma> \\<circ> max_stutter_sampler \\<sigma>)", "by (rule canonical_sampled)"], ["", "text \\<open>\n  For any sequence \\<open>\\<sigma>\\<close> there exists a canonical\n  \\<open>A\\<close>-similar sequence \\<open>\\<tau>\\<close>. Such a \\<open>\\<tau>\\<close>\n  can be obtained by canonizing all states of \\<open>\\<sigma>\\<close>.\n\\<close>"], ["", "lemma canonical_exists:\n  obtains \\<tau> where \"\\<tau> \\<simeq>A\\<simeq> \\<sigma>\" \"canonical_sequence A \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<tau>.\n        \\<lbrakk>\\<tau> \\<simeq>A\\<simeq> \\<sigma>;\n         canonical_sequence A \\<tau>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>\\<tau>.\n        \\<lbrakk>\\<tau> \\<simeq>A\\<simeq> \\<sigma>;\n         canonical_sequence A \\<tau>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"(canonize A \\<circ> \\<sigma>) \\<simeq>A\\<simeq> \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (canonize A \\<circ> \\<sigma>) \\<simeq>A\\<simeq> \\<sigma>", "by (simp add: seq_sim_def canonize_state_sim)"], ["proof (state)\nthis:\n  (canonize A \\<circ> \\<sigma>) \\<simeq>A\\<simeq> \\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<tau>.\n        \\<lbrakk>\\<tau> \\<simeq>A\\<simeq> \\<sigma>;\n         canonical_sequence A \\<tau>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  (canonize A \\<circ> \\<sigma>) \\<simeq>A\\<simeq> \\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<tau>.\n        \\<lbrakk>\\<tau> \\<simeq>A\\<simeq> \\<sigma>;\n         canonical_sequence A \\<tau>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"canonical_sequence A (canonize A \\<circ> \\<sigma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. canonical_sequence A (canonize A \\<circ> \\<sigma>)", "by (auto simp: canonical_sequence_def canonize_idempotent\n             dest: canonize_canonical)"], ["proof (state)\nthis:\n  canonical_sequence A (canonize A \\<circ> \\<sigma>)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<tau>.\n        \\<lbrakk>\\<tau> \\<simeq>A\\<simeq> \\<sigma>;\n         canonical_sequence A \\<tau>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  (canonize A \\<circ> \\<sigma>) \\<simeq>A\\<simeq> \\<sigma>\n  canonical_sequence A (canonize A \\<circ> \\<sigma>)", "show ?thesis"], ["proof (prove)\nusing this:\n  (canonize A \\<circ> \\<sigma>) \\<simeq>A\\<simeq> \\<sigma>\n  canonical_sequence A (canonize A \\<circ> \\<sigma>)\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  (canonize A \\<circ> \\<sigma>) \\<simeq>A\\<simeq> \\<sigma>\n  canonical_sequence A (canonize A \\<circ> \\<sigma>)\n  \\<lbrakk>?\\<tau> \\<simeq>A\\<simeq> \\<sigma>;\n   canonical_sequence A ?\\<tau>\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Given a state \\<open>s\\<close> and a set \\<open>A\\<close> of atoms, we define\n  the characteristic formula of \\<open>s\\<close> as the conjunction of\n  all atoms in \\<open>A\\<close> that hold of \\<open>s\\<close> and the negation of\n  the atoms in \\<open>A\\<close> that do not hold of \\<open>s\\<close>.\n\\<close>"], ["", "definition characteristic_formula where\n  \"characteristic_formula A s \\<equiv>\n   ((AND { atom\\<^sub>p(p) | p . p \\<in> A \\<and> p s }) and\\<^sub>p (AND { not\\<^sub>p (atom\\<^sub>p(p)) | p . p \\<in> A \\<and> \\<not>(p s) }))\""], ["", "lemma characteristic_holds: \n  \"finite A \\<Longrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p characteristic_formula A (\\<sigma> 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p characteristic_formula A (\\<sigma> 0)", "by (auto simp: characteristic_formula_def)"], ["", "lemma characteristic_state_sim:\n  assumes fin: \"finite A\"\n  shows \"(\\<sigma> 0 ~A~ \\<tau> 0) = (\\<tau> \\<Turnstile>\\<^sub>p characteristic_formula A (\\<sigma> (0::nat)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<sigma> 0 ~A~ \\<tau> 0) =\n    \\<tau> \\<Turnstile>\\<^sub>p characteristic_formula A (\\<sigma> 0)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<sigma> 0 ~A~ \\<tau> 0 \\<Longrightarrow>\n    \\<tau> \\<Turnstile>\\<^sub>p characteristic_formula A (\\<sigma> 0)\n 2. \\<tau> \\<Turnstile>\\<^sub>p characteristic_formula A\n                                 (\\<sigma> 0) \\<Longrightarrow>\n    \\<sigma> 0 ~A~ \\<tau> 0", "assume sim: \"\\<sigma> 0 ~A~ \\<tau> 0\""], ["proof (state)\nthis:\n  \\<sigma> 0 ~A~ \\<tau> 0\n\ngoal (2 subgoals):\n 1. \\<sigma> 0 ~A~ \\<tau> 0 \\<Longrightarrow>\n    \\<tau> \\<Turnstile>\\<^sub>p characteristic_formula A (\\<sigma> 0)\n 2. \\<tau> \\<Turnstile>\\<^sub>p characteristic_formula A\n                                 (\\<sigma> 0) \\<Longrightarrow>\n    \\<sigma> 0 ~A~ \\<tau> 0", "{"], ["proof (state)\nthis:\n  \\<sigma> 0 ~A~ \\<tau> 0\n\ngoal (2 subgoals):\n 1. \\<sigma> 0 ~A~ \\<tau> 0 \\<Longrightarrow>\n    \\<tau> \\<Turnstile>\\<^sub>p characteristic_formula A (\\<sigma> 0)\n 2. \\<tau> \\<Turnstile>\\<^sub>p characteristic_formula A\n                                 (\\<sigma> 0) \\<Longrightarrow>\n    \\<sigma> 0 ~A~ \\<tau> 0", "fix p"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<sigma> 0 ~A~ \\<tau> 0 \\<Longrightarrow>\n    \\<tau> \\<Turnstile>\\<^sub>p characteristic_formula A (\\<sigma> 0)\n 2. \\<tau> \\<Turnstile>\\<^sub>p characteristic_formula A\n                                 (\\<sigma> 0) \\<Longrightarrow>\n    \\<sigma> 0 ~A~ \\<tau> 0", "assume \"p \\<in> A\""], ["proof (state)\nthis:\n  p \\<in> A\n\ngoal (2 subgoals):\n 1. \\<sigma> 0 ~A~ \\<tau> 0 \\<Longrightarrow>\n    \\<tau> \\<Turnstile>\\<^sub>p characteristic_formula A (\\<sigma> 0)\n 2. \\<tau> \\<Turnstile>\\<^sub>p characteristic_formula A\n                                 (\\<sigma> 0) \\<Longrightarrow>\n    \\<sigma> 0 ~A~ \\<tau> 0", "with sim"], ["proof (chain)\npicking this:\n  \\<sigma> 0 ~A~ \\<tau> 0\n  p \\<in> A", "have \"p (\\<tau> 0) = p (\\<sigma> 0)\""], ["proof (prove)\nusing this:\n  \\<sigma> 0 ~A~ \\<tau> 0\n  p \\<in> A\n\ngoal (1 subgoal):\n 1. p (\\<tau> 0) = p (\\<sigma> 0)", "by (auto simp: state_sim_def)"], ["proof (state)\nthis:\n  p (\\<tau> 0) = p (\\<sigma> 0)\n\ngoal (2 subgoals):\n 1. \\<sigma> 0 ~A~ \\<tau> 0 \\<Longrightarrow>\n    \\<tau> \\<Turnstile>\\<^sub>p characteristic_formula A (\\<sigma> 0)\n 2. \\<tau> \\<Turnstile>\\<^sub>p characteristic_formula A\n                                 (\\<sigma> 0) \\<Longrightarrow>\n    \\<sigma> 0 ~A~ \\<tau> 0", "}"], ["proof (state)\nthis:\n  ?p2 \\<in> A \\<Longrightarrow> ?p2 (\\<tau> 0) = ?p2 (\\<sigma> 0)\n\ngoal (2 subgoals):\n 1. \\<sigma> 0 ~A~ \\<tau> 0 \\<Longrightarrow>\n    \\<tau> \\<Turnstile>\\<^sub>p characteristic_formula A (\\<sigma> 0)\n 2. \\<tau> \\<Turnstile>\\<^sub>p characteristic_formula A\n                                 (\\<sigma> 0) \\<Longrightarrow>\n    \\<sigma> 0 ~A~ \\<tau> 0", "with fin"], ["proof (chain)\npicking this:\n  finite A\n  ?p2 \\<in> A \\<Longrightarrow> ?p2 (\\<tau> 0) = ?p2 (\\<sigma> 0)", "show \"\\<tau> \\<Turnstile>\\<^sub>p characteristic_formula A (\\<sigma> 0)\""], ["proof (prove)\nusing this:\n  finite A\n  ?p2 \\<in> A \\<Longrightarrow> ?p2 (\\<tau> 0) = ?p2 (\\<sigma> 0)\n\ngoal (1 subgoal):\n 1. \\<tau> \\<Turnstile>\\<^sub>p characteristic_formula A (\\<sigma> 0)", "by (auto simp: characteristic_formula_def) (blast+)"], ["proof (state)\nthis:\n  \\<tau> \\<Turnstile>\\<^sub>p characteristic_formula A (\\<sigma> 0)\n\ngoal (1 subgoal):\n 1. \\<tau> \\<Turnstile>\\<^sub>p characteristic_formula A\n                                 (\\<sigma> 0) \\<Longrightarrow>\n    \\<sigma> 0 ~A~ \\<tau> 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<tau> \\<Turnstile>\\<^sub>p characteristic_formula A\n                                 (\\<sigma> 0) \\<Longrightarrow>\n    \\<sigma> 0 ~A~ \\<tau> 0", "assume \"\\<tau> \\<Turnstile>\\<^sub>p characteristic_formula A (\\<sigma> 0)\""], ["proof (state)\nthis:\n  \\<tau> \\<Turnstile>\\<^sub>p characteristic_formula A (\\<sigma> 0)\n\ngoal (1 subgoal):\n 1. \\<tau> \\<Turnstile>\\<^sub>p characteristic_formula A\n                                 (\\<sigma> 0) \\<Longrightarrow>\n    \\<sigma> 0 ~A~ \\<tau> 0", "with fin"], ["proof (chain)\npicking this:\n  finite A\n  \\<tau> \\<Turnstile>\\<^sub>p characteristic_formula A (\\<sigma> 0)", "show \"\\<sigma> 0 ~A~ \\<tau> 0\""], ["proof (prove)\nusing this:\n  finite A\n  \\<tau> \\<Turnstile>\\<^sub>p characteristic_formula A (\\<sigma> 0)\n\ngoal (1 subgoal):\n 1. \\<sigma> 0 ~A~ \\<tau> 0", "by (auto simp: characteristic_formula_def state_sim_def)"], ["proof (state)\nthis:\n  \\<sigma> 0 ~A~ \\<tau> 0\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Stuttering Invariant PLTL Formulas Don't Need Next\\<close>"], ["", "text \\<open>\n  The following is the main lemma used in the proof of the\n  completeness theorem: for any PLTL formula \\<open>\\<phi>\\<close> there\n  exists a next-free formula \\<open>\\<psi>\\<close> such that the two\n  formulas evaluate to the same value over stutter-free and\n  canonical sequences (w.r.t. some \\<open>A \\<supseteq> atoms_pltl \\<phi>\\<close>).\n\\<close>"], ["", "lemma ex_next_free_stutter_free_canonical:\n  assumes A: \"atoms_pltl \\<phi> \\<subseteq> A\" and fin: \"finite A\"\n  shows \"\\<exists>\\<psi>. next_free \\<psi> \\<and> atoms_pltl \\<psi> \\<subseteq> A \\<and>\n             (\\<forall>\\<sigma>. stutter_free \\<sigma> \\<and> canonical_sequence A \\<sigma> \\<longrightarrow> (\\<sigma> \\<Turnstile>\\<^sub>p \\<psi>) = (\\<sigma> \\<Turnstile>\\<^sub>p \\<phi>))\"\n    (is \"\\<exists>\\<psi>. ?P \\<phi> \\<psi>\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<psi>.\n       next_free \\<psi> \\<and>\n       atoms_pltl \\<psi> \\<subseteq> A \\<and>\n       (\\<forall>\\<sigma>.\n           stutter_free \\<sigma> \\<and>\n           canonical_sequence A \\<sigma> \\<longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)", "using A"], ["proof (prove)\nusing this:\n  atoms_pltl \\<phi> \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<exists>\\<psi>.\n       next_free \\<psi> \\<and>\n       atoms_pltl \\<psi> \\<subseteq> A \\<and>\n       (\\<forall>\\<sigma>.\n           stutter_free \\<sigma> \\<and>\n           canonical_sequence A \\<sigma> \\<longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)", "proof (induct \\<phi>)"], ["proof (state)\ngoal (5 subgoals):\n 1. atoms_pltl false\\<^sub>p \\<subseteq> A \\<Longrightarrow>\n    \\<exists>\\<psi>.\n       next_free \\<psi> \\<and>\n       atoms_pltl \\<psi> \\<subseteq> A \\<and>\n       (\\<forall>\\<sigma>.\n           stutter_free \\<sigma> \\<and>\n           canonical_sequence A \\<sigma> \\<longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n           \\<sigma> \\<Turnstile>\\<^sub>p false\\<^sub>p)\n 2. \\<And>x.\n       atoms_pltl atom\\<^sub>p(x) \\<subseteq> A \\<Longrightarrow>\n       \\<exists>\\<psi>.\n          next_free \\<psi> \\<and>\n          atoms_pltl \\<psi> \\<subseteq> A \\<and>\n          (\\<forall>\\<sigma>.\n              stutter_free \\<sigma> \\<and>\n              canonical_sequence A \\<sigma> \\<longrightarrow>\n              \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n              \\<sigma> \\<Turnstile>\\<^sub>p atom\\<^sub>p(x))\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 implies\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2)\n 4. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 U\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2)", "txt \\<open>The cases of \\<open>false\\<close> and atomic formulas are trivial.\\<close>"], ["proof (state)\ngoal (5 subgoals):\n 1. atoms_pltl false\\<^sub>p \\<subseteq> A \\<Longrightarrow>\n    \\<exists>\\<psi>.\n       next_free \\<psi> \\<and>\n       atoms_pltl \\<psi> \\<subseteq> A \\<and>\n       (\\<forall>\\<sigma>.\n           stutter_free \\<sigma> \\<and>\n           canonical_sequence A \\<sigma> \\<longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n           \\<sigma> \\<Turnstile>\\<^sub>p false\\<^sub>p)\n 2. \\<And>x.\n       atoms_pltl atom\\<^sub>p(x) \\<subseteq> A \\<Longrightarrow>\n       \\<exists>\\<psi>.\n          next_free \\<psi> \\<and>\n          atoms_pltl \\<psi> \\<subseteq> A \\<and>\n          (\\<forall>\\<sigma>.\n              stutter_free \\<sigma> \\<and>\n              canonical_sequence A \\<sigma> \\<longrightarrow>\n              \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n              \\<sigma> \\<Turnstile>\\<^sub>p atom\\<^sub>p(x))\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 implies\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2)\n 4. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 U\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2)", "have \"?P false\\<^sub>p false\\<^sub>p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next_free false\\<^sub>p \\<and>\n    atoms_pltl false\\<^sub>p \\<subseteq> A \\<and>\n    (\\<forall>\\<sigma>.\n        stutter_free \\<sigma> \\<and>\n        canonical_sequence A \\<sigma> \\<longrightarrow>\n        \\<sigma> \\<Turnstile>\\<^sub>p false\\<^sub>p =\n        \\<sigma> \\<Turnstile>\\<^sub>p false\\<^sub>p)", "by auto"], ["proof (state)\nthis:\n  next_free false\\<^sub>p \\<and>\n  atoms_pltl false\\<^sub>p \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p false\\<^sub>p =\n      \\<sigma> \\<Turnstile>\\<^sub>p false\\<^sub>p)\n\ngoal (5 subgoals):\n 1. atoms_pltl false\\<^sub>p \\<subseteq> A \\<Longrightarrow>\n    \\<exists>\\<psi>.\n       next_free \\<psi> \\<and>\n       atoms_pltl \\<psi> \\<subseteq> A \\<and>\n       (\\<forall>\\<sigma>.\n           stutter_free \\<sigma> \\<and>\n           canonical_sequence A \\<sigma> \\<longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n           \\<sigma> \\<Turnstile>\\<^sub>p false\\<^sub>p)\n 2. \\<And>x.\n       atoms_pltl atom\\<^sub>p(x) \\<subseteq> A \\<Longrightarrow>\n       \\<exists>\\<psi>.\n          next_free \\<psi> \\<and>\n          atoms_pltl \\<psi> \\<subseteq> A \\<and>\n          (\\<forall>\\<sigma>.\n              stutter_free \\<sigma> \\<and>\n              canonical_sequence A \\<sigma> \\<longrightarrow>\n              \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n              \\<sigma> \\<Turnstile>\\<^sub>p atom\\<^sub>p(x))\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 implies\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2)\n 4. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 U\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2)", "thus \"\\<exists>\\<psi>. ?P false\\<^sub>p \\<psi>\""], ["proof (prove)\nusing this:\n  next_free false\\<^sub>p \\<and>\n  atoms_pltl false\\<^sub>p \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p false\\<^sub>p =\n      \\<sigma> \\<Turnstile>\\<^sub>p false\\<^sub>p)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<psi>.\n       next_free \\<psi> \\<and>\n       atoms_pltl \\<psi> \\<subseteq> A \\<and>\n       (\\<forall>\\<sigma>.\n           stutter_free \\<sigma> \\<and>\n           canonical_sequence A \\<sigma> \\<longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n           \\<sigma> \\<Turnstile>\\<^sub>p false\\<^sub>p)", ".."], ["proof (state)\nthis:\n  \\<exists>\\<psi>.\n     next_free \\<psi> \\<and>\n     atoms_pltl \\<psi> \\<subseteq> A \\<and>\n     (\\<forall>\\<sigma>.\n         stutter_free \\<sigma> \\<and>\n         canonical_sequence A \\<sigma> \\<longrightarrow>\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n         \\<sigma> \\<Turnstile>\\<^sub>p false\\<^sub>p)\n\ngoal (4 subgoals):\n 1. \\<And>x.\n       atoms_pltl atom\\<^sub>p(x) \\<subseteq> A \\<Longrightarrow>\n       \\<exists>\\<psi>.\n          next_free \\<psi> \\<and>\n          atoms_pltl \\<psi> \\<subseteq> A \\<and>\n          (\\<forall>\\<sigma>.\n              stutter_free \\<sigma> \\<and>\n              canonical_sequence A \\<sigma> \\<longrightarrow>\n              \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n              \\<sigma> \\<Turnstile>\\<^sub>p atom\\<^sub>p(x))\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 implies\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2)\n 3. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)\n 4. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 U\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x.\n       atoms_pltl atom\\<^sub>p(x) \\<subseteq> A \\<Longrightarrow>\n       \\<exists>\\<psi>.\n          next_free \\<psi> \\<and>\n          atoms_pltl \\<psi> \\<subseteq> A \\<and>\n          (\\<forall>\\<sigma>.\n              stutter_free \\<sigma> \\<and>\n              canonical_sequence A \\<sigma> \\<longrightarrow>\n              \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n              \\<sigma> \\<Turnstile>\\<^sub>p atom\\<^sub>p(x))\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 implies\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2)\n 3. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)\n 4. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 U\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2)", "fix p"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x.\n       atoms_pltl atom\\<^sub>p(x) \\<subseteq> A \\<Longrightarrow>\n       \\<exists>\\<psi>.\n          next_free \\<psi> \\<and>\n          atoms_pltl \\<psi> \\<subseteq> A \\<and>\n          (\\<forall>\\<sigma>.\n              stutter_free \\<sigma> \\<and>\n              canonical_sequence A \\<sigma> \\<longrightarrow>\n              \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n              \\<sigma> \\<Turnstile>\\<^sub>p atom\\<^sub>p(x))\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 implies\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2)\n 3. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)\n 4. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 U\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2)", "assume \"atoms_pltl (atom\\<^sub>p(p)) \\<subseteq> A\""], ["proof (state)\nthis:\n  atoms_pltl atom\\<^sub>p(p) \\<subseteq> A\n\ngoal (4 subgoals):\n 1. \\<And>x.\n       atoms_pltl atom\\<^sub>p(x) \\<subseteq> A \\<Longrightarrow>\n       \\<exists>\\<psi>.\n          next_free \\<psi> \\<and>\n          atoms_pltl \\<psi> \\<subseteq> A \\<and>\n          (\\<forall>\\<sigma>.\n              stutter_free \\<sigma> \\<and>\n              canonical_sequence A \\<sigma> \\<longrightarrow>\n              \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n              \\<sigma> \\<Turnstile>\\<^sub>p atom\\<^sub>p(x))\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 implies\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2)\n 3. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)\n 4. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 U\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2)", "hence \"?P (atom\\<^sub>p(p)) (atom\\<^sub>p(p))\""], ["proof (prove)\nusing this:\n  atoms_pltl atom\\<^sub>p(p) \\<subseteq> A\n\ngoal (1 subgoal):\n 1. next_free atom\\<^sub>p(p) \\<and>\n    atoms_pltl atom\\<^sub>p(p) \\<subseteq> A \\<and>\n    (\\<forall>\\<sigma>.\n        stutter_free \\<sigma> \\<and>\n        canonical_sequence A \\<sigma> \\<longrightarrow>\n        \\<sigma> \\<Turnstile>\\<^sub>p atom\\<^sub>p(p) =\n        \\<sigma> \\<Turnstile>\\<^sub>p atom\\<^sub>p(p))", "by auto"], ["proof (state)\nthis:\n  next_free atom\\<^sub>p(p) \\<and>\n  atoms_pltl atom\\<^sub>p(p) \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p atom\\<^sub>p(p) =\n      \\<sigma> \\<Turnstile>\\<^sub>p atom\\<^sub>p(p))\n\ngoal (4 subgoals):\n 1. \\<And>x.\n       atoms_pltl atom\\<^sub>p(x) \\<subseteq> A \\<Longrightarrow>\n       \\<exists>\\<psi>.\n          next_free \\<psi> \\<and>\n          atoms_pltl \\<psi> \\<subseteq> A \\<and>\n          (\\<forall>\\<sigma>.\n              stutter_free \\<sigma> \\<and>\n              canonical_sequence A \\<sigma> \\<longrightarrow>\n              \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n              \\<sigma> \\<Turnstile>\\<^sub>p atom\\<^sub>p(x))\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 implies\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2)\n 3. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)\n 4. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 U\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2)", "thus \"\\<exists>\\<psi>. ?P (atom\\<^sub>p(p)) \\<psi>\""], ["proof (prove)\nusing this:\n  next_free atom\\<^sub>p(p) \\<and>\n  atoms_pltl atom\\<^sub>p(p) \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p atom\\<^sub>p(p) =\n      \\<sigma> \\<Turnstile>\\<^sub>p atom\\<^sub>p(p))\n\ngoal (1 subgoal):\n 1. \\<exists>\\<psi>.\n       next_free \\<psi> \\<and>\n       atoms_pltl \\<psi> \\<subseteq> A \\<and>\n       (\\<forall>\\<sigma>.\n           stutter_free \\<sigma> \\<and>\n           canonical_sequence A \\<sigma> \\<longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n           \\<sigma> \\<Turnstile>\\<^sub>p atom\\<^sub>p(p))", ".."], ["proof (state)\nthis:\n  \\<exists>\\<psi>.\n     next_free \\<psi> \\<and>\n     atoms_pltl \\<psi> \\<subseteq> A \\<and>\n     (\\<forall>\\<sigma>.\n         stutter_free \\<sigma> \\<and>\n         canonical_sequence A \\<sigma> \\<longrightarrow>\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n         \\<sigma> \\<Turnstile>\\<^sub>p atom\\<^sub>p(p))\n\ngoal (3 subgoals):\n 1. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 implies\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2)\n 2. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 U\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 implies\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2)\n 2. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 U\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2)", "txt \\<open>Implication is easy, using the induction hypothesis.\\<close>"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 implies\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2)\n 2. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 U\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2)", "fix \\<phi> \\<psi>"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 implies\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2)\n 2. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 U\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2)", "assume \"atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow> \\<exists>\\<phi>'. ?P \\<phi> \\<phi>'\"\n     and \"atoms_pltl \\<psi> \\<subseteq> A \\<Longrightarrow> \\<exists>\\<psi>'. ?P \\<psi> \\<psi>'\"\n     and \"atoms_pltl (\\<phi> implies\\<^sub>p \\<psi>) \\<subseteq> A\""], ["proof (state)\nthis:\n  atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n  \\<exists>\\<phi>''.\n     next_free \\<phi>'' \\<and>\n     atoms_pltl \\<phi>'' \\<subseteq> A \\<and>\n     (\\<forall>\\<sigma>.\n         stutter_free \\<sigma> \\<and>\n         canonical_sequence A \\<sigma> \\<longrightarrow>\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>'' =\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n  atoms_pltl \\<psi> \\<subseteq> A \\<Longrightarrow>\n  \\<exists>\\<psi>'.\n     next_free \\<psi>' \\<and>\n     atoms_pltl \\<psi>' \\<subseteq> A \\<and>\n     (\\<forall>\\<sigma>.\n         stutter_free \\<sigma> \\<and>\n         canonical_sequence A \\<sigma> \\<longrightarrow>\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>' =\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>)\n  atoms_pltl (\\<phi> implies\\<^sub>p \\<psi>) \\<subseteq> A\n\ngoal (3 subgoals):\n 1. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 implies\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2)\n 2. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 U\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2)", "then"], ["proof (chain)\npicking this:\n  atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n  \\<exists>\\<phi>''.\n     next_free \\<phi>'' \\<and>\n     atoms_pltl \\<phi>'' \\<subseteq> A \\<and>\n     (\\<forall>\\<sigma>.\n         stutter_free \\<sigma> \\<and>\n         canonical_sequence A \\<sigma> \\<longrightarrow>\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>'' =\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n  atoms_pltl \\<psi> \\<subseteq> A \\<Longrightarrow>\n  \\<exists>\\<psi>'.\n     next_free \\<psi>' \\<and>\n     atoms_pltl \\<psi>' \\<subseteq> A \\<and>\n     (\\<forall>\\<sigma>.\n         stutter_free \\<sigma> \\<and>\n         canonical_sequence A \\<sigma> \\<longrightarrow>\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>' =\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>)\n  atoms_pltl (\\<phi> implies\\<^sub>p \\<psi>) \\<subseteq> A", "obtain \\<phi>' \\<psi>' where \"?P \\<phi> \\<phi>'\" \"?P \\<psi> \\<psi>'\""], ["proof (prove)\nusing this:\n  atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n  \\<exists>\\<phi>''.\n     next_free \\<phi>'' \\<and>\n     atoms_pltl \\<phi>'' \\<subseteq> A \\<and>\n     (\\<forall>\\<sigma>.\n         stutter_free \\<sigma> \\<and>\n         canonical_sequence A \\<sigma> \\<longrightarrow>\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>'' =\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n  atoms_pltl \\<psi> \\<subseteq> A \\<Longrightarrow>\n  \\<exists>\\<psi>'.\n     next_free \\<psi>' \\<and>\n     atoms_pltl \\<psi>' \\<subseteq> A \\<and>\n     (\\<forall>\\<sigma>.\n         stutter_free \\<sigma> \\<and>\n         canonical_sequence A \\<sigma> \\<longrightarrow>\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>' =\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>)\n  atoms_pltl (\\<phi> implies\\<^sub>p \\<psi>) \\<subseteq> A\n\ngoal (1 subgoal):\n 1. (\\<And>\\<phi>'' \\<psi>'.\n        \\<lbrakk>next_free \\<phi>'' \\<and>\n                 atoms_pltl \\<phi>'' \\<subseteq> A \\<and>\n                 (\\<forall>\\<sigma>.\n                     stutter_free \\<sigma> \\<and>\n                     canonical_sequence A \\<sigma> \\<longrightarrow>\n                     \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>'' =\n                     \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n         next_free \\<psi>' \\<and>\n         atoms_pltl \\<psi>' \\<subseteq> A \\<and>\n         (\\<forall>\\<sigma>.\n             stutter_free \\<sigma> \\<and>\n             canonical_sequence A \\<sigma> \\<longrightarrow>\n             \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>' =\n             \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  next_free \\<phi>' \\<and>\n  atoms_pltl \\<phi>' \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>' =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n  next_free \\<psi>' \\<and>\n  atoms_pltl \\<psi>' \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>' =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>)\n\ngoal (3 subgoals):\n 1. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 implies\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2)\n 2. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 U\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2)", "hence \"?P (\\<phi> implies\\<^sub>p \\<psi>) (\\<phi>' implies\\<^sub>p \\<psi>')\""], ["proof (prove)\nusing this:\n  next_free \\<phi>' \\<and>\n  atoms_pltl \\<phi>' \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>' =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n  next_free \\<psi>' \\<and>\n  atoms_pltl \\<psi>' \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>' =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>)\n\ngoal (1 subgoal):\n 1. next_free (\\<phi>' implies\\<^sub>p \\<psi>') \\<and>\n    atoms_pltl (\\<phi>' implies\\<^sub>p \\<psi>') \\<subseteq> A \\<and>\n    (\\<forall>\\<sigma>.\n        stutter_free \\<sigma> \\<and>\n        canonical_sequence A \\<sigma> \\<longrightarrow>\n        \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>' implies\\<^sub>p \\<psi>' =\n        \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> implies\\<^sub>p \\<psi>)", "by auto"], ["proof (state)\nthis:\n  next_free (\\<phi>' implies\\<^sub>p \\<psi>') \\<and>\n  atoms_pltl (\\<phi>' implies\\<^sub>p \\<psi>') \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>' implies\\<^sub>p \\<psi>' =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> implies\\<^sub>p \\<psi>)\n\ngoal (3 subgoals):\n 1. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 implies\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 implies\\<^sub>p \\<phi>2)\n 2. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)\n 3. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 U\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2)", "thus \"\\<exists>\\<chi>. ?P (\\<phi> implies\\<^sub>p \\<psi>) \\<chi>\""], ["proof (prove)\nusing this:\n  next_free (\\<phi>' implies\\<^sub>p \\<psi>') \\<and>\n  atoms_pltl (\\<phi>' implies\\<^sub>p \\<psi>') \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>' implies\\<^sub>p \\<psi>' =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> implies\\<^sub>p \\<psi>)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<chi>.\n       next_free \\<chi> \\<and>\n       atoms_pltl \\<chi> \\<subseteq> A \\<and>\n       (\\<forall>\\<sigma>.\n           stutter_free \\<sigma> \\<and>\n           canonical_sequence A \\<sigma> \\<longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<chi> =\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> implies\\<^sub>p \\<psi>)", ".."], ["proof (state)\nthis:\n  \\<exists>\\<chi>.\n     next_free \\<chi> \\<and>\n     atoms_pltl \\<chi> \\<subseteq> A \\<and>\n     (\\<forall>\\<sigma>.\n         stutter_free \\<sigma> \\<and>\n         canonical_sequence A \\<sigma> \\<longrightarrow>\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<chi> =\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> implies\\<^sub>p \\<psi>)\n\ngoal (2 subgoals):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 U\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 U\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2)", "txt \\<open>The case of \\<open>until\\<close> follows similarly.\\<close>"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 U\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2)", "fix \\<phi> \\<psi>"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 U\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2)", "assume \"atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow> \\<exists>\\<phi>'. ?P \\<phi> \\<phi>'\"\n     and \"atoms_pltl \\<psi> \\<subseteq> A \\<Longrightarrow> \\<exists>\\<psi>'. ?P \\<psi> \\<psi>'\"\n     and \"atoms_pltl (\\<phi> U\\<^sub>p \\<psi>) \\<subseteq> A\""], ["proof (state)\nthis:\n  atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n  \\<exists>\\<phi>''.\n     next_free \\<phi>'' \\<and>\n     atoms_pltl \\<phi>'' \\<subseteq> A \\<and>\n     (\\<forall>\\<sigma>.\n         stutter_free \\<sigma> \\<and>\n         canonical_sequence A \\<sigma> \\<longrightarrow>\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>'' =\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n  atoms_pltl \\<psi> \\<subseteq> A \\<Longrightarrow>\n  \\<exists>\\<psi>'.\n     next_free \\<psi>' \\<and>\n     atoms_pltl \\<psi>' \\<subseteq> A \\<and>\n     (\\<forall>\\<sigma>.\n         stutter_free \\<sigma> \\<and>\n         canonical_sequence A \\<sigma> \\<longrightarrow>\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>' =\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>)\n  atoms_pltl (\\<phi> U\\<^sub>p \\<psi>) \\<subseteq> A\n\ngoal (2 subgoals):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 U\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2)", "then"], ["proof (chain)\npicking this:\n  atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n  \\<exists>\\<phi>''.\n     next_free \\<phi>'' \\<and>\n     atoms_pltl \\<phi>'' \\<subseteq> A \\<and>\n     (\\<forall>\\<sigma>.\n         stutter_free \\<sigma> \\<and>\n         canonical_sequence A \\<sigma> \\<longrightarrow>\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>'' =\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n  atoms_pltl \\<psi> \\<subseteq> A \\<Longrightarrow>\n  \\<exists>\\<psi>'.\n     next_free \\<psi>' \\<and>\n     atoms_pltl \\<psi>' \\<subseteq> A \\<and>\n     (\\<forall>\\<sigma>.\n         stutter_free \\<sigma> \\<and>\n         canonical_sequence A \\<sigma> \\<longrightarrow>\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>' =\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>)\n  atoms_pltl (\\<phi> U\\<^sub>p \\<psi>) \\<subseteq> A", "obtain \\<phi>' \\<psi>' where 1: \"?P \\<phi> \\<phi>'\" and 2: \"?P \\<psi> \\<psi>'\""], ["proof (prove)\nusing this:\n  atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n  \\<exists>\\<phi>''.\n     next_free \\<phi>'' \\<and>\n     atoms_pltl \\<phi>'' \\<subseteq> A \\<and>\n     (\\<forall>\\<sigma>.\n         stutter_free \\<sigma> \\<and>\n         canonical_sequence A \\<sigma> \\<longrightarrow>\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>'' =\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n  atoms_pltl \\<psi> \\<subseteq> A \\<Longrightarrow>\n  \\<exists>\\<psi>'.\n     next_free \\<psi>' \\<and>\n     atoms_pltl \\<psi>' \\<subseteq> A \\<and>\n     (\\<forall>\\<sigma>.\n         stutter_free \\<sigma> \\<and>\n         canonical_sequence A \\<sigma> \\<longrightarrow>\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>' =\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>)\n  atoms_pltl (\\<phi> U\\<^sub>p \\<psi>) \\<subseteq> A\n\ngoal (1 subgoal):\n 1. (\\<And>\\<phi>'' \\<psi>'.\n        \\<lbrakk>next_free \\<phi>'' \\<and>\n                 atoms_pltl \\<phi>'' \\<subseteq> A \\<and>\n                 (\\<forall>\\<sigma>.\n                     stutter_free \\<sigma> \\<and>\n                     canonical_sequence A \\<sigma> \\<longrightarrow>\n                     \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>'' =\n                     \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n         next_free \\<psi>' \\<and>\n         atoms_pltl \\<psi>' \\<subseteq> A \\<and>\n         (\\<forall>\\<sigma>.\n             stutter_free \\<sigma> \\<and>\n             canonical_sequence A \\<sigma> \\<longrightarrow>\n             \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>' =\n             \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  next_free \\<phi>' \\<and>\n  atoms_pltl \\<phi>' \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>' =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n  next_free \\<psi>' \\<and>\n  atoms_pltl \\<psi>' \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>' =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>)\n\ngoal (2 subgoals):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 U\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2)", "{"], ["proof (state)\nthis:\n  next_free \\<phi>' \\<and>\n  atoms_pltl \\<phi>' \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>' =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n  next_free \\<psi>' \\<and>\n  atoms_pltl \\<psi>' \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>' =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>)\n\ngoal (2 subgoals):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 U\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2)", "fix \\<sigma>"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 U\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2)", "assume sigma: \"stutter_free \\<sigma>\" \"canonical_sequence A \\<sigma>\""], ["proof (state)\nthis:\n  stutter_free \\<sigma>\n  canonical_sequence A \\<sigma>\n\ngoal (2 subgoals):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 U\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2)", "hence \"\\<And>k. stutter_free (\\<sigma>[k..])\" \"\\<And>k. canonical_sequence A (\\<sigma>[k..])\""], ["proof (prove)\nusing this:\n  stutter_free \\<sigma>\n  canonical_sequence A \\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<And>k. stutter_free \\<sigma> [k..]) &&&\n    (\\<And>k. canonical_sequence A \\<sigma> [k..])", "by (auto simp: stutter_free_suffix canonical_suffix)"], ["proof (state)\nthis:\n  stutter_free \\<sigma> [?k..]\n  canonical_sequence A \\<sigma> [?k..]\n\ngoal (2 subgoals):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 U\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2)", "with 1 2"], ["proof (chain)\npicking this:\n  next_free \\<phi>' \\<and>\n  atoms_pltl \\<phi>' \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>' =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n  next_free \\<psi>' \\<and>\n  atoms_pltl \\<psi>' \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>' =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>)\n  stutter_free \\<sigma> [?k..]\n  canonical_sequence A \\<sigma> [?k..]", "have \"\\<And>k. (\\<sigma>[k..] \\<Turnstile>\\<^sub>p \\<phi>') = (\\<sigma>[k..] \\<Turnstile>\\<^sub>p \\<phi>)\"\n     and \"\\<And>k. (\\<sigma>[k..] \\<Turnstile>\\<^sub>p \\<psi>') = (\\<sigma>[k..] \\<Turnstile>\\<^sub>p \\<psi>)\""], ["proof (prove)\nusing this:\n  next_free \\<phi>' \\<and>\n  atoms_pltl \\<phi>' \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>' =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n  next_free \\<psi>' \\<and>\n  atoms_pltl \\<psi>' \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>' =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>)\n  stutter_free \\<sigma> [?k..]\n  canonical_sequence A \\<sigma> [?k..]\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<sigma> [k..] \\<Turnstile>\\<^sub>p \\<phi>' =\n        \\<sigma> [k..] \\<Turnstile>\\<^sub>p \\<phi>) &&&\n    (\\<And>k.\n        \\<sigma> [k..] \\<Turnstile>\\<^sub>p \\<psi>' =\n        \\<sigma> [k..] \\<Turnstile>\\<^sub>p \\<psi>)", "by (blast+)"], ["proof (state)\nthis:\n  \\<sigma> [?k..] \\<Turnstile>\\<^sub>p \\<phi>' =\n  \\<sigma> [?k..] \\<Turnstile>\\<^sub>p \\<phi>\n  \\<sigma> [?k..] \\<Turnstile>\\<^sub>p \\<psi>' =\n  \\<sigma> [?k..] \\<Turnstile>\\<^sub>p \\<psi>\n\ngoal (2 subgoals):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 U\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2)", "hence \"(\\<sigma> \\<Turnstile>\\<^sub>p \\<phi>' U\\<^sub>p \\<psi>') = (\\<sigma> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>)\""], ["proof (prove)\nusing this:\n  \\<sigma> [?k..] \\<Turnstile>\\<^sub>p \\<phi>' =\n  \\<sigma> [?k..] \\<Turnstile>\\<^sub>p \\<phi>\n  \\<sigma> [?k..] \\<Turnstile>\\<^sub>p \\<psi>' =\n  \\<sigma> [?k..] \\<Turnstile>\\<^sub>p \\<psi>\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>' U\\<^sub>p \\<psi>' =\n    \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>", "by auto"], ["proof (state)\nthis:\n  \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>' U\\<^sub>p \\<psi>' =\n  \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>\n\ngoal (2 subgoals):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 U\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>stutter_free ?\\<sigma>2; canonical_sequence A ?\\<sigma>2\\<rbrakk>\n  \\<Longrightarrow> ?\\<sigma>2 \\<Turnstile>\\<^sub>p \\<phi>' U\\<^sub>p \\<psi>' =\n                    ?\\<sigma>2 \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>\n\ngoal (2 subgoals):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 U\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2)", "with 1 2"], ["proof (chain)\npicking this:\n  next_free \\<phi>' \\<and>\n  atoms_pltl \\<phi>' \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>' =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n  next_free \\<psi>' \\<and>\n  atoms_pltl \\<psi>' \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>' =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>)\n  \\<lbrakk>stutter_free ?\\<sigma>2; canonical_sequence A ?\\<sigma>2\\<rbrakk>\n  \\<Longrightarrow> ?\\<sigma>2 \\<Turnstile>\\<^sub>p \\<phi>' U\\<^sub>p \\<psi>' =\n                    ?\\<sigma>2 \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>", "have \"?P (\\<phi> U\\<^sub>p \\<psi>) (\\<phi>' U\\<^sub>p \\<psi>')\""], ["proof (prove)\nusing this:\n  next_free \\<phi>' \\<and>\n  atoms_pltl \\<phi>' \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>' =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n  next_free \\<psi>' \\<and>\n  atoms_pltl \\<psi>' \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>' =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>)\n  \\<lbrakk>stutter_free ?\\<sigma>2; canonical_sequence A ?\\<sigma>2\\<rbrakk>\n  \\<Longrightarrow> ?\\<sigma>2 \\<Turnstile>\\<^sub>p \\<phi>' U\\<^sub>p \\<psi>' =\n                    ?\\<sigma>2 \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>\n\ngoal (1 subgoal):\n 1. next_free (\\<phi>' U\\<^sub>p \\<psi>') \\<and>\n    atoms_pltl (\\<phi>' U\\<^sub>p \\<psi>') \\<subseteq> A \\<and>\n    (\\<forall>\\<sigma>.\n        stutter_free \\<sigma> \\<and>\n        canonical_sequence A \\<sigma> \\<longrightarrow>\n        \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>' U\\<^sub>p \\<psi>' =\n        \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>)", "by auto"], ["proof (state)\nthis:\n  next_free (\\<phi>' U\\<^sub>p \\<psi>') \\<and>\n  atoms_pltl (\\<phi>' U\\<^sub>p \\<psi>') \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>' U\\<^sub>p \\<psi>' =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>)\n\ngoal (2 subgoals):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)\n 2. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>atoms_pltl \\<phi>1 \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1);\n        atoms_pltl \\<phi>2 \\<subseteq> A \\<Longrightarrow>\n        \\<exists>\\<psi>.\n           next_free \\<psi> \\<and>\n           atoms_pltl \\<psi> \\<subseteq> A \\<and>\n           (\\<forall>\\<sigma>.\n               stutter_free \\<sigma> \\<and>\n               canonical_sequence A \\<sigma> \\<longrightarrow>\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n               \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>2);\n        atoms_pltl (\\<phi>1 U\\<^sub>p \\<phi>2) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>1 U\\<^sub>p \\<phi>2)", "thus \"\\<exists>\\<chi>. ?P (\\<phi> U\\<^sub>p \\<psi>) \\<chi>\""], ["proof (prove)\nusing this:\n  next_free (\\<phi>' U\\<^sub>p \\<psi>') \\<and>\n  atoms_pltl (\\<phi>' U\\<^sub>p \\<psi>') \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>' U\\<^sub>p \\<psi>' =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<chi>.\n       next_free \\<chi> \\<and>\n       atoms_pltl \\<chi> \\<subseteq> A \\<and>\n       (\\<forall>\\<sigma>.\n           stutter_free \\<sigma> \\<and>\n           canonical_sequence A \\<sigma> \\<longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<chi> =\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>)", ".."], ["proof (state)\nthis:\n  \\<exists>\\<chi>.\n     next_free \\<chi> \\<and>\n     atoms_pltl \\<chi> \\<subseteq> A \\<and>\n     (\\<forall>\\<sigma>.\n         stutter_free \\<sigma> \\<and>\n         canonical_sequence A \\<sigma> \\<longrightarrow>\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<chi> =\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> U\\<^sub>p \\<psi>)\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)", "txt \\<open>The interesting case is the one of the \\<open>next\\<close>-operator.\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)", "fix \\<phi>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)", "assume ih: \"atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow> \\<exists>\\<psi>. ?P \\<phi> \\<psi>\" and at: \"atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\""], ["proof (state)\nthis:\n  atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n  \\<exists>\\<psi>.\n     next_free \\<psi> \\<and>\n     atoms_pltl \\<psi> \\<subseteq> A \\<and>\n     (\\<forall>\\<sigma>.\n         stutter_free \\<sigma> \\<and>\n         canonical_sequence A \\<sigma> \\<longrightarrow>\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n  atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)", "then"], ["proof (chain)\npicking this:\n  atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n  \\<exists>\\<psi>.\n     next_free \\<psi> \\<and>\n     atoms_pltl \\<psi> \\<subseteq> A \\<and>\n     (\\<forall>\\<sigma>.\n         stutter_free \\<sigma> \\<and>\n         canonical_sequence A \\<sigma> \\<longrightarrow>\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n  atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A", "obtain \\<psi> where psi: \"?P \\<phi> \\<psi>\""], ["proof (prove)\nusing this:\n  atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n  \\<exists>\\<psi>.\n     next_free \\<psi> \\<and>\n     atoms_pltl \\<psi> \\<subseteq> A \\<and>\n     (\\<forall>\\<sigma>.\n         stutter_free \\<sigma> \\<and>\n         canonical_sequence A \\<sigma> \\<longrightarrow>\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n  atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\n\ngoal (1 subgoal):\n 1. (\\<And>\\<psi>.\n        next_free \\<psi> \\<and>\n        atoms_pltl \\<psi> \\<subseteq> A \\<and>\n        (\\<forall>\\<sigma>.\n            stutter_free \\<sigma> \\<and>\n            canonical_sequence A \\<sigma> \\<longrightarrow>\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  next_free \\<psi> \\<and>\n  atoms_pltl \\<psi> \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)", "txt \\<open>A valuation (over \\<open>A\\<close>) is a set \\<open>val \\<subseteq> A\\<close> of atoms. We\n    define some auxiliary notions: the valuation corresponding to a state and\n    the characteristic formula for a valuation. Finally, we define the formula\n    \\<open>psi'\\<close> that we will prove to be equivalent to \\<open>X\\<^sub>p \\<phi>\\<close> over\n    the stutter-free and canonical sequence \\<open>\\<sigma>\\<close>.\\<close>"], ["proof (state)\nthis:\n  next_free \\<psi> \\<and>\n  atoms_pltl \\<psi> \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)", "define stval where \"stval = (\\<lambda>s. { p \\<in> A . p s })\""], ["proof (state)\nthis:\n  stval = (\\<lambda>s. {p \\<in> A. p s})\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)", "define chi where \"chi = (\\<lambda>val. ((AND {atom\\<^sub>p(p) | p . p \\<in> val}) and\\<^sub>p\n                        (AND {not\\<^sub>p (atom\\<^sub>p(p)) | p . p \\<in> A - val})))\""], ["proof (state)\nthis:\n  chi =\n  (\\<lambda>val.\n      AND {atom\\<^sub>p(p) |p.\n           p \\<in> val} and\\<^sub>p AND {not\\<^sub>p atom\\<^sub>p(p) |p.\n   p \\<in> A - val})\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)", "define psi' where \"psi' = ((\\<psi> and\\<^sub>p (OR {G\\<^sub>p (chi val) | val . val \\<subseteq> A })) or\\<^sub>p\n                  (OR {(chi val) and\\<^sub>p ((chi val) U\\<^sub>p ( \\<psi> and\\<^sub>p (chi val'))) | val val'.\n                        val \\<subseteq> A \\<and> val' \\<subseteq> A \\<and> val' \\<noteq> val }))\"\n        (is \"_ = (( _ and\\<^sub>p (OR ?ALW)) or\\<^sub>p (OR ?UNT))\")"], ["proof (state)\nthis:\n  psi' =\n  \\<psi> and\\<^sub>p OR {G\\<^sub>p chi val |val.\n                         val\n                         \\<subseteq> A} or\\<^sub>p OR\n              {chi val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi\n                                    val') |\n               val val'.\n               val \\<subseteq> A \\<and>\n               val' \\<subseteq> A \\<and> val' \\<noteq> val}\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)", "have \"\\<And>s. {not\\<^sub>p (atom\\<^sub>p(p)) | p . p \\<in> A - stval s}\n           = {not\\<^sub>p (atom\\<^sub>p(p)) | p . p \\<in> A \\<and> \\<not>(p s)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       {not\\<^sub>p atom\\<^sub>p(p) |p. p \\<in> A - stval s} =\n       {not\\<^sub>p atom\\<^sub>p(p) |p. p \\<in> A \\<and> \\<not> p s}", "by (auto simp: stval_def)"], ["proof (state)\nthis:\n  {not\\<^sub>p atom\\<^sub>p(p) |p. p \\<in> A - stval ?s} =\n  {not\\<^sub>p atom\\<^sub>p(p) |p. p \\<in> A \\<and> \\<not> p ?s}\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)", "hence chi1: \"\\<And>s. chi (stval s) = characteristic_formula A s\""], ["proof (prove)\nusing this:\n  {not\\<^sub>p atom\\<^sub>p(p) |p. p \\<in> A - stval ?s} =\n  {not\\<^sub>p atom\\<^sub>p(p) |p. p \\<in> A \\<and> \\<not> p ?s}\n\ngoal (1 subgoal):\n 1. \\<And>s. chi (stval s) = characteristic_formula A s", "by (auto simp: chi_def stval_def characteristic_formula_def)"], ["proof (state)\nthis:\n  chi (stval ?s) = characteristic_formula A ?s\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)", "{"], ["proof (state)\nthis:\n  chi (stval ?s) = characteristic_formula A ?s\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)", "fix val \\<tau>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)", "assume val: \"val \\<subseteq> A\" and tau: \"\\<tau> \\<Turnstile>\\<^sub>p chi val\""], ["proof (state)\nthis:\n  val \\<subseteq> A\n  \\<tau> \\<Turnstile>\\<^sub>p chi val\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)", "with fin"], ["proof (chain)\npicking this:\n  finite A\n  val \\<subseteq> A\n  \\<tau> \\<Turnstile>\\<^sub>p chi val", "have \"val = stval (\\<tau> 0)\""], ["proof (prove)\nusing this:\n  finite A\n  val \\<subseteq> A\n  \\<tau> \\<Turnstile>\\<^sub>p chi val\n\ngoal (1 subgoal):\n 1. val = stval (\\<tau> 0)", "by (auto simp: stval_def chi_def finite_subset)"], ["proof (state)\nthis:\n  val = stval (\\<tau> 0)\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?val2 \\<subseteq> A;\n   ?\\<tau>2 \\<Turnstile>\\<^sub>p chi ?val2\\<rbrakk>\n  \\<Longrightarrow> ?val2 = stval (?\\<tau>2 0)\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)", "note chi2 = this"], ["proof (state)\nthis:\n  \\<lbrakk>?val2 \\<subseteq> A;\n   ?\\<tau>2 \\<Turnstile>\\<^sub>p chi ?val2\\<rbrakk>\n  \\<Longrightarrow> ?val2 = stval (?\\<tau>2 0)\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)", "have \"?UNT \\<subseteq> (\\<lambda>(val,val'). (chi val) and\\<^sub>p ((chi val) U\\<^sub>p (\\<psi> and\\<^sub>p (chi val'))))\n               ` (Pow A \\<times> Pow A)\"\n    (is \"_ \\<subseteq> ?S\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. {chi val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |\n     val val'.\n     val \\<subseteq> A \\<and> val' \\<subseteq> A \\<and> val' \\<noteq> val}\n    \\<subseteq> (\\<lambda>(val, val').\n                    chi val and\\<^sub>p chi\n   val U\\<^sub>p (\\<psi> and\\<^sub>p chi val')) `\n                (Pow A \\<times> Pow A)", "by auto"], ["proof (state)\nthis:\n  {chi val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |val\n   val'.\n   val \\<subseteq> A \\<and> val' \\<subseteq> A \\<and> val' \\<noteq> val}\n  \\<subseteq> (\\<lambda>(val, val').\n                  chi val and\\<^sub>p chi\n val U\\<^sub>p (\\<psi> and\\<^sub>p chi val')) `\n              (Pow A \\<times> Pow A)\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)", "with fin"], ["proof (chain)\npicking this:\n  finite A\n  {chi val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |val\n   val'.\n   val \\<subseteq> A \\<and> val' \\<subseteq> A \\<and> val' \\<noteq> val}\n  \\<subseteq> (\\<lambda>(val, val').\n                  chi val and\\<^sub>p chi\n val U\\<^sub>p (\\<psi> and\\<^sub>p chi val')) `\n              (Pow A \\<times> Pow A)", "have fin_UNT: \"finite ?UNT\""], ["proof (prove)\nusing this:\n  finite A\n  {chi val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |val\n   val'.\n   val \\<subseteq> A \\<and> val' \\<subseteq> A \\<and> val' \\<noteq> val}\n  \\<subseteq> (\\<lambda>(val, val').\n                  chi val and\\<^sub>p chi\n val U\\<^sub>p (\\<psi> and\\<^sub>p chi val')) `\n              (Pow A \\<times> Pow A)\n\ngoal (1 subgoal):\n 1. finite\n     {chi val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |\n      val val'.\n      val \\<subseteq> A \\<and> val' \\<subseteq> A \\<and> val' \\<noteq> val}", "by (auto simp: finite_subset)"], ["proof (state)\nthis:\n  finite\n   {chi val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |val\n    val'.\n    val \\<subseteq> A \\<and> val' \\<subseteq> A \\<and> val' \\<noteq> val}\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)", "have nf: \"next_free psi'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next_free psi'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. next_free psi'", "from fin"], ["proof (chain)\npicking this:\n  finite A", "have \"\\<And>val. val \\<subseteq> A \\<Longrightarrow> next_free (chi val)\""], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. \\<And>val. val \\<subseteq> A \\<Longrightarrow> next_free (chi val)", "by (auto simp: chi_def finite_subset)"], ["proof (state)\nthis:\n  ?val \\<subseteq> A \\<Longrightarrow> next_free (chi ?val)\n\ngoal (1 subgoal):\n 1. next_free psi'", "with fin fin_UNT psi"], ["proof (chain)\npicking this:\n  finite A\n  finite\n   {chi val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |val\n    val'.\n    val \\<subseteq> A \\<and> val' \\<subseteq> A \\<and> val' \\<noteq> val}\n  next_free \\<psi> \\<and>\n  atoms_pltl \\<psi> \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n  ?val \\<subseteq> A \\<Longrightarrow> next_free (chi ?val)", "show ?thesis"], ["proof (prove)\nusing this:\n  finite A\n  finite\n   {chi val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |val\n    val'.\n    val \\<subseteq> A \\<and> val' \\<subseteq> A \\<and> val' \\<noteq> val}\n  next_free \\<psi> \\<and>\n  atoms_pltl \\<psi> \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n  ?val \\<subseteq> A \\<Longrightarrow> next_free (chi ?val)\n\ngoal (1 subgoal):\n 1. next_free psi'", "by (force simp: psi'_def finite_subset)"], ["proof (state)\nthis:\n  next_free psi'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  next_free psi'\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)", "have atoms_pltl: \"atoms_pltl psi' \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atoms_pltl psi' \\<subseteq> A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. atoms_pltl psi' \\<subseteq> A", "from fin"], ["proof (chain)\npicking this:\n  finite A", "have at_chi: \"\\<And>val. val \\<subseteq> A \\<Longrightarrow> atoms_pltl (chi val) \\<subseteq> A\""], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. \\<And>val.\n       val \\<subseteq> A \\<Longrightarrow>\n       atoms_pltl (chi val) \\<subseteq> A", "by (auto simp: chi_def finite_subset)"], ["proof (state)\nthis:\n  ?val \\<subseteq> A \\<Longrightarrow> atoms_pltl (chi ?val) \\<subseteq> A\n\ngoal (1 subgoal):\n 1. atoms_pltl psi' \\<subseteq> A", "with fin psi"], ["proof (chain)\npicking this:\n  finite A\n  next_free \\<psi> \\<and>\n  atoms_pltl \\<psi> \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n  ?val \\<subseteq> A \\<Longrightarrow> atoms_pltl (chi ?val) \\<subseteq> A", "have at_alw: \"atoms_pltl (\\<psi> and\\<^sub>p (OR ?ALW)) \\<subseteq> A\""], ["proof (prove)\nusing this:\n  finite A\n  next_free \\<psi> \\<and>\n  atoms_pltl \\<psi> \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n  ?val \\<subseteq> A \\<Longrightarrow> atoms_pltl (chi ?val) \\<subseteq> A\n\ngoal (1 subgoal):\n 1. atoms_pltl\n     (\\<psi> and\\<^sub>p OR {G\\<^sub>p chi val |val. val \\<subseteq> A})\n    \\<subseteq> A", "by auto blast?"], ["proof (state)\nthis:\n  atoms_pltl\n   (\\<psi> and\\<^sub>p OR {G\\<^sub>p chi val |val. val \\<subseteq> A})\n  \\<subseteq> A\n\ngoal (1 subgoal):\n 1. atoms_pltl psi' \\<subseteq> A", "(** FRAGILE: auto leaves trivial goal about subset **)"], ["proof (state)\nthis:\n  atoms_pltl\n   (\\<psi> and\\<^sub>p OR {G\\<^sub>p chi val |val. val \\<subseteq> A})\n  \\<subseteq> A\n\ngoal (1 subgoal):\n 1. atoms_pltl psi' \\<subseteq> A", "from fin fin_UNT psi at_chi"], ["proof (chain)\npicking this:\n  finite A\n  finite\n   {chi val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |val\n    val'.\n    val \\<subseteq> A \\<and> val' \\<subseteq> A \\<and> val' \\<noteq> val}\n  next_free \\<psi> \\<and>\n  atoms_pltl \\<psi> \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n  ?val \\<subseteq> A \\<Longrightarrow> atoms_pltl (chi ?val) \\<subseteq> A", "have \"atoms_pltl (OR ?UNT) \\<subseteq> A\""], ["proof (prove)\nusing this:\n  finite A\n  finite\n   {chi val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |val\n    val'.\n    val \\<subseteq> A \\<and> val' \\<subseteq> A \\<and> val' \\<noteq> val}\n  next_free \\<psi> \\<and>\n  atoms_pltl \\<psi> \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n  ?val \\<subseteq> A \\<Longrightarrow> atoms_pltl (chi ?val) \\<subseteq> A\n\ngoal (1 subgoal):\n 1. atoms_pltl\n     (OR {chi val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi\n                               val') |\n          val val'.\n          val \\<subseteq> A \\<and>\n          val' \\<subseteq> A \\<and> val' \\<noteq> val})\n    \\<subseteq> A", "by auto (blast+)?"], ["proof (state)\nthis:\n  atoms_pltl\n   (OR {chi val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi\n                             val') |\n        val val'.\n        val \\<subseteq> A \\<and>\n        val' \\<subseteq> A \\<and> val' \\<noteq> val})\n  \\<subseteq> A\n\ngoal (1 subgoal):\n 1. atoms_pltl psi' \\<subseteq> A", "(** FRAGILE: even more left-over goals here **)"], ["proof (state)\nthis:\n  atoms_pltl\n   (OR {chi val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi\n                             val') |\n        val val'.\n        val \\<subseteq> A \\<and>\n        val' \\<subseteq> A \\<and> val' \\<noteq> val})\n  \\<subseteq> A\n\ngoal (1 subgoal):\n 1. atoms_pltl psi' \\<subseteq> A", "with at_alw"], ["proof (chain)\npicking this:\n  atoms_pltl\n   (\\<psi> and\\<^sub>p OR {G\\<^sub>p chi val |val. val \\<subseteq> A})\n  \\<subseteq> A\n  atoms_pltl\n   (OR {chi val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi\n                             val') |\n        val val'.\n        val \\<subseteq> A \\<and>\n        val' \\<subseteq> A \\<and> val' \\<noteq> val})\n  \\<subseteq> A", "show ?thesis"], ["proof (prove)\nusing this:\n  atoms_pltl\n   (\\<psi> and\\<^sub>p OR {G\\<^sub>p chi val |val. val \\<subseteq> A})\n  \\<subseteq> A\n  atoms_pltl\n   (OR {chi val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi\n                             val') |\n        val val'.\n        val \\<subseteq> A \\<and>\n        val' \\<subseteq> A \\<and> val' \\<noteq> val})\n  \\<subseteq> A\n\ngoal (1 subgoal):\n 1. atoms_pltl psi' \\<subseteq> A", "by (auto simp: psi'_def)"], ["proof (state)\nthis:\n  atoms_pltl psi' \\<subseteq> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  atoms_pltl psi' \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)", "{"], ["proof (state)\nthis:\n  atoms_pltl psi' \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)", "fix \\<sigma>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)", "assume st: \"stutter_free \\<sigma>\" and can: \"canonical_sequence A \\<sigma>\""], ["proof (state)\nthis:\n  stutter_free \\<sigma>\n  canonical_sequence A \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)", "have \"(\\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>) = (\\<sigma> \\<Turnstile>\\<^sub>p psi')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'", "proof (cases \"\\<sigma> (Suc 0) = \\<sigma> 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<sigma> (Suc 0) = \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'\n 2. \\<sigma> (Suc 0) \\<noteq> \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'", "case True"], ["proof (state)\nthis:\n  \\<sigma> (Suc 0) = \\<sigma> 0\n\ngoal (2 subgoals):\n 1. \\<sigma> (Suc 0) = \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'\n 2. \\<sigma> (Suc 0) \\<noteq> \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'", "txt \\<open>In the case of a stuttering transition at the beginning, we must have\n        infinite stuttering, and the first disjunct of \\<open>psi'\\<close> holds,\n        whereas the second does not.\\<close>"], ["proof (state)\nthis:\n  \\<sigma> (Suc 0) = \\<sigma> 0\n\ngoal (2 subgoals):\n 1. \\<sigma> (Suc 0) = \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'\n 2. \\<sigma> (Suc 0) \\<noteq> \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'", "{"], ["proof (state)\nthis:\n  \\<sigma> (Suc 0) = \\<sigma> 0\n\ngoal (2 subgoals):\n 1. \\<sigma> (Suc 0) = \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'\n 2. \\<sigma> (Suc 0) \\<noteq> \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'", "fix n"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<sigma> (Suc 0) = \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'\n 2. \\<sigma> (Suc 0) \\<noteq> \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'", "have \"\\<sigma> n = \\<sigma> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma> n = \\<sigma> 0", "proof (cases n)"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> \\<sigma> n = \\<sigma> 0\n 2. \\<And>nat. n = Suc nat \\<Longrightarrow> \\<sigma> n = \\<sigma> 0", "case 0"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> \\<sigma> n = \\<sigma> 0\n 2. \\<And>nat. n = Suc nat \\<Longrightarrow> \\<sigma> n = \\<sigma> 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. \\<sigma> n = \\<sigma> 0", "by simp"], ["proof (state)\nthis:\n  \\<sigma> n = \\<sigma> 0\n\ngoal (1 subgoal):\n 1. \\<And>nat. n = Suc nat \\<Longrightarrow> \\<sigma> n = \\<sigma> 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat. n = Suc nat \\<Longrightarrow> \\<sigma> n = \\<sigma> 0", "case Suc"], ["proof (state)\nthis:\n  n = Suc nat_\n\ngoal (1 subgoal):\n 1. \\<And>nat. n = Suc nat \\<Longrightarrow> \\<sigma> n = \\<sigma> 0", "hence \"n > 0\""], ["proof (prove)\nusing this:\n  n = Suc nat_\n\ngoal (1 subgoal):\n 1. 0 < n", "by simp"], ["proof (state)\nthis:\n  0 < n\n\ngoal (1 subgoal):\n 1. \\<And>nat. n = Suc nat \\<Longrightarrow> \\<sigma> n = \\<sigma> 0", "with True st"], ["proof (chain)\npicking this:\n  \\<sigma> (Suc 0) = \\<sigma> 0\n  stutter_free \\<sigma>\n  0 < n", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<sigma> (Suc 0) = \\<sigma> 0\n  stutter_free \\<sigma>\n  0 < n\n\ngoal (1 subgoal):\n 1. \\<sigma> n = \\<sigma> 0", "unfolding stutter_free_def"], ["proof (prove)\nusing this:\n  \\<sigma> (Suc 0) = \\<sigma> 0\n  \\<forall>k.\n     \\<sigma> (Suc k) = \\<sigma> k \\<longrightarrow>\n     (\\<forall>n>k. \\<sigma> n = \\<sigma> k)\n  0 < n\n\ngoal (1 subgoal):\n 1. \\<sigma> n = \\<sigma> 0", "by blast"], ["proof (state)\nthis:\n  \\<sigma> n = \\<sigma> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<sigma> n = \\<sigma> 0\n\ngoal (2 subgoals):\n 1. \\<sigma> (Suc 0) = \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'\n 2. \\<sigma> (Suc 0) \\<noteq> \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'", "}"], ["proof (state)\nthis:\n  \\<sigma> ?n2 = \\<sigma> 0\n\ngoal (2 subgoals):\n 1. \\<sigma> (Suc 0) = \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'\n 2. \\<sigma> (Suc 0) \\<noteq> \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'", "note alleq = this"], ["proof (state)\nthis:\n  \\<sigma> ?n2 = \\<sigma> 0\n\ngoal (2 subgoals):\n 1. \\<sigma> (Suc 0) = \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'\n 2. \\<sigma> (Suc 0) \\<noteq> \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'", "have suffix: \"\\<And>n. \\<sigma>[n..] = \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n. \\<sigma> [n..] = \\<sigma>", "proof (rule ext)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n x. \\<sigma> [n..] x = \\<sigma> x", "fix n i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n x. \\<sigma> [n..] x = \\<sigma> x", "have \"(\\<sigma>[n..]) i = \\<sigma> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma> [n..] i = \\<sigma> 0", "by (auto intro: alleq)"], ["proof (state)\nthis:\n  \\<sigma> [n..] i = \\<sigma> 0\n\ngoal (1 subgoal):\n 1. \\<And>n x. \\<sigma> [n..] x = \\<sigma> x", "moreover"], ["proof (state)\nthis:\n  \\<sigma> [n..] i = \\<sigma> 0\n\ngoal (1 subgoal):\n 1. \\<And>n x. \\<sigma> [n..] x = \\<sigma> x", "have \"\\<sigma> i = \\<sigma> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma> i = \\<sigma> 0", "by (rule alleq)"], ["proof (state)\nthis:\n  \\<sigma> i = \\<sigma> 0\n\ngoal (1 subgoal):\n 1. \\<And>n x. \\<sigma> [n..] x = \\<sigma> x", "ultimately"], ["proof (chain)\npicking this:\n  \\<sigma> [n..] i = \\<sigma> 0\n  \\<sigma> i = \\<sigma> 0", "show \"(\\<sigma>[n..]) i = \\<sigma> i\""], ["proof (prove)\nusing this:\n  \\<sigma> [n..] i = \\<sigma> 0\n  \\<sigma> i = \\<sigma> 0\n\ngoal (1 subgoal):\n 1. \\<sigma> [n..] i = \\<sigma> i", "by simp"], ["proof (state)\nthis:\n  \\<sigma> [n..] i = \\<sigma> i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<sigma> [?n..] = \\<sigma>\n\ngoal (2 subgoals):\n 1. \\<sigma> (Suc 0) = \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'\n 2. \\<sigma> (Suc 0) \\<noteq> \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'", "with st can psi"], ["proof (chain)\npicking this:\n  stutter_free \\<sigma>\n  canonical_sequence A \\<sigma>\n  next_free \\<psi> \\<and>\n  atoms_pltl \\<psi> \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n  \\<sigma> [?n..] = \\<sigma>", "have 1: \"(\\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>) = (\\<sigma> \\<Turnstile>\\<^sub>p \\<psi>)\""], ["proof (prove)\nusing this:\n  stutter_free \\<sigma>\n  canonical_sequence A \\<sigma>\n  next_free \\<psi> \\<and>\n  atoms_pltl \\<psi> \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n  \\<sigma> [?n..] = \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>", "by simp"], ["proof (state)\nthis:\n  \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n  \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>\n\ngoal (2 subgoals):\n 1. \\<sigma> (Suc 0) = \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'\n 2. \\<sigma> (Suc 0) \\<noteq> \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'", "from fin"], ["proof (chain)\npicking this:\n  finite A", "have \"\\<sigma> \\<Turnstile>\\<^sub>p chi (stval (\\<sigma> 0))\""], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p chi (stval (\\<sigma> 0))", "by (simp add: chi1 characteristic_holds)"], ["proof (state)\nthis:\n  \\<sigma> \\<Turnstile>\\<^sub>p chi (stval (\\<sigma> 0))\n\ngoal (2 subgoals):\n 1. \\<sigma> (Suc 0) = \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'\n 2. \\<sigma> (Suc 0) \\<noteq> \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'", "with suffix"], ["proof (chain)\npicking this:\n  \\<sigma> [?n..] = \\<sigma>\n  \\<sigma> \\<Turnstile>\\<^sub>p chi (stval (\\<sigma> 0))", "have \"\\<sigma> \\<Turnstile>\\<^sub>p G\\<^sub>p (chi (stval (\\<sigma> 0)))\" (is \"_ \\<Turnstile>\\<^sub>p ?alw\")"], ["proof (prove)\nusing this:\n  \\<sigma> [?n..] = \\<sigma>\n  \\<sigma> \\<Turnstile>\\<^sub>p chi (stval (\\<sigma> 0))\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p G\\<^sub>p chi (stval (\\<sigma> 0))", "by simp"], ["proof (state)\nthis:\n  \\<sigma> \\<Turnstile>\\<^sub>p G\\<^sub>p chi (stval (\\<sigma> 0))\n\ngoal (2 subgoals):\n 1. \\<sigma> (Suc 0) = \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'\n 2. \\<sigma> (Suc 0) \\<noteq> \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'", "moreover"], ["proof (state)\nthis:\n  \\<sigma> \\<Turnstile>\\<^sub>p G\\<^sub>p chi (stval (\\<sigma> 0))\n\ngoal (2 subgoals):\n 1. \\<sigma> (Suc 0) = \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'\n 2. \\<sigma> (Suc 0) \\<noteq> \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'", "have \"?alw \\<in> ?ALW\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G\\<^sub>p chi (stval (\\<sigma> 0))\n    \\<in> {G\\<^sub>p chi val |val. val \\<subseteq> A}", "by (auto simp: stval_def)"], ["proof (state)\nthis:\n  G\\<^sub>p chi (stval (\\<sigma> 0))\n  \\<in> {G\\<^sub>p chi val |val. val \\<subseteq> A}\n\ngoal (2 subgoals):\n 1. \\<sigma> (Suc 0) = \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'\n 2. \\<sigma> (Suc 0) \\<noteq> \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'", "ultimately"], ["proof (chain)\npicking this:\n  \\<sigma> \\<Turnstile>\\<^sub>p G\\<^sub>p chi (stval (\\<sigma> 0))\n  G\\<^sub>p chi (stval (\\<sigma> 0))\n  \\<in> {G\\<^sub>p chi val |val. val \\<subseteq> A}", "have 2: \"\\<sigma> \\<Turnstile>\\<^sub>p OR ?ALW\""], ["proof (prove)\nusing this:\n  \\<sigma> \\<Turnstile>\\<^sub>p G\\<^sub>p chi (stval (\\<sigma> 0))\n  G\\<^sub>p chi (stval (\\<sigma> 0))\n  \\<in> {G\\<^sub>p chi val |val. val \\<subseteq> A}\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p OR {G\\<^sub>p chi val |val.\nval \\<subseteq> A}", "using fin"], ["proof (prove)\nusing this:\n  \\<sigma> \\<Turnstile>\\<^sub>p G\\<^sub>p chi (stval (\\<sigma> 0))\n  G\\<^sub>p chi (stval (\\<sigma> 0))\n  \\<in> {G\\<^sub>p chi val |val. val \\<subseteq> A}\n  finite A\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p OR {G\\<^sub>p chi val |val.\nval \\<subseteq> A}", "by (auto simp: finite_subset simp del: semantics_pltl_sugar)"], ["proof (state)\nthis:\n  \\<sigma> \\<Turnstile>\\<^sub>p OR {G\\<^sub>p chi val |val.\n                                    val \\<subseteq> A}\n\ngoal (2 subgoals):\n 1. \\<sigma> (Suc 0) = \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'\n 2. \\<sigma> (Suc 0) \\<noteq> \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'", "have 3: \"\\<not>(\\<sigma> \\<Turnstile>\\<^sub>p OR ?UNT)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> \\<sigma> \\<Turnstile>\\<^sub>p OR\n    {chi val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |\n     val val'.\n     val \\<subseteq> A \\<and> val' \\<subseteq> A \\<and> val' \\<noteq> val}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p OR {chi\n val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |\nval val'.\nval \\<subseteq> A \\<and>\nval' \\<subseteq> A \\<and> val' \\<noteq> val} \\<Longrightarrow>\n    False", "assume unt: \"\\<sigma> \\<Turnstile>\\<^sub>p OR ?UNT\""], ["proof (state)\nthis:\n  \\<sigma> \\<Turnstile>\\<^sub>p OR {chi val and\\<^sub>p chi\n                   val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |\n                                    val val'.\n                                    val \\<subseteq> A \\<and>\n                                    val' \\<subseteq> A \\<and>\n                                    val' \\<noteq> val}\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p OR {chi\n val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |\nval val'.\nval \\<subseteq> A \\<and>\nval' \\<subseteq> A \\<and> val' \\<noteq> val} \\<Longrightarrow>\n    False", "with fin_UNT"], ["proof (chain)\npicking this:\n  finite\n   {chi val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |val\n    val'.\n    val \\<subseteq> A \\<and> val' \\<subseteq> A \\<and> val' \\<noteq> val}\n  \\<sigma> \\<Turnstile>\\<^sub>p OR {chi val and\\<^sub>p chi\n                   val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |\n                                    val val'.\n                                    val \\<subseteq> A \\<and>\n                                    val' \\<subseteq> A \\<and>\n                                    val' \\<noteq> val}", "obtain val val' k where\n          val: \"val \\<subseteq> A\" \"val' \\<subseteq> A\" \"val' \\<noteq> val\" and\n          now: \"\\<sigma> \\<Turnstile>\\<^sub>p chi val\" and k: \"\\<sigma>[k..] \\<Turnstile>\\<^sub>p chi val'\""], ["proof (prove)\nusing this:\n  finite\n   {chi val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |val\n    val'.\n    val \\<subseteq> A \\<and> val' \\<subseteq> A \\<and> val' \\<noteq> val}\n  \\<sigma> \\<Turnstile>\\<^sub>p OR {chi val and\\<^sub>p chi\n                   val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |\n                                    val val'.\n                                    val \\<subseteq> A \\<and>\n                                    val' \\<subseteq> A \\<and>\n                                    val' \\<noteq> val}\n\ngoal (1 subgoal):\n 1. (\\<And>val val' k.\n        \\<lbrakk>val \\<subseteq> A; val' \\<subseteq> A; val' \\<noteq> val;\n         \\<sigma> \\<Turnstile>\\<^sub>p chi val;\n         \\<sigma> [k..] \\<Turnstile>\\<^sub>p chi val'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto (blast+)?"], ["proof (state)\nthis:\n  val \\<subseteq> A\n  val' \\<subseteq> A\n  val' \\<noteq> val\n  \\<sigma> \\<Turnstile>\\<^sub>p chi val\n  \\<sigma> [k..] \\<Turnstile>\\<^sub>p chi val'\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p OR {chi\n val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |\nval val'.\nval \\<subseteq> A \\<and>\nval' \\<subseteq> A \\<and> val' \\<noteq> val} \\<Longrightarrow>\n    False", "(* FRAGILE: similar as above *)"], ["proof (state)\nthis:\n  val \\<subseteq> A\n  val' \\<subseteq> A\n  val' \\<noteq> val\n  \\<sigma> \\<Turnstile>\\<^sub>p chi val\n  \\<sigma> [k..] \\<Turnstile>\\<^sub>p chi val'\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p OR {chi\n val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |\nval val'.\nval \\<subseteq> A \\<and>\nval' \\<subseteq> A \\<and> val' \\<noteq> val} \\<Longrightarrow>\n    False", "from \\<open>val \\<subseteq> A\\<close> now"], ["proof (chain)\npicking this:\n  val \\<subseteq> A\n  \\<sigma> \\<Turnstile>\\<^sub>p chi val", "have \"val = stval (\\<sigma> 0)\""], ["proof (prove)\nusing this:\n  val \\<subseteq> A\n  \\<sigma> \\<Turnstile>\\<^sub>p chi val\n\ngoal (1 subgoal):\n 1. val = stval (\\<sigma> 0)", "by (rule chi2)"], ["proof (state)\nthis:\n  val = stval (\\<sigma> 0)\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p OR {chi\n val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |\nval val'.\nval \\<subseteq> A \\<and>\nval' \\<subseteq> A \\<and> val' \\<noteq> val} \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  val = stval (\\<sigma> 0)\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p OR {chi\n val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |\nval val'.\nval \\<subseteq> A \\<and>\nval' \\<subseteq> A \\<and> val' \\<noteq> val} \\<Longrightarrow>\n    False", "from \\<open>val' \\<subseteq> A\\<close> k suffix"], ["proof (chain)\npicking this:\n  val' \\<subseteq> A\n  \\<sigma> [k..] \\<Turnstile>\\<^sub>p chi val'\n  \\<sigma> [?n..] = \\<sigma>", "have \"val' = stval (\\<sigma> 0)\""], ["proof (prove)\nusing this:\n  val' \\<subseteq> A\n  \\<sigma> [k..] \\<Turnstile>\\<^sub>p chi val'\n  \\<sigma> [?n..] = \\<sigma>\n\ngoal (1 subgoal):\n 1. val' = stval (\\<sigma> 0)", "by (simp add: chi2)"], ["proof (state)\nthis:\n  val' = stval (\\<sigma> 0)\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p OR {chi\n val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |\nval val'.\nval \\<subseteq> A \\<and>\nval' \\<subseteq> A \\<and> val' \\<noteq> val} \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  val' = stval (\\<sigma> 0)\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p OR {chi\n val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |\nval val'.\nval \\<subseteq> A \\<and>\nval' \\<subseteq> A \\<and> val' \\<noteq> val} \\<Longrightarrow>\n    False", "note \\<open>val' \\<noteq> val\\<close>"], ["proof (state)\nthis:\n  val' \\<noteq> val\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p OR {chi\n val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |\nval val'.\nval \\<subseteq> A \\<and>\nval' \\<subseteq> A \\<and> val' \\<noteq> val} \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  val = stval (\\<sigma> 0)\n  val' = stval (\\<sigma> 0)\n  val' \\<noteq> val", "show \"False\""], ["proof (prove)\nusing this:\n  val = stval (\\<sigma> 0)\n  val' = stval (\\<sigma> 0)\n  val' \\<noteq> val\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> \\<sigma> \\<Turnstile>\\<^sub>p OR\n  {chi val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |val\n   val'.\n   val \\<subseteq> A \\<and> val' \\<subseteq> A \\<and> val' \\<noteq> val}\n\ngoal (2 subgoals):\n 1. \\<sigma> (Suc 0) = \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'\n 2. \\<sigma> (Suc 0) \\<noteq> \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'", "from 1 2 3"], ["proof (chain)\npicking this:\n  \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n  \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>\n  \\<sigma> \\<Turnstile>\\<^sub>p OR {G\\<^sub>p chi val |val.\n                                    val \\<subseteq> A}\n  \\<not> \\<sigma> \\<Turnstile>\\<^sub>p OR\n  {chi val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |val\n   val'.\n   val \\<subseteq> A \\<and> val' \\<subseteq> A \\<and> val' \\<noteq> val}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n  \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>\n  \\<sigma> \\<Turnstile>\\<^sub>p OR {G\\<^sub>p chi val |val.\n                                    val \\<subseteq> A}\n  \\<not> \\<sigma> \\<Turnstile>\\<^sub>p OR\n  {chi val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |val\n   val'.\n   val \\<subseteq> A \\<and> val' \\<subseteq> A \\<and> val' \\<noteq> val}\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'", "by (simp add: psi'_def)"], ["proof (state)\nthis:\n  \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n  \\<sigma> \\<Turnstile>\\<^sub>p psi'\n\ngoal (1 subgoal):\n 1. \\<sigma> (Suc 0) \\<noteq> \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<sigma> (Suc 0) \\<noteq> \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'", "case False"], ["proof (state)\nthis:\n  \\<sigma> (Suc 0) \\<noteq> \\<sigma> 0\n\ngoal (1 subgoal):\n 1. \\<sigma> (Suc 0) \\<noteq> \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'", "txt \\<open>Otherwise, \\<open>\\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>\\<close> is equivalent to \\<open>\\<sigma>\\<close> satisfying\n        the second disjunct of \\<open>psi'\\<close>. We show both implications separately.\\<close>"], ["proof (state)\nthis:\n  \\<sigma> (Suc 0) \\<noteq> \\<sigma> 0\n\ngoal (1 subgoal):\n 1. \\<sigma> (Suc 0) \\<noteq> \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'", "let ?val = \"stval (\\<sigma> 0)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<sigma> (Suc 0) \\<noteq> \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'", "let ?val' = \"stval (\\<sigma> 1)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<sigma> (Suc 0) \\<noteq> \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'", "from False can"], ["proof (chain)\npicking this:\n  \\<sigma> (Suc 0) \\<noteq> \\<sigma> 0\n  canonical_sequence A \\<sigma>", "have vals: \"?val' \\<noteq> ?val\""], ["proof (prove)\nusing this:\n  \\<sigma> (Suc 0) \\<noteq> \\<sigma> 0\n  canonical_sequence A \\<sigma>\n\ngoal (1 subgoal):\n 1. stval (\\<sigma> 1) \\<noteq> stval (\\<sigma> 0)", "by (auto simp: canonical_sequence_def state_sim_def stval_def)"], ["proof (state)\nthis:\n  stval (\\<sigma> 1) \\<noteq> stval (\\<sigma> 0)\n\ngoal (1 subgoal):\n 1. \\<sigma> (Suc 0) \\<noteq> \\<sigma> 0 \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'\n 2. \\<sigma> \\<Turnstile>\\<^sub>p psi' \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>", "assume phi: \"\\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>\""], ["proof (state)\nthis:\n  \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>\n\ngoal (2 subgoals):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'\n 2. \\<sigma> \\<Turnstile>\\<^sub>p psi' \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>", "from fin"], ["proof (chain)\npicking this:\n  finite A", "have 1: \"\\<sigma> \\<Turnstile>\\<^sub>p chi ?val\""], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p chi (stval (\\<sigma> 0))", "by (simp add: chi1 characteristic_holds)"], ["proof (state)\nthis:\n  \\<sigma> \\<Turnstile>\\<^sub>p chi (stval (\\<sigma> 0))\n\ngoal (2 subgoals):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'\n 2. \\<sigma> \\<Turnstile>\\<^sub>p psi' \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>", "from st can"], ["proof (chain)\npicking this:\n  stutter_free \\<sigma>\n  canonical_sequence A \\<sigma>", "have \"stutter_free (\\<sigma>[1..])\" \"canonical_sequence A (\\<sigma>[1..])\""], ["proof (prove)\nusing this:\n  stutter_free \\<sigma>\n  canonical_sequence A \\<sigma>\n\ngoal (1 subgoal):\n 1. stutter_free \\<sigma> [1..] &&& canonical_sequence A \\<sigma> [1..]", "by (auto simp: stutter_free_suffix canonical_suffix)"], ["proof (state)\nthis:\n  stutter_free \\<sigma> [1..]\n  canonical_sequence A \\<sigma> [1..]\n\ngoal (2 subgoals):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'\n 2. \\<sigma> \\<Turnstile>\\<^sub>p psi' \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>", "with phi psi"], ["proof (chain)\npicking this:\n  \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>\n  next_free \\<psi> \\<and>\n  atoms_pltl \\<psi> \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n  stutter_free \\<sigma> [1..]\n  canonical_sequence A \\<sigma> [1..]", "have 2: \"\\<sigma>[1..] \\<Turnstile>\\<^sub>p \\<psi>\""], ["proof (prove)\nusing this:\n  \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>\n  next_free \\<psi> \\<and>\n  atoms_pltl \\<psi> \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n  stutter_free \\<sigma> [1..]\n  canonical_sequence A \\<sigma> [1..]\n\ngoal (1 subgoal):\n 1. \\<sigma> [1..] \\<Turnstile>\\<^sub>p \\<psi>", "by auto"], ["proof (state)\nthis:\n  \\<sigma> [1..] \\<Turnstile>\\<^sub>p \\<psi>\n\ngoal (2 subgoals):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'\n 2. \\<sigma> \\<Turnstile>\\<^sub>p psi' \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>", "from fin"], ["proof (chain)\npicking this:\n  finite A", "have \"\\<sigma>[1..] \\<Turnstile>\\<^sub>p characteristic_formula A ((\\<sigma>[1..]) 0)\""], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. \\<sigma> [1..] \\<Turnstile>\\<^sub>p characteristic_formula A\n   (\\<sigma> [1..] 0)", "by (rule characteristic_holds)"], ["proof (state)\nthis:\n  \\<sigma> [1..] \\<Turnstile>\\<^sub>p characteristic_formula A\n (\\<sigma> [1..] 0)\n\ngoal (2 subgoals):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'\n 2. \\<sigma> \\<Turnstile>\\<^sub>p psi' \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>", "hence 3: \"\\<sigma>[1..] \\<Turnstile>\\<^sub>p chi ?val'\""], ["proof (prove)\nusing this:\n  \\<sigma> [1..] \\<Turnstile>\\<^sub>p characteristic_formula A\n (\\<sigma> [1..] 0)\n\ngoal (1 subgoal):\n 1. \\<sigma> [1..] \\<Turnstile>\\<^sub>p chi (stval (\\<sigma> 1))", "by (simp add: chi1)"], ["proof (state)\nthis:\n  \\<sigma> [1..] \\<Turnstile>\\<^sub>p chi (stval (\\<sigma> 1))\n\ngoal (2 subgoals):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'\n 2. \\<sigma> \\<Turnstile>\\<^sub>p psi' \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>", "from 1 2 3"], ["proof (chain)\npicking this:\n  \\<sigma> \\<Turnstile>\\<^sub>p chi (stval (\\<sigma> 0))\n  \\<sigma> [1..] \\<Turnstile>\\<^sub>p \\<psi>\n  \\<sigma> [1..] \\<Turnstile>\\<^sub>p chi (stval (\\<sigma> 1))", "have \"\\<sigma> \\<Turnstile>\\<^sub>p And_ltlp (chi ?val) ((chi ?val) U\\<^sub>p (And_ltlp \\<psi> (chi ?val')))\"\n          (is \"_ \\<Turnstile>\\<^sub>p ?unt\")"], ["proof (prove)\nusing this:\n  \\<sigma> \\<Turnstile>\\<^sub>p chi (stval (\\<sigma> 0))\n  \\<sigma> [1..] \\<Turnstile>\\<^sub>p \\<psi>\n  \\<sigma> [1..] \\<Turnstile>\\<^sub>p chi (stval (\\<sigma> 1))\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p chi (stval\n  (\\<sigma>\n    0)) and\\<^sub>p chi (stval\n                          (\\<sigma>\n                            0)) U\\<^sub>p (\\<psi> and\\<^sub>p chi\n                         (stval (\\<sigma> 1)))", "by auto"], ["proof (state)\nthis:\n  \\<sigma> \\<Turnstile>\\<^sub>p chi (stval\n(\\<sigma>\n  0)) and\\<^sub>p chi (stval\n                        (\\<sigma>\n                          0)) U\\<^sub>p (\\<psi> and\\<^sub>p chi\n                       (stval (\\<sigma> 1)))\n\ngoal (2 subgoals):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'\n 2. \\<sigma> \\<Turnstile>\\<^sub>p psi' \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>", "moreover"], ["proof (state)\nthis:\n  \\<sigma> \\<Turnstile>\\<^sub>p chi (stval\n(\\<sigma>\n  0)) and\\<^sub>p chi (stval\n                        (\\<sigma>\n                          0)) U\\<^sub>p (\\<psi> and\\<^sub>p chi\n                       (stval (\\<sigma> 1)))\n\ngoal (2 subgoals):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'\n 2. \\<sigma> \\<Turnstile>\\<^sub>p psi' \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>", "from vals"], ["proof (chain)\npicking this:\n  stval (\\<sigma> 1) \\<noteq> stval (\\<sigma> 0)", "have \"?unt \\<in> ?UNT\""], ["proof (prove)\nusing this:\n  stval (\\<sigma> 1) \\<noteq> stval (\\<sigma> 0)\n\ngoal (1 subgoal):\n 1. chi (stval\n          (\\<sigma>\n            0)) and\\<^sub>p chi (stval\n                                  (\\<sigma>\n                                    0)) U\\<^sub>p (\\<psi> and\\<^sub>p chi\n                                 (stval (\\<sigma> 1)))\n    \\<in> {chi val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi\n                                val') |\n           val val'.\n           val \\<subseteq> A \\<and>\n           val' \\<subseteq> A \\<and> val' \\<noteq> val}", "by (auto simp: stval_def)"], ["proof (state)\nthis:\n  chi (stval\n        (\\<sigma>\n          0)) and\\<^sub>p chi (stval\n                                (\\<sigma>\n                                  0)) U\\<^sub>p (\\<psi> and\\<^sub>p chi\n                               (stval (\\<sigma> 1)))\n  \\<in> {chi val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi\n                              val') |\n         val val'.\n         val \\<subseteq> A \\<and>\n         val' \\<subseteq> A \\<and> val' \\<noteq> val}\n\ngoal (2 subgoals):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'\n 2. \\<sigma> \\<Turnstile>\\<^sub>p psi' \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>", "ultimately"], ["proof (chain)\npicking this:\n  \\<sigma> \\<Turnstile>\\<^sub>p chi (stval\n(\\<sigma>\n  0)) and\\<^sub>p chi (stval\n                        (\\<sigma>\n                          0)) U\\<^sub>p (\\<psi> and\\<^sub>p chi\n                       (stval (\\<sigma> 1)))\n  chi (stval\n        (\\<sigma>\n          0)) and\\<^sub>p chi (stval\n                                (\\<sigma>\n                                  0)) U\\<^sub>p (\\<psi> and\\<^sub>p chi\n                               (stval (\\<sigma> 1)))\n  \\<in> {chi val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi\n                              val') |\n         val val'.\n         val \\<subseteq> A \\<and>\n         val' \\<subseteq> A \\<and> val' \\<noteq> val}", "have \"\\<sigma> \\<Turnstile>\\<^sub>p OR ?UNT\""], ["proof (prove)\nusing this:\n  \\<sigma> \\<Turnstile>\\<^sub>p chi (stval\n(\\<sigma>\n  0)) and\\<^sub>p chi (stval\n                        (\\<sigma>\n                          0)) U\\<^sub>p (\\<psi> and\\<^sub>p chi\n                       (stval (\\<sigma> 1)))\n  chi (stval\n        (\\<sigma>\n          0)) and\\<^sub>p chi (stval\n                                (\\<sigma>\n                                  0)) U\\<^sub>p (\\<psi> and\\<^sub>p chi\n                               (stval (\\<sigma> 1)))\n  \\<in> {chi val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi\n                              val') |\n         val val'.\n         val \\<subseteq> A \\<and>\n         val' \\<subseteq> A \\<and> val' \\<noteq> val}\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p OR {chi\n val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |\nval val'.\nval \\<subseteq> A \\<and> val' \\<subseteq> A \\<and> val' \\<noteq> val}", "using fin_UNT[THEN holds_of_OR]"], ["proof (prove)\nusing this:\n  \\<sigma> \\<Turnstile>\\<^sub>p chi (stval\n(\\<sigma>\n  0)) and\\<^sub>p chi (stval\n                        (\\<sigma>\n                          0)) U\\<^sub>p (\\<psi> and\\<^sub>p chi\n                       (stval (\\<sigma> 1)))\n  chi (stval\n        (\\<sigma>\n          0)) and\\<^sub>p chi (stval\n                                (\\<sigma>\n                                  0)) U\\<^sub>p (\\<psi> and\\<^sub>p chi\n                               (stval (\\<sigma> 1)))\n  \\<in> {chi val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi\n                              val') |\n         val val'.\n         val \\<subseteq> A \\<and>\n         val' \\<subseteq> A \\<and> val' \\<noteq> val}\n  ?\\<sigma> \\<Turnstile>\\<^sub>p OR {chi\nval and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |\n                                     val val'.\n                                     val \\<subseteq> A \\<and>\n                                     val' \\<subseteq> A \\<and>\n                                     val' \\<noteq> val} =\n  (\\<exists>\\<phi>\n            \\<in>{chi val and\\<^sub>p chi\n val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |\n                  val val'.\n                  val \\<subseteq> A \\<and>\n                  val' \\<subseteq> A \\<and> val' \\<noteq> val}.\n      ?\\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p OR {chi\n val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |\nval val'.\nval \\<subseteq> A \\<and> val' \\<subseteq> A \\<and> val' \\<noteq> val}", "by blast"], ["proof (state)\nthis:\n  \\<sigma> \\<Turnstile>\\<^sub>p OR {chi val and\\<^sub>p chi\n                   val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |\n                                    val val'.\n                                    val \\<subseteq> A \\<and>\n                                    val' \\<subseteq> A \\<and>\n                                    val' \\<noteq> val}\n\ngoal (2 subgoals):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p psi'\n 2. \\<sigma> \\<Turnstile>\\<^sub>p psi' \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>", "thus \"\\<sigma> \\<Turnstile>\\<^sub>p psi'\""], ["proof (prove)\nusing this:\n  \\<sigma> \\<Turnstile>\\<^sub>p OR {chi val and\\<^sub>p chi\n                   val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |\n                                    val val'.\n                                    val \\<subseteq> A \\<and>\n                                    val' \\<subseteq> A \\<and>\n                                    val' \\<noteq> val}\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p psi'", "by (simp add: psi'_def)"], ["proof (state)\nthis:\n  \\<sigma> \\<Turnstile>\\<^sub>p psi'\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p psi' \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p psi' \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>", "assume psi': \"\\<sigma> \\<Turnstile>\\<^sub>p psi'\""], ["proof (state)\nthis:\n  \\<sigma> \\<Turnstile>\\<^sub>p psi'\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p psi' \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>", "have \"\\<not>(\\<sigma> \\<Turnstile>\\<^sub>p OR ?ALW)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> \\<sigma> \\<Turnstile>\\<^sub>p OR\n    {G\\<^sub>p chi val |val. val \\<subseteq> A}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p OR {G\\<^sub>p chi val |val.\nval \\<subseteq> A} \\<Longrightarrow>\n    False", "assume \"\\<sigma> \\<Turnstile>\\<^sub>p OR ?ALW\""], ["proof (state)\nthis:\n  \\<sigma> \\<Turnstile>\\<^sub>p OR {G\\<^sub>p chi val |val.\n                                    val \\<subseteq> A}\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p OR {G\\<^sub>p chi val |val.\nval \\<subseteq> A} \\<Longrightarrow>\n    False", "with fin"], ["proof (chain)\npicking this:\n  finite A\n  \\<sigma> \\<Turnstile>\\<^sub>p OR {G\\<^sub>p chi val |val.\n                                    val \\<subseteq> A}", "obtain val where 1: \"val \\<subseteq> A\" and 2: \"\\<forall>n. (\\<sigma>[n..] \\<Turnstile>\\<^sub>p chi val)\""], ["proof (prove)\nusing this:\n  finite A\n  \\<sigma> \\<Turnstile>\\<^sub>p OR {G\\<^sub>p chi val |val.\n                                    val \\<subseteq> A}\n\ngoal (1 subgoal):\n 1. (\\<And>val.\n        \\<lbrakk>val \\<subseteq> A;\n         \\<forall>n. \\<sigma> [n..] \\<Turnstile>\\<^sub>p chi val\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (force simp: finite_subset)"], ["proof (state)\nthis:\n  val \\<subseteq> A\n  \\<forall>n. \\<sigma> [n..] \\<Turnstile>\\<^sub>p chi val\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p OR {G\\<^sub>p chi val |val.\nval \\<subseteq> A} \\<Longrightarrow>\n    False", "from 2"], ["proof (chain)\npicking this:\n  \\<forall>n. \\<sigma> [n..] \\<Turnstile>\\<^sub>p chi val", "have \"\\<sigma>[0..] \\<Turnstile>\\<^sub>p chi val\""], ["proof (prove)\nusing this:\n  \\<forall>n. \\<sigma> [n..] \\<Turnstile>\\<^sub>p chi val\n\ngoal (1 subgoal):\n 1. \\<sigma> [0..] \\<Turnstile>\\<^sub>p chi val", ".."], ["proof (state)\nthis:\n  \\<sigma> [0..] \\<Turnstile>\\<^sub>p chi val\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p OR {G\\<^sub>p chi val |val.\nval \\<subseteq> A} \\<Longrightarrow>\n    False", "with 1"], ["proof (chain)\npicking this:\n  val \\<subseteq> A\n  \\<sigma> [0..] \\<Turnstile>\\<^sub>p chi val", "have \"val = ?val\""], ["proof (prove)\nusing this:\n  val \\<subseteq> A\n  \\<sigma> [0..] \\<Turnstile>\\<^sub>p chi val\n\ngoal (1 subgoal):\n 1. val = stval (\\<sigma> 0)", "by (simp add: chi2)"], ["proof (state)\nthis:\n  val = stval (\\<sigma> 0)\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p OR {G\\<^sub>p chi val |val.\nval \\<subseteq> A} \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  val = stval (\\<sigma> 0)\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p OR {G\\<^sub>p chi val |val.\nval \\<subseteq> A} \\<Longrightarrow>\n    False", "from 2"], ["proof (chain)\npicking this:\n  \\<forall>n. \\<sigma> [n..] \\<Turnstile>\\<^sub>p chi val", "have \"\\<sigma>[1..] \\<Turnstile>\\<^sub>p chi val\""], ["proof (prove)\nusing this:\n  \\<forall>n. \\<sigma> [n..] \\<Turnstile>\\<^sub>p chi val\n\ngoal (1 subgoal):\n 1. \\<sigma> [1..] \\<Turnstile>\\<^sub>p chi val", ".."], ["proof (state)\nthis:\n  \\<sigma> [1..] \\<Turnstile>\\<^sub>p chi val\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p OR {G\\<^sub>p chi val |val.\nval \\<subseteq> A} \\<Longrightarrow>\n    False", "with 1"], ["proof (chain)\npicking this:\n  val \\<subseteq> A\n  \\<sigma> [1..] \\<Turnstile>\\<^sub>p chi val", "have \"val = ?val'\""], ["proof (prove)\nusing this:\n  val \\<subseteq> A\n  \\<sigma> [1..] \\<Turnstile>\\<^sub>p chi val\n\ngoal (1 subgoal):\n 1. val = stval (\\<sigma> 1)", "by (force dest: chi2)"], ["proof (state)\nthis:\n  val = stval (\\<sigma> 1)\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p OR {G\\<^sub>p chi val |val.\nval \\<subseteq> A} \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  val = stval (\\<sigma> 0)\n  val = stval (\\<sigma> 1)", "show \"False\""], ["proof (prove)\nusing this:\n  val = stval (\\<sigma> 0)\n  val = stval (\\<sigma> 1)\n\ngoal (1 subgoal):\n 1. False", "using vals"], ["proof (prove)\nusing this:\n  val = stval (\\<sigma> 0)\n  val = stval (\\<sigma> 1)\n  stval (\\<sigma> 1) \\<noteq> stval (\\<sigma> 0)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> \\<sigma> \\<Turnstile>\\<^sub>p OR\n  {G\\<^sub>p chi val |val. val \\<subseteq> A}\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p psi' \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>", "with psi'"], ["proof (chain)\npicking this:\n  \\<sigma> \\<Turnstile>\\<^sub>p psi'\n  \\<not> \\<sigma> \\<Turnstile>\\<^sub>p OR\n  {G\\<^sub>p chi val |val. val \\<subseteq> A}", "have \"\\<sigma> \\<Turnstile>\\<^sub>p OR ?UNT\""], ["proof (prove)\nusing this:\n  \\<sigma> \\<Turnstile>\\<^sub>p psi'\n  \\<not> \\<sigma> \\<Turnstile>\\<^sub>p OR\n  {G\\<^sub>p chi val |val. val \\<subseteq> A}\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p OR {chi\n val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |\nval val'.\nval \\<subseteq> A \\<and> val' \\<subseteq> A \\<and> val' \\<noteq> val}", "by (simp add: psi'_def)"], ["proof (state)\nthis:\n  \\<sigma> \\<Turnstile>\\<^sub>p OR {chi val and\\<^sub>p chi\n                   val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |\n                                    val val'.\n                                    val \\<subseteq> A \\<and>\n                                    val' \\<subseteq> A \\<and>\n                                    val' \\<noteq> val}\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p psi' \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>", "with fin_UNT"], ["proof (chain)\npicking this:\n  finite\n   {chi val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |val\n    val'.\n    val \\<subseteq> A \\<and> val' \\<subseteq> A \\<and> val' \\<noteq> val}\n  \\<sigma> \\<Turnstile>\\<^sub>p OR {chi val and\\<^sub>p chi\n                   val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |\n                                    val val'.\n                                    val \\<subseteq> A \\<and>\n                                    val' \\<subseteq> A \\<and>\n                                    val' \\<noteq> val}", "obtain val val' k where\n          val: \"val \\<subseteq> A\" \"val' \\<subseteq> A\" \"val' \\<noteq> val\" and\n          now: \"\\<sigma> \\<Turnstile>\\<^sub>p chi val\" and\n          k: \"\\<sigma>[k..] \\<Turnstile>\\<^sub>p \\<psi>\" \"\\<sigma>[k..] \\<Turnstile>\\<^sub>p chi val'\" and\n          i: \"\\<forall>i<k. (\\<sigma>[i..] \\<Turnstile>\\<^sub>p chi val)\""], ["proof (prove)\nusing this:\n  finite\n   {chi val and\\<^sub>p chi val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |val\n    val'.\n    val \\<subseteq> A \\<and> val' \\<subseteq> A \\<and> val' \\<noteq> val}\n  \\<sigma> \\<Turnstile>\\<^sub>p OR {chi val and\\<^sub>p chi\n                   val U\\<^sub>p (\\<psi> and\\<^sub>p chi val') |\n                                    val val'.\n                                    val \\<subseteq> A \\<and>\n                                    val' \\<subseteq> A \\<and>\n                                    val' \\<noteq> val}\n\ngoal (1 subgoal):\n 1. (\\<And>val val' k.\n        \\<lbrakk>val \\<subseteq> A; val' \\<subseteq> A; val' \\<noteq> val;\n         \\<sigma> \\<Turnstile>\\<^sub>p chi val;\n         \\<sigma> [k..] \\<Turnstile>\\<^sub>p \\<psi>;\n         \\<sigma> [k..] \\<Turnstile>\\<^sub>p chi val';\n         \\<forall>i<k. \\<sigma> [i..] \\<Turnstile>\\<^sub>p chi val\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto (blast+)?"], ["proof (state)\nthis:\n  val \\<subseteq> A\n  val' \\<subseteq> A\n  val' \\<noteq> val\n  \\<sigma> \\<Turnstile>\\<^sub>p chi val\n  \\<sigma> [k..] \\<Turnstile>\\<^sub>p \\<psi>\n  \\<sigma> [k..] \\<Turnstile>\\<^sub>p chi val'\n  \\<forall>i<k. \\<sigma> [i..] \\<Turnstile>\\<^sub>p chi val\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p psi' \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>", "(* FRAGILE: similar as above *)"], ["proof (state)\nthis:\n  val \\<subseteq> A\n  val' \\<subseteq> A\n  val' \\<noteq> val\n  \\<sigma> \\<Turnstile>\\<^sub>p chi val\n  \\<sigma> [k..] \\<Turnstile>\\<^sub>p \\<psi>\n  \\<sigma> [k..] \\<Turnstile>\\<^sub>p chi val'\n  \\<forall>i<k. \\<sigma> [i..] \\<Turnstile>\\<^sub>p chi val\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p psi' \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>", "from val now"], ["proof (chain)\npicking this:\n  val \\<subseteq> A\n  val' \\<subseteq> A\n  val' \\<noteq> val\n  \\<sigma> \\<Turnstile>\\<^sub>p chi val", "have 1: \"val = ?val\""], ["proof (prove)\nusing this:\n  val \\<subseteq> A\n  val' \\<subseteq> A\n  val' \\<noteq> val\n  \\<sigma> \\<Turnstile>\\<^sub>p chi val\n\ngoal (1 subgoal):\n 1. val = stval (\\<sigma> 0)", "by (simp add: chi2)"], ["proof (state)\nthis:\n  val = stval (\\<sigma> 0)\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p psi' \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>", "have 2: \"k \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<noteq> 0", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. k = 0 \\<Longrightarrow> False", "assume \"k=0\""], ["proof (state)\nthis:\n  k = 0\n\ngoal (1 subgoal):\n 1. k = 0 \\<Longrightarrow> False", "with val k"], ["proof (chain)\npicking this:\n  val \\<subseteq> A\n  val' \\<subseteq> A\n  val' \\<noteq> val\n  \\<sigma> [k..] \\<Turnstile>\\<^sub>p \\<psi>\n  \\<sigma> [k..] \\<Turnstile>\\<^sub>p chi val'\n  k = 0", "have \"val' = ?val\""], ["proof (prove)\nusing this:\n  val \\<subseteq> A\n  val' \\<subseteq> A\n  val' \\<noteq> val\n  \\<sigma> [k..] \\<Turnstile>\\<^sub>p \\<psi>\n  \\<sigma> [k..] \\<Turnstile>\\<^sub>p chi val'\n  k = 0\n\ngoal (1 subgoal):\n 1. val' = stval (\\<sigma> 0)", "by (simp add: chi2)"], ["proof (state)\nthis:\n  val' = stval (\\<sigma> 0)\n\ngoal (1 subgoal):\n 1. k = 0 \\<Longrightarrow> False", "with 1 \\<open>val' \\<noteq> val\\<close>"], ["proof (chain)\npicking this:\n  val = stval (\\<sigma> 0)\n  val' \\<noteq> val\n  val' = stval (\\<sigma> 0)", "show \"False\""], ["proof (prove)\nusing this:\n  val = stval (\\<sigma> 0)\n  val' \\<noteq> val\n  val' = stval (\\<sigma> 0)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p psi' \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>", "have 3: \"k \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<le> 1", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> k \\<le> 1 \\<Longrightarrow> False", "assume \"\\<not>(k \\<le> 1)\""], ["proof (state)\nthis:\n  \\<not> k \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<not> k \\<le> 1 \\<Longrightarrow> False", "with i"], ["proof (chain)\npicking this:\n  \\<forall>i<k. \\<sigma> [i..] \\<Turnstile>\\<^sub>p chi val\n  \\<not> k \\<le> 1", "have \"\\<sigma>[1..] \\<Turnstile>\\<^sub>p chi val\""], ["proof (prove)\nusing this:\n  \\<forall>i<k. \\<sigma> [i..] \\<Turnstile>\\<^sub>p chi val\n  \\<not> k \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<sigma> [1..] \\<Turnstile>\\<^sub>p chi val", "by simp"], ["proof (state)\nthis:\n  \\<sigma> [1..] \\<Turnstile>\\<^sub>p chi val\n\ngoal (1 subgoal):\n 1. \\<not> k \\<le> 1 \\<Longrightarrow> False", "with 1"], ["proof (chain)\npicking this:\n  val = stval (\\<sigma> 0)\n  \\<sigma> [1..] \\<Turnstile>\\<^sub>p chi val", "have \"\\<sigma>[1..] \\<Turnstile>\\<^sub>p characteristic_formula A (\\<sigma> 0)\""], ["proof (prove)\nusing this:\n  val = stval (\\<sigma> 0)\n  \\<sigma> [1..] \\<Turnstile>\\<^sub>p chi val\n\ngoal (1 subgoal):\n 1. \\<sigma> [1..] \\<Turnstile>\\<^sub>p characteristic_formula A\n   (\\<sigma> 0)", "by (simp add: chi1)"], ["proof (state)\nthis:\n  \\<sigma> [1..] \\<Turnstile>\\<^sub>p characteristic_formula A (\\<sigma> 0)\n\ngoal (1 subgoal):\n 1. \\<not> k \\<le> 1 \\<Longrightarrow> False", "hence \"(\\<sigma> 0) ~A~ ((\\<sigma>[1..]) 0)\""], ["proof (prove)\nusing this:\n  \\<sigma> [1..] \\<Turnstile>\\<^sub>p characteristic_formula A (\\<sigma> 0)\n\ngoal (1 subgoal):\n 1. \\<sigma> 0 ~A~ \\<sigma> [1..] 0", "using characteristic_state_sim[OF fin]"], ["proof (prove)\nusing this:\n  \\<sigma> [1..] \\<Turnstile>\\<^sub>p characteristic_formula A (\\<sigma> 0)\n  (?\\<sigma> 0 ~A~ ?\\<tau> 0) =\n  ?\\<tau> \\<Turnstile>\\<^sub>p characteristic_formula A (?\\<sigma> 0)\n\ngoal (1 subgoal):\n 1. \\<sigma> 0 ~A~ \\<sigma> [1..] 0", "by blast"], ["proof (state)\nthis:\n  \\<sigma> 0 ~A~ \\<sigma> [1..] 0\n\ngoal (1 subgoal):\n 1. \\<not> k \\<le> 1 \\<Longrightarrow> False", "with can"], ["proof (chain)\npicking this:\n  canonical_sequence A \\<sigma>\n  \\<sigma> 0 ~A~ \\<sigma> [1..] 0", "have \"\\<sigma> 0 = \\<sigma> 1\""], ["proof (prove)\nusing this:\n  canonical_sequence A \\<sigma>\n  \\<sigma> 0 ~A~ \\<sigma> [1..] 0\n\ngoal (1 subgoal):\n 1. \\<sigma> 0 = \\<sigma> 1", "by (simp add: canonical_sequence_def)"], ["proof (state)\nthis:\n  \\<sigma> 0 = \\<sigma> 1\n\ngoal (1 subgoal):\n 1. \\<not> k \\<le> 1 \\<Longrightarrow> False", "with \\<open>\\<sigma> (Suc 0) \\<noteq> \\<sigma> 0\\<close>"], ["proof (chain)\npicking this:\n  \\<sigma> (Suc 0) \\<noteq> \\<sigma> 0\n  \\<sigma> 0 = \\<sigma> 1", "show \"False\""], ["proof (prove)\nusing this:\n  \\<sigma> (Suc 0) \\<noteq> \\<sigma> 0\n  \\<sigma> 0 = \\<sigma> 1\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  k \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p psi' \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>", "from 2 3"], ["proof (chain)\npicking this:\n  k \\<noteq> 0\n  k \\<le> 1", "have \"k=1\""], ["proof (prove)\nusing this:\n  k \\<noteq> 0\n  k \\<le> 1\n\ngoal (1 subgoal):\n 1. k = 1", "by simp"], ["proof (state)\nthis:\n  k = 1\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p psi' \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>", "moreover"], ["proof (state)\nthis:\n  k = 1\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p psi' \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>", "from st can"], ["proof (chain)\npicking this:\n  stutter_free \\<sigma>\n  canonical_sequence A \\<sigma>", "have \"stutter_free (\\<sigma>[1..])\" \"canonical_sequence A (\\<sigma>[1..])\""], ["proof (prove)\nusing this:\n  stutter_free \\<sigma>\n  canonical_sequence A \\<sigma>\n\ngoal (1 subgoal):\n 1. stutter_free \\<sigma> [1..] &&& canonical_sequence A \\<sigma> [1..]", "by (auto simp: stutter_free_suffix canonical_suffix)"], ["proof (state)\nthis:\n  stutter_free \\<sigma> [1..]\n  canonical_sequence A \\<sigma> [1..]\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p psi' \\<Longrightarrow>\n    \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>", "ultimately"], ["proof (chain)\npicking this:\n  k = 1\n  stutter_free \\<sigma> [1..]\n  canonical_sequence A \\<sigma> [1..]", "show \"\\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>\""], ["proof (prove)\nusing this:\n  k = 1\n  stutter_free \\<sigma> [1..]\n  canonical_sequence A \\<sigma> [1..]\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>", "using \\<open>\\<sigma>[k..] \\<Turnstile>\\<^sub>p \\<psi>\\<close> psi"], ["proof (prove)\nusing this:\n  k = 1\n  stutter_free \\<sigma> [1..]\n  canonical_sequence A \\<sigma> [1..]\n  \\<sigma> [k..] \\<Turnstile>\\<^sub>p \\<psi>\n  next_free \\<psi> \\<and>\n  atoms_pltl \\<psi> \\<subseteq> A \\<and>\n  (\\<forall>\\<sigma>.\n      stutter_free \\<sigma> \\<and>\n      canonical_sequence A \\<sigma> \\<longrightarrow>\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>", "by auto"], ["proof (state)\nthis:\n  \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n  \\<sigma> \\<Turnstile>\\<^sub>p psi'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n  \\<sigma> \\<Turnstile>\\<^sub>p psi'\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>stutter_free ?\\<sigma>2; canonical_sequence A ?\\<sigma>2\\<rbrakk>\n  \\<Longrightarrow> ?\\<sigma>2 \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n                    ?\\<sigma>2 \\<Turnstile>\\<^sub>p psi'\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>atoms_pltl \\<phi> \\<subseteq> A \\<Longrightarrow>\n                \\<exists>\\<psi>.\n                   next_free \\<psi> \\<and>\n                   atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                   (\\<forall>\\<sigma>.\n                       stutter_free \\<sigma> \\<and>\n                       canonical_sequence A \\<sigma> \\<longrightarrow>\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                       \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>);\n        atoms_pltl (X\\<^sub>p \\<phi>) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<psi>.\n                            next_free \\<psi> \\<and>\n                            atoms_pltl \\<psi> \\<subseteq> A \\<and>\n                            (\\<forall>\\<sigma>.\n                                stutter_free \\<sigma> \\<and>\n                                canonical_sequence A\n                                 \\<sigma> \\<longrightarrow>\n                                \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n                                \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)", "with nf atoms_pltl"], ["proof (chain)\npicking this:\n  next_free psi'\n  atoms_pltl psi' \\<subseteq> A\n  \\<lbrakk>stutter_free ?\\<sigma>2; canonical_sequence A ?\\<sigma>2\\<rbrakk>\n  \\<Longrightarrow> ?\\<sigma>2 \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n                    ?\\<sigma>2 \\<Turnstile>\\<^sub>p psi'", "show \"\\<exists>\\<psi>'. ?P (X\\<^sub>p \\<phi>) \\<psi>'\""], ["proof (prove)\nusing this:\n  next_free psi'\n  atoms_pltl psi' \\<subseteq> A\n  \\<lbrakk>stutter_free ?\\<sigma>2; canonical_sequence A ?\\<sigma>2\\<rbrakk>\n  \\<Longrightarrow> ?\\<sigma>2 \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi> =\n                    ?\\<sigma>2 \\<Turnstile>\\<^sub>p psi'\n\ngoal (1 subgoal):\n 1. \\<exists>\\<psi>'.\n       next_free \\<psi>' \\<and>\n       atoms_pltl \\<psi>' \\<subseteq> A \\<and>\n       (\\<forall>\\<sigma>.\n           stutter_free \\<sigma> \\<and>\n           canonical_sequence A \\<sigma> \\<longrightarrow>\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>' =\n           \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)", "by blast"], ["proof (state)\nthis:\n  \\<exists>\\<psi>'.\n     next_free \\<psi>' \\<and>\n     atoms_pltl \\<psi>' \\<subseteq> A \\<and>\n     (\\<forall>\\<sigma>.\n         stutter_free \\<sigma> \\<and>\n         canonical_sequence A \\<sigma> \\<longrightarrow>\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>' =\n         \\<sigma> \\<Turnstile>\\<^sub>p X\\<^sub>p \\<phi>)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Comparing the definition of the next-free formula in the case of\n  formulas \\<open>X\\<^sub>p \\<phi>\\<close> with the one that appears in~\\cite{peled:ltl-x},\n  there is a subtle difference. Peled and Wilke define the second disjunct as\n  a disjunction of formulas\n%\n  \\begin{center}\\(\n    \\<open>(chi val) U\\<^sub>p (\\<psi> and\\<^sub>p (chi val'))\\<close>\n  \\)\\end{center}\n%\n  for subsets \\<open>val, val' \\<subseteq> A\\<close> whereas we conjoin the formula\n  \\<open>chi val\\<close> to the ``until'' formula. This conjunct is indeed\n  necessary in order to rule out the case of the ``until'' formula\n  being true because of \\<open>chi val'\\<close> being true immediately.\n  The subtle error in the definition of the formula was acknowledged \n  by Peled and Wilke and apparently had not been noticed since the \n  publication of~\\cite{peled:ltl-x} in 1996 (which has been cited more\n  than a hundred times according to Google Scholar). Although the error\n  was corrected easily, the fact that authors, reviewers, and readers\n  appear to have missed it for so long underscores the usefulness of\n  formal proofs.\n\n  We now show that any stuttering invariant PLTL formula\n  can be expressed without the \\<open>X\\<^sub>p\\<close> operator.\n\\<close>"], ["", "theorem stutter_invariant_next_free:\n  assumes phi: \"stutter_invariant \\<phi>\"\n  obtains \\<psi> where \"next_free \\<psi>\" \"atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi>\"\n                  \"\\<forall>\\<sigma>. (\\<sigma> \\<Turnstile>\\<^sub>p \\<psi>) = (\\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<psi>.\n        \\<lbrakk>next_free \\<psi>;\n         atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi>;\n         \\<forall>\\<sigma>.\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>\\<psi>.\n        \\<lbrakk>next_free \\<psi>;\n         atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi>;\n         \\<forall>\\<sigma>.\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"atoms_pltl \\<phi> \\<subseteq> atoms_pltl \\<phi>\" \"finite (atoms_pltl \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atoms_pltl \\<phi> \\<subseteq> atoms_pltl \\<phi> &&&\n    finite (atoms_pltl \\<phi>)", "by simp_all"], ["proof (state)\nthis:\n  atoms_pltl \\<phi> \\<subseteq> atoms_pltl \\<phi>\n  finite (atoms_pltl \\<phi>)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<psi>.\n        \\<lbrakk>next_free \\<psi>;\n         atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi>;\n         \\<forall>\\<sigma>.\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  atoms_pltl \\<phi> \\<subseteq> atoms_pltl \\<phi>\n  finite (atoms_pltl \\<phi>)", "obtain \\<psi> where\n    psi: \"next_free \\<psi>\" \"atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi>\" and\n    equiv: \"\\<forall>\\<sigma>. stutter_free \\<sigma> \\<and> canonical_sequence (atoms_pltl \\<phi>) \\<sigma> \\<longrightarrow> (\\<sigma> \\<Turnstile>\\<^sub>p \\<psi>) = (\\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\""], ["proof (prove)\nusing this:\n  atoms_pltl \\<phi> \\<subseteq> atoms_pltl \\<phi>\n  finite (atoms_pltl \\<phi>)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<psi>.\n        \\<lbrakk>next_free \\<psi>;\n         atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi>;\n         \\<forall>\\<sigma>.\n            stutter_free \\<sigma> \\<and>\n            canonical_sequence (atoms_pltl \\<phi>)\n             \\<sigma> \\<longrightarrow>\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (blast dest: ex_next_free_stutter_free_canonical)"], ["proof (state)\nthis:\n  next_free \\<psi>\n  atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi>\n  \\<forall>\\<sigma>.\n     stutter_free \\<sigma> \\<and>\n     canonical_sequence (atoms_pltl \\<phi>) \\<sigma> \\<longrightarrow>\n     \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n     \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<psi>.\n        \\<lbrakk>next_free \\<psi>;\n         atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi>;\n         \\<forall>\\<sigma>.\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from \\<open>next_free \\<psi>\\<close>"], ["proof (chain)\npicking this:\n  next_free \\<psi>", "have sinv: \"stutter_invariant \\<psi>\""], ["proof (prove)\nusing this:\n  next_free \\<psi>\n\ngoal (1 subgoal):\n 1. stutter_invariant \\<psi>", "by (rule next_free_stutter_invariant)"], ["proof (state)\nthis:\n  stutter_invariant \\<psi>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<psi>.\n        \\<lbrakk>next_free \\<psi>;\n         atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi>;\n         \\<forall>\\<sigma>.\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "{"], ["proof (state)\nthis:\n  stutter_invariant \\<psi>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<psi>.\n        \\<lbrakk>next_free \\<psi>;\n         atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi>;\n         \\<forall>\\<sigma>.\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "fix \\<sigma>"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>\\<psi>.\n        \\<lbrakk>next_free \\<psi>;\n         atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi>;\n         \\<forall>\\<sigma>.\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain \\<tau> where 1: \"\\<tau> \\<simeq> atoms_pltl \\<phi> \\<simeq> \\<sigma>\" and 2: \"canonical_sequence (atoms_pltl \\<phi>) \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<tau>.\n        \\<lbrakk>\\<tau> \\<simeq>atoms_pltl \\<phi>\\<simeq> \\<sigma>;\n         canonical_sequence (atoms_pltl \\<phi>) \\<tau>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule canonical_exists)"], ["proof (state)\nthis:\n  \\<tau> \\<simeq>atoms_pltl \\<phi>\\<simeq> \\<sigma>\n  canonical_sequence (atoms_pltl \\<phi>) \\<tau>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<psi>.\n        \\<lbrakk>next_free \\<psi>;\n         atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi>;\n         \\<forall>\\<sigma>.\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from 1 \\<open>atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi>\\<close>"], ["proof (chain)\npicking this:\n  \\<tau> \\<simeq>atoms_pltl \\<phi>\\<simeq> \\<sigma>\n  atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi>", "have 3: \"\\<tau> \\<simeq> atoms_pltl \\<psi> \\<simeq> \\<sigma>\""], ["proof (prove)\nusing this:\n  \\<tau> \\<simeq>atoms_pltl \\<phi>\\<simeq> \\<sigma>\n  atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi>\n\ngoal (1 subgoal):\n 1. \\<tau> \\<simeq>atoms_pltl \\<psi>\\<simeq> \\<sigma>", "by (rule seq_sim_mono)"], ["proof (state)\nthis:\n  \\<tau> \\<simeq>atoms_pltl \\<psi>\\<simeq> \\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<psi>.\n        \\<lbrakk>next_free \\<psi>;\n         atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi>;\n         \\<forall>\\<sigma>.\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from 1"], ["proof (chain)\npicking this:\n  \\<tau> \\<simeq>atoms_pltl \\<phi>\\<simeq> \\<sigma>", "have \"(\\<sigma> \\<Turnstile>\\<^sub>p \\<phi>) = (\\<tau> \\<Turnstile>\\<^sub>p \\<phi>)\""], ["proof (prove)\nusing this:\n  \\<tau> \\<simeq>atoms_pltl \\<phi>\\<simeq> \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> =\n    \\<tau> \\<Turnstile>\\<^sub>p \\<phi>", "by (simp add: pltl_seq_sim)"], ["proof (state)\nthis:\n  \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> = \\<tau> \\<Turnstile>\\<^sub>p \\<phi>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<psi>.\n        \\<lbrakk>next_free \\<psi>;\n         atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi>;\n         \\<forall>\\<sigma>.\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> = \\<tau> \\<Turnstile>\\<^sub>p \\<phi>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<psi>.\n        \\<lbrakk>next_free \\<psi>;\n         atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi>;\n         \\<forall>\\<sigma>.\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from phi stutter_reduced_equivalent"], ["proof (chain)\npicking this:\n  stutter_invariant \\<phi>\n  \\<natural>?\\<sigma> \\<approx> ?\\<sigma>", "have \"... = (\\<natural>\\<tau> \\<Turnstile>\\<^sub>p \\<phi>)\""], ["proof (prove)\nusing this:\n  stutter_invariant \\<phi>\n  \\<natural>?\\<sigma> \\<approx> ?\\<sigma>\n\ngoal (1 subgoal):\n 1. \\<tau> \\<Turnstile>\\<^sub>p \\<phi> =\n    \\<natural>\\<tau> \\<Turnstile>\\<^sub>p \\<phi>", "by auto"], ["proof (state)\nthis:\n  \\<tau> \\<Turnstile>\\<^sub>p \\<phi> =\n  \\<natural>\\<tau> \\<Turnstile>\\<^sub>p \\<phi>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<psi>.\n        \\<lbrakk>next_free \\<psi>;\n         atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi>;\n         \\<forall>\\<sigma>.\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  \\<tau> \\<Turnstile>\\<^sub>p \\<phi> =\n  \\<natural>\\<tau> \\<Turnstile>\\<^sub>p \\<phi>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<psi>.\n        \\<lbrakk>next_free \\<psi>;\n         atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi>;\n         \\<forall>\\<sigma>.\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from 2[THEN canonical_reduced] equiv stutter_reduced_stutter_free"], ["proof (chain)\npicking this:\n  canonical_sequence (atoms_pltl \\<phi>) (\\<natural>\\<tau>)\n  \\<forall>\\<sigma>.\n     stutter_free \\<sigma> \\<and>\n     canonical_sequence (atoms_pltl \\<phi>) \\<sigma> \\<longrightarrow>\n     \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n     \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\n  stutter_free (\\<natural>?\\<sigma>)", "have \"... = (\\<natural>\\<tau> \\<Turnstile>\\<^sub>p \\<psi>)\""], ["proof (prove)\nusing this:\n  canonical_sequence (atoms_pltl \\<phi>) (\\<natural>\\<tau>)\n  \\<forall>\\<sigma>.\n     stutter_free \\<sigma> \\<and>\n     canonical_sequence (atoms_pltl \\<phi>) \\<sigma> \\<longrightarrow>\n     \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n     \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\n  stutter_free (\\<natural>?\\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<natural>\\<tau> \\<Turnstile>\\<^sub>p \\<phi> =\n    \\<natural>\\<tau> \\<Turnstile>\\<^sub>p \\<psi>", "by auto"], ["proof (state)\nthis:\n  \\<natural>\\<tau> \\<Turnstile>\\<^sub>p \\<phi> =\n  \\<natural>\\<tau> \\<Turnstile>\\<^sub>p \\<psi>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<psi>.\n        \\<lbrakk>next_free \\<psi>;\n         atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi>;\n         \\<forall>\\<sigma>.\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  \\<natural>\\<tau> \\<Turnstile>\\<^sub>p \\<phi> =\n  \\<natural>\\<tau> \\<Turnstile>\\<^sub>p \\<psi>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<psi>.\n        \\<lbrakk>next_free \\<psi>;\n         atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi>;\n         \\<forall>\\<sigma>.\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from sinv stutter_reduced_equivalent"], ["proof (chain)\npicking this:\n  stutter_invariant \\<psi>\n  \\<natural>?\\<sigma> \\<approx> ?\\<sigma>", "have \"... = (\\<tau> \\<Turnstile>\\<^sub>p \\<psi>)\""], ["proof (prove)\nusing this:\n  stutter_invariant \\<psi>\n  \\<natural>?\\<sigma> \\<approx> ?\\<sigma>\n\ngoal (1 subgoal):\n 1. \\<natural>\\<tau> \\<Turnstile>\\<^sub>p \\<psi> =\n    \\<tau> \\<Turnstile>\\<^sub>p \\<psi>", "by auto"], ["proof (state)\nthis:\n  \\<natural>\\<tau> \\<Turnstile>\\<^sub>p \\<psi> =\n  \\<tau> \\<Turnstile>\\<^sub>p \\<psi>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<psi>.\n        \\<lbrakk>next_free \\<psi>;\n         atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi>;\n         \\<forall>\\<sigma>.\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  \\<natural>\\<tau> \\<Turnstile>\\<^sub>p \\<psi> =\n  \\<tau> \\<Turnstile>\\<^sub>p \\<psi>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<psi>.\n        \\<lbrakk>next_free \\<psi>;\n         atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi>;\n         \\<forall>\\<sigma>.\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from 3"], ["proof (chain)\npicking this:\n  \\<tau> \\<simeq>atoms_pltl \\<psi>\\<simeq> \\<sigma>", "have \"... = (\\<sigma> \\<Turnstile>\\<^sub>p \\<psi>)\""], ["proof (prove)\nusing this:\n  \\<tau> \\<simeq>atoms_pltl \\<psi>\\<simeq> \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<tau> \\<Turnstile>\\<^sub>p \\<psi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>", "by (simp add: pltl_seq_sim)"], ["proof (state)\nthis:\n  \\<tau> \\<Turnstile>\\<^sub>p \\<psi> = \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<psi>.\n        \\<lbrakk>next_free \\<psi>;\n         atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi>;\n         \\<forall>\\<sigma>.\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "finally"], ["proof (chain)\npicking this:\n  \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> =\n  \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>", "have \"(\\<sigma> \\<Turnstile>\\<^sub>p \\<psi>) = (\\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\""], ["proof (prove)\nusing this:\n  \\<sigma> \\<Turnstile>\\<^sub>p \\<phi> =\n  \\<sigma> \\<Turnstile>\\<^sub>p \\<psi>\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n    \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>", "by (rule sym)"], ["proof (state)\nthis:\n  \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n  \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<psi>.\n        \\<lbrakk>next_free \\<psi>;\n         atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi>;\n         \\<forall>\\<sigma>.\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "}"], ["proof (state)\nthis:\n  ?\\<sigma>2 \\<Turnstile>\\<^sub>p \\<psi> =\n  ?\\<sigma>2 \\<Turnstile>\\<^sub>p \\<phi>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<psi>.\n        \\<lbrakk>next_free \\<psi>;\n         atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi>;\n         \\<forall>\\<sigma>.\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with psi that"], ["proof (chain)\npicking this:\n  next_free \\<psi>\n  atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi>\n  \\<lbrakk>next_free ?\\<psi>;\n   atoms_pltl ?\\<psi> \\<subseteq> atoms_pltl \\<phi>;\n   \\<forall>\\<sigma>.\n      \\<sigma> \\<Turnstile>\\<^sub>p ?\\<psi> =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  ?\\<sigma>2 \\<Turnstile>\\<^sub>p \\<psi> =\n  ?\\<sigma>2 \\<Turnstile>\\<^sub>p \\<phi>", "show ?thesis"], ["proof (prove)\nusing this:\n  next_free \\<psi>\n  atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi>\n  \\<lbrakk>next_free ?\\<psi>;\n   atoms_pltl ?\\<psi> \\<subseteq> atoms_pltl \\<phi>;\n   \\<forall>\\<sigma>.\n      \\<sigma> \\<Turnstile>\\<^sub>p ?\\<psi> =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  ?\\<sigma>2 \\<Turnstile>\\<^sub>p \\<psi> =\n  ?\\<sigma>2 \\<Turnstile>\\<^sub>p \\<phi>\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Combining theorems \\<open>next_free_stutter_invariant\\<close> and\n  \\<open>stutter_invariant_next_free\\<close>, it follows that a PLTL\n  formula is stuttering invariant iff it is equivalent to a next-free\n  formula.\n\\<close>"], ["", "theorem pltl_stutter_invariant:\n  \"stutter_invariant \\<phi> \\<longleftrightarrow> \n   (\\<exists>\\<psi>. next_free \\<psi> \\<and> atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi> \\<and> (\\<forall>\\<sigma>. \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> \\<longleftrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stutter_invariant \\<phi> =\n    (\\<exists>\\<psi>.\n        next_free \\<psi> \\<and>\n        atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi> \\<and>\n        (\\<forall>\\<sigma>.\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. stutter_invariant \\<phi> =\n    (\\<exists>\\<psi>.\n        next_free \\<psi> \\<and>\n        atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi> \\<and>\n        (\\<forall>\\<sigma>.\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>))", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. stutter_invariant \\<phi> =\n    (\\<exists>\\<psi>.\n        next_free \\<psi> \\<and>\n        atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi> \\<and>\n        (\\<forall>\\<sigma>.\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>))", "assume \"stutter_invariant \\<phi>\""], ["proof (state)\nthis:\n  stutter_invariant \\<phi>\n\ngoal (1 subgoal):\n 1. stutter_invariant \\<phi> =\n    (\\<exists>\\<psi>.\n        next_free \\<psi> \\<and>\n        atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi> \\<and>\n        (\\<forall>\\<sigma>.\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>))", "hence \"\\<exists>\\<psi>. next_free \\<psi> \\<and> atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi> \\<and> (\\<forall>\\<sigma>. \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> \\<longleftrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\""], ["proof (prove)\nusing this:\n  stutter_invariant \\<phi>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<psi>.\n       next_free \\<psi> \\<and>\n       atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi> \\<and>\n       (\\<forall>\\<sigma>.\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n           \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)", "by (rule stutter_invariant_next_free) blast"], ["proof (state)\nthis:\n  \\<exists>\\<psi>.\n     next_free \\<psi> \\<and>\n     atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi> \\<and>\n     (\\<forall>\\<sigma>.\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n\ngoal (1 subgoal):\n 1. stutter_invariant \\<phi> =\n    (\\<exists>\\<psi>.\n        next_free \\<psi> \\<and>\n        atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi> \\<and>\n        (\\<forall>\\<sigma>.\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>))", "}"], ["proof (state)\nthis:\n  stutter_invariant \\<phi> \\<Longrightarrow>\n  \\<exists>\\<psi>.\n     next_free \\<psi> \\<and>\n     atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi> \\<and>\n     (\\<forall>\\<sigma>.\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n\ngoal (1 subgoal):\n 1. stutter_invariant \\<phi> =\n    (\\<exists>\\<psi>.\n        next_free \\<psi> \\<and>\n        atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi> \\<and>\n        (\\<forall>\\<sigma>.\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>))", "moreover"], ["proof (state)\nthis:\n  stutter_invariant \\<phi> \\<Longrightarrow>\n  \\<exists>\\<psi>.\n     next_free \\<psi> \\<and>\n     atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi> \\<and>\n     (\\<forall>\\<sigma>.\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n\ngoal (1 subgoal):\n 1. stutter_invariant \\<phi> =\n    (\\<exists>\\<psi>.\n        next_free \\<psi> \\<and>\n        atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi> \\<and>\n        (\\<forall>\\<sigma>.\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>))", "{"], ["proof (state)\nthis:\n  stutter_invariant \\<phi> \\<Longrightarrow>\n  \\<exists>\\<psi>.\n     next_free \\<psi> \\<and>\n     atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi> \\<and>\n     (\\<forall>\\<sigma>.\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n\ngoal (1 subgoal):\n 1. stutter_invariant \\<phi> =\n    (\\<exists>\\<psi>.\n        next_free \\<psi> \\<and>\n        atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi> \\<and>\n        (\\<forall>\\<sigma>.\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>))", "fix \\<psi>"], ["proof (state)\ngoal (1 subgoal):\n 1. stutter_invariant \\<phi> =\n    (\\<exists>\\<psi>.\n        next_free \\<psi> \\<and>\n        atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi> \\<and>\n        (\\<forall>\\<sigma>.\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>))", "assume 1: \"next_free \\<psi>\" and 2: \"\\<forall>\\<sigma>. \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> \\<longleftrightarrow> \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\""], ["proof (state)\nthis:\n  next_free \\<psi>\n  \\<forall>\\<sigma>.\n     \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n     \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\n\ngoal (1 subgoal):\n 1. stutter_invariant \\<phi> =\n    (\\<exists>\\<psi>.\n        next_free \\<psi> \\<and>\n        atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi> \\<and>\n        (\\<forall>\\<sigma>.\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>))", "from 1"], ["proof (chain)\npicking this:\n  next_free \\<psi>", "have \"stutter_invariant \\<psi>\""], ["proof (prove)\nusing this:\n  next_free \\<psi>\n\ngoal (1 subgoal):\n 1. stutter_invariant \\<psi>", "by (rule next_free_stutter_invariant)"], ["proof (state)\nthis:\n  stutter_invariant \\<psi>\n\ngoal (1 subgoal):\n 1. stutter_invariant \\<phi> =\n    (\\<exists>\\<psi>.\n        next_free \\<psi> \\<and>\n        atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi> \\<and>\n        (\\<forall>\\<sigma>.\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>))", "with 2"], ["proof (chain)\npicking this:\n  \\<forall>\\<sigma>.\n     \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n     \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\n  stutter_invariant \\<psi>", "have \"stutter_invariant \\<phi>\""], ["proof (prove)\nusing this:\n  \\<forall>\\<sigma>.\n     \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n     \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\n  stutter_invariant \\<psi>\n\ngoal (1 subgoal):\n 1. stutter_invariant \\<phi>", "by blast"], ["proof (state)\nthis:\n  stutter_invariant \\<phi>\n\ngoal (1 subgoal):\n 1. stutter_invariant \\<phi> =\n    (\\<exists>\\<psi>.\n        next_free \\<psi> \\<and>\n        atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi> \\<and>\n        (\\<forall>\\<sigma>.\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>))", "}"], ["proof (state)\nthis:\n  \\<lbrakk>next_free ?\\<psi>2;\n   \\<forall>\\<sigma>.\n      \\<sigma> \\<Turnstile>\\<^sub>p ?\\<psi>2 =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n  \\<Longrightarrow> stutter_invariant \\<phi>\n\ngoal (1 subgoal):\n 1. stutter_invariant \\<phi> =\n    (\\<exists>\\<psi>.\n        next_free \\<psi> \\<and>\n        atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi> \\<and>\n        (\\<forall>\\<sigma>.\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>))", "ultimately"], ["proof (chain)\npicking this:\n  stutter_invariant \\<phi> \\<Longrightarrow>\n  \\<exists>\\<psi>.\n     next_free \\<psi> \\<and>\n     atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi> \\<and>\n     (\\<forall>\\<sigma>.\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n  \\<lbrakk>next_free ?\\<psi>2;\n   \\<forall>\\<sigma>.\n      \\<sigma> \\<Turnstile>\\<^sub>p ?\\<psi>2 =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n  \\<Longrightarrow> stutter_invariant \\<phi>", "show ?thesis"], ["proof (prove)\nusing this:\n  stutter_invariant \\<phi> \\<Longrightarrow>\n  \\<exists>\\<psi>.\n     next_free \\<psi> \\<and>\n     atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi> \\<and>\n     (\\<forall>\\<sigma>.\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n         \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>)\n  \\<lbrakk>next_free ?\\<psi>2;\n   \\<forall>\\<sigma>.\n      \\<sigma> \\<Turnstile>\\<^sub>p ?\\<psi>2 =\n      \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>\\<rbrakk>\n  \\<Longrightarrow> stutter_invariant \\<phi>\n\ngoal (1 subgoal):\n 1. stutter_invariant \\<phi> =\n    (\\<exists>\\<psi>.\n        next_free \\<psi> \\<and>\n        atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi> \\<and>\n        (\\<forall>\\<sigma>.\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n            \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>))", "by blast"], ["proof (state)\nthis:\n  stutter_invariant \\<phi> =\n  (\\<exists>\\<psi>.\n      next_free \\<psi> \\<and>\n      atoms_pltl \\<psi> \\<subseteq> atoms_pltl \\<phi> \\<and>\n      (\\<forall>\\<sigma>.\n          \\<sigma> \\<Turnstile>\\<^sub>p \\<psi> =\n          \\<sigma> \\<Turnstile>\\<^sub>p \\<phi>))\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Stutter Invariance for LTL with Syntactic Sugar\\<close>"], ["", "text \\<open>We lift the results for PLTL to an extensive version of LTL.\\<close>"], ["", "primrec ltlc_next_free :: \"'a ltlc \\<Rightarrow> bool\"\n  where\n    \"ltlc_next_free true\\<^sub>c = True\"\n  | \"ltlc_next_free false\\<^sub>c = True\"\n  | \"ltlc_next_free (prop\\<^sub>c(q)) = True\"\n  | \"ltlc_next_free (not\\<^sub>c \\<phi>) = ltlc_next_free \\<phi>\"\n  | \"ltlc_next_free (\\<phi> and\\<^sub>c \\<psi>) = (ltlc_next_free \\<phi> \\<and> ltlc_next_free \\<psi>)\"\n  | \"ltlc_next_free (\\<phi> or\\<^sub>c \\<psi>) = (ltlc_next_free \\<phi> \\<and> ltlc_next_free \\<psi>)\"\n  | \"ltlc_next_free (\\<phi> implies\\<^sub>c \\<psi>) = (ltlc_next_free \\<phi> \\<and> ltlc_next_free \\<psi>)\"\n  | \"ltlc_next_free (X\\<^sub>c \\<phi>) = False\"\n  | \"ltlc_next_free (F\\<^sub>c \\<phi>) = ltlc_next_free \\<phi>\"\n  | \"ltlc_next_free (G\\<^sub>c \\<phi>) = ltlc_next_free \\<phi>\"\n  | \"ltlc_next_free (\\<phi> U\\<^sub>c \\<psi>) = (ltlc_next_free \\<phi> \\<and> ltlc_next_free \\<psi>)\"\n  | \"ltlc_next_free (\\<phi> R\\<^sub>c \\<psi>) = (ltlc_next_free \\<phi> \\<and> ltlc_next_free \\<psi>)\"\n  | \"ltlc_next_free (\\<phi> W\\<^sub>c \\<psi>) = (ltlc_next_free \\<phi> \\<and> ltlc_next_free \\<psi>)\"\n  | \"ltlc_next_free (\\<phi> M\\<^sub>c \\<psi>) = (ltlc_next_free \\<phi> \\<and> ltlc_next_free \\<psi>)\""], ["", "lemma ltlc_next_free_iff[simp]: \"next_free (ltlc_to_pltl \\<phi>) \\<longleftrightarrow> ltlc_next_free \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. next_free (ltlc_to_pltl \\<phi>) = ltlc_next_free \\<phi>", "by (induction \\<phi>) auto"], ["", "text \\<open>A next free formula cannot distinguish between stutter-equivalent runs.\\<close>"], ["", "theorem ltlc_next_free_stutter_invariant:\n  assumes next_free: \"ltlc_next_free \\<phi>\"\n  assumes eq: \"r \\<approx> r'\"\n  shows \"r \\<Turnstile>\\<^sub>c \\<phi> \\<longleftrightarrow> r' \\<Turnstile>\\<^sub>c \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<Turnstile>\\<^sub>c \\<phi> = r' \\<Turnstile>\\<^sub>c \\<phi>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<Turnstile>\\<^sub>c \\<phi> = r' \\<Turnstile>\\<^sub>c \\<phi>", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<Turnstile>\\<^sub>c \\<phi> = r' \\<Turnstile>\\<^sub>c \\<phi>", "fix r r'"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<Turnstile>\\<^sub>c \\<phi> = r' \\<Turnstile>\\<^sub>c \\<phi>", "assume eq: \"r \\<approx> r'\" and holds: \"r \\<Turnstile>\\<^sub>c \\<phi>\""], ["proof (state)\nthis:\n  r \\<approx> r'\n  r \\<Turnstile>\\<^sub>c \\<phi>\n\ngoal (1 subgoal):\n 1. r \\<Turnstile>\\<^sub>c \\<phi> = r' \\<Turnstile>\\<^sub>c \\<phi>", "then"], ["proof (chain)\npicking this:\n  r \\<approx> r'\n  r \\<Turnstile>\\<^sub>c \\<phi>", "have \"r \\<Turnstile>\\<^sub>p (ltlc_to_pltl \\<phi>)\""], ["proof (prove)\nusing this:\n  r \\<approx> r'\n  r \\<Turnstile>\\<^sub>c \\<phi>\n\ngoal (1 subgoal):\n 1. r \\<Turnstile>\\<^sub>p ltlc_to_pltl \\<phi>", "by simp"], ["proof (state)\nthis:\n  r \\<Turnstile>\\<^sub>p ltlc_to_pltl \\<phi>\n\ngoal (1 subgoal):\n 1. r \\<Turnstile>\\<^sub>c \\<phi> = r' \\<Turnstile>\\<^sub>c \\<phi>", "from next_free_stutter_invariant[of \"ltlc_to_pltl \\<phi>\"] next_free"], ["proof (chain)\npicking this:\n  next_free (ltlc_to_pltl \\<phi>) \\<Longrightarrow>\n  stutter_invariant (ltlc_to_pltl \\<phi>)\n  ltlc_next_free \\<phi>", "have \"PLTL.stutter_invariant (ltlc_to_pltl \\<phi>)\""], ["proof (prove)\nusing this:\n  next_free (ltlc_to_pltl \\<phi>) \\<Longrightarrow>\n  stutter_invariant (ltlc_to_pltl \\<phi>)\n  ltlc_next_free \\<phi>\n\ngoal (1 subgoal):\n 1. stutter_invariant (ltlc_to_pltl \\<phi>)", "by simp"], ["proof (state)\nthis:\n  stutter_invariant (ltlc_to_pltl \\<phi>)\n\ngoal (1 subgoal):\n 1. r \\<Turnstile>\\<^sub>c \\<phi> = r' \\<Turnstile>\\<^sub>c \\<phi>", "from stutter_invariantD[OF this eq] holds"], ["proof (chain)\npicking this:\n  r \\<Turnstile>\\<^sub>p ltlc_to_pltl \\<phi> =\n  r' \\<Turnstile>\\<^sub>p ltlc_to_pltl \\<phi>\n  r \\<Turnstile>\\<^sub>c \\<phi>", "have \"r' \\<Turnstile>\\<^sub>c \\<phi>\""], ["proof (prove)\nusing this:\n  r \\<Turnstile>\\<^sub>p ltlc_to_pltl \\<phi> =\n  r' \\<Turnstile>\\<^sub>p ltlc_to_pltl \\<phi>\n  r \\<Turnstile>\\<^sub>c \\<phi>\n\ngoal (1 subgoal):\n 1. r' \\<Turnstile>\\<^sub>c \\<phi>", "by simp"], ["proof (state)\nthis:\n  r' \\<Turnstile>\\<^sub>c \\<phi>\n\ngoal (1 subgoal):\n 1. r \\<Turnstile>\\<^sub>c \\<phi> = r' \\<Turnstile>\\<^sub>c \\<phi>", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?ra2 \\<approx> ?r'a2; ?ra2 \\<Turnstile>\\<^sub>c \\<phi>\\<rbrakk>\n  \\<Longrightarrow> ?r'a2 \\<Turnstile>\\<^sub>c \\<phi>\n\ngoal (1 subgoal):\n 1. r \\<Turnstile>\\<^sub>c \\<phi> = r' \\<Turnstile>\\<^sub>c \\<phi>", "note aux=this"], ["proof (state)\nthis:\n  \\<lbrakk>?ra2 \\<approx> ?r'a2; ?ra2 \\<Turnstile>\\<^sub>c \\<phi>\\<rbrakk>\n  \\<Longrightarrow> ?r'a2 \\<Turnstile>\\<^sub>c \\<phi>\n\ngoal (1 subgoal):\n 1. r \\<Turnstile>\\<^sub>c \\<phi> = r' \\<Turnstile>\\<^sub>c \\<phi>", "from aux[of r r'] aux[of r' r] eq stutter_equiv_sym[OF eq]"], ["proof (chain)\npicking this:\n  \\<lbrakk>r \\<approx> r'; r \\<Turnstile>\\<^sub>c \\<phi>\\<rbrakk>\n  \\<Longrightarrow> r' \\<Turnstile>\\<^sub>c \\<phi>\n  \\<lbrakk>r' \\<approx> r; r' \\<Turnstile>\\<^sub>c \\<phi>\\<rbrakk>\n  \\<Longrightarrow> r \\<Turnstile>\\<^sub>c \\<phi>\n  r \\<approx> r'\n  r' \\<approx> r", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>r \\<approx> r'; r \\<Turnstile>\\<^sub>c \\<phi>\\<rbrakk>\n  \\<Longrightarrow> r' \\<Turnstile>\\<^sub>c \\<phi>\n  \\<lbrakk>r' \\<approx> r; r' \\<Turnstile>\\<^sub>c \\<phi>\\<rbrakk>\n  \\<Longrightarrow> r \\<Turnstile>\\<^sub>c \\<phi>\n  r \\<approx> r'\n  r' \\<approx> r\n\ngoal (1 subgoal):\n 1. r \\<Turnstile>\\<^sub>c \\<phi> = r' \\<Turnstile>\\<^sub>c \\<phi>", "by blast"], ["proof (state)\nthis:\n  r \\<Turnstile>\\<^sub>c \\<phi> = r' \\<Turnstile>\\<^sub>c \\<phi>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}