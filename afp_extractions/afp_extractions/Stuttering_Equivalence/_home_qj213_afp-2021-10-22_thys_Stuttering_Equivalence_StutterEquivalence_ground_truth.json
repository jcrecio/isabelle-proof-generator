{"file_name": "/home/qj213/afp-2021-10-22/thys/Stuttering_Equivalence/StutterEquivalence.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Stuttering_Equivalence", "problem_names": ["lemma stutter_equiv_refl: \"\\<sigma> \\<approx> \\<sigma>\"", "lemma stutter_equiv_sym [sym]: \"\\<sigma> \\<approx> \\<tau> \\<Longrightarrow> \\<tau> \\<approx> \\<sigma>\"", "lemma stutter_equiv_trans [trans]: \"\\<rho> \\<approx> \\<sigma> \\<Longrightarrow> \\<sigma> \\<approx> \\<tau> \\<Longrightarrow> \\<rho> \\<approx> \\<tau>\"", "lemma sampled_stutter_equiv:\n  assumes \"stutter_sampler f \\<sigma>\"\n  shows \"\\<sigma> \\<circ> f \\<approx> \\<sigma>\"", "lemma stutter_reduced_equivalent: \"\\<natural>\\<sigma> \\<approx> \\<sigma>\"", "lemma stutter_equivI:\n  assumes f: \"stutter_sampler f \\<sigma>\" and g: \"stutter_sampler g \\<tau>\" \n      and eq: \"\\<sigma> \\<circ> f = \\<tau> \\<circ> g\"\n  shows \"\\<sigma> \\<approx> \\<tau>\"", "lemma stutter_equivE:\n  assumes eq: \"\\<sigma> \\<approx> \\<tau>\"\n  and p: \"\\<And>f g. \\<lbrakk> stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>; \\<sigma> \\<circ> f = \\<tau> \\<circ> g \\<rbrakk> \\<Longrightarrow> P\"\n  shows \"P\"", "lemma stutter_equiv_eq:\n  \"\\<sigma> \\<approx> \\<tau> = (\\<exists>f g. stutter_sampler f \\<sigma> \\<and> stutter_sampler g \\<tau> \\<and> \\<sigma> \\<circ> f = \\<tau> \\<circ> g)\"", "lemma stutter_equiv_0:\n  assumes \"\\<sigma> \\<approx> \\<tau>\"\n  shows \"\\<sigma> 0 = \\<tau> 0\"", "lemma suffix_stutter_equiv:\n  assumes f: \"stutter_sampler f \\<sigma>\"\n  shows \"suffix (f n) \\<sigma> \\<approx> suffix n (\\<sigma> \\<circ> f)\"", "lemma stutter_equiv_within_interval:\n  assumes f: \"stutter_sampler f \\<sigma>\"\n      and lo: \"f k \\<le> n\" and hi: \"n < f (Suc k)\"\n  shows \"\\<sigma>[n ..] \\<approx> \\<sigma>[f k ..]\"", "theorem stutter_equiv_suffixes_left:\n  assumes \"\\<sigma> \\<approx> \\<tau>\"\n  obtains m where \"\\<sigma>[m..] \\<approx> \\<tau>[n..]\" and \"\\<forall>j<m. \\<exists>k<n. \\<sigma>[j..] \\<approx> \\<tau>[k..]\"", "theorem stutter_equiv_suffixes_right:\n  assumes \"\\<sigma> \\<approx> \\<tau>\"\n  obtains n where \"\\<sigma>[m..] \\<approx> \\<tau>[n..]\" and \"\\<forall>j<n. \\<exists>k<m. \\<sigma>[k..] \\<approx> \\<tau>[j..]\"", "lemma stutter_equiv_element_left:\n  assumes \"\\<sigma> \\<approx> \\<tau>\"\n  obtains m where \"\\<sigma> m = \\<tau> n\" and \"\\<forall>j<m. \\<exists>k<n. \\<sigma> j = \\<tau> k\"", "lemma stutter_equiv_element_right:\n  assumes \"\\<sigma> \\<approx> \\<tau>\"\n  obtains n where \"\\<sigma> m = \\<tau> n\" and \"\\<forall>j<n. \\<exists>k<m. \\<sigma> k = \\<tau> j\""], "translations": [["", "lemma stutter_equiv_refl: \"\\<sigma> \\<approx> \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma> \\<approx> \\<sigma>", "unfolding stutter_equiv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<natural>\\<sigma> = \\<natural>\\<sigma>", ".."], ["", "lemma stutter_equiv_sym [sym]: \"\\<sigma> \\<approx> \\<tau> \\<Longrightarrow> \\<tau> \\<approx> \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma> \\<approx> \\<tau> \\<Longrightarrow> \\<tau> \\<approx> \\<sigma>", "unfolding stutter_equiv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<natural>\\<sigma> = \\<natural>\\<tau> \\<Longrightarrow>\n    \\<natural>\\<tau> = \\<natural>\\<sigma>", "by (rule sym)"], ["", "lemma stutter_equiv_trans [trans]: \"\\<rho> \\<approx> \\<sigma> \\<Longrightarrow> \\<sigma> \\<approx> \\<tau> \\<Longrightarrow> \\<rho> \\<approx> \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<rho> \\<approx> \\<sigma>; \\<sigma> \\<approx> \\<tau>\\<rbrakk>\n    \\<Longrightarrow> \\<rho> \\<approx> \\<tau>", "unfolding stutter_equiv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<natural>\\<rho> = \\<natural>\\<sigma>;\n     \\<natural>\\<sigma> = \\<natural>\\<tau>\\<rbrakk>\n    \\<Longrightarrow> \\<natural>\\<rho> = \\<natural>\\<tau>", "by simp"], ["", "text \\<open>\n  In particular, any sequence sampled by a stuttering sampler\n  is stuttering equivalent to the original one.\n\\<close>"], ["", "lemma sampled_stutter_equiv:\n  assumes \"stutter_sampler f \\<sigma>\"\n  shows \"\\<sigma> \\<circ> f \\<approx> \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma> \\<circ> f \\<approx> \\<sigma>", "using assms"], ["proof (prove)\nusing this:\n  stutter_sampler f \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<circ> f \\<approx> \\<sigma>", "unfolding stutter_equiv_def"], ["proof (prove)\nusing this:\n  stutter_sampler f \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<natural>(\\<sigma> \\<circ> f) = \\<natural>\\<sigma>", "by (rule sample_max_sample)"], ["", "lemma stutter_reduced_equivalent: \"\\<natural>\\<sigma> \\<approx> \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<natural>\\<sigma> \\<approx> \\<sigma>", "unfolding stutter_equiv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<natural>\\<natural>\\<sigma> = \\<natural>\\<sigma>", "by (rule stutter_reduced_reduced)"], ["", "text \\<open>\n  For proving stuttering equivalence of two sequences, it is enough\n  to exhibit two arbitrary sampling functions that equalize the reductions\n  of the sequences. This can be more convenient than computing the\n  maximal stutter-reduced version of the sequences.\n\\<close>"], ["", "lemma stutter_equivI:\n  assumes f: \"stutter_sampler f \\<sigma>\" and g: \"stutter_sampler g \\<tau>\" \n      and eq: \"\\<sigma> \\<circ> f = \\<tau> \\<circ> g\"\n  shows \"\\<sigma> \\<approx> \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma> \\<approx> \\<tau>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<sigma> \\<approx> \\<tau>", "from f"], ["proof (chain)\npicking this:\n  stutter_sampler f \\<sigma>", "have \"\\<natural>\\<sigma> = \\<natural>(\\<sigma> \\<circ> f)\""], ["proof (prove)\nusing this:\n  stutter_sampler f \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<natural>\\<sigma> = \\<natural>(\\<sigma> \\<circ> f)", "by (rule sample_max_sample[THEN sym])"], ["proof (state)\nthis:\n  \\<natural>\\<sigma> = \\<natural>(\\<sigma> \\<circ> f)\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<approx> \\<tau>", "also"], ["proof (state)\nthis:\n  \\<natural>\\<sigma> = \\<natural>(\\<sigma> \\<circ> f)\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<approx> \\<tau>", "from eq"], ["proof (chain)\npicking this:\n  \\<sigma> \\<circ> f = \\<tau> \\<circ> g", "have \"... = \\<natural>(\\<tau> \\<circ> g)\""], ["proof (prove)\nusing this:\n  \\<sigma> \\<circ> f = \\<tau> \\<circ> g\n\ngoal (1 subgoal):\n 1. \\<natural>(\\<sigma> \\<circ> f) = \\<natural>(\\<tau> \\<circ> g)", "by simp"], ["proof (state)\nthis:\n  \\<natural>(\\<sigma> \\<circ> f) = \\<natural>(\\<tau> \\<circ> g)\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<approx> \\<tau>", "also"], ["proof (state)\nthis:\n  \\<natural>(\\<sigma> \\<circ> f) = \\<natural>(\\<tau> \\<circ> g)\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<approx> \\<tau>", "from g"], ["proof (chain)\npicking this:\n  stutter_sampler g \\<tau>", "have \"... = \\<natural>\\<tau>\""], ["proof (prove)\nusing this:\n  stutter_sampler g \\<tau>\n\ngoal (1 subgoal):\n 1. \\<natural>(\\<tau> \\<circ> g) = \\<natural>\\<tau>", "by (rule sample_max_sample)"], ["proof (state)\nthis:\n  \\<natural>(\\<tau> \\<circ> g) = \\<natural>\\<tau>\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<approx> \\<tau>", "finally"], ["proof (chain)\npicking this:\n  \\<natural>\\<sigma> = \\<natural>\\<tau>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<natural>\\<sigma> = \\<natural>\\<tau>\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<approx> \\<tau>", "by (unfold stutter_equiv_def)"], ["proof (state)\nthis:\n  \\<sigma> \\<approx> \\<tau>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  The corresponding elimination rule is easy to prove, given that the\n  maximal stuttering sampling function is a stuttering sampling function.\n\\<close>"], ["", "lemma stutter_equivE:\n  assumes eq: \"\\<sigma> \\<approx> \\<tau>\"\n  and p: \"\\<And>f g. \\<lbrakk> stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>; \\<sigma> \\<circ> f = \\<tau> \\<circ> g \\<rbrakk> \\<Longrightarrow> P\"\n  shows \"P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P", "proof (rule p)"], ["proof (state)\ngoal (3 subgoals):\n 1. stutter_sampler ?f \\<sigma>\n 2. stutter_sampler ?g \\<tau>\n 3. \\<sigma> \\<circ> ?f = \\<tau> \\<circ> ?g", "from eq"], ["proof (chain)\npicking this:\n  \\<sigma> \\<approx> \\<tau>", "show \"\\<sigma> \\<circ> (max_stutter_sampler \\<sigma>) = \\<tau> \\<circ> (max_stutter_sampler \\<tau>)\""], ["proof (prove)\nusing this:\n  \\<sigma> \\<approx> \\<tau>\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<circ> max_stutter_sampler \\<sigma> =\n    \\<tau> \\<circ> max_stutter_sampler \\<tau>", "by (unfold stutter_equiv_def stutter_reduced_def)"], ["proof (state)\nthis:\n  \\<sigma> \\<circ> max_stutter_sampler \\<sigma> =\n  \\<tau> \\<circ> max_stutter_sampler \\<tau>\n\ngoal (2 subgoals):\n 1. stutter_sampler (max_stutter_sampler \\<sigma>) \\<sigma>\n 2. stutter_sampler (max_stutter_sampler \\<tau>) \\<tau>", "qed (rule max_stutter_sampler)+"], ["", "text \\<open>\n  Therefore we get the following alternative characterization: two\n  sequences are stuttering equivalent iff there are stuttering sampling\n  functions that equalize the two sequences.\n\\<close>"], ["", "lemma stutter_equiv_eq:\n  \"\\<sigma> \\<approx> \\<tau> = (\\<exists>f g. stutter_sampler f \\<sigma> \\<and> stutter_sampler g \\<tau> \\<and> \\<sigma> \\<circ> f = \\<tau> \\<circ> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<sigma> \\<approx> \\<tau>) =\n    (\\<exists>f g.\n        stutter_sampler f \\<sigma> \\<and>\n        stutter_sampler g \\<tau> \\<and>\n        \\<sigma> \\<circ> f = \\<tau> \\<circ> g)", "by (blast intro: stutter_equivI elim: stutter_equivE)"], ["", "text \\<open>\n  The initial elements of stutter equivalent sequences are equal.\n\\<close>"], ["", "lemma stutter_equiv_0:\n  assumes \"\\<sigma> \\<approx> \\<tau>\"\n  shows \"\\<sigma> 0 = \\<tau> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma> 0 = \\<tau> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<sigma> 0 = \\<tau> 0", "have \"\\<sigma> 0 = (\\<natural>\\<sigma>) 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma> 0 = (\\<natural>\\<sigma>) 0", "by (rule stutter_reduced_0[THEN sym])"], ["proof (state)\nthis:\n  \\<sigma> 0 = (\\<natural>\\<sigma>) 0\n\ngoal (1 subgoal):\n 1. \\<sigma> 0 = \\<tau> 0", "with assms[unfolded stutter_equiv_def]"], ["proof (chain)\npicking this:\n  \\<natural>\\<sigma> = \\<natural>\\<tau>\n  \\<sigma> 0 = (\\<natural>\\<sigma>) 0", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<natural>\\<sigma> = \\<natural>\\<tau>\n  \\<sigma> 0 = (\\<natural>\\<sigma>) 0\n\ngoal (1 subgoal):\n 1. \\<sigma> 0 = \\<tau> 0", "by (simp add: stutter_reduced_0)"], ["proof (state)\nthis:\n  \\<sigma> 0 = \\<tau> 0\n\ngoal:\nNo subgoals!", "qed"], ["", "abbreviation suffix_notation (\"_ [_..]\")\nwhere\n  \"suffix_notation w k \\<equiv> suffix k w\""], ["", "text \\<open>\n  Given any stuttering sampling function \\<open>f\\<close> for sequence \\<open>\\<sigma>\\<close>,\n  any suffix of \\<open>\\<sigma>\\<close> starting at index \\<open>f n\\<close> is stuttering\n  equivalent to the suffix of the stutter-reduced version of \\<open>\\<sigma>\\<close>\n  starting at \\<open>n\\<close>.\n\\<close>"], ["", "lemma suffix_stutter_equiv:\n  assumes f: \"stutter_sampler f \\<sigma>\"\n  shows \"suffix (f n) \\<sigma> \\<approx> suffix n (\\<sigma> \\<circ> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma> [f n..] \\<approx> \\<sigma> \\<circ> f [n..]", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<sigma> [f n..] \\<approx> \\<sigma> \\<circ> f [n..]", "from f"], ["proof (chain)\npicking this:\n  stutter_sampler f \\<sigma>", "have \"stutter_sampler (\\<lambda>k. f (n+k) - f n) (\\<sigma>[f n ..])\""], ["proof (prove)\nusing this:\n  stutter_sampler f \\<sigma>\n\ngoal (1 subgoal):\n 1. stutter_sampler (\\<lambda>k. f (n + k) - f n) \\<sigma> [f n..]", "by (rule stutter_sampler_suffix)"], ["proof (state)\nthis:\n  stutter_sampler (\\<lambda>k. f (n + k) - f n) \\<sigma> [f n..]\n\ngoal (1 subgoal):\n 1. \\<sigma> [f n..] \\<approx> \\<sigma> \\<circ> f [n..]", "moreover"], ["proof (state)\nthis:\n  stutter_sampler (\\<lambda>k. f (n + k) - f n) \\<sigma> [f n..]\n\ngoal (1 subgoal):\n 1. \\<sigma> [f n..] \\<approx> \\<sigma> \\<circ> f [n..]", "have \"stutter_sampler id ((\\<sigma> \\<circ> f)[n ..])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stutter_sampler id \\<sigma> \\<circ> f [n..]", "by (rule id_stutter_sampler)"], ["proof (state)\nthis:\n  stutter_sampler id \\<sigma> \\<circ> f [n..]\n\ngoal (1 subgoal):\n 1. \\<sigma> [f n..] \\<approx> \\<sigma> \\<circ> f [n..]", "moreover"], ["proof (state)\nthis:\n  stutter_sampler id \\<sigma> \\<circ> f [n..]\n\ngoal (1 subgoal):\n 1. \\<sigma> [f n..] \\<approx> \\<sigma> \\<circ> f [n..]", "have \"(\\<sigma>[f n ..]) \\<circ> (\\<lambda>k. f (n+k) - f n) = ((\\<sigma> \\<circ> f)[n ..]) \\<circ> id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma> [f n..] \\<circ> (\\<lambda>k. f (n + k) - f n) =\n    \\<sigma> \\<circ> f [n..] \\<circ> id", "proof (rule ext, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. \\<sigma> (f n + (f (n + x) - f n)) = \\<sigma> (f (n + x))", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. \\<sigma> (f n + (f (n + x) - f n)) = \\<sigma> (f (n + x))", "from f[THEN stutter_sampler_mono, THEN strict_mono_mono]"], ["proof (chain)\npicking this:\n  mono f", "have \"f n \\<le> f (n+i)\""], ["proof (prove)\nusing this:\n  mono f\n\ngoal (1 subgoal):\n 1. f n \\<le> f (n + i)", "by (rule monoD) simp"], ["proof (state)\nthis:\n  f n \\<le> f (n + i)\n\ngoal (1 subgoal):\n 1. \\<And>x. \\<sigma> (f n + (f (n + x) - f n)) = \\<sigma> (f (n + x))", "thus \"\\<sigma> (f n + (f (n+i) - f n)) = \\<sigma> (f (n+i))\""], ["proof (prove)\nusing this:\n  f n \\<le> f (n + i)\n\ngoal (1 subgoal):\n 1. \\<sigma> (f n + (f (n + i) - f n)) = \\<sigma> (f (n + i))", "by simp"], ["proof (state)\nthis:\n  \\<sigma> (f n + (f (n + i) - f n)) = \\<sigma> (f (n + i))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<sigma> [f n..] \\<circ> (\\<lambda>k. f (n + k) - f n) =\n  \\<sigma> \\<circ> f [n..] \\<circ> id\n\ngoal (1 subgoal):\n 1. \\<sigma> [f n..] \\<approx> \\<sigma> \\<circ> f [n..]", "ultimately"], ["proof (chain)\npicking this:\n  stutter_sampler (\\<lambda>k. f (n + k) - f n) \\<sigma> [f n..]\n  stutter_sampler id \\<sigma> \\<circ> f [n..]\n  \\<sigma> [f n..] \\<circ> (\\<lambda>k. f (n + k) - f n) =\n  \\<sigma> \\<circ> f [n..] \\<circ> id", "show ?thesis"], ["proof (prove)\nusing this:\n  stutter_sampler (\\<lambda>k. f (n + k) - f n) \\<sigma> [f n..]\n  stutter_sampler id \\<sigma> \\<circ> f [n..]\n  \\<sigma> [f n..] \\<circ> (\\<lambda>k. f (n + k) - f n) =\n  \\<sigma> \\<circ> f [n..] \\<circ> id\n\ngoal (1 subgoal):\n 1. \\<sigma> [f n..] \\<approx> \\<sigma> \\<circ> f [n..]", "by (rule stutter_equivI)"], ["proof (state)\nthis:\n  \\<sigma> [f n..] \\<approx> \\<sigma> \\<circ> f [n..]\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Given a stuttering sampling function \\<open>f\\<close> and a point \\<open>n\\<close>\n  within the interval from \\<open>f k\\<close> to \\<open>f (k+1)\\<close>, the suffix\n  starting at \\<open>n\\<close> is stuttering equivalent to the suffix starting\n  at \\<open>f k\\<close>.\n\\<close>"], ["", "lemma stutter_equiv_within_interval:\n  assumes f: \"stutter_sampler f \\<sigma>\"\n      and lo: \"f k \\<le> n\" and hi: \"n < f (Suc k)\"\n  shows \"\\<sigma>[n ..] \\<approx> \\<sigma>[f k ..]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma> [n..] \\<approx> \\<sigma> [f k..]", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<sigma> [n..] \\<approx> \\<sigma> [f k..]", "have \"stutter_sampler id (\\<sigma>[n ..])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stutter_sampler id \\<sigma> [n..]", "by (rule id_stutter_sampler)"], ["proof (state)\nthis:\n  stutter_sampler id \\<sigma> [n..]\n\ngoal (1 subgoal):\n 1. \\<sigma> [n..] \\<approx> \\<sigma> [f k..]", "moreover"], ["proof (state)\nthis:\n  stutter_sampler id \\<sigma> [n..]\n\ngoal (1 subgoal):\n 1. \\<sigma> [n..] \\<approx> \\<sigma> [f k..]", "from lo"], ["proof (chain)\npicking this:\n  f k \\<le> n", "have \"stutter_sampler (\\<lambda>i. if i=0 then 0 else n + i - f k) (\\<sigma>[f k ..])\"\n    (is \"stutter_sampler ?f _\")"], ["proof (prove)\nusing this:\n  f k \\<le> n\n\ngoal (1 subgoal):\n 1. stutter_sampler (\\<lambda>i. if i = 0 then 0 else n + i - f k)\n     \\<sigma> [f k..]", "proof (auto simp: stutter_sampler_def strict_mono_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>f k \\<le> n; 0 < na; na < Suc n - f k\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> (f k + na) = \\<sigma> (f k)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>f k \\<le> n; 0 < na; na < Suc n - f k\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> (f k + na) = \\<sigma> (f k)", "assume i: \"i < Suc n - f k\""], ["proof (state)\nthis:\n  i < Suc n - f k\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>f k \\<le> n; 0 < na; na < Suc n - f k\\<rbrakk>\n       \\<Longrightarrow> \\<sigma> (f k + na) = \\<sigma> (f k)", "from f"], ["proof (chain)\npicking this:\n  stutter_sampler f \\<sigma>", "show \"\\<sigma> (f k + i) = \\<sigma> (f k)\""], ["proof (prove)\nusing this:\n  stutter_sampler f \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<sigma> (f k + i) = \\<sigma> (f k)", "proof (rule stutter_sampler_between)"], ["proof (state)\ngoal (2 subgoals):\n 1. f k \\<le> f k + i\n 2. f k + i < f (Suc k)", "from i hi"], ["proof (chain)\npicking this:\n  i < Suc n - f k\n  n < f (Suc k)", "show \"f k + i < f (Suc k)\""], ["proof (prove)\nusing this:\n  i < Suc n - f k\n  n < f (Suc k)\n\ngoal (1 subgoal):\n 1. f k + i < f (Suc k)", "by simp"], ["proof (state)\nthis:\n  f k + i < f (Suc k)\n\ngoal (1 subgoal):\n 1. f k \\<le> f k + i", "qed simp"], ["proof (state)\nthis:\n  \\<sigma> (f k + i) = \\<sigma> (f k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  stutter_sampler (\\<lambda>i. if i = 0 then 0 else n + i - f k)\n   \\<sigma> [f k..]\n\ngoal (1 subgoal):\n 1. \\<sigma> [n..] \\<approx> \\<sigma> [f k..]", "moreover"], ["proof (state)\nthis:\n  stutter_sampler (\\<lambda>i. if i = 0 then 0 else n + i - f k)\n   \\<sigma> [f k..]\n\ngoal (1 subgoal):\n 1. \\<sigma> [n..] \\<approx> \\<sigma> [f k..]", "have \"(\\<sigma>[n ..]) \\<circ> id = (\\<sigma>[f k ..]) \\<circ> ?f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma> [n..] \\<circ> id =\n    \\<sigma> [f k..] \\<circ> (\\<lambda>i. if i = 0 then 0 else n + i - f k)", "proof (rule ext, auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<sigma> n = \\<sigma> (f k)\n 2. \\<And>x.\n       0 < x \\<Longrightarrow>\n       \\<sigma> (n + x) = \\<sigma> (f k + (n + x - f k))", "from f lo hi"], ["proof (chain)\npicking this:\n  stutter_sampler f \\<sigma>\n  f k \\<le> n\n  n < f (Suc k)", "show \"\\<sigma> n = \\<sigma> (f k)\""], ["proof (prove)\nusing this:\n  stutter_sampler f \\<sigma>\n  f k \\<le> n\n  n < f (Suc k)\n\ngoal (1 subgoal):\n 1. \\<sigma> n = \\<sigma> (f k)", "by (rule stutter_sampler_between)"], ["proof (state)\nthis:\n  \\<sigma> n = \\<sigma> (f k)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       \\<sigma> (n + x) = \\<sigma> (f k + (n + x - f k))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       \\<sigma> (n + x) = \\<sigma> (f k + (n + x - f k))", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       \\<sigma> (n + x) = \\<sigma> (f k + (n + x - f k))", "from lo"], ["proof (chain)\npicking this:\n  f k \\<le> n", "show \"\\<sigma> (n+i) = \\<sigma> (f k + (n + i - f k))\""], ["proof (prove)\nusing this:\n  f k \\<le> n\n\ngoal (1 subgoal):\n 1. \\<sigma> (n + i) = \\<sigma> (f k + (n + i - f k))", "by simp"], ["proof (state)\nthis:\n  \\<sigma> (n + i) = \\<sigma> (f k + (n + i - f k))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<sigma> [n..] \\<circ> id =\n  \\<sigma> [f k..] \\<circ> (\\<lambda>i. if i = 0 then 0 else n + i - f k)\n\ngoal (1 subgoal):\n 1. \\<sigma> [n..] \\<approx> \\<sigma> [f k..]", "ultimately"], ["proof (chain)\npicking this:\n  stutter_sampler id \\<sigma> [n..]\n  stutter_sampler (\\<lambda>i. if i = 0 then 0 else n + i - f k)\n   \\<sigma> [f k..]\n  \\<sigma> [n..] \\<circ> id =\n  \\<sigma> [f k..] \\<circ> (\\<lambda>i. if i = 0 then 0 else n + i - f k)", "show ?thesis"], ["proof (prove)\nusing this:\n  stutter_sampler id \\<sigma> [n..]\n  stutter_sampler (\\<lambda>i. if i = 0 then 0 else n + i - f k)\n   \\<sigma> [f k..]\n  \\<sigma> [n..] \\<circ> id =\n  \\<sigma> [f k..] \\<circ> (\\<lambda>i. if i = 0 then 0 else n + i - f k)\n\ngoal (1 subgoal):\n 1. \\<sigma> [n..] \\<approx> \\<sigma> [f k..]", "by (rule stutter_equivI)"], ["proof (state)\nthis:\n  \\<sigma> [n..] \\<approx> \\<sigma> [f k..]\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Given two stuttering equivalent sequences \\<open>\\<sigma>\\<close> and \\<open>\\<tau>\\<close>,\n  we obtain a zig-zag relationship as follows: for any suffix \\<open>\\<tau>[n..]\\<close>\n  there is a suffix \\<open>\\<sigma>[m..]\\<close> such that:\n  \\begin{enumerate}\n  \\item \\<open>\\<sigma>[m..] \\<approx> \\<tau>[n..]\\<close> and\n  \\item for every suffix \\<open>\\<sigma>[j..]\\<close> where \\<open>j<m\\<close> there is a\n    corresponding suffix \\<open>\\<tau>[k..]\\<close> for some \\<open>k<n\\<close>.\n  \\end{enumerate}\n\\<close>"], ["", "theorem stutter_equiv_suffixes_left:\n  assumes \"\\<sigma> \\<approx> \\<tau>\"\n  obtains m where \"\\<sigma>[m..] \\<approx> \\<tau>[n..]\" and \"\\<forall>j<m. \\<exists>k<n. \\<sigma>[j..] \\<approx> \\<tau>[k..]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n         \\<forall>j<m.\n            \\<exists>k<n. \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<sigma> \\<approx> \\<tau>\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n         \\<forall>j<m.\n            \\<exists>k<n. \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (rule stutter_equivE)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n                    \\<forall>j<m.\n                       \\<exists>k<n.\n                          \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>;\n        \\<sigma> \\<circ> f = \\<tau> \\<circ> g\\<rbrakk>\n       \\<Longrightarrow> thesis", "fix f g"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n                    \\<forall>j<m.\n                       \\<exists>k<n.\n                          \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>;\n        \\<sigma> \\<circ> f = \\<tau> \\<circ> g\\<rbrakk>\n       \\<Longrightarrow> thesis", "assume f: \"stutter_sampler f \\<sigma>\"\n     and g: \"stutter_sampler g \\<tau>\"\n     and eq: \"\\<sigma> \\<circ> f = \\<tau> \\<circ> g\""], ["proof (state)\nthis:\n  stutter_sampler f \\<sigma>\n  stutter_sampler g \\<tau>\n  \\<sigma> \\<circ> f = \\<tau> \\<circ> g\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n                    \\<forall>j<m.\n                       \\<exists>k<n.\n                          \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>;\n        \\<sigma> \\<circ> f = \\<tau> \\<circ> g\\<rbrakk>\n       \\<Longrightarrow> thesis", "from g"], ["proof (chain)\npicking this:\n  stutter_sampler g \\<tau>", "obtain i where i: \"g i \\<le> n\" \"n < g (Suc i)\""], ["proof (prove)\nusing this:\n  stutter_sampler g \\<tau>\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>g i \\<le> n; n < g (Suc i)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule stutter_sampler_interval)"], ["proof (state)\nthis:\n  g i \\<le> n\n  n < g (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n                    \\<forall>j<m.\n                       \\<exists>k<n.\n                          \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>;\n        \\<sigma> \\<circ> f = \\<tau> \\<circ> g\\<rbrakk>\n       \\<Longrightarrow> thesis", "with g"], ["proof (chain)\npicking this:\n  stutter_sampler g \\<tau>\n  g i \\<le> n\n  n < g (Suc i)", "have \"\\<tau>[n..] \\<approx> \\<tau>[g i ..]\""], ["proof (prove)\nusing this:\n  stutter_sampler g \\<tau>\n  g i \\<le> n\n  n < g (Suc i)\n\ngoal (1 subgoal):\n 1. \\<tau> [n..] \\<approx> \\<tau> [g i..]", "by (rule stutter_equiv_within_interval)"], ["proof (state)\nthis:\n  \\<tau> [n..] \\<approx> \\<tau> [g i..]\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n                    \\<forall>j<m.\n                       \\<exists>k<n.\n                          \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>;\n        \\<sigma> \\<circ> f = \\<tau> \\<circ> g\\<rbrakk>\n       \\<Longrightarrow> thesis", "also"], ["proof (state)\nthis:\n  \\<tau> [n..] \\<approx> \\<tau> [g i..]\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n                    \\<forall>j<m.\n                       \\<exists>k<n.\n                          \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>;\n        \\<sigma> \\<circ> f = \\<tau> \\<circ> g\\<rbrakk>\n       \\<Longrightarrow> thesis", "from g"], ["proof (chain)\npicking this:\n  stutter_sampler g \\<tau>", "have \"... \\<approx> (\\<tau> \\<circ> g)[i ..]\""], ["proof (prove)\nusing this:\n  stutter_sampler g \\<tau>\n\ngoal (1 subgoal):\n 1. \\<tau> [g i..] \\<approx> \\<tau> \\<circ> g [i..]", "by (rule suffix_stutter_equiv)"], ["proof (state)\nthis:\n  \\<tau> [g i..] \\<approx> \\<tau> \\<circ> g [i..]\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n                    \\<forall>j<m.\n                       \\<exists>k<n.\n                          \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>;\n        \\<sigma> \\<circ> f = \\<tau> \\<circ> g\\<rbrakk>\n       \\<Longrightarrow> thesis", "also"], ["proof (state)\nthis:\n  \\<tau> [g i..] \\<approx> \\<tau> \\<circ> g [i..]\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n                    \\<forall>j<m.\n                       \\<exists>k<n.\n                          \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>;\n        \\<sigma> \\<circ> f = \\<tau> \\<circ> g\\<rbrakk>\n       \\<Longrightarrow> thesis", "from eq"], ["proof (chain)\npicking this:\n  \\<sigma> \\<circ> f = \\<tau> \\<circ> g", "have \"... = (\\<sigma> \\<circ> f)[i ..]\""], ["proof (prove)\nusing this:\n  \\<sigma> \\<circ> f = \\<tau> \\<circ> g\n\ngoal (1 subgoal):\n 1. \\<tau> \\<circ> g [i..] = \\<sigma> \\<circ> f [i..]", "by simp"], ["proof (state)\nthis:\n  \\<tau> \\<circ> g [i..] = \\<sigma> \\<circ> f [i..]\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n                    \\<forall>j<m.\n                       \\<exists>k<n.\n                          \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>;\n        \\<sigma> \\<circ> f = \\<tau> \\<circ> g\\<rbrakk>\n       \\<Longrightarrow> thesis", "also"], ["proof (state)\nthis:\n  \\<tau> \\<circ> g [i..] = \\<sigma> \\<circ> f [i..]\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n                    \\<forall>j<m.\n                       \\<exists>k<n.\n                          \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>;\n        \\<sigma> \\<circ> f = \\<tau> \\<circ> g\\<rbrakk>\n       \\<Longrightarrow> thesis", "from f"], ["proof (chain)\npicking this:\n  stutter_sampler f \\<sigma>", "have \"... \\<approx> \\<sigma>[f i ..]\""], ["proof (prove)\nusing this:\n  stutter_sampler f \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<circ> f [i..] \\<approx> \\<sigma> [f i..]", "by (rule suffix_stutter_equiv[THEN stutter_equiv_sym])"], ["proof (state)\nthis:\n  \\<sigma> \\<circ> f [i..] \\<approx> \\<sigma> [f i..]\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n                    \\<forall>j<m.\n                       \\<exists>k<n.\n                          \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>;\n        \\<sigma> \\<circ> f = \\<tau> \\<circ> g\\<rbrakk>\n       \\<Longrightarrow> thesis", "finally"], ["proof (chain)\npicking this:\n  \\<tau> [n..] \\<approx> \\<sigma> [f i..]", "have \"\\<sigma>[f i ..] \\<approx> \\<tau>[n ..]\""], ["proof (prove)\nusing this:\n  \\<tau> [n..] \\<approx> \\<sigma> [f i..]\n\ngoal (1 subgoal):\n 1. \\<sigma> [f i..] \\<approx> \\<tau> [n..]", "by (rule stutter_equiv_sym)"], ["proof (state)\nthis:\n  \\<sigma> [f i..] \\<approx> \\<tau> [n..]\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n                    \\<forall>j<m.\n                       \\<exists>k<n.\n                          \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>;\n        \\<sigma> \\<circ> f = \\<tau> \\<circ> g\\<rbrakk>\n       \\<Longrightarrow> thesis", "moreover"], ["proof (state)\nthis:\n  \\<sigma> [f i..] \\<approx> \\<tau> [n..]\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n                    \\<forall>j<m.\n                       \\<exists>k<n.\n                          \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>;\n        \\<sigma> \\<circ> f = \\<tau> \\<circ> g\\<rbrakk>\n       \\<Longrightarrow> thesis", "{"], ["proof (state)\nthis:\n  \\<sigma> [f i..] \\<approx> \\<tau> [n..]\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n                    \\<forall>j<m.\n                       \\<exists>k<n.\n                          \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>;\n        \\<sigma> \\<circ> f = \\<tau> \\<circ> g\\<rbrakk>\n       \\<Longrightarrow> thesis", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n                    \\<forall>j<m.\n                       \\<exists>k<n.\n                          \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>;\n        \\<sigma> \\<circ> f = \\<tau> \\<circ> g\\<rbrakk>\n       \\<Longrightarrow> thesis", "assume j: \"j < f i\""], ["proof (state)\nthis:\n  j < f i\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n                    \\<forall>j<m.\n                       \\<exists>k<n.\n                          \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>;\n        \\<sigma> \\<circ> f = \\<tau> \\<circ> g\\<rbrakk>\n       \\<Longrightarrow> thesis", "from f"], ["proof (chain)\npicking this:\n  stutter_sampler f \\<sigma>", "obtain a where a: \"f a \\<le> j\" \"j < f (Suc a)\""], ["proof (prove)\nusing this:\n  stutter_sampler f \\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>f a \\<le> j; j < f (Suc a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule stutter_sampler_interval)"], ["proof (state)\nthis:\n  f a \\<le> j\n  j < f (Suc a)\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n                    \\<forall>j<m.\n                       \\<exists>k<n.\n                          \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>;\n        \\<sigma> \\<circ> f = \\<tau> \\<circ> g\\<rbrakk>\n       \\<Longrightarrow> thesis", "from a j"], ["proof (chain)\npicking this:\n  f a \\<le> j\n  j < f (Suc a)\n  j < f i", "have \"f a < f i\""], ["proof (prove)\nusing this:\n  f a \\<le> j\n  j < f (Suc a)\n  j < f i\n\ngoal (1 subgoal):\n 1. f a < f i", "by simp"], ["proof (state)\nthis:\n  f a < f i\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n                    \\<forall>j<m.\n                       \\<exists>k<n.\n                          \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>;\n        \\<sigma> \\<circ> f = \\<tau> \\<circ> g\\<rbrakk>\n       \\<Longrightarrow> thesis", "with f[THEN stutter_sampler_mono]"], ["proof (chain)\npicking this:\n  strict_mono f\n  f a < f i", "have \"a < i\""], ["proof (prove)\nusing this:\n  strict_mono f\n  f a < f i\n\ngoal (1 subgoal):\n 1. a < i", "by (simp add: strict_mono_less)"], ["proof (state)\nthis:\n  a < i\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n                    \\<forall>j<m.\n                       \\<exists>k<n.\n                          \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>;\n        \\<sigma> \\<circ> f = \\<tau> \\<circ> g\\<rbrakk>\n       \\<Longrightarrow> thesis", "with g[THEN stutter_sampler_mono]"], ["proof (chain)\npicking this:\n  strict_mono g\n  a < i", "have \"g a < g i\""], ["proof (prove)\nusing this:\n  strict_mono g\n  a < i\n\ngoal (1 subgoal):\n 1. g a < g i", "by (simp add: strict_mono_less)"], ["proof (state)\nthis:\n  g a < g i\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n                    \\<forall>j<m.\n                       \\<exists>k<n.\n                          \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>;\n        \\<sigma> \\<circ> f = \\<tau> \\<circ> g\\<rbrakk>\n       \\<Longrightarrow> thesis", "with i"], ["proof (chain)\npicking this:\n  g i \\<le> n\n  n < g (Suc i)\n  g a < g i", "have 1: \"g a < n\""], ["proof (prove)\nusing this:\n  g i \\<le> n\n  n < g (Suc i)\n  g a < g i\n\ngoal (1 subgoal):\n 1. g a < n", "by simp"], ["proof (state)\nthis:\n  g a < n\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n                    \\<forall>j<m.\n                       \\<exists>k<n.\n                          \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>;\n        \\<sigma> \\<circ> f = \\<tau> \\<circ> g\\<rbrakk>\n       \\<Longrightarrow> thesis", "from f a"], ["proof (chain)\npicking this:\n  stutter_sampler f \\<sigma>\n  f a \\<le> j\n  j < f (Suc a)", "have \"\\<sigma>[j..] \\<approx> \\<sigma>[f a ..]\""], ["proof (prove)\nusing this:\n  stutter_sampler f \\<sigma>\n  f a \\<le> j\n  j < f (Suc a)\n\ngoal (1 subgoal):\n 1. \\<sigma> [j..] \\<approx> \\<sigma> [f a..]", "by (rule stutter_equiv_within_interval)"], ["proof (state)\nthis:\n  \\<sigma> [j..] \\<approx> \\<sigma> [f a..]\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n                    \\<forall>j<m.\n                       \\<exists>k<n.\n                          \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>;\n        \\<sigma> \\<circ> f = \\<tau> \\<circ> g\\<rbrakk>\n       \\<Longrightarrow> thesis", "also"], ["proof (state)\nthis:\n  \\<sigma> [j..] \\<approx> \\<sigma> [f a..]\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n                    \\<forall>j<m.\n                       \\<exists>k<n.\n                          \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>;\n        \\<sigma> \\<circ> f = \\<tau> \\<circ> g\\<rbrakk>\n       \\<Longrightarrow> thesis", "from f"], ["proof (chain)\npicking this:\n  stutter_sampler f \\<sigma>", "have \"... \\<approx> (\\<sigma> \\<circ> f)[a ..]\""], ["proof (prove)\nusing this:\n  stutter_sampler f \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<sigma> [f a..] \\<approx> \\<sigma> \\<circ> f [a..]", "by (rule suffix_stutter_equiv)"], ["proof (state)\nthis:\n  \\<sigma> [f a..] \\<approx> \\<sigma> \\<circ> f [a..]\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n                    \\<forall>j<m.\n                       \\<exists>k<n.\n                          \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>;\n        \\<sigma> \\<circ> f = \\<tau> \\<circ> g\\<rbrakk>\n       \\<Longrightarrow> thesis", "also"], ["proof (state)\nthis:\n  \\<sigma> [f a..] \\<approx> \\<sigma> \\<circ> f [a..]\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n                    \\<forall>j<m.\n                       \\<exists>k<n.\n                          \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>;\n        \\<sigma> \\<circ> f = \\<tau> \\<circ> g\\<rbrakk>\n       \\<Longrightarrow> thesis", "from eq"], ["proof (chain)\npicking this:\n  \\<sigma> \\<circ> f = \\<tau> \\<circ> g", "have \"... = (\\<tau> \\<circ> g)[a ..]\""], ["proof (prove)\nusing this:\n  \\<sigma> \\<circ> f = \\<tau> \\<circ> g\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<circ> f [a..] = \\<tau> \\<circ> g [a..]", "by simp"], ["proof (state)\nthis:\n  \\<sigma> \\<circ> f [a..] = \\<tau> \\<circ> g [a..]\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n                    \\<forall>j<m.\n                       \\<exists>k<n.\n                          \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>;\n        \\<sigma> \\<circ> f = \\<tau> \\<circ> g\\<rbrakk>\n       \\<Longrightarrow> thesis", "also"], ["proof (state)\nthis:\n  \\<sigma> \\<circ> f [a..] = \\<tau> \\<circ> g [a..]\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n                    \\<forall>j<m.\n                       \\<exists>k<n.\n                          \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>;\n        \\<sigma> \\<circ> f = \\<tau> \\<circ> g\\<rbrakk>\n       \\<Longrightarrow> thesis", "from g"], ["proof (chain)\npicking this:\n  stutter_sampler g \\<tau>", "have \"... \\<approx> \\<tau>[g a ..]\""], ["proof (prove)\nusing this:\n  stutter_sampler g \\<tau>\n\ngoal (1 subgoal):\n 1. \\<tau> \\<circ> g [a..] \\<approx> \\<tau> [g a..]", "by (rule suffix_stutter_equiv[THEN stutter_equiv_sym])"], ["proof (state)\nthis:\n  \\<tau> \\<circ> g [a..] \\<approx> \\<tau> [g a..]\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n                    \\<forall>j<m.\n                       \\<exists>k<n.\n                          \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>;\n        \\<sigma> \\<circ> f = \\<tau> \\<circ> g\\<rbrakk>\n       \\<Longrightarrow> thesis", "finally"], ["proof (chain)\npicking this:\n  \\<sigma> [j..] \\<approx> \\<tau> [g a..]", "have \"\\<sigma>[j ..] \\<approx> \\<tau>[g a ..]\""], ["proof (prove)\nusing this:\n  \\<sigma> [j..] \\<approx> \\<tau> [g a..]\n\ngoal (1 subgoal):\n 1. \\<sigma> [j..] \\<approx> \\<tau> [g a..]", "."], ["proof (state)\nthis:\n  \\<sigma> [j..] \\<approx> \\<tau> [g a..]\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n                    \\<forall>j<m.\n                       \\<exists>k<n.\n                          \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>;\n        \\<sigma> \\<circ> f = \\<tau> \\<circ> g\\<rbrakk>\n       \\<Longrightarrow> thesis", "with 1"], ["proof (chain)\npicking this:\n  g a < n\n  \\<sigma> [j..] \\<approx> \\<tau> [g a..]", "have \"\\<exists>k<n. \\<sigma>[j..] \\<approx> \\<tau>[k ..]\""], ["proof (prove)\nusing this:\n  g a < n\n  \\<sigma> [j..] \\<approx> \\<tau> [g a..]\n\ngoal (1 subgoal):\n 1. \\<exists>k<n. \\<sigma> [j..] \\<approx> \\<tau> [k..]", "by blast"], ["proof (state)\nthis:\n  \\<exists>k<n. \\<sigma> [j..] \\<approx> \\<tau> [k..]\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n                    \\<forall>j<m.\n                       \\<exists>k<n.\n                          \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>;\n        \\<sigma> \\<circ> f = \\<tau> \\<circ> g\\<rbrakk>\n       \\<Longrightarrow> thesis", "}"], ["proof (state)\nthis:\n  ?j2 < f i \\<Longrightarrow>\n  \\<exists>k<n. \\<sigma> [?j2..] \\<approx> \\<tau> [k..]\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n                    \\<forall>j<m.\n                       \\<exists>k<n.\n                          \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>;\n        \\<sigma> \\<circ> f = \\<tau> \\<circ> g\\<rbrakk>\n       \\<Longrightarrow> thesis", "moreover"], ["proof (state)\nthis:\n  ?j2 < f i \\<Longrightarrow>\n  \\<exists>k<n. \\<sigma> [?j2..] \\<approx> \\<tau> [k..]\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n                    \\<forall>j<m.\n                       \\<exists>k<n.\n                          \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>;\n        \\<sigma> \\<circ> f = \\<tau> \\<circ> g\\<rbrakk>\n       \\<Longrightarrow> thesis", "note that"], ["proof (state)\nthis:\n  \\<lbrakk>\\<sigma> [?m..] \\<approx> \\<tau> [n..];\n   \\<forall>j<?m.\n      \\<exists>k<n. \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<lbrakk>\\<And>m.\n                   \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n                    \\<forall>j<m.\n                       \\<exists>k<n.\n                          \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        stutter_sampler f \\<sigma>; stutter_sampler g \\<tau>;\n        \\<sigma> \\<circ> f = \\<tau> \\<circ> g\\<rbrakk>\n       \\<Longrightarrow> thesis", "ultimately"], ["proof (chain)\npicking this:\n  \\<sigma> [f i..] \\<approx> \\<tau> [n..]\n  ?j2 < f i \\<Longrightarrow>\n  \\<exists>k<n. \\<sigma> [?j2..] \\<approx> \\<tau> [k..]\n  \\<lbrakk>\\<sigma> [?m..] \\<approx> \\<tau> [n..];\n   \\<forall>j<?m.\n      \\<exists>k<n. \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n  \\<Longrightarrow> thesis", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<sigma> [f i..] \\<approx> \\<tau> [n..]\n  ?j2 < f i \\<Longrightarrow>\n  \\<exists>k<n. \\<sigma> [?j2..] \\<approx> \\<tau> [k..]\n  \\<lbrakk>\\<sigma> [?m..] \\<approx> \\<tau> [n..];\n   \\<forall>j<?m.\n      \\<exists>k<n. \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem stutter_equiv_suffixes_right:\n  assumes \"\\<sigma> \\<approx> \\<tau>\"\n  obtains n where \"\\<sigma>[m..] \\<approx> \\<tau>[n..]\" and \"\\<forall>j<n. \\<exists>k<m. \\<sigma>[k..] \\<approx> \\<tau>[j..]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n         \\<forall>j<n.\n            \\<exists>k<m. \\<sigma> [k..] \\<approx> \\<tau> [j..]\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n         \\<forall>j<n.\n            \\<exists>k<m. \\<sigma> [k..] \\<approx> \\<tau> [j..]\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms"], ["proof (chain)\npicking this:\n  \\<sigma> \\<approx> \\<tau>", "have \"\\<tau> \\<approx> \\<sigma>\""], ["proof (prove)\nusing this:\n  \\<sigma> \\<approx> \\<tau>\n\ngoal (1 subgoal):\n 1. \\<tau> \\<approx> \\<sigma>", "by (rule stutter_equiv_sym)"], ["proof (state)\nthis:\n  \\<tau> \\<approx> \\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n         \\<forall>j<n.\n            \\<exists>k<m. \\<sigma> [k..] \\<approx> \\<tau> [j..]\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<tau> \\<approx> \\<sigma>", "obtain n where \"\\<tau>[n..] \\<approx> \\<sigma>[m..]\" \"\\<forall>j<n. \\<exists>k<m. \\<tau>[j..] \\<approx> \\<sigma>[k..]\""], ["proof (prove)\nusing this:\n  \\<tau> \\<approx> \\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>\\<tau> [n..] \\<approx> \\<sigma> [m..];\n         \\<forall>j<n.\n            \\<exists>k<m. \\<tau> [j..] \\<approx> \\<sigma> [k..]\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule stutter_equiv_suffixes_left)"], ["proof (state)\nthis:\n  \\<tau> [n..] \\<approx> \\<sigma> [m..]\n  \\<forall>j<n. \\<exists>k<m. \\<tau> [j..] \\<approx> \\<sigma> [k..]\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n         \\<forall>j<n.\n            \\<exists>k<m. \\<sigma> [k..] \\<approx> \\<tau> [j..]\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with that"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [?n..];\n   \\<forall>j<?n.\n      \\<exists>k<m. \\<sigma> [k..] \\<approx> \\<tau> [j..]\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<tau> [n..] \\<approx> \\<sigma> [m..]\n  \\<forall>j<n. \\<exists>k<m. \\<tau> [j..] \\<approx> \\<sigma> [k..]", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [?n..];\n   \\<forall>j<?n.\n      \\<exists>k<m. \\<sigma> [k..] \\<approx> \\<tau> [j..]\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<tau> [n..] \\<approx> \\<sigma> [m..]\n  \\<forall>j<n. \\<exists>k<m. \\<tau> [j..] \\<approx> \\<sigma> [k..]\n\ngoal (1 subgoal):\n 1. thesis", "by (blast dest: stutter_equiv_sym)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  In particular, if \\<open>\\<sigma>\\<close> and \\<open>\\<tau>\\<close> are stutter equivalent then\n  every element that occurs in one sequence also occurs in the other.\n\\<close>"], ["", "lemma stutter_equiv_element_left:\n  assumes \"\\<sigma> \\<approx> \\<tau>\"\n  obtains m where \"\\<sigma> m = \\<tau> n\" and \"\\<forall>j<m. \\<exists>k<n. \\<sigma> j = \\<tau> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>\\<sigma> m = \\<tau> n;\n         \\<forall>j<m. \\<exists>k<n. \\<sigma> j = \\<tau> k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>\\<sigma> m = \\<tau> n;\n         \\<forall>j<m. \\<exists>k<n. \\<sigma> j = \\<tau> k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms"], ["proof (chain)\npicking this:\n  \\<sigma> \\<approx> \\<tau>", "obtain m where \"\\<sigma>[m..] \\<approx> \\<tau>[n..]\" \"\\<forall>j<m. \\<exists>k<n. \\<sigma>[j..] \\<approx> \\<tau>[k..]\""], ["proof (prove)\nusing this:\n  \\<sigma> \\<approx> \\<tau>\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n         \\<forall>j<m.\n            \\<exists>k<n. \\<sigma> [j..] \\<approx> \\<tau> [k..]\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule stutter_equiv_suffixes_left)"], ["proof (state)\nthis:\n  \\<sigma> [m..] \\<approx> \\<tau> [n..]\n  \\<forall>j<m. \\<exists>k<n. \\<sigma> [j..] \\<approx> \\<tau> [k..]\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>\\<sigma> m = \\<tau> n;\n         \\<forall>j<m. \\<exists>k<n. \\<sigma> j = \\<tau> k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with that"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<sigma> ?m = \\<tau> n;\n   \\<forall>j<?m. \\<exists>k<n. \\<sigma> j = \\<tau> k\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<sigma> [m..] \\<approx> \\<tau> [n..]\n  \\<forall>j<m. \\<exists>k<n. \\<sigma> [j..] \\<approx> \\<tau> [k..]", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<sigma> ?m = \\<tau> n;\n   \\<forall>j<?m. \\<exists>k<n. \\<sigma> j = \\<tau> k\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<sigma> [m..] \\<approx> \\<tau> [n..]\n  \\<forall>j<m. \\<exists>k<n. \\<sigma> [j..] \\<approx> \\<tau> [k..]\n\ngoal (1 subgoal):\n 1. thesis", "by (force dest: stutter_equiv_0)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stutter_equiv_element_right:\n  assumes \"\\<sigma> \\<approx> \\<tau>\"\n  obtains n where \"\\<sigma> m = \\<tau> n\" and \"\\<forall>j<n. \\<exists>k<m. \\<sigma> k = \\<tau> j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>\\<sigma> m = \\<tau> n;\n         \\<forall>j<n. \\<exists>k<m. \\<sigma> k = \\<tau> j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>\\<sigma> m = \\<tau> n;\n         \\<forall>j<n. \\<exists>k<m. \\<sigma> k = \\<tau> j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms"], ["proof (chain)\npicking this:\n  \\<sigma> \\<approx> \\<tau>", "obtain n where \"\\<sigma>[m..] \\<approx> \\<tau>[n..]\" \"\\<forall>j<n. \\<exists>k<m. \\<sigma>[k..] \\<approx> \\<tau>[j..]\""], ["proof (prove)\nusing this:\n  \\<sigma> \\<approx> \\<tau>\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>\\<sigma> [m..] \\<approx> \\<tau> [n..];\n         \\<forall>j<n.\n            \\<exists>k<m. \\<sigma> [k..] \\<approx> \\<tau> [j..]\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule stutter_equiv_suffixes_right)"], ["proof (state)\nthis:\n  \\<sigma> [m..] \\<approx> \\<tau> [n..]\n  \\<forall>j<n. \\<exists>k<m. \\<sigma> [k..] \\<approx> \\<tau> [j..]\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>\\<sigma> m = \\<tau> n;\n         \\<forall>j<n. \\<exists>k<m. \\<sigma> k = \\<tau> j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with that"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<sigma> m = \\<tau> ?n;\n   \\<forall>j<?n. \\<exists>k<m. \\<sigma> k = \\<tau> j\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<sigma> [m..] \\<approx> \\<tau> [n..]\n  \\<forall>j<n. \\<exists>k<m. \\<sigma> [k..] \\<approx> \\<tau> [j..]", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<sigma> m = \\<tau> ?n;\n   \\<forall>j<?n. \\<exists>k<m. \\<sigma> k = \\<tau> j\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<sigma> [m..] \\<approx> \\<tau> [n..]\n  \\<forall>j<n. \\<exists>k<m. \\<sigma> [k..] \\<approx> \\<tau> [j..]\n\ngoal (1 subgoal):\n 1. thesis", "by (force dest: stutter_equiv_0)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}