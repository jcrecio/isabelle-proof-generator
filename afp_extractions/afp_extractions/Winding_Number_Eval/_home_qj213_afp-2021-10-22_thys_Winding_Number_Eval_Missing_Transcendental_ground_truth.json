{"file_name": "/home/qj213/afp-2021-10-22/thys/Winding_Number_Eval/Missing_Transcendental.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Winding_Number_Eval", "problem_names": ["lemma Im_Ln_eq_pi_half:\n    \"z \\<noteq> 0 \\<Longrightarrow> (Im(Ln z) = pi/2 \\<longleftrightarrow> 0 < Im(z) \\<and> Re(z) = 0)\"\n    \"z \\<noteq> 0 \\<Longrightarrow> (Im(Ln z) = -pi/2 \\<longleftrightarrow> Im(z) < 0 \\<and> Re(z) = 0)\"", "lemma Im_Ln_eq:\n  assumes \"z\\<noteq>0\"\n  shows \"Im (Ln z) = (if Re z\\<noteq>0 then\n                        if Re z>0 then\n                          arctan (Im z/Re z)\n                        else if Im z\\<ge>0 then\n                           arctan (Im z/Re z) + pi\n                        else\n                           arctan (Im z/Re z) - pi\n                      else\n                        if Im z>0 then pi/2 else -pi/2)\"", "lemma exp_Arg2pi2pi_multivalue:\n  assumes \"exp (\\<i>* of_real x) = z\"\n  shows \"\\<exists>k::int. x = Arg2pi z + 2*k*pi\"", "lemma cos_eq_neg_periodic_intro:\n  assumes \"x - y=2*(of_int k)*pi + pi \\<or> x + y = 2*(of_int k)*pi + pi\"\n  shows \"cos x = - cos y\"", "lemma cos_eq_periodic_intro:\n  assumes \"x - y=2*(of_int k)*pi \\<or> x + y = 2*(of_int k)*pi\"\n  shows \"cos x = cos y\"", "lemma sin_tan_half: \"sin (2*x) = 2 * tan x / (1 + (tan x)^2)\"", "lemma cos_tan_half: \"cos x \\<noteq>0 \\<Longrightarrow>  cos (2*x) = (1 - (tan x)^2) / (1+ (tan x)^2)\"", "lemma tan_eq_arctan_Ex:\n  shows \"tan x = y \\<longleftrightarrow> (\\<exists>k::int. x = arctan y + k*pi \\<or> (x = pi/2 + k*pi \\<and> y=0))\"", "lemma arccos_unique:\n  assumes \"0 \\<le> x\"\n    and \"x \\<le> pi\"\n    and \"cos x = y\"\n  shows \"arccos y = x\"", "lemma cos_eq_arccos_Ex:\n  \"cos x = y \\<longleftrightarrow> -1\\<le>y \\<and> y\\<le>1 \\<and> (\\<exists>k::int. x = arccos y + 2*k*pi \\<or> x = - arccos y + 2*k*pi)\"", "lemma uniform_discrete_tan_eq:\n  \"uniform_discrete {x::real. tan x = y}\"", "lemma get_norm_value:\n  fixes a::\"'a::{floor_ceiling}\"\n  assumes \"pp>0\"\n  obtains k::int and a1 where \"a=(of_int k)*pp+a1\" \"a0\\<le>a1\" \"a1<a0+pp\"", "lemma filtermap_tan_at_right:\n  fixes a::real\n  assumes \"cos a\\<noteq>0\"\n  shows \"filtermap tan (at_right a) = at_right (tan a)\"", "lemma filtermap_tan_at_left:\n  fixes a::real\n  assumes \"cos a\\<noteq>0\"\n  shows \"filtermap tan (at_left a) = at_left (tan a)\"", "lemma cos_zero_iff_int2:\n  fixes x::real\n  shows \"cos x = 0 \\<longleftrightarrow> (\\<exists>n::int. x = n * pi +  pi/2)\"", "lemma filtermap_tan_at_right_inf:\n  fixes a::real\n  assumes \"cos a=0\"\n  shows \"filtermap tan (at_right a) = at_bot\"", "lemma filtermap_tan_at_left_inf:\n  fixes a::real\n  assumes \"cos a=0\"\n  shows \"filtermap tan (at_left a) = at_top\"", "lemma periodic_set_multiple:\n  assumes \"k\\<noteq>0\"\n  shows \"periodic_set S \\<delta> \\<longleftrightarrow> periodic_set S (of_int k*\\<delta>)\"", "lemma periodic_set_empty[simp]: \"periodic_set {} \\<delta>\"", "lemma periodic_set_finite:\n  assumes \"finite S\"\n  shows \"periodic_set S \\<delta>\"", "lemma periodic_set_subset[elim]:\n  assumes \"periodic_set S \\<delta>\" \"T \\<subseteq> S\"\n  shows \"periodic_set T \\<delta>\"", "lemma periodic_set_union:\n  assumes \"periodic_set S \\<delta>\" \"periodic_set T \\<delta>\"\n  shows \"periodic_set (S \\<union> T) \\<delta>\"", "lemma periodic_imp_uniform_discrete:\n  assumes \"periodic_set S \\<delta>\"\n  shows \"uniform_discrete S\"", "lemma periodic_set_tan_linear:\n  assumes \"a\\<noteq>0\" \"c\\<noteq>0\"\n  shows \"periodic_set (roots (\\<lambda>x. a*tan (x/c) + b)) (c*pi)\"", "lemma periodic_set_cos_linear:\n  assumes \"a\\<noteq>0\" \"c\\<noteq>0\"\n  shows \"periodic_set (roots (\\<lambda>x. a*cos (x/c) + b)) (2*c*pi)\"", "lemma periodic_set_tan_poly:\n  assumes \"p\\<noteq>0\" \"c\\<noteq>0\"\n  shows \"periodic_set (roots (\\<lambda>x. poly p (tan (x/c)))) (c*pi)\"", "lemma periodic_set_sin_cos_linear:\n  fixes a b c ::real\n  assumes \"a\\<noteq>0 \\<or> b\\<noteq>0 \\<or> c\\<noteq>0\"\n  shows \"periodic_set (roots (\\<lambda>x. a * cos x + b * sin x + c)) (4*pi)\""], "translations": [["", "lemma Im_Ln_eq_pi_half:\n    \"z \\<noteq> 0 \\<Longrightarrow> (Im(Ln z) = pi/2 \\<longleftrightarrow> 0 < Im(z) \\<and> Re(z) = 0)\"\n    \"z \\<noteq> 0 \\<Longrightarrow> (Im(Ln z) = -pi/2 \\<longleftrightarrow> Im(z) < 0 \\<and> Re(z) = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (z \\<noteq> 0 \\<Longrightarrow>\n     (Im (Ln z) = pi / 2) = (0 < Im z \\<and> Re z = 0)) &&&\n    (z \\<noteq> 0 \\<Longrightarrow>\n     (Im (Ln z) = - pi / 2) = (Im z < 0 \\<and> Re z = 0))", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. z \\<noteq> 0 \\<Longrightarrow>\n    (Im (Ln z) = pi / 2) = (0 < Im z \\<and> Re z = 0)\n 2. z \\<noteq> 0 \\<Longrightarrow>\n    (Im (Ln z) = - pi / 2) = (Im z < 0 \\<and> Re z = 0)", "show \"z \\<noteq> 0 \\<Longrightarrow> (Im(Ln z) = pi/2 \\<longleftrightarrow> 0 < Im(z) \\<and> Re(z) = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<noteq> 0 \\<Longrightarrow>\n    (Im (Ln z) = pi / 2) = (0 < Im z \\<and> Re z = 0)", "by (metis Im_Ln_eq_pi Im_Ln_le_pi Im_Ln_pos_lt Re_Ln_pos_le Re_Ln_pos_lt\n      abs_of_nonneg less_eq_real_def order_less_irrefl pi_half_gt_zero)"], ["proof (state)\nthis:\n  z \\<noteq> 0 \\<Longrightarrow>\n  (Im (Ln z) = pi / 2) = (0 < Im z \\<and> Re z = 0)\n\ngoal (1 subgoal):\n 1. z \\<noteq> 0 \\<Longrightarrow>\n    (Im (Ln z) = - pi / 2) = (Im z < 0 \\<and> Re z = 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. z \\<noteq> 0 \\<Longrightarrow>\n    (Im (Ln z) = - pi / 2) = (Im z < 0 \\<and> Re z = 0)", "assume \"z\\<noteq>0\""], ["proof (state)\nthis:\n  z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. z \\<noteq> 0 \\<Longrightarrow>\n    (Im (Ln z) = - pi / 2) = (Im z < 0 \\<and> Re z = 0)", "have \"Im (Ln z) = - pi / 2 \\<Longrightarrow> Im z < 0 \\<and> Re z = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Im (Ln z) = - pi / 2 \\<Longrightarrow> Im z < 0 \\<and> Re z = 0", "by (metis Im_Ln_pos_le Re_Ln_pos_le Re_Ln_pos_lt_imp \\<open>z \\<noteq> 0\\<close> abs_if\n     add.inverse_inverse divide_minus_left less_eq_real_def linorder_not_le minus_pi_half_less_zero)"], ["proof (state)\nthis:\n  Im (Ln z) = - pi / 2 \\<Longrightarrow> Im z < 0 \\<and> Re z = 0\n\ngoal (1 subgoal):\n 1. z \\<noteq> 0 \\<Longrightarrow>\n    (Im (Ln z) = - pi / 2) = (Im z < 0 \\<and> Re z = 0)", "moreover"], ["proof (state)\nthis:\n  Im (Ln z) = - pi / 2 \\<Longrightarrow> Im z < 0 \\<and> Re z = 0\n\ngoal (1 subgoal):\n 1. z \\<noteq> 0 \\<Longrightarrow>\n    (Im (Ln z) = - pi / 2) = (Im z < 0 \\<and> Re z = 0)", "have \"Im (Ln z) = - pi / 2\" when \"Im z < 0\" \"Re z = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Im (Ln z) = - pi / 2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Im (Ln z) = - pi / 2", "obtain r::real where \"r>0\" \"z=r * (-\\<i>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>0 < r; z = complex_of_real r * - \\<i>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis \\<open>Im z < 0\\<close> \\<open>Re z = 0\\<close> add.commute add.inverse_inverse add.right_neutral\n          complex_eq complex_i_mult_minus diff_0 mult.commute mult.left_commute neg_0_less_iff_less\n          of_real_0 of_real_diff)"], ["proof (state)\nthis:\n  0 < r\n  z = complex_of_real r * - \\<i>\n\ngoal (1 subgoal):\n 1. Im (Ln z) = - pi / 2", "then"], ["proof (chain)\npicking this:\n  0 < r\n  z = complex_of_real r * - \\<i>", "have \"Im (Ln z) = Im (Ln (r*(-\\<i>)))\""], ["proof (prove)\nusing this:\n  0 < r\n  z = complex_of_real r * - \\<i>\n\ngoal (1 subgoal):\n 1. Im (Ln z) = Im (Ln (complex_of_real r * - \\<i>))", "by auto"], ["proof (state)\nthis:\n  Im (Ln z) = Im (Ln (complex_of_real r * - \\<i>))\n\ngoal (1 subgoal):\n 1. Im (Ln z) = - pi / 2", "also"], ["proof (state)\nthis:\n  Im (Ln z) = Im (Ln (complex_of_real r * - \\<i>))\n\ngoal (1 subgoal):\n 1. Im (Ln z) = - pi / 2", "have \"... = Im (Ln (complex_of_real r) + Ln (- \\<i>)) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. Im (Ln (complex_of_real r * - \\<i>)) =\n    Im (Ln (complex_of_real r) + Ln (- \\<i>))", "apply (subst Ln_times_of_real)"], ["proof (prove)\ngoal (3 subgoals):\n 1. 0 < r\n 2. - \\<i> \\<noteq> 0\n 3. Im (Ln (complex_of_real r) + Ln (- \\<i>)) =\n    Im (Ln (complex_of_real r) + Ln (- \\<i>))", "using \\<open>r>0\\<close>"], ["proof (prove)\nusing this:\n  0 < r\n\ngoal (3 subgoals):\n 1. 0 < r\n 2. - \\<i> \\<noteq> 0\n 3. Im (Ln (complex_of_real r) + Ln (- \\<i>)) =\n    Im (Ln (complex_of_real r) + Ln (- \\<i>))", "by auto"], ["proof (state)\nthis:\n  Im (Ln (complex_of_real r * - \\<i>)) =\n  Im (Ln (complex_of_real r) + Ln (- \\<i>))\n\ngoal (1 subgoal):\n 1. Im (Ln z) = - pi / 2", "also"], ["proof (state)\nthis:\n  Im (Ln (complex_of_real r * - \\<i>)) =\n  Im (Ln (complex_of_real r) + Ln (- \\<i>))\n\ngoal (1 subgoal):\n 1. Im (Ln z) = - pi / 2", "have \"... = - pi/2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Im (Ln (complex_of_real r) + Ln (- \\<i>)) = - pi / 2", "using \\<open>r>0\\<close>"], ["proof (prove)\nusing this:\n  0 < r\n\ngoal (1 subgoal):\n 1. Im (Ln (complex_of_real r) + Ln (- \\<i>)) = - pi / 2", "by simp"], ["proof (state)\nthis:\n  Im (Ln (complex_of_real r) + Ln (- \\<i>)) = - pi / 2\n\ngoal (1 subgoal):\n 1. Im (Ln z) = - pi / 2", "finally"], ["proof (chain)\npicking this:\n  Im (Ln z) = - pi / 2", "show \"Im (Ln z) = - pi / 2\""], ["proof (prove)\nusing this:\n  Im (Ln z) = - pi / 2\n\ngoal (1 subgoal):\n 1. Im (Ln z) = - pi / 2", "."], ["proof (state)\nthis:\n  Im (Ln z) = - pi / 2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>Im z < 0; Re z = 0\\<rbrakk>\n  \\<Longrightarrow> Im (Ln z) = - pi / 2\n\ngoal (1 subgoal):\n 1. z \\<noteq> 0 \\<Longrightarrow>\n    (Im (Ln z) = - pi / 2) = (Im z < 0 \\<and> Re z = 0)", "ultimately"], ["proof (chain)\npicking this:\n  Im (Ln z) = - pi / 2 \\<Longrightarrow> Im z < 0 \\<and> Re z = 0\n  \\<lbrakk>Im z < 0; Re z = 0\\<rbrakk>\n  \\<Longrightarrow> Im (Ln z) = - pi / 2", "show \"(Im(Ln z) = -pi/2 \\<longleftrightarrow> Im(z) < 0 \\<and> Re(z) = 0)\""], ["proof (prove)\nusing this:\n  Im (Ln z) = - pi / 2 \\<Longrightarrow> Im z < 0 \\<and> Re z = 0\n  \\<lbrakk>Im z < 0; Re z = 0\\<rbrakk>\n  \\<Longrightarrow> Im (Ln z) = - pi / 2\n\ngoal (1 subgoal):\n 1. (Im (Ln z) = - pi / 2) = (Im z < 0 \\<and> Re z = 0)", "by auto"], ["proof (state)\nthis:\n  (Im (Ln z) = - pi / 2) = (Im z < 0 \\<and> Re z = 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Im_Ln_eq:\n  assumes \"z\\<noteq>0\"\n  shows \"Im (Ln z) = (if Re z\\<noteq>0 then\n                        if Re z>0 then\n                          arctan (Im z/Re z)\n                        else if Im z\\<ge>0 then\n                           arctan (Im z/Re z) + pi\n                        else\n                           arctan (Im z/Re z) - pi\n                      else\n                        if Im z>0 then pi/2 else -pi/2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Im (Ln z) =\n    (if Re z \\<noteq> 0\n     then if 0 < Re z then arctan (Im z / Re z)\n          else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n               else arctan (Im z / Re z) - pi\n     else if 0 < Im z then pi / 2 else - pi / 2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Im (Ln z) =\n    (if Re z \\<noteq> 0\n     then if 0 < Re z then arctan (Im z / Re z)\n          else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n               else arctan (Im z / Re z) - pi\n     else if 0 < Im z then pi / 2 else - pi / 2)", "have eq_arctan_pos:\"Im (Ln z) = arctan (Im z/Re z)\" when \"Re z>0\" for z"], ["proof (prove)\ngoal (1 subgoal):\n 1. Im (Ln z) = arctan (Im z / Re z)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Im (Ln z) = arctan (Im z / Re z)", "define wR where \"wR=Re (Ln z)\""], ["proof (state)\nthis:\n  wR = Re (Ln z)\n\ngoal (1 subgoal):\n 1. Im (Ln z) = arctan (Im z / Re z)", "define \\<theta> where \"\\<theta> = arctan (Im z/Re z)\""], ["proof (state)\nthis:\n  \\<theta> = arctan (Im z / Re z)\n\ngoal (1 subgoal):\n 1. Im (Ln z) = arctan (Im z / Re z)", "have \"z\\<noteq>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<noteq> 0", "using that"], ["proof (prove)\nusing this:\n  0 < Re z\n\ngoal (1 subgoal):\n 1. z \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Im (Ln z) = arctan (Im z / Re z)", "have \"exp (Complex wR \\<theta>) = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (Complex wR \\<theta>) = z", "proof (rule complex_eqI)"], ["proof (state)\ngoal (2 subgoals):\n 1. Re (exp (Complex wR \\<theta>)) = Re z\n 2. Im (exp (Complex wR \\<theta>)) = Im z", "have \"Im (exp (Complex wR \\<theta>)) =exp wR * sin \\<theta> \""], ["proof (prove)\ngoal (1 subgoal):\n 1. Im (exp (Complex wR \\<theta>)) = exp wR * sin \\<theta>", "unfolding Im_exp"], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (Re (Complex wR \\<theta>)) * sin (Im (Complex wR \\<theta>)) =\n    exp wR * sin \\<theta>", "by simp"], ["proof (state)\nthis:\n  Im (exp (Complex wR \\<theta>)) = exp wR * sin \\<theta>\n\ngoal (2 subgoals):\n 1. Re (exp (Complex wR \\<theta>)) = Re z\n 2. Im (exp (Complex wR \\<theta>)) = Im z", "also"], ["proof (state)\nthis:\n  Im (exp (Complex wR \\<theta>)) = exp wR * sin \\<theta>\n\ngoal (2 subgoals):\n 1. Re (exp (Complex wR \\<theta>)) = Re z\n 2. Im (exp (Complex wR \\<theta>)) = Im z", "have \"... = Im z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp wR * sin \\<theta> = Im z", "unfolding wR_def Re_Ln[OF \\<open>z\\<noteq>0\\<close>] \\<theta>_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (ln (cmod z)) * sin (arctan (Im z / Re z)) = Im z", "using \\<open>z\\<noteq>0\\<close> \\<open>Re z>0\\<close>"], ["proof (prove)\nusing this:\n  z \\<noteq> 0\n  0 < Re z\n\ngoal (1 subgoal):\n 1. exp (ln (cmod z)) * sin (arctan (Im z / Re z)) = Im z", "by (auto simp add:sin_arctan divide_simps complex_neq_0 cmod_def real_sqrt_divide)"], ["proof (state)\nthis:\n  exp wR * sin \\<theta> = Im z\n\ngoal (2 subgoals):\n 1. Re (exp (Complex wR \\<theta>)) = Re z\n 2. Im (exp (Complex wR \\<theta>)) = Im z", "finally"], ["proof (chain)\npicking this:\n  Im (exp (Complex wR \\<theta>)) = Im z", "show \"Im (exp (Complex wR \\<theta>)) = Im z\""], ["proof (prove)\nusing this:\n  Im (exp (Complex wR \\<theta>)) = Im z\n\ngoal (1 subgoal):\n 1. Im (exp (Complex wR \\<theta>)) = Im z", "."], ["proof (state)\nthis:\n  Im (exp (Complex wR \\<theta>)) = Im z\n\ngoal (1 subgoal):\n 1. Re (exp (Complex wR \\<theta>)) = Re z", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Re (exp (Complex wR \\<theta>)) = Re z", "have \"Re (exp (Complex wR \\<theta>)) = exp wR * cos \\<theta> \""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re (exp (Complex wR \\<theta>)) = exp wR * cos \\<theta>", "unfolding Re_exp"], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (Re (Complex wR \\<theta>)) * cos (Im (Complex wR \\<theta>)) =\n    exp wR * cos \\<theta>", "by simp"], ["proof (state)\nthis:\n  Re (exp (Complex wR \\<theta>)) = exp wR * cos \\<theta>\n\ngoal (1 subgoal):\n 1. Re (exp (Complex wR \\<theta>)) = Re z", "also"], ["proof (state)\nthis:\n  Re (exp (Complex wR \\<theta>)) = exp wR * cos \\<theta>\n\ngoal (1 subgoal):\n 1. Re (exp (Complex wR \\<theta>)) = Re z", "have \"... = Re z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp wR * cos \\<theta> = Re z", "unfolding wR_def Re_Ln[OF \\<open>z\\<noteq>0\\<close>] \\<theta>_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (ln (cmod z)) * cos (arctan (Im z / Re z)) = Re z", "using \\<open>z\\<noteq>0\\<close> \\<open>Re z>0\\<close>"], ["proof (prove)\nusing this:\n  z \\<noteq> 0\n  0 < Re z\n\ngoal (1 subgoal):\n 1. exp (ln (cmod z)) * cos (arctan (Im z / Re z)) = Re z", "by (auto simp add:cos_arctan divide_simps complex_neq_0 cmod_def real_sqrt_divide)"], ["proof (state)\nthis:\n  exp wR * cos \\<theta> = Re z\n\ngoal (1 subgoal):\n 1. Re (exp (Complex wR \\<theta>)) = Re z", "finally"], ["proof (chain)\npicking this:\n  Re (exp (Complex wR \\<theta>)) = Re z", "show \"Re (exp (Complex wR \\<theta>)) = Re z\""], ["proof (prove)\nusing this:\n  Re (exp (Complex wR \\<theta>)) = Re z\n\ngoal (1 subgoal):\n 1. Re (exp (Complex wR \\<theta>)) = Re z", "."], ["proof (state)\nthis:\n  Re (exp (Complex wR \\<theta>)) = Re z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  exp (Complex wR \\<theta>) = z\n\ngoal (1 subgoal):\n 1. Im (Ln z) = arctan (Im z / Re z)", "moreover"], ["proof (state)\nthis:\n  exp (Complex wR \\<theta>) = z\n\ngoal (1 subgoal):\n 1. Im (Ln z) = arctan (Im z / Re z)", "have \"-pi<\\<theta>\" \"\\<theta>\\<le>pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - pi < \\<theta> &&& \\<theta> \\<le> pi", "unfolding \\<theta>_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. - pi < arctan (Im z / Re z) &&& arctan (Im z / Re z) \\<le> pi", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. - pi < arctan (Im z / Re z)", "by (auto intro:order_class.order.strict_trans[OF _ arctan_lbound])"], ["proof (prove)\ngoal (1 subgoal):\n 1. arctan (Im z / Re z) \\<le> pi", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. arctan (Im z / Re z) \\<le> pi", "apply (rule preorder_class.less_imp_le)"], ["proof (prove)\ngoal (1 subgoal):\n 1. arctan (Im z / Re z) < pi", "by (auto intro:order_class.order.strict_trans[OF arctan_ubound])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  - pi < \\<theta>\n  \\<theta> \\<le> pi\n\ngoal (1 subgoal):\n 1. Im (Ln z) = arctan (Im z / Re z)", "ultimately"], ["proof (chain)\npicking this:\n  exp (Complex wR \\<theta>) = z\n  - pi < \\<theta>\n  \\<theta> \\<le> pi", "have \"Ln z = Complex wR \\<theta>\""], ["proof (prove)\nusing this:\n  exp (Complex wR \\<theta>) = z\n  - pi < \\<theta>\n  \\<theta> \\<le> pi\n\ngoal (1 subgoal):\n 1. Ln z = Complex wR \\<theta>", "using Ln_unique"], ["proof (prove)\nusing this:\n  exp (Complex wR \\<theta>) = z\n  - pi < \\<theta>\n  \\<theta> \\<le> pi\n  \\<lbrakk>exp ?z = ?w; - pi < Im ?z; Im ?z \\<le> pi\\<rbrakk>\n  \\<Longrightarrow> Ln ?w = ?z\n\ngoal (1 subgoal):\n 1. Ln z = Complex wR \\<theta>", "by auto"], ["proof (state)\nthis:\n  Ln z = Complex wR \\<theta>\n\ngoal (1 subgoal):\n 1. Im (Ln z) = arctan (Im z / Re z)", "then"], ["proof (chain)\npicking this:\n  Ln z = Complex wR \\<theta>", "show ?thesis"], ["proof (prove)\nusing this:\n  Ln z = Complex wR \\<theta>\n\ngoal (1 subgoal):\n 1. Im (Ln z) = arctan (Im z / Re z)", "using that"], ["proof (prove)\nusing this:\n  Ln z = Complex wR \\<theta>\n  0 < Re z\n\ngoal (1 subgoal):\n 1. Im (Ln z) = arctan (Im z / Re z)", "unfolding \\<theta>_def"], ["proof (prove)\nusing this:\n  Ln z = Complex wR (arctan (Im z / Re z))\n  0 < Re z\n\ngoal (1 subgoal):\n 1. Im (Ln z) = arctan (Im z / Re z)", "by auto"], ["proof (state)\nthis:\n  Im (Ln z) = arctan (Im z / Re z)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < Re ?z \\<Longrightarrow> Im (Ln ?z) = arctan (Im ?z / Re ?z)\n\ngoal (1 subgoal):\n 1. Im (Ln z) =\n    (if Re z \\<noteq> 0\n     then if 0 < Re z then arctan (Im z / Re z)\n          else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n               else arctan (Im z / Re z) - pi\n     else if 0 < Im z then pi / 2 else - pi / 2)", "have ?thesis when \"Re z=0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Im (Ln z) =\n    (if Re z \\<noteq> 0\n     then if 0 < Re z then arctan (Im z / Re z)\n          else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n               else arctan (Im z / Re z) - pi\n     else if 0 < Im z then pi / 2 else - pi / 2)", "using Im_Ln_eq_pi_half[OF \\<open>z\\<noteq>0\\<close>] that"], ["proof (prove)\nusing this:\n  (Im (Ln z) = pi / 2) = (0 < Im z \\<and> Re z = 0)\n  (Im (Ln z) = - pi / 2) = (Im z < 0 \\<and> Re z = 0)\n  Re z = 0\n\ngoal (1 subgoal):\n 1. Im (Ln z) =\n    (if Re z \\<noteq> 0\n     then if 0 < Re z then arctan (Im z / Re z)\n          else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n               else arctan (Im z / Re z) - pi\n     else if 0 < Im z then pi / 2 else - pi / 2)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Re z = 0; Im (Ln z) * 2 \\<noteq> pi; Im z = 0;\n     Im (Ln z) \\<noteq> - (pi / 2)\\<rbrakk>\n    \\<Longrightarrow> False", "using assms complex.expand"], ["proof (prove)\nusing this:\n  z \\<noteq> 0\n  Re ?complex = Re ?complex' \\<and>\n  Im ?complex = Im ?complex' \\<Longrightarrow>\n  ?complex = ?complex'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Re z = 0; Im (Ln z) * 2 \\<noteq> pi; Im z = 0;\n     Im (Ln z) \\<noteq> - (pi / 2)\\<rbrakk>\n    \\<Longrightarrow> False", "by auto"], ["proof (state)\nthis:\n  Re z = 0 \\<Longrightarrow>\n  Im (Ln z) =\n  (if Re z \\<noteq> 0\n   then if 0 < Re z then arctan (Im z / Re z)\n        else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n             else arctan (Im z / Re z) - pi\n   else if 0 < Im z then pi / 2 else - pi / 2)\n\ngoal (1 subgoal):\n 1. Im (Ln z) =\n    (if Re z \\<noteq> 0\n     then if 0 < Re z then arctan (Im z / Re z)\n          else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n               else arctan (Im z / Re z) - pi\n     else if 0 < Im z then pi / 2 else - pi / 2)", "moreover"], ["proof (state)\nthis:\n  Re z = 0 \\<Longrightarrow>\n  Im (Ln z) =\n  (if Re z \\<noteq> 0\n   then if 0 < Re z then arctan (Im z / Re z)\n        else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n             else arctan (Im z / Re z) - pi\n   else if 0 < Im z then pi / 2 else - pi / 2)\n\ngoal (1 subgoal):\n 1. Im (Ln z) =\n    (if Re z \\<noteq> 0\n     then if 0 < Re z then arctan (Im z / Re z)\n          else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n               else arctan (Im z / Re z) - pi\n     else if 0 < Im z then pi / 2 else - pi / 2)", "have ?thesis when \"Re z>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Im (Ln z) =\n    (if Re z \\<noteq> 0\n     then if 0 < Re z then arctan (Im z / Re z)\n          else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n               else arctan (Im z / Re z) - pi\n     else if 0 < Im z then pi / 2 else - pi / 2)", "using eq_arctan_pos[OF that] that"], ["proof (prove)\nusing this:\n  Im (Ln z) = arctan (Im z / Re z)\n  0 < Re z\n\ngoal (1 subgoal):\n 1. Im (Ln z) =\n    (if Re z \\<noteq> 0\n     then if 0 < Re z then arctan (Im z / Re z)\n          else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n               else arctan (Im z / Re z) - pi\n     else if 0 < Im z then pi / 2 else - pi / 2)", "by auto"], ["proof (state)\nthis:\n  0 < Re z \\<Longrightarrow>\n  Im (Ln z) =\n  (if Re z \\<noteq> 0\n   then if 0 < Re z then arctan (Im z / Re z)\n        else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n             else arctan (Im z / Re z) - pi\n   else if 0 < Im z then pi / 2 else - pi / 2)\n\ngoal (1 subgoal):\n 1. Im (Ln z) =\n    (if Re z \\<noteq> 0\n     then if 0 < Re z then arctan (Im z / Re z)\n          else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n               else arctan (Im z / Re z) - pi\n     else if 0 < Im z then pi / 2 else - pi / 2)", "moreover"], ["proof (state)\nthis:\n  0 < Re z \\<Longrightarrow>\n  Im (Ln z) =\n  (if Re z \\<noteq> 0\n   then if 0 < Re z then arctan (Im z / Re z)\n        else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n             else arctan (Im z / Re z) - pi\n   else if 0 < Im z then pi / 2 else - pi / 2)\n\ngoal (1 subgoal):\n 1. Im (Ln z) =\n    (if Re z \\<noteq> 0\n     then if 0 < Re z then arctan (Im z / Re z)\n          else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n               else arctan (Im z / Re z) - pi\n     else if 0 < Im z then pi / 2 else - pi / 2)", "have ?thesis when \"Re z<0\" \"Im z\\<ge>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Im (Ln z) =\n    (if Re z \\<noteq> 0\n     then if 0 < Re z then arctan (Im z / Re z)\n          else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n               else arctan (Im z / Re z) - pi\n     else if 0 < Im z then pi / 2 else - pi / 2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Im (Ln z) =\n    (if Re z \\<noteq> 0\n     then if 0 < Re z then arctan (Im z / Re z)\n          else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n               else arctan (Im z / Re z) - pi\n     else if 0 < Im z then pi / 2 else - pi / 2)", "have \"Im (Ln (- z)) = arctan (Im (- z) / Re (- z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Im (Ln (- z)) = arctan (Im (- z) / Re (- z))", "apply (rule eq_arctan_pos)"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < Re (- z)", "using that"], ["proof (prove)\nusing this:\n  Re z < 0\n  0 \\<le> Im z\n\ngoal (1 subgoal):\n 1. 0 < Re (- z)", "by auto"], ["proof (state)\nthis:\n  Im (Ln (- z)) = arctan (Im (- z) / Re (- z))\n\ngoal (1 subgoal):\n 1. Im (Ln z) =\n    (if Re z \\<noteq> 0\n     then if 0 < Re z then arctan (Im z / Re z)\n          else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n               else arctan (Im z / Re z) - pi\n     else if 0 < Im z then pi / 2 else - pi / 2)", "moreover"], ["proof (state)\nthis:\n  Im (Ln (- z)) = arctan (Im (- z) / Re (- z))\n\ngoal (1 subgoal):\n 1. Im (Ln z) =\n    (if Re z \\<noteq> 0\n     then if 0 < Re z then arctan (Im z / Re z)\n          else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n               else arctan (Im z / Re z) - pi\n     else if 0 < Im z then pi / 2 else - pi / 2)", "have \"Ln (- z) = Ln z - \\<i> * complex_of_real pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ln (- z) = Ln z - \\<i> * complex_of_real pi", "apply (subst Ln_minus[OF \\<open>z\\<noteq>0\\<close>])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if Im z \\<le> 0 \\<and> \\<not> (Re z < 0 \\<and> Im z = 0)\n     then Ln z + \\<i> * complex_of_real pi\n     else Ln z - \\<i> * complex_of_real pi) =\n    Ln z - \\<i> * complex_of_real pi", "using that"], ["proof (prove)\nusing this:\n  Re z < 0\n  0 \\<le> Im z\n\ngoal (1 subgoal):\n 1. (if Im z \\<le> 0 \\<and> \\<not> (Re z < 0 \\<and> Im z = 0)\n     then Ln z + \\<i> * complex_of_real pi\n     else Ln z - \\<i> * complex_of_real pi) =\n    Ln z - \\<i> * complex_of_real pi", "by auto"], ["proof (state)\nthis:\n  Ln (- z) = Ln z - \\<i> * complex_of_real pi\n\ngoal (1 subgoal):\n 1. Im (Ln z) =\n    (if Re z \\<noteq> 0\n     then if 0 < Re z then arctan (Im z / Re z)\n          else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n               else arctan (Im z / Re z) - pi\n     else if 0 < Im z then pi / 2 else - pi / 2)", "ultimately"], ["proof (chain)\npicking this:\n  Im (Ln (- z)) = arctan (Im (- z) / Re (- z))\n  Ln (- z) = Ln z - \\<i> * complex_of_real pi", "show ?thesis"], ["proof (prove)\nusing this:\n  Im (Ln (- z)) = arctan (Im (- z) / Re (- z))\n  Ln (- z) = Ln z - \\<i> * complex_of_real pi\n\ngoal (1 subgoal):\n 1. Im (Ln z) =\n    (if Re z \\<noteq> 0\n     then if 0 < Re z then arctan (Im z / Re z)\n          else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n               else arctan (Im z / Re z) - pi\n     else if 0 < Im z then pi / 2 else - pi / 2)", "using that"], ["proof (prove)\nusing this:\n  Im (Ln (- z)) = arctan (Im (- z) / Re (- z))\n  Ln (- z) = Ln z - \\<i> * complex_of_real pi\n  Re z < 0\n  0 \\<le> Im z\n\ngoal (1 subgoal):\n 1. Im (Ln z) =\n    (if Re z \\<noteq> 0\n     then if 0 < Re z then arctan (Im z / Re z)\n          else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n               else arctan (Im z / Re z) - pi\n     else if 0 < Im z then pi / 2 else - pi / 2)", "by auto"], ["proof (state)\nthis:\n  Im (Ln z) =\n  (if Re z \\<noteq> 0\n   then if 0 < Re z then arctan (Im z / Re z)\n        else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n             else arctan (Im z / Re z) - pi\n   else if 0 < Im z then pi / 2 else - pi / 2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>Re z < 0; 0 \\<le> Im z\\<rbrakk>\n  \\<Longrightarrow> Im (Ln z) =\n                    (if Re z \\<noteq> 0\n                     then if 0 < Re z then arctan (Im z / Re z)\n                          else if 0 \\<le> Im z\n                               then arctan (Im z / Re z) + pi\n                               else arctan (Im z / Re z) - pi\n                     else if 0 < Im z then pi / 2 else - pi / 2)\n\ngoal (1 subgoal):\n 1. Im (Ln z) =\n    (if Re z \\<noteq> 0\n     then if 0 < Re z then arctan (Im z / Re z)\n          else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n               else arctan (Im z / Re z) - pi\n     else if 0 < Im z then pi / 2 else - pi / 2)", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>Re z < 0; 0 \\<le> Im z\\<rbrakk>\n  \\<Longrightarrow> Im (Ln z) =\n                    (if Re z \\<noteq> 0\n                     then if 0 < Re z then arctan (Im z / Re z)\n                          else if 0 \\<le> Im z\n                               then arctan (Im z / Re z) + pi\n                               else arctan (Im z / Re z) - pi\n                     else if 0 < Im z then pi / 2 else - pi / 2)\n\ngoal (1 subgoal):\n 1. Im (Ln z) =\n    (if Re z \\<noteq> 0\n     then if 0 < Re z then arctan (Im z / Re z)\n          else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n               else arctan (Im z / Re z) - pi\n     else if 0 < Im z then pi / 2 else - pi / 2)", "have ?thesis when \"Re z<0\" \"Im z<0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Im (Ln z) =\n    (if Re z \\<noteq> 0\n     then if 0 < Re z then arctan (Im z / Re z)\n          else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n               else arctan (Im z / Re z) - pi\n     else if 0 < Im z then pi / 2 else - pi / 2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Im (Ln z) =\n    (if Re z \\<noteq> 0\n     then if 0 < Re z then arctan (Im z / Re z)\n          else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n               else arctan (Im z / Re z) - pi\n     else if 0 < Im z then pi / 2 else - pi / 2)", "have \"Im (Ln (- z)) = arctan (Im (- z) / Re (- z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Im (Ln (- z)) = arctan (Im (- z) / Re (- z))", "apply (rule eq_arctan_pos)"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < Re (- z)", "using that"], ["proof (prove)\nusing this:\n  Re z < 0\n  Im z < 0\n\ngoal (1 subgoal):\n 1. 0 < Re (- z)", "by auto"], ["proof (state)\nthis:\n  Im (Ln (- z)) = arctan (Im (- z) / Re (- z))\n\ngoal (1 subgoal):\n 1. Im (Ln z) =\n    (if Re z \\<noteq> 0\n     then if 0 < Re z then arctan (Im z / Re z)\n          else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n               else arctan (Im z / Re z) - pi\n     else if 0 < Im z then pi / 2 else - pi / 2)", "moreover"], ["proof (state)\nthis:\n  Im (Ln (- z)) = arctan (Im (- z) / Re (- z))\n\ngoal (1 subgoal):\n 1. Im (Ln z) =\n    (if Re z \\<noteq> 0\n     then if 0 < Re z then arctan (Im z / Re z)\n          else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n               else arctan (Im z / Re z) - pi\n     else if 0 < Im z then pi / 2 else - pi / 2)", "have \"Ln (- z) = Ln z + \\<i> * complex_of_real pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ln (- z) = Ln z + \\<i> * complex_of_real pi", "apply (subst Ln_minus[OF \\<open>z\\<noteq>0\\<close>])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if Im z \\<le> 0 \\<and> \\<not> (Re z < 0 \\<and> Im z = 0)\n     then Ln z + \\<i> * complex_of_real pi\n     else Ln z - \\<i> * complex_of_real pi) =\n    Ln z + \\<i> * complex_of_real pi", "using that"], ["proof (prove)\nusing this:\n  Re z < 0\n  Im z < 0\n\ngoal (1 subgoal):\n 1. (if Im z \\<le> 0 \\<and> \\<not> (Re z < 0 \\<and> Im z = 0)\n     then Ln z + \\<i> * complex_of_real pi\n     else Ln z - \\<i> * complex_of_real pi) =\n    Ln z + \\<i> * complex_of_real pi", "by auto"], ["proof (state)\nthis:\n  Ln (- z) = Ln z + \\<i> * complex_of_real pi\n\ngoal (1 subgoal):\n 1. Im (Ln z) =\n    (if Re z \\<noteq> 0\n     then if 0 < Re z then arctan (Im z / Re z)\n          else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n               else arctan (Im z / Re z) - pi\n     else if 0 < Im z then pi / 2 else - pi / 2)", "ultimately"], ["proof (chain)\npicking this:\n  Im (Ln (- z)) = arctan (Im (- z) / Re (- z))\n  Ln (- z) = Ln z + \\<i> * complex_of_real pi", "show ?thesis"], ["proof (prove)\nusing this:\n  Im (Ln (- z)) = arctan (Im (- z) / Re (- z))\n  Ln (- z) = Ln z + \\<i> * complex_of_real pi\n\ngoal (1 subgoal):\n 1. Im (Ln z) =\n    (if Re z \\<noteq> 0\n     then if 0 < Re z then arctan (Im z / Re z)\n          else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n               else arctan (Im z / Re z) - pi\n     else if 0 < Im z then pi / 2 else - pi / 2)", "using that"], ["proof (prove)\nusing this:\n  Im (Ln (- z)) = arctan (Im (- z) / Re (- z))\n  Ln (- z) = Ln z + \\<i> * complex_of_real pi\n  Re z < 0\n  Im z < 0\n\ngoal (1 subgoal):\n 1. Im (Ln z) =\n    (if Re z \\<noteq> 0\n     then if 0 < Re z then arctan (Im z / Re z)\n          else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n               else arctan (Im z / Re z) - pi\n     else if 0 < Im z then pi / 2 else - pi / 2)", "by auto"], ["proof (state)\nthis:\n  Im (Ln z) =\n  (if Re z \\<noteq> 0\n   then if 0 < Re z then arctan (Im z / Re z)\n        else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n             else arctan (Im z / Re z) - pi\n   else if 0 < Im z then pi / 2 else - pi / 2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>Re z < 0; Im z < 0\\<rbrakk>\n  \\<Longrightarrow> Im (Ln z) =\n                    (if Re z \\<noteq> 0\n                     then if 0 < Re z then arctan (Im z / Re z)\n                          else if 0 \\<le> Im z\n                               then arctan (Im z / Re z) + pi\n                               else arctan (Im z / Re z) - pi\n                     else if 0 < Im z then pi / 2 else - pi / 2)\n\ngoal (1 subgoal):\n 1. Im (Ln z) =\n    (if Re z \\<noteq> 0\n     then if 0 < Re z then arctan (Im z / Re z)\n          else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n               else arctan (Im z / Re z) - pi\n     else if 0 < Im z then pi / 2 else - pi / 2)", "ultimately"], ["proof (chain)\npicking this:\n  Re z = 0 \\<Longrightarrow>\n  Im (Ln z) =\n  (if Re z \\<noteq> 0\n   then if 0 < Re z then arctan (Im z / Re z)\n        else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n             else arctan (Im z / Re z) - pi\n   else if 0 < Im z then pi / 2 else - pi / 2)\n  0 < Re z \\<Longrightarrow>\n  Im (Ln z) =\n  (if Re z \\<noteq> 0\n   then if 0 < Re z then arctan (Im z / Re z)\n        else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n             else arctan (Im z / Re z) - pi\n   else if 0 < Im z then pi / 2 else - pi / 2)\n  \\<lbrakk>Re z < 0; 0 \\<le> Im z\\<rbrakk>\n  \\<Longrightarrow> Im (Ln z) =\n                    (if Re z \\<noteq> 0\n                     then if 0 < Re z then arctan (Im z / Re z)\n                          else if 0 \\<le> Im z\n                               then arctan (Im z / Re z) + pi\n                               else arctan (Im z / Re z) - pi\n                     else if 0 < Im z then pi / 2 else - pi / 2)\n  \\<lbrakk>Re z < 0; Im z < 0\\<rbrakk>\n  \\<Longrightarrow> Im (Ln z) =\n                    (if Re z \\<noteq> 0\n                     then if 0 < Re z then arctan (Im z / Re z)\n                          else if 0 \\<le> Im z\n                               then arctan (Im z / Re z) + pi\n                               else arctan (Im z / Re z) - pi\n                     else if 0 < Im z then pi / 2 else - pi / 2)", "show ?thesis"], ["proof (prove)\nusing this:\n  Re z = 0 \\<Longrightarrow>\n  Im (Ln z) =\n  (if Re z \\<noteq> 0\n   then if 0 < Re z then arctan (Im z / Re z)\n        else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n             else arctan (Im z / Re z) - pi\n   else if 0 < Im z then pi / 2 else - pi / 2)\n  0 < Re z \\<Longrightarrow>\n  Im (Ln z) =\n  (if Re z \\<noteq> 0\n   then if 0 < Re z then arctan (Im z / Re z)\n        else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n             else arctan (Im z / Re z) - pi\n   else if 0 < Im z then pi / 2 else - pi / 2)\n  \\<lbrakk>Re z < 0; 0 \\<le> Im z\\<rbrakk>\n  \\<Longrightarrow> Im (Ln z) =\n                    (if Re z \\<noteq> 0\n                     then if 0 < Re z then arctan (Im z / Re z)\n                          else if 0 \\<le> Im z\n                               then arctan (Im z / Re z) + pi\n                               else arctan (Im z / Re z) - pi\n                     else if 0 < Im z then pi / 2 else - pi / 2)\n  \\<lbrakk>Re z < 0; Im z < 0\\<rbrakk>\n  \\<Longrightarrow> Im (Ln z) =\n                    (if Re z \\<noteq> 0\n                     then if 0 < Re z then arctan (Im z / Re z)\n                          else if 0 \\<le> Im z\n                               then arctan (Im z / Re z) + pi\n                               else arctan (Im z / Re z) - pi\n                     else if 0 < Im z then pi / 2 else - pi / 2)\n\ngoal (1 subgoal):\n 1. Im (Ln z) =\n    (if Re z \\<noteq> 0\n     then if 0 < Re z then arctan (Im z / Re z)\n          else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n               else arctan (Im z / Re z) - pi\n     else if 0 < Im z then pi / 2 else - pi / 2)", "by linarith"], ["proof (state)\nthis:\n  Im (Ln z) =\n  (if Re z \\<noteq> 0\n   then if 0 < Re z then arctan (Im z / Re z)\n        else if 0 \\<le> Im z then arctan (Im z / Re z) + pi\n             else arctan (Im z / Re z) - pi\n   else if 0 < Im z then pi / 2 else - pi / 2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma exp_Arg2pi2pi_multivalue:\n  assumes \"exp (\\<i>* of_real x) = z\"\n  shows \"\\<exists>k::int. x = Arg2pi z + 2*k*pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>xa. x = Arg2pi z + 2 * real_of_int xa * pi", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>xa. x = Arg2pi z + 2 * real_of_int xa * pi", "define k where \"k=floor( x/(2*pi))\""], ["proof (state)\nthis:\n  k = \\<lfloor>x / (2 * pi)\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<exists>xa. x = Arg2pi z + 2 * real_of_int xa * pi", "define x' where \"x'= x - (2*k*pi)\""], ["proof (state)\nthis:\n  x' = x - real_of_int (2 * k) * pi\n\ngoal (1 subgoal):\n 1. \\<exists>xa. x = Arg2pi z + 2 * real_of_int xa * pi", "have \"x'/(2*pi) \\<ge>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> x' / (2 * pi)", "unfolding x'_def k_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> (x - real_of_int (2 * \\<lfloor>x / (2 * pi)\\<rfloor>) * pi) /\n            (2 * pi)", "by (simp add: diff_divide_distrib)"], ["proof (state)\nthis:\n  0 \\<le> x' / (2 * pi)\n\ngoal (1 subgoal):\n 1. \\<exists>xa. x = Arg2pi z + 2 * real_of_int xa * pi", "moreover"], ["proof (state)\nthis:\n  0 \\<le> x' / (2 * pi)\n\ngoal (1 subgoal):\n 1. \\<exists>xa. x = Arg2pi z + 2 * real_of_int xa * pi", "have \"x'/(2*pi) < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x' / (2 * pi) < 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x' / (2 * pi) < 1", "have \"x/(2*pi) - k < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x / (2 * pi) - real_of_int k < 1", "unfolding k_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x / (2 * pi) - real_of_int \\<lfloor>x / (2 * pi)\\<rfloor> < 1", "by linarith"], ["proof (state)\nthis:\n  x / (2 * pi) - real_of_int k < 1\n\ngoal (1 subgoal):\n 1. x' / (2 * pi) < 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  x / (2 * pi) - real_of_int k < 1\n\ngoal (1 subgoal):\n 1. x' / (2 * pi) < 1", "unfolding k_def x'_def"], ["proof (prove)\nusing this:\n  x / (2 * pi) - real_of_int \\<lfloor>x / (2 * pi)\\<rfloor> < 1\n\ngoal (1 subgoal):\n 1. (x - real_of_int (2 * \\<lfloor>x / (2 * pi)\\<rfloor>) * pi) / (2 * pi)\n    < 1", "by (auto simp add:field_simps)"], ["proof (state)\nthis:\n  x' / (2 * pi) < 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x' / (2 * pi) < 1\n\ngoal (1 subgoal):\n 1. \\<exists>xa. x = Arg2pi z + 2 * real_of_int xa * pi", "ultimately"], ["proof (chain)\npicking this:\n  0 \\<le> x' / (2 * pi)\n  x' / (2 * pi) < 1", "have \"x'\\<ge>0\" and \"x'<2*pi\""], ["proof (prove)\nusing this:\n  0 \\<le> x' / (2 * pi)\n  x' / (2 * pi) < 1\n\ngoal (1 subgoal):\n 1. 0 \\<le> x' &&& x' < 2 * pi", "by (auto simp add:field_simps)"], ["proof (state)\nthis:\n  0 \\<le> x'\n  x' < 2 * pi\n\ngoal (1 subgoal):\n 1. \\<exists>xa. x = Arg2pi z + 2 * real_of_int xa * pi", "moreover"], ["proof (state)\nthis:\n  0 \\<le> x'\n  x' < 2 * pi\n\ngoal (1 subgoal):\n 1. \\<exists>xa. x = Arg2pi z + 2 * real_of_int xa * pi", "have \"exp (\\<i> * complex_of_real x') = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (\\<i> * complex_of_real x') = z", "using assms x'_def"], ["proof (prove)\nusing this:\n  exp (\\<i> * complex_of_real x) = z\n  x' = x - real_of_int (2 * k) * pi\n\ngoal (1 subgoal):\n 1. exp (\\<i> * complex_of_real x') = z", "by  (auto simp add:field_simps )"], ["proof (state)\nthis:\n  exp (\\<i> * complex_of_real x') = z\n\ngoal (1 subgoal):\n 1. \\<exists>xa. x = Arg2pi z + 2 * real_of_int xa * pi", "ultimately"], ["proof (chain)\npicking this:\n  0 \\<le> x'\n  x' < 2 * pi\n  exp (\\<i> * complex_of_real x') = z", "have \"Arg2pi z = x'\""], ["proof (prove)\nusing this:\n  0 \\<le> x'\n  x' < 2 * pi\n  exp (\\<i> * complex_of_real x') = z\n\ngoal (1 subgoal):\n 1. Arg2pi z = x'", "using Arg2pi_unique[of 1 x' z,simplified]"], ["proof (prove)\nusing this:\n  0 \\<le> x'\n  x' < 2 * pi\n  exp (\\<i> * complex_of_real x') = z\n  \\<lbrakk>exp (\\<i> * complex_of_real x') = z; 0 \\<le> x';\n   x' < 2 * pi\\<rbrakk>\n  \\<Longrightarrow> Arg2pi z = x'\n\ngoal (1 subgoal):\n 1. Arg2pi z = x'", "by auto"], ["proof (state)\nthis:\n  Arg2pi z = x'\n\ngoal (1 subgoal):\n 1. \\<exists>xa. x = Arg2pi z + 2 * real_of_int xa * pi", "hence \" x = Arg2pi z + 2*k*pi\""], ["proof (prove)\nusing this:\n  Arg2pi z = x'\n\ngoal (1 subgoal):\n 1. x = Arg2pi z + real_of_int (2 * k) * pi", "unfolding x'_def"], ["proof (prove)\nusing this:\n  Arg2pi z = x - real_of_int (2 * k) * pi\n\ngoal (1 subgoal):\n 1. x = Arg2pi z + real_of_int (2 * k) * pi", "by auto"], ["proof (state)\nthis:\n  x = Arg2pi z + real_of_int (2 * k) * pi\n\ngoal (1 subgoal):\n 1. \\<exists>xa. x = Arg2pi z + 2 * real_of_int xa * pi", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = Arg2pi z + real_of_int (2 * k) * pi\n\ngoal (1 subgoal):\n 1. \\<exists>xa. x = Arg2pi z + 2 * real_of_int xa * pi", "by auto"], ["proof (state)\nthis:\n  \\<exists>xa. x = Arg2pi z + 2 * real_of_int xa * pi\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cos_eq_neg_periodic_intro:\n  assumes \"x - y=2*(of_int k)*pi + pi \\<or> x + y = 2*(of_int k)*pi + pi\"\n  shows \"cos x = - cos y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos x = - cos y", "using assms"], ["proof (prove)\nusing this:\n  x - y = 2 * real_of_int k * pi + pi \\<or>\n  x + y = 2 * real_of_int k * pi + pi\n\ngoal (1 subgoal):\n 1. cos x = - cos y", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. x - y = 2 * real_of_int k * pi + pi \\<Longrightarrow> cos x = - cos y\n 2. x + y = 2 * real_of_int k * pi + pi \\<Longrightarrow> cos x = - cos y", "assume \"x - y = 2 * (of_int k) * pi + pi\""], ["proof (state)\nthis:\n  x - y = 2 * real_of_int k * pi + pi\n\ngoal (2 subgoals):\n 1. x - y = 2 * real_of_int k * pi + pi \\<Longrightarrow> cos x = - cos y\n 2. x + y = 2 * real_of_int k * pi + pi \\<Longrightarrow> cos x = - cos y", "then"], ["proof (chain)\npicking this:\n  x - y = 2 * real_of_int k * pi + pi", "have \"cos x = cos ((y+ pi) + (of_int k)*(2*pi))\""], ["proof (prove)\nusing this:\n  x - y = 2 * real_of_int k * pi + pi\n\ngoal (1 subgoal):\n 1. cos x = cos (y + pi + real_of_int k * (2 * pi))", "by (auto simp add:algebra_simps)"], ["proof (state)\nthis:\n  cos x = cos (y + pi + real_of_int k * (2 * pi))\n\ngoal (2 subgoals):\n 1. x - y = 2 * real_of_int k * pi + pi \\<Longrightarrow> cos x = - cos y\n 2. x + y = 2 * real_of_int k * pi + pi \\<Longrightarrow> cos x = - cos y", "also"], ["proof (state)\nthis:\n  cos x = cos (y + pi + real_of_int k * (2 * pi))\n\ngoal (2 subgoals):\n 1. x - y = 2 * real_of_int k * pi + pi \\<Longrightarrow> cos x = - cos y\n 2. x + y = 2 * real_of_int k * pi + pi \\<Longrightarrow> cos x = - cos y", "have \"... = cos (y+pi)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos (y + pi + real_of_int k * (2 * pi)) = cos (y + pi)", "using cos.periodic_simps[of \"y+pi\"]"], ["proof (prove)\nusing this:\n  cos (y + pi + real ?na * (2 * of_real pi)) = cos (y + pi)\n  cos (y + pi - real ?na * (2 * of_real pi)) = cos (y + pi)\n  cos (y + pi + real_of_int ?n * (2 * of_real pi)) = cos (y + pi)\n  cos (y + pi - real_of_int ?n * (2 * of_real pi)) = cos (y + pi)\n  cos (y + pi + numeral ?nb * (2 * of_real pi)) = cos (y + pi)\n  cos (y + pi - numeral ?nb * (2 * of_real pi)) = cos (y + pi)\n  cos (y + pi + 2 * of_real pi) = cos (y + pi)\n  cos (y + pi - 2 * of_real pi) = cos (y + pi)\n\ngoal (1 subgoal):\n 1. cos (y + pi + real_of_int k * (2 * pi)) = cos (y + pi)", "by (auto simp add:algebra_simps)"], ["proof (state)\nthis:\n  cos (y + pi + real_of_int k * (2 * pi)) = cos (y + pi)\n\ngoal (2 subgoals):\n 1. x - y = 2 * real_of_int k * pi + pi \\<Longrightarrow> cos x = - cos y\n 2. x + y = 2 * real_of_int k * pi + pi \\<Longrightarrow> cos x = - cos y", "also"], ["proof (state)\nthis:\n  cos (y + pi + real_of_int k * (2 * pi)) = cos (y + pi)\n\ngoal (2 subgoals):\n 1. x - y = 2 * real_of_int k * pi + pi \\<Longrightarrow> cos x = - cos y\n 2. x + y = 2 * real_of_int k * pi + pi \\<Longrightarrow> cos x = - cos y", "have \"... = - cos y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos (y + pi) = - cos y", "by simp"], ["proof (state)\nthis:\n  cos (y + pi) = - cos y\n\ngoal (2 subgoals):\n 1. x - y = 2 * real_of_int k * pi + pi \\<Longrightarrow> cos x = - cos y\n 2. x + y = 2 * real_of_int k * pi + pi \\<Longrightarrow> cos x = - cos y", "finally"], ["proof (chain)\npicking this:\n  cos x = - cos y", "show \"cos x = - cos y\""], ["proof (prove)\nusing this:\n  cos x = - cos y\n\ngoal (1 subgoal):\n 1. cos x = - cos y", "by auto"], ["proof (state)\nthis:\n  cos x = - cos y\n\ngoal (1 subgoal):\n 1. x + y = 2 * real_of_int k * pi + pi \\<Longrightarrow> cos x = - cos y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x + y = 2 * real_of_int k * pi + pi \\<Longrightarrow> cos x = - cos y", "assume \"x + y = 2 * real_of_int k * pi + pi \""], ["proof (state)\nthis:\n  x + y = 2 * real_of_int k * pi + pi\n\ngoal (1 subgoal):\n 1. x + y = 2 * real_of_int k * pi + pi \\<Longrightarrow> cos x = - cos y", "then"], ["proof (chain)\npicking this:\n  x + y = 2 * real_of_int k * pi + pi", "have \"cos x = cos ((- y+ pi) + (of_int k)*(2*pi))\""], ["proof (prove)\nusing this:\n  x + y = 2 * real_of_int k * pi + pi\n\ngoal (1 subgoal):\n 1. cos x = cos (- y + pi + real_of_int k * (2 * pi))", "apply (intro arg_cong[where f=cos])"], ["proof (prove)\ngoal (1 subgoal):\n 1. x + y = 2 * real_of_int k * pi + pi \\<Longrightarrow>\n    x = - y + pi + real_of_int k * (2 * pi)", "by (auto simp add:algebra_simps)"], ["proof (state)\nthis:\n  cos x = cos (- y + pi + real_of_int k * (2 * pi))\n\ngoal (1 subgoal):\n 1. x + y = 2 * real_of_int k * pi + pi \\<Longrightarrow> cos x = - cos y", "also"], ["proof (state)\nthis:\n  cos x = cos (- y + pi + real_of_int k * (2 * pi))\n\ngoal (1 subgoal):\n 1. x + y = 2 * real_of_int k * pi + pi \\<Longrightarrow> cos x = - cos y", "have \"... = cos (- y +pi)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos (- y + pi + real_of_int k * (2 * pi)) = cos (- y + pi)", "using cos.periodic_simps[of \"-y+pi\"]"], ["proof (prove)\nusing this:\n  cos (- y + pi + real ?na * (2 * of_real pi)) = cos (- y + pi)\n  cos (- y + pi - real ?na * (2 * of_real pi)) = cos (- y + pi)\n  cos (- y + pi + real_of_int ?n * (2 * of_real pi)) = cos (- y + pi)\n  cos (- y + pi - real_of_int ?n * (2 * of_real pi)) = cos (- y + pi)\n  cos (- y + pi + numeral ?nb * (2 * of_real pi)) = cos (- y + pi)\n  cos (- y + pi - numeral ?nb * (2 * of_real pi)) = cos (- y + pi)\n  cos (- y + pi + 2 * of_real pi) = cos (- y + pi)\n  cos (- y + pi - 2 * of_real pi) = cos (- y + pi)\n\ngoal (1 subgoal):\n 1. cos (- y + pi + real_of_int k * (2 * pi)) = cos (- y + pi)", "by (auto simp add:algebra_simps)"], ["proof (state)\nthis:\n  cos (- y + pi + real_of_int k * (2 * pi)) = cos (- y + pi)\n\ngoal (1 subgoal):\n 1. x + y = 2 * real_of_int k * pi + pi \\<Longrightarrow> cos x = - cos y", "also"], ["proof (state)\nthis:\n  cos (- y + pi + real_of_int k * (2 * pi)) = cos (- y + pi)\n\ngoal (1 subgoal):\n 1. x + y = 2 * real_of_int k * pi + pi \\<Longrightarrow> cos x = - cos y", "have \"... = - cos y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos (- y + pi) = - cos y", "by simp"], ["proof (state)\nthis:\n  cos (- y + pi) = - cos y\n\ngoal (1 subgoal):\n 1. x + y = 2 * real_of_int k * pi + pi \\<Longrightarrow> cos x = - cos y", "finally"], ["proof (chain)\npicking this:\n  cos x = - cos y", "show \"cos x = - cos y\""], ["proof (prove)\nusing this:\n  cos x = - cos y\n\ngoal (1 subgoal):\n 1. cos x = - cos y", "by auto"], ["proof (state)\nthis:\n  cos x = - cos y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cos_eq_periodic_intro:\n  assumes \"x - y=2*(of_int k)*pi \\<or> x + y = 2*(of_int k)*pi\"\n  shows \"cos x = cos y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos x = cos y", "using assms"], ["proof (prove)\nusing this:\n  x - y = 2 * real_of_int k * pi \\<or> x + y = 2 * real_of_int k * pi\n\ngoal (1 subgoal):\n 1. cos x = cos y", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. x - y = 2 * real_of_int k * pi \\<Longrightarrow> cos x = cos y\n 2. x + y = 2 * real_of_int k * pi \\<Longrightarrow> cos x = cos y", "assume \"x - y = 2 * (of_int k) * pi \""], ["proof (state)\nthis:\n  x - y = 2 * real_of_int k * pi\n\ngoal (2 subgoals):\n 1. x - y = 2 * real_of_int k * pi \\<Longrightarrow> cos x = cos y\n 2. x + y = 2 * real_of_int k * pi \\<Longrightarrow> cos x = cos y", "then"], ["proof (chain)\npicking this:\n  x - y = 2 * real_of_int k * pi", "have \"cos x = cos (y + (of_int k)*(2*pi))\""], ["proof (prove)\nusing this:\n  x - y = 2 * real_of_int k * pi\n\ngoal (1 subgoal):\n 1. cos x = cos (y + real_of_int k * (2 * pi))", "by (auto simp add:algebra_simps)"], ["proof (state)\nthis:\n  cos x = cos (y + real_of_int k * (2 * pi))\n\ngoal (2 subgoals):\n 1. x - y = 2 * real_of_int k * pi \\<Longrightarrow> cos x = cos y\n 2. x + y = 2 * real_of_int k * pi \\<Longrightarrow> cos x = cos y", "also"], ["proof (state)\nthis:\n  cos x = cos (y + real_of_int k * (2 * pi))\n\ngoal (2 subgoals):\n 1. x - y = 2 * real_of_int k * pi \\<Longrightarrow> cos x = cos y\n 2. x + y = 2 * real_of_int k * pi \\<Longrightarrow> cos x = cos y", "have \"... = cos y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos (y + real_of_int k * (2 * pi)) = cos y", "using cos.periodic_simps[of \"y\"]"], ["proof (prove)\nusing this:\n  cos (y + real ?na * (2 * of_real pi)) = cos y\n  cos (y - real ?na * (2 * of_real pi)) = cos y\n  cos (y + real_of_int ?n * (2 * of_real pi)) = cos y\n  cos (y - real_of_int ?n * (2 * of_real pi)) = cos y\n  cos (y + numeral ?nb * (2 * of_real pi)) = cos y\n  cos (y - numeral ?nb * (2 * of_real pi)) = cos y\n  cos (y + 2 * of_real pi) = cos y\n  cos (y - 2 * of_real pi) = cos y\n\ngoal (1 subgoal):\n 1. cos (y + real_of_int k * (2 * pi)) = cos y", "by (auto simp add:algebra_simps)"], ["proof (state)\nthis:\n  cos (y + real_of_int k * (2 * pi)) = cos y\n\ngoal (2 subgoals):\n 1. x - y = 2 * real_of_int k * pi \\<Longrightarrow> cos x = cos y\n 2. x + y = 2 * real_of_int k * pi \\<Longrightarrow> cos x = cos y", "finally"], ["proof (chain)\npicking this:\n  cos x = cos y", "show \"cos x = cos y\""], ["proof (prove)\nusing this:\n  cos x = cos y\n\ngoal (1 subgoal):\n 1. cos x = cos y", "by auto"], ["proof (state)\nthis:\n  cos x = cos y\n\ngoal (1 subgoal):\n 1. x + y = 2 * real_of_int k * pi \\<Longrightarrow> cos x = cos y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x + y = 2 * real_of_int k * pi \\<Longrightarrow> cos x = cos y", "assume \"x + y = 2 * of_int k * pi\""], ["proof (state)\nthis:\n  x + y = 2 * real_of_int k * pi\n\ngoal (1 subgoal):\n 1. x + y = 2 * real_of_int k * pi \\<Longrightarrow> cos x = cos y", "then"], ["proof (chain)\npicking this:\n  x + y = 2 * real_of_int k * pi", "have \"cos x = cos (- y + (of_int k)*(2*pi))\""], ["proof (prove)\nusing this:\n  x + y = 2 * real_of_int k * pi\n\ngoal (1 subgoal):\n 1. cos x = cos (- y + real_of_int k * (2 * pi))", "apply (intro arg_cong[where f=cos])"], ["proof (prove)\ngoal (1 subgoal):\n 1. x + y = 2 * real_of_int k * pi \\<Longrightarrow>\n    x = - y + real_of_int k * (2 * pi)", "by (auto simp add:algebra_simps)"], ["proof (state)\nthis:\n  cos x = cos (- y + real_of_int k * (2 * pi))\n\ngoal (1 subgoal):\n 1. x + y = 2 * real_of_int k * pi \\<Longrightarrow> cos x = cos y", "also"], ["proof (state)\nthis:\n  cos x = cos (- y + real_of_int k * (2 * pi))\n\ngoal (1 subgoal):\n 1. x + y = 2 * real_of_int k * pi \\<Longrightarrow> cos x = cos y", "have \"... = cos (- y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos (- y + real_of_int k * (2 * pi)) = cos (- y)", "using cos.periodic_simps[of \"-y\"]"], ["proof (prove)\nusing this:\n  cos (- y + real ?na * (2 * of_real pi)) = cos (- y)\n  cos (- y - real ?na * (2 * of_real pi)) = cos (- y)\n  cos (- y + real_of_int ?n * (2 * of_real pi)) = cos (- y)\n  cos (- y - real_of_int ?n * (2 * of_real pi)) = cos (- y)\n  cos (- y + numeral ?nb * (2 * of_real pi)) = cos (- y)\n  cos (- y - numeral ?nb * (2 * of_real pi)) = cos (- y)\n  cos (- y + 2 * of_real pi) = cos (- y)\n  cos (- y - 2 * of_real pi) = cos (- y)\n\ngoal (1 subgoal):\n 1. cos (- y + real_of_int k * (2 * pi)) = cos (- y)", "by (auto simp add:algebra_simps)"], ["proof (state)\nthis:\n  cos (- y + real_of_int k * (2 * pi)) = cos (- y)\n\ngoal (1 subgoal):\n 1. x + y = 2 * real_of_int k * pi \\<Longrightarrow> cos x = cos y", "also"], ["proof (state)\nthis:\n  cos (- y + real_of_int k * (2 * pi)) = cos (- y)\n\ngoal (1 subgoal):\n 1. x + y = 2 * real_of_int k * pi \\<Longrightarrow> cos x = cos y", "have \"... = cos y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos (- y) = cos y", "by simp"], ["proof (state)\nthis:\n  cos (- y) = cos y\n\ngoal (1 subgoal):\n 1. x + y = 2 * real_of_int k * pi \\<Longrightarrow> cos x = cos y", "finally"], ["proof (chain)\npicking this:\n  cos x = cos y", "show \"cos x = cos y\""], ["proof (prove)\nusing this:\n  cos x = cos y\n\ngoal (1 subgoal):\n 1. cos x = cos y", "by auto"], ["proof (state)\nthis:\n  cos x = cos y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sin_tan_half: \"sin (2*x) = 2 * tan x / (1 + (tan x)^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sin ((2::'a) * x) = (2::'a) * tan x / ((1::'a) + (tan x)\\<^sup>2)", "unfolding sin_double tan_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (2::'a) * sin x * cos x =\n    (2::'a) * (sin x / cos x) / ((1::'a) + (sin x / cos x)\\<^sup>2)", "apply (cases \"cos x=0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. cos x = (0::'a) \\<Longrightarrow>\n    (2::'a) * sin x * cos x =\n    (2::'a) * (sin x / cos x) / ((1::'a) + (sin x / cos x)\\<^sup>2)\n 2. cos x \\<noteq> (0::'a) \\<Longrightarrow>\n    (2::'a) * sin x * cos x =\n    (2::'a) * (sin x / cos x) / ((1::'a) + (sin x / cos x)\\<^sup>2)", "by (auto simp add:field_simps power2_eq_square)"], ["", "lemma cos_tan_half: \"cos x \\<noteq>0 \\<Longrightarrow>  cos (2*x) = (1 - (tan x)^2) / (1+ (tan x)^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos x \\<noteq> (0::'a) \\<Longrightarrow>\n    cos ((2::'a) * x) =\n    ((1::'a) - (tan x)\\<^sup>2) / ((1::'a) + (tan x)\\<^sup>2)", "unfolding cos_double tan_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. cos x \\<noteq> (0::'a) \\<Longrightarrow>\n    (cos x)\\<^sup>2 - (sin x)\\<^sup>2 =\n    ((1::'a) - (sin x / cos x)\\<^sup>2) /\n    ((1::'a) + (sin x / cos x)\\<^sup>2)", "by (auto simp add:field_simps )"], ["", "lemma tan_eq_arctan_Ex:\n  shows \"tan x = y \\<longleftrightarrow> (\\<exists>k::int. x = arctan y + k*pi \\<or> (x = pi/2 + k*pi \\<and> y=0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (tan x = y) =\n    (\\<exists>xa.\n        x = arctan y + real_of_int xa * pi \\<or>\n        x = pi / 2 + real_of_int xa * pi \\<and> y = 0)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. tan x = y \\<Longrightarrow>\n    \\<exists>xa.\n       x = arctan y + real_of_int xa * pi \\<or>\n       x = pi / 2 + real_of_int xa * pi \\<and> y = 0\n 2. \\<exists>xa.\n       x = arctan y + real_of_int xa * pi \\<or>\n       x = pi / 2 + real_of_int xa * pi \\<and> y = 0 \\<Longrightarrow>\n    tan x = y", "assume asm:\"tan x = y\""], ["proof (state)\nthis:\n  tan x = y\n\ngoal (2 subgoals):\n 1. tan x = y \\<Longrightarrow>\n    \\<exists>xa.\n       x = arctan y + real_of_int xa * pi \\<or>\n       x = pi / 2 + real_of_int xa * pi \\<and> y = 0\n 2. \\<exists>xa.\n       x = arctan y + real_of_int xa * pi \\<or>\n       x = pi / 2 + real_of_int xa * pi \\<and> y = 0 \\<Longrightarrow>\n    tan x = y", "obtain k::int where k:\"-pi/2 < x-k*pi\" \"x-k*pi \\<le> pi/2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>- pi / 2 < x - real_of_int k * pi;\n         x - real_of_int k * pi \\<le> pi / 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>- pi / 2 < x - real_of_int k * pi;\n         x - real_of_int k * pi \\<le> pi / 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define k where \"k=ceiling (x/pi - 1/2)\""], ["proof (state)\nthis:\n  k = \\<lceil>x / pi - 1 / 2\\<rceil>\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>- pi / 2 < x - real_of_int k * pi;\n         x - real_of_int k * pi \\<le> pi / 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"(x/pi - 1/2)\\<le>k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x / pi - 1 / 2 \\<le> real_of_int k", "unfolding k_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x / pi - 1 / 2 \\<le> real_of_int \\<lceil>x / pi - 1 / 2\\<rceil>", "by auto"], ["proof (state)\nthis:\n  x / pi - 1 / 2 \\<le> real_of_int k\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>- pi / 2 < x - real_of_int k * pi;\n         x - real_of_int k * pi \\<le> pi / 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  x / pi - 1 / 2 \\<le> real_of_int k", "have \"x-k*pi \\<le> pi/2\""], ["proof (prove)\nusing this:\n  x / pi - 1 / 2 \\<le> real_of_int k\n\ngoal (1 subgoal):\n 1. x - real_of_int k * pi \\<le> pi / 2", "by (auto simp add:field_simps)"], ["proof (state)\nthis:\n  x - real_of_int k * pi \\<le> pi / 2\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>- pi / 2 < x - real_of_int k * pi;\n         x - real_of_int k * pi \\<le> pi / 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  x - real_of_int k * pi \\<le> pi / 2\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>- pi / 2 < x - real_of_int k * pi;\n         x - real_of_int k * pi \\<le> pi / 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"k-1 < x/pi - 1/2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int (k - 1) < x / pi - 1 / 2", "unfolding k_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int (\\<lceil>x / pi - 1 / 2\\<rceil> - 1) < x / pi - 1 / 2", "by linarith"], ["proof (state)\nthis:\n  real_of_int (k - 1) < x / pi - 1 / 2\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>- pi / 2 < x - real_of_int k * pi;\n         x - real_of_int k * pi \\<le> pi / 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  real_of_int (k - 1) < x / pi - 1 / 2", "have \"-pi/2 < x-k*pi\""], ["proof (prove)\nusing this:\n  real_of_int (k - 1) < x / pi - 1 / 2\n\ngoal (1 subgoal):\n 1. - pi / 2 < x - real_of_int k * pi", "by (auto simp add:field_simps)"], ["proof (state)\nthis:\n  - pi / 2 < x - real_of_int k * pi\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>- pi / 2 < x - real_of_int k * pi;\n         x - real_of_int k * pi \\<le> pi / 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  x - real_of_int k * pi \\<le> pi / 2\n  - pi / 2 < x - real_of_int k * pi", "show ?thesis"], ["proof (prove)\nusing this:\n  x - real_of_int k * pi \\<le> pi / 2\n  - pi / 2 < x - real_of_int k * pi\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  x - real_of_int k * pi \\<le> pi / 2\n  - pi / 2 < x - real_of_int k * pi\n  \\<lbrakk>- pi / 2 < x - real_of_int ?k * pi;\n   x - real_of_int ?k * pi \\<le> pi / 2\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  - pi / 2 < x - real_of_int k * pi\n  x - real_of_int k * pi \\<le> pi / 2\n\ngoal (2 subgoals):\n 1. tan x = y \\<Longrightarrow>\n    \\<exists>xa.\n       x = arctan y + real_of_int xa * pi \\<or>\n       x = pi / 2 + real_of_int xa * pi \\<and> y = 0\n 2. \\<exists>xa.\n       x = arctan y + real_of_int xa * pi \\<or>\n       x = pi / 2 + real_of_int xa * pi \\<and> y = 0 \\<Longrightarrow>\n    tan x = y", "have \"x = arctan y + of_int k * pi\" when \"x \\<noteq> pi/2 + k*pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = arctan y + real_of_int k * pi", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x = arctan y + real_of_int k * pi", "have \"tan (x - k * pi) = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tan (x - real_of_int k * pi) = y", "using asm tan_periodic_int[of _ \"-k\"]"], ["proof (prove)\nusing this:\n  tan x = y\n  tan (?x + real_of_int (- k) * pi) = tan ?x\n\ngoal (1 subgoal):\n 1. tan (x - real_of_int k * pi) = y", "by auto"], ["proof (state)\nthis:\n  tan (x - real_of_int k * pi) = y\n\ngoal (1 subgoal):\n 1. x = arctan y + real_of_int k * pi", "then"], ["proof (chain)\npicking this:\n  tan (x - real_of_int k * pi) = y", "have \"arctan y = x - real_of_int k * pi\""], ["proof (prove)\nusing this:\n  tan (x - real_of_int k * pi) = y\n\ngoal (1 subgoal):\n 1. arctan y = x - real_of_int k * pi", "apply (intro arctan_unique)"], ["proof (prove)\ngoal (3 subgoals):\n 1. tan (x - real_of_int k * pi) = y \\<Longrightarrow>\n    - (pi / 2) < x - real_of_int k * pi\n 2. tan (x - real_of_int k * pi) = y \\<Longrightarrow>\n    x - real_of_int k * pi < pi / 2\n 3. tan (x - real_of_int k * pi) = y \\<Longrightarrow>\n    tan (x - real_of_int k * pi) = y", "using k that"], ["proof (prove)\nusing this:\n  - pi / 2 < x - real_of_int k * pi\n  x - real_of_int k * pi \\<le> pi / 2\n  x \\<noteq> pi / 2 + real_of_int k * pi\n\ngoal (3 subgoals):\n 1. tan (x - real_of_int k * pi) = y \\<Longrightarrow>\n    - (pi / 2) < x - real_of_int k * pi\n 2. tan (x - real_of_int k * pi) = y \\<Longrightarrow>\n    x - real_of_int k * pi < pi / 2\n 3. tan (x - real_of_int k * pi) = y \\<Longrightarrow>\n    tan (x - real_of_int k * pi) = y", "by (auto simp add:field_simps)"], ["proof (state)\nthis:\n  arctan y = x - real_of_int k * pi\n\ngoal (1 subgoal):\n 1. x = arctan y + real_of_int k * pi", "then"], ["proof (chain)\npicking this:\n  arctan y = x - real_of_int k * pi", "show ?thesis"], ["proof (prove)\nusing this:\n  arctan y = x - real_of_int k * pi\n\ngoal (1 subgoal):\n 1. x = arctan y + real_of_int k * pi", "by auto"], ["proof (state)\nthis:\n  x = arctan y + real_of_int k * pi\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<noteq> pi / 2 + real_of_int k * pi \\<Longrightarrow>\n  x = arctan y + real_of_int k * pi\n\ngoal (2 subgoals):\n 1. tan x = y \\<Longrightarrow>\n    \\<exists>xa.\n       x = arctan y + real_of_int xa * pi \\<or>\n       x = pi / 2 + real_of_int xa * pi \\<and> y = 0\n 2. \\<exists>xa.\n       x = arctan y + real_of_int xa * pi \\<or>\n       x = pi / 2 + real_of_int xa * pi \\<and> y = 0 \\<Longrightarrow>\n    tan x = y", "moreover"], ["proof (state)\nthis:\n  x \\<noteq> pi / 2 + real_of_int k * pi \\<Longrightarrow>\n  x = arctan y + real_of_int k * pi\n\ngoal (2 subgoals):\n 1. tan x = y \\<Longrightarrow>\n    \\<exists>xa.\n       x = arctan y + real_of_int xa * pi \\<or>\n       x = pi / 2 + real_of_int xa * pi \\<and> y = 0\n 2. \\<exists>xa.\n       x = arctan y + real_of_int xa * pi \\<or>\n       x = pi / 2 + real_of_int xa * pi \\<and> y = 0 \\<Longrightarrow>\n    tan x = y", "have \"y=0\" when \"x = pi/2 + k*pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y = 0", "using asm that"], ["proof (prove)\nusing this:\n  tan x = y\n  x = pi / 2 + real_of_int k * pi\n\ngoal (1 subgoal):\n 1. y = 0", "by auto (simp add: tan_def)"], ["proof (state)\nthis:\n  x = pi / 2 + real_of_int k * pi \\<Longrightarrow> y = 0\n\ngoal (2 subgoals):\n 1. tan x = y \\<Longrightarrow>\n    \\<exists>xa.\n       x = arctan y + real_of_int xa * pi \\<or>\n       x = pi / 2 + real_of_int xa * pi \\<and> y = 0\n 2. \\<exists>xa.\n       x = arctan y + real_of_int xa * pi \\<or>\n       x = pi / 2 + real_of_int xa * pi \\<and> y = 0 \\<Longrightarrow>\n    tan x = y", "ultimately"], ["proof (chain)\npicking this:\n  x \\<noteq> pi / 2 + real_of_int k * pi \\<Longrightarrow>\n  x = arctan y + real_of_int k * pi\n  x = pi / 2 + real_of_int k * pi \\<Longrightarrow> y = 0", "show \"\\<exists>k. x = arctan y + of_int k * pi \\<or> (x = pi/2 + k*pi \\<and> y=0)\""], ["proof (prove)\nusing this:\n  x \\<noteq> pi / 2 + real_of_int k * pi \\<Longrightarrow>\n  x = arctan y + real_of_int k * pi\n  x = pi / 2 + real_of_int k * pi \\<Longrightarrow> y = 0\n\ngoal (1 subgoal):\n 1. \\<exists>k.\n       x = arctan y + real_of_int k * pi \\<or>\n       x = pi / 2 + real_of_int k * pi \\<and> y = 0", "using k"], ["proof (prove)\nusing this:\n  x \\<noteq> pi / 2 + real_of_int k * pi \\<Longrightarrow>\n  x = arctan y + real_of_int k * pi\n  x = pi / 2 + real_of_int k * pi \\<Longrightarrow> y = 0\n  - pi / 2 < x - real_of_int k * pi\n  x - real_of_int k * pi \\<le> pi / 2\n\ngoal (1 subgoal):\n 1. \\<exists>k.\n       x = arctan y + real_of_int k * pi \\<or>\n       x = pi / 2 + real_of_int k * pi \\<and> y = 0", "by auto"], ["proof (state)\nthis:\n  \\<exists>k.\n     x = arctan y + real_of_int k * pi \\<or>\n     x = pi / 2 + real_of_int k * pi \\<and> y = 0\n\ngoal (1 subgoal):\n 1. \\<exists>xa.\n       x = arctan y + real_of_int xa * pi \\<or>\n       x = pi / 2 + real_of_int xa * pi \\<and> y = 0 \\<Longrightarrow>\n    tan x = y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>xa.\n       x = arctan y + real_of_int xa * pi \\<or>\n       x = pi / 2 + real_of_int xa * pi \\<and> y = 0 \\<Longrightarrow>\n    tan x = y", "assume \"\\<exists>k::int. x = arctan y +  k * pi \\<or> x = pi / 2 + k * pi \\<and> y = 0\""], ["proof (state)\nthis:\n  \\<exists>xa.\n     x = arctan y + real_of_int xa * pi \\<or>\n     x = pi / 2 + real_of_int xa * pi \\<and> y = 0\n\ngoal (1 subgoal):\n 1. \\<exists>xa.\n       x = arctan y + real_of_int xa * pi \\<or>\n       x = pi / 2 + real_of_int xa * pi \\<and> y = 0 \\<Longrightarrow>\n    tan x = y", "then"], ["proof (chain)\npicking this:\n  \\<exists>xa.\n     x = arctan y + real_of_int xa * pi \\<or>\n     x = pi / 2 + real_of_int xa * pi \\<and> y = 0", "show \"tan x = y\""], ["proof (prove)\nusing this:\n  \\<exists>xa.\n     x = arctan y + real_of_int xa * pi \\<or>\n     x = pi / 2 + real_of_int xa * pi \\<and> y = 0\n\ngoal (1 subgoal):\n 1. tan x = y", "by (metis arctan_unique cos_pi_half division_ring_divide_zero tan_def tan_periodic_int tan_total)"], ["proof (state)\nthis:\n  tan x = y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma arccos_unique:\n  assumes \"0 \\<le> x\"\n    and \"x \\<le> pi\"\n    and \"cos x = y\"\n  shows \"arccos y = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arccos y = x", "using arccos_cos assms(1) assms(2) assms(3)"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<le> ?x; ?x \\<le> pi\\<rbrakk>\n  \\<Longrightarrow> arccos (cos ?x) = ?x\n  0 \\<le> x\n  x \\<le> pi\n  cos x = y\n\ngoal (1 subgoal):\n 1. arccos y = x", "by blast"], ["", "lemma cos_eq_arccos_Ex:\n  \"cos x = y \\<longleftrightarrow> -1\\<le>y \\<and> y\\<le>1 \\<and> (\\<exists>k::int. x = arccos y + 2*k*pi \\<or> x = - arccos y + 2*k*pi)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cos x = y) =\n    (- 1 \\<le> y \\<and>\n     y \\<le> 1 \\<and>\n     (\\<exists>xa.\n         x = arccos y + 2 * real_of_int xa * pi \\<or>\n         x = - arccos y + 2 * real_of_int xa * pi))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. cos x = y \\<Longrightarrow>\n    - 1 \\<le> y \\<and>\n    y \\<le> 1 \\<and>\n    (\\<exists>xa.\n        x = arccos y + 2 * real_of_int xa * pi \\<or>\n        x = - arccos y + 2 * real_of_int xa * pi)\n 2. - 1 \\<le> y \\<and>\n    y \\<le> 1 \\<and>\n    (\\<exists>xa.\n        x = arccos y + 2 * real_of_int xa * pi \\<or>\n        x = - arccos y + 2 * real_of_int xa * pi) \\<Longrightarrow>\n    cos x = y", "assume asm:\"-1\\<le>y \\<and> y\\<le>1 \\<and> (\\<exists>k::int. x = arccos y + 2*k*pi \\<or> x = - arccos y + 2*k*pi)\""], ["proof (state)\nthis:\n  - 1 \\<le> y \\<and>\n  y \\<le> 1 \\<and>\n  (\\<exists>xa.\n      x = arccos y + 2 * real_of_int xa * pi \\<or>\n      x = - arccos y + 2 * real_of_int xa * pi)\n\ngoal (2 subgoals):\n 1. cos x = y \\<Longrightarrow>\n    - 1 \\<le> y \\<and>\n    y \\<le> 1 \\<and>\n    (\\<exists>xa.\n        x = arccos y + 2 * real_of_int xa * pi \\<or>\n        x = - arccos y + 2 * real_of_int xa * pi)\n 2. - 1 \\<le> y \\<and>\n    y \\<le> 1 \\<and>\n    (\\<exists>xa.\n        x = arccos y + 2 * real_of_int xa * pi \\<or>\n        x = - arccos y + 2 * real_of_int xa * pi) \\<Longrightarrow>\n    cos x = y", "then"], ["proof (chain)\npicking this:\n  - 1 \\<le> y \\<and>\n  y \\<le> 1 \\<and>\n  (\\<exists>xa.\n      x = arccos y + 2 * real_of_int xa * pi \\<or>\n      x = - arccos y + 2 * real_of_int xa * pi)", "obtain k::int where \"x = arccos y + 2*k*pi \\<or> x = - arccos y + 2*k*pi\""], ["proof (prove)\nusing this:\n  - 1 \\<le> y \\<and>\n  y \\<le> 1 \\<and>\n  (\\<exists>xa.\n      x = arccos y + 2 * real_of_int xa * pi \\<or>\n      x = - arccos y + 2 * real_of_int xa * pi)\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        x = arccos y + real_of_int (2 * k) * pi \\<or>\n        x = - arccos y + real_of_int (2 * k) * pi \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x = arccos y + real_of_int (2 * k) * pi \\<or>\n  x = - arccos y + real_of_int (2 * k) * pi\n\ngoal (2 subgoals):\n 1. cos x = y \\<Longrightarrow>\n    - 1 \\<le> y \\<and>\n    y \\<le> 1 \\<and>\n    (\\<exists>xa.\n        x = arccos y + 2 * real_of_int xa * pi \\<or>\n        x = - arccos y + 2 * real_of_int xa * pi)\n 2. - 1 \\<le> y \\<and>\n    y \\<le> 1 \\<and>\n    (\\<exists>xa.\n        x = arccos y + 2 * real_of_int xa * pi \\<or>\n        x = - arccos y + 2 * real_of_int xa * pi) \\<Longrightarrow>\n    cos x = y", "moreover"], ["proof (state)\nthis:\n  x = arccos y + real_of_int (2 * k) * pi \\<or>\n  x = - arccos y + real_of_int (2 * k) * pi\n\ngoal (2 subgoals):\n 1. cos x = y \\<Longrightarrow>\n    - 1 \\<le> y \\<and>\n    y \\<le> 1 \\<and>\n    (\\<exists>xa.\n        x = arccos y + 2 * real_of_int xa * pi \\<or>\n        x = - arccos y + 2 * real_of_int xa * pi)\n 2. - 1 \\<le> y \\<and>\n    y \\<le> 1 \\<and>\n    (\\<exists>xa.\n        x = arccos y + 2 * real_of_int xa * pi \\<or>\n        x = - arccos y + 2 * real_of_int xa * pi) \\<Longrightarrow>\n    cos x = y", "have \"cos x = y\" when \"x = arccos y + 2*k*pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos x = y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cos x = y", "have \"cos x = cos (arccos y + k*(2*pi))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos x = cos (arccos y + real_of_int k * (2 * pi))", "using that"], ["proof (prove)\nusing this:\n  x = arccos y + real_of_int (2 * k) * pi\n\ngoal (1 subgoal):\n 1. cos x = cos (arccos y + real_of_int k * (2 * pi))", "by (auto simp add:algebra_simps)"], ["proof (state)\nthis:\n  cos x = cos (arccos y + real_of_int k * (2 * pi))\n\ngoal (1 subgoal):\n 1. cos x = y", "also"], ["proof (state)\nthis:\n  cos x = cos (arccos y + real_of_int k * (2 * pi))\n\ngoal (1 subgoal):\n 1. cos x = y", "have \"... = cos (arccos y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos (arccos y + real_of_int k * (2 * pi)) = cos (arccos y)", "using cos.periodic_simps(3)[of \"arccos y\" k]"], ["proof (prove)\nusing this:\n  cos (arccos y + real_of_int k * (2 * of_real pi)) = cos (arccos y)\n\ngoal (1 subgoal):\n 1. cos (arccos y + real_of_int k * (2 * pi)) = cos (arccos y)", "by auto"], ["proof (state)\nthis:\n  cos (arccos y + real_of_int k * (2 * pi)) = cos (arccos y)\n\ngoal (1 subgoal):\n 1. cos x = y", "also"], ["proof (state)\nthis:\n  cos (arccos y + real_of_int k * (2 * pi)) = cos (arccos y)\n\ngoal (1 subgoal):\n 1. cos x = y", "have \"... = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos (arccos y) = y", "using asm"], ["proof (prove)\nusing this:\n  - 1 \\<le> y \\<and>\n  y \\<le> 1 \\<and>\n  (\\<exists>xa.\n      x = arccos y + 2 * real_of_int xa * pi \\<or>\n      x = - arccos y + 2 * real_of_int xa * pi)\n\ngoal (1 subgoal):\n 1. cos (arccos y) = y", "by auto"], ["proof (state)\nthis:\n  cos (arccos y) = y\n\ngoal (1 subgoal):\n 1. cos x = y", "finally"], ["proof (chain)\npicking this:\n  cos x = y", "show ?thesis"], ["proof (prove)\nusing this:\n  cos x = y\n\ngoal (1 subgoal):\n 1. cos x = y", "."], ["proof (state)\nthis:\n  cos x = y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x = arccos y + real_of_int (2 * k) * pi \\<Longrightarrow> cos x = y\n\ngoal (2 subgoals):\n 1. cos x = y \\<Longrightarrow>\n    - 1 \\<le> y \\<and>\n    y \\<le> 1 \\<and>\n    (\\<exists>xa.\n        x = arccos y + 2 * real_of_int xa * pi \\<or>\n        x = - arccos y + 2 * real_of_int xa * pi)\n 2. - 1 \\<le> y \\<and>\n    y \\<le> 1 \\<and>\n    (\\<exists>xa.\n        x = arccos y + 2 * real_of_int xa * pi \\<or>\n        x = - arccos y + 2 * real_of_int xa * pi) \\<Longrightarrow>\n    cos x = y", "moreover"], ["proof (state)\nthis:\n  x = arccos y + real_of_int (2 * k) * pi \\<Longrightarrow> cos x = y\n\ngoal (2 subgoals):\n 1. cos x = y \\<Longrightarrow>\n    - 1 \\<le> y \\<and>\n    y \\<le> 1 \\<and>\n    (\\<exists>xa.\n        x = arccos y + 2 * real_of_int xa * pi \\<or>\n        x = - arccos y + 2 * real_of_int xa * pi)\n 2. - 1 \\<le> y \\<and>\n    y \\<le> 1 \\<and>\n    (\\<exists>xa.\n        x = arccos y + 2 * real_of_int xa * pi \\<or>\n        x = - arccos y + 2 * real_of_int xa * pi) \\<Longrightarrow>\n    cos x = y", "have \"cos x = y\" when \"x = -arccos y + 2*k*pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos x = y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cos x = y", "have \"cos x = cos (- arccos y + k*2*pi)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos x = cos (- arccos y + real_of_int (k * 2) * pi)", "unfolding that"], ["proof (prove)\ngoal (1 subgoal):\n 1. cos (- arccos y + real_of_int (2 * k) * pi) =\n    cos (- arccos y + real_of_int (k * 2) * pi)", "by (auto simp add:algebra_simps)"], ["proof (state)\nthis:\n  cos x = cos (- arccos y + real_of_int (k * 2) * pi)\n\ngoal (1 subgoal):\n 1. cos x = y", "also"], ["proof (state)\nthis:\n  cos x = cos (- arccos y + real_of_int (k * 2) * pi)\n\ngoal (1 subgoal):\n 1. cos x = y", "have \"... = cos (arccos y - k*2*pi)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos (- arccos y + real_of_int (k * 2) * pi) =\n    cos (arccos y - real_of_int (k * 2) * pi)", "by (metis cos_minus minus_diff_eq uminus_add_conv_diff)"], ["proof (state)\nthis:\n  cos (- arccos y + real_of_int (k * 2) * pi) =\n  cos (arccos y - real_of_int (k * 2) * pi)\n\ngoal (1 subgoal):\n 1. cos x = y", "also"], ["proof (state)\nthis:\n  cos (- arccos y + real_of_int (k * 2) * pi) =\n  cos (arccos y - real_of_int (k * 2) * pi)\n\ngoal (1 subgoal):\n 1. cos x = y", "have \"... = cos (arccos y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos (arccos y - real_of_int (k * 2) * pi) = cos (arccos y)", "using cos.periodic_simps(3)[of \"arccos y\" \"-k\"]"], ["proof (prove)\nusing this:\n  cos (arccos y + real_of_int (- k) * (2 * of_real pi)) = cos (arccos y)\n\ngoal (1 subgoal):\n 1. cos (arccos y - real_of_int (k * 2) * pi) = cos (arccos y)", "by (auto simp add:algebra_simps)"], ["proof (state)\nthis:\n  cos (arccos y - real_of_int (k * 2) * pi) = cos (arccos y)\n\ngoal (1 subgoal):\n 1. cos x = y", "also"], ["proof (state)\nthis:\n  cos (arccos y - real_of_int (k * 2) * pi) = cos (arccos y)\n\ngoal (1 subgoal):\n 1. cos x = y", "have \"... = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos (arccos y) = y", "using asm"], ["proof (prove)\nusing this:\n  - 1 \\<le> y \\<and>\n  y \\<le> 1 \\<and>\n  (\\<exists>xa.\n      x = arccos y + 2 * real_of_int xa * pi \\<or>\n      x = - arccos y + 2 * real_of_int xa * pi)\n\ngoal (1 subgoal):\n 1. cos (arccos y) = y", "by auto"], ["proof (state)\nthis:\n  cos (arccos y) = y\n\ngoal (1 subgoal):\n 1. cos x = y", "finally"], ["proof (chain)\npicking this:\n  cos x = y", "show ?thesis"], ["proof (prove)\nusing this:\n  cos x = y\n\ngoal (1 subgoal):\n 1. cos x = y", "."], ["proof (state)\nthis:\n  cos x = y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x = - arccos y + real_of_int (2 * k) * pi \\<Longrightarrow> cos x = y\n\ngoal (2 subgoals):\n 1. cos x = y \\<Longrightarrow>\n    - 1 \\<le> y \\<and>\n    y \\<le> 1 \\<and>\n    (\\<exists>xa.\n        x = arccos y + 2 * real_of_int xa * pi \\<or>\n        x = - arccos y + 2 * real_of_int xa * pi)\n 2. - 1 \\<le> y \\<and>\n    y \\<le> 1 \\<and>\n    (\\<exists>xa.\n        x = arccos y + 2 * real_of_int xa * pi \\<or>\n        x = - arccos y + 2 * real_of_int xa * pi) \\<Longrightarrow>\n    cos x = y", "ultimately"], ["proof (chain)\npicking this:\n  x = arccos y + real_of_int (2 * k) * pi \\<or>\n  x = - arccos y + real_of_int (2 * k) * pi\n  x = arccos y + real_of_int (2 * k) * pi \\<Longrightarrow> cos x = y\n  x = - arccos y + real_of_int (2 * k) * pi \\<Longrightarrow> cos x = y", "show \"cos x = y\""], ["proof (prove)\nusing this:\n  x = arccos y + real_of_int (2 * k) * pi \\<or>\n  x = - arccos y + real_of_int (2 * k) * pi\n  x = arccos y + real_of_int (2 * k) * pi \\<Longrightarrow> cos x = y\n  x = - arccos y + real_of_int (2 * k) * pi \\<Longrightarrow> cos x = y\n\ngoal (1 subgoal):\n 1. cos x = y", "by auto"], ["proof (state)\nthis:\n  cos x = y\n\ngoal (1 subgoal):\n 1. cos x = y \\<Longrightarrow>\n    - 1 \\<le> y \\<and>\n    y \\<le> 1 \\<and>\n    (\\<exists>xa.\n        x = arccos y + 2 * real_of_int xa * pi \\<or>\n        x = - arccos y + 2 * real_of_int xa * pi)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. cos x = y \\<Longrightarrow>\n    - 1 \\<le> y \\<and>\n    y \\<le> 1 \\<and>\n    (\\<exists>xa.\n        x = arccos y + 2 * real_of_int xa * pi \\<or>\n        x = - arccos y + 2 * real_of_int xa * pi)", "assume asm:\"cos x =y\""], ["proof (state)\nthis:\n  cos x = y\n\ngoal (1 subgoal):\n 1. cos x = y \\<Longrightarrow>\n    - 1 \\<le> y \\<and>\n    y \\<le> 1 \\<and>\n    (\\<exists>xa.\n        x = arccos y + 2 * real_of_int xa * pi \\<or>\n        x = - arccos y + 2 * real_of_int xa * pi)", "let ?goal = \"(\\<exists>k::int. x = arccos y + 2*k*pi \\<or> x = - arccos y + 2*k*pi)\""], ["proof (state)\ngoal (1 subgoal):\n 1. cos x = y \\<Longrightarrow>\n    - 1 \\<le> y \\<and>\n    y \\<le> 1 \\<and>\n    (\\<exists>xa.\n        x = arccos y + 2 * real_of_int xa * pi \\<or>\n        x = - arccos y + 2 * real_of_int xa * pi)", "obtain k::int where k:\"-pi < x-k*2*pi\" \"x-k*2*pi \\<le> pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>- pi < x - real_of_int (k * 2) * pi;\n         x - real_of_int (k * 2) * pi \\<le> pi\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>- pi < x - real_of_int (k * 2) * pi;\n         x - real_of_int (k * 2) * pi \\<le> pi\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define k where \"k=ceiling (x/(2*pi) - 1/2)\""], ["proof (state)\nthis:\n  k = \\<lceil>x / (2 * pi) - 1 / 2\\<rceil>\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>- pi < x - real_of_int (k * 2) * pi;\n         x - real_of_int (k * 2) * pi \\<le> pi\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"(x/(2*pi) - 1/2)\\<le>k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x / (2 * pi) - 1 / 2 \\<le> real_of_int k", "unfolding k_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x / (2 * pi) - 1 / 2\n    \\<le> real_of_int \\<lceil>x / (2 * pi) - 1 / 2\\<rceil>", "by auto"], ["proof (state)\nthis:\n  x / (2 * pi) - 1 / 2 \\<le> real_of_int k\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>- pi < x - real_of_int (k * 2) * pi;\n         x - real_of_int (k * 2) * pi \\<le> pi\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  x / (2 * pi) - 1 / 2 \\<le> real_of_int k", "have \"x-k*2*pi \\<le> pi\""], ["proof (prove)\nusing this:\n  x / (2 * pi) - 1 / 2 \\<le> real_of_int k\n\ngoal (1 subgoal):\n 1. x - real_of_int (k * 2) * pi \\<le> pi", "by (auto simp add:field_simps)"], ["proof (state)\nthis:\n  x - real_of_int (k * 2) * pi \\<le> pi\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>- pi < x - real_of_int (k * 2) * pi;\n         x - real_of_int (k * 2) * pi \\<le> pi\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  x - real_of_int (k * 2) * pi \\<le> pi\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>- pi < x - real_of_int (k * 2) * pi;\n         x - real_of_int (k * 2) * pi \\<le> pi\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"k-1 < x/(2*pi) - 1/2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int (k - 1) < x / (2 * pi) - 1 / 2", "unfolding k_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int (\\<lceil>x / (2 * pi) - 1 / 2\\<rceil> - 1)\n    < x / (2 * pi) - 1 / 2", "by linarith"], ["proof (state)\nthis:\n  real_of_int (k - 1) < x / (2 * pi) - 1 / 2\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>- pi < x - real_of_int (k * 2) * pi;\n         x - real_of_int (k * 2) * pi \\<le> pi\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  real_of_int (k - 1) < x / (2 * pi) - 1 / 2", "have \"-pi < x-k*2*pi\""], ["proof (prove)\nusing this:\n  real_of_int (k - 1) < x / (2 * pi) - 1 / 2\n\ngoal (1 subgoal):\n 1. - pi < x - real_of_int (k * 2) * pi", "by (auto simp add:field_simps)"], ["proof (state)\nthis:\n  - pi < x - real_of_int (k * 2) * pi\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>- pi < x - real_of_int (k * 2) * pi;\n         x - real_of_int (k * 2) * pi \\<le> pi\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  x - real_of_int (k * 2) * pi \\<le> pi\n  - pi < x - real_of_int (k * 2) * pi", "show ?thesis"], ["proof (prove)\nusing this:\n  x - real_of_int (k * 2) * pi \\<le> pi\n  - pi < x - real_of_int (k * 2) * pi\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  x - real_of_int (k * 2) * pi \\<le> pi\n  - pi < x - real_of_int (k * 2) * pi\n  \\<lbrakk>- pi < x - real_of_int (?k * 2) * pi;\n   x - real_of_int (?k * 2) * pi \\<le> pi\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  - pi < x - real_of_int (k * 2) * pi\n  x - real_of_int (k * 2) * pi \\<le> pi\n\ngoal (1 subgoal):\n 1. cos x = y \\<Longrightarrow>\n    - 1 \\<le> y \\<and>\n    y \\<le> 1 \\<and>\n    (\\<exists>xa.\n        x = arccos y + 2 * real_of_int xa * pi \\<or>\n        x = - arccos y + 2 * real_of_int xa * pi)", "have ?goal when \"x-k*2*pi\\<ge>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>xa.\n       x = arccos y + 2 * real_of_int xa * pi \\<or>\n       x = - arccos y + 2 * real_of_int xa * pi", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>xa.\n       x = arccos y + 2 * real_of_int xa * pi \\<or>\n       x = - arccos y + 2 * real_of_int xa * pi", "have \"cos (x - k * 2*pi) = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos (x - real_of_int (k * 2) * pi) = y", "using cos.periodic_simps(3)[of x \"-k\"] asm"], ["proof (prove)\nusing this:\n  cos (x + real_of_int (- k) * (2 * of_real pi)) = cos x\n  cos x = y\n\ngoal (1 subgoal):\n 1. cos (x - real_of_int (k * 2) * pi) = y", "by (auto simp add:field_simps)"], ["proof (state)\nthis:\n  cos (x - real_of_int (k * 2) * pi) = y\n\ngoal (1 subgoal):\n 1. \\<exists>xa.\n       x = arccos y + 2 * real_of_int xa * pi \\<or>\n       x = - arccos y + 2 * real_of_int xa * pi", "then"], ["proof (chain)\npicking this:\n  cos (x - real_of_int (k * 2) * pi) = y", "have \"arccos y = x - k * 2*pi\""], ["proof (prove)\nusing this:\n  cos (x - real_of_int (k * 2) * pi) = y\n\ngoal (1 subgoal):\n 1. arccos y = x - real_of_int (k * 2) * pi", "apply (intro arccos_unique)"], ["proof (prove)\ngoal (3 subgoals):\n 1. cos (x - real_of_int (k * 2) * pi) = y \\<Longrightarrow>\n    0 \\<le> x - real_of_int (k * 2) * pi\n 2. cos (x - real_of_int (k * 2) * pi) = y \\<Longrightarrow>\n    x - real_of_int (k * 2) * pi \\<le> pi\n 3. cos (x - real_of_int (k * 2) * pi) = y \\<Longrightarrow>\n    cos (x - real_of_int (k * 2) * pi) = y", "using k that"], ["proof (prove)\nusing this:\n  - pi < x - real_of_int (k * 2) * pi\n  x - real_of_int (k * 2) * pi \\<le> pi\n  0 \\<le> x - real_of_int (k * 2) * pi\n\ngoal (3 subgoals):\n 1. cos (x - real_of_int (k * 2) * pi) = y \\<Longrightarrow>\n    0 \\<le> x - real_of_int (k * 2) * pi\n 2. cos (x - real_of_int (k * 2) * pi) = y \\<Longrightarrow>\n    x - real_of_int (k * 2) * pi \\<le> pi\n 3. cos (x - real_of_int (k * 2) * pi) = y \\<Longrightarrow>\n    cos (x - real_of_int (k * 2) * pi) = y", "by auto"], ["proof (state)\nthis:\n  arccos y = x - real_of_int (k * 2) * pi\n\ngoal (1 subgoal):\n 1. \\<exists>xa.\n       x = arccos y + 2 * real_of_int xa * pi \\<or>\n       x = - arccos y + 2 * real_of_int xa * pi", "then"], ["proof (chain)\npicking this:\n  arccos y = x - real_of_int (k * 2) * pi", "show ?goal"], ["proof (prove)\nusing this:\n  arccos y = x - real_of_int (k * 2) * pi\n\ngoal (1 subgoal):\n 1. \\<exists>xa.\n       x = arccos y + 2 * real_of_int xa * pi \\<or>\n       x = - arccos y + 2 * real_of_int xa * pi", "by auto"], ["proof (state)\nthis:\n  \\<exists>xa.\n     x = arccos y + 2 * real_of_int xa * pi \\<or>\n     x = - arccos y + 2 * real_of_int xa * pi\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 \\<le> x - real_of_int (k * 2) * pi \\<Longrightarrow>\n  \\<exists>xa.\n     x = arccos y + 2 * real_of_int xa * pi \\<or>\n     x = - arccos y + 2 * real_of_int xa * pi\n\ngoal (1 subgoal):\n 1. cos x = y \\<Longrightarrow>\n    - 1 \\<le> y \\<and>\n    y \\<le> 1 \\<and>\n    (\\<exists>xa.\n        x = arccos y + 2 * real_of_int xa * pi \\<or>\n        x = - arccos y + 2 * real_of_int xa * pi)", "moreover"], ["proof (state)\nthis:\n  0 \\<le> x - real_of_int (k * 2) * pi \\<Longrightarrow>\n  \\<exists>xa.\n     x = arccos y + 2 * real_of_int xa * pi \\<or>\n     x = - arccos y + 2 * real_of_int xa * pi\n\ngoal (1 subgoal):\n 1. cos x = y \\<Longrightarrow>\n    - 1 \\<le> y \\<and>\n    y \\<le> 1 \\<and>\n    (\\<exists>xa.\n        x = arccos y + 2 * real_of_int xa * pi \\<or>\n        x = - arccos y + 2 * real_of_int xa * pi)", "have ?goal when \"\\<not> x-k*2*pi \\<ge>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>xa.\n       x = arccos y + 2 * real_of_int xa * pi \\<or>\n       x = - arccos y + 2 * real_of_int xa * pi", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>xa.\n       x = arccos y + 2 * real_of_int xa * pi \\<or>\n       x = - arccos y + 2 * real_of_int xa * pi", "have \"cos (x - k * 2*pi) = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos (x - real_of_int (k * 2) * pi) = y", "using cos.periodic_simps(3)[of x \"-k\"] asm"], ["proof (prove)\nusing this:\n  cos (x + real_of_int (- k) * (2 * of_real pi)) = cos x\n  cos x = y\n\ngoal (1 subgoal):\n 1. cos (x - real_of_int (k * 2) * pi) = y", "by (auto simp add:field_simps)"], ["proof (state)\nthis:\n  cos (x - real_of_int (k * 2) * pi) = y\n\ngoal (1 subgoal):\n 1. \\<exists>xa.\n       x = arccos y + 2 * real_of_int xa * pi \\<or>\n       x = - arccos y + 2 * real_of_int xa * pi", "then"], ["proof (chain)\npicking this:\n  cos (x - real_of_int (k * 2) * pi) = y", "have \"cos (k * 2*pi - x) = y\""], ["proof (prove)\nusing this:\n  cos (x - real_of_int (k * 2) * pi) = y\n\ngoal (1 subgoal):\n 1. cos (real_of_int (k * 2) * pi - x) = y", "by (metis cos_minus minus_diff_eq)"], ["proof (state)\nthis:\n  cos (real_of_int (k * 2) * pi - x) = y\n\ngoal (1 subgoal):\n 1. \\<exists>xa.\n       x = arccos y + 2 * real_of_int xa * pi \\<or>\n       x = - arccos y + 2 * real_of_int xa * pi", "then"], ["proof (chain)\npicking this:\n  cos (real_of_int (k * 2) * pi - x) = y", "have \"arccos y = k * 2*pi - x\""], ["proof (prove)\nusing this:\n  cos (real_of_int (k * 2) * pi - x) = y\n\ngoal (1 subgoal):\n 1. arccos y = real_of_int (k * 2) * pi - x", "apply (intro arccos_unique)"], ["proof (prove)\ngoal (3 subgoals):\n 1. cos (real_of_int (k * 2) * pi - x) = y \\<Longrightarrow>\n    0 \\<le> real_of_int (k * 2) * pi - x\n 2. cos (real_of_int (k * 2) * pi - x) = y \\<Longrightarrow>\n    real_of_int (k * 2) * pi - x \\<le> pi\n 3. cos (real_of_int (k * 2) * pi - x) = y \\<Longrightarrow>\n    cos (real_of_int (k * 2) * pi - x) = y", "using k that"], ["proof (prove)\nusing this:\n  - pi < x - real_of_int (k * 2) * pi\n  x - real_of_int (k * 2) * pi \\<le> pi\n  \\<not> 0 \\<le> x - real_of_int (k * 2) * pi\n\ngoal (3 subgoals):\n 1. cos (real_of_int (k * 2) * pi - x) = y \\<Longrightarrow>\n    0 \\<le> real_of_int (k * 2) * pi - x\n 2. cos (real_of_int (k * 2) * pi - x) = y \\<Longrightarrow>\n    real_of_int (k * 2) * pi - x \\<le> pi\n 3. cos (real_of_int (k * 2) * pi - x) = y \\<Longrightarrow>\n    cos (real_of_int (k * 2) * pi - x) = y", "by auto"], ["proof (state)\nthis:\n  arccos y = real_of_int (k * 2) * pi - x\n\ngoal (1 subgoal):\n 1. \\<exists>xa.\n       x = arccos y + 2 * real_of_int xa * pi \\<or>\n       x = - arccos y + 2 * real_of_int xa * pi", "then"], ["proof (chain)\npicking this:\n  arccos y = real_of_int (k * 2) * pi - x", "show ?goal"], ["proof (prove)\nusing this:\n  arccos y = real_of_int (k * 2) * pi - x\n\ngoal (1 subgoal):\n 1. \\<exists>xa.\n       x = arccos y + 2 * real_of_int xa * pi \\<or>\n       x = - arccos y + 2 * real_of_int xa * pi", "by auto"], ["proof (state)\nthis:\n  \\<exists>xa.\n     x = arccos y + 2 * real_of_int xa * pi \\<or>\n     x = - arccos y + 2 * real_of_int xa * pi\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> 0 \\<le> x - real_of_int (k * 2) * pi \\<Longrightarrow>\n  \\<exists>xa.\n     x = arccos y + 2 * real_of_int xa * pi \\<or>\n     x = - arccos y + 2 * real_of_int xa * pi\n\ngoal (1 subgoal):\n 1. cos x = y \\<Longrightarrow>\n    - 1 \\<le> y \\<and>\n    y \\<le> 1 \\<and>\n    (\\<exists>xa.\n        x = arccos y + 2 * real_of_int xa * pi \\<or>\n        x = - arccos y + 2 * real_of_int xa * pi)", "ultimately"], ["proof (chain)\npicking this:\n  0 \\<le> x - real_of_int (k * 2) * pi \\<Longrightarrow>\n  \\<exists>xa.\n     x = arccos y + 2 * real_of_int xa * pi \\<or>\n     x = - arccos y + 2 * real_of_int xa * pi\n  \\<not> 0 \\<le> x - real_of_int (k * 2) * pi \\<Longrightarrow>\n  \\<exists>xa.\n     x = arccos y + 2 * real_of_int xa * pi \\<or>\n     x = - arccos y + 2 * real_of_int xa * pi", "have ?goal"], ["proof (prove)\nusing this:\n  0 \\<le> x - real_of_int (k * 2) * pi \\<Longrightarrow>\n  \\<exists>xa.\n     x = arccos y + 2 * real_of_int xa * pi \\<or>\n     x = - arccos y + 2 * real_of_int xa * pi\n  \\<not> 0 \\<le> x - real_of_int (k * 2) * pi \\<Longrightarrow>\n  \\<exists>xa.\n     x = arccos y + 2 * real_of_int xa * pi \\<or>\n     x = - arccos y + 2 * real_of_int xa * pi\n\ngoal (1 subgoal):\n 1. \\<exists>xa.\n       x = arccos y + 2 * real_of_int xa * pi \\<or>\n       x = - arccos y + 2 * real_of_int xa * pi", "by auto"], ["proof (state)\nthis:\n  \\<exists>xa.\n     x = arccos y + 2 * real_of_int xa * pi \\<or>\n     x = - arccos y + 2 * real_of_int xa * pi\n\ngoal (1 subgoal):\n 1. cos x = y \\<Longrightarrow>\n    - 1 \\<le> y \\<and>\n    y \\<le> 1 \\<and>\n    (\\<exists>xa.\n        x = arccos y + 2 * real_of_int xa * pi \\<or>\n        x = - arccos y + 2 * real_of_int xa * pi)", "moreover"], ["proof (state)\nthis:\n  \\<exists>xa.\n     x = arccos y + 2 * real_of_int xa * pi \\<or>\n     x = - arccos y + 2 * real_of_int xa * pi\n\ngoal (1 subgoal):\n 1. cos x = y \\<Longrightarrow>\n    - 1 \\<le> y \\<and>\n    y \\<le> 1 \\<and>\n    (\\<exists>xa.\n        x = arccos y + 2 * real_of_int xa * pi \\<or>\n        x = - arccos y + 2 * real_of_int xa * pi)", "have \"-1\\<le>y \\<and> y\\<le>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - 1 \\<le> y \\<and> y \\<le> 1", "using asm"], ["proof (prove)\nusing this:\n  cos x = y\n\ngoal (1 subgoal):\n 1. - 1 \\<le> y \\<and> y \\<le> 1", "by auto"], ["proof (state)\nthis:\n  - 1 \\<le> y \\<and> y \\<le> 1\n\ngoal (1 subgoal):\n 1. cos x = y \\<Longrightarrow>\n    - 1 \\<le> y \\<and>\n    y \\<le> 1 \\<and>\n    (\\<exists>xa.\n        x = arccos y + 2 * real_of_int xa * pi \\<or>\n        x = - arccos y + 2 * real_of_int xa * pi)", "ultimately"], ["proof (chain)\npicking this:\n  \\<exists>xa.\n     x = arccos y + 2 * real_of_int xa * pi \\<or>\n     x = - arccos y + 2 * real_of_int xa * pi\n  - 1 \\<le> y \\<and> y \\<le> 1", "show \"-1\\<le>y \\<and> y\\<le>1 \\<and> ?goal\""], ["proof (prove)\nusing this:\n  \\<exists>xa.\n     x = arccos y + 2 * real_of_int xa * pi \\<or>\n     x = - arccos y + 2 * real_of_int xa * pi\n  - 1 \\<le> y \\<and> y \\<le> 1\n\ngoal (1 subgoal):\n 1. - 1 \\<le> y \\<and>\n    y \\<le> 1 \\<and>\n    (\\<exists>xa.\n        x = arccos y + 2 * real_of_int xa * pi \\<or>\n        x = - arccos y + 2 * real_of_int xa * pi)", "by auto"], ["proof (state)\nthis:\n  - 1 \\<le> y \\<and>\n  y \\<le> 1 \\<and>\n  (\\<exists>xa.\n      x = arccos y + 2 * real_of_int xa * pi \\<or>\n      x = - arccos y + 2 * real_of_int xa * pi)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma uniform_discrete_tan_eq:\n  \"uniform_discrete {x::real. tan x = y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uniform_discrete {x. tan x = y}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. uniform_discrete {x. tan x = y}", "have \"x1=x2\" when dist:\"dist x1 x2<pi/2\" and \"tan x1=y\" \"tan x2=y\" for x1 x2"], ["proof (prove)\ngoal (1 subgoal):\n 1. x1 = x2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x1 = x2", "obtain k1::int where x1:\"x1 = arctan y + k1*pi \\<or> (x1 = pi/2 + k1*pi \\<and> y=0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k1.\n        x1 = arctan y + real_of_int k1 * pi \\<or>\n        x1 = pi / 2 + real_of_int k1 * pi \\<and> y = 0 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using tan_eq_arctan_Ex \\<open>tan x1=y\\<close>"], ["proof (prove)\nusing this:\n  (tan ?x = ?y) =\n  (\\<exists>x.\n      ?x = arctan ?y + real_of_int x * pi \\<or>\n      ?x = pi / 2 + real_of_int x * pi \\<and> ?y = 0)\n  tan x1 = y\n\ngoal (1 subgoal):\n 1. (\\<And>k1.\n        x1 = arctan y + real_of_int k1 * pi \\<or>\n        x1 = pi / 2 + real_of_int k1 * pi \\<and> y = 0 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x1 = arctan y + real_of_int k1 * pi \\<or>\n  x1 = pi / 2 + real_of_int k1 * pi \\<and> y = 0\n\ngoal (1 subgoal):\n 1. x1 = x2", "obtain k2::int where x2:\"x2 = arctan y + k2*pi \\<or> (x2 = pi/2 + k2*pi \\<and> y=0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k2.\n        x2 = arctan y + real_of_int k2 * pi \\<or>\n        x2 = pi / 2 + real_of_int k2 * pi \\<and> y = 0 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using tan_eq_arctan_Ex \\<open>tan x2=y\\<close>"], ["proof (prove)\nusing this:\n  (tan ?x = ?y) =\n  (\\<exists>x.\n      ?x = arctan ?y + real_of_int x * pi \\<or>\n      ?x = pi / 2 + real_of_int x * pi \\<and> ?y = 0)\n  tan x2 = y\n\ngoal (1 subgoal):\n 1. (\\<And>k2.\n        x2 = arctan y + real_of_int k2 * pi \\<or>\n        x2 = pi / 2 + real_of_int k2 * pi \\<and> y = 0 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x2 = arctan y + real_of_int k2 * pi \\<or>\n  x2 = pi / 2 + real_of_int k2 * pi \\<and> y = 0\n\ngoal (1 subgoal):\n 1. x1 = x2", "let ?xk1=\"x1 = arctan y + k1*pi\" and ?xk1'=\"x1 = pi/2 + k1*pi \\<and> y=0\""], ["proof (state)\ngoal (1 subgoal):\n 1. x1 = x2", "let ?xk2=\"x2 = arctan y + k2*pi\" and ?xk2'=\"x2 = pi/2 + k2*pi \\<and> y=0\""], ["proof (state)\ngoal (1 subgoal):\n 1. x1 = x2", "have ?thesis when \"(?xk1 \\<and> ?xk2) \\<or> (?xk1' \\<and> ?xk2')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x1 = x2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x1 = x2", "have \"x1-x2= (k1 - k2) *pi\" when ?xk1 ?xk2"], ["proof (prove)\ngoal (1 subgoal):\n 1. x1 - x2 = real_of_int (k1 - k2) * pi", "using arg_cong2[where f=minus,OF \\<open>?xk1\\<close> \\<open>?xk2\\<close>]"], ["proof (prove)\nusing this:\n  x1 - x2 =\n  arctan y + real_of_int k1 * pi - (arctan y + real_of_int k2 * pi)\n\ngoal (1 subgoal):\n 1. x1 - x2 = real_of_int (k1 - k2) * pi", "by (auto simp add:algebra_simps)"], ["proof (state)\nthis:\n  \\<lbrakk>x1 = arctan y + real_of_int k1 * pi;\n   x2 = arctan y + real_of_int k2 * pi\\<rbrakk>\n  \\<Longrightarrow> x1 - x2 = real_of_int (k1 - k2) * pi\n\ngoal (1 subgoal):\n 1. x1 = x2", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>x1 = arctan y + real_of_int k1 * pi;\n   x2 = arctan y + real_of_int k2 * pi\\<rbrakk>\n  \\<Longrightarrow> x1 - x2 = real_of_int (k1 - k2) * pi\n\ngoal (1 subgoal):\n 1. x1 = x2", "have \"x1-x2= (k1 - k2) *pi\" when ?xk1' ?xk2'"], ["proof (prove)\ngoal (1 subgoal):\n 1. x1 - x2 = real_of_int (k1 - k2) * pi", "using arg_cong2[where f=minus,OF conjunct1[OF \\<open>?xk1'\\<close>] conjunct1[OF \\<open>?xk2'\\<close>]]"], ["proof (prove)\nusing this:\n  x1 - x2 = pi / 2 + real_of_int k1 * pi - (pi / 2 + real_of_int k2 * pi)\n\ngoal (1 subgoal):\n 1. x1 - x2 = real_of_int (k1 - k2) * pi", "by (auto simp add:algebra_simps)"], ["proof (state)\nthis:\n  \\<lbrakk>x1 = pi / 2 + real_of_int k1 * pi \\<and> y = 0;\n   x2 = pi / 2 + real_of_int k2 * pi \\<and> y = 0\\<rbrakk>\n  \\<Longrightarrow> x1 - x2 = real_of_int (k1 - k2) * pi\n\ngoal (1 subgoal):\n 1. x1 = x2", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>x1 = arctan y + real_of_int k1 * pi;\n   x2 = arctan y + real_of_int k2 * pi\\<rbrakk>\n  \\<Longrightarrow> x1 - x2 = real_of_int (k1 - k2) * pi\n  \\<lbrakk>x1 = pi / 2 + real_of_int k1 * pi \\<and> y = 0;\n   x2 = pi / 2 + real_of_int k2 * pi \\<and> y = 0\\<rbrakk>\n  \\<Longrightarrow> x1 - x2 = real_of_int (k1 - k2) * pi", "have \"x1-x2= (k1 - k2) *pi\""], ["proof (prove)\nusing this:\n  \\<lbrakk>x1 = arctan y + real_of_int k1 * pi;\n   x2 = arctan y + real_of_int k2 * pi\\<rbrakk>\n  \\<Longrightarrow> x1 - x2 = real_of_int (k1 - k2) * pi\n  \\<lbrakk>x1 = pi / 2 + real_of_int k1 * pi \\<and> y = 0;\n   x2 = pi / 2 + real_of_int k2 * pi \\<and> y = 0\\<rbrakk>\n  \\<Longrightarrow> x1 - x2 = real_of_int (k1 - k2) * pi\n\ngoal (1 subgoal):\n 1. x1 - x2 = real_of_int (k1 - k2) * pi", "using that"], ["proof (prove)\nusing this:\n  \\<lbrakk>x1 = arctan y + real_of_int k1 * pi;\n   x2 = arctan y + real_of_int k2 * pi\\<rbrakk>\n  \\<Longrightarrow> x1 - x2 = real_of_int (k1 - k2) * pi\n  \\<lbrakk>x1 = pi / 2 + real_of_int k1 * pi \\<and> y = 0;\n   x2 = pi / 2 + real_of_int k2 * pi \\<and> y = 0\\<rbrakk>\n  \\<Longrightarrow> x1 - x2 = real_of_int (k1 - k2) * pi\n  x1 = arctan y + real_of_int k1 * pi \\<and>\n  x2 = arctan y + real_of_int k2 * pi \\<or>\n  (x1 = pi / 2 + real_of_int k1 * pi \\<and> y = 0) \\<and>\n  x2 = pi / 2 + real_of_int k2 * pi \\<and> y = 0\n\ngoal (1 subgoal):\n 1. x1 - x2 = real_of_int (k1 - k2) * pi", "by auto"], ["proof (state)\nthis:\n  x1 - x2 = real_of_int (k1 - k2) * pi\n\ngoal (1 subgoal):\n 1. x1 = x2", "then"], ["proof (chain)\npicking this:\n  x1 - x2 = real_of_int (k1 - k2) * pi", "have \"\\<bar>k1 - k2\\<bar> < 1/2\""], ["proof (prove)\nusing this:\n  x1 - x2 = real_of_int (k1 - k2) * pi\n\ngoal (1 subgoal):\n 1. real_of_int \\<bar>k1 - k2\\<bar> < 1 / 2", "using dist[unfolded dist_real_def]"], ["proof (prove)\nusing this:\n  x1 - x2 = real_of_int (k1 - k2) * pi\n  \\<bar>x1 - x2\\<bar> < pi / 2\n\ngoal (1 subgoal):\n 1. real_of_int \\<bar>k1 - k2\\<bar> < 1 / 2", "by (auto simp add:abs_mult)"], ["proof (state)\nthis:\n  real_of_int \\<bar>k1 - k2\\<bar> < 1 / 2\n\ngoal (1 subgoal):\n 1. x1 = x2", "then"], ["proof (chain)\npicking this:\n  real_of_int \\<bar>k1 - k2\\<bar> < 1 / 2", "have \"k1=k2\""], ["proof (prove)\nusing this:\n  real_of_int \\<bar>k1 - k2\\<bar> < 1 / 2\n\ngoal (1 subgoal):\n 1. k1 = k2", "by linarith"], ["proof (state)\nthis:\n  k1 = k2\n\ngoal (1 subgoal):\n 1. x1 = x2", "then"], ["proof (chain)\npicking this:\n  k1 = k2", "show ?thesis"], ["proof (prove)\nusing this:\n  k1 = k2\n\ngoal (1 subgoal):\n 1. x1 = x2", "using that"], ["proof (prove)\nusing this:\n  k1 = k2\n  x1 = arctan y + real_of_int k1 * pi \\<and>\n  x2 = arctan y + real_of_int k2 * pi \\<or>\n  (x1 = pi / 2 + real_of_int k1 * pi \\<and> y = 0) \\<and>\n  x2 = pi / 2 + real_of_int k2 * pi \\<and> y = 0\n\ngoal (1 subgoal):\n 1. x1 = x2", "by auto"], ["proof (state)\nthis:\n  x1 = x2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x1 = arctan y + real_of_int k1 * pi \\<and>\n  x2 = arctan y + real_of_int k2 * pi \\<or>\n  (x1 = pi / 2 + real_of_int k1 * pi \\<and> y = 0) \\<and>\n  x2 = pi / 2 + real_of_int k2 * pi \\<and> y = 0 \\<Longrightarrow>\n  x1 = x2\n\ngoal (1 subgoal):\n 1. x1 = x2", "moreover"], ["proof (state)\nthis:\n  x1 = arctan y + real_of_int k1 * pi \\<and>\n  x2 = arctan y + real_of_int k2 * pi \\<or>\n  (x1 = pi / 2 + real_of_int k1 * pi \\<and> y = 0) \\<and>\n  x2 = pi / 2 + real_of_int k2 * pi \\<and> y = 0 \\<Longrightarrow>\n  x1 = x2\n\ngoal (1 subgoal):\n 1. x1 = x2", "have ?thesis when ?xk1 ?xk2'"], ["proof (prove)\ngoal (1 subgoal):\n 1. x1 = x2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x1 = x2", "have \"x1 = k1*pi\" \"x2 = pi / 2 + k2 * pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x1 = real_of_int k1 * pi &&& x2 = pi / 2 + real_of_int k2 * pi", "using \\<open>?xk2'\\<close> \\<open>?xk1\\<close>"], ["proof (prove)\nusing this:\n  x2 = pi / 2 + real_of_int k2 * pi \\<and> y = 0\n  x1 = arctan y + real_of_int k1 * pi\n\ngoal (1 subgoal):\n 1. x1 = real_of_int k1 * pi &&& x2 = pi / 2 + real_of_int k2 * pi", "by auto"], ["proof (state)\nthis:\n  x1 = real_of_int k1 * pi\n  x2 = pi / 2 + real_of_int k2 * pi\n\ngoal (1 subgoal):\n 1. x1 = x2", "from arg_cong2[where f=minus,OF this]"], ["proof (chain)\npicking this:\n  x1 - x2 = real_of_int k1 * pi - (pi / 2 + real_of_int k2 * pi)", "have \"x1 - x2 = (k1 - k2) * pi -pi/2\""], ["proof (prove)\nusing this:\n  x1 - x2 = real_of_int k1 * pi - (pi / 2 + real_of_int k2 * pi)\n\ngoal (1 subgoal):\n 1. x1 - x2 = real_of_int (k1 - k2) * pi - pi / 2", "by (auto simp add:algebra_simps)"], ["proof (state)\nthis:\n  x1 - x2 = real_of_int (k1 - k2) * pi - pi / 2\n\ngoal (1 subgoal):\n 1. x1 = x2", "then"], ["proof (chain)\npicking this:\n  x1 - x2 = real_of_int (k1 - k2) * pi - pi / 2", "have \"\\<bar>(k1 - k2) * pi -pi/2\\<bar> < pi/2\""], ["proof (prove)\nusing this:\n  x1 - x2 = real_of_int (k1 - k2) * pi - pi / 2\n\ngoal (1 subgoal):\n 1. \\<bar>real_of_int (k1 - k2) * pi - pi / 2\\<bar> < pi / 2", "using dist[unfolded dist_real_def]"], ["proof (prove)\nusing this:\n  x1 - x2 = real_of_int (k1 - k2) * pi - pi / 2\n  \\<bar>x1 - x2\\<bar> < pi / 2\n\ngoal (1 subgoal):\n 1. \\<bar>real_of_int (k1 - k2) * pi - pi / 2\\<bar> < pi / 2", "by auto"], ["proof (state)\nthis:\n  \\<bar>real_of_int (k1 - k2) * pi - pi / 2\\<bar> < pi / 2\n\ngoal (1 subgoal):\n 1. x1 = x2", "then"], ["proof (chain)\npicking this:\n  \\<bar>real_of_int (k1 - k2) * pi - pi / 2\\<bar> < pi / 2", "have \"0<k1-k2\" \"k1-k2<1\""], ["proof (prove)\nusing this:\n  \\<bar>real_of_int (k1 - k2) * pi - pi / 2\\<bar> < pi / 2\n\ngoal (1 subgoal):\n 1. 0 < k1 - k2 &&& k1 - k2 < 1", "unfolding abs_less_iff"], ["proof (prove)\nusing this:\n  real_of_int (k1 - k2) * pi - pi / 2 < pi / 2 \\<and>\n  - (real_of_int (k1 - k2) * pi - pi / 2) < pi / 2\n\ngoal (1 subgoal):\n 1. 0 < k1 - k2 &&& k1 - k2 < 1", "by (auto simp add: zero_less_mult_iff)"], ["proof (state)\nthis:\n  0 < k1 - k2\n  k1 - k2 < 1\n\ngoal (1 subgoal):\n 1. x1 = x2", "then"], ["proof (chain)\npicking this:\n  0 < k1 - k2\n  k1 - k2 < 1", "have False"], ["proof (prove)\nusing this:\n  0 < k1 - k2\n  k1 - k2 < 1\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. x1 = x2", "then"], ["proof (chain)\npicking this:\n  False", "show ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. x1 = x2", "by auto"], ["proof (state)\nthis:\n  x1 = x2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>x1 = arctan y + real_of_int k1 * pi;\n   x2 = pi / 2 + real_of_int k2 * pi \\<and> y = 0\\<rbrakk>\n  \\<Longrightarrow> x1 = x2\n\ngoal (1 subgoal):\n 1. x1 = x2", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>x1 = arctan y + real_of_int k1 * pi;\n   x2 = pi / 2 + real_of_int k2 * pi \\<and> y = 0\\<rbrakk>\n  \\<Longrightarrow> x1 = x2\n\ngoal (1 subgoal):\n 1. x1 = x2", "have ?thesis when ?xk1' ?xk2"], ["proof (prove)\ngoal (1 subgoal):\n 1. x1 = x2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x1 = x2", "have \"x1 = pi / 2 + k1*pi\" \"x2 = k2 * pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x1 = pi / 2 + real_of_int k1 * pi &&& x2 = real_of_int k2 * pi", "using \\<open>?xk2\\<close> \\<open>?xk1'\\<close>"], ["proof (prove)\nusing this:\n  x2 = arctan y + real_of_int k2 * pi\n  x1 = pi / 2 + real_of_int k1 * pi \\<and> y = 0\n\ngoal (1 subgoal):\n 1. x1 = pi / 2 + real_of_int k1 * pi &&& x2 = real_of_int k2 * pi", "by auto"], ["proof (state)\nthis:\n  x1 = pi / 2 + real_of_int k1 * pi\n  x2 = real_of_int k2 * pi\n\ngoal (1 subgoal):\n 1. x1 = x2", "from arg_cong2[where f=minus,OF this]"], ["proof (chain)\npicking this:\n  x1 - x2 = pi / 2 + real_of_int k1 * pi - real_of_int k2 * pi", "have \"x1 - x2 = (k1 - k2) * pi + pi/2\""], ["proof (prove)\nusing this:\n  x1 - x2 = pi / 2 + real_of_int k1 * pi - real_of_int k2 * pi\n\ngoal (1 subgoal):\n 1. x1 - x2 = real_of_int (k1 - k2) * pi + pi / 2", "by (auto simp add:algebra_simps)"], ["proof (state)\nthis:\n  x1 - x2 = real_of_int (k1 - k2) * pi + pi / 2\n\ngoal (1 subgoal):\n 1. x1 = x2", "then"], ["proof (chain)\npicking this:\n  x1 - x2 = real_of_int (k1 - k2) * pi + pi / 2", "have \"\\<bar>(k1 - k2) * pi + pi/2\\<bar> < pi/2\""], ["proof (prove)\nusing this:\n  x1 - x2 = real_of_int (k1 - k2) * pi + pi / 2\n\ngoal (1 subgoal):\n 1. \\<bar>real_of_int (k1 - k2) * pi + pi / 2\\<bar> < pi / 2", "using dist[unfolded dist_real_def]"], ["proof (prove)\nusing this:\n  x1 - x2 = real_of_int (k1 - k2) * pi + pi / 2\n  \\<bar>x1 - x2\\<bar> < pi / 2\n\ngoal (1 subgoal):\n 1. \\<bar>real_of_int (k1 - k2) * pi + pi / 2\\<bar> < pi / 2", "by auto"], ["proof (state)\nthis:\n  \\<bar>real_of_int (k1 - k2) * pi + pi / 2\\<bar> < pi / 2\n\ngoal (1 subgoal):\n 1. x1 = x2", "then"], ["proof (chain)\npicking this:\n  \\<bar>real_of_int (k1 - k2) * pi + pi / 2\\<bar> < pi / 2", "have \"\\<bar>(k1 - k2 + 1/2)*pi\\<bar> < pi/2\""], ["proof (prove)\nusing this:\n  \\<bar>real_of_int (k1 - k2) * pi + pi / 2\\<bar> < pi / 2\n\ngoal (1 subgoal):\n 1. \\<bar>(real_of_int (k1 - k2) + 1 / 2) * pi\\<bar> < pi / 2", "by (auto simp add:algebra_simps)"], ["proof (state)\nthis:\n  \\<bar>(real_of_int (k1 - k2) + 1 / 2) * pi\\<bar> < pi / 2\n\ngoal (1 subgoal):\n 1. x1 = x2", "then"], ["proof (chain)\npicking this:\n  \\<bar>(real_of_int (k1 - k2) + 1 / 2) * pi\\<bar> < pi / 2", "have \"\\<bar>(k1 - k2 + 1/2)\\<bar> < 1/2\""], ["proof (prove)\nusing this:\n  \\<bar>(real_of_int (k1 - k2) + 1 / 2) * pi\\<bar> < pi / 2\n\ngoal (1 subgoal):\n 1. \\<bar>real_of_int (k1 - k2) + 1 / 2\\<bar> < 1 / 2", "by (auto simp add:abs_mult)"], ["proof (state)\nthis:\n  \\<bar>real_of_int (k1 - k2) + 1 / 2\\<bar> < 1 / 2\n\ngoal (1 subgoal):\n 1. x1 = x2", "then"], ["proof (chain)\npicking this:\n  \\<bar>real_of_int (k1 - k2) + 1 / 2\\<bar> < 1 / 2", "have \"-1<k1-k2 \\<and> k1-k2<0\""], ["proof (prove)\nusing this:\n  \\<bar>real_of_int (k1 - k2) + 1 / 2\\<bar> < 1 / 2\n\ngoal (1 subgoal):\n 1. - 1 < k1 - k2 \\<and> k1 - k2 < 0", "unfolding abs_less_iff"], ["proof (prove)\nusing this:\n  real_of_int (k1 - k2) + 1 / 2 < 1 / 2 \\<and>\n  - (real_of_int (k1 - k2) + 1 / 2) < 1 / 2\n\ngoal (1 subgoal):\n 1. - 1 < k1 - k2 \\<and> k1 - k2 < 0", "by linarith"], ["proof (state)\nthis:\n  - 1 < k1 - k2 \\<and> k1 - k2 < 0\n\ngoal (1 subgoal):\n 1. x1 = x2", "then"], ["proof (chain)\npicking this:\n  - 1 < k1 - k2 \\<and> k1 - k2 < 0", "have False"], ["proof (prove)\nusing this:\n  - 1 < k1 - k2 \\<and> k1 - k2 < 0\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. x1 = x2", "then"], ["proof (chain)\npicking this:\n  False", "show ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. x1 = x2", "by auto"], ["proof (state)\nthis:\n  x1 = x2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>x1 = pi / 2 + real_of_int k1 * pi \\<and> y = 0;\n   x2 = arctan y + real_of_int k2 * pi\\<rbrakk>\n  \\<Longrightarrow> x1 = x2\n\ngoal (1 subgoal):\n 1. x1 = x2", "ultimately"], ["proof (chain)\npicking this:\n  x1 = arctan y + real_of_int k1 * pi \\<and>\n  x2 = arctan y + real_of_int k2 * pi \\<or>\n  (x1 = pi / 2 + real_of_int k1 * pi \\<and> y = 0) \\<and>\n  x2 = pi / 2 + real_of_int k2 * pi \\<and> y = 0 \\<Longrightarrow>\n  x1 = x2\n  \\<lbrakk>x1 = arctan y + real_of_int k1 * pi;\n   x2 = pi / 2 + real_of_int k2 * pi \\<and> y = 0\\<rbrakk>\n  \\<Longrightarrow> x1 = x2\n  \\<lbrakk>x1 = pi / 2 + real_of_int k1 * pi \\<and> y = 0;\n   x2 = arctan y + real_of_int k2 * pi\\<rbrakk>\n  \\<Longrightarrow> x1 = x2", "show ?thesis"], ["proof (prove)\nusing this:\n  x1 = arctan y + real_of_int k1 * pi \\<and>\n  x2 = arctan y + real_of_int k2 * pi \\<or>\n  (x1 = pi / 2 + real_of_int k1 * pi \\<and> y = 0) \\<and>\n  x2 = pi / 2 + real_of_int k2 * pi \\<and> y = 0 \\<Longrightarrow>\n  x1 = x2\n  \\<lbrakk>x1 = arctan y + real_of_int k1 * pi;\n   x2 = pi / 2 + real_of_int k2 * pi \\<and> y = 0\\<rbrakk>\n  \\<Longrightarrow> x1 = x2\n  \\<lbrakk>x1 = pi / 2 + real_of_int k1 * pi \\<and> y = 0;\n   x2 = arctan y + real_of_int k2 * pi\\<rbrakk>\n  \\<Longrightarrow> x1 = x2\n\ngoal (1 subgoal):\n 1. x1 = x2", "using x1 x2"], ["proof (prove)\nusing this:\n  x1 = arctan y + real_of_int k1 * pi \\<and>\n  x2 = arctan y + real_of_int k2 * pi \\<or>\n  (x1 = pi / 2 + real_of_int k1 * pi \\<and> y = 0) \\<and>\n  x2 = pi / 2 + real_of_int k2 * pi \\<and> y = 0 \\<Longrightarrow>\n  x1 = x2\n  \\<lbrakk>x1 = arctan y + real_of_int k1 * pi;\n   x2 = pi / 2 + real_of_int k2 * pi \\<and> y = 0\\<rbrakk>\n  \\<Longrightarrow> x1 = x2\n  \\<lbrakk>x1 = pi / 2 + real_of_int k1 * pi \\<and> y = 0;\n   x2 = arctan y + real_of_int k2 * pi\\<rbrakk>\n  \\<Longrightarrow> x1 = x2\n  x1 = arctan y + real_of_int k1 * pi \\<or>\n  x1 = pi / 2 + real_of_int k1 * pi \\<and> y = 0\n  x2 = arctan y + real_of_int k2 * pi \\<or>\n  x2 = pi / 2 + real_of_int k2 * pi \\<and> y = 0\n\ngoal (1 subgoal):\n 1. x1 = x2", "by blast"], ["proof (state)\nthis:\n  x1 = x2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>dist ?x1.0 ?x2.0 < pi / 2; tan ?x1.0 = y; tan ?x2.0 = y\\<rbrakk>\n  \\<Longrightarrow> ?x1.0 = ?x2.0\n\ngoal (1 subgoal):\n 1. uniform_discrete {x. tan x = y}", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>dist ?x1.0 ?x2.0 < pi / 2; tan ?x1.0 = y; tan ?x2.0 = y\\<rbrakk>\n  \\<Longrightarrow> ?x1.0 = ?x2.0", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>dist ?x1.0 ?x2.0 < pi / 2; tan ?x1.0 = y; tan ?x2.0 = y\\<rbrakk>\n  \\<Longrightarrow> ?x1.0 = ?x2.0\n\ngoal (1 subgoal):\n 1. uniform_discrete {x. tan x = y}", "unfolding uniform_discrete_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>dist ?x1.0 ?x2.0 < pi / 2; tan ?x1.0 = y; tan ?x2.0 = y\\<rbrakk>\n  \\<Longrightarrow> ?x1.0 = ?x2.0\n\ngoal (1 subgoal):\n 1. \\<exists>e>0.\n       \\<forall>x\\<in>{x. tan x = y}.\n          \\<forall>y\\<in>{x. tan x = y}.\n             dist x y < e \\<longrightarrow> x = y", "apply (intro exI[where x=\"pi/2\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x1 x2.\n        \\<lbrakk>dist x1 x2 < pi / 2; tan x1 = y; tan x2 = y\\<rbrakk>\n        \\<Longrightarrow> x1 = x2) \\<Longrightarrow>\n    0 < pi / 2 \\<and>\n    (\\<forall>x\\<in>{x. tan x = y}.\n        \\<forall>y\\<in>{x. tan x = y}.\n           dist x y < pi / 2 \\<longrightarrow> x = y)", "by auto"], ["proof (state)\nthis:\n  uniform_discrete {x. tan x = y}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma get_norm_value:\n  fixes a::\"'a::{floor_ceiling}\"\n  assumes \"pp>0\"\n  obtains k::int and a1 where \"a=(of_int k)*pp+a1\" \"a0\\<le>a1\" \"a1<a0+pp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k a1.\n        \\<lbrakk>a = of_int k * pp + a1; a0 \\<le> a1; a1 < a0 + pp\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>k a1.\n        \\<lbrakk>a = of_int k * pp + a1; a0 \\<le> a1; a1 < a0 + pp\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define k where \"k=floor ((a-a0)/pp)\""], ["proof (state)\nthis:\n  k = \\<lfloor>(a - a0) / pp\\<rfloor>\n\ngoal (1 subgoal):\n 1. (\\<And>k a1.\n        \\<lbrakk>a = of_int k * pp + a1; a0 \\<le> a1; a1 < a0 + pp\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define a1 where \"a1=a-(of_int k)*pp\""], ["proof (state)\nthis:\n  a1 = a - of_int k * pp\n\ngoal (1 subgoal):\n 1. (\\<And>k a1.\n        \\<lbrakk>a = of_int k * pp + a1; a0 \\<le> a1; a1 < a0 + pp\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"of_int \\<lfloor>(a - a0) / pp\\<rfloor> * pp \\<le> a- a0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_int \\<lfloor>(a - a0) / pp\\<rfloor> * pp \\<le> a - a0", "using assms"], ["proof (prove)\nusing this:\n  (0::'a) < pp\n\ngoal (1 subgoal):\n 1. of_int \\<lfloor>(a - a0) / pp\\<rfloor> * pp \\<le> a - a0", "by (meson le_divide_eq of_int_floor_le)"], ["proof (state)\nthis:\n  of_int \\<lfloor>(a - a0) / pp\\<rfloor> * pp \\<le> a - a0\n\ngoal (1 subgoal):\n 1. (\\<And>k a1.\n        \\<lbrakk>a = of_int k * pp + a1; a0 \\<le> a1; a1 < a0 + pp\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  of_int \\<lfloor>(a - a0) / pp\\<rfloor> * pp \\<le> a - a0\n\ngoal (1 subgoal):\n 1. (\\<And>k a1.\n        \\<lbrakk>a = of_int k * pp + a1; a0 \\<le> a1; a1 < a0 + pp\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"a-a0 < of_int (\\<lfloor>(a - a0) / pp\\<rfloor>+1) * pp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a - a0 < of_int (\\<lfloor>(a - a0) / pp\\<rfloor> + 1) * pp", "using assms"], ["proof (prove)\nusing this:\n  (0::'a) < pp\n\ngoal (1 subgoal):\n 1. a - a0 < of_int (\\<lfloor>(a - a0) / pp\\<rfloor> + 1) * pp", "by (meson divide_less_eq floor_correct)"], ["proof (state)\nthis:\n  a - a0 < of_int (\\<lfloor>(a - a0) / pp\\<rfloor> + 1) * pp\n\ngoal (1 subgoal):\n 1. (\\<And>k a1.\n        \\<lbrakk>a = of_int k * pp + a1; a0 \\<le> a1; a1 < a0 + pp\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  of_int \\<lfloor>(a - a0) / pp\\<rfloor> * pp \\<le> a - a0\n  a - a0 < of_int (\\<lfloor>(a - a0) / pp\\<rfloor> + 1) * pp", "show ?thesis"], ["proof (prove)\nusing this:\n  of_int \\<lfloor>(a - a0) / pp\\<rfloor> * pp \\<le> a - a0\n  a - a0 < of_int (\\<lfloor>(a - a0) / pp\\<rfloor> + 1) * pp\n\ngoal (1 subgoal):\n 1. thesis", "apply (intro that[of k a1])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>of_int \\<lfloor>(a - a0) / pp\\<rfloor> * pp \\<le> a - a0;\n     a - a0 < of_int (\\<lfloor>(a - a0) / pp\\<rfloor> + 1) * pp\\<rbrakk>\n    \\<Longrightarrow> a = of_int k * pp + a1\n 2. \\<lbrakk>of_int \\<lfloor>(a - a0) / pp\\<rfloor> * pp \\<le> a - a0;\n     a - a0 < of_int (\\<lfloor>(a - a0) / pp\\<rfloor> + 1) * pp\\<rbrakk>\n    \\<Longrightarrow> a0 \\<le> a1\n 3. \\<lbrakk>of_int \\<lfloor>(a - a0) / pp\\<rfloor> * pp \\<le> a - a0;\n     a - a0 < of_int (\\<lfloor>(a - a0) / pp\\<rfloor> + 1) * pp\\<rbrakk>\n    \\<Longrightarrow> a1 < a0 + pp", "unfolding k_def a1_def"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>of_int \\<lfloor>(a - a0) / pp\\<rfloor> * pp \\<le> a - a0;\n     a - a0 < of_int (\\<lfloor>(a - a0) / pp\\<rfloor> + 1) * pp\\<rbrakk>\n    \\<Longrightarrow> a =\n                      of_int \\<lfloor>(a - a0) / pp\\<rfloor> * pp +\n                      (a - of_int \\<lfloor>(a - a0) / pp\\<rfloor> * pp)\n 2. \\<lbrakk>of_int \\<lfloor>(a - a0) / pp\\<rfloor> * pp \\<le> a - a0;\n     a - a0 < of_int (\\<lfloor>(a - a0) / pp\\<rfloor> + 1) * pp\\<rbrakk>\n    \\<Longrightarrow> a0 \\<le> a -\n                               of_int \\<lfloor>(a - a0) / pp\\<rfloor> * pp\n 3. \\<lbrakk>of_int \\<lfloor>(a - a0) / pp\\<rfloor> * pp \\<le> a - a0;\n     a - a0 < of_int (\\<lfloor>(a - a0) / pp\\<rfloor> + 1) * pp\\<rbrakk>\n    \\<Longrightarrow> a - of_int \\<lfloor>(a - a0) / pp\\<rfloor> * pp\n                      < a0 + pp", "using assms"], ["proof (prove)\nusing this:\n  (0::'a) < pp\n\ngoal (3 subgoals):\n 1. \\<lbrakk>of_int \\<lfloor>(a - a0) / pp\\<rfloor> * pp \\<le> a - a0;\n     a - a0 < of_int (\\<lfloor>(a - a0) / pp\\<rfloor> + 1) * pp\\<rbrakk>\n    \\<Longrightarrow> a =\n                      of_int \\<lfloor>(a - a0) / pp\\<rfloor> * pp +\n                      (a - of_int \\<lfloor>(a - a0) / pp\\<rfloor> * pp)\n 2. \\<lbrakk>of_int \\<lfloor>(a - a0) / pp\\<rfloor> * pp \\<le> a - a0;\n     a - a0 < of_int (\\<lfloor>(a - a0) / pp\\<rfloor> + 1) * pp\\<rbrakk>\n    \\<Longrightarrow> a0 \\<le> a -\n                               of_int \\<lfloor>(a - a0) / pp\\<rfloor> * pp\n 3. \\<lbrakk>of_int \\<lfloor>(a - a0) / pp\\<rfloor> * pp \\<le> a - a0;\n     a - a0 < of_int (\\<lfloor>(a - a0) / pp\\<rfloor> + 1) * pp\\<rbrakk>\n    \\<Longrightarrow> a - of_int \\<lfloor>(a - a0) / pp\\<rfloor> * pp\n                      < a0 + pp", "by (auto simp add:algebra_simps)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "(*Is it possible to generalise or simplify this messy proof?*)"], ["", "lemma filtermap_tan_at_right:\n  fixes a::real\n  assumes \"cos a\\<noteq>0\"\n  shows \"filtermap tan (at_right a) = at_right (tan a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filtermap tan (at_right a) = at_right (tan a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. filtermap tan (at_right a) = at_right (tan a)", "obtain k::int and a1 where aa1:\"a=k*pi+a1\" and \"-pi/2\\<le>a1\" \"a1<pi/2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k a1.\n        \\<lbrakk>a = real_of_int k * pi + a1; - pi / 2 \\<le> a1;\n         a1 < pi / 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using get_norm_value[of pi a \"-pi/2\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < pi;\n   \\<And>k a1.\n      \\<lbrakk>a = real_of_int k * pi + a1; - pi / 2 \\<le> a1;\n       a1 < - pi / 2 + pi\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>k a1.\n        \\<lbrakk>a = real_of_int k * pi + a1; - pi / 2 \\<le> a1;\n         a1 < pi / 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a = real_of_int k * pi + a1\n  - pi / 2 \\<le> a1\n  a1 < pi / 2\n\ngoal (1 subgoal):\n 1. filtermap tan (at_right a) = at_right (tan a)", "have \"-pi/2 < a1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - pi / 2 < a1", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> - pi / 2 < a1 \\<Longrightarrow> False", "assume \"\\<not> - pi / 2 < a1\""], ["proof (state)\nthis:\n  \\<not> - pi / 2 < a1\n\ngoal (1 subgoal):\n 1. \\<not> - pi / 2 < a1 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> - pi / 2 < a1", "have \"a1=- pi / 2\""], ["proof (prove)\nusing this:\n  \\<not> - pi / 2 < a1\n\ngoal (1 subgoal):\n 1. a1 = - pi / 2", "using \\<open>-pi/2\\<le>a1\\<close>"], ["proof (prove)\nusing this:\n  \\<not> - pi / 2 < a1\n  - pi / 2 \\<le> a1\n\ngoal (1 subgoal):\n 1. a1 = - pi / 2", "by auto"], ["proof (state)\nthis:\n  a1 = - pi / 2\n\ngoal (1 subgoal):\n 1. \\<not> - pi / 2 < a1 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  a1 = - pi / 2", "have \"cos a = 0\""], ["proof (prove)\nusing this:\n  a1 = - pi / 2\n\ngoal (1 subgoal):\n 1. cos a = 0", "unfolding aa1"], ["proof (prove)\nusing this:\n  a1 = - pi / 2\n\ngoal (1 subgoal):\n 1. cos (real_of_int k * pi + a1) = 0", "by (metis (no_types, hide_lams) add.commute add_0_left cos_pi_half \n              diff_eq_eq mult.left_neutral mult_minus_right mult_zero_left \n              sin_add sin_pi_half sin_zero_iff_int2 times_divide_eq_left uminus_add_conv_diff)"], ["proof (state)\nthis:\n  cos a = 0\n\ngoal (1 subgoal):\n 1. \\<not> - pi / 2 < a1 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  cos a = 0", "show False"], ["proof (prove)\nusing this:\n  cos a = 0\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  cos a = 0\n  cos a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  - pi / 2 < a1\n\ngoal (1 subgoal):\n 1. filtermap tan (at_right a) = at_right (tan a)", "have \"eventually P (at_right (tan a))\" \n    when \"eventually P (filtermap tan (at_right a))\" for P"], ["proof (prove)\ngoal (1 subgoal):\n 1. eventually P (at_right (tan a))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. eventually P (at_right (tan a))", "obtain b1 where \"b1>a\" and b1_imp:\" \\<forall>y>a. y < b1 \\<longrightarrow> P (tan y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>b1.\n        \\<lbrakk>a < b1;\n         \\<forall>y>a. y < b1 \\<longrightarrow> P (tan y)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>eventually P (filtermap tan (at_right a))\\<close>"], ["proof (prove)\nusing this:\n  eventually P (filtermap tan (at_right a))\n\ngoal (1 subgoal):\n 1. (\\<And>b1.\n        \\<lbrakk>a < b1;\n         \\<forall>y>a. y < b1 \\<longrightarrow> P (tan y)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding eventually_filtermap eventually_at_right"], ["proof (prove)\nusing this:\n  \\<exists>b>a. \\<forall>y>a. y < b \\<longrightarrow> P (tan y)\n\ngoal (1 subgoal):\n 1. (\\<And>b1.\n        \\<lbrakk>a < b1;\n         \\<forall>y>a. y < b1 \\<longrightarrow> P (tan y)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis eventually_at_right_field)"], ["proof (state)\nthis:\n  a < b1\n  \\<forall>y>a. y < b1 \\<longrightarrow> P (tan y)\n\ngoal (1 subgoal):\n 1. eventually P (at_right (tan a))", "define b2 where \"b2=min b1 (k*pi+pi/4+a1/2)\""], ["proof (state)\nthis:\n  b2 = min b1 (real_of_int k * pi + pi / 4 + a1 / 2)\n\ngoal (1 subgoal):\n 1. eventually P (at_right (tan a))", "define b3 where \"b3=b2 - k*pi\""], ["proof (state)\nthis:\n  b3 = b2 - real_of_int k * pi\n\ngoal (1 subgoal):\n 1. eventually P (at_right (tan a))", "have \"-pi/2 < b3\" \"b3<pi/2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - pi / 2 < b3 &&& b3 < pi / 2", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. - pi / 2 < b3\n 2. b3 < pi / 2", "have \"a1<b3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a1 < b3", "using \\<open>b1>a\\<close> aa1 \\<open>a1<pi/2\\<close>"], ["proof (prove)\nusing this:\n  a < b1\n  a = real_of_int k * pi + a1\n  a1 < pi / 2\n\ngoal (1 subgoal):\n 1. a1 < b3", "unfolding b2_def b3_def"], ["proof (prove)\nusing this:\n  a < b1\n  a = real_of_int k * pi + a1\n  a1 < pi / 2\n\ngoal (1 subgoal):\n 1. a1 < min b1 (real_of_int k * pi + pi / 4 + a1 / 2) - real_of_int k * pi", "by (auto simp add:field_simps)"], ["proof (state)\nthis:\n  a1 < b3\n\ngoal (2 subgoals):\n 1. - pi / 2 < b3\n 2. b3 < pi / 2", "then"], ["proof (chain)\npicking this:\n  a1 < b3", "show \"-pi/2 < b3\""], ["proof (prove)\nusing this:\n  a1 < b3\n\ngoal (1 subgoal):\n 1. - pi / 2 < b3", "using \\<open>-pi/2\\<le>a1\\<close>"], ["proof (prove)\nusing this:\n  a1 < b3\n  - pi / 2 \\<le> a1\n\ngoal (1 subgoal):\n 1. - pi / 2 < b3", "by auto"], ["proof (state)\nthis:\n  - pi / 2 < b3\n\ngoal (1 subgoal):\n 1. b3 < pi / 2", "show \"b3 < pi/2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b3 < pi / 2", "unfolding b2_def b3_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. min b1 (real_of_int k * pi + pi / 4 + a1 / 2) - real_of_int k * pi\n    < pi / 2", "apply (subst min_diff_distrib_left)"], ["proof (prove)\ngoal (1 subgoal):\n 1. min (b1 - real_of_int k * pi)\n     (real_of_int k * pi + pi / 4 + a1 / 2 - real_of_int k * pi)\n    < pi / 2", "apply (rule min.strict_coboundedI2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int k * pi + pi / 4 + a1 / 2 - real_of_int k * pi < pi / 2", "using \\<open>b1>a\\<close> aa1 \\<open>a1<pi/2\\<close> \\<open>-pi/2<a1\\<close>"], ["proof (prove)\nusing this:\n  a < b1\n  a = real_of_int k * pi + a1\n  a1 < pi / 2\n  - pi / 2 < a1\n\ngoal (1 subgoal):\n 1. real_of_int k * pi + pi / 4 + a1 / 2 - real_of_int k * pi < pi / 2", "by auto"], ["proof (state)\nthis:\n  b3 < pi / 2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  - pi / 2 < b3\n  b3 < pi / 2\n\ngoal (1 subgoal):\n 1. eventually P (at_right (tan a))", "have \"tan b2 > tan a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tan a < tan b2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. tan a < tan b2", "have \"tan a = tan a1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tan a = tan a1", "using aa1"], ["proof (prove)\nusing this:\n  a = real_of_int k * pi + a1\n\ngoal (1 subgoal):\n 1. tan a = tan a1", "by (simp add: add.commute)"], ["proof (state)\nthis:\n  tan a = tan a1\n\ngoal (1 subgoal):\n 1. tan a < tan b2", "also"], ["proof (state)\nthis:\n  tan a = tan a1\n\ngoal (1 subgoal):\n 1. tan a < tan b2", "have \"... < tan b3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tan a1 < tan b3", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. tan a1 < tan b3", "have \"a1<b3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a1 < b3", "using \\<open>b1>a\\<close> aa1 \\<open>a1<pi/2\\<close>"], ["proof (prove)\nusing this:\n  a < b1\n  a = real_of_int k * pi + a1\n  a1 < pi / 2\n\ngoal (1 subgoal):\n 1. a1 < b3", "unfolding b2_def b3_def"], ["proof (prove)\nusing this:\n  a < b1\n  a = real_of_int k * pi + a1\n  a1 < pi / 2\n\ngoal (1 subgoal):\n 1. a1 < min b1 (real_of_int k * pi + pi / 4 + a1 / 2) - real_of_int k * pi", "by (auto simp add:field_simps)"], ["proof (state)\nthis:\n  a1 < b3\n\ngoal (1 subgoal):\n 1. tan a1 < tan b3", "then"], ["proof (chain)\npicking this:\n  a1 < b3", "show ?thesis"], ["proof (prove)\nusing this:\n  a1 < b3\n\ngoal (1 subgoal):\n 1. tan a1 < tan b3", "using tan_monotone \\<open>-pi/2 < a1\\<close> \\<open>b3 < pi/2\\<close>"], ["proof (prove)\nusing this:\n  a1 < b3\n  \\<lbrakk>- (pi / 2) < ?y; ?y < ?x; ?x < pi / 2\\<rbrakk>\n  \\<Longrightarrow> tan ?y < tan ?x\n  - pi / 2 < a1\n  b3 < pi / 2\n\ngoal (1 subgoal):\n 1. tan a1 < tan b3", "by simp"], ["proof (state)\nthis:\n  tan a1 < tan b3\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  tan a1 < tan b3\n\ngoal (1 subgoal):\n 1. tan a < tan b2", "also"], ["proof (state)\nthis:\n  tan a1 < tan b3\n\ngoal (1 subgoal):\n 1. tan a < tan b2", "have \"... = tan b2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tan b3 = tan b2", "unfolding b3_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. tan (b2 - real_of_int k * pi) = tan b2", "by (metis Groups.mult_ac(2) add_uminus_conv_diff mult_minus_right of_int_minus \n          tan_periodic_int)"], ["proof (state)\nthis:\n  tan b3 = tan b2\n\ngoal (1 subgoal):\n 1. tan a < tan b2", "finally"], ["proof (chain)\npicking this:\n  tan a < tan b2", "show ?thesis"], ["proof (prove)\nusing this:\n  tan a < tan b2\n\ngoal (1 subgoal):\n 1. tan a < tan b2", "."], ["proof (state)\nthis:\n  tan a < tan b2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  tan a < tan b2\n\ngoal (1 subgoal):\n 1. eventually P (at_right (tan a))", "moreover"], ["proof (state)\nthis:\n  tan a < tan b2\n\ngoal (1 subgoal):\n 1. eventually P (at_right (tan a))", "have \"P y\" when \"y>tan a\" \"y < tan b2\" for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. P y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P y", "define y1 where \"y1=arctan y+ k * pi\""], ["proof (state)\nthis:\n  y1 = arctan y + real_of_int k * pi\n\ngoal (1 subgoal):\n 1. P y", "have \"a<y1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a < y1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a < y1", "have \"arctan (tan a) < arctan y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arctan (tan a) < arctan y", "using \\<open>y>tan a\\<close> arctan_monotone"], ["proof (prove)\nusing this:\n  tan a < y\n  ?x < ?y \\<Longrightarrow> arctan ?x < arctan ?y\n\ngoal (1 subgoal):\n 1. arctan (tan a) < arctan y", "by auto"], ["proof (state)\nthis:\n  arctan (tan a) < arctan y\n\ngoal (1 subgoal):\n 1. a < y1", "then"], ["proof (chain)\npicking this:\n  arctan (tan a) < arctan y", "have \"a1<arctan y\""], ["proof (prove)\nusing this:\n  arctan (tan a) < arctan y\n\ngoal (1 subgoal):\n 1. a1 < arctan y", "using arctan_tan \\<open>-pi/2 < a1\\<close> \\<open>a1<pi/2\\<close>"], ["proof (prove)\nusing this:\n  arctan (tan a) < arctan y\n  \\<lbrakk>- (pi / 2) < ?x; ?x < pi / 2\\<rbrakk>\n  \\<Longrightarrow> arctan (tan ?x) = ?x\n  - pi / 2 < a1\n  a1 < pi / 2\n\ngoal (1 subgoal):\n 1. a1 < arctan y", "unfolding aa1"], ["proof (prove)\nusing this:\n  arctan (tan (real_of_int k * pi + a1)) < arctan y\n  \\<lbrakk>- (pi / 2) < ?x; ?x < pi / 2\\<rbrakk>\n  \\<Longrightarrow> arctan (tan ?x) = ?x\n  - pi / 2 < a1\n  a1 < pi / 2\n\ngoal (1 subgoal):\n 1. a1 < arctan y", "by (simp add: add.commute)"], ["proof (state)\nthis:\n  a1 < arctan y\n\ngoal (1 subgoal):\n 1. a < y1", "then"], ["proof (chain)\npicking this:\n  a1 < arctan y", "show ?thesis"], ["proof (prove)\nusing this:\n  a1 < arctan y\n\ngoal (1 subgoal):\n 1. a < y1", "unfolding y1_def aa1"], ["proof (prove)\nusing this:\n  a1 < arctan y\n\ngoal (1 subgoal):\n 1. real_of_int k * pi + a1 < arctan y + real_of_int k * pi", "by auto"], ["proof (state)\nthis:\n  a < y1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a < y1\n\ngoal (1 subgoal):\n 1. P y", "moreover"], ["proof (state)\nthis:\n  a < y1\n\ngoal (1 subgoal):\n 1. P y", "have \"y1<b2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y1 < b2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. y1 < b2", "have \"arctan y < arctan (tan b2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arctan y < arctan (tan b2)", "using \\<open>y < tan b2\\<close> arctan_monotone"], ["proof (prove)\nusing this:\n  y < tan b2\n  ?x < ?y \\<Longrightarrow> arctan ?x < arctan ?y\n\ngoal (1 subgoal):\n 1. arctan y < arctan (tan b2)", "by auto"], ["proof (state)\nthis:\n  arctan y < arctan (tan b2)\n\ngoal (1 subgoal):\n 1. y1 < b2", "moreover"], ["proof (state)\nthis:\n  arctan y < arctan (tan b2)\n\ngoal (1 subgoal):\n 1. y1 < b2", "have \"arctan (tan b2) = b3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arctan (tan b2) = b3", "using arctan_tan[of b3] \\<open>-pi/2 < b3\\<close> \\<open>b3<pi/2\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>- (pi / 2) < b3; b3 < pi / 2\\<rbrakk>\n  \\<Longrightarrow> arctan (tan b3) = b3\n  - pi / 2 < b3\n  b3 < pi / 2\n\ngoal (1 subgoal):\n 1. arctan (tan b2) = b3", "unfolding b3_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>- (pi / 2) < b2 - real_of_int k * pi;\n   b2 - real_of_int k * pi < pi / 2\\<rbrakk>\n  \\<Longrightarrow> arctan (tan (b2 - real_of_int k * pi)) =\n                    b2 - real_of_int k * pi\n  - pi / 2 < b2 - real_of_int k * pi\n  b2 - real_of_int k * pi < pi / 2\n\ngoal (1 subgoal):\n 1. arctan (tan b2) = b2 - real_of_int k * pi", "by (metis add.inverse_inverse diff_minus_eq_add divide_minus_left mult.commute \n            mult_minus_right of_int_minus tan_periodic_int)"], ["proof (state)\nthis:\n  arctan (tan b2) = b3\n\ngoal (1 subgoal):\n 1. y1 < b2", "ultimately"], ["proof (chain)\npicking this:\n  arctan y < arctan (tan b2)\n  arctan (tan b2) = b3", "have \"arctan y < b3\""], ["proof (prove)\nusing this:\n  arctan y < arctan (tan b2)\n  arctan (tan b2) = b3\n\ngoal (1 subgoal):\n 1. arctan y < b3", "by auto"], ["proof (state)\nthis:\n  arctan y < b3\n\ngoal (1 subgoal):\n 1. y1 < b2", "then"], ["proof (chain)\npicking this:\n  arctan y < b3", "show ?thesis"], ["proof (prove)\nusing this:\n  arctan y < b3\n\ngoal (1 subgoal):\n 1. y1 < b2", "unfolding y1_def b3_def"], ["proof (prove)\nusing this:\n  arctan y < b2 - real_of_int k * pi\n\ngoal (1 subgoal):\n 1. arctan y + real_of_int k * pi < b2", "by auto"], ["proof (state)\nthis:\n  y1 < b2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  y1 < b2\n\ngoal (1 subgoal):\n 1. P y", "moreover"], ["proof (state)\nthis:\n  y1 < b2\n\ngoal (1 subgoal):\n 1. P y", "have \"\\<forall>y>a. y < b2 \\<longrightarrow> P (tan y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y>a. y < b2 \\<longrightarrow> P (tan y)", "using b1_imp"], ["proof (prove)\nusing this:\n  \\<forall>y>a. y < b1 \\<longrightarrow> P (tan y)\n\ngoal (1 subgoal):\n 1. \\<forall>y>a. y < b2 \\<longrightarrow> P (tan y)", "unfolding b2_def"], ["proof (prove)\nusing this:\n  \\<forall>y>a. y < b1 \\<longrightarrow> P (tan y)\n\ngoal (1 subgoal):\n 1. \\<forall>y>a.\n       y < min b1 (real_of_int k * pi + pi / 4 + a1 / 2) \\<longrightarrow>\n       P (tan y)", "by auto"], ["proof (state)\nthis:\n  \\<forall>y>a. y < b2 \\<longrightarrow> P (tan y)\n\ngoal (1 subgoal):\n 1. P y", "moreover"], ["proof (state)\nthis:\n  \\<forall>y>a. y < b2 \\<longrightarrow> P (tan y)\n\ngoal (1 subgoal):\n 1. P y", "have \"tan y1=y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tan y1 = y", "unfolding y1_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. tan (arctan y + real_of_int k * pi) = y", "by (auto simp add:tan_arctan)"], ["proof (state)\nthis:\n  tan y1 = y\n\ngoal (1 subgoal):\n 1. P y", "ultimately"], ["proof (chain)\npicking this:\n  a < y1\n  y1 < b2\n  \\<forall>y>a. y < b2 \\<longrightarrow> P (tan y)\n  tan y1 = y", "show ?thesis"], ["proof (prove)\nusing this:\n  a < y1\n  y1 < b2\n  \\<forall>y>a. y < b2 \\<longrightarrow> P (tan y)\n  tan y1 = y\n\ngoal (1 subgoal):\n 1. P y", "by auto"], ["proof (state)\nthis:\n  P y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>tan a < ?y; ?y < tan b2\\<rbrakk> \\<Longrightarrow> P ?y\n\ngoal (1 subgoal):\n 1. eventually P (at_right (tan a))", "ultimately"], ["proof (chain)\npicking this:\n  tan a < tan b2\n  \\<lbrakk>tan a < ?y; ?y < tan b2\\<rbrakk> \\<Longrightarrow> P ?y", "show \"eventually P (at_right (tan a))\""], ["proof (prove)\nusing this:\n  tan a < tan b2\n  \\<lbrakk>tan a < ?y; ?y < tan b2\\<rbrakk> \\<Longrightarrow> P ?y\n\ngoal (1 subgoal):\n 1. eventually P (at_right (tan a))", "unfolding eventually_at_right"], ["proof (prove)\nusing this:\n  tan a < tan b2\n  \\<lbrakk>tan a < ?y; ?y < tan b2\\<rbrakk> \\<Longrightarrow> P ?y\n\ngoal (1 subgoal):\n 1. \\<exists>b>tan a. \\<forall>y>tan a. y < b \\<longrightarrow> P y", "by (metis eventually_at_right_field)"], ["proof (state)\nthis:\n  eventually P (at_right (tan a))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  eventually ?P (filtermap tan (at_right a)) \\<Longrightarrow>\n  eventually ?P (at_right (tan a))\n\ngoal (1 subgoal):\n 1. filtermap tan (at_right a) = at_right (tan a)", "moreover"], ["proof (state)\nthis:\n  eventually ?P (filtermap tan (at_right a)) \\<Longrightarrow>\n  eventually ?P (at_right (tan a))\n\ngoal (1 subgoal):\n 1. filtermap tan (at_right a) = at_right (tan a)", "have \"eventually P (filtermap tan (at_right a))\" \n    when \"eventually P (at_right (tan a))\" for P"], ["proof (prove)\ngoal (1 subgoal):\n 1. eventually P (filtermap tan (at_right a))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. eventually P (filtermap tan (at_right a))", "obtain b1 where \"b1>tan a\" and b1_imp:\"\\<forall>y>tan a. y < b1 \\<longrightarrow> P y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>b1.\n        \\<lbrakk>tan a < b1;\n         \\<forall>y>tan a. y < b1 \\<longrightarrow> P y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>eventually P (at_right (tan a))\\<close>"], ["proof (prove)\nusing this:\n  eventually P (at_right (tan a))\n\ngoal (1 subgoal):\n 1. (\\<And>b1.\n        \\<lbrakk>tan a < b1;\n         \\<forall>y>tan a. y < b1 \\<longrightarrow> P y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding eventually_at_right"], ["proof (prove)\nusing this:\n  \\<exists>b>tan a. \\<forall>y>tan a. y < b \\<longrightarrow> P y\n\ngoal (1 subgoal):\n 1. (\\<And>b1.\n        \\<lbrakk>tan a < b1;\n         \\<forall>y>tan a. y < b1 \\<longrightarrow> P y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis eventually_at_right_field)"], ["proof (state)\nthis:\n  tan a < b1\n  \\<forall>y>tan a. y < b1 \\<longrightarrow> P y\n\ngoal (1 subgoal):\n 1. eventually P (filtermap tan (at_right a))", "define b2 where \"b2=arctan b1 + k*pi\""], ["proof (state)\nthis:\n  b2 = arctan b1 + real_of_int k * pi\n\ngoal (1 subgoal):\n 1. eventually P (filtermap tan (at_right a))", "have \"a1 < arctan b1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a1 < arctan b1", "by (metis \\<open>- pi / 2 < a1\\<close> \\<open>a1 < pi / 2\\<close> \\<open>tan a < b1\\<close> aa1 add.commute arctan_less_iff \n            arctan_tan divide_minus_left tan_periodic_int)"], ["proof (state)\nthis:\n  a1 < arctan b1\n\ngoal (1 subgoal):\n 1. eventually P (filtermap tan (at_right a))", "then"], ["proof (chain)\npicking this:\n  a1 < arctan b1", "have \"b2>a\""], ["proof (prove)\nusing this:\n  a1 < arctan b1\n\ngoal (1 subgoal):\n 1. a < b2", "unfolding aa1 b2_def"], ["proof (prove)\nusing this:\n  a1 < arctan b1\n\ngoal (1 subgoal):\n 1. real_of_int k * pi + a1 < arctan b1 + real_of_int k * pi", "by auto"], ["proof (state)\nthis:\n  a < b2\n\ngoal (1 subgoal):\n 1. eventually P (filtermap tan (at_right a))", "moreover"], ["proof (state)\nthis:\n  a < b2\n\ngoal (1 subgoal):\n 1. eventually P (filtermap tan (at_right a))", "have \"P (tan y)\" when \"y>a\" \"y < b2\" for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. P (tan y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P (tan y)", "define y1 where \"y1 = y - k*pi\""], ["proof (state)\nthis:\n  y1 = y - real_of_int k * pi\n\ngoal (1 subgoal):\n 1. P (tan y)", "have \"a1 < y1\" \"y1 < arctan b1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a1 < y1 &&& y1 < arctan b1", "unfolding y1_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. a1 < y - real_of_int k * pi &&& y - real_of_int k * pi < arctan b1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. a1 < y - real_of_int k * pi", "using \\<open>y>a\\<close>"], ["proof (prove)\nusing this:\n  a < y\n\ngoal (1 subgoal):\n 1. a1 < y - real_of_int k * pi", "unfolding aa1"], ["proof (prove)\nusing this:\n  real_of_int k * pi + a1 < y\n\ngoal (1 subgoal):\n 1. a1 < y - real_of_int k * pi", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. y - real_of_int k * pi < arctan b1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. y - real_of_int k * pi < arctan b1", "using b2_def that(2)"], ["proof (prove)\nusing this:\n  b2 = arctan b1 + real_of_int k * pi\n  y < b2\n\ngoal (1 subgoal):\n 1. y - real_of_int k * pi < arctan b1", "by linarith"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  a1 < y1\n  y1 < arctan b1\n\ngoal (1 subgoal):\n 1. P (tan y)", "then"], ["proof (chain)\npicking this:\n  a1 < y1\n  y1 < arctan b1", "have \"tan a1 < tan y1\" \"tan y1< b1\""], ["proof (prove)\nusing this:\n  a1 < y1\n  y1 < arctan b1\n\ngoal (1 subgoal):\n 1. tan a1 < tan y1 &&& tan y1 < b1", "subgoal"], ["proof (prove)\nusing this:\n  a1 < y1\n  y1 < arctan b1\n\ngoal (1 subgoal):\n 1. tan a1 < tan y1", "using \\<open>a1>-pi/2\\<close>"], ["proof (prove)\nusing this:\n  a1 < y1\n  y1 < arctan b1\n  - pi / 2 < a1\n\ngoal (1 subgoal):\n 1. tan a1 < tan y1", "apply (intro tan_monotone,simp,simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a1 < y1; y1 < arctan b1; - pi / 2 < a1\\<rbrakk>\n    \\<Longrightarrow> y1 < pi / 2", "using arctan_ubound less_trans"], ["proof (prove)\nusing this:\n  arctan ?y < pi / 2\n  \\<lbrakk>?x < ?y; ?y < ?z\\<rbrakk> \\<Longrightarrow> ?x < ?z\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a1 < y1; y1 < arctan b1; - pi / 2 < a1\\<rbrakk>\n    \\<Longrightarrow> y1 < pi / 2", "by blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. tan y1 < b1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. tan y1 < b1", "by (metis \\<open>- pi / 2 < a1\\<close> \\<open>a1 < y1\\<close> \\<open>y1 < arctan b1\\<close> arctan_less_iff arctan_tan \n              arctan_ubound divide_minus_left less_trans)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  tan a1 < tan y1\n  tan y1 < b1\n\ngoal (1 subgoal):\n 1. P (tan y)", "have \"tan y>tan a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tan a < tan y", "by (metis \\<open>tan a1 < tan y1\\<close> aa1 add.commute add_uminus_conv_diff mult.commute \n            mult_minus_right of_int_minus tan_periodic_int y1_def)"], ["proof (state)\nthis:\n  tan a < tan y\n\ngoal (1 subgoal):\n 1. P (tan y)", "moreover"], ["proof (state)\nthis:\n  tan a < tan y\n\ngoal (1 subgoal):\n 1. P (tan y)", "have \"tan y<b1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tan y < b1", "by (metis \\<open>tan y1 < b1\\<close> add_uminus_conv_diff mult.commute mult_minus_right \n            of_int_minus tan_periodic_int y1_def)"], ["proof (state)\nthis:\n  tan y < b1\n\ngoal (1 subgoal):\n 1. P (tan y)", "ultimately"], ["proof (chain)\npicking this:\n  tan a < tan y\n  tan y < b1", "show ?thesis"], ["proof (prove)\nusing this:\n  tan a < tan y\n  tan y < b1\n\ngoal (1 subgoal):\n 1. P (tan y)", "using b1_imp"], ["proof (prove)\nusing this:\n  tan a < tan y\n  tan y < b1\n  \\<forall>y>tan a. y < b1 \\<longrightarrow> P y\n\ngoal (1 subgoal):\n 1. P (tan y)", "by auto"], ["proof (state)\nthis:\n  P (tan y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>a < ?y; ?y < b2\\<rbrakk> \\<Longrightarrow> P (tan ?y)\n\ngoal (1 subgoal):\n 1. eventually P (filtermap tan (at_right a))", "ultimately"], ["proof (chain)\npicking this:\n  a < b2\n  \\<lbrakk>a < ?y; ?y < b2\\<rbrakk> \\<Longrightarrow> P (tan ?y)", "show ?thesis"], ["proof (prove)\nusing this:\n  a < b2\n  \\<lbrakk>a < ?y; ?y < b2\\<rbrakk> \\<Longrightarrow> P (tan ?y)\n\ngoal (1 subgoal):\n 1. eventually P (filtermap tan (at_right a))", "unfolding eventually_filtermap eventually_at_right"], ["proof (prove)\nusing this:\n  a < b2\n  \\<lbrakk>a < ?y; ?y < b2\\<rbrakk> \\<Longrightarrow> P (tan ?y)\n\ngoal (1 subgoal):\n 1. \\<exists>b>a. \\<forall>y>a. y < b \\<longrightarrow> P (tan y)", "by (metis eventually_at_right_field)"], ["proof (state)\nthis:\n  eventually P (filtermap tan (at_right a))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  eventually ?P (at_right (tan a)) \\<Longrightarrow>\n  eventually ?P (filtermap tan (at_right a))\n\ngoal (1 subgoal):\n 1. filtermap tan (at_right a) = at_right (tan a)", "ultimately"], ["proof (chain)\npicking this:\n  eventually ?P (filtermap tan (at_right a)) \\<Longrightarrow>\n  eventually ?P (at_right (tan a))\n  eventually ?P (at_right (tan a)) \\<Longrightarrow>\n  eventually ?P (filtermap tan (at_right a))", "show ?thesis"], ["proof (prove)\nusing this:\n  eventually ?P (filtermap tan (at_right a)) \\<Longrightarrow>\n  eventually ?P (at_right (tan a))\n  eventually ?P (at_right (tan a)) \\<Longrightarrow>\n  eventually ?P (filtermap tan (at_right a))\n\ngoal (1 subgoal):\n 1. filtermap tan (at_right a) = at_right (tan a)", "unfolding filter_eq_iff"], ["proof (prove)\nusing this:\n  eventually ?P (filtermap tan (at_right a)) \\<Longrightarrow>\n  eventually ?P (at_right (tan a))\n  eventually ?P (at_right (tan a)) \\<Longrightarrow>\n  eventually ?P (filtermap tan (at_right a))\n\ngoal (1 subgoal):\n 1. \\<forall>P.\n       eventually P (filtermap tan (at_right a)) =\n       eventually P (at_right (tan a))", "by blast"], ["proof (state)\nthis:\n  filtermap tan (at_right a) = at_right (tan a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma filtermap_tan_at_left:\n  fixes a::real\n  assumes \"cos a\\<noteq>0\"\n  shows \"filtermap tan (at_left a) = at_left (tan a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filtermap tan (at_left a) = at_left (tan a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. filtermap tan (at_left a) = at_left (tan a)", "have \"filtermap tan (at_right (- a)) = at_right (tan (- a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filtermap tan (at_right (- a)) = at_right (tan (- a))", "using filtermap_tan_at_right[of \"-a\"] assms"], ["proof (prove)\nusing this:\n  cos (- a) \\<noteq> 0 \\<Longrightarrow>\n  filtermap tan (at_right (- a)) = at_right (tan (- a))\n  cos a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. filtermap tan (at_right (- a)) = at_right (tan (- a))", "by auto"], ["proof (state)\nthis:\n  filtermap tan (at_right (- a)) = at_right (tan (- a))\n\ngoal (1 subgoal):\n 1. filtermap tan (at_left a) = at_left (tan a)", "then"], ["proof (chain)\npicking this:\n  filtermap tan (at_right (- a)) = at_right (tan (- a))", "have \"filtermap (uminus o tan) (at_left a) = filtermap uminus (at_left (tan a))\""], ["proof (prove)\nusing this:\n  filtermap tan (at_right (- a)) = at_right (tan (- a))\n\ngoal (1 subgoal):\n 1. filtermap (uminus \\<circ> tan) (at_left a) =\n    filtermap uminus (at_left (tan a))", "unfolding at_right_minus filtermap_filtermap comp_def"], ["proof (prove)\nusing this:\n  filtermap (\\<lambda>x. tan (- x)) (at_left (- (- a))) =\n  filtermap uminus (at_left (- tan (- a)))\n\ngoal (1 subgoal):\n 1. filtermap (\\<lambda>x. - tan x) (at_left a) =\n    filtermap uminus (at_left (tan a))", "by auto"], ["proof (state)\nthis:\n  filtermap (uminus \\<circ> tan) (at_left a) =\n  filtermap uminus (at_left (tan a))\n\ngoal (1 subgoal):\n 1. filtermap tan (at_left a) = at_left (tan a)", "then"], ["proof (chain)\npicking this:\n  filtermap (uminus \\<circ> tan) (at_left a) =\n  filtermap uminus (at_left (tan a))", "have \"filtermap uminus (filtermap (uminus o tan) (at_left a)) \n      = filtermap uminus (filtermap uminus (at_left (tan a)))\""], ["proof (prove)\nusing this:\n  filtermap (uminus \\<circ> tan) (at_left a) =\n  filtermap uminus (at_left (tan a))\n\ngoal (1 subgoal):\n 1. filtermap uminus (filtermap (uminus \\<circ> tan) (at_left a)) =\n    filtermap uminus (filtermap uminus (at_left (tan a)))", "by auto"], ["proof (state)\nthis:\n  filtermap uminus (filtermap (uminus \\<circ> tan) (at_left a)) =\n  filtermap uminus (filtermap uminus (at_left (tan a)))\n\ngoal (1 subgoal):\n 1. filtermap tan (at_left a) = at_left (tan a)", "then"], ["proof (chain)\npicking this:\n  filtermap uminus (filtermap (uminus \\<circ> tan) (at_left a)) =\n  filtermap uminus (filtermap uminus (at_left (tan a)))", "show ?thesis"], ["proof (prove)\nusing this:\n  filtermap uminus (filtermap (uminus \\<circ> tan) (at_left a)) =\n  filtermap uminus (filtermap uminus (at_left (tan a)))\n\ngoal (1 subgoal):\n 1. filtermap tan (at_left a) = at_left (tan a)", "unfolding filtermap_filtermap comp_def"], ["proof (prove)\nusing this:\n  filtermap (\\<lambda>x. - (- tan x)) (at_left a) =\n  filtermap (\\<lambda>x. - (- x)) (at_left (tan a))\n\ngoal (1 subgoal):\n 1. filtermap tan (at_left a) = at_left (tan a)", "by auto"], ["proof (state)\nthis:\n  filtermap tan (at_left a) = at_left (tan a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cos_zero_iff_int2:\n  fixes x::real\n  shows \"cos x = 0 \\<longleftrightarrow> (\\<exists>n::int. x = n * pi +  pi/2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cos x = 0) = (\\<exists>xa. x = real_of_int xa * pi + pi / 2)", "using sin_zero_iff_int2[of \"x-pi/2\"]"], ["proof (prove)\nusing this:\n  (sin (x - pi / 2) = 0) = (\\<exists>i. x - pi / 2 = real_of_int i * pi)\n\ngoal (1 subgoal):\n 1. (cos x = 0) = (\\<exists>xa. x = real_of_int xa * pi + pi / 2)", "unfolding sin_cos_eq"], ["proof (prove)\nusing this:\n  (cos (of_real pi / 2 - (x - pi / 2)) = 0) =\n  (\\<exists>i. x - pi / 2 = real_of_int i * pi)\n\ngoal (1 subgoal):\n 1. (cos x = 0) = (\\<exists>xa. x = real_of_int xa * pi + pi / 2)", "by (auto simp add:algebra_simps)"], ["", "lemma filtermap_tan_at_right_inf:\n  fixes a::real\n  assumes \"cos a=0\"\n  shows \"filtermap tan (at_right a) = at_bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filtermap tan (at_right a) = at_bot", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. filtermap tan (at_right a) = at_bot", "obtain k::int where ak:\"a=k*pi + pi/2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        a = real_of_int k * pi + pi / 2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using cos_zero_iff_int2 assms"], ["proof (prove)\nusing this:\n  (cos ?x = 0) = (\\<exists>x. ?x = real_of_int x * pi + pi / 2)\n  cos a = 0\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        a = real_of_int k * pi + pi / 2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a = real_of_int k * pi + pi / 2\n\ngoal (1 subgoal):\n 1. filtermap tan (at_right a) = at_bot", "have \"eventually P at_bot\" when \"eventually P (filtermap tan (at_right a))\" for P"], ["proof (prove)\ngoal (1 subgoal):\n 1. eventually P at_bot", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. eventually P at_bot", "obtain b1 where \"b1>a\" and b1_imp:\"\\<forall>y>a. y < b1 \\<longrightarrow> P (tan y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>b1.\n        \\<lbrakk>a < b1;\n         \\<forall>y>a. y < b1 \\<longrightarrow> P (tan y)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>eventually P (filtermap tan (at_right a))\\<close>"], ["proof (prove)\nusing this:\n  eventually P (filtermap tan (at_right a))\n\ngoal (1 subgoal):\n 1. (\\<And>b1.\n        \\<lbrakk>a < b1;\n         \\<forall>y>a. y < b1 \\<longrightarrow> P (tan y)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding eventually_filtermap eventually_at_right"], ["proof (prove)\nusing this:\n  \\<exists>b>a. \\<forall>y>a. y < b \\<longrightarrow> P (tan y)\n\ngoal (1 subgoal):\n 1. (\\<And>b1.\n        \\<lbrakk>a < b1;\n         \\<forall>y>a. y < b1 \\<longrightarrow> P (tan y)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis eventually_at_right_field)"], ["proof (state)\nthis:\n  a < b1\n  \\<forall>y>a. y < b1 \\<longrightarrow> P (tan y)\n\ngoal (1 subgoal):\n 1. eventually P at_bot", "define b2 where \"b2=min (k*pi+pi) b1\""], ["proof (state)\nthis:\n  b2 = min (real_of_int k * pi + pi) b1\n\ngoal (1 subgoal):\n 1. eventually P at_bot", "have \"P y\" when \"y<tan b2\" for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. P y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P y", "define y1 where \"y1=(k+1)*pi+arctan y\""], ["proof (state)\nthis:\n  y1 = real_of_int (k + 1) * pi + arctan y\n\ngoal (1 subgoal):\n 1. P y", "have \"a < y1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a < y1", "unfolding ak y1_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int k * pi + pi / 2 < real_of_int (k + 1) * pi + arctan y", "using arctan_lbound[of y]"], ["proof (prove)\nusing this:\n  - (pi / 2) < arctan y\n\ngoal (1 subgoal):\n 1. real_of_int k * pi + pi / 2 < real_of_int (k + 1) * pi + arctan y", "by (auto simp add:field_simps)"], ["proof (state)\nthis:\n  a < y1\n\ngoal (1 subgoal):\n 1. P y", "moreover"], ["proof (state)\nthis:\n  a < y1\n\ngoal (1 subgoal):\n 1. P y", "have \"y1 < b2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y1 < b2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. y1 < b2", "define b3 where \"b3=b2-(k+1) * pi\""], ["proof (state)\nthis:\n  b3 = b2 - real_of_int (k + 1) * pi\n\ngoal (1 subgoal):\n 1. y1 < b2", "have \"-pi/2 < b3\" \"b3<pi/2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - pi / 2 < b3 &&& b3 < pi / 2", "using \\<open>b1>a\\<close>"], ["proof (prove)\nusing this:\n  a < b1\n\ngoal (1 subgoal):\n 1. - pi / 2 < b3 &&& b3 < pi / 2", "unfolding b3_def b2_def ak"], ["proof (prove)\nusing this:\n  real_of_int k * pi + pi / 2 < b1\n\ngoal (1 subgoal):\n 1. - pi / 2\n    < min (real_of_int k * pi + pi) b1 - real_of_int (k + 1) * pi &&&\n    min (real_of_int k * pi + pi) b1 - real_of_int (k + 1) * pi < pi / 2", "by (auto simp add:field_simps min_mult_distrib_left intro!:min.strict_coboundedI1)"], ["proof (state)\nthis:\n  - pi / 2 < b3\n  b3 < pi / 2\n\ngoal (1 subgoal):\n 1. y1 < b2", "then"], ["proof (chain)\npicking this:\n  - pi / 2 < b3\n  b3 < pi / 2", "have \"arctan (tan b3) = b3\""], ["proof (prove)\nusing this:\n  - pi / 2 < b3\n  b3 < pi / 2\n\ngoal (1 subgoal):\n 1. arctan (tan b3) = b3", "by (simp add: arctan_tan)"], ["proof (state)\nthis:\n  arctan (tan b3) = b3\n\ngoal (1 subgoal):\n 1. y1 < b2", "then"], ["proof (chain)\npicking this:\n  arctan (tan b3) = b3", "have \"arctan (tan b2) = b3\""], ["proof (prove)\nusing this:\n  arctan (tan b3) = b3\n\ngoal (1 subgoal):\n 1. arctan (tan b2) = b3", "unfolding b3_def"], ["proof (prove)\nusing this:\n  arctan (tan (b2 - real_of_int (k + 1) * pi)) =\n  b2 - real_of_int (k + 1) * pi\n\ngoal (1 subgoal):\n 1. arctan (tan b2) = b2 - real_of_int (k + 1) * pi", "by (metis diff_eq_eq tan_periodic_int)"], ["proof (state)\nthis:\n  arctan (tan b2) = b3\n\ngoal (1 subgoal):\n 1. y1 < b2", "then"], ["proof (chain)\npicking this:\n  arctan (tan b2) = b3", "have \"arctan y < b3\""], ["proof (prove)\nusing this:\n  arctan (tan b2) = b3\n\ngoal (1 subgoal):\n 1. arctan y < b3", "using arctan_monotone[OF \\<open>y<tan b2\\<close>]"], ["proof (prove)\nusing this:\n  arctan (tan b2) = b3\n  arctan y < arctan (tan b2)\n\ngoal (1 subgoal):\n 1. arctan y < b3", "by simp"], ["proof (state)\nthis:\n  arctan y < b3\n\ngoal (1 subgoal):\n 1. y1 < b2", "then"], ["proof (chain)\npicking this:\n  arctan y < b3", "show ?thesis"], ["proof (prove)\nusing this:\n  arctan y < b3\n\ngoal (1 subgoal):\n 1. y1 < b2", "unfolding y1_def b3_def"], ["proof (prove)\nusing this:\n  arctan y < b2 - real_of_int (k + 1) * pi\n\ngoal (1 subgoal):\n 1. real_of_int (k + 1) * pi + arctan y < b2", "by auto"], ["proof (state)\nthis:\n  y1 < b2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  y1 < b2\n\ngoal (1 subgoal):\n 1. P y", "then"], ["proof (chain)\npicking this:\n  y1 < b2", "have \"y1<b1\""], ["proof (prove)\nusing this:\n  y1 < b2\n\ngoal (1 subgoal):\n 1. y1 < b1", "unfolding b2_def"], ["proof (prove)\nusing this:\n  y1 < min (real_of_int k * pi + pi) b1\n\ngoal (1 subgoal):\n 1. y1 < b1", "by auto"], ["proof (state)\nthis:\n  y1 < b1\n\ngoal (1 subgoal):\n 1. P y", "ultimately"], ["proof (chain)\npicking this:\n  a < y1\n  y1 < b1", "have \" P (tan y1)\""], ["proof (prove)\nusing this:\n  a < y1\n  y1 < b1\n\ngoal (1 subgoal):\n 1. P (tan y1)", "using b1_imp[rule_format,of y1,simplified]"], ["proof (prove)\nusing this:\n  a < y1\n  y1 < b1\n  \\<lbrakk>a < y1; y1 < b1\\<rbrakk> \\<Longrightarrow> P (tan y1)\n\ngoal (1 subgoal):\n 1. P (tan y1)", "by auto"], ["proof (state)\nthis:\n  P (tan y1)\n\ngoal (1 subgoal):\n 1. P y", "then"], ["proof (chain)\npicking this:\n  P (tan y1)", "show ?thesis"], ["proof (prove)\nusing this:\n  P (tan y1)\n\ngoal (1 subgoal):\n 1. P y", "unfolding y1_def"], ["proof (prove)\nusing this:\n  P (tan (real_of_int (k + 1) * pi + arctan y))\n\ngoal (1 subgoal):\n 1. P y", "by (metis add.commute arctan tan_periodic_int)"], ["proof (state)\nthis:\n  P y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?y < tan b2 \\<Longrightarrow> P ?y\n\ngoal (1 subgoal):\n 1. eventually P at_bot", "then"], ["proof (chain)\npicking this:\n  ?y < tan b2 \\<Longrightarrow> P ?y", "show ?thesis"], ["proof (prove)\nusing this:\n  ?y < tan b2 \\<Longrightarrow> P ?y\n\ngoal (1 subgoal):\n 1. eventually P at_bot", "unfolding eventually_at_bot_dense"], ["proof (prove)\nusing this:\n  ?y < tan b2 \\<Longrightarrow> P ?y\n\ngoal (1 subgoal):\n 1. \\<exists>N. \\<forall>n<N. P n", "by auto"], ["proof (state)\nthis:\n  eventually P at_bot\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  eventually ?P (filtermap tan (at_right a)) \\<Longrightarrow>\n  eventually ?P at_bot\n\ngoal (1 subgoal):\n 1. filtermap tan (at_right a) = at_bot", "moreover"], ["proof (state)\nthis:\n  eventually ?P (filtermap tan (at_right a)) \\<Longrightarrow>\n  eventually ?P at_bot\n\ngoal (1 subgoal):\n 1. filtermap tan (at_right a) = at_bot", "have \"eventually P (filtermap tan (at_right a))\" when \"eventually P at_bot\" for P"], ["proof (prove)\ngoal (1 subgoal):\n 1. eventually P (filtermap tan (at_right a))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. eventually P (filtermap tan (at_right a))", "obtain b1 where b1_imp:\"\\<forall>n<b1. P n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>b1.\n        \\<forall>n<b1. P n \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>eventually P at_bot\\<close>"], ["proof (prove)\nusing this:\n  eventually P at_bot\n\ngoal (1 subgoal):\n 1. (\\<And>b1.\n        \\<forall>n<b1. P n \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding eventually_at_bot_dense"], ["proof (prove)\nusing this:\n  \\<exists>N. \\<forall>n<N. P n\n\ngoal (1 subgoal):\n 1. (\\<And>b1.\n        \\<forall>n<b1. P n \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<forall>n<b1. P n\n\ngoal (1 subgoal):\n 1. eventually P (filtermap tan (at_right a))", "define b2 where \"b2=arctan b1 + (k+1)*pi\""], ["proof (state)\nthis:\n  b2 = arctan b1 + real_of_int (k + 1) * pi\n\ngoal (1 subgoal):\n 1. eventually P (filtermap tan (at_right a))", "have \"b2>a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a < b2", "unfolding ak b2_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int k * pi + pi / 2 < arctan b1 + real_of_int (k + 1) * pi", "using arctan_lbound[of b1]"], ["proof (prove)\nusing this:\n  - (pi / 2) < arctan b1\n\ngoal (1 subgoal):\n 1. real_of_int k * pi + pi / 2 < arctan b1 + real_of_int (k + 1) * pi", "by (auto simp add:algebra_simps)"], ["proof (state)\nthis:\n  a < b2\n\ngoal (1 subgoal):\n 1. eventually P (filtermap tan (at_right a))", "moreover"], ["proof (state)\nthis:\n  a < b2\n\ngoal (1 subgoal):\n 1. eventually P (filtermap tan (at_right a))", "have \"P (tan y)\" when \"a < y\" \" y < b2 \" for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. P (tan y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P (tan y)", "define y1 where \"y1=y-(k+1)*pi\""], ["proof (state)\nthis:\n  y1 = y - real_of_int (k + 1) * pi\n\ngoal (1 subgoal):\n 1. P (tan y)", "have \"tan y1 < tan (arctan b1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tan y1 < tan (arctan b1)", "apply (rule tan_monotone)"], ["proof (prove)\ngoal (3 subgoals):\n 1. - (pi / 2) < y1\n 2. y1 < arctan b1\n 3. arctan b1 < pi / 2", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. - (pi / 2) < y1", "using \\<open>a<y\\<close>"], ["proof (prove)\nusing this:\n  a < y\n\ngoal (1 subgoal):\n 1. - (pi / 2) < y1", "unfolding y1_def ak"], ["proof (prove)\nusing this:\n  real_of_int k * pi + pi / 2 < y\n\ngoal (1 subgoal):\n 1. - (pi / 2) < y - real_of_int (k + 1) * pi", "by (auto simp add:algebra_simps)"], ["proof (prove)\ngoal (2 subgoals):\n 1. y1 < arctan b1\n 2. arctan b1 < pi / 2", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. y1 < arctan b1", "using \\<open>y < b2\\<close>"], ["proof (prove)\nusing this:\n  y < b2\n\ngoal (1 subgoal):\n 1. y1 < arctan b1", "unfolding y1_def b2_def"], ["proof (prove)\nusing this:\n  y < arctan b1 + real_of_int (k + 1) * pi\n\ngoal (1 subgoal):\n 1. y - real_of_int (k + 1) * pi < arctan b1", "by (auto simp add:algebra_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. arctan b1 < pi / 2", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. arctan b1 < pi / 2", "using arctan_ubound"], ["proof (prove)\nusing this:\n  arctan ?y < pi / 2\n\ngoal (1 subgoal):\n 1. arctan b1 < pi / 2", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  tan y1 < tan (arctan b1)\n\ngoal (1 subgoal):\n 1. P (tan y)", "then"], ["proof (chain)\npicking this:\n  tan y1 < tan (arctan b1)", "have \"tan y1<b1\""], ["proof (prove)\nusing this:\n  tan y1 < tan (arctan b1)\n\ngoal (1 subgoal):\n 1. tan y1 < b1", "by (simp add: arctan)"], ["proof (state)\nthis:\n  tan y1 < b1\n\ngoal (1 subgoal):\n 1. P (tan y)", "then"], ["proof (chain)\npicking this:\n  tan y1 < b1", "have \"tan y < b1\""], ["proof (prove)\nusing this:\n  tan y1 < b1\n\ngoal (1 subgoal):\n 1. tan y < b1", "unfolding y1_def"], ["proof (prove)\nusing this:\n  tan (y - real_of_int (k + 1) * pi) < b1\n\ngoal (1 subgoal):\n 1. tan y < b1", "by (metis diff_eq_eq tan_periodic_int)"], ["proof (state)\nthis:\n  tan y < b1\n\ngoal (1 subgoal):\n 1. P (tan y)", "then"], ["proof (chain)\npicking this:\n  tan y < b1", "show ?thesis"], ["proof (prove)\nusing this:\n  tan y < b1\n\ngoal (1 subgoal):\n 1. P (tan y)", "using b1_imp"], ["proof (prove)\nusing this:\n  tan y < b1\n  \\<forall>n<b1. P n\n\ngoal (1 subgoal):\n 1. P (tan y)", "by auto"], ["proof (state)\nthis:\n  P (tan y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>a < ?y; ?y < b2\\<rbrakk> \\<Longrightarrow> P (tan ?y)\n\ngoal (1 subgoal):\n 1. eventually P (filtermap tan (at_right a))", "ultimately"], ["proof (chain)\npicking this:\n  a < b2\n  \\<lbrakk>a < ?y; ?y < b2\\<rbrakk> \\<Longrightarrow> P (tan ?y)", "show \"eventually P (filtermap tan (at_right a))\""], ["proof (prove)\nusing this:\n  a < b2\n  \\<lbrakk>a < ?y; ?y < b2\\<rbrakk> \\<Longrightarrow> P (tan ?y)\n\ngoal (1 subgoal):\n 1. eventually P (filtermap tan (at_right a))", "unfolding eventually_filtermap eventually_at_right"], ["proof (prove)\nusing this:\n  a < b2\n  \\<lbrakk>a < ?y; ?y < b2\\<rbrakk> \\<Longrightarrow> P (tan ?y)\n\ngoal (1 subgoal):\n 1. \\<exists>b>a. \\<forall>y>a. y < b \\<longrightarrow> P (tan y)", "by (metis eventually_at_right_field)"], ["proof (state)\nthis:\n  eventually P (filtermap tan (at_right a))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  eventually ?P at_bot \\<Longrightarrow>\n  eventually ?P (filtermap tan (at_right a))\n\ngoal (1 subgoal):\n 1. filtermap tan (at_right a) = at_bot", "ultimately"], ["proof (chain)\npicking this:\n  eventually ?P (filtermap tan (at_right a)) \\<Longrightarrow>\n  eventually ?P at_bot\n  eventually ?P at_bot \\<Longrightarrow>\n  eventually ?P (filtermap tan (at_right a))", "show ?thesis"], ["proof (prove)\nusing this:\n  eventually ?P (filtermap tan (at_right a)) \\<Longrightarrow>\n  eventually ?P at_bot\n  eventually ?P at_bot \\<Longrightarrow>\n  eventually ?P (filtermap tan (at_right a))\n\ngoal (1 subgoal):\n 1. filtermap tan (at_right a) = at_bot", "unfolding filter_eq_iff"], ["proof (prove)\nusing this:\n  eventually ?P (filtermap tan (at_right a)) \\<Longrightarrow>\n  eventually ?P at_bot\n  eventually ?P at_bot \\<Longrightarrow>\n  eventually ?P (filtermap tan (at_right a))\n\ngoal (1 subgoal):\n 1. \\<forall>P.\n       eventually P (filtermap tan (at_right a)) = eventually P at_bot", "by auto"], ["proof (state)\nthis:\n  filtermap tan (at_right a) = at_bot\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma filtermap_tan_at_left_inf:\n  fixes a::real\n  assumes \"cos a=0\"\n  shows \"filtermap tan (at_left a) = at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filtermap tan (at_left a) = at_top", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. filtermap tan (at_left a) = at_top", "have \"filtermap tan (at_right (- a)) = at_bot\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filtermap tan (at_right (- a)) = at_bot", "using filtermap_tan_at_right_inf[of \"-a\"] assms"], ["proof (prove)\nusing this:\n  cos (- a) = 0 \\<Longrightarrow> filtermap tan (at_right (- a)) = at_bot\n  cos a = 0\n\ngoal (1 subgoal):\n 1. filtermap tan (at_right (- a)) = at_bot", "by auto"], ["proof (state)\nthis:\n  filtermap tan (at_right (- a)) = at_bot\n\ngoal (1 subgoal):\n 1. filtermap tan (at_left a) = at_top", "then"], ["proof (chain)\npicking this:\n  filtermap tan (at_right (- a)) = at_bot", "have \"filtermap (uminus o tan) (at_left a) = at_bot\""], ["proof (prove)\nusing this:\n  filtermap tan (at_right (- a)) = at_bot\n\ngoal (1 subgoal):\n 1. filtermap (uminus \\<circ> tan) (at_left a) = at_bot", "unfolding at_right_minus filtermap_filtermap comp_def"], ["proof (prove)\nusing this:\n  filtermap (\\<lambda>x. tan (- x)) (at_left (- (- a))) = at_bot\n\ngoal (1 subgoal):\n 1. filtermap (\\<lambda>x. - tan x) (at_left a) = at_bot", "by auto"], ["proof (state)\nthis:\n  filtermap (uminus \\<circ> tan) (at_left a) = at_bot\n\ngoal (1 subgoal):\n 1. filtermap tan (at_left a) = at_top", "then"], ["proof (chain)\npicking this:\n  filtermap (uminus \\<circ> tan) (at_left a) = at_bot", "have \"filtermap uminus (filtermap (uminus o tan) (at_left a)) = filtermap uminus at_bot\""], ["proof (prove)\nusing this:\n  filtermap (uminus \\<circ> tan) (at_left a) = at_bot\n\ngoal (1 subgoal):\n 1. filtermap uminus (filtermap (uminus \\<circ> tan) (at_left a)) =\n    filtermap uminus at_bot", "by auto"], ["proof (state)\nthis:\n  filtermap uminus (filtermap (uminus \\<circ> tan) (at_left a)) =\n  filtermap uminus at_bot\n\ngoal (1 subgoal):\n 1. filtermap tan (at_left a) = at_top", "then"], ["proof (chain)\npicking this:\n  filtermap uminus (filtermap (uminus \\<circ> tan) (at_left a)) =\n  filtermap uminus at_bot", "show ?thesis"], ["proof (prove)\nusing this:\n  filtermap uminus (filtermap (uminus \\<circ> tan) (at_left a)) =\n  filtermap uminus at_bot\n\ngoal (1 subgoal):\n 1. filtermap tan (at_left a) = at_top", "unfolding filtermap_filtermap comp_def"], ["proof (prove)\nusing this:\n  filtermap (\\<lambda>x. - (- tan x)) (at_left a) = filtermap uminus at_bot\n\ngoal (1 subgoal):\n 1. filtermap tan (at_left a) = at_top", "using at_top_mirror[where 'a=real]"], ["proof (prove)\nusing this:\n  filtermap (\\<lambda>x. - (- tan x)) (at_left a) = filtermap uminus at_bot\n  at_top = filtermap uminus at_bot\n\ngoal (1 subgoal):\n 1. filtermap tan (at_left a) = at_top", "by auto"], ["proof (state)\nthis:\n  filtermap tan (at_left a) = at_top\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Periodic set\\<close>"], ["", "(*Devised to characterize roots of Trigonometric equations, which are usually uniformly discrete.*)"], ["", "definition periodic_set:: \"real set \\<Rightarrow> real \\<Rightarrow> bool\" where\n  \"periodic_set S \\<delta> \\<longleftrightarrow> (\\<exists>B. finite B \\<and> (\\<forall>x\\<in>S. \\<exists>b\\<in>B. \\<exists>k::int. x =b + k * \\<delta> ))\""], ["", "lemma periodic_set_multiple:\n  assumes \"k\\<noteq>0\"\n  shows \"periodic_set S \\<delta> \\<longleftrightarrow> periodic_set S (of_int k*\\<delta>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodic_set S \\<delta> = periodic_set S (real_of_int k * \\<delta>)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. periodic_set S \\<delta> \\<Longrightarrow>\n    periodic_set S (real_of_int k * \\<delta>)\n 2. periodic_set S (real_of_int k * \\<delta>) \\<Longrightarrow>\n    periodic_set S \\<delta>", "assume asm:\"periodic_set S \\<delta> \""], ["proof (state)\nthis:\n  periodic_set S \\<delta>\n\ngoal (2 subgoals):\n 1. periodic_set S \\<delta> \\<Longrightarrow>\n    periodic_set S (real_of_int k * \\<delta>)\n 2. periodic_set S (real_of_int k * \\<delta>) \\<Longrightarrow>\n    periodic_set S \\<delta>", "then"], ["proof (chain)\npicking this:\n  periodic_set S \\<delta>", "obtain B1 where \"finite B1\" and B1_def:\"\\<forall>x\\<in>S. \\<exists>b\\<in>B1. (\\<exists>k::int. x = b + k * \\<delta>)\""], ["proof (prove)\nusing this:\n  periodic_set S \\<delta>\n\ngoal (1 subgoal):\n 1. (\\<And>B1.\n        \\<lbrakk>finite B1;\n         \\<forall>x\\<in>S.\n            \\<exists>b\\<in>B1.\n               \\<exists>xa. x = b + real_of_int xa * \\<delta>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding periodic_set_def"], ["proof (prove)\nusing this:\n  \\<exists>B.\n     finite B \\<and>\n     (\\<forall>x\\<in>S.\n         \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * \\<delta>)\n\ngoal (1 subgoal):\n 1. (\\<And>B1.\n        \\<lbrakk>finite B1;\n         \\<forall>x\\<in>S.\n            \\<exists>b\\<in>B1.\n               \\<exists>xa. x = b + real_of_int xa * \\<delta>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  finite B1\n  \\<forall>x\\<in>S.\n     \\<exists>b\\<in>B1. \\<exists>xa. x = b + real_of_int xa * \\<delta>\n\ngoal (2 subgoals):\n 1. periodic_set S \\<delta> \\<Longrightarrow>\n    periodic_set S (real_of_int k * \\<delta>)\n 2. periodic_set S (real_of_int k * \\<delta>) \\<Longrightarrow>\n    periodic_set S \\<delta>", "define B where \"B = B1 \\<union> {b+i*\\<delta> | b i. b\\<in>B1 \\<and> i\\<in>{0..<\\<bar>k\\<bar>}}\""], ["proof (state)\nthis:\n  B =\n  B1 \\<union>\n  {b + real_of_int i * \\<delta> |b i.\n   b \\<in> B1 \\<and> i \\<in> {0..<\\<bar>k\\<bar>}}\n\ngoal (2 subgoals):\n 1. periodic_set S \\<delta> \\<Longrightarrow>\n    periodic_set S (real_of_int k * \\<delta>)\n 2. periodic_set S (real_of_int k * \\<delta>) \\<Longrightarrow>\n    periodic_set S \\<delta>", "have \"\\<exists>b\\<in>B. \\<exists>k'. x = b + real_of_int k' * (real_of_int k * \\<delta>)\" when \"x\\<in>S\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B.\n       \\<exists>k'. x = b + real_of_int k' * (real_of_int k * \\<delta>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B.\n       \\<exists>k'. x = b + real_of_int k' * (real_of_int k * \\<delta>)", "obtain b1 and k1::int where \"b1\\<in>B1\" and x_\\<delta>:\"x = b1 + k1 * \\<delta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>b1 k1.\n        \\<lbrakk>b1 \\<in> B1; x = b1 + real_of_int k1 * \\<delta>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using B1_def[rule_format, OF \\<open>x\\<in>S\\<close>]"], ["proof (prove)\nusing this:\n  \\<exists>b\\<in>B1. \\<exists>xa. x = b + real_of_int xa * \\<delta>\n\ngoal (1 subgoal):\n 1. (\\<And>b1 k1.\n        \\<lbrakk>b1 \\<in> B1; x = b1 + real_of_int k1 * \\<delta>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  b1 \\<in> B1\n  x = b1 + real_of_int k1 * \\<delta>\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B.\n       \\<exists>k'. x = b + real_of_int k' * (real_of_int k * \\<delta>)", "define r d where \"r= k1 mod \\<bar>k\\<bar>\" and \"d = k1 div \\<bar>k\\<bar>\""], ["proof (state)\nthis:\n  r = k1 mod \\<bar>k\\<bar>\n  d = k1 div \\<bar>k\\<bar>\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B.\n       \\<exists>k'. x = b + real_of_int k' * (real_of_int k * \\<delta>)", "define b kk where \"b=b1+r*\\<delta>\" and \"kk = (if k>0 then d else -d)\""], ["proof (state)\nthis:\n  b = b1 + real_of_int r * \\<delta>\n  kk = (if 0 < k then d else - d)\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B.\n       \\<exists>k'. x = b + real_of_int k' * (real_of_int k * \\<delta>)", "have \"x = b1 + (r+\\<bar>k\\<bar>*d)*\\<delta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = b1 + real_of_int (r + \\<bar>k\\<bar> * d) * \\<delta>", "using x_\\<delta>"], ["proof (prove)\nusing this:\n  x = b1 + real_of_int k1 * \\<delta>\n\ngoal (1 subgoal):\n 1. x = b1 + real_of_int (r + \\<bar>k\\<bar> * d) * \\<delta>", "unfolding r_def d_def"], ["proof (prove)\nusing this:\n  x = b1 + real_of_int k1 * \\<delta>\n\ngoal (1 subgoal):\n 1. x =\n    b1 +\n    real_of_int\n     (k1 mod \\<bar>k\\<bar> + \\<bar>k\\<bar> * (k1 div \\<bar>k\\<bar>)) *\n    \\<delta>", "by auto"], ["proof (state)\nthis:\n  x = b1 + real_of_int (r + \\<bar>k\\<bar> * d) * \\<delta>\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B.\n       \\<exists>k'. x = b + real_of_int k' * (real_of_int k * \\<delta>)", "then"], ["proof (chain)\npicking this:\n  x = b1 + real_of_int (r + \\<bar>k\\<bar> * d) * \\<delta>", "have \"x = b + kk*(k*\\<delta>)\""], ["proof (prove)\nusing this:\n  x = b1 + real_of_int (r + \\<bar>k\\<bar> * d) * \\<delta>\n\ngoal (1 subgoal):\n 1. x = b + real_of_int kk * (real_of_int k * \\<delta>)", "unfolding b_def kk_def"], ["proof (prove)\nusing this:\n  x = b1 + real_of_int (r + \\<bar>k\\<bar> * d) * \\<delta>\n\ngoal (1 subgoal):\n 1. x =\n    b1 + real_of_int r * \\<delta> +\n    real_of_int (if 0 < k then d else - d) * (real_of_int k * \\<delta>)", "using \\<open>k\\<noteq>0\\<close>"], ["proof (prove)\nusing this:\n  x = b1 + real_of_int (r + \\<bar>k\\<bar> * d) * \\<delta>\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. x =\n    b1 + real_of_int r * \\<delta> +\n    real_of_int (if 0 < k then d else - d) * (real_of_int k * \\<delta>)", "by (auto simp add:algebra_simps)"], ["proof (state)\nthis:\n  x = b + real_of_int kk * (real_of_int k * \\<delta>)\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B.\n       \\<exists>k'. x = b + real_of_int k' * (real_of_int k * \\<delta>)", "moreover"], ["proof (state)\nthis:\n  x = b + real_of_int kk * (real_of_int k * \\<delta>)\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B.\n       \\<exists>k'. x = b + real_of_int k' * (real_of_int k * \\<delta>)", "have \"b\\<in>B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<in> B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<in> B", "have \"r \\<in> {0..<\\<bar>k\\<bar>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> {0..<\\<bar>k\\<bar>}", "unfolding r_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. k1 mod \\<bar>k\\<bar> \\<in> {0..<\\<bar>k\\<bar>}", "by (simp add: \\<open>k\\<noteq>0\\<close>)"], ["proof (state)\nthis:\n  r \\<in> {0..<\\<bar>k\\<bar>}\n\ngoal (1 subgoal):\n 1. b \\<in> B", "then"], ["proof (chain)\npicking this:\n  r \\<in> {0..<\\<bar>k\\<bar>}", "show ?thesis"], ["proof (prove)\nusing this:\n  r \\<in> {0..<\\<bar>k\\<bar>}\n\ngoal (1 subgoal):\n 1. b \\<in> B", "unfolding b_def B_def"], ["proof (prove)\nusing this:\n  r \\<in> {0..<\\<bar>k\\<bar>}\n\ngoal (1 subgoal):\n 1. b1 + real_of_int r * \\<delta>\n    \\<in> B1 \\<union>\n          {b + real_of_int i * \\<delta> |b i.\n           b \\<in> B1 \\<and> i \\<in> {0..<\\<bar>k\\<bar>}}", "using \\<open>b1\\<in>B1\\<close>"], ["proof (prove)\nusing this:\n  r \\<in> {0..<\\<bar>k\\<bar>}\n  b1 \\<in> B1\n\ngoal (1 subgoal):\n 1. b1 + real_of_int r * \\<delta>\n    \\<in> B1 \\<union>\n          {b + real_of_int i * \\<delta> |b i.\n           b \\<in> B1 \\<and> i \\<in> {0..<\\<bar>k\\<bar>}}", "by blast"], ["proof (state)\nthis:\n  b \\<in> B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  b \\<in> B\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B.\n       \\<exists>k'. x = b + real_of_int k' * (real_of_int k * \\<delta>)", "ultimately"], ["proof (chain)\npicking this:\n  x = b + real_of_int kk * (real_of_int k * \\<delta>)\n  b \\<in> B", "show ?thesis"], ["proof (prove)\nusing this:\n  x = b + real_of_int kk * (real_of_int k * \\<delta>)\n  b \\<in> B\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B.\n       \\<exists>k'. x = b + real_of_int k' * (real_of_int k * \\<delta>)", "by auto"], ["proof (state)\nthis:\n  \\<exists>b\\<in>B.\n     \\<exists>k'. x = b + real_of_int k' * (real_of_int k * \\<delta>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x \\<in> S \\<Longrightarrow>\n  \\<exists>b\\<in>B.\n     \\<exists>k'. ?x = b + real_of_int k' * (real_of_int k * \\<delta>)\n\ngoal (2 subgoals):\n 1. periodic_set S \\<delta> \\<Longrightarrow>\n    periodic_set S (real_of_int k * \\<delta>)\n 2. periodic_set S (real_of_int k * \\<delta>) \\<Longrightarrow>\n    periodic_set S \\<delta>", "moreover"], ["proof (state)\nthis:\n  ?x \\<in> S \\<Longrightarrow>\n  \\<exists>b\\<in>B.\n     \\<exists>k'. ?x = b + real_of_int k' * (real_of_int k * \\<delta>)\n\ngoal (2 subgoals):\n 1. periodic_set S \\<delta> \\<Longrightarrow>\n    periodic_set S (real_of_int k * \\<delta>)\n 2. periodic_set S (real_of_int k * \\<delta>) \\<Longrightarrow>\n    periodic_set S \\<delta>", "have \"finite B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite B", "unfolding B_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     (B1 \\<union>\n      {b + real_of_int i * \\<delta> |b i.\n       b \\<in> B1 \\<and> i \\<in> {0..<\\<bar>k\\<bar>}})", "using \\<open>finite B1\\<close>"], ["proof (prove)\nusing this:\n  finite B1\n\ngoal (1 subgoal):\n 1. finite\n     (B1 \\<union>\n      {b + real_of_int i * \\<delta> |b i.\n       b \\<in> B1 \\<and> i \\<in> {0..<\\<bar>k\\<bar>}})", "by (simp add: finite_image_set2)"], ["proof (state)\nthis:\n  finite B\n\ngoal (2 subgoals):\n 1. periodic_set S \\<delta> \\<Longrightarrow>\n    periodic_set S (real_of_int k * \\<delta>)\n 2. periodic_set S (real_of_int k * \\<delta>) \\<Longrightarrow>\n    periodic_set S \\<delta>", "ultimately"], ["proof (chain)\npicking this:\n  ?x \\<in> S \\<Longrightarrow>\n  \\<exists>b\\<in>B.\n     \\<exists>k'. ?x = b + real_of_int k' * (real_of_int k * \\<delta>)\n  finite B", "show \"periodic_set S (real_of_int k * \\<delta>)\""], ["proof (prove)\nusing this:\n  ?x \\<in> S \\<Longrightarrow>\n  \\<exists>b\\<in>B.\n     \\<exists>k'. ?x = b + real_of_int k' * (real_of_int k * \\<delta>)\n  finite B\n\ngoal (1 subgoal):\n 1. periodic_set S (real_of_int k * \\<delta>)", "unfolding periodic_set_def"], ["proof (prove)\nusing this:\n  ?x \\<in> S \\<Longrightarrow>\n  \\<exists>b\\<in>B.\n     \\<exists>k'. ?x = b + real_of_int k' * (real_of_int k * \\<delta>)\n  finite B\n\ngoal (1 subgoal):\n 1. \\<exists>B.\n       finite B \\<and>\n       (\\<forall>x\\<in>S.\n           \\<exists>b\\<in>B.\n              \\<exists>xa.\n                 x = b + real_of_int xa * (real_of_int k * \\<delta>))", "by auto"], ["proof (state)\nthis:\n  periodic_set S (real_of_int k * \\<delta>)\n\ngoal (1 subgoal):\n 1. periodic_set S (real_of_int k * \\<delta>) \\<Longrightarrow>\n    periodic_set S \\<delta>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. periodic_set S (real_of_int k * \\<delta>) \\<Longrightarrow>\n    periodic_set S \\<delta>", "assume \"periodic_set S (real_of_int k * \\<delta>)\""], ["proof (state)\nthis:\n  periodic_set S (real_of_int k * \\<delta>)\n\ngoal (1 subgoal):\n 1. periodic_set S (real_of_int k * \\<delta>) \\<Longrightarrow>\n    periodic_set S \\<delta>", "then"], ["proof (chain)\npicking this:\n  periodic_set S (real_of_int k * \\<delta>)", "show \"periodic_set S \\<delta>\""], ["proof (prove)\nusing this:\n  periodic_set S (real_of_int k * \\<delta>)\n\ngoal (1 subgoal):\n 1. periodic_set S \\<delta>", "unfolding periodic_set_def"], ["proof (prove)\nusing this:\n  \\<exists>B.\n     finite B \\<and>\n     (\\<forall>x\\<in>S.\n         \\<exists>b\\<in>B.\n            \\<exists>xa.\n               x = b + real_of_int xa * (real_of_int k * \\<delta>))\n\ngoal (1 subgoal):\n 1. \\<exists>B.\n       finite B \\<and>\n       (\\<forall>x\\<in>S.\n           \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * \\<delta>)", "by (metis mult.commute mult.left_commute of_int_mult)"], ["proof (state)\nthis:\n  periodic_set S \\<delta>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma periodic_set_empty[simp]: \"periodic_set {} \\<delta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodic_set {} \\<delta>", "unfolding periodic_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>B.\n       finite B \\<and>\n       (\\<forall>x\\<in>{}.\n           \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * \\<delta>)", "by auto"], ["", "lemma periodic_set_finite:\n  assumes \"finite S\"\n  shows \"periodic_set S \\<delta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodic_set S \\<delta>", "unfolding periodic_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>B.\n       finite B \\<and>\n       (\\<forall>x\\<in>S.\n           \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * \\<delta>)", "using assms mult.commute"], ["proof (prove)\nusing this:\n  finite S\n  ?a * ?b = ?b * ?a\n\ngoal (1 subgoal):\n 1. \\<exists>B.\n       finite B \\<and>\n       (\\<forall>x\\<in>S.\n           \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * \\<delta>)", "by force"], ["", "lemma periodic_set_subset[elim]:\n  assumes \"periodic_set S \\<delta>\" \"T \\<subseteq> S\"\n  shows \"periodic_set T \\<delta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodic_set T \\<delta>", "using assms"], ["proof (prove)\nusing this:\n  periodic_set S \\<delta>\n  T \\<subseteq> S\n\ngoal (1 subgoal):\n 1. periodic_set T \\<delta>", "unfolding periodic_set_def"], ["proof (prove)\nusing this:\n  \\<exists>B.\n     finite B \\<and>\n     (\\<forall>x\\<in>S.\n         \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * \\<delta>)\n  T \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<exists>B.\n       finite B \\<and>\n       (\\<forall>x\\<in>T.\n           \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * \\<delta>)", "by (meson subsetCE)"], ["", "lemma periodic_set_union:\n  assumes \"periodic_set S \\<delta>\" \"periodic_set T \\<delta>\"\n  shows \"periodic_set (S \\<union> T) \\<delta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodic_set (S \\<union> T) \\<delta>", "using assms"], ["proof (prove)\nusing this:\n  periodic_set S \\<delta>\n  periodic_set T \\<delta>\n\ngoal (1 subgoal):\n 1. periodic_set (S \\<union> T) \\<delta>", "unfolding periodic_set_def"], ["proof (prove)\nusing this:\n  \\<exists>B.\n     finite B \\<and>\n     (\\<forall>x\\<in>S.\n         \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * \\<delta>)\n  \\<exists>B.\n     finite B \\<and>\n     (\\<forall>x\\<in>T.\n         \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * \\<delta>)\n\ngoal (1 subgoal):\n 1. \\<exists>B.\n       finite B \\<and>\n       (\\<forall>x\\<in>S \\<union> T.\n           \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * \\<delta>)", "by (metis Un_iff infinite_Un)"], ["", "lemma periodic_imp_uniform_discrete:\n  assumes \"periodic_set S \\<delta>\"\n  shows \"uniform_discrete S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uniform_discrete S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. uniform_discrete S", "have ?thesis when \"S\\<noteq>{}\" \"\\<delta>\\<noteq>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uniform_discrete S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. uniform_discrete S", "obtain B g where \"finite B\" and g_def:\"\\<forall>x\\<in>S. g x\\<in>B \\<and> (\\<exists>k::int. x = g x + k * \\<delta>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B g.\n        \\<lbrakk>finite B;\n         \\<forall>x\\<in>S.\n            g x \\<in> B \\<and>\n            (\\<exists>xa. x = g x + real_of_int xa * \\<delta>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  periodic_set S \\<delta>\n\ngoal (1 subgoal):\n 1. (\\<And>B g.\n        \\<lbrakk>finite B;\n         \\<forall>x\\<in>S.\n            g x \\<in> B \\<and>\n            (\\<exists>xa. x = g x + real_of_int xa * \\<delta>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding periodic_set_def"], ["proof (prove)\nusing this:\n  \\<exists>B.\n     finite B \\<and>\n     (\\<forall>x\\<in>S.\n         \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * \\<delta>)\n\ngoal (1 subgoal):\n 1. (\\<And>B g.\n        \\<lbrakk>finite B;\n         \\<forall>x\\<in>S.\n            g x \\<in> B \\<and>\n            (\\<exists>xa. x = g x + real_of_int xa * \\<delta>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  finite B\n  \\<forall>x\\<in>S.\n     g x \\<in> B \\<and> (\\<exists>xa. x = g x + real_of_int xa * \\<delta>)\n\ngoal (1 subgoal):\n 1. uniform_discrete S", "define P where \"P = ((*) \\<delta>) ` Ints\""], ["proof (state)\nthis:\n  P = (*) \\<delta> ` \\<int>\n\ngoal (1 subgoal):\n 1. uniform_discrete S", "define B_diff where \"B_diff = {\\<bar>x-y\\<bar> | x y.  x\\<in>B \\<and> y\\<in>B} - P\""], ["proof (state)\nthis:\n  B_diff = {\\<bar>x - y\\<bar> |x y. x \\<in> B \\<and> y \\<in> B} - P\n\ngoal (1 subgoal):\n 1. uniform_discrete S", "have \"finite B_diff\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite B_diff", "unfolding B_diff_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite ({\\<bar>x - y\\<bar> |x y. x \\<in> B \\<and> y \\<in> B} - P)", "using \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  finite B\n\ngoal (1 subgoal):\n 1. finite ({\\<bar>x - y\\<bar> |x y. x \\<in> B \\<and> y \\<in> B} - P)", "by (simp add: finite_image_set2)"], ["proof (state)\nthis:\n  finite B_diff\n\ngoal (1 subgoal):\n 1. uniform_discrete S", "define e where \"e = (if setdist B_diff P = 0 then \\<bar>\\<delta>\\<bar> else min (setdist B_diff P) (\\<bar>\\<delta>\\<bar>))\""], ["proof (state)\nthis:\n  e =\n  (if setdist B_diff P = 0 then \\<bar>\\<delta>\\<bar>\n   else min (setdist B_diff P) \\<bar>\\<delta>\\<bar>)\n\ngoal (1 subgoal):\n 1. uniform_discrete S", "have \"e>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < e", "unfolding e_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < (if setdist B_diff P = 0 then \\<bar>\\<delta>\\<bar>\n         else min (setdist B_diff P) \\<bar>\\<delta>\\<bar>)", "using setdist_pos_le[unfolded order_class.le_less] \\<open>\\<delta>\\<noteq>0\\<close>"], ["proof (prove)\nusing this:\n  0 < setdist ?s ?t \\<or> 0 = setdist ?s ?t\n  \\<delta> \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < (if setdist B_diff P = 0 then \\<bar>\\<delta>\\<bar>\n         else min (setdist B_diff P) \\<bar>\\<delta>\\<bar>)", "by auto"], ["proof (state)\nthis:\n  0 < e\n\ngoal (1 subgoal):\n 1. uniform_discrete S", "moreover"], ["proof (state)\nthis:\n  0 < e\n\ngoal (1 subgoal):\n 1. uniform_discrete S", "have \"x=y\" when \"x\\<in>S\" \"y\\<in>S\" \"dist x y<e\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x = y", "obtain k1::int where k1:\"x = g x + k1 * \\<delta>\" and \"g x\\<in>B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k1.\n        \\<lbrakk>x = g x + real_of_int k1 * \\<delta>; g x \\<in> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using g_def \\<open>x\\<in>S\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>S.\n     g x \\<in> B \\<and> (\\<exists>xa. x = g x + real_of_int xa * \\<delta>)\n  x \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<And>k1.\n        \\<lbrakk>x = g x + real_of_int k1 * \\<delta>; g x \\<in> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x = g x + real_of_int k1 * \\<delta>\n  g x \\<in> B\n\ngoal (1 subgoal):\n 1. x = y", "obtain k2::int where k2:\"y = g y + k2 * \\<delta>\" and \"g y\\<in>B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k2.\n        \\<lbrakk>y = g y + real_of_int k2 * \\<delta>; g y \\<in> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using g_def \\<open>y\\<in>S\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>S.\n     g x \\<in> B \\<and> (\\<exists>xa. x = g x + real_of_int xa * \\<delta>)\n  y \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<And>k2.\n        \\<lbrakk>y = g y + real_of_int k2 * \\<delta>; g y \\<in> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  y = g y + real_of_int k2 * \\<delta>\n  g y \\<in> B\n\ngoal (1 subgoal):\n 1. x = y", "have ?thesis when \"\\<bar>g x - g y\\<bar> \\<in> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x = y", "obtain k::int where k:\"g x - g y = k * \\<delta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        g x - g y = real_of_int k * \\<delta> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        g x - g y = real_of_int k * \\<delta> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "obtain k' where \"k'\\<in>Ints\" and *:\"\\<bar>g x - g y\\<bar> = \\<delta> * k'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k'.\n        \\<lbrakk>k' \\<in> \\<int>;\n         \\<bar>g x - g y\\<bar> = \\<delta> * k'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>\\<bar>g x - g y\\<bar> \\<in> P\\<close>"], ["proof (prove)\nusing this:\n  \\<bar>g x - g y\\<bar> \\<in> P\n\ngoal (1 subgoal):\n 1. (\\<And>k'.\n        \\<lbrakk>k' \\<in> \\<int>;\n         \\<bar>g x - g y\\<bar> = \\<delta> * k'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding P_def image_iff"], ["proof (prove)\nusing this:\n  \\<exists>xa\\<in>\\<int>. \\<bar>g x - g y\\<bar> = \\<delta> * xa\n\ngoal (1 subgoal):\n 1. (\\<And>k'.\n        \\<lbrakk>k' \\<in> \\<int>;\n         \\<bar>g x - g y\\<bar> = \\<delta> * k'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  k' \\<in> \\<int>\n  \\<bar>g x - g y\\<bar> = \\<delta> * k'\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        g x - g y = real_of_int k * \\<delta> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  k' \\<in> \\<int>\n  \\<bar>g x - g y\\<bar> = \\<delta> * k'", "obtain k where **:\"k' = of_int k\""], ["proof (prove)\nusing this:\n  k' \\<in> \\<int>\n  \\<bar>g x - g y\\<bar> = \\<delta> * k'\n\ngoal (1 subgoal):\n 1. (\\<And>k. k' = real_of_int k \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Ints_cases"], ["proof (prove)\nusing this:\n  k' \\<in> \\<int>\n  \\<bar>g x - g y\\<bar> = \\<delta> * k'\n  \\<lbrakk>?q \\<in> \\<int>;\n   \\<And>z. ?q = of_int z \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>k. k' = real_of_int k \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  k' = real_of_int k\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        g x - g y = real_of_int k * \\<delta> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "apply (cases \"g x - g y \\<ge> 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. 0 \\<le> g x - g y \\<Longrightarrow> thesis\n 2. \\<not> 0 \\<le> g x - g y \\<Longrightarrow> thesis", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> g x - g y \\<Longrightarrow> thesis", "using that[of k] * **"], ["proof (prove)\nusing this:\n  g x - g y = real_of_int k * \\<delta> \\<Longrightarrow> thesis\n  \\<bar>g x - g y\\<bar> = \\<delta> * k'\n  k' = real_of_int k\n\ngoal (1 subgoal):\n 1. 0 \\<le> g x - g y \\<Longrightarrow> thesis", "by simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> g x - g y \\<Longrightarrow> thesis", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> g x - g y \\<Longrightarrow> thesis", "using that[of \"-k\"] * **"], ["proof (prove)\nusing this:\n  g x - g y = real_of_int (- k) * \\<delta> \\<Longrightarrow> thesis\n  \\<bar>g x - g y\\<bar> = \\<delta> * k'\n  k' = real_of_int k\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> g x - g y \\<Longrightarrow> thesis", "by (auto simp add:algebra_simps)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g x - g y = real_of_int k * \\<delta>\n\ngoal (1 subgoal):\n 1. x = y", "have \"dist x y = \\<bar>(g x - g y)+(k1-k2)*\\<delta>\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist x y = \\<bar>g x - g y + real_of_int (k1 - k2) * \\<delta>\\<bar>", "unfolding dist_real_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>x - y\\<bar> =\n    \\<bar>g x - g y + real_of_int (k1 - k2) * \\<delta>\\<bar>", "by (subst k1,subst k2,simp add:algebra_simps)"], ["proof (state)\nthis:\n  dist x y = \\<bar>g x - g y + real_of_int (k1 - k2) * \\<delta>\\<bar>\n\ngoal (1 subgoal):\n 1. x = y", "also"], ["proof (state)\nthis:\n  dist x y = \\<bar>g x - g y + real_of_int (k1 - k2) * \\<delta>\\<bar>\n\ngoal (1 subgoal):\n 1. x = y", "have \"... = \\<bar>(k+k1-k2)*\\<delta>\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>g x - g y + real_of_int (k1 - k2) * \\<delta>\\<bar> =\n    \\<bar>real_of_int (k + k1 - k2) * \\<delta>\\<bar>", "by (subst k,simp add:algebra_simps)"], ["proof (state)\nthis:\n  \\<bar>g x - g y + real_of_int (k1 - k2) * \\<delta>\\<bar> =\n  \\<bar>real_of_int (k + k1 - k2) * \\<delta>\\<bar>\n\ngoal (1 subgoal):\n 1. x = y", "also"], ["proof (state)\nthis:\n  \\<bar>g x - g y + real_of_int (k1 - k2) * \\<delta>\\<bar> =\n  \\<bar>real_of_int (k + k1 - k2) * \\<delta>\\<bar>\n\ngoal (1 subgoal):\n 1. x = y", "have \"... = \\<bar>k+k1-k2\\<bar>*\\<bar>\\<delta>\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>real_of_int (k + k1 - k2) * \\<delta>\\<bar> =\n    real_of_int \\<bar>k + k1 - k2\\<bar> * \\<bar>\\<delta>\\<bar>", "by (simp add: abs_mult)"], ["proof (state)\nthis:\n  \\<bar>real_of_int (k + k1 - k2) * \\<delta>\\<bar> =\n  real_of_int \\<bar>k + k1 - k2\\<bar> * \\<bar>\\<delta>\\<bar>\n\ngoal (1 subgoal):\n 1. x = y", "finally"], ["proof (chain)\npicking this:\n  dist x y = real_of_int \\<bar>k + k1 - k2\\<bar> * \\<bar>\\<delta>\\<bar>", "have *:\"dist x y = \\<bar>k+k1-k2\\<bar>*\\<bar>\\<delta>\\<bar>\""], ["proof (prove)\nusing this:\n  dist x y = real_of_int \\<bar>k + k1 - k2\\<bar> * \\<bar>\\<delta>\\<bar>\n\ngoal (1 subgoal):\n 1. dist x y = real_of_int \\<bar>k + k1 - k2\\<bar> * \\<bar>\\<delta>\\<bar>", "."], ["proof (state)\nthis:\n  dist x y = real_of_int \\<bar>k + k1 - k2\\<bar> * \\<bar>\\<delta>\\<bar>\n\ngoal (1 subgoal):\n 1. x = y", "then"], ["proof (chain)\npicking this:\n  dist x y = real_of_int \\<bar>k + k1 - k2\\<bar> * \\<bar>\\<delta>\\<bar>", "have \"\\<bar>k+k1-k2\\<bar>*\\<bar>\\<delta>\\<bar> < e\""], ["proof (prove)\nusing this:\n  dist x y = real_of_int \\<bar>k + k1 - k2\\<bar> * \\<bar>\\<delta>\\<bar>\n\ngoal (1 subgoal):\n 1. real_of_int \\<bar>k + k1 - k2\\<bar> * \\<bar>\\<delta>\\<bar> < e", "using \\<open>dist x y<e\\<close>"], ["proof (prove)\nusing this:\n  dist x y = real_of_int \\<bar>k + k1 - k2\\<bar> * \\<bar>\\<delta>\\<bar>\n  dist x y < e\n\ngoal (1 subgoal):\n 1. real_of_int \\<bar>k + k1 - k2\\<bar> * \\<bar>\\<delta>\\<bar> < e", "by auto"], ["proof (state)\nthis:\n  real_of_int \\<bar>k + k1 - k2\\<bar> * \\<bar>\\<delta>\\<bar> < e\n\ngoal (1 subgoal):\n 1. x = y", "then"], ["proof (chain)\npicking this:\n  real_of_int \\<bar>k + k1 - k2\\<bar> * \\<bar>\\<delta>\\<bar> < e", "have \"\\<bar>k+k1-k2\\<bar>*\\<bar>\\<delta>\\<bar> < \\<bar>\\<delta>\\<bar>\""], ["proof (prove)\nusing this:\n  real_of_int \\<bar>k + k1 - k2\\<bar> * \\<bar>\\<delta>\\<bar> < e\n\ngoal (1 subgoal):\n 1. real_of_int \\<bar>k + k1 - k2\\<bar> * \\<bar>\\<delta>\\<bar>\n    < \\<bar>\\<delta>\\<bar>", "apply (elim order_class.dual_order.strict_trans1[rotated])"], ["proof (prove)\ngoal (1 subgoal):\n 1. e \\<le> \\<bar>\\<delta>\\<bar>", "unfolding e_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if setdist B_diff P = 0 then \\<bar>\\<delta>\\<bar>\n     else min (setdist B_diff P) \\<bar>\\<delta>\\<bar>)\n    \\<le> \\<bar>\\<delta>\\<bar>", "by auto"], ["proof (state)\nthis:\n  real_of_int \\<bar>k + k1 - k2\\<bar> * \\<bar>\\<delta>\\<bar>\n  < \\<bar>\\<delta>\\<bar>\n\ngoal (1 subgoal):\n 1. x = y", "then"], ["proof (chain)\npicking this:\n  real_of_int \\<bar>k + k1 - k2\\<bar> * \\<bar>\\<delta>\\<bar>\n  < \\<bar>\\<delta>\\<bar>", "have \"\\<bar>k+k1-k2\\<bar> = 0\""], ["proof (prove)\nusing this:\n  real_of_int \\<bar>k + k1 - k2\\<bar> * \\<bar>\\<delta>\\<bar>\n  < \\<bar>\\<delta>\\<bar>\n\ngoal (1 subgoal):\n 1. \\<bar>k + k1 - k2\\<bar> = 0", "unfolding e_def"], ["proof (prove)\nusing this:\n  real_of_int \\<bar>k + k1 - k2\\<bar> * \\<bar>\\<delta>\\<bar>\n  < \\<bar>\\<delta>\\<bar>\n\ngoal (1 subgoal):\n 1. \\<bar>k + k1 - k2\\<bar> = 0", "using \\<open>\\<delta>\\<noteq>0\\<close>"], ["proof (prove)\nusing this:\n  real_of_int \\<bar>k + k1 - k2\\<bar> * \\<bar>\\<delta>\\<bar>\n  < \\<bar>\\<delta>\\<bar>\n  \\<delta> \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<bar>k + k1 - k2\\<bar> = 0", "by force"], ["proof (state)\nthis:\n  \\<bar>k + k1 - k2\\<bar> = 0\n\ngoal (1 subgoal):\n 1. x = y", "then"], ["proof (chain)\npicking this:\n  \\<bar>k + k1 - k2\\<bar> = 0", "have \"dist x y=0\""], ["proof (prove)\nusing this:\n  \\<bar>k + k1 - k2\\<bar> = 0\n\ngoal (1 subgoal):\n 1. dist x y = 0", "using *"], ["proof (prove)\nusing this:\n  \\<bar>k + k1 - k2\\<bar> = 0\n  dist x y = real_of_int \\<bar>k + k1 - k2\\<bar> * \\<bar>\\<delta>\\<bar>\n\ngoal (1 subgoal):\n 1. dist x y = 0", "by auto"], ["proof (state)\nthis:\n  dist x y = 0\n\ngoal (1 subgoal):\n 1. x = y", "then"], ["proof (chain)\npicking this:\n  dist x y = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  dist x y = 0\n\ngoal (1 subgoal):\n 1. x = y", "by auto"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<bar>g x - g y\\<bar> \\<in> P \\<Longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. x = y", "moreover"], ["proof (state)\nthis:\n  \\<bar>g x - g y\\<bar> \\<in> P \\<Longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. x = y", "have ?thesis when \"\\<bar>g x - g y\\<bar> \\<notin> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x = y", "have \"\\<bar>g x - g y\\<bar> \\<in> B_diff\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>g x - g y\\<bar> \\<in> B_diff", "unfolding B_diff_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>g x - g y\\<bar>\n    \\<in> {\\<bar>x - y\\<bar> |x y. x \\<in> B \\<and> y \\<in> B} - P", "using \\<open>g x\\<in>B\\<close> \\<open>g y\\<in>B\\<close> that"], ["proof (prove)\nusing this:\n  g x \\<in> B\n  g y \\<in> B\n  \\<bar>g x - g y\\<bar> \\<notin> P\n\ngoal (1 subgoal):\n 1. \\<bar>g x - g y\\<bar>\n    \\<in> {\\<bar>x - y\\<bar> |x y. x \\<in> B \\<and> y \\<in> B} - P", "by auto"], ["proof (state)\nthis:\n  \\<bar>g x - g y\\<bar> \\<in> B_diff\n\ngoal (1 subgoal):\n 1. x = y", "have \"e \\<le> \\<bar>\\<bar>g x - g y\\<bar> - \\<bar>(k1-k2)*\\<delta>\\<bar>\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e \\<le> \\<bar>\\<bar>g x - g y\\<bar> -\n                  \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar>\\<bar>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. e \\<le> \\<bar>\\<bar>g x - g y\\<bar> -\n                  \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar>\\<bar>", "have \"\\<bar>g x - g y\\<bar> \\<in> B_diff\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>g x - g y\\<bar> \\<in> B_diff", "unfolding B_diff_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>g x - g y\\<bar>\n    \\<in> {\\<bar>x - y\\<bar> |x y. x \\<in> B \\<and> y \\<in> B} - P", "using \\<open>g x\\<in>B\\<close> \\<open>g y\\<in>B\\<close> that"], ["proof (prove)\nusing this:\n  g x \\<in> B\n  g y \\<in> B\n  \\<bar>g x - g y\\<bar> \\<notin> P\n\ngoal (1 subgoal):\n 1. \\<bar>g x - g y\\<bar>\n    \\<in> {\\<bar>x - y\\<bar> |x y. x \\<in> B \\<and> y \\<in> B} - P", "by auto"], ["proof (state)\nthis:\n  \\<bar>g x - g y\\<bar> \\<in> B_diff\n\ngoal (1 subgoal):\n 1. e \\<le> \\<bar>\\<bar>g x - g y\\<bar> -\n                  \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar>\\<bar>", "moreover"], ["proof (state)\nthis:\n  \\<bar>g x - g y\\<bar> \\<in> B_diff\n\ngoal (1 subgoal):\n 1. e \\<le> \\<bar>\\<bar>g x - g y\\<bar> -\n                  \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar>\\<bar>", "have \"\\<bar>(k1-k2)*\\<delta>\\<bar> \\<in> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar> \\<in> P", "unfolding P_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar> \\<in> (*) \\<delta> ` \\<int>", "apply (intro rev_image_eqI[of \"(if \\<delta>\\<ge>0 then \\<bar>of_int(k1-k2)\\<bar> else - \\<bar>of_int(k1-k2)\\<bar>)\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. (if 0 \\<le> \\<delta> then \\<bar>real_of_int (k1 - k2)\\<bar>\n     else - \\<bar>real_of_int (k1 - k2)\\<bar>)\n    \\<in> \\<int>\n 2. \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar> =\n    \\<delta> *\n    (if 0 \\<le> \\<delta> then \\<bar>real_of_int (k1 - k2)\\<bar>\n     else - \\<bar>real_of_int (k1 - k2)\\<bar>)", "apply (metis Ints_minus Ints_of_int of_int_abs)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar> =\n    \\<delta> *\n    (if 0 \\<le> \\<delta> then \\<bar>real_of_int (k1 - k2)\\<bar>\n     else - \\<bar>real_of_int (k1 - k2)\\<bar>)", "by (auto simp add:abs_mult)"], ["proof (state)\nthis:\n  \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar> \\<in> P\n\ngoal (1 subgoal):\n 1. e \\<le> \\<bar>\\<bar>g x - g y\\<bar> -\n                  \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar>\\<bar>", "ultimately"], ["proof (chain)\npicking this:\n  \\<bar>g x - g y\\<bar> \\<in> B_diff\n  \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar> \\<in> P", "have \"\\<bar>\\<bar>g x - g y\\<bar> - \\<bar>(k1-k2)*\\<delta>\\<bar>\\<bar> \\<ge> setdist B_diff P\""], ["proof (prove)\nusing this:\n  \\<bar>g x - g y\\<bar> \\<in> B_diff\n  \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar> \\<in> P\n\ngoal (1 subgoal):\n 1. setdist B_diff P\n    \\<le> \\<bar>\\<bar>g x - g y\\<bar> -\n                \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar>\\<bar>", "using setdist_le_dist[of _ B_diff  _ P] dist_real_def"], ["proof (prove)\nusing this:\n  \\<bar>g x - g y\\<bar> \\<in> B_diff\n  \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar> \\<in> P\n  \\<lbrakk>?x \\<in> B_diff; ?y \\<in> P\\<rbrakk>\n  \\<Longrightarrow> setdist B_diff P \\<le> dist ?x ?y\n  dist ?x ?y = \\<bar>?x - ?y\\<bar>\n\ngoal (1 subgoal):\n 1. setdist B_diff P\n    \\<le> \\<bar>\\<bar>g x - g y\\<bar> -\n                \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar>\\<bar>", "by auto"], ["proof (state)\nthis:\n  setdist B_diff P\n  \\<le> \\<bar>\\<bar>g x - g y\\<bar> -\n              \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar>\\<bar>\n\ngoal (1 subgoal):\n 1. e \\<le> \\<bar>\\<bar>g x - g y\\<bar> -\n                  \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar>\\<bar>", "moreover"], ["proof (state)\nthis:\n  setdist B_diff P\n  \\<le> \\<bar>\\<bar>g x - g y\\<bar> -\n              \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar>\\<bar>\n\ngoal (1 subgoal):\n 1. e \\<le> \\<bar>\\<bar>g x - g y\\<bar> -\n                  \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar>\\<bar>", "have \"setdist B_diff P \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. setdist B_diff P \\<noteq> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. setdist B_diff P \\<noteq> 0", "have \"compact B_diff \""], ["proof (prove)\ngoal (1 subgoal):\n 1. compact B_diff", "using  \\<open>finite B_diff\\<close>"], ["proof (prove)\nusing this:\n  finite B_diff\n\ngoal (1 subgoal):\n 1. compact B_diff", "using finite_imp_compact"], ["proof (prove)\nusing this:\n  finite B_diff\n  finite ?s \\<Longrightarrow> compact ?s\n\ngoal (1 subgoal):\n 1. compact B_diff", "by blast"], ["proof (state)\nthis:\n  compact B_diff\n\ngoal (1 subgoal):\n 1. setdist B_diff P \\<noteq> 0", "moreover"], ["proof (state)\nthis:\n  compact B_diff\n\ngoal (1 subgoal):\n 1. setdist B_diff P \\<noteq> 0", "have \"closed P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closed P", "unfolding P_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. closed ((*) \\<delta> ` \\<int>)", "using closed_scaling[OF closed_Ints[where 'a=real], of \\<delta>]"], ["proof (prove)\nusing this:\n  closed ((*\\<^sub>R) \\<delta> ` \\<int>)\n\ngoal (1 subgoal):\n 1. closed ((*) \\<delta> ` \\<int>)", "by auto"], ["proof (state)\nthis:\n  closed P\n\ngoal (1 subgoal):\n 1. setdist B_diff P \\<noteq> 0", "moreover"], ["proof (state)\nthis:\n  closed P\n\ngoal (1 subgoal):\n 1. setdist B_diff P \\<noteq> 0", "have \"P \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<noteq> {}", "using Ints_0"], ["proof (prove)\nusing this:\n  (0::?'a) \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. P \\<noteq> {}", "unfolding P_def"], ["proof (prove)\nusing this:\n  (0::?'a) \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. (*) \\<delta> ` \\<int> \\<noteq> {}", "by blast"], ["proof (state)\nthis:\n  P \\<noteq> {}\n\ngoal (1 subgoal):\n 1. setdist B_diff P \\<noteq> 0", "moreover"], ["proof (state)\nthis:\n  P \\<noteq> {}\n\ngoal (1 subgoal):\n 1. setdist B_diff P \\<noteq> 0", "have \"B_diff \\<inter> P = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B_diff \\<inter> P = {}", "unfolding B_diff_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ({\\<bar>x - y\\<bar> |x y. x \\<in> B \\<and> y \\<in> B} - P) \\<inter> P =\n    {}", "by auto"], ["proof (state)\nthis:\n  B_diff \\<inter> P = {}\n\ngoal (1 subgoal):\n 1. setdist B_diff P \\<noteq> 0", "moreover"], ["proof (state)\nthis:\n  B_diff \\<inter> P = {}\n\ngoal (1 subgoal):\n 1. setdist B_diff P \\<noteq> 0", "have \"B_diff \\<noteq>{}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B_diff \\<noteq> {}", "unfolding B_diff_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<bar>x - y\\<bar> |x y. x \\<in> B \\<and> y \\<in> B} - P \\<noteq> {}", "using \\<open>g x\\<in>B\\<close> \\<open>g y\\<in>B\\<close> that"], ["proof (prove)\nusing this:\n  g x \\<in> B\n  g y \\<in> B\n  \\<bar>g x - g y\\<bar> \\<notin> P\n\ngoal (1 subgoal):\n 1. {\\<bar>x - y\\<bar> |x y. x \\<in> B \\<and> y \\<in> B} - P \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  B_diff \\<noteq> {}\n\ngoal (1 subgoal):\n 1. setdist B_diff P \\<noteq> 0", "ultimately"], ["proof (chain)\npicking this:\n  compact B_diff\n  closed P\n  P \\<noteq> {}\n  B_diff \\<inter> P = {}\n  B_diff \\<noteq> {}", "show ?thesis"], ["proof (prove)\nusing this:\n  compact B_diff\n  closed P\n  P \\<noteq> {}\n  B_diff \\<inter> P = {}\n  B_diff \\<noteq> {}\n\ngoal (1 subgoal):\n 1. setdist B_diff P \\<noteq> 0", "using setdist_eq_0_compact_closed[of B_diff P]"], ["proof (prove)\nusing this:\n  compact B_diff\n  closed P\n  P \\<noteq> {}\n  B_diff \\<inter> P = {}\n  B_diff \\<noteq> {}\n  \\<lbrakk>compact B_diff; closed P\\<rbrakk>\n  \\<Longrightarrow> (setdist B_diff P = 0) =\n                    (B_diff = {} \\<or>\n                     P = {} \\<or> B_diff \\<inter> P \\<noteq> {})\n\ngoal (1 subgoal):\n 1. setdist B_diff P \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  setdist B_diff P \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  setdist B_diff P \\<noteq> 0\n\ngoal (1 subgoal):\n 1. e \\<le> \\<bar>\\<bar>g x - g y\\<bar> -\n                  \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar>\\<bar>", "ultimately"], ["proof (chain)\npicking this:\n  setdist B_diff P\n  \\<le> \\<bar>\\<bar>g x - g y\\<bar> -\n              \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar>\\<bar>\n  setdist B_diff P \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  setdist B_diff P\n  \\<le> \\<bar>\\<bar>g x - g y\\<bar> -\n              \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar>\\<bar>\n  setdist B_diff P \\<noteq> 0\n\ngoal (1 subgoal):\n 1. e \\<le> \\<bar>\\<bar>g x - g y\\<bar> -\n                  \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar>\\<bar>", "unfolding e_def"], ["proof (prove)\nusing this:\n  setdist B_diff P\n  \\<le> \\<bar>\\<bar>g x - g y\\<bar> -\n              \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar>\\<bar>\n  setdist B_diff P \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (if setdist B_diff P = 0 then \\<bar>\\<delta>\\<bar>\n     else min (setdist B_diff P) \\<bar>\\<delta>\\<bar>)\n    \\<le> \\<bar>\\<bar>g x - g y\\<bar> -\n                \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar>\\<bar>", "by argo"], ["proof (state)\nthis:\n  e \\<le> \\<bar>\\<bar>g x - g y\\<bar> -\n                \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar>\\<bar>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  e \\<le> \\<bar>\\<bar>g x - g y\\<bar> -\n                \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar>\\<bar>\n\ngoal (1 subgoal):\n 1. x = y", "also"], ["proof (state)\nthis:\n  e \\<le> \\<bar>\\<bar>g x - g y\\<bar> -\n                \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar>\\<bar>\n\ngoal (1 subgoal):\n 1. x = y", "have \"... \\<le> \\<bar>(g x - g y) + (k1-k2)*\\<delta>\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>\\<bar>g x - g y\\<bar> -\n          \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar>\\<bar>\n    \\<le> \\<bar>g x - g y + real_of_int (k1 - k2) * \\<delta>\\<bar>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<bar>\\<bar>g x - g y\\<bar> -\n          \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar>\\<bar>\n    \\<le> \\<bar>g x - g y + real_of_int (k1 - k2) * \\<delta>\\<bar>", "define t1 where \"t1=g x - g y\""], ["proof (state)\nthis:\n  t1 = g x - g y\n\ngoal (1 subgoal):\n 1. \\<bar>\\<bar>g x - g y\\<bar> -\n          \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar>\\<bar>\n    \\<le> \\<bar>g x - g y + real_of_int (k1 - k2) * \\<delta>\\<bar>", "define t2 where \"t2 = of_int (k1 - k2) * \\<delta>\""], ["proof (state)\nthis:\n  t2 = real_of_int (k1 - k2) * \\<delta>\n\ngoal (1 subgoal):\n 1. \\<bar>\\<bar>g x - g y\\<bar> -\n          \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar>\\<bar>\n    \\<le> \\<bar>g x - g y + real_of_int (k1 - k2) * \\<delta>\\<bar>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>\\<bar>g x - g y\\<bar> -\n          \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar>\\<bar>\n    \\<le> \\<bar>g x - g y + real_of_int (k1 - k2) * \\<delta>\\<bar>", "apply (fold t1_def t2_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>\\<bar>t1\\<bar> - \\<bar>t2\\<bar>\\<bar> \\<le> \\<bar>t1 + t2\\<bar>", "by linarith"], ["proof (state)\nthis:\n  \\<bar>\\<bar>g x - g y\\<bar> -\n        \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar>\\<bar>\n  \\<le> \\<bar>g x - g y + real_of_int (k1 - k2) * \\<delta>\\<bar>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<bar>\\<bar>g x - g y\\<bar> -\n        \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar>\\<bar>\n  \\<le> \\<bar>g x - g y + real_of_int (k1 - k2) * \\<delta>\\<bar>\n\ngoal (1 subgoal):\n 1. x = y", "also"], ["proof (state)\nthis:\n  \\<bar>\\<bar>g x - g y\\<bar> -\n        \\<bar>real_of_int (k1 - k2) * \\<delta>\\<bar>\\<bar>\n  \\<le> \\<bar>g x - g y + real_of_int (k1 - k2) * \\<delta>\\<bar>\n\ngoal (1 subgoal):\n 1. x = y", "have \"... = dist x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>g x - g y + real_of_int (k1 - k2) * \\<delta>\\<bar> = dist x y", "unfolding dist_real_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>g x - g y + real_of_int (k1 - k2) * \\<delta>\\<bar> =\n    \\<bar>x - y\\<bar>", "by (subst (2) k1,subst (2) k2,simp add:algebra_simps)"], ["proof (state)\nthis:\n  \\<bar>g x - g y + real_of_int (k1 - k2) * \\<delta>\\<bar> = dist x y\n\ngoal (1 subgoal):\n 1. x = y", "finally"], ["proof (chain)\npicking this:\n  e \\<le> dist x y", "have \"dist x y\\<ge>e\""], ["proof (prove)\nusing this:\n  e \\<le> dist x y\n\ngoal (1 subgoal):\n 1. e \\<le> dist x y", "."], ["proof (state)\nthis:\n  e \\<le> dist x y\n\ngoal (1 subgoal):\n 1. x = y", "then"], ["proof (chain)\npicking this:\n  e \\<le> dist x y", "have False"], ["proof (prove)\nusing this:\n  e \\<le> dist x y\n\ngoal (1 subgoal):\n 1. False", "using \\<open>dist x y<e\\<close>"], ["proof (prove)\nusing this:\n  e \\<le> dist x y\n  dist x y < e\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. x = y", "then"], ["proof (chain)\npicking this:\n  False", "show ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. x = y", "by auto"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<bar>g x - g y\\<bar> \\<notin> P \\<Longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. x = y", "ultimately"], ["proof (chain)\npicking this:\n  \\<bar>g x - g y\\<bar> \\<in> P \\<Longrightarrow> x = y\n  \\<bar>g x - g y\\<bar> \\<notin> P \\<Longrightarrow> x = y", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<bar>g x - g y\\<bar> \\<in> P \\<Longrightarrow> x = y\n  \\<bar>g x - g y\\<bar> \\<notin> P \\<Longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. x = y", "by auto"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> S; ?y \\<in> S; dist ?x ?y < e\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n\ngoal (1 subgoal):\n 1. uniform_discrete S", "ultimately"], ["proof (chain)\npicking this:\n  0 < e\n  \\<lbrakk>?x \\<in> S; ?y \\<in> S; dist ?x ?y < e\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < e\n  \\<lbrakk>?x \\<in> S; ?y \\<in> S; dist ?x ?y < e\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n\ngoal (1 subgoal):\n 1. uniform_discrete S", "unfolding uniform_discrete_def"], ["proof (prove)\nusing this:\n  0 < e\n  \\<lbrakk>?x \\<in> S; ?y \\<in> S; dist ?x ?y < e\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n\ngoal (1 subgoal):\n 1. \\<exists>e>0.\n       \\<forall>x\\<in>S.\n          \\<forall>y\\<in>S. dist x y < e \\<longrightarrow> x = y", "by auto"], ["proof (state)\nthis:\n  uniform_discrete S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>S \\<noteq> {}; \\<delta> \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> uniform_discrete S\n\ngoal (1 subgoal):\n 1. uniform_discrete S", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>S \\<noteq> {}; \\<delta> \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> uniform_discrete S\n\ngoal (1 subgoal):\n 1. uniform_discrete S", "have ?thesis when \"S={}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uniform_discrete S", "using that"], ["proof (prove)\nusing this:\n  S = {}\n\ngoal (1 subgoal):\n 1. uniform_discrete S", "by auto"], ["proof (state)\nthis:\n  S = {} \\<Longrightarrow> uniform_discrete S\n\ngoal (1 subgoal):\n 1. uniform_discrete S", "moreover"], ["proof (state)\nthis:\n  S = {} \\<Longrightarrow> uniform_discrete S\n\ngoal (1 subgoal):\n 1. uniform_discrete S", "have ?thesis when \"\\<delta>=0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uniform_discrete S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. uniform_discrete S", "obtain B g where \"finite B\" and g_def:\"\\<forall>x\\<in>S. g x\\<in>B \\<and> (\\<exists>k::int. x = g x + k * \\<delta>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B g.\n        \\<lbrakk>finite B;\n         \\<forall>x\\<in>S.\n            g x \\<in> B \\<and>\n            (\\<exists>xa. x = g x + real_of_int xa * \\<delta>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  periodic_set S \\<delta>\n\ngoal (1 subgoal):\n 1. (\\<And>B g.\n        \\<lbrakk>finite B;\n         \\<forall>x\\<in>S.\n            g x \\<in> B \\<and>\n            (\\<exists>xa. x = g x + real_of_int xa * \\<delta>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding periodic_set_def"], ["proof (prove)\nusing this:\n  \\<exists>B.\n     finite B \\<and>\n     (\\<forall>x\\<in>S.\n         \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * \\<delta>)\n\ngoal (1 subgoal):\n 1. (\\<And>B g.\n        \\<lbrakk>finite B;\n         \\<forall>x\\<in>S.\n            g x \\<in> B \\<and>\n            (\\<exists>xa. x = g x + real_of_int xa * \\<delta>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  finite B\n  \\<forall>x\\<in>S.\n     g x \\<in> B \\<and> (\\<exists>xa. x = g x + real_of_int xa * \\<delta>)\n\ngoal (1 subgoal):\n 1. uniform_discrete S", "then"], ["proof (chain)\npicking this:\n  finite B\n  \\<forall>x\\<in>S.\n     g x \\<in> B \\<and> (\\<exists>xa. x = g x + real_of_int xa * \\<delta>)", "have \"\\<forall>x\\<in>S. g x\\<in>B \\<and> (x = g x)\""], ["proof (prove)\nusing this:\n  finite B\n  \\<forall>x\\<in>S.\n     g x \\<in> B \\<and> (\\<exists>xa. x = g x + real_of_int xa * \\<delta>)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>S. g x \\<in> B \\<and> x = g x", "using that"], ["proof (prove)\nusing this:\n  finite B\n  \\<forall>x\\<in>S.\n     g x \\<in> B \\<and> (\\<exists>xa. x = g x + real_of_int xa * \\<delta>)\n  \\<delta> = 0\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>S. g x \\<in> B \\<and> x = g x", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>x\\<in>S. g x \\<in> B \\<and> x = g x\n\ngoal (1 subgoal):\n 1. uniform_discrete S", "then"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>S. g x \\<in> B \\<and> x = g x", "have \"S \\<subseteq> g ` B\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>S. g x \\<in> B \\<and> x = g x\n\ngoal (1 subgoal):\n 1. S \\<subseteq> g ` B", "by auto"], ["proof (state)\nthis:\n  S \\<subseteq> g ` B\n\ngoal (1 subgoal):\n 1. uniform_discrete S", "then"], ["proof (chain)\npicking this:\n  S \\<subseteq> g ` B", "have \"finite S\""], ["proof (prove)\nusing this:\n  S \\<subseteq> g ` B\n\ngoal (1 subgoal):\n 1. finite S", "using \\<open>finite B\\<close>"], ["proof (prove)\nusing this:\n  S \\<subseteq> g ` B\n  finite B\n\ngoal (1 subgoal):\n 1. finite S", "by (auto elim:finite_subset)"], ["proof (state)\nthis:\n  finite S\n\ngoal (1 subgoal):\n 1. uniform_discrete S", "then"], ["proof (chain)\npicking this:\n  finite S", "show ?thesis"], ["proof (prove)\nusing this:\n  finite S\n\ngoal (1 subgoal):\n 1. uniform_discrete S", "using uniform_discrete_finite_iff"], ["proof (prove)\nusing this:\n  finite S\n  (uniform_discrete ?S \\<and> bounded ?S) = finite ?S\n\ngoal (1 subgoal):\n 1. uniform_discrete S", "by blast"], ["proof (state)\nthis:\n  uniform_discrete S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<delta> = 0 \\<Longrightarrow> uniform_discrete S\n\ngoal (1 subgoal):\n 1. uniform_discrete S", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>S \\<noteq> {}; \\<delta> \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> uniform_discrete S\n  S = {} \\<Longrightarrow> uniform_discrete S\n  \\<delta> = 0 \\<Longrightarrow> uniform_discrete S", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>S \\<noteq> {}; \\<delta> \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> uniform_discrete S\n  S = {} \\<Longrightarrow> uniform_discrete S\n  \\<delta> = 0 \\<Longrightarrow> uniform_discrete S\n\ngoal (1 subgoal):\n 1. uniform_discrete S", "by blast"], ["proof (state)\nthis:\n  uniform_discrete S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma periodic_set_tan_linear:\n  assumes \"a\\<noteq>0\" \"c\\<noteq>0\"\n  shows \"periodic_set (roots (\\<lambda>x. a*tan (x/c) + b)) (c*pi)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodic_set (roots (\\<lambda>x. a * tan (x / c) + b)) (c * pi)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. periodic_set (roots (\\<lambda>x. a * tan (x / c) + b)) (c * pi)", "define B where \"B = { c*arctan (- b / a), c*pi/2}\""], ["proof (state)\nthis:\n  B = {c * arctan (- b / a), c * pi / 2}\n\ngoal (1 subgoal):\n 1. periodic_set (roots (\\<lambda>x. a * tan (x / c) + b)) (c * pi)", "have \"\\<exists>b\\<in>B. \\<exists>k::int. x = b + k * (c*pi)\" when \"x\\<in>roots (\\<lambda>x. a * tan (x/c) + b)\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (c * pi)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (c * pi)", "define C1 where \"C1 = (\\<exists>k::int. x = c*arctan (- b / a) + k * (c*pi))\""], ["proof (state)\nthis:\n  C1 = (\\<exists>xa. x = c * arctan (- b / a) + real_of_int xa * (c * pi))\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (c * pi)", "define C2 where \"C2 = (\\<exists>k::int. x = c*pi / 2 + k  * (c*pi) \\<and> - b / a = 0)\""], ["proof (state)\nthis:\n  C2 =\n  (\\<exists>xa.\n      x = c * pi / 2 + real_of_int xa * (c * pi) \\<and> - b / a = 0)\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (c * pi)", "have \"tan (x/c) = - b/a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tan (x / c) = - b / a", "using that \\<open>a\\<noteq>0\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> roots (\\<lambda>x. a * tan (x / c) + b)\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. tan (x / c) = - b / a", "unfolding roots_within_def"], ["proof (prove)\nusing this:\n  x \\<in> {x \\<in> UNIV. a * tan (x / c) + b = 0}\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. tan (x / c) = - b / a", "by (auto simp add:field_simps)"], ["proof (state)\nthis:\n  tan (x / c) = - b / a\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (c * pi)", "then"], ["proof (chain)\npicking this:\n  tan (x / c) = - b / a", "have \"C1 \\<or> C2\""], ["proof (prove)\nusing this:\n  tan (x / c) = - b / a\n\ngoal (1 subgoal):\n 1. C1 \\<or> C2", "unfolding C1_def C2_def"], ["proof (prove)\nusing this:\n  tan (x / c) = - b / a\n\ngoal (1 subgoal):\n 1. (\\<exists>xa.\n        x = c * arctan (- b / a) + real_of_int xa * (c * pi)) \\<or>\n    (\\<exists>xa.\n        x = c * pi / 2 + real_of_int xa * (c * pi) \\<and> - b / a = 0)", "using tan_eq_arctan_Ex[of \"x/c\" \"-b/a\"]  \\<open>c\\<noteq>0\\<close>"], ["proof (prove)\nusing this:\n  tan (x / c) = - b / a\n  (tan (x / c) = - b / a) =\n  (\\<exists>xa.\n      x / c = arctan (- b / a) + real_of_int xa * pi \\<or>\n      x / c = pi / 2 + real_of_int xa * pi \\<and> - b / a = 0)\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<exists>xa.\n        x = c * arctan (- b / a) + real_of_int xa * (c * pi)) \\<or>\n    (\\<exists>xa.\n        x = c * pi / 2 + real_of_int xa * (c * pi) \\<and> - b / a = 0)", "by (auto simp add:field_simps)"], ["proof (state)\nthis:\n  C1 \\<or> C2\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (c * pi)", "moreover"], ["proof (state)\nthis:\n  C1 \\<or> C2\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (c * pi)", "have ?thesis when C1"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (c * pi)", "using that"], ["proof (prove)\nusing this:\n  C1\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (c * pi)", "unfolding C1_def B_def"], ["proof (prove)\nusing this:\n  \\<exists>xa. x = c * arctan (- b / a) + real_of_int xa * (c * pi)\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>{c * arctan (- b / a), c * pi / 2}.\n       \\<exists>xa. x = b + real_of_int xa * (c * pi)", "by blast"], ["proof (state)\nthis:\n  C1 \\<Longrightarrow>\n  \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (c * pi)\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (c * pi)", "moreover"], ["proof (state)\nthis:\n  C1 \\<Longrightarrow>\n  \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (c * pi)\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (c * pi)", "have ?thesis when C2"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (c * pi)", "using that"], ["proof (prove)\nusing this:\n  C2\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (c * pi)", "unfolding C2_def B_def"], ["proof (prove)\nusing this:\n  \\<exists>xa. x = c * pi / 2 + real_of_int xa * (c * pi) \\<and> - b / a = 0\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>{c * arctan (- b / a), c * pi / 2}.\n       \\<exists>xa. x = b + real_of_int xa * (c * pi)", "by blast"], ["proof (state)\nthis:\n  C2 \\<Longrightarrow>\n  \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (c * pi)\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (c * pi)", "ultimately"], ["proof (chain)\npicking this:\n  C1 \\<or> C2\n  C1 \\<Longrightarrow>\n  \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (c * pi)\n  C2 \\<Longrightarrow>\n  \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (c * pi)", "show ?thesis"], ["proof (prove)\nusing this:\n  C1 \\<or> C2\n  C1 \\<Longrightarrow>\n  \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (c * pi)\n  C2 \\<Longrightarrow>\n  \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (c * pi)\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (c * pi)", "by auto"], ["proof (state)\nthis:\n  \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (c * pi)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x \\<in> roots (\\<lambda>x. a * tan (x / c) + b) \\<Longrightarrow>\n  \\<exists>b\\<in>B. \\<exists>x. ?x = b + real_of_int x * (c * pi)\n\ngoal (1 subgoal):\n 1. periodic_set (roots (\\<lambda>x. a * tan (x / c) + b)) (c * pi)", "moreover"], ["proof (state)\nthis:\n  ?x \\<in> roots (\\<lambda>x. a * tan (x / c) + b) \\<Longrightarrow>\n  \\<exists>b\\<in>B. \\<exists>x. ?x = b + real_of_int x * (c * pi)\n\ngoal (1 subgoal):\n 1. periodic_set (roots (\\<lambda>x. a * tan (x / c) + b)) (c * pi)", "have \"finite B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite B", "unfolding B_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {c * arctan (- b / a), c * pi / 2}", "by auto"], ["proof (state)\nthis:\n  finite B\n\ngoal (1 subgoal):\n 1. periodic_set (roots (\\<lambda>x. a * tan (x / c) + b)) (c * pi)", "ultimately"], ["proof (chain)\npicking this:\n  ?x \\<in> roots (\\<lambda>x. a * tan (x / c) + b) \\<Longrightarrow>\n  \\<exists>b\\<in>B. \\<exists>x. ?x = b + real_of_int x * (c * pi)\n  finite B", "show ?thesis"], ["proof (prove)\nusing this:\n  ?x \\<in> roots (\\<lambda>x. a * tan (x / c) + b) \\<Longrightarrow>\n  \\<exists>b\\<in>B. \\<exists>x. ?x = b + real_of_int x * (c * pi)\n  finite B\n\ngoal (1 subgoal):\n 1. periodic_set (roots (\\<lambda>x. a * tan (x / c) + b)) (c * pi)", "unfolding periodic_set_def"], ["proof (prove)\nusing this:\n  ?x \\<in> roots (\\<lambda>x. a * tan (x / c) + b) \\<Longrightarrow>\n  \\<exists>b\\<in>B. \\<exists>x. ?x = b + real_of_int x * (c * pi)\n  finite B\n\ngoal (1 subgoal):\n 1. \\<exists>B.\n       finite B \\<and>\n       (\\<forall>x\\<in>roots (\\<lambda>x. a * tan (x / c) + b).\n           \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (c * pi))", "by auto"], ["proof (state)\nthis:\n  periodic_set (roots (\\<lambda>x. a * tan (x / c) + b)) (c * pi)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma periodic_set_cos_linear:\n  assumes \"a\\<noteq>0\" \"c\\<noteq>0\"\n  shows \"periodic_set (roots (\\<lambda>x. a*cos (x/c) + b)) (2*c*pi)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodic_set (roots (\\<lambda>x. a * cos (x / c) + b)) (2 * c * pi)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. periodic_set (roots (\\<lambda>x. a * cos (x / c) + b)) (2 * c * pi)", "define B where \"B = { c*arccos (- b / a), - c*arccos (- b / a)}\""], ["proof (state)\nthis:\n  B = {c * arccos (- b / a), - c * arccos (- b / a)}\n\ngoal (1 subgoal):\n 1. periodic_set (roots (\\<lambda>x. a * cos (x / c) + b)) (2 * c * pi)", "have \"\\<exists>b\\<in>B. \\<exists>k::int. x = b + k * (2*c*pi)\"\n    when \"x\\<in>roots (\\<lambda>x. a * cos (x/c) + b)\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (2 * c * pi)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (2 * c * pi)", "define C1 where \"C1 = (\\<exists>k::int. x = c*arccos (- b / a) + k * (2*c*pi))\""], ["proof (state)\nthis:\n  C1 =\n  (\\<exists>xa. x = c * arccos (- b / a) + real_of_int xa * (2 * c * pi))\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (2 * c * pi)", "define C2 where \"C2 = (\\<exists>k::int. x = - c*arccos (- b / a) + k * (2*c*pi))\""], ["proof (state)\nthis:\n  C2 =\n  (\\<exists>xa. x = - c * arccos (- b / a) + real_of_int xa * (2 * c * pi))\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (2 * c * pi)", "have \"cos (x/c) = - b/a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos (x / c) = - b / a", "using that \\<open>a\\<noteq>0\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> roots (\\<lambda>x. a * cos (x / c) + b)\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. cos (x / c) = - b / a", "unfolding roots_within_def"], ["proof (prove)\nusing this:\n  x \\<in> {x \\<in> UNIV. a * cos (x / c) + b = 0}\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. cos (x / c) = - b / a", "by (auto simp add:field_simps)"], ["proof (state)\nthis:\n  cos (x / c) = - b / a\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (2 * c * pi)", "then"], ["proof (chain)\npicking this:\n  cos (x / c) = - b / a", "have \"C1 \\<or> C2\""], ["proof (prove)\nusing this:\n  cos (x / c) = - b / a\n\ngoal (1 subgoal):\n 1. C1 \\<or> C2", "unfolding cos_eq_arccos_Ex ex_disj_distrib C1_def C2_def"], ["proof (prove)\nusing this:\n  - 1 \\<le> - b / a \\<and>\n  - b / a \\<le> 1 \\<and>\n  ((\\<exists>xa. x / c = arccos (- b / a) + 2 * real_of_int xa * pi) \\<or>\n   (\\<exists>xa. x / c = - arccos (- b / a) + 2 * real_of_int xa * pi))\n\ngoal (1 subgoal):\n 1. (\\<exists>xa.\n        x = c * arccos (- b / a) + real_of_int xa * (2 * c * pi)) \\<or>\n    (\\<exists>xa.\n        x = - c * arccos (- b / a) + real_of_int xa * (2 * c * pi))", "using \\<open>c\\<noteq>0\\<close>"], ["proof (prove)\nusing this:\n  - 1 \\<le> - b / a \\<and>\n  - b / a \\<le> 1 \\<and>\n  ((\\<exists>xa. x / c = arccos (- b / a) + 2 * real_of_int xa * pi) \\<or>\n   (\\<exists>xa. x / c = - arccos (- b / a) + 2 * real_of_int xa * pi))\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<exists>xa.\n        x = c * arccos (- b / a) + real_of_int xa * (2 * c * pi)) \\<or>\n    (\\<exists>xa.\n        x = - c * arccos (- b / a) + real_of_int xa * (2 * c * pi))", "apply (auto simp add:divide_simps)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>c \\<noteq> 0;\n        if 0 < a then - 1 * a \\<le> - b\n        else if a < 0 then - b \\<le> - 1 * a else - 1 \\<le> 0;\n        if 0 < a then - 1 * a \\<le> b\n        else if a < 0 then b \\<le> - 1 * a else - 1 \\<le> 0;\n        \\<forall>x.\n           (arccos (- (b / a)) + 2 * real_of_int xa * pi) * c \\<noteq>\n           real_of_int x * (2 * c * pi) - c * arccos (- (b / a));\n        x = (arccos (- (b / a)) + 2 * real_of_int xa * pi) * c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            (arccos (- (b / a)) + 2 * real_of_int xa * pi) *\n                            c =\n                            c * arccos (- (b / a)) +\n                            real_of_int x * (2 * c * pi)\n 2. \\<And>xa.\n       \\<lbrakk>c \\<noteq> 0;\n        if 0 < a then - 1 * a \\<le> - b\n        else if a < 0 then - b \\<le> - 1 * a else - 1 \\<le> 0;\n        if 0 < a then - 1 * a \\<le> b\n        else if a < 0 then b \\<le> - 1 * a else - 1 \\<le> 0;\n        \\<forall>x.\n           (2 * real_of_int xa * pi - arccos (- (b / a))) * c \\<noteq>\n           real_of_int x * (2 * c * pi) - c * arccos (- (b / a));\n        x = (2 * real_of_int xa * pi - arccos (- (b / a))) * c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            (2 * real_of_int xa * pi - arccos (- (b / a))) *\n                            c =\n                            c * arccos (- (b / a)) +\n                            real_of_int x * (2 * c * pi)", "by (auto simp add:algebra_simps)"], ["proof (state)\nthis:\n  C1 \\<or> C2\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (2 * c * pi)", "moreover"], ["proof (state)\nthis:\n  C1 \\<or> C2\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (2 * c * pi)", "have ?thesis when C1"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (2 * c * pi)", "using that"], ["proof (prove)\nusing this:\n  C1\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (2 * c * pi)", "unfolding C1_def B_def"], ["proof (prove)\nusing this:\n  \\<exists>xa. x = c * arccos (- b / a) + real_of_int xa * (2 * c * pi)\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>{c * arccos (- b / a), - c * arccos (- b / a)}.\n       \\<exists>xa. x = b + real_of_int xa * (2 * c * pi)", "by blast"], ["proof (state)\nthis:\n  C1 \\<Longrightarrow>\n  \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (2 * c * pi)\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (2 * c * pi)", "moreover"], ["proof (state)\nthis:\n  C1 \\<Longrightarrow>\n  \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (2 * c * pi)\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (2 * c * pi)", "have ?thesis when C2"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (2 * c * pi)", "using that"], ["proof (prove)\nusing this:\n  C2\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (2 * c * pi)", "unfolding C2_def B_def"], ["proof (prove)\nusing this:\n  \\<exists>xa. x = - c * arccos (- b / a) + real_of_int xa * (2 * c * pi)\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>{c * arccos (- b / a), - c * arccos (- b / a)}.\n       \\<exists>xa. x = b + real_of_int xa * (2 * c * pi)", "by blast"], ["proof (state)\nthis:\n  C2 \\<Longrightarrow>\n  \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (2 * c * pi)\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (2 * c * pi)", "ultimately"], ["proof (chain)\npicking this:\n  C1 \\<or> C2\n  C1 \\<Longrightarrow>\n  \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (2 * c * pi)\n  C2 \\<Longrightarrow>\n  \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (2 * c * pi)", "show ?thesis"], ["proof (prove)\nusing this:\n  C1 \\<or> C2\n  C1 \\<Longrightarrow>\n  \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (2 * c * pi)\n  C2 \\<Longrightarrow>\n  \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (2 * c * pi)\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (2 * c * pi)", "by auto"], ["proof (state)\nthis:\n  \\<exists>b\\<in>B. \\<exists>xa. x = b + real_of_int xa * (2 * c * pi)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x \\<in> roots (\\<lambda>x. a * cos (x / c) + b) \\<Longrightarrow>\n  \\<exists>b\\<in>B. \\<exists>x. ?x = b + real_of_int x * (2 * c * pi)\n\ngoal (1 subgoal):\n 1. periodic_set (roots (\\<lambda>x. a * cos (x / c) + b)) (2 * c * pi)", "moreover"], ["proof (state)\nthis:\n  ?x \\<in> roots (\\<lambda>x. a * cos (x / c) + b) \\<Longrightarrow>\n  \\<exists>b\\<in>B. \\<exists>x. ?x = b + real_of_int x * (2 * c * pi)\n\ngoal (1 subgoal):\n 1. periodic_set (roots (\\<lambda>x. a * cos (x / c) + b)) (2 * c * pi)", "have \"finite B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite B", "unfolding B_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {c * arccos (- b / a), - c * arccos (- b / a)}", "by auto"], ["proof (state)\nthis:\n  finite B\n\ngoal (1 subgoal):\n 1. periodic_set (roots (\\<lambda>x. a * cos (x / c) + b)) (2 * c * pi)", "ultimately"], ["proof (chain)\npicking this:\n  ?x \\<in> roots (\\<lambda>x. a * cos (x / c) + b) \\<Longrightarrow>\n  \\<exists>b\\<in>B. \\<exists>x. ?x = b + real_of_int x * (2 * c * pi)\n  finite B", "show ?thesis"], ["proof (prove)\nusing this:\n  ?x \\<in> roots (\\<lambda>x. a * cos (x / c) + b) \\<Longrightarrow>\n  \\<exists>b\\<in>B. \\<exists>x. ?x = b + real_of_int x * (2 * c * pi)\n  finite B\n\ngoal (1 subgoal):\n 1. periodic_set (roots (\\<lambda>x. a * cos (x / c) + b)) (2 * c * pi)", "unfolding periodic_set_def"], ["proof (prove)\nusing this:\n  ?x \\<in> roots (\\<lambda>x. a * cos (x / c) + b) \\<Longrightarrow>\n  \\<exists>b\\<in>B. \\<exists>x. ?x = b + real_of_int x * (2 * c * pi)\n  finite B\n\ngoal (1 subgoal):\n 1. \\<exists>B.\n       finite B \\<and>\n       (\\<forall>x\\<in>roots (\\<lambda>x. a * cos (x / c) + b).\n           \\<exists>b\\<in>B.\n              \\<exists>xa. x = b + real_of_int xa * (2 * c * pi))", "by auto"], ["proof (state)\nthis:\n  periodic_set (roots (\\<lambda>x. a * cos (x / c) + b)) (2 * c * pi)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma periodic_set_tan_poly:\n  assumes \"p\\<noteq>0\" \"c\\<noteq>0\"\n  shows \"periodic_set (roots (\\<lambda>x. poly p (tan (x/c)))) (c*pi)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodic_set (roots (\\<lambda>x. poly p (tan (x / c)))) (c * pi)", "using assms"], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. periodic_set (roots (\\<lambda>x. poly p (tan (x / c)))) (c * pi)", "proof (induct rule:poly_root_induct_alt)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>0 \\<noteq> 0; c \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> periodic_set\n                       (roots (\\<lambda>x. poly 0 (tan (x / c)))) (c * pi)\n 2. \\<And>p.\n       \\<lbrakk>\\<And>a. poly p a \\<noteq> 0; p \\<noteq> 0;\n        c \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> periodic_set\n                          (roots (\\<lambda>x. poly p (tan (x / c))))\n                          (c * pi)\n 3. \\<And>a p.\n       \\<lbrakk>\\<lbrakk>p \\<noteq> 0; c \\<noteq> 0\\<rbrakk>\n                \\<Longrightarrow> periodic_set\n                                   (roots\n                                     (\\<lambda>x. poly p (tan (x / c))))\n                                   (c * pi);\n        [:- a, 1:] * p \\<noteq> 0; c \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> periodic_set\n                          (roots\n                            (\\<lambda>x.\n                                poly ([:- a, 1:] * p) (tan (x / c))))\n                          (c * pi)", "case 0"], ["proof (state)\nthis:\n  0 \\<noteq> 0\n  c \\<noteq> 0\n\ngoal (3 subgoals):\n 1. \\<lbrakk>0 \\<noteq> 0; c \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> periodic_set\n                       (roots (\\<lambda>x. poly 0 (tan (x / c)))) (c * pi)\n 2. \\<And>p.\n       \\<lbrakk>\\<And>a. poly p a \\<noteq> 0; p \\<noteq> 0;\n        c \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> periodic_set\n                          (roots (\\<lambda>x. poly p (tan (x / c))))\n                          (c * pi)\n 3. \\<And>a p.\n       \\<lbrakk>\\<lbrakk>p \\<noteq> 0; c \\<noteq> 0\\<rbrakk>\n                \\<Longrightarrow> periodic_set\n                                   (roots\n                                     (\\<lambda>x. poly p (tan (x / c))))\n                                   (c * pi);\n        [:- a, 1:] * p \\<noteq> 0; c \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> periodic_set\n                          (roots\n                            (\\<lambda>x.\n                                poly ([:- a, 1:] * p) (tan (x / c))))\n                          (c * pi)", "then"], ["proof (chain)\npicking this:\n  0 \\<noteq> 0\n  c \\<noteq> 0", "show ?case"], ["proof (prove)\nusing this:\n  0 \\<noteq> 0\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. periodic_set (roots (\\<lambda>x. poly 0 (tan (x / c)))) (c * pi)", "by simp"], ["proof (state)\nthis:\n  periodic_set (roots (\\<lambda>x. poly 0 (tan (x / c)))) (c * pi)\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>\\<And>a. poly p a \\<noteq> 0; p \\<noteq> 0;\n        c \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> periodic_set\n                          (roots (\\<lambda>x. poly p (tan (x / c))))\n                          (c * pi)\n 2. \\<And>a p.\n       \\<lbrakk>\\<lbrakk>p \\<noteq> 0; c \\<noteq> 0\\<rbrakk>\n                \\<Longrightarrow> periodic_set\n                                   (roots\n                                     (\\<lambda>x. poly p (tan (x / c))))\n                                   (c * pi);\n        [:- a, 1:] * p \\<noteq> 0; c \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> periodic_set\n                          (roots\n                            (\\<lambda>x.\n                                poly ([:- a, 1:] * p) (tan (x / c))))\n                          (c * pi)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>\\<And>a. poly p a \\<noteq> 0; p \\<noteq> 0;\n        c \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> periodic_set\n                          (roots (\\<lambda>x. poly p (tan (x / c))))\n                          (c * pi)\n 2. \\<And>a p.\n       \\<lbrakk>\\<lbrakk>p \\<noteq> 0; c \\<noteq> 0\\<rbrakk>\n                \\<Longrightarrow> periodic_set\n                                   (roots\n                                     (\\<lambda>x. poly p (tan (x / c))))\n                                   (c * pi);\n        [:- a, 1:] * p \\<noteq> 0; c \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> periodic_set\n                          (roots\n                            (\\<lambda>x.\n                                poly ([:- a, 1:] * p) (tan (x / c))))\n                          (c * pi)", "case (no_proots p)"], ["proof (state)\nthis:\n  poly p ?a \\<noteq> 0\n  p \\<noteq> 0\n  c \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>\\<And>a. poly p a \\<noteq> 0; p \\<noteq> 0;\n        c \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> periodic_set\n                          (roots (\\<lambda>x. poly p (tan (x / c))))\n                          (c * pi)\n 2. \\<And>a p.\n       \\<lbrakk>\\<lbrakk>p \\<noteq> 0; c \\<noteq> 0\\<rbrakk>\n                \\<Longrightarrow> periodic_set\n                                   (roots\n                                     (\\<lambda>x. poly p (tan (x / c))))\n                                   (c * pi);\n        [:- a, 1:] * p \\<noteq> 0; c \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> periodic_set\n                          (roots\n                            (\\<lambda>x.\n                                poly ([:- a, 1:] * p) (tan (x / c))))\n                          (c * pi)", "then"], ["proof (chain)\npicking this:\n  poly p ?a \\<noteq> 0\n  p \\<noteq> 0\n  c \\<noteq> 0", "show ?case"], ["proof (prove)\nusing this:\n  poly p ?a \\<noteq> 0\n  p \\<noteq> 0\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. periodic_set (roots (\\<lambda>x. poly p (tan (x / c)))) (c * pi)", "unfolding roots_within_def"], ["proof (prove)\nusing this:\n  poly p ?a \\<noteq> 0\n  p \\<noteq> 0\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. periodic_set {x \\<in> UNIV. poly p (tan (x / c)) = 0} (c * pi)", "by simp"], ["proof (state)\nthis:\n  periodic_set (roots (\\<lambda>x. poly p (tan (x / c)))) (c * pi)\n\ngoal (1 subgoal):\n 1. \\<And>a p.\n       \\<lbrakk>\\<lbrakk>p \\<noteq> 0; c \\<noteq> 0\\<rbrakk>\n                \\<Longrightarrow> periodic_set\n                                   (roots\n                                     (\\<lambda>x. poly p (tan (x / c))))\n                                   (c * pi);\n        [:- a, 1:] * p \\<noteq> 0; c \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> periodic_set\n                          (roots\n                            (\\<lambda>x.\n                                poly ([:- a, 1:] * p) (tan (x / c))))\n                          (c * pi)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a p.\n       \\<lbrakk>\\<lbrakk>p \\<noteq> 0; c \\<noteq> 0\\<rbrakk>\n                \\<Longrightarrow> periodic_set\n                                   (roots\n                                     (\\<lambda>x. poly p (tan (x / c))))\n                                   (c * pi);\n        [:- a, 1:] * p \\<noteq> 0; c \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> periodic_set\n                          (roots\n                            (\\<lambda>x.\n                                poly ([:- a, 1:] * p) (tan (x / c))))\n                          (c * pi)", "case (root a p)"], ["proof (state)\nthis:\n  \\<lbrakk>p \\<noteq> 0; c \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> periodic_set (roots (\\<lambda>x. poly p (tan (x / c))))\n                     (c * pi)\n  [:- a, 1:] * p \\<noteq> 0\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>a p.\n       \\<lbrakk>\\<lbrakk>p \\<noteq> 0; c \\<noteq> 0\\<rbrakk>\n                \\<Longrightarrow> periodic_set\n                                   (roots\n                                     (\\<lambda>x. poly p (tan (x / c))))\n                                   (c * pi);\n        [:- a, 1:] * p \\<noteq> 0; c \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> periodic_set\n                          (roots\n                            (\\<lambda>x.\n                                poly ([:- a, 1:] * p) (tan (x / c))))\n                          (c * pi)", "have \"roots (\\<lambda>x. poly ([:- a, 1:] * p) (tan (x/c))) = roots (\\<lambda>x. tan (x/c) - a)\n          \\<union> roots (\\<lambda>x. poly p (tan (x/c)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. roots (\\<lambda>x. poly ([:- a, 1:] * p) (tan (x / c))) =\n    roots (\\<lambda>x. tan (x / c) - a) \\<union>\n    roots (\\<lambda>x. poly p (tan (x / c)))", "unfolding roots_within_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> UNIV. poly ([:- a, 1:] * p) (tan (x / c)) = 0} =\n    {x \\<in> UNIV. tan (x / c) - a = 0} \\<union>\n    {x \\<in> UNIV. poly p (tan (x / c)) = 0}", "by auto"], ["proof (state)\nthis:\n  roots (\\<lambda>x. poly ([:- a, 1:] * p) (tan (x / c))) =\n  roots (\\<lambda>x. tan (x / c) - a) \\<union>\n  roots (\\<lambda>x. poly p (tan (x / c)))\n\ngoal (1 subgoal):\n 1. \\<And>a p.\n       \\<lbrakk>\\<lbrakk>p \\<noteq> 0; c \\<noteq> 0\\<rbrakk>\n                \\<Longrightarrow> periodic_set\n                                   (roots\n                                     (\\<lambda>x. poly p (tan (x / c))))\n                                   (c * pi);\n        [:- a, 1:] * p \\<noteq> 0; c \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> periodic_set\n                          (roots\n                            (\\<lambda>x.\n                                poly ([:- a, 1:] * p) (tan (x / c))))\n                          (c * pi)", "moreover"], ["proof (state)\nthis:\n  roots (\\<lambda>x. poly ([:- a, 1:] * p) (tan (x / c))) =\n  roots (\\<lambda>x. tan (x / c) - a) \\<union>\n  roots (\\<lambda>x. poly p (tan (x / c)))\n\ngoal (1 subgoal):\n 1. \\<And>a p.\n       \\<lbrakk>\\<lbrakk>p \\<noteq> 0; c \\<noteq> 0\\<rbrakk>\n                \\<Longrightarrow> periodic_set\n                                   (roots\n                                     (\\<lambda>x. poly p (tan (x / c))))\n                                   (c * pi);\n        [:- a, 1:] * p \\<noteq> 0; c \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> periodic_set\n                          (roots\n                            (\\<lambda>x.\n                                poly ([:- a, 1:] * p) (tan (x / c))))\n                          (c * pi)", "have \"periodic_set (roots (\\<lambda>x. tan (x/c) - a)) (c*pi)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodic_set (roots (\\<lambda>x. tan (x / c) - a)) (c * pi)", "using periodic_set_tan_linear[OF _ \\<open>c\\<noteq>0\\<close> ,of 1 \"-a\",simplified]"], ["proof (prove)\nusing this:\n  periodic_set (roots (\\<lambda>x. tan (x / c) - a)) (c * pi)\n\ngoal (1 subgoal):\n 1. periodic_set (roots (\\<lambda>x. tan (x / c) - a)) (c * pi)", "."], ["proof (state)\nthis:\n  periodic_set (roots (\\<lambda>x. tan (x / c) - a)) (c * pi)\n\ngoal (1 subgoal):\n 1. \\<And>a p.\n       \\<lbrakk>\\<lbrakk>p \\<noteq> 0; c \\<noteq> 0\\<rbrakk>\n                \\<Longrightarrow> periodic_set\n                                   (roots\n                                     (\\<lambda>x. poly p (tan (x / c))))\n                                   (c * pi);\n        [:- a, 1:] * p \\<noteq> 0; c \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> periodic_set\n                          (roots\n                            (\\<lambda>x.\n                                poly ([:- a, 1:] * p) (tan (x / c))))\n                          (c * pi)", "moreover"], ["proof (state)\nthis:\n  periodic_set (roots (\\<lambda>x. tan (x / c) - a)) (c * pi)\n\ngoal (1 subgoal):\n 1. \\<And>a p.\n       \\<lbrakk>\\<lbrakk>p \\<noteq> 0; c \\<noteq> 0\\<rbrakk>\n                \\<Longrightarrow> periodic_set\n                                   (roots\n                                     (\\<lambda>x. poly p (tan (x / c))))\n                                   (c * pi);\n        [:- a, 1:] * p \\<noteq> 0; c \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> periodic_set\n                          (roots\n                            (\\<lambda>x.\n                                poly ([:- a, 1:] * p) (tan (x / c))))\n                          (c * pi)", "have \"periodic_set (roots (\\<lambda>x. poly p (tan (x/c)))) (c*pi)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodic_set (roots (\\<lambda>x. poly p (tan (x / c)))) (c * pi)", "using root"], ["proof (prove)\nusing this:\n  \\<lbrakk>p \\<noteq> 0; c \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> periodic_set (roots (\\<lambda>x. poly p (tan (x / c))))\n                     (c * pi)\n  [:- a, 1:] * p \\<noteq> 0\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. periodic_set (roots (\\<lambda>x. poly p (tan (x / c)))) (c * pi)", "by fastforce"], ["proof (state)\nthis:\n  periodic_set (roots (\\<lambda>x. poly p (tan (x / c)))) (c * pi)\n\ngoal (1 subgoal):\n 1. \\<And>a p.\n       \\<lbrakk>\\<lbrakk>p \\<noteq> 0; c \\<noteq> 0\\<rbrakk>\n                \\<Longrightarrow> periodic_set\n                                   (roots\n                                     (\\<lambda>x. poly p (tan (x / c))))\n                                   (c * pi);\n        [:- a, 1:] * p \\<noteq> 0; c \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> periodic_set\n                          (roots\n                            (\\<lambda>x.\n                                poly ([:- a, 1:] * p) (tan (x / c))))\n                          (c * pi)", "ultimately"], ["proof (chain)\npicking this:\n  roots (\\<lambda>x. poly ([:- a, 1:] * p) (tan (x / c))) =\n  roots (\\<lambda>x. tan (x / c) - a) \\<union>\n  roots (\\<lambda>x. poly p (tan (x / c)))\n  periodic_set (roots (\\<lambda>x. tan (x / c) - a)) (c * pi)\n  periodic_set (roots (\\<lambda>x. poly p (tan (x / c)))) (c * pi)", "show ?case"], ["proof (prove)\nusing this:\n  roots (\\<lambda>x. poly ([:- a, 1:] * p) (tan (x / c))) =\n  roots (\\<lambda>x. tan (x / c) - a) \\<union>\n  roots (\\<lambda>x. poly p (tan (x / c)))\n  periodic_set (roots (\\<lambda>x. tan (x / c) - a)) (c * pi)\n  periodic_set (roots (\\<lambda>x. poly p (tan (x / c)))) (c * pi)\n\ngoal (1 subgoal):\n 1. periodic_set (roots (\\<lambda>x. poly ([:- a, 1:] * p) (tan (x / c))))\n     (c * pi)", "using periodic_set_union"], ["proof (prove)\nusing this:\n  roots (\\<lambda>x. poly ([:- a, 1:] * p) (tan (x / c))) =\n  roots (\\<lambda>x. tan (x / c) - a) \\<union>\n  roots (\\<lambda>x. poly p (tan (x / c)))\n  periodic_set (roots (\\<lambda>x. tan (x / c) - a)) (c * pi)\n  periodic_set (roots (\\<lambda>x. poly p (tan (x / c)))) (c * pi)\n  \\<lbrakk>periodic_set ?S ?\\<delta>; periodic_set ?T ?\\<delta>\\<rbrakk>\n  \\<Longrightarrow> periodic_set (?S \\<union> ?T) ?\\<delta>\n\ngoal (1 subgoal):\n 1. periodic_set (roots (\\<lambda>x. poly ([:- a, 1:] * p) (tan (x / c))))\n     (c * pi)", "by simp"], ["proof (state)\nthis:\n  periodic_set (roots (\\<lambda>x. poly ([:- a, 1:] * p) (tan (x / c))))\n   (c * pi)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma periodic_set_sin_cos_linear:\n  fixes a b c ::real\n  assumes \"a\\<noteq>0 \\<or> b\\<noteq>0 \\<or> c\\<noteq>0\"\n  shows \"periodic_set (roots (\\<lambda>x. a * cos x + b * sin x + c)) (4*pi)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodic_set (roots (\\<lambda>x. a * cos x + b * sin x + c)) (4 * pi)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. periodic_set (roots (\\<lambda>x. a * cos x + b * sin x + c)) (4 * pi)", "define f where \"f x= a * cos x + b * sin x + c\" for x"], ["proof (state)\nthis:\n  f ?x = a * cos ?x + b * sin ?x + c\n\ngoal (1 subgoal):\n 1. periodic_set (roots (\\<lambda>x. a * cos x + b * sin x + c)) (4 * pi)", "have \"roots f = (roots f \\<inter> {x. cos (x/2) = 0}) \\<union> (roots f \\<inter> {x. cos (x/2) \\<noteq> 0})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. roots f =\n    roots f \\<inter> {x. cos (x / 2) = 0} \\<union>\n    roots f \\<inter> {x. cos (x / 2) \\<noteq> 0}", "by auto"], ["proof (state)\nthis:\n  roots f =\n  roots f \\<inter> {x. cos (x / 2) = 0} \\<union>\n  roots f \\<inter> {x. cos (x / 2) \\<noteq> 0}\n\ngoal (1 subgoal):\n 1. periodic_set (roots (\\<lambda>x. a * cos x + b * sin x + c)) (4 * pi)", "moreover"], ["proof (state)\nthis:\n  roots f =\n  roots f \\<inter> {x. cos (x / 2) = 0} \\<union>\n  roots f \\<inter> {x. cos (x / 2) \\<noteq> 0}\n\ngoal (1 subgoal):\n 1. periodic_set (roots (\\<lambda>x. a * cos x + b * sin x + c)) (4 * pi)", "have \"periodic_set (roots f \\<inter> {x. cos (x/2) = 0}) (4*pi)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodic_set (roots f \\<inter> {x. cos (x / 2) = 0}) (4 * pi)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. periodic_set (roots f \\<inter> {x. cos (x / 2) = 0}) (4 * pi)", "have \"periodic_set ({x. cos (x/2) = 0}) (4*pi)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodic_set {x. cos (x / 2) = 0} (4 * pi)", "using periodic_set_cos_linear[of 1 2 0,unfolded roots_within_def,simplified]"], ["proof (prove)\nusing this:\n  periodic_set {x. cos (x / 2) = 0} (4 * pi)\n\ngoal (1 subgoal):\n 1. periodic_set {x. cos (x / 2) = 0} (4 * pi)", "by simp"], ["proof (state)\nthis:\n  periodic_set {x. cos (x / 2) = 0} (4 * pi)\n\ngoal (1 subgoal):\n 1. periodic_set (roots f \\<inter> {x. cos (x / 2) = 0}) (4 * pi)", "then"], ["proof (chain)\npicking this:\n  periodic_set {x. cos (x / 2) = 0} (4 * pi)", "show ?thesis"], ["proof (prove)\nusing this:\n  periodic_set {x. cos (x / 2) = 0} (4 * pi)\n\ngoal (1 subgoal):\n 1. periodic_set (roots f \\<inter> {x. cos (x / 2) = 0}) (4 * pi)", "by auto"], ["proof (state)\nthis:\n  periodic_set (roots f \\<inter> {x. cos (x / 2) = 0}) (4 * pi)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  periodic_set (roots f \\<inter> {x. cos (x / 2) = 0}) (4 * pi)\n\ngoal (1 subgoal):\n 1. periodic_set (roots (\\<lambda>x. a * cos x + b * sin x + c)) (4 * pi)", "moreover"], ["proof (state)\nthis:\n  periodic_set (roots f \\<inter> {x. cos (x / 2) = 0}) (4 * pi)\n\ngoal (1 subgoal):\n 1. periodic_set (roots (\\<lambda>x. a * cos x + b * sin x + c)) (4 * pi)", "have \"periodic_set (roots f \\<inter> {x. cos (x/2) \\<noteq> 0}) (4*pi)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodic_set (roots f \\<inter> {x. cos (x / 2) \\<noteq> 0}) (4 * pi)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. periodic_set (roots f \\<inter> {x. cos (x / 2) \\<noteq> 0}) (4 * pi)", "define p where \"p=[:a+c,2*b,c-a:]\""], ["proof (state)\nthis:\n  p = [:a + c, 2 * b, c - a:]\n\ngoal (1 subgoal):\n 1. periodic_set (roots f \\<inter> {x. cos (x / 2) \\<noteq> 0}) (4 * pi)", "have \"poly p (tan (x/2)) = 0 \\<longleftrightarrow> f x=0\" when \"cos (x/2) \\<noteq>0\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. (poly p (tan (x / 2)) = 0) = (f x = 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (poly p (tan (x / 2)) = 0) = (f x = 0)", "define t where \"t=tan (x/2)\""], ["proof (state)\nthis:\n  t = tan (x / 2)\n\ngoal (1 subgoal):\n 1. (poly p (tan (x / 2)) = 0) = (f x = 0)", "define tt where \"tt = 1+t^2\""], ["proof (state)\nthis:\n  tt = 1 + t\\<^sup>2\n\ngoal (1 subgoal):\n 1. (poly p (tan (x / 2)) = 0) = (f x = 0)", "have \"cos x = (1-t^2) / tt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos x = (1 - t\\<^sup>2) / tt", "unfolding tt_def t_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. cos x = (1 - (tan (x / 2))\\<^sup>2) / (1 + (tan (x / 2))\\<^sup>2)", "using cos_tan_half[OF that,simplified]"], ["proof (prove)\nusing this:\n  cos x = (1 - (tan (x / 2))\\<^sup>2) / (1 + (tan (x / 2))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. cos x = (1 - (tan (x / 2))\\<^sup>2) / (1 + (tan (x / 2))\\<^sup>2)", "by simp"], ["proof (state)\nthis:\n  cos x = (1 - t\\<^sup>2) / tt\n\ngoal (1 subgoal):\n 1. (poly p (tan (x / 2)) = 0) = (f x = 0)", "moreover"], ["proof (state)\nthis:\n  cos x = (1 - t\\<^sup>2) / tt\n\ngoal (1 subgoal):\n 1. (poly p (tan (x / 2)) = 0) = (f x = 0)", "have \"sin x = 2*t / tt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sin x = 2 * t / tt", "unfolding tt_def t_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sin x = 2 * tan (x / 2) / (1 + (tan (x / 2))\\<^sup>2)", "using sin_tan_half[of \"x/2\",simplified]"], ["proof (prove)\nusing this:\n  sin x = 2 * tan (x / 2) / (1 + (tan (x / 2))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. sin x = 2 * tan (x / 2) / (1 + (tan (x / 2))\\<^sup>2)", "by simp"], ["proof (state)\nthis:\n  sin x = 2 * t / tt\n\ngoal (1 subgoal):\n 1. (poly p (tan (x / 2)) = 0) = (f x = 0)", "moreover"], ["proof (state)\nthis:\n  sin x = 2 * t / tt\n\ngoal (1 subgoal):\n 1. (poly p (tan (x / 2)) = 0) = (f x = 0)", "have \"tt\\<noteq>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tt \\<noteq> 0", "unfolding tt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + t\\<^sup>2 \\<noteq> 0", "by (metis power_one sum_power2_eq_zero_iff zero_neq_one)"], ["proof (state)\nthis:\n  tt \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (poly p (tan (x / 2)) = 0) = (f x = 0)", "ultimately"], ["proof (chain)\npicking this:\n  cos x = (1 - t\\<^sup>2) / tt\n  sin x = 2 * t / tt\n  tt \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  cos x = (1 - t\\<^sup>2) / tt\n  sin x = 2 * t / tt\n  tt \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (poly p (tan (x / 2)) = 0) = (f x = 0)", "unfolding f_def p_def"], ["proof (prove)\nusing this:\n  cos x = (1 - t\\<^sup>2) / tt\n  sin x = 2 * t / tt\n  tt \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (poly [:a + c, 2 * b, c - a:] (tan (x / 2)) = 0) =\n    (a * cos x + b * sin x + c = 0)", "apply (fold t_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>cos x = (1 - t\\<^sup>2) / tt; sin x = 2 * t / tt;\n     tt \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (poly [:a + c, 2 * b, c - a:] t = 0) =\n                      (a * cos x + b * sin x + c = 0)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>cos x = (1 - t\\<^sup>2) / tt; sin x = 2 * t / tt;\n     tt \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (a + c + t * (2 * b + t * (c - a)) = 0) =\n                      (a * (1 - t\\<^sup>2) / tt + b * (2 * t) / tt + c = 0)", "apply (auto simp add:field_simps)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>tt * cos x + t\\<^sup>2 = 1; tt * sin x = t * 2; tt \\<noteq> 0;\n     a + (c + (c * (t * t) + b * (t * 2))) = a * (t * t)\\<rbrakk>\n    \\<Longrightarrow> a + (c * tt + b * (t * 2)) = a * t\\<^sup>2\n 2. \\<lbrakk>tt * cos x + t\\<^sup>2 = 1; tt * sin x = t * 2; tt \\<noteq> 0;\n     a + (c * tt + b * (t * 2)) = a * t\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> a + (c + (c * (t * t) + b * (t * 2))) = a * (t * t)", "by (auto simp add:algebra_simps tt_def power2_eq_square)"], ["proof (state)\nthis:\n  (poly p (tan (x / 2)) = 0) = (f x = 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cos (?x / 2) \\<noteq> 0 \\<Longrightarrow>\n  (poly p (tan (?x / 2)) = 0) = (f ?x = 0)\n\ngoal (1 subgoal):\n 1. periodic_set (roots f \\<inter> {x. cos (x / 2) \\<noteq> 0}) (4 * pi)", "then"], ["proof (chain)\npicking this:\n  cos (?x / 2) \\<noteq> 0 \\<Longrightarrow>\n  (poly p (tan (?x / 2)) = 0) = (f ?x = 0)", "have \"roots f \\<inter> {x. cos (x/2) \\<noteq> 0} = roots (\\<lambda>x. poly p (tan (x/2))) \\<inter> {x. cos (x/2) \\<noteq> 0}\""], ["proof (prove)\nusing this:\n  cos (?x / 2) \\<noteq> 0 \\<Longrightarrow>\n  (poly p (tan (?x / 2)) = 0) = (f ?x = 0)\n\ngoal (1 subgoal):\n 1. roots f \\<inter> {x. cos (x / 2) \\<noteq> 0} =\n    roots (\\<lambda>x. poly p (tan (x / 2))) \\<inter>\n    {x. cos (x / 2) \\<noteq> 0}", "unfolding roots_within_def"], ["proof (prove)\nusing this:\n  cos (?x / 2) \\<noteq> 0 \\<Longrightarrow>\n  (poly p (tan (?x / 2)) = 0) = (f ?x = 0)\n\ngoal (1 subgoal):\n 1. {x \\<in> UNIV. f x = 0} \\<inter> {x. cos (x / 2) \\<noteq> 0} =\n    {x \\<in> UNIV. poly p (tan (x / 2)) = 0} \\<inter>\n    {x. cos (x / 2) \\<noteq> 0}", "by auto"], ["proof (state)\nthis:\n  roots f \\<inter> {x. cos (x / 2) \\<noteq> 0} =\n  roots (\\<lambda>x. poly p (tan (x / 2))) \\<inter>\n  {x. cos (x / 2) \\<noteq> 0}\n\ngoal (1 subgoal):\n 1. periodic_set (roots f \\<inter> {x. cos (x / 2) \\<noteq> 0}) (4 * pi)", "moreover"], ["proof (state)\nthis:\n  roots f \\<inter> {x. cos (x / 2) \\<noteq> 0} =\n  roots (\\<lambda>x. poly p (tan (x / 2))) \\<inter>\n  {x. cos (x / 2) \\<noteq> 0}\n\ngoal (1 subgoal):\n 1. periodic_set (roots f \\<inter> {x. cos (x / 2) \\<noteq> 0}) (4 * pi)", "have \"periodic_set (roots (\\<lambda>x. poly p (tan (x/2))) \\<inter> {x. cos (x/2) \\<noteq> 0}) (4*pi)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. periodic_set\n     (roots (\\<lambda>x. poly p (tan (x / 2))) \\<inter>\n      {x. cos (x / 2) \\<noteq> 0})\n     (4 * pi)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. periodic_set\n     (roots (\\<lambda>x. poly p (tan (x / 2))) \\<inter>\n      {x. cos (x / 2) \\<noteq> 0})\n     (4 * pi)", "have \"p\\<noteq>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<noteq> 0", "unfolding p_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. [:a + c, 2 * b, c - a:] \\<noteq> 0", "using assms"], ["proof (prove)\nusing this:\n  a \\<noteq> 0 \\<or> b \\<noteq> 0 \\<or> c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. [:a + c, 2 * b, c - a:] \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. periodic_set\n     (roots (\\<lambda>x. poly p (tan (x / 2))) \\<inter>\n      {x. cos (x / 2) \\<noteq> 0})\n     (4 * pi)", "then"], ["proof (chain)\npicking this:\n  p \\<noteq> 0", "have \"periodic_set (roots (\\<lambda>x. poly p (tan (x/2)))) (4*pi)\""], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. periodic_set (roots (\\<lambda>x. poly p (tan (x / 2)))) (4 * pi)", "using periodic_set_tan_poly[of p 2,simplified]\n          periodic_set_multiple[of 2 _ \"2*pi\",simplified]"], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n  p \\<noteq> 0 \\<Longrightarrow>\n  periodic_set (roots (\\<lambda>x. poly p (tan (x / 2)))) (2 * pi)\n  periodic_set ?S (2 * pi) = periodic_set ?S (4 * pi)\n\ngoal (1 subgoal):\n 1. periodic_set (roots (\\<lambda>x. poly p (tan (x / 2)))) (4 * pi)", "by auto"], ["proof (state)\nthis:\n  periodic_set (roots (\\<lambda>x. poly p (tan (x / 2)))) (4 * pi)\n\ngoal (1 subgoal):\n 1. periodic_set\n     (roots (\\<lambda>x. poly p (tan (x / 2))) \\<inter>\n      {x. cos (x / 2) \\<noteq> 0})\n     (4 * pi)", "then"], ["proof (chain)\npicking this:\n  periodic_set (roots (\\<lambda>x. poly p (tan (x / 2)))) (4 * pi)", "show ?thesis"], ["proof (prove)\nusing this:\n  periodic_set (roots (\\<lambda>x. poly p (tan (x / 2)))) (4 * pi)\n\ngoal (1 subgoal):\n 1. periodic_set\n     (roots (\\<lambda>x. poly p (tan (x / 2))) \\<inter>\n      {x. cos (x / 2) \\<noteq> 0})\n     (4 * pi)", "by auto"], ["proof (state)\nthis:\n  periodic_set\n   (roots (\\<lambda>x. poly p (tan (x / 2))) \\<inter>\n    {x. cos (x / 2) \\<noteq> 0})\n   (4 * pi)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  periodic_set\n   (roots (\\<lambda>x. poly p (tan (x / 2))) \\<inter>\n    {x. cos (x / 2) \\<noteq> 0})\n   (4 * pi)\n\ngoal (1 subgoal):\n 1. periodic_set (roots f \\<inter> {x. cos (x / 2) \\<noteq> 0}) (4 * pi)", "ultimately"], ["proof (chain)\npicking this:\n  roots f \\<inter> {x. cos (x / 2) \\<noteq> 0} =\n  roots (\\<lambda>x. poly p (tan (x / 2))) \\<inter>\n  {x. cos (x / 2) \\<noteq> 0}\n  periodic_set\n   (roots (\\<lambda>x. poly p (tan (x / 2))) \\<inter>\n    {x. cos (x / 2) \\<noteq> 0})\n   (4 * pi)", "show ?thesis"], ["proof (prove)\nusing this:\n  roots f \\<inter> {x. cos (x / 2) \\<noteq> 0} =\n  roots (\\<lambda>x. poly p (tan (x / 2))) \\<inter>\n  {x. cos (x / 2) \\<noteq> 0}\n  periodic_set\n   (roots (\\<lambda>x. poly p (tan (x / 2))) \\<inter>\n    {x. cos (x / 2) \\<noteq> 0})\n   (4 * pi)\n\ngoal (1 subgoal):\n 1. periodic_set (roots f \\<inter> {x. cos (x / 2) \\<noteq> 0}) (4 * pi)", "by auto"], ["proof (state)\nthis:\n  periodic_set (roots f \\<inter> {x. cos (x / 2) \\<noteq> 0}) (4 * pi)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  periodic_set (roots f \\<inter> {x. cos (x / 2) \\<noteq> 0}) (4 * pi)\n\ngoal (1 subgoal):\n 1. periodic_set (roots (\\<lambda>x. a * cos x + b * sin x + c)) (4 * pi)", "ultimately"], ["proof (chain)\npicking this:\n  roots f =\n  roots f \\<inter> {x. cos (x / 2) = 0} \\<union>\n  roots f \\<inter> {x. cos (x / 2) \\<noteq> 0}\n  periodic_set (roots f \\<inter> {x. cos (x / 2) = 0}) (4 * pi)\n  periodic_set (roots f \\<inter> {x. cos (x / 2) \\<noteq> 0}) (4 * pi)", "show \"periodic_set (roots f) (4*pi)\""], ["proof (prove)\nusing this:\n  roots f =\n  roots f \\<inter> {x. cos (x / 2) = 0} \\<union>\n  roots f \\<inter> {x. cos (x / 2) \\<noteq> 0}\n  periodic_set (roots f \\<inter> {x. cos (x / 2) = 0}) (4 * pi)\n  periodic_set (roots f \\<inter> {x. cos (x / 2) \\<noteq> 0}) (4 * pi)\n\ngoal (1 subgoal):\n 1. periodic_set (roots f) (4 * pi)", "using periodic_set_union"], ["proof (prove)\nusing this:\n  roots f =\n  roots f \\<inter> {x. cos (x / 2) = 0} \\<union>\n  roots f \\<inter> {x. cos (x / 2) \\<noteq> 0}\n  periodic_set (roots f \\<inter> {x. cos (x / 2) = 0}) (4 * pi)\n  periodic_set (roots f \\<inter> {x. cos (x / 2) \\<noteq> 0}) (4 * pi)\n  \\<lbrakk>periodic_set ?S ?\\<delta>; periodic_set ?T ?\\<delta>\\<rbrakk>\n  \\<Longrightarrow> periodic_set (?S \\<union> ?T) ?\\<delta>\n\ngoal (1 subgoal):\n 1. periodic_set (roots f) (4 * pi)", "by metis"], ["proof (state)\nthis:\n  periodic_set (roots f) (4 * pi)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}