{"file_name": "/home/qj213/afp-2021-10-22/thys/Menger/Helpers.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Menger", "problem_names": ["lemma card_finite_less_ex:\n  assumes finite_A: \"finite A\"\n      and finite_B: \"finite B\"\n      and card_AB: \"card A < card B\"\n  shows \"\\<exists>b \\<in> B. b \\<notin> A\"", "lemma card_intersect_sum_disjoint:\n  assumes \"finite B\" \"finite C\" \"A = B \\<union> C\" \"B \\<inter> C = {}\"\n    shows \"card (A \\<inter> X) = card (B \\<inter> X) + card (C \\<inter> X)\"", "lemma set_butlast: \"\\<lbrakk> x \\<in> set xs; x \\<noteq> last xs \\<rbrakk> \\<Longrightarrow> x \\<in> set (butlast xs)\"", "lemma arg_min_ex:\n  fixes P :: \"'a \\<Rightarrow> bool\" and weight :: \"'a \\<Rightarrow> nat\"\n  assumes \"\\<exists>x. P x\"\n  obtains x where \"P x\" \"\\<And>y. P y \\<Longrightarrow> weight x \\<le> weight y\""], "translations": [["", "lemma card_finite_less_ex:\n  assumes finite_A: \"finite A\"\n      and finite_B: \"finite B\"\n      and card_AB: \"card A < card B\"\n  shows \"\\<exists>b \\<in> B. b \\<notin> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. b \\<notin> A", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. b \\<notin> A", "have \"card (B - A) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < card (B - A)", "using finite_A finite_B card_AB"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n  card A < card B\n\ngoal (1 subgoal):\n 1. 0 < card (B - A)", "by (meson Diff_eq_empty_iff card_eq_0_iff card_mono finite_Diff gr0I leD)"], ["proof (state)\nthis:\n  0 < card (B - A)\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. b \\<notin> A", "then"], ["proof (chain)\npicking this:\n  0 < card (B - A)", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < card (B - A)\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. b \\<notin> A", "using finite_B"], ["proof (prove)\nusing this:\n  0 < card (B - A)\n  finite B\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. b \\<notin> A", "by (metis Diff_eq_empty_iff card_0_eq finite_Diff neq_iff subsetI)"], ["proof (state)\nthis:\n  \\<exists>b\\<in>B. b \\<notin> A\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  The cardinality of the union of two disjoint finite sets is the sum of their cardinalities\n  even if we intersect everything with a fixed set @{term X}.\n\\<close>"], ["", "lemma card_intersect_sum_disjoint:\n  assumes \"finite B\" \"finite C\" \"A = B \\<union> C\" \"B \\<inter> C = {}\"\n    shows \"card (A \\<inter> X) = card (B \\<inter> X) + card (C \\<inter> X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (A \\<inter> X) = card (B \\<inter> X) + card (C \\<inter> X)", "by (metis (no_types, lifting) Un_Diff_Int assms card_Un_disjoint finite_Int inf.commute\n      inf_sup_distrib2 sup_eq_bot_iff)"], ["", "text \\<open>\n  If @{term x} is in a list @{term xs} but is not its last element, then it is also in\n  @{term \"butlast xs\"}.\n\\<close>"], ["", "lemma set_butlast: \"\\<lbrakk> x \\<in> set xs; x \\<noteq> last xs \\<rbrakk> \\<Longrightarrow> x \\<in> set (butlast xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> set xs; x \\<noteq> last xs\\<rbrakk>\n    \\<Longrightarrow> x \\<in> set (butlast xs)", "by (metis butlast.simps(2) in_set_butlast_appendI last.simps last_appendR\n      list.set_intros(1) split_list_first)"], ["", "text \\<open>\n  If a property @{term P} is satisfiable and if we have a weight measure mapping into the natural\n  numbers, then there exists an element of minimum weight satisfying @{term P} because the\n  natural numbers are well-ordered.\n\\<close>"], ["", "lemma arg_min_ex:\n  fixes P :: \"'a \\<Rightarrow> bool\" and weight :: \"'a \\<Rightarrow> nat\"\n  assumes \"\\<exists>x. P x\"\n  obtains x where \"P x\" \"\\<And>y. P y \\<Longrightarrow> weight x \\<le> weight y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>P x;\n         \\<And>y. P y \\<Longrightarrow> weight x \\<le> weight y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (cases \"\\<exists>x. P x \\<and> weight x = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>x.\n                \\<lbrakk>P x;\n                 \\<And>y.\n                    P y \\<Longrightarrow> weight x \\<le> weight y\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<exists>x. P x \\<and> weight x = 0\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>x.\n                \\<lbrakk>P x;\n                 \\<And>y.\n                    P y \\<Longrightarrow> weight x \\<le> weight y\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<nexists>x. P x \\<and> weight x = 0\\<rbrakk>\n    \\<Longrightarrow> thesis", "case True"], ["proof (state)\nthis:\n  \\<exists>x. P x \\<and> weight x = 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>x.\n                \\<lbrakk>P x;\n                 \\<And>y.\n                    P y \\<Longrightarrow> weight x \\<le> weight y\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<exists>x. P x \\<and> weight x = 0\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>x.\n                \\<lbrakk>P x;\n                 \\<And>y.\n                    P y \\<Longrightarrow> weight x \\<le> weight y\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<nexists>x. P x \\<and> weight x = 0\\<rbrakk>\n    \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  \\<exists>x. P x \\<and> weight x = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>x. P x \\<and> weight x = 0\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  \\<exists>x. P x \\<and> weight x = 0\n  \\<lbrakk>P ?x;\n   \\<And>y. P y \\<Longrightarrow> weight ?x \\<le> weight y\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x.\n                \\<lbrakk>P x;\n                 \\<And>y.\n                    P y \\<Longrightarrow> weight x \\<le> weight y\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<nexists>x. P x \\<and> weight x = 0\\<rbrakk>\n    \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x.\n                \\<lbrakk>P x;\n                 \\<And>y.\n                    P y \\<Longrightarrow> weight x \\<le> weight y\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<nexists>x. P x \\<and> weight x = 0\\<rbrakk>\n    \\<Longrightarrow> thesis", "case False"], ["proof (state)\nthis:\n  \\<nexists>x. P x \\<and> weight x = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x.\n                \\<lbrakk>P x;\n                 \\<And>y.\n                    P y \\<Longrightarrow> weight x \\<le> weight y\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<nexists>x. P x \\<and> weight x = 0\\<rbrakk>\n    \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  \\<nexists>x. P x \\<and> weight x = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<nexists>x. P x \\<and> weight x = 0\n\ngoal (1 subgoal):\n 1. thesis", "using that ex_least_nat_le[of \"\\<lambda>n. \\<exists>x. P x \\<and> weight x = n\"] assms"], ["proof (prove)\nusing this:\n  \\<nexists>x. P x \\<and> weight x = 0\n  \\<lbrakk>P ?x;\n   \\<And>y. P y \\<Longrightarrow> weight ?x \\<le> weight y\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>\\<exists>x. P x \\<and> weight x = ?n;\n   \\<nexists>x. P x \\<and> weight x = 0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>k\\<le>?n.\n                       (\\<forall>i<k.\n                           \\<nexists>x. P x \\<and> weight x = i) \\<and>\n                       (\\<exists>x. P x \\<and> weight x = k)\n  \\<exists>x. P x\n\ngoal (1 subgoal):\n 1. thesis", "by (metis not_le_imp_less)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}