{"file_name": "/home/qj213/afp-2021-10-22/thys/DataRefinementIBP/Diagram.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/DataRefinementIBP", "problem_names": ["lemma dmono_mono [simp]: \"dmono D \\<Longrightarrow> mono (D ij)\"", "theorem mono_step [simp]:\n  \"dmono D \\<Longrightarrow> mono (step D)\"", "theorem mono_mono_dgr [simp]: \"dmono D \\<Longrightarrow> mono_mono (dgr D)\"", "theorem hoare_step:\n  \"(\\<forall> i j . \\<Turnstile> (P i) {| D(i,j) |} (Q j) ) = (\\<Turnstile> P {| step D |} Q)\"", "theorem hoare_diagram:\n  \"dmono D \\<Longrightarrow> (\\<forall> w i j . \\<Turnstile> X w i  {| D(i,j) |} Sup_less X w j) \\<Longrightarrow> \n    \\<Turnstile> (Sup (range X)) {| pt D |} (Sup(range X) \\<sqinter> -(grd (step D)))\"", "lemma SUP_L_P_upper:\n  \"pair v i < u \\<Longrightarrow> P v i \\<le> SUP_L_P P u i\"", "lemma SUP_L_P_least:\n  \"(!! v . pair v i < u \\<Longrightarrow> P v i \\<le> Q) \\<Longrightarrow> SUP_L_P P u i \\<le> Q\"", "lemma SUP_LE_P_upper:\n  \"pair v i \\<le> u \\<Longrightarrow> P v i \\<le> SUP_LE_P P u i\"", "lemma SUP_LE_P_least:\n  \"(!! v . pair v i \\<le> u \\<Longrightarrow> P v i \\<le> Q) \\<Longrightarrow> SUP_LE_P P u i \\<le> Q\"", "lemma SUP_SUP_L [simp]: \"Sup (range (SUP_LE_P X)) = Sup (range X)\"", "lemma SUP_L_SUP_LE_P [simp]: \"Sup_less (SUP_LE_P X) = SUP_L_P X\"", "theorem (in DiagramTermination) hoare_diagram2:\n  \"dmono D \\<Longrightarrow> (\\<forall> u i j . \\<Turnstile> X u i  {| D(i, j) |} SUP_L_P X (pair u i) j) \\<Longrightarrow> \n    \\<Turnstile> (Sup (range X)) {| pt D |} ((Sup (range  X)) \\<sqinter> (-(grd (step D))))\"", "lemma mono_pt [simp]: \"dmono D \\<Longrightarrow> mono (pt D)\"", "theorem (in DiagramTermination) hoare_diagram3:\n  \"dmono D \\<Longrightarrow> \n     (\\<forall> u i j . \\<Turnstile> X u i  {| D(i, j) |} SUP_L_P X (pair u i) j) \\<Longrightarrow> \n      P \\<le> Sup (range X) \\<Longrightarrow>  ((Sup (range X)) \\<sqinter> (-(grd (step D)))) \\<le> Q \\<Longrightarrow>\n      \\<Turnstile> P {| pt D |} Q\"", "theorem (in DiagramTermination) hoare_dgr_correctness: \n  \"dmono D \\<Longrightarrow> (\\<turnstile> P {| D |} Q) \\<Longrightarrow> (\\<Turnstile> P {| pt D |} Q)\"", "theorem  (in DiagramTermination) hoare_dgr_correctness1:\n  \"dmono D \\<Longrightarrow> (\\<turnstile>1 P {| D |} Q) \\<Longrightarrow> (\\<Turnstile> P {| pt D |} Q)\"", "theorem dgr_demonic_mono[simp]:\n  \"dmono (dgr_demonic Q)\"", "lemma  grd_dgr:\n  \"((grd (step D) i)::('a::complete_boolean_algebra)) = \\<Squnion> {P . \\<exists> j . P = grd (D(i,j))}\"", "lemma  grd_dgr_set:\n  \"((grd (step D) i)::('a set)) = Union {P . \\<exists> j . P = grd (D(i,j))}\"", "lemma not_grd_dgr [simp]: \"(a \\<in> (- grd (step D) i)) = (\\<forall> j . a \\<notin> grd (D(i,j)))\"", "lemma not_grd_dgr2 [simp]: \"a \\<notin> (grd (step D) i) = (\\<forall> j . a \\<notin> grd (D(i,j)))\""], "translations": [["", "lemma dmono_mono [simp]: \"dmono D \\<Longrightarrow> mono (D ij)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dmono D \\<Longrightarrow> mono (D ij)", "by (simp add: dmono_def)"], ["", "theorem mono_step [simp]:\n  \"dmono D \\<Longrightarrow> mono (step D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dmono D \\<Longrightarrow> mono (step D)", "apply (simp add: dmono_def mono_def le_fun_def step_def Inf_fun_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a b x y.\n       x \\<sqsubseteq> y \\<longrightarrow>\n       D (a, b) x \\<sqsubseteq> D (a, b) y \\<Longrightarrow>\n    \\<forall>x y.\n       (\\<forall>xa. x xa \\<sqsubseteq> y xa) \\<longrightarrow>\n       (\\<forall>xa.\n           (INF j. D (xa, j) (x j)) \\<sqsubseteq> (INF j. D (xa, j) (y j)))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y xa.\n       \\<lbrakk>\\<forall>a b x y.\n                   x \\<sqsubseteq> y \\<longrightarrow>\n                   D (a, b) x \\<sqsubseteq> D (a, b) y;\n        \\<forall>xa. x xa \\<sqsubseteq> y xa\\<rbrakk>\n       \\<Longrightarrow> (INF j. D (xa, j) (x j)) \\<sqsubseteq>\n                         (INF j. D (xa, j) (y j))", "apply (rule INF_greatest)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y xa j.\n       \\<lbrakk>\\<forall>a b x y.\n                   x \\<sqsubseteq> y \\<longrightarrow>\n                   D (a, b) x \\<sqsubseteq> D (a, b) y;\n        \\<forall>xa. x xa \\<sqsubseteq> y xa; j \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (INF j. D (xa, j) (x j)) \\<sqsubseteq>\n                         D (xa, j) (y j)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y xa j.\n       \\<lbrakk>\\<forall>a b x y.\n                   x \\<sqsubseteq> y \\<longrightarrow>\n                   D (a, b) x \\<sqsubseteq> D (a, b) y;\n        \\<forall>xa. x xa \\<sqsubseteq> y xa\\<rbrakk>\n       \\<Longrightarrow> (INF j. D (xa, j) (x j)) \\<sqsubseteq>\n                         D (xa, j) (y j)", "apply (rule_tac y = \"D(xa, j) (x j)\" in order_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y xa j.\n       \\<lbrakk>\\<forall>a b x y.\n                   x \\<sqsubseteq> y \\<longrightarrow>\n                   D (a, b) x \\<sqsubseteq> D (a, b) y;\n        \\<forall>xa. x xa \\<sqsubseteq> y xa\\<rbrakk>\n       \\<Longrightarrow> (INF j. D (xa, j) (x j)) \\<sqsubseteq>\n                         D (xa, j) (x j)\n 2. \\<And>x y xa j.\n       \\<lbrakk>\\<forall>a b x y.\n                   x \\<sqsubseteq> y \\<longrightarrow>\n                   D (a, b) x \\<sqsubseteq> D (a, b) y;\n        \\<forall>xa. x xa \\<sqsubseteq> y xa\\<rbrakk>\n       \\<Longrightarrow> D (xa, j) (x j) \\<sqsubseteq> D (xa, j) (y j)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y xa j.\n       \\<lbrakk>\\<forall>a b x y.\n                   x \\<sqsubseteq> y \\<longrightarrow>\n                   D (a, b) x \\<sqsubseteq> D (a, b) y;\n        \\<forall>xa. x xa \\<sqsubseteq> y xa\\<rbrakk>\n       \\<Longrightarrow> (INF j. D (xa, j) (x j)) \\<sqsubseteq>\n                         D (xa, j) (x j)", "apply (rule INF_lower)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y xa j.\n       \\<lbrakk>\\<forall>a b x y.\n                   x \\<sqsubseteq> y \\<longrightarrow>\n                   D (a, b) x \\<sqsubseteq> D (a, b) y;\n        \\<forall>xa. x xa \\<sqsubseteq> y xa\\<rbrakk>\n       \\<Longrightarrow> j \\<in> UNIV", "by auto"], ["", "text \\<open>\nThe indexed predicate transformer of a transition diagram is defined as the least\nfixpoint of the unfolding of the execution of the diagram. The indexed predicate\ntransformer $dgr\\ D\\ U$ is the choice between executing one step of $D$ follwed by\n$U$ ($(\\mathit{step}\\ D)\\circ U$) or skip if no transion of $D$ is enabled \n($\\mathit{assume}\\ \\neg \\mathit{grd} (\\mathit{step}\\ D)$).\n\\<close>"], ["", "definition\n  \"dgr D U = ((step D) o U) \\<sqinter> [.-(grd (step D)).]\""], ["", "theorem mono_mono_dgr [simp]: \"dmono D \\<Longrightarrow> mono_mono (dgr D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dmono D \\<Longrightarrow> mono_mono (dgr D)", "apply (simp add: mono_mono_def mono_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. dmono D \\<Longrightarrow>\n    (\\<forall>x y.\n        x \\<sqsubseteq> y \\<longrightarrow>\n        dgr D x \\<sqsubseteq> dgr D y) \\<and>\n    (\\<forall>f.\n        (\\<forall>x y.\n            x \\<sqsubseteq> y \\<longrightarrow>\n            f x \\<sqsubseteq> f y) \\<longrightarrow>\n        (\\<forall>x y.\n            x \\<sqsubseteq> y \\<longrightarrow>\n            dgr D f x \\<sqsubseteq> dgr D f y))", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>dmono D; x \\<sqsubseteq> y\\<rbrakk>\n       \\<Longrightarrow> dgr D x \\<sqsubseteq> dgr D y\n 2. \\<And>f x y.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           x \\<sqsubseteq> y \\<longrightarrow> f x \\<sqsubseteq> f y;\n        x \\<sqsubseteq> y\\<rbrakk>\n       \\<Longrightarrow> dgr D f x \\<sqsubseteq> dgr D f y", "apply (simp_all add: dgr_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>dmono D; x \\<sqsubseteq> y\\<rbrakk>\n       \\<Longrightarrow> (step D \\<circ> x) \\<sqinter>\n                         [. - grd (step D) .] \\<sqsubseteq>\n                         step D \\<circ> y\n 2. \\<And>f x y.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           x \\<sqsubseteq> y \\<longrightarrow> f x \\<sqsubseteq> f y;\n        x \\<sqsubseteq> y\\<rbrakk>\n       \\<Longrightarrow> step D (f x) \\<sqinter>\n                         [. - grd (step D) .] x \\<sqsubseteq>\n                         step D (f y) \\<and>\n                         step D (f x) \\<sqinter>\n                         [. - grd (step D) .] x \\<sqsubseteq>\n                         [. - grd (step D) .] y", "apply (simp_all add: le_fun_def inf_fun_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>dmono D;\n        \\<forall>xa xb. x xa xb \\<sqsubseteq> y xa xb\\<rbrakk>\n       \\<Longrightarrow> \\<forall>xa xb.\n                            step D (x xa) xb \\<sqinter>\n                            [. - grd (step D) .] xa xb \\<sqsubseteq>\n                            step D (y xa) xb\n 2. \\<And>f x y.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           (\\<forall>xa. x xa \\<sqsubseteq> y xa) \\<longrightarrow>\n           (\\<forall>xa. f x xa \\<sqsubseteq> f y xa);\n        \\<forall>xa. x xa \\<sqsubseteq> y xa\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>xa.\n                             step D (f x) xa \\<sqinter>\n                             [. - grd (step D) .] x xa \\<sqsubseteq>\n                             step D (f y) xa) \\<and>\n                         (\\<forall>xa.\n                             step D (f x) xa \\<sqinter>\n                             [. - grd (step D) .] x xa \\<sqsubseteq>\n                             [. - grd (step D) .] y xa)", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x y xa xb.\n       \\<lbrakk>dmono D;\n        \\<forall>xa xb. x xa xb \\<sqsubseteq> y xa xb\\<rbrakk>\n       \\<Longrightarrow> step D (x xa) xb \\<sqinter>\n                         [. - grd (step D) .] xa xb \\<sqsubseteq>\n                         step D (y xa) xb\n 2. \\<And>f x y xa.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           (\\<forall>xa. x xa \\<sqsubseteq> y xa) \\<longrightarrow>\n           (\\<forall>xa. f x xa \\<sqsubseteq> f y xa);\n        \\<forall>xa. x xa \\<sqsubseteq> y xa\\<rbrakk>\n       \\<Longrightarrow> step D (f x) xa \\<sqinter>\n                         [. - grd (step D) .] x xa \\<sqsubseteq>\n                         step D (f y) xa\n 3. \\<And>f x y xa.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           (\\<forall>xa. x xa \\<sqsubseteq> y xa) \\<longrightarrow>\n           (\\<forall>xa. f x xa \\<sqsubseteq> f y xa);\n        \\<forall>xa. x xa \\<sqsubseteq> y xa\\<rbrakk>\n       \\<Longrightarrow> step D (f x) xa \\<sqinter>\n                         [. - grd (step D) .] x xa \\<sqsubseteq>\n                         [. - grd (step D) .] y xa", "apply (rule_tac y = \"(step D (x xa) xb)\" in order_trans)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x y xa xb.\n       \\<lbrakk>dmono D;\n        \\<forall>xa xb. x xa xb \\<sqsubseteq> y xa xb\\<rbrakk>\n       \\<Longrightarrow> step D (x xa) xb \\<sqinter>\n                         [. - grd (step D) .] xa xb \\<sqsubseteq>\n                         step D (x xa) xb\n 2. \\<And>x y xa xb.\n       \\<lbrakk>dmono D;\n        \\<forall>xa xb. x xa xb \\<sqsubseteq> y xa xb\\<rbrakk>\n       \\<Longrightarrow> step D (x xa) xb \\<sqsubseteq> step D (y xa) xb\n 3. \\<And>f x y xa.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           (\\<forall>xa. x xa \\<sqsubseteq> y xa) \\<longrightarrow>\n           (\\<forall>xa. f x xa \\<sqsubseteq> f y xa);\n        \\<forall>xa. x xa \\<sqsubseteq> y xa\\<rbrakk>\n       \\<Longrightarrow> step D (f x) xa \\<sqinter>\n                         [. - grd (step D) .] x xa \\<sqsubseteq>\n                         step D (f y) xa\n 4. \\<And>f x y xa.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           (\\<forall>xa. x xa \\<sqsubseteq> y xa) \\<longrightarrow>\n           (\\<forall>xa. f x xa \\<sqsubseteq> f y xa);\n        \\<forall>xa. x xa \\<sqsubseteq> y xa\\<rbrakk>\n       \\<Longrightarrow> step D (f x) xa \\<sqinter>\n                         [. - grd (step D) .] x xa \\<sqsubseteq>\n                         [. - grd (step D) .] y xa", "apply simp_all"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x y xa xb.\n       \\<lbrakk>dmono D;\n        \\<forall>xa xb. x xa xb \\<sqsubseteq> y xa xb\\<rbrakk>\n       \\<Longrightarrow> step D (x xa) xb \\<sqsubseteq> step D (y xa) xb\n 2. \\<And>f x y xa.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           (\\<forall>xa. x xa \\<sqsubseteq> y xa) \\<longrightarrow>\n           (\\<forall>xa. f x xa \\<sqsubseteq> f y xa);\n        \\<forall>xa. x xa \\<sqsubseteq> y xa\\<rbrakk>\n       \\<Longrightarrow> step D (f x) xa \\<sqinter>\n                         [. - grd (step D) .] x xa \\<sqsubseteq>\n                         step D (f y) xa\n 3. \\<And>f x y xa.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           (\\<forall>xa. x xa \\<sqsubseteq> y xa) \\<longrightarrow>\n           (\\<forall>xa. f x xa \\<sqsubseteq> f y xa);\n        \\<forall>xa. x xa \\<sqsubseteq> y xa\\<rbrakk>\n       \\<Longrightarrow> step D (f x) xa \\<sqinter>\n                         [. - grd (step D) .] x xa \\<sqsubseteq>\n                         [. - grd (step D) .] y xa", "apply (case_tac \"mono (step D)\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x y xa xb.\n       \\<lbrakk>dmono D; \\<forall>xa xb. x xa xb \\<sqsubseteq> y xa xb;\n        mono (step D)\\<rbrakk>\n       \\<Longrightarrow> step D (x xa) xb \\<sqsubseteq> step D (y xa) xb\n 2. \\<And>x y xa xb.\n       \\<lbrakk>dmono D; \\<forall>xa xb. x xa xb \\<sqsubseteq> y xa xb;\n        \\<not> mono (step D)\\<rbrakk>\n       \\<Longrightarrow> step D (x xa) xb \\<sqsubseteq> step D (y xa) xb\n 3. \\<And>f x y xa.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           (\\<forall>xa. x xa \\<sqsubseteq> y xa) \\<longrightarrow>\n           (\\<forall>xa. f x xa \\<sqsubseteq> f y xa);\n        \\<forall>xa. x xa \\<sqsubseteq> y xa\\<rbrakk>\n       \\<Longrightarrow> step D (f x) xa \\<sqinter>\n                         [. - grd (step D) .] x xa \\<sqsubseteq>\n                         step D (f y) xa\n 4. \\<And>f x y xa.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           (\\<forall>xa. x xa \\<sqsubseteq> y xa) \\<longrightarrow>\n           (\\<forall>xa. f x xa \\<sqsubseteq> f y xa);\n        \\<forall>xa. x xa \\<sqsubseteq> y xa\\<rbrakk>\n       \\<Longrightarrow> step D (f x) xa \\<sqinter>\n                         [. - grd (step D) .] x xa \\<sqsubseteq>\n                         [. - grd (step D) .] y xa", "apply (simp add: mono_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x y xa xb.\n       \\<lbrakk>dmono D; \\<forall>xa xb. x xa xb \\<sqsubseteq> y xa xb;\n        \\<forall>x y.\n           x \\<sqsubseteq> y \\<longrightarrow>\n           step D x \\<sqsubseteq> step D y\\<rbrakk>\n       \\<Longrightarrow> step D (x xa) xb \\<sqsubseteq> step D (y xa) xb\n 2. \\<And>x y xa xb.\n       \\<lbrakk>dmono D; \\<forall>xa xb. x xa xb \\<sqsubseteq> y xa xb;\n        \\<not> mono (step D)\\<rbrakk>\n       \\<Longrightarrow> step D (x xa) xb \\<sqsubseteq> step D (y xa) xb\n 3. \\<And>f x y xa.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           (\\<forall>xa. x xa \\<sqsubseteq> y xa) \\<longrightarrow>\n           (\\<forall>xa. f x xa \\<sqsubseteq> f y xa);\n        \\<forall>xa. x xa \\<sqsubseteq> y xa\\<rbrakk>\n       \\<Longrightarrow> step D (f x) xa \\<sqinter>\n                         [. - grd (step D) .] x xa \\<sqsubseteq>\n                         step D (f y) xa\n 4. \\<And>f x y xa.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           (\\<forall>xa. x xa \\<sqsubseteq> y xa) \\<longrightarrow>\n           (\\<forall>xa. f x xa \\<sqsubseteq> f y xa);\n        \\<forall>xa. x xa \\<sqsubseteq> y xa\\<rbrakk>\n       \\<Longrightarrow> step D (f x) xa \\<sqinter>\n                         [. - grd (step D) .] x xa \\<sqsubseteq>\n                         [. - grd (step D) .] y xa", "apply (simp add: le_fun_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x y xa xb.\n       \\<lbrakk>dmono D; \\<forall>xa xb. x xa xb \\<sqsubseteq> y xa xb;\n        \\<not> mono (step D)\\<rbrakk>\n       \\<Longrightarrow> step D (x xa) xb \\<sqsubseteq> step D (y xa) xb\n 2. \\<And>f x y xa.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           (\\<forall>xa. x xa \\<sqsubseteq> y xa) \\<longrightarrow>\n           (\\<forall>xa. f x xa \\<sqsubseteq> f y xa);\n        \\<forall>xa. x xa \\<sqsubseteq> y xa\\<rbrakk>\n       \\<Longrightarrow> step D (f x) xa \\<sqinter>\n                         [. - grd (step D) .] x xa \\<sqsubseteq>\n                         step D (f y) xa\n 3. \\<And>f x y xa.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           (\\<forall>xa. x xa \\<sqsubseteq> y xa) \\<longrightarrow>\n           (\\<forall>xa. f x xa \\<sqsubseteq> f y xa);\n        \\<forall>xa. x xa \\<sqsubseteq> y xa\\<rbrakk>\n       \\<Longrightarrow> step D (f x) xa \\<sqinter>\n                         [. - grd (step D) .] x xa \\<sqsubseteq>\n                         [. - grd (step D) .] y xa", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f x y xa.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           (\\<forall>xa. x xa \\<sqsubseteq> y xa) \\<longrightarrow>\n           (\\<forall>xa. f x xa \\<sqsubseteq> f y xa);\n        \\<forall>xa. x xa \\<sqsubseteq> y xa\\<rbrakk>\n       \\<Longrightarrow> step D (f x) xa \\<sqinter>\n                         [. - grd (step D) .] x xa \\<sqsubseteq>\n                         step D (f y) xa\n 2. \\<And>f x y xa.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           (\\<forall>xa. x xa \\<sqsubseteq> y xa) \\<longrightarrow>\n           (\\<forall>xa. f x xa \\<sqsubseteq> f y xa);\n        \\<forall>xa. x xa \\<sqsubseteq> y xa\\<rbrakk>\n       \\<Longrightarrow> step D (f x) xa \\<sqinter>\n                         [. - grd (step D) .] x xa \\<sqsubseteq>\n                         [. - grd (step D) .] y xa", "apply (rule_tac y = \"(step D (f x) xa)\" in order_trans)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>f x y xa.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           (\\<forall>xa. x xa \\<sqsubseteq> y xa) \\<longrightarrow>\n           (\\<forall>xa. f x xa \\<sqsubseteq> f y xa);\n        \\<forall>xa. x xa \\<sqsubseteq> y xa\\<rbrakk>\n       \\<Longrightarrow> step D (f x) xa \\<sqinter>\n                         [. - grd (step D) .] x xa \\<sqsubseteq>\n                         step D (f x) xa\n 2. \\<And>f x y xa.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           (\\<forall>xa. x xa \\<sqsubseteq> y xa) \\<longrightarrow>\n           (\\<forall>xa. f x xa \\<sqsubseteq> f y xa);\n        \\<forall>xa. x xa \\<sqsubseteq> y xa\\<rbrakk>\n       \\<Longrightarrow> step D (f x) xa \\<sqsubseteq> step D (f y) xa\n 3. \\<And>f x y xa.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           (\\<forall>xa. x xa \\<sqsubseteq> y xa) \\<longrightarrow>\n           (\\<forall>xa. f x xa \\<sqsubseteq> f y xa);\n        \\<forall>xa. x xa \\<sqsubseteq> y xa\\<rbrakk>\n       \\<Longrightarrow> step D (f x) xa \\<sqinter>\n                         [. - grd (step D) .] x xa \\<sqsubseteq>\n                         [. - grd (step D) .] y xa", "apply simp_all"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f x y xa.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           (\\<forall>xa. x xa \\<sqsubseteq> y xa) \\<longrightarrow>\n           (\\<forall>xa. f x xa \\<sqsubseteq> f y xa);\n        \\<forall>xa. x xa \\<sqsubseteq> y xa\\<rbrakk>\n       \\<Longrightarrow> step D (f x) xa \\<sqsubseteq> step D (f y) xa\n 2. \\<And>f x y xa.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           (\\<forall>xa. x xa \\<sqsubseteq> y xa) \\<longrightarrow>\n           (\\<forall>xa. f x xa \\<sqsubseteq> f y xa);\n        \\<forall>xa. x xa \\<sqsubseteq> y xa\\<rbrakk>\n       \\<Longrightarrow> step D (f x) xa \\<sqinter>\n                         [. - grd (step D) .] x xa \\<sqsubseteq>\n                         [. - grd (step D) .] y xa", "apply (case_tac \"mono (step D)\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>f x y xa.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           (\\<forall>xa. x xa \\<sqsubseteq> y xa) \\<longrightarrow>\n           (\\<forall>xa. f x xa \\<sqsubseteq> f y xa);\n        \\<forall>xa. x xa \\<sqsubseteq> y xa; mono (step D)\\<rbrakk>\n       \\<Longrightarrow> step D (f x) xa \\<sqsubseteq> step D (f y) xa\n 2. \\<And>f x y xa.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           (\\<forall>xa. x xa \\<sqsubseteq> y xa) \\<longrightarrow>\n           (\\<forall>xa. f x xa \\<sqsubseteq> f y xa);\n        \\<forall>xa. x xa \\<sqsubseteq> y xa; \\<not> mono (step D)\\<rbrakk>\n       \\<Longrightarrow> step D (f x) xa \\<sqsubseteq> step D (f y) xa\n 3. \\<And>f x y xa.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           (\\<forall>xa. x xa \\<sqsubseteq> y xa) \\<longrightarrow>\n           (\\<forall>xa. f x xa \\<sqsubseteq> f y xa);\n        \\<forall>xa. x xa \\<sqsubseteq> y xa\\<rbrakk>\n       \\<Longrightarrow> step D (f x) xa \\<sqinter>\n                         [. - grd (step D) .] x xa \\<sqsubseteq>\n                         [. - grd (step D) .] y xa", "apply (simp add: mono_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>f x y xa.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           (\\<forall>xa. x xa \\<sqsubseteq> y xa) \\<longrightarrow>\n           (\\<forall>xa. f x xa \\<sqsubseteq> f y xa);\n        \\<forall>xa. x xa \\<sqsubseteq> y xa;\n        \\<forall>x y.\n           x \\<sqsubseteq> y \\<longrightarrow>\n           step D x \\<sqsubseteq> step D y\\<rbrakk>\n       \\<Longrightarrow> step D (f x) xa \\<sqsubseteq> step D (f y) xa\n 2. \\<And>f x y xa.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           (\\<forall>xa. x xa \\<sqsubseteq> y xa) \\<longrightarrow>\n           (\\<forall>xa. f x xa \\<sqsubseteq> f y xa);\n        \\<forall>xa. x xa \\<sqsubseteq> y xa; \\<not> mono (step D)\\<rbrakk>\n       \\<Longrightarrow> step D (f x) xa \\<sqsubseteq> step D (f y) xa\n 3. \\<And>f x y xa.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           (\\<forall>xa. x xa \\<sqsubseteq> y xa) \\<longrightarrow>\n           (\\<forall>xa. f x xa \\<sqsubseteq> f y xa);\n        \\<forall>xa. x xa \\<sqsubseteq> y xa\\<rbrakk>\n       \\<Longrightarrow> step D (f x) xa \\<sqinter>\n                         [. - grd (step D) .] x xa \\<sqsubseteq>\n                         [. - grd (step D) .] y xa", "apply (simp_all add: le_fun_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f x y xa.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           (\\<forall>xa. x xa \\<sqsubseteq> y xa) \\<longrightarrow>\n           (\\<forall>xa. f x xa \\<sqsubseteq> f y xa);\n        \\<forall>xa. x xa \\<sqsubseteq> y xa\\<rbrakk>\n       \\<Longrightarrow> step D (f x) xa \\<sqinter>\n                         [. - grd (step D) .] x xa \\<sqsubseteq>\n                         [. - grd (step D) .] y xa", "apply (rule_tac y = \"(assume (- grd (step D)) x xa)\" in order_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f x y xa.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           (\\<forall>xa. x xa \\<sqsubseteq> y xa) \\<longrightarrow>\n           (\\<forall>xa. f x xa \\<sqsubseteq> f y xa);\n        \\<forall>xa. x xa \\<sqsubseteq> y xa\\<rbrakk>\n       \\<Longrightarrow> step D (f x) xa \\<sqinter>\n                         [. - grd (step D) .] x xa \\<sqsubseteq>\n                         [. - grd (step D) .] x xa\n 2. \\<And>f x y xa.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           (\\<forall>xa. x xa \\<sqsubseteq> y xa) \\<longrightarrow>\n           (\\<forall>xa. f x xa \\<sqsubseteq> f y xa);\n        \\<forall>xa. x xa \\<sqsubseteq> y xa\\<rbrakk>\n       \\<Longrightarrow> [. - grd (step D) .] x xa \\<sqsubseteq>\n                         [. - grd (step D) .] y xa", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f x y xa.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           (\\<forall>xa. x xa \\<sqsubseteq> y xa) \\<longrightarrow>\n           (\\<forall>xa. f x xa \\<sqsubseteq> f y xa);\n        \\<forall>xa. x xa \\<sqsubseteq> y xa\\<rbrakk>\n       \\<Longrightarrow> [. - grd (step D) .] x xa \\<sqsubseteq>\n                         [. - grd (step D) .] y xa", "apply (case_tac \"mono (assume (- grd (step D)))\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f x y xa.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           (\\<forall>xa. x xa \\<sqsubseteq> y xa) \\<longrightarrow>\n           (\\<forall>xa. f x xa \\<sqsubseteq> f y xa);\n        \\<forall>xa. x xa \\<sqsubseteq> y xa;\n        mono [. - grd (step D) .]\\<rbrakk>\n       \\<Longrightarrow> [. - grd (step D) .] x xa \\<sqsubseteq>\n                         [. - grd (step D) .] y xa\n 2. \\<And>f x y xa.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           (\\<forall>xa. x xa \\<sqsubseteq> y xa) \\<longrightarrow>\n           (\\<forall>xa. f x xa \\<sqsubseteq> f y xa);\n        \\<forall>xa. x xa \\<sqsubseteq> y xa;\n        \\<not> mono [. - grd (step D) .]\\<rbrakk>\n       \\<Longrightarrow> [. - grd (step D) .] x xa \\<sqsubseteq>\n                         [. - grd (step D) .] y xa", "apply (simp add: mono_def le_fun_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f x y xa.\n       \\<lbrakk>dmono D;\n        \\<forall>x y.\n           (\\<forall>xa. x xa \\<sqsubseteq> y xa) \\<longrightarrow>\n           (\\<forall>xa. f x xa \\<sqsubseteq> f y xa);\n        \\<forall>xa. x xa \\<sqsubseteq> y xa;\n        \\<not> mono [. - grd (step D) .]\\<rbrakk>\n       \\<Longrightarrow> [. - grd (step D) .] x xa \\<sqsubseteq>\n                         [. - grd (step D) .] y xa", "by simp"], ["", "definition\n  \"pt D = lfp (dgr D)\""], ["", "text \\<open>\nIf $U$ is an indexed predicate transformer and if $P, Q:I\\to \\mathit{State} \\ \\mathit{set}$\nare indexed predicates, then the meaning of the Hoare triple defined earlier,\n$\\models P \\{ | U | \\} Q$, is that if\nwe start $U$ in a state $s$ from a situation $i$ such that $s\\in P\\, i$,\nthen U terminates, and if it terminates in $s'$ and situation $j$, then\n$s'\\in Q\\ j$ is true.\n\nNext theorem shows that in a diagram all transitions are correct\nif and only if $\\mathit{step}\\ D$ is correct.\n\\<close>"], ["", "theorem hoare_step:\n  \"(\\<forall> i j . \\<Turnstile> (P i) {| D(i,j) |} (Q j) ) = (\\<Turnstile> P {| step D |} Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>i j. \\<Turnstile> P i{| D (i, j) |}Q j) =\n    \\<Turnstile> P{| step D |}Q", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>i j. \\<Turnstile> P i{| D (i, j) |}Q j \\<Longrightarrow>\n    \\<Turnstile> P{| step D |}Q\n 2. \\<And>i j.\n       \\<Turnstile> P{| step D |}Q \\<Longrightarrow>\n       \\<Turnstile> P i{| D (i, j) |}Q j", "apply (simp add: le_fun_def Hoare_def step_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>i j. P i \\<sqsubseteq> D (i, j) (Q j) \\<Longrightarrow>\n    \\<forall>x. P x \\<sqsubseteq> (INF j. D (x, j) (Q j))\n 2. \\<And>i j.\n       \\<Turnstile> P{| step D |}Q \\<Longrightarrow>\n       \\<Turnstile> P i{| D (i, j) |}Q j", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<forall>i j. P i \\<sqsubseteq> D (i, j) (Q j) \\<Longrightarrow>\n       P x \\<sqsubseteq> (INF j. D (x, j) (Q j))\n 2. \\<And>i j.\n       \\<Turnstile> P{| step D |}Q \\<Longrightarrow>\n       \\<Turnstile> P i{| D (i, j) |}Q j", "apply (rule INF_greatest)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x j.\n       \\<lbrakk>\\<forall>i j. P i \\<sqsubseteq> D (i, j) (Q j);\n        j \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> P x \\<sqsubseteq> D (x, j) (Q j)\n 2. \\<And>i j.\n       \\<Turnstile> P{| step D |}Q \\<Longrightarrow>\n       \\<Turnstile> P i{| D (i, j) |}Q j", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<Turnstile> P{| step D |}Q \\<Longrightarrow>\n       \\<Turnstile> P i{| D (i, j) |}Q j", "apply (simp add: le_fun_def Hoare_def step_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<forall>x.\n          P x \\<sqsubseteq> (INF j. D (x, j) (Q j)) \\<Longrightarrow>\n       P i \\<sqsubseteq> D (i, j) (Q j)", "apply (erule_tac x = i in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       P i \\<sqsubseteq> (INF j. D (i, j) (Q j)) \\<Longrightarrow>\n       P i \\<sqsubseteq> D (i, j) (Q j)", "apply (rule_tac y = \"INF j. D(i, j) (Q j)\" in order_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i j.\n       P i \\<sqsubseteq> (INF j. D (i, j) (Q j)) \\<Longrightarrow>\n       P i \\<sqsubseteq> (INF j. D (i, j) (Q j))\n 2. \\<And>i j.\n       P i \\<sqsubseteq> (INF j. D (i, j) (Q j)) \\<Longrightarrow>\n       (INF j. D (i, j) (Q j)) \\<sqsubseteq> D (i, j) (Q j)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       P i \\<sqsubseteq> (INF j. D (i, j) (Q j)) \\<Longrightarrow>\n       (INF j. D (i, j) (Q j)) \\<sqsubseteq> D (i, j) (Q j)", "apply (rule INF_lower)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       P i \\<sqsubseteq> (INF j. D (i, j) (Q j)) \\<Longrightarrow>\n       j \\<in> UNIV", "by auto"], ["", "text \\<open>\nNext theorem provides the first proof rule for total correctnes of transition\ndiagrams. If all transitions are correct and if a global variant decreases \non every transition then the diagram is correct and it terminates. The variant\nmust decrease according to a well founded and transitive relation.\n\\<close>"], ["", "theorem hoare_diagram:\n  \"dmono D \\<Longrightarrow> (\\<forall> w i j . \\<Turnstile> X w i  {| D(i,j) |} Sup_less X w j) \\<Longrightarrow> \n    \\<Turnstile> (Sup (range X)) {| pt D |} (Sup(range X) \\<sqinter> -(grd (step D)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dmono D;\n     \\<forall>w i j. \\<Turnstile> X w i{| D (i, j) |}Sup_less X w j\\<rbrakk>\n    \\<Longrightarrow> \\<Turnstile> \\<Squnion>range\n        X{| pt D |}(\\<Squnion>range X \\<sqinter> - grd (step D))", "apply (simp add: hoare_step pt_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dmono D;\n     \\<forall>w. \\<Turnstile> X w{| step D |}Sup_less X w\\<rbrakk>\n    \\<Longrightarrow> \\<Turnstile> \\<Squnion>range\n        X{| lfp (dgr D) |}(\\<Squnion>range X \\<sqinter> - grd (step D))", "apply (rule hoare_fixpoint)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>dmono D;\n     \\<forall>w. \\<Turnstile> X w{| step D |}Sup_less X w\\<rbrakk>\n    \\<Longrightarrow> mono_mono (dgr D)\n 2. \\<And>w f.\n       \\<lbrakk>dmono D;\n        \\<forall>w. \\<Turnstile> X w{| step D |}Sup_less X w;\n        mono f \\<and>\n        \\<Turnstile> Sup_less X\n                      w{| f |}(\\<Squnion>range X \\<sqinter>\n                               - grd (step D))\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile> X\n w{| dgr D f |}(\\<Squnion>range X \\<sqinter> - grd (step D))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w f.\n       \\<lbrakk>dmono D;\n        \\<forall>w. \\<Turnstile> X w{| step D |}Sup_less X w; mono f;\n        \\<Turnstile> Sup_less X\n                      w{| f |}(\\<Squnion>range X \\<sqinter>\n                               - grd (step D))\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile> X\n w{| dgr D f |}(\\<Squnion>range X \\<sqinter> - grd (step D))", "apply (simp add: dgr_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w f.\n       \\<lbrakk>dmono D;\n        \\<forall>w. \\<Turnstile> X w{| step D |}Sup_less X w; mono f;\n        \\<Turnstile> Sup_less X\n                      w{| f |}(\\<Squnion>range X \\<sqinter>\n                               - grd (step D))\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile> X\n w{| (step D \\<circ> f) \\<sqinter>\n     [. - grd (step D) .] |}(\\<Squnion>range X \\<sqinter> - grd (step D))", "apply (simp add: hoare_choice)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w f.\n       \\<lbrakk>dmono D;\n        \\<forall>w. \\<Turnstile> X w{| step D |}Sup_less X w; mono f;\n        \\<Turnstile> Sup_less X\n                      w{| f |}(\\<Squnion>range X \\<sqinter>\n                               - grd (step D))\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile> X\n w{| step D \\<circ> f |}(\\<Squnion>range X \\<sqinter> - grd (step D)) \\<and>\n                         \\<Turnstile> X\n w{| [. - grd (step D) .] |}(\\<Squnion>range X \\<sqinter> - grd (step D))", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>w f.\n       \\<lbrakk>dmono D;\n        \\<forall>w. \\<Turnstile> X w{| step D |}Sup_less X w; mono f;\n        \\<Turnstile> Sup_less X\n                      w{| f |}(\\<Squnion>range X \\<sqinter>\n                               - grd (step D))\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile> X\n w{| step D \\<circ> f |}(\\<Squnion>range X \\<sqinter> - grd (step D))\n 2. \\<And>w f.\n       \\<lbrakk>dmono D;\n        \\<forall>w. \\<Turnstile> X w{| step D |}Sup_less X w; mono f;\n        \\<Turnstile> Sup_less X\n                      w{| f |}(\\<Squnion>range X \\<sqinter>\n                               - grd (step D))\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile> X\n w{| [. - grd (step D) .] |}(\\<Squnion>range X \\<sqinter> - grd (step D))", "apply (simp add: hoare_sequential)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>w f.\n       \\<lbrakk>dmono D;\n        \\<forall>w. \\<Turnstile> X w{| step D |}Sup_less X w; mono f;\n        \\<Turnstile> Sup_less X\n                      w{| f |}(\\<Squnion>range X \\<sqinter>\n                               - grd (step D))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>q.\n                            \\<Turnstile> X w{| step D |}q \\<and>\n                            \\<Turnstile> q{| f |}(\\<Squnion>range\n                       X \\<sqinter>\n            - grd (step D))\n 2. \\<And>w f.\n       \\<lbrakk>dmono D;\n        \\<forall>w. \\<Turnstile> X w{| step D |}Sup_less X w; mono f;\n        \\<Turnstile> Sup_less X\n                      w{| f |}(\\<Squnion>range X \\<sqinter>\n                               - grd (step D))\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile> X\n w{| [. - grd (step D) .] |}(\\<Squnion>range X \\<sqinter> - grd (step D))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w f.\n       \\<lbrakk>dmono D;\n        \\<forall>w. \\<Turnstile> X w{| step D |}Sup_less X w; mono f;\n        \\<Turnstile> Sup_less X\n                      w{| f |}(\\<Squnion>range X \\<sqinter>\n                               - grd (step D))\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile> X\n w{| [. - grd (step D) .] |}(\\<Squnion>range X \\<sqinter> - grd (step D))", "apply (simp add: hoare_assume)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w f.\n       \\<lbrakk>dmono D;\n        \\<forall>w. \\<Turnstile> X w{| step D |}Sup_less X w; mono f;\n        \\<Turnstile> Sup_less X\n                      w{| f |}(\\<Squnion>range X \\<sqinter>\n                               - grd (step D))\\<rbrakk>\n       \\<Longrightarrow> X w \\<sqinter> - grd (step D) \\<sqsubseteq>\n                         \\<Squnion>range X", "apply (rule le_infI1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w f.\n       \\<lbrakk>dmono D;\n        \\<forall>w. \\<Turnstile> X w{| step D |}Sup_less X w; mono f;\n        \\<Turnstile> Sup_less X\n                      w{| f |}(\\<Squnion>range X \\<sqinter>\n                               - grd (step D))\\<rbrakk>\n       \\<Longrightarrow> X w \\<sqsubseteq> \\<Squnion>range X", "by (rule SUP_upper, auto)"], ["", "text\\<open>\nThis theorem is a more general form of the more familiar form with a variant $t$\nwhich must decrease. If we take $X\\ w\\ i = (Y \\ i \\land t\\ i = w)$, then the\nsecond hypothesis of the theorem above becomes\n$\\models Y \\ i \\land t\\ i = w \\{| D(i,j) |\\} Y \\ i \\land t \\ i < w$. However,\nthe more general form of the theorem is needed, because\nin data refinements, the form $Y\\ i \\land t\\ i = w$ cannot be preserved.\n\\<close>"], ["", "text \\<open>\nThe drawback of this theorem is that the variant must be decreased on every\ntransitions which may be too cumbersome for practical applications. A similar \nsituation occur when introducing proof rules for mutually recursive procedures.\nThere the straightforward generalization of the proof rule of a recursive procedure\nto mutually recursive procedures suffers of a similar problem. We would need\nto prove that the variant decreases before every recursive call. Nipkow\n\\cite{nipkow:2002} has introduced a rule for mutually recursive procedures\nin which the variant is required to decrease only in a sequence of recursive\ncalls before calling again a procedure in this sequence. We introduce a\nsimilar proof rule in which the variant depends also on the situation\nindexes.\n\\<close>"], ["", "locale DiagramTermination =\n  fixes pair:: \"'a \\<Rightarrow> 'b \\<Rightarrow> ('c::well_founded_transitive)\"\nbegin"], ["", "definition\n  \"SUP_L_P X u i = (SUP v\\<in>{v. pair v i < u}. X v i :: _ :: complete_lattice)\""], ["", "definition \n  \"SUP_LE_P X u i = (SUP v\\<in>{v. pair v i \\<le> u}. X v i :: _ :: complete_lattice)\""], ["", "lemma SUP_L_P_upper:\n  \"pair v i < u \\<Longrightarrow> P v i \\<le> SUP_L_P P u i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pair v i \\<sqsubset> u \\<Longrightarrow>\n    P v i \\<sqsubseteq> SUP_L_P P u i", "by (auto simp add: SUP_L_P_def intro: SUP_upper)"], ["", "lemma SUP_L_P_least:\n  \"(!! v . pair v i < u \\<Longrightarrow> P v i \\<le> Q) \\<Longrightarrow> SUP_L_P P u i \\<le> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v.\n        pair v i \\<sqsubset> u \\<Longrightarrow>\n        P v i \\<sqsubseteq> Q) \\<Longrightarrow>\n    SUP_L_P P u i \\<sqsubseteq> Q", "by (simp add: SUP_L_P_def, rule SUP_least, auto)"], ["", "lemma SUP_LE_P_upper:\n  \"pair v i \\<le> u \\<Longrightarrow> P v i \\<le> SUP_LE_P P u i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pair v i \\<sqsubseteq> u \\<Longrightarrow>\n    P v i \\<sqsubseteq> SUP_LE_P P u i", "by (auto simp add: SUP_LE_P_def intro: SUP_upper)"], ["", "lemma SUP_LE_P_least:\n  \"(!! v . pair v i \\<le> u \\<Longrightarrow> P v i \\<le> Q) \\<Longrightarrow> SUP_LE_P P u i \\<le> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v.\n        pair v i \\<sqsubseteq> u \\<Longrightarrow>\n        P v i \\<sqsubseteq> Q) \\<Longrightarrow>\n    SUP_LE_P P u i \\<sqsubseteq> Q", "by (simp add: SUP_LE_P_def, rule SUP_least, auto)"], ["", "lemma SUP_SUP_L [simp]: \"Sup (range (SUP_LE_P X)) = Sup (range X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Squnion>range (SUP_LE_P X) = \\<Squnion>range X", "apply (simp add: fun_eq_iff Sup_fun_def image_comp, clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. (SUP xa. SUP_LE_P X xa x) = (SUP xa. X xa x)", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x. (SUP xa. SUP_LE_P X xa x) \\<sqsubseteq> (SUP xa. X xa x)\n 2. \\<And>x. (SUP xa. X xa x) \\<sqsubseteq> (SUP xa. SUP_LE_P X xa x)", "apply (rule SUP_least)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       xa \\<in> UNIV \\<Longrightarrow>\n       SUP_LE_P X xa x \\<sqsubseteq> (SUP xa. X xa x)\n 2. \\<And>x. (SUP xa. X xa x) \\<sqsubseteq> (SUP xa. SUP_LE_P X xa x)", "apply (rule SUP_LE_P_least)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa v.\n       \\<lbrakk>xa \\<in> UNIV; pair v x \\<sqsubseteq> xa\\<rbrakk>\n       \\<Longrightarrow> X v x \\<sqsubseteq> (SUP xa. X xa x)\n 2. \\<And>x. (SUP xa. X xa x) \\<sqsubseteq> (SUP xa. SUP_LE_P X xa x)", "apply (rule SUP_upper, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. (SUP xa. X xa x) \\<sqsubseteq> (SUP xa. SUP_LE_P X xa x)", "apply (rule SUP_least)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       xa \\<in> UNIV \\<Longrightarrow>\n       X xa x \\<sqsubseteq> (SUP xa. SUP_LE_P X xa x)", "apply (rule_tac y = \"SUP_LE_P X (pair xa x) x\" in order_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       xa \\<in> UNIV \\<Longrightarrow>\n       X xa x \\<sqsubseteq> SUP_LE_P X (pair xa x) x\n 2. \\<And>x xa.\n       xa \\<in> UNIV \\<Longrightarrow>\n       SUP_LE_P X (pair xa x) x \\<sqsubseteq> (SUP xa. SUP_LE_P X xa x)", "apply (rule SUP_LE_P_upper, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       xa \\<in> UNIV \\<Longrightarrow>\n       SUP_LE_P X (pair xa x) x \\<sqsubseteq> (SUP xa. SUP_LE_P X xa x)", "by (rule SUP_upper, simp)"], ["", "lemma SUP_L_SUP_LE_P [simp]: \"Sup_less (SUP_LE_P X) = SUP_L_P X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_less (SUP_LE_P X) = SUP_L_P X", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Sup_less (SUP_LE_P X) \\<sqsubseteq> SUP_L_P X\n 2. SUP_L_P X \\<sqsubseteq> Sup_less (SUP_LE_P X)", "apply (subst le_fun_def, safe)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x. Sup_less (SUP_LE_P X) x \\<sqsubseteq> SUP_L_P X x\n 2. SUP_L_P X \\<sqsubseteq> Sup_less (SUP_LE_P X)", "apply (rule Sup_less_least)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v.\n       v \\<sqsubset> x \\<Longrightarrow>\n       SUP_LE_P X v \\<sqsubseteq> SUP_L_P X x\n 2. SUP_L_P X \\<sqsubseteq> Sup_less (SUP_LE_P X)", "apply (subst le_fun_def, safe)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v xa.\n       v \\<sqsubset> x \\<Longrightarrow>\n       SUP_LE_P X v xa \\<sqsubseteq> SUP_L_P X x xa\n 2. SUP_L_P X \\<sqsubseteq> Sup_less (SUP_LE_P X)", "apply (rule SUP_LE_P_least)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x v xa va.\n       \\<lbrakk>v \\<sqsubset> x; pair va xa \\<sqsubseteq> v\\<rbrakk>\n       \\<Longrightarrow> X va xa \\<sqsubseteq> SUP_L_P X x xa\n 2. SUP_L_P X \\<sqsubseteq> Sup_less (SUP_LE_P X)", "apply (rule SUP_L_P_upper, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. SUP_L_P X \\<sqsubseteq> Sup_less (SUP_LE_P X)", "apply (simp add: le_fun_def, safe)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa. SUP_L_P X x xa \\<sqsubseteq> Sup_less (SUP_LE_P X) x xa", "apply (rule SUP_L_P_least)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa v.\n       pair v xa \\<sqsubset> x \\<Longrightarrow>\n       X v xa \\<sqsubseteq> Sup_less (SUP_LE_P X) x xa", "apply (rule_tac y = \"SUP_LE_P X (pair v xa) xa\" in order_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa v.\n       pair v xa \\<sqsubset> x \\<Longrightarrow>\n       X v xa \\<sqsubseteq> SUP_LE_P X (pair v xa) xa\n 2. \\<And>x xa v.\n       pair v xa \\<sqsubset> x \\<Longrightarrow>\n       SUP_LE_P X (pair v xa) xa \\<sqsubseteq> Sup_less (SUP_LE_P X) x xa", "apply (rule SUP_LE_P_upper, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa v.\n       pair v xa \\<sqsubset> x \\<Longrightarrow>\n       SUP_LE_P X (pair v xa) xa \\<sqsubseteq> Sup_less (SUP_LE_P X) x xa", "apply (cut_tac P = \"SUP_LE_P X\" in Sup_less_upper)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa v.\n       pair v xa \\<sqsubset> x \\<Longrightarrow>\n       ?v23 x xa v \\<sqsubset> ?w23 x xa v\n 2. \\<And>x xa v.\n       \\<lbrakk>pair v xa \\<sqsubset> x;\n        SUP_LE_P X (?v23 x xa v) \\<sqsubseteq>\n        Sup_less (SUP_LE_P X) (?w23 x xa v)\\<rbrakk>\n       \\<Longrightarrow> SUP_LE_P X (pair v xa) xa \\<sqsubseteq>\n                         Sup_less (SUP_LE_P X) x xa", "by (simp, simp add: le_fun_def)"], ["", "end"], ["", "theorem (in DiagramTermination) hoare_diagram2:\n  \"dmono D \\<Longrightarrow> (\\<forall> u i j . \\<Turnstile> X u i  {| D(i, j) |} SUP_L_P X (pair u i) j) \\<Longrightarrow> \n    \\<Turnstile> (Sup (range X)) {| pt D |} ((Sup (range  X)) \\<sqinter> (-(grd (step D))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dmono D;\n     \\<forall>u i j.\n        \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j\\<rbrakk>\n    \\<Longrightarrow> \\<Turnstile> \\<Squnion>range\n        X{| pt D |}(\\<Squnion>range X \\<sqinter> - grd (step D))", "apply (frule_tac X = \"SUP_LE_P X\" in hoare_diagram)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>dmono D;\n     \\<forall>u i j.\n        \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j\\<rbrakk>\n    \\<Longrightarrow> \\<forall>w i j.\n                         \\<Turnstile> SUP_LE_P X w\n i{| D (i, j) |}Sup_less (SUP_LE_P X) w j\n 2. \\<lbrakk>dmono D;\n     \\<forall>u i j. \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j;\n     \\<Turnstile> \\<Squnion>range\n                             (SUP_LE_P\n                               X){| pt D |}(\\<Squnion>range\n                 (SUP_LE_P X) \\<sqinter>\n      - grd (step D))\\<rbrakk>\n    \\<Longrightarrow> \\<Turnstile> \\<Squnion>range\n        X{| pt D |}(\\<Squnion>range X \\<sqinter> - grd (step D))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w i j.\n       \\<lbrakk>dmono D;\n        \\<forall>u i j.\n           \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile> SUP_LE_P X w\n i{| D (i, j) |}SUP_L_P X w j", "apply (simp add: SUP_LE_P_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w i j.\n       \\<lbrakk>dmono D;\n        \\<forall>u i j.\n           \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile> SUP v\\<in>{v.\n           pair v i \\<sqsubseteq> w}.\n   X v i{| D (i, j) |}SUP_L_P X w j", "apply (unfold hoare_Sup [THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w i j.\n       \\<lbrakk>dmono D;\n        \\<forall>u i j.\n           \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p\\<in>(\\<lambda>v. X v i) `\n  {v. pair v i \\<sqsubseteq> w}.\n                            \\<Turnstile> p{| D (i, j) |}SUP_L_P X w j", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w i j p.\n       \\<lbrakk>dmono D;\n        \\<forall>u i j.\n           \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j;\n        pair p i \\<sqsubseteq> w\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile> X p i{| D (i, j) |}SUP_L_P X w j", "apply (rule_tac Q = \"SUP_L_P X (pair p i) j\" in hoare_mono)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>w i j p.\n       \\<lbrakk>dmono D;\n        \\<forall>u i j.\n           \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j;\n        pair p i \\<sqsubseteq> w\\<rbrakk>\n       \\<Longrightarrow> mono (D (i, j))\n 2. \\<And>w i j p.\n       \\<lbrakk>dmono D;\n        \\<forall>u i j.\n           \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j;\n        pair p i \\<sqsubseteq> w\\<rbrakk>\n       \\<Longrightarrow> SUP_L_P X (pair p i) j \\<sqsubseteq> SUP_L_P X w j\n 3. \\<And>w i j p.\n       \\<lbrakk>dmono D;\n        \\<forall>u i j.\n           \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j;\n        pair p i \\<sqsubseteq> w\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile> X p\n i{| D (i, j) |}SUP_L_P X (pair p i) j", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w i j p.\n       \\<lbrakk>dmono D;\n        \\<forall>u i j.\n           \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j;\n        pair p i \\<sqsubseteq> w\\<rbrakk>\n       \\<Longrightarrow> SUP_L_P X (pair p i) j \\<sqsubseteq> SUP_L_P X w j", "apply (rule SUP_L_P_least)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w i j p v.\n       \\<lbrakk>dmono D;\n        \\<forall>u i j.\n           \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j;\n        pair p i \\<sqsubseteq> w; pair v j \\<sqsubset> pair p i\\<rbrakk>\n       \\<Longrightarrow> X v j \\<sqsubseteq> SUP_L_P X w j", "apply (rule SUP_L_P_upper)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>w i j p v.\n       \\<lbrakk>dmono D;\n        \\<forall>u i j.\n           \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j;\n        pair p i \\<sqsubseteq> w; pair v j \\<sqsubset> pair p i\\<rbrakk>\n       \\<Longrightarrow> pair v j \\<sqsubset> w", "apply (rule order_trans3)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>w i j p v.\n       \\<lbrakk>dmono D;\n        \\<forall>u i j.\n           \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j;\n        pair p i \\<sqsubseteq> w; pair v j \\<sqsubset> pair p i\\<rbrakk>\n       \\<Longrightarrow> pair v j \\<sqsubset> ?y20 w i j p v\n 2. \\<And>w i j p v.\n       \\<lbrakk>dmono D;\n        \\<forall>u i j.\n           \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j;\n        pair p i \\<sqsubseteq> w; pair v j \\<sqsubset> pair p i\\<rbrakk>\n       \\<Longrightarrow> ?y20 w i j p v \\<sqsubseteq> w", "by auto"], ["", "lemma mono_pt [simp]: \"dmono D \\<Longrightarrow> mono (pt D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dmono D \\<Longrightarrow> mono (pt D)", "apply (drule mono_mono_dgr)"], ["proof (prove)\ngoal (1 subgoal):\n 1. mono_mono (dgr D) \\<Longrightarrow> mono (pt D)", "by (simp add: pt_def)"], ["", "theorem (in DiagramTermination) hoare_diagram3:\n  \"dmono D \\<Longrightarrow> \n     (\\<forall> u i j . \\<Turnstile> X u i  {| D(i, j) |} SUP_L_P X (pair u i) j) \\<Longrightarrow> \n      P \\<le> Sup (range X) \\<Longrightarrow>  ((Sup (range X)) \\<sqinter> (-(grd (step D)))) \\<le> Q \\<Longrightarrow>\n      \\<Turnstile> P {| pt D |} Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dmono D;\n     \\<forall>u i j. \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j;\n     P \\<sqsubseteq> \\<Squnion>range X;\n     \\<Squnion>range X \\<sqinter> - grd (step D) \\<sqsubseteq> Q\\<rbrakk>\n    \\<Longrightarrow> \\<Turnstile> P{| pt D |}Q", "apply (rule hoare_mono)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>dmono D;\n     \\<forall>u i j. \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j;\n     P \\<sqsubseteq> \\<Squnion>range X;\n     \\<Squnion>range X \\<sqinter> - grd (step D) \\<sqsubseteq> Q\\<rbrakk>\n    \\<Longrightarrow> mono (pt D)\n 2. \\<lbrakk>dmono D;\n     \\<forall>u i j. \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j;\n     P \\<sqsubseteq> \\<Squnion>range X;\n     \\<Squnion>range X \\<sqinter> - grd (step D) \\<sqsubseteq> Q\\<rbrakk>\n    \\<Longrightarrow> ?Q \\<sqsubseteq> Q\n 3. \\<lbrakk>dmono D;\n     \\<forall>u i j. \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j;\n     P \\<sqsubseteq> \\<Squnion>range X;\n     \\<Squnion>range X \\<sqinter> - grd (step D) \\<sqsubseteq> Q\\<rbrakk>\n    \\<Longrightarrow> \\<Turnstile> P{| pt D |}?Q", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dmono D;\n     \\<forall>u i j. \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j;\n     P \\<sqsubseteq> \\<Squnion>range X;\n     \\<Squnion>range X \\<sqinter> - grd (step D) \\<sqsubseteq> Q\\<rbrakk>\n    \\<Longrightarrow> \\<Turnstile> P{| pt\n  D |}(\\<Squnion>range X \\<sqinter> - grd (step D))", "apply (rule hoare_pre)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>dmono D;\n     \\<forall>u i j. \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j;\n     P \\<sqsubseteq> \\<Squnion>range X;\n     \\<Squnion>range X \\<sqinter> - grd (step D) \\<sqsubseteq> Q\\<rbrakk>\n    \\<Longrightarrow> P \\<sqsubseteq> ?P7\n 2. \\<lbrakk>dmono D;\n     \\<forall>u i j. \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j;\n     P \\<sqsubseteq> \\<Squnion>range X;\n     \\<Squnion>range X \\<sqinter> - grd (step D) \\<sqsubseteq> Q\\<rbrakk>\n    \\<Longrightarrow> \\<Turnstile> ?P7{| pt\n    D |}(\\<Squnion>range X \\<sqinter> - grd (step D))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dmono D;\n     \\<forall>u i j. \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j;\n     P \\<sqsubseteq> \\<Squnion>range X;\n     \\<Squnion>range X \\<sqinter> - grd (step D) \\<sqsubseteq> Q\\<rbrakk>\n    \\<Longrightarrow> \\<Turnstile> \\<Squnion>range\n        X{| pt D |}(\\<Squnion>range X \\<sqinter> - grd (step D))", "apply (rule hoare_diagram2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>dmono D;\n     \\<forall>u i j. \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j;\n     P \\<sqsubseteq> \\<Squnion>range X;\n     \\<Squnion>range X \\<sqinter> - grd (step D) \\<sqsubseteq> Q\\<rbrakk>\n    \\<Longrightarrow> dmono D\n 2. \\<lbrakk>dmono D;\n     \\<forall>u i j. \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j;\n     P \\<sqsubseteq> \\<Squnion>range X;\n     \\<Squnion>range X \\<sqinter> - grd (step D) \\<sqsubseteq> Q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>u i j.\n                         \\<Turnstile> X u\n i{| D (i, j) |}SUP_L_P X (pair u i) j", "by auto"], ["", "text\\<open>\nThe following definition introduces the concept of correct Hoare triples for diagrams.\n\\<close>"], ["", "definition (in DiagramTermination)\n  Hoare_dgr :: \"('b \\<Rightarrow> ('u::{complete_distrib_lattice, boolean_algebra})) \\<Rightarrow> ('b \\<times> 'b \\<Rightarrow> 'u \\<Rightarrow> 'u) \\<Rightarrow> ('b \\<Rightarrow> 'u) \\<Rightarrow> bool\" (\"\\<turnstile> (_){| _ |}(_) \" \n  [0,0,900] 900) where\n  \"\\<turnstile> P {| D |} Q \\<equiv> (\\<exists> X . (\\<forall> u i j . \\<Turnstile> X u i  {| D(i, j) |} SUP_L_P X (pair u i) j) \\<and> \n       P = Sup (range X) \\<and> Q = ((Sup (range  X)) \\<sqinter> (-(grd (step D)))))\""], ["", "definition (in DiagramTermination)\n  Hoare_dgr1 :: \"('b \\<Rightarrow> ('u::{complete_distrib_lattice, boolean_algebra})) \\<Rightarrow> ('b \\<times> 'b \\<Rightarrow> 'u \\<Rightarrow> 'u) \\<Rightarrow> ('b \\<Rightarrow> 'u) \\<Rightarrow> bool\" (\"\\<turnstile>1 (_){| _ |}(_) \" \n  [0,0,900] 900) where\n  \"\\<turnstile>1 P {| D |} Q \\<equiv> (\\<exists> X . (\\<forall> u i j . \\<Turnstile> X u i  {| D(i, j) |} SUP_L_P X (pair u i) j) \\<and> \n      P \\<le> Sup (range X) \\<and> ((Sup (range X)) \\<sqinter> (-(grd (step D)))) \\<le> Q)\""], ["", "theorem (in DiagramTermination) hoare_dgr_correctness: \n  \"dmono D \\<Longrightarrow> (\\<turnstile> P {| D |} Q) \\<Longrightarrow> (\\<Turnstile> P {| pt D |} Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dmono D; \\<turnstile> P{| D |}Q \\<rbrakk>\n    \\<Longrightarrow> \\<Turnstile> P{| pt D |}Q", "apply (simp add: Hoare_dgr_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dmono D;\n     \\<exists>X.\n        (\\<forall>u i j.\n            \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j) \\<and>\n        P = \\<Squnion>range X \\<and>\n        Q = \\<Squnion>range X \\<sqinter> - grd (step D)\\<rbrakk>\n    \\<Longrightarrow> \\<Turnstile> P{| pt D |}Q", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>dmono D;\n        \\<forall>u i j.\n           \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j;\n        Q = \\<Squnion>range X \\<sqinter> - grd (step D);\n        P = \\<Squnion>range X\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile> \\<Squnion>range\n           X{| pt D |}(\\<Squnion>range X \\<sqinter> - grd (step D))", "apply (rule hoare_diagram3)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>X.\n       \\<lbrakk>dmono D;\n        \\<forall>u i j.\n           \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j;\n        Q = \\<Squnion>range X \\<sqinter> - grd (step D);\n        P = \\<Squnion>range X\\<rbrakk>\n       \\<Longrightarrow> dmono D\n 2. \\<And>X.\n       \\<lbrakk>dmono D;\n        \\<forall>u i j.\n           \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j;\n        Q = \\<Squnion>range X \\<sqinter> - grd (step D);\n        P = \\<Squnion>range X\\<rbrakk>\n       \\<Longrightarrow> \\<forall>u i j.\n                            \\<Turnstile> ?X11 X u\n    i{| D (i, j) |}SUP_L_P (?X11 X) (pair u i) j\n 3. \\<And>X.\n       \\<lbrakk>dmono D;\n        \\<forall>u i j.\n           \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j;\n        Q = \\<Squnion>range X \\<sqinter> - grd (step D);\n        P = \\<Squnion>range X\\<rbrakk>\n       \\<Longrightarrow> \\<Squnion>range X \\<sqsubseteq>\n                         \\<Squnion>range (?X11 X)\n 4. \\<And>X.\n       \\<lbrakk>dmono D;\n        \\<forall>u i j.\n           \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j;\n        Q = \\<Squnion>range X \\<sqinter> - grd (step D);\n        P = \\<Squnion>range X\\<rbrakk>\n       \\<Longrightarrow> \\<Squnion>range (?X11 X) \\<sqinter>\n                         - grd (step D) \\<sqsubseteq>\n                         \\<Squnion>range X \\<sqinter> - grd (step D)", "by auto"], ["", "theorem  (in DiagramTermination) hoare_dgr_correctness1:\n  \"dmono D \\<Longrightarrow> (\\<turnstile>1 P {| D |} Q) \\<Longrightarrow> (\\<Turnstile> P {| pt D |} Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dmono D; \\<turnstile>1 P{| D |}Q \\<rbrakk>\n    \\<Longrightarrow> \\<Turnstile> P{| pt D |}Q", "apply (simp add: Hoare_dgr1_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dmono D;\n     \\<exists>X.\n        (\\<forall>u i j.\n            \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j) \\<and>\n        P \\<sqsubseteq> \\<Squnion>range X \\<and>\n        \\<Squnion>range X \\<sqinter> - grd (step D) \\<sqsubseteq> Q\\<rbrakk>\n    \\<Longrightarrow> \\<Turnstile> P{| pt D |}Q", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>dmono D;\n        \\<forall>u i j.\n           \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j;\n        P \\<sqsubseteq> \\<Squnion>range X;\n        \\<Squnion>range X \\<sqinter> - grd (step D) \\<sqsubseteq> Q\\<rbrakk>\n       \\<Longrightarrow> \\<Turnstile> P{| pt D |}Q", "apply (rule hoare_diagram3)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>X.\n       \\<lbrakk>dmono D;\n        \\<forall>u i j.\n           \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j;\n        P \\<sqsubseteq> \\<Squnion>range X;\n        \\<Squnion>range X \\<sqinter> - grd (step D) \\<sqsubseteq> Q\\<rbrakk>\n       \\<Longrightarrow> dmono D\n 2. \\<And>X.\n       \\<lbrakk>dmono D;\n        \\<forall>u i j.\n           \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j;\n        P \\<sqsubseteq> \\<Squnion>range X;\n        \\<Squnion>range X \\<sqinter> - grd (step D) \\<sqsubseteq> Q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>u i j.\n                            \\<Turnstile> ?X9 X u\n    i{| D (i, j) |}SUP_L_P (?X9 X) (pair u i) j\n 3. \\<And>X.\n       \\<lbrakk>dmono D;\n        \\<forall>u i j.\n           \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j;\n        P \\<sqsubseteq> \\<Squnion>range X;\n        \\<Squnion>range X \\<sqinter> - grd (step D) \\<sqsubseteq> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<sqsubseteq> \\<Squnion>range (?X9 X)\n 4. \\<And>X.\n       \\<lbrakk>dmono D;\n        \\<forall>u i j.\n           \\<Turnstile> X u i{| D (i, j) |}SUP_L_P X (pair u i) j;\n        P \\<sqsubseteq> \\<Squnion>range X;\n        \\<Squnion>range X \\<sqinter> - grd (step D) \\<sqsubseteq> Q\\<rbrakk>\n       \\<Longrightarrow> \\<Squnion>range (?X9 X) \\<sqinter>\n                         - grd (step D) \\<sqsubseteq>\n                         Q", "by auto"], ["", "definition\n  \"dgr_demonic Q ij = [:Q ij:]\""], ["", "theorem dgr_demonic_mono[simp]:\n  \"dmono (dgr_demonic Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dmono (dgr_demonic Q)", "by (simp add: dmono_def dgr_demonic_def)"], ["", "definition\n  \"dangelic R Q i = angelic (R i) (Q i)\""], ["", "lemma  grd_dgr:\n  \"((grd (step D) i)::('a::complete_boolean_algebra)) = \\<Squnion> {P . \\<exists> j . P = grd (D(i,j))}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. grd (step D) i = \\<Squnion>{P. \\<exists>j. P = grd (D (i, j))}", "apply (simp add: grd_def step_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. - (INF x. D (i, x) \\<bottom>) =\n    \\<Squnion>{P. \\<exists>j. P = - D (i, j) \\<bottom>}", "apply (unfold step_def uminus_Inf)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Squnion>(uminus ` range (\\<lambda>x. D (i, x) \\<bottom>)) =\n    \\<Squnion>{P. \\<exists>j. P = - D (i, j) \\<bottom>}", "apply (case_tac \"(uminus ` range (\\<lambda>j::'b. D (i, j) \\<bottom>)) = {P::'a. \\<exists>j::'b. P = - D (i, j) \\<bottom>}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. uminus ` range (\\<lambda>j. D (i, j) \\<bottom>) =\n    {P. \\<exists>j. P = - D (i, j) \\<bottom>} \\<Longrightarrow>\n    \\<Squnion>(uminus ` range (\\<lambda>x. D (i, x) \\<bottom>)) =\n    \\<Squnion>{P. \\<exists>j. P = - D (i, j) \\<bottom>}\n 2. uminus ` range (\\<lambda>j. D (i, j) \\<bottom>) \\<noteq>\n    {P. \\<exists>j. P = - D (i, j) \\<bottom>} \\<Longrightarrow>\n    \\<Squnion>(uminus ` range (\\<lambda>x. D (i, x) \\<bottom>)) =\n    \\<Squnion>{P. \\<exists>j. P = - D (i, j) \\<bottom>}", "apply (auto cong del: SUP_cong_simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma  grd_dgr_set:\n  \"((grd (step D) i)::('a set)) = Union {P . \\<exists> j . P = grd (D(i,j))}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. grd (step D) i = \\<Union> {P. \\<exists>j. P = grd (D (i, j))}", "by (simp add: grd_dgr)"], ["", "lemma not_grd_dgr [simp]: \"(a \\<in> (- grd (step D) i)) = (\\<forall> j . a \\<notin> grd (D(i,j)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<in> - grd (step D) i) = (\\<forall>j. a \\<notin> grd (D (i, j)))", "apply (simp add: grd_dgr)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x.\n        (\\<forall>j. x \\<noteq> grd (D (i, j))) \\<or> a \\<notin> x) =\n    (\\<forall>j. a \\<notin> grd (D (i, j)))", "by auto"], ["", "lemma not_grd_dgr2 [simp]: \"a \\<notin> (grd (step D) i) = (\\<forall> j . a \\<notin> grd (D(i,j)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<notin> grd (step D) i) = (\\<forall>j. a \\<notin> grd (D (i, j)))", "apply (subst not_grd_dgr [THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<notin> grd (step D) i) = (a \\<in> - grd (step D) i)", "by simp"], ["", "end"]]}