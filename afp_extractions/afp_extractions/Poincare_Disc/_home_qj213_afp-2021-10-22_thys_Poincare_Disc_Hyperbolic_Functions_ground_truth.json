{"file_name": "/home/qj213/afp-2021-10-22/thys/Poincare_Disc/Hyperbolic_Functions.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Poincare_Disc", "problem_names": ["lemma cosh_arcosh [simp]:\n  fixes x :: real\n  assumes \"x \\<ge> 1\"\n  shows \"cosh (arcosh x) = x\"", "lemma arcosh_ge_0 [simp]:\n  fixes x::real\n  assumes \"x \\<ge> 1\"\n  shows \"arcosh x \\<ge> 0\"", "lemma arcosh_eq_0_iff:\n  fixes x::real\n  assumes \"x \\<ge> 1\"\n  shows \"arcosh x = 0 \\<longleftrightarrow> x = 1\"", "lemma arcosh_eq_iff:\n  fixes x y::real\n  assumes \"x \\<ge> 1\" \"y \\<ge> 1\"\n  shows \"arcosh x = arcosh y \\<longleftrightarrow> x = y\"", "lemma cosh_gt_1 [simp]:\n  fixes x ::real\n  assumes \"x > 0\"\n  shows \"cosh x > 1\"", "lemma cosh_eq_iff:\n  fixes x y::real\n  assumes \"x \\<ge> 0\" \"y \\<ge> 0\"\n  shows \"cosh x = cosh y \\<longleftrightarrow> x = y\"", "lemma arcosh_mono:\n  fixes x y::real\n  assumes \"x \\<ge> 1\" \"y \\<ge> 1\"\n  shows \"arcosh x \\<ge> arcosh y \\<longleftrightarrow> x \\<ge> y\"", "lemma arcosh_add:\n  fixes x y::real\n  assumes \"x \\<ge> 1\" \"y \\<ge> 1\"\n  shows \"arcosh x + arcosh y = arcosh (x*y + sqrt((x\\<^sup>2 - 1)*(y\\<^sup>2 - 1)))\"", "lemma arcosh_double:\n  fixes x :: real\n  assumes \"x \\<ge> 1\"\n  shows \"2 * arcosh x = arcosh (2*x\\<^sup>2 - 1)\""], "translations": [["", "lemma cosh_arcosh [simp]:\n  fixes x :: real\n  assumes \"x \\<ge> 1\"\n  shows \"cosh (arcosh x) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cosh (arcosh x) = x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. cosh (arcosh x) = x", "from assms"], ["proof (chain)\npicking this:\n  1 \\<le> x", "have  **: \"x + sqrt(x\\<^sup>2 - 1) \\<ge> 1\""], ["proof (prove)\nusing this:\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. 1 \\<le> x + sqrt (x\\<^sup>2 - 1)", "by (smt one_le_power real_sqrt_ge_zero)"], ["proof (state)\nthis:\n  1 \\<le> x + sqrt (x\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. cosh (arcosh x) = x", "hence *: \"x + sqrt(x\\<^sup>2 - 1) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  1 \\<le> x + sqrt (x\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. x + sqrt (x\\<^sup>2 - 1) \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  x + sqrt (x\\<^sup>2 - 1) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. cosh (arcosh x) = x", "moreover"], ["proof (state)\nthis:\n  x + sqrt (x\\<^sup>2 - 1) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. cosh (arcosh x) = x", "have \"sqrt (x\\<^sup>2 - 1) + 1 / (x + sqrt (x\\<^sup>2 - 1)) = x\" (is \"?lhs = x\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (x\\<^sup>2 - 1) + 1 / (x + sqrt (x\\<^sup>2 - 1)) = x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. sqrt (x\\<^sup>2 - 1) + 1 / (x + sqrt (x\\<^sup>2 - 1)) = x", "have \"?lhs = (x*sqrt(x\\<^sup>2 - 1) + x\\<^sup>2) / (x + sqrt(x\\<^sup>2 - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (x\\<^sup>2 - 1) + 1 / (x + sqrt (x\\<^sup>2 - 1)) =\n    (x * sqrt (x\\<^sup>2 - 1) + x\\<^sup>2) / (x + sqrt (x\\<^sup>2 - 1))", "using * \\<open>x \\<ge> 1\\<close>"], ["proof (prove)\nusing this:\n  x + sqrt (x\\<^sup>2 - 1) \\<noteq> 0\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. sqrt (x\\<^sup>2 - 1) + 1 / (x + sqrt (x\\<^sup>2 - 1)) =\n    (x * sqrt (x\\<^sup>2 - 1) + x\\<^sup>2) / (x + sqrt (x\\<^sup>2 - 1))", "by (subst add_divide_eq_iff, simp, simp add: field_simps)"], ["proof (state)\nthis:\n  sqrt (x\\<^sup>2 - 1) + 1 / (x + sqrt (x\\<^sup>2 - 1)) =\n  (x * sqrt (x\\<^sup>2 - 1) + x\\<^sup>2) / (x + sqrt (x\\<^sup>2 - 1))\n\ngoal (1 subgoal):\n 1. sqrt (x\\<^sup>2 - 1) + 1 / (x + sqrt (x\\<^sup>2 - 1)) = x", "also"], ["proof (state)\nthis:\n  sqrt (x\\<^sup>2 - 1) + 1 / (x + sqrt (x\\<^sup>2 - 1)) =\n  (x * sqrt (x\\<^sup>2 - 1) + x\\<^sup>2) / (x + sqrt (x\\<^sup>2 - 1))\n\ngoal (1 subgoal):\n 1. sqrt (x\\<^sup>2 - 1) + 1 / (x + sqrt (x\\<^sup>2 - 1)) = x", "have \"... = x * (sqrt(x\\<^sup>2 - 1) + x) / (x + sqrt(x\\<^sup>2 - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x * sqrt (x\\<^sup>2 - 1) + x\\<^sup>2) / (x + sqrt (x\\<^sup>2 - 1)) =\n    x * (sqrt (x\\<^sup>2 - 1) + x) / (x + sqrt (x\\<^sup>2 - 1))", "by (simp add: field_simps power2_eq_square)"], ["proof (state)\nthis:\n  (x * sqrt (x\\<^sup>2 - 1) + x\\<^sup>2) / (x + sqrt (x\\<^sup>2 - 1)) =\n  x * (sqrt (x\\<^sup>2 - 1) + x) / (x + sqrt (x\\<^sup>2 - 1))\n\ngoal (1 subgoal):\n 1. sqrt (x\\<^sup>2 - 1) + 1 / (x + sqrt (x\\<^sup>2 - 1)) = x", "finally"], ["proof (chain)\npicking this:\n  sqrt (x\\<^sup>2 - 1) + 1 / (x + sqrt (x\\<^sup>2 - 1)) =\n  x * (sqrt (x\\<^sup>2 - 1) + x) / (x + sqrt (x\\<^sup>2 - 1))", "show ?thesis"], ["proof (prove)\nusing this:\n  sqrt (x\\<^sup>2 - 1) + 1 / (x + sqrt (x\\<^sup>2 - 1)) =\n  x * (sqrt (x\\<^sup>2 - 1) + x) / (x + sqrt (x\\<^sup>2 - 1))\n\ngoal (1 subgoal):\n 1. sqrt (x\\<^sup>2 - 1) + 1 / (x + sqrt (x\\<^sup>2 - 1)) = x", "using nonzero_mult_div_cancel_right[OF *, of x]"], ["proof (prove)\nusing this:\n  sqrt (x\\<^sup>2 - 1) + 1 / (x + sqrt (x\\<^sup>2 - 1)) =\n  x * (sqrt (x\\<^sup>2 - 1) + x) / (x + sqrt (x\\<^sup>2 - 1))\n  x * (x + sqrt (x\\<^sup>2 - 1)) / (x + sqrt (x\\<^sup>2 - 1)) = x\n\ngoal (1 subgoal):\n 1. sqrt (x\\<^sup>2 - 1) + 1 / (x + sqrt (x\\<^sup>2 - 1)) = x", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  sqrt (x\\<^sup>2 - 1) + 1 / (x + sqrt (x\\<^sup>2 - 1)) = x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sqrt (x\\<^sup>2 - 1) + 1 / (x + sqrt (x\\<^sup>2 - 1)) = x\n\ngoal (1 subgoal):\n 1. cosh (arcosh x) = x", "thus ?thesis"], ["proof (prove)\nusing this:\n  sqrt (x\\<^sup>2 - 1) + 1 / (x + sqrt (x\\<^sup>2 - 1)) = x\n\ngoal (1 subgoal):\n 1. cosh (arcosh x) = x", "using arcosh_real_def[OF assms(1)]"], ["proof (prove)\nusing this:\n  sqrt (x\\<^sup>2 - 1) + 1 / (x + sqrt (x\\<^sup>2 - 1)) = x\n  arcosh x = ln (x + sqrt (x\\<^sup>2 - 1))\n\ngoal (1 subgoal):\n 1. cosh (arcosh x) = x", "unfolding cosh_def"], ["proof (prove)\nusing this:\n  sqrt (x\\<^sup>2 - 1) + 1 / (x + sqrt (x\\<^sup>2 - 1)) = x\n  arcosh x = ln (x + sqrt (x\\<^sup>2 - 1))\n\ngoal (1 subgoal):\n 1. (exp (arcosh x) + exp (- arcosh x)) /\\<^sub>R 2 = x", "using ln_div[of 1, symmetric] **"], ["proof (prove)\nusing this:\n  sqrt (x\\<^sup>2 - 1) + 1 / (x + sqrt (x\\<^sup>2 - 1)) = x\n  arcosh x = ln (x + sqrt (x\\<^sup>2 - 1))\n  \\<lbrakk>0 < 1; 0 < ?y\\<rbrakk>\n  \\<Longrightarrow> ln 1 - ln ?y = ln (1 / ?y)\n  1 \\<le> x + sqrt (x\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. (exp (arcosh x) + exp (- arcosh x)) /\\<^sub>R 2 = x", "by auto"], ["proof (state)\nthis:\n  cosh (arcosh x) = x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma arcosh_ge_0 [simp]:\n  fixes x::real\n  assumes \"x \\<ge> 1\"\n  shows \"arcosh x \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> arcosh x", "by (smt arcosh_def assms ln_ge_zero powr_ge_pzero)"], ["", "lemma arcosh_eq_0_iff:\n  fixes x::real\n  assumes \"x \\<ge> 1\"\n  shows \"arcosh x = 0 \\<longleftrightarrow> x = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (arcosh x = 0) = (x = 1)", "using assms"], ["proof (prove)\nusing this:\n  1 \\<le> x\n\ngoal (1 subgoal):\n 1. (arcosh x = 0) = (x = 1)", "using cosh_arcosh"], ["proof (prove)\nusing this:\n  1 \\<le> x\n  1 \\<le> ?x \\<Longrightarrow> cosh (arcosh ?x) = ?x\n\ngoal (1 subgoal):\n 1. (arcosh x = 0) = (x = 1)", "by fastforce"], ["", "lemma arcosh_eq_iff:\n  fixes x y::real\n  assumes \"x \\<ge> 1\" \"y \\<ge> 1\"\n  shows \"arcosh x = arcosh y \\<longleftrightarrow> x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (arcosh x = arcosh y) = (x = y)", "using assms"], ["proof (prove)\nusing this:\n  1 \\<le> x\n  1 \\<le> y\n\ngoal (1 subgoal):\n 1. (arcosh x = arcosh y) = (x = y)", "using cosh_arcosh"], ["proof (prove)\nusing this:\n  1 \\<le> x\n  1 \\<le> y\n  1 \\<le> ?x \\<Longrightarrow> cosh (arcosh ?x) = ?x\n\ngoal (1 subgoal):\n 1. (arcosh x = arcosh y) = (x = y)", "by fastforce"], ["", "lemma cosh_gt_1 [simp]:\n  fixes x ::real\n  assumes \"x > 0\"\n  shows \"cosh x > 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < cosh x", "using assms cosh_real_strict_mono"], ["proof (prove)\nusing this:\n  0 < x\n  \\<lbrakk>0 \\<le> ?x; ?x < ?y\\<rbrakk> \\<Longrightarrow> cosh ?x < cosh ?y\n\ngoal (1 subgoal):\n 1. 1 < cosh x", "by force"], ["", "lemma cosh_eq_iff:\n  fixes x y::real\n  assumes \"x \\<ge> 0\" \"y \\<ge> 0\"\n  shows \"cosh x = cosh y \\<longleftrightarrow> x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cosh x = cosh y) = (x = y)", "by (simp add: assms(1) assms(2))"], ["", "lemma arcosh_mono:\n  fixes x y::real\n  assumes \"x \\<ge> 1\" \"y \\<ge> 1\"\n  shows \"arcosh x \\<ge> arcosh y \\<longleftrightarrow> x \\<ge> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (arcosh y \\<le> arcosh x) = (y \\<le> x)", "using assms"], ["proof (prove)\nusing this:\n  1 \\<le> x\n  1 \\<le> y\n\ngoal (1 subgoal):\n 1. (arcosh y \\<le> arcosh x) = (y \\<le> x)", "by (smt arcosh_ge_0 cosh_arcosh cosh_real_nonneg_less_iff)"], ["", "lemma arcosh_add:\n  fixes x y::real\n  assumes \"x \\<ge> 1\" \"y \\<ge> 1\"\n  shows \"arcosh x + arcosh y = arcosh (x*y + sqrt((x\\<^sup>2 - 1)*(y\\<^sup>2 - 1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arcosh x + arcosh y =\n    arcosh (x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. arcosh x + arcosh y =\n    arcosh (x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))", "have \"sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1))", "using assms"], ["proof (prove)\nusing this:\n  1 \\<le> x\n  1 \\<le> y\n\ngoal (1 subgoal):\n 1. 0 \\<le> sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1))", "by simp"], ["proof (state)\nthis:\n  0 \\<le> sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1))\n\ngoal (1 subgoal):\n 1. arcosh x + arcosh y =\n    arcosh (x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))", "moreover"], ["proof (state)\nthis:\n  0 \\<le> sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1))\n\ngoal (1 subgoal):\n 1. arcosh x + arcosh y =\n    arcosh (x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))", "have \"x * y \\<ge> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> x * y", "using assms"], ["proof (prove)\nusing this:\n  1 \\<le> x\n  1 \\<le> y\n\ngoal (1 subgoal):\n 1. 1 \\<le> x * y", "by (smt mult_le_cancel_left1)"], ["proof (state)\nthis:\n  1 \\<le> x * y\n\ngoal (1 subgoal):\n 1. arcosh x + arcosh y =\n    arcosh (x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))", "ultimately"], ["proof (chain)\npicking this:\n  0 \\<le> sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1))\n  1 \\<le> x * y", "have **: \"x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)) \\<ge> 1\""], ["proof (prove)\nusing this:\n  0 \\<le> sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1))\n  1 \\<le> x * y\n\ngoal (1 subgoal):\n 1. 1 \\<le> x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1))", "by linarith"], ["proof (state)\nthis:\n  1 \\<le> x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1))\n\ngoal (1 subgoal):\n 1. arcosh x + arcosh y =\n    arcosh (x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))", "hence 1: \"0 \\<le> (x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 - 1\""], ["proof (prove)\nusing this:\n  1 \\<le> x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1))\n\ngoal (1 subgoal):\n 1. 0 \\<le> (x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 - 1", "by simp"], ["proof (state)\nthis:\n  0 \\<le> (x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 - 1\n\ngoal (1 subgoal):\n 1. arcosh x + arcosh y =\n    arcosh (x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))", "have 2: \"x * sqrt (y\\<^sup>2 - 1) + y * sqrt (x\\<^sup>2 - 1) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> x * sqrt (y\\<^sup>2 - 1) + y * sqrt (x\\<^sup>2 - 1)", "using assms"], ["proof (prove)\nusing this:\n  1 \\<le> x\n  1 \\<le> y\n\ngoal (1 subgoal):\n 1. 0 \\<le> x * sqrt (y\\<^sup>2 - 1) + y * sqrt (x\\<^sup>2 - 1)", "by simp"], ["proof (state)\nthis:\n  0 \\<le> x * sqrt (y\\<^sup>2 - 1) + y * sqrt (x\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. arcosh x + arcosh y =\n    arcosh (x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))", "have \"(x*sqrt(y\\<^sup>2 - 1)+y*sqrt(x\\<^sup>2 -1))\\<^sup>2 = (sqrt((x*y+sqrt((x\\<^sup>2-1)*(y\\<^sup>2-1)))\\<^sup>2 - 1))\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x * sqrt (y\\<^sup>2 - 1) + y * sqrt (x\\<^sup>2 - 1))\\<^sup>2 =\n    (sqrt\n      ((x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 -\n       1))\\<^sup>2", "using assms"], ["proof (prove)\nusing this:\n  1 \\<le> x\n  1 \\<le> y\n\ngoal (1 subgoal):\n 1. (x * sqrt (y\\<^sup>2 - 1) + y * sqrt (x\\<^sup>2 - 1))\\<^sup>2 =\n    (sqrt\n      ((x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 -\n       1))\\<^sup>2", "proof (subst real_sqrt_pow2)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>1 \\<le> x; 1 \\<le> y\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> (x * y +\n                               sqrt\n                                ((x\\<^sup>2 - 1) *\n                                 (y\\<^sup>2 - 1)))\\<^sup>2 -\n                              1\n 2. \\<lbrakk>1 \\<le> x; 1 \\<le> y\\<rbrakk>\n    \\<Longrightarrow> (x * sqrt (y\\<^sup>2 - 1) +\n                       y * sqrt (x\\<^sup>2 - 1))\\<^sup>2 =\n                      (x * y +\n                       sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 -\n                      1", "show \"0 \\<le> (x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> (x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 - 1", "by fact"], ["proof (state)\nthis:\n  0 \\<le> (x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 - 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> x; 1 \\<le> y\\<rbrakk>\n    \\<Longrightarrow> (x * sqrt (y\\<^sup>2 - 1) +\n                       y * sqrt (x\\<^sup>2 - 1))\\<^sup>2 =\n                      (x * y +\n                       sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 -\n                      1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> x; 1 \\<le> y\\<rbrakk>\n    \\<Longrightarrow> (x * sqrt (y\\<^sup>2 - 1) +\n                       y * sqrt (x\\<^sup>2 - 1))\\<^sup>2 =\n                      (x * y +\n                       sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 -\n                      1", "have \"(x * sqrt (y\\<^sup>2 - 1))\\<^sup>2 = x\\<^sup>2 * (y\\<^sup>2 - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x * sqrt (y\\<^sup>2 - 1))\\<^sup>2 = x\\<^sup>2 * (y\\<^sup>2 - 1)", "using assms"], ["proof (prove)\nusing this:\n  1 \\<le> x\n  1 \\<le> y\n\ngoal (1 subgoal):\n 1. (x * sqrt (y\\<^sup>2 - 1))\\<^sup>2 = x\\<^sup>2 * (y\\<^sup>2 - 1)", "apply (subst power_mult_distrib)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> x; 1 \\<le> y\\<rbrakk>\n    \\<Longrightarrow> x\\<^sup>2 * (sqrt (y\\<^sup>2 - 1))\\<^sup>2 =\n                      x\\<^sup>2 * (y\\<^sup>2 - 1)", "apply (subst real_sqrt_pow2, simp_all)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (x * sqrt (y\\<^sup>2 - 1))\\<^sup>2 = x\\<^sup>2 * (y\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> x; 1 \\<le> y\\<rbrakk>\n    \\<Longrightarrow> (x * sqrt (y\\<^sup>2 - 1) +\n                       y * sqrt (x\\<^sup>2 - 1))\\<^sup>2 =\n                      (x * y +\n                       sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 -\n                      1", "moreover"], ["proof (state)\nthis:\n  (x * sqrt (y\\<^sup>2 - 1))\\<^sup>2 = x\\<^sup>2 * (y\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> x; 1 \\<le> y\\<rbrakk>\n    \\<Longrightarrow> (x * sqrt (y\\<^sup>2 - 1) +\n                       y * sqrt (x\\<^sup>2 - 1))\\<^sup>2 =\n                      (x * y +\n                       sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 -\n                      1", "have \"(y * sqrt (x\\<^sup>2 - 1))\\<^sup>2 = y\\<^sup>2 * (x\\<^sup>2 - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y * sqrt (x\\<^sup>2 - 1))\\<^sup>2 = y\\<^sup>2 * (x\\<^sup>2 - 1)", "using assms"], ["proof (prove)\nusing this:\n  1 \\<le> x\n  1 \\<le> y\n\ngoal (1 subgoal):\n 1. (y * sqrt (x\\<^sup>2 - 1))\\<^sup>2 = y\\<^sup>2 * (x\\<^sup>2 - 1)", "apply (subst power_mult_distrib)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> x; 1 \\<le> y\\<rbrakk>\n    \\<Longrightarrow> y\\<^sup>2 * (sqrt (x\\<^sup>2 - 1))\\<^sup>2 =\n                      y\\<^sup>2 * (x\\<^sup>2 - 1)", "apply (subst real_sqrt_pow2, simp_all)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (y * sqrt (x\\<^sup>2 - 1))\\<^sup>2 = y\\<^sup>2 * (x\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> x; 1 \\<le> y\\<rbrakk>\n    \\<Longrightarrow> (x * sqrt (y\\<^sup>2 - 1) +\n                       y * sqrt (x\\<^sup>2 - 1))\\<^sup>2 =\n                      (x * y +\n                       sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 -\n                      1", "ultimately"], ["proof (chain)\npicking this:\n  (x * sqrt (y\\<^sup>2 - 1))\\<^sup>2 = x\\<^sup>2 * (y\\<^sup>2 - 1)\n  (y * sqrt (x\\<^sup>2 - 1))\\<^sup>2 = y\\<^sup>2 * (x\\<^sup>2 - 1)", "show \"(x * sqrt (y\\<^sup>2 - 1) + y * sqrt (x\\<^sup>2 - 1))\\<^sup>2 = (x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 - 1\""], ["proof (prove)\nusing this:\n  (x * sqrt (y\\<^sup>2 - 1))\\<^sup>2 = x\\<^sup>2 * (y\\<^sup>2 - 1)\n  (y * sqrt (x\\<^sup>2 - 1))\\<^sup>2 = y\\<^sup>2 * (x\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. (x * sqrt (y\\<^sup>2 - 1) + y * sqrt (x\\<^sup>2 - 1))\\<^sup>2 =\n    (x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 - 1", "using assms"], ["proof (prove)\nusing this:\n  (x * sqrt (y\\<^sup>2 - 1))\\<^sup>2 = x\\<^sup>2 * (y\\<^sup>2 - 1)\n  (y * sqrt (x\\<^sup>2 - 1))\\<^sup>2 = y\\<^sup>2 * (x\\<^sup>2 - 1)\n  1 \\<le> x\n  1 \\<le> y\n\ngoal (1 subgoal):\n 1. (x * sqrt (y\\<^sup>2 - 1) + y * sqrt (x\\<^sup>2 - 1))\\<^sup>2 =\n    (x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 - 1", "unfolding power2_sum"], ["proof (prove)\nusing this:\n  (x * sqrt (y\\<^sup>2 - 1))\\<^sup>2 = x\\<^sup>2 * (y\\<^sup>2 - 1)\n  (y * sqrt (x\\<^sup>2 - 1))\\<^sup>2 = y\\<^sup>2 * (x\\<^sup>2 - 1)\n  1 \\<le> x\n  1 \\<le> y\n\ngoal (1 subgoal):\n 1. (x * sqrt (y\\<^sup>2 - 1))\\<^sup>2 +\n    (y * sqrt (x\\<^sup>2 - 1))\\<^sup>2 +\n    2 * (x * sqrt (y\\<^sup>2 - 1)) * (y * sqrt (x\\<^sup>2 - 1)) =\n    (x * y)\\<^sup>2 + (sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 +\n    2 * (x * y) * sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)) -\n    1", "apply (simp add: real_sqrt_mult power_mult_distrib)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> x; 1 \\<le> y\\<rbrakk>\n    \\<Longrightarrow> x\\<^sup>2 * (y\\<^sup>2 - 1) +\n                      y\\<^sup>2 * (x\\<^sup>2 - 1) =\n                      x\\<^sup>2 * y\\<^sup>2 +\n                      ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1) - 1)", "apply (simp add: field_simps)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (x * sqrt (y\\<^sup>2 - 1) + y * sqrt (x\\<^sup>2 - 1))\\<^sup>2 =\n  (x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 - 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (x * sqrt (y\\<^sup>2 - 1) + y * sqrt (x\\<^sup>2 - 1))\\<^sup>2 =\n  (sqrt\n    ((x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 -\n     1))\\<^sup>2\n\ngoal (1 subgoal):\n 1. arcosh x + arcosh y =\n    arcosh (x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))", "hence \"sqrt ((x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 - 1) = x * sqrt (y\\<^sup>2 - 1) + y * sqrt (x\\<^sup>2 - 1)\""], ["proof (prove)\nusing this:\n  (x * sqrt (y\\<^sup>2 - 1) + y * sqrt (x\\<^sup>2 - 1))\\<^sup>2 =\n  (sqrt\n    ((x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 -\n     1))\\<^sup>2\n\ngoal (1 subgoal):\n 1. sqrt ((x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 - 1) =\n    x * sqrt (y\\<^sup>2 - 1) + y * sqrt (x\\<^sup>2 - 1)", "using power2_eq_iff_nonneg[OF 2 real_sqrt_ge_zero[OF 1]]"], ["proof (prove)\nusing this:\n  (x * sqrt (y\\<^sup>2 - 1) + y * sqrt (x\\<^sup>2 - 1))\\<^sup>2 =\n  (sqrt\n    ((x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 -\n     1))\\<^sup>2\n  ((x * sqrt (y\\<^sup>2 - 1) + y * sqrt (x\\<^sup>2 - 1))\\<^sup>2 =\n   (sqrt\n     ((x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 -\n      1))\\<^sup>2) =\n  (x * sqrt (y\\<^sup>2 - 1) + y * sqrt (x\\<^sup>2 - 1) =\n   sqrt ((x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 - 1))\n\ngoal (1 subgoal):\n 1. sqrt ((x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 - 1) =\n    x * sqrt (y\\<^sup>2 - 1) + y * sqrt (x\\<^sup>2 - 1)", "by simp"], ["proof (state)\nthis:\n  sqrt ((x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 - 1) =\n  x * sqrt (y\\<^sup>2 - 1) + y * sqrt (x\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. arcosh x + arcosh y =\n    arcosh (x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))", "thus ?thesis"], ["proof (prove)\nusing this:\n  sqrt ((x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 - 1) =\n  x * sqrt (y\\<^sup>2 - 1) + y * sqrt (x\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. arcosh x + arcosh y =\n    arcosh (x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))", "using assms"], ["proof (prove)\nusing this:\n  sqrt ((x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 - 1) =\n  x * sqrt (y\\<^sup>2 - 1) + y * sqrt (x\\<^sup>2 - 1)\n  1 \\<le> x\n  1 \\<le> y\n\ngoal (1 subgoal):\n 1. arcosh x + arcosh y =\n    arcosh (x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))", "apply (subst arcosh_real_def[OF assms(1)])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sqrt\n              ((x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 -\n               1) =\n             x * sqrt (y\\<^sup>2 - 1) + y * sqrt (x\\<^sup>2 - 1);\n     1 \\<le> x; 1 \\<le> y\\<rbrakk>\n    \\<Longrightarrow> ln (x + sqrt (x\\<^sup>2 - 1)) + arcosh y =\n                      arcosh\n                       (x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))", "apply (subst arcosh_real_def[OF assms(2)])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sqrt\n              ((x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 -\n               1) =\n             x * sqrt (y\\<^sup>2 - 1) + y * sqrt (x\\<^sup>2 - 1);\n     1 \\<le> x; 1 \\<le> y\\<rbrakk>\n    \\<Longrightarrow> ln (x + sqrt (x\\<^sup>2 - 1)) +\n                      ln (y + sqrt (y\\<^sup>2 - 1)) =\n                      arcosh\n                       (x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))", "apply (subst arcosh_real_def[OF **])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sqrt\n              ((x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 -\n               1) =\n             x * sqrt (y\\<^sup>2 - 1) + y * sqrt (x\\<^sup>2 - 1);\n     1 \\<le> x; 1 \\<le> y\\<rbrakk>\n    \\<Longrightarrow> ln (x + sqrt (x\\<^sup>2 - 1)) +\n                      ln (y + sqrt (y\\<^sup>2 - 1)) =\n                      ln (x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)) +\n                          sqrt\n                           ((x * y +\n                             sqrt\n                              ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 -\n                            1))", "apply (subst ln_mult[symmetric])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>sqrt\n              ((x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 -\n               1) =\n             x * sqrt (y\\<^sup>2 - 1) + y * sqrt (x\\<^sup>2 - 1);\n     1 \\<le> x; 1 \\<le> y\\<rbrakk>\n    \\<Longrightarrow> 0 < x + sqrt (x\\<^sup>2 - 1)\n 2. \\<lbrakk>sqrt\n              ((x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 -\n               1) =\n             x * sqrt (y\\<^sup>2 - 1) + y * sqrt (x\\<^sup>2 - 1);\n     1 \\<le> x; 1 \\<le> y\\<rbrakk>\n    \\<Longrightarrow> 0 < y + sqrt (y\\<^sup>2 - 1)\n 3. \\<lbrakk>sqrt\n              ((x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 -\n               1) =\n             x * sqrt (y\\<^sup>2 - 1) + y * sqrt (x\\<^sup>2 - 1);\n     1 \\<le> x; 1 \\<le> y\\<rbrakk>\n    \\<Longrightarrow> ln ((x + sqrt (x\\<^sup>2 - 1)) *\n                          (y + sqrt (y\\<^sup>2 - 1))) =\n                      ln (x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)) +\n                          sqrt\n                           ((x * y +\n                             sqrt\n                              ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 -\n                            1))", "apply (smt one_le_power real_sqrt_ge_zero)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>sqrt\n              ((x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 -\n               1) =\n             x * sqrt (y\\<^sup>2 - 1) + y * sqrt (x\\<^sup>2 - 1);\n     1 \\<le> x; 1 \\<le> y\\<rbrakk>\n    \\<Longrightarrow> 0 < y + sqrt (y\\<^sup>2 - 1)\n 2. \\<lbrakk>sqrt\n              ((x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 -\n               1) =\n             x * sqrt (y\\<^sup>2 - 1) + y * sqrt (x\\<^sup>2 - 1);\n     1 \\<le> x; 1 \\<le> y\\<rbrakk>\n    \\<Longrightarrow> ln ((x + sqrt (x\\<^sup>2 - 1)) *\n                          (y + sqrt (y\\<^sup>2 - 1))) =\n                      ln (x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)) +\n                          sqrt\n                           ((x * y +\n                             sqrt\n                              ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 -\n                            1))", "apply (smt one_le_power real_sqrt_ge_zero)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sqrt\n              ((x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 -\n               1) =\n             x * sqrt (y\\<^sup>2 - 1) + y * sqrt (x\\<^sup>2 - 1);\n     1 \\<le> x; 1 \\<le> y\\<rbrakk>\n    \\<Longrightarrow> ln ((x + sqrt (x\\<^sup>2 - 1)) *\n                          (y + sqrt (y\\<^sup>2 - 1))) =\n                      ln (x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)) +\n                          sqrt\n                           ((x * y +\n                             sqrt\n                              ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\\<^sup>2 -\n                            1))", "apply (simp add: real_sqrt_mult)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sqrt\n              ((x * y +\n                sqrt (x\\<^sup>2 - 1) * sqrt (y\\<^sup>2 - 1))\\<^sup>2 -\n               1) =\n             x * sqrt (y\\<^sup>2 - 1) + y * sqrt (x\\<^sup>2 - 1);\n     1 \\<le> x; 1 \\<le> y\\<rbrakk>\n    \\<Longrightarrow> ln ((x + sqrt (x\\<^sup>2 - 1)) *\n                          (y + sqrt (y\\<^sup>2 - 1))) =\n                      ln (x * y +\n                          sqrt (x\\<^sup>2 - 1) * sqrt (y\\<^sup>2 - 1) +\n                          (x * sqrt (y\\<^sup>2 - 1) +\n                           y * sqrt (x\\<^sup>2 - 1)))", "apply (simp add: field_simps)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  arcosh x + arcosh y =\n  arcosh (x * y + sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma arcosh_double:\n  fixes x :: real\n  assumes \"x \\<ge> 1\"\n  shows \"2 * arcosh x = arcosh (2*x\\<^sup>2 - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * arcosh x = arcosh (2 * x\\<^sup>2 - 1)", "by (smt arcosh_add arcosh_mono assms one_power2 power2_eq_square real_sqrt_abs)"], ["", "end"]]}