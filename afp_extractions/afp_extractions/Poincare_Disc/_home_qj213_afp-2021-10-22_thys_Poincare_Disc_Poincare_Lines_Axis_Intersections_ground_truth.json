{"file_name": "/home/qj213/afp-2021-10-22/thys/Poincare_Disc/Poincare_Lines_Axis_Intersections.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Poincare_Disc", "problem_names": ["lemma poincare_between_x_axis_intersection:\n  assumes \"u \\<in> unit_disc\" and \"v \\<in> unit_disc\" and \"z \\<in> unit_disc\" and \"u \\<noteq> v\"\n  assumes \"u \\<notin> circline_set x_axis\" and \"v \\<notin> circline_set x_axis\"\n  assumes \"z \\<in> circline_set (poincare_line u v) \\<inter> circline_set x_axis\"\n  shows \"poincare_between u z v \\<longleftrightarrow> arg (to_complex u) * arg (to_complex v) < 0\"", "lemma x_axis_intersection_equation:\n  assumes\n   \"H = mk_circline A B C D\" and\n   \"(A, B, C, D) \\<in> hermitean_nonzero\"\n shows \"of_complex z \\<in> circline_set x_axis \\<inter> circline_set H \\<longleftrightarrow>\n        A*z\\<^sup>2 + 2*Re B*z + D = 0 \\<and> is_real z\" (is \"?lhs \\<longleftrightarrow> ?rhs\")", "lemma intersects_x_axis_mk_circline:\n  assumes \"is_real A\" and \"A \\<noteq> 0 \\<or> B \\<noteq> 0\"\n  shows \"intersects_x_axis (mk_circline A B (cnj B) A) \\<longleftrightarrow> A = 0 \\<or> (Re B)\\<^sup>2 > (Re A)\\<^sup>2\"", "lemma intersects_x_axis_iff:\n  assumes \"is_poincare_line H\"\n  shows \"(\\<exists> x \\<in> unit_disc. x \\<in> circline_set H \\<inter> circline_set x_axis) \\<longleftrightarrow> intersects_x_axis H\"", "lemma intersects_x_axis_intersects_y_axis [simp]:\n  shows \"intersects_x_axis (moebius_circline (moebius_rotation (pi/2)) H) \\<longleftrightarrow> intersects_y_axis H\"", "lemma intersects_y_axis_iff:\n  assumes \"is_poincare_line H\"\n  shows \"(\\<exists> y \\<in> unit_disc. y \\<in> circline_set H \\<inter> circline_set y_axis) \\<longleftrightarrow> intersects_y_axis H\" (is \"?lhs \\<longleftrightarrow> ?rhs\")", "lemma calc_x_axis_intersection_in_unit_disc:\n  assumes \"is_poincare_line H\" \"intersects_x_axis H\"\n  shows \"calc_x_axis_intersection H \\<in> unit_disc\"", "lemma calc_x_axis_intersection:\n  assumes \"is_poincare_line H\" and \"intersects_x_axis H\"\n  shows \"calc_x_axis_intersection H \\<in> circline_set H \\<inter> circline_set x_axis\"", "lemma unique_calc_x_axis_intersection:\n  assumes \"is_poincare_line H\" and \"H \\<noteq> x_axis\"\n  assumes \"x \\<in> unit_disc\" and \"x \\<in> circline_set H \\<inter> circline_set x_axis\"\n  shows  \"x = calc_x_axis_intersection H\"", "lemma intersects_x_axis_positive_mk_circline:\n  assumes \"is_real A\" and \"A \\<noteq> 0 \\<or> B \\<noteq> 0\"\n  shows \"intersects_x_axis_positive (mk_circline A B (cnj B) A) \\<longleftrightarrow> Re B / Re A < -1\"", "lemma intersects_x_axis_positive_intersects_x_axis [simp]:\n  assumes \"intersects_x_axis_positive H\"\n  shows \"intersects_x_axis H\"", "lemma add_less_abs_positive_iff:\n  fixes a b :: real\n  assumes \"abs b < abs a\"\n  shows \"a + b > 0 \\<longleftrightarrow> a > 0\"", "lemma calc_x_axis_intersection_positive_abs':\n  fixes A B :: real\n  assumes \"B\\<^sup>2 > A\\<^sup>2\" and \"A \\<noteq> 0\"\n  shows \"abs (sgn(B) * sqrt(B\\<^sup>2 - A\\<^sup>2) / A) < abs(-B/A)\"", "lemma calc_intersect_x_axis_positive_lemma:\n  assumes \"B\\<^sup>2 > A\\<^sup>2\" and \"A \\<noteq> 0\"\n  shows \"(-B + sgn B * sqrt(B\\<^sup>2 - A\\<^sup>2)) / A > 0 \\<longleftrightarrow> -B/A > 1\"", "lemma intersects_x_axis_positive_iff':\n  assumes \"is_poincare_line H\"\n  shows \"intersects_x_axis_positive H \\<longleftrightarrow> \n         calc_x_axis_intersection H \\<in> unit_disc \\<and> calc_x_axis_intersection H \\<in> circline_set H \\<inter> positive_x_axis\" (is \"?lhs \\<longleftrightarrow> ?rhs\")", "lemma intersects_x_axis_positive_iff:\n  assumes \"is_poincare_line H\" and \"H \\<noteq> x_axis\"\n  shows \"intersects_x_axis_positive H \\<longleftrightarrow> \n         (\\<exists> x. x \\<in> unit_disc \\<and> x \\<in> circline_set H \\<inter> positive_x_axis)\" (is \"?lhs \\<longleftrightarrow> ?rhs\")", "lemma intersects_x_axis_positive_intersects_y_axis_positive [simp]:\n  shows \"intersects_x_axis_positive (moebius_circline (moebius_rotation (-pi/2)) H) \\<longleftrightarrow> intersects_y_axis_positive H\"", "lemma intersects_y_axis_positive_iff:\n  assumes \"is_poincare_line H\" \"H \\<noteq> y_axis\"\n  shows \"(\\<exists> y \\<in> unit_disc. y \\<in> circline_set H \\<inter> positive_y_axis) \\<longleftrightarrow> intersects_y_axis_positive H\" (is \"?lhs \\<longleftrightarrow> ?rhs\")", "lemma outward_mk_circline:\n  assumes \"is_real A1\" and \"is_real A2\" and \"A1 \\<noteq> 0 \\<or> B1 \\<noteq> 0\" and \"A2 \\<noteq> 0 \\<or> B2 \\<noteq> 0\" \n  shows \"outward (mk_circline A1 B1 (cnj B1) A1) (mk_circline A2 B2 (cnj B2) A2) \\<longleftrightarrow> - Re B1 / Re A1 \\<le> - Re B2 / Re A2\"", "lemma calc_x_axis_intersection_fun_mono:\n  fixes x1 x2 :: real\n  assumes \"x1 > 1\" and \"x2 > x1\"\n  shows \"x1 - sqrt(x1\\<^sup>2 - 1) > x2 - sqrt(x2\\<^sup>2 - 1)\"", "lemma calc_x_axis_intersection_mono:\n  fixes a1 b1 a2 b2 :: real\n  assumes \"-b1/a1 > 1\" and \"a1 \\<noteq> 0\" and \"-b2/a2 \\<ge> -b1/a1\" and \"a2 \\<noteq> 0\"\n  shows \"(-b1 + sgn b1 * sqrt(b1\\<^sup>2 - a1\\<^sup>2)) / a1 \\<ge> (-b2 + sgn b2 * sqrt(b2\\<^sup>2 - a2\\<^sup>2)) / a2\" (is \"?lhs \\<ge> ?rhs\")", "lemma outward:\n  assumes \"is_poincare_line H1\" and \"is_poincare_line H2\"\n  assumes \"intersects_x_axis_positive H1\" and \"intersects_x_axis_positive H2\"\n  assumes \"outward H1 H2\"\n  shows \"Re (to_complex (calc_x_axis_intersection H1)) \\<ge> Re (to_complex (calc_x_axis_intersection H2))\"", "lemma ideal_points_intersects_x_axis:               \n  assumes \"is_poincare_line H\" and \"ideal_points H = {i1, i2}\" and \"H \\<noteq> x_axis\"\n  shows  \"intersects_x_axis H \\<longleftrightarrow> Im (to_complex i1) * Im (to_complex i2) < 0\""], "translations": [["", "lemma poincare_between_x_axis_intersection:\n  assumes \"u \\<in> unit_disc\" and \"v \\<in> unit_disc\" and \"z \\<in> unit_disc\" and \"u \\<noteq> v\"\n  assumes \"u \\<notin> circline_set x_axis\" and \"v \\<notin> circline_set x_axis\"\n  assumes \"z \\<in> circline_set (poincare_line u v) \\<inter> circline_set x_axis\"\n  shows \"poincare_between u z v \\<longleftrightarrow> arg (to_complex u) * arg (to_complex v) < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poincare_between u z v = (arg (to_complex u) * arg (to_complex v) < 0)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. poincare_between u z v = (arg (to_complex u) * arg (to_complex v) < 0)", "have \"\\<forall> u v. u \\<in> unit_disc \\<and> v \\<in> unit_disc \\<and> u \\<noteq> v \\<and>\n       u \\<notin> circline_set x_axis \\<and> v \\<notin> circline_set x_axis \\<and> \n       z \\<in> circline_set (poincare_line u v) \\<inter> circline_set x_axis \\<longrightarrow> \n       (poincare_between u z v \\<longleftrightarrow> arg (to_complex u) * arg (to_complex v) < 0)\" (is \"?P z\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u v.\n       u \\<in> unit_disc \\<and>\n       v \\<in> unit_disc \\<and>\n       u \\<noteq> v \\<and>\n       u \\<notin> circline_set x_axis \\<and>\n       v \\<notin> circline_set x_axis \\<and>\n       z \\<in> circline_set (poincare_line u v) \\<inter>\n               circline_set x_axis \\<longrightarrow>\n       poincare_between u z v =\n       (arg (to_complex u) * arg (to_complex v) < 0)", "proof (rule wlog_real_zero)"], ["proof (state)\ngoal (4 subgoals):\n 1. z \\<in> unit_disc\n 2. is_real (to_complex z)\n 3. \\<And>a u.\n       \\<lbrakk>u \\<in> unit_disc; is_real a; cmod a < 1;\n        \\<forall>ua v.\n           ua \\<in> unit_disc \\<and>\n           v \\<in> unit_disc \\<and>\n           ua \\<noteq> v \\<and>\n           ua \\<notin> circline_set x_axis \\<and>\n           v \\<notin> circline_set x_axis \\<and>\n           moebius_pt (blaschke a) u\n           \\<in> circline_set (poincare_line ua v) \\<inter>\n                 circline_set x_axis \\<longrightarrow>\n           poincare_between ua (moebius_pt (blaschke a) u) v =\n           (arg (to_complex ua) * arg (to_complex v) < 0)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>ua v.\n                            ua \\<in> unit_disc \\<and>\n                            v \\<in> unit_disc \\<and>\n                            ua \\<noteq> v \\<and>\n                            ua \\<notin> circline_set x_axis \\<and>\n                            v \\<notin> circline_set x_axis \\<and>\n                            u \\<in> circline_set\n                                     (poincare_line ua v) \\<inter>\n                                    circline_set x_axis \\<longrightarrow>\n                            poincare_between ua u v =\n                            (arg (to_complex ua) * arg (to_complex v) < 0)\n 4. \\<forall>u v.\n       u \\<in> unit_disc \\<and>\n       v \\<in> unit_disc \\<and>\n       u \\<noteq> v \\<and>\n       u \\<notin> circline_set x_axis \\<and>\n       v \\<notin> circline_set x_axis \\<and>\n       0\\<^sub>h\n       \\<in> circline_set (poincare_line u v) \\<inter>\n             circline_set x_axis \\<longrightarrow>\n       poincare_between u 0\\<^sub>h v =\n       (arg (to_complex u) * arg (to_complex v) < 0)", "show \"?P 0\\<^sub>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u v.\n       u \\<in> unit_disc \\<and>\n       v \\<in> unit_disc \\<and>\n       u \\<noteq> v \\<and>\n       u \\<notin> circline_set x_axis \\<and>\n       v \\<notin> circline_set x_axis \\<and>\n       0\\<^sub>h\n       \\<in> circline_set (poincare_line u v) \\<inter>\n             circline_set x_axis \\<longrightarrow>\n       poincare_between u 0\\<^sub>h v =\n       (arg (to_complex u) * arg (to_complex v) < 0)", "proof ((rule allI)+, rule impI, (erule conjE)+)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v.\n       \\<lbrakk>u \\<in> unit_disc; v \\<in> unit_disc; u \\<noteq> v;\n        u \\<notin> circline_set x_axis; v \\<notin> circline_set x_axis;\n        0\\<^sub>h\n        \\<in> circline_set (poincare_line u v) \\<inter>\n              circline_set x_axis\\<rbrakk>\n       \\<Longrightarrow> poincare_between u 0\\<^sub>h v =\n                         (arg (to_complex u) * arg (to_complex v) < 0)", "fix u v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v.\n       \\<lbrakk>u \\<in> unit_disc; v \\<in> unit_disc; u \\<noteq> v;\n        u \\<notin> circline_set x_axis; v \\<notin> circline_set x_axis;\n        0\\<^sub>h\n        \\<in> circline_set (poincare_line u v) \\<inter>\n              circline_set x_axis\\<rbrakk>\n       \\<Longrightarrow> poincare_between u 0\\<^sub>h v =\n                         (arg (to_complex u) * arg (to_complex v) < 0)", "assume *: \"u \\<in> unit_disc\" \"v \\<in> unit_disc\" \"u \\<noteq> v\"\n                \"u \\<notin> circline_set x_axis\" \"v \\<notin> circline_set x_axis\"\n                \"0\\<^sub>h \\<in> circline_set (poincare_line u v) \\<inter> circline_set x_axis\""], ["proof (state)\nthis:\n  u \\<in> unit_disc\n  v \\<in> unit_disc\n  u \\<noteq> v\n  u \\<notin> circline_set x_axis\n  v \\<notin> circline_set x_axis\n  0\\<^sub>h\n  \\<in> circline_set (poincare_line u v) \\<inter> circline_set x_axis\n\ngoal (1 subgoal):\n 1. \\<And>u v.\n       \\<lbrakk>u \\<in> unit_disc; v \\<in> unit_disc; u \\<noteq> v;\n        u \\<notin> circline_set x_axis; v \\<notin> circline_set x_axis;\n        0\\<^sub>h\n        \\<in> circline_set (poincare_line u v) \\<inter>\n              circline_set x_axis\\<rbrakk>\n       \\<Longrightarrow> poincare_between u 0\\<^sub>h v =\n                         (arg (to_complex u) * arg (to_complex v) < 0)", "obtain u' v' where uv: \"u = of_complex u'\" \"v = of_complex v'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u' v'.\n        \\<lbrakk>u = of_complex u'; v = of_complex v'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using * inf_or_of_complex[of u] inf_or_of_complex[of v]"], ["proof (prove)\nusing this:\n  u \\<in> unit_disc\n  v \\<in> unit_disc\n  u \\<noteq> v\n  u \\<notin> circline_set x_axis\n  v \\<notin> circline_set x_axis\n  0\\<^sub>h\n  \\<in> circline_set (poincare_line u v) \\<inter> circline_set x_axis\n  u = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. u = of_complex x)\n  v = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. v = of_complex x)\n\ngoal (1 subgoal):\n 1. (\\<And>u' v'.\n        \\<lbrakk>u = of_complex u'; v = of_complex v'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  u = of_complex u'\n  v = of_complex v'\n\ngoal (1 subgoal):\n 1. \\<And>u v.\n       \\<lbrakk>u \\<in> unit_disc; v \\<in> unit_disc; u \\<noteq> v;\n        u \\<notin> circline_set x_axis; v \\<notin> circline_set x_axis;\n        0\\<^sub>h\n        \\<in> circline_set (poincare_line u v) \\<inter>\n              circline_set x_axis\\<rbrakk>\n       \\<Longrightarrow> poincare_between u 0\\<^sub>h v =\n                         (arg (to_complex u) * arg (to_complex v) < 0)", "hence \"u \\<noteq> 0\\<^sub>h\" \"v \\<noteq> 0\\<^sub>h\" \"u' \\<noteq> 0\" \"v' \\<noteq> 0\""], ["proof (prove)\nusing this:\n  u = of_complex u'\n  v = of_complex v'\n\ngoal (1 subgoal):\n 1. (u \\<noteq> 0\\<^sub>h &&& v \\<noteq> 0\\<^sub>h) &&&\n    u' \\<noteq> 0 &&& v' \\<noteq> 0", "using *"], ["proof (prove)\nusing this:\n  u = of_complex u'\n  v = of_complex v'\n  u \\<in> unit_disc\n  v \\<in> unit_disc\n  u \\<noteq> v\n  u \\<notin> circline_set x_axis\n  v \\<notin> circline_set x_axis\n  0\\<^sub>h\n  \\<in> circline_set (poincare_line u v) \\<inter> circline_set x_axis\n\ngoal (1 subgoal):\n 1. (u \\<noteq> 0\\<^sub>h &&& v \\<noteq> 0\\<^sub>h) &&&\n    u' \\<noteq> 0 &&& v' \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  u \\<noteq> 0\\<^sub>h\n  v \\<noteq> 0\\<^sub>h\n  u' \\<noteq> 0\n  v' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>u v.\n       \\<lbrakk>u \\<in> unit_disc; v \\<in> unit_disc; u \\<noteq> v;\n        u \\<notin> circline_set x_axis; v \\<notin> circline_set x_axis;\n        0\\<^sub>h\n        \\<in> circline_set (poincare_line u v) \\<inter>\n              circline_set x_axis\\<rbrakk>\n       \\<Longrightarrow> poincare_between u 0\\<^sub>h v =\n                         (arg (to_complex u) * arg (to_complex v) < 0)", "hence \"arg u' \\<noteq> 0\" \"arg v' \\<noteq> 0\""], ["proof (prove)\nusing this:\n  u \\<noteq> 0\\<^sub>h\n  v \\<noteq> 0\\<^sub>h\n  u' \\<noteq> 0\n  v' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. arg u' \\<noteq> 0 &&& arg v' \\<noteq> 0", "using * arg_0_iff[of u'] arg_0_iff[of v']"], ["proof (prove)\nusing this:\n  u \\<noteq> 0\\<^sub>h\n  v \\<noteq> 0\\<^sub>h\n  u' \\<noteq> 0\n  v' \\<noteq> 0\n  u \\<in> unit_disc\n  v \\<in> unit_disc\n  u \\<noteq> v\n  u \\<notin> circline_set x_axis\n  v \\<notin> circline_set x_axis\n  0\\<^sub>h\n  \\<in> circline_set (poincare_line u v) \\<inter> circline_set x_axis\n  (u' \\<noteq> 0 \\<and> arg u' = 0) = (is_real u' \\<and> 0 < Re u')\n  (v' \\<noteq> 0 \\<and> arg v' = 0) = (is_real v' \\<and> 0 < Re v')\n\ngoal (1 subgoal):\n 1. arg u' \\<noteq> 0 &&& arg v' \\<noteq> 0", "unfolding circline_set_x_axis uv"], ["proof (prove)\nusing this:\n  of_complex u' \\<noteq> 0\\<^sub>h\n  of_complex v' \\<noteq> 0\\<^sub>h\n  u' \\<noteq> 0\n  v' \\<noteq> 0\n  of_complex u' \\<in> unit_disc\n  of_complex v' \\<in> unit_disc\n  of_complex u' \\<noteq> of_complex v'\n  of_complex u'\n  \\<notin> of_complex ` {x. is_real x} \\<union> {\\<infinity>\\<^sub>h}\n  of_complex v'\n  \\<notin> of_complex ` {x. is_real x} \\<union> {\\<infinity>\\<^sub>h}\n  0\\<^sub>h\n  \\<in> circline_set\n         (poincare_line (of_complex u') (of_complex v')) \\<inter>\n        (of_complex ` {x. is_real x} \\<union> {\\<infinity>\\<^sub>h})\n  (u' \\<noteq> 0 \\<and> arg u' = 0) = (is_real u' \\<and> 0 < Re u')\n  (v' \\<noteq> 0 \\<and> arg v' = 0) = (is_real v' \\<and> 0 < Re v')\n\ngoal (1 subgoal):\n 1. arg u' \\<noteq> 0 &&& arg v' \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  arg u' \\<noteq> 0\n  arg v' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>u v.\n       \\<lbrakk>u \\<in> unit_disc; v \\<in> unit_disc; u \\<noteq> v;\n        u \\<notin> circline_set x_axis; v \\<notin> circline_set x_axis;\n        0\\<^sub>h\n        \\<in> circline_set (poincare_line u v) \\<inter>\n              circline_set x_axis\\<rbrakk>\n       \\<Longrightarrow> poincare_between u 0\\<^sub>h v =\n                         (arg (to_complex u) * arg (to_complex v) < 0)", "have \"poincare_collinear {0\\<^sub>h, u, v}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poincare_collinear {0\\<^sub>h, u, v}", "using *"], ["proof (prove)\nusing this:\n  u \\<in> unit_disc\n  v \\<in> unit_disc\n  u \\<noteq> v\n  u \\<notin> circline_set x_axis\n  v \\<notin> circline_set x_axis\n  0\\<^sub>h\n  \\<in> circline_set (poincare_line u v) \\<inter> circline_set x_axis\n\ngoal (1 subgoal):\n 1. poincare_collinear {0\\<^sub>h, u, v}", "unfolding poincare_collinear_def"], ["proof (prove)\nusing this:\n  u \\<in> unit_disc\n  v \\<in> unit_disc\n  u \\<noteq> v\n  u \\<notin> circline_set x_axis\n  v \\<notin> circline_set x_axis\n  0\\<^sub>h\n  \\<in> circline_set (poincare_line u v) \\<inter> circline_set x_axis\n\ngoal (1 subgoal):\n 1. \\<exists>p.\n       is_poincare_line p \\<and>\n       {0\\<^sub>h, u, v} \\<subseteq> circline_set p", "by (rule_tac x=\"poincare_line u v\" in exI, simp)"], ["proof (state)\nthis:\n  poincare_collinear {0\\<^sub>h, u, v}\n\ngoal (1 subgoal):\n 1. \\<And>u v.\n       \\<lbrakk>u \\<in> unit_disc; v \\<in> unit_disc; u \\<noteq> v;\n        u \\<notin> circline_set x_axis; v \\<notin> circline_set x_axis;\n        0\\<^sub>h\n        \\<in> circline_set (poincare_line u v) \\<inter>\n              circline_set x_axis\\<rbrakk>\n       \\<Longrightarrow> poincare_between u 0\\<^sub>h v =\n                         (arg (to_complex u) * arg (to_complex v) < 0)", "have \"(\\<exists>k<0. u' = cor k * v') \\<longleftrightarrow> (arg u' * arg v' < 0)\" (is \"?lhs \\<longleftrightarrow> ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>k<0. u' = cor k * v') = (arg u' * arg v' < 0)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>k<0. u' = cor k * v' \\<Longrightarrow> arg u' * arg v' < 0\n 2. arg u' * arg v' < 0 \\<Longrightarrow> \\<exists>k<0. u' = cor k * v'", "assume \"?lhs\""], ["proof (state)\nthis:\n  \\<exists>k<0. u' = cor k * v'\n\ngoal (2 subgoals):\n 1. \\<exists>k<0. u' = cor k * v' \\<Longrightarrow> arg u' * arg v' < 0\n 2. arg u' * arg v' < 0 \\<Longrightarrow> \\<exists>k<0. u' = cor k * v'", "then"], ["proof (chain)\npicking this:\n  \\<exists>k<0. u' = cor k * v'", "obtain k where \"k < 0\" \"u' = cor k * v'\""], ["proof (prove)\nusing this:\n  \\<exists>k<0. u' = cor k * v'\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k < 0; u' = cor k * v'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  k < 0\n  u' = cor k * v'\n\ngoal (2 subgoals):\n 1. \\<exists>k<0. u' = cor k * v' \\<Longrightarrow> arg u' * arg v' < 0\n 2. arg u' * arg v' < 0 \\<Longrightarrow> \\<exists>k<0. u' = cor k * v'", "thus ?rhs"], ["proof (prove)\nusing this:\n  k < 0\n  u' = cor k * v'\n\ngoal (1 subgoal):\n 1. arg u' * arg v' < 0", "using arg_mult_real_negative[of k v'] arg_uminus_opposite_sign[of v']"], ["proof (prove)\nusing this:\n  k < 0\n  u' = cor k * v'\n  k < 0 \\<Longrightarrow> arg (cor k * v') = arg (- v')\n  v' \\<noteq> 0 \\<Longrightarrow> (0 < arg v') = (\\<not> 0 < arg (- v'))\n\ngoal (1 subgoal):\n 1. arg u' * arg v' < 0", "using \\<open>u' \\<noteq> 0\\<close> \\<open>v' \\<noteq> 0\\<close> \\<open>arg u' \\<noteq> 0\\<close> \\<open>arg v' \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  k < 0\n  u' = cor k * v'\n  k < 0 \\<Longrightarrow> arg (cor k * v') = arg (- v')\n  v' \\<noteq> 0 \\<Longrightarrow> (0 < arg v') = (\\<not> 0 < arg (- v'))\n  u' \\<noteq> 0\n  v' \\<noteq> 0\n  arg u' \\<noteq> 0\n  arg v' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. arg u' * arg v' < 0", "by (auto simp add: mult_neg_pos mult_pos_neg)"], ["proof (state)\nthis:\n  arg u' * arg v' < 0\n\ngoal (1 subgoal):\n 1. arg u' * arg v' < 0 \\<Longrightarrow> \\<exists>k<0. u' = cor k * v'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. arg u' * arg v' < 0 \\<Longrightarrow> \\<exists>k<0. u' = cor k * v'", "assume ?rhs"], ["proof (state)\nthis:\n  arg u' * arg v' < 0\n\ngoal (1 subgoal):\n 1. arg u' * arg v' < 0 \\<Longrightarrow> \\<exists>k<0. u' = cor k * v'", "obtain ru rv \\<phi> where polar: \"u' = cor ru * cis \\<phi>\" \"v' = cor rv * cis \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ru \\<phi> rv.\n        \\<lbrakk>u' = cor ru * cis \\<phi>; v' = cor rv * cis \\<phi>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>poincare_collinear {0\\<^sub>h, u, v}\\<close> poincare_collinear_zero_polar_form[of u' v'] uv * \\<open>u' \\<noteq> 0\\<close> \\<open>v' \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  poincare_collinear {0\\<^sub>h, u, v}\n  \\<lbrakk>poincare_collinear {0\\<^sub>h, of_complex u', of_complex v'};\n   u' \\<noteq> 0; v' \\<noteq> 0; of_complex u' \\<in> unit_disc;\n   of_complex v' \\<in> unit_disc\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<phi> rx ry.\n                       u' = cor rx * cis \\<phi> \\<and>\n                       v' = cor ry * cis \\<phi> \\<and>\n                       rx \\<noteq> 0 \\<and> ry \\<noteq> 0\n  u = of_complex u'\n  v = of_complex v'\n  u \\<in> unit_disc\n  v \\<in> unit_disc\n  u \\<noteq> v\n  u \\<notin> circline_set x_axis\n  v \\<notin> circline_set x_axis\n  0\\<^sub>h\n  \\<in> circline_set (poincare_line u v) \\<inter> circline_set x_axis\n  u' \\<noteq> 0\n  v' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>ru \\<phi> rv.\n        \\<lbrakk>u' = cor ru * cis \\<phi>; v' = cor rv * cis \\<phi>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  u' = cor ru * cis \\<phi>\n  v' = cor rv * cis \\<phi>\n\ngoal (1 subgoal):\n 1. arg u' * arg v' < 0 \\<Longrightarrow> \\<exists>k<0. u' = cor k * v'", "have \"ru * rv < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ru * rv < 0", "using polar \\<open>?rhs\\<close> \\<open>u' \\<noteq> 0\\<close> \\<open>v' \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  u' = cor ru * cis \\<phi>\n  v' = cor rv * cis \\<phi>\n  arg u' * arg v' < 0\n  u' \\<noteq> 0\n  v' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. ru * rv < 0", "using arg_mult_real_negative[of \"ru\" \"cis \\<phi>\"] arg_mult_real_positive[of \"ru\" \"cis \\<phi>\"]"], ["proof (prove)\nusing this:\n  u' = cor ru * cis \\<phi>\n  v' = cor rv * cis \\<phi>\n  arg u' * arg v' < 0\n  u' \\<noteq> 0\n  v' \\<noteq> 0\n  ru < 0 \\<Longrightarrow> arg (cor ru * cis \\<phi>) = arg (- cis \\<phi>)\n  0 < ru \\<Longrightarrow> arg (cor ru * cis \\<phi>) = arg (cis \\<phi>)\n\ngoal (1 subgoal):\n 1. ru * rv < 0", "using arg_mult_real_negative[of \"rv\" \"cis \\<phi>\"] arg_mult_real_positive[of \"rv\" \"cis \\<phi>\"]"], ["proof (prove)\nusing this:\n  u' = cor ru * cis \\<phi>\n  v' = cor rv * cis \\<phi>\n  arg u' * arg v' < 0\n  u' \\<noteq> 0\n  v' \\<noteq> 0\n  ru < 0 \\<Longrightarrow> arg (cor ru * cis \\<phi>) = arg (- cis \\<phi>)\n  0 < ru \\<Longrightarrow> arg (cor ru * cis \\<phi>) = arg (cis \\<phi>)\n  rv < 0 \\<Longrightarrow> arg (cor rv * cis \\<phi>) = arg (- cis \\<phi>)\n  0 < rv \\<Longrightarrow> arg (cor rv * cis \\<phi>) = arg (cis \\<phi>)\n\ngoal (1 subgoal):\n 1. ru * rv < 0", "apply (cases \"ru > 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>u' = cor ru * cis \\<phi>; v' = cor rv * cis \\<phi>;\n     arg u' * arg v' < 0; u' \\<noteq> 0; v' \\<noteq> 0;\n     ru < 0 \\<Longrightarrow>\n     arg (cor ru * cis \\<phi>) = arg (- cis \\<phi>);\n     0 < ru \\<Longrightarrow> arg (cor ru * cis \\<phi>) = arg (cis \\<phi>);\n     rv < 0 \\<Longrightarrow>\n     arg (cor rv * cis \\<phi>) = arg (- cis \\<phi>);\n     0 < rv \\<Longrightarrow> arg (cor rv * cis \\<phi>) = arg (cis \\<phi>);\n     0 < ru\\<rbrakk>\n    \\<Longrightarrow> ru * rv < 0\n 2. \\<lbrakk>u' = cor ru * cis \\<phi>; v' = cor rv * cis \\<phi>;\n     arg u' * arg v' < 0; u' \\<noteq> 0; v' \\<noteq> 0;\n     ru < 0 \\<Longrightarrow>\n     arg (cor ru * cis \\<phi>) = arg (- cis \\<phi>);\n     0 < ru \\<Longrightarrow> arg (cor ru * cis \\<phi>) = arg (cis \\<phi>);\n     rv < 0 \\<Longrightarrow>\n     arg (cor rv * cis \\<phi>) = arg (- cis \\<phi>);\n     0 < rv \\<Longrightarrow> arg (cor rv * cis \\<phi>) = arg (cis \\<phi>);\n     \\<not> 0 < ru\\<rbrakk>\n    \\<Longrightarrow> ru * rv < 0", "apply (cases \"rv > 0\", simp, simp add: mult_pos_neg)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u' = cor ru * cis \\<phi>; v' = cor rv * cis \\<phi>;\n     arg u' * arg v' < 0; u' \\<noteq> 0; v' \\<noteq> 0;\n     ru < 0 \\<Longrightarrow>\n     arg (cor ru * cis \\<phi>) = arg (- cis \\<phi>);\n     0 < ru \\<Longrightarrow> arg (cor ru * cis \\<phi>) = arg (cis \\<phi>);\n     rv < 0 \\<Longrightarrow>\n     arg (cor rv * cis \\<phi>) = arg (- cis \\<phi>);\n     0 < rv \\<Longrightarrow> arg (cor rv * cis \\<phi>) = arg (cis \\<phi>);\n     \\<not> 0 < ru\\<rbrakk>\n    \\<Longrightarrow> ru * rv < 0", "apply (cases \"rv > 0\", simp add: mult_neg_pos, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ru * rv < 0\n\ngoal (1 subgoal):\n 1. arg u' * arg v' < 0 \\<Longrightarrow> \\<exists>k<0. u' = cor k * v'", "thus \"?lhs\""], ["proof (prove)\nusing this:\n  ru * rv < 0\n\ngoal (1 subgoal):\n 1. \\<exists>k<0. u' = cor k * v'", "using polar"], ["proof (prove)\nusing this:\n  ru * rv < 0\n  u' = cor ru * cis \\<phi>\n  v' = cor rv * cis \\<phi>\n\ngoal (1 subgoal):\n 1. \\<exists>k<0. u' = cor k * v'", "by (rule_tac x=\"ru / rv\" in exI, auto simp add: divide_less_0_iff mult_less_0_iff)"], ["proof (state)\nthis:\n  \\<exists>k<0. u' = cor k * v'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>k<0. u' = cor k * v') = (arg u' * arg v' < 0)\n\ngoal (1 subgoal):\n 1. \\<And>u v.\n       \\<lbrakk>u \\<in> unit_disc; v \\<in> unit_disc; u \\<noteq> v;\n        u \\<notin> circline_set x_axis; v \\<notin> circline_set x_axis;\n        0\\<^sub>h\n        \\<in> circline_set (poincare_line u v) \\<inter>\n              circline_set x_axis\\<rbrakk>\n       \\<Longrightarrow> poincare_between u 0\\<^sub>h v =\n                         (arg (to_complex u) * arg (to_complex v) < 0)", "thus \"poincare_between u 0\\<^sub>h v = (arg (to_complex u) * arg (to_complex v) < 0)\""], ["proof (prove)\nusing this:\n  (\\<exists>k<0. u' = cor k * v') = (arg u' * arg v' < 0)\n\ngoal (1 subgoal):\n 1. poincare_between u 0\\<^sub>h v =\n    (arg (to_complex u) * arg (to_complex v) < 0)", "using poincare_between_u0v[of u v] * \\<open>u \\<noteq> 0\\<^sub>h\\<close> \\<open>v \\<noteq> 0\\<^sub>h\\<close> uv"], ["proof (prove)\nusing this:\n  (\\<exists>k<0. u' = cor k * v') = (arg u' * arg v' < 0)\n  \\<lbrakk>u \\<in> unit_disc; v \\<in> unit_disc; u \\<noteq> 0\\<^sub>h;\n   v \\<noteq> 0\\<^sub>h\\<rbrakk>\n  \\<Longrightarrow> poincare_between u 0\\<^sub>h v =\n                    (\\<exists>k<0. to_complex u = cor k * to_complex v)\n  u \\<in> unit_disc\n  v \\<in> unit_disc\n  u \\<noteq> v\n  u \\<notin> circline_set x_axis\n  v \\<notin> circline_set x_axis\n  0\\<^sub>h\n  \\<in> circline_set (poincare_line u v) \\<inter> circline_set x_axis\n  u \\<noteq> 0\\<^sub>h\n  v \\<noteq> 0\\<^sub>h\n  u = of_complex u'\n  v = of_complex v'\n\ngoal (1 subgoal):\n 1. poincare_between u 0\\<^sub>h v =\n    (arg (to_complex u) * arg (to_complex v) < 0)", "by simp"], ["proof (state)\nthis:\n  poincare_between u 0\\<^sub>h v =\n  (arg (to_complex u) * arg (to_complex v) < 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>u v.\n     u \\<in> unit_disc \\<and>\n     v \\<in> unit_disc \\<and>\n     u \\<noteq> v \\<and>\n     u \\<notin> circline_set x_axis \\<and>\n     v \\<notin> circline_set x_axis \\<and>\n     0\\<^sub>h\n     \\<in> circline_set (poincare_line u v) \\<inter>\n           circline_set x_axis \\<longrightarrow>\n     poincare_between u 0\\<^sub>h v =\n     (arg (to_complex u) * arg (to_complex v) < 0)\n\ngoal (3 subgoals):\n 1. z \\<in> unit_disc\n 2. is_real (to_complex z)\n 3. \\<And>a u.\n       \\<lbrakk>u \\<in> unit_disc; is_real a; cmod a < 1;\n        \\<forall>ua v.\n           ua \\<in> unit_disc \\<and>\n           v \\<in> unit_disc \\<and>\n           ua \\<noteq> v \\<and>\n           ua \\<notin> circline_set x_axis \\<and>\n           v \\<notin> circline_set x_axis \\<and>\n           moebius_pt (blaschke a) u\n           \\<in> circline_set (poincare_line ua v) \\<inter>\n                 circline_set x_axis \\<longrightarrow>\n           poincare_between ua (moebius_pt (blaschke a) u) v =\n           (arg (to_complex ua) * arg (to_complex v) < 0)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>ua v.\n                            ua \\<in> unit_disc \\<and>\n                            v \\<in> unit_disc \\<and>\n                            ua \\<noteq> v \\<and>\n                            ua \\<notin> circline_set x_axis \\<and>\n                            v \\<notin> circline_set x_axis \\<and>\n                            u \\<in> circline_set\n                                     (poincare_line ua v) \\<inter>\n                                    circline_set x_axis \\<longrightarrow>\n                            poincare_between ua u v =\n                            (arg (to_complex ua) * arg (to_complex v) < 0)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. z \\<in> unit_disc\n 2. is_real (to_complex z)\n 3. \\<And>a u.\n       \\<lbrakk>u \\<in> unit_disc; is_real a; cmod a < 1;\n        \\<forall>ua v.\n           ua \\<in> unit_disc \\<and>\n           v \\<in> unit_disc \\<and>\n           ua \\<noteq> v \\<and>\n           ua \\<notin> circline_set x_axis \\<and>\n           v \\<notin> circline_set x_axis \\<and>\n           moebius_pt (blaschke a) u\n           \\<in> circline_set (poincare_line ua v) \\<inter>\n                 circline_set x_axis \\<longrightarrow>\n           poincare_between ua (moebius_pt (blaschke a) u) v =\n           (arg (to_complex ua) * arg (to_complex v) < 0)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>ua v.\n                            ua \\<in> unit_disc \\<and>\n                            v \\<in> unit_disc \\<and>\n                            ua \\<noteq> v \\<and>\n                            ua \\<notin> circline_set x_axis \\<and>\n                            v \\<notin> circline_set x_axis \\<and>\n                            u \\<in> circline_set\n                                     (poincare_line ua v) \\<inter>\n                                    circline_set x_axis \\<longrightarrow>\n                            poincare_between ua u v =\n                            (arg (to_complex ua) * arg (to_complex v) < 0)", "fix a z"], ["proof (state)\ngoal (3 subgoals):\n 1. z \\<in> unit_disc\n 2. is_real (to_complex z)\n 3. \\<And>a u.\n       \\<lbrakk>u \\<in> unit_disc; is_real a; cmod a < 1;\n        \\<forall>ua v.\n           ua \\<in> unit_disc \\<and>\n           v \\<in> unit_disc \\<and>\n           ua \\<noteq> v \\<and>\n           ua \\<notin> circline_set x_axis \\<and>\n           v \\<notin> circline_set x_axis \\<and>\n           moebius_pt (blaschke a) u\n           \\<in> circline_set (poincare_line ua v) \\<inter>\n                 circline_set x_axis \\<longrightarrow>\n           poincare_between ua (moebius_pt (blaschke a) u) v =\n           (arg (to_complex ua) * arg (to_complex v) < 0)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>ua v.\n                            ua \\<in> unit_disc \\<and>\n                            v \\<in> unit_disc \\<and>\n                            ua \\<noteq> v \\<and>\n                            ua \\<notin> circline_set x_axis \\<and>\n                            v \\<notin> circline_set x_axis \\<and>\n                            u \\<in> circline_set\n                                     (poincare_line ua v) \\<inter>\n                                    circline_set x_axis \\<longrightarrow>\n                            poincare_between ua u v =\n                            (arg (to_complex ua) * arg (to_complex v) < 0)", "assume 1: \"is_real a\" \"cmod a < 1\" \"z \\<in> unit_disc\""], ["proof (state)\nthis:\n  is_real a\n  cmod a < 1\n  z \\<in> unit_disc\n\ngoal (3 subgoals):\n 1. z \\<in> unit_disc\n 2. is_real (to_complex z)\n 3. \\<And>a u.\n       \\<lbrakk>u \\<in> unit_disc; is_real a; cmod a < 1;\n        \\<forall>ua v.\n           ua \\<in> unit_disc \\<and>\n           v \\<in> unit_disc \\<and>\n           ua \\<noteq> v \\<and>\n           ua \\<notin> circline_set x_axis \\<and>\n           v \\<notin> circline_set x_axis \\<and>\n           moebius_pt (blaschke a) u\n           \\<in> circline_set (poincare_line ua v) \\<inter>\n                 circline_set x_axis \\<longrightarrow>\n           poincare_between ua (moebius_pt (blaschke a) u) v =\n           (arg (to_complex ua) * arg (to_complex v) < 0)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>ua v.\n                            ua \\<in> unit_disc \\<and>\n                            v \\<in> unit_disc \\<and>\n                            ua \\<noteq> v \\<and>\n                            ua \\<notin> circline_set x_axis \\<and>\n                            v \\<notin> circline_set x_axis \\<and>\n                            u \\<in> circline_set\n                                     (poincare_line ua v) \\<inter>\n                                    circline_set x_axis \\<longrightarrow>\n                            poincare_between ua u v =\n                            (arg (to_complex ua) * arg (to_complex v) < 0)", "assume 2: \"?P (moebius_pt (blaschke a) z)\""], ["proof (state)\nthis:\n  \\<forall>u v.\n     u \\<in> unit_disc \\<and>\n     v \\<in> unit_disc \\<and>\n     u \\<noteq> v \\<and>\n     u \\<notin> circline_set x_axis \\<and>\n     v \\<notin> circline_set x_axis \\<and>\n     moebius_pt (blaschke a) z\n     \\<in> circline_set (poincare_line u v) \\<inter>\n           circline_set x_axis \\<longrightarrow>\n     poincare_between u (moebius_pt (blaschke a) z) v =\n     (arg (to_complex u) * arg (to_complex v) < 0)\n\ngoal (3 subgoals):\n 1. z \\<in> unit_disc\n 2. is_real (to_complex z)\n 3. \\<And>a u.\n       \\<lbrakk>u \\<in> unit_disc; is_real a; cmod a < 1;\n        \\<forall>ua v.\n           ua \\<in> unit_disc \\<and>\n           v \\<in> unit_disc \\<and>\n           ua \\<noteq> v \\<and>\n           ua \\<notin> circline_set x_axis \\<and>\n           v \\<notin> circline_set x_axis \\<and>\n           moebius_pt (blaschke a) u\n           \\<in> circline_set (poincare_line ua v) \\<inter>\n                 circline_set x_axis \\<longrightarrow>\n           poincare_between ua (moebius_pt (blaschke a) u) v =\n           (arg (to_complex ua) * arg (to_complex v) < 0)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>ua v.\n                            ua \\<in> unit_disc \\<and>\n                            v \\<in> unit_disc \\<and>\n                            ua \\<noteq> v \\<and>\n                            ua \\<notin> circline_set x_axis \\<and>\n                            v \\<notin> circline_set x_axis \\<and>\n                            u \\<in> circline_set\n                                     (poincare_line ua v) \\<inter>\n                                    circline_set x_axis \\<longrightarrow>\n                            poincare_between ua u v =\n                            (arg (to_complex ua) * arg (to_complex v) < 0)", "show \"?P z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u v.\n       u \\<in> unit_disc \\<and>\n       v \\<in> unit_disc \\<and>\n       u \\<noteq> v \\<and>\n       u \\<notin> circline_set x_axis \\<and>\n       v \\<notin> circline_set x_axis \\<and>\n       z \\<in> circline_set (poincare_line u v) \\<inter>\n               circline_set x_axis \\<longrightarrow>\n       poincare_between u z v =\n       (arg (to_complex u) * arg (to_complex v) < 0)", "proof ((rule allI)+, rule impI, (erule conjE)+)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v.\n       \\<lbrakk>u \\<in> unit_disc; v \\<in> unit_disc; u \\<noteq> v;\n        u \\<notin> circline_set x_axis; v \\<notin> circline_set x_axis;\n        z \\<in> circline_set (poincare_line u v) \\<inter>\n                circline_set x_axis\\<rbrakk>\n       \\<Longrightarrow> poincare_between u z v =\n                         (arg (to_complex u) * arg (to_complex v) < 0)", "fix u v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v.\n       \\<lbrakk>u \\<in> unit_disc; v \\<in> unit_disc; u \\<noteq> v;\n        u \\<notin> circline_set x_axis; v \\<notin> circline_set x_axis;\n        z \\<in> circline_set (poincare_line u v) \\<inter>\n                circline_set x_axis\\<rbrakk>\n       \\<Longrightarrow> poincare_between u z v =\n                         (arg (to_complex u) * arg (to_complex v) < 0)", "let ?M = \"moebius_pt (blaschke a)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v.\n       \\<lbrakk>u \\<in> unit_disc; v \\<in> unit_disc; u \\<noteq> v;\n        u \\<notin> circline_set x_axis; v \\<notin> circline_set x_axis;\n        z \\<in> circline_set (poincare_line u v) \\<inter>\n                circline_set x_axis\\<rbrakk>\n       \\<Longrightarrow> poincare_between u z v =\n                         (arg (to_complex u) * arg (to_complex v) < 0)", "let ?Mu = \"?M u\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v.\n       \\<lbrakk>u \\<in> unit_disc; v \\<in> unit_disc; u \\<noteq> v;\n        u \\<notin> circline_set x_axis; v \\<notin> circline_set x_axis;\n        z \\<in> circline_set (poincare_line u v) \\<inter>\n                circline_set x_axis\\<rbrakk>\n       \\<Longrightarrow> poincare_between u z v =\n                         (arg (to_complex u) * arg (to_complex v) < 0)", "let ?Mv = \"?M v\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u v.\n       \\<lbrakk>u \\<in> unit_disc; v \\<in> unit_disc; u \\<noteq> v;\n        u \\<notin> circline_set x_axis; v \\<notin> circline_set x_axis;\n        z \\<in> circline_set (poincare_line u v) \\<inter>\n                circline_set x_axis\\<rbrakk>\n       \\<Longrightarrow> poincare_between u z v =\n                         (arg (to_complex u) * arg (to_complex v) < 0)", "assume *: \"u \\<in> unit_disc\" \"v \\<in> unit_disc\" \"u \\<noteq> v\" \"u \\<notin> circline_set x_axis\" \"v \\<notin> circline_set x_axis\""], ["proof (state)\nthis:\n  u \\<in> unit_disc\n  v \\<in> unit_disc\n  u \\<noteq> v\n  u \\<notin> circline_set x_axis\n  v \\<notin> circline_set x_axis\n\ngoal (1 subgoal):\n 1. \\<And>u v.\n       \\<lbrakk>u \\<in> unit_disc; v \\<in> unit_disc; u \\<noteq> v;\n        u \\<notin> circline_set x_axis; v \\<notin> circline_set x_axis;\n        z \\<in> circline_set (poincare_line u v) \\<inter>\n                circline_set x_axis\\<rbrakk>\n       \\<Longrightarrow> poincare_between u z v =\n                         (arg (to_complex u) * arg (to_complex v) < 0)", "hence \"u \\<noteq> \\<infinity>\\<^sub>h\" \"v \\<noteq> \\<infinity>\\<^sub>h\""], ["proof (prove)\nusing this:\n  u \\<in> unit_disc\n  v \\<in> unit_disc\n  u \\<noteq> v\n  u \\<notin> circline_set x_axis\n  v \\<notin> circline_set x_axis\n\ngoal (1 subgoal):\n 1. u \\<noteq> \\<infinity>\\<^sub>h &&& v \\<noteq> \\<infinity>\\<^sub>h", "by auto"], ["proof (state)\nthis:\n  u \\<noteq> \\<infinity>\\<^sub>h\n  v \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. \\<And>u v.\n       \\<lbrakk>u \\<in> unit_disc; v \\<in> unit_disc; u \\<noteq> v;\n        u \\<notin> circline_set x_axis; v \\<notin> circline_set x_axis;\n        z \\<in> circline_set (poincare_line u v) \\<inter>\n                circline_set x_axis\\<rbrakk>\n       \\<Longrightarrow> poincare_between u z v =\n                         (arg (to_complex u) * arg (to_complex v) < 0)", "have **: \"\\<And> x y :: real. x * y < 0 \\<longleftrightarrow> sgn (x * y) < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y. (x * y < 0) = (sgn (x * y) < 0)", "by simp"], ["proof (state)\nthis:\n  (?x * ?y < 0) = (sgn (?x * ?y) < 0)\n\ngoal (1 subgoal):\n 1. \\<And>u v.\n       \\<lbrakk>u \\<in> unit_disc; v \\<in> unit_disc; u \\<noteq> v;\n        u \\<notin> circline_set x_axis; v \\<notin> circline_set x_axis;\n        z \\<in> circline_set (poincare_line u v) \\<inter>\n                circline_set x_axis\\<rbrakk>\n       \\<Longrightarrow> poincare_between u z v =\n                         (arg (to_complex u) * arg (to_complex v) < 0)", "assume \"z \\<in> circline_set (poincare_line u v) \\<inter> circline_set x_axis\""], ["proof (state)\nthis:\n  z \\<in> circline_set (poincare_line u v) \\<inter> circline_set x_axis\n\ngoal (1 subgoal):\n 1. \\<And>u v.\n       \\<lbrakk>u \\<in> unit_disc; v \\<in> unit_disc; u \\<noteq> v;\n        u \\<notin> circline_set x_axis; v \\<notin> circline_set x_axis;\n        z \\<in> circline_set (poincare_line u v) \\<inter>\n                circline_set x_axis\\<rbrakk>\n       \\<Longrightarrow> poincare_between u z v =\n                         (arg (to_complex u) * arg (to_complex v) < 0)", "thus \"poincare_between u z v = (arg (to_complex u) * arg (to_complex v) < 0)\""], ["proof (prove)\nusing this:\n  z \\<in> circline_set (poincare_line u v) \\<inter> circline_set x_axis\n\ngoal (1 subgoal):\n 1. poincare_between u z v = (arg (to_complex u) * arg (to_complex v) < 0)", "using * 1 2[rule_format, of ?Mu ?Mv] \\<open>cmod a < 1\\<close> \\<open>is_real a\\<close> blaschke_unit_disc_fix[of a]"], ["proof (prove)\nusing this:\n  z \\<in> circline_set (poincare_line u v) \\<inter> circline_set x_axis\n  u \\<in> unit_disc\n  v \\<in> unit_disc\n  u \\<noteq> v\n  u \\<notin> circline_set x_axis\n  v \\<notin> circline_set x_axis\n  is_real a\n  cmod a < 1\n  z \\<in> unit_disc\n  moebius_pt (blaschke a) u \\<in> unit_disc \\<and>\n  moebius_pt (blaschke a) v \\<in> unit_disc \\<and>\n  moebius_pt (blaschke a) u \\<noteq> moebius_pt (blaschke a) v \\<and>\n  moebius_pt (blaschke a) u \\<notin> circline_set x_axis \\<and>\n  moebius_pt (blaschke a) v \\<notin> circline_set x_axis \\<and>\n  moebius_pt (blaschke a) z\n  \\<in> circline_set\n         (poincare_line (moebius_pt (blaschke a) u)\n           (moebius_pt (blaschke a) v)) \\<inter>\n        circline_set x_axis \\<Longrightarrow>\n  poincare_between (moebius_pt (blaschke a) u) (moebius_pt (blaschke a) z)\n   (moebius_pt (blaschke a) v) =\n  (arg (to_complex (moebius_pt (blaschke a) u)) *\n   arg (to_complex (moebius_pt (blaschke a) v))\n   < 0)\n  cmod a < 1\n  is_real a\n  cmod a < 1 \\<Longrightarrow> unit_disc_fix (blaschke a)\n\ngoal (1 subgoal):\n 1. poincare_between u z v = (arg (to_complex u) * arg (to_complex v) < 0)", "using inversion_noteq_unit_disc[of \"of_complex a\" u] \\<open>u \\<noteq> \\<infinity>\\<^sub>h\\<close>"], ["proof (prove)\nusing this:\n  z \\<in> circline_set (poincare_line u v) \\<inter> circline_set x_axis\n  u \\<in> unit_disc\n  v \\<in> unit_disc\n  u \\<noteq> v\n  u \\<notin> circline_set x_axis\n  v \\<notin> circline_set x_axis\n  is_real a\n  cmod a < 1\n  z \\<in> unit_disc\n  moebius_pt (blaschke a) u \\<in> unit_disc \\<and>\n  moebius_pt (blaschke a) v \\<in> unit_disc \\<and>\n  moebius_pt (blaschke a) u \\<noteq> moebius_pt (blaschke a) v \\<and>\n  moebius_pt (blaschke a) u \\<notin> circline_set x_axis \\<and>\n  moebius_pt (blaschke a) v \\<notin> circline_set x_axis \\<and>\n  moebius_pt (blaschke a) z\n  \\<in> circline_set\n         (poincare_line (moebius_pt (blaschke a) u)\n           (moebius_pt (blaschke a) v)) \\<inter>\n        circline_set x_axis \\<Longrightarrow>\n  poincare_between (moebius_pt (blaschke a) u) (moebius_pt (blaschke a) z)\n   (moebius_pt (blaschke a) v) =\n  (arg (to_complex (moebius_pt (blaschke a) u)) *\n   arg (to_complex (moebius_pt (blaschke a) v))\n   < 0)\n  cmod a < 1\n  is_real a\n  cmod a < 1 \\<Longrightarrow> unit_disc_fix (blaschke a)\n  \\<lbrakk>of_complex a \\<in> unit_disc; u \\<in> unit_disc\\<rbrakk>\n  \\<Longrightarrow> inversion (of_complex a) \\<noteq> u\n  u \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. poincare_between u z v = (arg (to_complex u) * arg (to_complex v) < 0)", "using inversion_noteq_unit_disc[of \"of_complex a\" v] \\<open>v \\<noteq> \\<infinity>\\<^sub>h\\<close>"], ["proof (prove)\nusing this:\n  z \\<in> circline_set (poincare_line u v) \\<inter> circline_set x_axis\n  u \\<in> unit_disc\n  v \\<in> unit_disc\n  u \\<noteq> v\n  u \\<notin> circline_set x_axis\n  v \\<notin> circline_set x_axis\n  is_real a\n  cmod a < 1\n  z \\<in> unit_disc\n  moebius_pt (blaschke a) u \\<in> unit_disc \\<and>\n  moebius_pt (blaschke a) v \\<in> unit_disc \\<and>\n  moebius_pt (blaschke a) u \\<noteq> moebius_pt (blaschke a) v \\<and>\n  moebius_pt (blaschke a) u \\<notin> circline_set x_axis \\<and>\n  moebius_pt (blaschke a) v \\<notin> circline_set x_axis \\<and>\n  moebius_pt (blaschke a) z\n  \\<in> circline_set\n         (poincare_line (moebius_pt (blaschke a) u)\n           (moebius_pt (blaschke a) v)) \\<inter>\n        circline_set x_axis \\<Longrightarrow>\n  poincare_between (moebius_pt (blaschke a) u) (moebius_pt (blaschke a) z)\n   (moebius_pt (blaschke a) v) =\n  (arg (to_complex (moebius_pt (blaschke a) u)) *\n   arg (to_complex (moebius_pt (blaschke a) v))\n   < 0)\n  cmod a < 1\n  is_real a\n  cmod a < 1 \\<Longrightarrow> unit_disc_fix (blaschke a)\n  \\<lbrakk>of_complex a \\<in> unit_disc; u \\<in> unit_disc\\<rbrakk>\n  \\<Longrightarrow> inversion (of_complex a) \\<noteq> u\n  u \\<noteq> \\<infinity>\\<^sub>h\n  \\<lbrakk>of_complex a \\<in> unit_disc; v \\<in> unit_disc\\<rbrakk>\n  \\<Longrightarrow> inversion (of_complex a) \\<noteq> v\n  v \\<noteq> \\<infinity>\\<^sub>h\n\ngoal (1 subgoal):\n 1. poincare_between u z v = (arg (to_complex u) * arg (to_complex v) < 0)", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>u \\<in> unit_disc; v \\<in> unit_disc; u \\<noteq> v;\n     u \\<notin> circline_set x_axis; v \\<notin> circline_set x_axis;\n     z \\<in> unit_disc; cmod a < 1; is_real a;\n     inversion (of_complex a) \\<noteq> u; u \\<noteq> \\<infinity>\\<^sub>h;\n     inversion (of_complex a) \\<noteq> v; v \\<noteq> \\<infinity>\\<^sub>h;\n     z \\<in> circline_set (poincare_line u v); z \\<in> circline_set x_axis;\n     poincare_between u z v;\n     arg (to_complex (moebius_pt (blaschke a) u)) *\n     arg (to_complex (moebius_pt (blaschke a) v))\n     < 0\\<rbrakk>\n    \\<Longrightarrow> arg (to_complex u) * arg (to_complex v) < 0\n 2. \\<lbrakk>u \\<in> unit_disc; v \\<in> unit_disc; u \\<noteq> v;\n     u \\<notin> circline_set x_axis; v \\<notin> circline_set x_axis;\n     z \\<in> unit_disc; cmod a < 1; is_real a;\n     inversion (of_complex a) \\<noteq> u; u \\<noteq> \\<infinity>\\<^sub>h;\n     inversion (of_complex a) \\<noteq> v; v \\<noteq> \\<infinity>\\<^sub>h;\n     z \\<in> circline_set (poincare_line u v); z \\<in> circline_set x_axis;\n     \\<not> poincare_between u z v;\n     \\<not> arg (to_complex (moebius_pt (blaschke a) u)) *\n            arg (to_complex (moebius_pt (blaschke a) v))\n            < 0;\n     arg (to_complex u) * arg (to_complex v) < 0\\<rbrakk>\n    \\<Longrightarrow> False", "apply (subst (asm) **, subst **, subst (asm) sgn_mult, subst sgn_mult, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> unit_disc; v \\<in> unit_disc; u \\<noteq> v;\n     u \\<notin> circline_set x_axis; v \\<notin> circline_set x_axis;\n     z \\<in> unit_disc; cmod a < 1; is_real a;\n     inversion (of_complex a) \\<noteq> u; u \\<noteq> \\<infinity>\\<^sub>h;\n     inversion (of_complex a) \\<noteq> v; v \\<noteq> \\<infinity>\\<^sub>h;\n     z \\<in> circline_set (poincare_line u v); z \\<in> circline_set x_axis;\n     \\<not> poincare_between u z v;\n     \\<not> arg (to_complex (moebius_pt (blaschke a) u)) *\n            arg (to_complex (moebius_pt (blaschke a) v))\n            < 0;\n     arg (to_complex u) * arg (to_complex v) < 0\\<rbrakk>\n    \\<Longrightarrow> False", "apply (subst (asm) **, subst (asm) **, subst (asm) sgn_mult, subst (asm) sgn_mult, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  poincare_between u z v = (arg (to_complex u) * arg (to_complex v) < 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>u v.\n     u \\<in> unit_disc \\<and>\n     v \\<in> unit_disc \\<and>\n     u \\<noteq> v \\<and>\n     u \\<notin> circline_set x_axis \\<and>\n     v \\<notin> circline_set x_axis \\<and>\n     z \\<in> circline_set (poincare_line u v) \\<inter>\n             circline_set x_axis \\<longrightarrow>\n     poincare_between u z v = (arg (to_complex u) * arg (to_complex v) < 0)\n\ngoal (2 subgoals):\n 1. z \\<in> unit_disc\n 2. is_real (to_complex z)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. z \\<in> unit_disc\n 2. is_real (to_complex z)", "show \"z \\<in> unit_disc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> unit_disc", "by fact"], ["proof (state)\nthis:\n  z \\<in> unit_disc\n\ngoal (1 subgoal):\n 1. is_real (to_complex z)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. is_real (to_complex z)", "show \"is_real (to_complex z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_real (to_complex z)", "using assms inf_or_of_complex[of z]"], ["proof (prove)\nusing this:\n  u \\<in> unit_disc\n  v \\<in> unit_disc\n  z \\<in> unit_disc\n  u \\<noteq> v\n  u \\<notin> circline_set x_axis\n  v \\<notin> circline_set x_axis\n  z \\<in> circline_set (poincare_line u v) \\<inter> circline_set x_axis\n  z = \\<infinity>\\<^sub>h \\<or> (\\<exists>x. z = of_complex x)\n\ngoal (1 subgoal):\n 1. is_real (to_complex z)", "by (auto simp add: circline_set_x_axis)"], ["proof (state)\nthis:\n  is_real (to_complex z)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>u v.\n     u \\<in> unit_disc \\<and>\n     v \\<in> unit_disc \\<and>\n     u \\<noteq> v \\<and>\n     u \\<notin> circline_set x_axis \\<and>\n     v \\<notin> circline_set x_axis \\<and>\n     z \\<in> circline_set (poincare_line u v) \\<inter>\n             circline_set x_axis \\<longrightarrow>\n     poincare_between u z v = (arg (to_complex u) * arg (to_complex v) < 0)\n\ngoal (1 subgoal):\n 1. poincare_between u z v = (arg (to_complex u) * arg (to_complex v) < 0)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>u v.\n     u \\<in> unit_disc \\<and>\n     v \\<in> unit_disc \\<and>\n     u \\<noteq> v \\<and>\n     u \\<notin> circline_set x_axis \\<and>\n     v \\<notin> circline_set x_axis \\<and>\n     z \\<in> circline_set (poincare_line u v) \\<inter>\n             circline_set x_axis \\<longrightarrow>\n     poincare_between u z v = (arg (to_complex u) * arg (to_complex v) < 0)\n\ngoal (1 subgoal):\n 1. poincare_between u z v = (arg (to_complex u) * arg (to_complex v) < 0)", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>u v.\n     u \\<in> unit_disc \\<and>\n     v \\<in> unit_disc \\<and>\n     u \\<noteq> v \\<and>\n     u \\<notin> circline_set x_axis \\<and>\n     v \\<notin> circline_set x_axis \\<and>\n     z \\<in> circline_set (poincare_line u v) \\<inter>\n             circline_set x_axis \\<longrightarrow>\n     poincare_between u z v = (arg (to_complex u) * arg (to_complex v) < 0)\n  u \\<in> unit_disc\n  v \\<in> unit_disc\n  z \\<in> unit_disc\n  u \\<noteq> v\n  u \\<notin> circline_set x_axis\n  v \\<notin> circline_set x_axis\n  z \\<in> circline_set (poincare_line u v) \\<inter> circline_set x_axis\n\ngoal (1 subgoal):\n 1. poincare_between u z v = (arg (to_complex u) * arg (to_complex v) < 0)", "by simp"], ["proof (state)\nthis:\n  poincare_between u z v = (arg (to_complex u) * arg (to_complex v) < 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "(* ------------------------------------------------------------------ *)"], ["", "subsection\\<open>Check if an h-line intersects the x-axis\\<close>"], ["", "(* ------------------------------------------------------------------ *)"], ["", "lemma x_axis_intersection_equation:\n  assumes\n   \"H = mk_circline A B C D\" and\n   \"(A, B, C, D) \\<in> hermitean_nonzero\"\n shows \"of_complex z \\<in> circline_set x_axis \\<inter> circline_set H \\<longleftrightarrow>\n        A*z\\<^sup>2 + 2*Re B*z + D = 0 \\<and> is_real z\" (is \"?lhs \\<longleftrightarrow> ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (of_complex (cor z) \\<in> circline_set x_axis \\<inter> circline_set H) =\n    (A * z\\<^sup>2 + 2 * Re B * z + D = 0 \\<and> is_real (cor z))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (of_complex (cor z) \\<in> circline_set x_axis \\<inter> circline_set H) =\n    (A * z\\<^sup>2 + 2 * Re B * z + D = 0 \\<and> is_real (cor z))", "have \"?lhs \\<longleftrightarrow> A*z\\<^sup>2 + (B + cnj B)*z + D = 0 \\<and> z = cnj z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (of_complex (cor z) \\<in> circline_set x_axis \\<inter> circline_set H) =\n    (cor (A * z\\<^sup>2) + (B + cnj B) * cor z + cor D = 0 \\<and>\n     cor z = cnj (cor z))", "using assms"], ["proof (prove)\nusing this:\n  H = mk_circline (cor A) B C (cor D)\n  (cor A, B, C, cor D) \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. (of_complex (cor z) \\<in> circline_set x_axis \\<inter> circline_set H) =\n    (cor (A * z\\<^sup>2) + (B + cnj B) * cor z + cor D = 0 \\<and>\n     cor z = cnj (cor z))", "using circline_equation_x_axis[of z]"], ["proof (prove)\nusing this:\n  H = mk_circline (cor A) B C (cor D)\n  (cor A, B, C, cor D) \\<in> hermitean_nonzero\n  (of_complex (cor z) \\<in> circline_set x_axis) = (cor z = cnj (cor z))\n\ngoal (1 subgoal):\n 1. (of_complex (cor z) \\<in> circline_set x_axis \\<inter> circline_set H) =\n    (cor (A * z\\<^sup>2) + (B + cnj B) * cor z + cor D = 0 \\<and>\n     cor z = cnj (cor z))", "using circline_equation[of H A B C D z]"], ["proof (prove)\nusing this:\n  H = mk_circline (cor A) B C (cor D)\n  (cor A, B, C, cor D) \\<in> hermitean_nonzero\n  (of_complex (cor z) \\<in> circline_set x_axis) = (cor z = cnj (cor z))\n  \\<lbrakk>H = mk_circline (cor A) B C (cor D);\n   (cor A, B, C, cor D) \\<in> hermitean_nonzero\\<rbrakk>\n  \\<Longrightarrow> (of_complex (cor z) \\<in> circline_set H) =\n                    circline_equation (cor A) B C (cor D) (cor z) 1\n\ngoal (1 subgoal):\n 1. (of_complex (cor z) \\<in> circline_set x_axis \\<inter> circline_set H) =\n    (cor (A * z\\<^sup>2) + (B + cnj B) * cor z + cor D = 0 \\<and>\n     cor z = cnj (cor z))", "using hermitean_elems"], ["proof (prove)\nusing this:\n  H = mk_circline (cor A) B C (cor D)\n  (cor A, B, C, cor D) \\<in> hermitean_nonzero\n  (of_complex (cor z) \\<in> circline_set x_axis) = (cor z = cnj (cor z))\n  \\<lbrakk>H = mk_circline (cor A) B C (cor D);\n   (cor A, B, C, cor D) \\<in> hermitean_nonzero\\<rbrakk>\n  \\<Longrightarrow> (of_complex (cor z) \\<in> circline_set H) =\n                    circline_equation (cor A) B C (cor D) (cor z) 1\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> is_real ?A\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> is_real ?D\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> ?B = cnj ?C\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> cnj ?B = ?C\n\ngoal (1 subgoal):\n 1. (of_complex (cor z) \\<in> circline_set x_axis \\<inter> circline_set H) =\n    (cor (A * z\\<^sup>2) + (B + cnj B) * cor z + cor D = 0 \\<and>\n     cor z = cnj (cor z))", "by (auto simp add: power2_eq_square field_simps)"], ["proof (state)\nthis:\n  (of_complex (cor z) \\<in> circline_set x_axis \\<inter> circline_set H) =\n  (cor (A * z\\<^sup>2) + (B + cnj B) * cor z + cor D = 0 \\<and>\n   cor z = cnj (cor z))\n\ngoal (1 subgoal):\n 1. (of_complex (cor z) \\<in> circline_set x_axis \\<inter> circline_set H) =\n    (A * z\\<^sup>2 + 2 * Re B * z + D = 0 \\<and> is_real (cor z))", "thus ?thesis"], ["proof (prove)\nusing this:\n  (of_complex (cor z) \\<in> circline_set x_axis \\<inter> circline_set H) =\n  (cor (A * z\\<^sup>2) + (B + cnj B) * cor z + cor D = 0 \\<and>\n   cor z = cnj (cor z))\n\ngoal (1 subgoal):\n 1. (of_complex (cor z) \\<in> circline_set x_axis \\<inter> circline_set H) =\n    (A * z\\<^sup>2 + 2 * Re B * z + D = 0 \\<and> is_real (cor z))", "using eq_cnj_iff_real[of z]"], ["proof (prove)\nusing this:\n  (of_complex (cor z) \\<in> circline_set x_axis \\<inter> circline_set H) =\n  (cor (A * z\\<^sup>2) + (B + cnj B) * cor z + cor D = 0 \\<and>\n   cor z = cnj (cor z))\n  (cnj (cor z) = cor z) = is_real (cor z)\n\ngoal (1 subgoal):\n 1. (of_complex (cor z) \\<in> circline_set x_axis \\<inter> circline_set H) =\n    (A * z\\<^sup>2 + 2 * Re B * z + D = 0 \\<and> is_real (cor z))", "using hermitean_elems[of A B C D]"], ["proof (prove)\nusing this:\n  (of_complex (cor z) \\<in> circline_set x_axis \\<inter> circline_set H) =\n  (cor (A * z\\<^sup>2) + (B + cnj B) * cor z + cor D = 0 \\<and>\n   cor z = cnj (cor z))\n  (cnj (cor z) = cor z) = is_real (cor z)\n  hermitean (cor A, B, C, cor D) \\<Longrightarrow> is_real (cor A)\n  hermitean (cor A, B, C, cor D) \\<Longrightarrow> is_real (cor D)\n  hermitean (cor A, B, C, cor D) \\<Longrightarrow> B = cnj C\n  hermitean (cor A, B, C, cor D) \\<Longrightarrow> cnj B = C\n\ngoal (1 subgoal):\n 1. (of_complex (cor z) \\<in> circline_set x_axis \\<inter> circline_set H) =\n    (A * z\\<^sup>2 + 2 * Re B * z + D = 0 \\<and> is_real (cor z))", "by (simp add: complex_add_cnj complex_eq_if_Re_eq)"], ["proof (state)\nthis:\n  (of_complex (cor z) \\<in> circline_set x_axis \\<inter> circline_set H) =\n  (A * z\\<^sup>2 + 2 * Re B * z + D = 0 \\<and> is_real (cor z))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Check if an h-line intersects x-axis within the unit disc - this could be generalized to\nchecking if an arbitrary circline intersects the x-axis, but we do not need that.\\<close>"], ["", "definition intersects_x_axis_cmat :: \"complex_mat \\<Rightarrow> bool\" where\n  [simp]: \"intersects_x_axis_cmat H = (let (A, B, C, D) = H in A = 0 \\<or> (Re B)\\<^sup>2 > (Re A)\\<^sup>2)\""], ["", "lift_definition intersects_x_axis_clmat :: \"circline_mat \\<Rightarrow> bool\" is intersects_x_axis_cmat"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lift_definition intersects_x_axis :: \"circline \\<Rightarrow> bool\" is intersects_x_axis_clmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       circline_eq_clmat circline_mat1 circline_mat2 \\<Longrightarrow>\n       intersects_x_axis_clmat circline_mat1 =\n       intersects_x_axis_clmat circline_mat2", "proof (transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> intersects_x_axis_cmat circline_mat1 =\n                         intersects_x_axis_cmat circline_mat2", "fix H1 H2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> intersects_x_axis_cmat circline_mat1 =\n                         intersects_x_axis_cmat circline_mat2", "assume hh: \"hermitean H1 \\<and> H1 \\<noteq> mat_zero\" and \"hermitean H2 \\<and> H2 \\<noteq> mat_zero\""], ["proof (state)\nthis:\n  hermitean H1 \\<and> H1 \\<noteq> mat_zero\n  hermitean H2 \\<and> H2 \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> intersects_x_axis_cmat circline_mat1 =\n                         intersects_x_axis_cmat circline_mat2", "obtain A1 B1 C1 D1 A2 B2 C2 D2 where *: \"H1 = (A1, B1, C1, D1)\" \"H2 = (A2, B2, C2, D2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A1 B1 C1 D1 A2 B2 C2 D2.\n        \\<lbrakk>H1 = (A1, B1, C1, D1); H2 = (A2, B2, C2, D2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases H1, cases H2, auto)"], ["proof (state)\nthis:\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> intersects_x_axis_cmat circline_mat1 =\n                         intersects_x_axis_cmat circline_mat2", "assume \"circline_eq_cmat H1 H2\""], ["proof (state)\nthis:\n  circline_eq_cmat H1 H2\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> intersects_x_axis_cmat circline_mat1 =\n                         intersects_x_axis_cmat circline_mat2", "then"], ["proof (chain)\npicking this:\n  circline_eq_cmat H1 H2", "obtain k where k: \"k \\<noteq> 0 \\<and> H2 = cor k *\\<^sub>s\\<^sub>m H1\""], ["proof (prove)\nusing this:\n  circline_eq_cmat H1 H2\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        k \\<noteq> 0 \\<and>\n        H2 = cor k *\\<^sub>s\\<^sub>m H1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  k \\<noteq> 0 \\<and> H2 = cor k *\\<^sub>s\\<^sub>m H1\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> intersects_x_axis_cmat circline_mat1 =\n                         intersects_x_axis_cmat circline_mat2", "show \"intersects_x_axis_cmat H1 = intersects_x_axis_cmat H2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. intersects_x_axis_cmat H1 = intersects_x_axis_cmat H2", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. intersects_x_axis_cmat H1 = intersects_x_axis_cmat H2", "have \"k \\<noteq> 0 \\<Longrightarrow> (Re A1)\\<^sup>2 < (Re B1)\\<^sup>2 \\<longleftrightarrow> (k * Re A1)\\<^sup>2 < (k * Re B1)\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    ((Re A1)\\<^sup>2 < (Re B1)\\<^sup>2) =\n    ((k * Re A1)\\<^sup>2 < (k * Re B1)\\<^sup>2)", "by (smt mult_strict_left_mono power2_eq_square semiring_normalization_rules(13) zero_less_power2)"], ["proof (state)\nthis:\n  k \\<noteq> 0 \\<Longrightarrow>\n  ((Re A1)\\<^sup>2 < (Re B1)\\<^sup>2) =\n  ((k * Re A1)\\<^sup>2 < (k * Re B1)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. intersects_x_axis_cmat H1 = intersects_x_axis_cmat H2", "thus ?thesis"], ["proof (prove)\nusing this:\n  k \\<noteq> 0 \\<Longrightarrow>\n  ((Re A1)\\<^sup>2 < (Re B1)\\<^sup>2) =\n  ((k * Re A1)\\<^sup>2 < (k * Re B1)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. intersects_x_axis_cmat H1 = intersects_x_axis_cmat H2", "using * k"], ["proof (prove)\nusing this:\n  k \\<noteq> 0 \\<Longrightarrow>\n  ((Re A1)\\<^sup>2 < (Re B1)\\<^sup>2) =\n  ((k * Re A1)\\<^sup>2 < (k * Re B1)\\<^sup>2)\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n  k \\<noteq> 0 \\<and> H2 = cor k *\\<^sub>s\\<^sub>m H1\n\ngoal (1 subgoal):\n 1. intersects_x_axis_cmat H1 = intersects_x_axis_cmat H2", "by auto"], ["proof (state)\nthis:\n  intersects_x_axis_cmat H1 = intersects_x_axis_cmat H2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  intersects_x_axis_cmat H1 = intersects_x_axis_cmat H2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma intersects_x_axis_mk_circline:\n  assumes \"is_real A\" and \"A \\<noteq> 0 \\<or> B \\<noteq> 0\"\n  shows \"intersects_x_axis (mk_circline A B (cnj B) A) \\<longleftrightarrow> A = 0 \\<or> (Re B)\\<^sup>2 > (Re A)\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. intersects_x_axis (mk_circline A B (cnj B) A) =\n    (A = 0 \\<or> (Re A)\\<^sup>2 < (Re B)\\<^sup>2)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. intersects_x_axis (mk_circline A B (cnj B) A) =\n    (A = 0 \\<or> (Re A)\\<^sup>2 < (Re B)\\<^sup>2)", "let ?H = \"(A, B, (cnj B),  A)\""], ["proof (state)\ngoal (1 subgoal):\n 1. intersects_x_axis (mk_circline A B (cnj B) A) =\n    (A = 0 \\<or> (Re A)\\<^sup>2 < (Re B)\\<^sup>2)", "have \"hermitean ?H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hermitean (A, B, cnj B, A)", "using \\<open>is_real A\\<close>"], ["proof (prove)\nusing this:\n  is_real A\n\ngoal (1 subgoal):\n 1. hermitean (A, B, cnj B, A)", "unfolding hermitean_def mat_adj_def mat_cnj_def"], ["proof (prove)\nusing this:\n  is_real A\n\ngoal (1 subgoal):\n 1. mat_map cnj (mat_transpose (A, B, cnj B, A)) = (A, B, cnj B, A)", "using eq_cnj_iff_real"], ["proof (prove)\nusing this:\n  is_real A\n  (cnj ?z = ?z) = is_real ?z\n\ngoal (1 subgoal):\n 1. mat_map cnj (mat_transpose (A, B, cnj B, A)) = (A, B, cnj B, A)", "by auto"], ["proof (state)\nthis:\n  hermitean (A, B, cnj B, A)\n\ngoal (1 subgoal):\n 1. intersects_x_axis (mk_circline A B (cnj B) A) =\n    (A = 0 \\<or> (Re A)\\<^sup>2 < (Re B)\\<^sup>2)", "moreover"], ["proof (state)\nthis:\n  hermitean (A, B, cnj B, A)\n\ngoal (1 subgoal):\n 1. intersects_x_axis (mk_circline A B (cnj B) A) =\n    (A = 0 \\<or> (Re A)\\<^sup>2 < (Re B)\\<^sup>2)", "have \"?H \\<noteq> mat_zero\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A, B, cnj B, A) \\<noteq> mat_zero", "using assms"], ["proof (prove)\nusing this:\n  is_real A\n  A \\<noteq> 0 \\<or> B \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (A, B, cnj B, A) \\<noteq> mat_zero", "by auto"], ["proof (state)\nthis:\n  (A, B, cnj B, A) \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. intersects_x_axis (mk_circline A B (cnj B) A) =\n    (A = 0 \\<or> (Re A)\\<^sup>2 < (Re B)\\<^sup>2)", "ultimately"], ["proof (chain)\npicking this:\n  hermitean (A, B, cnj B, A)\n  (A, B, cnj B, A) \\<noteq> mat_zero", "show ?thesis"], ["proof (prove)\nusing this:\n  hermitean (A, B, cnj B, A)\n  (A, B, cnj B, A) \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. intersects_x_axis (mk_circline A B (cnj B) A) =\n    (A = 0 \\<or> (Re A)\\<^sup>2 < (Re B)\\<^sup>2)", "by (transfer, transfer, auto simp add: Let_def)"], ["proof (state)\nthis:\n  intersects_x_axis (mk_circline A B (cnj B) A) =\n  (A = 0 \\<or> (Re A)\\<^sup>2 < (Re B)\\<^sup>2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma intersects_x_axis_iff:\n  assumes \"is_poincare_line H\"\n  shows \"(\\<exists> x \\<in> unit_disc. x \\<in> circline_set H \\<inter> circline_set x_axis) \\<longleftrightarrow> intersects_x_axis H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>x\\<in>unit_disc.\n        x \\<in> circline_set H \\<inter> circline_set x_axis) =\n    intersects_x_axis H", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<exists>x\\<in>unit_disc.\n        x \\<in> circline_set H \\<inter> circline_set x_axis) =\n    intersects_x_axis H", "obtain Ac B C Dc where  *: \"H = mk_circline Ac B C Dc\" \"hermitean (Ac, B, C, Dc)\" \"(Ac, B, C, Dc) \\<noteq> mat_zero\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>Ac B C Dc.\n        \\<lbrakk>H = mk_circline Ac B C Dc; hermitean (Ac, B, C, Dc);\n         (Ac, B, C, Dc) \\<noteq> mat_zero\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using ex_mk_circline[of H]"], ["proof (prove)\nusing this:\n  \\<exists>A B C D.\n     H = mk_circline A B C D \\<and>\n     hermitean (A, B, C, D) \\<and> (A, B, C, D) \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. (\\<And>Ac B C Dc.\n        \\<lbrakk>H = mk_circline Ac B C Dc; hermitean (Ac, B, C, Dc);\n         (Ac, B, C, Dc) \\<noteq> mat_zero\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  H = mk_circline Ac B C Dc\n  hermitean (Ac, B, C, Dc)\n  (Ac, B, C, Dc) \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. (\\<exists>x\\<in>unit_disc.\n        x \\<in> circline_set H \\<inter> circline_set x_axis) =\n    intersects_x_axis H", "hence \"(cmod B)\\<^sup>2 > (cmod Ac)\\<^sup>2\" \"Ac = Dc\""], ["proof (prove)\nusing this:\n  H = mk_circline Ac B C Dc\n  hermitean (Ac, B, C, Dc)\n  (Ac, B, C, Dc) \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. (cmod Ac)\\<^sup>2 < (cmod B)\\<^sup>2 &&& Ac = Dc", "using assms"], ["proof (prove)\nusing this:\n  H = mk_circline Ac B C Dc\n  hermitean (Ac, B, C, Dc)\n  (Ac, B, C, Dc) \\<noteq> mat_zero\n  is_poincare_line H\n\ngoal (1 subgoal):\n 1. (cmod Ac)\\<^sup>2 < (cmod B)\\<^sup>2 &&& Ac = Dc", "using is_poincare_line_mk_circline"], ["proof (prove)\nusing this:\n  H = mk_circline Ac B C Dc\n  hermitean (Ac, B, C, Dc)\n  (Ac, B, C, Dc) \\<noteq> mat_zero\n  is_poincare_line H\n  (?A, ?B, ?C, ?D) \\<in> hermitean_nonzero \\<Longrightarrow>\n  is_poincare_line (mk_circline ?A ?B ?C ?D) =\n  ((cmod ?A)\\<^sup>2 < (cmod ?B)\\<^sup>2 \\<and> ?A = ?D)\n\ngoal (1 subgoal):\n 1. (cmod Ac)\\<^sup>2 < (cmod B)\\<^sup>2 &&& Ac = Dc", "by auto"], ["proof (state)\nthis:\n  (cmod Ac)\\<^sup>2 < (cmod B)\\<^sup>2\n  Ac = Dc\n\ngoal (1 subgoal):\n 1. (\\<exists>x\\<in>unit_disc.\n        x \\<in> circline_set H \\<inter> circline_set x_axis) =\n    intersects_x_axis H", "hence \"H = mk_circline (Re Ac) B (cnj B) (Re Ac)\" \"hermitean (cor (Re Ac),  B, (cnj B), cor (Re Ac))\" \"(cor (Re Ac),  B, (cnj B), cor (Re Ac)) \\<noteq> mat_zero\""], ["proof (prove)\nusing this:\n  (cmod Ac)\\<^sup>2 < (cmod B)\\<^sup>2\n  Ac = Dc\n\ngoal (1 subgoal):\n 1. H = mk_circline (cor (Re Ac)) B (cnj B) (cor (Re Ac)) &&&\n    hermitean (cor (Re Ac), B, cnj B, cor (Re Ac)) &&&\n    (cor (Re Ac), B, cnj B, cor (Re Ac)) \\<noteq> mat_zero", "using hermitean_elems[of Ac B C Dc] *"], ["proof (prove)\nusing this:\n  (cmod Ac)\\<^sup>2 < (cmod B)\\<^sup>2\n  Ac = Dc\n  hermitean (Ac, B, C, Dc) \\<Longrightarrow> is_real Ac\n  hermitean (Ac, B, C, Dc) \\<Longrightarrow> is_real Dc\n  hermitean (Ac, B, C, Dc) \\<Longrightarrow> B = cnj C\n  hermitean (Ac, B, C, Dc) \\<Longrightarrow> cnj B = C\n  H = mk_circline Ac B C Dc\n  hermitean (Ac, B, C, Dc)\n  (Ac, B, C, Dc) \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. H = mk_circline (cor (Re Ac)) B (cnj B) (cor (Re Ac)) &&&\n    hermitean (cor (Re Ac), B, cnj B, cor (Re Ac)) &&&\n    (cor (Re Ac), B, cnj B, cor (Re Ac)) \\<noteq> mat_zero", "by auto"], ["proof (state)\nthis:\n  H = mk_circline (cor (Re Ac)) B (cnj B) (cor (Re Ac))\n  hermitean (cor (Re Ac), B, cnj B, cor (Re Ac))\n  (cor (Re Ac), B, cnj B, cor (Re Ac)) \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. (\\<exists>x\\<in>unit_disc.\n        x \\<in> circline_set H \\<inter> circline_set x_axis) =\n    intersects_x_axis H", "then"], ["proof (chain)\npicking this:\n  H = mk_circline (cor (Re Ac)) B (cnj B) (cor (Re Ac))\n  hermitean (cor (Re Ac), B, cnj B, cor (Re Ac))\n  (cor (Re Ac), B, cnj B, cor (Re Ac)) \\<noteq> mat_zero", "obtain A where\n    *: \"H = mk_circline (cor A) B (cnj B) (cor A)\" \"(cor A,  B, (cnj B), cor A) \\<in> hermitean_nonzero\""], ["proof (prove)\nusing this:\n  H = mk_circline (cor (Re Ac)) B (cnj B) (cor (Re Ac))\n  hermitean (cor (Re Ac), B, cnj B, cor (Re Ac))\n  (cor (Re Ac), B, cnj B, cor (Re Ac)) \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. (\\<And>A.\n        \\<lbrakk>H = mk_circline (cor A) B (cnj B) (cor A);\n         (cor A, B, cnj B, cor A) \\<in> hermitean_nonzero\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  H = mk_circline (cor A) B (cnj B) (cor A)\n  (cor A, B, cnj B, cor A) \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. (\\<exists>x\\<in>unit_disc.\n        x \\<in> circline_set H \\<inter> circline_set x_axis) =\n    intersects_x_axis H", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>x\\<in>unit_disc.\n        x \\<in> circline_set H \\<inter> circline_set x_axis) =\n    intersects_x_axis H", "proof (cases \"A = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. A = 0 \\<Longrightarrow>\n    (\\<exists>x\\<in>unit_disc.\n        x \\<in> circline_set H \\<inter> circline_set x_axis) =\n    intersects_x_axis H\n 2. A \\<noteq> 0 \\<Longrightarrow>\n    (\\<exists>x\\<in>unit_disc.\n        x \\<in> circline_set H \\<inter> circline_set x_axis) =\n    intersects_x_axis H", "case True"], ["proof (state)\nthis:\n  A = 0\n\ngoal (2 subgoals):\n 1. A = 0 \\<Longrightarrow>\n    (\\<exists>x\\<in>unit_disc.\n        x \\<in> circline_set H \\<inter> circline_set x_axis) =\n    intersects_x_axis H\n 2. A \\<noteq> 0 \\<Longrightarrow>\n    (\\<exists>x\\<in>unit_disc.\n        x \\<in> circline_set H \\<inter> circline_set x_axis) =\n    intersects_x_axis H", "thus ?thesis"], ["proof (prove)\nusing this:\n  A = 0\n\ngoal (1 subgoal):\n 1. (\\<exists>x\\<in>unit_disc.\n        x \\<in> circline_set H \\<inter> circline_set x_axis) =\n    intersects_x_axis H", "using *"], ["proof (prove)\nusing this:\n  A = 0\n  H = mk_circline (cor A) B (cnj B) (cor A)\n  (cor A, B, cnj B, cor A) \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. (\\<exists>x\\<in>unit_disc.\n        x \\<in> circline_set H \\<inter> circline_set x_axis) =\n    intersects_x_axis H", "using x_axis_intersection_equation[OF *(1-2), of 0]"], ["proof (prove)\nusing this:\n  A = 0\n  H = mk_circline (cor A) B (cnj B) (cor A)\n  (cor A, B, cnj B, cor A) \\<in> hermitean_nonzero\n  (of_complex (cor 0) \\<in> circline_set x_axis \\<inter> circline_set H) =\n  (A * 0\\<^sup>2 + 2 * Re B * 0 + A = 0 \\<and> is_real (cor 0))\n\ngoal (1 subgoal):\n 1. (\\<exists>x\\<in>unit_disc.\n        x \\<in> circline_set H \\<inter> circline_set x_axis) =\n    intersects_x_axis H", "using intersects_x_axis_mk_circline[of \"cor A\" B]"], ["proof (prove)\nusing this:\n  A = 0\n  H = mk_circline (cor A) B (cnj B) (cor A)\n  (cor A, B, cnj B, cor A) \\<in> hermitean_nonzero\n  (of_complex (cor 0) \\<in> circline_set x_axis \\<inter> circline_set H) =\n  (A * 0\\<^sup>2 + 2 * Re B * 0 + A = 0 \\<and> is_real (cor 0))\n  \\<lbrakk>is_real (cor A); cor A \\<noteq> 0 \\<or> B \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> intersects_x_axis\n                     (mk_circline (cor A) B (cnj B) (cor A)) =\n                    (cor A = 0 \\<or> (Re (cor A))\\<^sup>2 < (Re B)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<exists>x\\<in>unit_disc.\n        x \\<in> circline_set H \\<inter> circline_set x_axis) =\n    intersects_x_axis H", "by auto"], ["proof (state)\nthis:\n  (\\<exists>x\\<in>unit_disc.\n      x \\<in> circline_set H \\<inter> circline_set x_axis) =\n  intersects_x_axis H\n\ngoal (1 subgoal):\n 1. A \\<noteq> 0 \\<Longrightarrow>\n    (\\<exists>x\\<in>unit_disc.\n        x \\<in> circline_set H \\<inter> circline_set x_axis) =\n    intersects_x_axis H", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. A \\<noteq> 0 \\<Longrightarrow>\n    (\\<exists>x\\<in>unit_disc.\n        x \\<in> circline_set H \\<inter> circline_set x_axis) =\n    intersects_x_axis H", "case False"], ["proof (state)\nthis:\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. A \\<noteq> 0 \\<Longrightarrow>\n    (\\<exists>x\\<in>unit_disc.\n        x \\<in> circline_set H \\<inter> circline_set x_axis) =\n    intersects_x_axis H", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>x\\<in>unit_disc.\n        x \\<in> circline_set H \\<inter> circline_set x_axis) =\n    intersects_x_axis H", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>x\\<in>unit_disc.\n       x \\<in> circline_set H \\<inter> circline_set x_axis \\<Longrightarrow>\n    intersects_x_axis H\n 2. intersects_x_axis H \\<Longrightarrow>\n    \\<exists>x\\<in>unit_disc.\n       x \\<in> circline_set H \\<inter> circline_set x_axis", "assume \"\\<exists> x \\<in> unit_disc. x \\<in> circline_set H \\<inter> circline_set x_axis\""], ["proof (state)\nthis:\n  \\<exists>x\\<in>unit_disc.\n     x \\<in> circline_set H \\<inter> circline_set x_axis\n\ngoal (2 subgoals):\n 1. \\<exists>x\\<in>unit_disc.\n       x \\<in> circline_set H \\<inter> circline_set x_axis \\<Longrightarrow>\n    intersects_x_axis H\n 2. intersects_x_axis H \\<Longrightarrow>\n    \\<exists>x\\<in>unit_disc.\n       x \\<in> circline_set H \\<inter> circline_set x_axis", "then"], ["proof (chain)\npicking this:\n  \\<exists>x\\<in>unit_disc.\n     x \\<in> circline_set H \\<inter> circline_set x_axis", "obtain x where **: \"of_complex x \\<in> unit_disc\" \"of_complex x \\<in> circline_set H \\<inter> circline_set x_axis\""], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>unit_disc.\n     x \\<in> circline_set H \\<inter> circline_set x_axis\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>of_complex x \\<in> unit_disc;\n         of_complex x\n         \\<in> circline_set H \\<inter> circline_set x_axis\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis inf_or_of_complex inf_notin_unit_disc)"], ["proof (state)\nthis:\n  of_complex x \\<in> unit_disc\n  of_complex x \\<in> circline_set H \\<inter> circline_set x_axis\n\ngoal (2 subgoals):\n 1. \\<exists>x\\<in>unit_disc.\n       x \\<in> circline_set H \\<inter> circline_set x_axis \\<Longrightarrow>\n    intersects_x_axis H\n 2. intersects_x_axis H \\<Longrightarrow>\n    \\<exists>x\\<in>unit_disc.\n       x \\<in> circline_set H \\<inter> circline_set x_axis", "hence \"is_real x\""], ["proof (prove)\nusing this:\n  of_complex x \\<in> unit_disc\n  of_complex x \\<in> circline_set H \\<inter> circline_set x_axis\n\ngoal (1 subgoal):\n 1. is_real x", "unfolding circline_set_x_axis"], ["proof (prove)\nusing this:\n  of_complex x \\<in> unit_disc\n  of_complex x\n  \\<in> circline_set H \\<inter>\n        (of_complex ` {x. is_real x} \\<union> {\\<infinity>\\<^sub>h})\n\ngoal (1 subgoal):\n 1. is_real x", "using of_complex_inj"], ["proof (prove)\nusing this:\n  of_complex x \\<in> unit_disc\n  of_complex x\n  \\<in> circline_set H \\<inter>\n        (of_complex ` {x. is_real x} \\<union> {\\<infinity>\\<^sub>h})\n  of_complex ?x = of_complex ?y \\<Longrightarrow> ?x = ?y\n\ngoal (1 subgoal):\n 1. is_real x", "by auto"], ["proof (state)\nthis:\n  is_real x\n\ngoal (2 subgoals):\n 1. \\<exists>x\\<in>unit_disc.\n       x \\<in> circline_set H \\<inter> circline_set x_axis \\<Longrightarrow>\n    intersects_x_axis H\n 2. intersects_x_axis H \\<Longrightarrow>\n    \\<exists>x\\<in>unit_disc.\n       x \\<in> circline_set H \\<inter> circline_set x_axis", "hence eq: \"A * (Re x)\\<^sup>2 + 2 * Re B * Re x + A = 0\""], ["proof (prove)\nusing this:\n  is_real x\n\ngoal (1 subgoal):\n 1. A * (Re x)\\<^sup>2 + 2 * Re B * Re x + A = 0", "using **"], ["proof (prove)\nusing this:\n  is_real x\n  of_complex x \\<in> unit_disc\n  of_complex x \\<in> circline_set H \\<inter> circline_set x_axis\n\ngoal (1 subgoal):\n 1. A * (Re x)\\<^sup>2 + 2 * Re B * Re x + A = 0", "using x_axis_intersection_equation[OF *(1-2), of \"Re x\"]"], ["proof (prove)\nusing this:\n  is_real x\n  of_complex x \\<in> unit_disc\n  of_complex x \\<in> circline_set H \\<inter> circline_set x_axis\n  (of_complex (cor (Re x))\n   \\<in> circline_set x_axis \\<inter> circline_set H) =\n  (A * (Re x)\\<^sup>2 + 2 * Re B * Re x + A = 0 \\<and> is_real (cor (Re x)))\n\ngoal (1 subgoal):\n 1. A * (Re x)\\<^sup>2 + 2 * Re B * Re x + A = 0", "by simp"], ["proof (state)\nthis:\n  A * (Re x)\\<^sup>2 + 2 * Re B * Re x + A = 0\n\ngoal (2 subgoals):\n 1. \\<exists>x\\<in>unit_disc.\n       x \\<in> circline_set H \\<inter> circline_set x_axis \\<Longrightarrow>\n    intersects_x_axis H\n 2. intersects_x_axis H \\<Longrightarrow>\n    \\<exists>x\\<in>unit_disc.\n       x \\<in> circline_set H \\<inter> circline_set x_axis", "hence \"(2 * Re B)\\<^sup>2 - 4 * A * A \\<ge> 0\""], ["proof (prove)\nusing this:\n  A * (Re x)\\<^sup>2 + 2 * Re B * Re x + A = 0\n\ngoal (1 subgoal):\n 1. 0 \\<le> (2 * Re B)\\<^sup>2 - 4 * A * A", "using discriminant_iff[of A _ \"2 * Re B\" A]"], ["proof (prove)\nusing this:\n  A * (Re x)\\<^sup>2 + 2 * Re B * Re x + A = 0\n  A \\<noteq> 0 \\<Longrightarrow>\n  (A * ?x\\<^sup>2 + 2 * Re B * ?x + A = 0) =\n  (0 \\<le> discrim A (2 * Re B) A \\<and>\n   (?x = (- (2 * Re B) + sqrt (discrim A (2 * Re B) A)) / (2 * A) \\<or>\n    ?x = (- (2 * Re B) - sqrt (discrim A (2 * Re B) A)) / (2 * A)))\n\ngoal (1 subgoal):\n 1. 0 \\<le> (2 * Re B)\\<^sup>2 - 4 * A * A", "using discrim_def[of A \"2 * Re B\" A] False"], ["proof (prove)\nusing this:\n  A * (Re x)\\<^sup>2 + 2 * Re B * Re x + A = 0\n  A \\<noteq> 0 \\<Longrightarrow>\n  (A * ?x\\<^sup>2 + 2 * Re B * ?x + A = 0) =\n  (0 \\<le> discrim A (2 * Re B) A \\<and>\n   (?x = (- (2 * Re B) + sqrt (discrim A (2 * Re B) A)) / (2 * A) \\<or>\n    ?x = (- (2 * Re B) - sqrt (discrim A (2 * Re B) A)) / (2 * A)))\n  discrim A (2 * Re B) A \\<equiv> (2 * Re B)\\<^sup>2 - 4 * A * A\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 \\<le> (2 * Re B)\\<^sup>2 - 4 * A * A", "by auto"], ["proof (state)\nthis:\n  0 \\<le> (2 * Re B)\\<^sup>2 - 4 * A * A\n\ngoal (2 subgoals):\n 1. \\<exists>x\\<in>unit_disc.\n       x \\<in> circline_set H \\<inter> circline_set x_axis \\<Longrightarrow>\n    intersects_x_axis H\n 2. intersects_x_axis H \\<Longrightarrow>\n    \\<exists>x\\<in>unit_disc.\n       x \\<in> circline_set H \\<inter> circline_set x_axis", "hence \"(Re B)\\<^sup>2 \\<ge> (Re A)\\<^sup>2\""], ["proof (prove)\nusing this:\n  0 \\<le> (2 * Re B)\\<^sup>2 - 4 * A * A\n\ngoal (1 subgoal):\n 1. (Re (cor A))\\<^sup>2 \\<le> (Re B)\\<^sup>2", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  (Re (cor A))\\<^sup>2 \\<le> (Re B)\\<^sup>2\n\ngoal (2 subgoals):\n 1. \\<exists>x\\<in>unit_disc.\n       x \\<in> circline_set H \\<inter> circline_set x_axis \\<Longrightarrow>\n    intersects_x_axis H\n 2. intersects_x_axis H \\<Longrightarrow>\n    \\<exists>x\\<in>unit_disc.\n       x \\<in> circline_set H \\<inter> circline_set x_axis", "moreover"], ["proof (state)\nthis:\n  (Re (cor A))\\<^sup>2 \\<le> (Re B)\\<^sup>2\n\ngoal (2 subgoals):\n 1. \\<exists>x\\<in>unit_disc.\n       x \\<in> circline_set H \\<inter> circline_set x_axis \\<Longrightarrow>\n    intersects_x_axis H\n 2. intersects_x_axis H \\<Longrightarrow>\n    \\<exists>x\\<in>unit_disc.\n       x \\<in> circline_set H \\<inter> circline_set x_axis", "have \"(Re B)\\<^sup>2 \\<noteq> (Re A)\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Re B)\\<^sup>2 \\<noteq> (Re (cor A))\\<^sup>2", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (Re B)\\<^sup>2 \\<noteq> (Re (cor A))\\<^sup>2 \\<Longrightarrow>\n    False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> (Re B)\\<^sup>2 \\<noteq> (Re (cor A))\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> (Re B)\\<^sup>2 \\<noteq> (Re (cor A))\\<^sup>2 \\<Longrightarrow>\n    False", "hence \"Re B = Re A \\<or> Re B = - Re A\""], ["proof (prove)\nusing this:\n  \\<not> (Re B)\\<^sup>2 \\<noteq> (Re (cor A))\\<^sup>2\n\ngoal (1 subgoal):\n 1. Re B = Re (cor A) \\<or> Re B = - Re (cor A)", "using power2_eq_iff"], ["proof (prove)\nusing this:\n  \\<not> (Re B)\\<^sup>2 \\<noteq> (Re (cor A))\\<^sup>2\n  (?x\\<^sup>2 = ?y\\<^sup>2) = (?x = ?y \\<or> ?x = - ?y)\n\ngoal (1 subgoal):\n 1. Re B = Re (cor A) \\<or> Re B = - Re (cor A)", "by blast"], ["proof (state)\nthis:\n  Re B = Re (cor A) \\<or> Re B = - Re (cor A)\n\ngoal (1 subgoal):\n 1. \\<not> (Re B)\\<^sup>2 \\<noteq> (Re (cor A))\\<^sup>2 \\<Longrightarrow>\n    False", "hence \"A * (Re x)\\<^sup>2 +  A * 2* Re x + A = 0 \\<or> A * (Re x)\\<^sup>2 - A * 2 * Re x + A = 0\""], ["proof (prove)\nusing this:\n  Re B = Re (cor A) \\<or> Re B = - Re (cor A)\n\ngoal (1 subgoal):\n 1. A * (Re x)\\<^sup>2 + A * 2 * Re x + A = 0 \\<or>\n    A * (Re x)\\<^sup>2 - A * 2 * Re x + A = 0", "using eq"], ["proof (prove)\nusing this:\n  Re B = Re (cor A) \\<or> Re B = - Re (cor A)\n  A * (Re x)\\<^sup>2 + 2 * Re B * Re x + A = 0\n\ngoal (1 subgoal):\n 1. A * (Re x)\\<^sup>2 + A * 2 * Re x + A = 0 \\<or>\n    A * (Re x)\\<^sup>2 - A * 2 * Re x + A = 0", "by auto"], ["proof (state)\nthis:\n  A * (Re x)\\<^sup>2 + A * 2 * Re x + A = 0 \\<or>\n  A * (Re x)\\<^sup>2 - A * 2 * Re x + A = 0\n\ngoal (1 subgoal):\n 1. \\<not> (Re B)\\<^sup>2 \\<noteq> (Re (cor A))\\<^sup>2 \\<Longrightarrow>\n    False", "hence \"A * ((Re x)\\<^sup>2 +  2* Re x + 1) = 0 \\<or> A * ((Re x)\\<^sup>2 - 2 * Re x + 1) = 0\""], ["proof (prove)\nusing this:\n  A * (Re x)\\<^sup>2 + A * 2 * Re x + A = 0 \\<or>\n  A * (Re x)\\<^sup>2 - A * 2 * Re x + A = 0\n\ngoal (1 subgoal):\n 1. A * ((Re x)\\<^sup>2 + 2 * Re x + 1) = 0 \\<or>\n    A * ((Re x)\\<^sup>2 - 2 * Re x + 1) = 0", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  A * ((Re x)\\<^sup>2 + 2 * Re x + 1) = 0 \\<or>\n  A * ((Re x)\\<^sup>2 - 2 * Re x + 1) = 0\n\ngoal (1 subgoal):\n 1. \\<not> (Re B)\\<^sup>2 \\<noteq> (Re (cor A))\\<^sup>2 \\<Longrightarrow>\n    False", "hence \"(Re x)\\<^sup>2 + 2 * Re x + 1 = 0 \\<or> (Re x)\\<^sup>2 - 2 * Re x + 1 = 0\""], ["proof (prove)\nusing this:\n  A * ((Re x)\\<^sup>2 + 2 * Re x + 1) = 0 \\<or>\n  A * ((Re x)\\<^sup>2 - 2 * Re x + 1) = 0\n\ngoal (1 subgoal):\n 1. (Re x)\\<^sup>2 + 2 * Re x + 1 = 0 \\<or>\n    (Re x)\\<^sup>2 - 2 * Re x + 1 = 0", "using \\<open>A \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  A * ((Re x)\\<^sup>2 + 2 * Re x + 1) = 0 \\<or>\n  A * ((Re x)\\<^sup>2 - 2 * Re x + 1) = 0\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (Re x)\\<^sup>2 + 2 * Re x + 1 = 0 \\<or>\n    (Re x)\\<^sup>2 - 2 * Re x + 1 = 0", "by simp"], ["proof (state)\nthis:\n  (Re x)\\<^sup>2 + 2 * Re x + 1 = 0 \\<or> (Re x)\\<^sup>2 - 2 * Re x + 1 = 0\n\ngoal (1 subgoal):\n 1. \\<not> (Re B)\\<^sup>2 \\<noteq> (Re (cor A))\\<^sup>2 \\<Longrightarrow>\n    False", "hence \"(Re x + 1)\\<^sup>2 = 0 \\<or> (Re x - 1)\\<^sup>2 = 0\""], ["proof (prove)\nusing this:\n  (Re x)\\<^sup>2 + 2 * Re x + 1 = 0 \\<or> (Re x)\\<^sup>2 - 2 * Re x + 1 = 0\n\ngoal (1 subgoal):\n 1. (Re x + 1)\\<^sup>2 = 0 \\<or> (Re x - 1)\\<^sup>2 = 0", "by (simp add: power2_sum power2_diff field_simps)"], ["proof (state)\nthis:\n  (Re x + 1)\\<^sup>2 = 0 \\<or> (Re x - 1)\\<^sup>2 = 0\n\ngoal (1 subgoal):\n 1. \\<not> (Re B)\\<^sup>2 \\<noteq> (Re (cor A))\\<^sup>2 \\<Longrightarrow>\n    False", "hence \"Re x = -1 \\<or> Re x = 1\""], ["proof (prove)\nusing this:\n  (Re x + 1)\\<^sup>2 = 0 \\<or> (Re x - 1)\\<^sup>2 = 0\n\ngoal (1 subgoal):\n 1. Re x = - 1 \\<or> Re x = 1", "by auto"], ["proof (state)\nthis:\n  Re x = - 1 \\<or> Re x = 1\n\ngoal (1 subgoal):\n 1. \\<not> (Re B)\\<^sup>2 \\<noteq> (Re (cor A))\\<^sup>2 \\<Longrightarrow>\n    False", "thus False"], ["proof (prove)\nusing this:\n  Re x = - 1 \\<or> Re x = 1\n\ngoal (1 subgoal):\n 1. False", "using \\<open>is_real x\\<close> \\<open>of_complex x \\<in> unit_disc\\<close>"], ["proof (prove)\nusing this:\n  Re x = - 1 \\<or> Re x = 1\n  is_real x\n  of_complex x \\<in> unit_disc\n\ngoal (1 subgoal):\n 1. False", "by (auto simp add: cmod_eq_Re)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (Re B)\\<^sup>2 \\<noteq> (Re (cor A))\\<^sup>2\n\ngoal (2 subgoals):\n 1. \\<exists>x\\<in>unit_disc.\n       x \\<in> circline_set H \\<inter> circline_set x_axis \\<Longrightarrow>\n    intersects_x_axis H\n 2. intersects_x_axis H \\<Longrightarrow>\n    \\<exists>x\\<in>unit_disc.\n       x \\<in> circline_set H \\<inter> circline_set x_axis", "ultimately"], ["proof (chain)\npicking this:\n  (Re (cor A))\\<^sup>2 \\<le> (Re B)\\<^sup>2\n  (Re B)\\<^sup>2 \\<noteq> (Re (cor A))\\<^sup>2", "show \"intersects_x_axis H\""], ["proof (prove)\nusing this:\n  (Re (cor A))\\<^sup>2 \\<le> (Re B)\\<^sup>2\n  (Re B)\\<^sup>2 \\<noteq> (Re (cor A))\\<^sup>2\n\ngoal (1 subgoal):\n 1. intersects_x_axis H", "using intersects_x_axis_mk_circline"], ["proof (prove)\nusing this:\n  (Re (cor A))\\<^sup>2 \\<le> (Re B)\\<^sup>2\n  (Re B)\\<^sup>2 \\<noteq> (Re (cor A))\\<^sup>2\n  \\<lbrakk>is_real ?A; ?A \\<noteq> 0 \\<or> ?B \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> intersects_x_axis (mk_circline ?A ?B (cnj ?B) ?A) =\n                    (?A = 0 \\<or> (Re ?A)\\<^sup>2 < (Re ?B)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. intersects_x_axis H", "using *"], ["proof (prove)\nusing this:\n  (Re (cor A))\\<^sup>2 \\<le> (Re B)\\<^sup>2\n  (Re B)\\<^sup>2 \\<noteq> (Re (cor A))\\<^sup>2\n  \\<lbrakk>is_real ?A; ?A \\<noteq> 0 \\<or> ?B \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> intersects_x_axis (mk_circline ?A ?B (cnj ?B) ?A) =\n                    (?A = 0 \\<or> (Re ?A)\\<^sup>2 < (Re ?B)\\<^sup>2)\n  H = mk_circline (cor A) B (cnj B) (cor A)\n  (cor A, B, cnj B, cor A) \\<in> hermitean_nonzero\n\ngoal (1 subgoal):\n 1. intersects_x_axis H", "by auto"], ["proof (state)\nthis:\n  intersects_x_axis H\n\ngoal (1 subgoal):\n 1. intersects_x_axis H \\<Longrightarrow>\n    \\<exists>x\\<in>unit_disc.\n       x \\<in> circline_set H \\<inter> circline_set x_axis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. intersects_x_axis H \\<Longrightarrow>\n    \\<exists>x\\<in>unit_disc.\n       x \\<in> circline_set H \\<inter> circline_set x_axis", "assume \"intersects_x_axis H\""], ["proof (state)\nthis:\n  intersects_x_axis H\n\ngoal (1 subgoal):\n 1. intersects_x_axis H \\<Longrightarrow>\n    \\<exists>x\\<in>unit_disc.\n       x \\<in> circline_set H \\<inter> circline_set x_axis", "hence \"(Re B)\\<^sup>2 > (Re A)\\<^sup>2\""], ["proof (prove)\nusing this:\n  intersects_x_axis H\n\ngoal (1 subgoal):\n 1. (Re (cor A))\\<^sup>2 < (Re B)\\<^sup>2", "using * False"], ["proof (prove)\nusing this:\n  intersects_x_axis H\n  H = mk_circline (cor A) B (cnj B) (cor A)\n  (cor A, B, cnj B, cor A) \\<in> hermitean_nonzero\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (Re (cor A))\\<^sup>2 < (Re B)\\<^sup>2", "using intersects_x_axis_mk_circline"], ["proof (prove)\nusing this:\n  intersects_x_axis H\n  H = mk_circline (cor A) B (cnj B) (cor A)\n  (cor A, B, cnj B, cor A) \\<in> hermitean_nonzero\n  A \\<noteq> 0\n  \\<lbrakk>is_real ?A; ?A \\<noteq> 0 \\<or> ?B \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> intersects_x_axis (mk_circline ?A ?B (cnj ?B) ?A) =\n                    (?A = 0 \\<or> (Re ?A)\\<^sup>2 < (Re ?B)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (Re (cor A))\\<^sup>2 < (Re B)\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  (Re (cor A))\\<^sup>2 < (Re B)\\<^sup>2\n\ngoal (1 subgoal):\n 1. intersects_x_axis H \\<Longrightarrow>\n    \\<exists>x\\<in>unit_disc.\n       x \\<in> circline_set H \\<inter> circline_set x_axis", "hence discr: \"(2 * Re B)\\<^sup>2 - 4 * A * A > 0\""], ["proof (prove)\nusing this:\n  (Re (cor A))\\<^sup>2 < (Re B)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 < (2 * Re B)\\<^sup>2 - 4 * A * A", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  0 < (2 * Re B)\\<^sup>2 - 4 * A * A\n\ngoal (1 subgoal):\n 1. intersects_x_axis H \\<Longrightarrow>\n    \\<exists>x\\<in>unit_disc.\n       x \\<in> circline_set H \\<inter> circline_set x_axis", "then"], ["proof (chain)\npicking this:\n  0 < (2 * Re B)\\<^sup>2 - 4 * A * A", "obtain x1 x2 where\n        eqs: \"A * x1\\<^sup>2 + 2 * Re B * x1 + A = 0\" \"A * x2\\<^sup>2 + 2 * Re B * x2 + A = 0\" \"x1 \\<noteq> x2\""], ["proof (prove)\nusing this:\n  0 < (2 * Re B)\\<^sup>2 - 4 * A * A\n\ngoal (1 subgoal):\n 1. (\\<And>x1 x2.\n        \\<lbrakk>A * x1\\<^sup>2 + 2 * Re B * x1 + A = 0;\n         A * x2\\<^sup>2 + 2 * Re B * x2 + A = 0; x1 \\<noteq> x2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using discriminant_pos_ex[OF \\<open>A \\<noteq> 0\\<close>, of \"2 * Re B\" A]"], ["proof (prove)\nusing this:\n  0 < (2 * Re B)\\<^sup>2 - 4 * A * A\n  0 < discrim A (2 * Re B) A \\<Longrightarrow>\n  \\<exists>x y.\n     x \\<noteq> y \\<and>\n     A * x\\<^sup>2 + 2 * Re B * x + A = 0 \\<and>\n     A * y\\<^sup>2 + 2 * Re B * y + A = 0\n\ngoal (1 subgoal):\n 1. (\\<And>x1 x2.\n        \\<lbrakk>A * x1\\<^sup>2 + 2 * Re B * x1 + A = 0;\n         A * x2\\<^sup>2 + 2 * Re B * x2 + A = 0; x1 \\<noteq> x2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using discrim_def[of A \"2 * Re B\" A]"], ["proof (prove)\nusing this:\n  0 < (2 * Re B)\\<^sup>2 - 4 * A * A\n  0 < discrim A (2 * Re B) A \\<Longrightarrow>\n  \\<exists>x y.\n     x \\<noteq> y \\<and>\n     A * x\\<^sup>2 + 2 * Re B * x + A = 0 \\<and>\n     A * y\\<^sup>2 + 2 * Re B * y + A = 0\n  discrim A (2 * Re B) A \\<equiv> (2 * Re B)\\<^sup>2 - 4 * A * A\n\ngoal (1 subgoal):\n 1. (\\<And>x1 x2.\n        \\<lbrakk>A * x1\\<^sup>2 + 2 * Re B * x1 + A = 0;\n         A * x2\\<^sup>2 + 2 * Re B * x2 + A = 0; x1 \\<noteq> x2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  A * x1\\<^sup>2 + 2 * Re B * x1 + A = 0\n  A * x2\\<^sup>2 + 2 * Re B * x2 + A = 0\n  x1 \\<noteq> x2\n\ngoal (1 subgoal):\n 1. intersects_x_axis H \\<Longrightarrow>\n    \\<exists>x\\<in>unit_disc.\n       x \\<in> circline_set H \\<inter> circline_set x_axis", "hence \"x1 * x2 = 1\""], ["proof (prove)\nusing this:\n  A * x1\\<^sup>2 + 2 * Re B * x1 + A = 0\n  A * x2\\<^sup>2 + 2 * Re B * x2 + A = 0\n  x1 \\<noteq> x2\n\ngoal (1 subgoal):\n 1. x1 * x2 = 1", "using viette2[OF \\<open>A \\<noteq> 0\\<close>, of \"2 * Re B\" A x1 x2] discr \\<open>A \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  A * x1\\<^sup>2 + 2 * Re B * x1 + A = 0\n  A * x2\\<^sup>2 + 2 * Re B * x2 + A = 0\n  x1 \\<noteq> x2\n  \\<lbrakk>0 \\<le> (2 * Re B)\\<^sup>2 - 4 * A * A;\n   A * x1\\<^sup>2 + 2 * Re B * x1 + A = 0;\n   A * x2\\<^sup>2 + 2 * Re B * x2 + A = 0; x1 \\<noteq> x2\\<rbrakk>\n  \\<Longrightarrow> x1 * x2 = A / A\n  0 < (2 * Re B)\\<^sup>2 - 4 * A * A\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. x1 * x2 = 1", "by auto"], ["proof (state)\nthis:\n  x1 * x2 = 1\n\ngoal (1 subgoal):\n 1. intersects_x_axis H \\<Longrightarrow>\n    \\<exists>x\\<in>unit_disc.\n       x \\<in> circline_set H \\<inter> circline_set x_axis", "have \"abs x1 \\<noteq> 1\" \"abs x2 \\<noteq> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>x1\\<bar> \\<noteq> 1 &&& \\<bar>x2\\<bar> \\<noteq> 1", "using eqs discr \\<open>x1 * x2 = 1\\<close>"], ["proof (prove)\nusing this:\n  A * x1\\<^sup>2 + 2 * Re B * x1 + A = 0\n  A * x2\\<^sup>2 + 2 * Re B * x2 + A = 0\n  x1 \\<noteq> x2\n  0 < (2 * Re B)\\<^sup>2 - 4 * A * A\n  x1 * x2 = 1\n\ngoal (1 subgoal):\n 1. \\<bar>x1\\<bar> \\<noteq> 1 &&& \\<bar>x2\\<bar> \\<noteq> 1", "by (auto simp add: abs_if power2_eq_square)"], ["proof (state)\nthis:\n  \\<bar>x1\\<bar> \\<noteq> 1\n  \\<bar>x2\\<bar> \\<noteq> 1\n\ngoal (1 subgoal):\n 1. intersects_x_axis H \\<Longrightarrow>\n    \\<exists>x\\<in>unit_disc.\n       x \\<in> circline_set H \\<inter> circline_set x_axis", "hence \"abs x1 < 1 \\<or> abs x2 < 1\""], ["proof (prove)\nusing this:\n  \\<bar>x1\\<bar> \\<noteq> 1\n  \\<bar>x2\\<bar> \\<noteq> 1\n\ngoal (1 subgoal):\n 1. \\<bar>x1\\<bar> < 1 \\<or> \\<bar>x2\\<bar> < 1", "using \\<open>x1 * x2 = 1\\<close>"], ["proof (prove)\nusing this:\n  \\<bar>x1\\<bar> \\<noteq> 1\n  \\<bar>x2\\<bar> \\<noteq> 1\n  x1 * x2 = 1\n\ngoal (1 subgoal):\n 1. \\<bar>x1\\<bar> < 1 \\<or> \\<bar>x2\\<bar> < 1", "by (smt mult_le_cancel_left1 mult_minus_right)"], ["proof (state)\nthis:\n  \\<bar>x1\\<bar> < 1 \\<or> \\<bar>x2\\<bar> < 1\n\ngoal (1 subgoal):\n 1. intersects_x_axis H \\<Longrightarrow>\n    \\<exists>x\\<in>unit_disc.\n       x \\<in> circline_set H \\<inter> circline_set x_axis", "thus \"\\<exists>x \\<in> unit_disc. x \\<in> circline_set H \\<inter> circline_set x_axis\""], ["proof (prove)\nusing this:\n  \\<bar>x1\\<bar> < 1 \\<or> \\<bar>x2\\<bar> < 1\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>unit_disc.\n       x \\<in> circline_set H \\<inter> circline_set x_axis", "using x_axis_intersection_equation[OF *(1-2), of x1]"], ["proof (prove)\nusing this:\n  \\<bar>x1\\<bar> < 1 \\<or> \\<bar>x2\\<bar> < 1\n  (of_complex (cor x1) \\<in> circline_set x_axis \\<inter> circline_set H) =\n  (A * x1\\<^sup>2 + 2 * Re B * x1 + A = 0 \\<and> is_real (cor x1))\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>unit_disc.\n       x \\<in> circline_set H \\<inter> circline_set x_axis", "using x_axis_intersection_equation[OF *(1-2), of x2]"], ["proof (prove)\nusing this:\n  \\<bar>x1\\<bar> < 1 \\<or> \\<bar>x2\\<bar> < 1\n  (of_complex (cor x1) \\<in> circline_set x_axis \\<inter> circline_set H) =\n  (A * x1\\<^sup>2 + 2 * Re B * x1 + A = 0 \\<and> is_real (cor x1))\n  (of_complex (cor x2) \\<in> circline_set x_axis \\<inter> circline_set H) =\n  (A * x2\\<^sup>2 + 2 * Re B * x2 + A = 0 \\<and> is_real (cor x2))\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>unit_disc.\n       x \\<in> circline_set H \\<inter> circline_set x_axis", "using eqs"], ["proof (prove)\nusing this:\n  \\<bar>x1\\<bar> < 1 \\<or> \\<bar>x2\\<bar> < 1\n  (of_complex (cor x1) \\<in> circline_set x_axis \\<inter> circline_set H) =\n  (A * x1\\<^sup>2 + 2 * Re B * x1 + A = 0 \\<and> is_real (cor x1))\n  (of_complex (cor x2) \\<in> circline_set x_axis \\<inter> circline_set H) =\n  (A * x2\\<^sup>2 + 2 * Re B * x2 + A = 0 \\<and> is_real (cor x2))\n  A * x1\\<^sup>2 + 2 * Re B * x1 + A = 0\n  A * x2\\<^sup>2 + 2 * Re B * x2 + A = 0\n  x1 \\<noteq> x2\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>unit_disc.\n       x \\<in> circline_set H \\<inter> circline_set x_axis", "by auto"], ["proof (state)\nthis:\n  \\<exists>x\\<in>unit_disc.\n     x \\<in> circline_set H \\<inter> circline_set x_axis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>x\\<in>unit_disc.\n      x \\<in> circline_set H \\<inter> circline_set x_axis) =\n  intersects_x_axis H\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>x\\<in>unit_disc.\n      x \\<in> circline_set H \\<inter> circline_set x_axis) =\n  intersects_x_axis H\n\ngoal:\nNo subgoals!", "qed"], ["", "(* ------------------------------------------------------------------ *)"], ["", "subsection\\<open>Check if a Poincar\\'e line intersects the y-axis\\<close>"], ["", "(* ------------------------------------------------------------------ *)"], ["", "definition intersects_y_axis_cmat :: \"complex_mat \\<Rightarrow> bool\" where\n  [simp]: \"intersects_y_axis_cmat H = (let (A, B, C, D) = H in A = 0 \\<or> (Im B)\\<^sup>2 > (Re A)\\<^sup>2)\""], ["", "lift_definition intersects_y_axis_clmat :: \"circline_mat \\<Rightarrow> bool\" is intersects_y_axis_cmat"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lift_definition intersects_y_axis :: \"circline \\<Rightarrow> bool\" is intersects_y_axis_clmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       circline_eq_clmat circline_mat1 circline_mat2 \\<Longrightarrow>\n       intersects_y_axis_clmat circline_mat1 =\n       intersects_y_axis_clmat circline_mat2", "proof (transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> intersects_y_axis_cmat circline_mat1 =\n                         intersects_y_axis_cmat circline_mat2", "fix H1 H2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> intersects_y_axis_cmat circline_mat1 =\n                         intersects_y_axis_cmat circline_mat2", "assume hh: \"hermitean H1 \\<and> H1 \\<noteq> mat_zero\" and \"hermitean H2 \\<and> H2 \\<noteq> mat_zero\""], ["proof (state)\nthis:\n  hermitean H1 \\<and> H1 \\<noteq> mat_zero\n  hermitean H2 \\<and> H2 \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> intersects_y_axis_cmat circline_mat1 =\n                         intersects_y_axis_cmat circline_mat2", "obtain A1 B1 C1 D1 A2 B2 C2 D2 where *: \"H1 = (A1, B1, C1, D1)\" \"H2 = (A2, B2, C2, D2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A1 B1 C1 D1 A2 B2 C2 D2.\n        \\<lbrakk>H1 = (A1, B1, C1, D1); H2 = (A2, B2, C2, D2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases H1, cases H2, auto)"], ["proof (state)\nthis:\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> intersects_y_axis_cmat circline_mat1 =\n                         intersects_y_axis_cmat circline_mat2", "assume \"circline_eq_cmat H1 H2\""], ["proof (state)\nthis:\n  circline_eq_cmat H1 H2\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> intersects_y_axis_cmat circline_mat1 =\n                         intersects_y_axis_cmat circline_mat2", "then"], ["proof (chain)\npicking this:\n  circline_eq_cmat H1 H2", "obtain k where k: \"k \\<noteq> 0 \\<and> H2 = cor k *\\<^sub>s\\<^sub>m H1\""], ["proof (prove)\nusing this:\n  circline_eq_cmat H1 H2\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        k \\<noteq> 0 \\<and>\n        H2 = cor k *\\<^sub>s\\<^sub>m H1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  k \\<noteq> 0 \\<and> H2 = cor k *\\<^sub>s\\<^sub>m H1\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> intersects_y_axis_cmat circline_mat1 =\n                         intersects_y_axis_cmat circline_mat2", "show \"intersects_y_axis_cmat H1 = intersects_y_axis_cmat H2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. intersects_y_axis_cmat H1 = intersects_y_axis_cmat H2", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. intersects_y_axis_cmat H1 = intersects_y_axis_cmat H2", "have \"k \\<noteq> 0 \\<Longrightarrow> (Re A1)\\<^sup>2 < (Im B1)\\<^sup>2 \\<longleftrightarrow> (k * Re A1)\\<^sup>2 < (k * Im B1)\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    ((Re A1)\\<^sup>2 < (Im B1)\\<^sup>2) =\n    ((k * Re A1)\\<^sup>2 < (k * Im B1)\\<^sup>2)", "by (smt mult_strict_left_mono power2_eq_square semiring_normalization_rules(13) zero_less_power2)"], ["proof (state)\nthis:\n  k \\<noteq> 0 \\<Longrightarrow>\n  ((Re A1)\\<^sup>2 < (Im B1)\\<^sup>2) =\n  ((k * Re A1)\\<^sup>2 < (k * Im B1)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. intersects_y_axis_cmat H1 = intersects_y_axis_cmat H2", "thus ?thesis"], ["proof (prove)\nusing this:\n  k \\<noteq> 0 \\<Longrightarrow>\n  ((Re A1)\\<^sup>2 < (Im B1)\\<^sup>2) =\n  ((k * Re A1)\\<^sup>2 < (k * Im B1)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. intersects_y_axis_cmat H1 = intersects_y_axis_cmat H2", "using * k"], ["proof (prove)\nusing this:\n  k \\<noteq> 0 \\<Longrightarrow>\n  ((Re A1)\\<^sup>2 < (Im B1)\\<^sup>2) =\n  ((k * Re A1)\\<^sup>2 < (k * Im B1)\\<^sup>2)\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n  k \\<noteq> 0 \\<and> H2 = cor k *\\<^sub>s\\<^sub>m H1\n\ngoal (1 subgoal):\n 1. intersects_y_axis_cmat H1 = intersects_y_axis_cmat H2", "by auto"], ["proof (state)\nthis:\n  intersects_y_axis_cmat H1 = intersects_y_axis_cmat H2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  intersects_y_axis_cmat H1 = intersects_y_axis_cmat H2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma intersects_x_axis_intersects_y_axis [simp]:\n  shows \"intersects_x_axis (moebius_circline (moebius_rotation (pi/2)) H) \\<longleftrightarrow> intersects_y_axis H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. intersects_x_axis (moebius_circline (moebius_rotation (pi / 2)) H) =\n    intersects_y_axis H", "unfolding moebius_rotation_def moebius_similarity_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. intersects_x_axis\n     (moebius_circline (mk_moebius (cis (pi / 2)) 0 0 1) H) =\n    intersects_y_axis H", "by simp (transfer, transfer, auto simp add: mat_adj_def mat_cnj_def)"], ["", "lemma intersects_y_axis_iff:\n  assumes \"is_poincare_line H\"\n  shows \"(\\<exists> y \\<in> unit_disc. y \\<in> circline_set H \\<inter> circline_set y_axis) \\<longleftrightarrow> intersects_y_axis H\" (is \"?lhs \\<longleftrightarrow> ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>y\\<in>unit_disc.\n        y \\<in> circline_set H \\<inter> circline_set y_axis) =\n    intersects_y_axis H", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<exists>y\\<in>unit_disc.\n        y \\<in> circline_set H \\<inter> circline_set y_axis) =\n    intersects_y_axis H", "let ?R = \"moebius_rotation (pi / 2)\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<exists>y\\<in>unit_disc.\n        y \\<in> circline_set H \\<inter> circline_set y_axis) =\n    intersects_y_axis H", "let ?H' = \"moebius_circline ?R H\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<exists>y\\<in>unit_disc.\n        y \\<in> circline_set H \\<inter> circline_set y_axis) =\n    intersects_y_axis H", "have 1: \"is_poincare_line ?H'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_poincare_line (moebius_circline (moebius_rotation (pi / 2)) H)", "using assms"], ["proof (prove)\nusing this:\n  is_poincare_line H\n\ngoal (1 subgoal):\n 1. is_poincare_line (moebius_circline (moebius_rotation (pi / 2)) H)", "using unit_circle_fix_preserve_is_poincare_line[OF _ assms, of ?R]"], ["proof (prove)\nusing this:\n  is_poincare_line H\n  unit_circle_fix (moebius_rotation (pi / 2)) \\<Longrightarrow>\n  is_poincare_line (moebius_circline (moebius_rotation (pi / 2)) H)\n\ngoal (1 subgoal):\n 1. is_poincare_line (moebius_circline (moebius_rotation (pi / 2)) H)", "by simp"], ["proof (state)\nthis:\n  is_poincare_line (moebius_circline (moebius_rotation (pi / 2)) H)\n\ngoal (1 subgoal):\n 1. (\\<exists>y\\<in>unit_disc.\n        y \\<in> circline_set H \\<inter> circline_set y_axis) =\n    intersects_y_axis H", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>y\\<in>unit_disc.\n        y \\<in> circline_set H \\<inter> circline_set y_axis) =\n    intersects_y_axis H", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>y\\<in>unit_disc.\n       y \\<in> circline_set H \\<inter> circline_set y_axis \\<Longrightarrow>\n    intersects_y_axis H\n 2. intersects_y_axis H \\<Longrightarrow>\n    \\<exists>y\\<in>unit_disc.\n       y \\<in> circline_set H \\<inter> circline_set y_axis", "assume \"?lhs\""], ["proof (state)\nthis:\n  \\<exists>y\\<in>unit_disc.\n     y \\<in> circline_set H \\<inter> circline_set y_axis\n\ngoal (2 subgoals):\n 1. \\<exists>y\\<in>unit_disc.\n       y \\<in> circline_set H \\<inter> circline_set y_axis \\<Longrightarrow>\n    intersects_y_axis H\n 2. intersects_y_axis H \\<Longrightarrow>\n    \\<exists>y\\<in>unit_disc.\n       y \\<in> circline_set H \\<inter> circline_set y_axis", "then"], ["proof (chain)\npicking this:\n  \\<exists>y\\<in>unit_disc.\n     y \\<in> circline_set H \\<inter> circline_set y_axis", "obtain y where \"y \\<in> unit_disc\" \"y \\<in> circline_set H \\<inter> circline_set y_axis\""], ["proof (prove)\nusing this:\n  \\<exists>y\\<in>unit_disc.\n     y \\<in> circline_set H \\<inter> circline_set y_axis\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> unit_disc;\n         y \\<in> circline_set H \\<inter> circline_set y_axis\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  y \\<in> unit_disc\n  y \\<in> circline_set H \\<inter> circline_set y_axis\n\ngoal (2 subgoals):\n 1. \\<exists>y\\<in>unit_disc.\n       y \\<in> circline_set H \\<inter> circline_set y_axis \\<Longrightarrow>\n    intersects_y_axis H\n 2. intersects_y_axis H \\<Longrightarrow>\n    \\<exists>y\\<in>unit_disc.\n       y \\<in> circline_set H \\<inter> circline_set y_axis", "hence \"moebius_pt ?R y \\<in> unit_disc \\<and> moebius_pt ?R y \\<in> circline_set ?H' \\<inter> circline_set x_axis\""], ["proof (prove)\nusing this:\n  y \\<in> unit_disc\n  y \\<in> circline_set H \\<inter> circline_set y_axis\n\ngoal (1 subgoal):\n 1. moebius_pt (moebius_rotation (pi / 2)) y \\<in> unit_disc \\<and>\n    moebius_pt (moebius_rotation (pi / 2)) y\n    \\<in> circline_set\n           (moebius_circline (moebius_rotation (pi / 2)) H) \\<inter>\n          circline_set x_axis", "using rotation_pi_2_y_axis"], ["proof (prove)\nusing this:\n  y \\<in> unit_disc\n  y \\<in> circline_set H \\<inter> circline_set y_axis\n  moebius_circline (moebius_rotation (pi / 2)) y_axis = x_axis\n\ngoal (1 subgoal):\n 1. moebius_pt (moebius_rotation (pi / 2)) y \\<in> unit_disc \\<and>\n    moebius_pt (moebius_rotation (pi / 2)) y\n    \\<in> circline_set\n           (moebius_circline (moebius_rotation (pi / 2)) H) \\<inter>\n          circline_set x_axis", "by (metis Int_iff circline_set_moebius_circline_E moebius_circline_comp_inv_left moebius_pt_comp_inv_left unit_disc_fix_discI unit_disc_fix_rotation)"], ["proof (state)\nthis:\n  moebius_pt (moebius_rotation (pi / 2)) y \\<in> unit_disc \\<and>\n  moebius_pt (moebius_rotation (pi / 2)) y\n  \\<in> circline_set\n         (moebius_circline (moebius_rotation (pi / 2)) H) \\<inter>\n        circline_set x_axis\n\ngoal (2 subgoals):\n 1. \\<exists>y\\<in>unit_disc.\n       y \\<in> circline_set H \\<inter> circline_set y_axis \\<Longrightarrow>\n    intersects_y_axis H\n 2. intersects_y_axis H \\<Longrightarrow>\n    \\<exists>y\\<in>unit_disc.\n       y \\<in> circline_set H \\<inter> circline_set y_axis", "thus ?rhs"], ["proof (prove)\nusing this:\n  moebius_pt (moebius_rotation (pi / 2)) y \\<in> unit_disc \\<and>\n  moebius_pt (moebius_rotation (pi / 2)) y\n  \\<in> circline_set\n         (moebius_circline (moebius_rotation (pi / 2)) H) \\<inter>\n        circline_set x_axis\n\ngoal (1 subgoal):\n 1. intersects_y_axis H", "using intersects_x_axis_iff[OF 1]"], ["proof (prove)\nusing this:\n  moebius_pt (moebius_rotation (pi / 2)) y \\<in> unit_disc \\<and>\n  moebius_pt (moebius_rotation (pi / 2)) y\n  \\<in> circline_set\n         (moebius_circline (moebius_rotation (pi / 2)) H) \\<inter>\n        circline_set x_axis\n  (\\<exists>x\\<in>unit_disc.\n      x \\<in> circline_set\n               (moebius_circline (moebius_rotation (pi / 2)) H) \\<inter>\n              circline_set x_axis) =\n  intersects_x_axis (moebius_circline (moebius_rotation (pi / 2)) H)\n\ngoal (1 subgoal):\n 1. intersects_y_axis H", "using intersects_x_axis_intersects_y_axis[of H]"], ["proof (prove)\nusing this:\n  moebius_pt (moebius_rotation (pi / 2)) y \\<in> unit_disc \\<and>\n  moebius_pt (moebius_rotation (pi / 2)) y\n  \\<in> circline_set\n         (moebius_circline (moebius_rotation (pi / 2)) H) \\<inter>\n        circline_set x_axis\n  (\\<exists>x\\<in>unit_disc.\n      x \\<in> circline_set\n               (moebius_circline (moebius_rotation (pi / 2)) H) \\<inter>\n              circline_set x_axis) =\n  intersects_x_axis (moebius_circline (moebius_rotation (pi / 2)) H)\n  intersects_x_axis (moebius_circline (moebius_rotation (pi / 2)) H) =\n  intersects_y_axis H\n\ngoal (1 subgoal):\n 1. intersects_y_axis H", "by auto"], ["proof (state)\nthis:\n  intersects_y_axis H\n\ngoal (1 subgoal):\n 1. intersects_y_axis H \\<Longrightarrow>\n    \\<exists>y\\<in>unit_disc.\n       y \\<in> circline_set H \\<inter> circline_set y_axis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. intersects_y_axis H \\<Longrightarrow>\n    \\<exists>y\\<in>unit_disc.\n       y \\<in> circline_set H \\<inter> circline_set y_axis", "assume \"intersects_y_axis H\""], ["proof (state)\nthis:\n  intersects_y_axis H\n\ngoal (1 subgoal):\n 1. intersects_y_axis H \\<Longrightarrow>\n    \\<exists>y\\<in>unit_disc.\n       y \\<in> circline_set H \\<inter> circline_set y_axis", "hence \"intersects_x_axis ?H'\""], ["proof (prove)\nusing this:\n  intersects_y_axis H\n\ngoal (1 subgoal):\n 1. intersects_x_axis (moebius_circline (moebius_rotation (pi / 2)) H)", "using intersects_x_axis_intersects_y_axis[of H]"], ["proof (prove)\nusing this:\n  intersects_y_axis H\n  intersects_x_axis (moebius_circline (moebius_rotation (pi / 2)) H) =\n  intersects_y_axis H\n\ngoal (1 subgoal):\n 1. intersects_x_axis (moebius_circline (moebius_rotation (pi / 2)) H)", "by simp"], ["proof (state)\nthis:\n  intersects_x_axis (moebius_circline (moebius_rotation (pi / 2)) H)\n\ngoal (1 subgoal):\n 1. intersects_y_axis H \\<Longrightarrow>\n    \\<exists>y\\<in>unit_disc.\n       y \\<in> circline_set H \\<inter> circline_set y_axis", "then"], ["proof (chain)\npicking this:\n  intersects_x_axis (moebius_circline (moebius_rotation (pi / 2)) H)", "obtain x where *: \"x \\<in> unit_disc\" \"x \\<in> circline_set ?H' \\<inter> circline_set x_axis\""], ["proof (prove)\nusing this:\n  intersects_x_axis (moebius_circline (moebius_rotation (pi / 2)) H)\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> unit_disc;\n         x \\<in> circline_set\n                  (moebius_circline (moebius_rotation (pi / 2)) H) \\<inter>\n                 circline_set x_axis\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using intersects_x_axis_iff[OF 1]"], ["proof (prove)\nusing this:\n  intersects_x_axis (moebius_circline (moebius_rotation (pi / 2)) H)\n  (\\<exists>x\\<in>unit_disc.\n      x \\<in> circline_set\n               (moebius_circline (moebius_rotation (pi / 2)) H) \\<inter>\n              circline_set x_axis) =\n  intersects_x_axis (moebius_circline (moebius_rotation (pi / 2)) H)\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> unit_disc;\n         x \\<in> circline_set\n                  (moebius_circline (moebius_rotation (pi / 2)) H) \\<inter>\n                 circline_set x_axis\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> unit_disc\n  x \\<in> circline_set\n           (moebius_circline (moebius_rotation (pi / 2)) H) \\<inter>\n          circline_set x_axis\n\ngoal (1 subgoal):\n 1. intersects_y_axis H \\<Longrightarrow>\n    \\<exists>y\\<in>unit_disc.\n       y \\<in> circline_set H \\<inter> circline_set y_axis", "let ?y = \"moebius_pt (-?R) x\""], ["proof (state)\ngoal (1 subgoal):\n 1. intersects_y_axis H \\<Longrightarrow>\n    \\<exists>y\\<in>unit_disc.\n       y \\<in> circline_set H \\<inter> circline_set y_axis", "have \"?y \\<in> unit_disc \\<and> ?y \\<in> circline_set H \\<inter> circline_set y_axis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (- moebius_rotation (pi / 2)) x \\<in> unit_disc \\<and>\n    moebius_pt (- moebius_rotation (pi / 2)) x\n    \\<in> circline_set H \\<inter> circline_set y_axis", "using * rotation_pi_2_y_axis[symmetric]"], ["proof (prove)\nusing this:\n  x \\<in> unit_disc\n  x \\<in> circline_set\n           (moebius_circline (moebius_rotation (pi / 2)) H) \\<inter>\n          circline_set x_axis\n  x_axis = moebius_circline (moebius_rotation (pi / 2)) y_axis\n\ngoal (1 subgoal):\n 1. moebius_pt (- moebius_rotation (pi / 2)) x \\<in> unit_disc \\<and>\n    moebius_pt (- moebius_rotation (pi / 2)) x\n    \\<in> circline_set H \\<inter> circline_set y_axis", "by (metis Int_iff circline_set_moebius_circline_E moebius_pt_comp_inv_left moebius_rotation_uminus uminus_moebius_def unit_disc_fix_discI unit_disc_fix_rotation)"], ["proof (state)\nthis:\n  moebius_pt (- moebius_rotation (pi / 2)) x \\<in> unit_disc \\<and>\n  moebius_pt (- moebius_rotation (pi / 2)) x\n  \\<in> circline_set H \\<inter> circline_set y_axis\n\ngoal (1 subgoal):\n 1. intersects_y_axis H \\<Longrightarrow>\n    \\<exists>y\\<in>unit_disc.\n       y \\<in> circline_set H \\<inter> circline_set y_axis", "thus ?lhs"], ["proof (prove)\nusing this:\n  moebius_pt (- moebius_rotation (pi / 2)) x \\<in> unit_disc \\<and>\n  moebius_pt (- moebius_rotation (pi / 2)) x\n  \\<in> circline_set H \\<inter> circline_set y_axis\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>unit_disc.\n       y \\<in> circline_set H \\<inter> circline_set y_axis", "by auto"], ["proof (state)\nthis:\n  \\<exists>y\\<in>unit_disc.\n     y \\<in> circline_set H \\<inter> circline_set y_axis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>y\\<in>unit_disc.\n      y \\<in> circline_set H \\<inter> circline_set y_axis) =\n  intersects_y_axis H\n\ngoal:\nNo subgoals!", "qed"], ["", "(* ------------------------------------------------------------------ *)"], ["", "subsection\\<open>Intersection point of a Poincar\\'e line with the x-axis in the unit disc\\<close>"], ["", "(* ------------------------------------------------------------------ *)"], ["", "definition calc_x_axis_intersection_cvec :: \"complex \\<Rightarrow> complex \\<Rightarrow> complex_vec\" where\n [simp]:  \"calc_x_axis_intersection_cvec A B =\n    (let discr = (Re B)\\<^sup>2 - (Re A)\\<^sup>2 in\n         (-Re(B) + sgn (Re B) * sqrt(discr), A))\""], ["", "(* intersection with the x-axis for poincare lines that are euclidean circles *)"], ["", "definition calc_x_axis_intersection_cmat_cvec :: \"complex_mat \\<Rightarrow> complex_vec\" where [simp]:\n  \"calc_x_axis_intersection_cmat_cvec H =\n    (let (A, B, C, D) = H in \n       if A \\<noteq> 0 then\n          calc_x_axis_intersection_cvec A B\n       else\n          (0, 1)\n    )\""], ["", "lift_definition calc_x_axis_intersection_clmat_hcoords :: \"circline_mat \\<Rightarrow> complex_homo_coords\" is calc_x_axis_intersection_cmat_cvec"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>prod.\n       hermitean prod \\<and> prod \\<noteq> mat_zero \\<Longrightarrow>\n       calc_x_axis_intersection_cmat_cvec prod \\<noteq> vec_zero", "by (auto split: if_split_asm)"], ["", "lift_definition calc_x_axis_intersection :: \"circline \\<Rightarrow> complex_homo\" is calc_x_axis_intersection_clmat_hcoords"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       circline_eq_clmat circline_mat1 circline_mat2 \\<Longrightarrow>\n       calc_x_axis_intersection_clmat_hcoords circline_mat1 \\<approx>\n       calc_x_axis_intersection_clmat_hcoords circline_mat2", "proof transfer"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> calc_x_axis_intersection_cmat_cvec\n                          circline_mat1 \\<approx>\\<^sub>v\n                         calc_x_axis_intersection_cmat_cvec circline_mat2", "fix H1 H2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> calc_x_axis_intersection_cmat_cvec\n                          circline_mat1 \\<approx>\\<^sub>v\n                         calc_x_axis_intersection_cmat_cvec circline_mat2", "assume *: \"hermitean H1 \\<and> H1 \\<noteq> mat_zero\" \"hermitean H2 \\<and> H2 \\<noteq> mat_zero\""], ["proof (state)\nthis:\n  hermitean H1 \\<and> H1 \\<noteq> mat_zero\n  hermitean H2 \\<and> H2 \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> calc_x_axis_intersection_cmat_cvec\n                          circline_mat1 \\<approx>\\<^sub>v\n                         calc_x_axis_intersection_cmat_cvec circline_mat2", "obtain A1 B1 C1 D1 A2 B2 C2 D2 where hh: \"H1 = (A1, B1, C1, D1)\" \"H2 = (A2, B2, C2, D2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A1 B1 C1 D1 A2 B2 C2 D2.\n        \\<lbrakk>H1 = (A1, B1, C1, D1); H2 = (A2, B2, C2, D2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases H1, cases H2, auto)"], ["proof (state)\nthis:\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> calc_x_axis_intersection_cmat_cvec\n                          circline_mat1 \\<approx>\\<^sub>v\n                         calc_x_axis_intersection_cmat_cvec circline_mat2", "assume \"circline_eq_cmat H1 H2\""], ["proof (state)\nthis:\n  circline_eq_cmat H1 H2\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> calc_x_axis_intersection_cmat_cvec\n                          circline_mat1 \\<approx>\\<^sub>v\n                         calc_x_axis_intersection_cmat_cvec circline_mat2", "then"], ["proof (chain)\npicking this:\n  circline_eq_cmat H1 H2", "obtain k where k: \"k \\<noteq> 0\" \"H2 = cor k *\\<^sub>s\\<^sub>m H1\""], ["proof (prove)\nusing this:\n  circline_eq_cmat H1 H2\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k \\<noteq> 0; H2 = cor k *\\<^sub>s\\<^sub>m H1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  k \\<noteq> 0\n  H2 = cor k *\\<^sub>s\\<^sub>m H1\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> calc_x_axis_intersection_cmat_cvec\n                          circline_mat1 \\<approx>\\<^sub>v\n                         calc_x_axis_intersection_cmat_cvec circline_mat2", "have \"calc_x_axis_intersection_cvec A1 B1 \\<approx>\\<^sub>v calc_x_axis_intersection_cvec A2 B2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. calc_x_axis_intersection_cvec A1 B1 \\<approx>\\<^sub>v\n    calc_x_axis_intersection_cvec A2 B2", "using hh k"], ["proof (prove)\nusing this:\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n  k \\<noteq> 0\n  H2 = cor k *\\<^sub>s\\<^sub>m H1\n\ngoal (1 subgoal):\n 1. calc_x_axis_intersection_cvec A1 B1 \\<approx>\\<^sub>v\n    calc_x_axis_intersection_cvec A2 B2", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H1 = (A1, B1, C1, D1);\n     cor k * A1 = A2 \\<and>\n     cor k * B1 = B2 \\<and> cor k * C1 = C2 \\<and> cor k * D1 = D2;\n     k \\<noteq> 0; H2 = (A2, B2, C2, D2)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k.\n                         k \\<noteq> 0 \\<and>\n                         cor (sgn (Re B2)) *\n                         cor (sqrt ((Re B2)\\<^sup>2 - (Re A2)\\<^sup>2)) -\n                         cor (Re B2) =\n                         k *\n                         (cor (sgn (Re B1)) *\n                          cor (sqrt ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2)) -\n                          cor (Re B1)) \\<and>\n                         A2 = k * A1", "apply (rule_tac x=\"cor k\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H1 = (A1, B1, C1, D1);\n     cor k * A1 = A2 \\<and>\n     cor k * B1 = B2 \\<and> cor k * C1 = C2 \\<and> cor k * D1 = D2;\n     k \\<noteq> 0; H2 = (A2, B2, C2, D2)\\<rbrakk>\n    \\<Longrightarrow> cor k \\<noteq> 0 \\<and>\n                      cor (sgn (Re B2)) *\n                      cor (sqrt ((Re B2)\\<^sup>2 - (Re A2)\\<^sup>2)) -\n                      cor (Re B2) =\n                      cor k *\n                      (cor (sgn (Re B1)) *\n                       cor (sqrt ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2)) -\n                       cor (Re B1)) \\<and>\n                      A2 = cor k * A1", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H1 = (A1, B1, C1, D1); k \\<noteq> 0;\n     H2 = (cor k * A1, cor k * B1, cor k * C1, cor k * D1); A2 = cor k * A1;\n     B2 = cor k * B1; C2 = cor k * C1; D2 = cor k * D1\\<rbrakk>\n    \\<Longrightarrow> cor (sgn (k * Re B1)) *\n                      cor (sqrt\n                            ((k * Re B1)\\<^sup>2 - (k * Re A1)\\<^sup>2)) -\n                      cor k * cor (Re B1) =\n                      cor k *\n                      (cor (sgn (Re B1)) *\n                       cor (sqrt ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2)) -\n                       cor (Re B1))", "apply (simp add: sgn_mult power_mult_distrib)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H1 = (A1, B1, C1, D1); k \\<noteq> 0;\n     H2 = (cor k * A1, cor k * B1, cor k * C1, cor k * D1); A2 = cor k * A1;\n     B2 = cor k * B1; C2 = cor k * C1; D2 = cor k * D1\\<rbrakk>\n    \\<Longrightarrow> cor (sgn k) * cor (sgn (Re B1)) *\n                      cor (sqrt\n                            (k\\<^sup>2 * (Re B1)\\<^sup>2 -\n                             k\\<^sup>2 * (Re A1)\\<^sup>2)) -\n                      cor k * cor (Re B1) =\n                      cor k *\n                      (cor (sgn (Re B1)) *\n                       cor (sqrt ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2)) -\n                       cor (Re B1))", "apply (subst right_diff_distrib[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H1 = (A1, B1, C1, D1); k \\<noteq> 0;\n     H2 = (cor k * A1, cor k * B1, cor k * C1, cor k * D1); A2 = cor k * A1;\n     B2 = cor k * B1; C2 = cor k * C1; D2 = cor k * D1\\<rbrakk>\n    \\<Longrightarrow> cor (sgn k) * cor (sgn (Re B1)) *\n                      cor (sqrt\n                            (k\\<^sup>2 *\n                             ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2))) -\n                      cor k * cor (Re B1) =\n                      cor k *\n                      (cor (sgn (Re B1)) *\n                       cor (sqrt ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2)) -\n                       cor (Re B1))", "apply (subst real_sqrt_mult)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H1 = (A1, B1, C1, D1); k \\<noteq> 0;\n     H2 = (cor k * A1, cor k * B1, cor k * C1, cor k * D1); A2 = cor k * A1;\n     B2 = cor k * B1; C2 = cor k * C1; D2 = cor k * D1\\<rbrakk>\n    \\<Longrightarrow> cor (sgn k) * cor (sgn (Re B1)) *\n                      cor (sqrt (k\\<^sup>2) *\n                           sqrt ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2)) -\n                      cor k * cor (Re B1) =\n                      cor k *\n                      (cor (sgn (Re B1)) *\n                       cor (sqrt ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2)) -\n                       cor (Re B1))", "apply (subst cor_mult)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H1 = (A1, B1, C1, D1); k \\<noteq> 0;\n     H2 = (cor k * A1, cor k * B1, cor k * C1, cor k * D1); A2 = cor k * A1;\n     B2 = cor k * B1; C2 = cor k * C1; D2 = cor k * D1\\<rbrakk>\n    \\<Longrightarrow> cor (sgn k) * cor (sgn (Re B1)) *\n                      (cor (sqrt (k\\<^sup>2)) *\n                       cor (sqrt ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2))) -\n                      cor k * cor (Re B1) =\n                      cor k *\n                      (cor (sgn (Re B1)) *\n                       cor (sqrt ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2)) -\n                       cor (Re B1))", "by (simp add: real_sgn_eq right_diff_distrib)"], ["proof (state)\nthis:\n  calc_x_axis_intersection_cvec A1 B1 \\<approx>\\<^sub>v\n  calc_x_axis_intersection_cvec A2 B2\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> calc_x_axis_intersection_cmat_cvec\n                          circline_mat1 \\<approx>\\<^sub>v\n                         calc_x_axis_intersection_cmat_cvec circline_mat2", "thus \"calc_x_axis_intersection_cmat_cvec H1 \\<approx>\\<^sub>v\n        calc_x_axis_intersection_cmat_cvec H2\""], ["proof (prove)\nusing this:\n  calc_x_axis_intersection_cvec A1 B1 \\<approx>\\<^sub>v\n  calc_x_axis_intersection_cvec A2 B2\n\ngoal (1 subgoal):\n 1. calc_x_axis_intersection_cmat_cvec H1 \\<approx>\\<^sub>v\n    calc_x_axis_intersection_cmat_cvec H2", "using hh k"], ["proof (prove)\nusing this:\n  calc_x_axis_intersection_cvec A1 B1 \\<approx>\\<^sub>v\n  calc_x_axis_intersection_cvec A2 B2\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n  k \\<noteq> 0\n  H2 = cor k *\\<^sub>s\\<^sub>m H1\n\ngoal (1 subgoal):\n 1. calc_x_axis_intersection_cmat_cvec H1 \\<approx>\\<^sub>v\n    calc_x_axis_intersection_cmat_cvec H2", "by (auto simp del: calc_x_axis_intersection_cvec_def)"], ["proof (state)\nthis:\n  calc_x_axis_intersection_cmat_cvec H1 \\<approx>\\<^sub>v\n  calc_x_axis_intersection_cmat_cvec H2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma calc_x_axis_intersection_in_unit_disc:\n  assumes \"is_poincare_line H\" \"intersects_x_axis H\"\n  shows \"calc_x_axis_intersection H \\<in> unit_disc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. calc_x_axis_intersection H \\<in> unit_disc", "proof (cases \"is_line H\")"], ["proof (state)\ngoal (2 subgoals):\n 1. is_line H \\<Longrightarrow> calc_x_axis_intersection H \\<in> unit_disc\n 2. is_circle H \\<Longrightarrow> calc_x_axis_intersection H \\<in> unit_disc", "case True"], ["proof (state)\nthis:\n  is_line H\n\ngoal (2 subgoals):\n 1. is_line H \\<Longrightarrow> calc_x_axis_intersection H \\<in> unit_disc\n 2. is_circle H \\<Longrightarrow> calc_x_axis_intersection H \\<in> unit_disc", "thus ?thesis"], ["proof (prove)\nusing this:\n  is_line H\n\ngoal (1 subgoal):\n 1. calc_x_axis_intersection H \\<in> unit_disc", "using assms"], ["proof (prove)\nusing this:\n  is_line H\n  is_poincare_line H\n  intersects_x_axis H\n\ngoal (1 subgoal):\n 1. calc_x_axis_intersection H \\<in> unit_disc", "unfolding unit_disc_def disc_def"], ["proof (prove)\nusing this:\n  is_line H\n  is_poincare_line H\n  intersects_x_axis H\n\ngoal (1 subgoal):\n 1. calc_x_axis_intersection H \\<in> Collect (in_ocircline ounit_circle)", "by simp (transfer, transfer, auto simp add: vec_cnj_def)"], ["proof (state)\nthis:\n  calc_x_axis_intersection H \\<in> unit_disc\n\ngoal (1 subgoal):\n 1. is_circle H \\<Longrightarrow> calc_x_axis_intersection H \\<in> unit_disc", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. is_circle H \\<Longrightarrow> calc_x_axis_intersection H \\<in> unit_disc", "case False"], ["proof (state)\nthis:\n  is_circle H\n\ngoal (1 subgoal):\n 1. is_circle H \\<Longrightarrow> calc_x_axis_intersection H \\<in> unit_disc", "thus ?thesis"], ["proof (prove)\nusing this:\n  is_circle H\n\ngoal (1 subgoal):\n 1. calc_x_axis_intersection H \\<in> unit_disc", "using assms"], ["proof (prove)\nusing this:\n  is_circle H\n  is_poincare_line H\n  intersects_x_axis H\n\ngoal (1 subgoal):\n 1. calc_x_axis_intersection H \\<in> unit_disc", "unfolding unit_disc_def disc_def"], ["proof (prove)\nusing this:\n  is_circle H\n  is_poincare_line H\n  intersects_x_axis H\n\ngoal (1 subgoal):\n 1. calc_x_axis_intersection H \\<in> Collect (in_ocircline ounit_circle)", "proof (simp, transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_cmat H; \\<not> circline_A0_cmat H;\n        is_poincare_line_cmat H; intersects_x_axis_cmat H;\n        \\<not> circline_A0_clmat Ha; is_poincare_line_clmat Ha;\n        intersects_x_axis_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec unit_circle_cmat\n                          (calc_x_axis_intersection_cmat_cvec H)", "fix H"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_cmat H; \\<not> circline_A0_cmat H;\n        is_poincare_line_cmat H; intersects_x_axis_cmat H;\n        \\<not> circline_A0_clmat Ha; is_poincare_line_clmat Ha;\n        intersects_x_axis_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec unit_circle_cmat\n                          (calc_x_axis_intersection_cmat_cvec H)", "assume hh: \"hermitean H \\<and> H \\<noteq> mat_zero\""], ["proof (state)\nthis:\n  hermitean H \\<and> H \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_cmat H; \\<not> circline_A0_cmat H;\n        is_poincare_line_cmat H; intersects_x_axis_cmat H;\n        \\<not> circline_A0_clmat Ha; is_poincare_line_clmat Ha;\n        intersects_x_axis_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec unit_circle_cmat\n                          (calc_x_axis_intersection_cmat_cvec H)", "then"], ["proof (chain)\npicking this:\n  hermitean H \\<and> H \\<noteq> mat_zero", "obtain A B D where *: \"H = (A, B, cnj B, D)\" \"is_real A\" \"is_real D\""], ["proof (prove)\nusing this:\n  hermitean H \\<and> H \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. (\\<And>A B D.\n        \\<lbrakk>H = (A, B, cnj B, D); is_real A; is_real D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using hermitean_elems"], ["proof (prove)\nusing this:\n  hermitean H \\<and> H \\<noteq> mat_zero\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> is_real ?A\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> is_real ?D\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> ?B = cnj ?C\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> cnj ?B = ?C\n\ngoal (1 subgoal):\n 1. (\\<And>A B D.\n        \\<lbrakk>H = (A, B, cnj B, D); is_real A; is_real D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases H) blast"], ["proof (state)\nthis:\n  H = (A, B, cnj B, D)\n  is_real A\n  is_real D\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_cmat H; \\<not> circline_A0_cmat H;\n        is_poincare_line_cmat H; intersects_x_axis_cmat H;\n        \\<not> circline_A0_clmat Ha; is_poincare_line_clmat Ha;\n        intersects_x_axis_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec unit_circle_cmat\n                          (calc_x_axis_intersection_cmat_cvec H)", "assume \"is_poincare_line_cmat H\""], ["proof (state)\nthis:\n  is_poincare_line_cmat H\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_cmat H; \\<not> circline_A0_cmat H;\n        is_poincare_line_cmat H; intersects_x_axis_cmat H;\n        \\<not> circline_A0_clmat Ha; is_poincare_line_clmat Ha;\n        intersects_x_axis_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec unit_circle_cmat\n                          (calc_x_axis_intersection_cmat_cvec H)", "hence *: \"H = (A, B, cnj B, A)\" \"is_real A\""], ["proof (prove)\nusing this:\n  is_poincare_line_cmat H\n\ngoal (1 subgoal):\n 1. H = (A, B, cnj B, A) &&& is_real A", "using *"], ["proof (prove)\nusing this:\n  is_poincare_line_cmat H\n  H = (A, B, cnj B, D)\n  is_real A\n  is_real D\n\ngoal (1 subgoal):\n 1. H = (A, B, cnj B, A) &&& is_real A", "by auto"], ["proof (state)\nthis:\n  H = (A, B, cnj B, A)\n  is_real A\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_cmat H; \\<not> circline_A0_cmat H;\n        is_poincare_line_cmat H; intersects_x_axis_cmat H;\n        \\<not> circline_A0_clmat Ha; is_poincare_line_clmat Ha;\n        intersects_x_axis_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec unit_circle_cmat\n                          (calc_x_axis_intersection_cmat_cvec H)", "assume \"\\<not> circline_A0_cmat H\""], ["proof (state)\nthis:\n  \\<not> circline_A0_cmat H\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_cmat H; \\<not> circline_A0_cmat H;\n        is_poincare_line_cmat H; intersects_x_axis_cmat H;\n        \\<not> circline_A0_clmat Ha; is_poincare_line_clmat Ha;\n        intersects_x_axis_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec unit_circle_cmat\n                          (calc_x_axis_intersection_cmat_cvec H)", "hence \"A \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<not> circline_A0_cmat H\n\ngoal (1 subgoal):\n 1. A \\<noteq> 0", "using *"], ["proof (prove)\nusing this:\n  \\<not> circline_A0_cmat H\n  H = (A, B, cnj B, A)\n  is_real A\n\ngoal (1 subgoal):\n 1. A \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_cmat H; \\<not> circline_A0_cmat H;\n        is_poincare_line_cmat H; intersects_x_axis_cmat H;\n        \\<not> circline_A0_clmat Ha; is_poincare_line_clmat Ha;\n        intersects_x_axis_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec unit_circle_cmat\n                          (calc_x_axis_intersection_cmat_cvec H)", "assume \"intersects_x_axis_cmat H\""], ["proof (state)\nthis:\n  intersects_x_axis_cmat H\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_cmat H; \\<not> circline_A0_cmat H;\n        is_poincare_line_cmat H; intersects_x_axis_cmat H;\n        \\<not> circline_A0_clmat Ha; is_poincare_line_clmat Ha;\n        intersects_x_axis_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec unit_circle_cmat\n                          (calc_x_axis_intersection_cmat_cvec H)", "hence \"(Re B)\\<^sup>2 > (Re A)\\<^sup>2\""], ["proof (prove)\nusing this:\n  intersects_x_axis_cmat H\n\ngoal (1 subgoal):\n 1. (Re A)\\<^sup>2 < (Re B)\\<^sup>2", "using * \\<open>A \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  intersects_x_axis_cmat H\n  H = (A, B, cnj B, A)\n  is_real A\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (Re A)\\<^sup>2 < (Re B)\\<^sup>2", "by (auto simp add: power2_eq_square complex.expand)"], ["proof (state)\nthis:\n  (Re A)\\<^sup>2 < (Re B)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_cmat H; \\<not> circline_A0_cmat H;\n        is_poincare_line_cmat H; intersects_x_axis_cmat H;\n        \\<not> circline_A0_clmat Ha; is_poincare_line_clmat Ha;\n        intersects_x_axis_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec unit_circle_cmat\n                          (calc_x_axis_intersection_cmat_cvec H)", "hence \"Re B \\<noteq> 0\""], ["proof (prove)\nusing this:\n  (Re A)\\<^sup>2 < (Re B)\\<^sup>2\n\ngoal (1 subgoal):\n 1. Re B \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  Re B \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_cmat H; \\<not> circline_A0_cmat H;\n        is_poincare_line_cmat H; intersects_x_axis_cmat H;\n        \\<not> circline_A0_clmat Ha; is_poincare_line_clmat Ha;\n        intersects_x_axis_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec unit_circle_cmat\n                          (calc_x_axis_intersection_cmat_cvec H)", "have \"Re A \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re A \\<noteq> 0", "using \\<open>is_real A\\<close> \\<open>A \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  is_real A\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Re A \\<noteq> 0", "by (auto simp add: complex.expand)"], ["proof (state)\nthis:\n  Re A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_cmat H; \\<not> circline_A0_cmat H;\n        is_poincare_line_cmat H; intersects_x_axis_cmat H;\n        \\<not> circline_A0_clmat Ha; is_poincare_line_clmat Ha;\n        intersects_x_axis_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec unit_circle_cmat\n                          (calc_x_axis_intersection_cmat_cvec H)", "have \"sqrt((Re B)\\<^sup>2 - (Re A)\\<^sup>2) < sqrt((Re B)\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2) < sqrt ((Re B)\\<^sup>2)", "using \\<open>Re A \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  Re A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2) < sqrt ((Re B)\\<^sup>2)", "by (subst real_sqrt_less_iff) auto"], ["proof (state)\nthis:\n  sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2) < sqrt ((Re B)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_cmat H; \\<not> circline_A0_cmat H;\n        is_poincare_line_cmat H; intersects_x_axis_cmat H;\n        \\<not> circline_A0_clmat Ha; is_poincare_line_clmat Ha;\n        intersects_x_axis_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec unit_circle_cmat\n                          (calc_x_axis_intersection_cmat_cvec H)", "also"], ["proof (state)\nthis:\n  sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2) < sqrt ((Re B)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_cmat H; \\<not> circline_A0_cmat H;\n        is_poincare_line_cmat H; intersects_x_axis_cmat H;\n        \\<not> circline_A0_clmat Ha; is_poincare_line_clmat Ha;\n        intersects_x_axis_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec unit_circle_cmat\n                          (calc_x_axis_intersection_cmat_cvec H)", "have \"... =  sgn (Re B) * (Re B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt ((Re B)\\<^sup>2) = sgn (Re B) * Re B", "by (smt mult_minus_right nonzero_eq_divide_eq real_sgn_eq real_sqrt_abs)"], ["proof (state)\nthis:\n  sqrt ((Re B)\\<^sup>2) = sgn (Re B) * Re B\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_cmat H; \\<not> circline_A0_cmat H;\n        is_poincare_line_cmat H; intersects_x_axis_cmat H;\n        \\<not> circline_A0_clmat Ha; is_poincare_line_clmat Ha;\n        intersects_x_axis_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec unit_circle_cmat\n                          (calc_x_axis_intersection_cmat_cvec H)", "finally"], ["proof (chain)\npicking this:\n  sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2) < sgn (Re B) * Re B", "have 1: \"sqrt((Re B)\\<^sup>2 - (Re A)\\<^sup>2) < sgn (Re B) * (Re B)\""], ["proof (prove)\nusing this:\n  sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2) < sgn (Re B) * Re B\n\ngoal (1 subgoal):\n 1. sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2) < sgn (Re B) * Re B", "."], ["proof (state)\nthis:\n  sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2) < sgn (Re B) * Re B\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_cmat H; \\<not> circline_A0_cmat H;\n        is_poincare_line_cmat H; intersects_x_axis_cmat H;\n        \\<not> circline_A0_clmat Ha; is_poincare_line_clmat Ha;\n        intersects_x_axis_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec unit_circle_cmat\n                          (calc_x_axis_intersection_cmat_cvec H)", "have 2: \"(Re B)\\<^sup>2 - (Re A)\\<^sup>2 < sgn (Re B) * (Re B) * sqrt((Re B)\\<^sup>2 - (Re A)\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Re B)\\<^sup>2 - (Re A)\\<^sup>2\n    < sgn (Re B) * Re B * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)", "using \\<open>(Re B)\\<^sup>2 > (Re A)\\<^sup>2\\<close>"], ["proof (prove)\nusing this:\n  (Re A)\\<^sup>2 < (Re B)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (Re B)\\<^sup>2 - (Re A)\\<^sup>2\n    < sgn (Re B) * Re B * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)", "using mult_strict_right_mono[OF 1, of \"sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)\"]"], ["proof (prove)\nusing this:\n  (Re A)\\<^sup>2 < (Re B)\\<^sup>2\n  0 < sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2) \\<Longrightarrow>\n  sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2) *\n  sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)\n  < sgn (Re B) * Re B * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (Re B)\\<^sup>2 - (Re A)\\<^sup>2\n    < sgn (Re B) * Re B * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)", "by simp"], ["proof (state)\nthis:\n  (Re B)\\<^sup>2 - (Re A)\\<^sup>2\n  < sgn (Re B) * Re B * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_cmat H; \\<not> circline_A0_cmat H;\n        is_poincare_line_cmat H; intersects_x_axis_cmat H;\n        \\<not> circline_A0_clmat Ha; is_poincare_line_clmat Ha;\n        intersects_x_axis_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec unit_circle_cmat\n                          (calc_x_axis_intersection_cmat_cvec H)", "have 3: \"(Re B)\\<^sup>2 - 2*sgn (Re B)*Re B*sqrt((Re B)\\<^sup>2 - (Re A)\\<^sup>2) + (Re B)\\<^sup>2 - (Re A)\\<^sup>2 < (Re A)\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Re B)\\<^sup>2 -\n    2 * sgn (Re B) * Re B * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2) +\n    (Re B)\\<^sup>2 -\n    (Re A)\\<^sup>2\n    < (Re A)\\<^sup>2", "using mult_strict_left_mono[OF 2, of 2]"], ["proof (prove)\nusing this:\n  0 < 2 \\<Longrightarrow>\n  2 * ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)\n  < 2 * (sgn (Re B) * Re B * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. (Re B)\\<^sup>2 -\n    2 * sgn (Re B) * Re B * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2) +\n    (Re B)\\<^sup>2 -\n    (Re A)\\<^sup>2\n    < (Re A)\\<^sup>2", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  (Re B)\\<^sup>2 -\n  2 * sgn (Re B) * Re B * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2) +\n  (Re B)\\<^sup>2 -\n  (Re A)\\<^sup>2\n  < (Re A)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_cmat H; \\<not> circline_A0_cmat H;\n        is_poincare_line_cmat H; intersects_x_axis_cmat H;\n        \\<not> circline_A0_clmat Ha; is_poincare_line_clmat Ha;\n        intersects_x_axis_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec unit_circle_cmat\n                          (calc_x_axis_intersection_cmat_cvec H)", "have \"(sgn (Re B))\\<^sup>2 = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (sgn (Re B))\\<^sup>2 = 1", "using \\<open>Re B \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  Re B \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (sgn (Re B))\\<^sup>2 = 1", "by (simp add: sgn_if)"], ["proof (state)\nthis:\n  (sgn (Re B))\\<^sup>2 = 1\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_cmat H; \\<not> circline_A0_cmat H;\n        is_poincare_line_cmat H; intersects_x_axis_cmat H;\n        \\<not> circline_A0_clmat Ha; is_poincare_line_clmat Ha;\n        intersects_x_axis_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec unit_circle_cmat\n                          (calc_x_axis_intersection_cmat_cvec H)", "hence \"(-Re B + sgn (Re B) * sqrt((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 < (Re A)\\<^sup>2\""], ["proof (prove)\nusing this:\n  (sgn (Re B))\\<^sup>2 = 1\n\ngoal (1 subgoal):\n 1. (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2\n    < (Re A)\\<^sup>2", "using \\<open>(Re B)\\<^sup>2 > (Re A)\\<^sup>2\\<close> 3"], ["proof (prove)\nusing this:\n  (sgn (Re B))\\<^sup>2 = 1\n  (Re A)\\<^sup>2 < (Re B)\\<^sup>2\n  (Re B)\\<^sup>2 -\n  2 * sgn (Re B) * Re B * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2) +\n  (Re B)\\<^sup>2 -\n  (Re A)\\<^sup>2\n  < (Re A)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2\n    < (Re A)\\<^sup>2", "by (simp add: power2_diff field_simps)"], ["proof (state)\nthis:\n  (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2\n  < (Re A)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_cmat H; \\<not> circline_A0_cmat H;\n        is_poincare_line_cmat H; intersects_x_axis_cmat H;\n        \\<not> circline_A0_clmat Ha; is_poincare_line_clmat Ha;\n        intersects_x_axis_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> in_ocircline_cmat_cvec unit_circle_cmat\n                          (calc_x_axis_intersection_cmat_cvec H)", "thus \"in_ocircline_cmat_cvec unit_circle_cmat (calc_x_axis_intersection_cmat_cvec H)\""], ["proof (prove)\nusing this:\n  (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2\n  < (Re A)\\<^sup>2\n\ngoal (1 subgoal):\n 1. in_ocircline_cmat_cvec unit_circle_cmat\n     (calc_x_axis_intersection_cmat_cvec H)", "using * \\<open>(Re B)\\<^sup>2 > (Re A)\\<^sup>2\\<close>"], ["proof (prove)\nusing this:\n  (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2\n  < (Re A)\\<^sup>2\n  H = (A, B, cnj B, A)\n  is_real A\n  (Re A)\\<^sup>2 < (Re B)\\<^sup>2\n\ngoal (1 subgoal):\n 1. in_ocircline_cmat_cvec unit_circle_cmat\n     (calc_x_axis_intersection_cmat_cvec H)", "by (auto simp add: vec_cnj_def power2_eq_square split: if_split_asm)"], ["proof (state)\nthis:\n  in_ocircline_cmat_cvec unit_circle_cmat\n   (calc_x_axis_intersection_cmat_cvec H)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  calc_x_axis_intersection H \\<in> unit_disc\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma calc_x_axis_intersection:\n  assumes \"is_poincare_line H\" and \"intersects_x_axis H\"\n  shows \"calc_x_axis_intersection H \\<in> circline_set H \\<inter> circline_set x_axis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. calc_x_axis_intersection H\n    \\<in> circline_set H \\<inter> circline_set x_axis", "proof (cases \"is_line H\")"], ["proof (state)\ngoal (2 subgoals):\n 1. is_line H \\<Longrightarrow>\n    calc_x_axis_intersection H\n    \\<in> circline_set H \\<inter> circline_set x_axis\n 2. is_circle H \\<Longrightarrow>\n    calc_x_axis_intersection H\n    \\<in> circline_set H \\<inter> circline_set x_axis", "case True"], ["proof (state)\nthis:\n  is_line H\n\ngoal (2 subgoals):\n 1. is_line H \\<Longrightarrow>\n    calc_x_axis_intersection H\n    \\<in> circline_set H \\<inter> circline_set x_axis\n 2. is_circle H \\<Longrightarrow>\n    calc_x_axis_intersection H\n    \\<in> circline_set H \\<inter> circline_set x_axis", "thus ?thesis"], ["proof (prove)\nusing this:\n  is_line H\n\ngoal (1 subgoal):\n 1. calc_x_axis_intersection H\n    \\<in> circline_set H \\<inter> circline_set x_axis", "using assms"], ["proof (prove)\nusing this:\n  is_line H\n  is_poincare_line H\n  intersects_x_axis H\n\ngoal (1 subgoal):\n 1. calc_x_axis_intersection H\n    \\<in> circline_set H \\<inter> circline_set x_axis", "unfolding circline_set_def"], ["proof (prove)\nusing this:\n  is_line H\n  is_poincare_line H\n  intersects_x_axis H\n\ngoal (1 subgoal):\n 1. calc_x_axis_intersection H\n    \\<in> Collect (on_circline H) \\<inter> Collect (on_circline x_axis)", "by simp (transfer, transfer, auto simp add: vec_cnj_def)"], ["proof (state)\nthis:\n  calc_x_axis_intersection H\n  \\<in> circline_set H \\<inter> circline_set x_axis\n\ngoal (1 subgoal):\n 1. is_circle H \\<Longrightarrow>\n    calc_x_axis_intersection H\n    \\<in> circline_set H \\<inter> circline_set x_axis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. is_circle H \\<Longrightarrow>\n    calc_x_axis_intersection H\n    \\<in> circline_set H \\<inter> circline_set x_axis", "case False"], ["proof (state)\nthis:\n  is_circle H\n\ngoal (1 subgoal):\n 1. is_circle H \\<Longrightarrow>\n    calc_x_axis_intersection H\n    \\<in> circline_set H \\<inter> circline_set x_axis", "thus ?thesis"], ["proof (prove)\nusing this:\n  is_circle H\n\ngoal (1 subgoal):\n 1. calc_x_axis_intersection H\n    \\<in> circline_set H \\<inter> circline_set x_axis", "using assms"], ["proof (prove)\nusing this:\n  is_circle H\n  is_poincare_line H\n  intersects_x_axis H\n\ngoal (1 subgoal):\n 1. calc_x_axis_intersection H\n    \\<in> circline_set H \\<inter> circline_set x_axis", "unfolding circline_set_def"], ["proof (prove)\nusing this:\n  is_circle H\n  is_poincare_line H\n  intersects_x_axis H\n\ngoal (1 subgoal):\n 1. calc_x_axis_intersection H\n    \\<in> Collect (on_circline H) \\<inter> Collect (on_circline x_axis)", "proof (simp, transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_cmat H; \\<not> circline_A0_cmat H;\n        is_poincare_line_cmat H; intersects_x_axis_cmat H;\n        \\<not> circline_A0_clmat Ha; is_poincare_line_clmat Ha;\n        intersects_x_axis_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> on_circline_cmat_cvec H\n                          (calc_x_axis_intersection_cmat_cvec H) \\<and>\n                         on_circline_cmat_cvec x_axis_cmat\n                          (calc_x_axis_intersection_cmat_cvec H)", "fix H"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_cmat H; \\<not> circline_A0_cmat H;\n        is_poincare_line_cmat H; intersects_x_axis_cmat H;\n        \\<not> circline_A0_clmat Ha; is_poincare_line_clmat Ha;\n        intersects_x_axis_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> on_circline_cmat_cvec H\n                          (calc_x_axis_intersection_cmat_cvec H) \\<and>\n                         on_circline_cmat_cvec x_axis_cmat\n                          (calc_x_axis_intersection_cmat_cvec H)", "assume hh: \"hermitean H \\<and> H \\<noteq> mat_zero\""], ["proof (state)\nthis:\n  hermitean H \\<and> H \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_cmat H; \\<not> circline_A0_cmat H;\n        is_poincare_line_cmat H; intersects_x_axis_cmat H;\n        \\<not> circline_A0_clmat Ha; is_poincare_line_clmat Ha;\n        intersects_x_axis_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> on_circline_cmat_cvec H\n                          (calc_x_axis_intersection_cmat_cvec H) \\<and>\n                         on_circline_cmat_cvec x_axis_cmat\n                          (calc_x_axis_intersection_cmat_cvec H)", "then"], ["proof (chain)\npicking this:\n  hermitean H \\<and> H \\<noteq> mat_zero", "obtain A B D where *: \"H = (A, B, cnj B, D)\" \"is_real A\" \"is_real D\""], ["proof (prove)\nusing this:\n  hermitean H \\<and> H \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. (\\<And>A B D.\n        \\<lbrakk>H = (A, B, cnj B, D); is_real A; is_real D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using hermitean_elems"], ["proof (prove)\nusing this:\n  hermitean H \\<and> H \\<noteq> mat_zero\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> is_real ?A\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> is_real ?D\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> ?B = cnj ?C\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> cnj ?B = ?C\n\ngoal (1 subgoal):\n 1. (\\<And>A B D.\n        \\<lbrakk>H = (A, B, cnj B, D); is_real A; is_real D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases H) blast"], ["proof (state)\nthis:\n  H = (A, B, cnj B, D)\n  is_real A\n  is_real D\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_cmat H; \\<not> circline_A0_cmat H;\n        is_poincare_line_cmat H; intersects_x_axis_cmat H;\n        \\<not> circline_A0_clmat Ha; is_poincare_line_clmat Ha;\n        intersects_x_axis_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> on_circline_cmat_cvec H\n                          (calc_x_axis_intersection_cmat_cvec H) \\<and>\n                         on_circline_cmat_cvec x_axis_cmat\n                          (calc_x_axis_intersection_cmat_cvec H)", "assume \"is_poincare_line_cmat H\""], ["proof (state)\nthis:\n  is_poincare_line_cmat H\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_cmat H; \\<not> circline_A0_cmat H;\n        is_poincare_line_cmat H; intersects_x_axis_cmat H;\n        \\<not> circline_A0_clmat Ha; is_poincare_line_clmat Ha;\n        intersects_x_axis_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> on_circline_cmat_cvec H\n                          (calc_x_axis_intersection_cmat_cvec H) \\<and>\n                         on_circline_cmat_cvec x_axis_cmat\n                          (calc_x_axis_intersection_cmat_cvec H)", "hence *: \"H = (A, B, cnj B, A)\" \"is_real A\""], ["proof (prove)\nusing this:\n  is_poincare_line_cmat H\n\ngoal (1 subgoal):\n 1. H = (A, B, cnj B, A) &&& is_real A", "using *"], ["proof (prove)\nusing this:\n  is_poincare_line_cmat H\n  H = (A, B, cnj B, D)\n  is_real A\n  is_real D\n\ngoal (1 subgoal):\n 1. H = (A, B, cnj B, A) &&& is_real A", "by auto"], ["proof (state)\nthis:\n  H = (A, B, cnj B, A)\n  is_real A\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_cmat H; \\<not> circline_A0_cmat H;\n        is_poincare_line_cmat H; intersects_x_axis_cmat H;\n        \\<not> circline_A0_clmat Ha; is_poincare_line_clmat Ha;\n        intersects_x_axis_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> on_circline_cmat_cvec H\n                          (calc_x_axis_intersection_cmat_cvec H) \\<and>\n                         on_circline_cmat_cvec x_axis_cmat\n                          (calc_x_axis_intersection_cmat_cvec H)", "assume \"\\<not> circline_A0_cmat H\""], ["proof (state)\nthis:\n  \\<not> circline_A0_cmat H\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_cmat H; \\<not> circline_A0_cmat H;\n        is_poincare_line_cmat H; intersects_x_axis_cmat H;\n        \\<not> circline_A0_clmat Ha; is_poincare_line_clmat Ha;\n        intersects_x_axis_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> on_circline_cmat_cvec H\n                          (calc_x_axis_intersection_cmat_cvec H) \\<and>\n                         on_circline_cmat_cvec x_axis_cmat\n                          (calc_x_axis_intersection_cmat_cvec H)", "hence \"A \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<not> circline_A0_cmat H\n\ngoal (1 subgoal):\n 1. A \\<noteq> 0", "using *"], ["proof (prove)\nusing this:\n  \\<not> circline_A0_cmat H\n  H = (A, B, cnj B, A)\n  is_real A\n\ngoal (1 subgoal):\n 1. A \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_cmat H; \\<not> circline_A0_cmat H;\n        is_poincare_line_cmat H; intersects_x_axis_cmat H;\n        \\<not> circline_A0_clmat Ha; is_poincare_line_clmat Ha;\n        intersects_x_axis_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> on_circline_cmat_cvec H\n                          (calc_x_axis_intersection_cmat_cvec H) \\<and>\n                         on_circline_cmat_cvec x_axis_cmat\n                          (calc_x_axis_intersection_cmat_cvec H)", "assume \"intersects_x_axis_cmat H\""], ["proof (state)\nthis:\n  intersects_x_axis_cmat H\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_cmat H; \\<not> circline_A0_cmat H;\n        is_poincare_line_cmat H; intersects_x_axis_cmat H;\n        \\<not> circline_A0_clmat Ha; is_poincare_line_clmat Ha;\n        intersects_x_axis_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> on_circline_cmat_cvec H\n                          (calc_x_axis_intersection_cmat_cvec H) \\<and>\n                         on_circline_cmat_cvec x_axis_cmat\n                          (calc_x_axis_intersection_cmat_cvec H)", "hence \"(Re B)\\<^sup>2 > (Re A)\\<^sup>2\""], ["proof (prove)\nusing this:\n  intersects_x_axis_cmat H\n\ngoal (1 subgoal):\n 1. (Re A)\\<^sup>2 < (Re B)\\<^sup>2", "using * \\<open>A \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  intersects_x_axis_cmat H\n  H = (A, B, cnj B, A)\n  is_real A\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (Re A)\\<^sup>2 < (Re B)\\<^sup>2", "by (auto simp add: power2_eq_square complex.expand)"], ["proof (state)\nthis:\n  (Re A)\\<^sup>2 < (Re B)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_cmat H; \\<not> circline_A0_cmat H;\n        is_poincare_line_cmat H; intersects_x_axis_cmat H;\n        \\<not> circline_A0_clmat Ha; is_poincare_line_clmat Ha;\n        intersects_x_axis_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> on_circline_cmat_cvec H\n                          (calc_x_axis_intersection_cmat_cvec H) \\<and>\n                         on_circline_cmat_cvec x_axis_cmat\n                          (calc_x_axis_intersection_cmat_cvec H)", "hence \"Re B \\<noteq> 0\""], ["proof (prove)\nusing this:\n  (Re A)\\<^sup>2 < (Re B)\\<^sup>2\n\ngoal (1 subgoal):\n 1. Re B \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  Re B \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<not> circline_A0_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_cmat H; \\<not> circline_A0_cmat H;\n        is_poincare_line_cmat H; intersects_x_axis_cmat H;\n        \\<not> circline_A0_clmat Ha; is_poincare_line_clmat Ha;\n        intersects_x_axis_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> on_circline_cmat_cvec H\n                          (calc_x_axis_intersection_cmat_cvec H) \\<and>\n                         on_circline_cmat_cvec x_axis_cmat\n                          (calc_x_axis_intersection_cmat_cvec H)", "show \"on_circline_cmat_cvec H (calc_x_axis_intersection_cmat_cvec H) \\<and>\n        on_circline_cmat_cvec x_axis_cmat (calc_x_axis_intersection_cmat_cvec H)\" (is \"?P1 \\<and> ?P2\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. on_circline_cmat_cvec H (calc_x_axis_intersection_cmat_cvec H) \\<and>\n    on_circline_cmat_cvec x_axis_cmat (calc_x_axis_intersection_cmat_cvec H)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. on_circline_cmat_cvec H (calc_x_axis_intersection_cmat_cvec H)\n 2. on_circline_cmat_cvec x_axis_cmat (calc_x_axis_intersection_cmat_cvec H)", "show \"on_circline_cmat_cvec H (calc_x_axis_intersection_cmat_cvec H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. on_circline_cmat_cvec H (calc_x_axis_intersection_cmat_cvec H)", "proof (cases \"circline_A0_cmat H\")"], ["proof (state)\ngoal (2 subgoals):\n 1. circline_A0_cmat H \\<Longrightarrow>\n    on_circline_cmat_cvec H (calc_x_axis_intersection_cmat_cvec H)\n 2. \\<not> circline_A0_cmat H \\<Longrightarrow>\n    on_circline_cmat_cvec H (calc_x_axis_intersection_cmat_cvec H)", "case True"], ["proof (state)\nthis:\n  circline_A0_cmat H\n\ngoal (2 subgoals):\n 1. circline_A0_cmat H \\<Longrightarrow>\n    on_circline_cmat_cvec H (calc_x_axis_intersection_cmat_cvec H)\n 2. \\<not> circline_A0_cmat H \\<Longrightarrow>\n    on_circline_cmat_cvec H (calc_x_axis_intersection_cmat_cvec H)", "thus ?thesis"], ["proof (prove)\nusing this:\n  circline_A0_cmat H\n\ngoal (1 subgoal):\n 1. on_circline_cmat_cvec H (calc_x_axis_intersection_cmat_cvec H)", "using * \\<open>is_poincare_line_cmat H\\<close> \\<open>intersects_x_axis_cmat H\\<close>"], ["proof (prove)\nusing this:\n  circline_A0_cmat H\n  H = (A, B, cnj B, A)\n  is_real A\n  is_poincare_line_cmat H\n  intersects_x_axis_cmat H\n\ngoal (1 subgoal):\n 1. on_circline_cmat_cvec H (calc_x_axis_intersection_cmat_cvec H)", "by (simp add: vec_cnj_def)"], ["proof (state)\nthis:\n  on_circline_cmat_cvec H (calc_x_axis_intersection_cmat_cvec H)\n\ngoal (1 subgoal):\n 1. \\<not> circline_A0_cmat H \\<Longrightarrow>\n    on_circline_cmat_cvec H (calc_x_axis_intersection_cmat_cvec H)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> circline_A0_cmat H \\<Longrightarrow>\n    on_circline_cmat_cvec H (calc_x_axis_intersection_cmat_cvec H)", "case False"], ["proof (state)\nthis:\n  \\<not> circline_A0_cmat H\n\ngoal (1 subgoal):\n 1. \\<not> circline_A0_cmat H \\<Longrightarrow>\n    on_circline_cmat_cvec H (calc_x_axis_intersection_cmat_cvec H)", "let ?x = \"calc_x_axis_intersection_cvec A B\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> circline_A0_cmat H \\<Longrightarrow>\n    on_circline_cmat_cvec H (calc_x_axis_intersection_cmat_cvec H)", "let ?nom = \"fst ?x\" and ?den = \"snd ?x\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> circline_A0_cmat H \\<Longrightarrow>\n    on_circline_cmat_cvec H (calc_x_axis_intersection_cmat_cvec H)", "have x: \"?x = (?nom, ?den)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. calc_x_axis_intersection_cvec A B =\n    (fst (calc_x_axis_intersection_cvec A B),\n     snd (calc_x_axis_intersection_cvec A B))", "by simp"], ["proof (state)\nthis:\n  calc_x_axis_intersection_cvec A B =\n  (fst (calc_x_axis_intersection_cvec A B),\n   snd (calc_x_axis_intersection_cvec A B))\n\ngoal (1 subgoal):\n 1. \\<not> circline_A0_cmat H \\<Longrightarrow>\n    on_circline_cmat_cvec H (calc_x_axis_intersection_cmat_cvec H)", "hence \"on_circline_cmat_cvec H (calc_x_axis_intersection_cvec A B)\""], ["proof (prove)\nusing this:\n  calc_x_axis_intersection_cvec A B =\n  (fst (calc_x_axis_intersection_cvec A B),\n   snd (calc_x_axis_intersection_cvec A B))\n\ngoal (1 subgoal):\n 1. on_circline_cmat_cvec H (calc_x_axis_intersection_cvec A B)", "proof (subst *, subst x, subst on_circline_cmat_cvec_circline_equation)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>calc_x_axis_intersection_cvec A B =\n             (fst (calc_x_axis_intersection_cvec A B),\n              snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B))\\<rbrakk>\n    \\<Longrightarrow> circline_equation A B (cnj B) A\n                       (fst (calc_x_axis_intersection_cvec A B))\n                       (snd (calc_x_axis_intersection_cvec A B))", "have \"(sgn(Re B))\\<^sup>2 = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (sgn (Re B))\\<^sup>2 = 1", "using \\<open>Re B \\<noteq> 0\\<close> sgn_pos zero_less_power2"], ["proof (prove)\nusing this:\n  Re B \\<noteq> 0\n  (0::?'a) < ?a \\<Longrightarrow> sgn ?a = (1::?'a)\n  ((0::?'a) < ?a\\<^sup>2) = (?a \\<noteq> (0::?'a))\n\ngoal (1 subgoal):\n 1. (sgn (Re B))\\<^sup>2 = 1", "by fastforce"], ["proof (state)\nthis:\n  (sgn (Re B))\\<^sup>2 = 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>calc_x_axis_intersection_cvec A B =\n             (fst (calc_x_axis_intersection_cvec A B),\n              snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B))\\<rbrakk>\n    \\<Longrightarrow> circline_equation A B (cnj B) A\n                       (fst (calc_x_axis_intersection_cvec A B))\n                       (snd (calc_x_axis_intersection_cvec A B))", "have \"(sqrt((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 = (Re B)\\<^sup>2 - (Re A)\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 =\n    (Re B)\\<^sup>2 - (Re A)\\<^sup>2", "using \\<open>(Re B)\\<^sup>2 > (Re A)\\<^sup>2\\<close>"], ["proof (prove)\nusing this:\n  (Re A)\\<^sup>2 < (Re B)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 =\n    (Re B)\\<^sup>2 - (Re A)\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  (sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 =\n  (Re B)\\<^sup>2 - (Re A)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>calc_x_axis_intersection_cvec A B =\n             (fst (calc_x_axis_intersection_cvec A B),\n              snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B))\\<rbrakk>\n    \\<Longrightarrow> circline_equation A B (cnj B) A\n                       (fst (calc_x_axis_intersection_cvec A B))\n                       (snd (calc_x_axis_intersection_cvec A B))", "have \"(-(Re B) + sgn(Re B)*sqrt((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 = \n                (-(Re B))\\<^sup>2 + (sgn(Re B)*sqrt((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 - 2*(Re B)*sgn(Re B)*sqrt((Re B)\\<^sup>2 - (Re A)\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 =\n    (- Re B)\\<^sup>2 +\n    (sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 -\n    2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)", "by (simp add: power2_diff)"], ["proof (state)\nthis:\n  (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 =\n  (- Re B)\\<^sup>2 +\n  (sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 -\n  2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>calc_x_axis_intersection_cvec A B =\n             (fst (calc_x_axis_intersection_cvec A B),\n              snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B))\\<rbrakk>\n    \\<Longrightarrow> circline_equation A B (cnj B) A\n                       (fst (calc_x_axis_intersection_cvec A B))\n                       (snd (calc_x_axis_intersection_cvec A B))", "also"], ["proof (state)\nthis:\n  (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 =\n  (- Re B)\\<^sup>2 +\n  (sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 -\n  2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>calc_x_axis_intersection_cvec A B =\n             (fst (calc_x_axis_intersection_cvec A B),\n              snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B))\\<rbrakk>\n    \\<Longrightarrow> circline_equation A B (cnj B) A\n                       (fst (calc_x_axis_intersection_cvec A B))\n                       (snd (calc_x_axis_intersection_cvec A B))", "have \"... = (Re B)*(Re B) + (sgn(Re B)*sqrt((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 - 2*(Re B)*sgn(Re B)*sqrt((Re B)\\<^sup>2 - (Re A)\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (- Re B)\\<^sup>2 +\n    (sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 -\n    2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2) =\n    Re B * Re B +\n    (sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 -\n    2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  (- Re B)\\<^sup>2 +\n  (sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 -\n  2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2) =\n  Re B * Re B +\n  (sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 -\n  2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>calc_x_axis_intersection_cvec A B =\n             (fst (calc_x_axis_intersection_cvec A B),\n              snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B))\\<rbrakk>\n    \\<Longrightarrow> circline_equation A B (cnj B) A\n                       (fst (calc_x_axis_intersection_cvec A B))\n                       (snd (calc_x_axis_intersection_cvec A B))", "also"], ["proof (state)\nthis:\n  (- Re B)\\<^sup>2 +\n  (sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 -\n  2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2) =\n  Re B * Re B +\n  (sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 -\n  2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>calc_x_axis_intersection_cvec A B =\n             (fst (calc_x_axis_intersection_cvec A B),\n              snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B))\\<rbrakk>\n    \\<Longrightarrow> circline_equation A B (cnj B) A\n                       (fst (calc_x_axis_intersection_cvec A B))\n                       (snd (calc_x_axis_intersection_cvec A B))", "have \"... = (Re B)*(Re B) + (sgn(Re B))\\<^sup>2*(sqrt((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 - 2*(Re B)*sgn(Re B)*sqrt((Re B)\\<^sup>2 - (Re A)\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re B * Re B +\n    (sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 -\n    2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2) =\n    Re B * Re B +\n    (sgn (Re B))\\<^sup>2 *\n    (sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 -\n    2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)", "by (simp add: power_mult_distrib)"], ["proof (state)\nthis:\n  Re B * Re B +\n  (sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 -\n  2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2) =\n  Re B * Re B +\n  (sgn (Re B))\\<^sup>2 * (sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 -\n  2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>calc_x_axis_intersection_cvec A B =\n             (fst (calc_x_axis_intersection_cvec A B),\n              snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B))\\<rbrakk>\n    \\<Longrightarrow> circline_equation A B (cnj B) A\n                       (fst (calc_x_axis_intersection_cvec A B))\n                       (snd (calc_x_axis_intersection_cvec A B))", "also"], ["proof (state)\nthis:\n  Re B * Re B +\n  (sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 -\n  2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2) =\n  Re B * Re B +\n  (sgn (Re B))\\<^sup>2 * (sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 -\n  2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>calc_x_axis_intersection_cvec A B =\n             (fst (calc_x_axis_intersection_cvec A B),\n              snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B))\\<rbrakk>\n    \\<Longrightarrow> circline_equation A B (cnj B) A\n                       (fst (calc_x_axis_intersection_cvec A B))\n                       (snd (calc_x_axis_intersection_cvec A B))", "have \"... = (Re B)*(Re B) + (Re B)\\<^sup>2 - (Re A)\\<^sup>2 - 2*(Re B)*sgn(Re B)*sqrt((Re B)\\<^sup>2 - (Re A)\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re B * Re B +\n    (sgn (Re B))\\<^sup>2 *\n    (sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 -\n    2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2) =\n    Re B * Re B + (Re B)\\<^sup>2 - (Re A)\\<^sup>2 -\n    2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)", "using \\<open>(sqrt((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 = (Re B)\\<^sup>2 - (Re A)\\<^sup>2\\<close> \\<open>(sgn(Re B))\\<^sup>2 = 1\\<close>"], ["proof (prove)\nusing this:\n  (sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 =\n  (Re B)\\<^sup>2 - (Re A)\\<^sup>2\n  (sgn (Re B))\\<^sup>2 = 1\n\ngoal (1 subgoal):\n 1. Re B * Re B +\n    (sgn (Re B))\\<^sup>2 *\n    (sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 -\n    2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2) =\n    Re B * Re B + (Re B)\\<^sup>2 - (Re A)\\<^sup>2 -\n    2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)", "by simp"], ["proof (state)\nthis:\n  Re B * Re B +\n  (sgn (Re B))\\<^sup>2 * (sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 -\n  2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2) =\n  Re B * Re B + (Re B)\\<^sup>2 - (Re A)\\<^sup>2 -\n  2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>calc_x_axis_intersection_cvec A B =\n             (fst (calc_x_axis_intersection_cvec A B),\n              snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B))\\<rbrakk>\n    \\<Longrightarrow> circline_equation A B (cnj B) A\n                       (fst (calc_x_axis_intersection_cvec A B))\n                       (snd (calc_x_axis_intersection_cvec A B))", "finally"], ["proof (chain)\npicking this:\n  (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 =\n  Re B * Re B + (Re B)\\<^sup>2 - (Re A)\\<^sup>2 -\n  2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)", "have \"(-(Re B) + sgn(Re B)*sqrt((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 =\n                        (Re B)*(Re B) + (Re B)\\<^sup>2 - (Re A)\\<^sup>2 - 2*(Re B)*sgn(Re B)*sqrt((Re B)\\<^sup>2 - (Re A)\\<^sup>2)\""], ["proof (prove)\nusing this:\n  (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 =\n  Re B * Re B + (Re B)\\<^sup>2 - (Re A)\\<^sup>2 -\n  2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 =\n    Re B * Re B + (Re B)\\<^sup>2 - (Re A)\\<^sup>2 -\n    2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)", "by simp"], ["proof (state)\nthis:\n  (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 =\n  Re B * Re B + (Re B)\\<^sup>2 - (Re A)\\<^sup>2 -\n  2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>calc_x_axis_intersection_cvec A B =\n             (fst (calc_x_axis_intersection_cvec A B),\n              snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B))\\<rbrakk>\n    \\<Longrightarrow> circline_equation A B (cnj B) A\n                       (fst (calc_x_axis_intersection_cvec A B))\n                       (snd (calc_x_axis_intersection_cvec A B))", "have \"is_real ?nom\" \"is_real ?den\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_real (fst (calc_x_axis_intersection_cvec A B)) &&&\n    is_real (snd (calc_x_axis_intersection_cvec A B))", "using \\<open>is_real A\\<close>"], ["proof (prove)\nusing this:\n  is_real A\n\ngoal (1 subgoal):\n 1. is_real (fst (calc_x_axis_intersection_cvec A B)) &&&\n    is_real (snd (calc_x_axis_intersection_cvec A B))", "by simp+"], ["proof (state)\nthis:\n  is_real (fst (calc_x_axis_intersection_cvec A B))\n  is_real (snd (calc_x_axis_intersection_cvec A B))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>calc_x_axis_intersection_cvec A B =\n             (fst (calc_x_axis_intersection_cvec A B),\n              snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B))\\<rbrakk>\n    \\<Longrightarrow> circline_equation A B (cnj B) A\n                       (fst (calc_x_axis_intersection_cvec A B))\n                       (snd (calc_x_axis_intersection_cvec A B))", "hence \"cnj (?nom) = ?nom\" \"cnj (?den) = ?den\""], ["proof (prove)\nusing this:\n  is_real (fst (calc_x_axis_intersection_cvec A B))\n  is_real (snd (calc_x_axis_intersection_cvec A B))\n\ngoal (1 subgoal):\n 1. cnj (fst (calc_x_axis_intersection_cvec A B)) =\n    fst (calc_x_axis_intersection_cvec A B) &&&\n    cnj (snd (calc_x_axis_intersection_cvec A B)) =\n    snd (calc_x_axis_intersection_cvec A B)", "by (simp add:eq_cnj_iff_real)+"], ["proof (state)\nthis:\n  cnj (fst (calc_x_axis_intersection_cvec A B)) =\n  fst (calc_x_axis_intersection_cvec A B)\n  cnj (snd (calc_x_axis_intersection_cvec A B)) =\n  snd (calc_x_axis_intersection_cvec A B)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>calc_x_axis_intersection_cvec A B =\n             (fst (calc_x_axis_intersection_cvec A B),\n              snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B))\\<rbrakk>\n    \\<Longrightarrow> circline_equation A B (cnj B) A\n                       (fst (calc_x_axis_intersection_cvec A B))\n                       (snd (calc_x_axis_intersection_cvec A B))", "hence \"A*?nom*(cnj (?nom)) + B*?den*(cnj (?nom)) + (cnj B)*(cnj (?den))*?nom + A*?den*(cnj (?den))\n                = A*?nom*?nom + B*?den*?nom + (cnj B)*?den*?nom + A*?den*?den\""], ["proof (prove)\nusing this:\n  cnj (fst (calc_x_axis_intersection_cvec A B)) =\n  fst (calc_x_axis_intersection_cvec A B)\n  cnj (snd (calc_x_axis_intersection_cvec A B)) =\n  snd (calc_x_axis_intersection_cvec A B)\n\ngoal (1 subgoal):\n 1. A * fst (calc_x_axis_intersection_cvec A B) *\n    cnj (fst (calc_x_axis_intersection_cvec A B)) +\n    B * snd (calc_x_axis_intersection_cvec A B) *\n    cnj (fst (calc_x_axis_intersection_cvec A B)) +\n    cnj B * cnj (snd (calc_x_axis_intersection_cvec A B)) *\n    fst (calc_x_axis_intersection_cvec A B) +\n    A * snd (calc_x_axis_intersection_cvec A B) *\n    cnj (snd (calc_x_axis_intersection_cvec A B)) =\n    A * fst (calc_x_axis_intersection_cvec A B) *\n    fst (calc_x_axis_intersection_cvec A B) +\n    B * snd (calc_x_axis_intersection_cvec A B) *\n    fst (calc_x_axis_intersection_cvec A B) +\n    cnj B * snd (calc_x_axis_intersection_cvec A B) *\n    fst (calc_x_axis_intersection_cvec A B) +\n    A * snd (calc_x_axis_intersection_cvec A B) *\n    snd (calc_x_axis_intersection_cvec A B)", "by auto"], ["proof (state)\nthis:\n  A * fst (calc_x_axis_intersection_cvec A B) *\n  cnj (fst (calc_x_axis_intersection_cvec A B)) +\n  B * snd (calc_x_axis_intersection_cvec A B) *\n  cnj (fst (calc_x_axis_intersection_cvec A B)) +\n  cnj B * cnj (snd (calc_x_axis_intersection_cvec A B)) *\n  fst (calc_x_axis_intersection_cvec A B) +\n  A * snd (calc_x_axis_intersection_cvec A B) *\n  cnj (snd (calc_x_axis_intersection_cvec A B)) =\n  A * fst (calc_x_axis_intersection_cvec A B) *\n  fst (calc_x_axis_intersection_cvec A B) +\n  B * snd (calc_x_axis_intersection_cvec A B) *\n  fst (calc_x_axis_intersection_cvec A B) +\n  cnj B * snd (calc_x_axis_intersection_cvec A B) *\n  fst (calc_x_axis_intersection_cvec A B) +\n  A * snd (calc_x_axis_intersection_cvec A B) *\n  snd (calc_x_axis_intersection_cvec A B)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>calc_x_axis_intersection_cvec A B =\n             (fst (calc_x_axis_intersection_cvec A B),\n              snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B))\\<rbrakk>\n    \\<Longrightarrow> circline_equation A B (cnj B) A\n                       (fst (calc_x_axis_intersection_cvec A B))\n                       (snd (calc_x_axis_intersection_cvec A B))", "also"], ["proof (state)\nthis:\n  A * fst (calc_x_axis_intersection_cvec A B) *\n  cnj (fst (calc_x_axis_intersection_cvec A B)) +\n  B * snd (calc_x_axis_intersection_cvec A B) *\n  cnj (fst (calc_x_axis_intersection_cvec A B)) +\n  cnj B * cnj (snd (calc_x_axis_intersection_cvec A B)) *\n  fst (calc_x_axis_intersection_cvec A B) +\n  A * snd (calc_x_axis_intersection_cvec A B) *\n  cnj (snd (calc_x_axis_intersection_cvec A B)) =\n  A * fst (calc_x_axis_intersection_cvec A B) *\n  fst (calc_x_axis_intersection_cvec A B) +\n  B * snd (calc_x_axis_intersection_cvec A B) *\n  fst (calc_x_axis_intersection_cvec A B) +\n  cnj B * snd (calc_x_axis_intersection_cvec A B) *\n  fst (calc_x_axis_intersection_cvec A B) +\n  A * snd (calc_x_axis_intersection_cvec A B) *\n  snd (calc_x_axis_intersection_cvec A B)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>calc_x_axis_intersection_cvec A B =\n             (fst (calc_x_axis_intersection_cvec A B),\n              snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B))\\<rbrakk>\n    \\<Longrightarrow> circline_equation A B (cnj B) A\n                       (fst (calc_x_axis_intersection_cvec A B))\n                       (snd (calc_x_axis_intersection_cvec A B))", "have \"... = A*?nom*?nom + (B + (cnj B))*?den*?nom + A*?den*?den\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A * fst (calc_x_axis_intersection_cvec A B) *\n    fst (calc_x_axis_intersection_cvec A B) +\n    B * snd (calc_x_axis_intersection_cvec A B) *\n    fst (calc_x_axis_intersection_cvec A B) +\n    cnj B * snd (calc_x_axis_intersection_cvec A B) *\n    fst (calc_x_axis_intersection_cvec A B) +\n    A * snd (calc_x_axis_intersection_cvec A B) *\n    snd (calc_x_axis_intersection_cvec A B) =\n    A * fst (calc_x_axis_intersection_cvec A B) *\n    fst (calc_x_axis_intersection_cvec A B) +\n    (B + cnj B) * snd (calc_x_axis_intersection_cvec A B) *\n    fst (calc_x_axis_intersection_cvec A B) +\n    A * snd (calc_x_axis_intersection_cvec A B) *\n    snd (calc_x_axis_intersection_cvec A B)", "by (simp add:field_simps)"], ["proof (state)\nthis:\n  A * fst (calc_x_axis_intersection_cvec A B) *\n  fst (calc_x_axis_intersection_cvec A B) +\n  B * snd (calc_x_axis_intersection_cvec A B) *\n  fst (calc_x_axis_intersection_cvec A B) +\n  cnj B * snd (calc_x_axis_intersection_cvec A B) *\n  fst (calc_x_axis_intersection_cvec A B) +\n  A * snd (calc_x_axis_intersection_cvec A B) *\n  snd (calc_x_axis_intersection_cvec A B) =\n  A * fst (calc_x_axis_intersection_cvec A B) *\n  fst (calc_x_axis_intersection_cvec A B) +\n  (B + cnj B) * snd (calc_x_axis_intersection_cvec A B) *\n  fst (calc_x_axis_intersection_cvec A B) +\n  A * snd (calc_x_axis_intersection_cvec A B) *\n  snd (calc_x_axis_intersection_cvec A B)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>calc_x_axis_intersection_cvec A B =\n             (fst (calc_x_axis_intersection_cvec A B),\n              snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B))\\<rbrakk>\n    \\<Longrightarrow> circline_equation A B (cnj B) A\n                       (fst (calc_x_axis_intersection_cvec A B))\n                       (snd (calc_x_axis_intersection_cvec A B))", "also"], ["proof (state)\nthis:\n  A * fst (calc_x_axis_intersection_cvec A B) *\n  fst (calc_x_axis_intersection_cvec A B) +\n  B * snd (calc_x_axis_intersection_cvec A B) *\n  fst (calc_x_axis_intersection_cvec A B) +\n  cnj B * snd (calc_x_axis_intersection_cvec A B) *\n  fst (calc_x_axis_intersection_cvec A B) +\n  A * snd (calc_x_axis_intersection_cvec A B) *\n  snd (calc_x_axis_intersection_cvec A B) =\n  A * fst (calc_x_axis_intersection_cvec A B) *\n  fst (calc_x_axis_intersection_cvec A B) +\n  (B + cnj B) * snd (calc_x_axis_intersection_cvec A B) *\n  fst (calc_x_axis_intersection_cvec A B) +\n  A * snd (calc_x_axis_intersection_cvec A B) *\n  snd (calc_x_axis_intersection_cvec A B)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>calc_x_axis_intersection_cvec A B =\n             (fst (calc_x_axis_intersection_cvec A B),\n              snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B))\\<rbrakk>\n    \\<Longrightarrow> circline_equation A B (cnj B) A\n                       (fst (calc_x_axis_intersection_cvec A B))\n                       (snd (calc_x_axis_intersection_cvec A B))", "have \"... = A*?nom*?nom + 2*(Re B)*?den*?nom + A*?den*?den\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A * fst (calc_x_axis_intersection_cvec A B) *\n    fst (calc_x_axis_intersection_cvec A B) +\n    (B + cnj B) * snd (calc_x_axis_intersection_cvec A B) *\n    fst (calc_x_axis_intersection_cvec A B) +\n    A * snd (calc_x_axis_intersection_cvec A B) *\n    snd (calc_x_axis_intersection_cvec A B) =\n    A * fst (calc_x_axis_intersection_cvec A B) *\n    fst (calc_x_axis_intersection_cvec A B) +\n    cor (2 * Re B) * snd (calc_x_axis_intersection_cvec A B) *\n    fst (calc_x_axis_intersection_cvec A B) +\n    A * snd (calc_x_axis_intersection_cvec A B) *\n    snd (calc_x_axis_intersection_cvec A B)", "by (simp add:complex_add_cnj)"], ["proof (state)\nthis:\n  A * fst (calc_x_axis_intersection_cvec A B) *\n  fst (calc_x_axis_intersection_cvec A B) +\n  (B + cnj B) * snd (calc_x_axis_intersection_cvec A B) *\n  fst (calc_x_axis_intersection_cvec A B) +\n  A * snd (calc_x_axis_intersection_cvec A B) *\n  snd (calc_x_axis_intersection_cvec A B) =\n  A * fst (calc_x_axis_intersection_cvec A B) *\n  fst (calc_x_axis_intersection_cvec A B) +\n  cor (2 * Re B) * snd (calc_x_axis_intersection_cvec A B) *\n  fst (calc_x_axis_intersection_cvec A B) +\n  A * snd (calc_x_axis_intersection_cvec A B) *\n  snd (calc_x_axis_intersection_cvec A B)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>calc_x_axis_intersection_cvec A B =\n             (fst (calc_x_axis_intersection_cvec A B),\n              snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B))\\<rbrakk>\n    \\<Longrightarrow> circline_equation A B (cnj B) A\n                       (fst (calc_x_axis_intersection_cvec A B))\n                       (snd (calc_x_axis_intersection_cvec A B))", "also"], ["proof (state)\nthis:\n  A * fst (calc_x_axis_intersection_cvec A B) *\n  fst (calc_x_axis_intersection_cvec A B) +\n  (B + cnj B) * snd (calc_x_axis_intersection_cvec A B) *\n  fst (calc_x_axis_intersection_cvec A B) +\n  A * snd (calc_x_axis_intersection_cvec A B) *\n  snd (calc_x_axis_intersection_cvec A B) =\n  A * fst (calc_x_axis_intersection_cvec A B) *\n  fst (calc_x_axis_intersection_cvec A B) +\n  cor (2 * Re B) * snd (calc_x_axis_intersection_cvec A B) *\n  fst (calc_x_axis_intersection_cvec A B) +\n  A * snd (calc_x_axis_intersection_cvec A B) *\n  snd (calc_x_axis_intersection_cvec A B)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>calc_x_axis_intersection_cvec A B =\n             (fst (calc_x_axis_intersection_cvec A B),\n              snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B))\\<rbrakk>\n    \\<Longrightarrow> circline_equation A B (cnj B) A\n                       (fst (calc_x_axis_intersection_cvec A B))\n                       (snd (calc_x_axis_intersection_cvec A B))", "have \"... = A*?nom\\<^sup>2 + 2*(Re B)*?den*?nom + A*?den*?den\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A * fst (calc_x_axis_intersection_cvec A B) *\n    fst (calc_x_axis_intersection_cvec A B) +\n    cor (2 * Re B) * snd (calc_x_axis_intersection_cvec A B) *\n    fst (calc_x_axis_intersection_cvec A B) +\n    A * snd (calc_x_axis_intersection_cvec A B) *\n    snd (calc_x_axis_intersection_cvec A B) =\n    A * (fst (calc_x_axis_intersection_cvec A B))\\<^sup>2 +\n    cor (2 * Re B) * snd (calc_x_axis_intersection_cvec A B) *\n    fst (calc_x_axis_intersection_cvec A B) +\n    A * snd (calc_x_axis_intersection_cvec A B) *\n    snd (calc_x_axis_intersection_cvec A B)", "by (simp add:power2_eq_square)"], ["proof (state)\nthis:\n  A * fst (calc_x_axis_intersection_cvec A B) *\n  fst (calc_x_axis_intersection_cvec A B) +\n  cor (2 * Re B) * snd (calc_x_axis_intersection_cvec A B) *\n  fst (calc_x_axis_intersection_cvec A B) +\n  A * snd (calc_x_axis_intersection_cvec A B) *\n  snd (calc_x_axis_intersection_cvec A B) =\n  A * (fst (calc_x_axis_intersection_cvec A B))\\<^sup>2 +\n  cor (2 * Re B) * snd (calc_x_axis_intersection_cvec A B) *\n  fst (calc_x_axis_intersection_cvec A B) +\n  A * snd (calc_x_axis_intersection_cvec A B) *\n  snd (calc_x_axis_intersection_cvec A B)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>calc_x_axis_intersection_cvec A B =\n             (fst (calc_x_axis_intersection_cvec A B),\n              snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B))\\<rbrakk>\n    \\<Longrightarrow> circline_equation A B (cnj B) A\n                       (fst (calc_x_axis_intersection_cvec A B))\n                       (snd (calc_x_axis_intersection_cvec A B))", "also"], ["proof (state)\nthis:\n  A * fst (calc_x_axis_intersection_cvec A B) *\n  fst (calc_x_axis_intersection_cvec A B) +\n  cor (2 * Re B) * snd (calc_x_axis_intersection_cvec A B) *\n  fst (calc_x_axis_intersection_cvec A B) +\n  A * snd (calc_x_axis_intersection_cvec A B) *\n  snd (calc_x_axis_intersection_cvec A B) =\n  A * (fst (calc_x_axis_intersection_cvec A B))\\<^sup>2 +\n  cor (2 * Re B) * snd (calc_x_axis_intersection_cvec A B) *\n  fst (calc_x_axis_intersection_cvec A B) +\n  A * snd (calc_x_axis_intersection_cvec A B) *\n  snd (calc_x_axis_intersection_cvec A B)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>calc_x_axis_intersection_cvec A B =\n             (fst (calc_x_axis_intersection_cvec A B),\n              snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B))\\<rbrakk>\n    \\<Longrightarrow> circline_equation A B (cnj B) A\n                       (fst (calc_x_axis_intersection_cvec A B))\n                       (snd (calc_x_axis_intersection_cvec A B))", "have \"... = A*(-(Re B) + sgn(Re B)*sqrt((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2\n                           + 2*(Re B)*A*(-(Re B) + sgn(Re B)*sqrt((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) + A*A*A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A * (fst (calc_x_axis_intersection_cvec A B))\\<^sup>2 +\n    cor (2 * Re B) * snd (calc_x_axis_intersection_cvec A B) *\n    fst (calc_x_axis_intersection_cvec A B) +\n    A * snd (calc_x_axis_intersection_cvec A B) *\n    snd (calc_x_axis_intersection_cvec A B) =\n    A *\n    cor ((- Re B +\n          sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2) +\n    cor (2 * Re B) * A *\n    cor (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) +\n    A * A * A", "unfolding calc_x_axis_intersection_cvec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. A *\n    (fst (case let discr = (Re B)\\<^sup>2 - (Re A)\\<^sup>2\n               in (- Re B + sgn (Re B) * sqrt discr, A) of\n          (x, xa) \\<Rightarrow> (cor x, xa)))\\<^sup>2 +\n    cor (2 * Re B) *\n    snd (case let discr = (Re B)\\<^sup>2 - (Re A)\\<^sup>2\n              in (- Re B + sgn (Re B) * sqrt discr, A) of\n         (x, xa) \\<Rightarrow> (cor x, xa)) *\n    fst (case let discr = (Re B)\\<^sup>2 - (Re A)\\<^sup>2\n              in (- Re B + sgn (Re B) * sqrt discr, A) of\n         (x, xa) \\<Rightarrow> (cor x, xa)) +\n    A *\n    snd (case let discr = (Re B)\\<^sup>2 - (Re A)\\<^sup>2\n              in (- Re B + sgn (Re B) * sqrt discr, A) of\n         (x, xa) \\<Rightarrow> (cor x, xa)) *\n    snd (case let discr = (Re B)\\<^sup>2 - (Re A)\\<^sup>2\n              in (- Re B + sgn (Re B) * sqrt discr, A) of\n         (x, xa) \\<Rightarrow> (cor x, xa)) =\n    A *\n    cor ((- Re B +\n          sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2) +\n    cor (2 * Re B) * A *\n    cor (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) +\n    A * A * A", "by auto"], ["proof (state)\nthis:\n  A * (fst (calc_x_axis_intersection_cvec A B))\\<^sup>2 +\n  cor (2 * Re B) * snd (calc_x_axis_intersection_cvec A B) *\n  fst (calc_x_axis_intersection_cvec A B) +\n  A * snd (calc_x_axis_intersection_cvec A B) *\n  snd (calc_x_axis_intersection_cvec A B) =\n  A *\n  cor ((- Re B +\n        sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2) +\n  cor (2 * Re B) * A *\n  cor (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) +\n  A * A * A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>calc_x_axis_intersection_cvec A B =\n             (fst (calc_x_axis_intersection_cvec A B),\n              snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B))\\<rbrakk>\n    \\<Longrightarrow> circline_equation A B (cnj B) A\n                       (fst (calc_x_axis_intersection_cvec A B))\n                       (snd (calc_x_axis_intersection_cvec A B))", "also"], ["proof (state)\nthis:\n  A * (fst (calc_x_axis_intersection_cvec A B))\\<^sup>2 +\n  cor (2 * Re B) * snd (calc_x_axis_intersection_cvec A B) *\n  fst (calc_x_axis_intersection_cvec A B) +\n  A * snd (calc_x_axis_intersection_cvec A B) *\n  snd (calc_x_axis_intersection_cvec A B) =\n  A *\n  cor ((- Re B +\n        sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2) +\n  cor (2 * Re B) * A *\n  cor (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) +\n  A * A * A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>calc_x_axis_intersection_cvec A B =\n             (fst (calc_x_axis_intersection_cvec A B),\n              snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B))\\<rbrakk>\n    \\<Longrightarrow> circline_equation A B (cnj B) A\n                       (fst (calc_x_axis_intersection_cvec A B))\n                       (snd (calc_x_axis_intersection_cvec A B))", "have \"... = A*((Re B)*(Re B) + (Re B)\\<^sup>2 - (Re A)\\<^sup>2 - 2*(Re B)*sgn(Re B)*sqrt((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) \n                     + 2*(Re B)*A*(-(Re B) + sgn(Re B)*sqrt((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) + A*A*A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A *\n    cor ((- Re B +\n          sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2) +\n    cor (2 * Re B) * A *\n    cor (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) +\n    A * A * A =\n    A *\n    cor (Re B * Re B + (Re B)\\<^sup>2 - (Re A)\\<^sup>2 -\n         2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) +\n    cor (2 * Re B) * A *\n    cor (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) +\n    A * A * A", "using \\<open>(-(Re B) + sgn(Re B)*sqrt((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 =\n                        (Re B)*(Re B) + (Re B)\\<^sup>2 - (Re A)\\<^sup>2 - 2*(Re B)*sgn(Re B)*sqrt((Re B)\\<^sup>2 - (Re A)\\<^sup>2)\\<close>"], ["proof (prove)\nusing this:\n  (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2 =\n  Re B * Re B + (Re B)\\<^sup>2 - (Re A)\\<^sup>2 -\n  2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. A *\n    cor ((- Re B +\n          sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2) +\n    cor (2 * Re B) * A *\n    cor (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) +\n    A * A * A =\n    A *\n    cor (Re B * Re B + (Re B)\\<^sup>2 - (Re A)\\<^sup>2 -\n         2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) +\n    cor (2 * Re B) * A *\n    cor (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) +\n    A * A * A", "by simp"], ["proof (state)\nthis:\n  A *\n  cor ((- Re B +\n        sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2) +\n  cor (2 * Re B) * A *\n  cor (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) +\n  A * A * A =\n  A *\n  cor (Re B * Re B + (Re B)\\<^sup>2 - (Re A)\\<^sup>2 -\n       2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) +\n  cor (2 * Re B) * A *\n  cor (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) +\n  A * A * A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>calc_x_axis_intersection_cvec A B =\n             (fst (calc_x_axis_intersection_cvec A B),\n              snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B))\\<rbrakk>\n    \\<Longrightarrow> circline_equation A B (cnj B) A\n                       (fst (calc_x_axis_intersection_cvec A B))\n                       (snd (calc_x_axis_intersection_cvec A B))", "also"], ["proof (state)\nthis:\n  A *\n  cor ((- Re B +\n        sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))\\<^sup>2) +\n  cor (2 * Re B) * A *\n  cor (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) +\n  A * A * A =\n  A *\n  cor (Re B * Re B + (Re B)\\<^sup>2 - (Re A)\\<^sup>2 -\n       2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) +\n  cor (2 * Re B) * A *\n  cor (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) +\n  A * A * A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>calc_x_axis_intersection_cvec A B =\n             (fst (calc_x_axis_intersection_cvec A B),\n              snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B))\\<rbrakk>\n    \\<Longrightarrow> circline_equation A B (cnj B) A\n                       (fst (calc_x_axis_intersection_cvec A B))\n                       (snd (calc_x_axis_intersection_cvec A B))", "have \"... = A*((Re B)*(Re B) + (Re B)\\<^sup>2 - A\\<^sup>2 - 2*(Re B)*sgn(Re B)*sqrt((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) \n                     + 2*(Re B)*A*(-(Re B) + sgn(Re B)*sqrt((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) + A*A*A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A *\n    cor (Re B * Re B + (Re B)\\<^sup>2 - (Re A)\\<^sup>2 -\n         2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) +\n    cor (2 * Re B) * A *\n    cor (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) +\n    A * A * A =\n    A *\n    (cor (Re B * Re B + (Re B)\\<^sup>2) - A\\<^sup>2 -\n     cor (2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))) +\n    cor (2 * Re B) * A *\n    cor (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) +\n    A * A * A", "using \\<open>is_real A\\<close>"], ["proof (prove)\nusing this:\n  is_real A\n\ngoal (1 subgoal):\n 1. A *\n    cor (Re B * Re B + (Re B)\\<^sup>2 - (Re A)\\<^sup>2 -\n         2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) +\n    cor (2 * Re B) * A *\n    cor (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) +\n    A * A * A =\n    A *\n    (cor (Re B * Re B + (Re B)\\<^sup>2) - A\\<^sup>2 -\n     cor (2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))) +\n    cor (2 * Re B) * A *\n    cor (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) +\n    A * A * A", "by simp"], ["proof (state)\nthis:\n  A *\n  cor (Re B * Re B + (Re B)\\<^sup>2 - (Re A)\\<^sup>2 -\n       2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) +\n  cor (2 * Re B) * A *\n  cor (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) +\n  A * A * A =\n  A *\n  (cor (Re B * Re B + (Re B)\\<^sup>2) - A\\<^sup>2 -\n   cor (2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))) +\n  cor (2 * Re B) * A *\n  cor (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) +\n  A * A * A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>calc_x_axis_intersection_cvec A B =\n             (fst (calc_x_axis_intersection_cvec A B),\n              snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B))\\<rbrakk>\n    \\<Longrightarrow> circline_equation A B (cnj B) A\n                       (fst (calc_x_axis_intersection_cvec A B))\n                       (snd (calc_x_axis_intersection_cvec A B))", "also"], ["proof (state)\nthis:\n  A *\n  cor (Re B * Re B + (Re B)\\<^sup>2 - (Re A)\\<^sup>2 -\n       2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) +\n  cor (2 * Re B) * A *\n  cor (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) +\n  A * A * A =\n  A *\n  (cor (Re B * Re B + (Re B)\\<^sup>2) - A\\<^sup>2 -\n   cor (2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))) +\n  cor (2 * Re B) * A *\n  cor (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) +\n  A * A * A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>calc_x_axis_intersection_cvec A B =\n             (fst (calc_x_axis_intersection_cvec A B),\n              snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B))\\<rbrakk>\n    \\<Longrightarrow> circline_equation A B (cnj B) A\n                       (fst (calc_x_axis_intersection_cvec A B))\n                       (snd (calc_x_axis_intersection_cvec A B))", "have \"... = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A *\n    (cor (Re B * Re B + (Re B)\\<^sup>2) - A\\<^sup>2 -\n     cor (2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))) +\n    cor (2 * Re B) * A *\n    cor (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) +\n    A * A * A =\n    0", "apply (simp add:field_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. A * (A * A) + A * (cor (Re B))\\<^sup>2 =\n    A * A\\<^sup>2 + A * (cor (Re B) * cor (Re B))", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  A *\n  (cor (Re B * Re B + (Re B)\\<^sup>2) - A\\<^sup>2 -\n   cor (2 * Re B * sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2))) +\n  cor (2 * Re B) * A *\n  cor (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) +\n  A * A * A =\n  0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>calc_x_axis_intersection_cvec A B =\n             (fst (calc_x_axis_intersection_cvec A B),\n              snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B))\\<rbrakk>\n    \\<Longrightarrow> circline_equation A B (cnj B) A\n                       (fst (calc_x_axis_intersection_cvec A B))\n                       (snd (calc_x_axis_intersection_cvec A B))", "finally"], ["proof (chain)\npicking this:\n  circline_equation A B (cnj B) A (fst (calc_x_axis_intersection_cvec A B))\n   (snd (calc_x_axis_intersection_cvec A B))", "have \"A*?nom*(cnj (?nom)) + B*?den*(cnj (?nom)) + (cnj B)*(cnj (?den))*?nom + A*?den*(cnj (?den)) = 0\""], ["proof (prove)\nusing this:\n  circline_equation A B (cnj B) A (fst (calc_x_axis_intersection_cvec A B))\n   (snd (calc_x_axis_intersection_cvec A B))\n\ngoal (1 subgoal):\n 1. circline_equation A B (cnj B) A\n     (fst (calc_x_axis_intersection_cvec A B))\n     (snd (calc_x_axis_intersection_cvec A B))", "by simp"], ["proof (state)\nthis:\n  circline_equation A B (cnj B) A (fst (calc_x_axis_intersection_cvec A B))\n   (snd (calc_x_axis_intersection_cvec A B))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>calc_x_axis_intersection_cvec A B =\n             (fst (calc_x_axis_intersection_cvec A B),\n              snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B));\n     calc_x_axis_intersection_cvec A B =\n     (fst (calc_x_axis_intersection_cvec A B),\n      snd (calc_x_axis_intersection_cvec A B))\\<rbrakk>\n    \\<Longrightarrow> circline_equation A B (cnj B) A\n                       (fst (calc_x_axis_intersection_cvec A B))\n                       (snd (calc_x_axis_intersection_cvec A B))", "thus \"circline_equation A B (cnj B) A ?nom ?den\""], ["proof (prove)\nusing this:\n  circline_equation A B (cnj B) A (fst (calc_x_axis_intersection_cvec A B))\n   (snd (calc_x_axis_intersection_cvec A B))\n\ngoal (1 subgoal):\n 1. circline_equation A B (cnj B) A\n     (fst (calc_x_axis_intersection_cvec A B))\n     (snd (calc_x_axis_intersection_cvec A B))", "by simp"], ["proof (state)\nthis:\n  circline_equation A B (cnj B) A (fst (calc_x_axis_intersection_cvec A B))\n   (snd (calc_x_axis_intersection_cvec A B))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  on_circline_cmat_cvec H (calc_x_axis_intersection_cvec A B)\n\ngoal (1 subgoal):\n 1. \\<not> circline_A0_cmat H \\<Longrightarrow>\n    on_circline_cmat_cvec H (calc_x_axis_intersection_cmat_cvec H)", "thus ?thesis"], ["proof (prove)\nusing this:\n  on_circline_cmat_cvec H (calc_x_axis_intersection_cvec A B)\n\ngoal (1 subgoal):\n 1. on_circline_cmat_cvec H (calc_x_axis_intersection_cmat_cvec H)", "using * \\<open>is_poincare_line_cmat H\\<close> \\<open>intersects_x_axis_cmat H\\<close>"], ["proof (prove)\nusing this:\n  on_circline_cmat_cvec H (calc_x_axis_intersection_cvec A B)\n  H = (A, B, cnj B, A)\n  is_real A\n  is_poincare_line_cmat H\n  intersects_x_axis_cmat H\n\ngoal (1 subgoal):\n 1. on_circline_cmat_cvec H (calc_x_axis_intersection_cmat_cvec H)", "by (simp add: vec_cnj_def)"], ["proof (state)\nthis:\n  on_circline_cmat_cvec H (calc_x_axis_intersection_cmat_cvec H)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  on_circline_cmat_cvec H (calc_x_axis_intersection_cmat_cvec H)\n\ngoal (1 subgoal):\n 1. on_circline_cmat_cvec x_axis_cmat (calc_x_axis_intersection_cmat_cvec H)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. on_circline_cmat_cvec x_axis_cmat (calc_x_axis_intersection_cmat_cvec H)", "show  \"on_circline_cmat_cvec x_axis_cmat (calc_x_axis_intersection_cmat_cvec H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. on_circline_cmat_cvec x_axis_cmat (calc_x_axis_intersection_cmat_cvec H)", "using * \\<open>is_poincare_line_cmat H\\<close> \\<open>intersects_x_axis_cmat H\\<close> \\<open>is_real A\\<close>"], ["proof (prove)\nusing this:\n  H = (A, B, cnj B, A)\n  is_real A\n  is_poincare_line_cmat H\n  intersects_x_axis_cmat H\n  is_real A\n\ngoal (1 subgoal):\n 1. on_circline_cmat_cvec x_axis_cmat (calc_x_axis_intersection_cmat_cvec H)", "using eq_cnj_iff_real[of A]"], ["proof (prove)\nusing this:\n  H = (A, B, cnj B, A)\n  is_real A\n  is_poincare_line_cmat H\n  intersects_x_axis_cmat H\n  is_real A\n  (cnj A = A) = is_real A\n\ngoal (1 subgoal):\n 1. on_circline_cmat_cvec x_axis_cmat (calc_x_axis_intersection_cmat_cvec H)", "by (simp add: vec_cnj_def)"], ["proof (state)\nthis:\n  on_circline_cmat_cvec x_axis_cmat (calc_x_axis_intersection_cmat_cvec H)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  on_circline_cmat_cvec H (calc_x_axis_intersection_cmat_cvec H) \\<and>\n  on_circline_cmat_cvec x_axis_cmat (calc_x_axis_intersection_cmat_cvec H)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  calc_x_axis_intersection H\n  \\<in> circline_set H \\<inter> circline_set x_axis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma unique_calc_x_axis_intersection:\n  assumes \"is_poincare_line H\" and \"H \\<noteq> x_axis\"\n  assumes \"x \\<in> unit_disc\" and \"x \\<in> circline_set H \\<inter> circline_set x_axis\"\n  shows  \"x = calc_x_axis_intersection H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = calc_x_axis_intersection H", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x = calc_x_axis_intersection H", "have *: \"intersects_x_axis H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. intersects_x_axis H", "using assms"], ["proof (prove)\nusing this:\n  is_poincare_line H\n  H \\<noteq> x_axis\n  x \\<in> unit_disc\n  x \\<in> circline_set H \\<inter> circline_set x_axis\n\ngoal (1 subgoal):\n 1. intersects_x_axis H", "using intersects_x_axis_iff[OF assms(1)]"], ["proof (prove)\nusing this:\n  is_poincare_line H\n  H \\<noteq> x_axis\n  x \\<in> unit_disc\n  x \\<in> circline_set H \\<inter> circline_set x_axis\n  (\\<exists>x\\<in>unit_disc.\n      x \\<in> circline_set H \\<inter> circline_set x_axis) =\n  intersects_x_axis H\n\ngoal (1 subgoal):\n 1. intersects_x_axis H", "by auto"], ["proof (state)\nthis:\n  intersects_x_axis H\n\ngoal (1 subgoal):\n 1. x = calc_x_axis_intersection H", "show \"x = calc_x_axis_intersection H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = calc_x_axis_intersection H", "using calc_x_axis_intersection[OF assms(1) *]"], ["proof (prove)\nusing this:\n  calc_x_axis_intersection H\n  \\<in> circline_set H \\<inter> circline_set x_axis\n\ngoal (1 subgoal):\n 1. x = calc_x_axis_intersection H", "using calc_x_axis_intersection_in_unit_disc[OF assms(1) *]"], ["proof (prove)\nusing this:\n  calc_x_axis_intersection H\n  \\<in> circline_set H \\<inter> circline_set x_axis\n  calc_x_axis_intersection H \\<in> unit_disc\n\ngoal (1 subgoal):\n 1. x = calc_x_axis_intersection H", "using assms"], ["proof (prove)\nusing this:\n  calc_x_axis_intersection H\n  \\<in> circline_set H \\<inter> circline_set x_axis\n  calc_x_axis_intersection H \\<in> unit_disc\n  is_poincare_line H\n  H \\<noteq> x_axis\n  x \\<in> unit_disc\n  x \\<in> circline_set H \\<inter> circline_set x_axis\n\ngoal (1 subgoal):\n 1. x = calc_x_axis_intersection H", "using unique_is_poincare_line[of x \"calc_x_axis_intersection H\" H x_axis]"], ["proof (prove)\nusing this:\n  calc_x_axis_intersection H\n  \\<in> circline_set H \\<inter> circline_set x_axis\n  calc_x_axis_intersection H \\<in> unit_disc\n  is_poincare_line H\n  H \\<noteq> x_axis\n  x \\<in> unit_disc\n  x \\<in> circline_set H \\<inter> circline_set x_axis\n  \\<lbrakk>x \\<in> unit_disc; calc_x_axis_intersection H \\<in> unit_disc;\n   x \\<noteq> calc_x_axis_intersection H; is_poincare_line H;\n   is_poincare_line x_axis;\n   {x, calc_x_axis_intersection H}\n   \\<subseteq> circline_set H \\<inter> circline_set x_axis\\<rbrakk>\n  \\<Longrightarrow> H = x_axis\n\ngoal (1 subgoal):\n 1. x = calc_x_axis_intersection H", "by auto"], ["proof (state)\nthis:\n  x = calc_x_axis_intersection H\n\ngoal:\nNo subgoals!", "qed"], ["", "(* ------------------------------------------------------------------ *)"], ["", "subsection\\<open>Check if an h-line intersects the positive part of the x-axis\\<close>"], ["", "(* ------------------------------------------------------------------ *)"], ["", "definition intersects_x_axis_positive_cmat :: \"complex_mat \\<Rightarrow> bool\" where\n  [simp]: \"intersects_x_axis_positive_cmat H = (let (A, B, C, D) = H in Re A \\<noteq> 0 \\<and> Re B / Re A < -1)\""], ["", "lift_definition intersects_x_axis_positive_clmat :: \"circline_mat \\<Rightarrow> bool\" is intersects_x_axis_positive_cmat"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lift_definition intersects_x_axis_positive :: \"circline \\<Rightarrow> bool\" is intersects_x_axis_positive_clmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       circline_eq_clmat circline_mat1 circline_mat2 \\<Longrightarrow>\n       intersects_x_axis_positive_clmat circline_mat1 =\n       intersects_x_axis_positive_clmat circline_mat2", "proof (transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> intersects_x_axis_positive_cmat circline_mat1 =\n                         intersects_x_axis_positive_cmat circline_mat2", "fix H1 H2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> intersects_x_axis_positive_cmat circline_mat1 =\n                         intersects_x_axis_positive_cmat circline_mat2", "assume hh: \"hermitean H1 \\<and> H1 \\<noteq> mat_zero\" and \"hermitean H2 \\<and> H2 \\<noteq> mat_zero\""], ["proof (state)\nthis:\n  hermitean H1 \\<and> H1 \\<noteq> mat_zero\n  hermitean H2 \\<and> H2 \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> intersects_x_axis_positive_cmat circline_mat1 =\n                         intersects_x_axis_positive_cmat circline_mat2", "obtain A1 B1 C1 D1 A2 B2 C2 D2 where *: \"H1 = (A1, B1, C1, D1)\" \"H2 = (A2, B2, C2, D2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A1 B1 C1 D1 A2 B2 C2 D2.\n        \\<lbrakk>H1 = (A1, B1, C1, D1); H2 = (A2, B2, C2, D2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases H1, cases H2, auto)"], ["proof (state)\nthis:\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> intersects_x_axis_positive_cmat circline_mat1 =\n                         intersects_x_axis_positive_cmat circline_mat2", "assume \"circline_eq_cmat H1 H2\""], ["proof (state)\nthis:\n  circline_eq_cmat H1 H2\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> intersects_x_axis_positive_cmat circline_mat1 =\n                         intersects_x_axis_positive_cmat circline_mat2", "then"], ["proof (chain)\npicking this:\n  circline_eq_cmat H1 H2", "obtain k where \"k \\<noteq> 0 \\<and> H2 = cor k *\\<^sub>s\\<^sub>m H1\""], ["proof (prove)\nusing this:\n  circline_eq_cmat H1 H2\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        k \\<noteq> 0 \\<and>\n        H2 = cor k *\\<^sub>s\\<^sub>m H1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  k \\<noteq> 0 \\<and> H2 = cor k *\\<^sub>s\\<^sub>m H1\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> intersects_x_axis_positive_cmat circline_mat1 =\n                         intersects_x_axis_positive_cmat circline_mat2", "thus \"intersects_x_axis_positive_cmat H1 = intersects_x_axis_positive_cmat H2\""], ["proof (prove)\nusing this:\n  k \\<noteq> 0 \\<and> H2 = cor k *\\<^sub>s\\<^sub>m H1\n\ngoal (1 subgoal):\n 1. intersects_x_axis_positive_cmat H1 = intersects_x_axis_positive_cmat H2", "using *"], ["proof (prove)\nusing this:\n  k \\<noteq> 0 \\<and> H2 = cor k *\\<^sub>s\\<^sub>m H1\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n\ngoal (1 subgoal):\n 1. intersects_x_axis_positive_cmat H1 = intersects_x_axis_positive_cmat H2", "by simp"], ["proof (state)\nthis:\n  intersects_x_axis_positive_cmat H1 = intersects_x_axis_positive_cmat H2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma intersects_x_axis_positive_mk_circline:\n  assumes \"is_real A\" and \"A \\<noteq> 0 \\<or> B \\<noteq> 0\"\n  shows \"intersects_x_axis_positive (mk_circline A B (cnj B) A) \\<longleftrightarrow> Re B / Re A < -1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. intersects_x_axis_positive (mk_circline A B (cnj B) A) =\n    (Re B / Re A < - 1)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. intersects_x_axis_positive (mk_circline A B (cnj B) A) =\n    (Re B / Re A < - 1)", "let ?H = \"(A, B, (cnj B),  A)\""], ["proof (state)\ngoal (1 subgoal):\n 1. intersects_x_axis_positive (mk_circline A B (cnj B) A) =\n    (Re B / Re A < - 1)", "have \"hermitean ?H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hermitean (A, B, cnj B, A)", "using \\<open>is_real A\\<close>"], ["proof (prove)\nusing this:\n  is_real A\n\ngoal (1 subgoal):\n 1. hermitean (A, B, cnj B, A)", "unfolding hermitean_def mat_adj_def mat_cnj_def"], ["proof (prove)\nusing this:\n  is_real A\n\ngoal (1 subgoal):\n 1. mat_map cnj (mat_transpose (A, B, cnj B, A)) = (A, B, cnj B, A)", "using eq_cnj_iff_real"], ["proof (prove)\nusing this:\n  is_real A\n  (cnj ?z = ?z) = is_real ?z\n\ngoal (1 subgoal):\n 1. mat_map cnj (mat_transpose (A, B, cnj B, A)) = (A, B, cnj B, A)", "by auto"], ["proof (state)\nthis:\n  hermitean (A, B, cnj B, A)\n\ngoal (1 subgoal):\n 1. intersects_x_axis_positive (mk_circline A B (cnj B) A) =\n    (Re B / Re A < - 1)", "moreover"], ["proof (state)\nthis:\n  hermitean (A, B, cnj B, A)\n\ngoal (1 subgoal):\n 1. intersects_x_axis_positive (mk_circline A B (cnj B) A) =\n    (Re B / Re A < - 1)", "have \"?H \\<noteq> mat_zero\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A, B, cnj B, A) \\<noteq> mat_zero", "using assms"], ["proof (prove)\nusing this:\n  is_real A\n  A \\<noteq> 0 \\<or> B \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (A, B, cnj B, A) \\<noteq> mat_zero", "by auto"], ["proof (state)\nthis:\n  (A, B, cnj B, A) \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. intersects_x_axis_positive (mk_circline A B (cnj B) A) =\n    (Re B / Re A < - 1)", "ultimately"], ["proof (chain)\npicking this:\n  hermitean (A, B, cnj B, A)\n  (A, B, cnj B, A) \\<noteq> mat_zero", "show ?thesis"], ["proof (prove)\nusing this:\n  hermitean (A, B, cnj B, A)\n  (A, B, cnj B, A) \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. intersects_x_axis_positive (mk_circline A B (cnj B) A) =\n    (Re B / Re A < - 1)", "by (transfer, transfer, auto simp add: Let_def)"], ["proof (state)\nthis:\n  intersects_x_axis_positive (mk_circline A B (cnj B) A) =\n  (Re B / Re A < - 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma intersects_x_axis_positive_intersects_x_axis [simp]:\n  assumes \"intersects_x_axis_positive H\"\n  shows \"intersects_x_axis H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. intersects_x_axis H", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. intersects_x_axis H", "have \"\\<And> a aa. \\<lbrakk> Re a \\<noteq> 0; Re aa / Re a < - 1; \\<not> (Re a)\\<^sup>2 < (Re aa)\\<^sup>2 \\<rbrakk> \\<Longrightarrow> aa = 0 \\<and> a = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a aa.\n       \\<lbrakk>Re a \\<noteq> 0; Re aa / Re a < - 1;\n        \\<not> (Re a)\\<^sup>2 < (Re aa)\\<^sup>2\\<rbrakk>\n       \\<Longrightarrow> aa = 0 \\<and> a = 0", "by (smt less_divide_eq_1_pos one_less_power pos2 power2_minus power_divide zero_less_power2)"], ["proof (state)\nthis:\n  \\<lbrakk>Re ?a \\<noteq> 0; Re ?aa / Re ?a < - 1;\n   \\<not> (Re ?a)\\<^sup>2 < (Re ?aa)\\<^sup>2\\<rbrakk>\n  \\<Longrightarrow> ?aa = 0 \\<and> ?a = 0\n\ngoal (1 subgoal):\n 1. intersects_x_axis H", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>Re ?a \\<noteq> 0; Re ?aa / Re ?a < - 1;\n   \\<not> (Re ?a)\\<^sup>2 < (Re ?aa)\\<^sup>2\\<rbrakk>\n  \\<Longrightarrow> ?aa = 0 \\<and> ?a = 0\n\ngoal (1 subgoal):\n 1. intersects_x_axis H", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>Re ?a \\<noteq> 0; Re ?aa / Re ?a < - 1;\n   \\<not> (Re ?a)\\<^sup>2 < (Re ?aa)\\<^sup>2\\<rbrakk>\n  \\<Longrightarrow> ?aa = 0 \\<and> ?a = 0\n  intersects_x_axis_positive H\n\ngoal (1 subgoal):\n 1. intersects_x_axis H", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>\\<And>a aa.\n                   \\<lbrakk>Re a \\<noteq> 0; Re aa / Re a < - 1;\n                    \\<not> (Re a)\\<^sup>2 < (Re aa)\\<^sup>2\\<rbrakk>\n                   \\<Longrightarrow> aa = 0 \\<and> a = 0;\n        intersects_x_axis_positive_clmat H\\<rbrakk>\n       \\<Longrightarrow> intersects_x_axis_clmat H", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>H.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        \\<And>a aa.\n           \\<lbrakk>Re a \\<noteq> 0; Re aa / Re a < - 1;\n            \\<not> (Re a)\\<^sup>2 < (Re aa)\\<^sup>2\\<rbrakk>\n           \\<Longrightarrow> aa = 0 \\<and> a = 0;\n        intersects_x_axis_positive_cmat H\\<rbrakk>\n       \\<Longrightarrow> intersects_x_axis_cmat H", "apply (auto simp add: hermitean_def mat_adj_def mat_cnj_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  intersects_x_axis H\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma add_less_abs_positive_iff:\n  fixes a b :: real\n  assumes \"abs b < abs a\"\n  shows \"a + b > 0 \\<longleftrightarrow> a > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 < a + b) = (0 < a)", "using assms"], ["proof (prove)\nusing this:\n  \\<bar>b\\<bar> < \\<bar>a\\<bar>\n\ngoal (1 subgoal):\n 1. (0 < a + b) = (0 < a)", "by auto"], ["", "lemma calc_x_axis_intersection_positive_abs':\n  fixes A B :: real\n  assumes \"B\\<^sup>2 > A\\<^sup>2\" and \"A \\<noteq> 0\"\n  shows \"abs (sgn(B) * sqrt(B\\<^sup>2 - A\\<^sup>2) / A) < abs(-B/A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2) / A\\<bar>\n    < \\<bar>- B / A\\<bar>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<bar>sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2) / A\\<bar>\n    < \\<bar>- B / A\\<bar>", "from assms"], ["proof (chain)\npicking this:\n  A\\<^sup>2 < B\\<^sup>2\n  A \\<noteq> 0", "have \"B \\<noteq> 0\""], ["proof (prove)\nusing this:\n  A\\<^sup>2 < B\\<^sup>2\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. B \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  B \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<bar>sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2) / A\\<bar>\n    < \\<bar>- B / A\\<bar>", "have \"B\\<^sup>2 - A\\<^sup>2 < B\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B\\<^sup>2 - A\\<^sup>2 < B\\<^sup>2", "using \\<open>A \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. B\\<^sup>2 - A\\<^sup>2 < B\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  B\\<^sup>2 - A\\<^sup>2 < B\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<bar>sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2) / A\\<bar>\n    < \\<bar>- B / A\\<bar>", "hence \"sqrt (B\\<^sup>2 - A\\<^sup>2) < abs B\""], ["proof (prove)\nusing this:\n  B\\<^sup>2 - A\\<^sup>2 < B\\<^sup>2\n\ngoal (1 subgoal):\n 1. sqrt (B\\<^sup>2 - A\\<^sup>2) < \\<bar>B\\<bar>", "using real_sqrt_less_iff[of \"B\\<^sup>2 - A\\<^sup>2\" \"B\\<^sup>2\"]"], ["proof (prove)\nusing this:\n  B\\<^sup>2 - A\\<^sup>2 < B\\<^sup>2\n  (sqrt (B\\<^sup>2 - A\\<^sup>2) < sqrt (B\\<^sup>2)) =\n  (B\\<^sup>2 - A\\<^sup>2 < B\\<^sup>2)\n\ngoal (1 subgoal):\n 1. sqrt (B\\<^sup>2 - A\\<^sup>2) < \\<bar>B\\<bar>", "by simp"], ["proof (state)\nthis:\n  sqrt (B\\<^sup>2 - A\\<^sup>2) < \\<bar>B\\<bar>\n\ngoal (1 subgoal):\n 1. \\<bar>sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2) / A\\<bar>\n    < \\<bar>- B / A\\<bar>", "thus ?thesis"], ["proof (prove)\nusing this:\n  sqrt (B\\<^sup>2 - A\\<^sup>2) < \\<bar>B\\<bar>\n\ngoal (1 subgoal):\n 1. \\<bar>sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2) / A\\<bar>\n    < \\<bar>- B / A\\<bar>", "using assms \\<open>B \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  sqrt (B\\<^sup>2 - A\\<^sup>2) < \\<bar>B\\<bar>\n  A\\<^sup>2 < B\\<^sup>2\n  A \\<noteq> 0\n  B \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<bar>sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2) / A\\<bar>\n    < \\<bar>- B / A\\<bar>", "by (simp add: abs_mult divide_strict_right_mono)"], ["proof (state)\nthis:\n  \\<bar>sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2) / A\\<bar> < \\<bar>- B / A\\<bar>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma calc_intersect_x_axis_positive_lemma:\n  assumes \"B\\<^sup>2 > A\\<^sup>2\" and \"A \\<noteq> 0\"\n  shows \"(-B + sgn B * sqrt(B\\<^sup>2 - A\\<^sup>2)) / A > 0 \\<longleftrightarrow> -B/A > 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 < (- B + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2)) / A) = (1 < - B / A)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (0 < (- B + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2)) / A) = (1 < - B / A)", "have \"(-B + sgn B * sqrt(B\\<^sup>2 - A\\<^sup>2)) / A = -B / A + (sgn B * sqrt(B\\<^sup>2 - A\\<^sup>2)) / A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (- B + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2)) / A =\n    - B / A + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2) / A", "using assms"], ["proof (prove)\nusing this:\n  A\\<^sup>2 < B\\<^sup>2\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (- B + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2)) / A =\n    - B / A + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2) / A", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  (- B + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2)) / A =\n  - B / A + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2) / A\n\ngoal (1 subgoal):\n 1. (0 < (- B + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2)) / A) = (1 < - B / A)", "moreover"], ["proof (state)\nthis:\n  (- B + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2)) / A =\n  - B / A + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2) / A\n\ngoal (1 subgoal):\n 1. (0 < (- B + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2)) / A) = (1 < - B / A)", "have \"-B / A + (sgn B * sqrt(B\\<^sup>2 - A\\<^sup>2)) / A > 0 \\<longleftrightarrow> - B / A > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 < - B / A + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2) / A) = (0 < - B / A)", "using add_less_abs_positive_iff[OF calc_x_axis_intersection_positive_abs'[OF assms]]"], ["proof (prove)\nusing this:\n  (0 < - B / A + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2) / A) = (0 < - B / A)\n\ngoal (1 subgoal):\n 1. (0 < - B / A + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2) / A) = (0 < - B / A)", "by simp"], ["proof (state)\nthis:\n  (0 < - B / A + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2) / A) = (0 < - B / A)\n\ngoal (1 subgoal):\n 1. (0 < (- B + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2)) / A) = (1 < - B / A)", "moreover"], ["proof (state)\nthis:\n  (0 < - B / A + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2) / A) = (0 < - B / A)\n\ngoal (1 subgoal):\n 1. (0 < (- B + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2)) / A) = (1 < - B / A)", "hence \"(B/A)\\<^sup>2 > 1\""], ["proof (prove)\nusing this:\n  (0 < - B / A + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2) / A) = (0 < - B / A)\n\ngoal (1 subgoal):\n 1. 1 < (B / A)\\<^sup>2", "using assms"], ["proof (prove)\nusing this:\n  (0 < - B / A + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2) / A) = (0 < - B / A)\n  A\\<^sup>2 < B\\<^sup>2\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 1 < (B / A)\\<^sup>2", "by (simp add: power_divide)"], ["proof (state)\nthis:\n  1 < (B / A)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (0 < (- B + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2)) / A) = (1 < - B / A)", "hence \"B/A > 1 \\<or> B/A < -1\""], ["proof (prove)\nusing this:\n  1 < (B / A)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 1 < B / A \\<or> B / A < - 1", "by (smt one_power2 pos2 power2_minus power_0 power_strict_decreasing zero_power2)"], ["proof (state)\nthis:\n  1 < B / A \\<or> B / A < - 1\n\ngoal (1 subgoal):\n 1. (0 < (- B + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2)) / A) = (1 < - B / A)", "hence \"-B / A > 0 \\<longleftrightarrow> -B / A > 1\""], ["proof (prove)\nusing this:\n  1 < B / A \\<or> B / A < - 1\n\ngoal (1 subgoal):\n 1. (0 < - B / A) = (1 < - B / A)", "by auto"], ["proof (state)\nthis:\n  (0 < - B / A) = (1 < - B / A)\n\ngoal (1 subgoal):\n 1. (0 < (- B + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2)) / A) = (1 < - B / A)", "ultimately"], ["proof (chain)\npicking this:\n  (- B + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2)) / A =\n  - B / A + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2) / A\n  (0 < - B / A + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2) / A) = (0 < - B / A)\n  (0 < - B / A) = (1 < - B / A)", "show ?thesis"], ["proof (prove)\nusing this:\n  (- B + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2)) / A =\n  - B / A + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2) / A\n  (0 < - B / A + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2) / A) = (0 < - B / A)\n  (0 < - B / A) = (1 < - B / A)\n\ngoal (1 subgoal):\n 1. (0 < (- B + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2)) / A) = (1 < - B / A)", "using assms"], ["proof (prove)\nusing this:\n  (- B + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2)) / A =\n  - B / A + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2) / A\n  (0 < - B / A + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2) / A) = (0 < - B / A)\n  (0 < - B / A) = (1 < - B / A)\n  A\\<^sup>2 < B\\<^sup>2\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (0 < (- B + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2)) / A) = (1 < - B / A)", "by auto"], ["proof (state)\nthis:\n  (0 < (- B + sgn B * sqrt (B\\<^sup>2 - A\\<^sup>2)) / A) = (1 < - B / A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma intersects_x_axis_positive_iff':\n  assumes \"is_poincare_line H\"\n  shows \"intersects_x_axis_positive H \\<longleftrightarrow> \n         calc_x_axis_intersection H \\<in> unit_disc \\<and> calc_x_axis_intersection H \\<in> circline_set H \\<inter> positive_x_axis\" (is \"?lhs \\<longleftrightarrow> ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. intersects_x_axis_positive H =\n    (calc_x_axis_intersection H \\<in> unit_disc \\<and>\n     calc_x_axis_intersection H\n     \\<in> circline_set H \\<inter> positive_x_axis)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. intersects_x_axis_positive H \\<Longrightarrow>\n    calc_x_axis_intersection H \\<in> unit_disc \\<and>\n    calc_x_axis_intersection H \\<in> circline_set H \\<inter> positive_x_axis\n 2. calc_x_axis_intersection H \\<in> unit_disc \\<and>\n    calc_x_axis_intersection H\n    \\<in> circline_set H \\<inter> positive_x_axis \\<Longrightarrow>\n    intersects_x_axis_positive H", "let ?x = \"calc_x_axis_intersection H\""], ["proof (state)\ngoal (2 subgoals):\n 1. intersects_x_axis_positive H \\<Longrightarrow>\n    calc_x_axis_intersection H \\<in> unit_disc \\<and>\n    calc_x_axis_intersection H \\<in> circline_set H \\<inter> positive_x_axis\n 2. calc_x_axis_intersection H \\<in> unit_disc \\<and>\n    calc_x_axis_intersection H\n    \\<in> circline_set H \\<inter> positive_x_axis \\<Longrightarrow>\n    intersects_x_axis_positive H", "assume ?lhs"], ["proof (state)\nthis:\n  intersects_x_axis_positive H\n\ngoal (2 subgoals):\n 1. intersects_x_axis_positive H \\<Longrightarrow>\n    calc_x_axis_intersection H \\<in> unit_disc \\<and>\n    calc_x_axis_intersection H \\<in> circline_set H \\<inter> positive_x_axis\n 2. calc_x_axis_intersection H \\<in> unit_disc \\<and>\n    calc_x_axis_intersection H\n    \\<in> circline_set H \\<inter> positive_x_axis \\<Longrightarrow>\n    intersects_x_axis_positive H", "hence \"?x \\<in> circline_set x_axis\" \"?x \\<in> circline_set H\" \"?x \\<in> unit_disc\""], ["proof (prove)\nusing this:\n  intersects_x_axis_positive H\n\ngoal (1 subgoal):\n 1. calc_x_axis_intersection H \\<in> circline_set x_axis &&&\n    calc_x_axis_intersection H \\<in> circline_set H &&&\n    calc_x_axis_intersection H \\<in> unit_disc", "using calc_x_axis_intersection_in_unit_disc[OF assms] calc_x_axis_intersection[OF assms]"], ["proof (prove)\nusing this:\n  intersects_x_axis_positive H\n  intersects_x_axis H \\<Longrightarrow>\n  calc_x_axis_intersection H \\<in> unit_disc\n  intersects_x_axis H \\<Longrightarrow>\n  calc_x_axis_intersection H\n  \\<in> circline_set H \\<inter> circline_set x_axis\n\ngoal (1 subgoal):\n 1. calc_x_axis_intersection H \\<in> circline_set x_axis &&&\n    calc_x_axis_intersection H \\<in> circline_set H &&&\n    calc_x_axis_intersection H \\<in> unit_disc", "by auto"], ["proof (state)\nthis:\n  calc_x_axis_intersection H \\<in> circline_set x_axis\n  calc_x_axis_intersection H \\<in> circline_set H\n  calc_x_axis_intersection H \\<in> unit_disc\n\ngoal (2 subgoals):\n 1. intersects_x_axis_positive H \\<Longrightarrow>\n    calc_x_axis_intersection H \\<in> unit_disc \\<and>\n    calc_x_axis_intersection H \\<in> circline_set H \\<inter> positive_x_axis\n 2. calc_x_axis_intersection H \\<in> unit_disc \\<and>\n    calc_x_axis_intersection H\n    \\<in> circline_set H \\<inter> positive_x_axis \\<Longrightarrow>\n    intersects_x_axis_positive H", "moreover"], ["proof (state)\nthis:\n  calc_x_axis_intersection H \\<in> circline_set x_axis\n  calc_x_axis_intersection H \\<in> circline_set H\n  calc_x_axis_intersection H \\<in> unit_disc\n\ngoal (2 subgoals):\n 1. intersects_x_axis_positive H \\<Longrightarrow>\n    calc_x_axis_intersection H \\<in> unit_disc \\<and>\n    calc_x_axis_intersection H \\<in> circline_set H \\<inter> positive_x_axis\n 2. calc_x_axis_intersection H \\<in> unit_disc \\<and>\n    calc_x_axis_intersection H\n    \\<in> circline_set H \\<inter> positive_x_axis \\<Longrightarrow>\n    intersects_x_axis_positive H", "have \"Re (to_complex ?x) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < Re (to_complex (calc_x_axis_intersection H))", "using \\<open>?lhs\\<close> assms"], ["proof (prove)\nusing this:\n  intersects_x_axis_positive H\n  is_poincare_line H\n\ngoal (1 subgoal):\n 1. 0 < Re (to_complex (calc_x_axis_intersection H))", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        intersects_x_axis_positive_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_positive_clmat Ha;\n        is_poincare_line_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> 0 < Re (to_complex_cvec\n                                  (calc_x_axis_intersection_cmat_cvec H))", "fix H"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        intersects_x_axis_positive_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_positive_clmat Ha;\n        is_poincare_line_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> 0 < Re (to_complex_cvec\n                                  (calc_x_axis_intersection_cmat_cvec H))", "assume hh: \"hermitean H \\<and> H \\<noteq> mat_zero\""], ["proof (state)\nthis:\n  hermitean H \\<and> H \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        intersects_x_axis_positive_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_positive_clmat Ha;\n        is_poincare_line_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> 0 < Re (to_complex_cvec\n                                  (calc_x_axis_intersection_cmat_cvec H))", "obtain A B C D where *: \"H = (A, B, C, D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A B C D.\n        H = (A, B, C, D) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases H, auto)"], ["proof (state)\nthis:\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        intersects_x_axis_positive_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_positive_clmat Ha;\n        is_poincare_line_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> 0 < Re (to_complex_cvec\n                                  (calc_x_axis_intersection_cmat_cvec H))", "assume \"intersects_x_axis_positive_cmat H\""], ["proof (state)\nthis:\n  intersects_x_axis_positive_cmat H\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        intersects_x_axis_positive_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_positive_clmat Ha;\n        is_poincare_line_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> 0 < Re (to_complex_cvec\n                                  (calc_x_axis_intersection_cmat_cvec H))", "hence **: \"Re B / Re A < - 1\" \"Re A \\<noteq> 0\""], ["proof (prove)\nusing this:\n  intersects_x_axis_positive_cmat H\n\ngoal (1 subgoal):\n 1. Re B / Re A < - 1 &&& Re A \\<noteq> 0", "using *"], ["proof (prove)\nusing this:\n  intersects_x_axis_positive_cmat H\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. Re B / Re A < - 1 &&& Re A \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  Re B / Re A < - 1\n  Re A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        intersects_x_axis_positive_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_positive_clmat Ha;\n        is_poincare_line_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> 0 < Re (to_complex_cvec\n                                  (calc_x_axis_intersection_cmat_cvec H))", "have \"(Re B)\\<^sup>2 > (Re A)\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Re A)\\<^sup>2 < (Re B)\\<^sup>2", "using **"], ["proof (prove)\nusing this:\n  Re B / Re A < - 1\n  Re A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (Re A)\\<^sup>2 < (Re B)\\<^sup>2", "by (smt divide_less_eq_1_neg divide_minus_left less_divide_eq_1_pos real_sqrt_abs real_sqrt_less_iff right_inverse_eq)"], ["proof (state)\nthis:\n  (Re A)\\<^sup>2 < (Re B)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        intersects_x_axis_positive_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_positive_clmat Ha;\n        is_poincare_line_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> 0 < Re (to_complex_cvec\n                                  (calc_x_axis_intersection_cmat_cvec H))", "have \"is_real A\" \"A \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_real A &&& A \\<noteq> 0", "using hh hermitean_elems * \\<open>Re A \\<noteq> 0\\<close> complex.expand[of A 0]"], ["proof (prove)\nusing this:\n  hermitean H \\<and> H \\<noteq> mat_zero\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> is_real ?A\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> is_real ?D\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> ?B = cnj ?C\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> cnj ?B = ?C\n  H = (A, B, C, D)\n  Re A \\<noteq> 0\n  Re A = Re 0 \\<and> Im A = Im 0 \\<Longrightarrow> A = 0\n\ngoal (1 subgoal):\n 1. is_real A &&& A \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  is_real A\n  A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        intersects_x_axis_positive_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_positive_clmat Ha;\n        is_poincare_line_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> 0 < Re (to_complex_cvec\n                                  (calc_x_axis_intersection_cmat_cvec H))", "have \"(cmod B)\\<^sup>2 > (cmod A)\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cmod A)\\<^sup>2 < (cmod B)\\<^sup>2", "using \\<open>(Re B)\\<^sup>2 > (Re A)\\<^sup>2\\<close> \\<open>is_real A\\<close>"], ["proof (prove)\nusing this:\n  (Re A)\\<^sup>2 < (Re B)\\<^sup>2\n  is_real A\n\ngoal (1 subgoal):\n 1. (cmod A)\\<^sup>2 < (cmod B)\\<^sup>2", "by (smt cmod_power2 power2_less_0 zero_power2)"], ["proof (state)\nthis:\n  (cmod A)\\<^sup>2 < (cmod B)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        intersects_x_axis_positive_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_positive_clmat Ha;\n        is_poincare_line_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> 0 < Re (to_complex_cvec\n                                  (calc_x_axis_intersection_cmat_cvec H))", "have ***: \"0 < (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) / Re A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) /\n        Re A", "using calc_intersect_x_axis_positive_lemma[of \"Re A\" \"Re B\"] ** \\<open>(Re B)\\<^sup>2 > (Re A)\\<^sup>2\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>(Re A)\\<^sup>2 < (Re B)\\<^sup>2; Re A \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> (0 < (- Re B +\n                          sgn (Re B) *\n                          sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) /\n                         Re A) =\n                    (1 < - Re B / Re A)\n  Re B / Re A < - 1\n  Re A \\<noteq> 0\n  (Re A)\\<^sup>2 < (Re B)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 < (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) /\n        Re A", "by auto"], ["proof (state)\nthis:\n  0 < (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) / Re A\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        intersects_x_axis_positive_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_positive_clmat Ha;\n        is_poincare_line_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> 0 < Re (to_complex_cvec\n                                  (calc_x_axis_intersection_cmat_cvec H))", "assume \"is_poincare_line_cmat H\""], ["proof (state)\nthis:\n  is_poincare_line_cmat H\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        intersects_x_axis_positive_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_positive_clmat Ha;\n        is_poincare_line_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> 0 < Re (to_complex_cvec\n                                  (calc_x_axis_intersection_cmat_cvec H))", "hence \"A = D\""], ["proof (prove)\nusing this:\n  is_poincare_line_cmat H\n\ngoal (1 subgoal):\n 1. A = D", "using * hh"], ["proof (prove)\nusing this:\n  is_poincare_line_cmat H\n  H = (A, B, C, D)\n  hermitean H \\<and> H \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. A = D", "by simp"], ["proof (state)\nthis:\n  A = D\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        intersects_x_axis_positive_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_positive_clmat Ha;\n        is_poincare_line_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> 0 < Re (to_complex_cvec\n                                  (calc_x_axis_intersection_cmat_cvec H))", "have \"Re ((cor (sgn (Re B)) * cor (sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) - cor (Re B)) / A) = (sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2) - Re B) / Re D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re ((cor (sgn (Re B)) * cor (sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) -\n         cor (Re B)) /\n        A) =\n    (sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2) - Re B) / Re D", "using \\<open>is_real A\\<close> \\<open>A = D\\<close>"], ["proof (prove)\nusing this:\n  is_real A\n  A = D\n\ngoal (1 subgoal):\n 1. Re ((cor (sgn (Re B)) * cor (sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) -\n         cor (Re B)) /\n        A) =\n    (sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2) - Re B) / Re D", "by (metis (no_types, lifting) Re_complex_of_real complex_of_real_Re of_real_diff of_real_divide of_real_mult)"], ["proof (state)\nthis:\n  Re ((cor (sgn (Re B)) * cor (sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) -\n       cor (Re B)) /\n      A) =\n  (sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2) - Re B) / Re D\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        intersects_x_axis_positive_cmat H; is_poincare_line_cmat H;\n        intersects_x_axis_positive_clmat Ha;\n        is_poincare_line_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> 0 < Re (to_complex_cvec\n                                  (calc_x_axis_intersection_cmat_cvec H))", "thus \"0 < Re (to_complex_cvec (calc_x_axis_intersection_cmat_cvec H))\""], ["proof (prove)\nusing this:\n  Re ((cor (sgn (Re B)) * cor (sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) -\n       cor (Re B)) /\n      A) =\n  (sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2) - Re B) / Re D\n\ngoal (1 subgoal):\n 1. 0 < Re (to_complex_cvec (calc_x_axis_intersection_cmat_cvec H))", "using * hh ** *** \\<open>(cmod B)\\<^sup>2 > (cmod A)\\<^sup>2\\<close> \\<open>(Re B)\\<^sup>2 > (Re A)\\<^sup>2\\<close> \\<open>A \\<noteq> 0\\<close> \\<open>A = D\\<close>"], ["proof (prove)\nusing this:\n  Re ((cor (sgn (Re B)) * cor (sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) -\n       cor (Re B)) /\n      A) =\n  (sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2) - Re B) / Re D\n  H = (A, B, C, D)\n  hermitean H \\<and> H \\<noteq> mat_zero\n  Re B / Re A < - 1\n  Re A \\<noteq> 0\n  0 < (- Re B + sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) / Re A\n  (cmod A)\\<^sup>2 < (cmod B)\\<^sup>2\n  (Re A)\\<^sup>2 < (Re B)\\<^sup>2\n  A \\<noteq> 0\n  A = D\n\ngoal (1 subgoal):\n 1. 0 < Re (to_complex_cvec (calc_x_axis_intersection_cmat_cvec H))", "by simp"], ["proof (state)\nthis:\n  0 < Re (to_complex_cvec (calc_x_axis_intersection_cmat_cvec H))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < Re (to_complex (calc_x_axis_intersection H))\n\ngoal (2 subgoals):\n 1. intersects_x_axis_positive H \\<Longrightarrow>\n    calc_x_axis_intersection H \\<in> unit_disc \\<and>\n    calc_x_axis_intersection H \\<in> circline_set H \\<inter> positive_x_axis\n 2. calc_x_axis_intersection H \\<in> unit_disc \\<and>\n    calc_x_axis_intersection H\n    \\<in> circline_set H \\<inter> positive_x_axis \\<Longrightarrow>\n    intersects_x_axis_positive H", "ultimately"], ["proof (chain)\npicking this:\n  calc_x_axis_intersection H \\<in> circline_set x_axis\n  calc_x_axis_intersection H \\<in> circline_set H\n  calc_x_axis_intersection H \\<in> unit_disc\n  0 < Re (to_complex (calc_x_axis_intersection H))", "show ?rhs"], ["proof (prove)\nusing this:\n  calc_x_axis_intersection H \\<in> circline_set x_axis\n  calc_x_axis_intersection H \\<in> circline_set H\n  calc_x_axis_intersection H \\<in> unit_disc\n  0 < Re (to_complex (calc_x_axis_intersection H))\n\ngoal (1 subgoal):\n 1. calc_x_axis_intersection H \\<in> unit_disc \\<and>\n    calc_x_axis_intersection H \\<in> circline_set H \\<inter> positive_x_axis", "unfolding positive_x_axis_def"], ["proof (prove)\nusing this:\n  calc_x_axis_intersection H \\<in> circline_set x_axis\n  calc_x_axis_intersection H \\<in> circline_set H\n  calc_x_axis_intersection H \\<in> unit_disc\n  0 < Re (to_complex (calc_x_axis_intersection H))\n\ngoal (1 subgoal):\n 1. calc_x_axis_intersection H \\<in> unit_disc \\<and>\n    calc_x_axis_intersection H\n    \\<in> circline_set H \\<inter>\n          {z \\<in> circline_set x_axis.\n           z \\<noteq> \\<infinity>\\<^sub>h \\<and> 0 < Re (to_complex z)}", "by auto"], ["proof (state)\nthis:\n  calc_x_axis_intersection H \\<in> unit_disc \\<and>\n  calc_x_axis_intersection H \\<in> circline_set H \\<inter> positive_x_axis\n\ngoal (1 subgoal):\n 1. calc_x_axis_intersection H \\<in> unit_disc \\<and>\n    calc_x_axis_intersection H\n    \\<in> circline_set H \\<inter> positive_x_axis \\<Longrightarrow>\n    intersects_x_axis_positive H", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. calc_x_axis_intersection H \\<in> unit_disc \\<and>\n    calc_x_axis_intersection H\n    \\<in> circline_set H \\<inter> positive_x_axis \\<Longrightarrow>\n    intersects_x_axis_positive H", "let ?x = \"calc_x_axis_intersection H\""], ["proof (state)\ngoal (1 subgoal):\n 1. calc_x_axis_intersection H \\<in> unit_disc \\<and>\n    calc_x_axis_intersection H\n    \\<in> circline_set H \\<inter> positive_x_axis \\<Longrightarrow>\n    intersects_x_axis_positive H", "assume ?rhs"], ["proof (state)\nthis:\n  calc_x_axis_intersection H \\<in> unit_disc \\<and>\n  calc_x_axis_intersection H \\<in> circline_set H \\<inter> positive_x_axis\n\ngoal (1 subgoal):\n 1. calc_x_axis_intersection H \\<in> unit_disc \\<and>\n    calc_x_axis_intersection H\n    \\<in> circline_set H \\<inter> positive_x_axis \\<Longrightarrow>\n    intersects_x_axis_positive H", "hence \"Re (to_complex ?x) > 0\"  \"?x \\<noteq> \\<infinity>\\<^sub>h\" \"?x \\<in> circline_set x_axis\" \"?x \\<in> unit_disc\" \"?x \\<in> circline_set H\""], ["proof (prove)\nusing this:\n  calc_x_axis_intersection H \\<in> unit_disc \\<and>\n  calc_x_axis_intersection H \\<in> circline_set H \\<inter> positive_x_axis\n\ngoal (1 subgoal):\n 1. (0 < Re (to_complex (calc_x_axis_intersection H)) &&&\n     calc_x_axis_intersection H \\<noteq> \\<infinity>\\<^sub>h) &&&\n    calc_x_axis_intersection H \\<in> circline_set x_axis &&&\n    calc_x_axis_intersection H \\<in> unit_disc &&&\n    calc_x_axis_intersection H \\<in> circline_set H", "unfolding positive_x_axis_def"], ["proof (prove)\nusing this:\n  calc_x_axis_intersection H \\<in> unit_disc \\<and>\n  calc_x_axis_intersection H\n  \\<in> circline_set H \\<inter>\n        {z \\<in> circline_set x_axis.\n         z \\<noteq> \\<infinity>\\<^sub>h \\<and> 0 < Re (to_complex z)}\n\ngoal (1 subgoal):\n 1. (0 < Re (to_complex (calc_x_axis_intersection H)) &&&\n     calc_x_axis_intersection H \\<noteq> \\<infinity>\\<^sub>h) &&&\n    calc_x_axis_intersection H \\<in> circline_set x_axis &&&\n    calc_x_axis_intersection H \\<in> unit_disc &&&\n    calc_x_axis_intersection H \\<in> circline_set H", "by auto"], ["proof (state)\nthis:\n  0 < Re (to_complex (calc_x_axis_intersection H))\n  calc_x_axis_intersection H \\<noteq> \\<infinity>\\<^sub>h\n  calc_x_axis_intersection H \\<in> circline_set x_axis\n  calc_x_axis_intersection H \\<in> unit_disc\n  calc_x_axis_intersection H \\<in> circline_set H\n\ngoal (1 subgoal):\n 1. calc_x_axis_intersection H \\<in> unit_disc \\<and>\n    calc_x_axis_intersection H\n    \\<in> circline_set H \\<inter> positive_x_axis \\<Longrightarrow>\n    intersects_x_axis_positive H", "hence \"intersects_x_axis H\""], ["proof (prove)\nusing this:\n  0 < Re (to_complex (calc_x_axis_intersection H))\n  calc_x_axis_intersection H \\<noteq> \\<infinity>\\<^sub>h\n  calc_x_axis_intersection H \\<in> circline_set x_axis\n  calc_x_axis_intersection H \\<in> unit_disc\n  calc_x_axis_intersection H \\<in> circline_set H\n\ngoal (1 subgoal):\n 1. intersects_x_axis H", "using intersects_x_axis_iff[OF assms]"], ["proof (prove)\nusing this:\n  0 < Re (to_complex (calc_x_axis_intersection H))\n  calc_x_axis_intersection H \\<noteq> \\<infinity>\\<^sub>h\n  calc_x_axis_intersection H \\<in> circline_set x_axis\n  calc_x_axis_intersection H \\<in> unit_disc\n  calc_x_axis_intersection H \\<in> circline_set H\n  (\\<exists>x\\<in>unit_disc.\n      x \\<in> circline_set H \\<inter> circline_set x_axis) =\n  intersects_x_axis H\n\ngoal (1 subgoal):\n 1. intersects_x_axis H", "by auto"], ["proof (state)\nthis:\n  intersects_x_axis H\n\ngoal (1 subgoal):\n 1. calc_x_axis_intersection H \\<in> unit_disc \\<and>\n    calc_x_axis_intersection H\n    \\<in> circline_set H \\<inter> positive_x_axis \\<Longrightarrow>\n    intersects_x_axis_positive H", "thus ?lhs"], ["proof (prove)\nusing this:\n  intersects_x_axis H\n\ngoal (1 subgoal):\n 1. intersects_x_axis_positive H", "using \\<open>Re (to_complex ?x) > 0\\<close> assms"], ["proof (prove)\nusing this:\n  intersects_x_axis H\n  0 < Re (to_complex (calc_x_axis_intersection H))\n  is_poincare_line H\n\ngoal (1 subgoal):\n 1. intersects_x_axis_positive H", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        intersects_x_axis_cmat H;\n        0 < Re (to_complex_cvec (calc_x_axis_intersection_cmat_cvec H));\n        is_poincare_line_cmat H; intersects_x_axis_clmat Ha;\n        0 < Re (to_complex_homo_coords\n                 (calc_x_axis_intersection_clmat_hcoords Ha));\n        is_poincare_line_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> intersects_x_axis_positive_cmat H", "fix H"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        intersects_x_axis_cmat H;\n        0 < Re (to_complex_cvec (calc_x_axis_intersection_cmat_cvec H));\n        is_poincare_line_cmat H; intersects_x_axis_clmat Ha;\n        0 < Re (to_complex_homo_coords\n                 (calc_x_axis_intersection_clmat_hcoords Ha));\n        is_poincare_line_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> intersects_x_axis_positive_cmat H", "assume hh: \"hermitean H \\<and> H \\<noteq> mat_zero\""], ["proof (state)\nthis:\n  hermitean H \\<and> H \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        intersects_x_axis_cmat H;\n        0 < Re (to_complex_cvec (calc_x_axis_intersection_cmat_cvec H));\n        is_poincare_line_cmat H; intersects_x_axis_clmat Ha;\n        0 < Re (to_complex_homo_coords\n                 (calc_x_axis_intersection_clmat_hcoords Ha));\n        is_poincare_line_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> intersects_x_axis_positive_cmat H", "obtain A B C D where *: \"H = (A, B, C, D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A B C D.\n        H = (A, B, C, D) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases H, auto)"], ["proof (state)\nthis:\n  H = (A, B, C, D)\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        intersects_x_axis_cmat H;\n        0 < Re (to_complex_cvec (calc_x_axis_intersection_cmat_cvec H));\n        is_poincare_line_cmat H; intersects_x_axis_clmat Ha;\n        0 < Re (to_complex_homo_coords\n                 (calc_x_axis_intersection_clmat_hcoords Ha));\n        is_poincare_line_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> intersects_x_axis_positive_cmat H", "assume \"0 < Re (to_complex_cvec (calc_x_axis_intersection_cmat_cvec H))\" \"intersects_x_axis_cmat H\" \"is_poincare_line_cmat H\""], ["proof (state)\nthis:\n  0 < Re (to_complex_cvec (calc_x_axis_intersection_cmat_cvec H))\n  intersects_x_axis_cmat H\n  is_poincare_line_cmat H\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        intersects_x_axis_cmat H;\n        0 < Re (to_complex_cvec (calc_x_axis_intersection_cmat_cvec H));\n        is_poincare_line_cmat H; intersects_x_axis_clmat Ha;\n        0 < Re (to_complex_homo_coords\n                 (calc_x_axis_intersection_clmat_hcoords Ha));\n        is_poincare_line_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> intersects_x_axis_positive_cmat H", "hence **: \"A \\<noteq> 0\" \"0 < Re ((cor (sgn (Re B)) * cor (sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) - cor (Re B)) / A)\"  \"A = D\" \"is_real A\" \"(Re B)\\<^sup>2 > (Re A)\\<^sup>2\""], ["proof (prove)\nusing this:\n  0 < Re (to_complex_cvec (calc_x_axis_intersection_cmat_cvec H))\n  intersects_x_axis_cmat H\n  is_poincare_line_cmat H\n\ngoal (1 subgoal):\n 1. (A \\<noteq> 0 &&&\n     0 < Re ((cor (sgn (Re B)) *\n              cor (sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) -\n              cor (Re B)) /\n             A)) &&&\n    A = D &&& is_real A &&& (Re A)\\<^sup>2 < (Re B)\\<^sup>2", "using * hh hermitean_elems"], ["proof (prove)\nusing this:\n  0 < Re (to_complex_cvec (calc_x_axis_intersection_cmat_cvec H))\n  intersects_x_axis_cmat H\n  is_poincare_line_cmat H\n  H = (A, B, C, D)\n  hermitean H \\<and> H \\<noteq> mat_zero\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> is_real ?A\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> is_real ?D\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> ?B = cnj ?C\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> cnj ?B = ?C\n\ngoal (1 subgoal):\n 1. (A \\<noteq> 0 &&&\n     0 < Re ((cor (sgn (Re B)) *\n              cor (sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) -\n              cor (Re B)) /\n             A)) &&&\n    A = D &&& is_real A &&& (Re A)\\<^sup>2 < (Re B)\\<^sup>2", "by (auto split: if_split_asm)"], ["proof (state)\nthis:\n  A \\<noteq> 0\n  0 < Re ((cor (sgn (Re B)) * cor (sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) -\n           cor (Re B)) /\n          A)\n  A = D\n  is_real A\n  (Re A)\\<^sup>2 < (Re B)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        intersects_x_axis_cmat H;\n        0 < Re (to_complex_cvec (calc_x_axis_intersection_cmat_cvec H));\n        is_poincare_line_cmat H; intersects_x_axis_clmat Ha;\n        0 < Re (to_complex_homo_coords\n                 (calc_x_axis_intersection_clmat_hcoords Ha));\n        is_poincare_line_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> intersects_x_axis_positive_cmat H", "have \"Re A \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re A \\<noteq> 0", "using complex.expand[of A 0] \\<open>A \\<noteq> 0\\<close> \\<open>is_real A\\<close>"], ["proof (prove)\nusing this:\n  Re A = Re 0 \\<and> Im A = Im 0 \\<Longrightarrow> A = 0\n  A \\<noteq> 0\n  is_real A\n\ngoal (1 subgoal):\n 1. Re A \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  Re A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        intersects_x_axis_cmat H;\n        0 < Re (to_complex_cvec (calc_x_axis_intersection_cmat_cvec H));\n        is_poincare_line_cmat H; intersects_x_axis_clmat Ha;\n        0 < Re (to_complex_homo_coords\n                 (calc_x_axis_intersection_clmat_hcoords Ha));\n        is_poincare_line_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> intersects_x_axis_positive_cmat H", "have \"Re ((cor (sgn (Re B)) * cor (sqrt ((Re B)\\<^sup>2 - (Re D)\\<^sup>2)) - cor (Re B)) / D) = (sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re D)\\<^sup>2) - Re B) / Re D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re ((cor (sgn (Re B)) * cor (sqrt ((Re B)\\<^sup>2 - (Re D)\\<^sup>2)) -\n         cor (Re B)) /\n        D) =\n    (sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re D)\\<^sup>2) - Re B) / Re D", "using \\<open>is_real A\\<close> \\<open>A = D\\<close>"], ["proof (prove)\nusing this:\n  is_real A\n  A = D\n\ngoal (1 subgoal):\n 1. Re ((cor (sgn (Re B)) * cor (sqrt ((Re B)\\<^sup>2 - (Re D)\\<^sup>2)) -\n         cor (Re B)) /\n        D) =\n    (sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re D)\\<^sup>2) - Re B) / Re D", "by (metis (no_types, lifting) Re_complex_of_real complex_of_real_Re of_real_diff of_real_divide of_real_mult)"], ["proof (state)\nthis:\n  Re ((cor (sgn (Re B)) * cor (sqrt ((Re B)\\<^sup>2 - (Re D)\\<^sup>2)) -\n       cor (Re B)) /\n      D) =\n  (sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re D)\\<^sup>2) - Re B) / Re D\n\ngoal (1 subgoal):\n 1. \\<And>H Ha.\n       \\<lbrakk>hermitean H \\<and> H \\<noteq> mat_zero;\n        intersects_x_axis_cmat H;\n        0 < Re (to_complex_cvec (calc_x_axis_intersection_cmat_cvec H));\n        is_poincare_line_cmat H; intersects_x_axis_clmat Ha;\n        0 < Re (to_complex_homo_coords\n                 (calc_x_axis_intersection_clmat_hcoords Ha));\n        is_poincare_line_clmat Ha\\<rbrakk>\n       \\<Longrightarrow> intersects_x_axis_positive_cmat H", "thus \"intersects_x_axis_positive_cmat H\""], ["proof (prove)\nusing this:\n  Re ((cor (sgn (Re B)) * cor (sqrt ((Re B)\\<^sup>2 - (Re D)\\<^sup>2)) -\n       cor (Re B)) /\n      D) =\n  (sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re D)\\<^sup>2) - Re B) / Re D\n\ngoal (1 subgoal):\n 1. intersects_x_axis_positive_cmat H", "using * ** \\<open>Re A \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  Re ((cor (sgn (Re B)) * cor (sqrt ((Re B)\\<^sup>2 - (Re D)\\<^sup>2)) -\n       cor (Re B)) /\n      D) =\n  (sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re D)\\<^sup>2) - Re B) / Re D\n  H = (A, B, C, D)\n  A \\<noteq> 0\n  0 < Re ((cor (sgn (Re B)) * cor (sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) -\n           cor (Re B)) /\n          A)\n  A = D\n  is_real A\n  (Re A)\\<^sup>2 < (Re B)\\<^sup>2\n  Re A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. intersects_x_axis_positive_cmat H", "using calc_intersect_x_axis_positive_lemma[of \"Re A\" \"Re B\"]"], ["proof (prove)\nusing this:\n  Re ((cor (sgn (Re B)) * cor (sqrt ((Re B)\\<^sup>2 - (Re D)\\<^sup>2)) -\n       cor (Re B)) /\n      D) =\n  (sgn (Re B) * sqrt ((Re B)\\<^sup>2 - (Re D)\\<^sup>2) - Re B) / Re D\n  H = (A, B, C, D)\n  A \\<noteq> 0\n  0 < Re ((cor (sgn (Re B)) * cor (sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) -\n           cor (Re B)) /\n          A)\n  A = D\n  is_real A\n  (Re A)\\<^sup>2 < (Re B)\\<^sup>2\n  Re A \\<noteq> 0\n  \\<lbrakk>(Re A)\\<^sup>2 < (Re B)\\<^sup>2; Re A \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> (0 < (- Re B +\n                          sgn (Re B) *\n                          sqrt ((Re B)\\<^sup>2 - (Re A)\\<^sup>2)) /\n                         Re A) =\n                    (1 < - Re B / Re A)\n\ngoal (1 subgoal):\n 1. intersects_x_axis_positive_cmat H", "by simp"], ["proof (state)\nthis:\n  intersects_x_axis_positive_cmat H\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  intersects_x_axis_positive H\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma intersects_x_axis_positive_iff:\n  assumes \"is_poincare_line H\" and \"H \\<noteq> x_axis\"\n  shows \"intersects_x_axis_positive H \\<longleftrightarrow> \n         (\\<exists> x. x \\<in> unit_disc \\<and> x \\<in> circline_set H \\<inter> positive_x_axis)\" (is \"?lhs \\<longleftrightarrow> ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. intersects_x_axis_positive H =\n    (\\<exists>x.\n        x \\<in> unit_disc \\<and>\n        x \\<in> circline_set H \\<inter> positive_x_axis)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. intersects_x_axis_positive H \\<Longrightarrow>\n    \\<exists>x.\n       x \\<in> unit_disc \\<and>\n       x \\<in> circline_set H \\<inter> positive_x_axis\n 2. \\<exists>x.\n       x \\<in> unit_disc \\<and>\n       x \\<in> circline_set H \\<inter> positive_x_axis \\<Longrightarrow>\n    intersects_x_axis_positive H", "assume ?lhs"], ["proof (state)\nthis:\n  intersects_x_axis_positive H\n\ngoal (2 subgoals):\n 1. intersects_x_axis_positive H \\<Longrightarrow>\n    \\<exists>x.\n       x \\<in> unit_disc \\<and>\n       x \\<in> circline_set H \\<inter> positive_x_axis\n 2. \\<exists>x.\n       x \\<in> unit_disc \\<and>\n       x \\<in> circline_set H \\<inter> positive_x_axis \\<Longrightarrow>\n    intersects_x_axis_positive H", "thus ?rhs"], ["proof (prove)\nusing this:\n  intersects_x_axis_positive H\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       x \\<in> unit_disc \\<and>\n       x \\<in> circline_set H \\<inter> positive_x_axis", "using intersects_x_axis_positive_iff'[OF assms(1)]"], ["proof (prove)\nusing this:\n  intersects_x_axis_positive H\n  intersects_x_axis_positive H =\n  (calc_x_axis_intersection H \\<in> unit_disc \\<and>\n   calc_x_axis_intersection H \\<in> circline_set H \\<inter> positive_x_axis)\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       x \\<in> unit_disc \\<and>\n       x \\<in> circline_set H \\<inter> positive_x_axis", "by auto"], ["proof (state)\nthis:\n  \\<exists>x.\n     x \\<in> unit_disc \\<and>\n     x \\<in> circline_set H \\<inter> positive_x_axis\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       x \\<in> unit_disc \\<and>\n       x \\<in> circline_set H \\<inter> positive_x_axis \\<Longrightarrow>\n    intersects_x_axis_positive H", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>x.\n       x \\<in> unit_disc \\<and>\n       x \\<in> circline_set H \\<inter> positive_x_axis \\<Longrightarrow>\n    intersects_x_axis_positive H", "assume ?rhs"], ["proof (state)\nthis:\n  \\<exists>x.\n     x \\<in> unit_disc \\<and>\n     x \\<in> circline_set H \\<inter> positive_x_axis\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       x \\<in> unit_disc \\<and>\n       x \\<in> circline_set H \\<inter> positive_x_axis \\<Longrightarrow>\n    intersects_x_axis_positive H", "then"], ["proof (chain)\npicking this:\n  \\<exists>x.\n     x \\<in> unit_disc \\<and>\n     x \\<in> circline_set H \\<inter> positive_x_axis", "obtain x where \"x \\<in> unit_disc\" \"x \\<in> circline_set H \\<inter> positive_x_axis\""], ["proof (prove)\nusing this:\n  \\<exists>x.\n     x \\<in> unit_disc \\<and>\n     x \\<in> circline_set H \\<inter> positive_x_axis\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> unit_disc;\n         x \\<in> circline_set H \\<inter> positive_x_axis\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> unit_disc\n  x \\<in> circline_set H \\<inter> positive_x_axis\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       x \\<in> unit_disc \\<and>\n       x \\<in> circline_set H \\<inter> positive_x_axis \\<Longrightarrow>\n    intersects_x_axis_positive H", "thus ?lhs"], ["proof (prove)\nusing this:\n  x \\<in> unit_disc\n  x \\<in> circline_set H \\<inter> positive_x_axis\n\ngoal (1 subgoal):\n 1. intersects_x_axis_positive H", "using unique_calc_x_axis_intersection[OF assms, of x]"], ["proof (prove)\nusing this:\n  x \\<in> unit_disc\n  x \\<in> circline_set H \\<inter> positive_x_axis\n  \\<lbrakk>x \\<in> unit_disc;\n   x \\<in> circline_set H \\<inter> circline_set x_axis\\<rbrakk>\n  \\<Longrightarrow> x = calc_x_axis_intersection H\n\ngoal (1 subgoal):\n 1. intersects_x_axis_positive H", "using intersects_x_axis_positive_iff'[OF assms(1)]"], ["proof (prove)\nusing this:\n  x \\<in> unit_disc\n  x \\<in> circline_set H \\<inter> positive_x_axis\n  \\<lbrakk>x \\<in> unit_disc;\n   x \\<in> circline_set H \\<inter> circline_set x_axis\\<rbrakk>\n  \\<Longrightarrow> x = calc_x_axis_intersection H\n  intersects_x_axis_positive H =\n  (calc_x_axis_intersection H \\<in> unit_disc \\<and>\n   calc_x_axis_intersection H \\<in> circline_set H \\<inter> positive_x_axis)\n\ngoal (1 subgoal):\n 1. intersects_x_axis_positive H", "unfolding positive_x_axis_def"], ["proof (prove)\nusing this:\n  x \\<in> unit_disc\n  x \\<in> circline_set H \\<inter>\n          {z \\<in> circline_set x_axis.\n           z \\<noteq> \\<infinity>\\<^sub>h \\<and> 0 < Re (to_complex z)}\n  \\<lbrakk>x \\<in> unit_disc;\n   x \\<in> circline_set H \\<inter> circline_set x_axis\\<rbrakk>\n  \\<Longrightarrow> x = calc_x_axis_intersection H\n  intersects_x_axis_positive H =\n  (calc_x_axis_intersection H \\<in> unit_disc \\<and>\n   calc_x_axis_intersection H\n   \\<in> circline_set H \\<inter>\n         {z \\<in> circline_set x_axis.\n          z \\<noteq> \\<infinity>\\<^sub>h \\<and> 0 < Re (to_complex z)})\n\ngoal (1 subgoal):\n 1. intersects_x_axis_positive H", "by auto"], ["proof (state)\nthis:\n  intersects_x_axis_positive H\n\ngoal:\nNo subgoals!", "qed"], ["", "(* ------------------------------------------------------------------ *)"], ["", "subsection\\<open>Check if an h-line intersects the positive part of the y-axis\\<close>"], ["", "(* ------------------------------------------------------------------ *)"], ["", "definition intersects_y_axis_positive_cmat :: \"complex_mat \\<Rightarrow> bool\" where\n  [simp]: \"intersects_y_axis_positive_cmat H = (let (A, B, C, D) = H in Re A \\<noteq> 0 \\<and> Im B / Re A < -1)\""], ["", "lift_definition intersects_y_axis_positive_clmat :: \"circline_mat \\<Rightarrow> bool\" is intersects_y_axis_positive_cmat"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lift_definition intersects_y_axis_positive :: \"circline \\<Rightarrow> bool\" is intersects_y_axis_positive_clmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       circline_eq_clmat circline_mat1 circline_mat2 \\<Longrightarrow>\n       intersects_y_axis_positive_clmat circline_mat1 =\n       intersects_y_axis_positive_clmat circline_mat2", "proof (transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> intersects_y_axis_positive_cmat circline_mat1 =\n                         intersects_y_axis_positive_cmat circline_mat2", "fix H1 H2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> intersects_y_axis_positive_cmat circline_mat1 =\n                         intersects_y_axis_positive_cmat circline_mat2", "assume hh: \"hermitean H1 \\<and> H1 \\<noteq> mat_zero\" and \"hermitean H2 \\<and> H2 \\<noteq> mat_zero\""], ["proof (state)\nthis:\n  hermitean H1 \\<and> H1 \\<noteq> mat_zero\n  hermitean H2 \\<and> H2 \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> intersects_y_axis_positive_cmat circline_mat1 =\n                         intersects_y_axis_positive_cmat circline_mat2", "obtain A1 B1 C1 D1 A2 B2 C2 D2 where *: \"H1 = (A1, B1, C1, D1)\" \"H2 = (A2, B2, C2, D2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A1 B1 C1 D1 A2 B2 C2 D2.\n        \\<lbrakk>H1 = (A1, B1, C1, D1); H2 = (A2, B2, C2, D2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases H1, cases H2, auto)"], ["proof (state)\nthis:\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> intersects_y_axis_positive_cmat circline_mat1 =\n                         intersects_y_axis_positive_cmat circline_mat2", "assume \"circline_eq_cmat H1 H2\""], ["proof (state)\nthis:\n  circline_eq_cmat H1 H2\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> intersects_y_axis_positive_cmat circline_mat1 =\n                         intersects_y_axis_positive_cmat circline_mat2", "then"], ["proof (chain)\npicking this:\n  circline_eq_cmat H1 H2", "obtain k where \"k \\<noteq> 0 \\<and> H2 = cor k *\\<^sub>s\\<^sub>m H1\""], ["proof (prove)\nusing this:\n  circline_eq_cmat H1 H2\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        k \\<noteq> 0 \\<and>\n        H2 = cor k *\\<^sub>s\\<^sub>m H1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  k \\<noteq> 0 \\<and> H2 = cor k *\\<^sub>s\\<^sub>m H1\n\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2\\<rbrakk>\n       \\<Longrightarrow> intersects_y_axis_positive_cmat circline_mat1 =\n                         intersects_y_axis_positive_cmat circline_mat2", "thus \"intersects_y_axis_positive_cmat H1 = intersects_y_axis_positive_cmat H2\""], ["proof (prove)\nusing this:\n  k \\<noteq> 0 \\<and> H2 = cor k *\\<^sub>s\\<^sub>m H1\n\ngoal (1 subgoal):\n 1. intersects_y_axis_positive_cmat H1 = intersects_y_axis_positive_cmat H2", "using *"], ["proof (prove)\nusing this:\n  k \\<noteq> 0 \\<and> H2 = cor k *\\<^sub>s\\<^sub>m H1\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n\ngoal (1 subgoal):\n 1. intersects_y_axis_positive_cmat H1 = intersects_y_axis_positive_cmat H2", "by simp"], ["proof (state)\nthis:\n  intersects_y_axis_positive_cmat H1 = intersects_y_axis_positive_cmat H2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma intersects_x_axis_positive_intersects_y_axis_positive [simp]:\n  shows \"intersects_x_axis_positive (moebius_circline (moebius_rotation (-pi/2)) H) \\<longleftrightarrow> intersects_y_axis_positive H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. intersects_x_axis_positive\n     (moebius_circline (moebius_rotation (- pi / 2)) H) =\n    intersects_y_axis_positive H", "using hermitean_elems"], ["proof (prove)\nusing this:\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> is_real ?A\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> is_real ?D\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> ?B = cnj ?C\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> cnj ?B = ?C\n\ngoal (1 subgoal):\n 1. intersects_x_axis_positive\n     (moebius_circline (moebius_rotation (- pi / 2)) H) =\n    intersects_y_axis_positive H", "unfolding moebius_rotation_def moebius_similarity_def"], ["proof (prove)\nusing this:\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> is_real ?A\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> is_real ?D\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> ?B = cnj ?C\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> cnj ?B = ?C\n\ngoal (1 subgoal):\n 1. intersects_x_axis_positive\n     (moebius_circline (mk_moebius (cis (- pi / 2)) 0 0 1) H) =\n    intersects_y_axis_positive H", "by simp (transfer, transfer, auto simp add: mat_adj_def mat_cnj_def)"], ["", "lemma intersects_y_axis_positive_iff:\n  assumes \"is_poincare_line H\" \"H \\<noteq> y_axis\"\n  shows \"(\\<exists> y \\<in> unit_disc. y \\<in> circline_set H \\<inter> positive_y_axis) \\<longleftrightarrow> intersects_y_axis_positive H\" (is \"?lhs \\<longleftrightarrow> ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>y\\<in>unit_disc.\n        y \\<in> circline_set H \\<inter> positive_y_axis) =\n    intersects_y_axis_positive H", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<exists>y\\<in>unit_disc.\n        y \\<in> circline_set H \\<inter> positive_y_axis) =\n    intersects_y_axis_positive H", "let ?R = \"moebius_rotation (-pi / 2)\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<exists>y\\<in>unit_disc.\n        y \\<in> circline_set H \\<inter> positive_y_axis) =\n    intersects_y_axis_positive H", "let ?H' = \"moebius_circline ?R H\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<exists>y\\<in>unit_disc.\n        y \\<in> circline_set H \\<inter> positive_y_axis) =\n    intersects_y_axis_positive H", "have 1: \"is_poincare_line ?H'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_poincare_line (moebius_circline (moebius_rotation (- pi / 2)) H)", "using assms"], ["proof (prove)\nusing this:\n  is_poincare_line H\n  H \\<noteq> y_axis\n\ngoal (1 subgoal):\n 1. is_poincare_line (moebius_circline (moebius_rotation (- pi / 2)) H)", "using unit_circle_fix_preserve_is_poincare_line[OF _ assms(1), of ?R]"], ["proof (prove)\nusing this:\n  is_poincare_line H\n  H \\<noteq> y_axis\n  unit_circle_fix (moebius_rotation (- pi / 2)) \\<Longrightarrow>\n  is_poincare_line (moebius_circline (moebius_rotation (- pi / 2)) H)\n\ngoal (1 subgoal):\n 1. is_poincare_line (moebius_circline (moebius_rotation (- pi / 2)) H)", "by simp"], ["proof (state)\nthis:\n  is_poincare_line (moebius_circline (moebius_rotation (- pi / 2)) H)\n\ngoal (1 subgoal):\n 1. (\\<exists>y\\<in>unit_disc.\n        y \\<in> circline_set H \\<inter> positive_y_axis) =\n    intersects_y_axis_positive H", "have 2: \"moebius_circline ?R H \\<noteq> x_axis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_circline (moebius_rotation (- pi / 2)) H \\<noteq> x_axis", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> moebius_circline (moebius_rotation (- pi / 2)) H \\<noteq>\n           x_axis \\<Longrightarrow>\n    False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> moebius_circline (moebius_rotation (- pi / 2)) H \\<noteq> x_axis\n\ngoal (1 subgoal):\n 1. \\<not> moebius_circline (moebius_rotation (- pi / 2)) H \\<noteq>\n           x_axis \\<Longrightarrow>\n    False", "hence \"H = moebius_circline (moebius_rotation (pi/2)) x_axis\""], ["proof (prove)\nusing this:\n  \\<not> moebius_circline (moebius_rotation (- pi / 2)) H \\<noteq> x_axis\n\ngoal (1 subgoal):\n 1. H = moebius_circline (moebius_rotation (pi / 2)) x_axis", "using moebius_circline_comp_inv_left[of ?R H]"], ["proof (prove)\nusing this:\n  \\<not> moebius_circline (moebius_rotation (- pi / 2)) H \\<noteq> x_axis\n  moebius_circline (moebius_inv (moebius_rotation (- pi / 2)))\n   (moebius_circline (moebius_rotation (- pi / 2)) H) =\n  H\n\ngoal (1 subgoal):\n 1. H = moebius_circline (moebius_rotation (pi / 2)) x_axis", "by auto"], ["proof (state)\nthis:\n  H = moebius_circline (moebius_rotation (pi / 2)) x_axis\n\ngoal (1 subgoal):\n 1. \\<not> moebius_circline (moebius_rotation (- pi / 2)) H \\<noteq>\n           x_axis \\<Longrightarrow>\n    False", "thus False"], ["proof (prove)\nusing this:\n  H = moebius_circline (moebius_rotation (pi / 2)) x_axis\n\ngoal (1 subgoal):\n 1. False", "using \\<open>H \\<noteq> y_axis\\<close>"], ["proof (prove)\nusing this:\n  H = moebius_circline (moebius_rotation (pi / 2)) x_axis\n  H \\<noteq> y_axis\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  moebius_circline (moebius_rotation (- pi / 2)) H \\<noteq> x_axis\n\ngoal (1 subgoal):\n 1. (\\<exists>y\\<in>unit_disc.\n        y \\<in> circline_set H \\<inter> positive_y_axis) =\n    intersects_y_axis_positive H", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>y\\<in>unit_disc.\n        y \\<in> circline_set H \\<inter> positive_y_axis) =\n    intersects_y_axis_positive H", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>y\\<in>unit_disc.\n       y \\<in> circline_set H \\<inter> positive_y_axis \\<Longrightarrow>\n    intersects_y_axis_positive H\n 2. intersects_y_axis_positive H \\<Longrightarrow>\n    \\<exists>y\\<in>unit_disc.\n       y \\<in> circline_set H \\<inter> positive_y_axis", "assume \"?lhs\""], ["proof (state)\nthis:\n  \\<exists>y\\<in>unit_disc. y \\<in> circline_set H \\<inter> positive_y_axis\n\ngoal (2 subgoals):\n 1. \\<exists>y\\<in>unit_disc.\n       y \\<in> circline_set H \\<inter> positive_y_axis \\<Longrightarrow>\n    intersects_y_axis_positive H\n 2. intersects_y_axis_positive H \\<Longrightarrow>\n    \\<exists>y\\<in>unit_disc.\n       y \\<in> circline_set H \\<inter> positive_y_axis", "then"], ["proof (chain)\npicking this:\n  \\<exists>y\\<in>unit_disc. y \\<in> circline_set H \\<inter> positive_y_axis", "obtain y where \"y \\<in> unit_disc\" \"y \\<in> circline_set H \\<inter> positive_y_axis\""], ["proof (prove)\nusing this:\n  \\<exists>y\\<in>unit_disc. y \\<in> circline_set H \\<inter> positive_y_axis\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> unit_disc;\n         y \\<in> circline_set H \\<inter> positive_y_axis\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  y \\<in> unit_disc\n  y \\<in> circline_set H \\<inter> positive_y_axis\n\ngoal (2 subgoals):\n 1. \\<exists>y\\<in>unit_disc.\n       y \\<in> circline_set H \\<inter> positive_y_axis \\<Longrightarrow>\n    intersects_y_axis_positive H\n 2. intersects_y_axis_positive H \\<Longrightarrow>\n    \\<exists>y\\<in>unit_disc.\n       y \\<in> circline_set H \\<inter> positive_y_axis", "hence \"moebius_pt ?R y \\<in> unit_disc\" \"moebius_pt ?R y \\<in> circline_set ?H' \\<inter> positive_x_axis\""], ["proof (prove)\nusing this:\n  y \\<in> unit_disc\n  y \\<in> circline_set H \\<inter> positive_y_axis\n\ngoal (1 subgoal):\n 1. moebius_pt (moebius_rotation (- pi / 2)) y \\<in> unit_disc &&&\n    moebius_pt (moebius_rotation (- pi / 2)) y\n    \\<in> circline_set\n           (moebius_circline (moebius_rotation (- pi / 2)) H) \\<inter>\n          positive_x_axis", "using rotation_minus_pi_2_positive_y_axis"], ["proof (prove)\nusing this:\n  y \\<in> unit_disc\n  y \\<in> circline_set H \\<inter> positive_y_axis\n  moebius_pt (moebius_rotation (- pi / 2)) ` positive_y_axis =\n  positive_x_axis\n\ngoal (1 subgoal):\n 1. moebius_pt (moebius_rotation (- pi / 2)) y \\<in> unit_disc &&&\n    moebius_pt (moebius_rotation (- pi / 2)) y\n    \\<in> circline_set\n           (moebius_circline (moebius_rotation (- pi / 2)) H) \\<inter>\n          positive_x_axis", "by auto"], ["proof (state)\nthis:\n  moebius_pt (moebius_rotation (- pi / 2)) y \\<in> unit_disc\n  moebius_pt (moebius_rotation (- pi / 2)) y\n  \\<in> circline_set\n         (moebius_circline (moebius_rotation (- pi / 2)) H) \\<inter>\n        positive_x_axis\n\ngoal (2 subgoals):\n 1. \\<exists>y\\<in>unit_disc.\n       y \\<in> circline_set H \\<inter> positive_y_axis \\<Longrightarrow>\n    intersects_y_axis_positive H\n 2. intersects_y_axis_positive H \\<Longrightarrow>\n    \\<exists>y\\<in>unit_disc.\n       y \\<in> circline_set H \\<inter> positive_y_axis", "thus ?rhs"], ["proof (prove)\nusing this:\n  moebius_pt (moebius_rotation (- pi / 2)) y \\<in> unit_disc\n  moebius_pt (moebius_rotation (- pi / 2)) y\n  \\<in> circline_set\n         (moebius_circline (moebius_rotation (- pi / 2)) H) \\<inter>\n        positive_x_axis\n\ngoal (1 subgoal):\n 1. intersects_y_axis_positive H", "using intersects_x_axis_positive_iff[OF 1 2]"], ["proof (prove)\nusing this:\n  moebius_pt (moebius_rotation (- pi / 2)) y \\<in> unit_disc\n  moebius_pt (moebius_rotation (- pi / 2)) y\n  \\<in> circline_set\n         (moebius_circline (moebius_rotation (- pi / 2)) H) \\<inter>\n        positive_x_axis\n  intersects_x_axis_positive\n   (moebius_circline (moebius_rotation (- pi / 2)) H) =\n  (\\<exists>x.\n      x \\<in> unit_disc \\<and>\n      x \\<in> circline_set\n               (moebius_circline (moebius_rotation (- pi / 2)) H) \\<inter>\n              positive_x_axis)\n\ngoal (1 subgoal):\n 1. intersects_y_axis_positive H", "using intersects_x_axis_positive_intersects_y_axis_positive[of H]"], ["proof (prove)\nusing this:\n  moebius_pt (moebius_rotation (- pi / 2)) y \\<in> unit_disc\n  moebius_pt (moebius_rotation (- pi / 2)) y\n  \\<in> circline_set\n         (moebius_circline (moebius_rotation (- pi / 2)) H) \\<inter>\n        positive_x_axis\n  intersects_x_axis_positive\n   (moebius_circline (moebius_rotation (- pi / 2)) H) =\n  (\\<exists>x.\n      x \\<in> unit_disc \\<and>\n      x \\<in> circline_set\n               (moebius_circline (moebius_rotation (- pi / 2)) H) \\<inter>\n              positive_x_axis)\n  intersects_x_axis_positive\n   (moebius_circline (moebius_rotation (- pi / 2)) H) =\n  intersects_y_axis_positive H\n\ngoal (1 subgoal):\n 1. intersects_y_axis_positive H", "by auto"], ["proof (state)\nthis:\n  intersects_y_axis_positive H\n\ngoal (1 subgoal):\n 1. intersects_y_axis_positive H \\<Longrightarrow>\n    \\<exists>y\\<in>unit_disc.\n       y \\<in> circline_set H \\<inter> positive_y_axis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. intersects_y_axis_positive H \\<Longrightarrow>\n    \\<exists>y\\<in>unit_disc.\n       y \\<in> circline_set H \\<inter> positive_y_axis", "assume \"intersects_y_axis_positive H\""], ["proof (state)\nthis:\n  intersects_y_axis_positive H\n\ngoal (1 subgoal):\n 1. intersects_y_axis_positive H \\<Longrightarrow>\n    \\<exists>y\\<in>unit_disc.\n       y \\<in> circline_set H \\<inter> positive_y_axis", "hence \"intersects_x_axis_positive ?H'\""], ["proof (prove)\nusing this:\n  intersects_y_axis_positive H\n\ngoal (1 subgoal):\n 1. intersects_x_axis_positive\n     (moebius_circline (moebius_rotation (- pi / 2)) H)", "using intersects_x_axis_positive_intersects_y_axis_positive[of H]"], ["proof (prove)\nusing this:\n  intersects_y_axis_positive H\n  intersects_x_axis_positive\n   (moebius_circline (moebius_rotation (- pi / 2)) H) =\n  intersects_y_axis_positive H\n\ngoal (1 subgoal):\n 1. intersects_x_axis_positive\n     (moebius_circline (moebius_rotation (- pi / 2)) H)", "by simp"], ["proof (state)\nthis:\n  intersects_x_axis_positive\n   (moebius_circline (moebius_rotation (- pi / 2)) H)\n\ngoal (1 subgoal):\n 1. intersects_y_axis_positive H \\<Longrightarrow>\n    \\<exists>y\\<in>unit_disc.\n       y \\<in> circline_set H \\<inter> positive_y_axis", "then"], ["proof (chain)\npicking this:\n  intersects_x_axis_positive\n   (moebius_circline (moebius_rotation (- pi / 2)) H)", "obtain x where *: \"x \\<in> unit_disc\" \"x \\<in> circline_set ?H' \\<inter> positive_x_axis\""], ["proof (prove)\nusing this:\n  intersects_x_axis_positive\n   (moebius_circline (moebius_rotation (- pi / 2)) H)\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> unit_disc;\n         x \\<in> circline_set\n                  (moebius_circline (moebius_rotation (- pi / 2))\n                    H) \\<inter>\n                 positive_x_axis\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using intersects_x_axis_positive_iff[OF 1 2]"], ["proof (prove)\nusing this:\n  intersects_x_axis_positive\n   (moebius_circline (moebius_rotation (- pi / 2)) H)\n  intersects_x_axis_positive\n   (moebius_circline (moebius_rotation (- pi / 2)) H) =\n  (\\<exists>x.\n      x \\<in> unit_disc \\<and>\n      x \\<in> circline_set\n               (moebius_circline (moebius_rotation (- pi / 2)) H) \\<inter>\n              positive_x_axis)\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> unit_disc;\n         x \\<in> circline_set\n                  (moebius_circline (moebius_rotation (- pi / 2))\n                    H) \\<inter>\n                 positive_x_axis\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> unit_disc\n  x \\<in> circline_set\n           (moebius_circline (moebius_rotation (- pi / 2)) H) \\<inter>\n          positive_x_axis\n\ngoal (1 subgoal):\n 1. intersects_y_axis_positive H \\<Longrightarrow>\n    \\<exists>y\\<in>unit_disc.\n       y \\<in> circline_set H \\<inter> positive_y_axis", "let ?y = \"moebius_pt (-?R) x\""], ["proof (state)\ngoal (1 subgoal):\n 1. intersects_y_axis_positive H \\<Longrightarrow>\n    \\<exists>y\\<in>unit_disc.\n       y \\<in> circline_set H \\<inter> positive_y_axis", "have \"?y \\<in> unit_disc \\<and> ?y \\<in> circline_set H \\<inter> positive_y_axis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. moebius_pt (- moebius_rotation (- pi / 2)) x \\<in> unit_disc \\<and>\n    moebius_pt (- moebius_rotation (- pi / 2)) x\n    \\<in> circline_set H \\<inter> positive_y_axis", "using * rotation_minus_pi_2_positive_y_axis[symmetric]"], ["proof (prove)\nusing this:\n  x \\<in> unit_disc\n  x \\<in> circline_set\n           (moebius_circline (moebius_rotation (- pi / 2)) H) \\<inter>\n          positive_x_axis\n  positive_x_axis =\n  moebius_pt (moebius_rotation (- pi / 2)) ` positive_y_axis\n\ngoal (1 subgoal):\n 1. moebius_pt (- moebius_rotation (- pi / 2)) x \\<in> unit_disc \\<and>\n    moebius_pt (- moebius_rotation (- pi / 2)) x\n    \\<in> circline_set H \\<inter> positive_y_axis", "by (metis Int_iff circline_set_moebius_circline_E image_eqI moebius_pt_comp_inv_image_left moebius_rotation_uminus uminus_moebius_def unit_disc_fix_discI unit_disc_fix_rotation)"], ["proof (state)\nthis:\n  moebius_pt (- moebius_rotation (- pi / 2)) x \\<in> unit_disc \\<and>\n  moebius_pt (- moebius_rotation (- pi / 2)) x\n  \\<in> circline_set H \\<inter> positive_y_axis\n\ngoal (1 subgoal):\n 1. intersects_y_axis_positive H \\<Longrightarrow>\n    \\<exists>y\\<in>unit_disc.\n       y \\<in> circline_set H \\<inter> positive_y_axis", "thus ?lhs"], ["proof (prove)\nusing this:\n  moebius_pt (- moebius_rotation (- pi / 2)) x \\<in> unit_disc \\<and>\n  moebius_pt (- moebius_rotation (- pi / 2)) x\n  \\<in> circline_set H \\<inter> positive_y_axis\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>unit_disc.\n       y \\<in> circline_set H \\<inter> positive_y_axis", "by auto"], ["proof (state)\nthis:\n  \\<exists>y\\<in>unit_disc. y \\<in> circline_set H \\<inter> positive_y_axis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>y\\<in>unit_disc.\n      y \\<in> circline_set H \\<inter> positive_y_axis) =\n  intersects_y_axis_positive H\n\ngoal:\nNo subgoals!", "qed"], ["", "(* ------------------------------------------------------------------ *)"], ["", "subsection\\<open>Position of the intersection point in the unit disc\\<close>"], ["", "(* ------------------------------------------------------------------ *)"], ["", "text\\<open>Check if the intersection point of one h-line with the x-axis is located more outward the edge\nof the disc than the intersection point of another h-line.\\<close>"], ["", "definition outward_cmat :: \"complex_mat \\<Rightarrow> complex_mat \\<Rightarrow> bool\" where\n [simp]: \"outward_cmat H1 H2 = (let (A1, B1, C1, D1) = H1; (A2, B2, C2, D2) = H2\n                                 in -Re B1/Re A1 \\<le> -Re B2/Re A2)\""], ["", "lift_definition outward_clmat :: \"circline_mat \\<Rightarrow> circline_mat \\<Rightarrow> bool\" is outward_cmat"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lift_definition outward :: \"circline \\<Rightarrow> circline \\<Rightarrow> bool\" is outward_clmat"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2 circline_mat3 circline_mat4.\n       \\<lbrakk>circline_eq_clmat circline_mat1 circline_mat2;\n        circline_eq_clmat circline_mat3 circline_mat4\\<rbrakk>\n       \\<Longrightarrow> outward_clmat circline_mat1 circline_mat3 =\n                         outward_clmat circline_mat2 circline_mat4", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2 circline_mat3 circline_mat4.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> mat_zero;\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> mat_zero;\n        hermitean circline_mat3 \\<and> circline_mat3 \\<noteq> mat_zero;\n        hermitean circline_mat4 \\<and> circline_mat4 \\<noteq> mat_zero;\n        circline_eq_cmat circline_mat1 circline_mat2;\n        circline_eq_cmat circline_mat3 circline_mat4\\<rbrakk>\n       \\<Longrightarrow> outward_cmat circline_mat1 circline_mat3 =\n                         outward_cmat circline_mat2 circline_mat4", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2 circline_mat3 circline_mat4.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> (0, 0, 0, 0);\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> (0, 0, 0, 0);\n        hermitean circline_mat3 \\<and> circline_mat3 \\<noteq> (0, 0, 0, 0);\n        hermitean circline_mat4 \\<and> circline_mat4 \\<noteq> (0, 0, 0, 0);\n        \\<exists>k.\n           k \\<noteq> 0 \\<and>\n           circline_mat2 = cor k *\\<^sub>s\\<^sub>m circline_mat1;\n        \\<exists>k.\n           k \\<noteq> 0 \\<and>\n           circline_mat4 = cor k *\\<^sub>s\\<^sub>m circline_mat3\\<rbrakk>\n       \\<Longrightarrow> (case circline_mat1 of\n                          (A1, B1, C1, D1) \\<Rightarrow>\n                            case circline_mat3 of\n                            (A2, B2, C2, D2) \\<Rightarrow>\n                              Re B2 / Re A2 \\<le> Re B1 / Re A1) =\n                         (case circline_mat2 of\n                          (A1, B1, C1, D1) \\<Rightarrow>\n                            case circline_mat4 of\n                            (A2, B2, C2, D2) \\<Rightarrow>\n                              Re B2 / Re A2 \\<le> Re B1 / Re A1)", "apply (case_tac circline_mat1, case_tac circline_mat2, case_tac circline_mat3, case_tac circline_mat4)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2 circline_mat3 circline_mat4 a b c d aa\n       ba ca da ab bb cb db ac bc cc dc.\n       \\<lbrakk>hermitean circline_mat1 \\<and>\n                circline_mat1 \\<noteq> (0, 0, 0, 0);\n        hermitean circline_mat2 \\<and> circline_mat2 \\<noteq> (0, 0, 0, 0);\n        hermitean circline_mat3 \\<and> circline_mat3 \\<noteq> (0, 0, 0, 0);\n        hermitean circline_mat4 \\<and> circline_mat4 \\<noteq> (0, 0, 0, 0);\n        \\<exists>k.\n           k \\<noteq> 0 \\<and>\n           circline_mat2 = cor k *\\<^sub>s\\<^sub>m circline_mat1;\n        \\<exists>k.\n           k \\<noteq> 0 \\<and>\n           circline_mat4 = cor k *\\<^sub>s\\<^sub>m circline_mat3;\n        circline_mat1 = (a, b, c, d); circline_mat2 = (aa, ba, ca, da);\n        circline_mat3 = (ab, bb, cb, db);\n        circline_mat4 = (ac, bc, cc, dc)\\<rbrakk>\n       \\<Longrightarrow> (case circline_mat1 of\n                          (A1, B1, C1, D1) \\<Rightarrow>\n                            case circline_mat3 of\n                            (A2, B2, C2, D2) \\<Rightarrow>\n                              Re B2 / Re A2 \\<le> Re B1 / Re A1) =\n                         (case circline_mat2 of\n                          (A1, B1, C1, D1) \\<Rightarrow>\n                            case circline_mat4 of\n                            (A2, B2, C2, D2) \\<Rightarrow>\n                              Re B2 / Re A2 \\<le> Re B1 / Re A1)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2 circline_mat3 circline_mat4 a b c d aa\n       ba ca da ab bb cb db ac bc cc dc.\n       \\<lbrakk>hermitean (a, b, c, d) \\<and>\n                (c = 0 \\<longrightarrow>\n                 b = 0 \\<longrightarrow>\n                 a = 0 \\<longrightarrow> d \\<noteq> 0);\n        hermitean (aa, ba, ca, da) \\<and>\n        (ca = 0 \\<longrightarrow>\n         ba = 0 \\<longrightarrow> aa = 0 \\<longrightarrow> da \\<noteq> 0);\n        hermitean (ab, bb, cb, db) \\<and>\n        (cb = 0 \\<longrightarrow>\n         bb = 0 \\<longrightarrow> ab = 0 \\<longrightarrow> db \\<noteq> 0);\n        hermitean (ac, bc, cc, dc) \\<and>\n        (cc = 0 \\<longrightarrow>\n         bc = 0 \\<longrightarrow> ac = 0 \\<longrightarrow> dc \\<noteq> 0);\n        \\<exists>k.\n           k \\<noteq> 0 \\<and>\n           aa = cor k * a \\<and>\n           ba = cor k * b \\<and> ca = cor k * c \\<and> da = cor k * d;\n        \\<exists>k.\n           k \\<noteq> 0 \\<and>\n           ac = cor k * ab \\<and>\n           bc = cor k * bb \\<and> cc = cor k * cb \\<and> dc = cor k * db;\n        circline_mat1 = (a, b, c, d); circline_mat2 = (aa, ba, ca, da);\n        circline_mat3 = (ab, bb, cb, db);\n        circline_mat4 = (ac, bc, cc, dc)\\<rbrakk>\n       \\<Longrightarrow> (Re bb / Re ab \\<le> Re b / Re a) =\n                         (Re bc / Re ac \\<le> Re ba / Re aa)", "apply (erule_tac exE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2 circline_mat3 circline_mat4 a b c d aa\n       ba ca da ab bb cb db ac bc cc dc k ka.\n       \\<lbrakk>hermitean (a, b, c, d) \\<and>\n                (c = 0 \\<longrightarrow>\n                 b = 0 \\<longrightarrow>\n                 a = 0 \\<longrightarrow> d \\<noteq> 0);\n        hermitean (aa, ba, ca, da) \\<and>\n        (ca = 0 \\<longrightarrow>\n         ba = 0 \\<longrightarrow> aa = 0 \\<longrightarrow> da \\<noteq> 0);\n        hermitean (ab, bb, cb, db) \\<and>\n        (cb = 0 \\<longrightarrow>\n         bb = 0 \\<longrightarrow> ab = 0 \\<longrightarrow> db \\<noteq> 0);\n        hermitean (ac, bc, cc, dc) \\<and>\n        (cc = 0 \\<longrightarrow>\n         bc = 0 \\<longrightarrow> ac = 0 \\<longrightarrow> dc \\<noteq> 0);\n        circline_mat1 = (a, b, c, d); circline_mat2 = (aa, ba, ca, da);\n        circline_mat3 = (ab, bb, cb, db); circline_mat4 = (ac, bc, cc, dc);\n        k \\<noteq> 0 \\<and>\n        aa = cor k * a \\<and>\n        ba = cor k * b \\<and> ca = cor k * c \\<and> da = cor k * d;\n        ka \\<noteq> 0 \\<and>\n        ac = cor ka * ab \\<and>\n        bc = cor ka * bb \\<and>\n        cc = cor ka * cb \\<and> dc = cor ka * db\\<rbrakk>\n       \\<Longrightarrow> (Re bb / Re ab \\<le> Re b / Re a) =\n                         (Re bc / Re ac \\<le> Re ba / Re aa)", "apply (erule_tac conjE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>circline_mat1 circline_mat2 circline_mat3 circline_mat4 a b c d aa\n       ba ca da ab bb cb db ac bc cc dc k ka.\n       \\<lbrakk>circline_mat1 = (a, b, c, d);\n        circline_mat2 = (aa, ba, ca, da); circline_mat3 = (ab, bb, cb, db);\n        circline_mat4 = (ac, bc, cc, dc); hermitean (a, b, c, d);\n        c = 0 \\<longrightarrow>\n        b = 0 \\<longrightarrow> a = 0 \\<longrightarrow> d \\<noteq> 0;\n        hermitean (aa, ba, ca, da);\n        ca = 0 \\<longrightarrow>\n        ba = 0 \\<longrightarrow> aa = 0 \\<longrightarrow> da \\<noteq> 0;\n        hermitean (ab, bb, cb, db);\n        cb = 0 \\<longrightarrow>\n        bb = 0 \\<longrightarrow> ab = 0 \\<longrightarrow> db \\<noteq> 0;\n        hermitean (ac, bc, cc, dc);\n        cc = 0 \\<longrightarrow>\n        bc = 0 \\<longrightarrow> ac = 0 \\<longrightarrow> dc \\<noteq> 0;\n        k \\<noteq> 0; ka \\<noteq> 0; aa = cor k * a; ac = cor ka * ab;\n        ba = cor k * b; bc = cor ka * bb; ca = cor k * c; da = cor k * d;\n        cc = cor ka * cb; dc = cor ka * db\\<rbrakk>\n       \\<Longrightarrow> (Re bb / Re ab \\<le> Re b / Re a) =\n                         (Re bc / Re ac \\<le> Re ba / Re aa)", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma outward_mk_circline:\n  assumes \"is_real A1\" and \"is_real A2\" and \"A1 \\<noteq> 0 \\<or> B1 \\<noteq> 0\" and \"A2 \\<noteq> 0 \\<or> B2 \\<noteq> 0\" \n  shows \"outward (mk_circline A1 B1 (cnj B1) A1) (mk_circline A2 B2 (cnj B2) A2) \\<longleftrightarrow> - Re B1 / Re A1 \\<le> - Re B2 / Re A2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. outward (mk_circline A1 B1 (cnj B1) A1)\n     (mk_circline A2 B2 (cnj B2) A2) =\n    (- Re B1 / Re A1 \\<le> - Re B2 / Re A2)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. outward (mk_circline A1 B1 (cnj B1) A1)\n     (mk_circline A2 B2 (cnj B2) A2) =\n    (- Re B1 / Re A1 \\<le> - Re B2 / Re A2)", "let ?H1 = \"(A1, B1, (cnj B1),  A1)\""], ["proof (state)\ngoal (1 subgoal):\n 1. outward (mk_circline A1 B1 (cnj B1) A1)\n     (mk_circline A2 B2 (cnj B2) A2) =\n    (- Re B1 / Re A1 \\<le> - Re B2 / Re A2)", "let ?H2 = \"(A2, B2, (cnj B2),  A2)\""], ["proof (state)\ngoal (1 subgoal):\n 1. outward (mk_circline A1 B1 (cnj B1) A1)\n     (mk_circline A2 B2 (cnj B2) A2) =\n    (- Re B1 / Re A1 \\<le> - Re B2 / Re A2)", "have \"hermitean ?H1\" \"hermitean ?H2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hermitean (A1, B1, cnj B1, A1) &&& hermitean (A2, B2, cnj B2, A2)", "using \\<open>is_real A1\\<close> \\<open>is_real A2\\<close>"], ["proof (prove)\nusing this:\n  is_real A1\n  is_real A2\n\ngoal (1 subgoal):\n 1. hermitean (A1, B1, cnj B1, A1) &&& hermitean (A2, B2, cnj B2, A2)", "unfolding hermitean_def mat_adj_def mat_cnj_def"], ["proof (prove)\nusing this:\n  is_real A1\n  is_real A2\n\ngoal (1 subgoal):\n 1. mat_map cnj (mat_transpose (A1, B1, cnj B1, A1)) =\n    (A1, B1, cnj B1, A1) &&&\n    mat_map cnj (mat_transpose (A2, B2, cnj B2, A2)) = (A2, B2, cnj B2, A2)", "using eq_cnj_iff_real"], ["proof (prove)\nusing this:\n  is_real A1\n  is_real A2\n  (cnj ?z = ?z) = is_real ?z\n\ngoal (1 subgoal):\n 1. mat_map cnj (mat_transpose (A1, B1, cnj B1, A1)) =\n    (A1, B1, cnj B1, A1) &&&\n    mat_map cnj (mat_transpose (A2, B2, cnj B2, A2)) = (A2, B2, cnj B2, A2)", "by auto"], ["proof (state)\nthis:\n  hermitean (A1, B1, cnj B1, A1)\n  hermitean (A2, B2, cnj B2, A2)\n\ngoal (1 subgoal):\n 1. outward (mk_circline A1 B1 (cnj B1) A1)\n     (mk_circline A2 B2 (cnj B2) A2) =\n    (- Re B1 / Re A1 \\<le> - Re B2 / Re A2)", "moreover"], ["proof (state)\nthis:\n  hermitean (A1, B1, cnj B1, A1)\n  hermitean (A2, B2, cnj B2, A2)\n\ngoal (1 subgoal):\n 1. outward (mk_circline A1 B1 (cnj B1) A1)\n     (mk_circline A2 B2 (cnj B2) A2) =\n    (- Re B1 / Re A1 \\<le> - Re B2 / Re A2)", "have \"?H1 \\<noteq> mat_zero\" \"?H2 \\<noteq> mat_zero\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A1, B1, cnj B1, A1) \\<noteq> mat_zero &&&\n    (A2, B2, cnj B2, A2) \\<noteq> mat_zero", "using assms"], ["proof (prove)\nusing this:\n  is_real A1\n  is_real A2\n  A1 \\<noteq> 0 \\<or> B1 \\<noteq> 0\n  A2 \\<noteq> 0 \\<or> B2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (A1, B1, cnj B1, A1) \\<noteq> mat_zero &&&\n    (A2, B2, cnj B2, A2) \\<noteq> mat_zero", "by auto"], ["proof (state)\nthis:\n  (A1, B1, cnj B1, A1) \\<noteq> mat_zero\n  (A2, B2, cnj B2, A2) \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. outward (mk_circline A1 B1 (cnj B1) A1)\n     (mk_circline A2 B2 (cnj B2) A2) =\n    (- Re B1 / Re A1 \\<le> - Re B2 / Re A2)", "ultimately"], ["proof (chain)\npicking this:\n  hermitean (A1, B1, cnj B1, A1)\n  hermitean (A2, B2, cnj B2, A2)\n  (A1, B1, cnj B1, A1) \\<noteq> mat_zero\n  (A2, B2, cnj B2, A2) \\<noteq> mat_zero", "show ?thesis"], ["proof (prove)\nusing this:\n  hermitean (A1, B1, cnj B1, A1)\n  hermitean (A2, B2, cnj B2, A2)\n  (A1, B1, cnj B1, A1) \\<noteq> mat_zero\n  (A2, B2, cnj B2, A2) \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. outward (mk_circline A1 B1 (cnj B1) A1)\n     (mk_circline A2 B2 (cnj B2) A2) =\n    (- Re B1 / Re A1 \\<le> - Re B2 / Re A2)", "by (transfer, transfer, auto simp add: Let_def)"], ["proof (state)\nthis:\n  outward (mk_circline A1 B1 (cnj B1) A1) (mk_circline A2 B2 (cnj B2) A2) =\n  (- Re B1 / Re A1 \\<le> - Re B2 / Re A2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma calc_x_axis_intersection_fun_mono:\n  fixes x1 x2 :: real\n  assumes \"x1 > 1\" and \"x2 > x1\"\n  shows \"x1 - sqrt(x1\\<^sup>2 - 1) > x2 - sqrt(x2\\<^sup>2 - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x2 - sqrt (x2\\<^sup>2 - 1) < x1 - sqrt (x1\\<^sup>2 - 1)", "using assms"], ["proof (prove)\nusing this:\n  1 < x1\n  x1 < x2\n\ngoal (1 subgoal):\n 1. x2 - sqrt (x2\\<^sup>2 - 1) < x1 - sqrt (x1\\<^sup>2 - 1)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < x1; x1 < x2\\<rbrakk>\n    \\<Longrightarrow> x2 - sqrt (x2\\<^sup>2 - 1)\n                      < x1 - sqrt (x1\\<^sup>2 - 1)", "have *: \"sqrt(x1\\<^sup>2 - 1) + sqrt(x2\\<^sup>2 - 1) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1)", "using assms"], ["proof (prove)\nusing this:\n  1 < x1\n  x1 < x2\n\ngoal (1 subgoal):\n 1. 0 < sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1)", "by (smt one_less_power pos2 real_sqrt_gt_zero)"], ["proof (state)\nthis:\n  0 < sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < x1; x1 < x2\\<rbrakk>\n    \\<Longrightarrow> x2 - sqrt (x2\\<^sup>2 - 1)\n                      < x1 - sqrt (x1\\<^sup>2 - 1)", "have \"sqrt(x1\\<^sup>2 - 1) < x1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (x1\\<^sup>2 - 1) < x1", "using real_sqrt_less_iff[of \"x1\\<^sup>2 - 1\" \"x1\\<^sup>2\"] \\<open>x1 > 1\\<close>"], ["proof (prove)\nusing this:\n  (sqrt (x1\\<^sup>2 - 1) < sqrt (x1\\<^sup>2)) =\n  (x1\\<^sup>2 - 1 < x1\\<^sup>2)\n  1 < x1\n\ngoal (1 subgoal):\n 1. sqrt (x1\\<^sup>2 - 1) < x1", "by auto"], ["proof (state)\nthis:\n  sqrt (x1\\<^sup>2 - 1) < x1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < x1; x1 < x2\\<rbrakk>\n    \\<Longrightarrow> x2 - sqrt (x2\\<^sup>2 - 1)\n                      < x1 - sqrt (x1\\<^sup>2 - 1)", "moreover"], ["proof (state)\nthis:\n  sqrt (x1\\<^sup>2 - 1) < x1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < x1; x1 < x2\\<rbrakk>\n    \\<Longrightarrow> x2 - sqrt (x2\\<^sup>2 - 1)\n                      < x1 - sqrt (x1\\<^sup>2 - 1)", "have \"sqrt(x2\\<^sup>2 - 1) < x2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (x2\\<^sup>2 - 1) < x2", "using real_sqrt_less_iff[of \"x2\\<^sup>2 - 1\" \"x2\\<^sup>2\"] \\<open>x1 > 1\\<close> \\<open>x2 > x1\\<close>"], ["proof (prove)\nusing this:\n  (sqrt (x2\\<^sup>2 - 1) < sqrt (x2\\<^sup>2)) =\n  (x2\\<^sup>2 - 1 < x2\\<^sup>2)\n  1 < x1\n  x1 < x2\n\ngoal (1 subgoal):\n 1. sqrt (x2\\<^sup>2 - 1) < x2", "by auto"], ["proof (state)\nthis:\n  sqrt (x2\\<^sup>2 - 1) < x2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < x1; x1 < x2\\<rbrakk>\n    \\<Longrightarrow> x2 - sqrt (x2\\<^sup>2 - 1)\n                      < x1 - sqrt (x1\\<^sup>2 - 1)", "ultimately"], ["proof (chain)\npicking this:\n  sqrt (x1\\<^sup>2 - 1) < x1\n  sqrt (x2\\<^sup>2 - 1) < x2", "have \"sqrt(x1\\<^sup>2 - 1) + sqrt(x2\\<^sup>2 - 1) < x1 + x2\""], ["proof (prove)\nusing this:\n  sqrt (x1\\<^sup>2 - 1) < x1\n  sqrt (x2\\<^sup>2 - 1) < x2\n\ngoal (1 subgoal):\n 1. sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1) < x1 + x2", "by simp"], ["proof (state)\nthis:\n  sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1) < x1 + x2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < x1; x1 < x2\\<rbrakk>\n    \\<Longrightarrow> x2 - sqrt (x2\\<^sup>2 - 1)\n                      < x1 - sqrt (x1\\<^sup>2 - 1)", "hence \"(x1 + x2) / (sqrt(x1\\<^sup>2 - 1) + sqrt(x2\\<^sup>2 - 1)) > 1\""], ["proof (prove)\nusing this:\n  sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1) < x1 + x2\n\ngoal (1 subgoal):\n 1. 1 < (x1 + x2) / (sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1))", "using *"], ["proof (prove)\nusing this:\n  sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1) < x1 + x2\n  0 < sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. 1 < (x1 + x2) / (sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1))", "using less_divide_eq_1_pos[of \"sqrt(x1\\<^sup>2 - 1) + sqrt(x2\\<^sup>2 - 1)\" \"x1 + x2\"]"], ["proof (prove)\nusing this:\n  sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1) < x1 + x2\n  0 < sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1)\n  0 < sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1) \\<Longrightarrow>\n  (1 < (x1 + x2) / (sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1))) =\n  (sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1) < x1 + x2)\n\ngoal (1 subgoal):\n 1. 1 < (x1 + x2) / (sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1))", "by simp"], ["proof (state)\nthis:\n  1 < (x1 + x2) / (sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < x1; x1 < x2\\<rbrakk>\n    \\<Longrightarrow> x2 - sqrt (x2\\<^sup>2 - 1)\n                      < x1 - sqrt (x1\\<^sup>2 - 1)", "hence \"(x2\\<^sup>2 - x1\\<^sup>2) / (sqrt(x1\\<^sup>2 - 1) + sqrt(x2\\<^sup>2 - 1)) > x2 - x1\""], ["proof (prove)\nusing this:\n  1 < (x1 + x2) / (sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1))\n\ngoal (1 subgoal):\n 1. x2 - x1\n    < (x2\\<^sup>2 - x1\\<^sup>2) /\n      (sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1))", "using \\<open>x2 > x1\\<close>"], ["proof (prove)\nusing this:\n  1 < (x1 + x2) / (sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1))\n  x1 < x2\n\ngoal (1 subgoal):\n 1. x2 - x1\n    < (x2\\<^sup>2 - x1\\<^sup>2) /\n      (sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1))", "using mult_less_cancel_left_pos[of \"x2 - x1\" 1 \"(x2 + x1) / (sqrt(x1\\<^sup>2 - 1) + sqrt(x2\\<^sup>2 - 1))\"]"], ["proof (prove)\nusing this:\n  1 < (x1 + x2) / (sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1))\n  x1 < x2\n  0 < x2 - x1 \\<Longrightarrow>\n  ((x2 - x1) * 1\n   < (x2 - x1) *\n     ((x2 + x1) / (sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1)))) =\n  (1 < (x2 + x1) / (sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1)))\n\ngoal (1 subgoal):\n 1. x2 - x1\n    < (x2\\<^sup>2 - x1\\<^sup>2) /\n      (sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1))", "by (simp add: power2_eq_square field_simps)"], ["proof (state)\nthis:\n  x2 - x1\n  < (x2\\<^sup>2 - x1\\<^sup>2) /\n    (sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < x1; x1 < x2\\<rbrakk>\n    \\<Longrightarrow> x2 - sqrt (x2\\<^sup>2 - 1)\n                      < x1 - sqrt (x1\\<^sup>2 - 1)", "moreover"], ["proof (state)\nthis:\n  x2 - x1\n  < (x2\\<^sup>2 - x1\\<^sup>2) /\n    (sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < x1; x1 < x2\\<rbrakk>\n    \\<Longrightarrow> x2 - sqrt (x2\\<^sup>2 - 1)\n                      < x1 - sqrt (x1\\<^sup>2 - 1)", "have \"(x2\\<^sup>2 - x1\\<^sup>2) = (sqrt(x1\\<^sup>2 - 1) + sqrt(x2\\<^sup>2 - 1)) * ((sqrt(x2\\<^sup>2 - 1) - sqrt(x1\\<^sup>2 - 1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x2\\<^sup>2 - x1\\<^sup>2 =\n    (sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1)) *\n    (sqrt (x2\\<^sup>2 - 1) - sqrt (x1\\<^sup>2 - 1))", "using \\<open>x1 > 1\\<close> \\<open>x2 > x1\\<close>"], ["proof (prove)\nusing this:\n  1 < x1\n  x1 < x2\n\ngoal (1 subgoal):\n 1. x2\\<^sup>2 - x1\\<^sup>2 =\n    (sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1)) *\n    (sqrt (x2\\<^sup>2 - 1) - sqrt (x1\\<^sup>2 - 1))", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  x2\\<^sup>2 - x1\\<^sup>2 =\n  (sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1)) *\n  (sqrt (x2\\<^sup>2 - 1) - sqrt (x1\\<^sup>2 - 1))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < x1; x1 < x2\\<rbrakk>\n    \\<Longrightarrow> x2 - sqrt (x2\\<^sup>2 - 1)\n                      < x1 - sqrt (x1\\<^sup>2 - 1)", "ultimately"], ["proof (chain)\npicking this:\n  x2 - x1\n  < (x2\\<^sup>2 - x1\\<^sup>2) /\n    (sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1))\n  x2\\<^sup>2 - x1\\<^sup>2 =\n  (sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1)) *\n  (sqrt (x2\\<^sup>2 - 1) - sqrt (x1\\<^sup>2 - 1))", "have \"sqrt(x2\\<^sup>2 - 1) - sqrt(x1\\<^sup>2 - 1) > x2 - x1\""], ["proof (prove)\nusing this:\n  x2 - x1\n  < (x2\\<^sup>2 - x1\\<^sup>2) /\n    (sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1))\n  x2\\<^sup>2 - x1\\<^sup>2 =\n  (sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1)) *\n  (sqrt (x2\\<^sup>2 - 1) - sqrt (x1\\<^sup>2 - 1))\n\ngoal (1 subgoal):\n 1. x2 - x1 < sqrt (x2\\<^sup>2 - 1) - sqrt (x1\\<^sup>2 - 1)", "using *"], ["proof (prove)\nusing this:\n  x2 - x1\n  < (x2\\<^sup>2 - x1\\<^sup>2) /\n    (sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1))\n  x2\\<^sup>2 - x1\\<^sup>2 =\n  (sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1)) *\n  (sqrt (x2\\<^sup>2 - 1) - sqrt (x1\\<^sup>2 - 1))\n  0 < sqrt (x1\\<^sup>2 - 1) + sqrt (x2\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. x2 - x1 < sqrt (x2\\<^sup>2 - 1) - sqrt (x1\\<^sup>2 - 1)", "by simp"], ["proof (state)\nthis:\n  x2 - x1 < sqrt (x2\\<^sup>2 - 1) - sqrt (x1\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 < x1; x1 < x2\\<rbrakk>\n    \\<Longrightarrow> x2 - sqrt (x2\\<^sup>2 - 1)\n                      < x1 - sqrt (x1\\<^sup>2 - 1)", "thus ?thesis"], ["proof (prove)\nusing this:\n  x2 - x1 < sqrt (x2\\<^sup>2 - 1) - sqrt (x1\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. x2 - sqrt (x2\\<^sup>2 - 1) < x1 - sqrt (x1\\<^sup>2 - 1)", "by simp"], ["proof (state)\nthis:\n  x2 - sqrt (x2\\<^sup>2 - 1) < x1 - sqrt (x1\\<^sup>2 - 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma calc_x_axis_intersection_mono:\n  fixes a1 b1 a2 b2 :: real\n  assumes \"-b1/a1 > 1\" and \"a1 \\<noteq> 0\" and \"-b2/a2 \\<ge> -b1/a1\" and \"a2 \\<noteq> 0\"\n  shows \"(-b1 + sgn b1 * sqrt(b1\\<^sup>2 - a1\\<^sup>2)) / a1 \\<ge> (-b2 + sgn b2 * sqrt(b2\\<^sup>2 - a2\\<^sup>2)) / a2\" (is \"?lhs \\<ge> ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (- b2 + sgn b2 * sqrt (b2\\<^sup>2 - a2\\<^sup>2)) / a2\n    \\<le> (- b1 + sgn b1 * sqrt (b1\\<^sup>2 - a1\\<^sup>2)) / a1", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (- b2 + sgn b2 * sqrt (b2\\<^sup>2 - a2\\<^sup>2)) / a2\n    \\<le> (- b1 + sgn b1 * sqrt (b1\\<^sup>2 - a1\\<^sup>2)) / a1", "have \"?lhs = -b1/a1 - sqrt((-b1/a1)\\<^sup>2 - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (- b1 + sgn b1 * sqrt (b1\\<^sup>2 - a1\\<^sup>2)) / a1 =\n    - b1 / a1 - sqrt ((- b1 / a1)\\<^sup>2 - 1)", "proof (cases \"b1 > 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < b1 \\<Longrightarrow>\n    (- b1 + sgn b1 * sqrt (b1\\<^sup>2 - a1\\<^sup>2)) / a1 =\n    - b1 / a1 - sqrt ((- b1 / a1)\\<^sup>2 - 1)\n 2. \\<not> 0 < b1 \\<Longrightarrow>\n    (- b1 + sgn b1 * sqrt (b1\\<^sup>2 - a1\\<^sup>2)) / a1 =\n    - b1 / a1 - sqrt ((- b1 / a1)\\<^sup>2 - 1)", "case True"], ["proof (state)\nthis:\n  0 < b1\n\ngoal (2 subgoals):\n 1. 0 < b1 \\<Longrightarrow>\n    (- b1 + sgn b1 * sqrt (b1\\<^sup>2 - a1\\<^sup>2)) / a1 =\n    - b1 / a1 - sqrt ((- b1 / a1)\\<^sup>2 - 1)\n 2. \\<not> 0 < b1 \\<Longrightarrow>\n    (- b1 + sgn b1 * sqrt (b1\\<^sup>2 - a1\\<^sup>2)) / a1 =\n    - b1 / a1 - sqrt ((- b1 / a1)\\<^sup>2 - 1)", "hence \"a1 < 0\""], ["proof (prove)\nusing this:\n  0 < b1\n\ngoal (1 subgoal):\n 1. a1 < 0", "using assms"], ["proof (prove)\nusing this:\n  0 < b1\n  1 < - b1 / a1\n  a1 \\<noteq> 0\n  - b1 / a1 \\<le> - b2 / a2\n  a2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. a1 < 0", "by (smt divide_neg_pos)"], ["proof (state)\nthis:\n  a1 < 0\n\ngoal (2 subgoals):\n 1. 0 < b1 \\<Longrightarrow>\n    (- b1 + sgn b1 * sqrt (b1\\<^sup>2 - a1\\<^sup>2)) / a1 =\n    - b1 / a1 - sqrt ((- b1 / a1)\\<^sup>2 - 1)\n 2. \\<not> 0 < b1 \\<Longrightarrow>\n    (- b1 + sgn b1 * sqrt (b1\\<^sup>2 - a1\\<^sup>2)) / a1 =\n    - b1 / a1 - sqrt ((- b1 / a1)\\<^sup>2 - 1)", "thus ?thesis"], ["proof (prove)\nusing this:\n  a1 < 0\n\ngoal (1 subgoal):\n 1. (- b1 + sgn b1 * sqrt (b1\\<^sup>2 - a1\\<^sup>2)) / a1 =\n    - b1 / a1 - sqrt ((- b1 / a1)\\<^sup>2 - 1)", "using \\<open>b1 > 0\\<close> \\<open>a1 < 0\\<close>"], ["proof (prove)\nusing this:\n  a1 < 0\n  0 < b1\n  a1 < 0\n\ngoal (1 subgoal):\n 1. (- b1 + sgn b1 * sqrt (b1\\<^sup>2 - a1\\<^sup>2)) / a1 =\n    - b1 / a1 - sqrt ((- b1 / a1)\\<^sup>2 - 1)", "by (simp add: real_sqrt_divide field_simps)"], ["proof (state)\nthis:\n  (- b1 + sgn b1 * sqrt (b1\\<^sup>2 - a1\\<^sup>2)) / a1 =\n  - b1 / a1 - sqrt ((- b1 / a1)\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. \\<not> 0 < b1 \\<Longrightarrow>\n    (- b1 + sgn b1 * sqrt (b1\\<^sup>2 - a1\\<^sup>2)) / a1 =\n    - b1 / a1 - sqrt ((- b1 / a1)\\<^sup>2 - 1)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 0 < b1 \\<Longrightarrow>\n    (- b1 + sgn b1 * sqrt (b1\\<^sup>2 - a1\\<^sup>2)) / a1 =\n    - b1 / a1 - sqrt ((- b1 / a1)\\<^sup>2 - 1)", "case False"], ["proof (state)\nthis:\n  \\<not> 0 < b1\n\ngoal (1 subgoal):\n 1. \\<not> 0 < b1 \\<Longrightarrow>\n    (- b1 + sgn b1 * sqrt (b1\\<^sup>2 - a1\\<^sup>2)) / a1 =\n    - b1 / a1 - sqrt ((- b1 / a1)\\<^sup>2 - 1)", "hence \"b1 < 0\""], ["proof (prove)\nusing this:\n  \\<not> 0 < b1\n\ngoal (1 subgoal):\n 1. b1 < 0", "using assms"], ["proof (prove)\nusing this:\n  \\<not> 0 < b1\n  1 < - b1 / a1\n  a1 \\<noteq> 0\n  - b1 / a1 \\<le> - b2 / a2\n  a2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b1 < 0", "by (cases \"b1 = 0\") auto"], ["proof (state)\nthis:\n  b1 < 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < b1 \\<Longrightarrow>\n    (- b1 + sgn b1 * sqrt (b1\\<^sup>2 - a1\\<^sup>2)) / a1 =\n    - b1 / a1 - sqrt ((- b1 / a1)\\<^sup>2 - 1)", "hence \"a1 > 0\""], ["proof (prove)\nusing this:\n  b1 < 0\n\ngoal (1 subgoal):\n 1. 0 < a1", "using assms"], ["proof (prove)\nusing this:\n  b1 < 0\n  1 < - b1 / a1\n  a1 \\<noteq> 0\n  - b1 / a1 \\<le> - b2 / a2\n  a2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < a1", "by (smt divide_pos_neg)"], ["proof (state)\nthis:\n  0 < a1\n\ngoal (1 subgoal):\n 1. \\<not> 0 < b1 \\<Longrightarrow>\n    (- b1 + sgn b1 * sqrt (b1\\<^sup>2 - a1\\<^sup>2)) / a1 =\n    - b1 / a1 - sqrt ((- b1 / a1)\\<^sup>2 - 1)", "thus ?thesis"], ["proof (prove)\nusing this:\n  0 < a1\n\ngoal (1 subgoal):\n 1. (- b1 + sgn b1 * sqrt (b1\\<^sup>2 - a1\\<^sup>2)) / a1 =\n    - b1 / a1 - sqrt ((- b1 / a1)\\<^sup>2 - 1)", "using \\<open>b1 < 0\\<close> \\<open>a1 > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < a1\n  b1 < 0\n  0 < a1\n\ngoal (1 subgoal):\n 1. (- b1 + sgn b1 * sqrt (b1\\<^sup>2 - a1\\<^sup>2)) / a1 =\n    - b1 / a1 - sqrt ((- b1 / a1)\\<^sup>2 - 1)", "by (simp add: real_sqrt_divide field_simps)"], ["proof (state)\nthis:\n  (- b1 + sgn b1 * sqrt (b1\\<^sup>2 - a1\\<^sup>2)) / a1 =\n  - b1 / a1 - sqrt ((- b1 / a1)\\<^sup>2 - 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (- b1 + sgn b1 * sqrt (b1\\<^sup>2 - a1\\<^sup>2)) / a1 =\n  - b1 / a1 - sqrt ((- b1 / a1)\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. (- b2 + sgn b2 * sqrt (b2\\<^sup>2 - a2\\<^sup>2)) / a2\n    \\<le> (- b1 + sgn b1 * sqrt (b1\\<^sup>2 - a1\\<^sup>2)) / a1", "moreover"], ["proof (state)\nthis:\n  (- b1 + sgn b1 * sqrt (b1\\<^sup>2 - a1\\<^sup>2)) / a1 =\n  - b1 / a1 - sqrt ((- b1 / a1)\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. (- b2 + sgn b2 * sqrt (b2\\<^sup>2 - a2\\<^sup>2)) / a2\n    \\<le> (- b1 + sgn b1 * sqrt (b1\\<^sup>2 - a1\\<^sup>2)) / a1", "have \"?rhs = -b2/a2 - sqrt((-b2/a2)\\<^sup>2 - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (- b2 + sgn b2 * sqrt (b2\\<^sup>2 - a2\\<^sup>2)) / a2 =\n    - b2 / a2 - sqrt ((- b2 / a2)\\<^sup>2 - 1)", "proof (cases \"b2 > 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < b2 \\<Longrightarrow>\n    (- b2 + sgn b2 * sqrt (b2\\<^sup>2 - a2\\<^sup>2)) / a2 =\n    - b2 / a2 - sqrt ((- b2 / a2)\\<^sup>2 - 1)\n 2. \\<not> 0 < b2 \\<Longrightarrow>\n    (- b2 + sgn b2 * sqrt (b2\\<^sup>2 - a2\\<^sup>2)) / a2 =\n    - b2 / a2 - sqrt ((- b2 / a2)\\<^sup>2 - 1)", "case True"], ["proof (state)\nthis:\n  0 < b2\n\ngoal (2 subgoals):\n 1. 0 < b2 \\<Longrightarrow>\n    (- b2 + sgn b2 * sqrt (b2\\<^sup>2 - a2\\<^sup>2)) / a2 =\n    - b2 / a2 - sqrt ((- b2 / a2)\\<^sup>2 - 1)\n 2. \\<not> 0 < b2 \\<Longrightarrow>\n    (- b2 + sgn b2 * sqrt (b2\\<^sup>2 - a2\\<^sup>2)) / a2 =\n    - b2 / a2 - sqrt ((- b2 / a2)\\<^sup>2 - 1)", "hence \"a2 < 0\""], ["proof (prove)\nusing this:\n  0 < b2\n\ngoal (1 subgoal):\n 1. a2 < 0", "using assms"], ["proof (prove)\nusing this:\n  0 < b2\n  1 < - b1 / a1\n  a1 \\<noteq> 0\n  - b1 / a1 \\<le> - b2 / a2\n  a2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. a2 < 0", "by (smt divide_neg_pos)"], ["proof (state)\nthis:\n  a2 < 0\n\ngoal (2 subgoals):\n 1. 0 < b2 \\<Longrightarrow>\n    (- b2 + sgn b2 * sqrt (b2\\<^sup>2 - a2\\<^sup>2)) / a2 =\n    - b2 / a2 - sqrt ((- b2 / a2)\\<^sup>2 - 1)\n 2. \\<not> 0 < b2 \\<Longrightarrow>\n    (- b2 + sgn b2 * sqrt (b2\\<^sup>2 - a2\\<^sup>2)) / a2 =\n    - b2 / a2 - sqrt ((- b2 / a2)\\<^sup>2 - 1)", "thus ?thesis"], ["proof (prove)\nusing this:\n  a2 < 0\n\ngoal (1 subgoal):\n 1. (- b2 + sgn b2 * sqrt (b2\\<^sup>2 - a2\\<^sup>2)) / a2 =\n    - b2 / a2 - sqrt ((- b2 / a2)\\<^sup>2 - 1)", "using \\<open>b2 > 0\\<close> \\<open>a2 < 0\\<close>"], ["proof (prove)\nusing this:\n  a2 < 0\n  0 < b2\n  a2 < 0\n\ngoal (1 subgoal):\n 1. (- b2 + sgn b2 * sqrt (b2\\<^sup>2 - a2\\<^sup>2)) / a2 =\n    - b2 / a2 - sqrt ((- b2 / a2)\\<^sup>2 - 1)", "by (simp add: real_sqrt_divide field_simps)"], ["proof (state)\nthis:\n  (- b2 + sgn b2 * sqrt (b2\\<^sup>2 - a2\\<^sup>2)) / a2 =\n  - b2 / a2 - sqrt ((- b2 / a2)\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. \\<not> 0 < b2 \\<Longrightarrow>\n    (- b2 + sgn b2 * sqrt (b2\\<^sup>2 - a2\\<^sup>2)) / a2 =\n    - b2 / a2 - sqrt ((- b2 / a2)\\<^sup>2 - 1)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 0 < b2 \\<Longrightarrow>\n    (- b2 + sgn b2 * sqrt (b2\\<^sup>2 - a2\\<^sup>2)) / a2 =\n    - b2 / a2 - sqrt ((- b2 / a2)\\<^sup>2 - 1)", "case False"], ["proof (state)\nthis:\n  \\<not> 0 < b2\n\ngoal (1 subgoal):\n 1. \\<not> 0 < b2 \\<Longrightarrow>\n    (- b2 + sgn b2 * sqrt (b2\\<^sup>2 - a2\\<^sup>2)) / a2 =\n    - b2 / a2 - sqrt ((- b2 / a2)\\<^sup>2 - 1)", "hence \"b2 < 0\""], ["proof (prove)\nusing this:\n  \\<not> 0 < b2\n\ngoal (1 subgoal):\n 1. b2 < 0", "using assms"], ["proof (prove)\nusing this:\n  \\<not> 0 < b2\n  1 < - b1 / a1\n  a1 \\<noteq> 0\n  - b1 / a1 \\<le> - b2 / a2\n  a2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b2 < 0", "by (cases \"b2 = 0\") auto"], ["proof (state)\nthis:\n  b2 < 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < b2 \\<Longrightarrow>\n    (- b2 + sgn b2 * sqrt (b2\\<^sup>2 - a2\\<^sup>2)) / a2 =\n    - b2 / a2 - sqrt ((- b2 / a2)\\<^sup>2 - 1)", "hence \"a2 > 0\""], ["proof (prove)\nusing this:\n  b2 < 0\n\ngoal (1 subgoal):\n 1. 0 < a2", "using assms"], ["proof (prove)\nusing this:\n  b2 < 0\n  1 < - b1 / a1\n  a1 \\<noteq> 0\n  - b1 / a1 \\<le> - b2 / a2\n  a2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < a2", "by (smt divide_pos_neg)"], ["proof (state)\nthis:\n  0 < a2\n\ngoal (1 subgoal):\n 1. \\<not> 0 < b2 \\<Longrightarrow>\n    (- b2 + sgn b2 * sqrt (b2\\<^sup>2 - a2\\<^sup>2)) / a2 =\n    - b2 / a2 - sqrt ((- b2 / a2)\\<^sup>2 - 1)", "thus ?thesis"], ["proof (prove)\nusing this:\n  0 < a2\n\ngoal (1 subgoal):\n 1. (- b2 + sgn b2 * sqrt (b2\\<^sup>2 - a2\\<^sup>2)) / a2 =\n    - b2 / a2 - sqrt ((- b2 / a2)\\<^sup>2 - 1)", "using \\<open>b2 < 0\\<close> \\<open>a2 > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < a2\n  b2 < 0\n  0 < a2\n\ngoal (1 subgoal):\n 1. (- b2 + sgn b2 * sqrt (b2\\<^sup>2 - a2\\<^sup>2)) / a2 =\n    - b2 / a2 - sqrt ((- b2 / a2)\\<^sup>2 - 1)", "by (simp add: real_sqrt_divide field_simps)"], ["proof (state)\nthis:\n  (- b2 + sgn b2 * sqrt (b2\\<^sup>2 - a2\\<^sup>2)) / a2 =\n  - b2 / a2 - sqrt ((- b2 / a2)\\<^sup>2 - 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (- b2 + sgn b2 * sqrt (b2\\<^sup>2 - a2\\<^sup>2)) / a2 =\n  - b2 / a2 - sqrt ((- b2 / a2)\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. (- b2 + sgn b2 * sqrt (b2\\<^sup>2 - a2\\<^sup>2)) / a2\n    \\<le> (- b1 + sgn b1 * sqrt (b1\\<^sup>2 - a1\\<^sup>2)) / a1", "ultimately"], ["proof (chain)\npicking this:\n  (- b1 + sgn b1 * sqrt (b1\\<^sup>2 - a1\\<^sup>2)) / a1 =\n  - b1 / a1 - sqrt ((- b1 / a1)\\<^sup>2 - 1)\n  (- b2 + sgn b2 * sqrt (b2\\<^sup>2 - a2\\<^sup>2)) / a2 =\n  - b2 / a2 - sqrt ((- b2 / a2)\\<^sup>2 - 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  (- b1 + sgn b1 * sqrt (b1\\<^sup>2 - a1\\<^sup>2)) / a1 =\n  - b1 / a1 - sqrt ((- b1 / a1)\\<^sup>2 - 1)\n  (- b2 + sgn b2 * sqrt (b2\\<^sup>2 - a2\\<^sup>2)) / a2 =\n  - b2 / a2 - sqrt ((- b2 / a2)\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. (- b2 + sgn b2 * sqrt (b2\\<^sup>2 - a2\\<^sup>2)) / a2\n    \\<le> (- b1 + sgn b1 * sqrt (b1\\<^sup>2 - a1\\<^sup>2)) / a1", "using calc_x_axis_intersection_fun_mono[of \"-b1/a1\" \"-b2/a2\"]"], ["proof (prove)\nusing this:\n  (- b1 + sgn b1 * sqrt (b1\\<^sup>2 - a1\\<^sup>2)) / a1 =\n  - b1 / a1 - sqrt ((- b1 / a1)\\<^sup>2 - 1)\n  (- b2 + sgn b2 * sqrt (b2\\<^sup>2 - a2\\<^sup>2)) / a2 =\n  - b2 / a2 - sqrt ((- b2 / a2)\\<^sup>2 - 1)\n  \\<lbrakk>1 < - b1 / a1; - b1 / a1 < - b2 / a2\\<rbrakk>\n  \\<Longrightarrow> - b2 / a2 - sqrt ((- b2 / a2)\\<^sup>2 - 1)\n                    < - b1 / a1 - sqrt ((- b1 / a1)\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. (- b2 + sgn b2 * sqrt (b2\\<^sup>2 - a2\\<^sup>2)) / a2\n    \\<le> (- b1 + sgn b1 * sqrt (b1\\<^sup>2 - a1\\<^sup>2)) / a1", "using assms"], ["proof (prove)\nusing this:\n  (- b1 + sgn b1 * sqrt (b1\\<^sup>2 - a1\\<^sup>2)) / a1 =\n  - b1 / a1 - sqrt ((- b1 / a1)\\<^sup>2 - 1)\n  (- b2 + sgn b2 * sqrt (b2\\<^sup>2 - a2\\<^sup>2)) / a2 =\n  - b2 / a2 - sqrt ((- b2 / a2)\\<^sup>2 - 1)\n  \\<lbrakk>1 < - b1 / a1; - b1 / a1 < - b2 / a2\\<rbrakk>\n  \\<Longrightarrow> - b2 / a2 - sqrt ((- b2 / a2)\\<^sup>2 - 1)\n                    < - b1 / a1 - sqrt ((- b1 / a1)\\<^sup>2 - 1)\n  1 < - b1 / a1\n  a1 \\<noteq> 0\n  - b1 / a1 \\<le> - b2 / a2\n  a2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (- b2 + sgn b2 * sqrt (b2\\<^sup>2 - a2\\<^sup>2)) / a2\n    \\<le> (- b1 + sgn b1 * sqrt (b1\\<^sup>2 - a1\\<^sup>2)) / a1", "by (cases \"-b1/a1=-b2/a2\", auto)"], ["proof (state)\nthis:\n  (- b2 + sgn b2 * sqrt (b2\\<^sup>2 - a2\\<^sup>2)) / a2\n  \\<le> (- b1 + sgn b1 * sqrt (b1\\<^sup>2 - a1\\<^sup>2)) / a1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma outward:\n  assumes \"is_poincare_line H1\" and \"is_poincare_line H2\"\n  assumes \"intersects_x_axis_positive H1\" and \"intersects_x_axis_positive H2\"\n  assumes \"outward H1 H2\"\n  shows \"Re (to_complex (calc_x_axis_intersection H1)) \\<ge> Re (to_complex (calc_x_axis_intersection H2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re (to_complex (calc_x_axis_intersection H2))\n    \\<le> Re (to_complex (calc_x_axis_intersection H1))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Re (to_complex (calc_x_axis_intersection H2))\n    \\<le> Re (to_complex (calc_x_axis_intersection H1))", "have \"intersects_x_axis H1\" \"intersects_x_axis H2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. intersects_x_axis H1 &&& intersects_x_axis H2", "using assms"], ["proof (prove)\nusing this:\n  is_poincare_line H1\n  is_poincare_line H2\n  intersects_x_axis_positive H1\n  intersects_x_axis_positive H2\n  outward H1 H2\n\ngoal (1 subgoal):\n 1. intersects_x_axis H1 &&& intersects_x_axis H2", "by auto"], ["proof (state)\nthis:\n  intersects_x_axis H1\n  intersects_x_axis H2\n\ngoal (1 subgoal):\n 1. Re (to_complex (calc_x_axis_intersection H2))\n    \\<le> Re (to_complex (calc_x_axis_intersection H1))", "thus ?thesis"], ["proof (prove)\nusing this:\n  intersects_x_axis H1\n  intersects_x_axis H2\n\ngoal (1 subgoal):\n 1. Re (to_complex (calc_x_axis_intersection H2))\n    \\<le> Re (to_complex (calc_x_axis_intersection H1))", "using assms"], ["proof (prove)\nusing this:\n  intersects_x_axis H1\n  intersects_x_axis H2\n  is_poincare_line H1\n  is_poincare_line H2\n  intersects_x_axis_positive H1\n  intersects_x_axis_positive H2\n  outward H1 H2\n\ngoal (1 subgoal):\n 1. Re (to_complex (calc_x_axis_intersection H2))\n    \\<le> Re (to_complex (calc_x_axis_intersection H1))", "proof (transfer, transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H1 H2 H1a H2a.\n       \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero; intersects_x_axis_cmat H1;\n        intersects_x_axis_cmat H2; is_poincare_line_cmat H1;\n        is_poincare_line_cmat H2; intersects_x_axis_positive_cmat H1;\n        intersects_x_axis_positive_cmat H2; outward_cmat H1 H2;\n        intersects_x_axis_clmat H1a; intersects_x_axis_clmat H2a;\n        is_poincare_line_clmat H1a; is_poincare_line_clmat H2a;\n        intersects_x_axis_positive_clmat H1a;\n        intersects_x_axis_positive_clmat H2a; outward_clmat H1a H2a\\<rbrakk>\n       \\<Longrightarrow> Re (to_complex_cvec\n                              (calc_x_axis_intersection_cmat_cvec H2))\n                         \\<le> Re (to_complex_cvec\n                                    (calc_x_axis_intersection_cmat_cvec H1))", "fix H1 H2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H1 H2 H1a H2a.\n       \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero; intersects_x_axis_cmat H1;\n        intersects_x_axis_cmat H2; is_poincare_line_cmat H1;\n        is_poincare_line_cmat H2; intersects_x_axis_positive_cmat H1;\n        intersects_x_axis_positive_cmat H2; outward_cmat H1 H2;\n        intersects_x_axis_clmat H1a; intersects_x_axis_clmat H2a;\n        is_poincare_line_clmat H1a; is_poincare_line_clmat H2a;\n        intersects_x_axis_positive_clmat H1a;\n        intersects_x_axis_positive_clmat H2a; outward_clmat H1a H2a\\<rbrakk>\n       \\<Longrightarrow> Re (to_complex_cvec\n                              (calc_x_axis_intersection_cmat_cvec H2))\n                         \\<le> Re (to_complex_cvec\n                                    (calc_x_axis_intersection_cmat_cvec H1))", "assume hh: \"hermitean H1 \\<and> H1 \\<noteq> mat_zero\"  \"hermitean H2 \\<and> H2 \\<noteq> mat_zero\""], ["proof (state)\nthis:\n  hermitean H1 \\<and> H1 \\<noteq> mat_zero\n  hermitean H2 \\<and> H2 \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. \\<And>H1 H2 H1a H2a.\n       \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero; intersects_x_axis_cmat H1;\n        intersects_x_axis_cmat H2; is_poincare_line_cmat H1;\n        is_poincare_line_cmat H2; intersects_x_axis_positive_cmat H1;\n        intersects_x_axis_positive_cmat H2; outward_cmat H1 H2;\n        intersects_x_axis_clmat H1a; intersects_x_axis_clmat H2a;\n        is_poincare_line_clmat H1a; is_poincare_line_clmat H2a;\n        intersects_x_axis_positive_clmat H1a;\n        intersects_x_axis_positive_clmat H2a; outward_clmat H1a H2a\\<rbrakk>\n       \\<Longrightarrow> Re (to_complex_cvec\n                              (calc_x_axis_intersection_cmat_cvec H2))\n                         \\<le> Re (to_complex_cvec\n                                    (calc_x_axis_intersection_cmat_cvec H1))", "obtain A1 B1 C1 D1 A2 B2 C2 D2 where *: \"H1 = (A1, B1, C1, D1)\" \"H2 = (A2, B2, C2, D2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A1 B1 C1 D1 A2 B2 C2 D2.\n        \\<lbrakk>H1 = (A1, B1, C1, D1); H2 = (A2, B2, C2, D2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases H1, cases H2, auto)"], ["proof (state)\nthis:\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n\ngoal (1 subgoal):\n 1. \\<And>H1 H2 H1a H2a.\n       \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero; intersects_x_axis_cmat H1;\n        intersects_x_axis_cmat H2; is_poincare_line_cmat H1;\n        is_poincare_line_cmat H2; intersects_x_axis_positive_cmat H1;\n        intersects_x_axis_positive_cmat H2; outward_cmat H1 H2;\n        intersects_x_axis_clmat H1a; intersects_x_axis_clmat H2a;\n        is_poincare_line_clmat H1a; is_poincare_line_clmat H2a;\n        intersects_x_axis_positive_clmat H1a;\n        intersects_x_axis_positive_clmat H2a; outward_clmat H1a H2a\\<rbrakk>\n       \\<Longrightarrow> Re (to_complex_cvec\n                              (calc_x_axis_intersection_cmat_cvec H2))\n                         \\<le> Re (to_complex_cvec\n                                    (calc_x_axis_intersection_cmat_cvec H1))", "have \"is_real A1\" \"is_real A2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_real A1 &&& is_real A2", "using hermitean_elems * hh"], ["proof (prove)\nusing this:\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> is_real ?A\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> is_real ?D\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> ?B = cnj ?C\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> cnj ?B = ?C\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n  hermitean H1 \\<and> H1 \\<noteq> mat_zero\n  hermitean H2 \\<and> H2 \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. is_real A1 &&& is_real A2", "by auto"], ["proof (state)\nthis:\n  is_real A1\n  is_real A2\n\ngoal (1 subgoal):\n 1. \\<And>H1 H2 H1a H2a.\n       \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero; intersects_x_axis_cmat H1;\n        intersects_x_axis_cmat H2; is_poincare_line_cmat H1;\n        is_poincare_line_cmat H2; intersects_x_axis_positive_cmat H1;\n        intersects_x_axis_positive_cmat H2; outward_cmat H1 H2;\n        intersects_x_axis_clmat H1a; intersects_x_axis_clmat H2a;\n        is_poincare_line_clmat H1a; is_poincare_line_clmat H2a;\n        intersects_x_axis_positive_clmat H1a;\n        intersects_x_axis_positive_clmat H2a; outward_clmat H1a H2a\\<rbrakk>\n       \\<Longrightarrow> Re (to_complex_cvec\n                              (calc_x_axis_intersection_cmat_cvec H2))\n                         \\<le> Re (to_complex_cvec\n                                    (calc_x_axis_intersection_cmat_cvec H1))", "assume 1: \"intersects_x_axis_positive_cmat H1\" \"intersects_x_axis_positive_cmat H2\""], ["proof (state)\nthis:\n  intersects_x_axis_positive_cmat H1\n  intersects_x_axis_positive_cmat H2\n\ngoal (1 subgoal):\n 1. \\<And>H1 H2 H1a H2a.\n       \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero; intersects_x_axis_cmat H1;\n        intersects_x_axis_cmat H2; is_poincare_line_cmat H1;\n        is_poincare_line_cmat H2; intersects_x_axis_positive_cmat H1;\n        intersects_x_axis_positive_cmat H2; outward_cmat H1 H2;\n        intersects_x_axis_clmat H1a; intersects_x_axis_clmat H2a;\n        is_poincare_line_clmat H1a; is_poincare_line_clmat H2a;\n        intersects_x_axis_positive_clmat H1a;\n        intersects_x_axis_positive_clmat H2a; outward_clmat H1a H2a\\<rbrakk>\n       \\<Longrightarrow> Re (to_complex_cvec\n                              (calc_x_axis_intersection_cmat_cvec H2))\n                         \\<le> Re (to_complex_cvec\n                                    (calc_x_axis_intersection_cmat_cvec H1))", "assume 2: \"intersects_x_axis_cmat H1\" \"intersects_x_axis_cmat H2\""], ["proof (state)\nthis:\n  intersects_x_axis_cmat H1\n  intersects_x_axis_cmat H2\n\ngoal (1 subgoal):\n 1. \\<And>H1 H2 H1a H2a.\n       \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero; intersects_x_axis_cmat H1;\n        intersects_x_axis_cmat H2; is_poincare_line_cmat H1;\n        is_poincare_line_cmat H2; intersects_x_axis_positive_cmat H1;\n        intersects_x_axis_positive_cmat H2; outward_cmat H1 H2;\n        intersects_x_axis_clmat H1a; intersects_x_axis_clmat H2a;\n        is_poincare_line_clmat H1a; is_poincare_line_clmat H2a;\n        intersects_x_axis_positive_clmat H1a;\n        intersects_x_axis_positive_clmat H2a; outward_clmat H1a H2a\\<rbrakk>\n       \\<Longrightarrow> Re (to_complex_cvec\n                              (calc_x_axis_intersection_cmat_cvec H2))\n                         \\<le> Re (to_complex_cvec\n                                    (calc_x_axis_intersection_cmat_cvec H1))", "assume 3: \"is_poincare_line_cmat H1\" \"is_poincare_line_cmat H2\""], ["proof (state)\nthis:\n  is_poincare_line_cmat H1\n  is_poincare_line_cmat H2\n\ngoal (1 subgoal):\n 1. \\<And>H1 H2 H1a H2a.\n       \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero; intersects_x_axis_cmat H1;\n        intersects_x_axis_cmat H2; is_poincare_line_cmat H1;\n        is_poincare_line_cmat H2; intersects_x_axis_positive_cmat H1;\n        intersects_x_axis_positive_cmat H2; outward_cmat H1 H2;\n        intersects_x_axis_clmat H1a; intersects_x_axis_clmat H2a;\n        is_poincare_line_clmat H1a; is_poincare_line_clmat H2a;\n        intersects_x_axis_positive_clmat H1a;\n        intersects_x_axis_positive_clmat H2a; outward_clmat H1a H2a\\<rbrakk>\n       \\<Longrightarrow> Re (to_complex_cvec\n                              (calc_x_axis_intersection_cmat_cvec H2))\n                         \\<le> Re (to_complex_cvec\n                                    (calc_x_axis_intersection_cmat_cvec H1))", "assume 4: \"outward_cmat H1 H2\""], ["proof (state)\nthis:\n  outward_cmat H1 H2\n\ngoal (1 subgoal):\n 1. \\<And>H1 H2 H1a H2a.\n       \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero; intersects_x_axis_cmat H1;\n        intersects_x_axis_cmat H2; is_poincare_line_cmat H1;\n        is_poincare_line_cmat H2; intersects_x_axis_positive_cmat H1;\n        intersects_x_axis_positive_cmat H2; outward_cmat H1 H2;\n        intersects_x_axis_clmat H1a; intersects_x_axis_clmat H2a;\n        is_poincare_line_clmat H1a; is_poincare_line_clmat H2a;\n        intersects_x_axis_positive_clmat H1a;\n        intersects_x_axis_positive_clmat H2a; outward_clmat H1a H2a\\<rbrakk>\n       \\<Longrightarrow> Re (to_complex_cvec\n                              (calc_x_axis_intersection_cmat_cvec H2))\n                         \\<le> Re (to_complex_cvec\n                                    (calc_x_axis_intersection_cmat_cvec H1))", "have \"A1 \\<noteq> 0\" \"A2 \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A1 \\<noteq> 0 &&& A2 \\<noteq> 0", "using * \\<open>is_real A1\\<close> \\<open>is_real A2\\<close> 1 complex.expand[of A1 0] complex.expand[of A2 0]"], ["proof (prove)\nusing this:\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n  is_real A1\n  is_real A2\n  intersects_x_axis_positive_cmat H1\n  intersects_x_axis_positive_cmat H2\n  Re A1 = Re 0 \\<and> Im A1 = Im 0 \\<Longrightarrow> A1 = 0\n  Re A2 = Re 0 \\<and> Im A2 = Im 0 \\<Longrightarrow> A2 = 0\n\ngoal (1 subgoal):\n 1. A1 \\<noteq> 0 &&& A2 \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  A1 \\<noteq> 0\n  A2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>H1 H2 H1a H2a.\n       \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero; intersects_x_axis_cmat H1;\n        intersects_x_axis_cmat H2; is_poincare_line_cmat H1;\n        is_poincare_line_cmat H2; intersects_x_axis_positive_cmat H1;\n        intersects_x_axis_positive_cmat H2; outward_cmat H1 H2;\n        intersects_x_axis_clmat H1a; intersects_x_axis_clmat H2a;\n        is_poincare_line_clmat H1a; is_poincare_line_clmat H2a;\n        intersects_x_axis_positive_clmat H1a;\n        intersects_x_axis_positive_clmat H2a; outward_clmat H1a H2a\\<rbrakk>\n       \\<Longrightarrow> Re (to_complex_cvec\n                              (calc_x_axis_intersection_cmat_cvec H2))\n                         \\<le> Re (to_complex_cvec\n                                    (calc_x_axis_intersection_cmat_cvec H1))", "hence \"(sgn (Re B2) * sqrt ((Re B2)\\<^sup>2 - (Re A2)\\<^sup>2) - Re B2) / Re A2\n         \\<le> (sgn (Re B1) * sqrt ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2) - Re B1) / Re A1\""], ["proof (prove)\nusing this:\n  A1 \\<noteq> 0\n  A2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (sgn (Re B2) * sqrt ((Re B2)\\<^sup>2 - (Re A2)\\<^sup>2) - Re B2) / Re A2\n    \\<le> (sgn (Re B1) * sqrt ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2) - Re B1) /\n          Re A1", "using calc_x_axis_intersection_mono[of \"Re B1\" \"Re A1\" \"Re B2\" \"Re A2\"]"], ["proof (prove)\nusing this:\n  A1 \\<noteq> 0\n  A2 \\<noteq> 0\n  \\<lbrakk>1 < - Re B1 / Re A1; Re A1 \\<noteq> 0;\n   - Re B1 / Re A1 \\<le> - Re B2 / Re A2; Re A2 \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> (- Re B2 +\n                     sgn (Re B2) *\n                     sqrt ((Re B2)\\<^sup>2 - (Re A2)\\<^sup>2)) /\n                    Re A2\n                    \\<le> (- Re B1 +\n                           sgn (Re B1) *\n                           sqrt ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2)) /\n                          Re A1\n\ngoal (1 subgoal):\n 1. (sgn (Re B2) * sqrt ((Re B2)\\<^sup>2 - (Re A2)\\<^sup>2) - Re B2) / Re A2\n    \\<le> (sgn (Re B1) * sqrt ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2) - Re B1) /\n          Re A1", "using 1 4 *"], ["proof (prove)\nusing this:\n  A1 \\<noteq> 0\n  A2 \\<noteq> 0\n  \\<lbrakk>1 < - Re B1 / Re A1; Re A1 \\<noteq> 0;\n   - Re B1 / Re A1 \\<le> - Re B2 / Re A2; Re A2 \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> (- Re B2 +\n                     sgn (Re B2) *\n                     sqrt ((Re B2)\\<^sup>2 - (Re A2)\\<^sup>2)) /\n                    Re A2\n                    \\<le> (- Re B1 +\n                           sgn (Re B1) *\n                           sqrt ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2)) /\n                          Re A1\n  intersects_x_axis_positive_cmat H1\n  intersects_x_axis_positive_cmat H2\n  outward_cmat H1 H2\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n\ngoal (1 subgoal):\n 1. (sgn (Re B2) * sqrt ((Re B2)\\<^sup>2 - (Re A2)\\<^sup>2) - Re B2) / Re A2\n    \\<le> (sgn (Re B1) * sqrt ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2) - Re B1) /\n          Re A1", "by simp"], ["proof (state)\nthis:\n  (sgn (Re B2) * sqrt ((Re B2)\\<^sup>2 - (Re A2)\\<^sup>2) - Re B2) / Re A2\n  \\<le> (sgn (Re B1) * sqrt ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2) - Re B1) /\n        Re A1\n\ngoal (1 subgoal):\n 1. \\<And>H1 H2 H1a H2a.\n       \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero; intersects_x_axis_cmat H1;\n        intersects_x_axis_cmat H2; is_poincare_line_cmat H1;\n        is_poincare_line_cmat H2; intersects_x_axis_positive_cmat H1;\n        intersects_x_axis_positive_cmat H2; outward_cmat H1 H2;\n        intersects_x_axis_clmat H1a; intersects_x_axis_clmat H2a;\n        is_poincare_line_clmat H1a; is_poincare_line_clmat H2a;\n        intersects_x_axis_positive_clmat H1a;\n        intersects_x_axis_positive_clmat H2a; outward_clmat H1a H2a\\<rbrakk>\n       \\<Longrightarrow> Re (to_complex_cvec\n                              (calc_x_axis_intersection_cmat_cvec H2))\n                         \\<le> Re (to_complex_cvec\n                                    (calc_x_axis_intersection_cmat_cvec H1))", "moreover"], ["proof (state)\nthis:\n  (sgn (Re B2) * sqrt ((Re B2)\\<^sup>2 - (Re A2)\\<^sup>2) - Re B2) / Re A2\n  \\<le> (sgn (Re B1) * sqrt ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2) - Re B1) /\n        Re A1\n\ngoal (1 subgoal):\n 1. \\<And>H1 H2 H1a H2a.\n       \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero; intersects_x_axis_cmat H1;\n        intersects_x_axis_cmat H2; is_poincare_line_cmat H1;\n        is_poincare_line_cmat H2; intersects_x_axis_positive_cmat H1;\n        intersects_x_axis_positive_cmat H2; outward_cmat H1 H2;\n        intersects_x_axis_clmat H1a; intersects_x_axis_clmat H2a;\n        is_poincare_line_clmat H1a; is_poincare_line_clmat H2a;\n        intersects_x_axis_positive_clmat H1a;\n        intersects_x_axis_positive_clmat H2a; outward_clmat H1a H2a\\<rbrakk>\n       \\<Longrightarrow> Re (to_complex_cvec\n                              (calc_x_axis_intersection_cmat_cvec H2))\n                         \\<le> Re (to_complex_cvec\n                                    (calc_x_axis_intersection_cmat_cvec H1))", "have \"(sgn (Re B2) * sqrt ((Re B2)\\<^sup>2 - (Re A2)\\<^sup>2) - Re B2) / Re A2 = \n          Re ((cor (sgn (Re B2)) * cor (sqrt ((Re B2)\\<^sup>2 - (Re A2)\\<^sup>2)) - cor (Re B2)) / A2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (sgn (Re B2) * sqrt ((Re B2)\\<^sup>2 - (Re A2)\\<^sup>2) - Re B2) /\n    Re A2 =\n    Re ((cor (sgn (Re B2)) *\n         cor (sqrt ((Re B2)\\<^sup>2 - (Re A2)\\<^sup>2)) -\n         cor (Re B2)) /\n        A2)", "using \\<open>is_real A2\\<close> \\<open>A2 \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  is_real A2\n  A2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (sgn (Re B2) * sqrt ((Re B2)\\<^sup>2 - (Re A2)\\<^sup>2) - Re B2) /\n    Re A2 =\n    Re ((cor (sgn (Re B2)) *\n         cor (sqrt ((Re B2)\\<^sup>2 - (Re A2)\\<^sup>2)) -\n         cor (Re B2)) /\n        A2)", "by (simp add: Re_divide_real)"], ["proof (state)\nthis:\n  (sgn (Re B2) * sqrt ((Re B2)\\<^sup>2 - (Re A2)\\<^sup>2) - Re B2) / Re A2 =\n  Re ((cor (sgn (Re B2)) * cor (sqrt ((Re B2)\\<^sup>2 - (Re A2)\\<^sup>2)) -\n       cor (Re B2)) /\n      A2)\n\ngoal (1 subgoal):\n 1. \\<And>H1 H2 H1a H2a.\n       \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero; intersects_x_axis_cmat H1;\n        intersects_x_axis_cmat H2; is_poincare_line_cmat H1;\n        is_poincare_line_cmat H2; intersects_x_axis_positive_cmat H1;\n        intersects_x_axis_positive_cmat H2; outward_cmat H1 H2;\n        intersects_x_axis_clmat H1a; intersects_x_axis_clmat H2a;\n        is_poincare_line_clmat H1a; is_poincare_line_clmat H2a;\n        intersects_x_axis_positive_clmat H1a;\n        intersects_x_axis_positive_clmat H2a; outward_clmat H1a H2a\\<rbrakk>\n       \\<Longrightarrow> Re (to_complex_cvec\n                              (calc_x_axis_intersection_cmat_cvec H2))\n                         \\<le> Re (to_complex_cvec\n                                    (calc_x_axis_intersection_cmat_cvec H1))", "moreover"], ["proof (state)\nthis:\n  (sgn (Re B2) * sqrt ((Re B2)\\<^sup>2 - (Re A2)\\<^sup>2) - Re B2) / Re A2 =\n  Re ((cor (sgn (Re B2)) * cor (sqrt ((Re B2)\\<^sup>2 - (Re A2)\\<^sup>2)) -\n       cor (Re B2)) /\n      A2)\n\ngoal (1 subgoal):\n 1. \\<And>H1 H2 H1a H2a.\n       \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero; intersects_x_axis_cmat H1;\n        intersects_x_axis_cmat H2; is_poincare_line_cmat H1;\n        is_poincare_line_cmat H2; intersects_x_axis_positive_cmat H1;\n        intersects_x_axis_positive_cmat H2; outward_cmat H1 H2;\n        intersects_x_axis_clmat H1a; intersects_x_axis_clmat H2a;\n        is_poincare_line_clmat H1a; is_poincare_line_clmat H2a;\n        intersects_x_axis_positive_clmat H1a;\n        intersects_x_axis_positive_clmat H2a; outward_clmat H1a H2a\\<rbrakk>\n       \\<Longrightarrow> Re (to_complex_cvec\n                              (calc_x_axis_intersection_cmat_cvec H2))\n                         \\<le> Re (to_complex_cvec\n                                    (calc_x_axis_intersection_cmat_cvec H1))", "have \"(sgn (Re B1) * sqrt ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2) - Re B1) / Re A1 =\n           Re ((cor (sgn (Re B1)) * cor (sqrt ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2)) - cor (Re B1)) / A1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (sgn (Re B1) * sqrt ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2) - Re B1) /\n    Re A1 =\n    Re ((cor (sgn (Re B1)) *\n         cor (sqrt ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2)) -\n         cor (Re B1)) /\n        A1)", "using \\<open>is_real A1\\<close> \\<open>A1 \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  is_real A1\n  A1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (sgn (Re B1) * sqrt ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2) - Re B1) /\n    Re A1 =\n    Re ((cor (sgn (Re B1)) *\n         cor (sqrt ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2)) -\n         cor (Re B1)) /\n        A1)", "by (simp add: Re_divide_real)"], ["proof (state)\nthis:\n  (sgn (Re B1) * sqrt ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2) - Re B1) / Re A1 =\n  Re ((cor (sgn (Re B1)) * cor (sqrt ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2)) -\n       cor (Re B1)) /\n      A1)\n\ngoal (1 subgoal):\n 1. \\<And>H1 H2 H1a H2a.\n       \\<lbrakk>hermitean H1 \\<and> H1 \\<noteq> mat_zero;\n        hermitean H2 \\<and> H2 \\<noteq> mat_zero; intersects_x_axis_cmat H1;\n        intersects_x_axis_cmat H2; is_poincare_line_cmat H1;\n        is_poincare_line_cmat H2; intersects_x_axis_positive_cmat H1;\n        intersects_x_axis_positive_cmat H2; outward_cmat H1 H2;\n        intersects_x_axis_clmat H1a; intersects_x_axis_clmat H2a;\n        is_poincare_line_clmat H1a; is_poincare_line_clmat H2a;\n        intersects_x_axis_positive_clmat H1a;\n        intersects_x_axis_positive_clmat H2a; outward_clmat H1a H2a\\<rbrakk>\n       \\<Longrightarrow> Re (to_complex_cvec\n                              (calc_x_axis_intersection_cmat_cvec H2))\n                         \\<le> Re (to_complex_cvec\n                                    (calc_x_axis_intersection_cmat_cvec H1))", "ultimately"], ["proof (chain)\npicking this:\n  (sgn (Re B2) * sqrt ((Re B2)\\<^sup>2 - (Re A2)\\<^sup>2) - Re B2) / Re A2\n  \\<le> (sgn (Re B1) * sqrt ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2) - Re B1) /\n        Re A1\n  (sgn (Re B2) * sqrt ((Re B2)\\<^sup>2 - (Re A2)\\<^sup>2) - Re B2) / Re A2 =\n  Re ((cor (sgn (Re B2)) * cor (sqrt ((Re B2)\\<^sup>2 - (Re A2)\\<^sup>2)) -\n       cor (Re B2)) /\n      A2)\n  (sgn (Re B1) * sqrt ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2) - Re B1) / Re A1 =\n  Re ((cor (sgn (Re B1)) * cor (sqrt ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2)) -\n       cor (Re B1)) /\n      A1)", "show \"Re (to_complex_cvec (calc_x_axis_intersection_cmat_cvec H2))\n          \\<le> Re (to_complex_cvec (calc_x_axis_intersection_cmat_cvec H1))\""], ["proof (prove)\nusing this:\n  (sgn (Re B2) * sqrt ((Re B2)\\<^sup>2 - (Re A2)\\<^sup>2) - Re B2) / Re A2\n  \\<le> (sgn (Re B1) * sqrt ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2) - Re B1) /\n        Re A1\n  (sgn (Re B2) * sqrt ((Re B2)\\<^sup>2 - (Re A2)\\<^sup>2) - Re B2) / Re A2 =\n  Re ((cor (sgn (Re B2)) * cor (sqrt ((Re B2)\\<^sup>2 - (Re A2)\\<^sup>2)) -\n       cor (Re B2)) /\n      A2)\n  (sgn (Re B1) * sqrt ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2) - Re B1) / Re A1 =\n  Re ((cor (sgn (Re B1)) * cor (sqrt ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2)) -\n       cor (Re B1)) /\n      A1)\n\ngoal (1 subgoal):\n 1. Re (to_complex_cvec (calc_x_axis_intersection_cmat_cvec H2))\n    \\<le> Re (to_complex_cvec (calc_x_axis_intersection_cmat_cvec H1))", "using 2 3 \\<open>A1 \\<noteq> 0\\<close> \\<open>A2 \\<noteq> 0\\<close> * \\<open>is_real A1\\<close> \\<open>is_real A2\\<close>"], ["proof (prove)\nusing this:\n  (sgn (Re B2) * sqrt ((Re B2)\\<^sup>2 - (Re A2)\\<^sup>2) - Re B2) / Re A2\n  \\<le> (sgn (Re B1) * sqrt ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2) - Re B1) /\n        Re A1\n  (sgn (Re B2) * sqrt ((Re B2)\\<^sup>2 - (Re A2)\\<^sup>2) - Re B2) / Re A2 =\n  Re ((cor (sgn (Re B2)) * cor (sqrt ((Re B2)\\<^sup>2 - (Re A2)\\<^sup>2)) -\n       cor (Re B2)) /\n      A2)\n  (sgn (Re B1) * sqrt ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2) - Re B1) / Re A1 =\n  Re ((cor (sgn (Re B1)) * cor (sqrt ((Re B1)\\<^sup>2 - (Re A1)\\<^sup>2)) -\n       cor (Re B1)) /\n      A1)\n  intersects_x_axis_cmat H1\n  intersects_x_axis_cmat H2\n  is_poincare_line_cmat H1\n  is_poincare_line_cmat H2\n  A1 \\<noteq> 0\n  A2 \\<noteq> 0\n  H1 = (A1, B1, C1, D1)\n  H2 = (A2, B2, C2, D2)\n  is_real A1\n  is_real A2\n\ngoal (1 subgoal):\n 1. Re (to_complex_cvec (calc_x_axis_intersection_cmat_cvec H2))\n    \\<le> Re (to_complex_cvec (calc_x_axis_intersection_cmat_cvec H1))", "by (simp del: is_poincare_line_cmat_def intersects_x_axis_cmat_def)"], ["proof (state)\nthis:\n  Re (to_complex_cvec (calc_x_axis_intersection_cmat_cvec H2))\n  \\<le> Re (to_complex_cvec (calc_x_axis_intersection_cmat_cvec H1))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Re (to_complex (calc_x_axis_intersection H2))\n  \\<le> Re (to_complex (calc_x_axis_intersection H1))\n\ngoal:\nNo subgoals!", "qed"], ["", "(* ------------------------------------------------------------------ *)"], ["", "subsection\\<open>Ideal points and x-axis intersection\\<close>"], ["", "(* ------------------------------------------------------------------ *)"], ["", "lemma ideal_points_intersects_x_axis:               \n  assumes \"is_poincare_line H\" and \"ideal_points H = {i1, i2}\" and \"H \\<noteq> x_axis\"\n  shows  \"intersects_x_axis H \\<longleftrightarrow> Im (to_complex i1) * Im (to_complex i2) < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. intersects_x_axis H = (Im (to_complex i1) * Im (to_complex i2) < 0)", "using assms"], ["proof (prove)\nusing this:\n  is_poincare_line H\n  ideal_points H = {i1, i2}\n  H \\<noteq> x_axis\n\ngoal (1 subgoal):\n 1. intersects_x_axis H = (Im (to_complex i1) * Im (to_complex i2) < 0)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>is_poincare_line H; ideal_points H = {i1, i2};\n     H \\<noteq> x_axis\\<rbrakk>\n    \\<Longrightarrow> intersects_x_axis H =\n                      (Im (to_complex i1) * Im (to_complex i2) < 0)", "have \"i1 \\<noteq> i2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i1 \\<noteq> i2", "using assms(1) assms(2) ex_poincare_line_points ideal_points_different(1)"], ["proof (prove)\nusing this:\n  is_poincare_line H\n  ideal_points H = {i1, i2}\n  is_poincare_line ?H \\<Longrightarrow>\n  \\<exists>u v.\n     u \\<in> unit_disc \\<and>\n     v \\<in> unit_disc \\<and> u \\<noteq> v \\<and> ?H = poincare_line u v\n  \\<lbrakk>?u \\<in> unit_disc; ?v \\<in> unit_disc; ?u \\<noteq> ?v;\n   ideal_points (poincare_line ?u ?v) = {?i1.0, ?i2.0}\\<rbrakk>\n  \\<Longrightarrow> ?i1.0 \\<noteq> ?i2.0\n\ngoal (1 subgoal):\n 1. i1 \\<noteq> i2", "by blast"], ["proof (state)\nthis:\n  i1 \\<noteq> i2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>is_poincare_line H; ideal_points H = {i1, i2};\n     H \\<noteq> x_axis\\<rbrakk>\n    \\<Longrightarrow> intersects_x_axis H =\n                      (Im (to_complex i1) * Im (to_complex i2) < 0)", "have \"calc_ideal_points H = {i1, i2}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. calc_ideal_points H = {i1, i2}", "using assms"], ["proof (prove)\nusing this:\n  is_poincare_line H\n  ideal_points H = {i1, i2}\n  H \\<noteq> x_axis\n\ngoal (1 subgoal):\n 1. calc_ideal_points H = {i1, i2}", "using ideal_points_unique"], ["proof (prove)\nusing this:\n  is_poincare_line H\n  ideal_points H = {i1, i2}\n  H \\<noteq> x_axis\n  is_poincare_line ?H \\<Longrightarrow>\n  ideal_points ?H = calc_ideal_points ?H\n\ngoal (1 subgoal):\n 1. calc_ideal_points H = {i1, i2}", "by auto"], ["proof (state)\nthis:\n  calc_ideal_points H = {i1, i2}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>is_poincare_line H; ideal_points H = {i1, i2};\n     H \\<noteq> x_axis\\<rbrakk>\n    \\<Longrightarrow> intersects_x_axis H =\n                      (Im (to_complex i1) * Im (to_complex i2) < 0)", "have \"\\<forall> i1 \\<in> calc_ideal_points H. \n        \\<forall> i2 \\<in> calc_ideal_points H. \n             is_poincare_line H \\<and> H \\<noteq> x_axis \\<and> i1 \\<noteq> i2 \\<longrightarrow> (Im (to_complex i1) * Im (to_complex i2) < 0 \\<longleftrightarrow> intersects_x_axis H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i1\\<in>calc_ideal_points H.\n       \\<forall>i2\\<in>calc_ideal_points H.\n          is_poincare_line H \\<and>\n          H \\<noteq> x_axis \\<and> i1 \\<noteq> i2 \\<longrightarrow>\n          (Im (to_complex i1) * Im (to_complex i2) < 0) =\n          intersects_x_axis H", "proof (transfer, transfer, (rule ballI)+, rule impI, (erule conjE)+, case_tac H, case_tac i1, case_tac i2)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H i1 i2 a b c d aa ba ab bb.\n       \\<lbrakk>i1 \\<in> calc_ideal_points_cmat_cvec H;\n        i2 \\<in> calc_ideal_points_cmat_cvec H; hermitean H;\n        H \\<noteq> mat_zero; is_poincare_line_cmat H;\n        \\<not> circline_eq_cmat H x_axis_cmat;\n        \\<not> i1 \\<approx>\\<^sub>v i2; H = (a, b, c, d); i1 = (aa, ba);\n        i2 = (ab, bb)\\<rbrakk>\n       \\<Longrightarrow> (Im (to_complex_cvec i1) * Im (to_complex_cvec i2)\n                          < 0) =\n                         intersects_x_axis_cmat H", "fix i11 i12 i21 i22 A B C D H i1 i2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H i1 i2 a b c d aa ba ab bb.\n       \\<lbrakk>i1 \\<in> calc_ideal_points_cmat_cvec H;\n        i2 \\<in> calc_ideal_points_cmat_cvec H; hermitean H;\n        H \\<noteq> mat_zero; is_poincare_line_cmat H;\n        \\<not> circline_eq_cmat H x_axis_cmat;\n        \\<not> i1 \\<approx>\\<^sub>v i2; H = (a, b, c, d); i1 = (aa, ba);\n        i2 = (ab, bb)\\<rbrakk>\n       \\<Longrightarrow> (Im (to_complex_cvec i1) * Im (to_complex_cvec i2)\n                          < 0) =\n                         intersects_x_axis_cmat H", "assume H: \"H = (A, B, C, D)\" \"hermitean H\" \"H \\<noteq> mat_zero\""], ["proof (state)\nthis:\n  H = (A, B, C, D)\n  hermitean H\n  H \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. \\<And>H i1 i2 a b c d aa ba ab bb.\n       \\<lbrakk>i1 \\<in> calc_ideal_points_cmat_cvec H;\n        i2 \\<in> calc_ideal_points_cmat_cvec H; hermitean H;\n        H \\<noteq> mat_zero; is_poincare_line_cmat H;\n        \\<not> circline_eq_cmat H x_axis_cmat;\n        \\<not> i1 \\<approx>\\<^sub>v i2; H = (a, b, c, d); i1 = (aa, ba);\n        i2 = (ab, bb)\\<rbrakk>\n       \\<Longrightarrow> (Im (to_complex_cvec i1) * Im (to_complex_cvec i2)\n                          < 0) =\n                         intersects_x_axis_cmat H", "assume line: \"is_poincare_line_cmat H\""], ["proof (state)\nthis:\n  is_poincare_line_cmat H\n\ngoal (1 subgoal):\n 1. \\<And>H i1 i2 a b c d aa ba ab bb.\n       \\<lbrakk>i1 \\<in> calc_ideal_points_cmat_cvec H;\n        i2 \\<in> calc_ideal_points_cmat_cvec H; hermitean H;\n        H \\<noteq> mat_zero; is_poincare_line_cmat H;\n        \\<not> circline_eq_cmat H x_axis_cmat;\n        \\<not> i1 \\<approx>\\<^sub>v i2; H = (a, b, c, d); i1 = (aa, ba);\n        i2 = (ab, bb)\\<rbrakk>\n       \\<Longrightarrow> (Im (to_complex_cvec i1) * Im (to_complex_cvec i2)\n                          < 0) =\n                         intersects_x_axis_cmat H", "assume i1: \"i1 = (i11, i12)\" \"i1 \\<in> calc_ideal_points_cmat_cvec H\""], ["proof (state)\nthis:\n  i1 = (i11, i12)\n  i1 \\<in> calc_ideal_points_cmat_cvec H\n\ngoal (1 subgoal):\n 1. \\<And>H i1 i2 a b c d aa ba ab bb.\n       \\<lbrakk>i1 \\<in> calc_ideal_points_cmat_cvec H;\n        i2 \\<in> calc_ideal_points_cmat_cvec H; hermitean H;\n        H \\<noteq> mat_zero; is_poincare_line_cmat H;\n        \\<not> circline_eq_cmat H x_axis_cmat;\n        \\<not> i1 \\<approx>\\<^sub>v i2; H = (a, b, c, d); i1 = (aa, ba);\n        i2 = (ab, bb)\\<rbrakk>\n       \\<Longrightarrow> (Im (to_complex_cvec i1) * Im (to_complex_cvec i2)\n                          < 0) =\n                         intersects_x_axis_cmat H", "assume i2: \"i2 = (i21, i22)\" \"i2 \\<in> calc_ideal_points_cmat_cvec H\""], ["proof (state)\nthis:\n  i2 = (i21, i22)\n  i2 \\<in> calc_ideal_points_cmat_cvec H\n\ngoal (1 subgoal):\n 1. \\<And>H i1 i2 a b c d aa ba ab bb.\n       \\<lbrakk>i1 \\<in> calc_ideal_points_cmat_cvec H;\n        i2 \\<in> calc_ideal_points_cmat_cvec H; hermitean H;\n        H \\<noteq> mat_zero; is_poincare_line_cmat H;\n        \\<not> circline_eq_cmat H x_axis_cmat;\n        \\<not> i1 \\<approx>\\<^sub>v i2; H = (a, b, c, d); i1 = (aa, ba);\n        i2 = (ab, bb)\\<rbrakk>\n       \\<Longrightarrow> (Im (to_complex_cvec i1) * Im (to_complex_cvec i2)\n                          < 0) =\n                         intersects_x_axis_cmat H", "assume different: \"\\<not> i1 \\<approx>\\<^sub>v i2\""], ["proof (state)\nthis:\n  \\<not> i1 \\<approx>\\<^sub>v i2\n\ngoal (1 subgoal):\n 1. \\<And>H i1 i2 a b c d aa ba ab bb.\n       \\<lbrakk>i1 \\<in> calc_ideal_points_cmat_cvec H;\n        i2 \\<in> calc_ideal_points_cmat_cvec H; hermitean H;\n        H \\<noteq> mat_zero; is_poincare_line_cmat H;\n        \\<not> circline_eq_cmat H x_axis_cmat;\n        \\<not> i1 \\<approx>\\<^sub>v i2; H = (a, b, c, d); i1 = (aa, ba);\n        i2 = (ab, bb)\\<rbrakk>\n       \\<Longrightarrow> (Im (to_complex_cvec i1) * Im (to_complex_cvec i2)\n                          < 0) =\n                         intersects_x_axis_cmat H", "assume not_x_axis:  \"\\<not> circline_eq_cmat H x_axis_cmat\""], ["proof (state)\nthis:\n  \\<not> circline_eq_cmat H x_axis_cmat\n\ngoal (1 subgoal):\n 1. \\<And>H i1 i2 a b c d aa ba ab bb.\n       \\<lbrakk>i1 \\<in> calc_ideal_points_cmat_cvec H;\n        i2 \\<in> calc_ideal_points_cmat_cvec H; hermitean H;\n        H \\<noteq> mat_zero; is_poincare_line_cmat H;\n        \\<not> circline_eq_cmat H x_axis_cmat;\n        \\<not> i1 \\<approx>\\<^sub>v i2; H = (a, b, c, d); i1 = (aa, ba);\n        i2 = (ab, bb)\\<rbrakk>\n       \\<Longrightarrow> (Im (to_complex_cvec i1) * Im (to_complex_cvec i2)\n                          < 0) =\n                         intersects_x_axis_cmat H", "have \"is_real A\" \"is_real D\" \"C = cnj B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_real A &&& is_real D &&& C = cnj B", "using H hermitean_elems"], ["proof (prove)\nusing this:\n  H = (A, B, C, D)\n  hermitean H\n  H \\<noteq> mat_zero\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> is_real ?A\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> is_real ?D\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> ?B = cnj ?C\n  hermitean (?A, ?B, ?C, ?D) \\<Longrightarrow> cnj ?B = ?C\n\ngoal (1 subgoal):\n 1. is_real A &&& is_real D &&& C = cnj B", "by auto"], ["proof (state)\nthis:\n  is_real A\n  is_real D\n  C = cnj B\n\ngoal (1 subgoal):\n 1. \\<And>H i1 i2 a b c d aa ba ab bb.\n       \\<lbrakk>i1 \\<in> calc_ideal_points_cmat_cvec H;\n        i2 \\<in> calc_ideal_points_cmat_cvec H; hermitean H;\n        H \\<noteq> mat_zero; is_poincare_line_cmat H;\n        \\<not> circline_eq_cmat H x_axis_cmat;\n        \\<not> i1 \\<approx>\\<^sub>v i2; H = (a, b, c, d); i1 = (aa, ba);\n        i2 = (ab, bb)\\<rbrakk>\n       \\<Longrightarrow> (Im (to_complex_cvec i1) * Im (to_complex_cvec i2)\n                          < 0) =\n                         intersects_x_axis_cmat H", "have \"(cmod A)\\<^sup>2 < (cmod B)\\<^sup>2\" \"A = D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cmod A)\\<^sup>2 < (cmod B)\\<^sup>2 &&& A = D", "using line H"], ["proof (prove)\nusing this:\n  is_poincare_line_cmat H\n  H = (A, B, C, D)\n  hermitean H\n  H \\<noteq> mat_zero\n\ngoal (1 subgoal):\n 1. (cmod A)\\<^sup>2 < (cmod B)\\<^sup>2 &&& A = D", "by auto"], ["proof (state)\nthis:\n  (cmod A)\\<^sup>2 < (cmod B)\\<^sup>2\n  A = D\n\ngoal (1 subgoal):\n 1. \\<And>H i1 i2 a b c d aa ba ab bb.\n       \\<lbrakk>i1 \\<in> calc_ideal_points_cmat_cvec H;\n        i2 \\<in> calc_ideal_points_cmat_cvec H; hermitean H;\n        H \\<noteq> mat_zero; is_poincare_line_cmat H;\n        \\<not> circline_eq_cmat H x_axis_cmat;\n        \\<not> i1 \\<approx>\\<^sub>v i2; H = (a, b, c, d); i1 = (aa, ba);\n        i2 = (ab, bb)\\<rbrakk>\n       \\<Longrightarrow> (Im (to_complex_cvec i1) * Im (to_complex_cvec i2)\n                          < 0) =\n                         intersects_x_axis_cmat H", "let ?discr =  \"sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H i1 i2 a b c d aa ba ab bb.\n       \\<lbrakk>i1 \\<in> calc_ideal_points_cmat_cvec H;\n        i2 \\<in> calc_ideal_points_cmat_cvec H; hermitean H;\n        H \\<noteq> mat_zero; is_poincare_line_cmat H;\n        \\<not> circline_eq_cmat H x_axis_cmat;\n        \\<not> i1 \\<approx>\\<^sub>v i2; H = (a, b, c, d); i1 = (aa, ba);\n        i2 = (ab, bb)\\<rbrakk>\n       \\<Longrightarrow> (Im (to_complex_cvec i1) * Im (to_complex_cvec i2)\n                          < 0) =\n                         intersects_x_axis_cmat H", "let ?den = \"(cmod B)\\<^sup>2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H i1 i2 a b c d aa ba ab bb.\n       \\<lbrakk>i1 \\<in> calc_ideal_points_cmat_cvec H;\n        i2 \\<in> calc_ideal_points_cmat_cvec H; hermitean H;\n        H \\<noteq> mat_zero; is_poincare_line_cmat H;\n        \\<not> circline_eq_cmat H x_axis_cmat;\n        \\<not> i1 \\<approx>\\<^sub>v i2; H = (a, b, c, d); i1 = (aa, ba);\n        i2 = (ab, bb)\\<rbrakk>\n       \\<Longrightarrow> (Im (to_complex_cvec i1) * Im (to_complex_cvec i2)\n                          < 0) =\n                         intersects_x_axis_cmat H", "let ?i1 = \"B * (- D - \\<i> * ?discr)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H i1 i2 a b c d aa ba ab bb.\n       \\<lbrakk>i1 \\<in> calc_ideal_points_cmat_cvec H;\n        i2 \\<in> calc_ideal_points_cmat_cvec H; hermitean H;\n        H \\<noteq> mat_zero; is_poincare_line_cmat H;\n        \\<not> circline_eq_cmat H x_axis_cmat;\n        \\<not> i1 \\<approx>\\<^sub>v i2; H = (a, b, c, d); i1 = (aa, ba);\n        i2 = (ab, bb)\\<rbrakk>\n       \\<Longrightarrow> (Im (to_complex_cvec i1) * Im (to_complex_cvec i2)\n                          < 0) =\n                         intersects_x_axis_cmat H", "let ?i2 = \"B * (- D + \\<i> * ?discr)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H i1 i2 a b c d aa ba ab bb.\n       \\<lbrakk>i1 \\<in> calc_ideal_points_cmat_cvec H;\n        i2 \\<in> calc_ideal_points_cmat_cvec H; hermitean H;\n        H \\<noteq> mat_zero; is_poincare_line_cmat H;\n        \\<not> circline_eq_cmat H x_axis_cmat;\n        \\<not> i1 \\<approx>\\<^sub>v i2; H = (a, b, c, d); i1 = (aa, ba);\n        i2 = (ab, bb)\\<rbrakk>\n       \\<Longrightarrow> (Im (to_complex_cvec i1) * Im (to_complex_cvec i2)\n                          < 0) =\n                         intersects_x_axis_cmat H", "have \"i11 = ?i1 \\<or> i11 = ?i2\" \"i12 = ?den\"\n         \"i21 = ?i1 \\<or> i21 = ?i2\" \"i22 = ?den\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (i11 =\n     B * (- D - \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) \\<or>\n     i11 =\n     B * (- D + \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) &&&\n     i12 = cor ((cmod B)\\<^sup>2)) &&&\n    i21 =\n    B * (- D - \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) \\<or>\n    i21 =\n    B * (- D + \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) &&&\n    i22 = cor ((cmod B)\\<^sup>2)", "using i1 i2 H line"], ["proof (prove)\nusing this:\n  i1 = (i11, i12)\n  i1 \\<in> calc_ideal_points_cmat_cvec H\n  i2 = (i21, i22)\n  i2 \\<in> calc_ideal_points_cmat_cvec H\n  H = (A, B, C, D)\n  hermitean H\n  H \\<noteq> mat_zero\n  is_poincare_line_cmat H\n\ngoal (1 subgoal):\n 1. (i11 =\n     B * (- D - \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) \\<or>\n     i11 =\n     B * (- D + \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) &&&\n     i12 = cor ((cmod B)\\<^sup>2)) &&&\n    i21 =\n    B * (- D - \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) \\<or>\n    i21 =\n    B * (- D + \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) &&&\n    i22 = cor ((cmod B)\\<^sup>2)", "by (auto split: if_split_asm)"], ["proof (state)\nthis:\n  i11 =\n  B * (- D - \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) \\<or>\n  i11 = B * (- D + \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2)))\n  i12 = cor ((cmod B)\\<^sup>2)\n  i21 =\n  B * (- D - \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) \\<or>\n  i21 = B * (- D + \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2)))\n  i22 = cor ((cmod B)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<And>H i1 i2 a b c d aa ba ab bb.\n       \\<lbrakk>i1 \\<in> calc_ideal_points_cmat_cvec H;\n        i2 \\<in> calc_ideal_points_cmat_cvec H; hermitean H;\n        H \\<noteq> mat_zero; is_poincare_line_cmat H;\n        \\<not> circline_eq_cmat H x_axis_cmat;\n        \\<not> i1 \\<approx>\\<^sub>v i2; H = (a, b, c, d); i1 = (aa, ba);\n        i2 = (ab, bb)\\<rbrakk>\n       \\<Longrightarrow> (Im (to_complex_cvec i1) * Im (to_complex_cvec i2)\n                          < 0) =\n                         intersects_x_axis_cmat H", "hence i: \"i11 = ?i1 \\<and> i21 = ?i2 \\<or> i11 = ?i2 \\<and> i21 = ?i1\""], ["proof (prove)\nusing this:\n  i11 =\n  B * (- D - \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) \\<or>\n  i11 = B * (- D + \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2)))\n  i12 = cor ((cmod B)\\<^sup>2)\n  i21 =\n  B * (- D - \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) \\<or>\n  i21 = B * (- D + \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2)))\n  i22 = cor ((cmod B)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. i11 =\n    B * (- D - \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) \\<and>\n    i21 =\n    B * (- D + \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) \\<or>\n    i11 =\n    B * (- D + \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) \\<and>\n    i21 = B * (- D - \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2)))", "using \\<open>\\<not> i1 \\<approx>\\<^sub>v i2\\<close> i1 i2"], ["proof (prove)\nusing this:\n  i11 =\n  B * (- D - \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) \\<or>\n  i11 = B * (- D + \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2)))\n  i12 = cor ((cmod B)\\<^sup>2)\n  i21 =\n  B * (- D - \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) \\<or>\n  i21 = B * (- D + \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2)))\n  i22 = cor ((cmod B)\\<^sup>2)\n  \\<not> i1 \\<approx>\\<^sub>v i2\n  i1 = (i11, i12)\n  i1 \\<in> calc_ideal_points_cmat_cvec H\n  i2 = (i21, i22)\n  i2 \\<in> calc_ideal_points_cmat_cvec H\n\ngoal (1 subgoal):\n 1. i11 =\n    B * (- D - \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) \\<and>\n    i21 =\n    B * (- D + \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) \\<or>\n    i11 =\n    B * (- D + \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) \\<and>\n    i21 = B * (- D - \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2)))", "by auto"], ["proof (state)\nthis:\n  i11 =\n  B * (- D - \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) \\<and>\n  i21 =\n  B * (- D + \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) \\<or>\n  i11 =\n  B * (- D + \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) \\<and>\n  i21 = B * (- D - \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2)))\n\ngoal (1 subgoal):\n 1. \\<And>H i1 i2 a b c d aa ba ab bb.\n       \\<lbrakk>i1 \\<in> calc_ideal_points_cmat_cvec H;\n        i2 \\<in> calc_ideal_points_cmat_cvec H; hermitean H;\n        H \\<noteq> mat_zero; is_poincare_line_cmat H;\n        \\<not> circline_eq_cmat H x_axis_cmat;\n        \\<not> i1 \\<approx>\\<^sub>v i2; H = (a, b, c, d); i1 = (aa, ba);\n        i2 = (ab, bb)\\<rbrakk>\n       \\<Longrightarrow> (Im (to_complex_cvec i1) * Im (to_complex_cvec i2)\n                          < 0) =\n                         intersects_x_axis_cmat H", "have \"Im (i11 / i12) * Im (i21 / i22) = Im (?i1 / ?den) * Im (?i2 / ?den)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Im (i11 / i12) * Im (i21 / i22) =\n    Im (B * (- D - \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) /\n        cor ((cmod B)\\<^sup>2)) *\n    Im (B * (- D + \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) /\n        cor ((cmod B)\\<^sup>2))", "using i \\<open>i12 = ?den\\<close> \\<open>i22 = ?den\\<close>"], ["proof (prove)\nusing this:\n  i11 =\n  B * (- D - \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) \\<and>\n  i21 =\n  B * (- D + \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) \\<or>\n  i11 =\n  B * (- D + \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) \\<and>\n  i21 = B * (- D - \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2)))\n  i12 = cor ((cmod B)\\<^sup>2)\n  i22 = cor ((cmod B)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. Im (i11 / i12) * Im (i21 / i22) =\n    Im (B * (- D - \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) /\n        cor ((cmod B)\\<^sup>2)) *\n    Im (B * (- D + \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) /\n        cor ((cmod B)\\<^sup>2))", "by auto"], ["proof (state)\nthis:\n  Im (i11 / i12) * Im (i21 / i22) =\n  Im (B * (- D - \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) /\n      cor ((cmod B)\\<^sup>2)) *\n  Im (B * (- D + \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) /\n      cor ((cmod B)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. \\<And>H i1 i2 a b c d aa ba ab bb.\n       \\<lbrakk>i1 \\<in> calc_ideal_points_cmat_cvec H;\n        i2 \\<in> calc_ideal_points_cmat_cvec H; hermitean H;\n        H \\<noteq> mat_zero; is_poincare_line_cmat H;\n        \\<not> circline_eq_cmat H x_axis_cmat;\n        \\<not> i1 \\<approx>\\<^sub>v i2; H = (a, b, c, d); i1 = (aa, ba);\n        i2 = (ab, bb)\\<rbrakk>\n       \\<Longrightarrow> (Im (to_complex_cvec i1) * Im (to_complex_cvec i2)\n                          < 0) =\n                         intersects_x_axis_cmat H", "also"], ["proof (state)\nthis:\n  Im (i11 / i12) * Im (i21 / i22) =\n  Im (B * (- D - \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) /\n      cor ((cmod B)\\<^sup>2)) *\n  Im (B * (- D + \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) /\n      cor ((cmod B)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. \\<And>H i1 i2 a b c d aa ba ab bb.\n       \\<lbrakk>i1 \\<in> calc_ideal_points_cmat_cvec H;\n        i2 \\<in> calc_ideal_points_cmat_cvec H; hermitean H;\n        H \\<noteq> mat_zero; is_poincare_line_cmat H;\n        \\<not> circline_eq_cmat H x_axis_cmat;\n        \\<not> i1 \\<approx>\\<^sub>v i2; H = (a, b, c, d); i1 = (aa, ba);\n        i2 = (ab, bb)\\<rbrakk>\n       \\<Longrightarrow> (Im (to_complex_cvec i1) * Im (to_complex_cvec i2)\n                          < 0) =\n                         intersects_x_axis_cmat H", "have \"... = Im (?i1) * Im (?i2) / ?den\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Im (B * (- D - \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) /\n        cor ((cmod B)\\<^sup>2)) *\n    Im (B * (- D + \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) /\n        cor ((cmod B)\\<^sup>2)) =\n    Im (B * (- D - \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2)))) *\n    Im (B * (- D + \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2)))) /\n    ((cmod B)\\<^sup>2)\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  Im (B * (- D - \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) /\n      cor ((cmod B)\\<^sup>2)) *\n  Im (B * (- D + \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) /\n      cor ((cmod B)\\<^sup>2)) =\n  Im (B * (- D - \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2)))) *\n  Im (B * (- D + \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2)))) /\n  ((cmod B)\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>H i1 i2 a b c d aa ba ab bb.\n       \\<lbrakk>i1 \\<in> calc_ideal_points_cmat_cvec H;\n        i2 \\<in> calc_ideal_points_cmat_cvec H; hermitean H;\n        H \\<noteq> mat_zero; is_poincare_line_cmat H;\n        \\<not> circline_eq_cmat H x_axis_cmat;\n        \\<not> i1 \\<approx>\\<^sub>v i2; H = (a, b, c, d); i1 = (aa, ba);\n        i2 = (ab, bb)\\<rbrakk>\n       \\<Longrightarrow> (Im (to_complex_cvec i1) * Im (to_complex_cvec i2)\n                          < 0) =\n                         intersects_x_axis_cmat H", "also"], ["proof (state)\nthis:\n  Im (B * (- D - \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) /\n      cor ((cmod B)\\<^sup>2)) *\n  Im (B * (- D + \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) /\n      cor ((cmod B)\\<^sup>2)) =\n  Im (B * (- D - \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2)))) *\n  Im (B * (- D + \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2)))) /\n  ((cmod B)\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>H i1 i2 a b c d aa ba ab bb.\n       \\<lbrakk>i1 \\<in> calc_ideal_points_cmat_cvec H;\n        i2 \\<in> calc_ideal_points_cmat_cvec H; hermitean H;\n        H \\<noteq> mat_zero; is_poincare_line_cmat H;\n        \\<not> circline_eq_cmat H x_axis_cmat;\n        \\<not> i1 \\<approx>\\<^sub>v i2; H = (a, b, c, d); i1 = (aa, ba);\n        i2 = (ab, bb)\\<rbrakk>\n       \\<Longrightarrow> (Im (to_complex_cvec i1) * Im (to_complex_cvec i2)\n                          < 0) =\n                         intersects_x_axis_cmat H", "have \"... = (Im B * (Im B * (Re D * Re D)) - Re B * (Re B * ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) / cmod B ^ 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Im (B * (- D - \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2)))) *\n    Im (B * (- D + \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2)))) /\n    ((cmod B)\\<^sup>2)\\<^sup>2 =\n    (Im B * (Im B * (Re D * Re D)) -\n     Re B * (Re B * ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) /\n    cmod B ^ 4", "using \\<open>(cmod B)\\<^sup>2 > (cmod A)\\<^sup>2\\<close> \\<open>A = D\\<close>"], ["proof (prove)\nusing this:\n  (cmod A)\\<^sup>2 < (cmod B)\\<^sup>2\n  A = D\n\ngoal (1 subgoal):\n 1. Im (B * (- D - \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2)))) *\n    Im (B * (- D + \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2)))) /\n    ((cmod B)\\<^sup>2)\\<^sup>2 =\n    (Im B * (Im B * (Re D * Re D)) -\n     Re B * (Re B * ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) /\n    cmod B ^ 4", "using \\<open>is_real D\\<close> cmod_eq_Re[of A]"], ["proof (prove)\nusing this:\n  (cmod A)\\<^sup>2 < (cmod B)\\<^sup>2\n  A = D\n  is_real D\n  is_real A \\<Longrightarrow> cmod A = \\<bar>Re A\\<bar>\n\ngoal (1 subgoal):\n 1. Im (B * (- D - \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2)))) *\n    Im (B * (- D + \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2)))) /\n    ((cmod B)\\<^sup>2)\\<^sup>2 =\n    (Im B * (Im B * (Re D * Re D)) -\n     Re B * (Re B * ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) /\n    cmod B ^ 4", "by (auto simp add: field_simps)"], ["proof (state)\nthis:\n  Im (B * (- D - \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2)))) *\n  Im (B * (- D + \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2)))) /\n  ((cmod B)\\<^sup>2)\\<^sup>2 =\n  (Im B * (Im B * (Re D * Re D)) -\n   Re B * (Re B * ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) /\n  cmod B ^ 4\n\ngoal (1 subgoal):\n 1. \\<And>H i1 i2 a b c d aa ba ab bb.\n       \\<lbrakk>i1 \\<in> calc_ideal_points_cmat_cvec H;\n        i2 \\<in> calc_ideal_points_cmat_cvec H; hermitean H;\n        H \\<noteq> mat_zero; is_poincare_line_cmat H;\n        \\<not> circline_eq_cmat H x_axis_cmat;\n        \\<not> i1 \\<approx>\\<^sub>v i2; H = (a, b, c, d); i1 = (aa, ba);\n        i2 = (ab, bb)\\<rbrakk>\n       \\<Longrightarrow> (Im (to_complex_cvec i1) * Im (to_complex_cvec i2)\n                          < 0) =\n                         intersects_x_axis_cmat H", "also"], ["proof (state)\nthis:\n  Im (B * (- D - \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2)))) *\n  Im (B * (- D + \\<i> * cor (sqrt ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2)))) /\n  ((cmod B)\\<^sup>2)\\<^sup>2 =\n  (Im B * (Im B * (Re D * Re D)) -\n   Re B * (Re B * ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) /\n  cmod B ^ 4\n\ngoal (1 subgoal):\n 1. \\<And>H i1 i2 a b c d aa ba ab bb.\n       \\<lbrakk>i1 \\<in> calc_ideal_points_cmat_cvec H;\n        i2 \\<in> calc_ideal_points_cmat_cvec H; hermitean H;\n        H \\<noteq> mat_zero; is_poincare_line_cmat H;\n        \\<not> circline_eq_cmat H x_axis_cmat;\n        \\<not> i1 \\<approx>\\<^sub>v i2; H = (a, b, c, d); i1 = (aa, ba);\n        i2 = (ab, bb)\\<rbrakk>\n       \\<Longrightarrow> (Im (to_complex_cvec i1) * Im (to_complex_cvec i2)\n                          < 0) =\n                         intersects_x_axis_cmat H", "have \"... = ((Im B)\\<^sup>2 * (Re D)\\<^sup>2 - (Re B)\\<^sup>2 * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2 - (Re D)\\<^sup>2)) / cmod B ^ 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Im B * (Im B * (Re D * Re D)) -\n     Re B * (Re B * ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) /\n    cmod B ^ 4 =\n    ((Im B)\\<^sup>2 * (Re D)\\<^sup>2 -\n     (Re B)\\<^sup>2 * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2 - (Re D)\\<^sup>2)) /\n    cmod B ^ 4", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (Im B * (Im B * (Re D * Re D)) -\n     Re B * (Re B * ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) /\n    cmod B ^ 4 =\n    ((Im B)\\<^sup>2 * (Re D)\\<^sup>2 -\n     (Re B)\\<^sup>2 * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2 - (Re D)\\<^sup>2)) /\n    cmod B ^ 4", "have \"cmod B * cmod B = Re B * Re B + Im B * Im B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod B * cmod B = Re B * Re B + Im B * Im B", "by (metis cmod_power2 power2_eq_square)"], ["proof (state)\nthis:\n  cmod B * cmod B = Re B * Re B + Im B * Im B\n\ngoal (1 subgoal):\n 1. (Im B * (Im B * (Re D * Re D)) -\n     Re B * (Re B * ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) /\n    cmod B ^ 4 =\n    ((Im B)\\<^sup>2 * (Re D)\\<^sup>2 -\n     (Re B)\\<^sup>2 * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2 - (Re D)\\<^sup>2)) /\n    cmod B ^ 4", "thus ?thesis"], ["proof (prove)\nusing this:\n  cmod B * cmod B = Re B * Re B + Im B * Im B\n\ngoal (1 subgoal):\n 1. (Im B * (Im B * (Re D * Re D)) -\n     Re B * (Re B * ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) /\n    cmod B ^ 4 =\n    ((Im B)\\<^sup>2 * (Re D)\\<^sup>2 -\n     (Re B)\\<^sup>2 * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2 - (Re D)\\<^sup>2)) /\n    cmod B ^ 4", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  (Im B * (Im B * (Re D * Re D)) -\n   Re B * (Re B * ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) /\n  cmod B ^ 4 =\n  ((Im B)\\<^sup>2 * (Re D)\\<^sup>2 -\n   (Re B)\\<^sup>2 * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2 - (Re D)\\<^sup>2)) /\n  cmod B ^ 4\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (Im B * (Im B * (Re D * Re D)) -\n   Re B * (Re B * ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) /\n  cmod B ^ 4 =\n  ((Im B)\\<^sup>2 * (Re D)\\<^sup>2 -\n   (Re B)\\<^sup>2 * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2 - (Re D)\\<^sup>2)) /\n  cmod B ^ 4\n\ngoal (1 subgoal):\n 1. \\<And>H i1 i2 a b c d aa ba ab bb.\n       \\<lbrakk>i1 \\<in> calc_ideal_points_cmat_cvec H;\n        i2 \\<in> calc_ideal_points_cmat_cvec H; hermitean H;\n        H \\<noteq> mat_zero; is_poincare_line_cmat H;\n        \\<not> circline_eq_cmat H x_axis_cmat;\n        \\<not> i1 \\<approx>\\<^sub>v i2; H = (a, b, c, d); i1 = (aa, ba);\n        i2 = (ab, bb)\\<rbrakk>\n       \\<Longrightarrow> (Im (to_complex_cvec i1) * Im (to_complex_cvec i2)\n                          < 0) =\n                         intersects_x_axis_cmat H", "also"], ["proof (state)\nthis:\n  (Im B * (Im B * (Re D * Re D)) -\n   Re B * (Re B * ((cmod B)\\<^sup>2 - (Re D)\\<^sup>2))) /\n  cmod B ^ 4 =\n  ((Im B)\\<^sup>2 * (Re D)\\<^sup>2 -\n   (Re B)\\<^sup>2 * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2 - (Re D)\\<^sup>2)) /\n  cmod B ^ 4\n\ngoal (1 subgoal):\n 1. \\<And>H i1 i2 a b c d aa ba ab bb.\n       \\<lbrakk>i1 \\<in> calc_ideal_points_cmat_cvec H;\n        i2 \\<in> calc_ideal_points_cmat_cvec H; hermitean H;\n        H \\<noteq> mat_zero; is_poincare_line_cmat H;\n        \\<not> circline_eq_cmat H x_axis_cmat;\n        \\<not> i1 \\<approx>\\<^sub>v i2; H = (a, b, c, d); i1 = (aa, ba);\n        i2 = (ab, bb)\\<rbrakk>\n       \\<Longrightarrow> (Im (to_complex_cvec i1) * Im (to_complex_cvec i2)\n                          < 0) =\n                         intersects_x_axis_cmat H", "have \"... = (((Re D)\\<^sup>2 - (Re B)\\<^sup>2) * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2)) / cmod B ^ 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((Im B)\\<^sup>2 * (Re D)\\<^sup>2 -\n     (Re B)\\<^sup>2 * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2 - (Re D)\\<^sup>2)) /\n    cmod B ^ 4 =\n    ((Re D)\\<^sup>2 - (Re B)\\<^sup>2) * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2) /\n    cmod B ^ 4", "by (simp add: power2_eq_square field_simps)"], ["proof (state)\nthis:\n  ((Im B)\\<^sup>2 * (Re D)\\<^sup>2 -\n   (Re B)\\<^sup>2 * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2 - (Re D)\\<^sup>2)) /\n  cmod B ^ 4 =\n  ((Re D)\\<^sup>2 - (Re B)\\<^sup>2) * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2) /\n  cmod B ^ 4\n\ngoal (1 subgoal):\n 1. \\<And>H i1 i2 a b c d aa ba ab bb.\n       \\<lbrakk>i1 \\<in> calc_ideal_points_cmat_cvec H;\n        i2 \\<in> calc_ideal_points_cmat_cvec H; hermitean H;\n        H \\<noteq> mat_zero; is_poincare_line_cmat H;\n        \\<not> circline_eq_cmat H x_axis_cmat;\n        \\<not> i1 \\<approx>\\<^sub>v i2; H = (a, b, c, d); i1 = (aa, ba);\n        i2 = (ab, bb)\\<rbrakk>\n       \\<Longrightarrow> (Im (to_complex_cvec i1) * Im (to_complex_cvec i2)\n                          < 0) =\n                         intersects_x_axis_cmat H", "finally"], ["proof (chain)\npicking this:\n  Im (i11 / i12) * Im (i21 / i22) =\n  ((Re D)\\<^sup>2 - (Re B)\\<^sup>2) * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2) /\n  cmod B ^ 4", "have Im_product: \"Im (i11 / i12) * Im (i21 / i22) = ((Re D)\\<^sup>2 - (Re B)\\<^sup>2) * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2) / cmod B ^ 4\""], ["proof (prove)\nusing this:\n  Im (i11 / i12) * Im (i21 / i22) =\n  ((Re D)\\<^sup>2 - (Re B)\\<^sup>2) * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2) /\n  cmod B ^ 4\n\ngoal (1 subgoal):\n 1. Im (i11 / i12) * Im (i21 / i22) =\n    ((Re D)\\<^sup>2 - (Re B)\\<^sup>2) * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2) /\n    cmod B ^ 4", "."], ["proof (state)\nthis:\n  Im (i11 / i12) * Im (i21 / i22) =\n  ((Re D)\\<^sup>2 - (Re B)\\<^sup>2) * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2) /\n  cmod B ^ 4\n\ngoal (1 subgoal):\n 1. \\<And>H i1 i2 a b c d aa ba ab bb.\n       \\<lbrakk>i1 \\<in> calc_ideal_points_cmat_cvec H;\n        i2 \\<in> calc_ideal_points_cmat_cvec H; hermitean H;\n        H \\<noteq> mat_zero; is_poincare_line_cmat H;\n        \\<not> circline_eq_cmat H x_axis_cmat;\n        \\<not> i1 \\<approx>\\<^sub>v i2; H = (a, b, c, d); i1 = (aa, ba);\n        i2 = (ab, bb)\\<rbrakk>\n       \\<Longrightarrow> (Im (to_complex_cvec i1) * Im (to_complex_cvec i2)\n                          < 0) =\n                         intersects_x_axis_cmat H", "show \"Im (to_complex_cvec i1) * Im (to_complex_cvec i2) < 0 \\<longleftrightarrow> intersects_x_axis_cmat H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Im (to_complex_cvec i1) * Im (to_complex_cvec i2) < 0) =\n    intersects_x_axis_cmat H", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. Im (to_complex_cvec i1) * Im (to_complex_cvec i2) < 0 \\<Longrightarrow>\n    intersects_x_axis_cmat H\n 2. intersects_x_axis_cmat H \\<Longrightarrow>\n    Im (to_complex_cvec i1) * Im (to_complex_cvec i2) < 0", "assume opposite: \"Im (to_complex_cvec i1) * Im (to_complex_cvec i2) < 0\""], ["proof (state)\nthis:\n  Im (to_complex_cvec i1) * Im (to_complex_cvec i2) < 0\n\ngoal (2 subgoals):\n 1. Im (to_complex_cvec i1) * Im (to_complex_cvec i2) < 0 \\<Longrightarrow>\n    intersects_x_axis_cmat H\n 2. intersects_x_axis_cmat H \\<Longrightarrow>\n    Im (to_complex_cvec i1) * Im (to_complex_cvec i2) < 0", "show \"intersects_x_axis_cmat H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. intersects_x_axis_cmat H", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. intersects_x_axis_cmat H", "have \"((Re D)\\<^sup>2 - (Re B)\\<^sup>2) * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2) / cmod B ^ 4 < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((Re D)\\<^sup>2 - (Re B)\\<^sup>2) * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2) /\n    cmod B ^ 4\n    < 0", "using Im_product opposite i1 i2"], ["proof (prove)\nusing this:\n  Im (i11 / i12) * Im (i21 / i22) =\n  ((Re D)\\<^sup>2 - (Re B)\\<^sup>2) * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2) /\n  cmod B ^ 4\n  Im (to_complex_cvec i1) * Im (to_complex_cvec i2) < 0\n  i1 = (i11, i12)\n  i1 \\<in> calc_ideal_points_cmat_cvec H\n  i2 = (i21, i22)\n  i2 \\<in> calc_ideal_points_cmat_cvec H\n\ngoal (1 subgoal):\n 1. ((Re D)\\<^sup>2 - (Re B)\\<^sup>2) * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2) /\n    cmod B ^ 4\n    < 0", "by simp"], ["proof (state)\nthis:\n  ((Re D)\\<^sup>2 - (Re B)\\<^sup>2) * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2) /\n  cmod B ^ 4\n  < 0\n\ngoal (1 subgoal):\n 1. intersects_x_axis_cmat H", "hence \"((Re D)\\<^sup>2 - (Re B)\\<^sup>2) * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2) < 0\""], ["proof (prove)\nusing this:\n  ((Re D)\\<^sup>2 - (Re B)\\<^sup>2) * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2) /\n  cmod B ^ 4\n  < 0\n\ngoal (1 subgoal):\n 1. ((Re D)\\<^sup>2 - (Re B)\\<^sup>2) * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2)\n    < 0", "by (simp add: divide_less_0_iff)"], ["proof (state)\nthis:\n  ((Re D)\\<^sup>2 - (Re B)\\<^sup>2) * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2) < 0\n\ngoal (1 subgoal):\n 1. intersects_x_axis_cmat H", "hence \"(Re D)\\<^sup>2 < (Re B)\\<^sup>2\""], ["proof (prove)\nusing this:\n  ((Re D)\\<^sup>2 - (Re B)\\<^sup>2) * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2) < 0\n\ngoal (1 subgoal):\n 1. (Re D)\\<^sup>2 < (Re B)\\<^sup>2", "by (simp add: mult_less_0_iff not_sum_power2_lt_zero)"], ["proof (state)\nthis:\n  (Re D)\\<^sup>2 < (Re B)\\<^sup>2\n\ngoal (1 subgoal):\n 1. intersects_x_axis_cmat H", "thus ?thesis"], ["proof (prove)\nusing this:\n  (Re D)\\<^sup>2 < (Re B)\\<^sup>2\n\ngoal (1 subgoal):\n 1. intersects_x_axis_cmat H", "using H \\<open>A = D\\<close>  \\<open>is_real D\\<close>"], ["proof (prove)\nusing this:\n  (Re D)\\<^sup>2 < (Re B)\\<^sup>2\n  H = (A, B, C, D)\n  hermitean H\n  H \\<noteq> mat_zero\n  A = D\n  is_real D\n\ngoal (1 subgoal):\n 1. intersects_x_axis_cmat H", "by auto"], ["proof (state)\nthis:\n  intersects_x_axis_cmat H\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  intersects_x_axis_cmat H\n\ngoal (1 subgoal):\n 1. intersects_x_axis_cmat H \\<Longrightarrow>\n    Im (to_complex_cvec i1) * Im (to_complex_cvec i2) < 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. intersects_x_axis_cmat H \\<Longrightarrow>\n    Im (to_complex_cvec i1) * Im (to_complex_cvec i2) < 0", "have *: \"(\\<forall>k. k * Im B = 1 \\<longrightarrow> k = 0) \\<longrightarrow> Im B = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>k. k * Im B = 1 \\<longrightarrow> k = 0) \\<longrightarrow>\n    is_real B", "apply (safe, erule_tac x=\"1 / Im B\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / Im B * Im B = 1 \\<longrightarrow> 1 / Im B = 0 \\<Longrightarrow>\n    is_real B", "using divide_cancel_left"], ["proof (prove)\nusing this:\n  (?c / ?a = ?c / ?b) = (?c = (0::?'a) \\<or> ?a = ?b)\n\ngoal (1 subgoal):\n 1. 1 / Im B * Im B = 1 \\<longrightarrow> 1 / Im B = 0 \\<Longrightarrow>\n    is_real B", "by fastforce"], ["proof (state)\nthis:\n  (\\<forall>k. k * Im B = 1 \\<longrightarrow> k = 0) \\<longrightarrow>\n  is_real B\n\ngoal (1 subgoal):\n 1. intersects_x_axis_cmat H \\<Longrightarrow>\n    Im (to_complex_cvec i1) * Im (to_complex_cvec i2) < 0", "assume \"intersects_x_axis_cmat H\""], ["proof (state)\nthis:\n  intersects_x_axis_cmat H\n\ngoal (1 subgoal):\n 1. intersects_x_axis_cmat H \\<Longrightarrow>\n    Im (to_complex_cvec i1) * Im (to_complex_cvec i2) < 0", "hence \"Re D = 0 \\<or> (Re D)\\<^sup>2 < (Re B)\\<^sup>2\""], ["proof (prove)\nusing this:\n  intersects_x_axis_cmat H\n\ngoal (1 subgoal):\n 1. is_imag D \\<or> (Re D)\\<^sup>2 < (Re B)\\<^sup>2", "using H \\<open>A = D\\<close>"], ["proof (prove)\nusing this:\n  intersects_x_axis_cmat H\n  H = (A, B, C, D)\n  hermitean H\n  H \\<noteq> mat_zero\n  A = D\n\ngoal (1 subgoal):\n 1. is_imag D \\<or> (Re D)\\<^sup>2 < (Re B)\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  is_imag D \\<or> (Re D)\\<^sup>2 < (Re B)\\<^sup>2\n\ngoal (1 subgoal):\n 1. intersects_x_axis_cmat H \\<Longrightarrow>\n    Im (to_complex_cvec i1) * Im (to_complex_cvec i2) < 0", "hence \"(Re D)\\<^sup>2 < (Re B)\\<^sup>2\""], ["proof (prove)\nusing this:\n  is_imag D \\<or> (Re D)\\<^sup>2 < (Re B)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (Re D)\\<^sup>2 < (Re B)\\<^sup>2", "using \\<open>is_real D\\<close> line  H \\<open>C = cnj B\\<close>"], ["proof (prove)\nusing this:\n  is_imag D \\<or> (Re D)\\<^sup>2 < (Re B)\\<^sup>2\n  is_real D\n  is_poincare_line_cmat H\n  H = (A, B, C, D)\n  hermitean H\n  H \\<noteq> mat_zero\n  C = cnj B\n\ngoal (1 subgoal):\n 1. (Re D)\\<^sup>2 < (Re B)\\<^sup>2", "using not_x_axis *"], ["proof (prove)\nusing this:\n  is_imag D \\<or> (Re D)\\<^sup>2 < (Re B)\\<^sup>2\n  is_real D\n  is_poincare_line_cmat H\n  H = (A, B, C, D)\n  hermitean H\n  H \\<noteq> mat_zero\n  C = cnj B\n  \\<not> circline_eq_cmat H x_axis_cmat\n  (\\<forall>k. k * Im B = 1 \\<longrightarrow> k = 0) \\<longrightarrow>\n  is_real B\n\ngoal (1 subgoal):\n 1. (Re D)\\<^sup>2 < (Re B)\\<^sup>2", "by (auto simp add: complex_eq_iff)"], ["proof (state)\nthis:\n  (Re D)\\<^sup>2 < (Re B)\\<^sup>2\n\ngoal (1 subgoal):\n 1. intersects_x_axis_cmat H \\<Longrightarrow>\n    Im (to_complex_cvec i1) * Im (to_complex_cvec i2) < 0", "hence \"((Re D)\\<^sup>2 - (Re B)\\<^sup>2) * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2) < 0\""], ["proof (prove)\nusing this:\n  (Re D)\\<^sup>2 < (Re B)\\<^sup>2\n\ngoal (1 subgoal):\n 1. ((Re D)\\<^sup>2 - (Re B)\\<^sup>2) * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2)\n    < 0", "by (metis add_cancel_left_left diff_less_eq mult_eq_0_iff mult_less_0_iff power2_eq_square power2_less_0 sum_squares_gt_zero_iff)"], ["proof (state)\nthis:\n  ((Re D)\\<^sup>2 - (Re B)\\<^sup>2) * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2) < 0\n\ngoal (1 subgoal):\n 1. intersects_x_axis_cmat H \\<Longrightarrow>\n    Im (to_complex_cvec i1) * Im (to_complex_cvec i2) < 0", "thus \"Im (to_complex_cvec i1) * Im (to_complex_cvec i2) < 0\""], ["proof (prove)\nusing this:\n  ((Re D)\\<^sup>2 - (Re B)\\<^sup>2) * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2) < 0\n\ngoal (1 subgoal):\n 1. Im (to_complex_cvec i1) * Im (to_complex_cvec i2) < 0", "using Im_product i1 i2"], ["proof (prove)\nusing this:\n  ((Re D)\\<^sup>2 - (Re B)\\<^sup>2) * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2) < 0\n  Im (i11 / i12) * Im (i21 / i22) =\n  ((Re D)\\<^sup>2 - (Re B)\\<^sup>2) * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2) /\n  cmod B ^ 4\n  i1 = (i11, i12)\n  i1 \\<in> calc_ideal_points_cmat_cvec H\n  i2 = (i21, i22)\n  i2 \\<in> calc_ideal_points_cmat_cvec H\n\ngoal (1 subgoal):\n 1. Im (to_complex_cvec i1) * Im (to_complex_cvec i2) < 0", "using divide_eq_0_iff divide_less_0_iff prod.simps(2) to_complex_cvec_def zero_complex.simps(1) zero_less_norm_iff"], ["proof (prove)\nusing this:\n  ((Re D)\\<^sup>2 - (Re B)\\<^sup>2) * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2) < 0\n  Im (i11 / i12) * Im (i21 / i22) =\n  ((Re D)\\<^sup>2 - (Re B)\\<^sup>2) * ((Re B)\\<^sup>2 + (Im B)\\<^sup>2) /\n  cmod B ^ 4\n  i1 = (i11, i12)\n  i1 \\<in> calc_ideal_points_cmat_cvec H\n  i2 = (i21, i22)\n  i2 \\<in> calc_ideal_points_cmat_cvec H\n  (?a / ?b = (0::?'a)) = (?a = (0::?'a) \\<or> ?b = (0::?'a))\n  (?a / ?b < (0::?'a)) =\n  ((0::?'a) < ?a \\<and> ?b < (0::?'a) \\<or>\n   ?a < (0::?'a) \\<and> (0::?'a) < ?b)\n  (case (?x1.0, ?x2.0) of (x, xa) \\<Rightarrow> ?f x xa) = ?f ?x1.0 ?x2.0\n  to_complex_cvec ?z = (let (x, y) = ?z in x / y)\n  is_imag 0\n  (0 < norm ?x) = (?x \\<noteq> (0::?'a))\n\ngoal (1 subgoal):\n 1. Im (to_complex_cvec i1) * Im (to_complex_cvec i2) < 0", "by fastforce"], ["proof (state)\nthis:\n  Im (to_complex_cvec i1) * Im (to_complex_cvec i2) < 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (Im (to_complex_cvec i1) * Im (to_complex_cvec i2) < 0) =\n  intersects_x_axis_cmat H\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i1\\<in>calc_ideal_points H.\n     \\<forall>i2\\<in>calc_ideal_points H.\n        is_poincare_line H \\<and>\n        H \\<noteq> x_axis \\<and> i1 \\<noteq> i2 \\<longrightarrow>\n        (Im (to_complex i1) * Im (to_complex i2) < 0) = intersects_x_axis H\n\ngoal (1 subgoal):\n 1. \\<lbrakk>is_poincare_line H; ideal_points H = {i1, i2};\n     H \\<noteq> x_axis\\<rbrakk>\n    \\<Longrightarrow> intersects_x_axis H =\n                      (Im (to_complex i1) * Im (to_complex i2) < 0)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>i1\\<in>calc_ideal_points H.\n     \\<forall>i2\\<in>calc_ideal_points H.\n        is_poincare_line H \\<and>\n        H \\<noteq> x_axis \\<and> i1 \\<noteq> i2 \\<longrightarrow>\n        (Im (to_complex i1) * Im (to_complex i2) < 0) = intersects_x_axis H\n\ngoal (1 subgoal):\n 1. intersects_x_axis H = (Im (to_complex i1) * Im (to_complex i2) < 0)", "using assms \\<open>calc_ideal_points H = {i1, i2}\\<close> \\<open>i1 \\<noteq> i2\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>i1\\<in>calc_ideal_points H.\n     \\<forall>i2\\<in>calc_ideal_points H.\n        is_poincare_line H \\<and>\n        H \\<noteq> x_axis \\<and> i1 \\<noteq> i2 \\<longrightarrow>\n        (Im (to_complex i1) * Im (to_complex i2) < 0) = intersects_x_axis H\n  is_poincare_line H\n  ideal_points H = {i1, i2}\n  H \\<noteq> x_axis\n  calc_ideal_points H = {i1, i2}\n  i1 \\<noteq> i2\n\ngoal (1 subgoal):\n 1. intersects_x_axis H = (Im (to_complex i1) * Im (to_complex i2) < 0)", "by auto"], ["proof (state)\nthis:\n  intersects_x_axis H = (Im (to_complex i1) * Im (to_complex i2) < 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}