{"file_name": "/home/qj213/afp-2021-10-22/thys/Encodability_Process_Calculi/SimulationRelations.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Encodability_Process_Calculi", "problem_names": ["lemma weak_reduction_simulation_and_closures:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  assumes simulation: \"weak_reduction_simulation Rel Cal\"\n  shows \"weak_reduction_simulation (Rel\\<^sup>=) Cal\"\n    and \"weak_reduction_simulation (Rel\\<^sup>+) Cal\"\n    and \"weak_reduction_simulation (Rel\\<^sup>*) Cal\"", "lemma weak_barbed_simulation_and_closures:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  assumes simulation: \"weak_barbed_simulation Rel CWB\"\n  shows \"weak_barbed_simulation (Rel\\<^sup>=) CWB\"\n    and \"weak_barbed_simulation (Rel\\<^sup>+) CWB\"\n    and \"weak_barbed_simulation (Rel\\<^sup>*) CWB\"", "lemma weak_preservation_of_barbs:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  assumes preservation: \"rel_weakly_preserves_barbs Rel CWB\"\n  shows \"weak_barbed_preservation_cond Rel CWB\"", "lemma simulation_impl_equality_of_preservation_of_barbs_conditions:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  assumes simulation: \"weak_reduction_simulation Rel (Calculus CWB)\"\n  shows \"rel_weakly_preserves_barbs Rel CWB = weak_barbed_preservation_cond Rel CWB\"", "lemma strong_impl_weak_reduction_simulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  assumes simulation: \"strong_reduction_simulation Rel Cal\"\n  shows \"weak_reduction_simulation Rel Cal\"", "lemma strong_barbed_simulation_impl_weak_preservation_of_barbs:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  assumes simulation: \"strong_barbed_simulation Rel CWB\"\n  shows \"rel_weakly_preserves_barbs Rel CWB\"", "lemma strong_impl_weak_barbed_simulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  assumes simulation: \"strong_barbed_simulation Rel CWB\"\n  shows \"weak_barbed_simulation Rel CWB\"", "lemma strong_reduction_simulation_and_closures:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  assumes simulation: \"strong_reduction_simulation Rel Cal\"\n  shows \"strong_reduction_simulation (Rel\\<^sup>=) Cal\"\n    and \"strong_reduction_simulation (Rel\\<^sup>+) Cal\"\n    and \"strong_reduction_simulation (Rel\\<^sup>*) Cal\"", "lemma strong_barbed_simulation_and_closures:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  assumes simulation: \"strong_barbed_simulation Rel CWB\"\n  shows \"strong_barbed_simulation (Rel\\<^sup>=) CWB\"\n    and \"strong_barbed_simulation (Rel\\<^sup>+) CWB\"\n    and \"strong_barbed_simulation (Rel\\<^sup>*) CWB\"", "lemma weak_reduction_contrasimulation_and_closures:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  assumes contrasimulation: \"weak_reduction_contrasimulation Rel Cal\"\n  shows \"weak_reduction_contrasimulation (Rel\\<^sup>=) Cal\"\n    and \"weak_reduction_contrasimulation (Rel\\<^sup>+) Cal\"\n    and \"weak_reduction_contrasimulation (Rel\\<^sup>*) Cal\"", "lemma weak_barbed_contrasimulation_and_closures:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  assumes contrasimulation: \"weak_barbed_contrasimulation Rel CWB\"\n  shows \"weak_barbed_contrasimulation (Rel\\<^sup>=) CWB\"\n    and \"weak_barbed_contrasimulation (Rel\\<^sup>+) CWB\"\n    and \"weak_barbed_contrasimulation (Rel\\<^sup>*) CWB\"", "lemma weak_reduction_coupled_simulation_versus_simulation_and_contrasimulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  shows \"weak_reduction_coupled_simulation Rel Cal\n         = (weak_reduction_simulation Rel Cal \\<and> weak_reduction_contrasimulation Rel Cal)\"", "lemma weak_barbed_coupled_simulation_versus_simulation_and_contrasimulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  shows \"weak_barbed_coupled_simulation Rel CWB\n         = (weak_barbed_simulation Rel CWB \\<and> weak_barbed_contrasimulation Rel CWB)\"", "lemma weak_reduction_coupled_simulation_and_closures:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  assumes coupledSimulation: \"weak_reduction_coupled_simulation Rel Cal\"\n  shows \"weak_reduction_coupled_simulation (Rel\\<^sup>=) Cal\"\n    and \"weak_reduction_coupled_simulation (Rel\\<^sup>+) Cal\"\n    and \"weak_reduction_coupled_simulation (Rel\\<^sup>*) Cal\"", "lemma weak_barbed_coupled_simulation_and_closures:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  assumes coupledSimulation: \"weak_barbed_coupled_simulation Rel CWB\"\n  shows \"weak_barbed_coupled_simulation (Rel\\<^sup>=) CWB\"\n    and \"weak_barbed_coupled_simulation (Rel\\<^sup>+) CWB\"\n    and \"weak_barbed_coupled_simulation (Rel\\<^sup>*) CWB\"", "lemma weak_reduction_correspondence_simulation_impl_coupled_simulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  assumes corrSim: \"weak_reduction_correspondence_simulation Rel Cal\"\n  shows \"weak_reduction_coupled_simulation (cSim_cs Rel Cal) Cal\"\n    and \"\\<forall>P Q. (P, Q) \\<in> Rel \\<longrightarrow> (P, Q) \\<in> cSim_cs Rel Cal \\<and> (Q, P) \\<in> cSim_cs Rel Cal\"", "lemma weak_barbed_correspondence_simulation_impl_coupled_simulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  assumes corrSim: \"weak_barbed_correspondence_simulation Rel CWB\"\n  shows \"weak_barbed_coupled_simulation (cSim_cs Rel (Calculus CWB)) CWB\"\n    and \"\\<forall>P Q. (P, Q) \\<in> Rel \\<longrightarrow> (P, Q) \\<in> cSim_cs Rel (Calculus CWB)\n                                \\<and> (Q, P) \\<in> cSim_cs Rel (Calculus CWB)\"", "lemma reduction_correspondence_simulation_condition_trans:\n  fixes Cal   :: \"'proc processCalculus\"\n    and P Q R :: \"'proc\"\n    and Rel   :: \"('proc \\<times> 'proc) set\"\n  assumes A1: \"\\<forall>Q'. Q \\<longmapsto>Cal* Q' \\<longrightarrow> (\\<exists>P'' Q''. P \\<longmapsto>Cal* P'' \\<and> Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel)\"\n      and A2: \"\\<forall>R'. R \\<longmapsto>Cal* R' \\<longrightarrow> (\\<exists>Q'' R''. Q \\<longmapsto>Cal* Q'' \\<and> R' \\<longmapsto>Cal* R'' \\<and> (Q'', R'') \\<in> Rel)\"\n      and A3: \"weak_reduction_simulation Rel Cal\"\n      and A4: \"trans Rel\"\n  shows \"\\<forall>R'. R \\<longmapsto>Cal* R' \\<longrightarrow> (\\<exists>P'' R''. P \\<longmapsto>Cal* P'' \\<and> R' \\<longmapsto>Cal* R'' \\<and> (P'', R'') \\<in> Rel)\"", "lemma weak_reduction_correspondence_simulation_and_closures:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  assumes corrSim: \"weak_reduction_correspondence_simulation Rel Cal\"\n  shows \"weak_reduction_correspondence_simulation (Rel\\<^sup>=) Cal\"\n    and \"weak_reduction_correspondence_simulation (Rel\\<^sup>+) Cal\"\n    and \"weak_reduction_correspondence_simulation (Rel\\<^sup>*) Cal\"", "lemma weak_barbed_correspondence_simulation_and_closures:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  assumes corrSim: \"weak_barbed_correspondence_simulation Rel CWB\"\n  shows \"weak_barbed_correspondence_simulation (Rel\\<^sup>=) CWB\"\n    and \"weak_barbed_correspondence_simulation (Rel\\<^sup>+) CWB\"\n    and \"weak_barbed_correspondence_simulation (Rel\\<^sup>*) CWB\"", "lemma symm_weak_reduction_simulation_is_bisimulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  assumes \"sym Rel\"\n      and \"weak_reduction_simulation Rel Cal\"\n  shows \"weak_reduction_bisimulation Rel Cal\"", "lemma symm_weak_barbed_simulation_is_bisimulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  assumes \"sym Rel\"\n      and \"weak_barbed_simulation Rel Cal\"\n  shows \"weak_barbed_bisimulation Rel Cal\"", "lemma weak_reduction_simulations_impl_bisimulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  assumes sim:    \"weak_reduction_simulation Rel Cal\"\n      and simInv: \"weak_reduction_simulation (Rel\\<inverse>) Cal\"\n  shows \"weak_reduction_bisimulation Rel Cal\"", "lemma weak_reduction_bisimulations_impl_inverse_is_simulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  assumes bisim: \"weak_reduction_bisimulation Rel Cal\"\n  shows \"weak_reduction_simulation (Rel\\<inverse>) Cal\"", "lemma weak_reduction_simulations_iff_bisimulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  shows \"(weak_reduction_simulation Rel Cal \\<and> weak_reduction_simulation (Rel\\<inverse>) Cal)\n         = weak_reduction_bisimulation Rel Cal\"", "lemma weak_barbed_simulations_iff_bisimulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  shows \"(weak_barbed_simulation Rel CWB \\<and> weak_barbed_simulation (Rel\\<inverse>) CWB)\n         = weak_barbed_bisimulation Rel CWB\"", "lemma weak_reduction_bisimulation_is_correspondence_simulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  assumes bisim: \"weak_reduction_bisimulation Rel Cal\"\n  shows \"weak_reduction_correspondence_simulation Rel Cal\"", "lemma weak_barbed_bisimulation_is_correspondence_simulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  assumes bisim: \"weak_barbed_bisimulation Rel CWB\"\n  shows \"weak_barbed_correspondence_simulation Rel CWB\"", "lemma weak_reduction_bisimulation_and_closures:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  assumes bisim: \"weak_reduction_bisimulation Rel Cal\"\n  shows \"weak_reduction_bisimulation (Rel\\<^sup>=) Cal\"\n    and \"weak_reduction_bisimulation (symcl Rel) Cal\"\n    and \"weak_reduction_bisimulation (Rel\\<^sup>+) Cal\"\n    and \"weak_reduction_bisimulation (symcl (Rel\\<^sup>=)) Cal\"\n    and \"weak_reduction_bisimulation (Rel\\<^sup>*) Cal\"\n    and \"weak_reduction_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) Cal\"", "lemma weak_barbed_bisimulation_and_closures:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  assumes bisim: \"weak_barbed_bisimulation Rel CWB\"\n  shows \"weak_barbed_bisimulation (Rel\\<^sup>=) CWB\"\n    and \"weak_barbed_bisimulation (symcl Rel) CWB\"\n    and \"weak_barbed_bisimulation (Rel\\<^sup>+) CWB\"\n    and \"weak_barbed_bisimulation (symcl (Rel\\<^sup>=)) CWB\"\n    and \"weak_barbed_bisimulation (Rel\\<^sup>*) CWB\"\n    and \"weak_barbed_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) CWB\"", "lemma symm_strong_reduction_simulation_is_bisimulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  assumes \"sym Rel\"\n      and \"strong_reduction_simulation Rel Cal\"\n  shows \"strong_reduction_bisimulation Rel Cal\"", "lemma symm_strong_barbed_simulation_is_bisimulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  assumes \"sym Rel\"\n      and \"strong_barbed_simulation Rel CWB\"\n  shows \"strong_barbed_bisimulation Rel CWB\"", "lemma strong_reduction_simulations_impl_bisimulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  assumes sim:    \"strong_reduction_simulation Rel Cal\"\n      and simInv: \"strong_reduction_simulation (Rel\\<inverse>) Cal\"\n  shows \"strong_reduction_bisimulation Rel Cal\"", "lemma strong_reduction_bisimulations_impl_inverse_is_simulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  assumes bisim: \"strong_reduction_bisimulation Rel Cal\"\n  shows \"strong_reduction_simulation (Rel\\<inverse>) Cal\"", "lemma strong_reduction_simulations_iff_bisimulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  shows \"(strong_reduction_simulation Rel Cal \\<and> strong_reduction_simulation (Rel\\<inverse>) Cal)\n         = strong_reduction_bisimulation Rel Cal\"", "lemma strong_barbed_simulations_iff_bisimulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  shows \"(strong_barbed_simulation Rel CWB \\<and> strong_barbed_simulation (Rel\\<inverse>) CWB)\n         = strong_barbed_bisimulation Rel CWB\"", "lemma strong_impl_weak_reduction_bisimulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  assumes bisim: \"strong_reduction_bisimulation Rel Cal\"\n  shows \"weak_reduction_bisimulation Rel Cal\"", "lemma strong_barbed_bisimulation_impl_weak_respection_of_barbs:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  assumes bisim: \"strong_barbed_bisimulation Rel CWB\"\n  shows \"rel_weakly_respects_barbs Rel CWB\"", "lemma strong_impl_weak_barbed_bisimulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  assumes bisim: \"strong_barbed_bisimulation Rel CWB\"\n  shows \"weak_barbed_bisimulation Rel CWB\"", "lemma strong_reduction_bisimulation_and_closures:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  assumes bisim: \"strong_reduction_bisimulation Rel Cal\"\n  shows \"strong_reduction_bisimulation (Rel\\<^sup>=) Cal\"\n    and \"strong_reduction_bisimulation (symcl Rel) Cal\"\n    and \"strong_reduction_bisimulation (Rel\\<^sup>+) Cal\"\n    and \"strong_reduction_bisimulation (symcl (Rel\\<^sup>=)) Cal\"\n    and \"strong_reduction_bisimulation (Rel\\<^sup>*) Cal\"\n    and \"strong_reduction_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) Cal\"", "lemma strong_barbed_bisimulation_and_closures:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  assumes bisim: \"strong_barbed_bisimulation Rel CWB\"\n  shows \"strong_barbed_bisimulation (Rel\\<^sup>=) CWB\"\n    and \"strong_barbed_bisimulation (symcl Rel) CWB\"\n    and \"strong_barbed_bisimulation (Rel\\<^sup>+) CWB\"\n    and \"strong_barbed_bisimulation (symcl (Rel\\<^sup>=)) CWB\"\n    and \"strong_barbed_bisimulation (Rel\\<^sup>*) CWB\"\n    and \"strong_barbed_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) CWB\"", "lemma steps_closure_of_steps_closure:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n    and Cal :: \"'a processCalculus\"\n  shows \"stepsClosure (stepsClosure Rel Cal) Cal = stepsClosure Rel Cal\"", "lemma stepsClosure_refl:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n    and Cal :: \"'a processCalculus\"\n  shows \"refl (stepsClosure Rel Cal)\"", "lemma refl_trans_closure_of_rel_impl_steps_closure:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n    and Cal :: \"'a processCalculus\"\n    and P Q :: \"'a\"\n  assumes \"(P, Q) \\<in> Rel\\<^sup>*\"\n  shows \"P \\<R>\\<mapsto><Rel,Cal> Q\"", "lemma steps_closure_is_weak_reduction_simulation:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n    and Cal :: \"'a processCalculus\"\n  shows \"weak_reduction_simulation (stepsClosure Rel Cal) Cal\"", "lemma inverse_contrasimulation_impl_reverse_pair_in_steps_closure:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n    and Cal :: \"'a processCalculus\"\n    and P Q :: \"'a\"\n  assumes con:  \"weak_reduction_contrasimulation (Rel\\<inverse>) Cal\"\n      and pair: \"(P, Q) \\<in> Rel\"\n  shows \"Q \\<R>\\<mapsto><Rel,Cal> P\"", "lemma simulation_and_inverse_contrasimulation_impl_steps_closure_is_contrasimulation:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n    and Cal :: \"'a processCalculus\"\n  assumes sim: \"weak_reduction_simulation Rel Cal\"\n      and con: \"weak_reduction_contrasimulation (Rel\\<inverse>) Cal\"\n  shows \"weak_reduction_contrasimulation (stepsClosure Rel Cal) Cal\"", "lemma simulation_and_inverse_contrasimulation_impl_steps_closure_is_coupled_simulation:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n    and Cal :: \"'a processCalculus\"\n  assumes sim: \"weak_reduction_simulation Rel Cal\"\n      and con: \"weak_reduction_contrasimulation (Rel\\<inverse>) Cal\"\n  shows \"weak_reduction_coupled_simulation (stepsClosure Rel Cal) Cal\"", "lemma stepsClosure_simulation_impl_refl_trans_closure_of_Rel:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n    and Cal :: \"'a processCalculus\"\n    and P Q :: \"'a\"\n  assumes A1: \"P \\<R>\\<mapsto><Rel,Cal> Q\"\n      and A2: \"weak_reduction_simulation Rel Cal\"\n  shows \"\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P, Q') \\<in> Rel\\<^sup>*\"", "lemma stepsClosure_contrasimulation_impl_refl_trans_closure_of_Rel:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n    and Cal :: \"'a processCalculus\"\n    and P Q :: \"'a\"\n  assumes A1: \"P \\<R>\\<mapsto><Rel,Cal> Q\"\n      and A2: \"weak_reduction_contrasimulation Rel Cal\"\n  shows \"\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P) \\<in> Rel\\<^sup>*\"", "lemma stepsClosure_contrasimulation_of_inverse_impl_refl_trans_closure_of_Rel:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n    and Cal :: \"'a processCalculus\"\n    and P Q :: \"'a\"\n  assumes A1: \"P \\<R>\\<mapsto><Rel\\<inverse>,Cal> Q\"\n      and A2: \"weak_reduction_contrasimulation (Rel\\<inverse>) Cal\"\n  shows \"\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P, Q') \\<in> Rel\\<^sup>*\""], "translations": [["", "lemma weak_reduction_simulation_and_closures:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  assumes simulation: \"weak_reduction_simulation Rel Cal\"\n  shows \"weak_reduction_simulation (Rel\\<^sup>=) Cal\"\n    and \"weak_reduction_simulation (Rel\\<^sup>+) Cal\"\n    and \"weak_reduction_simulation (Rel\\<^sup>*) Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_reduction_simulation (Rel\\<^sup>=) Cal &&&\n    weak_reduction_simulation (Rel\\<^sup>+) Cal &&&\n    weak_reduction_simulation (Rel\\<^sup>*) Cal", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. weak_reduction_simulation (Rel\\<^sup>=) Cal\n 2. weak_reduction_simulation (Rel\\<^sup>+) Cal\n 3. weak_reduction_simulation (Rel\\<^sup>*) Cal", "from simulation"], ["proof (chain)\npicking this:\n  weak_reduction_simulation Rel Cal", "show A: \"weak_reduction_simulation (Rel\\<^sup>=) Cal\""], ["proof (prove)\nusing this:\n  weak_reduction_simulation Rel Cal\n\ngoal (1 subgoal):\n 1. weak_reduction_simulation (Rel\\<^sup>=) Cal", "by (auto simp add: refl, blast)"], ["proof (state)\nthis:\n  weak_reduction_simulation (Rel\\<^sup>=) Cal\n\ngoal (2 subgoals):\n 1. weak_reduction_simulation (Rel\\<^sup>+) Cal\n 2. weak_reduction_simulation (Rel\\<^sup>*) Cal", "have B: \"\\<And>Rel. weak_reduction_simulation Rel Cal \\<Longrightarrow> weak_reduction_simulation (Rel\\<^sup>+) Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       weak_reduction_simulation Rel Cal \\<Longrightarrow>\n       weak_reduction_simulation (Rel\\<^sup>+) Cal", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Rel P Q P'.\n       weak_reduction_simulation Rel Cal \\<and>\n       (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+", "fix Rel P Q P'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Rel P Q P'.\n       weak_reduction_simulation Rel Cal \\<and>\n       (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+", "assume B1: \"weak_reduction_simulation Rel Cal\""], ["proof (state)\nthis:\n  weak_reduction_simulation Rel Cal\n\ngoal (1 subgoal):\n 1. \\<And>Rel P Q P'.\n       weak_reduction_simulation Rel Cal \\<and>\n       (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+", "assume \"(P, Q) \\<in> Rel\\<^sup>+\" and \"P \\<longmapsto>Cal* P'\""], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\\<^sup>+\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. \\<And>Rel P Q P'.\n       weak_reduction_simulation Rel Cal \\<and>\n       (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+", "thus \"\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> Rel\\<^sup>+\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+", "proof (induct arbitrary: P')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y P'.\n       (P, y) \\<in> Rel \\<and> P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'. y \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+\n 2. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal* Q' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "fix Q P'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y P'.\n       (P, y) \\<in> Rel \\<and> P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'. y \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+\n 2. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal* Q' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "assume \"(P, Q) \\<in> Rel\" and \"P \\<longmapsto>Cal* P'\""], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n  P \\<longmapsto>Cal* P'\n\ngoal (2 subgoals):\n 1. \\<And>y P'.\n       (P, y) \\<in> Rel \\<and> P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'. y \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+\n 2. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal* Q' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "with B1"], ["proof (chain)\npicking this:\n  weak_reduction_simulation Rel Cal\n  (P, Q) \\<in> Rel\n  P \\<longmapsto>Cal* P'", "obtain Q' where \"Q \\<longmapsto>Cal* Q'\" and \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  weak_reduction_simulation Rel Cal\n  (P, Q) \\<in> Rel\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal* Q'\n  (P', Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>y P'.\n       (P, y) \\<in> Rel \\<and> P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'. y \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+\n 2. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal* Q' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "thus \"\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto>Cal* Q'\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+", "by auto"], ["proof (state)\nthis:\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal* Q' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal* Q' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "case (step Q R P')"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\\<^sup>+\n  (Q, R) \\<in> Rel\n  P \\<longmapsto>Cal* ?P' \\<Longrightarrow>\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (?P', Q') \\<in> Rel\\<^sup>+\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal* Q' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "assume \"\\<And>P'. P \\<longmapsto>Cal* P' \\<Longrightarrow> (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+)\"\n         and \"P \\<longmapsto>Cal* P'\""], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* ?P' \\<Longrightarrow>\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (?P', Q') \\<in> Rel\\<^sup>+\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal* Q' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "from this"], ["proof (chain)\npicking this:\n  P \\<longmapsto>Cal* ?P' \\<Longrightarrow>\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (?P', Q') \\<in> Rel\\<^sup>+\n  P \\<longmapsto>Cal* P'", "obtain Q' where B2: \"Q \\<longmapsto>Cal* Q'\" and B3: \"(P', Q') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal* ?P' \\<Longrightarrow>\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (?P', Q') \\<in> Rel\\<^sup>+\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        Q \\<longmapsto>Cal* Q' \\<and>\n        (P', Q') \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal* Q'\n  (P', Q') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal* Q' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "assume \"(Q, R) \\<in> Rel\""], ["proof (state)\nthis:\n  (Q, R) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal* Q' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "with B1 B2"], ["proof (chain)\npicking this:\n  weak_reduction_simulation Rel Cal\n  Q \\<longmapsto>Cal* Q'\n  (Q, R) \\<in> Rel", "obtain R' where B4: \"R \\<longmapsto>Cal* R'\" and B5: \"(Q', R') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  weak_reduction_simulation Rel Cal\n  Q \\<longmapsto>Cal* Q'\n  (Q, R) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>R'.\n        R \\<longmapsto>Cal* R' \\<and>\n        (Q', R') \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  R \\<longmapsto>Cal* R'\n  (Q', R') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal* Q' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "from B3 B5"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel\\<^sup>+\n  (Q', R') \\<in> Rel\\<^sup>+", "have \"(P', R') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\\<^sup>+\n  (Q', R') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. (P', R') \\<in> Rel\\<^sup>+", "by simp"], ["proof (state)\nthis:\n  (P', R') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal* Q' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "from B4 this"], ["proof (chain)\npicking this:\n  R \\<longmapsto>Cal* R'\n  (P', R') \\<in> Rel\\<^sup>+", "show \"\\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (P', R') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  R \\<longmapsto>Cal* R'\n  (P', R') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (P', R') \\<in> Rel\\<^sup>+", "by blast"], ["proof (state)\nthis:\n  \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (P', R') \\<in> Rel\\<^sup>+\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  weak_reduction_simulation ?Rel Cal \\<Longrightarrow>\n  weak_reduction_simulation (?Rel\\<^sup>+) Cal\n\ngoal (2 subgoals):\n 1. weak_reduction_simulation (Rel\\<^sup>+) Cal\n 2. weak_reduction_simulation (Rel\\<^sup>*) Cal", "with simulation"], ["proof (chain)\npicking this:\n  weak_reduction_simulation Rel Cal\n  weak_reduction_simulation ?Rel Cal \\<Longrightarrow>\n  weak_reduction_simulation (?Rel\\<^sup>+) Cal", "show \"weak_reduction_simulation (Rel\\<^sup>+) Cal\""], ["proof (prove)\nusing this:\n  weak_reduction_simulation Rel Cal\n  weak_reduction_simulation ?Rel Cal \\<Longrightarrow>\n  weak_reduction_simulation (?Rel\\<^sup>+) Cal\n\ngoal (1 subgoal):\n 1. weak_reduction_simulation (Rel\\<^sup>+) Cal", "by blast"], ["proof (state)\nthis:\n  weak_reduction_simulation (Rel\\<^sup>+) Cal\n\ngoal (1 subgoal):\n 1. weak_reduction_simulation (Rel\\<^sup>*) Cal", "from simulation A B[where Rel=\"Rel\\<^sup>=\"]"], ["proof (chain)\npicking this:\n  weak_reduction_simulation Rel Cal\n  weak_reduction_simulation (Rel\\<^sup>=) Cal\n  weak_reduction_simulation (Rel\\<^sup>=) Cal \\<Longrightarrow>\n  weak_reduction_simulation ((Rel\\<^sup>=)\\<^sup>+) Cal", "show \"weak_reduction_simulation (Rel\\<^sup>*) Cal\""], ["proof (prove)\nusing this:\n  weak_reduction_simulation Rel Cal\n  weak_reduction_simulation (Rel\\<^sup>=) Cal\n  weak_reduction_simulation (Rel\\<^sup>=) Cal \\<Longrightarrow>\n  weak_reduction_simulation ((Rel\\<^sup>=)\\<^sup>+) Cal\n\ngoal (1 subgoal):\n 1. weak_reduction_simulation (Rel\\<^sup>*) Cal", "using trancl_reflcl[of Rel]"], ["proof (prove)\nusing this:\n  weak_reduction_simulation Rel Cal\n  weak_reduction_simulation (Rel\\<^sup>=) Cal\n  weak_reduction_simulation (Rel\\<^sup>=) Cal \\<Longrightarrow>\n  weak_reduction_simulation ((Rel\\<^sup>=)\\<^sup>+) Cal\n  (Rel\\<^sup>=)\\<^sup>+ = Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. weak_reduction_simulation (Rel\\<^sup>*) Cal", "by fast"], ["proof (state)\nthis:\n  weak_reduction_simulation (Rel\\<^sup>*) Cal\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weak_barbed_simulation_and_closures:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  assumes simulation: \"weak_barbed_simulation Rel CWB\"\n  shows \"weak_barbed_simulation (Rel\\<^sup>=) CWB\"\n    and \"weak_barbed_simulation (Rel\\<^sup>+) CWB\"\n    and \"weak_barbed_simulation (Rel\\<^sup>*) CWB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_barbed_simulation (Rel\\<^sup>=) CWB &&&\n    weak_barbed_simulation (Rel\\<^sup>+) CWB &&&\n    weak_barbed_simulation (Rel\\<^sup>*) CWB", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. weak_barbed_simulation (Rel\\<^sup>=) CWB\n 2. weak_barbed_simulation (Rel\\<^sup>+) CWB\n 3. weak_barbed_simulation (Rel\\<^sup>*) CWB", "from simulation"], ["proof (chain)\npicking this:\n  weak_barbed_simulation Rel CWB", "show \"weak_barbed_simulation (Rel\\<^sup>=) CWB\""], ["proof (prove)\nusing this:\n  weak_barbed_simulation Rel CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_simulation (Rel\\<^sup>=) CWB", "using weak_reduction_simulation_and_closures(1)[where Rel=\"Rel\" and Cal=\"Calculus CWB\"]\n            weak_preservation_of_barbs_and_closures(1)[where Rel=\"Rel\" and CWB=\"CWB\"]"], ["proof (prove)\nusing this:\n  weak_barbed_simulation Rel CWB\n  weak_reduction_simulation Rel (Calculus CWB) \\<Longrightarrow>\n  weak_reduction_simulation (Rel\\<^sup>=) (Calculus CWB)\n  rel_weakly_preserves_barbs Rel CWB \\<Longrightarrow>\n  rel_weakly_preserves_barbs (Rel\\<^sup>=) CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_simulation (Rel\\<^sup>=) CWB", "by blast"], ["proof (state)\nthis:\n  weak_barbed_simulation (Rel\\<^sup>=) CWB\n\ngoal (2 subgoals):\n 1. weak_barbed_simulation (Rel\\<^sup>+) CWB\n 2. weak_barbed_simulation (Rel\\<^sup>*) CWB", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. weak_barbed_simulation (Rel\\<^sup>+) CWB\n 2. weak_barbed_simulation (Rel\\<^sup>*) CWB", "from simulation"], ["proof (chain)\npicking this:\n  weak_barbed_simulation Rel CWB", "show \"weak_barbed_simulation (Rel\\<^sup>+) CWB\""], ["proof (prove)\nusing this:\n  weak_barbed_simulation Rel CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_simulation (Rel\\<^sup>+) CWB", "using weak_reduction_simulation_and_closures(2)[where Rel=\"Rel\" and Cal=\"Calculus CWB\"]\n            weak_preservation_of_barbs_and_closures(2)[where Rel=\"Rel\" and CWB=\"CWB\"]"], ["proof (prove)\nusing this:\n  weak_barbed_simulation Rel CWB\n  weak_reduction_simulation Rel (Calculus CWB) \\<Longrightarrow>\n  weak_reduction_simulation (Rel\\<^sup>+) (Calculus CWB)\n  rel_weakly_preserves_barbs Rel CWB \\<Longrightarrow>\n  rel_weakly_preserves_barbs (Rel\\<^sup>+) CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_simulation (Rel\\<^sup>+) CWB", "by blast"], ["proof (state)\nthis:\n  weak_barbed_simulation (Rel\\<^sup>+) CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_simulation (Rel\\<^sup>*) CWB", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. weak_barbed_simulation (Rel\\<^sup>*) CWB", "from simulation"], ["proof (chain)\npicking this:\n  weak_barbed_simulation Rel CWB", "show \"weak_barbed_simulation (Rel\\<^sup>*) CWB\""], ["proof (prove)\nusing this:\n  weak_barbed_simulation Rel CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_simulation (Rel\\<^sup>*) CWB", "using weak_reduction_simulation_and_closures(3)[where Rel=\"Rel\" and Cal=\"Calculus CWB\"]\n            weak_preservation_of_barbs_and_closures(3)[where Rel=\"Rel\" and CWB=\"CWB\"]"], ["proof (prove)\nusing this:\n  weak_barbed_simulation Rel CWB\n  weak_reduction_simulation Rel (Calculus CWB) \\<Longrightarrow>\n  weak_reduction_simulation (Rel\\<^sup>*) (Calculus CWB)\n  rel_weakly_preserves_barbs Rel CWB \\<Longrightarrow>\n  rel_weakly_preserves_barbs (Rel\\<^sup>*) CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_simulation (Rel\\<^sup>*) CWB", "by blast"], ["proof (state)\nthis:\n  weak_barbed_simulation (Rel\\<^sup>*) CWB\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>In the case of a simulation weak preservation of barbs can be replaced by the weaker\n        condition that whenever (P, Q) in the relation and P has a barb then Q have to be able to\n        reach this barb.\\<close>"], ["", "abbreviation weak_barbed_preservation_cond\n    :: \"('proc \\<times> 'proc) set \\<Rightarrow> ('proc, 'barbs) calculusWithBarbs \\<Rightarrow> bool\"\n  where\n  \"weak_barbed_preservation_cond Rel CWB \\<equiv> \\<forall>P Q a. (P, Q) \\<in> Rel \\<and> P\\<down><CWB>a \\<longrightarrow> Q\\<Down><CWB>a\""], ["", "lemma weak_preservation_of_barbs:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  assumes preservation: \"rel_weakly_preserves_barbs Rel CWB\"\n  shows \"weak_barbed_preservation_cond Rel CWB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_barbed_preservation_cond Rel CWB", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q a.\n       (P, Q) \\<in> Rel \\<and> P\\<down><CWB>a \\<Longrightarrow>\n       Q\\<Down><CWB>a", "fix P Q a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q a.\n       (P, Q) \\<in> Rel \\<and> P\\<down><CWB>a \\<Longrightarrow>\n       Q\\<Down><CWB>a", "have \"P \\<longmapsto>(Calculus CWB)* P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<longmapsto>Calculus CWB* P", "by (simp add: steps_refl)"], ["proof (state)\nthis:\n  P \\<longmapsto>Calculus CWB* P\n\ngoal (1 subgoal):\n 1. \\<And>P Q a.\n       (P, Q) \\<in> Rel \\<and> P\\<down><CWB>a \\<Longrightarrow>\n       Q\\<Down><CWB>a", "moreover"], ["proof (state)\nthis:\n  P \\<longmapsto>Calculus CWB* P\n\ngoal (1 subgoal):\n 1. \\<And>P Q a.\n       (P, Q) \\<in> Rel \\<and> P\\<down><CWB>a \\<Longrightarrow>\n       Q\\<Down><CWB>a", "assume \"P\\<down><CWB>a\""], ["proof (state)\nthis:\n  P\\<down><CWB>a\n\ngoal (1 subgoal):\n 1. \\<And>P Q a.\n       (P, Q) \\<in> Rel \\<and> P\\<down><CWB>a \\<Longrightarrow>\n       Q\\<Down><CWB>a", "ultimately"], ["proof (chain)\npicking this:\n  P \\<longmapsto>Calculus CWB* P\n  P\\<down><CWB>a", "have \"P\\<Down><CWB>a\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Calculus CWB* P\n  P\\<down><CWB>a\n\ngoal (1 subgoal):\n 1. P\\<Down><CWB>a", "by blast"], ["proof (state)\nthis:\n  P\\<Down><CWB>a\n\ngoal (1 subgoal):\n 1. \\<And>P Q a.\n       (P, Q) \\<in> Rel \\<and> P\\<down><CWB>a \\<Longrightarrow>\n       Q\\<Down><CWB>a", "moreover"], ["proof (state)\nthis:\n  P\\<Down><CWB>a\n\ngoal (1 subgoal):\n 1. \\<And>P Q a.\n       (P, Q) \\<in> Rel \\<and> P\\<down><CWB>a \\<Longrightarrow>\n       Q\\<Down><CWB>a", "assume \"(P, Q) \\<in> Rel\""], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P Q a.\n       (P, Q) \\<in> Rel \\<and> P\\<down><CWB>a \\<Longrightarrow>\n       Q\\<Down><CWB>a", "ultimately"], ["proof (chain)\npicking this:\n  P\\<Down><CWB>a\n  (P, Q) \\<in> Rel", "show \"Q\\<Down><CWB>a\""], ["proof (prove)\nusing this:\n  P\\<Down><CWB>a\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. Q\\<Down><CWB>a", "using preservation"], ["proof (prove)\nusing this:\n  P\\<Down><CWB>a\n  (P, Q) \\<in> Rel\n  rel_weakly_preserves_barbs Rel CWB\n\ngoal (1 subgoal):\n 1. Q\\<Down><CWB>a", "by blast"], ["proof (state)\nthis:\n  Q\\<Down><CWB>a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma simulation_impl_equality_of_preservation_of_barbs_conditions:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  assumes simulation: \"weak_reduction_simulation Rel (Calculus CWB)\"\n  shows \"rel_weakly_preserves_barbs Rel CWB = weak_barbed_preservation_cond Rel CWB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_weakly_preserves_barbs Rel CWB =\n    weak_barbed_preservation_cond Rel CWB", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. rel_weakly_preserves_barbs Rel CWB \\<Longrightarrow>\n    weak_barbed_preservation_cond Rel CWB\n 2. weak_barbed_preservation_cond Rel CWB \\<Longrightarrow>\n    rel_weakly_preserves_barbs Rel CWB", "assume \"rel_weakly_preserves_barbs Rel CWB\""], ["proof (state)\nthis:\n  rel_weakly_preserves_barbs Rel CWB\n\ngoal (2 subgoals):\n 1. rel_weakly_preserves_barbs Rel CWB \\<Longrightarrow>\n    weak_barbed_preservation_cond Rel CWB\n 2. weak_barbed_preservation_cond Rel CWB \\<Longrightarrow>\n    rel_weakly_preserves_barbs Rel CWB", "thus \"weak_barbed_preservation_cond Rel CWB\""], ["proof (prove)\nusing this:\n  rel_weakly_preserves_barbs Rel CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_preservation_cond Rel CWB", "using weak_preservation_of_barbs[where Rel=\"Rel\" and CWB=\"CWB\"]"], ["proof (prove)\nusing this:\n  rel_weakly_preserves_barbs Rel CWB\n  rel_weakly_preserves_barbs Rel CWB \\<Longrightarrow>\n  weak_barbed_preservation_cond Rel CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_preservation_cond Rel CWB", "by blast"], ["proof (state)\nthis:\n  weak_barbed_preservation_cond Rel CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_preservation_cond Rel CWB \\<Longrightarrow>\n    rel_weakly_preserves_barbs Rel CWB", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. weak_barbed_preservation_cond Rel CWB \\<Longrightarrow>\n    rel_weakly_preserves_barbs Rel CWB", "assume condition: \"weak_barbed_preservation_cond Rel CWB\""], ["proof (state)\nthis:\n  weak_barbed_preservation_cond Rel CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_preservation_cond Rel CWB \\<Longrightarrow>\n    rel_weakly_preserves_barbs Rel CWB", "show \"rel_weakly_preserves_barbs Rel CWB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_weakly_preserves_barbs Rel CWB", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b x P'.\n       (a, b) \\<in> Rel \\<and>\n       a \\<longmapsto>Calculus CWB* P' \\<and>\n       P'\\<down><CWB>x \\<Longrightarrow>\n       b\\<Down><CWB>x", "fix P Q a P'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b x P'.\n       (a, b) \\<in> Rel \\<and>\n       a \\<longmapsto>Calculus CWB* P' \\<and>\n       P'\\<down><CWB>x \\<Longrightarrow>\n       b\\<Down><CWB>x", "assume \"(P, Q) \\<in> Rel\" and \"P \\<longmapsto>(Calculus CWB)* P'\""], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n  P \\<longmapsto>Calculus CWB* P'\n\ngoal (1 subgoal):\n 1. \\<And>a b x P'.\n       (a, b) \\<in> Rel \\<and>\n       a \\<longmapsto>Calculus CWB* P' \\<and>\n       P'\\<down><CWB>x \\<Longrightarrow>\n       b\\<Down><CWB>x", "with simulation"], ["proof (chain)\npicking this:\n  weak_reduction_simulation Rel (Calculus CWB)\n  (P, Q) \\<in> Rel\n  P \\<longmapsto>Calculus CWB* P'", "obtain Q' where A1: \"Q \\<longmapsto>(Calculus CWB)* Q'\" and A2: \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  weak_reduction_simulation Rel (Calculus CWB)\n  (P, Q) \\<in> Rel\n  P \\<longmapsto>Calculus CWB* P'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        Q \\<longmapsto>Calculus CWB* Q' \\<and>\n        (P', Q') \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q \\<longmapsto>Calculus CWB* Q'\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>a b x P'.\n       (a, b) \\<in> Rel \\<and>\n       a \\<longmapsto>Calculus CWB* P' \\<and>\n       P'\\<down><CWB>x \\<Longrightarrow>\n       b\\<Down><CWB>x", "assume \"P'\\<down><CWB>a\""], ["proof (state)\nthis:\n  P'\\<down><CWB>a\n\ngoal (1 subgoal):\n 1. \\<And>a b x P'.\n       (a, b) \\<in> Rel \\<and>\n       a \\<longmapsto>Calculus CWB* P' \\<and>\n       P'\\<down><CWB>x \\<Longrightarrow>\n       b\\<Down><CWB>x", "with A2 condition"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel\n  weak_barbed_preservation_cond Rel CWB\n  P'\\<down><CWB>a", "obtain Q'' where A3: \"Q' \\<longmapsto>(Calculus CWB)* Q''\" and A4: \"Q''\\<down><CWB>a\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\n  weak_barbed_preservation_cond Rel CWB\n  P'\\<down><CWB>a\n\ngoal (1 subgoal):\n 1. (\\<And>Q''.\n        Q' \\<longmapsto>Calculus CWB* Q'' \\<and>\n        Q''\\<down><CWB>a \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q' \\<longmapsto>Calculus CWB* Q''\n  Q''\\<down><CWB>a\n\ngoal (1 subgoal):\n 1. \\<And>a b x P'.\n       (a, b) \\<in> Rel \\<and>\n       a \\<longmapsto>Calculus CWB* P' \\<and>\n       P'\\<down><CWB>x \\<Longrightarrow>\n       b\\<Down><CWB>x", "from A1 A3"], ["proof (chain)\npicking this:\n  Q \\<longmapsto>Calculus CWB* Q'\n  Q' \\<longmapsto>Calculus CWB* Q''", "have \"Q \\<longmapsto>(Calculus CWB)* Q''\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto>Calculus CWB* Q'\n  Q' \\<longmapsto>Calculus CWB* Q''\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto>Calculus CWB* Q''", "by (rule steps_add)"], ["proof (state)\nthis:\n  Q \\<longmapsto>Calculus CWB* Q''\n\ngoal (1 subgoal):\n 1. \\<And>a b x P'.\n       (a, b) \\<in> Rel \\<and>\n       a \\<longmapsto>Calculus CWB* P' \\<and>\n       P'\\<down><CWB>x \\<Longrightarrow>\n       b\\<Down><CWB>x", "with A4"], ["proof (chain)\npicking this:\n  Q''\\<down><CWB>a\n  Q \\<longmapsto>Calculus CWB* Q''", "show \"Q\\<Down><CWB>a\""], ["proof (prove)\nusing this:\n  Q''\\<down><CWB>a\n  Q \\<longmapsto>Calculus CWB* Q''\n\ngoal (1 subgoal):\n 1. Q\\<Down><CWB>a", "by blast"], ["proof (state)\nthis:\n  Q\\<Down><CWB>a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rel_weakly_preserves_barbs Rel CWB\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>A strong reduction simulation is relation R such that for each pair (P, Q) in R and each\n        step of P to some P' there exists some Q' such that there is a step of Q to Q' and (P', Q')\n        in R.\\<close>"], ["", "abbreviation strong_reduction_simulation :: \"('proc \\<times> 'proc) set \\<Rightarrow> 'proc processCalculus \\<Rightarrow> bool\"\n  where\n  \"strong_reduction_simulation Rel Cal \\<equiv>\n   \\<forall>P Q P'. (P, Q) \\<in> Rel \\<and> P \\<longmapsto>Cal P' \\<longrightarrow> (\\<exists>Q'. Q \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel)\""], ["", "text \\<open>A strong barbed simulation is strong reduction simulation that preserves barbs.\\<close>"], ["", "abbreviation strong_barbed_simulation\n    :: \"('proc \\<times> 'proc) set \\<Rightarrow> ('proc, 'barbs) calculusWithBarbs \\<Rightarrow> bool\"\n  where\n  \"strong_barbed_simulation Rel CWB \\<equiv>\n   strong_reduction_simulation Rel (Calculus CWB) \\<and> rel_preserves_barbs Rel CWB\""], ["", "text \\<open>A strong strong simulation is also a weak simulation.\\<close>"], ["", "lemma strong_impl_weak_reduction_simulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  assumes simulation: \"strong_reduction_simulation Rel Cal\"\n  shows \"weak_reduction_simulation Rel Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_reduction_simulation Rel Cal", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q P'.\n       (P, Q) \\<in> Rel \\<and> P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel", "fix P Q P'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q P'.\n       (P, Q) \\<in> Rel \\<and> P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel", "assume A1: \"(P, Q) \\<in> Rel\""], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P Q P'.\n       (P, Q) \\<in> Rel \\<and> P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel", "assume \"P \\<longmapsto>Cal* P'\""], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. \\<And>P Q P'.\n       (P, Q) \\<in> Rel \\<and> P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel", "from this"], ["proof (chain)\npicking this:\n  P \\<longmapsto>Cal* P'", "obtain n where \"P \\<longmapsto>Cal\\<^bsup>n\\<^esup> P'\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        P \\<longmapsto>Cal\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: steps_def)"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal\\<^bsup>n\\<^esup> P'\n\ngoal (1 subgoal):\n 1. \\<And>P Q P'.\n       (P, Q) \\<in> Rel \\<and> P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel", "thus \"\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal\\<^bsup>n\\<^esup> P'\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel", "proof (induct n arbitrary: P')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P'.\n       P \\<longmapsto>Cal\\<^bsup>0\\<^esup> P' \\<Longrightarrow>\n       \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\n 2. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   P \\<longmapsto>Cal\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>Q'.\n                      Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel;\n        P \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel", "case 0"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal\\<^bsup>0\\<^esup> P'\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       P \\<longmapsto>Cal\\<^bsup>0\\<^esup> P' \\<Longrightarrow>\n       \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\n 2. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   P \\<longmapsto>Cal\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>Q'.\n                      Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel;\n        P \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel", "assume \"P \\<longmapsto>Cal\\<^bsup>0\\<^esup> P'\""], ["proof (state)\nthis:\n  P \\<longmapsto>Cal\\<^bsup>0\\<^esup> P'\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       P \\<longmapsto>Cal\\<^bsup>0\\<^esup> P' \\<Longrightarrow>\n       \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\n 2. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   P \\<longmapsto>Cal\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>Q'.\n                      Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel;\n        P \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel", "hence \"P = P'\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal\\<^bsup>0\\<^esup> P'\n\ngoal (1 subgoal):\n 1. P = P'", "by (simp add: steps_refl)"], ["proof (state)\nthis:\n  P = P'\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       P \\<longmapsto>Cal\\<^bsup>0\\<^esup> P' \\<Longrightarrow>\n       \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\n 2. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   P \\<longmapsto>Cal\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>Q'.\n                      Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel;\n        P \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  P = P'\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       P \\<longmapsto>Cal\\<^bsup>0\\<^esup> P' \\<Longrightarrow>\n       \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\n 2. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   P \\<longmapsto>Cal\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>Q'.\n                      Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel;\n        P \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel", "have \"Q \\<longmapsto>Cal* Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto>Cal* Q", "by (rule steps_refl)"], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal* Q\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       P \\<longmapsto>Cal\\<^bsup>0\\<^esup> P' \\<Longrightarrow>\n       \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\n 2. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   P \\<longmapsto>Cal\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>Q'.\n                      Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel;\n        P \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  P = P'\n  Q \\<longmapsto>Cal* Q", "show \"\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P = P'\n  Q \\<longmapsto>Cal* Q\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel", "using A1"], ["proof (prove)\nusing this:\n  P = P'\n  Q \\<longmapsto>Cal* Q\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   P \\<longmapsto>Cal\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>Q'.\n                      Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel;\n        P \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   P \\<longmapsto>Cal\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>Q'.\n                      Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel;\n        P \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel", "case (Suc n P'')"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal\\<^bsup>n\\<^esup> ?P' \\<Longrightarrow>\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (?P', Q') \\<in> Rel\n  P \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> P''\n\ngoal (1 subgoal):\n 1. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   P \\<longmapsto>Cal\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>Q'.\n                      Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel;\n        P \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel", "assume \"P \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> P''\""], ["proof (state)\nthis:\n  P \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> P''\n\ngoal (1 subgoal):\n 1. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   P \\<longmapsto>Cal\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>Q'.\n                      Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel;\n        P \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel", "from this"], ["proof (chain)\npicking this:\n  P \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> P''", "obtain P' where A2: \"P \\<longmapsto>Cal\\<^bsup>n\\<^esup>P'\" and A3: \"P' \\<longmapsto>Cal P''\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> P''\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        P \\<longmapsto>Cal\\<^bsup>n\\<^esup> P' \\<and>\n        P' \\<longmapsto>Cal P'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal\\<^bsup>n\\<^esup> P'\n  P' \\<longmapsto>Cal P''\n\ngoal (1 subgoal):\n 1. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   P \\<longmapsto>Cal\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>Q'.\n                      Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel;\n        P \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel", "assume \"\\<And>P'. P \\<longmapsto>Cal\\<^bsup>n\\<^esup> P' \\<Longrightarrow> \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\""], ["proof (state)\nthis:\n  P \\<longmapsto>Cal\\<^bsup>n\\<^esup> ?P' \\<Longrightarrow>\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (?P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   P \\<longmapsto>Cal\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>Q'.\n                      Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel;\n        P \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel", "with A2"], ["proof (chain)\npicking this:\n  P \\<longmapsto>Cal\\<^bsup>n\\<^esup> P'\n  P \\<longmapsto>Cal\\<^bsup>n\\<^esup> ?P' \\<Longrightarrow>\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (?P', Q') \\<in> Rel", "obtain Q' where A4: \"Q \\<longmapsto>Cal* Q'\" and A5: \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal\\<^bsup>n\\<^esup> P'\n  P \\<longmapsto>Cal\\<^bsup>n\\<^esup> ?P' \\<Longrightarrow>\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (?P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal* Q'\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   P \\<longmapsto>Cal\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>Q'.\n                      Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel;\n        P \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel", "from simulation A5 A3"], ["proof (chain)\npicking this:\n  strong_reduction_simulation Rel Cal\n  (P', Q') \\<in> Rel\n  P' \\<longmapsto>Cal P''", "obtain Q'' where A6: \"Q' \\<longmapsto>Cal Q''\" and A7: \"(P'', Q'') \\<in> Rel\""], ["proof (prove)\nusing this:\n  strong_reduction_simulation Rel Cal\n  (P', Q') \\<in> Rel\n  P' \\<longmapsto>Cal P''\n\ngoal (1 subgoal):\n 1. (\\<And>Q''.\n        Q' \\<longmapsto>Cal Q'' \\<and>\n        (P'', Q'') \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q' \\<longmapsto>Cal Q''\n  (P'', Q'') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   P \\<longmapsto>Cal\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>Q'.\n                      Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel;\n        P \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel", "from A4 A6"], ["proof (chain)\npicking this:\n  Q \\<longmapsto>Cal* Q'\n  Q' \\<longmapsto>Cal Q''", "have \"Q \\<longmapsto>Cal* Q''\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto>Cal* Q'\n  Q' \\<longmapsto>Cal Q''\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto>Cal* Q''", "using steps_add[where P=\"Q\" and Q=\"Q'\" and R=\"Q''\"]"], ["proof (prove)\nusing this:\n  Q \\<longmapsto>Cal* Q'\n  Q' \\<longmapsto>Cal Q''\n  Q \\<longmapsto>?Cal* Q' \\<and> Q' \\<longmapsto>?Cal* Q'' \\<Longrightarrow>\n  Q \\<longmapsto>?Cal* Q''\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto>Cal* Q''", "by (simp add: step_to_steps)"], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal* Q''\n\ngoal (1 subgoal):\n 1. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   P \\<longmapsto>Cal\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>Q'.\n                      Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel;\n        P \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel", "with A7"], ["proof (chain)\npicking this:\n  (P'', Q'') \\<in> Rel\n  Q \\<longmapsto>Cal* Q''", "show \"\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P'', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  (P'', Q'') \\<in> Rel\n  Q \\<longmapsto>Cal* Q''\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P'', Q') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P'', Q') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma strong_barbed_simulation_impl_weak_preservation_of_barbs:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  assumes simulation: \"strong_barbed_simulation Rel CWB\"\n  shows \"rel_weakly_preserves_barbs Rel CWB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_weakly_preserves_barbs Rel CWB", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b x P'.\n       (a, b) \\<in> Rel \\<and>\n       a \\<longmapsto>Calculus CWB* P' \\<and>\n       P'\\<down><CWB>x \\<Longrightarrow>\n       b\\<Down><CWB>x", "fix P Q a P'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b x P'.\n       (a, b) \\<in> Rel \\<and>\n       a \\<longmapsto>Calculus CWB* P' \\<and>\n       P'\\<down><CWB>x \\<Longrightarrow>\n       b\\<Down><CWB>x", "assume \"(P, Q) \\<in> Rel\" and \"P \\<longmapsto>(Calculus CWB)* P'\""], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n  P \\<longmapsto>Calculus CWB* P'\n\ngoal (1 subgoal):\n 1. \\<And>a b x P'.\n       (a, b) \\<in> Rel \\<and>\n       a \\<longmapsto>Calculus CWB* P' \\<and>\n       P'\\<down><CWB>x \\<Longrightarrow>\n       b\\<Down><CWB>x", "with simulation"], ["proof (chain)\npicking this:\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n  (P, Q) \\<in> Rel\n  P \\<longmapsto>Calculus CWB* P'", "obtain Q' where A1: \"Q \\<longmapsto>(Calculus CWB)* Q'\" and A2: \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n  (P, Q) \\<in> Rel\n  P \\<longmapsto>Calculus CWB* P'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        Q \\<longmapsto>Calculus CWB* Q' \\<and>\n        (P', Q') \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using strong_impl_weak_reduction_simulation[where Rel=\"Rel\" and Cal=\"Calculus CWB\"]"], ["proof (prove)\nusing this:\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n  (P, Q) \\<in> Rel\n  P \\<longmapsto>Calculus CWB* P'\n  strong_reduction_simulation Rel (Calculus CWB) \\<Longrightarrow>\n  weak_reduction_simulation Rel (Calculus CWB)\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        Q \\<longmapsto>Calculus CWB* Q' \\<and>\n        (P', Q') \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q \\<longmapsto>Calculus CWB* Q'\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>a b x P'.\n       (a, b) \\<in> Rel \\<and>\n       a \\<longmapsto>Calculus CWB* P' \\<and>\n       P'\\<down><CWB>x \\<Longrightarrow>\n       b\\<Down><CWB>x", "assume \"P'\\<down><CWB>a\""], ["proof (state)\nthis:\n  P'\\<down><CWB>a\n\ngoal (1 subgoal):\n 1. \\<And>a b x P'.\n       (a, b) \\<in> Rel \\<and>\n       a \\<longmapsto>Calculus CWB* P' \\<and>\n       P'\\<down><CWB>x \\<Longrightarrow>\n       b\\<Down><CWB>x", "with simulation A2"], ["proof (chain)\npicking this:\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n  (P', Q') \\<in> Rel\n  P'\\<down><CWB>a", "have \"Q'\\<down><CWB>a\""], ["proof (prove)\nusing this:\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n  (P', Q') \\<in> Rel\n  P'\\<down><CWB>a\n\ngoal (1 subgoal):\n 1. Q'\\<down><CWB>a", "by blast"], ["proof (state)\nthis:\n  Q'\\<down><CWB>a\n\ngoal (1 subgoal):\n 1. \\<And>a b x P'.\n       (a, b) \\<in> Rel \\<and>\n       a \\<longmapsto>Calculus CWB* P' \\<and>\n       P'\\<down><CWB>x \\<Longrightarrow>\n       b\\<Down><CWB>x", "with A1"], ["proof (chain)\npicking this:\n  Q \\<longmapsto>Calculus CWB* Q'\n  Q'\\<down><CWB>a", "show \"Q\\<Down><CWB>a\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto>Calculus CWB* Q'\n  Q'\\<down><CWB>a\n\ngoal (1 subgoal):\n 1. Q\\<Down><CWB>a", "by blast"], ["proof (state)\nthis:\n  Q\\<Down><CWB>a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma strong_impl_weak_barbed_simulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  assumes simulation: \"strong_barbed_simulation Rel CWB\"\n  shows \"weak_barbed_simulation Rel CWB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_barbed_simulation Rel CWB", "using simulation\n            strong_impl_weak_reduction_simulation[where Rel=\"Rel\" and Cal=\"Calculus CWB\"]\n            strong_barbed_simulation_impl_weak_preservation_of_barbs[where Rel=\"Rel\" and CWB=\"CWB\"]"], ["proof (prove)\nusing this:\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n  strong_reduction_simulation Rel (Calculus CWB) \\<Longrightarrow>\n  weak_reduction_simulation Rel (Calculus CWB)\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  rel_preserves_binary_pred Rel\n   (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n  rel_weakly_preserves_barbs Rel CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_simulation Rel CWB", "by blast"], ["", "text \\<open>The reflexive and/or transitive closure of a strong simulation is a strong simulation.\\<close>"], ["", "lemma strong_reduction_simulation_and_closures:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  assumes simulation: \"strong_reduction_simulation Rel Cal\"\n  shows \"strong_reduction_simulation (Rel\\<^sup>=) Cal\"\n    and \"strong_reduction_simulation (Rel\\<^sup>+) Cal\"\n    and \"strong_reduction_simulation (Rel\\<^sup>*) Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strong_reduction_simulation (Rel\\<^sup>=) Cal &&&\n    strong_reduction_simulation (Rel\\<^sup>+) Cal &&&\n    strong_reduction_simulation (Rel\\<^sup>*) Cal", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. strong_reduction_simulation (Rel\\<^sup>=) Cal\n 2. strong_reduction_simulation (Rel\\<^sup>+) Cal\n 3. strong_reduction_simulation (Rel\\<^sup>*) Cal", "from simulation"], ["proof (chain)\npicking this:\n  strong_reduction_simulation Rel Cal", "show A: \"strong_reduction_simulation (Rel\\<^sup>=) Cal\""], ["proof (prove)\nusing this:\n  strong_reduction_simulation Rel Cal\n\ngoal (1 subgoal):\n 1. strong_reduction_simulation (Rel\\<^sup>=) Cal", "by (auto simp add: refl, blast)"], ["proof (state)\nthis:\n  strong_reduction_simulation (Rel\\<^sup>=) Cal\n\ngoal (2 subgoals):\n 1. strong_reduction_simulation (Rel\\<^sup>+) Cal\n 2. strong_reduction_simulation (Rel\\<^sup>*) Cal", "have B: \"\\<And>Rel. strong_reduction_simulation Rel Cal\n           \\<Longrightarrow> strong_reduction_simulation (Rel\\<^sup>+) Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       strong_reduction_simulation Rel Cal \\<Longrightarrow>\n       strong_reduction_simulation (Rel\\<^sup>+) Cal", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Rel P Q P'.\n       strong_reduction_simulation Rel Cal \\<and>\n       (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n       P \\<longmapsto>Cal P' \\<Longrightarrow>\n       \\<exists>Q'. Q \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+", "fix Rel P Q P'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Rel P Q P'.\n       strong_reduction_simulation Rel Cal \\<and>\n       (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n       P \\<longmapsto>Cal P' \\<Longrightarrow>\n       \\<exists>Q'. Q \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+", "assume B1: \"strong_reduction_simulation Rel Cal\""], ["proof (state)\nthis:\n  strong_reduction_simulation Rel Cal\n\ngoal (1 subgoal):\n 1. \\<And>Rel P Q P'.\n       strong_reduction_simulation Rel Cal \\<and>\n       (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n       P \\<longmapsto>Cal P' \\<Longrightarrow>\n       \\<exists>Q'. Q \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+", "assume \"(P, Q) \\<in> Rel\\<^sup>+\" and \"P \\<longmapsto>Cal P'\""], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\\<^sup>+\n  P \\<longmapsto>Cal P'\n\ngoal (1 subgoal):\n 1. \\<And>Rel P Q P'.\n       strong_reduction_simulation Rel Cal \\<and>\n       (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n       P \\<longmapsto>Cal P' \\<Longrightarrow>\n       \\<exists>Q'. Q \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+", "thus \"\\<exists>Q'. Q \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> Rel\\<^sup>+\n  P \\<longmapsto>Cal P'\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+", "proof (induct arbitrary: P')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y P'.\n       (P, y) \\<in> Rel \\<and> P \\<longmapsto>Cal P' \\<Longrightarrow>\n       \\<exists>Q'. y \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+\n 2. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal Q' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "fix Q P'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y P'.\n       (P, y) \\<in> Rel \\<and> P \\<longmapsto>Cal P' \\<Longrightarrow>\n       \\<exists>Q'. y \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+\n 2. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal Q' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "assume \"(P, Q) \\<in> Rel\" and \"P \\<longmapsto>Cal P'\""], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n  P \\<longmapsto>Cal P'\n\ngoal (2 subgoals):\n 1. \\<And>y P'.\n       (P, y) \\<in> Rel \\<and> P \\<longmapsto>Cal P' \\<Longrightarrow>\n       \\<exists>Q'. y \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+\n 2. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal Q' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "with B1"], ["proof (chain)\npicking this:\n  strong_reduction_simulation Rel Cal\n  (P, Q) \\<in> Rel\n  P \\<longmapsto>Cal P'", "obtain Q' where \"Q \\<longmapsto>Cal Q'\" and \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  strong_reduction_simulation Rel Cal\n  (P, Q) \\<in> Rel\n  P \\<longmapsto>Cal P'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        Q \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal Q'\n  (P', Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>y P'.\n       (P, y) \\<in> Rel \\<and> P \\<longmapsto>Cal P' \\<Longrightarrow>\n       \\<exists>Q'. y \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+\n 2. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal Q' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "thus \"\\<exists>Q'. Q \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto>Cal Q'\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+", "by auto"], ["proof (state)\nthis:\n  \\<exists>Q'. Q \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal Q' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal Q' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "case (step Q R P')"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\\<^sup>+\n  (Q, R) \\<in> Rel\n  P \\<longmapsto>Cal ?P' \\<Longrightarrow>\n  \\<exists>Q'. Q \\<longmapsto>Cal Q' \\<and> (?P', Q') \\<in> Rel\\<^sup>+\n  P \\<longmapsto>Cal P'\n\ngoal (1 subgoal):\n 1. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal Q' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "assume \"\\<And>P'. P \\<longmapsto>Cal P' \\<Longrightarrow> (\\<exists>Q'. Q \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+)\"\n         and \"P \\<longmapsto>Cal P'\""], ["proof (state)\nthis:\n  P \\<longmapsto>Cal ?P' \\<Longrightarrow>\n  \\<exists>Q'. Q \\<longmapsto>Cal Q' \\<and> (?P', Q') \\<in> Rel\\<^sup>+\n  P \\<longmapsto>Cal P'\n\ngoal (1 subgoal):\n 1. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal Q' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "from this"], ["proof (chain)\npicking this:\n  P \\<longmapsto>Cal ?P' \\<Longrightarrow>\n  \\<exists>Q'. Q \\<longmapsto>Cal Q' \\<and> (?P', Q') \\<in> Rel\\<^sup>+\n  P \\<longmapsto>Cal P'", "obtain Q' where B2: \"Q \\<longmapsto>Cal Q'\" and B3: \"(P', Q') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal ?P' \\<Longrightarrow>\n  \\<exists>Q'. Q \\<longmapsto>Cal Q' \\<and> (?P', Q') \\<in> Rel\\<^sup>+\n  P \\<longmapsto>Cal P'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        Q \\<longmapsto>Cal Q' \\<and>\n        (P', Q') \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal Q'\n  (P', Q') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal Q' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "assume \"(Q, R) \\<in> Rel\""], ["proof (state)\nthis:\n  (Q, R) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal Q' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "with B1 B2"], ["proof (chain)\npicking this:\n  strong_reduction_simulation Rel Cal\n  Q \\<longmapsto>Cal Q'\n  (Q, R) \\<in> Rel", "obtain R' where B4: \"R \\<longmapsto>Cal R'\" and B5: \"(Q', R') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  strong_reduction_simulation Rel Cal\n  Q \\<longmapsto>Cal Q'\n  (Q, R) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>R'.\n        R \\<longmapsto>Cal R' \\<and>\n        (Q', R') \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  R \\<longmapsto>Cal R'\n  (Q', R') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal Q' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "from B3 B5"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel\\<^sup>+\n  (Q', R') \\<in> Rel\\<^sup>+", "have \"(P', R') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\\<^sup>+\n  (Q', R') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. (P', R') \\<in> Rel\\<^sup>+", "by simp"], ["proof (state)\nthis:\n  (P', R') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal Q' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "with B4"], ["proof (chain)\npicking this:\n  R \\<longmapsto>Cal R'\n  (P', R') \\<in> Rel\\<^sup>+", "show \"\\<exists>R'. R \\<longmapsto>Cal R' \\<and> (P', R') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  R \\<longmapsto>Cal R'\n  (P', R') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<exists>R'. R \\<longmapsto>Cal R' \\<and> (P', R') \\<in> Rel\\<^sup>+", "by blast"], ["proof (state)\nthis:\n  \\<exists>R'. R \\<longmapsto>Cal R' \\<and> (P', R') \\<in> Rel\\<^sup>+\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Q'. Q \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<^sup>+\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  strong_reduction_simulation ?Rel Cal \\<Longrightarrow>\n  strong_reduction_simulation (?Rel\\<^sup>+) Cal\n\ngoal (2 subgoals):\n 1. strong_reduction_simulation (Rel\\<^sup>+) Cal\n 2. strong_reduction_simulation (Rel\\<^sup>*) Cal", "with simulation"], ["proof (chain)\npicking this:\n  strong_reduction_simulation Rel Cal\n  strong_reduction_simulation ?Rel Cal \\<Longrightarrow>\n  strong_reduction_simulation (?Rel\\<^sup>+) Cal", "show \"strong_reduction_simulation (Rel\\<^sup>+) Cal\""], ["proof (prove)\nusing this:\n  strong_reduction_simulation Rel Cal\n  strong_reduction_simulation ?Rel Cal \\<Longrightarrow>\n  strong_reduction_simulation (?Rel\\<^sup>+) Cal\n\ngoal (1 subgoal):\n 1. strong_reduction_simulation (Rel\\<^sup>+) Cal", "by blast"], ["proof (state)\nthis:\n  strong_reduction_simulation (Rel\\<^sup>+) Cal\n\ngoal (1 subgoal):\n 1. strong_reduction_simulation (Rel\\<^sup>*) Cal", "from simulation A B[where Rel=\"Rel\\<^sup>=\"]"], ["proof (chain)\npicking this:\n  strong_reduction_simulation Rel Cal\n  strong_reduction_simulation (Rel\\<^sup>=) Cal\n  strong_reduction_simulation (Rel\\<^sup>=) Cal \\<Longrightarrow>\n  strong_reduction_simulation ((Rel\\<^sup>=)\\<^sup>+) Cal", "show \"strong_reduction_simulation (Rel\\<^sup>*) Cal\""], ["proof (prove)\nusing this:\n  strong_reduction_simulation Rel Cal\n  strong_reduction_simulation (Rel\\<^sup>=) Cal\n  strong_reduction_simulation (Rel\\<^sup>=) Cal \\<Longrightarrow>\n  strong_reduction_simulation ((Rel\\<^sup>=)\\<^sup>+) Cal\n\ngoal (1 subgoal):\n 1. strong_reduction_simulation (Rel\\<^sup>*) Cal", "using trancl_reflcl[of Rel]"], ["proof (prove)\nusing this:\n  strong_reduction_simulation Rel Cal\n  strong_reduction_simulation (Rel\\<^sup>=) Cal\n  strong_reduction_simulation (Rel\\<^sup>=) Cal \\<Longrightarrow>\n  strong_reduction_simulation ((Rel\\<^sup>=)\\<^sup>+) Cal\n  (Rel\\<^sup>=)\\<^sup>+ = Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. strong_reduction_simulation (Rel\\<^sup>*) Cal", "by fast"], ["proof (state)\nthis:\n  strong_reduction_simulation (Rel\\<^sup>*) Cal\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma strong_barbed_simulation_and_closures:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  assumes simulation: \"strong_barbed_simulation Rel CWB\"\n  shows \"strong_barbed_simulation (Rel\\<^sup>=) CWB\"\n    and \"strong_barbed_simulation (Rel\\<^sup>+) CWB\"\n    and \"strong_barbed_simulation (Rel\\<^sup>*) CWB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strong_reduction_simulation (Rel\\<^sup>=) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<^sup>=) (\\<lambda>a. hasBarb a CWB) &&&\n    strong_reduction_simulation (Rel\\<^sup>+) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<^sup>+) (\\<lambda>a. hasBarb a CWB) &&&\n    strong_reduction_simulation (Rel\\<^sup>*) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<^sup>*) (\\<lambda>a. hasBarb a CWB)", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. strong_reduction_simulation (Rel\\<^sup>=) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<^sup>=) (\\<lambda>a. hasBarb a CWB)\n 2. strong_reduction_simulation (Rel\\<^sup>+) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<^sup>+) (\\<lambda>a. hasBarb a CWB)\n 3. strong_reduction_simulation (Rel\\<^sup>*) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<^sup>*) (\\<lambda>a. hasBarb a CWB)", "from simulation"], ["proof (chain)\npicking this:\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)", "show \"strong_barbed_simulation (Rel\\<^sup>=) CWB\""], ["proof (prove)\nusing this:\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n\ngoal (1 subgoal):\n 1. strong_reduction_simulation (Rel\\<^sup>=) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<^sup>=) (\\<lambda>a. hasBarb a CWB)", "using strong_reduction_simulation_and_closures(1)[where Rel=\"Rel\" and Cal=\"Calculus CWB\"]\n            preservation_of_barbs_and_closures(1)[where Rel=\"Rel\" and CWB=\"CWB\"]"], ["proof (prove)\nusing this:\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n  strong_reduction_simulation Rel (Calculus CWB) \\<Longrightarrow>\n  strong_reduction_simulation (Rel\\<^sup>=) (Calculus CWB)\n  rel_preserves_binary_pred Rel\n   (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n  rel_preserves_binary_pred (Rel\\<^sup>=) (\\<lambda>a. hasBarb a CWB)\n\ngoal (1 subgoal):\n 1. strong_reduction_simulation (Rel\\<^sup>=) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<^sup>=) (\\<lambda>a. hasBarb a CWB)", "by blast"], ["proof (state)\nthis:\n  strong_reduction_simulation (Rel\\<^sup>=) (Calculus CWB) \\<and>\n  rel_preserves_binary_pred (Rel\\<^sup>=) (\\<lambda>a. hasBarb a CWB)\n\ngoal (2 subgoals):\n 1. strong_reduction_simulation (Rel\\<^sup>+) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<^sup>+) (\\<lambda>a. hasBarb a CWB)\n 2. strong_reduction_simulation (Rel\\<^sup>*) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<^sup>*) (\\<lambda>a. hasBarb a CWB)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. strong_reduction_simulation (Rel\\<^sup>+) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<^sup>+) (\\<lambda>a. hasBarb a CWB)\n 2. strong_reduction_simulation (Rel\\<^sup>*) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<^sup>*) (\\<lambda>a. hasBarb a CWB)", "from simulation"], ["proof (chain)\npicking this:\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)", "show \"strong_barbed_simulation (Rel\\<^sup>+) CWB\""], ["proof (prove)\nusing this:\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n\ngoal (1 subgoal):\n 1. strong_reduction_simulation (Rel\\<^sup>+) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<^sup>+) (\\<lambda>a. hasBarb a CWB)", "using strong_reduction_simulation_and_closures(2)[where Rel=\"Rel\" and Cal=\"Calculus CWB\"]\n            preservation_of_barbs_and_closures(2)[where Rel=\"Rel\" and CWB=\"CWB\"]"], ["proof (prove)\nusing this:\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n  strong_reduction_simulation Rel (Calculus CWB) \\<Longrightarrow>\n  strong_reduction_simulation (Rel\\<^sup>+) (Calculus CWB)\n  rel_preserves_binary_pred Rel\n   (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n  rel_preserves_binary_pred (Rel\\<^sup>+) (\\<lambda>a. hasBarb a CWB)\n\ngoal (1 subgoal):\n 1. strong_reduction_simulation (Rel\\<^sup>+) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<^sup>+) (\\<lambda>a. hasBarb a CWB)", "by blast"], ["proof (state)\nthis:\n  strong_reduction_simulation (Rel\\<^sup>+) (Calculus CWB) \\<and>\n  rel_preserves_binary_pred (Rel\\<^sup>+) (\\<lambda>a. hasBarb a CWB)\n\ngoal (1 subgoal):\n 1. strong_reduction_simulation (Rel\\<^sup>*) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<^sup>*) (\\<lambda>a. hasBarb a CWB)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. strong_reduction_simulation (Rel\\<^sup>*) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<^sup>*) (\\<lambda>a. hasBarb a CWB)", "from simulation"], ["proof (chain)\npicking this:\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)", "show \"strong_barbed_simulation (Rel\\<^sup>*) CWB\""], ["proof (prove)\nusing this:\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n\ngoal (1 subgoal):\n 1. strong_reduction_simulation (Rel\\<^sup>*) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<^sup>*) (\\<lambda>a. hasBarb a CWB)", "using strong_reduction_simulation_and_closures(3)[where Rel=\"Rel\" and Cal=\"Calculus CWB\"]\n            preservation_of_barbs_and_closures(3)[where Rel=\"Rel\" and CWB=\"CWB\"]"], ["proof (prove)\nusing this:\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n  strong_reduction_simulation Rel (Calculus CWB) \\<Longrightarrow>\n  strong_reduction_simulation (Rel\\<^sup>*) (Calculus CWB)\n  rel_preserves_binary_pred Rel\n   (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n  rel_preserves_binary_pred (Rel\\<^sup>*) (\\<lambda>a. hasBarb a CWB)\n\ngoal (1 subgoal):\n 1. strong_reduction_simulation (Rel\\<^sup>*) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<^sup>*) (\\<lambda>a. hasBarb a CWB)", "by blast"], ["proof (state)\nthis:\n  strong_reduction_simulation (Rel\\<^sup>*) (Calculus CWB) \\<and>\n  rel_preserves_binary_pred (Rel\\<^sup>*) (\\<lambda>a. hasBarb a CWB)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Contrasimulation\\<close>"], ["", "text \\<open>A weak reduction contrasimulation is relation R such that if (P, Q) in R and P evolves to\n        some P' then there exists some Q' such that Q evolves to Q' and (Q', P') in R.\\<close>"], ["", "abbreviation weak_reduction_contrasimulation\n    :: \"('proc \\<times> 'proc) set \\<Rightarrow> 'proc processCalculus \\<Rightarrow> bool\"\n  where\n  \"weak_reduction_contrasimulation Rel Cal \\<equiv>\n   \\<forall>P Q P'. (P, Q) \\<in> Rel \\<and> P \\<longmapsto>Cal* P' \\<longrightarrow> (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel)\""], ["", "text \\<open>A weak barbed contrasimulation is weak reduction contrasimulation that weakly preserves\n        barbs.\\<close>"], ["", "abbreviation weak_barbed_contrasimulation\n    :: \"('proc \\<times> 'proc) set \\<Rightarrow> ('proc, 'barbs) calculusWithBarbs \\<Rightarrow> bool\"\n  where\n  \"weak_barbed_contrasimulation Rel CWB \\<equiv>\n   weak_reduction_contrasimulation Rel (Calculus CWB) \\<and> rel_weakly_preserves_barbs Rel CWB\""], ["", "text \\<open>The reflexive and/or transitive closure of a weak contrasimulation is a weak\n        contrasimulation.\\<close>"], ["", "lemma weak_reduction_contrasimulation_and_closures:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  assumes contrasimulation: \"weak_reduction_contrasimulation Rel Cal\"\n  shows \"weak_reduction_contrasimulation (Rel\\<^sup>=) Cal\"\n    and \"weak_reduction_contrasimulation (Rel\\<^sup>+) Cal\"\n    and \"weak_reduction_contrasimulation (Rel\\<^sup>*) Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_reduction_contrasimulation (Rel\\<^sup>=) Cal &&&\n    weak_reduction_contrasimulation (Rel\\<^sup>+) Cal &&&\n    weak_reduction_contrasimulation (Rel\\<^sup>*) Cal", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. weak_reduction_contrasimulation (Rel\\<^sup>=) Cal\n 2. weak_reduction_contrasimulation (Rel\\<^sup>+) Cal\n 3. weak_reduction_contrasimulation (Rel\\<^sup>*) Cal", "from contrasimulation"], ["proof (chain)\npicking this:\n  weak_reduction_contrasimulation Rel Cal", "show A: \"weak_reduction_contrasimulation (Rel\\<^sup>=) Cal\""], ["proof (prove)\nusing this:\n  weak_reduction_contrasimulation Rel Cal\n\ngoal (1 subgoal):\n 1. weak_reduction_contrasimulation (Rel\\<^sup>=) Cal", "by (auto simp add: refl, blast)"], ["proof (state)\nthis:\n  weak_reduction_contrasimulation (Rel\\<^sup>=) Cal\n\ngoal (2 subgoals):\n 1. weak_reduction_contrasimulation (Rel\\<^sup>+) Cal\n 2. weak_reduction_contrasimulation (Rel\\<^sup>*) Cal", "have B: \"\\<And>Rel. weak_reduction_contrasimulation Rel Cal\n           \\<Longrightarrow> weak_reduction_contrasimulation (Rel\\<^sup>+) Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       weak_reduction_contrasimulation Rel Cal \\<Longrightarrow>\n       weak_reduction_contrasimulation (Rel\\<^sup>+) Cal", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Rel P Q P'.\n       weak_reduction_contrasimulation Rel Cal \\<and>\n       (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>+", "fix Rel P Q P'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Rel P Q P'.\n       weak_reduction_contrasimulation Rel Cal \\<and>\n       (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>+", "assume B1: \"weak_reduction_contrasimulation Rel Cal\""], ["proof (state)\nthis:\n  weak_reduction_contrasimulation Rel Cal\n\ngoal (1 subgoal):\n 1. \\<And>Rel P Q P'.\n       weak_reduction_contrasimulation Rel Cal \\<and>\n       (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>+", "assume \"(P, Q) \\<in> Rel\\<^sup>+\" and \"P \\<longmapsto>Cal* P'\""], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\\<^sup>+\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. \\<And>Rel P Q P'.\n       weak_reduction_contrasimulation Rel Cal \\<and>\n       (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>+", "thus \"\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> Rel\\<^sup>+\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>+", "proof (induct arbitrary: P')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y P'.\n       (P, y) \\<in> Rel \\<and> P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'. y \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>+\n 2. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal* Q' \\<and>\n                            (Q', P') \\<in> Rel\\<^sup>+", "fix Q P'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y P'.\n       (P, y) \\<in> Rel \\<and> P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'. y \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>+\n 2. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal* Q' \\<and>\n                            (Q', P') \\<in> Rel\\<^sup>+", "assume \"(P, Q) \\<in> Rel\" and \"P \\<longmapsto>Cal* P'\""], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n  P \\<longmapsto>Cal* P'\n\ngoal (2 subgoals):\n 1. \\<And>y P'.\n       (P, y) \\<in> Rel \\<and> P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'. y \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>+\n 2. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal* Q' \\<and>\n                            (Q', P') \\<in> Rel\\<^sup>+", "with B1"], ["proof (chain)\npicking this:\n  weak_reduction_contrasimulation Rel Cal\n  (P, Q) \\<in> Rel\n  P \\<longmapsto>Cal* P'", "obtain Q' where \"Q \\<longmapsto>Cal* Q'\" and \"(Q', P') \\<in> Rel\""], ["proof (prove)\nusing this:\n  weak_reduction_contrasimulation Rel Cal\n  (P, Q) \\<in> Rel\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal* Q'\n  (Q', P') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>y P'.\n       (P, y) \\<in> Rel \\<and> P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'. y \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>+\n 2. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal* Q' \\<and>\n                            (Q', P') \\<in> Rel\\<^sup>+", "thus \"\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto>Cal* Q'\n  (Q', P') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>+", "by auto"], ["proof (state)\nthis:\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal* Q' \\<and>\n                            (Q', P') \\<in> Rel\\<^sup>+", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal* Q' \\<and>\n                            (Q', P') \\<in> Rel\\<^sup>+", "case (step Q R P')"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\\<^sup>+\n  (Q, R) \\<in> Rel\n  P \\<longmapsto>Cal* ?P' \\<Longrightarrow>\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', ?P') \\<in> Rel\\<^sup>+\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal* Q' \\<and>\n                            (Q', P') \\<in> Rel\\<^sup>+", "assume \"\\<And>P'. P \\<longmapsto>Cal* P' \\<Longrightarrow> (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>+)\"\n         and \"P \\<longmapsto>Cal* P'\""], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* ?P' \\<Longrightarrow>\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', ?P') \\<in> Rel\\<^sup>+\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal* Q' \\<and>\n                            (Q', P') \\<in> Rel\\<^sup>+", "from this"], ["proof (chain)\npicking this:\n  P \\<longmapsto>Cal* ?P' \\<Longrightarrow>\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', ?P') \\<in> Rel\\<^sup>+\n  P \\<longmapsto>Cal* P'", "obtain Q' where B2: \"Q \\<longmapsto>Cal* Q'\" and B3: \"(Q', P') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal* ?P' \\<Longrightarrow>\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', ?P') \\<in> Rel\\<^sup>+\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        Q \\<longmapsto>Cal* Q' \\<and>\n        (Q', P') \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal* Q'\n  (Q', P') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal* Q' \\<and>\n                            (Q', P') \\<in> Rel\\<^sup>+", "assume \"(Q, R) \\<in> Rel\""], ["proof (state)\nthis:\n  (Q, R) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal* Q' \\<and>\n                            (Q', P') \\<in> Rel\\<^sup>+", "with B1 B2"], ["proof (chain)\npicking this:\n  weak_reduction_contrasimulation Rel Cal\n  Q \\<longmapsto>Cal* Q'\n  (Q, R) \\<in> Rel", "obtain R' where B4: \"R \\<longmapsto>Cal* R'\" and B5: \"(R', Q') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  weak_reduction_contrasimulation Rel Cal\n  Q \\<longmapsto>Cal* Q'\n  (Q, R) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>R'.\n        R \\<longmapsto>Cal* R' \\<and>\n        (R', Q') \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  R \\<longmapsto>Cal* R'\n  (R', Q') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal* Q' \\<and>\n                            (Q', P') \\<in> Rel\\<^sup>+", "from B5 B3"], ["proof (chain)\npicking this:\n  (R', Q') \\<in> Rel\\<^sup>+\n  (Q', P') \\<in> Rel\\<^sup>+", "have \"(R', P') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  (R', Q') \\<in> Rel\\<^sup>+\n  (Q', P') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. (R', P') \\<in> Rel\\<^sup>+", "by simp"], ["proof (state)\nthis:\n  (R', P') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z P'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              y \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>+;\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            z \\<longmapsto>Cal* Q' \\<and>\n                            (Q', P') \\<in> Rel\\<^sup>+", "with B4"], ["proof (chain)\npicking this:\n  R \\<longmapsto>Cal* R'\n  (R', P') \\<in> Rel\\<^sup>+", "show \"\\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (R', P') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  R \\<longmapsto>Cal* R'\n  (R', P') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (R', P') \\<in> Rel\\<^sup>+", "by blast"], ["proof (state)\nthis:\n  \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (R', P') \\<in> Rel\\<^sup>+\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>+\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  weak_reduction_contrasimulation ?Rel Cal \\<Longrightarrow>\n  weak_reduction_contrasimulation (?Rel\\<^sup>+) Cal\n\ngoal (2 subgoals):\n 1. weak_reduction_contrasimulation (Rel\\<^sup>+) Cal\n 2. weak_reduction_contrasimulation (Rel\\<^sup>*) Cal", "with contrasimulation"], ["proof (chain)\npicking this:\n  weak_reduction_contrasimulation Rel Cal\n  weak_reduction_contrasimulation ?Rel Cal \\<Longrightarrow>\n  weak_reduction_contrasimulation (?Rel\\<^sup>+) Cal", "show \"weak_reduction_contrasimulation (Rel\\<^sup>+) Cal\""], ["proof (prove)\nusing this:\n  weak_reduction_contrasimulation Rel Cal\n  weak_reduction_contrasimulation ?Rel Cal \\<Longrightarrow>\n  weak_reduction_contrasimulation (?Rel\\<^sup>+) Cal\n\ngoal (1 subgoal):\n 1. weak_reduction_contrasimulation (Rel\\<^sup>+) Cal", "by blast"], ["proof (state)\nthis:\n  weak_reduction_contrasimulation (Rel\\<^sup>+) Cal\n\ngoal (1 subgoal):\n 1. weak_reduction_contrasimulation (Rel\\<^sup>*) Cal", "from contrasimulation A B[where Rel=\"Rel\\<^sup>=\"]"], ["proof (chain)\npicking this:\n  weak_reduction_contrasimulation Rel Cal\n  weak_reduction_contrasimulation (Rel\\<^sup>=) Cal\n  weak_reduction_contrasimulation (Rel\\<^sup>=) Cal \\<Longrightarrow>\n  weak_reduction_contrasimulation ((Rel\\<^sup>=)\\<^sup>+) Cal", "show \"weak_reduction_contrasimulation (Rel\\<^sup>*) Cal\""], ["proof (prove)\nusing this:\n  weak_reduction_contrasimulation Rel Cal\n  weak_reduction_contrasimulation (Rel\\<^sup>=) Cal\n  weak_reduction_contrasimulation (Rel\\<^sup>=) Cal \\<Longrightarrow>\n  weak_reduction_contrasimulation ((Rel\\<^sup>=)\\<^sup>+) Cal\n\ngoal (1 subgoal):\n 1. weak_reduction_contrasimulation (Rel\\<^sup>*) Cal", "using trancl_reflcl[of Rel]"], ["proof (prove)\nusing this:\n  weak_reduction_contrasimulation Rel Cal\n  weak_reduction_contrasimulation (Rel\\<^sup>=) Cal\n  weak_reduction_contrasimulation (Rel\\<^sup>=) Cal \\<Longrightarrow>\n  weak_reduction_contrasimulation ((Rel\\<^sup>=)\\<^sup>+) Cal\n  (Rel\\<^sup>=)\\<^sup>+ = Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. weak_reduction_contrasimulation (Rel\\<^sup>*) Cal", "by fast"], ["proof (state)\nthis:\n  weak_reduction_contrasimulation (Rel\\<^sup>*) Cal\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weak_barbed_contrasimulation_and_closures:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  assumes contrasimulation: \"weak_barbed_contrasimulation Rel CWB\"\n  shows \"weak_barbed_contrasimulation (Rel\\<^sup>=) CWB\"\n    and \"weak_barbed_contrasimulation (Rel\\<^sup>+) CWB\"\n    and \"weak_barbed_contrasimulation (Rel\\<^sup>*) CWB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_barbed_contrasimulation (Rel\\<^sup>=) CWB &&&\n    weak_barbed_contrasimulation (Rel\\<^sup>+) CWB &&&\n    weak_barbed_contrasimulation (Rel\\<^sup>*) CWB", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. weak_barbed_contrasimulation (Rel\\<^sup>=) CWB\n 2. weak_barbed_contrasimulation (Rel\\<^sup>+) CWB\n 3. weak_barbed_contrasimulation (Rel\\<^sup>*) CWB", "from contrasimulation"], ["proof (chain)\npicking this:\n  weak_barbed_contrasimulation Rel CWB", "show \"weak_barbed_contrasimulation (Rel\\<^sup>=) CWB\""], ["proof (prove)\nusing this:\n  weak_barbed_contrasimulation Rel CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_contrasimulation (Rel\\<^sup>=) CWB", "using weak_reduction_contrasimulation_and_closures(1)[where Rel=\"Rel\" and Cal=\"Calculus CWB\"]\n            weak_preservation_of_barbs_and_closures(1)[where Rel=\"Rel\" and CWB=\"CWB\"]"], ["proof (prove)\nusing this:\n  weak_barbed_contrasimulation Rel CWB\n  weak_reduction_contrasimulation Rel (Calculus CWB) \\<Longrightarrow>\n  weak_reduction_contrasimulation (Rel\\<^sup>=) (Calculus CWB)\n  rel_weakly_preserves_barbs Rel CWB \\<Longrightarrow>\n  rel_weakly_preserves_barbs (Rel\\<^sup>=) CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_contrasimulation (Rel\\<^sup>=) CWB", "by blast"], ["proof (state)\nthis:\n  weak_barbed_contrasimulation (Rel\\<^sup>=) CWB\n\ngoal (2 subgoals):\n 1. weak_barbed_contrasimulation (Rel\\<^sup>+) CWB\n 2. weak_barbed_contrasimulation (Rel\\<^sup>*) CWB", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. weak_barbed_contrasimulation (Rel\\<^sup>+) CWB\n 2. weak_barbed_contrasimulation (Rel\\<^sup>*) CWB", "from contrasimulation"], ["proof (chain)\npicking this:\n  weak_barbed_contrasimulation Rel CWB", "show \"weak_barbed_contrasimulation (Rel\\<^sup>+) CWB\""], ["proof (prove)\nusing this:\n  weak_barbed_contrasimulation Rel CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_contrasimulation (Rel\\<^sup>+) CWB", "using weak_reduction_contrasimulation_and_closures(2)[where Rel=\"Rel\" and Cal=\"Calculus CWB\"]\n            weak_preservation_of_barbs_and_closures(2)[where Rel=\"Rel\" and CWB=\"CWB\"]"], ["proof (prove)\nusing this:\n  weak_barbed_contrasimulation Rel CWB\n  weak_reduction_contrasimulation Rel (Calculus CWB) \\<Longrightarrow>\n  weak_reduction_contrasimulation (Rel\\<^sup>+) (Calculus CWB)\n  rel_weakly_preserves_barbs Rel CWB \\<Longrightarrow>\n  rel_weakly_preserves_barbs (Rel\\<^sup>+) CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_contrasimulation (Rel\\<^sup>+) CWB", "by blast"], ["proof (state)\nthis:\n  weak_barbed_contrasimulation (Rel\\<^sup>+) CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_contrasimulation (Rel\\<^sup>*) CWB", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. weak_barbed_contrasimulation (Rel\\<^sup>*) CWB", "from contrasimulation"], ["proof (chain)\npicking this:\n  weak_barbed_contrasimulation Rel CWB", "show \"weak_barbed_contrasimulation (Rel\\<^sup>*) CWB\""], ["proof (prove)\nusing this:\n  weak_barbed_contrasimulation Rel CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_contrasimulation (Rel\\<^sup>*) CWB", "using weak_reduction_contrasimulation_and_closures(3)[where Rel=\"Rel\" and Cal=\"Calculus CWB\"]\n            weak_preservation_of_barbs_and_closures(3)[where Rel=\"Rel\" and CWB=\"CWB\"]"], ["proof (prove)\nusing this:\n  weak_barbed_contrasimulation Rel CWB\n  weak_reduction_contrasimulation Rel (Calculus CWB) \\<Longrightarrow>\n  weak_reduction_contrasimulation (Rel\\<^sup>*) (Calculus CWB)\n  rel_weakly_preserves_barbs Rel CWB \\<Longrightarrow>\n  rel_weakly_preserves_barbs (Rel\\<^sup>*) CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_contrasimulation (Rel\\<^sup>*) CWB", "by blast"], ["proof (state)\nthis:\n  weak_barbed_contrasimulation (Rel\\<^sup>*) CWB\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Coupled Simulation\\<close>"], ["", "text \\<open>A weak reduction coupled simulation is relation R such that if (P, Q) in R and P evolves to\n        some P' then there exists some Q' such that Q evolves to Q' and (P', Q') in R and there\n        exits some Q' such that Q evolves to Q' and (Q', P') in R.\\<close>"], ["", "abbreviation weak_reduction_coupled_simulation\n    :: \"('proc \\<times> 'proc) set \\<Rightarrow> 'proc processCalculus \\<Rightarrow> bool\"\n  where\n  \"weak_reduction_coupled_simulation Rel Cal \\<equiv>\n   \\<forall>P Q P'. (P, Q) \\<in> Rel \\<and> P \\<longmapsto>Cal* P'\n   \\<longrightarrow> (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel) \\<and> (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel)\""], ["", "text \\<open>A weak barbed coupled simulation is weak reduction coupled simulation that weakly preserves\n        barbs.\\<close>"], ["", "abbreviation weak_barbed_coupled_simulation\n    :: \"('proc \\<times> 'proc) set \\<Rightarrow> ('proc, 'barbs) calculusWithBarbs \\<Rightarrow> bool\"\n  where\n  \"weak_barbed_coupled_simulation Rel CWB \\<equiv>\n   weak_reduction_coupled_simulation Rel (Calculus CWB) \\<and> rel_weakly_preserves_barbs Rel CWB\""], ["", "text \\<open>A weak coupled simulation combines the conditions on a weak simulation and a weak\n        contrasimulation.\\<close>"], ["", "lemma weak_reduction_coupled_simulation_versus_simulation_and_contrasimulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  shows \"weak_reduction_coupled_simulation Rel Cal\n         = (weak_reduction_simulation Rel Cal \\<and> weak_reduction_contrasimulation Rel Cal)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_reduction_coupled_simulation Rel Cal =\n    (weak_reduction_simulation Rel Cal \\<and>\n     weak_reduction_contrasimulation Rel Cal)", "by blast"], ["", "lemma weak_barbed_coupled_simulation_versus_simulation_and_contrasimulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  shows \"weak_barbed_coupled_simulation Rel CWB\n         = (weak_barbed_simulation Rel CWB \\<and> weak_barbed_contrasimulation Rel CWB)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_barbed_coupled_simulation Rel CWB =\n    (weak_barbed_simulation Rel CWB \\<and>\n     weak_barbed_contrasimulation Rel CWB)", "by blast"], ["", "text \\<open>The reflexive and/or transitive closure of a weak coupled simulation is a weak coupled\n        simulation.\\<close>"], ["", "lemma weak_reduction_coupled_simulation_and_closures:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  assumes coupledSimulation: \"weak_reduction_coupled_simulation Rel Cal\"\n  shows \"weak_reduction_coupled_simulation (Rel\\<^sup>=) Cal\"\n    and \"weak_reduction_coupled_simulation (Rel\\<^sup>+) Cal\"\n    and \"weak_reduction_coupled_simulation (Rel\\<^sup>*) Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_reduction_coupled_simulation (Rel\\<^sup>=) Cal &&&\n    weak_reduction_coupled_simulation (Rel\\<^sup>+) Cal &&&\n    weak_reduction_coupled_simulation (Rel\\<^sup>*) Cal", "using weak_reduction_simulation_and_closures[where Rel=\"Rel\" and Cal=\"Cal\"]\n            weak_reduction_contrasimulation_and_closures[where Rel=\"Rel\" and Cal=\"Cal\"]\n            weak_reduction_coupled_simulation_versus_simulation_and_contrasimulation[where Rel=\"Rel\"\n              and Cal=\"Cal\"]\n            coupledSimulation"], ["proof (prove)\nusing this:\n  weak_reduction_simulation Rel Cal \\<Longrightarrow>\n  weak_reduction_simulation (Rel\\<^sup>=) Cal\n  weak_reduction_simulation Rel Cal \\<Longrightarrow>\n  weak_reduction_simulation (Rel\\<^sup>+) Cal\n  weak_reduction_simulation Rel Cal \\<Longrightarrow>\n  weak_reduction_simulation (Rel\\<^sup>*) Cal\n  weak_reduction_contrasimulation Rel Cal \\<Longrightarrow>\n  weak_reduction_contrasimulation (Rel\\<^sup>=) Cal\n  weak_reduction_contrasimulation Rel Cal \\<Longrightarrow>\n  weak_reduction_contrasimulation (Rel\\<^sup>+) Cal\n  weak_reduction_contrasimulation Rel Cal \\<Longrightarrow>\n  weak_reduction_contrasimulation (Rel\\<^sup>*) Cal\n  weak_reduction_coupled_simulation Rel Cal =\n  (weak_reduction_simulation Rel Cal \\<and>\n   weak_reduction_contrasimulation Rel Cal)\n  weak_reduction_coupled_simulation Rel Cal\n\ngoal (1 subgoal):\n 1. weak_reduction_coupled_simulation (Rel\\<^sup>=) Cal &&&\n    weak_reduction_coupled_simulation (Rel\\<^sup>+) Cal &&&\n    weak_reduction_coupled_simulation (Rel\\<^sup>*) Cal", "by auto"], ["", "lemma weak_barbed_coupled_simulation_and_closures:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  assumes coupledSimulation: \"weak_barbed_coupled_simulation Rel CWB\"\n  shows \"weak_barbed_coupled_simulation (Rel\\<^sup>=) CWB\"\n    and \"weak_barbed_coupled_simulation (Rel\\<^sup>+) CWB\"\n    and \"weak_barbed_coupled_simulation (Rel\\<^sup>*) CWB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_barbed_coupled_simulation (Rel\\<^sup>=) CWB &&&\n    weak_barbed_coupled_simulation (Rel\\<^sup>+) CWB &&&\n    weak_barbed_coupled_simulation (Rel\\<^sup>*) CWB", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. weak_barbed_coupled_simulation (Rel\\<^sup>=) CWB\n 2. weak_barbed_coupled_simulation (Rel\\<^sup>+) CWB\n 3. weak_barbed_coupled_simulation (Rel\\<^sup>*) CWB", "from coupledSimulation"], ["proof (chain)\npicking this:\n  weak_barbed_coupled_simulation Rel CWB", "show \"weak_barbed_coupled_simulation (Rel\\<^sup>=) CWB\""], ["proof (prove)\nusing this:\n  weak_barbed_coupled_simulation Rel CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_coupled_simulation (Rel\\<^sup>=) CWB", "using weak_reduction_coupled_simulation_and_closures(1)[where Rel=\"Rel\"\n              and Cal=\"Calculus CWB\"]\n            weak_preservation_of_barbs_and_closures(1)[where Rel=\"Rel\" and CWB=\"CWB\"]"], ["proof (prove)\nusing this:\n  weak_barbed_coupled_simulation Rel CWB\n  weak_reduction_coupled_simulation Rel (Calculus CWB) \\<Longrightarrow>\n  weak_reduction_coupled_simulation (Rel\\<^sup>=) (Calculus CWB)\n  rel_weakly_preserves_barbs Rel CWB \\<Longrightarrow>\n  rel_weakly_preserves_barbs (Rel\\<^sup>=) CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_coupled_simulation (Rel\\<^sup>=) CWB", "by blast"], ["proof (state)\nthis:\n  weak_barbed_coupled_simulation (Rel\\<^sup>=) CWB\n\ngoal (2 subgoals):\n 1. weak_barbed_coupled_simulation (Rel\\<^sup>+) CWB\n 2. weak_barbed_coupled_simulation (Rel\\<^sup>*) CWB", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. weak_barbed_coupled_simulation (Rel\\<^sup>+) CWB\n 2. weak_barbed_coupled_simulation (Rel\\<^sup>*) CWB", "from coupledSimulation"], ["proof (chain)\npicking this:\n  weak_barbed_coupled_simulation Rel CWB", "show \"weak_barbed_coupled_simulation (Rel\\<^sup>+) CWB\""], ["proof (prove)\nusing this:\n  weak_barbed_coupled_simulation Rel CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_coupled_simulation (Rel\\<^sup>+) CWB", "using weak_reduction_coupled_simulation_and_closures(2)[where Rel=\"Rel\"\n              and Cal=\"Calculus CWB\"]\n            weak_preservation_of_barbs_and_closures(2)[where Rel=\"Rel\" and CWB=\"CWB\"]"], ["proof (prove)\nusing this:\n  weak_barbed_coupled_simulation Rel CWB\n  weak_reduction_coupled_simulation Rel (Calculus CWB) \\<Longrightarrow>\n  weak_reduction_coupled_simulation (Rel\\<^sup>+) (Calculus CWB)\n  rel_weakly_preserves_barbs Rel CWB \\<Longrightarrow>\n  rel_weakly_preserves_barbs (Rel\\<^sup>+) CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_coupled_simulation (Rel\\<^sup>+) CWB", "by blast"], ["proof (state)\nthis:\n  weak_barbed_coupled_simulation (Rel\\<^sup>+) CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_coupled_simulation (Rel\\<^sup>*) CWB", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. weak_barbed_coupled_simulation (Rel\\<^sup>*) CWB", "from coupledSimulation"], ["proof (chain)\npicking this:\n  weak_barbed_coupled_simulation Rel CWB", "show \"weak_barbed_coupled_simulation (Rel\\<^sup>*) CWB\""], ["proof (prove)\nusing this:\n  weak_barbed_coupled_simulation Rel CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_coupled_simulation (Rel\\<^sup>*) CWB", "using weak_reduction_coupled_simulation_and_closures(3)[where Rel=\"Rel\"\n              and Cal=\"Calculus CWB\"]\n            weak_preservation_of_barbs_and_closures(3)[where Rel=\"Rel\" and CWB=\"CWB\"]"], ["proof (prove)\nusing this:\n  weak_barbed_coupled_simulation Rel CWB\n  weak_reduction_coupled_simulation Rel (Calculus CWB) \\<Longrightarrow>\n  weak_reduction_coupled_simulation (Rel\\<^sup>*) (Calculus CWB)\n  rel_weakly_preserves_barbs Rel CWB \\<Longrightarrow>\n  rel_weakly_preserves_barbs (Rel\\<^sup>*) CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_coupled_simulation (Rel\\<^sup>*) CWB", "by blast"], ["proof (state)\nthis:\n  weak_barbed_coupled_simulation (Rel\\<^sup>*) CWB\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Correspondence Simulation\\<close>"], ["", "text \\<open>A weak reduction correspondence simulation is relation R such that\n        (1) if (P, Q) in R and P evolves to some P' then there exists some Q' such that Q evolves\n            to Q' and (P', Q') in R, and\n        (2) if (P, Q) in R and P evolves to some P' then there exists some P'' and Q'' such that\n            P evolves to P'' and Q' evolves to Q'' and (P'', Q'') in Rel.\\<close>"], ["", "abbreviation weak_reduction_correspondence_simulation\n    :: \"('proc \\<times> 'proc) set \\<Rightarrow> 'proc processCalculus \\<Rightarrow> bool\"\n  where\n  \"weak_reduction_correspondence_simulation Rel Cal \\<equiv>\n   (\\<forall>P Q P'. (P, Q) \\<in> Rel \\<and> P \\<longmapsto>Cal* P' \\<longrightarrow> (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel))\n   \\<and> (\\<forall>P Q Q'. (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q'\n      \\<longrightarrow> (\\<exists>P'' Q''. P \\<longmapsto>Cal* P'' \\<and> Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel))\""], ["", "text \\<open>A weak barbed correspondence simulation is weak reduction correspondence simulation that\n        weakly respects barbs.\\<close>"], ["", "abbreviation weak_barbed_correspondence_simulation\n    :: \"('proc \\<times> 'proc) set \\<Rightarrow> ('proc, 'barbs) calculusWithBarbs \\<Rightarrow> bool\"\n  where\n  \"weak_barbed_correspondence_simulation Rel CWB \\<equiv>\n   weak_reduction_correspondence_simulation Rel (Calculus CWB)\n   \\<and> rel_weakly_respects_barbs Rel CWB\""], ["", "text \\<open>For each weak correspondence simulation R there exists a weak coupled simulation that\n        contains all pairs of R in both directions.\\<close>"], ["", "inductive_set cSim_cs :: \"('proc \\<times> 'proc) set \\<Rightarrow> 'proc processCalculus \\<Rightarrow> ('proc \\<times> 'proc) set\"\n    for Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  where\n  left:  \"\\<lbrakk>Q \\<longmapsto>Cal* Q'; (P', Q') \\<in> Rel\\<rbrakk> \\<Longrightarrow> (P', Q) \\<in> cSim_cs Rel Cal\" |\n  right: \"\\<lbrakk>P \\<longmapsto>Cal* P'; (Q, P) \\<in> Rel\\<rbrakk> \\<Longrightarrow> (P', Q) \\<in> cSim_cs Rel Cal\" |\n  trans: \"\\<lbrakk>(P, Q) \\<in> cSim_cs Rel Cal; (Q, R) \\<in> cSim_cs Rel Cal\\<rbrakk> \\<Longrightarrow> (P, R) \\<in> cSim_cs Rel Cal\""], ["", "lemma weak_reduction_correspondence_simulation_impl_coupled_simulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  assumes corrSim: \"weak_reduction_correspondence_simulation Rel Cal\"\n  shows \"weak_reduction_coupled_simulation (cSim_cs Rel Cal) Cal\"\n    and \"\\<forall>P Q. (P, Q) \\<in> Rel \\<longrightarrow> (P, Q) \\<in> cSim_cs Rel Cal \\<and> (Q, P) \\<in> cSim_cs Rel Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_reduction_coupled_simulation (cSim_cs Rel Cal) Cal &&&\n    \\<forall>P Q.\n       (P, Q) \\<in> Rel \\<longrightarrow>\n       (P, Q) \\<in> cSim_cs Rel Cal \\<and> (Q, P) \\<in> cSim_cs Rel Cal", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. weak_reduction_coupled_simulation (cSim_cs Rel Cal) Cal\n 2. \\<forall>P Q.\n       (P, Q) \\<in> Rel \\<longrightarrow>\n       (P, Q) \\<in> cSim_cs Rel Cal \\<and> (Q, P) \\<in> cSim_cs Rel Cal", "show \"weak_reduction_coupled_simulation (cSim_cs Rel Cal) Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_reduction_coupled_simulation (cSim_cs Rel Cal) Cal", "proof (rule allI, rule allI, rule allI, rule impI, erule conjE)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q P'.\n       (P, Q) \\<in> cSim_cs Rel Cal \\<and>\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and>\n           (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> cSim_cs Rel Cal)", "fix P Q P'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q P'.\n       (P, Q) \\<in> cSim_cs Rel Cal \\<and>\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and>\n           (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> cSim_cs Rel Cal)", "assume \"(P, Q) \\<in> cSim_cs Rel Cal\" and \"P \\<longmapsto>Cal* P'\""], ["proof (state)\nthis:\n  (P, Q) \\<in> cSim_cs Rel Cal\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. \\<And>P Q P'.\n       (P, Q) \\<in> cSim_cs Rel Cal \\<and>\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and>\n           (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> cSim_cs Rel Cal)", "thus \"(\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> cSim_cs Rel Cal)\n          \\<and> (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> cSim_cs Rel Cal)\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> cSim_cs Rel Cal\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. (\\<exists>Q'.\n        Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n    (\\<exists>Q'.\n        Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> cSim_cs Rel Cal)", "proof (induct arbitrary: P')"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>Q Q' P' P'a.\n       Q \\<longmapsto>Cal* Q' \\<and>\n       (P', Q') \\<in> Rel \\<and> P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and>\n           (P'a, Q') \\<in> cSim_cs Rel Cal) \\<and>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> cSim_cs Rel Cal)\n 2. \\<And>P P' Q P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       (Q, P) \\<in> Rel \\<and> P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and>\n           (P'a, Q') \\<in> cSim_cs Rel Cal) \\<and>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> cSim_cs Rel Cal)\n 3. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        (Q, R) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n                         (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (Q', P') \\<in> cSim_cs Rel Cal)", "case (left Q Q' P)"], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal* Q'\n  (P, Q') \\<in> Rel\n  P \\<longmapsto>Cal* P'\n\ngoal (3 subgoals):\n 1. \\<And>Q Q' P' P'a.\n       Q \\<longmapsto>Cal* Q' \\<and>\n       (P', Q') \\<in> Rel \\<and> P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and>\n           (P'a, Q') \\<in> cSim_cs Rel Cal) \\<and>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> cSim_cs Rel Cal)\n 2. \\<And>P P' Q P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       (Q, P) \\<in> Rel \\<and> P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and>\n           (P'a, Q') \\<in> cSim_cs Rel Cal) \\<and>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> cSim_cs Rel Cal)\n 3. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        (Q, R) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n                         (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (Q', P') \\<in> cSim_cs Rel Cal)", "assume \"(P, Q') \\<in> Rel\" and \"P \\<longmapsto>Cal* P'\""], ["proof (state)\nthis:\n  (P, Q') \\<in> Rel\n  P \\<longmapsto>Cal* P'\n\ngoal (3 subgoals):\n 1. \\<And>Q Q' P' P'a.\n       Q \\<longmapsto>Cal* Q' \\<and>\n       (P', Q') \\<in> Rel \\<and> P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and>\n           (P'a, Q') \\<in> cSim_cs Rel Cal) \\<and>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> cSim_cs Rel Cal)\n 2. \\<And>P P' Q P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       (Q, P) \\<in> Rel \\<and> P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and>\n           (P'a, Q') \\<in> cSim_cs Rel Cal) \\<and>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> cSim_cs Rel Cal)\n 3. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        (Q, R) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n                         (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (Q', P') \\<in> cSim_cs Rel Cal)", "with corrSim"], ["proof (chain)\npicking this:\n  weak_reduction_correspondence_simulation Rel Cal\n  (P, Q') \\<in> Rel\n  P \\<longmapsto>Cal* P'", "obtain Q'' where A1: \"Q' \\<longmapsto>Cal* Q''\" and A2: \"(P', Q'') \\<in> Rel\""], ["proof (prove)\nusing this:\n  weak_reduction_correspondence_simulation Rel Cal\n  (P, Q') \\<in> Rel\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. (\\<And>Q''.\n        Q' \\<longmapsto>Cal* Q'' \\<and>\n        (P', Q'') \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q' \\<longmapsto>Cal* Q''\n  (P', Q'') \\<in> Rel\n\ngoal (3 subgoals):\n 1. \\<And>Q Q' P' P'a.\n       Q \\<longmapsto>Cal* Q' \\<and>\n       (P', Q') \\<in> Rel \\<and> P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and>\n           (P'a, Q') \\<in> cSim_cs Rel Cal) \\<and>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> cSim_cs Rel Cal)\n 2. \\<And>P P' Q P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       (Q, P) \\<in> Rel \\<and> P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and>\n           (P'a, Q') \\<in> cSim_cs Rel Cal) \\<and>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> cSim_cs Rel Cal)\n 3. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        (Q, R) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n                         (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (Q', P') \\<in> cSim_cs Rel Cal)", "assume A3: \"Q \\<longmapsto>Cal* Q'\""], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal* Q'\n\ngoal (3 subgoals):\n 1. \\<And>Q Q' P' P'a.\n       Q \\<longmapsto>Cal* Q' \\<and>\n       (P', Q') \\<in> Rel \\<and> P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and>\n           (P'a, Q') \\<in> cSim_cs Rel Cal) \\<and>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> cSim_cs Rel Cal)\n 2. \\<And>P P' Q P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       (Q, P) \\<in> Rel \\<and> P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and>\n           (P'a, Q') \\<in> cSim_cs Rel Cal) \\<and>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> cSim_cs Rel Cal)\n 3. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        (Q, R) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n                         (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (Q', P') \\<in> cSim_cs Rel Cal)", "from this A1"], ["proof (chain)\npicking this:\n  Q \\<longmapsto>Cal* Q'\n  Q' \\<longmapsto>Cal* Q''", "have A4: \"Q \\<longmapsto>Cal* Q''\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto>Cal* Q'\n  Q' \\<longmapsto>Cal* Q''\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto>Cal* Q''", "by (rule steps_add[where P=\"Q\" and Q=\"Q'\" and R=\"Q''\"])"], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal* Q''\n\ngoal (3 subgoals):\n 1. \\<And>Q Q' P' P'a.\n       Q \\<longmapsto>Cal* Q' \\<and>\n       (P', Q') \\<in> Rel \\<and> P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and>\n           (P'a, Q') \\<in> cSim_cs Rel Cal) \\<and>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> cSim_cs Rel Cal)\n 2. \\<And>P P' Q P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       (Q, P) \\<in> Rel \\<and> P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and>\n           (P'a, Q') \\<in> cSim_cs Rel Cal) \\<and>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> cSim_cs Rel Cal)\n 3. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        (Q, R) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n                         (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (Q', P') \\<in> cSim_cs Rel Cal)", "have \"Q'' \\<longmapsto>Cal* Q''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q'' \\<longmapsto>Cal* Q''", "by (rule steps_refl)"], ["proof (state)\nthis:\n  Q'' \\<longmapsto>Cal* Q''\n\ngoal (3 subgoals):\n 1. \\<And>Q Q' P' P'a.\n       Q \\<longmapsto>Cal* Q' \\<and>\n       (P', Q') \\<in> Rel \\<and> P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and>\n           (P'a, Q') \\<in> cSim_cs Rel Cal) \\<and>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> cSim_cs Rel Cal)\n 2. \\<And>P P' Q P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       (Q, P) \\<in> Rel \\<and> P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and>\n           (P'a, Q') \\<in> cSim_cs Rel Cal) \\<and>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> cSim_cs Rel Cal)\n 3. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        (Q, R) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n                         (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (Q', P') \\<in> cSim_cs Rel Cal)", "with A2"], ["proof (chain)\npicking this:\n  (P', Q'') \\<in> Rel\n  Q'' \\<longmapsto>Cal* Q''", "have A5: \"(Q'', P') \\<in> cSim_cs Rel Cal\""], ["proof (prove)\nusing this:\n  (P', Q'') \\<in> Rel\n  Q'' \\<longmapsto>Cal* Q''\n\ngoal (1 subgoal):\n 1. (Q'', P') \\<in> cSim_cs Rel Cal", "by (simp add: cSim_cs.right)"], ["proof (state)\nthis:\n  (Q'', P') \\<in> cSim_cs Rel Cal\n\ngoal (3 subgoals):\n 1. \\<And>Q Q' P' P'a.\n       Q \\<longmapsto>Cal* Q' \\<and>\n       (P', Q') \\<in> Rel \\<and> P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and>\n           (P'a, Q') \\<in> cSim_cs Rel Cal) \\<and>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> cSim_cs Rel Cal)\n 2. \\<And>P P' Q P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       (Q, P) \\<in> Rel \\<and> P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and>\n           (P'a, Q') \\<in> cSim_cs Rel Cal) \\<and>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> cSim_cs Rel Cal)\n 3. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        (Q, R) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n                         (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (Q', P') \\<in> cSim_cs Rel Cal)", "from A1 A2"], ["proof (chain)\npicking this:\n  Q' \\<longmapsto>Cal* Q''\n  (P', Q'') \\<in> Rel", "have \"(P', Q') \\<in> cSim_cs Rel Cal\""], ["proof (prove)\nusing this:\n  Q' \\<longmapsto>Cal* Q''\n  (P', Q'') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (P', Q') \\<in> cSim_cs Rel Cal", "by (rule cSim_cs.left)"], ["proof (state)\nthis:\n  (P', Q') \\<in> cSim_cs Rel Cal\n\ngoal (3 subgoals):\n 1. \\<And>Q Q' P' P'a.\n       Q \\<longmapsto>Cal* Q' \\<and>\n       (P', Q') \\<in> Rel \\<and> P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and>\n           (P'a, Q') \\<in> cSim_cs Rel Cal) \\<and>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> cSim_cs Rel Cal)\n 2. \\<And>P P' Q P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       (Q, P) \\<in> Rel \\<and> P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and>\n           (P'a, Q') \\<in> cSim_cs Rel Cal) \\<and>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> cSim_cs Rel Cal)\n 3. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        (Q, R) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n                         (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (Q', P') \\<in> cSim_cs Rel Cal)", "with A4 A5 A3"], ["proof (chain)\npicking this:\n  Q \\<longmapsto>Cal* Q''\n  (Q'', P') \\<in> cSim_cs Rel Cal\n  Q \\<longmapsto>Cal* Q'\n  (P', Q') \\<in> cSim_cs Rel Cal", "show ?case"], ["proof (prove)\nusing this:\n  Q \\<longmapsto>Cal* Q''\n  (Q'', P') \\<in> cSim_cs Rel Cal\n  Q \\<longmapsto>Cal* Q'\n  (P', Q') \\<in> cSim_cs Rel Cal\n\ngoal (1 subgoal):\n 1. (\\<exists>Q'.\n        Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n    (\\<exists>Q'.\n        Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> cSim_cs Rel Cal)", "by blast"], ["proof (state)\nthis:\n  (\\<exists>Q'.\n      Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n  (\\<exists>Q'.\n      Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> cSim_cs Rel Cal)\n\ngoal (2 subgoals):\n 1. \\<And>P P' Q P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       (Q, P) \\<in> Rel \\<and> P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and>\n           (P'a, Q') \\<in> cSim_cs Rel Cal) \\<and>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> cSim_cs Rel Cal)\n 2. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        (Q, R) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n                         (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (Q', P') \\<in> cSim_cs Rel Cal)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P P' Q P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       (Q, P) \\<in> Rel \\<and> P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and>\n           (P'a, Q') \\<in> cSim_cs Rel Cal) \\<and>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> cSim_cs Rel Cal)\n 2. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        (Q, R) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n                         (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (Q', P') \\<in> cSim_cs Rel Cal)", "case (right P P' Q P'')"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P'\n  (Q, P) \\<in> Rel\n  P' \\<longmapsto>Cal* P''\n\ngoal (2 subgoals):\n 1. \\<And>P P' Q P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       (Q, P) \\<in> Rel \\<and> P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and>\n           (P'a, Q') \\<in> cSim_cs Rel Cal) \\<and>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> cSim_cs Rel Cal)\n 2. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        (Q, R) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n                         (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (Q', P') \\<in> cSim_cs Rel Cal)", "assume \"P \\<longmapsto>Cal* P'\" and \"P' \\<longmapsto>Cal* P''\""], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P'\n  P' \\<longmapsto>Cal* P''\n\ngoal (2 subgoals):\n 1. \\<And>P P' Q P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       (Q, P) \\<in> Rel \\<and> P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and>\n           (P'a, Q') \\<in> cSim_cs Rel Cal) \\<and>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> cSim_cs Rel Cal)\n 2. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        (Q, R) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n                         (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (Q', P') \\<in> cSim_cs Rel Cal)", "hence B1: \"P \\<longmapsto>Cal* P''\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal* P'\n  P' \\<longmapsto>Cal* P''\n\ngoal (1 subgoal):\n 1. P \\<longmapsto>Cal* P''", "by (rule steps_add[where P=\"P\" and Q=\"P'\" and R=\"P''\"])"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P''\n\ngoal (2 subgoals):\n 1. \\<And>P P' Q P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       (Q, P) \\<in> Rel \\<and> P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and>\n           (P'a, Q') \\<in> cSim_cs Rel Cal) \\<and>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> cSim_cs Rel Cal)\n 2. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        (Q, R) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n                         (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (Q', P') \\<in> cSim_cs Rel Cal)", "assume B2: \"(Q, P) \\<in> Rel\""], ["proof (state)\nthis:\n  (Q, P) \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>P P' Q P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       (Q, P) \\<in> Rel \\<and> P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and>\n           (P'a, Q') \\<in> cSim_cs Rel Cal) \\<and>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> cSim_cs Rel Cal)\n 2. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        (Q, R) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n                         (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (Q', P') \\<in> cSim_cs Rel Cal)", "with corrSim B1"], ["proof (chain)\npicking this:\n  weak_reduction_correspondence_simulation Rel Cal\n  P \\<longmapsto>Cal* P''\n  (Q, P) \\<in> Rel", "obtain Q''' P''' where B3: \"Q \\<longmapsto>Cal* Q'''\" and B4: \"P'' \\<longmapsto>Cal* P'''\"\n                                       and B5: \"(Q''', P''') \\<in> Rel\""], ["proof (prove)\nusing this:\n  weak_reduction_correspondence_simulation Rel Cal\n  P \\<longmapsto>Cal* P''\n  (Q, P) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>Q''' P'''.\n        Q \\<longmapsto>Cal* Q''' \\<and>\n        P'' \\<longmapsto>Cal* P''' \\<and>\n        (Q''', P''') \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal* Q'''\n  P'' \\<longmapsto>Cal* P'''\n  (Q''', P''') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>P P' Q P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       (Q, P) \\<in> Rel \\<and> P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and>\n           (P'a, Q') \\<in> cSim_cs Rel Cal) \\<and>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> cSim_cs Rel Cal)\n 2. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        (Q, R) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n                         (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (Q', P') \\<in> cSim_cs Rel Cal)", "from B4 B5"], ["proof (chain)\npicking this:\n  P'' \\<longmapsto>Cal* P'''\n  (Q''', P''') \\<in> Rel", "have B6: \"(Q''', P'') \\<in> cSim_cs Rel Cal\""], ["proof (prove)\nusing this:\n  P'' \\<longmapsto>Cal* P'''\n  (Q''', P''') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (Q''', P'') \\<in> cSim_cs Rel Cal", "by (rule cSim_cs.left)"], ["proof (state)\nthis:\n  (Q''', P'') \\<in> cSim_cs Rel Cal\n\ngoal (2 subgoals):\n 1. \\<And>P P' Q P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       (Q, P) \\<in> Rel \\<and> P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and>\n           (P'a, Q') \\<in> cSim_cs Rel Cal) \\<and>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> cSim_cs Rel Cal)\n 2. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        (Q, R) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n                         (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (Q', P') \\<in> cSim_cs Rel Cal)", "have B7: \"Q \\<longmapsto>Cal* Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto>Cal* Q", "by (rule steps_refl)"], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal* Q\n\ngoal (2 subgoals):\n 1. \\<And>P P' Q P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       (Q, P) \\<in> Rel \\<and> P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and>\n           (P'a, Q') \\<in> cSim_cs Rel Cal) \\<and>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> cSim_cs Rel Cal)\n 2. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        (Q, R) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n                         (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (Q', P') \\<in> cSim_cs Rel Cal)", "from B1 B2"], ["proof (chain)\npicking this:\n  P \\<longmapsto>Cal* P''\n  (Q, P) \\<in> Rel", "have \"(P'', Q) \\<in> cSim_cs Rel Cal\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal* P''\n  (Q, P) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (P'', Q) \\<in> cSim_cs Rel Cal", "by (rule cSim_cs.right)"], ["proof (state)\nthis:\n  (P'', Q) \\<in> cSim_cs Rel Cal\n\ngoal (2 subgoals):\n 1. \\<And>P P' Q P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       (Q, P) \\<in> Rel \\<and> P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and>\n           (P'a, Q') \\<in> cSim_cs Rel Cal) \\<and>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> cSim_cs Rel Cal)\n 2. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        (Q, R) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n                         (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (Q', P') \\<in> cSim_cs Rel Cal)", "with B3 B6 B7"], ["proof (chain)\npicking this:\n  Q \\<longmapsto>Cal* Q'''\n  (Q''', P'') \\<in> cSim_cs Rel Cal\n  Q \\<longmapsto>Cal* Q\n  (P'', Q) \\<in> cSim_cs Rel Cal", "show ?case"], ["proof (prove)\nusing this:\n  Q \\<longmapsto>Cal* Q'''\n  (Q''', P'') \\<in> cSim_cs Rel Cal\n  Q \\<longmapsto>Cal* Q\n  (P'', Q) \\<in> cSim_cs Rel Cal\n\ngoal (1 subgoal):\n 1. (\\<exists>Q'.\n        Q \\<longmapsto>Cal* Q' \\<and>\n        (P'', Q') \\<in> cSim_cs Rel Cal) \\<and>\n    (\\<exists>Q'.\n        Q \\<longmapsto>Cal* Q' \\<and> (Q', P'') \\<in> cSim_cs Rel Cal)", "by blast"], ["proof (state)\nthis:\n  (\\<exists>Q'.\n      Q \\<longmapsto>Cal* Q' \\<and> (P'', Q') \\<in> cSim_cs Rel Cal) \\<and>\n  (\\<exists>Q'.\n      Q \\<longmapsto>Cal* Q' \\<and> (Q', P'') \\<in> cSim_cs Rel Cal)\n\ngoal (1 subgoal):\n 1. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        (Q, R) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n                         (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (Q', P') \\<in> cSim_cs Rel Cal)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        (Q, R) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n                         (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (Q', P') \\<in> cSim_cs Rel Cal)", "case (trans P Q R P')"], ["proof (state)\nthis:\n  (P, Q) \\<in> cSim_cs Rel Cal\n  P \\<longmapsto>Cal* ?P' \\<Longrightarrow>\n  (\\<exists>Q'.\n      Q \\<longmapsto>Cal* Q' \\<and> (?P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n  (\\<exists>Q'.\n      Q \\<longmapsto>Cal* Q' \\<and> (Q', ?P') \\<in> cSim_cs Rel Cal)\n  (Q, R) \\<in> cSim_cs Rel Cal\n  Q \\<longmapsto>Cal* ?P' \\<Longrightarrow>\n  (\\<exists>Q'.\n      R \\<longmapsto>Cal* Q' \\<and> (?P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n  (\\<exists>Q'.\n      R \\<longmapsto>Cal* Q' \\<and> (Q', ?P') \\<in> cSim_cs Rel Cal)\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        (Q, R) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n                         (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (Q', P') \\<in> cSim_cs Rel Cal)", "assume \"P \\<longmapsto>Cal* P'\"\n         and \"\\<And>P'. P \\<longmapsto>Cal* P' \\<Longrightarrow> (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> cSim_cs Rel Cal)\n                                     \\<and> (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> cSim_cs Rel Cal)\""], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P'\n  P \\<longmapsto>Cal* ?P' \\<Longrightarrow>\n  (\\<exists>Q'.\n      Q \\<longmapsto>Cal* Q' \\<and> (?P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n  (\\<exists>Q'.\n      Q \\<longmapsto>Cal* Q' \\<and> (Q', ?P') \\<in> cSim_cs Rel Cal)\n\ngoal (1 subgoal):\n 1. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        (Q, R) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n                         (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (Q', P') \\<in> cSim_cs Rel Cal)", "from this"], ["proof (chain)\npicking this:\n  P \\<longmapsto>Cal* P'\n  P \\<longmapsto>Cal* ?P' \\<Longrightarrow>\n  (\\<exists>Q'.\n      Q \\<longmapsto>Cal* Q' \\<and> (?P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n  (\\<exists>Q'.\n      Q \\<longmapsto>Cal* Q' \\<and> (Q', ?P') \\<in> cSim_cs Rel Cal)", "obtain Q1 Q2 where C1: \"Q \\<longmapsto>Cal* Q1\" and C2: \"(Q1, P') \\<in> cSim_cs Rel Cal\"\n                             and C3: \"Q \\<longmapsto>Cal* Q2\" and C4: \"(P', Q2) \\<in> cSim_cs Rel Cal\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal* P'\n  P \\<longmapsto>Cal* ?P' \\<Longrightarrow>\n  (\\<exists>Q'.\n      Q \\<longmapsto>Cal* Q' \\<and> (?P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n  (\\<exists>Q'.\n      Q \\<longmapsto>Cal* Q' \\<and> (Q', ?P') \\<in> cSim_cs Rel Cal)\n\ngoal (1 subgoal):\n 1. (\\<And>Q1 Q2.\n        Q \\<longmapsto>Cal* Q1 \\<and>\n        (Q1, P') \\<in> cSim_cs Rel Cal \\<and>\n        Q \\<longmapsto>Cal* Q2 \\<and>\n        (P', Q2) \\<in> cSim_cs Rel Cal \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal* Q1\n  (Q1, P') \\<in> cSim_cs Rel Cal\n  Q \\<longmapsto>Cal* Q2\n  (P', Q2) \\<in> cSim_cs Rel Cal\n\ngoal (1 subgoal):\n 1. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        (Q, R) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n                         (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (Q', P') \\<in> cSim_cs Rel Cal)", "assume C5: \"\\<And>Q'. Q \\<longmapsto>Cal* Q' \\<Longrightarrow> (\\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (Q', R') \\<in> cSim_cs Rel Cal)\n                                         \\<and> (\\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (R', Q') \\<in> cSim_cs Rel Cal)\""], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal* ?Q' \\<Longrightarrow>\n  (\\<exists>R'.\n      R \\<longmapsto>Cal* R' \\<and> (?Q', R') \\<in> cSim_cs Rel Cal) \\<and>\n  (\\<exists>R'.\n      R \\<longmapsto>Cal* R' \\<and> (R', ?Q') \\<in> cSim_cs Rel Cal)\n\ngoal (1 subgoal):\n 1. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        (Q, R) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n                         (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (Q', P') \\<in> cSim_cs Rel Cal)", "with C1"], ["proof (chain)\npicking this:\n  Q \\<longmapsto>Cal* Q1\n  Q \\<longmapsto>Cal* ?Q' \\<Longrightarrow>\n  (\\<exists>R'.\n      R \\<longmapsto>Cal* R' \\<and> (?Q', R') \\<in> cSim_cs Rel Cal) \\<and>\n  (\\<exists>R'.\n      R \\<longmapsto>Cal* R' \\<and> (R', ?Q') \\<in> cSim_cs Rel Cal)", "obtain R1 where C6: \"R \\<longmapsto>Cal* R1\" and C7: \"(R1, Q1) \\<in> cSim_cs Rel Cal\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto>Cal* Q1\n  Q \\<longmapsto>Cal* ?Q' \\<Longrightarrow>\n  (\\<exists>R'.\n      R \\<longmapsto>Cal* R' \\<and> (?Q', R') \\<in> cSim_cs Rel Cal) \\<and>\n  (\\<exists>R'.\n      R \\<longmapsto>Cal* R' \\<and> (R', ?Q') \\<in> cSim_cs Rel Cal)\n\ngoal (1 subgoal):\n 1. (\\<And>R1.\n        R \\<longmapsto>Cal* R1 \\<and>\n        (R1, Q1) \\<in> cSim_cs Rel Cal \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  R \\<longmapsto>Cal* R1\n  (R1, Q1) \\<in> cSim_cs Rel Cal\n\ngoal (1 subgoal):\n 1. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        (Q, R) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n                         (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (Q', P') \\<in> cSim_cs Rel Cal)", "from C7 C2"], ["proof (chain)\npicking this:\n  (R1, Q1) \\<in> cSim_cs Rel Cal\n  (Q1, P') \\<in> cSim_cs Rel Cal", "have C8: \"(R1, P') \\<in> cSim_cs Rel Cal\""], ["proof (prove)\nusing this:\n  (R1, Q1) \\<in> cSim_cs Rel Cal\n  (Q1, P') \\<in> cSim_cs Rel Cal\n\ngoal (1 subgoal):\n 1. (R1, P') \\<in> cSim_cs Rel Cal", "by (rule cSim_cs.trans)"], ["proof (state)\nthis:\n  (R1, P') \\<in> cSim_cs Rel Cal\n\ngoal (1 subgoal):\n 1. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        (Q, R) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n                         (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (Q', P') \\<in> cSim_cs Rel Cal)", "from C3 C5"], ["proof (chain)\npicking this:\n  Q \\<longmapsto>Cal* Q2\n  Q \\<longmapsto>Cal* ?Q' \\<Longrightarrow>\n  (\\<exists>R'.\n      R \\<longmapsto>Cal* R' \\<and> (?Q', R') \\<in> cSim_cs Rel Cal) \\<and>\n  (\\<exists>R'.\n      R \\<longmapsto>Cal* R' \\<and> (R', ?Q') \\<in> cSim_cs Rel Cal)", "obtain R2 where C9: \"R \\<longmapsto>Cal* R2\" and C10: \"(Q2, R2) \\<in> cSim_cs Rel Cal\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto>Cal* Q2\n  Q \\<longmapsto>Cal* ?Q' \\<Longrightarrow>\n  (\\<exists>R'.\n      R \\<longmapsto>Cal* R' \\<and> (?Q', R') \\<in> cSim_cs Rel Cal) \\<and>\n  (\\<exists>R'.\n      R \\<longmapsto>Cal* R' \\<and> (R', ?Q') \\<in> cSim_cs Rel Cal)\n\ngoal (1 subgoal):\n 1. (\\<And>R2.\n        R \\<longmapsto>Cal* R2 \\<and>\n        (Q2, R2) \\<in> cSim_cs Rel Cal \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  R \\<longmapsto>Cal* R2\n  (Q2, R2) \\<in> cSim_cs Rel Cal\n\ngoal (1 subgoal):\n 1. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        (Q, R) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n                         (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (Q', P') \\<in> cSim_cs Rel Cal)", "from C4 C10"], ["proof (chain)\npicking this:\n  (P', Q2) \\<in> cSim_cs Rel Cal\n  (Q2, R2) \\<in> cSim_cs Rel Cal", "have \"(P', R2) \\<in> cSim_cs Rel Cal\""], ["proof (prove)\nusing this:\n  (P', Q2) \\<in> cSim_cs Rel Cal\n  (Q2, R2) \\<in> cSim_cs Rel Cal\n\ngoal (1 subgoal):\n 1. (P', R2) \\<in> cSim_cs Rel Cal", "by (rule cSim_cs.trans)"], ["proof (state)\nthis:\n  (P', R2) \\<in> cSim_cs Rel Cal\n\ngoal (1 subgoal):\n 1. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        (Q, R) \\<in> cSim_cs Rel Cal;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> cSim_cs Rel Cal);\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n                         (\\<exists>Q'.\n                             R \\<longmapsto>Cal* Q' \\<and>\n                             (Q', P') \\<in> cSim_cs Rel Cal)", "with C6 C8 C9"], ["proof (chain)\npicking this:\n  R \\<longmapsto>Cal* R1\n  (R1, P') \\<in> cSim_cs Rel Cal\n  R \\<longmapsto>Cal* R2\n  (P', R2) \\<in> cSim_cs Rel Cal", "show ?case"], ["proof (prove)\nusing this:\n  R \\<longmapsto>Cal* R1\n  (R1, P') \\<in> cSim_cs Rel Cal\n  R \\<longmapsto>Cal* R2\n  (P', R2) \\<in> cSim_cs Rel Cal\n\ngoal (1 subgoal):\n 1. (\\<exists>Q'.\n        R \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n    (\\<exists>Q'.\n        R \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> cSim_cs Rel Cal)", "by blast"], ["proof (state)\nthis:\n  (\\<exists>Q'.\n      R \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n  (\\<exists>Q'.\n      R \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> cSim_cs Rel Cal)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>Q'.\n      Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> cSim_cs Rel Cal) \\<and>\n  (\\<exists>Q'.\n      Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> cSim_cs Rel Cal)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  weak_reduction_coupled_simulation (cSim_cs Rel Cal) Cal\n\ngoal (1 subgoal):\n 1. \\<forall>P Q.\n       (P, Q) \\<in> Rel \\<longrightarrow>\n       (P, Q) \\<in> cSim_cs Rel Cal \\<and> (Q, P) \\<in> cSim_cs Rel Cal", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>P Q.\n       (P, Q) \\<in> Rel \\<longrightarrow>\n       (P, Q) \\<in> cSim_cs Rel Cal \\<and> (Q, P) \\<in> cSim_cs Rel Cal", "show \"\\<forall>P Q. (P, Q) \\<in> Rel \\<longrightarrow> (P, Q) \\<in> cSim_cs Rel Cal \\<and> (Q, P) \\<in> cSim_cs Rel Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P Q.\n       (P, Q) \\<in> Rel \\<longrightarrow>\n       (P, Q) \\<in> cSim_cs Rel Cal \\<and> (Q, P) \\<in> cSim_cs Rel Cal", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       (P, Q) \\<in> Rel \\<Longrightarrow>\n       (P, Q) \\<in> cSim_cs Rel Cal \\<and> (Q, P) \\<in> cSim_cs Rel Cal", "fix P Q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       (P, Q) \\<in> Rel \\<Longrightarrow>\n       (P, Q) \\<in> cSim_cs Rel Cal \\<and> (Q, P) \\<in> cSim_cs Rel Cal", "have \"Q \\<longmapsto>Cal* Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto>Cal* Q", "by (rule steps_refl)"], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal* Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       (P, Q) \\<in> Rel \\<Longrightarrow>\n       (P, Q) \\<in> cSim_cs Rel Cal \\<and> (Q, P) \\<in> cSim_cs Rel Cal", "moreover"], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal* Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       (P, Q) \\<in> Rel \\<Longrightarrow>\n       (P, Q) \\<in> cSim_cs Rel Cal \\<and> (Q, P) \\<in> cSim_cs Rel Cal", "assume \"(P, Q) \\<in> Rel\""], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       (P, Q) \\<in> Rel \\<Longrightarrow>\n       (P, Q) \\<in> cSim_cs Rel Cal \\<and> (Q, P) \\<in> cSim_cs Rel Cal", "ultimately"], ["proof (chain)\npicking this:\n  Q \\<longmapsto>Cal* Q\n  (P, Q) \\<in> Rel", "show \"(P, Q) \\<in> cSim_cs Rel Cal \\<and> (Q, P) \\<in> cSim_cs Rel Cal\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto>Cal* Q\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (P, Q) \\<in> cSim_cs Rel Cal \\<and> (Q, P) \\<in> cSim_cs Rel Cal", "by (simp add: cSim_cs.left cSim_cs.right)"], ["proof (state)\nthis:\n  (P, Q) \\<in> cSim_cs Rel Cal \\<and> (Q, P) \\<in> cSim_cs Rel Cal\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>P Q.\n     (P, Q) \\<in> Rel \\<longrightarrow>\n     (P, Q) \\<in> cSim_cs Rel Cal \\<and> (Q, P) \\<in> cSim_cs Rel Cal\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weak_barbed_correspondence_simulation_impl_coupled_simulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  assumes corrSim: \"weak_barbed_correspondence_simulation Rel CWB\"\n  shows \"weak_barbed_coupled_simulation (cSim_cs Rel (Calculus CWB)) CWB\"\n    and \"\\<forall>P Q. (P, Q) \\<in> Rel \\<longrightarrow> (P, Q) \\<in> cSim_cs Rel (Calculus CWB)\n                                \\<and> (Q, P) \\<in> cSim_cs Rel (Calculus CWB)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_barbed_coupled_simulation (cSim_cs Rel (Calculus CWB)) CWB &&&\n    \\<forall>P Q.\n       (P, Q) \\<in> Rel \\<longrightarrow>\n       (P, Q) \\<in> cSim_cs Rel (Calculus CWB) \\<and>\n       (Q, P) \\<in> cSim_cs Rel (Calculus CWB)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. weak_barbed_coupled_simulation (cSim_cs Rel (Calculus CWB)) CWB\n 2. \\<forall>P Q.\n       (P, Q) \\<in> Rel \\<longrightarrow>\n       (P, Q) \\<in> cSim_cs Rel (Calculus CWB) \\<and>\n       (Q, P) \\<in> cSim_cs Rel (Calculus CWB)", "show \"weak_barbed_coupled_simulation (cSim_cs Rel (Calculus CWB)) CWB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_barbed_coupled_simulation (cSim_cs Rel (Calculus CWB)) CWB", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. weak_reduction_coupled_simulation (cSim_cs Rel (Calculus CWB))\n     (Calculus CWB)\n 2. rel_weakly_preserves_barbs (cSim_cs Rel (Calculus CWB)) CWB", "from corrSim"], ["proof (chain)\npicking this:\n  weak_barbed_correspondence_simulation Rel CWB", "show \"weak_reduction_coupled_simulation (cSim_cs Rel (Calculus CWB)) (Calculus CWB)\""], ["proof (prove)\nusing this:\n  weak_barbed_correspondence_simulation Rel CWB\n\ngoal (1 subgoal):\n 1. weak_reduction_coupled_simulation (cSim_cs Rel (Calculus CWB))\n     (Calculus CWB)", "using weak_reduction_correspondence_simulation_impl_coupled_simulation(1)[where Rel=\"Rel\"\n            and Cal=\"Calculus CWB\"]"], ["proof (prove)\nusing this:\n  weak_barbed_correspondence_simulation Rel CWB\n  weak_reduction_correspondence_simulation Rel\n   (Calculus CWB) \\<Longrightarrow>\n  weak_reduction_coupled_simulation (cSim_cs Rel (Calculus CWB))\n   (Calculus CWB)\n\ngoal (1 subgoal):\n 1. weak_reduction_coupled_simulation (cSim_cs Rel (Calculus CWB))\n     (Calculus CWB)", "by blast"], ["proof (state)\nthis:\n  weak_reduction_coupled_simulation (cSim_cs Rel (Calculus CWB))\n   (Calculus CWB)\n\ngoal (1 subgoal):\n 1. rel_weakly_preserves_barbs (cSim_cs Rel (Calculus CWB)) CWB", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. rel_weakly_preserves_barbs (cSim_cs Rel (Calculus CWB)) CWB", "show \"rel_weakly_preserves_barbs (cSim_cs Rel (Calculus CWB)) CWB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_weakly_preserves_barbs (cSim_cs Rel (Calculus CWB)) CWB", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b x P'.\n       (a, b) \\<in> cSim_cs Rel (Calculus CWB) \\<and>\n       a \\<longmapsto>Calculus CWB* P' \\<and>\n       P'\\<down><CWB>x \\<Longrightarrow>\n       b\\<Down><CWB>x", "fix P Q a P'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b x P'.\n       (a, b) \\<in> cSim_cs Rel (Calculus CWB) \\<and>\n       a \\<longmapsto>Calculus CWB* P' \\<and>\n       P'\\<down><CWB>x \\<Longrightarrow>\n       b\\<Down><CWB>x", "assume \"(P, Q) \\<in> cSim_cs Rel (Calculus CWB)\" and \"P \\<longmapsto>(Calculus CWB)* P'\" and \"P'\\<down><CWB>a\""], ["proof (state)\nthis:\n  (P, Q) \\<in> cSim_cs Rel (Calculus CWB)\n  P \\<longmapsto>Calculus CWB* P'\n  P'\\<down><CWB>a\n\ngoal (1 subgoal):\n 1. \\<And>a b x P'.\n       (a, b) \\<in> cSim_cs Rel (Calculus CWB) \\<and>\n       a \\<longmapsto>Calculus CWB* P' \\<and>\n       P'\\<down><CWB>x \\<Longrightarrow>\n       b\\<Down><CWB>x", "thus \"Q\\<Down><CWB>a\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> cSim_cs Rel (Calculus CWB)\n  P \\<longmapsto>Calculus CWB* P'\n  P'\\<down><CWB>a\n\ngoal (1 subgoal):\n 1. Q\\<Down><CWB>a", "proof (induct arbitrary: P')"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>Q Q' P' P'a.\n       Q \\<longmapsto>Calculus CWB* Q' \\<and>\n       (P', Q') \\<in> Rel \\<and>\n       P' \\<longmapsto>Calculus CWB* P'a \\<and>\n       P'a\\<down><CWB>a \\<Longrightarrow>\n       Q\\<Down><CWB>a\n 2. \\<And>P P' Q P'a.\n       P \\<longmapsto>Calculus CWB* P' \\<and>\n       (Q, P) \\<in> Rel \\<and>\n       P' \\<longmapsto>Calculus CWB* P'a \\<and>\n       P'a\\<down><CWB>a \\<Longrightarrow>\n       Q\\<Down><CWB>a\n 3. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           P \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           Q\\<Down><CWB>a;\n        (Q, R) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           Q \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           R\\<Down><CWB>a;\n        P \\<longmapsto>Calculus CWB* P' \\<and> P'\\<down><CWB>a\\<rbrakk>\n       \\<Longrightarrow> R\\<Down><CWB>a", "case (left Q Q' P P')"], ["proof (state)\nthis:\n  Q \\<longmapsto>Calculus CWB* Q'\n  (P, Q') \\<in> Rel\n  P \\<longmapsto>Calculus CWB* P'\n  P'\\<down><CWB>a\n\ngoal (3 subgoals):\n 1. \\<And>Q Q' P' P'a.\n       Q \\<longmapsto>Calculus CWB* Q' \\<and>\n       (P', Q') \\<in> Rel \\<and>\n       P' \\<longmapsto>Calculus CWB* P'a \\<and>\n       P'a\\<down><CWB>a \\<Longrightarrow>\n       Q\\<Down><CWB>a\n 2. \\<And>P P' Q P'a.\n       P \\<longmapsto>Calculus CWB* P' \\<and>\n       (Q, P) \\<in> Rel \\<and>\n       P' \\<longmapsto>Calculus CWB* P'a \\<and>\n       P'a\\<down><CWB>a \\<Longrightarrow>\n       Q\\<Down><CWB>a\n 3. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           P \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           Q\\<Down><CWB>a;\n        (Q, R) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           Q \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           R\\<Down><CWB>a;\n        P \\<longmapsto>Calculus CWB* P' \\<and> P'\\<down><CWB>a\\<rbrakk>\n       \\<Longrightarrow> R\\<Down><CWB>a", "assume \"(P, Q') \\<in> Rel\" and \"P \\<longmapsto>(Calculus CWB)* P'\" and \"P'\\<down><CWB>a\""], ["proof (state)\nthis:\n  (P, Q') \\<in> Rel\n  P \\<longmapsto>Calculus CWB* P'\n  P'\\<down><CWB>a\n\ngoal (3 subgoals):\n 1. \\<And>Q Q' P' P'a.\n       Q \\<longmapsto>Calculus CWB* Q' \\<and>\n       (P', Q') \\<in> Rel \\<and>\n       P' \\<longmapsto>Calculus CWB* P'a \\<and>\n       P'a\\<down><CWB>a \\<Longrightarrow>\n       Q\\<Down><CWB>a\n 2. \\<And>P P' Q P'a.\n       P \\<longmapsto>Calculus CWB* P' \\<and>\n       (Q, P) \\<in> Rel \\<and>\n       P' \\<longmapsto>Calculus CWB* P'a \\<and>\n       P'a\\<down><CWB>a \\<Longrightarrow>\n       Q\\<Down><CWB>a\n 3. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           P \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           Q\\<Down><CWB>a;\n        (Q, R) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           Q \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           R\\<Down><CWB>a;\n        P \\<longmapsto>Calculus CWB* P' \\<and> P'\\<down><CWB>a\\<rbrakk>\n       \\<Longrightarrow> R\\<Down><CWB>a", "with corrSim"], ["proof (chain)\npicking this:\n  weak_barbed_correspondence_simulation Rel CWB\n  (P, Q') \\<in> Rel\n  P \\<longmapsto>Calculus CWB* P'\n  P'\\<down><CWB>a", "obtain Q'' where A1: \"Q' \\<longmapsto>(Calculus CWB)* Q''\" and A2: \"Q''\\<down><CWB>a\""], ["proof (prove)\nusing this:\n  weak_barbed_correspondence_simulation Rel CWB\n  (P, Q') \\<in> Rel\n  P \\<longmapsto>Calculus CWB* P'\n  P'\\<down><CWB>a\n\ngoal (1 subgoal):\n 1. (\\<And>Q''.\n        Q' \\<longmapsto>Calculus CWB* Q'' \\<and>\n        Q''\\<down><CWB>a \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q' \\<longmapsto>Calculus CWB* Q''\n  Q''\\<down><CWB>a\n\ngoal (3 subgoals):\n 1. \\<And>Q Q' P' P'a.\n       Q \\<longmapsto>Calculus CWB* Q' \\<and>\n       (P', Q') \\<in> Rel \\<and>\n       P' \\<longmapsto>Calculus CWB* P'a \\<and>\n       P'a\\<down><CWB>a \\<Longrightarrow>\n       Q\\<Down><CWB>a\n 2. \\<And>P P' Q P'a.\n       P \\<longmapsto>Calculus CWB* P' \\<and>\n       (Q, P) \\<in> Rel \\<and>\n       P' \\<longmapsto>Calculus CWB* P'a \\<and>\n       P'a\\<down><CWB>a \\<Longrightarrow>\n       Q\\<Down><CWB>a\n 3. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           P \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           Q\\<Down><CWB>a;\n        (Q, R) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           Q \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           R\\<Down><CWB>a;\n        P \\<longmapsto>Calculus CWB* P' \\<and> P'\\<down><CWB>a\\<rbrakk>\n       \\<Longrightarrow> R\\<Down><CWB>a", "assume \"Q \\<longmapsto>(Calculus CWB)* Q'\""], ["proof (state)\nthis:\n  Q \\<longmapsto>Calculus CWB* Q'\n\ngoal (3 subgoals):\n 1. \\<And>Q Q' P' P'a.\n       Q \\<longmapsto>Calculus CWB* Q' \\<and>\n       (P', Q') \\<in> Rel \\<and>\n       P' \\<longmapsto>Calculus CWB* P'a \\<and>\n       P'a\\<down><CWB>a \\<Longrightarrow>\n       Q\\<Down><CWB>a\n 2. \\<And>P P' Q P'a.\n       P \\<longmapsto>Calculus CWB* P' \\<and>\n       (Q, P) \\<in> Rel \\<and>\n       P' \\<longmapsto>Calculus CWB* P'a \\<and>\n       P'a\\<down><CWB>a \\<Longrightarrow>\n       Q\\<Down><CWB>a\n 3. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           P \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           Q\\<Down><CWB>a;\n        (Q, R) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           Q \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           R\\<Down><CWB>a;\n        P \\<longmapsto>Calculus CWB* P' \\<and> P'\\<down><CWB>a\\<rbrakk>\n       \\<Longrightarrow> R\\<Down><CWB>a", "from this A1"], ["proof (chain)\npicking this:\n  Q \\<longmapsto>Calculus CWB* Q'\n  Q' \\<longmapsto>Calculus CWB* Q''", "have \"Q \\<longmapsto>(Calculus CWB)* Q''\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto>Calculus CWB* Q'\n  Q' \\<longmapsto>Calculus CWB* Q''\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto>Calculus CWB* Q''", "by (rule steps_add)"], ["proof (state)\nthis:\n  Q \\<longmapsto>Calculus CWB* Q''\n\ngoal (3 subgoals):\n 1. \\<And>Q Q' P' P'a.\n       Q \\<longmapsto>Calculus CWB* Q' \\<and>\n       (P', Q') \\<in> Rel \\<and>\n       P' \\<longmapsto>Calculus CWB* P'a \\<and>\n       P'a\\<down><CWB>a \\<Longrightarrow>\n       Q\\<Down><CWB>a\n 2. \\<And>P P' Q P'a.\n       P \\<longmapsto>Calculus CWB* P' \\<and>\n       (Q, P) \\<in> Rel \\<and>\n       P' \\<longmapsto>Calculus CWB* P'a \\<and>\n       P'a\\<down><CWB>a \\<Longrightarrow>\n       Q\\<Down><CWB>a\n 3. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           P \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           Q\\<Down><CWB>a;\n        (Q, R) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           Q \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           R\\<Down><CWB>a;\n        P \\<longmapsto>Calculus CWB* P' \\<and> P'\\<down><CWB>a\\<rbrakk>\n       \\<Longrightarrow> R\\<Down><CWB>a", "with A2"], ["proof (chain)\npicking this:\n  Q''\\<down><CWB>a\n  Q \\<longmapsto>Calculus CWB* Q''", "show \"Q\\<Down><CWB>a\""], ["proof (prove)\nusing this:\n  Q''\\<down><CWB>a\n  Q \\<longmapsto>Calculus CWB* Q''\n\ngoal (1 subgoal):\n 1. Q\\<Down><CWB>a", "by blast"], ["proof (state)\nthis:\n  Q\\<Down><CWB>a\n\ngoal (2 subgoals):\n 1. \\<And>P P' Q P'a.\n       P \\<longmapsto>Calculus CWB* P' \\<and>\n       (Q, P) \\<in> Rel \\<and>\n       P' \\<longmapsto>Calculus CWB* P'a \\<and>\n       P'a\\<down><CWB>a \\<Longrightarrow>\n       Q\\<Down><CWB>a\n 2. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           P \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           Q\\<Down><CWB>a;\n        (Q, R) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           Q \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           R\\<Down><CWB>a;\n        P \\<longmapsto>Calculus CWB* P' \\<and> P'\\<down><CWB>a\\<rbrakk>\n       \\<Longrightarrow> R\\<Down><CWB>a", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P P' Q P'a.\n       P \\<longmapsto>Calculus CWB* P' \\<and>\n       (Q, P) \\<in> Rel \\<and>\n       P' \\<longmapsto>Calculus CWB* P'a \\<and>\n       P'a\\<down><CWB>a \\<Longrightarrow>\n       Q\\<Down><CWB>a\n 2. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           P \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           Q\\<Down><CWB>a;\n        (Q, R) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           Q \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           R\\<Down><CWB>a;\n        P \\<longmapsto>Calculus CWB* P' \\<and> P'\\<down><CWB>a\\<rbrakk>\n       \\<Longrightarrow> R\\<Down><CWB>a", "case (right P P' Q P'')"], ["proof (state)\nthis:\n  P \\<longmapsto>Calculus CWB* P'\n  (Q, P) \\<in> Rel\n  P' \\<longmapsto>Calculus CWB* P''\n  P''\\<down><CWB>a\n\ngoal (2 subgoals):\n 1. \\<And>P P' Q P'a.\n       P \\<longmapsto>Calculus CWB* P' \\<and>\n       (Q, P) \\<in> Rel \\<and>\n       P' \\<longmapsto>Calculus CWB* P'a \\<and>\n       P'a\\<down><CWB>a \\<Longrightarrow>\n       Q\\<Down><CWB>a\n 2. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           P \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           Q\\<Down><CWB>a;\n        (Q, R) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           Q \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           R\\<Down><CWB>a;\n        P \\<longmapsto>Calculus CWB* P' \\<and> P'\\<down><CWB>a\\<rbrakk>\n       \\<Longrightarrow> R\\<Down><CWB>a", "assume \"(Q, P) \\<in> Rel\""], ["proof (state)\nthis:\n  (Q, P) \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>P P' Q P'a.\n       P \\<longmapsto>Calculus CWB* P' \\<and>\n       (Q, P) \\<in> Rel \\<and>\n       P' \\<longmapsto>Calculus CWB* P'a \\<and>\n       P'a\\<down><CWB>a \\<Longrightarrow>\n       Q\\<Down><CWB>a\n 2. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           P \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           Q\\<Down><CWB>a;\n        (Q, R) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           Q \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           R\\<Down><CWB>a;\n        P \\<longmapsto>Calculus CWB* P' \\<and> P'\\<down><CWB>a\\<rbrakk>\n       \\<Longrightarrow> R\\<Down><CWB>a", "moreover"], ["proof (state)\nthis:\n  (Q, P) \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>P P' Q P'a.\n       P \\<longmapsto>Calculus CWB* P' \\<and>\n       (Q, P) \\<in> Rel \\<and>\n       P' \\<longmapsto>Calculus CWB* P'a \\<and>\n       P'a\\<down><CWB>a \\<Longrightarrow>\n       Q\\<Down><CWB>a\n 2. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           P \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           Q\\<Down><CWB>a;\n        (Q, R) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           Q \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           R\\<Down><CWB>a;\n        P \\<longmapsto>Calculus CWB* P' \\<and> P'\\<down><CWB>a\\<rbrakk>\n       \\<Longrightarrow> R\\<Down><CWB>a", "assume \"P \\<longmapsto>(Calculus CWB)* P'\" and \"P' \\<longmapsto>(Calculus CWB)* P''\""], ["proof (state)\nthis:\n  P \\<longmapsto>Calculus CWB* P'\n  P' \\<longmapsto>Calculus CWB* P''\n\ngoal (2 subgoals):\n 1. \\<And>P P' Q P'a.\n       P \\<longmapsto>Calculus CWB* P' \\<and>\n       (Q, P) \\<in> Rel \\<and>\n       P' \\<longmapsto>Calculus CWB* P'a \\<and>\n       P'a\\<down><CWB>a \\<Longrightarrow>\n       Q\\<Down><CWB>a\n 2. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           P \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           Q\\<Down><CWB>a;\n        (Q, R) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           Q \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           R\\<Down><CWB>a;\n        P \\<longmapsto>Calculus CWB* P' \\<and> P'\\<down><CWB>a\\<rbrakk>\n       \\<Longrightarrow> R\\<Down><CWB>a", "hence \"P \\<longmapsto>(Calculus CWB)* P''\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Calculus CWB* P'\n  P' \\<longmapsto>Calculus CWB* P''\n\ngoal (1 subgoal):\n 1. P \\<longmapsto>Calculus CWB* P''", "by (rule steps_add)"], ["proof (state)\nthis:\n  P \\<longmapsto>Calculus CWB* P''\n\ngoal (2 subgoals):\n 1. \\<And>P P' Q P'a.\n       P \\<longmapsto>Calculus CWB* P' \\<and>\n       (Q, P) \\<in> Rel \\<and>\n       P' \\<longmapsto>Calculus CWB* P'a \\<and>\n       P'a\\<down><CWB>a \\<Longrightarrow>\n       Q\\<Down><CWB>a\n 2. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           P \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           Q\\<Down><CWB>a;\n        (Q, R) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           Q \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           R\\<Down><CWB>a;\n        P \\<longmapsto>Calculus CWB* P' \\<and> P'\\<down><CWB>a\\<rbrakk>\n       \\<Longrightarrow> R\\<Down><CWB>a", "moreover"], ["proof (state)\nthis:\n  P \\<longmapsto>Calculus CWB* P''\n\ngoal (2 subgoals):\n 1. \\<And>P P' Q P'a.\n       P \\<longmapsto>Calculus CWB* P' \\<and>\n       (Q, P) \\<in> Rel \\<and>\n       P' \\<longmapsto>Calculus CWB* P'a \\<and>\n       P'a\\<down><CWB>a \\<Longrightarrow>\n       Q\\<Down><CWB>a\n 2. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           P \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           Q\\<Down><CWB>a;\n        (Q, R) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           Q \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           R\\<Down><CWB>a;\n        P \\<longmapsto>Calculus CWB* P' \\<and> P'\\<down><CWB>a\\<rbrakk>\n       \\<Longrightarrow> R\\<Down><CWB>a", "assume \"P''\\<down><CWB>a\""], ["proof (state)\nthis:\n  P''\\<down><CWB>a\n\ngoal (2 subgoals):\n 1. \\<And>P P' Q P'a.\n       P \\<longmapsto>Calculus CWB* P' \\<and>\n       (Q, P) \\<in> Rel \\<and>\n       P' \\<longmapsto>Calculus CWB* P'a \\<and>\n       P'a\\<down><CWB>a \\<Longrightarrow>\n       Q\\<Down><CWB>a\n 2. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           P \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           Q\\<Down><CWB>a;\n        (Q, R) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           Q \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           R\\<Down><CWB>a;\n        P \\<longmapsto>Calculus CWB* P' \\<and> P'\\<down><CWB>a\\<rbrakk>\n       \\<Longrightarrow> R\\<Down><CWB>a", "ultimately"], ["proof (chain)\npicking this:\n  (Q, P) \\<in> Rel\n  P \\<longmapsto>Calculus CWB* P''\n  P''\\<down><CWB>a", "show \"Q\\<Down><CWB>a\""], ["proof (prove)\nusing this:\n  (Q, P) \\<in> Rel\n  P \\<longmapsto>Calculus CWB* P''\n  P''\\<down><CWB>a\n\ngoal (1 subgoal):\n 1. Q\\<Down><CWB>a", "using corrSim"], ["proof (prove)\nusing this:\n  (Q, P) \\<in> Rel\n  P \\<longmapsto>Calculus CWB* P''\n  P''\\<down><CWB>a\n  weak_barbed_correspondence_simulation Rel CWB\n\ngoal (1 subgoal):\n 1. Q\\<Down><CWB>a", "by blast"], ["proof (state)\nthis:\n  Q\\<Down><CWB>a\n\ngoal (1 subgoal):\n 1. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           P \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           Q\\<Down><CWB>a;\n        (Q, R) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           Q \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           R\\<Down><CWB>a;\n        P \\<longmapsto>Calculus CWB* P' \\<and> P'\\<down><CWB>a\\<rbrakk>\n       \\<Longrightarrow> R\\<Down><CWB>a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           P \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           Q\\<Down><CWB>a;\n        (Q, R) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           Q \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           R\\<Down><CWB>a;\n        P \\<longmapsto>Calculus CWB* P' \\<and> P'\\<down><CWB>a\\<rbrakk>\n       \\<Longrightarrow> R\\<Down><CWB>a", "case (trans P Q R P')"], ["proof (state)\nthis:\n  (P, Q) \\<in> cSim_cs Rel (Calculus CWB)\n  P \\<longmapsto>Calculus CWB* ?P' \\<and> ?P'\\<down><CWB>a \\<Longrightarrow>\n  Q\\<Down><CWB>a\n  (Q, R) \\<in> cSim_cs Rel (Calculus CWB)\n  Q \\<longmapsto>Calculus CWB* ?P' \\<and> ?P'\\<down><CWB>a \\<Longrightarrow>\n  R\\<Down><CWB>a\n  P \\<longmapsto>Calculus CWB* P'\n  P'\\<down><CWB>a\n\ngoal (1 subgoal):\n 1. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           P \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           Q\\<Down><CWB>a;\n        (Q, R) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           Q \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           R\\<Down><CWB>a;\n        P \\<longmapsto>Calculus CWB* P' \\<and> P'\\<down><CWB>a\\<rbrakk>\n       \\<Longrightarrow> R\\<Down><CWB>a", "assume \"\\<And>P'. P \\<longmapsto>(Calculus CWB)* P' \\<Longrightarrow> P'\\<down><CWB>a \\<Longrightarrow> Q\\<Down><CWB>a\"\n           and \"P \\<longmapsto>(Calculus CWB)* P'\" and \"P'\\<down><CWB>a\"\n           and \"\\<And>Q'. Q \\<longmapsto>(Calculus CWB)* Q' \\<Longrightarrow> Q'\\<down><CWB>a \\<Longrightarrow> R\\<Down><CWB>a\""], ["proof (state)\nthis:\n  P \\<longmapsto>Calculus CWB* ?P' \\<and> ?P'\\<down><CWB>a \\<Longrightarrow>\n  Q\\<Down><CWB>a\n  P \\<longmapsto>Calculus CWB* P'\n  P'\\<down><CWB>a\n  Q \\<longmapsto>Calculus CWB* ?Q' \\<and> ?Q'\\<down><CWB>a \\<Longrightarrow>\n  R\\<Down><CWB>a\n\ngoal (1 subgoal):\n 1. \\<And>P Q R P'.\n       \\<lbrakk>(P, Q) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           P \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           Q\\<Down><CWB>a;\n        (Q, R) \\<in> cSim_cs Rel (Calculus CWB);\n        \\<And>P'.\n           Q \\<longmapsto>Calculus CWB* P' \\<and>\n           P'\\<down><CWB>a \\<Longrightarrow>\n           R\\<Down><CWB>a;\n        P \\<longmapsto>Calculus CWB* P' \\<and> P'\\<down><CWB>a\\<rbrakk>\n       \\<Longrightarrow> R\\<Down><CWB>a", "thus \"R\\<Down><CWB>a\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Calculus CWB* ?P' \\<and> ?P'\\<down><CWB>a \\<Longrightarrow>\n  Q\\<Down><CWB>a\n  P \\<longmapsto>Calculus CWB* P'\n  P'\\<down><CWB>a\n  Q \\<longmapsto>Calculus CWB* ?Q' \\<and> ?Q'\\<down><CWB>a \\<Longrightarrow>\n  R\\<Down><CWB>a\n\ngoal (1 subgoal):\n 1. R\\<Down><CWB>a", "by blast"], ["proof (state)\nthis:\n  R\\<Down><CWB>a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Q\\<Down><CWB>a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rel_weakly_preserves_barbs (cSim_cs Rel (Calculus CWB)) CWB\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  weak_barbed_coupled_simulation (cSim_cs Rel (Calculus CWB)) CWB\n\ngoal (1 subgoal):\n 1. \\<forall>P Q.\n       (P, Q) \\<in> Rel \\<longrightarrow>\n       (P, Q) \\<in> cSim_cs Rel (Calculus CWB) \\<and>\n       (Q, P) \\<in> cSim_cs Rel (Calculus CWB)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>P Q.\n       (P, Q) \\<in> Rel \\<longrightarrow>\n       (P, Q) \\<in> cSim_cs Rel (Calculus CWB) \\<and>\n       (Q, P) \\<in> cSim_cs Rel (Calculus CWB)", "from corrSim"], ["proof (chain)\npicking this:\n  weak_barbed_correspondence_simulation Rel CWB", "show \"\\<forall>P Q. (P, Q) \\<in> Rel \\<longrightarrow> (P, Q) \\<in> cSim_cs Rel (Calculus CWB)\n                                            \\<and> (Q, P) \\<in> cSim_cs Rel (Calculus CWB)\""], ["proof (prove)\nusing this:\n  weak_barbed_correspondence_simulation Rel CWB\n\ngoal (1 subgoal):\n 1. \\<forall>P Q.\n       (P, Q) \\<in> Rel \\<longrightarrow>\n       (P, Q) \\<in> cSim_cs Rel (Calculus CWB) \\<and>\n       (Q, P) \\<in> cSim_cs Rel (Calculus CWB)", "using weak_reduction_correspondence_simulation_impl_coupled_simulation(2)[where Rel=\"Rel\"\n            and Cal=\"Calculus CWB\"]"], ["proof (prove)\nusing this:\n  weak_barbed_correspondence_simulation Rel CWB\n  weak_reduction_correspondence_simulation Rel\n   (Calculus CWB) \\<Longrightarrow>\n  \\<forall>P Q.\n     (P, Q) \\<in> Rel \\<longrightarrow>\n     (P, Q) \\<in> cSim_cs Rel (Calculus CWB) \\<and>\n     (Q, P) \\<in> cSim_cs Rel (Calculus CWB)\n\ngoal (1 subgoal):\n 1. \\<forall>P Q.\n       (P, Q) \\<in> Rel \\<longrightarrow>\n       (P, Q) \\<in> cSim_cs Rel (Calculus CWB) \\<and>\n       (Q, P) \\<in> cSim_cs Rel (Calculus CWB)", "by blast"], ["proof (state)\nthis:\n  \\<forall>P Q.\n     (P, Q) \\<in> Rel \\<longrightarrow>\n     (P, Q) \\<in> cSim_cs Rel (Calculus CWB) \\<and>\n     (Q, P) \\<in> cSim_cs Rel (Calculus CWB)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma reduction_correspondence_simulation_condition_trans:\n  fixes Cal   :: \"'proc processCalculus\"\n    and P Q R :: \"'proc\"\n    and Rel   :: \"('proc \\<times> 'proc) set\"\n  assumes A1: \"\\<forall>Q'. Q \\<longmapsto>Cal* Q' \\<longrightarrow> (\\<exists>P'' Q''. P \\<longmapsto>Cal* P'' \\<and> Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel)\"\n      and A2: \"\\<forall>R'. R \\<longmapsto>Cal* R' \\<longrightarrow> (\\<exists>Q'' R''. Q \\<longmapsto>Cal* Q'' \\<and> R' \\<longmapsto>Cal* R'' \\<and> (Q'', R'') \\<in> Rel)\"\n      and A3: \"weak_reduction_simulation Rel Cal\"\n      and A4: \"trans Rel\"\n  shows \"\\<forall>R'. R \\<longmapsto>Cal* R' \\<longrightarrow> (\\<exists>P'' R''. P \\<longmapsto>Cal* P'' \\<and> R' \\<longmapsto>Cal* R'' \\<and> (P'', R'') \\<in> Rel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>R'.\n       R \\<longmapsto>Cal* R' \\<longrightarrow>\n       (\\<exists>P'' R''.\n           P \\<longmapsto>Cal* P'' \\<and>\n           R' \\<longmapsto>Cal* R'' \\<and> (P'', R'') \\<in> Rel)", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>R'.\n       R \\<longmapsto>Cal* R' \\<Longrightarrow>\n       \\<exists>P'' R''.\n          P \\<longmapsto>Cal* P'' \\<and>\n          R' \\<longmapsto>Cal* R'' \\<and> (P'', R'') \\<in> Rel", "fix R'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>R'.\n       R \\<longmapsto>Cal* R' \\<Longrightarrow>\n       \\<exists>P'' R''.\n          P \\<longmapsto>Cal* P'' \\<and>\n          R' \\<longmapsto>Cal* R'' \\<and> (P'', R'') \\<in> Rel", "assume \"R \\<longmapsto>Cal* R'\""], ["proof (state)\nthis:\n  R \\<longmapsto>Cal* R'\n\ngoal (1 subgoal):\n 1. \\<And>R'.\n       R \\<longmapsto>Cal* R' \\<Longrightarrow>\n       \\<exists>P'' R''.\n          P \\<longmapsto>Cal* P'' \\<and>\n          R' \\<longmapsto>Cal* R'' \\<and> (P'', R'') \\<in> Rel", "with A2"], ["proof (chain)\npicking this:\n  \\<forall>R'.\n     R \\<longmapsto>Cal* R' \\<longrightarrow>\n     (\\<exists>Q'' R''.\n         Q \\<longmapsto>Cal* Q'' \\<and>\n         R' \\<longmapsto>Cal* R'' \\<and> (Q'', R'') \\<in> Rel)\n  R \\<longmapsto>Cal* R'", "obtain Q'' R'' where A5: \"Q \\<longmapsto>Cal* Q''\" and A6: \"R' \\<longmapsto>Cal* R''\"\n                         and A7: \"(Q'', R'') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<forall>R'.\n     R \\<longmapsto>Cal* R' \\<longrightarrow>\n     (\\<exists>Q'' R''.\n         Q \\<longmapsto>Cal* Q'' \\<and>\n         R' \\<longmapsto>Cal* R'' \\<and> (Q'', R'') \\<in> Rel)\n  R \\<longmapsto>Cal* R'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'' R''.\n        Q \\<longmapsto>Cal* Q'' \\<and>\n        R' \\<longmapsto>Cal* R'' \\<and>\n        (Q'', R'') \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal* Q''\n  R' \\<longmapsto>Cal* R''\n  (Q'', R'') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>R'.\n       R \\<longmapsto>Cal* R' \\<Longrightarrow>\n       \\<exists>P'' R''.\n          P \\<longmapsto>Cal* P'' \\<and>\n          R' \\<longmapsto>Cal* R'' \\<and> (P'', R'') \\<in> Rel", "from A1 A5"], ["proof (chain)\npicking this:\n  \\<forall>Q'.\n     Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n     (\\<exists>P'' Q''.\n         P \\<longmapsto>Cal* P'' \\<and>\n         Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel)\n  Q \\<longmapsto>Cal* Q''", "obtain P''' Q''' where A8: \"P \\<longmapsto>Cal* P'''\" and A9: \"Q'' \\<longmapsto>Cal* Q'''\"\n                              and A10: \"(P''', Q''') \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<forall>Q'.\n     Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n     (\\<exists>P'' Q''.\n         P \\<longmapsto>Cal* P'' \\<and>\n         Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel)\n  Q \\<longmapsto>Cal* Q''\n\ngoal (1 subgoal):\n 1. (\\<And>P''' Q'''.\n        P \\<longmapsto>Cal* P''' \\<and>\n        Q'' \\<longmapsto>Cal* Q''' \\<and>\n        (P''', Q''') \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P'''\n  Q'' \\<longmapsto>Cal* Q'''\n  (P''', Q''') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>R'.\n       R \\<longmapsto>Cal* R' \\<Longrightarrow>\n       \\<exists>P'' R''.\n          P \\<longmapsto>Cal* P'' \\<and>\n          R' \\<longmapsto>Cal* R'' \\<and> (P'', R'') \\<in> Rel", "from A3 A7 A9"], ["proof (chain)\npicking this:\n  weak_reduction_simulation Rel Cal\n  (Q'', R'') \\<in> Rel\n  Q'' \\<longmapsto>Cal* Q'''", "obtain R''' where A11: \"R'' \\<longmapsto>Cal* R'''\" and A12: \"(Q''', R''') \\<in> Rel\""], ["proof (prove)\nusing this:\n  weak_reduction_simulation Rel Cal\n  (Q'', R'') \\<in> Rel\n  Q'' \\<longmapsto>Cal* Q'''\n\ngoal (1 subgoal):\n 1. (\\<And>R'''.\n        R'' \\<longmapsto>Cal* R''' \\<and>\n        (Q''', R''') \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  R'' \\<longmapsto>Cal* R'''\n  (Q''', R''') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>R'.\n       R \\<longmapsto>Cal* R' \\<Longrightarrow>\n       \\<exists>P'' R''.\n          P \\<longmapsto>Cal* P'' \\<and>\n          R' \\<longmapsto>Cal* R'' \\<and> (P'', R'') \\<in> Rel", "from A6 A11"], ["proof (chain)\npicking this:\n  R' \\<longmapsto>Cal* R''\n  R'' \\<longmapsto>Cal* R'''", "have A13: \"R' \\<longmapsto>Cal* R'''\""], ["proof (prove)\nusing this:\n  R' \\<longmapsto>Cal* R''\n  R'' \\<longmapsto>Cal* R'''\n\ngoal (1 subgoal):\n 1. R' \\<longmapsto>Cal* R'''", "by (rule steps_add[where P=\"R'\" and Q=\"R''\" and R=\"R'''\"])"], ["proof (state)\nthis:\n  R' \\<longmapsto>Cal* R'''\n\ngoal (1 subgoal):\n 1. \\<And>R'.\n       R \\<longmapsto>Cal* R' \\<Longrightarrow>\n       \\<exists>P'' R''.\n          P \\<longmapsto>Cal* P'' \\<and>\n          R' \\<longmapsto>Cal* R'' \\<and> (P'', R'') \\<in> Rel", "from A4 A10 A12"], ["proof (chain)\npicking this:\n  trans Rel\n  (P''', Q''') \\<in> Rel\n  (Q''', R''') \\<in> Rel", "have \"(P''', R''') \\<in> Rel\""], ["proof (prove)\nusing this:\n  trans Rel\n  (P''', Q''') \\<in> Rel\n  (Q''', R''') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (P''', R''') \\<in> Rel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  \\<forall>x y z.\n     (x, y) \\<in> Rel \\<longrightarrow>\n     (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel\n  (P''', Q''') \\<in> Rel\n  (Q''', R''') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (P''', R''') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  (P''', R''') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>R'.\n       R \\<longmapsto>Cal* R' \\<Longrightarrow>\n       \\<exists>P'' R''.\n          P \\<longmapsto>Cal* P'' \\<and>\n          R' \\<longmapsto>Cal* R'' \\<and> (P'', R'') \\<in> Rel", "with A8 A13"], ["proof (chain)\npicking this:\n  P \\<longmapsto>Cal* P'''\n  R' \\<longmapsto>Cal* R'''\n  (P''', R''') \\<in> Rel", "show \"\\<exists>P'' R''. P \\<longmapsto>Cal* P'' \\<and> R' \\<longmapsto>Cal* R'' \\<and> (P'', R'') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal* P'''\n  R' \\<longmapsto>Cal* R'''\n  (P''', R''') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P'' R''.\n       P \\<longmapsto>Cal* P'' \\<and>\n       R' \\<longmapsto>Cal* R'' \\<and> (P'', R'') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'' R''.\n     P \\<longmapsto>Cal* P'' \\<and>\n     R' \\<longmapsto>Cal* R'' \\<and> (P'', R'') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The reflexive and/or transitive closure of a weak correspondence simulation is a weak\n        correspondence simulation.\\<close>"], ["", "lemma weak_reduction_correspondence_simulation_and_closures:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  assumes corrSim: \"weak_reduction_correspondence_simulation Rel Cal\"\n  shows \"weak_reduction_correspondence_simulation (Rel\\<^sup>=) Cal\"\n    and \"weak_reduction_correspondence_simulation (Rel\\<^sup>+) Cal\"\n    and \"weak_reduction_correspondence_simulation (Rel\\<^sup>*) Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_reduction_correspondence_simulation (Rel\\<^sup>=) Cal &&&\n    weak_reduction_correspondence_simulation (Rel\\<^sup>+) Cal &&&\n    weak_reduction_correspondence_simulation (Rel\\<^sup>*) Cal", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. weak_reduction_correspondence_simulation (Rel\\<^sup>=) Cal\n 2. weak_reduction_correspondence_simulation (Rel\\<^sup>+) Cal\n 3. weak_reduction_correspondence_simulation (Rel\\<^sup>*) Cal", "show A: \"weak_reduction_correspondence_simulation (Rel\\<^sup>=) Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_reduction_correspondence_simulation (Rel\\<^sup>=) Cal", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. weak_reduction_simulation (Rel\\<^sup>=) Cal\n 2. \\<forall>P Q Q'.\n       (P, Q) \\<in> Rel\\<^sup>= \\<and>\n       Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n       (\\<exists>P'' Q''.\n           P \\<longmapsto>Cal* P'' \\<and>\n           Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=)", "from corrSim"], ["proof (chain)\npicking this:\n  weak_reduction_correspondence_simulation Rel Cal", "show \"weak_reduction_simulation (Rel\\<^sup>=) Cal\""], ["proof (prove)\nusing this:\n  weak_reduction_correspondence_simulation Rel Cal\n\ngoal (1 subgoal):\n 1. weak_reduction_simulation (Rel\\<^sup>=) Cal", "using weak_reduction_simulation_and_closures(1)[where Rel=\"Rel\" and Cal=\"Cal\"]"], ["proof (prove)\nusing this:\n  weak_reduction_correspondence_simulation Rel Cal\n  weak_reduction_simulation Rel Cal \\<Longrightarrow>\n  weak_reduction_simulation (Rel\\<^sup>=) Cal\n\ngoal (1 subgoal):\n 1. weak_reduction_simulation (Rel\\<^sup>=) Cal", "by blast"], ["proof (state)\nthis:\n  weak_reduction_simulation (Rel\\<^sup>=) Cal\n\ngoal (1 subgoal):\n 1. \\<forall>P Q Q'.\n       (P, Q) \\<in> Rel\\<^sup>= \\<and>\n       Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n       (\\<exists>P'' Q''.\n           P \\<longmapsto>Cal* P'' \\<and>\n           Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>P Q Q'.\n       (P, Q) \\<in> Rel\\<^sup>= \\<and>\n       Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n       (\\<exists>P'' Q''.\n           P \\<longmapsto>Cal* P'' \\<and>\n           Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=)", "show \"\\<forall>P Q Q'. (P, Q) \\<in> Rel\\<^sup>= \\<and> Q \\<longmapsto>Cal* Q'\n          \\<longrightarrow> (\\<exists>P'' Q''. P \\<longmapsto>Cal* P'' \\<and> Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P Q Q'.\n       (P, Q) \\<in> Rel\\<^sup>= \\<and>\n       Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n       (\\<exists>P'' Q''.\n           P \\<longmapsto>Cal* P'' \\<and>\n           Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=)", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel\\<^sup>= \\<and>\n       Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'' Q''.\n          P \\<longmapsto>Cal* P'' \\<and>\n          Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=", "fix P Q Q'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel\\<^sup>= \\<and>\n       Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'' Q''.\n          P \\<longmapsto>Cal* P'' \\<and>\n          Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=", "assume \"(P, Q) \\<in> Rel\\<^sup>=\" and A1: \"Q \\<longmapsto>Cal* Q'\""], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\\<^sup>=\n  Q \\<longmapsto>Cal* Q'\n\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel\\<^sup>= \\<and>\n       Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'' Q''.\n          P \\<longmapsto>Cal* P'' \\<and>\n          Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=", "moreover"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\\<^sup>=\n  Q \\<longmapsto>Cal* Q'\n\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel\\<^sup>= \\<and>\n       Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'' Q''.\n          P \\<longmapsto>Cal* P'' \\<and>\n          Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=", "have \"P = Q \\<Longrightarrow> \\<exists>P'' Q''. P \\<longmapsto>Cal* P'' \\<and> Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P = Q \\<Longrightarrow>\n    \\<exists>P'' Q''.\n       P \\<longmapsto>Cal* P'' \\<and>\n       Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P = Q \\<Longrightarrow>\n    \\<exists>P'' Q''.\n       P \\<longmapsto>Cal* P'' \\<and>\n       Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=", "assume \"P = Q\""], ["proof (state)\nthis:\n  P = Q\n\ngoal (1 subgoal):\n 1. P = Q \\<Longrightarrow>\n    \\<exists>P'' Q''.\n       P \\<longmapsto>Cal* P'' \\<and>\n       Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=", "moreover"], ["proof (state)\nthis:\n  P = Q\n\ngoal (1 subgoal):\n 1. P = Q \\<Longrightarrow>\n    \\<exists>P'' Q''.\n       P \\<longmapsto>Cal* P'' \\<and>\n       Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=", "have \"Q' \\<longmapsto>Cal* Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q' \\<longmapsto>Cal* Q'", "by (rule steps_refl)"], ["proof (state)\nthis:\n  Q' \\<longmapsto>Cal* Q'\n\ngoal (1 subgoal):\n 1. P = Q \\<Longrightarrow>\n    \\<exists>P'' Q''.\n       P \\<longmapsto>Cal* P'' \\<and>\n       Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=", "ultimately"], ["proof (chain)\npicking this:\n  P = Q\n  Q' \\<longmapsto>Cal* Q'", "show \"\\<exists>P'' Q''. P \\<longmapsto>Cal* P'' \\<and> Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=\""], ["proof (prove)\nusing this:\n  P = Q\n  Q' \\<longmapsto>Cal* Q'\n\ngoal (1 subgoal):\n 1. \\<exists>P'' Q''.\n       P \\<longmapsto>Cal* P'' \\<and>\n       Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=", "using A1 refl"], ["proof (prove)\nusing this:\n  P = Q\n  Q' \\<longmapsto>Cal* Q'\n  Q \\<longmapsto>Cal* Q'\n  ?t = ?t\n\ngoal (1 subgoal):\n 1. \\<exists>P'' Q''.\n       P \\<longmapsto>Cal* P'' \\<and>\n       Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'' Q''.\n     P \\<longmapsto>Cal* P'' \\<and>\n     Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P = Q \\<Longrightarrow>\n  \\<exists>P'' Q''.\n     P \\<longmapsto>Cal* P'' \\<and>\n     Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=\n\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel\\<^sup>= \\<and>\n       Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'' Q''.\n          P \\<longmapsto>Cal* P'' \\<and>\n          Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=", "moreover"], ["proof (state)\nthis:\n  P = Q \\<Longrightarrow>\n  \\<exists>P'' Q''.\n     P \\<longmapsto>Cal* P'' \\<and>\n     Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=\n\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel\\<^sup>= \\<and>\n       Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'' Q''.\n          P \\<longmapsto>Cal* P'' \\<and>\n          Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=", "have \"(P, Q) \\<in> Rel \\<Longrightarrow> \\<exists>P'' Q''. P \\<longmapsto>Cal* P'' \\<and> Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P, Q) \\<in> Rel \\<Longrightarrow>\n    \\<exists>P'' Q''.\n       P \\<longmapsto>Cal* P'' \\<and>\n       Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (P, Q) \\<in> Rel \\<Longrightarrow>\n    \\<exists>P'' Q''.\n       P \\<longmapsto>Cal* P'' \\<and>\n       Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=", "assume \"(P, Q) \\<in> Rel\""], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (P, Q) \\<in> Rel \\<Longrightarrow>\n    \\<exists>P'' Q''.\n       P \\<longmapsto>Cal* P'' \\<and>\n       Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=", "with corrSim A1"], ["proof (chain)\npicking this:\n  weak_reduction_correspondence_simulation Rel Cal\n  Q \\<longmapsto>Cal* Q'\n  (P, Q) \\<in> Rel", "obtain P'' Q'' where \"P \\<longmapsto>Cal* P''\" and \"Q' \\<longmapsto>Cal* Q''\"\n                                       and \"(P'', Q'') \\<in> Rel\""], ["proof (prove)\nusing this:\n  weak_reduction_correspondence_simulation Rel Cal\n  Q \\<longmapsto>Cal* Q'\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'' Q''.\n        P \\<longmapsto>Cal* P'' \\<and>\n        Q' \\<longmapsto>Cal* Q'' \\<and>\n        (P'', Q'') \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P''\n  Q' \\<longmapsto>Cal* Q''\n  (P'', Q'') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (P, Q) \\<in> Rel \\<Longrightarrow>\n    \\<exists>P'' Q''.\n       P \\<longmapsto>Cal* P'' \\<and>\n       Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=", "thus \"\\<exists>P'' Q''. P \\<longmapsto>Cal* P'' \\<and> Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal* P''\n  Q' \\<longmapsto>Cal* Q''\n  (P'', Q'') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P'' Q''.\n       P \\<longmapsto>Cal* P'' \\<and>\n       Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=", "by auto"], ["proof (state)\nthis:\n  \\<exists>P'' Q''.\n     P \\<longmapsto>Cal* P'' \\<and>\n     Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel \\<Longrightarrow>\n  \\<exists>P'' Q''.\n     P \\<longmapsto>Cal* P'' \\<and>\n     Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=\n\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel\\<^sup>= \\<and>\n       Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'' Q''.\n          P \\<longmapsto>Cal* P'' \\<and>\n          Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=", "ultimately"], ["proof (chain)\npicking this:\n  (P, Q) \\<in> Rel\\<^sup>=\n  Q \\<longmapsto>Cal* Q'\n  P = Q \\<Longrightarrow>\n  \\<exists>P'' Q''.\n     P \\<longmapsto>Cal* P'' \\<and>\n     Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=\n  (P, Q) \\<in> Rel \\<Longrightarrow>\n  \\<exists>P'' Q''.\n     P \\<longmapsto>Cal* P'' \\<and>\n     Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=", "show \"\\<exists>P'' Q''. P \\<longmapsto>Cal* P'' \\<and> Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> Rel\\<^sup>=\n  Q \\<longmapsto>Cal* Q'\n  P = Q \\<Longrightarrow>\n  \\<exists>P'' Q''.\n     P \\<longmapsto>Cal* P'' \\<and>\n     Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=\n  (P, Q) \\<in> Rel \\<Longrightarrow>\n  \\<exists>P'' Q''.\n     P \\<longmapsto>Cal* P'' \\<and>\n     Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=\n\ngoal (1 subgoal):\n 1. \\<exists>P'' Q''.\n       P \\<longmapsto>Cal* P'' \\<and>\n       Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=", "by auto"], ["proof (state)\nthis:\n  \\<exists>P'' Q''.\n     P \\<longmapsto>Cal* P'' \\<and>\n     Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>P Q Q'.\n     (P, Q) \\<in> Rel\\<^sup>= \\<and>\n     Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n     (\\<exists>P'' Q''.\n         P \\<longmapsto>Cal* P'' \\<and>\n         Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>=)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  weak_reduction_correspondence_simulation (Rel\\<^sup>=) Cal\n\ngoal (2 subgoals):\n 1. weak_reduction_correspondence_simulation (Rel\\<^sup>+) Cal\n 2. weak_reduction_correspondence_simulation (Rel\\<^sup>*) Cal", "have B: \"\\<And>Rel. weak_reduction_correspondence_simulation Rel Cal\n           \\<Longrightarrow> weak_reduction_correspondence_simulation (Rel\\<^sup>+) Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       weak_reduction_correspondence_simulation Rel Cal \\<Longrightarrow>\n       weak_reduction_correspondence_simulation (Rel\\<^sup>+) Cal", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Rel.\n       weak_reduction_correspondence_simulation Rel Cal \\<Longrightarrow>\n       weak_reduction_simulation (Rel\\<^sup>+) Cal\n 2. \\<And>Rel.\n       weak_reduction_correspondence_simulation Rel Cal \\<Longrightarrow>\n       \\<forall>P Q Q'.\n          (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n          Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n          (\\<exists>P'' Q''.\n              P \\<longmapsto>Cal* P'' \\<and>\n              Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+)", "fix Rel"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Rel.\n       weak_reduction_correspondence_simulation Rel Cal \\<Longrightarrow>\n       weak_reduction_simulation (Rel\\<^sup>+) Cal\n 2. \\<And>Rel.\n       weak_reduction_correspondence_simulation Rel Cal \\<Longrightarrow>\n       \\<forall>P Q Q'.\n          (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n          Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n          (\\<exists>P'' Q''.\n              P \\<longmapsto>Cal* P'' \\<and>\n              Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+)", "assume \"weak_reduction_correspondence_simulation Rel Cal\""], ["proof (state)\nthis:\n  weak_reduction_correspondence_simulation Rel Cal\n\ngoal (2 subgoals):\n 1. \\<And>Rel.\n       weak_reduction_correspondence_simulation Rel Cal \\<Longrightarrow>\n       weak_reduction_simulation (Rel\\<^sup>+) Cal\n 2. \\<And>Rel.\n       weak_reduction_correspondence_simulation Rel Cal \\<Longrightarrow>\n       \\<forall>P Q Q'.\n          (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n          Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n          (\\<exists>P'' Q''.\n              P \\<longmapsto>Cal* P'' \\<and>\n              Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+)", "thus \"weak_reduction_simulation (Rel\\<^sup>+) Cal\""], ["proof (prove)\nusing this:\n  weak_reduction_correspondence_simulation Rel Cal\n\ngoal (1 subgoal):\n 1. weak_reduction_simulation (Rel\\<^sup>+) Cal", "using weak_reduction_simulation_and_closures(2)[where Rel=\"Rel\" and Cal=\"Cal\"]"], ["proof (prove)\nusing this:\n  weak_reduction_correspondence_simulation Rel Cal\n  weak_reduction_simulation Rel Cal \\<Longrightarrow>\n  weak_reduction_simulation (Rel\\<^sup>+) Cal\n\ngoal (1 subgoal):\n 1. weak_reduction_simulation (Rel\\<^sup>+) Cal", "by blast"], ["proof (state)\nthis:\n  weak_reduction_simulation (Rel\\<^sup>+) Cal\n\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       weak_reduction_correspondence_simulation Rel Cal \\<Longrightarrow>\n       \\<forall>P Q Q'.\n          (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n          Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n          (\\<exists>P'' Q''.\n              P \\<longmapsto>Cal* P'' \\<and>\n              Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       weak_reduction_correspondence_simulation Rel Cal \\<Longrightarrow>\n       \\<forall>P Q Q'.\n          (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n          Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n          (\\<exists>P'' Q''.\n              P \\<longmapsto>Cal* P'' \\<and>\n              Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+)", "fix Rel"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       weak_reduction_correspondence_simulation Rel Cal \\<Longrightarrow>\n       \\<forall>P Q Q'.\n          (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n          Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n          (\\<exists>P'' Q''.\n              P \\<longmapsto>Cal* P'' \\<and>\n              Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+)", "assume B1: \"weak_reduction_correspondence_simulation Rel Cal\""], ["proof (state)\nthis:\n  weak_reduction_correspondence_simulation Rel Cal\n\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       weak_reduction_correspondence_simulation Rel Cal \\<Longrightarrow>\n       \\<forall>P Q Q'.\n          (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n          Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n          (\\<exists>P'' Q''.\n              P \\<longmapsto>Cal* P'' \\<and>\n              Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+)", "show \"\\<forall>P Q Q'. (P, Q) \\<in> Rel\\<^sup>+ \\<and> Q \\<longmapsto>Cal* Q'\n          \\<longrightarrow> (\\<exists>P'' Q''. P \\<longmapsto>Cal* P'' \\<and> Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P Q Q'.\n       (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n       Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n       (\\<exists>P'' Q''.\n           P \\<longmapsto>Cal* P'' \\<and>\n           Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+)", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n       Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'' Q''.\n          P \\<longmapsto>Cal* P'' \\<and>\n          Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+", "fix P Q Q'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n       Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'' Q''.\n          P \\<longmapsto>Cal* P'' \\<and>\n          Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+", "assume \"(P, Q) \\<in> Rel\\<^sup>+\" and \"Q \\<longmapsto>Cal* Q'\""], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\\<^sup>+\n  Q \\<longmapsto>Cal* Q'\n\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n       Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'' Q''.\n          P \\<longmapsto>Cal* P'' \\<and>\n          Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+", "thus \"\\<exists>P'' Q''. P \\<longmapsto>Cal* P'' \\<and> Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> Rel\\<^sup>+\n  Q \\<longmapsto>Cal* Q'\n\ngoal (1 subgoal):\n 1. \\<exists>P'' Q''.\n       P \\<longmapsto>Cal* P'' \\<and>\n       Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+", "proof (induct arbitrary: Q')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y Q'.\n       (P, y) \\<in> Rel \\<and> y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'' Q''.\n          P \\<longmapsto>Cal* P'' \\<and>\n          Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+\n 2. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n           \\<exists>P'' Q''.\n              P \\<longmapsto>Cal* P'' \\<and>\n              Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal* Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'' Q''.\n                            P \\<longmapsto>Cal* P'' \\<and>\n                            Q' \\<longmapsto>Cal* Q'' \\<and>\n                            (P'', Q'') \\<in> Rel\\<^sup>+", "fix Q Q'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y Q'.\n       (P, y) \\<in> Rel \\<and> y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'' Q''.\n          P \\<longmapsto>Cal* P'' \\<and>\n          Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+\n 2. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n           \\<exists>P'' Q''.\n              P \\<longmapsto>Cal* P'' \\<and>\n              Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal* Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'' Q''.\n                            P \\<longmapsto>Cal* P'' \\<and>\n                            Q' \\<longmapsto>Cal* Q'' \\<and>\n                            (P'', Q'') \\<in> Rel\\<^sup>+", "assume \"(P, Q) \\<in> Rel\" and \"Q \\<longmapsto>Cal* Q'\""], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n  Q \\<longmapsto>Cal* Q'\n\ngoal (2 subgoals):\n 1. \\<And>y Q'.\n       (P, y) \\<in> Rel \\<and> y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'' Q''.\n          P \\<longmapsto>Cal* P'' \\<and>\n          Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+\n 2. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n           \\<exists>P'' Q''.\n              P \\<longmapsto>Cal* P'' \\<and>\n              Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal* Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'' Q''.\n                            P \\<longmapsto>Cal* P'' \\<and>\n                            Q' \\<longmapsto>Cal* Q'' \\<and>\n                            (P'', Q'') \\<in> Rel\\<^sup>+", "with B1"], ["proof (chain)\npicking this:\n  weak_reduction_correspondence_simulation Rel Cal\n  (P, Q) \\<in> Rel\n  Q \\<longmapsto>Cal* Q'", "obtain P'' Q'' where B2: \"P \\<longmapsto>Cal* P''\" and B3: \"Q' \\<longmapsto>Cal* Q''\"\n                               and B4: \"(P'', Q'') \\<in> Rel\""], ["proof (prove)\nusing this:\n  weak_reduction_correspondence_simulation Rel Cal\n  (P, Q) \\<in> Rel\n  Q \\<longmapsto>Cal* Q'\n\ngoal (1 subgoal):\n 1. (\\<And>P'' Q''.\n        P \\<longmapsto>Cal* P'' \\<and>\n        Q' \\<longmapsto>Cal* Q'' \\<and>\n        (P'', Q'') \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P''\n  Q' \\<longmapsto>Cal* Q''\n  (P'', Q'') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>y Q'.\n       (P, y) \\<in> Rel \\<and> y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'' Q''.\n          P \\<longmapsto>Cal* P'' \\<and>\n          Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+\n 2. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n           \\<exists>P'' Q''.\n              P \\<longmapsto>Cal* P'' \\<and>\n              Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal* Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'' Q''.\n                            P \\<longmapsto>Cal* P'' \\<and>\n                            Q' \\<longmapsto>Cal* Q'' \\<and>\n                            (P'', Q'') \\<in> Rel\\<^sup>+", "from B4"], ["proof (chain)\npicking this:\n  (P'', Q'') \\<in> Rel", "have \"(P'', Q'') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  (P'', Q'') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (P'', Q'') \\<in> Rel\\<^sup>+", "by simp"], ["proof (state)\nthis:\n  (P'', Q'') \\<in> Rel\\<^sup>+\n\ngoal (2 subgoals):\n 1. \\<And>y Q'.\n       (P, y) \\<in> Rel \\<and> y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'' Q''.\n          P \\<longmapsto>Cal* P'' \\<and>\n          Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+\n 2. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n           \\<exists>P'' Q''.\n              P \\<longmapsto>Cal* P'' \\<and>\n              Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal* Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'' Q''.\n                            P \\<longmapsto>Cal* P'' \\<and>\n                            Q' \\<longmapsto>Cal* Q'' \\<and>\n                            (P'', Q'') \\<in> Rel\\<^sup>+", "with B2 B3"], ["proof (chain)\npicking this:\n  P \\<longmapsto>Cal* P''\n  Q' \\<longmapsto>Cal* Q''\n  (P'', Q'') \\<in> Rel\\<^sup>+", "show \"\\<exists>P'' Q''. P \\<longmapsto>Cal* P'' \\<and> Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal* P''\n  Q' \\<longmapsto>Cal* Q''\n  (P'', Q'') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<exists>P'' Q''.\n       P \\<longmapsto>Cal* P'' \\<and>\n       Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'' Q''.\n     P \\<longmapsto>Cal* P'' \\<and>\n     Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n           \\<exists>P'' Q''.\n              P \\<longmapsto>Cal* P'' \\<and>\n              Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal* Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'' Q''.\n                            P \\<longmapsto>Cal* P'' \\<and>\n                            Q' \\<longmapsto>Cal* Q'' \\<and>\n                            (P'', Q'') \\<in> Rel\\<^sup>+", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n           \\<exists>P'' Q''.\n              P \\<longmapsto>Cal* P'' \\<and>\n              Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal* Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'' Q''.\n                            P \\<longmapsto>Cal* P'' \\<and>\n                            Q' \\<longmapsto>Cal* Q'' \\<and>\n                            (P'', Q'') \\<in> Rel\\<^sup>+", "case (step Q R R')"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\\<^sup>+\n  (Q, R) \\<in> Rel\n  Q \\<longmapsto>Cal* ?Q' \\<Longrightarrow>\n  \\<exists>P'' Q''.\n     P \\<longmapsto>Cal* P'' \\<and>\n     ?Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+\n  R \\<longmapsto>Cal* R'\n\ngoal (1 subgoal):\n 1. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n           \\<exists>P'' Q''.\n              P \\<longmapsto>Cal* P'' \\<and>\n              Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal* Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'' Q''.\n                            P \\<longmapsto>Cal* P'' \\<and>\n                            Q' \\<longmapsto>Cal* Q'' \\<and>\n                            (P'', Q'') \\<in> Rel\\<^sup>+", "assume \"\\<And>Q'. Q \\<longmapsto>Cal* Q'\n                \\<Longrightarrow> \\<exists>P'' Q''. P \\<longmapsto>Cal* P'' \\<and> Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+\""], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal* ?Q' \\<Longrightarrow>\n  \\<exists>P'' Q''.\n     P \\<longmapsto>Cal* P'' \\<and>\n     ?Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n           \\<exists>P'' Q''.\n              P \\<longmapsto>Cal* P'' \\<and>\n              Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal* Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'' Q''.\n                            P \\<longmapsto>Cal* P'' \\<and>\n                            Q' \\<longmapsto>Cal* Q'' \\<and>\n                            (P'', Q'') \\<in> Rel\\<^sup>+", "moreover"], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal* ?Q' \\<Longrightarrow>\n  \\<exists>P'' Q''.\n     P \\<longmapsto>Cal* P'' \\<and>\n     ?Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n           \\<exists>P'' Q''.\n              P \\<longmapsto>Cal* P'' \\<and>\n              Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal* Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'' Q''.\n                            P \\<longmapsto>Cal* P'' \\<and>\n                            Q' \\<longmapsto>Cal* Q'' \\<and>\n                            (P'', Q'') \\<in> Rel\\<^sup>+", "assume \"(Q, R) \\<in> Rel\""], ["proof (state)\nthis:\n  (Q, R) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n           \\<exists>P'' Q''.\n              P \\<longmapsto>Cal* P'' \\<and>\n              Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal* Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'' Q''.\n                            P \\<longmapsto>Cal* P'' \\<and>\n                            Q' \\<longmapsto>Cal* Q'' \\<and>\n                            (P'', Q'') \\<in> Rel\\<^sup>+", "with B1"], ["proof (chain)\npicking this:\n  weak_reduction_correspondence_simulation Rel Cal\n  (Q, R) \\<in> Rel", "have \"\\<And>R'. R \\<longmapsto>Cal* R' \\<Longrightarrow> \\<exists>Q'' R''. Q \\<longmapsto>Cal* Q'' \\<and> R' \\<longmapsto>Cal* R'' \\<and> (Q'', R'') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  weak_reduction_correspondence_simulation Rel Cal\n  (Q, R) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>R'.\n       R \\<longmapsto>Cal* R' \\<Longrightarrow>\n       \\<exists>Q'' R''.\n          Q \\<longmapsto>Cal* Q'' \\<and>\n          R' \\<longmapsto>Cal* R'' \\<and> (Q'', R'') \\<in> Rel\\<^sup>+", "by blast"], ["proof (state)\nthis:\n  R \\<longmapsto>Cal* ?R' \\<Longrightarrow>\n  \\<exists>Q'' R''.\n     Q \\<longmapsto>Cal* Q'' \\<and>\n     ?R' \\<longmapsto>Cal* R'' \\<and> (Q'', R'') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n           \\<exists>P'' Q''.\n              P \\<longmapsto>Cal* P'' \\<and>\n              Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal* Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'' Q''.\n                            P \\<longmapsto>Cal* P'' \\<and>\n                            Q' \\<longmapsto>Cal* Q'' \\<and>\n                            (P'', Q'') \\<in> Rel\\<^sup>+", "moreover"], ["proof (state)\nthis:\n  R \\<longmapsto>Cal* ?R' \\<Longrightarrow>\n  \\<exists>Q'' R''.\n     Q \\<longmapsto>Cal* Q'' \\<and>\n     ?R' \\<longmapsto>Cal* R'' \\<and> (Q'', R'') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n           \\<exists>P'' Q''.\n              P \\<longmapsto>Cal* P'' \\<and>\n              Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal* Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'' Q''.\n                            P \\<longmapsto>Cal* P'' \\<and>\n                            Q' \\<longmapsto>Cal* Q'' \\<and>\n                            (P'', Q'') \\<in> Rel\\<^sup>+", "from B1"], ["proof (chain)\npicking this:\n  weak_reduction_correspondence_simulation Rel Cal", "have \"weak_reduction_simulation (Rel\\<^sup>+) Cal\""], ["proof (prove)\nusing this:\n  weak_reduction_correspondence_simulation Rel Cal\n\ngoal (1 subgoal):\n 1. weak_reduction_simulation (Rel\\<^sup>+) Cal", "using weak_reduction_simulation_and_closures(2)[where Rel=\"Rel\" and Cal=\"Cal\"]"], ["proof (prove)\nusing this:\n  weak_reduction_correspondence_simulation Rel Cal\n  weak_reduction_simulation Rel Cal \\<Longrightarrow>\n  weak_reduction_simulation (Rel\\<^sup>+) Cal\n\ngoal (1 subgoal):\n 1. weak_reduction_simulation (Rel\\<^sup>+) Cal", "by blast"], ["proof (state)\nthis:\n  weak_reduction_simulation (Rel\\<^sup>+) Cal\n\ngoal (1 subgoal):\n 1. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n           \\<exists>P'' Q''.\n              P \\<longmapsto>Cal* P'' \\<and>\n              Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal* Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'' Q''.\n                            P \\<longmapsto>Cal* P'' \\<and>\n                            Q' \\<longmapsto>Cal* Q'' \\<and>\n                            (P'', Q'') \\<in> Rel\\<^sup>+", "moreover"], ["proof (state)\nthis:\n  weak_reduction_simulation (Rel\\<^sup>+) Cal\n\ngoal (1 subgoal):\n 1. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n           \\<exists>P'' Q''.\n              P \\<longmapsto>Cal* P'' \\<and>\n              Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal* Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'' Q''.\n                            P \\<longmapsto>Cal* P'' \\<and>\n                            Q' \\<longmapsto>Cal* Q'' \\<and>\n                            (P'', Q'') \\<in> Rel\\<^sup>+", "have \"trans (Rel\\<^sup>+)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trans (Rel\\<^sup>+)", "using trans_trancl[of Rel]"], ["proof (prove)\nusing this:\n  trans (Rel\\<^sup>+)\n\ngoal (1 subgoal):\n 1. trans (Rel\\<^sup>+)", "by blast"], ["proof (state)\nthis:\n  trans (Rel\\<^sup>+)\n\ngoal (1 subgoal):\n 1. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n           \\<exists>P'' Q''.\n              P \\<longmapsto>Cal* P'' \\<and>\n              Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal* Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'' Q''.\n                            P \\<longmapsto>Cal* P'' \\<and>\n                            Q' \\<longmapsto>Cal* Q'' \\<and>\n                            (P'', Q'') \\<in> Rel\\<^sup>+", "moreover"], ["proof (state)\nthis:\n  trans (Rel\\<^sup>+)\n\ngoal (1 subgoal):\n 1. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n           \\<exists>P'' Q''.\n              P \\<longmapsto>Cal* P'' \\<and>\n              Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal* Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'' Q''.\n                            P \\<longmapsto>Cal* P'' \\<and>\n                            Q' \\<longmapsto>Cal* Q'' \\<and>\n                            (P'', Q'') \\<in> Rel\\<^sup>+", "assume \"R \\<longmapsto>Cal* R'\""], ["proof (state)\nthis:\n  R \\<longmapsto>Cal* R'\n\ngoal (1 subgoal):\n 1. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n           \\<exists>P'' Q''.\n              P \\<longmapsto>Cal* P'' \\<and>\n              Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal* Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'' Q''.\n                            P \\<longmapsto>Cal* P'' \\<and>\n                            Q' \\<longmapsto>Cal* Q'' \\<and>\n                            (P'', Q'') \\<in> Rel\\<^sup>+", "ultimately"], ["proof (chain)\npicking this:\n  Q \\<longmapsto>Cal* ?Q' \\<Longrightarrow>\n  \\<exists>P'' Q''.\n     P \\<longmapsto>Cal* P'' \\<and>\n     ?Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+\n  R \\<longmapsto>Cal* ?R' \\<Longrightarrow>\n  \\<exists>Q'' R''.\n     Q \\<longmapsto>Cal* Q'' \\<and>\n     ?R' \\<longmapsto>Cal* R'' \\<and> (Q'', R'') \\<in> Rel\\<^sup>+\n  weak_reduction_simulation (Rel\\<^sup>+) Cal\n  trans (Rel\\<^sup>+)\n  R \\<longmapsto>Cal* R'", "show \"\\<exists>P'' R''. P \\<longmapsto>Cal* P'' \\<and> R' \\<longmapsto>Cal* R'' \\<and> (P'', R'') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto>Cal* ?Q' \\<Longrightarrow>\n  \\<exists>P'' Q''.\n     P \\<longmapsto>Cal* P'' \\<and>\n     ?Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+\n  R \\<longmapsto>Cal* ?R' \\<Longrightarrow>\n  \\<exists>Q'' R''.\n     Q \\<longmapsto>Cal* Q'' \\<and>\n     ?R' \\<longmapsto>Cal* R'' \\<and> (Q'', R'') \\<in> Rel\\<^sup>+\n  weak_reduction_simulation (Rel\\<^sup>+) Cal\n  trans (Rel\\<^sup>+)\n  R \\<longmapsto>Cal* R'\n\ngoal (1 subgoal):\n 1. \\<exists>P'' R''.\n       P \\<longmapsto>Cal* P'' \\<and>\n       R' \\<longmapsto>Cal* R'' \\<and> (P'', R'') \\<in> Rel\\<^sup>+", "using reduction_correspondence_simulation_condition_trans[where Rel=\"Rel\\<^sup>+\"]"], ["proof (prove)\nusing this:\n  Q \\<longmapsto>Cal* ?Q' \\<Longrightarrow>\n  \\<exists>P'' Q''.\n     P \\<longmapsto>Cal* P'' \\<and>\n     ?Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+\n  R \\<longmapsto>Cal* ?R' \\<Longrightarrow>\n  \\<exists>Q'' R''.\n     Q \\<longmapsto>Cal* Q'' \\<and>\n     ?R' \\<longmapsto>Cal* R'' \\<and> (Q'', R'') \\<in> Rel\\<^sup>+\n  weak_reduction_simulation (Rel\\<^sup>+) Cal\n  trans (Rel\\<^sup>+)\n  R \\<longmapsto>Cal* R'\n  (\\<forall>Q'.\n      ?Q \\<longmapsto>?Cal* Q' \\<longrightarrow>\n      (\\<exists>P'' Q''.\n          ?P \\<longmapsto>?Cal* P'' \\<and>\n          Q' \\<longmapsto>?Cal* Q'' \\<and>\n          (P'', Q'') \\<in> Rel\\<^sup>+)) \\<and>\n  (\\<forall>R'.\n      ?R \\<longmapsto>?Cal* R' \\<longrightarrow>\n      (\\<exists>Q'' R''.\n          ?Q \\<longmapsto>?Cal* Q'' \\<and>\n          R' \\<longmapsto>?Cal* R'' \\<and>\n          (Q'', R'') \\<in> Rel\\<^sup>+)) \\<and>\n  weak_reduction_simulation (Rel\\<^sup>+) ?Cal \\<and>\n  trans (Rel\\<^sup>+) \\<Longrightarrow>\n  \\<forall>R'.\n     ?R \\<longmapsto>?Cal* R' \\<longrightarrow>\n     (\\<exists>P'' R''.\n         ?P \\<longmapsto>?Cal* P'' \\<and>\n         R' \\<longmapsto>?Cal* R'' \\<and> (P'', R'') \\<in> Rel\\<^sup>+)\n\ngoal (1 subgoal):\n 1. \\<exists>P'' R''.\n       P \\<longmapsto>Cal* P'' \\<and>\n       R' \\<longmapsto>Cal* R'' \\<and> (P'', R'') \\<in> Rel\\<^sup>+", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'' R''.\n     P \\<longmapsto>Cal* P'' \\<and>\n     R' \\<longmapsto>Cal* R'' \\<and> (P'', R'') \\<in> Rel\\<^sup>+\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'' Q''.\n     P \\<longmapsto>Cal* P'' \\<and>\n     Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>P Q Q'.\n     (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n     Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n     (\\<exists>P'' Q''.\n         P \\<longmapsto>Cal* P'' \\<and>\n         Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\\<^sup>+)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  weak_reduction_correspondence_simulation ?Rel Cal \\<Longrightarrow>\n  weak_reduction_correspondence_simulation (?Rel\\<^sup>+) Cal\n\ngoal (2 subgoals):\n 1. weak_reduction_correspondence_simulation (Rel\\<^sup>+) Cal\n 2. weak_reduction_correspondence_simulation (Rel\\<^sup>*) Cal", "from corrSim B[where Rel=\"Rel\"]"], ["proof (chain)\npicking this:\n  weak_reduction_correspondence_simulation Rel Cal\n  weak_reduction_correspondence_simulation Rel Cal \\<Longrightarrow>\n  weak_reduction_correspondence_simulation (Rel\\<^sup>+) Cal", "show \"weak_reduction_correspondence_simulation (Rel\\<^sup>+) Cal\""], ["proof (prove)\nusing this:\n  weak_reduction_correspondence_simulation Rel Cal\n  weak_reduction_correspondence_simulation Rel Cal \\<Longrightarrow>\n  weak_reduction_correspondence_simulation (Rel\\<^sup>+) Cal\n\ngoal (1 subgoal):\n 1. weak_reduction_correspondence_simulation (Rel\\<^sup>+) Cal", "by blast"], ["proof (state)\nthis:\n  weak_reduction_correspondence_simulation (Rel\\<^sup>+) Cal\n\ngoal (1 subgoal):\n 1. weak_reduction_correspondence_simulation (Rel\\<^sup>*) Cal", "from A B[where Rel=\"Rel\\<^sup>=\"]"], ["proof (chain)\npicking this:\n  weak_reduction_correspondence_simulation (Rel\\<^sup>=) Cal\n  weak_reduction_correspondence_simulation (Rel\\<^sup>=)\n   Cal \\<Longrightarrow>\n  weak_reduction_correspondence_simulation ((Rel\\<^sup>=)\\<^sup>+) Cal", "show \"weak_reduction_correspondence_simulation (Rel\\<^sup>*) Cal\""], ["proof (prove)\nusing this:\n  weak_reduction_correspondence_simulation (Rel\\<^sup>=) Cal\n  weak_reduction_correspondence_simulation (Rel\\<^sup>=)\n   Cal \\<Longrightarrow>\n  weak_reduction_correspondence_simulation ((Rel\\<^sup>=)\\<^sup>+) Cal\n\ngoal (1 subgoal):\n 1. weak_reduction_correspondence_simulation (Rel\\<^sup>*) Cal", "using trancl_reflcl[of Rel]"], ["proof (prove)\nusing this:\n  weak_reduction_correspondence_simulation (Rel\\<^sup>=) Cal\n  weak_reduction_correspondence_simulation (Rel\\<^sup>=)\n   Cal \\<Longrightarrow>\n  weak_reduction_correspondence_simulation ((Rel\\<^sup>=)\\<^sup>+) Cal\n  (Rel\\<^sup>=)\\<^sup>+ = Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. weak_reduction_correspondence_simulation (Rel\\<^sup>*) Cal", "by auto"], ["proof (state)\nthis:\n  weak_reduction_correspondence_simulation (Rel\\<^sup>*) Cal\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weak_barbed_correspondence_simulation_and_closures:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  assumes corrSim: \"weak_barbed_correspondence_simulation Rel CWB\"\n  shows \"weak_barbed_correspondence_simulation (Rel\\<^sup>=) CWB\"\n    and \"weak_barbed_correspondence_simulation (Rel\\<^sup>+) CWB\"\n    and \"weak_barbed_correspondence_simulation (Rel\\<^sup>*) CWB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_barbed_correspondence_simulation (Rel\\<^sup>=) CWB &&&\n    weak_barbed_correspondence_simulation (Rel\\<^sup>+) CWB &&&\n    weak_barbed_correspondence_simulation (Rel\\<^sup>*) CWB", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. weak_barbed_correspondence_simulation (Rel\\<^sup>=) CWB\n 2. weak_barbed_correspondence_simulation (Rel\\<^sup>+) CWB\n 3. weak_barbed_correspondence_simulation (Rel\\<^sup>*) CWB", "from corrSim"], ["proof (chain)\npicking this:\n  weak_barbed_correspondence_simulation Rel CWB", "show \"weak_barbed_correspondence_simulation (Rel\\<^sup>=) CWB\""], ["proof (prove)\nusing this:\n  weak_barbed_correspondence_simulation Rel CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_correspondence_simulation (Rel\\<^sup>=) CWB", "using weak_reduction_correspondence_simulation_and_closures(1)[where Rel=\"Rel\"\n              and Cal=\"Calculus CWB\"]\n            weak_respection_of_barbs_and_closures(1)[where Rel=\"Rel\" and CWB=\"CWB\"]"], ["proof (prove)\nusing this:\n  weak_barbed_correspondence_simulation Rel CWB\n  weak_reduction_correspondence_simulation Rel\n   (Calculus CWB) \\<Longrightarrow>\n  weak_reduction_correspondence_simulation (Rel\\<^sup>=) (Calculus CWB)\n  rel_weakly_respects_barbs Rel CWB \\<Longrightarrow>\n  rel_weakly_respects_barbs (Rel\\<^sup>=) CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_correspondence_simulation (Rel\\<^sup>=) CWB", "by fast"], ["proof (state)\nthis:\n  weak_barbed_correspondence_simulation (Rel\\<^sup>=) CWB\n\ngoal (2 subgoals):\n 1. weak_barbed_correspondence_simulation (Rel\\<^sup>+) CWB\n 2. weak_barbed_correspondence_simulation (Rel\\<^sup>*) CWB", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. weak_barbed_correspondence_simulation (Rel\\<^sup>+) CWB\n 2. weak_barbed_correspondence_simulation (Rel\\<^sup>*) CWB", "from corrSim"], ["proof (chain)\npicking this:\n  weak_barbed_correspondence_simulation Rel CWB", "show \"weak_barbed_correspondence_simulation (Rel\\<^sup>+) CWB\""], ["proof (prove)\nusing this:\n  weak_barbed_correspondence_simulation Rel CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_correspondence_simulation (Rel\\<^sup>+) CWB", "using weak_reduction_correspondence_simulation_and_closures(2)[where Rel=\"Rel\"\n              and Cal=\"Calculus CWB\"]\n            weak_respection_of_barbs_and_closures(3)[where Rel=\"Rel\" and CWB=\"CWB\"]"], ["proof (prove)\nusing this:\n  weak_barbed_correspondence_simulation Rel CWB\n  weak_reduction_correspondence_simulation Rel\n   (Calculus CWB) \\<Longrightarrow>\n  weak_reduction_correspondence_simulation (Rel\\<^sup>+) (Calculus CWB)\n  rel_weakly_respects_barbs Rel CWB \\<Longrightarrow>\n  rel_weakly_respects_barbs (Rel\\<^sup>+) CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_correspondence_simulation (Rel\\<^sup>+) CWB", "by blast"], ["proof (state)\nthis:\n  weak_barbed_correspondence_simulation (Rel\\<^sup>+) CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_correspondence_simulation (Rel\\<^sup>*) CWB", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. weak_barbed_correspondence_simulation (Rel\\<^sup>*) CWB", "from corrSim"], ["proof (chain)\npicking this:\n  weak_barbed_correspondence_simulation Rel CWB", "show \"weak_barbed_correspondence_simulation (Rel\\<^sup>*) CWB\""], ["proof (prove)\nusing this:\n  weak_barbed_correspondence_simulation Rel CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_correspondence_simulation (Rel\\<^sup>*) CWB", "using weak_reduction_correspondence_simulation_and_closures(3)[where Rel=\"Rel\"\n              and Cal=\"Calculus CWB\"]\n            weak_respection_of_barbs_and_closures(5)[where Rel=\"Rel\" and CWB=\"CWB\"]"], ["proof (prove)\nusing this:\n  weak_barbed_correspondence_simulation Rel CWB\n  weak_reduction_correspondence_simulation Rel\n   (Calculus CWB) \\<Longrightarrow>\n  weak_reduction_correspondence_simulation (Rel\\<^sup>*) (Calculus CWB)\n  rel_weakly_respects_barbs Rel CWB \\<Longrightarrow>\n  rel_weakly_respects_barbs (Rel\\<^sup>*) CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_correspondence_simulation (Rel\\<^sup>*) CWB", "by blast"], ["proof (state)\nthis:\n  weak_barbed_correspondence_simulation (Rel\\<^sup>*) CWB\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Bisimulation\\<close>"], ["", "text \\<open>A weak reduction bisimulation is relation R such that\n        (1) if (P, Q) in R and P evolves to some P' then there exists some Q' such that Q evolves\n            to Q' and (P', Q') in R, and\n        (2) if (P, Q) in R and Q evolves to some Q' then there exists some P' such that P evolves\n            to P' and (P', Q') in R.\\<close>"], ["", "abbreviation weak_reduction_bisimulation\n    :: \"('proc \\<times> 'proc) set \\<Rightarrow> 'proc processCalculus \\<Rightarrow> bool\"\n  where\n  \"weak_reduction_bisimulation Rel Cal \\<equiv>\n   (\\<forall>P Q P'. (P, Q) \\<in> Rel \\<and> P \\<longmapsto>Cal* P' \\<longrightarrow> (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel))\n   \\<and> (\\<forall>P Q Q'. (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<longrightarrow> (\\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel))\""], ["", "text \\<open>A weak barbed bisimulation is weak reduction bisimulation that weakly respects barbs.\\<close>"], ["", "abbreviation weak_barbed_bisimulation\n    :: \"('proc \\<times> 'proc) set \\<Rightarrow> ('proc, 'barbs) calculusWithBarbs \\<Rightarrow> bool\"\n  where\n  \"weak_barbed_bisimulation Rel CWB \\<equiv>\n   weak_reduction_bisimulation Rel (Calculus CWB) \\<and> rel_weakly_respects_barbs Rel CWB\""], ["", "text \\<open>A symetric weak simulation is a weak bisimulation.\\<close>"], ["", "lemma symm_weak_reduction_simulation_is_bisimulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  assumes \"sym Rel\"\n      and \"weak_reduction_simulation Rel Cal\"\n  shows \"weak_reduction_bisimulation Rel Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_reduction_bisimulation Rel Cal", "using assms symD[of Rel]"], ["proof (prove)\nusing this:\n  sym Rel\n  weak_reduction_simulation Rel Cal\n  sym Rel \\<and> (?b, ?a) \\<in> Rel \\<Longrightarrow> (?a, ?b) \\<in> Rel\n\ngoal (1 subgoal):\n 1. weak_reduction_bisimulation Rel Cal", "by blast"], ["", "lemma symm_weak_barbed_simulation_is_bisimulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  assumes \"sym Rel\"\n      and \"weak_barbed_simulation Rel Cal\"\n  shows \"weak_barbed_bisimulation Rel Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_barbed_bisimulation Rel Cal", "using assms symD[of Rel]"], ["proof (prove)\nusing this:\n  sym Rel\n  weak_barbed_simulation Rel Cal\n  sym Rel \\<and> (?b, ?a) \\<in> Rel \\<Longrightarrow> (?a, ?b) \\<in> Rel\n\ngoal (1 subgoal):\n 1. weak_barbed_bisimulation Rel Cal", "by blast"], ["", "text \\<open>If a relation as well as its inverse are weak simulations, then this relation is a weak\n        bisimulation.\\<close>"], ["", "lemma weak_reduction_simulations_impl_bisimulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  assumes sim:    \"weak_reduction_simulation Rel Cal\"\n      and simInv: \"weak_reduction_simulation (Rel\\<inverse>) Cal\"\n  shows \"weak_reduction_bisimulation Rel Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_reduction_bisimulation Rel Cal", "proof auto"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q P'.\n       (P, Q) \\<in> Rel \\<and> P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\n 2. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "fix P Q P'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q P'.\n       (P, Q) \\<in> Rel \\<and> P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\n 2. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "assume \"(P, Q) \\<in> Rel\" and \"P \\<longmapsto>Cal* P'\""], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n  P \\<longmapsto>Cal* P'\n\ngoal (2 subgoals):\n 1. \\<And>P Q P'.\n       (P, Q) \\<in> Rel \\<and> P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\n 2. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "with sim"], ["proof (chain)\npicking this:\n  weak_reduction_simulation Rel Cal\n  (P, Q) \\<in> Rel\n  P \\<longmapsto>Cal* P'", "show \"\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  weak_reduction_simulation Rel Cal\n  (P, Q) \\<in> Rel\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel", "by simp"], ["proof (state)\nthis:\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "fix P Q Q'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "assume \"(P, Q) \\<in> Rel\""], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "hence \"(Q, P) \\<in> Rel\\<inverse>\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (Q, P) \\<in> Rel\\<inverse>", "by simp"], ["proof (state)\nthis:\n  (Q, P) \\<in> Rel\\<inverse>\n\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  (Q, P) \\<in> Rel\\<inverse>\n\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "assume \"Q \\<longmapsto>Cal* Q'\""], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal* Q'\n\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  (Q, P) \\<in> Rel\\<inverse>\n  Q \\<longmapsto>Cal* Q'", "obtain P' where A1: \"P \\<longmapsto>Cal* P'\" and A2: \"(Q', P') \\<in> Rel\\<inverse>\""], ["proof (prove)\nusing this:\n  (Q, P) \\<in> Rel\\<inverse>\n  Q \\<longmapsto>Cal* Q'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        P \\<longmapsto>Cal* P' \\<and>\n        (Q', P') \\<in> Rel\\<inverse> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using simInv"], ["proof (prove)\nusing this:\n  (Q, P) \\<in> Rel\\<inverse>\n  Q \\<longmapsto>Cal* Q'\n  weak_reduction_simulation (Rel\\<inverse>) Cal\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        P \\<longmapsto>Cal* P' \\<and>\n        (Q', P') \\<in> Rel\\<inverse> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P'\n  (Q', P') \\<in> Rel\\<inverse>\n\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "from A2"], ["proof (chain)\npicking this:\n  (Q', P') \\<in> Rel\\<inverse>", "have \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  (Q', P') \\<in> Rel\\<inverse>\n\ngoal (1 subgoal):\n 1. (P', Q') \\<in> Rel", "by induct"], ["proof (state)\nthis:\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "with A1"], ["proof (chain)\npicking this:\n  P \\<longmapsto>Cal* P'\n  (P', Q') \\<in> Rel", "show \"\\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal* P'\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weak_reduction_bisimulations_impl_inverse_is_simulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  assumes bisim: \"weak_reduction_bisimulation Rel Cal\"\n  shows \"weak_reduction_simulation (Rel\\<inverse>) Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_reduction_simulation (Rel\\<inverse>) Cal", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q P'.\n       P \\<longmapsto>Cal* P' \\<and> (Q, P) \\<in> Rel \\<Longrightarrow>\n       \\<exists>Q'.\n          Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<inverse>", "fix P Q P'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q P'.\n       P \\<longmapsto>Cal* P' \\<and> (Q, P) \\<in> Rel \\<Longrightarrow>\n       \\<exists>Q'.\n          Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<inverse>", "assume \"(Q, P) \\<in> Rel\""], ["proof (state)\nthis:\n  (Q, P) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P Q P'.\n       P \\<longmapsto>Cal* P' \\<and> (Q, P) \\<in> Rel \\<Longrightarrow>\n       \\<exists>Q'.\n          Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<inverse>", "moreover"], ["proof (state)\nthis:\n  (Q, P) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P Q P'.\n       P \\<longmapsto>Cal* P' \\<and> (Q, P) \\<in> Rel \\<Longrightarrow>\n       \\<exists>Q'.\n          Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<inverse>", "assume \"P \\<longmapsto>Cal* P'\""], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. \\<And>P Q P'.\n       P \\<longmapsto>Cal* P' \\<and> (Q, P) \\<in> Rel \\<Longrightarrow>\n       \\<exists>Q'.\n          Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<inverse>", "ultimately"], ["proof (chain)\npicking this:\n  (Q, P) \\<in> Rel\n  P \\<longmapsto>Cal* P'", "obtain Q' where A1: \"Q \\<longmapsto>Cal* Q'\" and A2: \"(Q', P') \\<in> Rel\""], ["proof (prove)\nusing this:\n  (Q, P) \\<in> Rel\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using bisim"], ["proof (prove)\nusing this:\n  (Q, P) \\<in> Rel\n  P \\<longmapsto>Cal* P'\n  weak_reduction_bisimulation Rel Cal\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal* Q'\n  (Q', P') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P Q P'.\n       P \\<longmapsto>Cal* P' \\<and> (Q, P) \\<in> Rel \\<Longrightarrow>\n       \\<exists>Q'.\n          Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<inverse>", "from A2"], ["proof (chain)\npicking this:\n  (Q', P') \\<in> Rel", "have \"(P', Q') \\<in> Rel\\<inverse>\""], ["proof (prove)\nusing this:\n  (Q', P') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (P', Q') \\<in> Rel\\<inverse>", "by simp"], ["proof (state)\nthis:\n  (P', Q') \\<in> Rel\\<inverse>\n\ngoal (1 subgoal):\n 1. \\<And>P Q P'.\n       P \\<longmapsto>Cal* P' \\<and> (Q, P) \\<in> Rel \\<Longrightarrow>\n       \\<exists>Q'.\n          Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<inverse>", "with A1"], ["proof (chain)\npicking this:\n  Q \\<longmapsto>Cal* Q'\n  (P', Q') \\<in> Rel\\<inverse>", "show \"\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<inverse>\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto>Cal* Q'\n  (P', Q') \\<in> Rel\\<inverse>\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<inverse>", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<inverse>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weak_reduction_simulations_iff_bisimulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  shows \"(weak_reduction_simulation Rel Cal \\<and> weak_reduction_simulation (Rel\\<inverse>) Cal)\n         = weak_reduction_bisimulation Rel Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (weak_reduction_simulation Rel Cal \\<and>\n     weak_reduction_simulation (Rel\\<inverse>) Cal) =\n    weak_reduction_bisimulation Rel Cal", "using weak_reduction_simulations_impl_bisimulation[where Rel=\"Rel\" and Cal=\"Cal\"]\n            weak_reduction_bisimulations_impl_inverse_is_simulation[where Rel=\"Rel\" and Cal=\"Cal\"]"], ["proof (prove)\nusing this:\n  weak_reduction_simulation Rel Cal \\<and>\n  weak_reduction_simulation (Rel\\<inverse>) Cal \\<Longrightarrow>\n  weak_reduction_bisimulation Rel Cal\n  weak_reduction_bisimulation Rel Cal \\<Longrightarrow>\n  weak_reduction_simulation (Rel\\<inverse>) Cal\n\ngoal (1 subgoal):\n 1. (weak_reduction_simulation Rel Cal \\<and>\n     weak_reduction_simulation (Rel\\<inverse>) Cal) =\n    weak_reduction_bisimulation Rel Cal", "by blast"], ["", "lemma weak_barbed_simulations_iff_bisimulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  shows \"(weak_barbed_simulation Rel CWB \\<and> weak_barbed_simulation (Rel\\<inverse>) CWB)\n         = weak_barbed_bisimulation Rel CWB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (weak_barbed_simulation Rel CWB \\<and>\n     weak_barbed_simulation (Rel\\<inverse>) CWB) =\n    weak_barbed_bisimulation Rel CWB", "proof (rule iffI, erule conjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. weak_barbed_simulation Rel CWB \\<and>\n    weak_barbed_simulation (Rel\\<inverse>) CWB \\<Longrightarrow>\n    weak_barbed_bisimulation Rel CWB\n 2. weak_barbed_bisimulation Rel CWB \\<Longrightarrow>\n    weak_barbed_simulation Rel CWB \\<and>\n    weak_barbed_simulation (Rel\\<inverse>) CWB", "assume sim: \"weak_barbed_simulation Rel CWB\"\n     and rev: \"weak_barbed_simulation (Rel\\<inverse>) CWB\""], ["proof (state)\nthis:\n  weak_barbed_simulation Rel CWB\n  weak_barbed_simulation (Rel\\<inverse>) CWB\n\ngoal (2 subgoals):\n 1. weak_barbed_simulation Rel CWB \\<and>\n    weak_barbed_simulation (Rel\\<inverse>) CWB \\<Longrightarrow>\n    weak_barbed_bisimulation Rel CWB\n 2. weak_barbed_bisimulation Rel CWB \\<Longrightarrow>\n    weak_barbed_simulation Rel CWB \\<and>\n    weak_barbed_simulation (Rel\\<inverse>) CWB", "hence \"weak_reduction_bisimulation Rel (Calculus CWB)\""], ["proof (prove)\nusing this:\n  weak_barbed_simulation Rel CWB\n  weak_barbed_simulation (Rel\\<inverse>) CWB\n\ngoal (1 subgoal):\n 1. weak_reduction_bisimulation Rel (Calculus CWB)", "using weak_reduction_simulations_impl_bisimulation[where Rel=\"Rel\" and Cal=\"Calculus CWB\"]"], ["proof (prove)\nusing this:\n  weak_barbed_simulation Rel CWB\n  weak_barbed_simulation (Rel\\<inverse>) CWB\n  weak_reduction_simulation Rel (Calculus CWB) \\<and>\n  weak_reduction_simulation (Rel\\<inverse>) (Calculus CWB) \\<Longrightarrow>\n  weak_reduction_bisimulation Rel (Calculus CWB)\n\ngoal (1 subgoal):\n 1. weak_reduction_bisimulation Rel (Calculus CWB)", "by blast"], ["proof (state)\nthis:\n  weak_reduction_bisimulation Rel (Calculus CWB)\n\ngoal (2 subgoals):\n 1. weak_barbed_simulation Rel CWB \\<and>\n    weak_barbed_simulation (Rel\\<inverse>) CWB \\<Longrightarrow>\n    weak_barbed_bisimulation Rel CWB\n 2. weak_barbed_bisimulation Rel CWB \\<Longrightarrow>\n    weak_barbed_simulation Rel CWB \\<and>\n    weak_barbed_simulation (Rel\\<inverse>) CWB", "moreover"], ["proof (state)\nthis:\n  weak_reduction_bisimulation Rel (Calculus CWB)\n\ngoal (2 subgoals):\n 1. weak_barbed_simulation Rel CWB \\<and>\n    weak_barbed_simulation (Rel\\<inverse>) CWB \\<Longrightarrow>\n    weak_barbed_bisimulation Rel CWB\n 2. weak_barbed_bisimulation Rel CWB \\<Longrightarrow>\n    weak_barbed_simulation Rel CWB \\<and>\n    weak_barbed_simulation (Rel\\<inverse>) CWB", "from sim"], ["proof (chain)\npicking this:\n  weak_barbed_simulation Rel CWB", "have \"rel_weakly_preserves_barbs Rel CWB\""], ["proof (prove)\nusing this:\n  weak_barbed_simulation Rel CWB\n\ngoal (1 subgoal):\n 1. rel_weakly_preserves_barbs Rel CWB", "by simp"], ["proof (state)\nthis:\n  rel_weakly_preserves_barbs Rel CWB\n\ngoal (2 subgoals):\n 1. weak_barbed_simulation Rel CWB \\<and>\n    weak_barbed_simulation (Rel\\<inverse>) CWB \\<Longrightarrow>\n    weak_barbed_bisimulation Rel CWB\n 2. weak_barbed_bisimulation Rel CWB \\<Longrightarrow>\n    weak_barbed_simulation Rel CWB \\<and>\n    weak_barbed_simulation (Rel\\<inverse>) CWB", "moreover"], ["proof (state)\nthis:\n  rel_weakly_preserves_barbs Rel CWB\n\ngoal (2 subgoals):\n 1. weak_barbed_simulation Rel CWB \\<and>\n    weak_barbed_simulation (Rel\\<inverse>) CWB \\<Longrightarrow>\n    weak_barbed_bisimulation Rel CWB\n 2. weak_barbed_bisimulation Rel CWB \\<Longrightarrow>\n    weak_barbed_simulation Rel CWB \\<and>\n    weak_barbed_simulation (Rel\\<inverse>) CWB", "from rev"], ["proof (chain)\npicking this:\n  weak_barbed_simulation (Rel\\<inverse>) CWB", "have \"rel_weakly_reflects_barbs Rel CWB\""], ["proof (prove)\nusing this:\n  weak_barbed_simulation (Rel\\<inverse>) CWB\n\ngoal (1 subgoal):\n 1. rel_weakly_reflects_barbs Rel CWB", "by simp"], ["proof (state)\nthis:\n  rel_weakly_reflects_barbs Rel CWB\n\ngoal (2 subgoals):\n 1. weak_barbed_simulation Rel CWB \\<and>\n    weak_barbed_simulation (Rel\\<inverse>) CWB \\<Longrightarrow>\n    weak_barbed_bisimulation Rel CWB\n 2. weak_barbed_bisimulation Rel CWB \\<Longrightarrow>\n    weak_barbed_simulation Rel CWB \\<and>\n    weak_barbed_simulation (Rel\\<inverse>) CWB", "ultimately"], ["proof (chain)\npicking this:\n  weak_reduction_bisimulation Rel (Calculus CWB)\n  rel_weakly_preserves_barbs Rel CWB\n  rel_weakly_reflects_barbs Rel CWB", "show \"weak_barbed_bisimulation Rel CWB\""], ["proof (prove)\nusing this:\n  weak_reduction_bisimulation Rel (Calculus CWB)\n  rel_weakly_preserves_barbs Rel CWB\n  rel_weakly_reflects_barbs Rel CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_bisimulation Rel CWB", "by blast"], ["proof (state)\nthis:\n  weak_barbed_bisimulation Rel CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_bisimulation Rel CWB \\<Longrightarrow>\n    weak_barbed_simulation Rel CWB \\<and>\n    weak_barbed_simulation (Rel\\<inverse>) CWB", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. weak_barbed_bisimulation Rel CWB \\<Longrightarrow>\n    weak_barbed_simulation Rel CWB \\<and>\n    weak_barbed_simulation (Rel\\<inverse>) CWB", "assume bisim: \"weak_barbed_bisimulation Rel CWB\""], ["proof (state)\nthis:\n  weak_barbed_bisimulation Rel CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_bisimulation Rel CWB \\<Longrightarrow>\n    weak_barbed_simulation Rel CWB \\<and>\n    weak_barbed_simulation (Rel\\<inverse>) CWB", "hence \"weak_barbed_simulation Rel CWB\""], ["proof (prove)\nusing this:\n  weak_barbed_bisimulation Rel CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_simulation Rel CWB", "by blast"], ["proof (state)\nthis:\n  weak_barbed_simulation Rel CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_bisimulation Rel CWB \\<Longrightarrow>\n    weak_barbed_simulation Rel CWB \\<and>\n    weak_barbed_simulation (Rel\\<inverse>) CWB", "moreover"], ["proof (state)\nthis:\n  weak_barbed_simulation Rel CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_bisimulation Rel CWB \\<Longrightarrow>\n    weak_barbed_simulation Rel CWB \\<and>\n    weak_barbed_simulation (Rel\\<inverse>) CWB", "from bisim"], ["proof (chain)\npicking this:\n  weak_barbed_bisimulation Rel CWB", "have \"weak_reduction_simulation (Rel\\<inverse>) (Calculus CWB)\""], ["proof (prove)\nusing this:\n  weak_barbed_bisimulation Rel CWB\n\ngoal (1 subgoal):\n 1. weak_reduction_simulation (Rel\\<inverse>) (Calculus CWB)", "using weak_reduction_bisimulations_impl_inverse_is_simulation[where Rel=\"Rel\"]"], ["proof (prove)\nusing this:\n  weak_barbed_bisimulation Rel CWB\n  weak_reduction_bisimulation Rel ?Cal \\<Longrightarrow>\n  weak_reduction_simulation (Rel\\<inverse>) ?Cal\n\ngoal (1 subgoal):\n 1. weak_reduction_simulation (Rel\\<inverse>) (Calculus CWB)", "by simp"], ["proof (state)\nthis:\n  weak_reduction_simulation (Rel\\<inverse>) (Calculus CWB)\n\ngoal (1 subgoal):\n 1. weak_barbed_bisimulation Rel CWB \\<Longrightarrow>\n    weak_barbed_simulation Rel CWB \\<and>\n    weak_barbed_simulation (Rel\\<inverse>) CWB", "moreover"], ["proof (state)\nthis:\n  weak_reduction_simulation (Rel\\<inverse>) (Calculus CWB)\n\ngoal (1 subgoal):\n 1. weak_barbed_bisimulation Rel CWB \\<Longrightarrow>\n    weak_barbed_simulation Rel CWB \\<and>\n    weak_barbed_simulation (Rel\\<inverse>) CWB", "from bisim"], ["proof (chain)\npicking this:\n  weak_barbed_bisimulation Rel CWB", "have \"rel_weakly_reflects_barbs Rel CWB\""], ["proof (prove)\nusing this:\n  weak_barbed_bisimulation Rel CWB\n\ngoal (1 subgoal):\n 1. rel_weakly_reflects_barbs Rel CWB", "by blast"], ["proof (state)\nthis:\n  rel_weakly_reflects_barbs Rel CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_bisimulation Rel CWB \\<Longrightarrow>\n    weak_barbed_simulation Rel CWB \\<and>\n    weak_barbed_simulation (Rel\\<inverse>) CWB", "hence \"rel_weakly_preserves_barbs (Rel\\<inverse>) CWB\""], ["proof (prove)\nusing this:\n  rel_weakly_reflects_barbs Rel CWB\n\ngoal (1 subgoal):\n 1. rel_weakly_preserves_barbs (Rel\\<inverse>) CWB", "by simp"], ["proof (state)\nthis:\n  rel_weakly_preserves_barbs (Rel\\<inverse>) CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_bisimulation Rel CWB \\<Longrightarrow>\n    weak_barbed_simulation Rel CWB \\<and>\n    weak_barbed_simulation (Rel\\<inverse>) CWB", "ultimately"], ["proof (chain)\npicking this:\n  weak_barbed_simulation Rel CWB\n  weak_reduction_simulation (Rel\\<inverse>) (Calculus CWB)\n  rel_weakly_preserves_barbs (Rel\\<inverse>) CWB", "show \"weak_barbed_simulation Rel CWB \\<and> weak_barbed_simulation (Rel\\<inverse>) CWB\""], ["proof (prove)\nusing this:\n  weak_barbed_simulation Rel CWB\n  weak_reduction_simulation (Rel\\<inverse>) (Calculus CWB)\n  rel_weakly_preserves_barbs (Rel\\<inverse>) CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_simulation Rel CWB \\<and>\n    weak_barbed_simulation (Rel\\<inverse>) CWB", "by blast"], ["proof (state)\nthis:\n  weak_barbed_simulation Rel CWB \\<and>\n  weak_barbed_simulation (Rel\\<inverse>) CWB\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>A weak bisimulation is a weak correspondence simulation.\\<close>"], ["", "lemma weak_reduction_bisimulation_is_correspondence_simulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  assumes bisim: \"weak_reduction_bisimulation Rel Cal\"\n  shows \"weak_reduction_correspondence_simulation Rel Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_reduction_correspondence_simulation Rel Cal", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. weak_reduction_simulation Rel Cal\n 2. \\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n       (\\<exists>P'' Q''.\n           P \\<longmapsto>Cal* P'' \\<and>\n           Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel)", "from bisim"], ["proof (chain)\npicking this:\n  weak_reduction_bisimulation Rel Cal", "show \"weak_reduction_simulation Rel Cal\""], ["proof (prove)\nusing this:\n  weak_reduction_bisimulation Rel Cal\n\ngoal (1 subgoal):\n 1. weak_reduction_simulation Rel Cal", "by blast"], ["proof (state)\nthis:\n  weak_reduction_simulation Rel Cal\n\ngoal (1 subgoal):\n 1. \\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n       (\\<exists>P'' Q''.\n           P \\<longmapsto>Cal* P'' \\<and>\n           Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n       (\\<exists>P'' Q''.\n           P \\<longmapsto>Cal* P'' \\<and>\n           Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel)", "show \"\\<forall>P Q Q'. (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q'\n        \\<longrightarrow> (\\<exists>P'' Q''. P \\<longmapsto>Cal* P'' \\<and> Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n       (\\<exists>P'' Q''.\n           P \\<longmapsto>Cal* P'' \\<and>\n           Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel)", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'' Q''.\n          P \\<longmapsto>Cal* P'' \\<and>\n          Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel", "fix P Q Q'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'' Q''.\n          P \\<longmapsto>Cal* P'' \\<and>\n          Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel", "assume \"(P, Q) \\<in> Rel\" and \"Q \\<longmapsto>Cal* Q'\""], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n  Q \\<longmapsto>Cal* Q'\n\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'' Q''.\n          P \\<longmapsto>Cal* P'' \\<and>\n          Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel", "with bisim"], ["proof (chain)\npicking this:\n  weak_reduction_bisimulation Rel Cal\n  (P, Q) \\<in> Rel\n  Q \\<longmapsto>Cal* Q'", "obtain P' where \"P \\<longmapsto>Cal* P'\" and \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  weak_reduction_bisimulation Rel Cal\n  (P, Q) \\<in> Rel\n  Q \\<longmapsto>Cal* Q'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P'\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'' Q''.\n          P \\<longmapsto>Cal* P'' \\<and>\n          Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P'\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'' Q''.\n          P \\<longmapsto>Cal* P'' \\<and>\n          Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel", "have \"Q' \\<longmapsto>Cal* Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q' \\<longmapsto>Cal* Q'", "by (rule steps_refl)"], ["proof (state)\nthis:\n  Q' \\<longmapsto>Cal* Q'\n\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'' Q''.\n          P \\<longmapsto>Cal* P'' \\<and>\n          Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  P \\<longmapsto>Cal* P'\n  (P', Q') \\<in> Rel\n  Q' \\<longmapsto>Cal* Q'", "show \"(\\<exists>P'' Q''. P \\<longmapsto>Cal* P'' \\<and> Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel)\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal* P'\n  (P', Q') \\<in> Rel\n  Q' \\<longmapsto>Cal* Q'\n\ngoal (1 subgoal):\n 1. \\<exists>P'' Q''.\n       P \\<longmapsto>Cal* P'' \\<and>\n       Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'' Q''.\n     P \\<longmapsto>Cal* P'' \\<and>\n     Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>P Q Q'.\n     (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n     (\\<exists>P'' Q''.\n         P \\<longmapsto>Cal* P'' \\<and>\n         Q' \\<longmapsto>Cal* Q'' \\<and> (P'', Q'') \\<in> Rel)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weak_barbed_bisimulation_is_correspondence_simulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  assumes bisim: \"weak_barbed_bisimulation Rel CWB\"\n  shows \"weak_barbed_correspondence_simulation Rel CWB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_barbed_correspondence_simulation Rel CWB", "using bisim weak_reduction_bisimulation_is_correspondence_simulation[where Rel=\"Rel\"\n                   and Cal=\"Calculus CWB\"]"], ["proof (prove)\nusing this:\n  weak_barbed_bisimulation Rel CWB\n  weak_reduction_bisimulation Rel (Calculus CWB) \\<Longrightarrow>\n  weak_reduction_correspondence_simulation Rel (Calculus CWB)\n\ngoal (1 subgoal):\n 1. weak_barbed_correspondence_simulation Rel CWB", "by blast"], ["", "text \\<open>The reflexive, symmetric, and/or transitive closure of a weak bisimulation is a weak\n        bisimulation.\\<close>"], ["", "lemma weak_reduction_bisimulation_and_closures:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  assumes bisim: \"weak_reduction_bisimulation Rel Cal\"\n  shows \"weak_reduction_bisimulation (Rel\\<^sup>=) Cal\"\n    and \"weak_reduction_bisimulation (symcl Rel) Cal\"\n    and \"weak_reduction_bisimulation (Rel\\<^sup>+) Cal\"\n    and \"weak_reduction_bisimulation (symcl (Rel\\<^sup>=)) Cal\"\n    and \"weak_reduction_bisimulation (Rel\\<^sup>*) Cal\"\n    and \"weak_reduction_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (weak_reduction_bisimulation (Rel\\<^sup>=) Cal &&&\n     weak_reduction_bisimulation (symcl Rel) Cal &&&\n     weak_reduction_bisimulation (Rel\\<^sup>+) Cal) &&&\n    weak_reduction_bisimulation (symcl (Rel\\<^sup>=)) Cal &&&\n    weak_reduction_bisimulation (Rel\\<^sup>*) Cal &&&\n    weak_reduction_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) Cal", "proof -"], ["proof (state)\ngoal (6 subgoals):\n 1. weak_reduction_bisimulation (Rel\\<^sup>=) Cal\n 2. weak_reduction_bisimulation (symcl Rel) Cal\n 3. weak_reduction_bisimulation (Rel\\<^sup>+) Cal\n 4. weak_reduction_bisimulation (symcl (Rel\\<^sup>=)) Cal\n 5. weak_reduction_bisimulation (Rel\\<^sup>*) Cal\n 6. weak_reduction_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) Cal", "from bisim"], ["proof (chain)\npicking this:\n  weak_reduction_bisimulation Rel Cal", "show A: \"weak_reduction_bisimulation (Rel\\<^sup>=) Cal\""], ["proof (prove)\nusing this:\n  weak_reduction_bisimulation Rel Cal\n\ngoal (1 subgoal):\n 1. weak_reduction_bisimulation (Rel\\<^sup>=) Cal", "by (auto simp add: refl, blast+)"], ["proof (state)\nthis:\n  weak_reduction_bisimulation (Rel\\<^sup>=) Cal\n\ngoal (5 subgoals):\n 1. weak_reduction_bisimulation (symcl Rel) Cal\n 2. weak_reduction_bisimulation (Rel\\<^sup>+) Cal\n 3. weak_reduction_bisimulation (symcl (Rel\\<^sup>=)) Cal\n 4. weak_reduction_bisimulation (Rel\\<^sup>*) Cal\n 5. weak_reduction_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) Cal", "have B: \"\\<And>Rel. weak_reduction_bisimulation Rel Cal\n           \\<Longrightarrow> weak_reduction_bisimulation (symcl Rel) Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       weak_reduction_bisimulation Rel Cal \\<Longrightarrow>\n       weak_reduction_bisimulation (symcl Rel) Cal", "by (auto simp add: symcl_def, blast+)"], ["proof (state)\nthis:\n  weak_reduction_bisimulation ?Rel Cal \\<Longrightarrow>\n  weak_reduction_bisimulation (symcl ?Rel) Cal\n\ngoal (5 subgoals):\n 1. weak_reduction_bisimulation (symcl Rel) Cal\n 2. weak_reduction_bisimulation (Rel\\<^sup>+) Cal\n 3. weak_reduction_bisimulation (symcl (Rel\\<^sup>=)) Cal\n 4. weak_reduction_bisimulation (Rel\\<^sup>*) Cal\n 5. weak_reduction_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) Cal", "from bisim B[where Rel=\"Rel\"]"], ["proof (chain)\npicking this:\n  weak_reduction_bisimulation Rel Cal\n  weak_reduction_bisimulation Rel Cal \\<Longrightarrow>\n  weak_reduction_bisimulation (symcl Rel) Cal", "show \"weak_reduction_bisimulation (symcl Rel) Cal\""], ["proof (prove)\nusing this:\n  weak_reduction_bisimulation Rel Cal\n  weak_reduction_bisimulation Rel Cal \\<Longrightarrow>\n  weak_reduction_bisimulation (symcl Rel) Cal\n\ngoal (1 subgoal):\n 1. weak_reduction_bisimulation (symcl Rel) Cal", "by blast"], ["proof (state)\nthis:\n  weak_reduction_bisimulation (symcl Rel) Cal\n\ngoal (4 subgoals):\n 1. weak_reduction_bisimulation (Rel\\<^sup>+) Cal\n 2. weak_reduction_bisimulation (symcl (Rel\\<^sup>=)) Cal\n 3. weak_reduction_bisimulation (Rel\\<^sup>*) Cal\n 4. weak_reduction_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) Cal", "have C: \"\\<And>Rel. weak_reduction_bisimulation Rel Cal\n           \\<Longrightarrow> weak_reduction_bisimulation (Rel\\<^sup>+) Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       weak_reduction_bisimulation Rel Cal \\<Longrightarrow>\n       weak_reduction_bisimulation (Rel\\<^sup>+) Cal", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Rel.\n       weak_reduction_bisimulation Rel Cal \\<Longrightarrow>\n       weak_reduction_simulation (Rel\\<^sup>+) Cal\n 2. \\<And>Rel.\n       weak_reduction_bisimulation Rel Cal \\<Longrightarrow>\n       \\<forall>P Q Q'.\n          (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n          Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n          (\\<exists>P'.\n              P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+)", "fix Rel"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Rel.\n       weak_reduction_bisimulation Rel Cal \\<Longrightarrow>\n       weak_reduction_simulation (Rel\\<^sup>+) Cal\n 2. \\<And>Rel.\n       weak_reduction_bisimulation Rel Cal \\<Longrightarrow>\n       \\<forall>P Q Q'.\n          (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n          Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n          (\\<exists>P'.\n              P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+)", "assume \"weak_reduction_bisimulation Rel Cal\""], ["proof (state)\nthis:\n  weak_reduction_bisimulation Rel Cal\n\ngoal (2 subgoals):\n 1. \\<And>Rel.\n       weak_reduction_bisimulation Rel Cal \\<Longrightarrow>\n       weak_reduction_simulation (Rel\\<^sup>+) Cal\n 2. \\<And>Rel.\n       weak_reduction_bisimulation Rel Cal \\<Longrightarrow>\n       \\<forall>P Q Q'.\n          (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n          Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n          (\\<exists>P'.\n              P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+)", "thus \"weak_reduction_simulation (Rel\\<^sup>+) Cal\""], ["proof (prove)\nusing this:\n  weak_reduction_bisimulation Rel Cal\n\ngoal (1 subgoal):\n 1. weak_reduction_simulation (Rel\\<^sup>+) Cal", "using weak_reduction_simulation_and_closures(2)[where Rel=\"Rel\" and Cal=\"Cal\"]"], ["proof (prove)\nusing this:\n  weak_reduction_bisimulation Rel Cal\n  weak_reduction_simulation Rel Cal \\<Longrightarrow>\n  weak_reduction_simulation (Rel\\<^sup>+) Cal\n\ngoal (1 subgoal):\n 1. weak_reduction_simulation (Rel\\<^sup>+) Cal", "by blast"], ["proof (state)\nthis:\n  weak_reduction_simulation (Rel\\<^sup>+) Cal\n\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       weak_reduction_bisimulation Rel Cal \\<Longrightarrow>\n       \\<forall>P Q Q'.\n          (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n          Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n          (\\<exists>P'.\n              P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       weak_reduction_bisimulation Rel Cal \\<Longrightarrow>\n       \\<forall>P Q Q'.\n          (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n          Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n          (\\<exists>P'.\n              P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+)", "fix Rel"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       weak_reduction_bisimulation Rel Cal \\<Longrightarrow>\n       \\<forall>P Q Q'.\n          (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n          Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n          (\\<exists>P'.\n              P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+)", "assume C1: \"weak_reduction_bisimulation Rel Cal\""], ["proof (state)\nthis:\n  weak_reduction_bisimulation Rel Cal\n\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       weak_reduction_bisimulation Rel Cal \\<Longrightarrow>\n       \\<forall>P Q Q'.\n          (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n          Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n          (\\<exists>P'.\n              P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+)", "show \"\\<forall>P Q Q'. (P, Q) \\<in> Rel\\<^sup>+ \\<and> Q \\<longmapsto>Cal* Q'\n          \\<longrightarrow> (\\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P Q Q'.\n       (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n       Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+)", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n       Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+", "fix P Q Q'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n       Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+", "assume \"(P, Q) \\<in> Rel\\<^sup>+\" and \"Q \\<longmapsto>Cal* Q'\""], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\\<^sup>+\n  Q \\<longmapsto>Cal* Q'\n\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n       Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+", "thus \"\\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> Rel\\<^sup>+\n  Q \\<longmapsto>Cal* Q'\n\ngoal (1 subgoal):\n 1. \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+", "proof (induct arbitrary: Q')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y Q'.\n       (P, y) \\<in> Rel \\<and> y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+\n 2. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n           \\<exists>P'.\n              P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal* Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal* P' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "fix Q Q'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y Q'.\n       (P, y) \\<in> Rel \\<and> y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+\n 2. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n           \\<exists>P'.\n              P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal* Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal* P' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "assume \"(P, Q) \\<in> Rel\" and \"Q \\<longmapsto>Cal* Q'\""], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n  Q \\<longmapsto>Cal* Q'\n\ngoal (2 subgoals):\n 1. \\<And>y Q'.\n       (P, y) \\<in> Rel \\<and> y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+\n 2. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n           \\<exists>P'.\n              P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal* Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal* P' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "with C1"], ["proof (chain)\npicking this:\n  weak_reduction_bisimulation Rel Cal\n  (P, Q) \\<in> Rel\n  Q \\<longmapsto>Cal* Q'", "obtain P' where \"P \\<longmapsto>Cal* P'\" and \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  weak_reduction_bisimulation Rel Cal\n  (P, Q) \\<in> Rel\n  Q \\<longmapsto>Cal* Q'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P'\n  (P', Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>y Q'.\n       (P, y) \\<in> Rel \\<and> y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+\n 2. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n           \\<exists>P'.\n              P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal* Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal* P' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "thus \"\\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal* P'\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+", "by auto"], ["proof (state)\nthis:\n  \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n           \\<exists>P'.\n              P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal* Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal* P' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n           \\<exists>P'.\n              P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal* Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal* P' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "case (step Q R R')"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\\<^sup>+\n  (Q, R) \\<in> Rel\n  Q \\<longmapsto>Cal* ?Q' \\<Longrightarrow>\n  \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', ?Q') \\<in> Rel\\<^sup>+\n  R \\<longmapsto>Cal* R'\n\ngoal (1 subgoal):\n 1. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n           \\<exists>P'.\n              P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal* Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal* P' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "assume \"(Q, R) \\<in> Rel\" and \"R \\<longmapsto>Cal* R'\""], ["proof (state)\nthis:\n  (Q, R) \\<in> Rel\n  R \\<longmapsto>Cal* R'\n\ngoal (1 subgoal):\n 1. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n           \\<exists>P'.\n              P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal* Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal* P' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "with C1"], ["proof (chain)\npicking this:\n  weak_reduction_bisimulation Rel Cal\n  (Q, R) \\<in> Rel\n  R \\<longmapsto>Cal* R'", "obtain Q' where C2: \"Q \\<longmapsto>Cal* Q'\" and C3: \"(Q', R') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  weak_reduction_bisimulation Rel Cal\n  (Q, R) \\<in> Rel\n  R \\<longmapsto>Cal* R'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        Q \\<longmapsto>Cal* Q' \\<and>\n        (Q', R') \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal* Q'\n  (Q', R') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n           \\<exists>P'.\n              P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal* Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal* P' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "assume \"\\<And>Q'. Q \\<longmapsto>Cal* Q' \\<Longrightarrow> \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+\""], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal* ?Q' \\<Longrightarrow>\n  \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', ?Q') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n           \\<exists>P'.\n              P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal* Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal* P' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "with C2"], ["proof (chain)\npicking this:\n  Q \\<longmapsto>Cal* Q'\n  Q \\<longmapsto>Cal* ?Q' \\<Longrightarrow>\n  \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', ?Q') \\<in> Rel\\<^sup>+", "obtain P' where C4: \"P \\<longmapsto>Cal* P'\" and C5: \"(P', Q') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto>Cal* Q'\n  Q \\<longmapsto>Cal* ?Q' \\<Longrightarrow>\n  \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', ?Q') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        P \\<longmapsto>Cal* P' \\<and>\n        (P', Q') \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P'\n  (P', Q') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n           \\<exists>P'.\n              P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal* Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal* P' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "from C5 C3"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel\\<^sup>+\n  (Q', R') \\<in> Rel\\<^sup>+", "have \"(P', R') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\\<^sup>+\n  (Q', R') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. (P', R') \\<in> Rel\\<^sup>+", "by simp"], ["proof (state)\nthis:\n  (P', R') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal* Q' \\<Longrightarrow>\n           \\<exists>P'.\n              P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal* Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal* P' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "with C4"], ["proof (chain)\npicking this:\n  P \\<longmapsto>Cal* P'\n  (P', R') \\<in> Rel\\<^sup>+", "show \"\\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', R') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal* P'\n  (P', R') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', R') \\<in> Rel\\<^sup>+", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', R') \\<in> Rel\\<^sup>+\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>P Q Q'.\n     (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n     Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n     (\\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\\<^sup>+)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  weak_reduction_bisimulation ?Rel Cal \\<Longrightarrow>\n  weak_reduction_bisimulation (?Rel\\<^sup>+) Cal\n\ngoal (4 subgoals):\n 1. weak_reduction_bisimulation (Rel\\<^sup>+) Cal\n 2. weak_reduction_bisimulation (symcl (Rel\\<^sup>=)) Cal\n 3. weak_reduction_bisimulation (Rel\\<^sup>*) Cal\n 4. weak_reduction_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) Cal", "from bisim C[where Rel=\"Rel\"]"], ["proof (chain)\npicking this:\n  weak_reduction_bisimulation Rel Cal\n  weak_reduction_bisimulation Rel Cal \\<Longrightarrow>\n  weak_reduction_bisimulation (Rel\\<^sup>+) Cal", "show \"weak_reduction_bisimulation (Rel\\<^sup>+) Cal\""], ["proof (prove)\nusing this:\n  weak_reduction_bisimulation Rel Cal\n  weak_reduction_bisimulation Rel Cal \\<Longrightarrow>\n  weak_reduction_bisimulation (Rel\\<^sup>+) Cal\n\ngoal (1 subgoal):\n 1. weak_reduction_bisimulation (Rel\\<^sup>+) Cal", "by blast"], ["proof (state)\nthis:\n  weak_reduction_bisimulation (Rel\\<^sup>+) Cal\n\ngoal (3 subgoals):\n 1. weak_reduction_bisimulation (symcl (Rel\\<^sup>=)) Cal\n 2. weak_reduction_bisimulation (Rel\\<^sup>*) Cal\n 3. weak_reduction_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) Cal", "from A B[where Rel=\"Rel\\<^sup>=\"]"], ["proof (chain)\npicking this:\n  weak_reduction_bisimulation (Rel\\<^sup>=) Cal\n  weak_reduction_bisimulation (Rel\\<^sup>=) Cal \\<Longrightarrow>\n  weak_reduction_bisimulation (symcl (Rel\\<^sup>=)) Cal", "show \"weak_reduction_bisimulation (symcl (Rel\\<^sup>=)) Cal\""], ["proof (prove)\nusing this:\n  weak_reduction_bisimulation (Rel\\<^sup>=) Cal\n  weak_reduction_bisimulation (Rel\\<^sup>=) Cal \\<Longrightarrow>\n  weak_reduction_bisimulation (symcl (Rel\\<^sup>=)) Cal\n\ngoal (1 subgoal):\n 1. weak_reduction_bisimulation (symcl (Rel\\<^sup>=)) Cal", "by blast"], ["proof (state)\nthis:\n  weak_reduction_bisimulation (symcl (Rel\\<^sup>=)) Cal\n\ngoal (2 subgoals):\n 1. weak_reduction_bisimulation (Rel\\<^sup>*) Cal\n 2. weak_reduction_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) Cal", "from A C[where Rel=\"Rel\\<^sup>=\"]"], ["proof (chain)\npicking this:\n  weak_reduction_bisimulation (Rel\\<^sup>=) Cal\n  weak_reduction_bisimulation (Rel\\<^sup>=) Cal \\<Longrightarrow>\n  weak_reduction_bisimulation ((Rel\\<^sup>=)\\<^sup>+) Cal", "show \"weak_reduction_bisimulation (Rel\\<^sup>*) Cal\""], ["proof (prove)\nusing this:\n  weak_reduction_bisimulation (Rel\\<^sup>=) Cal\n  weak_reduction_bisimulation (Rel\\<^sup>=) Cal \\<Longrightarrow>\n  weak_reduction_bisimulation ((Rel\\<^sup>=)\\<^sup>+) Cal\n\ngoal (1 subgoal):\n 1. weak_reduction_bisimulation (Rel\\<^sup>*) Cal", "using trancl_reflcl[of Rel]"], ["proof (prove)\nusing this:\n  weak_reduction_bisimulation (Rel\\<^sup>=) Cal\n  weak_reduction_bisimulation (Rel\\<^sup>=) Cal \\<Longrightarrow>\n  weak_reduction_bisimulation ((Rel\\<^sup>=)\\<^sup>+) Cal\n  (Rel\\<^sup>=)\\<^sup>+ = Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. weak_reduction_bisimulation (Rel\\<^sup>*) Cal", "by auto"], ["proof (state)\nthis:\n  weak_reduction_bisimulation (Rel\\<^sup>*) Cal\n\ngoal (1 subgoal):\n 1. weak_reduction_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) Cal", "from A B[where Rel=\"Rel\\<^sup>=\"] C[where Rel=\"symcl (Rel\\<^sup>=)\"]"], ["proof (chain)\npicking this:\n  weak_reduction_bisimulation (Rel\\<^sup>=) Cal\n  weak_reduction_bisimulation (Rel\\<^sup>=) Cal \\<Longrightarrow>\n  weak_reduction_bisimulation (symcl (Rel\\<^sup>=)) Cal\n  weak_reduction_bisimulation (symcl (Rel\\<^sup>=)) Cal \\<Longrightarrow>\n  weak_reduction_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) Cal", "show \"weak_reduction_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) Cal\""], ["proof (prove)\nusing this:\n  weak_reduction_bisimulation (Rel\\<^sup>=) Cal\n  weak_reduction_bisimulation (Rel\\<^sup>=) Cal \\<Longrightarrow>\n  weak_reduction_bisimulation (symcl (Rel\\<^sup>=)) Cal\n  weak_reduction_bisimulation (symcl (Rel\\<^sup>=)) Cal \\<Longrightarrow>\n  weak_reduction_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) Cal\n\ngoal (1 subgoal):\n 1. weak_reduction_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) Cal", "by blast"], ["proof (state)\nthis:\n  weak_reduction_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) Cal\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weak_barbed_bisimulation_and_closures:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  assumes bisim: \"weak_barbed_bisimulation Rel CWB\"\n  shows \"weak_barbed_bisimulation (Rel\\<^sup>=) CWB\"\n    and \"weak_barbed_bisimulation (symcl Rel) CWB\"\n    and \"weak_barbed_bisimulation (Rel\\<^sup>+) CWB\"\n    and \"weak_barbed_bisimulation (symcl (Rel\\<^sup>=)) CWB\"\n    and \"weak_barbed_bisimulation (Rel\\<^sup>*) CWB\"\n    and \"weak_barbed_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) CWB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (weak_barbed_bisimulation (Rel\\<^sup>=) CWB &&&\n     weak_barbed_bisimulation (symcl Rel) CWB &&&\n     weak_barbed_bisimulation (Rel\\<^sup>+) CWB) &&&\n    weak_barbed_bisimulation (symcl (Rel\\<^sup>=)) CWB &&&\n    weak_barbed_bisimulation (Rel\\<^sup>*) CWB &&&\n    weak_barbed_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) CWB", "proof -"], ["proof (state)\ngoal (6 subgoals):\n 1. weak_barbed_bisimulation (Rel\\<^sup>=) CWB\n 2. weak_barbed_bisimulation (symcl Rel) CWB\n 3. weak_barbed_bisimulation (Rel\\<^sup>+) CWB\n 4. weak_barbed_bisimulation (symcl (Rel\\<^sup>=)) CWB\n 5. weak_barbed_bisimulation (Rel\\<^sup>*) CWB\n 6. weak_barbed_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) CWB", "from bisim"], ["proof (chain)\npicking this:\n  weak_barbed_bisimulation Rel CWB", "show \"weak_barbed_bisimulation (Rel\\<^sup>=) CWB\""], ["proof (prove)\nusing this:\n  weak_barbed_bisimulation Rel CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_bisimulation (Rel\\<^sup>=) CWB", "using weak_reduction_bisimulation_and_closures(1)[where Rel=\"Rel\" and Cal=\"Calculus CWB\"]\n            weak_respection_of_barbs_and_closures(1)[where Rel=\"Rel\" and CWB=\"CWB\"]"], ["proof (prove)\nusing this:\n  weak_barbed_bisimulation Rel CWB\n  weak_reduction_bisimulation Rel (Calculus CWB) \\<Longrightarrow>\n  weak_reduction_bisimulation (Rel\\<^sup>=) (Calculus CWB)\n  rel_weakly_respects_barbs Rel CWB \\<Longrightarrow>\n  rel_weakly_respects_barbs (Rel\\<^sup>=) CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_bisimulation (Rel\\<^sup>=) CWB", "by fast"], ["proof (state)\nthis:\n  weak_barbed_bisimulation (Rel\\<^sup>=) CWB\n\ngoal (5 subgoals):\n 1. weak_barbed_bisimulation (symcl Rel) CWB\n 2. weak_barbed_bisimulation (Rel\\<^sup>+) CWB\n 3. weak_barbed_bisimulation (symcl (Rel\\<^sup>=)) CWB\n 4. weak_barbed_bisimulation (Rel\\<^sup>*) CWB\n 5. weak_barbed_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) CWB", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. weak_barbed_bisimulation (symcl Rel) CWB\n 2. weak_barbed_bisimulation (Rel\\<^sup>+) CWB\n 3. weak_barbed_bisimulation (symcl (Rel\\<^sup>=)) CWB\n 4. weak_barbed_bisimulation (Rel\\<^sup>*) CWB\n 5. weak_barbed_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) CWB", "from bisim"], ["proof (chain)\npicking this:\n  weak_barbed_bisimulation Rel CWB", "show \"weak_barbed_bisimulation (symcl Rel) CWB\""], ["proof (prove)\nusing this:\n  weak_barbed_bisimulation Rel CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_bisimulation (symcl Rel) CWB", "using weak_reduction_bisimulation_and_closures(2)[where Rel=\"Rel\" and Cal=\"Calculus CWB\"]\n            weak_respection_of_barbs_and_closures(2)[where Rel=\"Rel\" and CWB=\"CWB\"]"], ["proof (prove)\nusing this:\n  weak_barbed_bisimulation Rel CWB\n  weak_reduction_bisimulation Rel (Calculus CWB) \\<Longrightarrow>\n  weak_reduction_bisimulation (symcl Rel) (Calculus CWB)\n  rel_weakly_respects_barbs Rel CWB \\<Longrightarrow>\n  rel_weakly_respects_barbs (symcl Rel) CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_bisimulation (symcl Rel) CWB", "by blast"], ["proof (state)\nthis:\n  weak_barbed_bisimulation (symcl Rel) CWB\n\ngoal (4 subgoals):\n 1. weak_barbed_bisimulation (Rel\\<^sup>+) CWB\n 2. weak_barbed_bisimulation (symcl (Rel\\<^sup>=)) CWB\n 3. weak_barbed_bisimulation (Rel\\<^sup>*) CWB\n 4. weak_barbed_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) CWB", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. weak_barbed_bisimulation (Rel\\<^sup>+) CWB\n 2. weak_barbed_bisimulation (symcl (Rel\\<^sup>=)) CWB\n 3. weak_barbed_bisimulation (Rel\\<^sup>*) CWB\n 4. weak_barbed_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) CWB", "from bisim"], ["proof (chain)\npicking this:\n  weak_barbed_bisimulation Rel CWB", "show \"weak_barbed_bisimulation (Rel\\<^sup>+) CWB\""], ["proof (prove)\nusing this:\n  weak_barbed_bisimulation Rel CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_bisimulation (Rel\\<^sup>+) CWB", "using weak_reduction_bisimulation_and_closures(3)[where Rel=\"Rel\" and Cal=\"Calculus CWB\"]\n            weak_respection_of_barbs_and_closures(3)[where Rel=\"Rel\" and CWB=\"CWB\"]"], ["proof (prove)\nusing this:\n  weak_barbed_bisimulation Rel CWB\n  weak_reduction_bisimulation Rel (Calculus CWB) \\<Longrightarrow>\n  weak_reduction_bisimulation (Rel\\<^sup>+) (Calculus CWB)\n  rel_weakly_respects_barbs Rel CWB \\<Longrightarrow>\n  rel_weakly_respects_barbs (Rel\\<^sup>+) CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_bisimulation (Rel\\<^sup>+) CWB", "by blast"], ["proof (state)\nthis:\n  weak_barbed_bisimulation (Rel\\<^sup>+) CWB\n\ngoal (3 subgoals):\n 1. weak_barbed_bisimulation (symcl (Rel\\<^sup>=)) CWB\n 2. weak_barbed_bisimulation (Rel\\<^sup>*) CWB\n 3. weak_barbed_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) CWB", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. weak_barbed_bisimulation (symcl (Rel\\<^sup>=)) CWB\n 2. weak_barbed_bisimulation (Rel\\<^sup>*) CWB\n 3. weak_barbed_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) CWB", "from bisim"], ["proof (chain)\npicking this:\n  weak_barbed_bisimulation Rel CWB", "show \"weak_barbed_bisimulation (symcl (Rel\\<^sup>=)) CWB\""], ["proof (prove)\nusing this:\n  weak_barbed_bisimulation Rel CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_bisimulation (symcl (Rel\\<^sup>=)) CWB", "using weak_reduction_bisimulation_and_closures(4)[where Rel=\"Rel\" and Cal=\"Calculus CWB\"]\n            weak_respection_of_barbs_and_closures(4)[where Rel=\"Rel\" and CWB=\"CWB\"]"], ["proof (prove)\nusing this:\n  weak_barbed_bisimulation Rel CWB\n  weak_reduction_bisimulation Rel (Calculus CWB) \\<Longrightarrow>\n  weak_reduction_bisimulation (symcl (Rel\\<^sup>=)) (Calculus CWB)\n  rel_weakly_respects_barbs Rel CWB \\<Longrightarrow>\n  rel_weakly_respects_barbs (symcl (Rel\\<^sup>=)) CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_bisimulation (symcl (Rel\\<^sup>=)) CWB", "by blast"], ["proof (state)\nthis:\n  weak_barbed_bisimulation (symcl (Rel\\<^sup>=)) CWB\n\ngoal (2 subgoals):\n 1. weak_barbed_bisimulation (Rel\\<^sup>*) CWB\n 2. weak_barbed_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) CWB", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. weak_barbed_bisimulation (Rel\\<^sup>*) CWB\n 2. weak_barbed_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) CWB", "from bisim"], ["proof (chain)\npicking this:\n  weak_barbed_bisimulation Rel CWB", "show \"weak_barbed_bisimulation (Rel\\<^sup>*) CWB\""], ["proof (prove)\nusing this:\n  weak_barbed_bisimulation Rel CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_bisimulation (Rel\\<^sup>*) CWB", "using weak_reduction_bisimulation_and_closures(5)[where Rel=\"Rel\" and Cal=\"Calculus CWB\"]\n            weak_respection_of_barbs_and_closures(5)[where Rel=\"Rel\" and CWB=\"CWB\"]"], ["proof (prove)\nusing this:\n  weak_barbed_bisimulation Rel CWB\n  weak_reduction_bisimulation Rel (Calculus CWB) \\<Longrightarrow>\n  weak_reduction_bisimulation (Rel\\<^sup>*) (Calculus CWB)\n  rel_weakly_respects_barbs Rel CWB \\<Longrightarrow>\n  rel_weakly_respects_barbs (Rel\\<^sup>*) CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_bisimulation (Rel\\<^sup>*) CWB", "by blast"], ["proof (state)\nthis:\n  weak_barbed_bisimulation (Rel\\<^sup>*) CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) CWB", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. weak_barbed_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) CWB", "from bisim"], ["proof (chain)\npicking this:\n  weak_barbed_bisimulation Rel CWB", "show \"weak_barbed_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) CWB\""], ["proof (prove)\nusing this:\n  weak_barbed_bisimulation Rel CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) CWB", "using weak_reduction_bisimulation_and_closures(6)[where Rel=\"Rel\" and Cal=\"Calculus CWB\"]\n            weak_respection_of_barbs_and_closures(6)[where Rel=\"Rel\" and CWB=\"CWB\"]"], ["proof (prove)\nusing this:\n  weak_barbed_bisimulation Rel CWB\n  weak_reduction_bisimulation Rel (Calculus CWB) \\<Longrightarrow>\n  weak_reduction_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) (Calculus CWB)\n  rel_weakly_respects_barbs Rel CWB \\<Longrightarrow>\n  rel_weakly_respects_barbs ((symcl (Rel\\<^sup>=))\\<^sup>+) CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) CWB", "by blast"], ["proof (state)\nthis:\n  weak_barbed_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) CWB\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>A strong reduction bisimulation is relation R such that\n        (1) if (P, Q) in R and P' is a derivative of P then there exists some Q' such that Q' is a\n            derivative of Q and (P', Q') in R, and\n        (2) if (P, Q) in R and Q' is a derivative of Q then there exists some P' such that P' is a\n            derivative of P and (P', Q') in R.\\<close>"], ["", "abbreviation strong_reduction_bisimulation\n    :: \"('proc \\<times> 'proc) set \\<Rightarrow> 'proc processCalculus \\<Rightarrow> bool\"\n  where\n  \"strong_reduction_bisimulation Rel Cal \\<equiv>\n   (\\<forall>P Q P'. (P, Q) \\<in> Rel \\<and> P \\<longmapsto>Cal P' \\<longrightarrow> (\\<exists>Q'. Q \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel))\n   \\<and> (\\<forall>P Q Q'. (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow> (\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel))\""], ["", "text \\<open>A strong barbed bisimulation is strong reduction bisimulation that respects barbs.\\<close>"], ["", "abbreviation strong_barbed_bisimulation\n    :: \"('proc \\<times> 'proc) set \\<Rightarrow> ('proc, 'barbs) calculusWithBarbs \\<Rightarrow> bool\"\n  where\n  \"strong_barbed_bisimulation Rel CWB \\<equiv>\n   strong_reduction_bisimulation Rel (Calculus CWB) \\<and> rel_respects_barbs Rel CWB\""], ["", "text \\<open>A symetric strong simulation is a strong bisimulation.\\<close>"], ["", "lemma symm_strong_reduction_simulation_is_bisimulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  assumes \"sym Rel\"\n      and \"strong_reduction_simulation Rel Cal\"\n  shows \"strong_reduction_bisimulation Rel Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strong_reduction_simulation Rel Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel))", "using assms symD[of Rel]"], ["proof (prove)\nusing this:\n  sym Rel\n  strong_reduction_simulation Rel Cal\n  sym Rel \\<and> (?b, ?a) \\<in> Rel \\<Longrightarrow> (?a, ?b) \\<in> Rel\n\ngoal (1 subgoal):\n 1. strong_reduction_simulation Rel Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel))", "by blast"], ["", "lemma symm_strong_barbed_simulation_is_bisimulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  assumes \"sym Rel\"\n      and \"strong_barbed_simulation Rel CWB\"\n  shows \"strong_barbed_bisimulation Rel CWB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel))) \\<and>\n    rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)", "using assms symD[of Rel]"], ["proof (prove)\nusing this:\n  sym Rel\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n  sym Rel \\<and> (?b, ?a) \\<in> Rel \\<Longrightarrow> (?a, ?b) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel))) \\<and>\n    rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)", "by blast"], ["", "text \\<open>If a relation as well as its inverse are strong simulations, then this relation is a strong\n        bisimulation.\\<close>"], ["", "lemma strong_reduction_simulations_impl_bisimulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  assumes sim:    \"strong_reduction_simulation Rel Cal\"\n      and simInv: \"strong_reduction_simulation (Rel\\<inverse>) Cal\"\n  shows \"strong_reduction_bisimulation Rel Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strong_reduction_simulation Rel Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel))", "proof auto"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q P'.\n       (P, Q) \\<in> Rel \\<and> P \\<longmapsto>Cal P' \\<Longrightarrow>\n       \\<exists>Q'. Q \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\n 2. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel", "fix P Q P'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q P'.\n       (P, Q) \\<in> Rel \\<and> P \\<longmapsto>Cal P' \\<Longrightarrow>\n       \\<exists>Q'. Q \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\n 2. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel", "assume \"(P, Q) \\<in> Rel\" and \"P \\<longmapsto>Cal P'\""], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n  P \\<longmapsto>Cal P'\n\ngoal (2 subgoals):\n 1. \\<And>P Q P'.\n       (P, Q) \\<in> Rel \\<and> P \\<longmapsto>Cal P' \\<Longrightarrow>\n       \\<exists>Q'. Q \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\n 2. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel", "with sim"], ["proof (chain)\npicking this:\n  strong_reduction_simulation Rel Cal\n  (P, Q) \\<in> Rel\n  P \\<longmapsto>Cal P'", "show \"\\<exists>Q'. Q \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  strong_reduction_simulation Rel Cal\n  (P, Q) \\<in> Rel\n  P \\<longmapsto>Cal P'\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel", "by simp"], ["proof (state)\nthis:\n  \\<exists>Q'. Q \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel", "fix P Q Q'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel", "assume \"(P, Q) \\<in> Rel\""], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel", "hence \"(Q, P) \\<in> Rel\\<inverse>\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (Q, P) \\<in> Rel\\<inverse>", "by simp"], ["proof (state)\nthis:\n  (Q, P) \\<in> Rel\\<inverse>\n\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  (Q, P) \\<in> Rel\\<inverse>\n\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel", "assume \"Q \\<longmapsto>Cal Q'\""], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal Q'\n\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  (Q, P) \\<in> Rel\\<inverse>\n  Q \\<longmapsto>Cal Q'", "obtain P' where A1: \"P \\<longmapsto>Cal P'\" and A2: \"(Q', P') \\<in> Rel\\<inverse>\""], ["proof (prove)\nusing this:\n  (Q, P) \\<in> Rel\\<inverse>\n  Q \\<longmapsto>Cal Q'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        P \\<longmapsto>Cal P' \\<and>\n        (Q', P') \\<in> Rel\\<inverse> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using simInv"], ["proof (prove)\nusing this:\n  (Q, P) \\<in> Rel\\<inverse>\n  Q \\<longmapsto>Cal Q'\n  strong_reduction_simulation (Rel\\<inverse>) Cal\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        P \\<longmapsto>Cal P' \\<and>\n        (Q', P') \\<in> Rel\\<inverse> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal P'\n  (Q', P') \\<in> Rel\\<inverse>\n\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel", "from A2"], ["proof (chain)\npicking this:\n  (Q', P') \\<in> Rel\\<inverse>", "have \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  (Q', P') \\<in> Rel\\<inverse>\n\ngoal (1 subgoal):\n 1. (P', Q') \\<in> Rel", "by induct"], ["proof (state)\nthis:\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel", "with A1"], ["proof (chain)\npicking this:\n  P \\<longmapsto>Cal P'\n  (P', Q') \\<in> Rel", "show \"\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal P'\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma strong_reduction_bisimulations_impl_inverse_is_simulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  assumes bisim: \"strong_reduction_bisimulation Rel Cal\"\n  shows \"strong_reduction_simulation (Rel\\<inverse>) Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strong_reduction_simulation (Rel\\<inverse>) Cal", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q P'.\n       P \\<longmapsto>Cal P' \\<and> (Q, P) \\<in> Rel \\<Longrightarrow>\n       \\<exists>Q'.\n          Q \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<inverse>", "fix P Q P'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q P'.\n       P \\<longmapsto>Cal P' \\<and> (Q, P) \\<in> Rel \\<Longrightarrow>\n       \\<exists>Q'.\n          Q \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<inverse>", "assume \"(Q, P) \\<in> Rel\""], ["proof (state)\nthis:\n  (Q, P) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P Q P'.\n       P \\<longmapsto>Cal P' \\<and> (Q, P) \\<in> Rel \\<Longrightarrow>\n       \\<exists>Q'.\n          Q \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<inverse>", "moreover"], ["proof (state)\nthis:\n  (Q, P) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P Q P'.\n       P \\<longmapsto>Cal P' \\<and> (Q, P) \\<in> Rel \\<Longrightarrow>\n       \\<exists>Q'.\n          Q \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<inverse>", "assume \"P \\<longmapsto>Cal P'\""], ["proof (state)\nthis:\n  P \\<longmapsto>Cal P'\n\ngoal (1 subgoal):\n 1. \\<And>P Q P'.\n       P \\<longmapsto>Cal P' \\<and> (Q, P) \\<in> Rel \\<Longrightarrow>\n       \\<exists>Q'.\n          Q \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<inverse>", "ultimately"], ["proof (chain)\npicking this:\n  (Q, P) \\<in> Rel\n  P \\<longmapsto>Cal P'", "obtain Q' where A1: \"Q \\<longmapsto>Cal Q'\" and A2: \"(Q', P') \\<in> Rel\""], ["proof (prove)\nusing this:\n  (Q, P) \\<in> Rel\n  P \\<longmapsto>Cal P'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        Q \\<longmapsto>Cal Q' \\<and> (Q', P') \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using bisim"], ["proof (prove)\nusing this:\n  (Q, P) \\<in> Rel\n  P \\<longmapsto>Cal P'\n  strong_reduction_simulation Rel Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel))\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        Q \\<longmapsto>Cal Q' \\<and> (Q', P') \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal Q'\n  (Q', P') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P Q P'.\n       P \\<longmapsto>Cal P' \\<and> (Q, P) \\<in> Rel \\<Longrightarrow>\n       \\<exists>Q'.\n          Q \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<inverse>", "from A2"], ["proof (chain)\npicking this:\n  (Q', P') \\<in> Rel", "have \"(P', Q') \\<in> Rel\\<inverse>\""], ["proof (prove)\nusing this:\n  (Q', P') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (P', Q') \\<in> Rel\\<inverse>", "by simp"], ["proof (state)\nthis:\n  (P', Q') \\<in> Rel\\<inverse>\n\ngoal (1 subgoal):\n 1. \\<And>P Q P'.\n       P \\<longmapsto>Cal P' \\<and> (Q, P) \\<in> Rel \\<Longrightarrow>\n       \\<exists>Q'.\n          Q \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<inverse>", "with A1"], ["proof (chain)\npicking this:\n  Q \\<longmapsto>Cal Q'\n  (P', Q') \\<in> Rel\\<inverse>", "show \"\\<exists>Q'. Q \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<inverse>\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto>Cal Q'\n  (P', Q') \\<in> Rel\\<inverse>\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<inverse>", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q'. Q \\<longmapsto>Cal Q' \\<and> (P', Q') \\<in> Rel\\<inverse>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma strong_reduction_simulations_iff_bisimulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  shows \"(strong_reduction_simulation Rel Cal \\<and> strong_reduction_simulation (Rel\\<inverse>) Cal)\n         = strong_reduction_bisimulation Rel Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (strong_reduction_simulation Rel Cal \\<and>\n     strong_reduction_simulation (Rel\\<inverse>) Cal) =\n    (strong_reduction_simulation Rel Cal \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n         (\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel)))", "using strong_reduction_simulations_impl_bisimulation[where Rel=\"Rel\" and Cal=\"Cal\"]\n            strong_reduction_bisimulations_impl_inverse_is_simulation[where Rel=\"Rel\"]"], ["proof (prove)\nusing this:\n  strong_reduction_simulation Rel Cal \\<and>\n  strong_reduction_simulation (Rel\\<inverse>) Cal \\<Longrightarrow>\n  strong_reduction_simulation Rel Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel))\n  strong_reduction_simulation Rel ?Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>?Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>?Cal P' \\<and>\n          (P', Q') \\<in> Rel)) \\<Longrightarrow>\n  strong_reduction_simulation (Rel\\<inverse>) ?Cal\n\ngoal (1 subgoal):\n 1. (strong_reduction_simulation Rel Cal \\<and>\n     strong_reduction_simulation (Rel\\<inverse>) Cal) =\n    (strong_reduction_simulation Rel Cal \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n         (\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel)))", "by blast"], ["", "lemma strong_barbed_simulations_iff_bisimulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  shows \"(strong_barbed_simulation Rel CWB \\<and> strong_barbed_simulation (Rel\\<inverse>) CWB)\n         = strong_barbed_bisimulation Rel CWB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((strong_reduction_simulation Rel (Calculus CWB) \\<and>\n      rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)) \\<and>\n     strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB) \\<and>\n     rel_preserves_binary_pred (Rel\\<inverse>)\n      (\\<lambda>a. hasBarb a CWB)) =\n    ((strong_reduction_simulation Rel (Calculus CWB) \\<and>\n      (\\<forall>P Q Q'.\n          (P, Q) \\<in> Rel \\<and>\n          Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n          (\\<exists>P'.\n              P \\<longmapsto>Calculus CWB P' \\<and>\n              (P', Q') \\<in> Rel))) \\<and>\n     rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB))", "proof (rule iffI, erule conjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)) \\<and>\n    strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<inverse>)\n     (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n    (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel))) \\<and>\n    rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n 2. (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel))) \\<and>\n    rel_respects_binary_pred Rel\n     (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n    (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)) \\<and>\n    strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<inverse>) (\\<lambda>a. hasBarb a CWB)", "assume sim: \"strong_barbed_simulation Rel CWB\"\n     and rev: \"strong_barbed_simulation (Rel\\<inverse>) CWB\""], ["proof (state)\nthis:\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n  strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB) \\<and>\n  rel_preserves_binary_pred (Rel\\<inverse>) (\\<lambda>a. hasBarb a CWB)\n\ngoal (2 subgoals):\n 1. (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)) \\<and>\n    strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<inverse>)\n     (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n    (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel))) \\<and>\n    rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n 2. (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel))) \\<and>\n    rel_respects_binary_pred Rel\n     (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n    (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)) \\<and>\n    strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<inverse>) (\\<lambda>a. hasBarb a CWB)", "hence \"strong_reduction_bisimulation Rel (Calculus CWB)\""], ["proof (prove)\nusing this:\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n  strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB) \\<and>\n  rel_preserves_binary_pred (Rel\\<inverse>) (\\<lambda>a. hasBarb a CWB)\n\ngoal (1 subgoal):\n 1. strong_reduction_simulation Rel (Calculus CWB) \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> Rel \\<and>\n        Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Calculus CWB P' \\<and> (P', Q') \\<in> Rel))", "using strong_reduction_simulations_impl_bisimulation[where Rel=\"Rel\" and Cal=\"Calculus CWB\"]"], ["proof (prove)\nusing this:\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n  strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB) \\<and>\n  rel_preserves_binary_pred (Rel\\<inverse>) (\\<lambda>a. hasBarb a CWB)\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  strong_reduction_simulation (Rel\\<inverse>)\n   (Calculus CWB) \\<Longrightarrow>\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and>\n      Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Calculus CWB P' \\<and> (P', Q') \\<in> Rel))\n\ngoal (1 subgoal):\n 1. strong_reduction_simulation Rel (Calculus CWB) \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> Rel \\<and>\n        Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Calculus CWB P' \\<and> (P', Q') \\<in> Rel))", "by blast"], ["proof (state)\nthis:\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and>\n      Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Calculus CWB P' \\<and> (P', Q') \\<in> Rel))\n\ngoal (2 subgoals):\n 1. (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)) \\<and>\n    strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<inverse>)\n     (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n    (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel))) \\<and>\n    rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n 2. (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel))) \\<and>\n    rel_respects_binary_pred Rel\n     (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n    (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)) \\<and>\n    strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<inverse>) (\\<lambda>a. hasBarb a CWB)", "moreover"], ["proof (state)\nthis:\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and>\n      Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Calculus CWB P' \\<and> (P', Q') \\<in> Rel))\n\ngoal (2 subgoals):\n 1. (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)) \\<and>\n    strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<inverse>)\n     (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n    (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel))) \\<and>\n    rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n 2. (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel))) \\<and>\n    rel_respects_binary_pred Rel\n     (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n    (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)) \\<and>\n    strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<inverse>) (\\<lambda>a. hasBarb a CWB)", "from sim"], ["proof (chain)\npicking this:\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)", "have \"rel_preserves_barbs Rel CWB\""], ["proof (prove)\nusing this:\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n\ngoal (1 subgoal):\n 1. rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)", "by simp"], ["proof (state)\nthis:\n  rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n\ngoal (2 subgoals):\n 1. (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)) \\<and>\n    strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<inverse>)\n     (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n    (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel))) \\<and>\n    rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n 2. (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel))) \\<and>\n    rel_respects_binary_pred Rel\n     (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n    (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)) \\<and>\n    strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<inverse>) (\\<lambda>a. hasBarb a CWB)", "moreover"], ["proof (state)\nthis:\n  rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n\ngoal (2 subgoals):\n 1. (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)) \\<and>\n    strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<inverse>)\n     (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n    (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel))) \\<and>\n    rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n 2. (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel))) \\<and>\n    rel_respects_binary_pred Rel\n     (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n    (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)) \\<and>\n    strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<inverse>) (\\<lambda>a. hasBarb a CWB)", "from rev"], ["proof (chain)\npicking this:\n  strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB) \\<and>\n  rel_preserves_binary_pred (Rel\\<inverse>) (\\<lambda>a. hasBarb a CWB)", "have \"rel_reflects_barbs Rel CWB\""], ["proof (prove)\nusing this:\n  strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB) \\<and>\n  rel_preserves_binary_pred (Rel\\<inverse>) (\\<lambda>a. hasBarb a CWB)\n\ngoal (1 subgoal):\n 1. rel_reflects_binary_pred Rel (\\<lambda>b. hasBarb b CWB)", "by simp"], ["proof (state)\nthis:\n  rel_reflects_binary_pred Rel (\\<lambda>b. hasBarb b CWB)\n\ngoal (2 subgoals):\n 1. (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)) \\<and>\n    strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<inverse>)\n     (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n    (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel))) \\<and>\n    rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n 2. (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel))) \\<and>\n    rel_respects_binary_pred Rel\n     (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n    (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)) \\<and>\n    strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<inverse>) (\\<lambda>a. hasBarb a CWB)", "ultimately"], ["proof (chain)\npicking this:\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and>\n      Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Calculus CWB P' \\<and> (P', Q') \\<in> Rel))\n  rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n  rel_reflects_binary_pred Rel (\\<lambda>b. hasBarb b CWB)", "show \"strong_barbed_bisimulation Rel CWB\""], ["proof (prove)\nusing this:\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and>\n      Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Calculus CWB P' \\<and> (P', Q') \\<in> Rel))\n  rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n  rel_reflects_binary_pred Rel (\\<lambda>b. hasBarb b CWB)\n\ngoal (1 subgoal):\n 1. (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel))) \\<and>\n    rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)", "by blast"], ["proof (state)\nthis:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n\ngoal (1 subgoal):\n 1. (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel))) \\<and>\n    rel_respects_binary_pred Rel\n     (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n    (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)) \\<and>\n    strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<inverse>) (\\<lambda>a. hasBarb a CWB)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel))) \\<and>\n    rel_respects_binary_pred Rel\n     (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n    (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)) \\<and>\n    strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<inverse>) (\\<lambda>a. hasBarb a CWB)", "assume bisim: \"strong_barbed_bisimulation Rel CWB\""], ["proof (state)\nthis:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n\ngoal (1 subgoal):\n 1. (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel))) \\<and>\n    rel_respects_binary_pred Rel\n     (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n    (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)) \\<and>\n    strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<inverse>) (\\<lambda>a. hasBarb a CWB)", "hence \"strong_barbed_simulation Rel CWB\""], ["proof (prove)\nusing this:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n\ngoal (1 subgoal):\n 1. strong_reduction_simulation Rel (Calculus CWB) \\<and>\n    rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)", "by blast"], ["proof (state)\nthis:\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n\ngoal (1 subgoal):\n 1. (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel))) \\<and>\n    rel_respects_binary_pred Rel\n     (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n    (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)) \\<and>\n    strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<inverse>) (\\<lambda>a. hasBarb a CWB)", "moreover"], ["proof (state)\nthis:\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n\ngoal (1 subgoal):\n 1. (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel))) \\<and>\n    rel_respects_binary_pred Rel\n     (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n    (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)) \\<and>\n    strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<inverse>) (\\<lambda>a. hasBarb a CWB)", "from bisim"], ["proof (chain)\npicking this:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)", "have \"strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB)\""], ["proof (prove)\nusing this:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n\ngoal (1 subgoal):\n 1. strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB)", "using strong_reduction_bisimulations_impl_inverse_is_simulation[where Rel=\"Rel\"]"], ["proof (prove)\nusing this:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n  strong_reduction_simulation Rel ?Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>?Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>?Cal P' \\<and>\n          (P', Q') \\<in> Rel)) \\<Longrightarrow>\n  strong_reduction_simulation (Rel\\<inverse>) ?Cal\n\ngoal (1 subgoal):\n 1. strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB)", "by simp"], ["proof (state)\nthis:\n  strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB)\n\ngoal (1 subgoal):\n 1. (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel))) \\<and>\n    rel_respects_binary_pred Rel\n     (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n    (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)) \\<and>\n    strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<inverse>) (\\<lambda>a. hasBarb a CWB)", "moreover"], ["proof (state)\nthis:\n  strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB)\n\ngoal (1 subgoal):\n 1. (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel))) \\<and>\n    rel_respects_binary_pred Rel\n     (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n    (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)) \\<and>\n    strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<inverse>) (\\<lambda>a. hasBarb a CWB)", "from bisim"], ["proof (chain)\npicking this:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)", "have \"rel_reflects_barbs Rel CWB\""], ["proof (prove)\nusing this:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n\ngoal (1 subgoal):\n 1. rel_reflects_binary_pred Rel (\\<lambda>b. hasBarb b CWB)", "by blast"], ["proof (state)\nthis:\n  rel_reflects_binary_pred Rel (\\<lambda>b. hasBarb b CWB)\n\ngoal (1 subgoal):\n 1. (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel))) \\<and>\n    rel_respects_binary_pred Rel\n     (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n    (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)) \\<and>\n    strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<inverse>) (\\<lambda>a. hasBarb a CWB)", "hence \"rel_preserves_barbs (Rel\\<inverse>) CWB\""], ["proof (prove)\nusing this:\n  rel_reflects_binary_pred Rel (\\<lambda>b. hasBarb b CWB)\n\ngoal (1 subgoal):\n 1. rel_preserves_binary_pred (Rel\\<inverse>) (\\<lambda>a. hasBarb a CWB)", "by simp"], ["proof (state)\nthis:\n  rel_preserves_binary_pred (Rel\\<inverse>) (\\<lambda>a. hasBarb a CWB)\n\ngoal (1 subgoal):\n 1. (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel))) \\<and>\n    rel_respects_binary_pred Rel\n     (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n    (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)) \\<and>\n    strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<inverse>) (\\<lambda>a. hasBarb a CWB)", "ultimately"], ["proof (chain)\npicking this:\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n  strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB)\n  rel_preserves_binary_pred (Rel\\<inverse>) (\\<lambda>a. hasBarb a CWB)", "show \"strong_barbed_simulation Rel CWB \\<and> strong_barbed_simulation (Rel\\<inverse>) CWB\""], ["proof (prove)\nusing this:\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n  strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB)\n  rel_preserves_binary_pred (Rel\\<inverse>) (\\<lambda>a. hasBarb a CWB)\n\ngoal (1 subgoal):\n 1. (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n     rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)) \\<and>\n    strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB) \\<and>\n    rel_preserves_binary_pred (Rel\\<inverse>) (\\<lambda>a. hasBarb a CWB)", "by blast"], ["proof (state)\nthis:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a CWB)) \\<and>\n  strong_reduction_simulation (Rel\\<inverse>) (Calculus CWB) \\<and>\n  rel_preserves_binary_pred (Rel\\<inverse>) (\\<lambda>a. hasBarb a CWB)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>A strong bisimulation is a weak bisimulation.\\<close>"], ["", "lemma strong_impl_weak_reduction_bisimulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  assumes bisim: \"strong_reduction_bisimulation Rel Cal\"\n  shows \"weak_reduction_bisimulation Rel Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_reduction_bisimulation Rel Cal", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. weak_reduction_simulation Rel Cal\n 2. \\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n       (\\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel)", "from bisim"], ["proof (chain)\npicking this:\n  strong_reduction_simulation Rel Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel))", "show \"weak_reduction_simulation Rel Cal\""], ["proof (prove)\nusing this:\n  strong_reduction_simulation Rel Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel))\n\ngoal (1 subgoal):\n 1. weak_reduction_simulation Rel Cal", "using strong_impl_weak_reduction_simulation[where Rel=\"Rel\" and Cal=\"Cal\"]"], ["proof (prove)\nusing this:\n  strong_reduction_simulation Rel Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel))\n  strong_reduction_simulation Rel Cal \\<Longrightarrow>\n  weak_reduction_simulation Rel Cal\n\ngoal (1 subgoal):\n 1. weak_reduction_simulation Rel Cal", "by blast"], ["proof (state)\nthis:\n  weak_reduction_simulation Rel Cal\n\ngoal (1 subgoal):\n 1. \\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n       (\\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n       (\\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel)", "show \"\\<forall>P Q Q'. (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<longrightarrow> (\\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n       (\\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel)", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "fix P Q Q'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "assume A1: \"(P, Q) \\<in> Rel\""], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "assume \"Q \\<longmapsto>Cal* Q'\""], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal* Q'\n\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "from this"], ["proof (chain)\npicking this:\n  Q \\<longmapsto>Cal* Q'", "obtain n where \"Q \\<longmapsto>Cal\\<^bsup>n\\<^esup> Q'\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto>Cal* Q'\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        Q \\<longmapsto>Cal\\<^bsup>n\\<^esup> Q' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: steps_def)"], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal\\<^bsup>n\\<^esup> Q'\n\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "thus \"\\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto>Cal\\<^bsup>n\\<^esup> Q'\n\ngoal (1 subgoal):\n 1. \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "proof (induct n arbitrary: Q')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Q'.\n       Q \\<longmapsto>Cal\\<^bsup>0\\<^esup> Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\n 2. \\<And>n Q'.\n       \\<lbrakk>\\<And>Q'.\n                   Q \\<longmapsto>Cal\\<^bsup>n\\<^esup> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel;\n        Q \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "case 0"], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal\\<^bsup>0\\<^esup> Q'\n\ngoal (2 subgoals):\n 1. \\<And>Q'.\n       Q \\<longmapsto>Cal\\<^bsup>0\\<^esup> Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\n 2. \\<And>n Q'.\n       \\<lbrakk>\\<And>Q'.\n                   Q \\<longmapsto>Cal\\<^bsup>n\\<^esup> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel;\n        Q \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "assume \"Q \\<longmapsto>Cal\\<^bsup>0\\<^esup> Q'\""], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal\\<^bsup>0\\<^esup> Q'\n\ngoal (2 subgoals):\n 1. \\<And>Q'.\n       Q \\<longmapsto>Cal\\<^bsup>0\\<^esup> Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\n 2. \\<And>n Q'.\n       \\<lbrakk>\\<And>Q'.\n                   Q \\<longmapsto>Cal\\<^bsup>n\\<^esup> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel;\n        Q \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "hence \"Q = Q'\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto>Cal\\<^bsup>0\\<^esup> Q'\n\ngoal (1 subgoal):\n 1. Q = Q'", "by (simp add: steps_refl)"], ["proof (state)\nthis:\n  Q = Q'\n\ngoal (2 subgoals):\n 1. \\<And>Q'.\n       Q \\<longmapsto>Cal\\<^bsup>0\\<^esup> Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\n 2. \\<And>n Q'.\n       \\<lbrakk>\\<And>Q'.\n                   Q \\<longmapsto>Cal\\<^bsup>n\\<^esup> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel;\n        Q \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "moreover"], ["proof (state)\nthis:\n  Q = Q'\n\ngoal (2 subgoals):\n 1. \\<And>Q'.\n       Q \\<longmapsto>Cal\\<^bsup>0\\<^esup> Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\n 2. \\<And>n Q'.\n       \\<lbrakk>\\<And>Q'.\n                   Q \\<longmapsto>Cal\\<^bsup>n\\<^esup> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel;\n        Q \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "have \"P \\<longmapsto>Cal* P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<longmapsto>Cal* P", "by (rule steps_refl)"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P\n\ngoal (2 subgoals):\n 1. \\<And>Q'.\n       Q \\<longmapsto>Cal\\<^bsup>0\\<^esup> Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\n 2. \\<And>n Q'.\n       \\<lbrakk>\\<And>Q'.\n                   Q \\<longmapsto>Cal\\<^bsup>n\\<^esup> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel;\n        Q \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "ultimately"], ["proof (chain)\npicking this:\n  Q = Q'\n  P \\<longmapsto>Cal* P", "show \"\\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  Q = Q'\n  P \\<longmapsto>Cal* P\n\ngoal (1 subgoal):\n 1. \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "using A1"], ["proof (prove)\nusing this:\n  Q = Q'\n  P \\<longmapsto>Cal* P\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>n Q'.\n       \\<lbrakk>\\<And>Q'.\n                   Q \\<longmapsto>Cal\\<^bsup>n\\<^esup> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel;\n        Q \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n Q'.\n       \\<lbrakk>\\<And>Q'.\n                   Q \\<longmapsto>Cal\\<^bsup>n\\<^esup> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel;\n        Q \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "case (Suc n Q'')"], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal\\<^bsup>n\\<^esup> ?Q' \\<Longrightarrow>\n  \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', ?Q') \\<in> Rel\n  Q \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> Q''\n\ngoal (1 subgoal):\n 1. \\<And>n Q'.\n       \\<lbrakk>\\<And>Q'.\n                   Q \\<longmapsto>Cal\\<^bsup>n\\<^esup> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel;\n        Q \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "assume \"Q \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> Q''\""], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> Q''\n\ngoal (1 subgoal):\n 1. \\<And>n Q'.\n       \\<lbrakk>\\<And>Q'.\n                   Q \\<longmapsto>Cal\\<^bsup>n\\<^esup> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel;\n        Q \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "from this"], ["proof (chain)\npicking this:\n  Q \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> Q''", "obtain Q' where A2: \"Q \\<longmapsto>Cal\\<^bsup>n\\<^esup>Q'\" and A3: \"Q' \\<longmapsto>Cal Q''\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> Q''\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        Q \\<longmapsto>Cal\\<^bsup>n\\<^esup> Q' \\<and>\n        Q' \\<longmapsto>Cal Q'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal\\<^bsup>n\\<^esup> Q'\n  Q' \\<longmapsto>Cal Q''\n\ngoal (1 subgoal):\n 1. \\<And>n Q'.\n       \\<lbrakk>\\<And>Q'.\n                   Q \\<longmapsto>Cal\\<^bsup>n\\<^esup> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel;\n        Q \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "assume \"\\<And>Q'. Q \\<longmapsto>Cal\\<^bsup>n\\<^esup> Q' \\<Longrightarrow> \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\""], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal\\<^bsup>n\\<^esup> ?Q' \\<Longrightarrow>\n  \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', ?Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>n Q'.\n       \\<lbrakk>\\<And>Q'.\n                   Q \\<longmapsto>Cal\\<^bsup>n\\<^esup> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel;\n        Q \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "with A2"], ["proof (chain)\npicking this:\n  Q \\<longmapsto>Cal\\<^bsup>n\\<^esup> Q'\n  Q \\<longmapsto>Cal\\<^bsup>n\\<^esup> ?Q' \\<Longrightarrow>\n  \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', ?Q') \\<in> Rel", "obtain P' where A4: \"P \\<longmapsto>Cal* P'\" and A5: \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto>Cal\\<^bsup>n\\<^esup> Q'\n  Q \\<longmapsto>Cal\\<^bsup>n\\<^esup> ?Q' \\<Longrightarrow>\n  \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', ?Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P'\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>n Q'.\n       \\<lbrakk>\\<And>Q'.\n                   Q \\<longmapsto>Cal\\<^bsup>n\\<^esup> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel;\n        Q \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "from bisim A5 A3"], ["proof (chain)\npicking this:\n  strong_reduction_simulation Rel Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel))\n  (P', Q') \\<in> Rel\n  Q' \\<longmapsto>Cal Q''", "obtain P'' where A6: \"P' \\<longmapsto>Cal P''\" and A7: \"(P'', Q'') \\<in> Rel\""], ["proof (prove)\nusing this:\n  strong_reduction_simulation Rel Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel))\n  (P', Q') \\<in> Rel\n  Q' \\<longmapsto>Cal Q''\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        P' \\<longmapsto>Cal P'' \\<and>\n        (P'', Q'') \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P' \\<longmapsto>Cal P''\n  (P'', Q'') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>n Q'.\n       \\<lbrakk>\\<And>Q'.\n                   Q \\<longmapsto>Cal\\<^bsup>n\\<^esup> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel;\n        Q \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "from A4 A6"], ["proof (chain)\npicking this:\n  P \\<longmapsto>Cal* P'\n  P' \\<longmapsto>Cal P''", "have \"P \\<longmapsto>Cal* P''\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal* P'\n  P' \\<longmapsto>Cal P''\n\ngoal (1 subgoal):\n 1. P \\<longmapsto>Cal* P''", "using steps_add[where P=\"P\" and Q=\"P'\" and R=\"P''\"]"], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal* P'\n  P' \\<longmapsto>Cal P''\n  P \\<longmapsto>?Cal* P' \\<and> P' \\<longmapsto>?Cal* P'' \\<Longrightarrow>\n  P \\<longmapsto>?Cal* P''\n\ngoal (1 subgoal):\n 1. P \\<longmapsto>Cal* P''", "by (simp add: step_to_steps)"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P''\n\ngoal (1 subgoal):\n 1. \\<And>n Q'.\n       \\<lbrakk>\\<And>Q'.\n                   Q \\<longmapsto>Cal\\<^bsup>n\\<^esup> Q' \\<Longrightarrow>\n                   \\<exists>P'.\n                      P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel;\n        Q \\<longmapsto>Cal\\<^bsup>Suc n\\<^esup> Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel", "with A7"], ["proof (chain)\npicking this:\n  (P'', Q'') \\<in> Rel\n  P \\<longmapsto>Cal* P''", "show \"\\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q'') \\<in> Rel\""], ["proof (prove)\nusing this:\n  (P'', Q'') \\<in> Rel\n  P \\<longmapsto>Cal* P''\n\ngoal (1 subgoal):\n 1. \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q'') \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q'') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>P Q Q'.\n     (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n     (\\<exists>P'. P \\<longmapsto>Cal* P' \\<and> (P', Q') \\<in> Rel)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma strong_barbed_bisimulation_impl_weak_respection_of_barbs:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  assumes bisim: \"strong_barbed_bisimulation Rel CWB\"\n  shows \"rel_weakly_respects_barbs Rel CWB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_weakly_respects_barbs Rel CWB", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. rel_weakly_preserves_barbs Rel CWB\n 2. rel_weakly_reflects_barbs Rel CWB", "from bisim"], ["proof (chain)\npicking this:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)", "show \"rel_weakly_preserves_barbs Rel CWB\""], ["proof (prove)\nusing this:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n\ngoal (1 subgoal):\n 1. rel_weakly_preserves_barbs Rel CWB", "using strong_barbed_simulation_impl_weak_preservation_of_barbs[where Rel=\"Rel\" and CWB=\"CWB\"]"], ["proof (prove)\nusing this:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  rel_preserves_binary_pred Rel\n   (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n  rel_weakly_preserves_barbs Rel CWB\n\ngoal (1 subgoal):\n 1. rel_weakly_preserves_barbs Rel CWB", "by blast"], ["proof (state)\nthis:\n  rel_weakly_preserves_barbs Rel CWB\n\ngoal (1 subgoal):\n 1. rel_weakly_reflects_barbs Rel CWB", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. rel_weakly_reflects_barbs Rel CWB", "show \"rel_weakly_reflects_barbs Rel CWB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_weakly_reflects_barbs Rel CWB", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b x P'.\n       (a, b) \\<in> Rel \\<and>\n       b \\<longmapsto>Calculus CWB* P' \\<and>\n       P'\\<down><CWB>x \\<Longrightarrow>\n       a\\<Down><CWB>x", "fix P Q a Q'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b x P'.\n       (a, b) \\<in> Rel \\<and>\n       b \\<longmapsto>Calculus CWB* P' \\<and>\n       P'\\<down><CWB>x \\<Longrightarrow>\n       a\\<Down><CWB>x", "assume \"(P, Q) \\<in> Rel\" and \"Q \\<longmapsto>(Calculus CWB)* Q'\""], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n  Q \\<longmapsto>Calculus CWB* Q'\n\ngoal (1 subgoal):\n 1. \\<And>a b x P'.\n       (a, b) \\<in> Rel \\<and>\n       b \\<longmapsto>Calculus CWB* P' \\<and>\n       P'\\<down><CWB>x \\<Longrightarrow>\n       a\\<Down><CWB>x", "with bisim"], ["proof (chain)\npicking this:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n  (P, Q) \\<in> Rel\n  Q \\<longmapsto>Calculus CWB* Q'", "obtain P' where A1: \"P \\<longmapsto>(Calculus CWB)* P'\" and A2: \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n  (P, Q) \\<in> Rel\n  Q \\<longmapsto>Calculus CWB* Q'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        P \\<longmapsto>Calculus CWB* P' \\<and>\n        (P', Q') \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using strong_impl_weak_reduction_bisimulation[where Rel=\"Rel\" and Cal=\"Calculus CWB\"]"], ["proof (prove)\nusing this:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n  (P, Q) \\<in> Rel\n  Q \\<longmapsto>Calculus CWB* Q'\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and>\n      Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Calculus CWB P' \\<and>\n          (P', Q') \\<in> Rel)) \\<Longrightarrow>\n  weak_reduction_bisimulation Rel (Calculus CWB)\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        P \\<longmapsto>Calculus CWB* P' \\<and>\n        (P', Q') \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<longmapsto>Calculus CWB* P'\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>a b x P'.\n       (a, b) \\<in> Rel \\<and>\n       b \\<longmapsto>Calculus CWB* P' \\<and>\n       P'\\<down><CWB>x \\<Longrightarrow>\n       a\\<Down><CWB>x", "assume \"Q'\\<down><CWB>a\""], ["proof (state)\nthis:\n  Q'\\<down><CWB>a\n\ngoal (1 subgoal):\n 1. \\<And>a b x P'.\n       (a, b) \\<in> Rel \\<and>\n       b \\<longmapsto>Calculus CWB* P' \\<and>\n       P'\\<down><CWB>x \\<Longrightarrow>\n       a\\<Down><CWB>x", "with bisim A2"], ["proof (chain)\npicking this:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n  (P', Q') \\<in> Rel\n  Q'\\<down><CWB>a", "have \"P'\\<down><CWB>a\""], ["proof (prove)\nusing this:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n  (P', Q') \\<in> Rel\n  Q'\\<down><CWB>a\n\ngoal (1 subgoal):\n 1. P'\\<down><CWB>a", "by blast"], ["proof (state)\nthis:\n  P'\\<down><CWB>a\n\ngoal (1 subgoal):\n 1. \\<And>a b x P'.\n       (a, b) \\<in> Rel \\<and>\n       b \\<longmapsto>Calculus CWB* P' \\<and>\n       P'\\<down><CWB>x \\<Longrightarrow>\n       a\\<Down><CWB>x", "with A1"], ["proof (chain)\npicking this:\n  P \\<longmapsto>Calculus CWB* P'\n  P'\\<down><CWB>a", "show \"P\\<Down><CWB>a\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Calculus CWB* P'\n  P'\\<down><CWB>a\n\ngoal (1 subgoal):\n 1. P\\<Down><CWB>a", "by blast"], ["proof (state)\nthis:\n  P\\<Down><CWB>a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rel_weakly_reflects_barbs Rel CWB\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma strong_impl_weak_barbed_bisimulation:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  assumes bisim: \"strong_barbed_bisimulation Rel CWB\"\n  shows \"weak_barbed_bisimulation Rel CWB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_barbed_bisimulation Rel CWB", "using bisim\n            strong_impl_weak_reduction_bisimulation[where Rel=\"Rel\" and Cal=\"Calculus CWB\"]\n            strong_barbed_bisimulation_impl_weak_respection_of_barbs[where Rel=\"Rel\" and CWB=\"CWB\"]"], ["proof (prove)\nusing this:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and>\n      Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Calculus CWB P' \\<and>\n          (P', Q') \\<in> Rel)) \\<Longrightarrow>\n  weak_reduction_bisimulation Rel (Calculus CWB)\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n  rel_weakly_respects_barbs Rel CWB\n\ngoal (1 subgoal):\n 1. weak_barbed_bisimulation Rel CWB", "by blast"], ["", "text \\<open>The reflexive, symmetric, and/or transitive closure of a strong bisimulation is a strong\n        bisimulation.\\<close>"], ["", "lemma strong_reduction_bisimulation_and_closures:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and Cal :: \"'proc processCalculus\"\n  assumes bisim: \"strong_reduction_bisimulation Rel Cal\"\n  shows \"strong_reduction_bisimulation (Rel\\<^sup>=) Cal\"\n    and \"strong_reduction_bisimulation (symcl Rel) Cal\"\n    and \"strong_reduction_bisimulation (Rel\\<^sup>+) Cal\"\n    and \"strong_reduction_bisimulation (symcl (Rel\\<^sup>=)) Cal\"\n    and \"strong_reduction_bisimulation (Rel\\<^sup>*) Cal\"\n    and \"strong_reduction_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (strong_reduction_simulation (Rel\\<^sup>=) Cal \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel\\<^sup>= \\<and>\n         Q \\<longmapsto>Cal Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>=)) &&&\n     strong_reduction_simulation (symcl Rel) Cal \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> symcl Rel \\<and>\n         Q \\<longmapsto>Cal Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> symcl Rel)) &&&\n     strong_reduction_simulation (Rel\\<^sup>+) Cal \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n         Q \\<longmapsto>Cal Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+))) &&&\n    strong_reduction_simulation (symcl (Rel\\<^sup>=)) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> symcl (Rel\\<^sup>=) \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and>\n            (P', Q') \\<in> symcl (Rel\\<^sup>=))) &&&\n    strong_reduction_simulation (Rel\\<^sup>*) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> Rel\\<^sup>* \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>*)) &&&\n    strong_reduction_simulation ((symcl (Rel\\<^sup>=))\\<^sup>+) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+ \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and>\n            (P', Q') \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+))", "proof -"], ["proof (state)\ngoal (6 subgoals):\n 1. strong_reduction_simulation (Rel\\<^sup>=) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> Rel\\<^sup>= \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>=))\n 2. strong_reduction_simulation (symcl Rel) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> symcl Rel \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> symcl Rel))\n 3. strong_reduction_simulation (Rel\\<^sup>+) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+))\n 4. strong_reduction_simulation (symcl (Rel\\<^sup>=)) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> symcl (Rel\\<^sup>=) \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and>\n            (P', Q') \\<in> symcl (Rel\\<^sup>=)))\n 5. strong_reduction_simulation (Rel\\<^sup>*) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> Rel\\<^sup>* \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>*))\n 6. strong_reduction_simulation ((symcl (Rel\\<^sup>=))\\<^sup>+) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+ \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and>\n            (P', Q') \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+))", "from bisim"], ["proof (chain)\npicking this:\n  strong_reduction_simulation Rel Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel))", "show A: \"strong_reduction_bisimulation (Rel\\<^sup>=) Cal\""], ["proof (prove)\nusing this:\n  strong_reduction_simulation Rel Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel))\n\ngoal (1 subgoal):\n 1. strong_reduction_simulation (Rel\\<^sup>=) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> Rel\\<^sup>= \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>=))", "by (auto simp add: refl, blast+)"], ["proof (state)\nthis:\n  strong_reduction_simulation (Rel\\<^sup>=) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel\\<^sup>= \\<and>\n      Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>=))\n\ngoal (5 subgoals):\n 1. strong_reduction_simulation (symcl Rel) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> symcl Rel \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> symcl Rel))\n 2. strong_reduction_simulation (Rel\\<^sup>+) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+))\n 3. strong_reduction_simulation (symcl (Rel\\<^sup>=)) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> symcl (Rel\\<^sup>=) \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and>\n            (P', Q') \\<in> symcl (Rel\\<^sup>=)))\n 4. strong_reduction_simulation (Rel\\<^sup>*) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> Rel\\<^sup>* \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>*))\n 5. strong_reduction_simulation ((symcl (Rel\\<^sup>=))\\<^sup>+) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+ \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and>\n            (P', Q') \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+))", "have B: \"\\<And>Rel. strong_reduction_bisimulation Rel Cal\n           \\<Longrightarrow> strong_reduction_bisimulation (symcl Rel) Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       strong_reduction_simulation Rel Cal \\<and>\n       (\\<forall>P Q Q'.\n           (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n           (\\<exists>P'.\n               P \\<longmapsto>Cal P' \\<and>\n               (P', Q') \\<in> Rel)) \\<Longrightarrow>\n       strong_reduction_simulation (symcl Rel) Cal \\<and>\n       (\\<forall>P Q Q'.\n           (P, Q) \\<in> symcl Rel \\<and>\n           Q \\<longmapsto>Cal Q' \\<longrightarrow>\n           (\\<exists>P'.\n               P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> symcl Rel))", "by (auto simp add: symcl_def, blast+)"], ["proof (state)\nthis:\n  strong_reduction_simulation ?Rel Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> ?Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and>\n          (P', Q') \\<in> ?Rel)) \\<Longrightarrow>\n  strong_reduction_simulation (symcl ?Rel) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> symcl ?Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> symcl ?Rel))\n\ngoal (5 subgoals):\n 1. strong_reduction_simulation (symcl Rel) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> symcl Rel \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> symcl Rel))\n 2. strong_reduction_simulation (Rel\\<^sup>+) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+))\n 3. strong_reduction_simulation (symcl (Rel\\<^sup>=)) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> symcl (Rel\\<^sup>=) \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and>\n            (P', Q') \\<in> symcl (Rel\\<^sup>=)))\n 4. strong_reduction_simulation (Rel\\<^sup>*) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> Rel\\<^sup>* \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>*))\n 5. strong_reduction_simulation ((symcl (Rel\\<^sup>=))\\<^sup>+) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+ \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and>\n            (P', Q') \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+))", "from bisim B[where Rel=\"Rel\"]"], ["proof (chain)\npicking this:\n  strong_reduction_simulation Rel Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel))\n  strong_reduction_simulation Rel Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and>\n          (P', Q') \\<in> Rel)) \\<Longrightarrow>\n  strong_reduction_simulation (symcl Rel) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> symcl Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> symcl Rel))", "show \"strong_reduction_bisimulation (symcl Rel) Cal\""], ["proof (prove)\nusing this:\n  strong_reduction_simulation Rel Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel))\n  strong_reduction_simulation Rel Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and>\n          (P', Q') \\<in> Rel)) \\<Longrightarrow>\n  strong_reduction_simulation (symcl Rel) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> symcl Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> symcl Rel))\n\ngoal (1 subgoal):\n 1. strong_reduction_simulation (symcl Rel) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> symcl Rel \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> symcl Rel))", "by blast"], ["proof (state)\nthis:\n  strong_reduction_simulation (symcl Rel) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> symcl Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> symcl Rel))\n\ngoal (4 subgoals):\n 1. strong_reduction_simulation (Rel\\<^sup>+) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+))\n 2. strong_reduction_simulation (symcl (Rel\\<^sup>=)) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> symcl (Rel\\<^sup>=) \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and>\n            (P', Q') \\<in> symcl (Rel\\<^sup>=)))\n 3. strong_reduction_simulation (Rel\\<^sup>*) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> Rel\\<^sup>* \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>*))\n 4. strong_reduction_simulation ((symcl (Rel\\<^sup>=))\\<^sup>+) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+ \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and>\n            (P', Q') \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+))", "have C: \"\\<And>Rel. strong_reduction_bisimulation Rel Cal\n           \\<Longrightarrow> strong_reduction_bisimulation (Rel\\<^sup>+) Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       strong_reduction_simulation Rel Cal \\<and>\n       (\\<forall>P Q Q'.\n           (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n           (\\<exists>P'.\n               P \\<longmapsto>Cal P' \\<and>\n               (P', Q') \\<in> Rel)) \\<Longrightarrow>\n       strong_reduction_simulation (Rel\\<^sup>+) Cal \\<and>\n       (\\<forall>P Q Q'.\n           (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n           Q \\<longmapsto>Cal Q' \\<longrightarrow>\n           (\\<exists>P'.\n               P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Rel.\n       strong_reduction_simulation Rel Cal \\<and>\n       (\\<forall>P Q Q'.\n           (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n           (\\<exists>P'.\n               P \\<longmapsto>Cal P' \\<and>\n               (P', Q') \\<in> Rel)) \\<Longrightarrow>\n       strong_reduction_simulation (Rel\\<^sup>+) Cal\n 2. \\<And>Rel.\n       strong_reduction_simulation Rel Cal \\<and>\n       (\\<forall>P Q Q'.\n           (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n           (\\<exists>P'.\n               P \\<longmapsto>Cal P' \\<and>\n               (P', Q') \\<in> Rel)) \\<Longrightarrow>\n       \\<forall>P Q Q'.\n          (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n          Q \\<longmapsto>Cal Q' \\<longrightarrow>\n          (\\<exists>P'.\n              P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+)", "fix Rel"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Rel.\n       strong_reduction_simulation Rel Cal \\<and>\n       (\\<forall>P Q Q'.\n           (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n           (\\<exists>P'.\n               P \\<longmapsto>Cal P' \\<and>\n               (P', Q') \\<in> Rel)) \\<Longrightarrow>\n       strong_reduction_simulation (Rel\\<^sup>+) Cal\n 2. \\<And>Rel.\n       strong_reduction_simulation Rel Cal \\<and>\n       (\\<forall>P Q Q'.\n           (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n           (\\<exists>P'.\n               P \\<longmapsto>Cal P' \\<and>\n               (P', Q') \\<in> Rel)) \\<Longrightarrow>\n       \\<forall>P Q Q'.\n          (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n          Q \\<longmapsto>Cal Q' \\<longrightarrow>\n          (\\<exists>P'.\n              P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+)", "assume \"strong_reduction_bisimulation Rel Cal\""], ["proof (state)\nthis:\n  strong_reduction_simulation Rel Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel))\n\ngoal (2 subgoals):\n 1. \\<And>Rel.\n       strong_reduction_simulation Rel Cal \\<and>\n       (\\<forall>P Q Q'.\n           (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n           (\\<exists>P'.\n               P \\<longmapsto>Cal P' \\<and>\n               (P', Q') \\<in> Rel)) \\<Longrightarrow>\n       strong_reduction_simulation (Rel\\<^sup>+) Cal\n 2. \\<And>Rel.\n       strong_reduction_simulation Rel Cal \\<and>\n       (\\<forall>P Q Q'.\n           (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n           (\\<exists>P'.\n               P \\<longmapsto>Cal P' \\<and>\n               (P', Q') \\<in> Rel)) \\<Longrightarrow>\n       \\<forall>P Q Q'.\n          (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n          Q \\<longmapsto>Cal Q' \\<longrightarrow>\n          (\\<exists>P'.\n              P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+)", "thus \"strong_reduction_simulation (Rel\\<^sup>+) Cal\""], ["proof (prove)\nusing this:\n  strong_reduction_simulation Rel Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel))\n\ngoal (1 subgoal):\n 1. strong_reduction_simulation (Rel\\<^sup>+) Cal", "using strong_reduction_simulation_and_closures(2)[where Rel=\"Rel\" and Cal=\"Cal\"]"], ["proof (prove)\nusing this:\n  strong_reduction_simulation Rel Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel))\n  strong_reduction_simulation Rel Cal \\<Longrightarrow>\n  strong_reduction_simulation (Rel\\<^sup>+) Cal\n\ngoal (1 subgoal):\n 1. strong_reduction_simulation (Rel\\<^sup>+) Cal", "by blast"], ["proof (state)\nthis:\n  strong_reduction_simulation (Rel\\<^sup>+) Cal\n\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       strong_reduction_simulation Rel Cal \\<and>\n       (\\<forall>P Q Q'.\n           (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n           (\\<exists>P'.\n               P \\<longmapsto>Cal P' \\<and>\n               (P', Q') \\<in> Rel)) \\<Longrightarrow>\n       \\<forall>P Q Q'.\n          (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n          Q \\<longmapsto>Cal Q' \\<longrightarrow>\n          (\\<exists>P'.\n              P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       strong_reduction_simulation Rel Cal \\<and>\n       (\\<forall>P Q Q'.\n           (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n           (\\<exists>P'.\n               P \\<longmapsto>Cal P' \\<and>\n               (P', Q') \\<in> Rel)) \\<Longrightarrow>\n       \\<forall>P Q Q'.\n          (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n          Q \\<longmapsto>Cal Q' \\<longrightarrow>\n          (\\<exists>P'.\n              P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+)", "fix Rel"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       strong_reduction_simulation Rel Cal \\<and>\n       (\\<forall>P Q Q'.\n           (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n           (\\<exists>P'.\n               P \\<longmapsto>Cal P' \\<and>\n               (P', Q') \\<in> Rel)) \\<Longrightarrow>\n       \\<forall>P Q Q'.\n          (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n          Q \\<longmapsto>Cal Q' \\<longrightarrow>\n          (\\<exists>P'.\n              P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+)", "assume C1: \"strong_reduction_bisimulation Rel Cal\""], ["proof (state)\nthis:\n  strong_reduction_simulation Rel Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel))\n\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       strong_reduction_simulation Rel Cal \\<and>\n       (\\<forall>P Q Q'.\n           (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n           (\\<exists>P'.\n               P \\<longmapsto>Cal P' \\<and>\n               (P', Q') \\<in> Rel)) \\<Longrightarrow>\n       \\<forall>P Q Q'.\n          (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n          Q \\<longmapsto>Cal Q' \\<longrightarrow>\n          (\\<exists>P'.\n              P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+)", "show \"\\<forall>P Q Q'. (P, Q) \\<in> Rel\\<^sup>+ \\<and> Q \\<longmapsto>Cal Q'\n          \\<longrightarrow> (\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P Q Q'.\n       (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n       Q \\<longmapsto>Cal Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+)", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n       Q \\<longmapsto>Cal Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+", "fix P Q Q'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n       Q \\<longmapsto>Cal Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+", "assume \"(P, Q) \\<in> Rel\\<^sup>+\" and \"Q \\<longmapsto>Cal Q'\""], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\\<^sup>+\n  Q \\<longmapsto>Cal Q'\n\ngoal (1 subgoal):\n 1. \\<And>P Q Q'.\n       (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n       Q \\<longmapsto>Cal Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+", "thus \"\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> Rel\\<^sup>+\n  Q \\<longmapsto>Cal Q'\n\ngoal (1 subgoal):\n 1. \\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+", "proof (induct arbitrary: Q')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y Q'.\n       (P, y) \\<in> Rel \\<and> y \\<longmapsto>Cal Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+\n 2. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal Q' \\<Longrightarrow>\n           \\<exists>P'.\n              P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal P' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "fix Q Q'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y Q'.\n       (P, y) \\<in> Rel \\<and> y \\<longmapsto>Cal Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+\n 2. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal Q' \\<Longrightarrow>\n           \\<exists>P'.\n              P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal P' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "assume \"(P, Q) \\<in> Rel\" and \"Q \\<longmapsto>Cal Q'\""], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n  Q \\<longmapsto>Cal Q'\n\ngoal (2 subgoals):\n 1. \\<And>y Q'.\n       (P, y) \\<in> Rel \\<and> y \\<longmapsto>Cal Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+\n 2. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal Q' \\<Longrightarrow>\n           \\<exists>P'.\n              P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal P' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "with C1"], ["proof (chain)\npicking this:\n  strong_reduction_simulation Rel Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel))\n  (P, Q) \\<in> Rel\n  Q \\<longmapsto>Cal Q'", "obtain P' where \"P \\<longmapsto>Cal P'\" and \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  strong_reduction_simulation Rel Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel))\n  (P, Q) \\<in> Rel\n  Q \\<longmapsto>Cal Q'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal P'\n  (P', Q') \\<in> Rel\n\ngoal (2 subgoals):\n 1. \\<And>y Q'.\n       (P, y) \\<in> Rel \\<and> y \\<longmapsto>Cal Q' \\<Longrightarrow>\n       \\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+\n 2. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal Q' \\<Longrightarrow>\n           \\<exists>P'.\n              P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal P' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "thus \"\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal P'\n  (P', Q') \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+", "by auto"], ["proof (state)\nthis:\n  \\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal Q' \\<Longrightarrow>\n           \\<exists>P'.\n              P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal P' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal Q' \\<Longrightarrow>\n           \\<exists>P'.\n              P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal P' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "case (step Q R R')"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\\<^sup>+\n  (Q, R) \\<in> Rel\n  Q \\<longmapsto>Cal ?Q' \\<Longrightarrow>\n  \\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', ?Q') \\<in> Rel\\<^sup>+\n  R \\<longmapsto>Cal R'\n\ngoal (1 subgoal):\n 1. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal Q' \\<Longrightarrow>\n           \\<exists>P'.\n              P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal P' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "assume \"(Q, R) \\<in> Rel\" and \"R \\<longmapsto>Cal R'\""], ["proof (state)\nthis:\n  (Q, R) \\<in> Rel\n  R \\<longmapsto>Cal R'\n\ngoal (1 subgoal):\n 1. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal Q' \\<Longrightarrow>\n           \\<exists>P'.\n              P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal P' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "with C1"], ["proof (chain)\npicking this:\n  strong_reduction_simulation Rel Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel))\n  (Q, R) \\<in> Rel\n  R \\<longmapsto>Cal R'", "obtain Q' where C2: \"Q \\<longmapsto>Cal Q'\" and C3: \"(Q', R') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  strong_reduction_simulation Rel Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel))\n  (Q, R) \\<in> Rel\n  R \\<longmapsto>Cal R'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        Q \\<longmapsto>Cal Q' \\<and>\n        (Q', R') \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal Q'\n  (Q', R') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal Q' \\<Longrightarrow>\n           \\<exists>P'.\n              P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal P' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "assume \"\\<And>Q'. Q \\<longmapsto>Cal Q' \\<Longrightarrow> \\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+\""], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal ?Q' \\<Longrightarrow>\n  \\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', ?Q') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal Q' \\<Longrightarrow>\n           \\<exists>P'.\n              P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal P' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "with C2"], ["proof (chain)\npicking this:\n  Q \\<longmapsto>Cal Q'\n  Q \\<longmapsto>Cal ?Q' \\<Longrightarrow>\n  \\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', ?Q') \\<in> Rel\\<^sup>+", "obtain P' where C4: \"P \\<longmapsto>Cal P'\" and C5: \"(P', Q') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto>Cal Q'\n  Q \\<longmapsto>Cal ?Q' \\<Longrightarrow>\n  \\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', ?Q') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        P \\<longmapsto>Cal P' \\<and>\n        (P', Q') \\<in> Rel\\<^sup>+ \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal P'\n  (P', Q') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal Q' \\<Longrightarrow>\n           \\<exists>P'.\n              P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal P' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "from C5 C3"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel\\<^sup>+\n  (Q', R') \\<in> Rel\\<^sup>+", "have \"(P', R') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\\<^sup>+\n  (Q', R') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. (P', R') \\<in> Rel\\<^sup>+", "by simp"], ["proof (state)\nthis:\n  (P', R') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>y z Q'.\n       \\<lbrakk>(P, y) \\<in> Rel\\<^sup>+; (y, z) \\<in> Rel;\n        \\<And>Q'.\n           y \\<longmapsto>Cal Q' \\<Longrightarrow>\n           \\<exists>P'.\n              P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+;\n        z \\<longmapsto>Cal Q'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'.\n                            P \\<longmapsto>Cal P' \\<and>\n                            (P', Q') \\<in> Rel\\<^sup>+", "with C4"], ["proof (chain)\npicking this:\n  P \\<longmapsto>Cal P'\n  (P', R') \\<in> Rel\\<^sup>+", "show \"\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', R') \\<in> Rel\\<^sup>+\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal P'\n  (P', R') \\<in> Rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', R') \\<in> Rel\\<^sup>+", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', R') \\<in> Rel\\<^sup>+\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>P Q Q'.\n     (P, Q) \\<in> Rel\\<^sup>+ \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n     (\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  strong_reduction_simulation ?Rel Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> ?Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and>\n          (P', Q') \\<in> ?Rel)) \\<Longrightarrow>\n  strong_reduction_simulation (?Rel\\<^sup>+) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> ?Rel\\<^sup>+ \\<and>\n      Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> ?Rel\\<^sup>+))\n\ngoal (4 subgoals):\n 1. strong_reduction_simulation (Rel\\<^sup>+) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+))\n 2. strong_reduction_simulation (symcl (Rel\\<^sup>=)) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> symcl (Rel\\<^sup>=) \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and>\n            (P', Q') \\<in> symcl (Rel\\<^sup>=)))\n 3. strong_reduction_simulation (Rel\\<^sup>*) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> Rel\\<^sup>* \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>*))\n 4. strong_reduction_simulation ((symcl (Rel\\<^sup>=))\\<^sup>+) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+ \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and>\n            (P', Q') \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+))", "from bisim C[where Rel=\"Rel\"]"], ["proof (chain)\npicking this:\n  strong_reduction_simulation Rel Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel))\n  strong_reduction_simulation Rel Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and>\n          (P', Q') \\<in> Rel)) \\<Longrightarrow>\n  strong_reduction_simulation (Rel\\<^sup>+) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n      Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+))", "show \"strong_reduction_bisimulation (Rel\\<^sup>+) Cal\""], ["proof (prove)\nusing this:\n  strong_reduction_simulation Rel Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'. P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel))\n  strong_reduction_simulation Rel Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and> Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and>\n          (P', Q') \\<in> Rel)) \\<Longrightarrow>\n  strong_reduction_simulation (Rel\\<^sup>+) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n      Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+))\n\ngoal (1 subgoal):\n 1. strong_reduction_simulation (Rel\\<^sup>+) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+))", "by blast"], ["proof (state)\nthis:\n  strong_reduction_simulation (Rel\\<^sup>+) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n      Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>+))\n\ngoal (3 subgoals):\n 1. strong_reduction_simulation (symcl (Rel\\<^sup>=)) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> symcl (Rel\\<^sup>=) \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and>\n            (P', Q') \\<in> symcl (Rel\\<^sup>=)))\n 2. strong_reduction_simulation (Rel\\<^sup>*) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> Rel\\<^sup>* \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>*))\n 3. strong_reduction_simulation ((symcl (Rel\\<^sup>=))\\<^sup>+) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+ \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and>\n            (P', Q') \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+))", "from A B[where Rel=\"Rel\\<^sup>=\"]"], ["proof (chain)\npicking this:\n  strong_reduction_simulation (Rel\\<^sup>=) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel\\<^sup>= \\<and>\n      Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>=))\n  strong_reduction_simulation (Rel\\<^sup>=) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel\\<^sup>= \\<and>\n      Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and>\n          (P', Q') \\<in> Rel\\<^sup>=)) \\<Longrightarrow>\n  strong_reduction_simulation (symcl (Rel\\<^sup>=)) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> symcl (Rel\\<^sup>=) \\<and>\n      Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> symcl (Rel\\<^sup>=)))", "show \"strong_reduction_bisimulation (symcl (Rel\\<^sup>=)) Cal\""], ["proof (prove)\nusing this:\n  strong_reduction_simulation (Rel\\<^sup>=) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel\\<^sup>= \\<and>\n      Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>=))\n  strong_reduction_simulation (Rel\\<^sup>=) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel\\<^sup>= \\<and>\n      Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and>\n          (P', Q') \\<in> Rel\\<^sup>=)) \\<Longrightarrow>\n  strong_reduction_simulation (symcl (Rel\\<^sup>=)) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> symcl (Rel\\<^sup>=) \\<and>\n      Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> symcl (Rel\\<^sup>=)))\n\ngoal (1 subgoal):\n 1. strong_reduction_simulation (symcl (Rel\\<^sup>=)) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> symcl (Rel\\<^sup>=) \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and>\n            (P', Q') \\<in> symcl (Rel\\<^sup>=)))", "by blast"], ["proof (state)\nthis:\n  strong_reduction_simulation (symcl (Rel\\<^sup>=)) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> symcl (Rel\\<^sup>=) \\<and>\n      Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> symcl (Rel\\<^sup>=)))\n\ngoal (2 subgoals):\n 1. strong_reduction_simulation (Rel\\<^sup>*) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> Rel\\<^sup>* \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>*))\n 2. strong_reduction_simulation ((symcl (Rel\\<^sup>=))\\<^sup>+) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+ \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and>\n            (P', Q') \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+))", "from A C[where Rel=\"Rel\\<^sup>=\"]"], ["proof (chain)\npicking this:\n  strong_reduction_simulation (Rel\\<^sup>=) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel\\<^sup>= \\<and>\n      Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>=))\n  strong_reduction_simulation (Rel\\<^sup>=) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel\\<^sup>= \\<and>\n      Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and>\n          (P', Q') \\<in> Rel\\<^sup>=)) \\<Longrightarrow>\n  strong_reduction_simulation ((Rel\\<^sup>=)\\<^sup>+) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> (Rel\\<^sup>=)\\<^sup>+ \\<and>\n      Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and>\n          (P', Q') \\<in> (Rel\\<^sup>=)\\<^sup>+))", "show \"strong_reduction_bisimulation (Rel\\<^sup>*) Cal\""], ["proof (prove)\nusing this:\n  strong_reduction_simulation (Rel\\<^sup>=) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel\\<^sup>= \\<and>\n      Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>=))\n  strong_reduction_simulation (Rel\\<^sup>=) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel\\<^sup>= \\<and>\n      Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and>\n          (P', Q') \\<in> Rel\\<^sup>=)) \\<Longrightarrow>\n  strong_reduction_simulation ((Rel\\<^sup>=)\\<^sup>+) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> (Rel\\<^sup>=)\\<^sup>+ \\<and>\n      Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and>\n          (P', Q') \\<in> (Rel\\<^sup>=)\\<^sup>+))\n\ngoal (1 subgoal):\n 1. strong_reduction_simulation (Rel\\<^sup>*) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> Rel\\<^sup>* \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>*))", "using trancl_reflcl[of Rel]"], ["proof (prove)\nusing this:\n  strong_reduction_simulation (Rel\\<^sup>=) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel\\<^sup>= \\<and>\n      Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>=))\n  strong_reduction_simulation (Rel\\<^sup>=) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel\\<^sup>= \\<and>\n      Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and>\n          (P', Q') \\<in> Rel\\<^sup>=)) \\<Longrightarrow>\n  strong_reduction_simulation ((Rel\\<^sup>=)\\<^sup>+) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> (Rel\\<^sup>=)\\<^sup>+ \\<and>\n      Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and>\n          (P', Q') \\<in> (Rel\\<^sup>=)\\<^sup>+))\n  (Rel\\<^sup>=)\\<^sup>+ = Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. strong_reduction_simulation (Rel\\<^sup>*) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> Rel\\<^sup>* \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>*))", "by auto"], ["proof (state)\nthis:\n  strong_reduction_simulation (Rel\\<^sup>*) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel\\<^sup>* \\<and>\n      Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>*))\n\ngoal (1 subgoal):\n 1. strong_reduction_simulation ((symcl (Rel\\<^sup>=))\\<^sup>+) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+ \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and>\n            (P', Q') \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+))", "from A B[where Rel=\"Rel\\<^sup>=\"] C[where Rel=\"symcl (Rel\\<^sup>=)\"]"], ["proof (chain)\npicking this:\n  strong_reduction_simulation (Rel\\<^sup>=) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel\\<^sup>= \\<and>\n      Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>=))\n  strong_reduction_simulation (Rel\\<^sup>=) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel\\<^sup>= \\<and>\n      Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and>\n          (P', Q') \\<in> Rel\\<^sup>=)) \\<Longrightarrow>\n  strong_reduction_simulation (symcl (Rel\\<^sup>=)) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> symcl (Rel\\<^sup>=) \\<and>\n      Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> symcl (Rel\\<^sup>=)))\n  strong_reduction_simulation (symcl (Rel\\<^sup>=)) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> symcl (Rel\\<^sup>=) \\<and>\n      Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and>\n          (P', Q') \\<in> symcl (Rel\\<^sup>=))) \\<Longrightarrow>\n  strong_reduction_simulation ((symcl (Rel\\<^sup>=))\\<^sup>+) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+ \\<and>\n      Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and>\n          (P', Q') \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+))", "show \"strong_reduction_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) Cal\""], ["proof (prove)\nusing this:\n  strong_reduction_simulation (Rel\\<^sup>=) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel\\<^sup>= \\<and>\n      Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> Rel\\<^sup>=))\n  strong_reduction_simulation (Rel\\<^sup>=) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel\\<^sup>= \\<and>\n      Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and>\n          (P', Q') \\<in> Rel\\<^sup>=)) \\<Longrightarrow>\n  strong_reduction_simulation (symcl (Rel\\<^sup>=)) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> symcl (Rel\\<^sup>=) \\<and>\n      Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and> (P', Q') \\<in> symcl (Rel\\<^sup>=)))\n  strong_reduction_simulation (symcl (Rel\\<^sup>=)) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> symcl (Rel\\<^sup>=) \\<and>\n      Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and>\n          (P', Q') \\<in> symcl (Rel\\<^sup>=))) \\<Longrightarrow>\n  strong_reduction_simulation ((symcl (Rel\\<^sup>=))\\<^sup>+) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+ \\<and>\n      Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and>\n          (P', Q') \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+))\n\ngoal (1 subgoal):\n 1. strong_reduction_simulation ((symcl (Rel\\<^sup>=))\\<^sup>+) Cal \\<and>\n    (\\<forall>P Q Q'.\n        (P, Q) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+ \\<and>\n        Q \\<longmapsto>Cal Q' \\<longrightarrow>\n        (\\<exists>P'.\n            P \\<longmapsto>Cal P' \\<and>\n            (P', Q') \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+))", "by blast"], ["proof (state)\nthis:\n  strong_reduction_simulation ((symcl (Rel\\<^sup>=))\\<^sup>+) Cal \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+ \\<and>\n      Q \\<longmapsto>Cal Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Cal P' \\<and>\n          (P', Q') \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma strong_barbed_bisimulation_and_closures:\n  fixes Rel :: \"('proc \\<times> 'proc) set\"\n    and CWB :: \"('proc, 'barbs) calculusWithBarbs\"\n  assumes bisim: \"strong_barbed_bisimulation Rel CWB\"\n  shows \"strong_barbed_bisimulation (Rel\\<^sup>=) CWB\"\n    and \"strong_barbed_bisimulation (symcl Rel) CWB\"\n    and \"strong_barbed_bisimulation (Rel\\<^sup>+) CWB\"\n    and \"strong_barbed_bisimulation (symcl (Rel\\<^sup>=)) CWB\"\n    and \"strong_barbed_bisimulation (Rel\\<^sup>*) CWB\"\n    and \"strong_barbed_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) CWB\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((strong_reduction_simulation (Rel\\<^sup>=) (Calculus CWB) \\<and>\n      (\\<forall>P Q Q'.\n          (P, Q) \\<in> Rel\\<^sup>= \\<and>\n          Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n          (\\<exists>P'.\n              P \\<longmapsto>Calculus CWB P' \\<and>\n              (P', Q') \\<in> Rel\\<^sup>=))) \\<and>\n     rel_respects_binary_pred (Rel\\<^sup>=) (\\<lambda>a. hasBarb a CWB) &&&\n     (strong_reduction_simulation (symcl Rel) (Calculus CWB) \\<and>\n      (\\<forall>P Q Q'.\n          (P, Q) \\<in> symcl Rel \\<and>\n          Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n          (\\<exists>P'.\n              P \\<longmapsto>Calculus CWB P' \\<and>\n              (P', Q') \\<in> symcl Rel))) \\<and>\n     rel_respects_binary_pred (symcl Rel) (\\<lambda>a. hasBarb a CWB) &&&\n     (strong_reduction_simulation (Rel\\<^sup>+) (Calculus CWB) \\<and>\n      (\\<forall>P Q Q'.\n          (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n          Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n          (\\<exists>P'.\n              P \\<longmapsto>Calculus CWB P' \\<and>\n              (P', Q') \\<in> Rel\\<^sup>+))) \\<and>\n     rel_respects_binary_pred (Rel\\<^sup>+) (\\<lambda>a. hasBarb a CWB)) &&&\n    (strong_reduction_simulation (symcl (Rel\\<^sup>=)) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> symcl (Rel\\<^sup>=) \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> symcl (Rel\\<^sup>=)))) \\<and>\n    rel_respects_binary_pred (symcl (Rel\\<^sup>=))\n     (\\<lambda>a. hasBarb a CWB) &&&\n    (strong_reduction_simulation (Rel\\<^sup>*) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel\\<^sup>* \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel\\<^sup>*))) \\<and>\n    rel_respects_binary_pred (Rel\\<^sup>*) (\\<lambda>a. hasBarb a CWB) &&&\n    (strong_reduction_simulation ((symcl (Rel\\<^sup>=))\\<^sup>+)\n      (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+ \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+))) \\<and>\n    rel_respects_binary_pred ((symcl (Rel\\<^sup>=))\\<^sup>+)\n     (\\<lambda>a. hasBarb a CWB)", "proof -"], ["proof (state)\ngoal (6 subgoals):\n 1. (strong_reduction_simulation (Rel\\<^sup>=) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel\\<^sup>= \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel\\<^sup>=))) \\<and>\n    rel_respects_binary_pred (Rel\\<^sup>=) (\\<lambda>a. hasBarb a CWB)\n 2. (strong_reduction_simulation (symcl Rel) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> symcl Rel \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> symcl Rel))) \\<and>\n    rel_respects_binary_pred (symcl Rel) (\\<lambda>a. hasBarb a CWB)\n 3. (strong_reduction_simulation (Rel\\<^sup>+) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel\\<^sup>+))) \\<and>\n    rel_respects_binary_pred (Rel\\<^sup>+) (\\<lambda>a. hasBarb a CWB)\n 4. (strong_reduction_simulation (symcl (Rel\\<^sup>=)) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> symcl (Rel\\<^sup>=) \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> symcl (Rel\\<^sup>=)))) \\<and>\n    rel_respects_binary_pred (symcl (Rel\\<^sup>=))\n     (\\<lambda>a. hasBarb a CWB)\n 5. (strong_reduction_simulation (Rel\\<^sup>*) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel\\<^sup>* \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel\\<^sup>*))) \\<and>\n    rel_respects_binary_pred (Rel\\<^sup>*) (\\<lambda>a. hasBarb a CWB)\n 6. (strong_reduction_simulation ((symcl (Rel\\<^sup>=))\\<^sup>+)\n      (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+ \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+))) \\<and>\n    rel_respects_binary_pred ((symcl (Rel\\<^sup>=))\\<^sup>+)\n     (\\<lambda>a. hasBarb a CWB)", "from bisim"], ["proof (chain)\npicking this:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)", "show \"strong_barbed_bisimulation (Rel\\<^sup>=) CWB\""], ["proof (prove)\nusing this:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n\ngoal (1 subgoal):\n 1. (strong_reduction_simulation (Rel\\<^sup>=) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel\\<^sup>= \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel\\<^sup>=))) \\<and>\n    rel_respects_binary_pred (Rel\\<^sup>=) (\\<lambda>a. hasBarb a CWB)", "using strong_reduction_bisimulation_and_closures(1)[where Rel=\"Rel\" and Cal=\"Calculus CWB\"]\n            respection_of_barbs_and_closures(1)[where Rel=\"Rel\" and CWB=\"CWB\"]"], ["proof (prove)\nusing this:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and>\n      Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Calculus CWB P' \\<and>\n          (P', Q') \\<in> Rel)) \\<Longrightarrow>\n  strong_reduction_simulation (Rel\\<^sup>=) (Calculus CWB) \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel\\<^sup>= \\<and>\n      Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Calculus CWB P' \\<and> (P', Q') \\<in> Rel\\<^sup>=))\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n  rel_respects_binary_pred (Rel\\<^sup>=) (\\<lambda>a. hasBarb a CWB)\n\ngoal (1 subgoal):\n 1. (strong_reduction_simulation (Rel\\<^sup>=) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel\\<^sup>= \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel\\<^sup>=))) \\<and>\n    rel_respects_binary_pred (Rel\\<^sup>=) (\\<lambda>a. hasBarb a CWB)", "by fast"], ["proof (state)\nthis:\n  (strong_reduction_simulation (Rel\\<^sup>=) (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel\\<^sup>= \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel\\<^sup>=))) \\<and>\n  rel_respects_binary_pred (Rel\\<^sup>=) (\\<lambda>a. hasBarb a CWB)\n\ngoal (5 subgoals):\n 1. (strong_reduction_simulation (symcl Rel) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> symcl Rel \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> symcl Rel))) \\<and>\n    rel_respects_binary_pred (symcl Rel) (\\<lambda>a. hasBarb a CWB)\n 2. (strong_reduction_simulation (Rel\\<^sup>+) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel\\<^sup>+))) \\<and>\n    rel_respects_binary_pred (Rel\\<^sup>+) (\\<lambda>a. hasBarb a CWB)\n 3. (strong_reduction_simulation (symcl (Rel\\<^sup>=)) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> symcl (Rel\\<^sup>=) \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> symcl (Rel\\<^sup>=)))) \\<and>\n    rel_respects_binary_pred (symcl (Rel\\<^sup>=))\n     (\\<lambda>a. hasBarb a CWB)\n 4. (strong_reduction_simulation (Rel\\<^sup>*) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel\\<^sup>* \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel\\<^sup>*))) \\<and>\n    rel_respects_binary_pred (Rel\\<^sup>*) (\\<lambda>a. hasBarb a CWB)\n 5. (strong_reduction_simulation ((symcl (Rel\\<^sup>=))\\<^sup>+)\n      (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+ \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+))) \\<and>\n    rel_respects_binary_pred ((symcl (Rel\\<^sup>=))\\<^sup>+)\n     (\\<lambda>a. hasBarb a CWB)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. (strong_reduction_simulation (symcl Rel) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> symcl Rel \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> symcl Rel))) \\<and>\n    rel_respects_binary_pred (symcl Rel) (\\<lambda>a. hasBarb a CWB)\n 2. (strong_reduction_simulation (Rel\\<^sup>+) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel\\<^sup>+))) \\<and>\n    rel_respects_binary_pred (Rel\\<^sup>+) (\\<lambda>a. hasBarb a CWB)\n 3. (strong_reduction_simulation (symcl (Rel\\<^sup>=)) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> symcl (Rel\\<^sup>=) \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> symcl (Rel\\<^sup>=)))) \\<and>\n    rel_respects_binary_pred (symcl (Rel\\<^sup>=))\n     (\\<lambda>a. hasBarb a CWB)\n 4. (strong_reduction_simulation (Rel\\<^sup>*) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel\\<^sup>* \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel\\<^sup>*))) \\<and>\n    rel_respects_binary_pred (Rel\\<^sup>*) (\\<lambda>a. hasBarb a CWB)\n 5. (strong_reduction_simulation ((symcl (Rel\\<^sup>=))\\<^sup>+)\n      (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+ \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+))) \\<and>\n    rel_respects_binary_pred ((symcl (Rel\\<^sup>=))\\<^sup>+)\n     (\\<lambda>a. hasBarb a CWB)", "from bisim"], ["proof (chain)\npicking this:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)", "show \"strong_barbed_bisimulation (symcl Rel) CWB\""], ["proof (prove)\nusing this:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n\ngoal (1 subgoal):\n 1. (strong_reduction_simulation (symcl Rel) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> symcl Rel \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> symcl Rel))) \\<and>\n    rel_respects_binary_pred (symcl Rel) (\\<lambda>a. hasBarb a CWB)", "using strong_reduction_bisimulation_and_closures(2)[where Rel=\"Rel\" and Cal=\"Calculus CWB\"]\n            respection_of_barbs_and_closures(2)[where Rel=\"Rel\" and CWB=\"CWB\"]"], ["proof (prove)\nusing this:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and>\n      Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Calculus CWB P' \\<and>\n          (P', Q') \\<in> Rel)) \\<Longrightarrow>\n  strong_reduction_simulation (symcl Rel) (Calculus CWB) \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> symcl Rel \\<and>\n      Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Calculus CWB P' \\<and> (P', Q') \\<in> symcl Rel))\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n  rel_respects_binary_pred (symcl Rel) (\\<lambda>a. hasBarb a CWB)\n\ngoal (1 subgoal):\n 1. (strong_reduction_simulation (symcl Rel) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> symcl Rel \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> symcl Rel))) \\<and>\n    rel_respects_binary_pred (symcl Rel) (\\<lambda>a. hasBarb a CWB)", "by blast"], ["proof (state)\nthis:\n  (strong_reduction_simulation (symcl Rel) (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> symcl Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> symcl Rel))) \\<and>\n  rel_respects_binary_pred (symcl Rel) (\\<lambda>a. hasBarb a CWB)\n\ngoal (4 subgoals):\n 1. (strong_reduction_simulation (Rel\\<^sup>+) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel\\<^sup>+))) \\<and>\n    rel_respects_binary_pred (Rel\\<^sup>+) (\\<lambda>a. hasBarb a CWB)\n 2. (strong_reduction_simulation (symcl (Rel\\<^sup>=)) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> symcl (Rel\\<^sup>=) \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> symcl (Rel\\<^sup>=)))) \\<and>\n    rel_respects_binary_pred (symcl (Rel\\<^sup>=))\n     (\\<lambda>a. hasBarb a CWB)\n 3. (strong_reduction_simulation (Rel\\<^sup>*) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel\\<^sup>* \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel\\<^sup>*))) \\<and>\n    rel_respects_binary_pred (Rel\\<^sup>*) (\\<lambda>a. hasBarb a CWB)\n 4. (strong_reduction_simulation ((symcl (Rel\\<^sup>=))\\<^sup>+)\n      (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+ \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+))) \\<and>\n    rel_respects_binary_pred ((symcl (Rel\\<^sup>=))\\<^sup>+)\n     (\\<lambda>a. hasBarb a CWB)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. (strong_reduction_simulation (Rel\\<^sup>+) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel\\<^sup>+))) \\<and>\n    rel_respects_binary_pred (Rel\\<^sup>+) (\\<lambda>a. hasBarb a CWB)\n 2. (strong_reduction_simulation (symcl (Rel\\<^sup>=)) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> symcl (Rel\\<^sup>=) \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> symcl (Rel\\<^sup>=)))) \\<and>\n    rel_respects_binary_pred (symcl (Rel\\<^sup>=))\n     (\\<lambda>a. hasBarb a CWB)\n 3. (strong_reduction_simulation (Rel\\<^sup>*) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel\\<^sup>* \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel\\<^sup>*))) \\<and>\n    rel_respects_binary_pred (Rel\\<^sup>*) (\\<lambda>a. hasBarb a CWB)\n 4. (strong_reduction_simulation ((symcl (Rel\\<^sup>=))\\<^sup>+)\n      (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+ \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+))) \\<and>\n    rel_respects_binary_pred ((symcl (Rel\\<^sup>=))\\<^sup>+)\n     (\\<lambda>a. hasBarb a CWB)", "from bisim"], ["proof (chain)\npicking this:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)", "show \"strong_barbed_bisimulation (Rel\\<^sup>+) CWB\""], ["proof (prove)\nusing this:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n\ngoal (1 subgoal):\n 1. (strong_reduction_simulation (Rel\\<^sup>+) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel\\<^sup>+))) \\<and>\n    rel_respects_binary_pred (Rel\\<^sup>+) (\\<lambda>a. hasBarb a CWB)", "using strong_reduction_bisimulation_and_closures(3)[where Rel=\"Rel\" and Cal=\"Calculus CWB\"]\n            respection_of_barbs_and_closures(3)[where Rel=\"Rel\" and CWB=\"CWB\"]"], ["proof (prove)\nusing this:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and>\n      Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Calculus CWB P' \\<and>\n          (P', Q') \\<in> Rel)) \\<Longrightarrow>\n  strong_reduction_simulation (Rel\\<^sup>+) (Calculus CWB) \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n      Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Calculus CWB P' \\<and> (P', Q') \\<in> Rel\\<^sup>+))\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n  rel_respects_binary_pred (Rel\\<^sup>+) (\\<lambda>a. hasBarb a CWB)\n\ngoal (1 subgoal):\n 1. (strong_reduction_simulation (Rel\\<^sup>+) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel\\<^sup>+))) \\<and>\n    rel_respects_binary_pred (Rel\\<^sup>+) (\\<lambda>a. hasBarb a CWB)", "by blast"], ["proof (state)\nthis:\n  (strong_reduction_simulation (Rel\\<^sup>+) (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel\\<^sup>+ \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel\\<^sup>+))) \\<and>\n  rel_respects_binary_pred (Rel\\<^sup>+) (\\<lambda>a. hasBarb a CWB)\n\ngoal (3 subgoals):\n 1. (strong_reduction_simulation (symcl (Rel\\<^sup>=)) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> symcl (Rel\\<^sup>=) \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> symcl (Rel\\<^sup>=)))) \\<and>\n    rel_respects_binary_pred (symcl (Rel\\<^sup>=))\n     (\\<lambda>a. hasBarb a CWB)\n 2. (strong_reduction_simulation (Rel\\<^sup>*) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel\\<^sup>* \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel\\<^sup>*))) \\<and>\n    rel_respects_binary_pred (Rel\\<^sup>*) (\\<lambda>a. hasBarb a CWB)\n 3. (strong_reduction_simulation ((symcl (Rel\\<^sup>=))\\<^sup>+)\n      (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+ \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+))) \\<and>\n    rel_respects_binary_pred ((symcl (Rel\\<^sup>=))\\<^sup>+)\n     (\\<lambda>a. hasBarb a CWB)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. (strong_reduction_simulation (symcl (Rel\\<^sup>=)) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> symcl (Rel\\<^sup>=) \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> symcl (Rel\\<^sup>=)))) \\<and>\n    rel_respects_binary_pred (symcl (Rel\\<^sup>=))\n     (\\<lambda>a. hasBarb a CWB)\n 2. (strong_reduction_simulation (Rel\\<^sup>*) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel\\<^sup>* \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel\\<^sup>*))) \\<and>\n    rel_respects_binary_pred (Rel\\<^sup>*) (\\<lambda>a. hasBarb a CWB)\n 3. (strong_reduction_simulation ((symcl (Rel\\<^sup>=))\\<^sup>+)\n      (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+ \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+))) \\<and>\n    rel_respects_binary_pred ((symcl (Rel\\<^sup>=))\\<^sup>+)\n     (\\<lambda>a. hasBarb a CWB)", "from bisim"], ["proof (chain)\npicking this:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)", "show \"strong_barbed_bisimulation (symcl (Rel\\<^sup>=)) CWB\""], ["proof (prove)\nusing this:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n\ngoal (1 subgoal):\n 1. (strong_reduction_simulation (symcl (Rel\\<^sup>=)) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> symcl (Rel\\<^sup>=) \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> symcl (Rel\\<^sup>=)))) \\<and>\n    rel_respects_binary_pred (symcl (Rel\\<^sup>=))\n     (\\<lambda>a. hasBarb a CWB)", "using strong_reduction_bisimulation_and_closures(4)[where Rel=\"Rel\" and Cal=\"Calculus CWB\"]\n            respection_of_barbs_and_closures(4)[where Rel=\"Rel\" and CWB=\"CWB\"]"], ["proof (prove)\nusing this:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and>\n      Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Calculus CWB P' \\<and>\n          (P', Q') \\<in> Rel)) \\<Longrightarrow>\n  strong_reduction_simulation (symcl (Rel\\<^sup>=)) (Calculus CWB) \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> symcl (Rel\\<^sup>=) \\<and>\n      Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Calculus CWB P' \\<and>\n          (P', Q') \\<in> symcl (Rel\\<^sup>=)))\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n  rel_respects_binary_pred (symcl (Rel\\<^sup>=)) (\\<lambda>a. hasBarb a CWB)\n\ngoal (1 subgoal):\n 1. (strong_reduction_simulation (symcl (Rel\\<^sup>=)) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> symcl (Rel\\<^sup>=) \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> symcl (Rel\\<^sup>=)))) \\<and>\n    rel_respects_binary_pred (symcl (Rel\\<^sup>=))\n     (\\<lambda>a. hasBarb a CWB)", "by blast"], ["proof (state)\nthis:\n  (strong_reduction_simulation (symcl (Rel\\<^sup>=)) (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> symcl (Rel\\<^sup>=) \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> symcl (Rel\\<^sup>=)))) \\<and>\n  rel_respects_binary_pred (symcl (Rel\\<^sup>=)) (\\<lambda>a. hasBarb a CWB)\n\ngoal (2 subgoals):\n 1. (strong_reduction_simulation (Rel\\<^sup>*) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel\\<^sup>* \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel\\<^sup>*))) \\<and>\n    rel_respects_binary_pred (Rel\\<^sup>*) (\\<lambda>a. hasBarb a CWB)\n 2. (strong_reduction_simulation ((symcl (Rel\\<^sup>=))\\<^sup>+)\n      (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+ \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+))) \\<and>\n    rel_respects_binary_pred ((symcl (Rel\\<^sup>=))\\<^sup>+)\n     (\\<lambda>a. hasBarb a CWB)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. (strong_reduction_simulation (Rel\\<^sup>*) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel\\<^sup>* \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel\\<^sup>*))) \\<and>\n    rel_respects_binary_pred (Rel\\<^sup>*) (\\<lambda>a. hasBarb a CWB)\n 2. (strong_reduction_simulation ((symcl (Rel\\<^sup>=))\\<^sup>+)\n      (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+ \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+))) \\<and>\n    rel_respects_binary_pred ((symcl (Rel\\<^sup>=))\\<^sup>+)\n     (\\<lambda>a. hasBarb a CWB)", "from bisim"], ["proof (chain)\npicking this:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)", "show \"strong_barbed_bisimulation (Rel\\<^sup>*) CWB\""], ["proof (prove)\nusing this:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n\ngoal (1 subgoal):\n 1. (strong_reduction_simulation (Rel\\<^sup>*) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel\\<^sup>* \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel\\<^sup>*))) \\<and>\n    rel_respects_binary_pred (Rel\\<^sup>*) (\\<lambda>a. hasBarb a CWB)", "using strong_reduction_bisimulation_and_closures(5)[where Rel=\"Rel\" and Cal=\"Calculus CWB\"]\n            respection_of_barbs_and_closures(5)[where Rel=\"Rel\" and CWB=\"CWB\"]"], ["proof (prove)\nusing this:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and>\n      Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Calculus CWB P' \\<and>\n          (P', Q') \\<in> Rel)) \\<Longrightarrow>\n  strong_reduction_simulation (Rel\\<^sup>*) (Calculus CWB) \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel\\<^sup>* \\<and>\n      Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Calculus CWB P' \\<and> (P', Q') \\<in> Rel\\<^sup>*))\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n  rel_respects_binary_pred (Rel\\<^sup>*) (\\<lambda>a. hasBarb a CWB)\n\ngoal (1 subgoal):\n 1. (strong_reduction_simulation (Rel\\<^sup>*) (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> Rel\\<^sup>* \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> Rel\\<^sup>*))) \\<and>\n    rel_respects_binary_pred (Rel\\<^sup>*) (\\<lambda>a. hasBarb a CWB)", "by blast"], ["proof (state)\nthis:\n  (strong_reduction_simulation (Rel\\<^sup>*) (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel\\<^sup>* \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel\\<^sup>*))) \\<and>\n  rel_respects_binary_pred (Rel\\<^sup>*) (\\<lambda>a. hasBarb a CWB)\n\ngoal (1 subgoal):\n 1. (strong_reduction_simulation ((symcl (Rel\\<^sup>=))\\<^sup>+)\n      (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+ \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+))) \\<and>\n    rel_respects_binary_pred ((symcl (Rel\\<^sup>=))\\<^sup>+)\n     (\\<lambda>a. hasBarb a CWB)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (strong_reduction_simulation ((symcl (Rel\\<^sup>=))\\<^sup>+)\n      (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+ \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+))) \\<and>\n    rel_respects_binary_pred ((symcl (Rel\\<^sup>=))\\<^sup>+)\n     (\\<lambda>a. hasBarb a CWB)", "from bisim"], ["proof (chain)\npicking this:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)", "show \"strong_barbed_bisimulation ((symcl (Rel\\<^sup>=))\\<^sup>+) CWB\""], ["proof (prove)\nusing this:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n\ngoal (1 subgoal):\n 1. (strong_reduction_simulation ((symcl (Rel\\<^sup>=))\\<^sup>+)\n      (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+ \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+))) \\<and>\n    rel_respects_binary_pred ((symcl (Rel\\<^sup>=))\\<^sup>+)\n     (\\<lambda>a. hasBarb a CWB)", "using strong_reduction_bisimulation_and_closures(6)[where Rel=\"Rel\" and Cal=\"Calculus CWB\"]\n            respection_of_barbs_and_closures(6)[where Rel=\"Rel\" and CWB=\"CWB\"]"], ["proof (prove)\nusing this:\n  (strong_reduction_simulation Rel (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> Rel \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> Rel))) \\<and>\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB)\n  strong_reduction_simulation Rel (Calculus CWB) \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> Rel \\<and>\n      Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Calculus CWB P' \\<and>\n          (P', Q') \\<in> Rel)) \\<Longrightarrow>\n  strong_reduction_simulation ((symcl (Rel\\<^sup>=))\\<^sup>+)\n   (Calculus CWB) \\<and>\n  (\\<forall>P Q Q'.\n      (P, Q) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+ \\<and>\n      Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n      (\\<exists>P'.\n          P \\<longmapsto>Calculus CWB P' \\<and>\n          (P', Q') \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+))\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a CWB) \\<Longrightarrow>\n  rel_respects_binary_pred ((symcl (Rel\\<^sup>=))\\<^sup>+)\n   (\\<lambda>a. hasBarb a CWB)\n\ngoal (1 subgoal):\n 1. (strong_reduction_simulation ((symcl (Rel\\<^sup>=))\\<^sup>+)\n      (Calculus CWB) \\<and>\n     (\\<forall>P Q Q'.\n         (P, Q) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+ \\<and>\n         Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n         (\\<exists>P'.\n             P \\<longmapsto>Calculus CWB P' \\<and>\n             (P', Q') \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+))) \\<and>\n    rel_respects_binary_pred ((symcl (Rel\\<^sup>=))\\<^sup>+)\n     (\\<lambda>a. hasBarb a CWB)", "by blast"], ["proof (state)\nthis:\n  (strong_reduction_simulation ((symcl (Rel\\<^sup>=))\\<^sup>+)\n    (Calculus CWB) \\<and>\n   (\\<forall>P Q Q'.\n       (P, Q) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+ \\<and>\n       Q \\<longmapsto>Calculus CWB Q' \\<longrightarrow>\n       (\\<exists>P'.\n           P \\<longmapsto>Calculus CWB P' \\<and>\n           (P', Q') \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+))) \\<and>\n  rel_respects_binary_pred ((symcl (Rel\\<^sup>=))\\<^sup>+)\n   (\\<lambda>a. hasBarb a CWB)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Step Closure of Relations\\<close>"], ["", "text \\<open>The step closure of a relation on process terms is the transitive closure of the union of\n        the relation and the inverse of the reduction relation of the respective calculus.\\<close>"], ["", "inductive_set stepsClosure :: \"('a \\<times> 'a) set \\<Rightarrow> 'a processCalculus \\<Rightarrow> ('a \\<times> 'a) set\"\n    for Rel :: \"('a \\<times> 'a) set\"\n    and Cal :: \"'a processCalculus\"\n  where\n  rel:   \"(P, Q) \\<in> Rel \\<Longrightarrow> (P, Q) \\<in> stepsClosure Rel Cal\" |\n  steps: \"P \\<longmapsto>Cal* P' \\<Longrightarrow> (P', P) \\<in> stepsClosure Rel Cal\" |\n  trans: \"\\<lbrakk>(P, Q) \\<in> stepsClosure Rel Cal; (Q, R) \\<in> stepsClosure Rel Cal\\<rbrakk>\n          \\<Longrightarrow> (P, R) \\<in> stepsClosure Rel Cal\""], ["", "abbreviation stepsClosureInfix ::\n    \"'a \\<Rightarrow> ('a \\<times> 'a) set \\<Rightarrow> 'a processCalculus \\<Rightarrow> 'a \\<Rightarrow> bool\" (\"_ \\<R>\\<mapsto><_,_> _\" [75, 75, 75, 75] 80)\n  where\n  \"P \\<R>\\<mapsto><Rel,Cal> Q \\<equiv> (P, Q) \\<in> stepsClosure Rel Cal\""], ["", "text \\<open>Applying the steps closure twice does not change the relation.\\<close>"], ["", "lemma steps_closure_of_steps_closure:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n    and Cal :: \"'a processCalculus\"\n  shows \"stepsClosure (stepsClosure Rel Cal) Cal = stepsClosure Rel Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stepsClosure (stepsClosure Rel Cal) Cal = stepsClosure Rel Cal", "proof auto"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       a \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> b \\<Longrightarrow>\n       a \\<R>\\<mapsto><Rel,Cal> b\n 2. \\<And>a b.\n       a \\<R>\\<mapsto><Rel,Cal> b \\<Longrightarrow>\n       a \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> b", "fix P Q"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       a \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> b \\<Longrightarrow>\n       a \\<R>\\<mapsto><Rel,Cal> b\n 2. \\<And>a b.\n       a \\<R>\\<mapsto><Rel,Cal> b \\<Longrightarrow>\n       a \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> b", "assume \"P \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> Q\""], ["proof (state)\nthis:\n  P \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> Q\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       a \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> b \\<Longrightarrow>\n       a \\<R>\\<mapsto><Rel,Cal> b\n 2. \\<And>a b.\n       a \\<R>\\<mapsto><Rel,Cal> b \\<Longrightarrow>\n       a \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> b", "thus \"P \\<R>\\<mapsto><Rel,Cal> Q\""], ["proof (prove)\nusing this:\n  P \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> Q\n\ngoal (1 subgoal):\n 1. P \\<R>\\<mapsto><Rel,Cal> Q", "proof induct"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>P Q.\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<Longrightarrow>\n       P \\<R>\\<mapsto><Rel,Cal> Q\n 2. \\<And>P P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow> P' \\<R>\\<mapsto><Rel,Cal> P\n 3. \\<And>P Q R.\n       P \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> Q \\<and>\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       Q \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> R \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<Longrightarrow>\n       P \\<R>\\<mapsto><Rel,Cal> R", "case (rel P Q)"], ["proof (state)\nthis:\n  P \\<R>\\<mapsto><Rel,Cal> Q\n\ngoal (3 subgoals):\n 1. \\<And>P Q.\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<Longrightarrow>\n       P \\<R>\\<mapsto><Rel,Cal> Q\n 2. \\<And>P P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow> P' \\<R>\\<mapsto><Rel,Cal> P\n 3. \\<And>P Q R.\n       P \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> Q \\<and>\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       Q \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> R \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<Longrightarrow>\n       P \\<R>\\<mapsto><Rel,Cal> R", "assume \"P \\<R>\\<mapsto><Rel,Cal> Q\""], ["proof (state)\nthis:\n  P \\<R>\\<mapsto><Rel,Cal> Q\n\ngoal (3 subgoals):\n 1. \\<And>P Q.\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<Longrightarrow>\n       P \\<R>\\<mapsto><Rel,Cal> Q\n 2. \\<And>P P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow> P' \\<R>\\<mapsto><Rel,Cal> P\n 3. \\<And>P Q R.\n       P \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> Q \\<and>\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       Q \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> R \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<Longrightarrow>\n       P \\<R>\\<mapsto><Rel,Cal> R", "thus \"P \\<R>\\<mapsto><Rel,Cal> Q\""], ["proof (prove)\nusing this:\n  P \\<R>\\<mapsto><Rel,Cal> Q\n\ngoal (1 subgoal):\n 1. P \\<R>\\<mapsto><Rel,Cal> Q", "by simp"], ["proof (state)\nthis:\n  P \\<R>\\<mapsto><Rel,Cal> Q\n\ngoal (2 subgoals):\n 1. \\<And>P P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow> P' \\<R>\\<mapsto><Rel,Cal> P\n 2. \\<And>P Q R.\n       P \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> Q \\<and>\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       Q \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> R \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<Longrightarrow>\n       P \\<R>\\<mapsto><Rel,Cal> R", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow> P' \\<R>\\<mapsto><Rel,Cal> P\n 2. \\<And>P Q R.\n       P \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> Q \\<and>\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       Q \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> R \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<Longrightarrow>\n       P \\<R>\\<mapsto><Rel,Cal> R", "case (steps P P')"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P'\n\ngoal (2 subgoals):\n 1. \\<And>P P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow> P' \\<R>\\<mapsto><Rel,Cal> P\n 2. \\<And>P Q R.\n       P \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> Q \\<and>\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       Q \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> R \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<Longrightarrow>\n       P \\<R>\\<mapsto><Rel,Cal> R", "assume \"P \\<longmapsto>Cal* P'\""], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P'\n\ngoal (2 subgoals):\n 1. \\<And>P P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow> P' \\<R>\\<mapsto><Rel,Cal> P\n 2. \\<And>P Q R.\n       P \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> Q \\<and>\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       Q \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> R \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<Longrightarrow>\n       P \\<R>\\<mapsto><Rel,Cal> R", "thus \"P' \\<R>\\<mapsto><Rel,Cal> P\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. P' \\<R>\\<mapsto><Rel,Cal> P", "by (rule stepsClosure.steps)"], ["proof (state)\nthis:\n  P' \\<R>\\<mapsto><Rel,Cal> P\n\ngoal (1 subgoal):\n 1. \\<And>P Q R.\n       P \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> Q \\<and>\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       Q \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> R \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<Longrightarrow>\n       P \\<R>\\<mapsto><Rel,Cal> R", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q R.\n       P \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> Q \\<and>\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       Q \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> R \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<Longrightarrow>\n       P \\<R>\\<mapsto><Rel,Cal> R", "case (trans P Q R)"], ["proof (state)\nthis:\n  P \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> Q\n  P \\<R>\\<mapsto><Rel,Cal> Q\n  Q \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> R\n  Q \\<R>\\<mapsto><Rel,Cal> R\n\ngoal (1 subgoal):\n 1. \\<And>P Q R.\n       P \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> Q \\<and>\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       Q \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> R \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<Longrightarrow>\n       P \\<R>\\<mapsto><Rel,Cal> R", "assume \"P \\<R>\\<mapsto><Rel,Cal> Q\" and \"Q \\<R>\\<mapsto><Rel,Cal> R\""], ["proof (state)\nthis:\n  P \\<R>\\<mapsto><Rel,Cal> Q\n  Q \\<R>\\<mapsto><Rel,Cal> R\n\ngoal (1 subgoal):\n 1. \\<And>P Q R.\n       P \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> Q \\<and>\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       Q \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> R \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<Longrightarrow>\n       P \\<R>\\<mapsto><Rel,Cal> R", "thus \"P \\<R>\\<mapsto><Rel,Cal> R\""], ["proof (prove)\nusing this:\n  P \\<R>\\<mapsto><Rel,Cal> Q\n  Q \\<R>\\<mapsto><Rel,Cal> R\n\ngoal (1 subgoal):\n 1. P \\<R>\\<mapsto><Rel,Cal> R", "by (rule stepsClosure.trans)"], ["proof (state)\nthis:\n  P \\<R>\\<mapsto><Rel,Cal> R\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<R>\\<mapsto><Rel,Cal> Q\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       a \\<R>\\<mapsto><Rel,Cal> b \\<Longrightarrow>\n       a \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> b", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       a \\<R>\\<mapsto><Rel,Cal> b \\<Longrightarrow>\n       a \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> b", "fix P Q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       a \\<R>\\<mapsto><Rel,Cal> b \\<Longrightarrow>\n       a \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> b", "assume \"P \\<R>\\<mapsto><Rel,Cal> Q\""], ["proof (state)\nthis:\n  P \\<R>\\<mapsto><Rel,Cal> Q\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       a \\<R>\\<mapsto><Rel,Cal> b \\<Longrightarrow>\n       a \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> b", "thus \"P \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> Q\""], ["proof (prove)\nusing this:\n  P \\<R>\\<mapsto><Rel,Cal> Q\n\ngoal (1 subgoal):\n 1. P \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> Q", "by (rule stepsClosure.rel)"], ["proof (state)\nthis:\n  P \\<R>\\<mapsto><stepsClosure Rel Cal,Cal> Q\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The steps closure is a preorder.\\<close>"], ["", "lemma stepsClosure_refl:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n    and Cal :: \"'a processCalculus\"\n  shows \"refl (stepsClosure Rel Cal)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. refl (stepsClosure Rel Cal)", "unfolding refl_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. stepsClosure Rel Cal \\<subseteq> UNIV \\<times> UNIV \\<and>\n    (\\<forall>x\\<in>UNIV. x \\<R>\\<mapsto><Rel,Cal> x)", "proof auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<R>\\<mapsto><Rel,Cal> x", "fix P"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<R>\\<mapsto><Rel,Cal> x", "have \"P \\<longmapsto>Cal* P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<longmapsto>Cal* P", "by (rule steps_refl)"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<R>\\<mapsto><Rel,Cal> x", "thus \"P \\<R>\\<mapsto><Rel,Cal> P\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal* P\n\ngoal (1 subgoal):\n 1. P \\<R>\\<mapsto><Rel,Cal> P", "by (rule stepsClosure.steps)"], ["proof (state)\nthis:\n  P \\<R>\\<mapsto><Rel,Cal> P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma refl_trans_closure_of_rel_impl_steps_closure:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n    and Cal :: \"'a processCalculus\"\n    and P Q :: \"'a\"\n  assumes \"(P, Q) \\<in> Rel\\<^sup>*\"\n  shows \"P \\<R>\\<mapsto><Rel,Cal> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<R>\\<mapsto><Rel,Cal> Q", "using assms"], ["proof (prove)\nusing this:\n  (P, Q) \\<in> Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. P \\<R>\\<mapsto><Rel,Cal> Q", "proof induct"], ["proof (state)\ngoal (2 subgoals):\n 1. P \\<R>\\<mapsto><Rel,Cal> P\n 2. \\<And>y z.\n       (P, y) \\<in> Rel\\<^sup>* \\<and>\n       (y, z) \\<in> Rel \\<and> P \\<R>\\<mapsto><Rel,Cal> y \\<Longrightarrow>\n       P \\<R>\\<mapsto><Rel,Cal> z", "show \"P \\<R>\\<mapsto><Rel,Cal> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<R>\\<mapsto><Rel,Cal> P", "using stepsClosure_refl[of Rel Cal]"], ["proof (prove)\nusing this:\n  refl (stepsClosure Rel Cal)\n\ngoal (1 subgoal):\n 1. P \\<R>\\<mapsto><Rel,Cal> P", "unfolding refl_on_def"], ["proof (prove)\nusing this:\n  stepsClosure Rel Cal \\<subseteq> UNIV \\<times> UNIV \\<and>\n  (\\<forall>x\\<in>UNIV. x \\<R>\\<mapsto><Rel,Cal> x)\n\ngoal (1 subgoal):\n 1. P \\<R>\\<mapsto><Rel,Cal> P", "by simp"], ["proof (state)\nthis:\n  P \\<R>\\<mapsto><Rel,Cal> P\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       (P, y) \\<in> Rel\\<^sup>* \\<and>\n       (y, z) \\<in> Rel \\<and> P \\<R>\\<mapsto><Rel,Cal> y \\<Longrightarrow>\n       P \\<R>\\<mapsto><Rel,Cal> z", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       (P, y) \\<in> Rel\\<^sup>* \\<and>\n       (y, z) \\<in> Rel \\<and> P \\<R>\\<mapsto><Rel,Cal> y \\<Longrightarrow>\n       P \\<R>\\<mapsto><Rel,Cal> z", "case (step Q R)"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\\<^sup>*\n  (Q, R) \\<in> Rel\n  P \\<R>\\<mapsto><Rel,Cal> Q\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       (P, y) \\<in> Rel\\<^sup>* \\<and>\n       (y, z) \\<in> Rel \\<and> P \\<R>\\<mapsto><Rel,Cal> y \\<Longrightarrow>\n       P \\<R>\\<mapsto><Rel,Cal> z", "assume \"(Q, R) \\<in> Rel\" and \"P \\<R>\\<mapsto><Rel,Cal> Q\""], ["proof (state)\nthis:\n  (Q, R) \\<in> Rel\n  P \\<R>\\<mapsto><Rel,Cal> Q\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       (P, y) \\<in> Rel\\<^sup>* \\<and>\n       (y, z) \\<in> Rel \\<and> P \\<R>\\<mapsto><Rel,Cal> y \\<Longrightarrow>\n       P \\<R>\\<mapsto><Rel,Cal> z", "thus \"P \\<R>\\<mapsto><Rel,Cal> R\""], ["proof (prove)\nusing this:\n  (Q, R) \\<in> Rel\n  P \\<R>\\<mapsto><Rel,Cal> Q\n\ngoal (1 subgoal):\n 1. P \\<R>\\<mapsto><Rel,Cal> R", "using stepsClosure.rel[of Q R Rel Cal] stepsClosure.trans[of P Q Rel Cal R]"], ["proof (prove)\nusing this:\n  (Q, R) \\<in> Rel\n  P \\<R>\\<mapsto><Rel,Cal> Q\n  (Q, R) \\<in> Rel \\<Longrightarrow> Q \\<R>\\<mapsto><Rel,Cal> R\n  P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n  Q \\<R>\\<mapsto><Rel,Cal> R \\<Longrightarrow>\n  P \\<R>\\<mapsto><Rel,Cal> R\n\ngoal (1 subgoal):\n 1. P \\<R>\\<mapsto><Rel,Cal> R", "by blast"], ["proof (state)\nthis:\n  P \\<R>\\<mapsto><Rel,Cal> R\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The steps closure of a relation is always a weak reduction simulation.\\<close>"], ["", "lemma steps_closure_is_weak_reduction_simulation:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n    and Cal :: \"'a processCalculus\"\n  shows \"weak_reduction_simulation (stepsClosure Rel Cal) Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_reduction_simulation (stepsClosure Rel Cal) Cal", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q P'.\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'.\n          Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q'", "fix P Q P'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q P'.\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'.\n          Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q'", "assume \"P \\<R>\\<mapsto><Rel,Cal> Q\" and \"P \\<longmapsto>Cal* P'\""], ["proof (state)\nthis:\n  P \\<R>\\<mapsto><Rel,Cal> Q\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. \\<And>P Q P'.\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'.\n          Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q'", "thus \"\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q'\""], ["proof (prove)\nusing this:\n  P \\<R>\\<mapsto><Rel,Cal> Q\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q'", "proof (induct arbitrary: P')"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>P Q P'.\n       (P, Q) \\<in> Rel \\<and> P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'.\n          Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q'\n 2. \\<And>P P' P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> P'a \\<R>\\<mapsto><Rel,Cal> Q'\n 3. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            P' \\<R>\\<mapsto><Rel,Cal> Q'", "case (rel P Q)"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n  P \\<longmapsto>Cal* P'\n\ngoal (3 subgoals):\n 1. \\<And>P Q P'.\n       (P, Q) \\<in> Rel \\<and> P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'.\n          Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q'\n 2. \\<And>P P' P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> P'a \\<R>\\<mapsto><Rel,Cal> Q'\n 3. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            P' \\<R>\\<mapsto><Rel,Cal> Q'", "assume \"P \\<longmapsto>Cal* P'\""], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P'\n\ngoal (3 subgoals):\n 1. \\<And>P Q P'.\n       (P, Q) \\<in> Rel \\<and> P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'.\n          Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q'\n 2. \\<And>P P' P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> P'a \\<R>\\<mapsto><Rel,Cal> Q'\n 3. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            P' \\<R>\\<mapsto><Rel,Cal> Q'", "hence \"P' \\<R>\\<mapsto><Rel,Cal> P\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. P' \\<R>\\<mapsto><Rel,Cal> P", "by (rule stepsClosure.steps)"], ["proof (state)\nthis:\n  P' \\<R>\\<mapsto><Rel,Cal> P\n\ngoal (3 subgoals):\n 1. \\<And>P Q P'.\n       (P, Q) \\<in> Rel \\<and> P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'.\n          Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q'\n 2. \\<And>P P' P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> P'a \\<R>\\<mapsto><Rel,Cal> Q'\n 3. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            P' \\<R>\\<mapsto><Rel,Cal> Q'", "moreover"], ["proof (state)\nthis:\n  P' \\<R>\\<mapsto><Rel,Cal> P\n\ngoal (3 subgoals):\n 1. \\<And>P Q P'.\n       (P, Q) \\<in> Rel \\<and> P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'.\n          Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q'\n 2. \\<And>P P' P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> P'a \\<R>\\<mapsto><Rel,Cal> Q'\n 3. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            P' \\<R>\\<mapsto><Rel,Cal> Q'", "assume \"(P, Q) \\<in> Rel\""], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n\ngoal (3 subgoals):\n 1. \\<And>P Q P'.\n       (P, Q) \\<in> Rel \\<and> P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'.\n          Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q'\n 2. \\<And>P P' P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> P'a \\<R>\\<mapsto><Rel,Cal> Q'\n 3. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            P' \\<R>\\<mapsto><Rel,Cal> Q'", "hence \"P \\<R>\\<mapsto><Rel,Cal> Q\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. P \\<R>\\<mapsto><Rel,Cal> Q", "by (simp add: stepsClosure.rel)"], ["proof (state)\nthis:\n  P \\<R>\\<mapsto><Rel,Cal> Q\n\ngoal (3 subgoals):\n 1. \\<And>P Q P'.\n       (P, Q) \\<in> Rel \\<and> P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'.\n          Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q'\n 2. \\<And>P P' P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> P'a \\<R>\\<mapsto><Rel,Cal> Q'\n 3. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            P' \\<R>\\<mapsto><Rel,Cal> Q'", "ultimately"], ["proof (chain)\npicking this:\n  P' \\<R>\\<mapsto><Rel,Cal> P\n  P \\<R>\\<mapsto><Rel,Cal> Q", "have \"P' \\<R>\\<mapsto><Rel,Cal> Q\""], ["proof (prove)\nusing this:\n  P' \\<R>\\<mapsto><Rel,Cal> P\n  P \\<R>\\<mapsto><Rel,Cal> Q\n\ngoal (1 subgoal):\n 1. P' \\<R>\\<mapsto><Rel,Cal> Q", "by (rule stepsClosure.trans)"], ["proof (state)\nthis:\n  P' \\<R>\\<mapsto><Rel,Cal> Q\n\ngoal (3 subgoals):\n 1. \\<And>P Q P'.\n       (P, Q) \\<in> Rel \\<and> P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'.\n          Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q'\n 2. \\<And>P P' P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> P'a \\<R>\\<mapsto><Rel,Cal> Q'\n 3. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            P' \\<R>\\<mapsto><Rel,Cal> Q'", "thus \"\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q'\""], ["proof (prove)\nusing this:\n  P' \\<R>\\<mapsto><Rel,Cal> Q\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q'", "using steps_refl[where Cal=\"Cal\" and P=\"Q\"]"], ["proof (prove)\nusing this:\n  P' \\<R>\\<mapsto><Rel,Cal> Q\n  Q \\<longmapsto>Cal* Q\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q'", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q'\n\ngoal (2 subgoals):\n 1. \\<And>P P' P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> P'a \\<R>\\<mapsto><Rel,Cal> Q'\n 2. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            P' \\<R>\\<mapsto><Rel,Cal> Q'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P P' P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> P'a \\<R>\\<mapsto><Rel,Cal> Q'\n 2. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            P' \\<R>\\<mapsto><Rel,Cal> Q'", "case (steps P P' P'')"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P'\n  P' \\<longmapsto>Cal* P''\n\ngoal (2 subgoals):\n 1. \\<And>P P' P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> P'a \\<R>\\<mapsto><Rel,Cal> Q'\n 2. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            P' \\<R>\\<mapsto><Rel,Cal> Q'", "assume \"P \\<longmapsto>Cal* P'\" and \"P' \\<longmapsto>Cal* P''\""], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P'\n  P' \\<longmapsto>Cal* P''\n\ngoal (2 subgoals):\n 1. \\<And>P P' P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> P'a \\<R>\\<mapsto><Rel,Cal> Q'\n 2. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            P' \\<R>\\<mapsto><Rel,Cal> Q'", "hence \"P \\<longmapsto>Cal* P''\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal* P'\n  P' \\<longmapsto>Cal* P''\n\ngoal (1 subgoal):\n 1. P \\<longmapsto>Cal* P''", "by (rule steps_add)"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P''\n\ngoal (2 subgoals):\n 1. \\<And>P P' P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> P'a \\<R>\\<mapsto><Rel,Cal> Q'\n 2. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            P' \\<R>\\<mapsto><Rel,Cal> Q'", "moreover"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P''\n\ngoal (2 subgoals):\n 1. \\<And>P P' P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> P'a \\<R>\\<mapsto><Rel,Cal> Q'\n 2. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            P' \\<R>\\<mapsto><Rel,Cal> Q'", "have \"P'' \\<R>\\<mapsto><Rel,Cal> P''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P'' \\<R>\\<mapsto><Rel,Cal> P''", "using stepsClosure_refl[where Rel=\"Rel\" and Cal=\"Cal\"]"], ["proof (prove)\nusing this:\n  refl (stepsClosure Rel Cal)\n\ngoal (1 subgoal):\n 1. P'' \\<R>\\<mapsto><Rel,Cal> P''", "unfolding refl_on_def"], ["proof (prove)\nusing this:\n  stepsClosure Rel Cal \\<subseteq> UNIV \\<times> UNIV \\<and>\n  (\\<forall>x\\<in>UNIV. x \\<R>\\<mapsto><Rel,Cal> x)\n\ngoal (1 subgoal):\n 1. P'' \\<R>\\<mapsto><Rel,Cal> P''", "by simp"], ["proof (state)\nthis:\n  P'' \\<R>\\<mapsto><Rel,Cal> P''\n\ngoal (2 subgoals):\n 1. \\<And>P P' P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> P'a \\<R>\\<mapsto><Rel,Cal> Q'\n 2. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            P' \\<R>\\<mapsto><Rel,Cal> Q'", "ultimately"], ["proof (chain)\npicking this:\n  P \\<longmapsto>Cal* P''\n  P'' \\<R>\\<mapsto><Rel,Cal> P''", "show \"\\<exists>Q'. P \\<longmapsto>Cal* Q' \\<and> P'' \\<R>\\<mapsto><Rel,Cal> Q'\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal* P''\n  P'' \\<R>\\<mapsto><Rel,Cal> P''\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. P \\<longmapsto>Cal* Q' \\<and> P'' \\<R>\\<mapsto><Rel,Cal> Q'", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q'. P \\<longmapsto>Cal* Q' \\<and> P'' \\<R>\\<mapsto><Rel,Cal> Q'\n\ngoal (1 subgoal):\n 1. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            P' \\<R>\\<mapsto><Rel,Cal> Q'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            P' \\<R>\\<mapsto><Rel,Cal> Q'", "case (trans P Q R)"], ["proof (state)\nthis:\n  P \\<R>\\<mapsto><Rel,Cal> Q\n  P \\<longmapsto>Cal* ?P' \\<Longrightarrow>\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> ?P' \\<R>\\<mapsto><Rel,Cal> Q'\n  Q \\<R>\\<mapsto><Rel,Cal> R\n  Q \\<longmapsto>Cal* ?P' \\<Longrightarrow>\n  \\<exists>Q'. R \\<longmapsto>Cal* Q' \\<and> ?P' \\<R>\\<mapsto><Rel,Cal> Q'\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            P' \\<R>\\<mapsto><Rel,Cal> Q'", "assume \"P \\<longmapsto>Cal* P'\"\n       and \"\\<And>P'. P \\<longmapsto>Cal* P' \\<Longrightarrow> \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q'\""], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P'\n  P \\<longmapsto>Cal* ?P' \\<Longrightarrow>\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> ?P' \\<R>\\<mapsto><Rel,Cal> Q'\n\ngoal (1 subgoal):\n 1. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            P' \\<R>\\<mapsto><Rel,Cal> Q'", "from this"], ["proof (chain)\npicking this:\n  P \\<longmapsto>Cal* P'\n  P \\<longmapsto>Cal* ?P' \\<Longrightarrow>\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> ?P' \\<R>\\<mapsto><Rel,Cal> Q'", "obtain Q' where A1: \"Q \\<longmapsto>Cal* Q'\" and A2: \"P' \\<R>\\<mapsto><Rel,Cal> Q'\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal* P'\n  P \\<longmapsto>Cal* ?P' \\<Longrightarrow>\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> ?P' \\<R>\\<mapsto><Rel,Cal> Q'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        Q \\<longmapsto>Cal* Q' \\<and>\n        P' \\<R>\\<mapsto><Rel,Cal> Q' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal* Q'\n  P' \\<R>\\<mapsto><Rel,Cal> Q'\n\ngoal (1 subgoal):\n 1. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            P' \\<R>\\<mapsto><Rel,Cal> Q'", "assume \"\\<And>Q'. Q \\<longmapsto>Cal* Q' \\<Longrightarrow> \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> R'\""], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal* ?Q' \\<Longrightarrow>\n  \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> ?Q' \\<R>\\<mapsto><Rel,Cal> R'\n\ngoal (1 subgoal):\n 1. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            P' \\<R>\\<mapsto><Rel,Cal> Q'", "with A1"], ["proof (chain)\npicking this:\n  Q \\<longmapsto>Cal* Q'\n  Q \\<longmapsto>Cal* ?Q' \\<Longrightarrow>\n  \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> ?Q' \\<R>\\<mapsto><Rel,Cal> R'", "obtain R' where A3: \"R \\<longmapsto>Cal* R'\" and A4: \"Q' \\<R>\\<mapsto><Rel,Cal> R'\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto>Cal* Q'\n  Q \\<longmapsto>Cal* ?Q' \\<Longrightarrow>\n  \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> ?Q' \\<R>\\<mapsto><Rel,Cal> R'\n\ngoal (1 subgoal):\n 1. (\\<And>R'.\n        R \\<longmapsto>Cal* R' \\<and>\n        Q' \\<R>\\<mapsto><Rel,Cal> R' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  R \\<longmapsto>Cal* R'\n  Q' \\<R>\\<mapsto><Rel,Cal> R'\n\ngoal (1 subgoal):\n 1. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            P' \\<R>\\<mapsto><Rel,Cal> Q'", "from A2 A4"], ["proof (chain)\npicking this:\n  P' \\<R>\\<mapsto><Rel,Cal> Q'\n  Q' \\<R>\\<mapsto><Rel,Cal> R'", "have \"P' \\<R>\\<mapsto><Rel,Cal> R'\""], ["proof (prove)\nusing this:\n  P' \\<R>\\<mapsto><Rel,Cal> Q'\n  Q' \\<R>\\<mapsto><Rel,Cal> R'\n\ngoal (1 subgoal):\n 1. P' \\<R>\\<mapsto><Rel,Cal> R'", "by (rule stepsClosure.trans)"], ["proof (state)\nthis:\n  P' \\<R>\\<mapsto><Rel,Cal> R'\n\ngoal (1 subgoal):\n 1. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            P' \\<R>\\<mapsto><Rel,Cal> Q'", "with A3"], ["proof (chain)\npicking this:\n  R \\<longmapsto>Cal* R'\n  P' \\<R>\\<mapsto><Rel,Cal> R'", "show \"\\<exists>R'. R \\<longmapsto>Cal* R' \\<and> P' \\<R>\\<mapsto><Rel,Cal> R'\""], ["proof (prove)\nusing this:\n  R \\<longmapsto>Cal* R'\n  P' \\<R>\\<mapsto><Rel,Cal> R'\n\ngoal (1 subgoal):\n 1. \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> P' \\<R>\\<mapsto><Rel,Cal> R'", "by blast"], ["proof (state)\nthis:\n  \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> P' \\<R>\\<mapsto><Rel,Cal> R'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> P' \\<R>\\<mapsto><Rel,Cal> Q'\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If Rel is a weak simulation and its inverse is a weak contrasimulation, then the steps\n        closure of Rel is a contrasimulation.\\<close>"], ["", "lemma inverse_contrasimulation_impl_reverse_pair_in_steps_closure:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n    and Cal :: \"'a processCalculus\"\n    and P Q :: \"'a\"\n  assumes con:  \"weak_reduction_contrasimulation (Rel\\<inverse>) Cal\"\n      and pair: \"(P, Q) \\<in> Rel\"\n  shows \"Q \\<R>\\<mapsto><Rel,Cal> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<R>\\<mapsto><Rel,Cal> P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Q \\<R>\\<mapsto><Rel,Cal> P", "from pair"], ["proof (chain)\npicking this:\n  (P, Q) \\<in> Rel", "have \"(Q, P) \\<in> Rel\\<inverse>\""], ["proof (prove)\nusing this:\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (Q, P) \\<in> Rel\\<inverse>", "by simp"], ["proof (state)\nthis:\n  (Q, P) \\<in> Rel\\<inverse>\n\ngoal (1 subgoal):\n 1. Q \\<R>\\<mapsto><Rel,Cal> P", "moreover"], ["proof (state)\nthis:\n  (Q, P) \\<in> Rel\\<inverse>\n\ngoal (1 subgoal):\n 1. Q \\<R>\\<mapsto><Rel,Cal> P", "have \"Q \\<longmapsto>Cal* Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<longmapsto>Cal* Q", "by (rule steps_refl)"], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal* Q\n\ngoal (1 subgoal):\n 1. Q \\<R>\\<mapsto><Rel,Cal> P", "ultimately"], ["proof (chain)\npicking this:\n  (Q, P) \\<in> Rel\\<inverse>\n  Q \\<longmapsto>Cal* Q", "obtain P' where A1: \"P \\<longmapsto>Cal* P'\" and A2: \"(P', Q) \\<in> Rel\\<inverse>\""], ["proof (prove)\nusing this:\n  (Q, P) \\<in> Rel\\<inverse>\n  Q \\<longmapsto>Cal* Q\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        P \\<longmapsto>Cal* P' \\<and>\n        (P', Q) \\<in> Rel\\<inverse> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using con"], ["proof (prove)\nusing this:\n  (Q, P) \\<in> Rel\\<inverse>\n  Q \\<longmapsto>Cal* Q\n  weak_reduction_contrasimulation (Rel\\<inverse>) Cal\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        P \\<longmapsto>Cal* P' \\<and>\n        (P', Q) \\<in> Rel\\<inverse> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P'\n  (P', Q) \\<in> Rel\\<inverse>\n\ngoal (1 subgoal):\n 1. Q \\<R>\\<mapsto><Rel,Cal> P", "from A2"], ["proof (chain)\npicking this:\n  (P', Q) \\<in> Rel\\<inverse>", "have \"Q \\<R>\\<mapsto><Rel,Cal> P'\""], ["proof (prove)\nusing this:\n  (P', Q) \\<in> Rel\\<inverse>\n\ngoal (1 subgoal):\n 1. Q \\<R>\\<mapsto><Rel,Cal> P'", "by (simp add: stepsClosure.rel)"], ["proof (state)\nthis:\n  Q \\<R>\\<mapsto><Rel,Cal> P'\n\ngoal (1 subgoal):\n 1. Q \\<R>\\<mapsto><Rel,Cal> P", "moreover"], ["proof (state)\nthis:\n  Q \\<R>\\<mapsto><Rel,Cal> P'\n\ngoal (1 subgoal):\n 1. Q \\<R>\\<mapsto><Rel,Cal> P", "from A1"], ["proof (chain)\npicking this:\n  P \\<longmapsto>Cal* P'", "have \"P' \\<R>\\<mapsto><Rel,Cal> P\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. P' \\<R>\\<mapsto><Rel,Cal> P", "by (rule stepsClosure.steps)"], ["proof (state)\nthis:\n  P' \\<R>\\<mapsto><Rel,Cal> P\n\ngoal (1 subgoal):\n 1. Q \\<R>\\<mapsto><Rel,Cal> P", "ultimately"], ["proof (chain)\npicking this:\n  Q \\<R>\\<mapsto><Rel,Cal> P'\n  P' \\<R>\\<mapsto><Rel,Cal> P", "show \"Q \\<R>\\<mapsto><Rel,Cal> P\""], ["proof (prove)\nusing this:\n  Q \\<R>\\<mapsto><Rel,Cal> P'\n  P' \\<R>\\<mapsto><Rel,Cal> P\n\ngoal (1 subgoal):\n 1. Q \\<R>\\<mapsto><Rel,Cal> P", "by (rule stepsClosure.trans)"], ["proof (state)\nthis:\n  Q \\<R>\\<mapsto><Rel,Cal> P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma simulation_and_inverse_contrasimulation_impl_steps_closure_is_contrasimulation:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n    and Cal :: \"'a processCalculus\"\n  assumes sim: \"weak_reduction_simulation Rel Cal\"\n      and con: \"weak_reduction_contrasimulation (Rel\\<inverse>) Cal\"\n  shows \"weak_reduction_contrasimulation (stepsClosure Rel Cal) Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_reduction_contrasimulation (stepsClosure Rel Cal) Cal", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q P'.\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'.\n          Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P'", "fix P Q P'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q P'.\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'.\n          Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P'", "assume \"P \\<R>\\<mapsto><Rel,Cal> Q\" and \"P \\<longmapsto>Cal* P'\""], ["proof (state)\nthis:\n  P \\<R>\\<mapsto><Rel,Cal> Q\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. \\<And>P Q P'.\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'.\n          Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P'", "thus \"\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P'\""], ["proof (prove)\nusing this:\n  P \\<R>\\<mapsto><Rel,Cal> Q\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P'", "proof (induct arbitrary: P')"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>P Q P'.\n       (P, Q) \\<in> Rel \\<and> P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'.\n          Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P'\n 2. \\<And>P P' P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P'a\n 3. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            Q' \\<R>\\<mapsto><Rel,Cal> P'", "case (rel P Q)"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n  P \\<longmapsto>Cal* P'\n\ngoal (3 subgoals):\n 1. \\<And>P Q P'.\n       (P, Q) \\<in> Rel \\<and> P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'.\n          Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P'\n 2. \\<And>P P' P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P'a\n 3. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            Q' \\<R>\\<mapsto><Rel,Cal> P'", "assume \"(P, Q) \\<in> Rel\" and \"P \\<longmapsto>Cal* P'\""], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n  P \\<longmapsto>Cal* P'\n\ngoal (3 subgoals):\n 1. \\<And>P Q P'.\n       (P, Q) \\<in> Rel \\<and> P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'.\n          Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P'\n 2. \\<And>P P' P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P'a\n 3. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            Q' \\<R>\\<mapsto><Rel,Cal> P'", "with sim"], ["proof (chain)\npicking this:\n  weak_reduction_simulation Rel Cal\n  (P, Q) \\<in> Rel\n  P \\<longmapsto>Cal* P'", "obtain Q' where A1: \"Q \\<longmapsto>Cal* Q'\" and A2: \"(P', Q') \\<in> Rel\""], ["proof (prove)\nusing this:\n  weak_reduction_simulation Rel Cal\n  (P, Q) \\<in> Rel\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal* Q'\n  (P', Q') \\<in> Rel\n\ngoal (3 subgoals):\n 1. \\<And>P Q P'.\n       (P, Q) \\<in> Rel \\<and> P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'.\n          Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P'\n 2. \\<And>P P' P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P'a\n 3. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            Q' \\<R>\\<mapsto><Rel,Cal> P'", "from A2 con"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel\n  weak_reduction_contrasimulation (Rel\\<inverse>) Cal", "have \"Q' \\<R>\\<mapsto><Rel,Cal> P'\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\n  weak_reduction_contrasimulation (Rel\\<inverse>) Cal\n\ngoal (1 subgoal):\n 1. Q' \\<R>\\<mapsto><Rel,Cal> P'", "using inverse_contrasimulation_impl_reverse_pair_in_steps_closure[where Rel=\"Rel\"]"], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\n  weak_reduction_contrasimulation (Rel\\<inverse>) Cal\n  weak_reduction_contrasimulation (Rel\\<inverse>) ?Cal \\<and>\n  (?P, ?Q) \\<in> Rel \\<Longrightarrow>\n  ?Q \\<R>\\<mapsto><Rel,?Cal> ?P\n\ngoal (1 subgoal):\n 1. Q' \\<R>\\<mapsto><Rel,Cal> P'", "by blast"], ["proof (state)\nthis:\n  Q' \\<R>\\<mapsto><Rel,Cal> P'\n\ngoal (3 subgoals):\n 1. \\<And>P Q P'.\n       (P, Q) \\<in> Rel \\<and> P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>Q'.\n          Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P'\n 2. \\<And>P P' P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P'a\n 3. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            Q' \\<R>\\<mapsto><Rel,Cal> P'", "with A1"], ["proof (chain)\npicking this:\n  Q \\<longmapsto>Cal* Q'\n  Q' \\<R>\\<mapsto><Rel,Cal> P'", "show \"\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P'\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto>Cal* Q'\n  Q' \\<R>\\<mapsto><Rel,Cal> P'\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P'", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P'\n\ngoal (2 subgoals):\n 1. \\<And>P P' P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P'a\n 2. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            Q' \\<R>\\<mapsto><Rel,Cal> P'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P P' P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P'a\n 2. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            Q' \\<R>\\<mapsto><Rel,Cal> P'", "case (steps P P' P'')"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P'\n  P' \\<longmapsto>Cal* P''\n\ngoal (2 subgoals):\n 1. \\<And>P P' P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P'a\n 2. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            Q' \\<R>\\<mapsto><Rel,Cal> P'", "assume \"P \\<longmapsto>Cal* P'\" and \"P' \\<longmapsto>Cal* P''\""], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P'\n  P' \\<longmapsto>Cal* P''\n\ngoal (2 subgoals):\n 1. \\<And>P P' P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P'a\n 2. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            Q' \\<R>\\<mapsto><Rel,Cal> P'", "hence \"P \\<longmapsto>Cal* P''\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal* P'\n  P' \\<longmapsto>Cal* P''\n\ngoal (1 subgoal):\n 1. P \\<longmapsto>Cal* P''", "by (rule steps_add)"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P''\n\ngoal (2 subgoals):\n 1. \\<And>P P' P'a.\n       P \\<longmapsto>Cal* P' \\<and>\n       P' \\<longmapsto>Cal* P'a \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P'a\n 2. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            Q' \\<R>\\<mapsto><Rel,Cal> P'", "thus \"\\<exists>Q'. P \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P''\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal* P''\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. P \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P''", "using stepsClosure_refl[where Rel=\"Rel\" and Cal=\"Cal\"]"], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal* P''\n  refl (stepsClosure Rel Cal)\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. P \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P''", "unfolding refl_on_def"], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal* P''\n  stepsClosure Rel Cal \\<subseteq> UNIV \\<times> UNIV \\<and>\n  (\\<forall>x\\<in>UNIV. x \\<R>\\<mapsto><Rel,Cal> x)\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. P \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P''", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q'. P \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P''\n\ngoal (1 subgoal):\n 1. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            Q' \\<R>\\<mapsto><Rel,Cal> P'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            Q' \\<R>\\<mapsto><Rel,Cal> P'", "case (trans P Q R)"], ["proof (state)\nthis:\n  P \\<R>\\<mapsto><Rel,Cal> Q\n  P \\<longmapsto>Cal* ?P' \\<Longrightarrow>\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> ?P'\n  Q \\<R>\\<mapsto><Rel,Cal> R\n  Q \\<longmapsto>Cal* ?P' \\<Longrightarrow>\n  \\<exists>Q'. R \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> ?P'\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            Q' \\<R>\\<mapsto><Rel,Cal> P'", "assume \"\\<And>P'. P \\<longmapsto>Cal* P' \\<Longrightarrow> \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P'\"\n       and \"P \\<longmapsto>Cal* P'\""], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* ?P' \\<Longrightarrow>\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> ?P'\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            Q' \\<R>\\<mapsto><Rel,Cal> P'", "from this"], ["proof (chain)\npicking this:\n  P \\<longmapsto>Cal* ?P' \\<Longrightarrow>\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> ?P'\n  P \\<longmapsto>Cal* P'", "obtain Q' where A1: \"Q \\<longmapsto>Cal* Q'\" and A2: \"Q' \\<R>\\<mapsto><Rel,Cal> P'\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal* ?P' \\<Longrightarrow>\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> ?P'\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        Q \\<longmapsto>Cal* Q' \\<and>\n        Q' \\<R>\\<mapsto><Rel,Cal> P' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal* Q'\n  Q' \\<R>\\<mapsto><Rel,Cal> P'\n\ngoal (1 subgoal):\n 1. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            Q' \\<R>\\<mapsto><Rel,Cal> P'", "assume \"\\<And>Q'. Q \\<longmapsto>Cal* Q' \\<Longrightarrow> \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> R' \\<R>\\<mapsto><Rel,Cal> Q'\""], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal* ?Q' \\<Longrightarrow>\n  \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> R' \\<R>\\<mapsto><Rel,Cal> ?Q'\n\ngoal (1 subgoal):\n 1. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            Q' \\<R>\\<mapsto><Rel,Cal> P'", "with A1"], ["proof (chain)\npicking this:\n  Q \\<longmapsto>Cal* Q'\n  Q \\<longmapsto>Cal* ?Q' \\<Longrightarrow>\n  \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> R' \\<R>\\<mapsto><Rel,Cal> ?Q'", "obtain R' where A3: \"R \\<longmapsto>Cal* R'\" and A4: \"R' \\<R>\\<mapsto><Rel,Cal> Q'\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto>Cal* Q'\n  Q \\<longmapsto>Cal* ?Q' \\<Longrightarrow>\n  \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> R' \\<R>\\<mapsto><Rel,Cal> ?Q'\n\ngoal (1 subgoal):\n 1. (\\<And>R'.\n        R \\<longmapsto>Cal* R' \\<and>\n        R' \\<R>\\<mapsto><Rel,Cal> Q' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  R \\<longmapsto>Cal* R'\n  R' \\<R>\\<mapsto><Rel,Cal> Q'\n\ngoal (1 subgoal):\n 1. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            Q' \\<R>\\<mapsto><Rel,Cal> P'", "from A4 A2"], ["proof (chain)\npicking this:\n  R' \\<R>\\<mapsto><Rel,Cal> Q'\n  Q' \\<R>\\<mapsto><Rel,Cal> P'", "have \"R' \\<R>\\<mapsto><Rel,Cal> P'\""], ["proof (prove)\nusing this:\n  R' \\<R>\\<mapsto><Rel,Cal> Q'\n  Q' \\<R>\\<mapsto><Rel,Cal> P'\n\ngoal (1 subgoal):\n 1. R' \\<R>\\<mapsto><Rel,Cal> P'", "by (rule stepsClosure.trans)"], ["proof (state)\nthis:\n  R' \\<R>\\<mapsto><Rel,Cal> P'\n\ngoal (1 subgoal):\n 1. \\<And>P Q R P'.\n       \\<lbrakk>P \\<R>\\<mapsto><Rel,Cal> Q;\n        \\<And>P'.\n           P \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        Q \\<R>\\<mapsto><Rel,Cal> R;\n        \\<And>P'.\n           Q \\<longmapsto>Cal* P' \\<Longrightarrow>\n           \\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P';\n        P \\<longmapsto>Cal* P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            R \\<longmapsto>Cal* Q' \\<and>\n                            Q' \\<R>\\<mapsto><Rel,Cal> P'", "with A3"], ["proof (chain)\npicking this:\n  R \\<longmapsto>Cal* R'\n  R' \\<R>\\<mapsto><Rel,Cal> P'", "show \"\\<exists>R'. R \\<longmapsto>Cal* R' \\<and> R' \\<R>\\<mapsto><Rel,Cal> P'\""], ["proof (prove)\nusing this:\n  R \\<longmapsto>Cal* R'\n  R' \\<R>\\<mapsto><Rel,Cal> P'\n\ngoal (1 subgoal):\n 1. \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> R' \\<R>\\<mapsto><Rel,Cal> P'", "by blast"], ["proof (state)\nthis:\n  \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> R' \\<R>\\<mapsto><Rel,Cal> P'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> Q' \\<R>\\<mapsto><Rel,Cal> P'\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Accordingly, if Rel is a weak simulation and its inverse is a weak contrasimulation, then\n        the steps closure of Rel is a coupled simulation.\\<close>"], ["", "lemma simulation_and_inverse_contrasimulation_impl_steps_closure_is_coupled_simulation:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n    and Cal :: \"'a processCalculus\"\n  assumes sim: \"weak_reduction_simulation Rel Cal\"\n      and con: \"weak_reduction_contrasimulation (Rel\\<inverse>) Cal\"\n  shows \"weak_reduction_coupled_simulation (stepsClosure Rel Cal) Cal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_reduction_coupled_simulation (stepsClosure Rel Cal) Cal", "using sim con simulation_and_inverse_contrasimulation_impl_steps_closure_is_contrasimulation\n            steps_closure_is_weak_reduction_simulation[where Rel=\"Rel\" and Cal=\"Cal\"]"], ["proof (prove)\nusing this:\n  weak_reduction_simulation Rel Cal\n  weak_reduction_contrasimulation (Rel\\<inverse>) Cal\n  weak_reduction_simulation ?Rel ?Cal \\<and>\n  weak_reduction_contrasimulation (?Rel\\<inverse>) ?Cal \\<Longrightarrow>\n  weak_reduction_contrasimulation (stepsClosure ?Rel ?Cal) ?Cal\n  weak_reduction_simulation (stepsClosure Rel Cal) Cal\n\ngoal (1 subgoal):\n 1. weak_reduction_coupled_simulation (stepsClosure Rel Cal) Cal", "by simp"], ["", "text \\<open>If the relation that is closed under steps is a (contra)simulation, then we can conlude\n        from a pair in the closure on a pair in the original relation.\\<close>"], ["", "lemma stepsClosure_simulation_impl_refl_trans_closure_of_Rel:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n    and Cal :: \"'a processCalculus\"\n    and P Q :: \"'a\"\n  assumes A1: \"P \\<R>\\<mapsto><Rel,Cal> Q\"\n      and A2: \"weak_reduction_simulation Rel Cal\"\n  shows \"\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P, Q') \\<in> Rel\\<^sup>*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P, Q') \\<in> Rel\\<^sup>*", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P, Q') \\<in> Rel\\<^sup>*", "have \"\\<forall>P'. P \\<longmapsto>Cal* P' \\<longrightarrow> (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P'.\n       P \\<longmapsto>Cal* P' \\<longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)", "using A1"], ["proof (prove)\nusing this:\n  P \\<R>\\<mapsto><Rel,Cal> Q\n\ngoal (1 subgoal):\n 1. \\<forall>P'.\n       P \\<longmapsto>Cal* P' \\<longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)", "proof induct"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> Rel \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)\n 2. \\<And>P P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<forall>P'a.\n          P' \\<longmapsto>Cal* P'a \\<longrightarrow>\n          (\\<exists>Q'.\n              P \\<longmapsto>Cal* Q' \\<and> (P'a, Q') \\<in> Rel\\<^sup>*)\n 3. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)", "case (rel P Q)"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n\ngoal (3 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> Rel \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)\n 2. \\<And>P P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<forall>P'a.\n          P' \\<longmapsto>Cal* P'a \\<longrightarrow>\n          (\\<exists>Q'.\n              P \\<longmapsto>Cal* Q' \\<and> (P'a, Q') \\<in> Rel\\<^sup>*)\n 3. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)", "assume \"(P, Q) \\<in> Rel\""], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n\ngoal (3 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> Rel \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)\n 2. \\<And>P P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<forall>P'a.\n          P' \\<longmapsto>Cal* P'a \\<longrightarrow>\n          (\\<exists>Q'.\n              P \\<longmapsto>Cal* Q' \\<and> (P'a, Q') \\<in> Rel\\<^sup>*)\n 3. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)", "with A2"], ["proof (chain)\npicking this:\n  weak_reduction_simulation Rel Cal\n  (P, Q) \\<in> Rel", "have \"\\<forall>P'. P \\<longmapsto>Cal* P' \\<longrightarrow> (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel)\""], ["proof (prove)\nusing this:\n  weak_reduction_simulation Rel Cal\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<forall>P'.\n       P \\<longmapsto>Cal* P' \\<longrightarrow>\n       (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel)", "by blast"], ["proof (state)\nthis:\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel)\n\ngoal (3 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> Rel \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)\n 2. \\<And>P P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<forall>P'a.\n          P' \\<longmapsto>Cal* P'a \\<longrightarrow>\n          (\\<exists>Q'.\n              P \\<longmapsto>Cal* Q' \\<and> (P'a, Q') \\<in> Rel\\<^sup>*)\n 3. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)", "thus \"\\<forall>P'. P \\<longmapsto>Cal* P' \\<longrightarrow> (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)\""], ["proof (prove)\nusing this:\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel)\n\ngoal (1 subgoal):\n 1. \\<forall>P'.\n       P \\<longmapsto>Cal* P' \\<longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)", "by blast"], ["proof (state)\nthis:\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)\n\ngoal (2 subgoals):\n 1. \\<And>P P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<forall>P'a.\n          P' \\<longmapsto>Cal* P'a \\<longrightarrow>\n          (\\<exists>Q'.\n              P \\<longmapsto>Cal* Q' \\<and> (P'a, Q') \\<in> Rel\\<^sup>*)\n 2. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<forall>P'a.\n          P' \\<longmapsto>Cal* P'a \\<longrightarrow>\n          (\\<exists>Q'.\n              P \\<longmapsto>Cal* Q' \\<and> (P'a, Q') \\<in> Rel\\<^sup>*)\n 2. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)", "case (steps P P')"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P'\n\ngoal (2 subgoals):\n 1. \\<And>P P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<forall>P'a.\n          P' \\<longmapsto>Cal* P'a \\<longrightarrow>\n          (\\<exists>Q'.\n              P \\<longmapsto>Cal* Q' \\<and> (P'a, Q') \\<in> Rel\\<^sup>*)\n 2. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)", "assume A: \"P \\<longmapsto>Cal* P'\""], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P'\n\ngoal (2 subgoals):\n 1. \\<And>P P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<forall>P'a.\n          P' \\<longmapsto>Cal* P'a \\<longrightarrow>\n          (\\<exists>Q'.\n              P \\<longmapsto>Cal* Q' \\<and> (P'a, Q') \\<in> Rel\\<^sup>*)\n 2. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)", "show \"\\<forall>P''. P' \\<longmapsto>Cal* P'' \\<longrightarrow> (\\<exists>Q'. P \\<longmapsto>Cal* Q' \\<and> (P'', Q') \\<in> Rel\\<^sup>*)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P''.\n       P' \\<longmapsto>Cal* P'' \\<longrightarrow>\n       (\\<exists>Q'.\n           P \\<longmapsto>Cal* Q' \\<and> (P'', Q') \\<in> Rel\\<^sup>*)", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P''.\n       P' \\<longmapsto>Cal* P'' \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> (P'', Q') \\<in> Rel\\<^sup>*", "fix P''"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P''.\n       P' \\<longmapsto>Cal* P'' \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> (P'', Q') \\<in> Rel\\<^sup>*", "assume \"P' \\<longmapsto>Cal* P''\""], ["proof (state)\nthis:\n  P' \\<longmapsto>Cal* P''\n\ngoal (1 subgoal):\n 1. \\<And>P''.\n       P' \\<longmapsto>Cal* P'' \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> (P'', Q') \\<in> Rel\\<^sup>*", "with A"], ["proof (chain)\npicking this:\n  P \\<longmapsto>Cal* P'\n  P' \\<longmapsto>Cal* P''", "have \"P \\<longmapsto>Cal* P''\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal* P'\n  P' \\<longmapsto>Cal* P''\n\ngoal (1 subgoal):\n 1. P \\<longmapsto>Cal* P''", "by (rule steps_add)"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P''\n\ngoal (1 subgoal):\n 1. \\<And>P''.\n       P' \\<longmapsto>Cal* P'' \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> (P'', Q') \\<in> Rel\\<^sup>*", "moreover"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P''\n\ngoal (1 subgoal):\n 1. \\<And>P''.\n       P' \\<longmapsto>Cal* P'' \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> (P'', Q') \\<in> Rel\\<^sup>*", "have \"(P'', P'') \\<in> Rel\\<^sup>*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P'', P'') \\<in> Rel\\<^sup>*", "by simp"], ["proof (state)\nthis:\n  (P'', P'') \\<in> Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>P''.\n       P' \\<longmapsto>Cal* P'' \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> (P'', Q') \\<in> Rel\\<^sup>*", "ultimately"], ["proof (chain)\npicking this:\n  P \\<longmapsto>Cal* P''\n  (P'', P'') \\<in> Rel\\<^sup>*", "show \"\\<exists>Q'. P \\<longmapsto>Cal* Q' \\<and> (P'', Q') \\<in> Rel\\<^sup>*\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal* P''\n  (P'', P'') \\<in> Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. P \\<longmapsto>Cal* Q' \\<and> (P'', Q') \\<in> Rel\\<^sup>*", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q'. P \\<longmapsto>Cal* Q' \\<and> (P'', Q') \\<in> Rel\\<^sup>*\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>P''.\n     P' \\<longmapsto>Cal* P'' \\<longrightarrow>\n     (\\<exists>Q'.\n         P \\<longmapsto>Cal* Q' \\<and> (P'', Q') \\<in> Rel\\<^sup>*)\n\ngoal (1 subgoal):\n 1. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)", "case (trans P Q R)"], ["proof (state)\nthis:\n  P \\<R>\\<mapsto><Rel,Cal> Q\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)\n  Q \\<R>\\<mapsto><Rel,Cal> R\n  \\<forall>P'.\n     Q \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'. R \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)\n\ngoal (1 subgoal):\n 1. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)", "assume A1: \"\\<forall>P'. P \\<longmapsto>Cal* P' \\<longrightarrow> (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)\"\n       and A2: \"\\<forall>Q'. Q \\<longmapsto>Cal* Q' \\<longrightarrow> (\\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (Q', R') \\<in> Rel\\<^sup>*)\""], ["proof (state)\nthis:\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)\n  \\<forall>Q'.\n     Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n     (\\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (Q', R') \\<in> Rel\\<^sup>*)\n\ngoal (1 subgoal):\n 1. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)", "show \"\\<forall>P'. P \\<longmapsto>Cal* P' \\<longrightarrow> (\\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (P', R') \\<in> Rel\\<^sup>*)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P'.\n       P \\<longmapsto>Cal* P' \\<longrightarrow>\n       (\\<exists>R'.\n           R \\<longmapsto>Cal* R' \\<and> (P', R') \\<in> Rel\\<^sup>*)", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (P', R') \\<in> Rel\\<^sup>*", "fix P'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (P', R') \\<in> Rel\\<^sup>*", "assume \"P \\<longmapsto>Cal* P'\""], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (P', R') \\<in> Rel\\<^sup>*", "with A1"], ["proof (chain)\npicking this:\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)\n  P \\<longmapsto>Cal* P'", "obtain Q' where A3: \"Q \\<longmapsto>Cal* Q'\" and A4: \"(P', Q') \\<in> Rel\\<^sup>*\""], ["proof (prove)\nusing this:\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        Q \\<longmapsto>Cal* Q' \\<and>\n        (P', Q') \\<in> Rel\\<^sup>* \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal* Q'\n  (P', Q') \\<in> Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (P', R') \\<in> Rel\\<^sup>*", "from A2 A3"], ["proof (chain)\npicking this:\n  \\<forall>Q'.\n     Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n     (\\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (Q', R') \\<in> Rel\\<^sup>*)\n  Q \\<longmapsto>Cal* Q'", "obtain R' where A5: \"R \\<longmapsto>Cal* R'\" and A6: \"(Q', R') \\<in> Rel\\<^sup>*\""], ["proof (prove)\nusing this:\n  \\<forall>Q'.\n     Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n     (\\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (Q', R') \\<in> Rel\\<^sup>*)\n  Q \\<longmapsto>Cal* Q'\n\ngoal (1 subgoal):\n 1. (\\<And>R'.\n        R \\<longmapsto>Cal* R' \\<and>\n        (Q', R') \\<in> Rel\\<^sup>* \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  R \\<longmapsto>Cal* R'\n  (Q', R') \\<in> Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (P', R') \\<in> Rel\\<^sup>*", "from A4 A6"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel\\<^sup>*\n  (Q', R') \\<in> Rel\\<^sup>*", "have \"(P', R') \\<in> Rel\\<^sup>*\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\\<^sup>*\n  (Q', R') \\<in> Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. (P', R') \\<in> Rel\\<^sup>*", "by simp"], ["proof (state)\nthis:\n  (P', R') \\<in> Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (P', R') \\<in> Rel\\<^sup>*", "with A5"], ["proof (chain)\npicking this:\n  R \\<longmapsto>Cal* R'\n  (P', R') \\<in> Rel\\<^sup>*", "show \"\\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (P', R') \\<in> Rel\\<^sup>*\""], ["proof (prove)\nusing this:\n  R \\<longmapsto>Cal* R'\n  (P', R') \\<in> Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (P', R') \\<in> Rel\\<^sup>*", "by blast"], ["proof (state)\nthis:\n  \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (P', R') \\<in> Rel\\<^sup>*\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (P', R') \\<in> Rel\\<^sup>*)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P, Q') \\<in> Rel\\<^sup>*", "moreover"], ["proof (state)\nthis:\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P, Q') \\<in> Rel\\<^sup>*", "have \"P \\<longmapsto>Cal* P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<longmapsto>Cal* P", "by (rule steps_refl)"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P, Q') \\<in> Rel\\<^sup>*", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)\n  P \\<longmapsto>Cal* P", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)\n  P \\<longmapsto>Cal* P\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P, Q') \\<in> Rel\\<^sup>*", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P, Q') \\<in> Rel\\<^sup>*\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stepsClosure_contrasimulation_impl_refl_trans_closure_of_Rel:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n    and Cal :: \"'a processCalculus\"\n    and P Q :: \"'a\"\n  assumes A1: \"P \\<R>\\<mapsto><Rel,Cal> Q\"\n      and A2: \"weak_reduction_contrasimulation Rel Cal\"\n  shows \"\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P) \\<in> Rel\\<^sup>*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P) \\<in> Rel\\<^sup>*", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P) \\<in> Rel\\<^sup>*", "have \"\\<forall>P'. P \\<longmapsto>Cal* P' \\<longrightarrow> (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>*)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P'.\n       P \\<longmapsto>Cal* P' \\<longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>*)", "using A1"], ["proof (prove)\nusing this:\n  P \\<R>\\<mapsto><Rel,Cal> Q\n\ngoal (1 subgoal):\n 1. \\<forall>P'.\n       P \\<longmapsto>Cal* P' \\<longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>*)", "proof induct"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> Rel \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>*)\n 2. \\<And>P P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<forall>P'a.\n          P' \\<longmapsto>Cal* P'a \\<longrightarrow>\n          (\\<exists>Q'.\n              P \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> Rel\\<^sup>*)\n 3. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>*)", "case (rel P Q)"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n\ngoal (3 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> Rel \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>*)\n 2. \\<And>P P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<forall>P'a.\n          P' \\<longmapsto>Cal* P'a \\<longrightarrow>\n          (\\<exists>Q'.\n              P \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> Rel\\<^sup>*)\n 3. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>*)", "assume \"(P, Q) \\<in> Rel\""], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\n\ngoal (3 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> Rel \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>*)\n 2. \\<And>P P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<forall>P'a.\n          P' \\<longmapsto>Cal* P'a \\<longrightarrow>\n          (\\<exists>Q'.\n              P \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> Rel\\<^sup>*)\n 3. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>*)", "with A2"], ["proof (chain)\npicking this:\n  weak_reduction_contrasimulation Rel Cal\n  (P, Q) \\<in> Rel", "have \"\\<forall>P'. P \\<longmapsto>Cal* P' \\<longrightarrow> (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel)\""], ["proof (prove)\nusing this:\n  weak_reduction_contrasimulation Rel Cal\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<forall>P'.\n       P \\<longmapsto>Cal* P' \\<longrightarrow>\n       (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel)", "by blast"], ["proof (state)\nthis:\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel)\n\ngoal (3 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> Rel \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>*)\n 2. \\<And>P P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<forall>P'a.\n          P' \\<longmapsto>Cal* P'a \\<longrightarrow>\n          (\\<exists>Q'.\n              P \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> Rel\\<^sup>*)\n 3. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>*)", "thus \"\\<forall>P'. P \\<longmapsto>Cal* P' \\<longrightarrow> (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>*)\""], ["proof (prove)\nusing this:\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel)\n\ngoal (1 subgoal):\n 1. \\<forall>P'.\n       P \\<longmapsto>Cal* P' \\<longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>*)", "by blast"], ["proof (state)\nthis:\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>*)\n\ngoal (2 subgoals):\n 1. \\<And>P P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<forall>P'a.\n          P' \\<longmapsto>Cal* P'a \\<longrightarrow>\n          (\\<exists>Q'.\n              P \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> Rel\\<^sup>*)\n 2. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>*)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<forall>P'a.\n          P' \\<longmapsto>Cal* P'a \\<longrightarrow>\n          (\\<exists>Q'.\n              P \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> Rel\\<^sup>*)\n 2. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>*)", "case (steps P P')"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P'\n\ngoal (2 subgoals):\n 1. \\<And>P P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<forall>P'a.\n          P' \\<longmapsto>Cal* P'a \\<longrightarrow>\n          (\\<exists>Q'.\n              P \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> Rel\\<^sup>*)\n 2. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>*)", "assume A: \"P \\<longmapsto>Cal* P'\""], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P'\n\ngoal (2 subgoals):\n 1. \\<And>P P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<forall>P'a.\n          P' \\<longmapsto>Cal* P'a \\<longrightarrow>\n          (\\<exists>Q'.\n              P \\<longmapsto>Cal* Q' \\<and> (Q', P'a) \\<in> Rel\\<^sup>*)\n 2. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>*)", "show \"\\<forall>P''. P' \\<longmapsto>Cal* P'' \\<longrightarrow> (\\<exists>Q'. P \\<longmapsto>Cal* Q' \\<and> (Q', P'') \\<in> Rel\\<^sup>*)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P''.\n       P' \\<longmapsto>Cal* P'' \\<longrightarrow>\n       (\\<exists>Q'.\n           P \\<longmapsto>Cal* Q' \\<and> (Q', P'') \\<in> Rel\\<^sup>*)", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P''.\n       P' \\<longmapsto>Cal* P'' \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> (Q', P'') \\<in> Rel\\<^sup>*", "fix P''"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P''.\n       P' \\<longmapsto>Cal* P'' \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> (Q', P'') \\<in> Rel\\<^sup>*", "assume \"P' \\<longmapsto>Cal* P''\""], ["proof (state)\nthis:\n  P' \\<longmapsto>Cal* P''\n\ngoal (1 subgoal):\n 1. \\<And>P''.\n       P' \\<longmapsto>Cal* P'' \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> (Q', P'') \\<in> Rel\\<^sup>*", "with A"], ["proof (chain)\npicking this:\n  P \\<longmapsto>Cal* P'\n  P' \\<longmapsto>Cal* P''", "have \"P \\<longmapsto>Cal* P''\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal* P'\n  P' \\<longmapsto>Cal* P''\n\ngoal (1 subgoal):\n 1. P \\<longmapsto>Cal* P''", "by (rule steps_add)"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P''\n\ngoal (1 subgoal):\n 1. \\<And>P''.\n       P' \\<longmapsto>Cal* P'' \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> (Q', P'') \\<in> Rel\\<^sup>*", "moreover"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P''\n\ngoal (1 subgoal):\n 1. \\<And>P''.\n       P' \\<longmapsto>Cal* P'' \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> (Q', P'') \\<in> Rel\\<^sup>*", "have \"(P'', P'') \\<in> Rel\\<^sup>*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P'', P'') \\<in> Rel\\<^sup>*", "by simp"], ["proof (state)\nthis:\n  (P'', P'') \\<in> Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>P''.\n       P' \\<longmapsto>Cal* P'' \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> (Q', P'') \\<in> Rel\\<^sup>*", "ultimately"], ["proof (chain)\npicking this:\n  P \\<longmapsto>Cal* P''\n  (P'', P'') \\<in> Rel\\<^sup>*", "show \"\\<exists>Q'. P \\<longmapsto>Cal* Q' \\<and> (Q', P'') \\<in> Rel\\<^sup>*\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal* P''\n  (P'', P'') \\<in> Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. P \\<longmapsto>Cal* Q' \\<and> (Q', P'') \\<in> Rel\\<^sup>*", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q'. P \\<longmapsto>Cal* Q' \\<and> (Q', P'') \\<in> Rel\\<^sup>*\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>P''.\n     P' \\<longmapsto>Cal* P'' \\<longrightarrow>\n     (\\<exists>Q'.\n         P \\<longmapsto>Cal* Q' \\<and> (Q', P'') \\<in> Rel\\<^sup>*)\n\ngoal (1 subgoal):\n 1. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>*)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>*)", "case (trans P Q R)"], ["proof (state)\nthis:\n  P \\<R>\\<mapsto><Rel,Cal> Q\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>*)\n  Q \\<R>\\<mapsto><Rel,Cal> R\n  \\<forall>P'.\n     Q \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'. R \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>*)\n\ngoal (1 subgoal):\n 1. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>*)", "assume A1: \"\\<forall>P'. P \\<longmapsto>Cal* P' \\<longrightarrow> (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>*)\"\n       and A2: \"\\<forall>Q'. Q \\<longmapsto>Cal* Q' \\<longrightarrow> (\\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (R', Q') \\<in> Rel\\<^sup>*)\""], ["proof (state)\nthis:\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>*)\n  \\<forall>Q'.\n     Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n     (\\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (R', Q') \\<in> Rel\\<^sup>*)\n\ngoal (1 subgoal):\n 1. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (Q', P') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>*)", "show \"\\<forall>P'. P \\<longmapsto>Cal* P' \\<longrightarrow> (\\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (R', P') \\<in> Rel\\<^sup>*)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P'.\n       P \\<longmapsto>Cal* P' \\<longrightarrow>\n       (\\<exists>R'.\n           R \\<longmapsto>Cal* R' \\<and> (R', P') \\<in> Rel\\<^sup>*)", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (R', P') \\<in> Rel\\<^sup>*", "fix P'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (R', P') \\<in> Rel\\<^sup>*", "assume \"P \\<longmapsto>Cal* P'\""], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (R', P') \\<in> Rel\\<^sup>*", "with A1"], ["proof (chain)\npicking this:\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>*)\n  P \\<longmapsto>Cal* P'", "obtain Q' where A3: \"Q \\<longmapsto>Cal* Q'\" and A4: \"(Q', P') \\<in> Rel\\<^sup>*\""], ["proof (prove)\nusing this:\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>*)\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        Q \\<longmapsto>Cal* Q' \\<and>\n        (Q', P') \\<in> Rel\\<^sup>* \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal* Q'\n  (Q', P') \\<in> Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (R', P') \\<in> Rel\\<^sup>*", "from A2 A3"], ["proof (chain)\npicking this:\n  \\<forall>Q'.\n     Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n     (\\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (R', Q') \\<in> Rel\\<^sup>*)\n  Q \\<longmapsto>Cal* Q'", "obtain R' where A5: \"R \\<longmapsto>Cal* R'\" and A6: \"(R', Q') \\<in> Rel\\<^sup>*\""], ["proof (prove)\nusing this:\n  \\<forall>Q'.\n     Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n     (\\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (R', Q') \\<in> Rel\\<^sup>*)\n  Q \\<longmapsto>Cal* Q'\n\ngoal (1 subgoal):\n 1. (\\<And>R'.\n        R \\<longmapsto>Cal* R' \\<and>\n        (R', Q') \\<in> Rel\\<^sup>* \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  R \\<longmapsto>Cal* R'\n  (R', Q') \\<in> Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (R', P') \\<in> Rel\\<^sup>*", "from A4 A6"], ["proof (chain)\npicking this:\n  (Q', P') \\<in> Rel\\<^sup>*\n  (R', Q') \\<in> Rel\\<^sup>*", "have \"(R', P') \\<in> Rel\\<^sup>*\""], ["proof (prove)\nusing this:\n  (Q', P') \\<in> Rel\\<^sup>*\n  (R', Q') \\<in> Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. (R', P') \\<in> Rel\\<^sup>*", "by simp"], ["proof (state)\nthis:\n  (R', P') \\<in> Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (R', P') \\<in> Rel\\<^sup>*", "with A5"], ["proof (chain)\npicking this:\n  R \\<longmapsto>Cal* R'\n  (R', P') \\<in> Rel\\<^sup>*", "show \"\\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (R', P') \\<in> Rel\\<^sup>*\""], ["proof (prove)\nusing this:\n  R \\<longmapsto>Cal* R'\n  (R', P') \\<in> Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (R', P') \\<in> Rel\\<^sup>*", "by blast"], ["proof (state)\nthis:\n  \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (R', P') \\<in> Rel\\<^sup>*\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (R', P') \\<in> Rel\\<^sup>*)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>*)\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P) \\<in> Rel\\<^sup>*", "moreover"], ["proof (state)\nthis:\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>*)\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P) \\<in> Rel\\<^sup>*", "have \"P \\<longmapsto>Cal* P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<longmapsto>Cal* P", "by (rule steps_refl)"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P) \\<in> Rel\\<^sup>*", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>*)\n  P \\<longmapsto>Cal* P", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<^sup>*)\n  P \\<longmapsto>Cal* P\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P) \\<in> Rel\\<^sup>*", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P) \\<in> Rel\\<^sup>*\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stepsClosure_contrasimulation_of_inverse_impl_refl_trans_closure_of_Rel:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n    and Cal :: \"'a processCalculus\"\n    and P Q :: \"'a\"\n  assumes A1: \"P \\<R>\\<mapsto><Rel\\<inverse>,Cal> Q\"\n      and A2: \"weak_reduction_contrasimulation (Rel\\<inverse>) Cal\"\n  shows \"\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P, Q') \\<in> Rel\\<^sup>*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P, Q') \\<in> Rel\\<^sup>*", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P, Q') \\<in> Rel\\<^sup>*", "have \"\\<forall>P'. P \\<longmapsto>Cal* P' \\<longrightarrow> (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P'.\n       P \\<longmapsto>Cal* P' \\<longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)", "using A1"], ["proof (prove)\nusing this:\n  P \\<R>\\<mapsto><Rel\\<inverse>,Cal> Q\n\ngoal (1 subgoal):\n 1. \\<forall>P'.\n       P \\<longmapsto>Cal* P' \\<longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)", "proof induct"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> Rel\\<inverse> \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)\n 2. \\<And>P P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<forall>P'a.\n          P' \\<longmapsto>Cal* P'a \\<longrightarrow>\n          (\\<exists>Q'.\n              P \\<longmapsto>Cal* Q' \\<and> (P'a, Q') \\<in> Rel\\<^sup>*)\n 3. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel\\<inverse>,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel\\<inverse>,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)", "case (rel P Q)"], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\\<inverse>\n\ngoal (3 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> Rel\\<inverse> \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)\n 2. \\<And>P P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<forall>P'a.\n          P' \\<longmapsto>Cal* P'a \\<longrightarrow>\n          (\\<exists>Q'.\n              P \\<longmapsto>Cal* Q' \\<and> (P'a, Q') \\<in> Rel\\<^sup>*)\n 3. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel\\<inverse>,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel\\<inverse>,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)", "assume \"(P, Q) \\<in> Rel\\<inverse>\""], ["proof (state)\nthis:\n  (P, Q) \\<in> Rel\\<inverse>\n\ngoal (3 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> Rel\\<inverse> \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)\n 2. \\<And>P P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<forall>P'a.\n          P' \\<longmapsto>Cal* P'a \\<longrightarrow>\n          (\\<exists>Q'.\n              P \\<longmapsto>Cal* Q' \\<and> (P'a, Q') \\<in> Rel\\<^sup>*)\n 3. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel\\<inverse>,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel\\<inverse>,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)", "with A2"], ["proof (chain)\npicking this:\n  weak_reduction_contrasimulation (Rel\\<inverse>) Cal\n  (P, Q) \\<in> Rel\\<inverse>", "have \"\\<forall>P'. P \\<longmapsto>Cal* P' \\<longrightarrow> (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<inverse>)\""], ["proof (prove)\nusing this:\n  weak_reduction_contrasimulation (Rel\\<inverse>) Cal\n  (P, Q) \\<in> Rel\\<inverse>\n\ngoal (1 subgoal):\n 1. \\<forall>P'.\n       P \\<longmapsto>Cal* P' \\<longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<inverse>)", "by blast"], ["proof (state)\nthis:\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'.\n         Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<inverse>)\n\ngoal (3 subgoals):\n 1. \\<And>P Q.\n       (P, Q) \\<in> Rel\\<inverse> \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)\n 2. \\<And>P P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<forall>P'a.\n          P' \\<longmapsto>Cal* P'a \\<longrightarrow>\n          (\\<exists>Q'.\n              P \\<longmapsto>Cal* Q' \\<and> (P'a, Q') \\<in> Rel\\<^sup>*)\n 3. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel\\<inverse>,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel\\<inverse>,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)", "thus \"\\<forall>P'. P \\<longmapsto>Cal* P' \\<longrightarrow> (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)\""], ["proof (prove)\nusing this:\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'.\n         Q \\<longmapsto>Cal* Q' \\<and> (Q', P') \\<in> Rel\\<inverse>)\n\ngoal (1 subgoal):\n 1. \\<forall>P'.\n       P \\<longmapsto>Cal* P' \\<longrightarrow>\n       (\\<exists>Q'.\n           Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)", "by blast"], ["proof (state)\nthis:\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)\n\ngoal (2 subgoals):\n 1. \\<And>P P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<forall>P'a.\n          P' \\<longmapsto>Cal* P'a \\<longrightarrow>\n          (\\<exists>Q'.\n              P \\<longmapsto>Cal* Q' \\<and> (P'a, Q') \\<in> Rel\\<^sup>*)\n 2. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel\\<inverse>,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel\\<inverse>,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<forall>P'a.\n          P' \\<longmapsto>Cal* P'a \\<longrightarrow>\n          (\\<exists>Q'.\n              P \\<longmapsto>Cal* Q' \\<and> (P'a, Q') \\<in> Rel\\<^sup>*)\n 2. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel\\<inverse>,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel\\<inverse>,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)", "case (steps P P')"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P'\n\ngoal (2 subgoals):\n 1. \\<And>P P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<forall>P'a.\n          P' \\<longmapsto>Cal* P'a \\<longrightarrow>\n          (\\<exists>Q'.\n              P \\<longmapsto>Cal* Q' \\<and> (P'a, Q') \\<in> Rel\\<^sup>*)\n 2. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel\\<inverse>,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel\\<inverse>,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)", "assume A: \"P \\<longmapsto>Cal* P'\""], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P'\n\ngoal (2 subgoals):\n 1. \\<And>P P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<forall>P'a.\n          P' \\<longmapsto>Cal* P'a \\<longrightarrow>\n          (\\<exists>Q'.\n              P \\<longmapsto>Cal* Q' \\<and> (P'a, Q') \\<in> Rel\\<^sup>*)\n 2. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel\\<inverse>,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel\\<inverse>,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)", "show \"\\<forall>P''. P' \\<longmapsto>Cal* P'' \\<longrightarrow> (\\<exists>Q'. P \\<longmapsto>Cal* Q' \\<and> (P'', Q') \\<in> Rel\\<^sup>*)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P''.\n       P' \\<longmapsto>Cal* P'' \\<longrightarrow>\n       (\\<exists>Q'.\n           P \\<longmapsto>Cal* Q' \\<and> (P'', Q') \\<in> Rel\\<^sup>*)", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P''.\n       P' \\<longmapsto>Cal* P'' \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> (P'', Q') \\<in> Rel\\<^sup>*", "fix P''"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P''.\n       P' \\<longmapsto>Cal* P'' \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> (P'', Q') \\<in> Rel\\<^sup>*", "assume \"P' \\<longmapsto>Cal* P''\""], ["proof (state)\nthis:\n  P' \\<longmapsto>Cal* P''\n\ngoal (1 subgoal):\n 1. \\<And>P''.\n       P' \\<longmapsto>Cal* P'' \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> (P'', Q') \\<in> Rel\\<^sup>*", "with A"], ["proof (chain)\npicking this:\n  P \\<longmapsto>Cal* P'\n  P' \\<longmapsto>Cal* P''", "have \"P \\<longmapsto>Cal* P''\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal* P'\n  P' \\<longmapsto>Cal* P''\n\ngoal (1 subgoal):\n 1. P \\<longmapsto>Cal* P''", "by (rule steps_add)"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P''\n\ngoal (1 subgoal):\n 1. \\<And>P''.\n       P' \\<longmapsto>Cal* P'' \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> (P'', Q') \\<in> Rel\\<^sup>*", "moreover"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P''\n\ngoal (1 subgoal):\n 1. \\<And>P''.\n       P' \\<longmapsto>Cal* P'' \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> (P'', Q') \\<in> Rel\\<^sup>*", "have \"(P'', P'') \\<in> Rel\\<^sup>*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P'', P'') \\<in> Rel\\<^sup>*", "by simp"], ["proof (state)\nthis:\n  (P'', P'') \\<in> Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>P''.\n       P' \\<longmapsto>Cal* P'' \\<Longrightarrow>\n       \\<exists>Q'.\n          P \\<longmapsto>Cal* Q' \\<and> (P'', Q') \\<in> Rel\\<^sup>*", "ultimately"], ["proof (chain)\npicking this:\n  P \\<longmapsto>Cal* P''\n  (P'', P'') \\<in> Rel\\<^sup>*", "show \"\\<exists>Q'. P \\<longmapsto>Cal* Q' \\<and> (P'', Q') \\<in> Rel\\<^sup>*\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>Cal* P''\n  (P'', P'') \\<in> Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. P \\<longmapsto>Cal* Q' \\<and> (P'', Q') \\<in> Rel\\<^sup>*", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q'. P \\<longmapsto>Cal* Q' \\<and> (P'', Q') \\<in> Rel\\<^sup>*\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>P''.\n     P' \\<longmapsto>Cal* P'' \\<longrightarrow>\n     (\\<exists>Q'.\n         P \\<longmapsto>Cal* Q' \\<and> (P'', Q') \\<in> Rel\\<^sup>*)\n\ngoal (1 subgoal):\n 1. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel\\<inverse>,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel\\<inverse>,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel\\<inverse>,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel\\<inverse>,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)", "case (trans P Q R)"], ["proof (state)\nthis:\n  P \\<R>\\<mapsto><Rel\\<inverse>,Cal> Q\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)\n  Q \\<R>\\<mapsto><Rel\\<inverse>,Cal> R\n  \\<forall>P'.\n     Q \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'. R \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)\n\ngoal (1 subgoal):\n 1. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel\\<inverse>,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel\\<inverse>,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)", "assume A1: \"\\<forall>P'. P \\<longmapsto>Cal* P' \\<longrightarrow> (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)\"\n       and A2: \"\\<forall>Q'. Q \\<longmapsto>Cal* Q' \\<longrightarrow> (\\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (Q', R') \\<in> Rel\\<^sup>*)\""], ["proof (state)\nthis:\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)\n  \\<forall>Q'.\n     Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n     (\\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (Q', R') \\<in> Rel\\<^sup>*)\n\ngoal (1 subgoal):\n 1. \\<And>P Q R.\n       P \\<R>\\<mapsto><Rel\\<inverse>,Cal> Q \\<and>\n       (\\<forall>P'.\n           P \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<and>\n       Q \\<R>\\<mapsto><Rel\\<inverse>,Cal> R \\<and>\n       (\\<forall>P'.\n           Q \\<longmapsto>Cal* P' \\<longrightarrow>\n           (\\<exists>Q'.\n               R \\<longmapsto>Cal* Q' \\<and>\n               (P', Q') \\<in> Rel\\<^sup>*)) \\<Longrightarrow>\n       \\<forall>P'.\n          P \\<longmapsto>Cal* P' \\<longrightarrow>\n          (\\<exists>Q'.\n              R \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)", "show \"\\<forall>P'. P \\<longmapsto>Cal* P' \\<longrightarrow> (\\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (P', R') \\<in> Rel\\<^sup>*)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P'.\n       P \\<longmapsto>Cal* P' \\<longrightarrow>\n       (\\<exists>R'.\n           R \\<longmapsto>Cal* R' \\<and> (P', R') \\<in> Rel\\<^sup>*)", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (P', R') \\<in> Rel\\<^sup>*", "fix P'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (P', R') \\<in> Rel\\<^sup>*", "assume \"P \\<longmapsto>Cal* P'\""], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (P', R') \\<in> Rel\\<^sup>*", "with A1"], ["proof (chain)\npicking this:\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)\n  P \\<longmapsto>Cal* P'", "obtain Q' where A3: \"Q \\<longmapsto>Cal* Q'\" and A4: \"(P', Q') \\<in> Rel\\<^sup>*\""], ["proof (prove)\nusing this:\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)\n  P \\<longmapsto>Cal* P'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        Q \\<longmapsto>Cal* Q' \\<and>\n        (P', Q') \\<in> Rel\\<^sup>* \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Q \\<longmapsto>Cal* Q'\n  (P', Q') \\<in> Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (P', R') \\<in> Rel\\<^sup>*", "from A3 A2"], ["proof (chain)\npicking this:\n  Q \\<longmapsto>Cal* Q'\n  \\<forall>Q'.\n     Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n     (\\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (Q', R') \\<in> Rel\\<^sup>*)", "obtain R' where A5: \"R \\<longmapsto>Cal* R'\" and A6: \"(Q', R') \\<in> Rel\\<^sup>*\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto>Cal* Q'\n  \\<forall>Q'.\n     Q \\<longmapsto>Cal* Q' \\<longrightarrow>\n     (\\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (Q', R') \\<in> Rel\\<^sup>*)\n\ngoal (1 subgoal):\n 1. (\\<And>R'.\n        R \\<longmapsto>Cal* R' \\<and>\n        (Q', R') \\<in> Rel\\<^sup>* \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  R \\<longmapsto>Cal* R'\n  (Q', R') \\<in> Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (P', R') \\<in> Rel\\<^sup>*", "from A4 A6"], ["proof (chain)\npicking this:\n  (P', Q') \\<in> Rel\\<^sup>*\n  (Q', R') \\<in> Rel\\<^sup>*", "have \"(P', R') \\<in> Rel\\<^sup>*\""], ["proof (prove)\nusing this:\n  (P', Q') \\<in> Rel\\<^sup>*\n  (Q', R') \\<in> Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. (P', R') \\<in> Rel\\<^sup>*", "by simp"], ["proof (state)\nthis:\n  (P', R') \\<in> Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>P'.\n       P \\<longmapsto>Cal* P' \\<Longrightarrow>\n       \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (P', R') \\<in> Rel\\<^sup>*", "with A5"], ["proof (chain)\npicking this:\n  R \\<longmapsto>Cal* R'\n  (P', R') \\<in> Rel\\<^sup>*", "show \"\\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (P', R') \\<in> Rel\\<^sup>*\""], ["proof (prove)\nusing this:\n  R \\<longmapsto>Cal* R'\n  (P', R') \\<in> Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (P', R') \\<in> Rel\\<^sup>*", "by blast"], ["proof (state)\nthis:\n  \\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (P', R') \\<in> Rel\\<^sup>*\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>R'. R \\<longmapsto>Cal* R' \\<and> (P', R') \\<in> Rel\\<^sup>*)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P, Q') \\<in> Rel\\<^sup>*", "moreover"], ["proof (state)\nthis:\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P, Q') \\<in> Rel\\<^sup>*", "have \"P \\<longmapsto>Cal* P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<longmapsto>Cal* P", "by (rule steps_refl)"], ["proof (state)\nthis:\n  P \\<longmapsto>Cal* P\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P, Q') \\<in> Rel\\<^sup>*", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)\n  P \\<longmapsto>Cal* P", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>P'.\n     P \\<longmapsto>Cal* P' \\<longrightarrow>\n     (\\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P', Q') \\<in> Rel\\<^sup>*)\n  P \\<longmapsto>Cal* P\n\ngoal (1 subgoal):\n 1. \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P, Q') \\<in> Rel\\<^sup>*", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q'. Q \\<longmapsto>Cal* Q' \\<and> (P, Q') \\<in> Rel\\<^sup>*\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}