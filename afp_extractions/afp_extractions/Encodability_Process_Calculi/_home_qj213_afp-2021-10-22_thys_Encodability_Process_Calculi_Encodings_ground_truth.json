{"file_name": "/home/qj213/afp-2021-10-22/thys/Encodability_Process_Calculi/Encodings.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Encodability_Process_Calculi", "problem_names": ["lemma stepST_STCal_step:\n  fixes P P' :: \"('procS, 'procT) Proc\"\n  shows \"P \\<longmapsto>(STCal Source Target) P' = P \\<longmapsto>ST P'\"", "lemma STStep_step:\n  fixes S  :: \"'procS\"\n    and T  :: \"'procT\"\n    and P' :: \"('procS, 'procT) Proc\"\n  shows \"SourceTerm S \\<longmapsto>ST P' = (\\<exists>S'. S' \\<in>S P' \\<and> S \\<longmapsto>Source S')\"\n    and \"TargetTerm T \\<longmapsto>ST P' = (\\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target T')\"", "lemma STCal_step:\n  fixes S  :: \"'procS\"\n    and T  :: \"'procT\"\n    and P' :: \"('procS, 'procT) Proc\"\n  shows \"SourceTerm S \\<longmapsto>(STCal Source Target) P' = (\\<exists>S'. S' \\<in>S P' \\<and> S \\<longmapsto>Source S')\"\n    and \"TargetTerm T \\<longmapsto>(STCal Source Target) P' = (\\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target T')\"", "lemma STSteps_steps:\n  fixes S  :: \"'procS\"\n    and T  :: \"'procT\"\n    and P' :: \"('procS, 'procT) Proc\"\n  shows \"SourceTerm S \\<longmapsto>ST* P' = (\\<exists>S'. S' \\<in>S P' \\<and> S \\<longmapsto>Source* S')\"\n    and \"TargetTerm T \\<longmapsto>ST* P' = (\\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target* T')\"", "lemma STCal_steps:\n  fixes S  :: \"'procS\"\n    and T  :: \"'procT\"\n    and P' :: \"('procS, 'procT) Proc\"\n  shows \"SourceTerm S \\<longmapsto>(STCal Source Target)* P' = (\\<exists>S'. S' \\<in>S P' \\<and> S \\<longmapsto>Source* S')\"\n    and \"TargetTerm T \\<longmapsto>(STCal Source Target)* P' = (\\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target* T')\"", "lemma stepsST_STCal_steps:\n  fixes P P' :: \"('procS, 'procT) Proc\"\n  shows \"P \\<longmapsto>(STCal Source Target)* P' = P \\<longmapsto>ST* P'\"", "lemma stepsST_refl:\n  fixes P :: \"('procS, 'procT) Proc\"\n  shows \"P \\<longmapsto>ST* P\"", "lemma stepsST_add:\n  fixes P Q R :: \"('procS, 'procT) Proc\"\n  assumes A1: \"P \\<longmapsto>ST* Q\"\n      and A2: \"Q \\<longmapsto>ST* R\"\n  shows \"P \\<longmapsto>ST* R\"", "lemma STCal_divergent:\n  fixes S  :: \"'procS\"\n    and T  :: \"'procT\"\n  shows \"SourceTerm S \\<longmapsto>(STCal Source Target)\\<omega> = S \\<longmapsto>(Source)\\<omega>\"\n    and \"TargetTerm T \\<longmapsto>(STCal Source Target)\\<omega> = T \\<longmapsto>(Target)\\<omega>\"", "lemma divergentST_STCal_divergent:\n  fixes P :: \"('procS, 'procT) Proc\"\n  shows \"P \\<longmapsto>(STCal Source Target)\\<omega> = P \\<longmapsto>ST\\<omega>\"", "lemma STCalWB_STCal:\n  shows \"Calculus (STCalWB SWB TWB) = STCal Source Target\"", "lemma STCalWB_hasBarbST:\n  fixes P :: \"('procS, 'procT) Proc\"\n    and a :: \"'barbs\"\n  shows \"P\\<down><STCalWB SWB TWB>a = P\\<down>.a\"", "lemma preservation_of_barbs_in_barbed_encoding:\n  fixes Rel :: \"(('procS, 'procT) Proc \\<times> ('procS, 'procT) Proc) set\"\n    and P Q :: \"('procS, 'procT) Proc\"\n    and a   :: \"'barbs\"\n  assumes preservation: \"rel_preserves_barbs Rel (STCalWB SWB TWB)\"\n      and rel:          \"(P, Q) \\<in> Rel\"\n      and barb:         \"P\\<down>.a\"\n  shows \"Q\\<down>.a\"", "lemma reflection_of_barbs_in_barbed_encoding:\n  fixes Rel :: \"(('procS, 'procT) Proc \\<times> ('procS, 'procT) Proc) set\"\n    and P Q :: \"('procS, 'procT) Proc\"\n    and a   :: \"'barbs\"\n  assumes reflection: \"rel_reflects_barbs Rel (STCalWB SWB TWB)\"\n      and rel:        \"(P, Q) \\<in> Rel\"\n      and barb:       \"Q\\<down>.a\"\n  shows \"P\\<down>.a\"", "lemma respection_of_barbs_in_barbed_encoding:\n  fixes Rel :: \"(('procS, 'procT) Proc \\<times> ('procS, 'procT) Proc) set\"\n    and P Q :: \"('procS, 'procT) Proc\"\n    and a   :: \"'barbs\"\n  assumes respection: \"rel_respects_barbs Rel (STCalWB SWB TWB)\"\n      and rel:        \"(P, Q) \\<in> Rel\"\n  shows \"P\\<down>.a = Q\\<down>.a\"", "lemma STCalWB_reachesBarbST:\n  fixes P :: \"('procS, 'procT) Proc\"\n    and a :: \"'barbs\"\n  shows \"P\\<Down><STCalWB SWB TWB>a = P\\<Down>.a\"", "lemma weak_preservation_of_barbs_in_barbed_encoding:\n  fixes Rel :: \"(('procS, 'procT) Proc \\<times> ('procS, 'procT) Proc) set\"\n    and P Q :: \"('procS, 'procT) Proc\"\n    and a   :: \"'barbs\"\n  assumes preservation: \"rel_weakly_preserves_barbs Rel (STCalWB SWB TWB)\"\n      and rel:          \"(P, Q) \\<in> Rel\"\n      and barb:         \"P\\<Down>.a\"\n  shows \"Q\\<Down>.a\"", "lemma weak_reflection_of_barbs_in_barbed_encoding:\n  fixes Rel :: \"(('procS, 'procT) Proc \\<times> ('procS, 'procT) Proc) set\"\n    and P Q :: \"('procS, 'procT) Proc\"\n    and a   :: \"'barbs\"\n  assumes reflection: \"rel_weakly_reflects_barbs Rel (STCalWB SWB TWB)\"\n      and rel:        \"(P, Q) \\<in> Rel\"\n      and barb:       \"Q\\<Down>.a\"\n  shows \"P\\<Down>.a\"", "lemma weak_respection_of_barbs_in_barbed_encoding:\n  fixes Rel :: \"(('procS, 'procT) Proc \\<times> ('procS, 'procT) Proc) set\"\n    and P Q :: \"('procS, 'procT) Proc\"\n    and a   :: \"'barbs\"\n  assumes respection: \"rel_weakly_respects_barbs Rel (STCalWB SWB TWB)\"\n      and rel:        \"(P, Q) \\<in> Rel\"\n  shows \"P\\<Down>.a = Q\\<Down>.a\""], "translations": [["", "lemma stepST_STCal_step:\n  fixes P P' :: \"('procS, 'procT) Proc\"\n  shows \"P \\<longmapsto>(STCal Source Target) P' = P \\<longmapsto>ST P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<longmapsto>STCal Source Target P' =\n    ((\\<exists>S S'.\n         S \\<in>S P \\<and>\n         S' \\<in>S P' \\<and> S \\<longmapsto>Source S') \\<or>\n     (\\<exists>T T'.\n         T \\<in>T P \\<and> T' \\<in>T P' \\<and> T \\<longmapsto>Target T'))", "by (simp add: STCal_def)"], ["", "lemma STStep_step:\n  fixes S  :: \"'procS\"\n    and T  :: \"'procT\"\n    and P' :: \"('procS, 'procT) Proc\"\n  shows \"SourceTerm S \\<longmapsto>ST P' = (\\<exists>S'. S' \\<in>S P' \\<and> S \\<longmapsto>Source S')\"\n    and \"TargetTerm T \\<longmapsto>ST P' = (\\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target T')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<exists>Sa S'.\n         Sa \\<in>S SourceTerm S \\<and>\n         S' \\<in>S P' \\<and> Sa \\<longmapsto>Source S') \\<or>\n     (\\<exists>T T'.\n         T \\<in>T SourceTerm S \\<and>\n         T' \\<in>T P' \\<and> T \\<longmapsto>Target T')) =\n    (\\<exists>S'. S' \\<in>S P' \\<and> S \\<longmapsto>Source S') &&&\n    ((\\<exists>S S'.\n         S \\<in>S TargetTerm T \\<and>\n         S' \\<in>S P' \\<and> S \\<longmapsto>Source S') \\<or>\n     (\\<exists>Ta T'.\n         Ta \\<in>T TargetTerm T \\<and>\n         T' \\<in>T P' \\<and> Ta \\<longmapsto>Target T')) =\n    (\\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target T')", "by blast+"], ["", "lemma STCal_step:\n  fixes S  :: \"'procS\"\n    and T  :: \"'procT\"\n    and P' :: \"('procS, 'procT) Proc\"\n  shows \"SourceTerm S \\<longmapsto>(STCal Source Target) P' = (\\<exists>S'. S' \\<in>S P' \\<and> S \\<longmapsto>Source S')\"\n    and \"TargetTerm T \\<longmapsto>(STCal Source Target) P' = (\\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target T')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SourceTerm S \\<longmapsto>STCal Source Target P' =\n    (\\<exists>S'. S' \\<in>S P' \\<and> S \\<longmapsto>Source S') &&&\n    TargetTerm T \\<longmapsto>STCal Source Target P' =\n    (\\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target T')", "by (simp add: STCal_def)+"], ["", "text \\<open>A sequence of steps of a term in Proc is either a sequence of source term steps or a\n        sequence of target term steps.\\<close>"], ["", "abbreviation stepsST\n    :: \"('procS, 'procT) Proc \\<Rightarrow> ('procS, 'procT) Proc \\<Rightarrow> bool\" (\"_ \\<longmapsto>ST* _\" [70, 70] 80)\n  where\n  \"P \\<longmapsto>ST* P' \\<equiv>\n   (\\<exists>S S'. S \\<in>S P \\<and> S' \\<in>S P' \\<and> S \\<longmapsto>Source* S') \\<or> (\\<exists>T T'. T \\<in>T P \\<and> T' \\<in>T P' \\<and> T \\<longmapsto>Target* T')\""], ["", "lemma STSteps_steps:\n  fixes S  :: \"'procS\"\n    and T  :: \"'procT\"\n    and P' :: \"('procS, 'procT) Proc\"\n  shows \"SourceTerm S \\<longmapsto>ST* P' = (\\<exists>S'. S' \\<in>S P' \\<and> S \\<longmapsto>Source* S')\"\n    and \"TargetTerm T \\<longmapsto>ST* P' = (\\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target* T')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SourceTerm S \\<longmapsto>ST* P' =\n    (\\<exists>S'. S' \\<in>S P' \\<and> S \\<longmapsto>Source* S') &&&\n    TargetTerm T \\<longmapsto>ST* P' =\n    (\\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target* T')", "by blast+"], ["", "lemma STCal_steps:\n  fixes S  :: \"'procS\"\n    and T  :: \"'procT\"\n    and P' :: \"('procS, 'procT) Proc\"\n  shows \"SourceTerm S \\<longmapsto>(STCal Source Target)* P' = (\\<exists>S'. S' \\<in>S P' \\<and> S \\<longmapsto>Source* S')\"\n    and \"TargetTerm T \\<longmapsto>(STCal Source Target)* P' = (\\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target* T')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SourceTerm S \\<longmapsto>STCal Source Target* P' =\n    (\\<exists>S'. S' \\<in>S P' \\<and> S \\<longmapsto>Source* S') &&&\n    TargetTerm T \\<longmapsto>STCal Source Target* P' =\n    (\\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target* T')", "proof auto"], ["proof (state)\ngoal (4 subgoals):\n 1. SourceTerm S \\<longmapsto>STCal Source Target* P' \\<Longrightarrow>\n    \\<exists>S'. S' \\<in>S P' \\<and> S \\<longmapsto>Source* S'\n 2. \\<And>S'.\n       S \\<longmapsto>Source* S' \\<and> S' \\<in>S P' \\<Longrightarrow>\n       SourceTerm S \\<longmapsto>STCal Source Target* SourceTerm S'\n 3. TargetTerm T \\<longmapsto>STCal Source Target* P' \\<Longrightarrow>\n    \\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'\n 4. \\<And>T'.\n       T \\<longmapsto>Target* T' \\<and> T' \\<in>T P' \\<Longrightarrow>\n       TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm T'", "assume \"SourceTerm S \\<longmapsto>(STCal Source Target)* P'\""], ["proof (state)\nthis:\n  SourceTerm S \\<longmapsto>STCal Source Target* P'\n\ngoal (4 subgoals):\n 1. SourceTerm S \\<longmapsto>STCal Source Target* P' \\<Longrightarrow>\n    \\<exists>S'. S' \\<in>S P' \\<and> S \\<longmapsto>Source* S'\n 2. \\<And>S'.\n       S \\<longmapsto>Source* S' \\<and> S' \\<in>S P' \\<Longrightarrow>\n       SourceTerm S \\<longmapsto>STCal Source Target* SourceTerm S'\n 3. TargetTerm T \\<longmapsto>STCal Source Target* P' \\<Longrightarrow>\n    \\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'\n 4. \\<And>T'.\n       T \\<longmapsto>Target* T' \\<and> T' \\<in>T P' \\<Longrightarrow>\n       TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm T'", "from this"], ["proof (chain)\npicking this:\n  SourceTerm S \\<longmapsto>STCal Source Target* P'", "obtain n where \"SourceTerm S \\<longmapsto>(STCal Source Target)\\<^bsup>n\\<^esup> P'\""], ["proof (prove)\nusing this:\n  SourceTerm S \\<longmapsto>STCal Source Target* P'\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        SourceTerm\n         S \\<longmapsto>STCal Source\n                         Target\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: steps_def)"], ["proof (state)\nthis:\n  SourceTerm S \\<longmapsto>STCal Source Target\\<^bsup>n\\<^esup> P'\n\ngoal (4 subgoals):\n 1. SourceTerm S \\<longmapsto>STCal Source Target* P' \\<Longrightarrow>\n    \\<exists>S'. S' \\<in>S P' \\<and> S \\<longmapsto>Source* S'\n 2. \\<And>S'.\n       S \\<longmapsto>Source* S' \\<and> S' \\<in>S P' \\<Longrightarrow>\n       SourceTerm S \\<longmapsto>STCal Source Target* SourceTerm S'\n 3. TargetTerm T \\<longmapsto>STCal Source Target* P' \\<Longrightarrow>\n    \\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'\n 4. \\<And>T'.\n       T \\<longmapsto>Target* T' \\<and> T' \\<in>T P' \\<Longrightarrow>\n       TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm T'", "thus \"\\<exists>S'. S' \\<in>S P' \\<and> S \\<longmapsto>Source* S'\""], ["proof (prove)\nusing this:\n  SourceTerm S \\<longmapsto>STCal Source Target\\<^bsup>n\\<^esup> P'\n\ngoal (1 subgoal):\n 1. \\<exists>S'. S' \\<in>S P' \\<and> S \\<longmapsto>Source* S'", "proof (induct n arbitrary: P')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P'.\n       SourceTerm\n        S \\<longmapsto>STCal Source\n                        Target\\<^bsup>0\\<^esup> P' \\<Longrightarrow>\n       \\<exists>S'. S' \\<in>S P' \\<and> S \\<longmapsto>Source* S'\n 2. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   SourceTerm\n                    S \\<longmapsto>STCal Source\n                                    Target\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>S'.\n                      S' \\<in>S P' \\<and> S \\<longmapsto>Source* S';\n        SourceTerm\n         S \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S'.\n                            S' \\<in>S P' \\<and> S \\<longmapsto>Source* S'", "case 0"], ["proof (state)\nthis:\n  SourceTerm S \\<longmapsto>STCal Source Target\\<^bsup>0\\<^esup> P'\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       SourceTerm\n        S \\<longmapsto>STCal Source\n                        Target\\<^bsup>0\\<^esup> P' \\<Longrightarrow>\n       \\<exists>S'. S' \\<in>S P' \\<and> S \\<longmapsto>Source* S'\n 2. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   SourceTerm\n                    S \\<longmapsto>STCal Source\n                                    Target\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>S'.\n                      S' \\<in>S P' \\<and> S \\<longmapsto>Source* S';\n        SourceTerm\n         S \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S'.\n                            S' \\<in>S P' \\<and> S \\<longmapsto>Source* S'", "assume \"SourceTerm S \\<longmapsto>(STCal Source Target)\\<^bsup>0\\<^esup> P'\""], ["proof (state)\nthis:\n  SourceTerm S \\<longmapsto>STCal Source Target\\<^bsup>0\\<^esup> P'\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       SourceTerm\n        S \\<longmapsto>STCal Source\n                        Target\\<^bsup>0\\<^esup> P' \\<Longrightarrow>\n       \\<exists>S'. S' \\<in>S P' \\<and> S \\<longmapsto>Source* S'\n 2. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   SourceTerm\n                    S \\<longmapsto>STCal Source\n                                    Target\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>S'.\n                      S' \\<in>S P' \\<and> S \\<longmapsto>Source* S';\n        SourceTerm\n         S \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S'.\n                            S' \\<in>S P' \\<and> S \\<longmapsto>Source* S'", "hence \"S \\<in>S P'\""], ["proof (prove)\nusing this:\n  SourceTerm S \\<longmapsto>STCal Source Target\\<^bsup>0\\<^esup> P'\n\ngoal (1 subgoal):\n 1. S \\<in>S P'", "by simp"], ["proof (state)\nthis:\n  S \\<in>S P'\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       SourceTerm\n        S \\<longmapsto>STCal Source\n                        Target\\<^bsup>0\\<^esup> P' \\<Longrightarrow>\n       \\<exists>S'. S' \\<in>S P' \\<and> S \\<longmapsto>Source* S'\n 2. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   SourceTerm\n                    S \\<longmapsto>STCal Source\n                                    Target\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>S'.\n                      S' \\<in>S P' \\<and> S \\<longmapsto>Source* S';\n        SourceTerm\n         S \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S'.\n                            S' \\<in>S P' \\<and> S \\<longmapsto>Source* S'", "moreover"], ["proof (state)\nthis:\n  S \\<in>S P'\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       SourceTerm\n        S \\<longmapsto>STCal Source\n                        Target\\<^bsup>0\\<^esup> P' \\<Longrightarrow>\n       \\<exists>S'. S' \\<in>S P' \\<and> S \\<longmapsto>Source* S'\n 2. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   SourceTerm\n                    S \\<longmapsto>STCal Source\n                                    Target\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>S'.\n                      S' \\<in>S P' \\<and> S \\<longmapsto>Source* S';\n        SourceTerm\n         S \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S'.\n                            S' \\<in>S P' \\<and> S \\<longmapsto>Source* S'", "have \"S \\<longmapsto>Source* S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<longmapsto>Source* S", "by (rule steps_refl)"], ["proof (state)\nthis:\n  S \\<longmapsto>Source* S\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       SourceTerm\n        S \\<longmapsto>STCal Source\n                        Target\\<^bsup>0\\<^esup> P' \\<Longrightarrow>\n       \\<exists>S'. S' \\<in>S P' \\<and> S \\<longmapsto>Source* S'\n 2. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   SourceTerm\n                    S \\<longmapsto>STCal Source\n                                    Target\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>S'.\n                      S' \\<in>S P' \\<and> S \\<longmapsto>Source* S';\n        SourceTerm\n         S \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S'.\n                            S' \\<in>S P' \\<and> S \\<longmapsto>Source* S'", "ultimately"], ["proof (chain)\npicking this:\n  S \\<in>S P'\n  S \\<longmapsto>Source* S", "show \"\\<exists>S'. S' \\<in>S P' \\<and> S \\<longmapsto>Source* S'\""], ["proof (prove)\nusing this:\n  S \\<in>S P'\n  S \\<longmapsto>Source* S\n\ngoal (1 subgoal):\n 1. \\<exists>S'. S' \\<in>S P' \\<and> S \\<longmapsto>Source* S'", "by blast"], ["proof (state)\nthis:\n  \\<exists>S'. S' \\<in>S P' \\<and> S \\<longmapsto>Source* S'\n\ngoal (1 subgoal):\n 1. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   SourceTerm\n                    S \\<longmapsto>STCal Source\n                                    Target\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>S'.\n                      S' \\<in>S P' \\<and> S \\<longmapsto>Source* S';\n        SourceTerm\n         S \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S'.\n                            S' \\<in>S P' \\<and> S \\<longmapsto>Source* S'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   SourceTerm\n                    S \\<longmapsto>STCal Source\n                                    Target\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>S'.\n                      S' \\<in>S P' \\<and> S \\<longmapsto>Source* S';\n        SourceTerm\n         S \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S'.\n                            S' \\<in>S P' \\<and> S \\<longmapsto>Source* S'", "case (Suc n P'')"], ["proof (state)\nthis:\n  SourceTerm\n   S \\<longmapsto>STCal Source Target\\<^bsup>n\\<^esup> ?P' \\<Longrightarrow>\n  \\<exists>S'. S' \\<in>S ?P' \\<and> S \\<longmapsto>Source* S'\n  SourceTerm S \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P''\n\ngoal (1 subgoal):\n 1. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   SourceTerm\n                    S \\<longmapsto>STCal Source\n                                    Target\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>S'.\n                      S' \\<in>S P' \\<and> S \\<longmapsto>Source* S';\n        SourceTerm\n         S \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S'.\n                            S' \\<in>S P' \\<and> S \\<longmapsto>Source* S'", "assume \"SourceTerm S \\<longmapsto>(STCal Source Target)\\<^bsup>Suc n\\<^esup> P''\""], ["proof (state)\nthis:\n  SourceTerm S \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P''\n\ngoal (1 subgoal):\n 1. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   SourceTerm\n                    S \\<longmapsto>STCal Source\n                                    Target\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>S'.\n                      S' \\<in>S P' \\<and> S \\<longmapsto>Source* S';\n        SourceTerm\n         S \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S'.\n                            S' \\<in>S P' \\<and> S \\<longmapsto>Source* S'", "from this"], ["proof (chain)\npicking this:\n  SourceTerm S \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P''", "obtain P' where A1: \"SourceTerm S \\<longmapsto>(STCal Source Target)\\<^bsup>n\\<^esup> P'\"\n                          and A2: \"P' \\<longmapsto>(STCal Source Target) P''\""], ["proof (prove)\nusing this:\n  SourceTerm S \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P''\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        SourceTerm\n         S \\<longmapsto>STCal Source Target\\<^bsup>n\\<^esup> P' \\<and>\n        P' \\<longmapsto>STCal Source Target P'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  SourceTerm S \\<longmapsto>STCal Source Target\\<^bsup>n\\<^esup> P'\n  P' \\<longmapsto>STCal Source Target P''\n\ngoal (1 subgoal):\n 1. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   SourceTerm\n                    S \\<longmapsto>STCal Source\n                                    Target\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>S'.\n                      S' \\<in>S P' \\<and> S \\<longmapsto>Source* S';\n        SourceTerm\n         S \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S'.\n                            S' \\<in>S P' \\<and> S \\<longmapsto>Source* S'", "assume \"\\<And>P'. SourceTerm S \\<longmapsto>(STCal Source Target)\\<^bsup>n\\<^esup> P' \\<Longrightarrow> \\<exists>S'. S' \\<in>S P' \\<and> S \\<longmapsto>Source* S'\""], ["proof (state)\nthis:\n  SourceTerm\n   S \\<longmapsto>STCal Source Target\\<^bsup>n\\<^esup> ?P' \\<Longrightarrow>\n  \\<exists>S'. S' \\<in>S ?P' \\<and> S \\<longmapsto>Source* S'\n\ngoal (1 subgoal):\n 1. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   SourceTerm\n                    S \\<longmapsto>STCal Source\n                                    Target\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>S'.\n                      S' \\<in>S P' \\<and> S \\<longmapsto>Source* S';\n        SourceTerm\n         S \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S'.\n                            S' \\<in>S P' \\<and> S \\<longmapsto>Source* S'", "with A1"], ["proof (chain)\npicking this:\n  SourceTerm S \\<longmapsto>STCal Source Target\\<^bsup>n\\<^esup> P'\n  SourceTerm\n   S \\<longmapsto>STCal Source Target\\<^bsup>n\\<^esup> ?P' \\<Longrightarrow>\n  \\<exists>S'. S' \\<in>S ?P' \\<and> S \\<longmapsto>Source* S'", "obtain S' where A3: \"S' \\<in>S P'\" and A4: \"S \\<longmapsto>Source* S'\""], ["proof (prove)\nusing this:\n  SourceTerm S \\<longmapsto>STCal Source Target\\<^bsup>n\\<^esup> P'\n  SourceTerm\n   S \\<longmapsto>STCal Source Target\\<^bsup>n\\<^esup> ?P' \\<Longrightarrow>\n  \\<exists>S'. S' \\<in>S ?P' \\<and> S \\<longmapsto>Source* S'\n\ngoal (1 subgoal):\n 1. (\\<And>S'.\n        S' \\<in>S P' \\<and> S \\<longmapsto>Source* S' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  S' \\<in>S P'\n  S \\<longmapsto>Source* S'\n\ngoal (1 subgoal):\n 1. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   SourceTerm\n                    S \\<longmapsto>STCal Source\n                                    Target\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>S'.\n                      S' \\<in>S P' \\<and> S \\<longmapsto>Source* S';\n        SourceTerm\n         S \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S'.\n                            S' \\<in>S P' \\<and> S \\<longmapsto>Source* S'", "from A2 A3"], ["proof (chain)\npicking this:\n  P' \\<longmapsto>STCal Source Target P''\n  S' \\<in>S P'", "obtain S'' where A5: \"S'' \\<in>S P''\" and A6: \"S' \\<longmapsto>Source S''\""], ["proof (prove)\nusing this:\n  P' \\<longmapsto>STCal Source Target P''\n  S' \\<in>S P'\n\ngoal (1 subgoal):\n 1. (\\<And>S''.\n        S'' \\<in>S P'' \\<and> S' \\<longmapsto>Source S'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using STCal_step(1)[where S=\"S'\" and P'=\"P''\"]"], ["proof (prove)\nusing this:\n  P' \\<longmapsto>STCal Source Target P''\n  S' \\<in>S P'\n  SourceTerm S' \\<longmapsto>STCal Source Target P'' =\n  (\\<exists>S'a. S'a \\<in>S P'' \\<and> S' \\<longmapsto>Source S'a)\n\ngoal (1 subgoal):\n 1. (\\<And>S''.\n        S'' \\<in>S P'' \\<and> S' \\<longmapsto>Source S'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  S'' \\<in>S P''\n  S' \\<longmapsto>Source S''\n\ngoal (1 subgoal):\n 1. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   SourceTerm\n                    S \\<longmapsto>STCal Source\n                                    Target\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>S'.\n                      S' \\<in>S P' \\<and> S \\<longmapsto>Source* S';\n        SourceTerm\n         S \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S'.\n                            S' \\<in>S P' \\<and> S \\<longmapsto>Source* S'", "from A4 A6"], ["proof (chain)\npicking this:\n  S \\<longmapsto>Source* S'\n  S' \\<longmapsto>Source S''", "have \"S \\<longmapsto>Source* S''\""], ["proof (prove)\nusing this:\n  S \\<longmapsto>Source* S'\n  S' \\<longmapsto>Source S''\n\ngoal (1 subgoal):\n 1. S \\<longmapsto>Source* S''", "using step_to_steps[where Cal=\"Source\" and P=\"S'\" and P'=\"S''\"]"], ["proof (prove)\nusing this:\n  S \\<longmapsto>Source* S'\n  S' \\<longmapsto>Source S''\n  S' \\<longmapsto>Source S'' \\<Longrightarrow> S' \\<longmapsto>Source* S''\n\ngoal (1 subgoal):\n 1. S \\<longmapsto>Source* S''", "by (simp add: steps_add[where Cal=\"Source\" and P=\"S\" and Q=\"S'\" and R=\"S''\"])"], ["proof (state)\nthis:\n  S \\<longmapsto>Source* S''\n\ngoal (1 subgoal):\n 1. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   SourceTerm\n                    S \\<longmapsto>STCal Source\n                                    Target\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>S'.\n                      S' \\<in>S P' \\<and> S \\<longmapsto>Source* S';\n        SourceTerm\n         S \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S'.\n                            S' \\<in>S P' \\<and> S \\<longmapsto>Source* S'", "with A5"], ["proof (chain)\npicking this:\n  S'' \\<in>S P''\n  S \\<longmapsto>Source* S''", "show \"\\<exists>S''. S'' \\<in>S P'' \\<and> S \\<longmapsto>Source* S''\""], ["proof (prove)\nusing this:\n  S'' \\<in>S P''\n  S \\<longmapsto>Source* S''\n\ngoal (1 subgoal):\n 1. \\<exists>S''. S'' \\<in>S P'' \\<and> S \\<longmapsto>Source* S''", "by blast"], ["proof (state)\nthis:\n  \\<exists>S''. S'' \\<in>S P'' \\<and> S \\<longmapsto>Source* S''\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>S'. S' \\<in>S P' \\<and> S \\<longmapsto>Source* S'\n\ngoal (3 subgoals):\n 1. \\<And>S'.\n       S \\<longmapsto>Source* S' \\<and> S' \\<in>S P' \\<Longrightarrow>\n       SourceTerm S \\<longmapsto>STCal Source Target* SourceTerm S'\n 2. TargetTerm T \\<longmapsto>STCal Source Target* P' \\<Longrightarrow>\n    \\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'\n 3. \\<And>T'.\n       T \\<longmapsto>Target* T' \\<and> T' \\<in>T P' \\<Longrightarrow>\n       TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm T'", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>S'.\n       S \\<longmapsto>Source* S' \\<and> S' \\<in>S P' \\<Longrightarrow>\n       SourceTerm S \\<longmapsto>STCal Source Target* SourceTerm S'\n 2. TargetTerm T \\<longmapsto>STCal Source Target* P' \\<Longrightarrow>\n    \\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'\n 3. \\<And>T'.\n       T \\<longmapsto>Target* T' \\<and> T' \\<in>T P' \\<Longrightarrow>\n       TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm T'", "fix S'"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>S'.\n       S \\<longmapsto>Source* S' \\<and> S' \\<in>S P' \\<Longrightarrow>\n       SourceTerm S \\<longmapsto>STCal Source Target* SourceTerm S'\n 2. TargetTerm T \\<longmapsto>STCal Source Target* P' \\<Longrightarrow>\n    \\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'\n 3. \\<And>T'.\n       T \\<longmapsto>Target* T' \\<and> T' \\<in>T P' \\<Longrightarrow>\n       TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm T'", "assume \"S \\<longmapsto>Source* S'\""], ["proof (state)\nthis:\n  S \\<longmapsto>Source* S'\n\ngoal (3 subgoals):\n 1. \\<And>S'.\n       S \\<longmapsto>Source* S' \\<and> S' \\<in>S P' \\<Longrightarrow>\n       SourceTerm S \\<longmapsto>STCal Source Target* SourceTerm S'\n 2. TargetTerm T \\<longmapsto>STCal Source Target* P' \\<Longrightarrow>\n    \\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'\n 3. \\<And>T'.\n       T \\<longmapsto>Target* T' \\<and> T' \\<in>T P' \\<Longrightarrow>\n       TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm T'", "from this"], ["proof (chain)\npicking this:\n  S \\<longmapsto>Source* S'", "obtain n where \"S \\<longmapsto>Source\\<^bsup>n\\<^esup> S'\""], ["proof (prove)\nusing this:\n  S \\<longmapsto>Source* S'\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        S \\<longmapsto>Source\\<^bsup>n\\<^esup> S' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: steps_def)"], ["proof (state)\nthis:\n  S \\<longmapsto>Source\\<^bsup>n\\<^esup> S'\n\ngoal (3 subgoals):\n 1. \\<And>S'.\n       S \\<longmapsto>Source* S' \\<and> S' \\<in>S P' \\<Longrightarrow>\n       SourceTerm S \\<longmapsto>STCal Source Target* SourceTerm S'\n 2. TargetTerm T \\<longmapsto>STCal Source Target* P' \\<Longrightarrow>\n    \\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'\n 3. \\<And>T'.\n       T \\<longmapsto>Target* T' \\<and> T' \\<in>T P' \\<Longrightarrow>\n       TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm T'", "thus \"SourceTerm S \\<longmapsto>(STCal Source Target)* (SourceTerm S')\""], ["proof (prove)\nusing this:\n  S \\<longmapsto>Source\\<^bsup>n\\<^esup> S'\n\ngoal (1 subgoal):\n 1. SourceTerm S \\<longmapsto>STCal Source Target* SourceTerm S'", "proof (induct n arbitrary: S')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>S'.\n       S \\<longmapsto>Source\\<^bsup>0\\<^esup> S' \\<Longrightarrow>\n       SourceTerm S \\<longmapsto>STCal Source Target* SourceTerm S'\n 2. \\<And>n S'.\n       \\<lbrakk>\\<And>S'.\n                   S \\<longmapsto>Source\\<^bsup>n\\<^esup> S' \\<Longrightarrow>\n                   SourceTerm\n                    S \\<longmapsto>STCal Source Target* SourceTerm S';\n        S \\<longmapsto>Source\\<^bsup>Suc n\\<^esup> S'\\<rbrakk>\n       \\<Longrightarrow> SourceTerm\n                          S \\<longmapsto>STCal Source Target* SourceTerm S'", "case 0"], ["proof (state)\nthis:\n  S \\<longmapsto>Source\\<^bsup>0\\<^esup> S'\n\ngoal (2 subgoals):\n 1. \\<And>S'.\n       S \\<longmapsto>Source\\<^bsup>0\\<^esup> S' \\<Longrightarrow>\n       SourceTerm S \\<longmapsto>STCal Source Target* SourceTerm S'\n 2. \\<And>n S'.\n       \\<lbrakk>\\<And>S'.\n                   S \\<longmapsto>Source\\<^bsup>n\\<^esup> S' \\<Longrightarrow>\n                   SourceTerm\n                    S \\<longmapsto>STCal Source Target* SourceTerm S';\n        S \\<longmapsto>Source\\<^bsup>Suc n\\<^esup> S'\\<rbrakk>\n       \\<Longrightarrow> SourceTerm\n                          S \\<longmapsto>STCal Source Target* SourceTerm S'", "assume \"S \\<longmapsto>Source\\<^bsup>0\\<^esup> S'\""], ["proof (state)\nthis:\n  S \\<longmapsto>Source\\<^bsup>0\\<^esup> S'\n\ngoal (2 subgoals):\n 1. \\<And>S'.\n       S \\<longmapsto>Source\\<^bsup>0\\<^esup> S' \\<Longrightarrow>\n       SourceTerm S \\<longmapsto>STCal Source Target* SourceTerm S'\n 2. \\<And>n S'.\n       \\<lbrakk>\\<And>S'.\n                   S \\<longmapsto>Source\\<^bsup>n\\<^esup> S' \\<Longrightarrow>\n                   SourceTerm\n                    S \\<longmapsto>STCal Source Target* SourceTerm S';\n        S \\<longmapsto>Source\\<^bsup>Suc n\\<^esup> S'\\<rbrakk>\n       \\<Longrightarrow> SourceTerm\n                          S \\<longmapsto>STCal Source Target* SourceTerm S'", "hence \"S = S'\""], ["proof (prove)\nusing this:\n  S \\<longmapsto>Source\\<^bsup>0\\<^esup> S'\n\ngoal (1 subgoal):\n 1. S = S'", "by auto"], ["proof (state)\nthis:\n  S = S'\n\ngoal (2 subgoals):\n 1. \\<And>S'.\n       S \\<longmapsto>Source\\<^bsup>0\\<^esup> S' \\<Longrightarrow>\n       SourceTerm S \\<longmapsto>STCal Source Target* SourceTerm S'\n 2. \\<And>n S'.\n       \\<lbrakk>\\<And>S'.\n                   S \\<longmapsto>Source\\<^bsup>n\\<^esup> S' \\<Longrightarrow>\n                   SourceTerm\n                    S \\<longmapsto>STCal Source Target* SourceTerm S';\n        S \\<longmapsto>Source\\<^bsup>Suc n\\<^esup> S'\\<rbrakk>\n       \\<Longrightarrow> SourceTerm\n                          S \\<longmapsto>STCal Source Target* SourceTerm S'", "thus \"SourceTerm S \\<longmapsto>(STCal Source Target)* (SourceTerm S')\""], ["proof (prove)\nusing this:\n  S = S'\n\ngoal (1 subgoal):\n 1. SourceTerm S \\<longmapsto>STCal Source Target* SourceTerm S'", "by (simp add: steps_refl)"], ["proof (state)\nthis:\n  SourceTerm S \\<longmapsto>STCal Source Target* SourceTerm S'\n\ngoal (1 subgoal):\n 1. \\<And>n S'.\n       \\<lbrakk>\\<And>S'.\n                   S \\<longmapsto>Source\\<^bsup>n\\<^esup> S' \\<Longrightarrow>\n                   SourceTerm\n                    S \\<longmapsto>STCal Source Target* SourceTerm S';\n        S \\<longmapsto>Source\\<^bsup>Suc n\\<^esup> S'\\<rbrakk>\n       \\<Longrightarrow> SourceTerm\n                          S \\<longmapsto>STCal Source Target* SourceTerm S'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n S'.\n       \\<lbrakk>\\<And>S'.\n                   S \\<longmapsto>Source\\<^bsup>n\\<^esup> S' \\<Longrightarrow>\n                   SourceTerm\n                    S \\<longmapsto>STCal Source Target* SourceTerm S';\n        S \\<longmapsto>Source\\<^bsup>Suc n\\<^esup> S'\\<rbrakk>\n       \\<Longrightarrow> SourceTerm\n                          S \\<longmapsto>STCal Source Target* SourceTerm S'", "case (Suc n S'')"], ["proof (state)\nthis:\n  S \\<longmapsto>Source\\<^bsup>n\\<^esup> ?S' \\<Longrightarrow>\n  SourceTerm S \\<longmapsto>STCal Source Target* SourceTerm ?S'\n  S \\<longmapsto>Source\\<^bsup>Suc n\\<^esup> S''\n\ngoal (1 subgoal):\n 1. \\<And>n S'.\n       \\<lbrakk>\\<And>S'.\n                   S \\<longmapsto>Source\\<^bsup>n\\<^esup> S' \\<Longrightarrow>\n                   SourceTerm\n                    S \\<longmapsto>STCal Source Target* SourceTerm S';\n        S \\<longmapsto>Source\\<^bsup>Suc n\\<^esup> S'\\<rbrakk>\n       \\<Longrightarrow> SourceTerm\n                          S \\<longmapsto>STCal Source Target* SourceTerm S'", "assume \"S \\<longmapsto>Source\\<^bsup>Suc n\\<^esup> S''\""], ["proof (state)\nthis:\n  S \\<longmapsto>Source\\<^bsup>Suc n\\<^esup> S''\n\ngoal (1 subgoal):\n 1. \\<And>n S'.\n       \\<lbrakk>\\<And>S'.\n                   S \\<longmapsto>Source\\<^bsup>n\\<^esup> S' \\<Longrightarrow>\n                   SourceTerm\n                    S \\<longmapsto>STCal Source Target* SourceTerm S';\n        S \\<longmapsto>Source\\<^bsup>Suc n\\<^esup> S'\\<rbrakk>\n       \\<Longrightarrow> SourceTerm\n                          S \\<longmapsto>STCal Source Target* SourceTerm S'", "from this"], ["proof (chain)\npicking this:\n  S \\<longmapsto>Source\\<^bsup>Suc n\\<^esup> S''", "obtain S' where B1: \"S \\<longmapsto>Source\\<^bsup>n\\<^esup> S'\" and B2: \"S' \\<longmapsto>Source S''\""], ["proof (prove)\nusing this:\n  S \\<longmapsto>Source\\<^bsup>Suc n\\<^esup> S''\n\ngoal (1 subgoal):\n 1. (\\<And>S'.\n        S \\<longmapsto>Source\\<^bsup>n\\<^esup> S' \\<and>\n        S' \\<longmapsto>Source S'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  S \\<longmapsto>Source\\<^bsup>n\\<^esup> S'\n  S' \\<longmapsto>Source S''\n\ngoal (1 subgoal):\n 1. \\<And>n S'.\n       \\<lbrakk>\\<And>S'.\n                   S \\<longmapsto>Source\\<^bsup>n\\<^esup> S' \\<Longrightarrow>\n                   SourceTerm\n                    S \\<longmapsto>STCal Source Target* SourceTerm S';\n        S \\<longmapsto>Source\\<^bsup>Suc n\\<^esup> S'\\<rbrakk>\n       \\<Longrightarrow> SourceTerm\n                          S \\<longmapsto>STCal Source Target* SourceTerm S'", "assume \"\\<And>S'. S \\<longmapsto>Source\\<^bsup>n\\<^esup> S' \\<Longrightarrow> SourceTerm S \\<longmapsto>(STCal Source Target)* (SourceTerm S')\""], ["proof (state)\nthis:\n  S \\<longmapsto>Source\\<^bsup>n\\<^esup> ?S' \\<Longrightarrow>\n  SourceTerm S \\<longmapsto>STCal Source Target* SourceTerm ?S'\n\ngoal (1 subgoal):\n 1. \\<And>n S'.\n       \\<lbrakk>\\<And>S'.\n                   S \\<longmapsto>Source\\<^bsup>n\\<^esup> S' \\<Longrightarrow>\n                   SourceTerm\n                    S \\<longmapsto>STCal Source Target* SourceTerm S';\n        S \\<longmapsto>Source\\<^bsup>Suc n\\<^esup> S'\\<rbrakk>\n       \\<Longrightarrow> SourceTerm\n                          S \\<longmapsto>STCal Source Target* SourceTerm S'", "with B1"], ["proof (chain)\npicking this:\n  S \\<longmapsto>Source\\<^bsup>n\\<^esup> S'\n  S \\<longmapsto>Source\\<^bsup>n\\<^esup> ?S' \\<Longrightarrow>\n  SourceTerm S \\<longmapsto>STCal Source Target* SourceTerm ?S'", "have \"SourceTerm S \\<longmapsto>(STCal Source Target)* (SourceTerm S')\""], ["proof (prove)\nusing this:\n  S \\<longmapsto>Source\\<^bsup>n\\<^esup> S'\n  S \\<longmapsto>Source\\<^bsup>n\\<^esup> ?S' \\<Longrightarrow>\n  SourceTerm S \\<longmapsto>STCal Source Target* SourceTerm ?S'\n\ngoal (1 subgoal):\n 1. SourceTerm S \\<longmapsto>STCal Source Target* SourceTerm S'", "by blast"], ["proof (state)\nthis:\n  SourceTerm S \\<longmapsto>STCal Source Target* SourceTerm S'\n\ngoal (1 subgoal):\n 1. \\<And>n S'.\n       \\<lbrakk>\\<And>S'.\n                   S \\<longmapsto>Source\\<^bsup>n\\<^esup> S' \\<Longrightarrow>\n                   SourceTerm\n                    S \\<longmapsto>STCal Source Target* SourceTerm S';\n        S \\<longmapsto>Source\\<^bsup>Suc n\\<^esup> S'\\<rbrakk>\n       \\<Longrightarrow> SourceTerm\n                          S \\<longmapsto>STCal Source Target* SourceTerm S'", "moreover"], ["proof (state)\nthis:\n  SourceTerm S \\<longmapsto>STCal Source Target* SourceTerm S'\n\ngoal (1 subgoal):\n 1. \\<And>n S'.\n       \\<lbrakk>\\<And>S'.\n                   S \\<longmapsto>Source\\<^bsup>n\\<^esup> S' \\<Longrightarrow>\n                   SourceTerm\n                    S \\<longmapsto>STCal Source Target* SourceTerm S';\n        S \\<longmapsto>Source\\<^bsup>Suc n\\<^esup> S'\\<rbrakk>\n       \\<Longrightarrow> SourceTerm\n                          S \\<longmapsto>STCal Source Target* SourceTerm S'", "from B2"], ["proof (chain)\npicking this:\n  S' \\<longmapsto>Source S''", "have \"SourceTerm S' \\<longmapsto>(STCal Source Target)* (SourceTerm S'')\""], ["proof (prove)\nusing this:\n  S' \\<longmapsto>Source S''\n\ngoal (1 subgoal):\n 1. SourceTerm S' \\<longmapsto>STCal Source Target* SourceTerm S''", "using step_to_steps[where Cal=\"STCal Source Target\" and P=\"SourceTerm S'\"]"], ["proof (prove)\nusing this:\n  S' \\<longmapsto>Source S''\n  SourceTerm S' \\<longmapsto>STCal Source Target ?P' \\<Longrightarrow>\n  SourceTerm S' \\<longmapsto>STCal Source Target* ?P'\n\ngoal (1 subgoal):\n 1. SourceTerm S' \\<longmapsto>STCal Source Target* SourceTerm S''", "by (simp add: STCal_def)"], ["proof (state)\nthis:\n  SourceTerm S' \\<longmapsto>STCal Source Target* SourceTerm S''\n\ngoal (1 subgoal):\n 1. \\<And>n S'.\n       \\<lbrakk>\\<And>S'.\n                   S \\<longmapsto>Source\\<^bsup>n\\<^esup> S' \\<Longrightarrow>\n                   SourceTerm\n                    S \\<longmapsto>STCal Source Target* SourceTerm S';\n        S \\<longmapsto>Source\\<^bsup>Suc n\\<^esup> S'\\<rbrakk>\n       \\<Longrightarrow> SourceTerm\n                          S \\<longmapsto>STCal Source Target* SourceTerm S'", "ultimately"], ["proof (chain)\npicking this:\n  SourceTerm S \\<longmapsto>STCal Source Target* SourceTerm S'\n  SourceTerm S' \\<longmapsto>STCal Source Target* SourceTerm S''", "show \"SourceTerm S \\<longmapsto>(STCal Source Target)* (SourceTerm S'')\""], ["proof (prove)\nusing this:\n  SourceTerm S \\<longmapsto>STCal Source Target* SourceTerm S'\n  SourceTerm S' \\<longmapsto>STCal Source Target* SourceTerm S''\n\ngoal (1 subgoal):\n 1. SourceTerm S \\<longmapsto>STCal Source Target* SourceTerm S''", "by (rule steps_add)"], ["proof (state)\nthis:\n  SourceTerm S \\<longmapsto>STCal Source Target* SourceTerm S''\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  SourceTerm S \\<longmapsto>STCal Source Target* SourceTerm S'\n\ngoal (2 subgoals):\n 1. TargetTerm T \\<longmapsto>STCal Source Target* P' \\<Longrightarrow>\n    \\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'\n 2. \\<And>T'.\n       T \\<longmapsto>Target* T' \\<and> T' \\<in>T P' \\<Longrightarrow>\n       TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm T'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. TargetTerm T \\<longmapsto>STCal Source Target* P' \\<Longrightarrow>\n    \\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'\n 2. \\<And>T'.\n       T \\<longmapsto>Target* T' \\<and> T' \\<in>T P' \\<Longrightarrow>\n       TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm T'", "assume \"TargetTerm T \\<longmapsto>(STCal Source Target)* P'\""], ["proof (state)\nthis:\n  TargetTerm T \\<longmapsto>STCal Source Target* P'\n\ngoal (2 subgoals):\n 1. TargetTerm T \\<longmapsto>STCal Source Target* P' \\<Longrightarrow>\n    \\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'\n 2. \\<And>T'.\n       T \\<longmapsto>Target* T' \\<and> T' \\<in>T P' \\<Longrightarrow>\n       TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm T'", "from this"], ["proof (chain)\npicking this:\n  TargetTerm T \\<longmapsto>STCal Source Target* P'", "obtain n where \"TargetTerm T \\<longmapsto>(STCal Source Target)\\<^bsup>n\\<^esup> P'\""], ["proof (prove)\nusing this:\n  TargetTerm T \\<longmapsto>STCal Source Target* P'\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        TargetTerm\n         T \\<longmapsto>STCal Source\n                         Target\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: steps_def)"], ["proof (state)\nthis:\n  TargetTerm T \\<longmapsto>STCal Source Target\\<^bsup>n\\<^esup> P'\n\ngoal (2 subgoals):\n 1. TargetTerm T \\<longmapsto>STCal Source Target* P' \\<Longrightarrow>\n    \\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'\n 2. \\<And>T'.\n       T \\<longmapsto>Target* T' \\<and> T' \\<in>T P' \\<Longrightarrow>\n       TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm T'", "thus \"\\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'\""], ["proof (prove)\nusing this:\n  TargetTerm T \\<longmapsto>STCal Source Target\\<^bsup>n\\<^esup> P'\n\ngoal (1 subgoal):\n 1. \\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'", "proof (induct n arbitrary: P')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P'.\n       TargetTerm\n        T \\<longmapsto>STCal Source\n                        Target\\<^bsup>0\\<^esup> P' \\<Longrightarrow>\n       \\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'\n 2. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   TargetTerm\n                    T \\<longmapsto>STCal Source\n                                    Target\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>T'.\n                      T' \\<in>T P' \\<and> T \\<longmapsto>Target* T';\n        TargetTerm\n         T \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'", "case 0"], ["proof (state)\nthis:\n  TargetTerm T \\<longmapsto>STCal Source Target\\<^bsup>0\\<^esup> P'\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       TargetTerm\n        T \\<longmapsto>STCal Source\n                        Target\\<^bsup>0\\<^esup> P' \\<Longrightarrow>\n       \\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'\n 2. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   TargetTerm\n                    T \\<longmapsto>STCal Source\n                                    Target\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>T'.\n                      T' \\<in>T P' \\<and> T \\<longmapsto>Target* T';\n        TargetTerm\n         T \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'", "assume \"TargetTerm T \\<longmapsto>(STCal Source Target)\\<^bsup>0\\<^esup> P'\""], ["proof (state)\nthis:\n  TargetTerm T \\<longmapsto>STCal Source Target\\<^bsup>0\\<^esup> P'\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       TargetTerm\n        T \\<longmapsto>STCal Source\n                        Target\\<^bsup>0\\<^esup> P' \\<Longrightarrow>\n       \\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'\n 2. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   TargetTerm\n                    T \\<longmapsto>STCal Source\n                                    Target\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>T'.\n                      T' \\<in>T P' \\<and> T \\<longmapsto>Target* T';\n        TargetTerm\n         T \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'", "hence \"T \\<in>T P'\""], ["proof (prove)\nusing this:\n  TargetTerm T \\<longmapsto>STCal Source Target\\<^bsup>0\\<^esup> P'\n\ngoal (1 subgoal):\n 1. T \\<in>T P'", "by simp"], ["proof (state)\nthis:\n  T \\<in>T P'\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       TargetTerm\n        T \\<longmapsto>STCal Source\n                        Target\\<^bsup>0\\<^esup> P' \\<Longrightarrow>\n       \\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'\n 2. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   TargetTerm\n                    T \\<longmapsto>STCal Source\n                                    Target\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>T'.\n                      T' \\<in>T P' \\<and> T \\<longmapsto>Target* T';\n        TargetTerm\n         T \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'", "moreover"], ["proof (state)\nthis:\n  T \\<in>T P'\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       TargetTerm\n        T \\<longmapsto>STCal Source\n                        Target\\<^bsup>0\\<^esup> P' \\<Longrightarrow>\n       \\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'\n 2. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   TargetTerm\n                    T \\<longmapsto>STCal Source\n                                    Target\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>T'.\n                      T' \\<in>T P' \\<and> T \\<longmapsto>Target* T';\n        TargetTerm\n         T \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'", "have \"T \\<longmapsto>Target* T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<longmapsto>Target* T", "by (rule steps_refl)"], ["proof (state)\nthis:\n  T \\<longmapsto>Target* T\n\ngoal (2 subgoals):\n 1. \\<And>P'.\n       TargetTerm\n        T \\<longmapsto>STCal Source\n                        Target\\<^bsup>0\\<^esup> P' \\<Longrightarrow>\n       \\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'\n 2. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   TargetTerm\n                    T \\<longmapsto>STCal Source\n                                    Target\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>T'.\n                      T' \\<in>T P' \\<and> T \\<longmapsto>Target* T';\n        TargetTerm\n         T \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'", "ultimately"], ["proof (chain)\npicking this:\n  T \\<in>T P'\n  T \\<longmapsto>Target* T", "show \"\\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'\""], ["proof (prove)\nusing this:\n  T \\<in>T P'\n  T \\<longmapsto>Target* T\n\ngoal (1 subgoal):\n 1. \\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'", "by blast"], ["proof (state)\nthis:\n  \\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'\n\ngoal (1 subgoal):\n 1. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   TargetTerm\n                    T \\<longmapsto>STCal Source\n                                    Target\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>T'.\n                      T' \\<in>T P' \\<and> T \\<longmapsto>Target* T';\n        TargetTerm\n         T \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   TargetTerm\n                    T \\<longmapsto>STCal Source\n                                    Target\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>T'.\n                      T' \\<in>T P' \\<and> T \\<longmapsto>Target* T';\n        TargetTerm\n         T \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'", "case (Suc n P'')"], ["proof (state)\nthis:\n  TargetTerm\n   T \\<longmapsto>STCal Source Target\\<^bsup>n\\<^esup> ?P' \\<Longrightarrow>\n  \\<exists>T'. T' \\<in>T ?P' \\<and> T \\<longmapsto>Target* T'\n  TargetTerm T \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P''\n\ngoal (1 subgoal):\n 1. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   TargetTerm\n                    T \\<longmapsto>STCal Source\n                                    Target\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>T'.\n                      T' \\<in>T P' \\<and> T \\<longmapsto>Target* T';\n        TargetTerm\n         T \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'", "assume \"TargetTerm T \\<longmapsto>(STCal Source Target)\\<^bsup>Suc n\\<^esup> P''\""], ["proof (state)\nthis:\n  TargetTerm T \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P''\n\ngoal (1 subgoal):\n 1. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   TargetTerm\n                    T \\<longmapsto>STCal Source\n                                    Target\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>T'.\n                      T' \\<in>T P' \\<and> T \\<longmapsto>Target* T';\n        TargetTerm\n         T \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'", "from this"], ["proof (chain)\npicking this:\n  TargetTerm T \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P''", "obtain P' where A1: \"TargetTerm T \\<longmapsto>(STCal Source Target)\\<^bsup>n\\<^esup> P'\"\n                          and A2: \"P' \\<longmapsto>(STCal Source Target) P''\""], ["proof (prove)\nusing this:\n  TargetTerm T \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P''\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        TargetTerm\n         T \\<longmapsto>STCal Source Target\\<^bsup>n\\<^esup> P' \\<and>\n        P' \\<longmapsto>STCal Source Target P'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  TargetTerm T \\<longmapsto>STCal Source Target\\<^bsup>n\\<^esup> P'\n  P' \\<longmapsto>STCal Source Target P''\n\ngoal (1 subgoal):\n 1. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   TargetTerm\n                    T \\<longmapsto>STCal Source\n                                    Target\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>T'.\n                      T' \\<in>T P' \\<and> T \\<longmapsto>Target* T';\n        TargetTerm\n         T \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'", "assume \"\\<And>P'. TargetTerm T \\<longmapsto>(STCal Source Target)\\<^bsup>n\\<^esup> P' \\<Longrightarrow> \\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'\""], ["proof (state)\nthis:\n  TargetTerm\n   T \\<longmapsto>STCal Source Target\\<^bsup>n\\<^esup> ?P' \\<Longrightarrow>\n  \\<exists>T'. T' \\<in>T ?P' \\<and> T \\<longmapsto>Target* T'\n\ngoal (1 subgoal):\n 1. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   TargetTerm\n                    T \\<longmapsto>STCal Source\n                                    Target\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>T'.\n                      T' \\<in>T P' \\<and> T \\<longmapsto>Target* T';\n        TargetTerm\n         T \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'", "with A1"], ["proof (chain)\npicking this:\n  TargetTerm T \\<longmapsto>STCal Source Target\\<^bsup>n\\<^esup> P'\n  TargetTerm\n   T \\<longmapsto>STCal Source Target\\<^bsup>n\\<^esup> ?P' \\<Longrightarrow>\n  \\<exists>T'. T' \\<in>T ?P' \\<and> T \\<longmapsto>Target* T'", "obtain T' where A3: \"T' \\<in>T P'\" and A4: \"T \\<longmapsto>Target* T'\""], ["proof (prove)\nusing this:\n  TargetTerm T \\<longmapsto>STCal Source Target\\<^bsup>n\\<^esup> P'\n  TargetTerm\n   T \\<longmapsto>STCal Source Target\\<^bsup>n\\<^esup> ?P' \\<Longrightarrow>\n  \\<exists>T'. T' \\<in>T ?P' \\<and> T \\<longmapsto>Target* T'\n\ngoal (1 subgoal):\n 1. (\\<And>T'.\n        T' \\<in>T P' \\<and> T \\<longmapsto>Target* T' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  T' \\<in>T P'\n  T \\<longmapsto>Target* T'\n\ngoal (1 subgoal):\n 1. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   TargetTerm\n                    T \\<longmapsto>STCal Source\n                                    Target\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>T'.\n                      T' \\<in>T P' \\<and> T \\<longmapsto>Target* T';\n        TargetTerm\n         T \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'", "from A2 A3"], ["proof (chain)\npicking this:\n  P' \\<longmapsto>STCal Source Target P''\n  T' \\<in>T P'", "obtain T'' where A5: \"T'' \\<in>T P''\" and A6: \"T' \\<longmapsto>Target T''\""], ["proof (prove)\nusing this:\n  P' \\<longmapsto>STCal Source Target P''\n  T' \\<in>T P'\n\ngoal (1 subgoal):\n 1. (\\<And>T''.\n        T'' \\<in>T P'' \\<and> T' \\<longmapsto>Target T'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using STCal_step(2)[where T=\"T'\" and P'=\"P''\"]"], ["proof (prove)\nusing this:\n  P' \\<longmapsto>STCal Source Target P''\n  T' \\<in>T P'\n  TargetTerm T' \\<longmapsto>STCal Source Target P'' =\n  (\\<exists>T'a. T'a \\<in>T P'' \\<and> T' \\<longmapsto>Target T'a)\n\ngoal (1 subgoal):\n 1. (\\<And>T''.\n        T'' \\<in>T P'' \\<and> T' \\<longmapsto>Target T'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  T'' \\<in>T P''\n  T' \\<longmapsto>Target T''\n\ngoal (1 subgoal):\n 1. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   TargetTerm\n                    T \\<longmapsto>STCal Source\n                                    Target\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>T'.\n                      T' \\<in>T P' \\<and> T \\<longmapsto>Target* T';\n        TargetTerm\n         T \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'", "from A4 A6"], ["proof (chain)\npicking this:\n  T \\<longmapsto>Target* T'\n  T' \\<longmapsto>Target T''", "have \"T \\<longmapsto>Target* T''\""], ["proof (prove)\nusing this:\n  T \\<longmapsto>Target* T'\n  T' \\<longmapsto>Target T''\n\ngoal (1 subgoal):\n 1. T \\<longmapsto>Target* T''", "using step_to_steps[where Cal=\"Target\" and P=\"T'\" and P'=\"T''\"]"], ["proof (prove)\nusing this:\n  T \\<longmapsto>Target* T'\n  T' \\<longmapsto>Target T''\n  T' \\<longmapsto>Target T'' \\<Longrightarrow> T' \\<longmapsto>Target* T''\n\ngoal (1 subgoal):\n 1. T \\<longmapsto>Target* T''", "by (simp add: steps_add[where Cal=\"Target\" and P=\"T\" and Q=\"T'\" and R=\"T''\"])"], ["proof (state)\nthis:\n  T \\<longmapsto>Target* T''\n\ngoal (1 subgoal):\n 1. \\<And>n P'.\n       \\<lbrakk>\\<And>P'.\n                   TargetTerm\n                    T \\<longmapsto>STCal Source\n                                    Target\\<^bsup>n\\<^esup> P' \\<Longrightarrow>\n                   \\<exists>T'.\n                      T' \\<in>T P' \\<and> T \\<longmapsto>Target* T';\n        TargetTerm\n         T \\<longmapsto>STCal Source Target\\<^bsup>Suc n\\<^esup> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'", "with A5"], ["proof (chain)\npicking this:\n  T'' \\<in>T P''\n  T \\<longmapsto>Target* T''", "show \"\\<exists>T''. T'' \\<in>T P'' \\<and> T \\<longmapsto>Target* T''\""], ["proof (prove)\nusing this:\n  T'' \\<in>T P''\n  T \\<longmapsto>Target* T''\n\ngoal (1 subgoal):\n 1. \\<exists>T''. T'' \\<in>T P'' \\<and> T \\<longmapsto>Target* T''", "by blast"], ["proof (state)\nthis:\n  \\<exists>T''. T'' \\<in>T P'' \\<and> T \\<longmapsto>Target* T''\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>T'. T' \\<in>T P' \\<and> T \\<longmapsto>Target* T'\n\ngoal (1 subgoal):\n 1. \\<And>T'.\n       T \\<longmapsto>Target* T' \\<and> T' \\<in>T P' \\<Longrightarrow>\n       TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm T'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>T'.\n       T \\<longmapsto>Target* T' \\<and> T' \\<in>T P' \\<Longrightarrow>\n       TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm T'", "fix T'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>T'.\n       T \\<longmapsto>Target* T' \\<and> T' \\<in>T P' \\<Longrightarrow>\n       TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm T'", "assume \"T \\<longmapsto>Target* T'\""], ["proof (state)\nthis:\n  T \\<longmapsto>Target* T'\n\ngoal (1 subgoal):\n 1. \\<And>T'.\n       T \\<longmapsto>Target* T' \\<and> T' \\<in>T P' \\<Longrightarrow>\n       TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm T'", "from this"], ["proof (chain)\npicking this:\n  T \\<longmapsto>Target* T'", "obtain n where \"T \\<longmapsto>Target\\<^bsup>n\\<^esup> T'\""], ["proof (prove)\nusing this:\n  T \\<longmapsto>Target* T'\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        T \\<longmapsto>Target\\<^bsup>n\\<^esup> T' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: steps_def)"], ["proof (state)\nthis:\n  T \\<longmapsto>Target\\<^bsup>n\\<^esup> T'\n\ngoal (1 subgoal):\n 1. \\<And>T'.\n       T \\<longmapsto>Target* T' \\<and> T' \\<in>T P' \\<Longrightarrow>\n       TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm T'", "thus \"TargetTerm T \\<longmapsto>(STCal Source Target)* (TargetTerm T')\""], ["proof (prove)\nusing this:\n  T \\<longmapsto>Target\\<^bsup>n\\<^esup> T'\n\ngoal (1 subgoal):\n 1. TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm T'", "proof (induct n arbitrary: T')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>T'.\n       T \\<longmapsto>Target\\<^bsup>0\\<^esup> T' \\<Longrightarrow>\n       TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm T'\n 2. \\<And>n T'.\n       \\<lbrakk>\\<And>T'.\n                   T \\<longmapsto>Target\\<^bsup>n\\<^esup> T' \\<Longrightarrow>\n                   TargetTerm\n                    T \\<longmapsto>STCal Source Target* TargetTerm T';\n        T \\<longmapsto>Target\\<^bsup>Suc n\\<^esup> T'\\<rbrakk>\n       \\<Longrightarrow> TargetTerm\n                          T \\<longmapsto>STCal Source Target* TargetTerm T'", "case 0"], ["proof (state)\nthis:\n  T \\<longmapsto>Target\\<^bsup>0\\<^esup> T'\n\ngoal (2 subgoals):\n 1. \\<And>T'.\n       T \\<longmapsto>Target\\<^bsup>0\\<^esup> T' \\<Longrightarrow>\n       TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm T'\n 2. \\<And>n T'.\n       \\<lbrakk>\\<And>T'.\n                   T \\<longmapsto>Target\\<^bsup>n\\<^esup> T' \\<Longrightarrow>\n                   TargetTerm\n                    T \\<longmapsto>STCal Source Target* TargetTerm T';\n        T \\<longmapsto>Target\\<^bsup>Suc n\\<^esup> T'\\<rbrakk>\n       \\<Longrightarrow> TargetTerm\n                          T \\<longmapsto>STCal Source Target* TargetTerm T'", "assume \"T \\<longmapsto>Target\\<^bsup>0\\<^esup> T'\""], ["proof (state)\nthis:\n  T \\<longmapsto>Target\\<^bsup>0\\<^esup> T'\n\ngoal (2 subgoals):\n 1. \\<And>T'.\n       T \\<longmapsto>Target\\<^bsup>0\\<^esup> T' \\<Longrightarrow>\n       TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm T'\n 2. \\<And>n T'.\n       \\<lbrakk>\\<And>T'.\n                   T \\<longmapsto>Target\\<^bsup>n\\<^esup> T' \\<Longrightarrow>\n                   TargetTerm\n                    T \\<longmapsto>STCal Source Target* TargetTerm T';\n        T \\<longmapsto>Target\\<^bsup>Suc n\\<^esup> T'\\<rbrakk>\n       \\<Longrightarrow> TargetTerm\n                          T \\<longmapsto>STCal Source Target* TargetTerm T'", "hence \"T = T'\""], ["proof (prove)\nusing this:\n  T \\<longmapsto>Target\\<^bsup>0\\<^esup> T'\n\ngoal (1 subgoal):\n 1. T = T'", "by auto"], ["proof (state)\nthis:\n  T = T'\n\ngoal (2 subgoals):\n 1. \\<And>T'.\n       T \\<longmapsto>Target\\<^bsup>0\\<^esup> T' \\<Longrightarrow>\n       TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm T'\n 2. \\<And>n T'.\n       \\<lbrakk>\\<And>T'.\n                   T \\<longmapsto>Target\\<^bsup>n\\<^esup> T' \\<Longrightarrow>\n                   TargetTerm\n                    T \\<longmapsto>STCal Source Target* TargetTerm T';\n        T \\<longmapsto>Target\\<^bsup>Suc n\\<^esup> T'\\<rbrakk>\n       \\<Longrightarrow> TargetTerm\n                          T \\<longmapsto>STCal Source Target* TargetTerm T'", "thus \"TargetTerm T \\<longmapsto>(STCal Source Target)* (TargetTerm T')\""], ["proof (prove)\nusing this:\n  T = T'\n\ngoal (1 subgoal):\n 1. TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm T'", "by (simp add: steps_refl)"], ["proof (state)\nthis:\n  TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm T'\n\ngoal (1 subgoal):\n 1. \\<And>n T'.\n       \\<lbrakk>\\<And>T'.\n                   T \\<longmapsto>Target\\<^bsup>n\\<^esup> T' \\<Longrightarrow>\n                   TargetTerm\n                    T \\<longmapsto>STCal Source Target* TargetTerm T';\n        T \\<longmapsto>Target\\<^bsup>Suc n\\<^esup> T'\\<rbrakk>\n       \\<Longrightarrow> TargetTerm\n                          T \\<longmapsto>STCal Source Target* TargetTerm T'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n T'.\n       \\<lbrakk>\\<And>T'.\n                   T \\<longmapsto>Target\\<^bsup>n\\<^esup> T' \\<Longrightarrow>\n                   TargetTerm\n                    T \\<longmapsto>STCal Source Target* TargetTerm T';\n        T \\<longmapsto>Target\\<^bsup>Suc n\\<^esup> T'\\<rbrakk>\n       \\<Longrightarrow> TargetTerm\n                          T \\<longmapsto>STCal Source Target* TargetTerm T'", "case (Suc n T'')"], ["proof (state)\nthis:\n  T \\<longmapsto>Target\\<^bsup>n\\<^esup> ?T' \\<Longrightarrow>\n  TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm ?T'\n  T \\<longmapsto>Target\\<^bsup>Suc n\\<^esup> T''\n\ngoal (1 subgoal):\n 1. \\<And>n T'.\n       \\<lbrakk>\\<And>T'.\n                   T \\<longmapsto>Target\\<^bsup>n\\<^esup> T' \\<Longrightarrow>\n                   TargetTerm\n                    T \\<longmapsto>STCal Source Target* TargetTerm T';\n        T \\<longmapsto>Target\\<^bsup>Suc n\\<^esup> T'\\<rbrakk>\n       \\<Longrightarrow> TargetTerm\n                          T \\<longmapsto>STCal Source Target* TargetTerm T'", "assume \"T \\<longmapsto>Target\\<^bsup>Suc n\\<^esup> T''\""], ["proof (state)\nthis:\n  T \\<longmapsto>Target\\<^bsup>Suc n\\<^esup> T''\n\ngoal (1 subgoal):\n 1. \\<And>n T'.\n       \\<lbrakk>\\<And>T'.\n                   T \\<longmapsto>Target\\<^bsup>n\\<^esup> T' \\<Longrightarrow>\n                   TargetTerm\n                    T \\<longmapsto>STCal Source Target* TargetTerm T';\n        T \\<longmapsto>Target\\<^bsup>Suc n\\<^esup> T'\\<rbrakk>\n       \\<Longrightarrow> TargetTerm\n                          T \\<longmapsto>STCal Source Target* TargetTerm T'", "from this"], ["proof (chain)\npicking this:\n  T \\<longmapsto>Target\\<^bsup>Suc n\\<^esup> T''", "obtain T' where B1: \"T \\<longmapsto>Target\\<^bsup>n\\<^esup> T'\" and B2: \"T' \\<longmapsto>Target T''\""], ["proof (prove)\nusing this:\n  T \\<longmapsto>Target\\<^bsup>Suc n\\<^esup> T''\n\ngoal (1 subgoal):\n 1. (\\<And>T'.\n        T \\<longmapsto>Target\\<^bsup>n\\<^esup> T' \\<and>\n        T' \\<longmapsto>Target T'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  T \\<longmapsto>Target\\<^bsup>n\\<^esup> T'\n  T' \\<longmapsto>Target T''\n\ngoal (1 subgoal):\n 1. \\<And>n T'.\n       \\<lbrakk>\\<And>T'.\n                   T \\<longmapsto>Target\\<^bsup>n\\<^esup> T' \\<Longrightarrow>\n                   TargetTerm\n                    T \\<longmapsto>STCal Source Target* TargetTerm T';\n        T \\<longmapsto>Target\\<^bsup>Suc n\\<^esup> T'\\<rbrakk>\n       \\<Longrightarrow> TargetTerm\n                          T \\<longmapsto>STCal Source Target* TargetTerm T'", "assume \"\\<And>T'. T \\<longmapsto>Target\\<^bsup>n\\<^esup> T' \\<Longrightarrow> TargetTerm T \\<longmapsto>(STCal Source Target)* (TargetTerm T')\""], ["proof (state)\nthis:\n  T \\<longmapsto>Target\\<^bsup>n\\<^esup> ?T' \\<Longrightarrow>\n  TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm ?T'\n\ngoal (1 subgoal):\n 1. \\<And>n T'.\n       \\<lbrakk>\\<And>T'.\n                   T \\<longmapsto>Target\\<^bsup>n\\<^esup> T' \\<Longrightarrow>\n                   TargetTerm\n                    T \\<longmapsto>STCal Source Target* TargetTerm T';\n        T \\<longmapsto>Target\\<^bsup>Suc n\\<^esup> T'\\<rbrakk>\n       \\<Longrightarrow> TargetTerm\n                          T \\<longmapsto>STCal Source Target* TargetTerm T'", "with B1"], ["proof (chain)\npicking this:\n  T \\<longmapsto>Target\\<^bsup>n\\<^esup> T'\n  T \\<longmapsto>Target\\<^bsup>n\\<^esup> ?T' \\<Longrightarrow>\n  TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm ?T'", "have \"TargetTerm T \\<longmapsto>(STCal Source Target)* (TargetTerm T')\""], ["proof (prove)\nusing this:\n  T \\<longmapsto>Target\\<^bsup>n\\<^esup> T'\n  T \\<longmapsto>Target\\<^bsup>n\\<^esup> ?T' \\<Longrightarrow>\n  TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm ?T'\n\ngoal (1 subgoal):\n 1. TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm T'", "by blast"], ["proof (state)\nthis:\n  TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm T'\n\ngoal (1 subgoal):\n 1. \\<And>n T'.\n       \\<lbrakk>\\<And>T'.\n                   T \\<longmapsto>Target\\<^bsup>n\\<^esup> T' \\<Longrightarrow>\n                   TargetTerm\n                    T \\<longmapsto>STCal Source Target* TargetTerm T';\n        T \\<longmapsto>Target\\<^bsup>Suc n\\<^esup> T'\\<rbrakk>\n       \\<Longrightarrow> TargetTerm\n                          T \\<longmapsto>STCal Source Target* TargetTerm T'", "moreover"], ["proof (state)\nthis:\n  TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm T'\n\ngoal (1 subgoal):\n 1. \\<And>n T'.\n       \\<lbrakk>\\<And>T'.\n                   T \\<longmapsto>Target\\<^bsup>n\\<^esup> T' \\<Longrightarrow>\n                   TargetTerm\n                    T \\<longmapsto>STCal Source Target* TargetTerm T';\n        T \\<longmapsto>Target\\<^bsup>Suc n\\<^esup> T'\\<rbrakk>\n       \\<Longrightarrow> TargetTerm\n                          T \\<longmapsto>STCal Source Target* TargetTerm T'", "from B2"], ["proof (chain)\npicking this:\n  T' \\<longmapsto>Target T''", "have \"TargetTerm T' \\<longmapsto>(STCal Source Target)* (TargetTerm T'')\""], ["proof (prove)\nusing this:\n  T' \\<longmapsto>Target T''\n\ngoal (1 subgoal):\n 1. TargetTerm T' \\<longmapsto>STCal Source Target* TargetTerm T''", "using step_to_steps[where Cal=\"STCal Source Target\" and P=\"TargetTerm T'\"]"], ["proof (prove)\nusing this:\n  T' \\<longmapsto>Target T''\n  TargetTerm T' \\<longmapsto>STCal Source Target ?P' \\<Longrightarrow>\n  TargetTerm T' \\<longmapsto>STCal Source Target* ?P'\n\ngoal (1 subgoal):\n 1. TargetTerm T' \\<longmapsto>STCal Source Target* TargetTerm T''", "by (simp add: STCal_def)"], ["proof (state)\nthis:\n  TargetTerm T' \\<longmapsto>STCal Source Target* TargetTerm T''\n\ngoal (1 subgoal):\n 1. \\<And>n T'.\n       \\<lbrakk>\\<And>T'.\n                   T \\<longmapsto>Target\\<^bsup>n\\<^esup> T' \\<Longrightarrow>\n                   TargetTerm\n                    T \\<longmapsto>STCal Source Target* TargetTerm T';\n        T \\<longmapsto>Target\\<^bsup>Suc n\\<^esup> T'\\<rbrakk>\n       \\<Longrightarrow> TargetTerm\n                          T \\<longmapsto>STCal Source Target* TargetTerm T'", "ultimately"], ["proof (chain)\npicking this:\n  TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm T'\n  TargetTerm T' \\<longmapsto>STCal Source Target* TargetTerm T''", "show \"TargetTerm T \\<longmapsto>(STCal Source Target)* (TargetTerm T'')\""], ["proof (prove)\nusing this:\n  TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm T'\n  TargetTerm T' \\<longmapsto>STCal Source Target* TargetTerm T''\n\ngoal (1 subgoal):\n 1. TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm T''", "by (rule steps_add)"], ["proof (state)\nthis:\n  TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm T''\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  TargetTerm T \\<longmapsto>STCal Source Target* TargetTerm T'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stepsST_STCal_steps:\n  fixes P P' :: \"('procS, 'procT) Proc\"\n  shows \"P \\<longmapsto>(STCal Source Target)* P' = P \\<longmapsto>ST* P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<longmapsto>STCal Source Target* P' = P \\<longmapsto>ST* P'", "proof (cases P)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S P \\<Longrightarrow>\n       P \\<longmapsto>STCal Source Target* P' = P \\<longmapsto>ST* P'\n 2. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       P \\<longmapsto>STCal Source Target* P' = P \\<longmapsto>ST* P'", "case (SourceTerm SP)"], ["proof (state)\nthis:\n  SP \\<in>S P\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S P \\<Longrightarrow>\n       P \\<longmapsto>STCal Source Target* P' = P \\<longmapsto>ST* P'\n 2. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       P \\<longmapsto>STCal Source Target* P' = P \\<longmapsto>ST* P'", "assume \"SP \\<in>S P\""], ["proof (state)\nthis:\n  SP \\<in>S P\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S P \\<Longrightarrow>\n       P \\<longmapsto>STCal Source Target* P' = P \\<longmapsto>ST* P'\n 2. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       P \\<longmapsto>STCal Source Target* P' = P \\<longmapsto>ST* P'", "thus \"P \\<longmapsto>(STCal Source Target)* P' = P \\<longmapsto>ST* P'\""], ["proof (prove)\nusing this:\n  SP \\<in>S P\n\ngoal (1 subgoal):\n 1. P \\<longmapsto>STCal Source Target* P' = P \\<longmapsto>ST* P'", "using STCal_steps(1)[where S=\"SP\" and P'=\"P'\"] STSteps_steps(1)[where S=\"SP\" and P'=\"P'\"]"], ["proof (prove)\nusing this:\n  SP \\<in>S P\n  SourceTerm SP \\<longmapsto>STCal Source Target* P' =\n  (\\<exists>S'. S' \\<in>S P' \\<and> SP \\<longmapsto>Source* S')\n  SourceTerm SP \\<longmapsto>ST* P' =\n  (\\<exists>S'. S' \\<in>S P' \\<and> SP \\<longmapsto>Source* S')\n\ngoal (1 subgoal):\n 1. P \\<longmapsto>STCal Source Target* P' = P \\<longmapsto>ST* P'", "by blast"], ["proof (state)\nthis:\n  P \\<longmapsto>STCal Source Target* P' = P \\<longmapsto>ST* P'\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       P \\<longmapsto>STCal Source Target* P' = P \\<longmapsto>ST* P'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       P \\<longmapsto>STCal Source Target* P' = P \\<longmapsto>ST* P'", "case (TargetTerm TP)"], ["proof (state)\nthis:\n  TP \\<in>T P\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       P \\<longmapsto>STCal Source Target* P' = P \\<longmapsto>ST* P'", "assume \"TP \\<in>T P\""], ["proof (state)\nthis:\n  TP \\<in>T P\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       P \\<longmapsto>STCal Source Target* P' = P \\<longmapsto>ST* P'", "thus \"P \\<longmapsto>(STCal Source Target)* P' = P \\<longmapsto>ST* P'\""], ["proof (prove)\nusing this:\n  TP \\<in>T P\n\ngoal (1 subgoal):\n 1. P \\<longmapsto>STCal Source Target* P' = P \\<longmapsto>ST* P'", "using STCal_steps(2)[where T=\"TP\" and P'=\"P'\"] STSteps_steps(2)[where T=\"TP\" and P'=\"P'\"]"], ["proof (prove)\nusing this:\n  TP \\<in>T P\n  TargetTerm TP \\<longmapsto>STCal Source Target* P' =\n  (\\<exists>T'. T' \\<in>T P' \\<and> TP \\<longmapsto>Target* T')\n  TargetTerm TP \\<longmapsto>ST* P' =\n  (\\<exists>T'. T' \\<in>T P' \\<and> TP \\<longmapsto>Target* T')\n\ngoal (1 subgoal):\n 1. P \\<longmapsto>STCal Source Target* P' = P \\<longmapsto>ST* P'", "by blast"], ["proof (state)\nthis:\n  P \\<longmapsto>STCal Source Target* P' = P \\<longmapsto>ST* P'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stepsST_refl:\n  fixes P :: \"('procS, 'procT) Proc\"\n  shows \"P \\<longmapsto>ST* P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<longmapsto>ST* P", "by (cases P, simp_all add: steps_refl)"], ["", "lemma stepsST_add:\n  fixes P Q R :: \"('procS, 'procT) Proc\"\n  assumes A1: \"P \\<longmapsto>ST* Q\"\n      and A2: \"Q \\<longmapsto>ST* R\"\n  shows \"P \\<longmapsto>ST* R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<longmapsto>ST* R", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<longmapsto>ST* R", "from A1"], ["proof (chain)\npicking this:\n  P \\<longmapsto>ST* Q", "have \"P \\<longmapsto>(STCal Source Target)* Q\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>ST* Q\n\ngoal (1 subgoal):\n 1. P \\<longmapsto>STCal Source Target* Q", "by (simp add: stepsST_STCal_steps)"], ["proof (state)\nthis:\n  P \\<longmapsto>STCal Source Target* Q\n\ngoal (1 subgoal):\n 1. P \\<longmapsto>ST* R", "moreover"], ["proof (state)\nthis:\n  P \\<longmapsto>STCal Source Target* Q\n\ngoal (1 subgoal):\n 1. P \\<longmapsto>ST* R", "from A2"], ["proof (chain)\npicking this:\n  Q \\<longmapsto>ST* R", "have \"Q \\<longmapsto>(STCal Source Target)* R\""], ["proof (prove)\nusing this:\n  Q \\<longmapsto>ST* R\n\ngoal (1 subgoal):\n 1. Q \\<longmapsto>STCal Source Target* R", "by (simp add: stepsST_STCal_steps)"], ["proof (state)\nthis:\n  Q \\<longmapsto>STCal Source Target* R\n\ngoal (1 subgoal):\n 1. P \\<longmapsto>ST* R", "ultimately"], ["proof (chain)\npicking this:\n  P \\<longmapsto>STCal Source Target* Q\n  Q \\<longmapsto>STCal Source Target* R", "have \"P \\<longmapsto>(STCal Source Target)* R\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>STCal Source Target* Q\n  Q \\<longmapsto>STCal Source Target* R\n\ngoal (1 subgoal):\n 1. P \\<longmapsto>STCal Source Target* R", "by (rule steps_add)"], ["proof (state)\nthis:\n  P \\<longmapsto>STCal Source Target* R\n\ngoal (1 subgoal):\n 1. P \\<longmapsto>ST* R", "thus \"P \\<longmapsto>ST* R\""], ["proof (prove)\nusing this:\n  P \\<longmapsto>STCal Source Target* R\n\ngoal (1 subgoal):\n 1. P \\<longmapsto>ST* R", "by (simp add: stepsST_STCal_steps)"], ["proof (state)\nthis:\n  P \\<longmapsto>ST* R\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>A divergent term of Proc is either a divergent source term or a divergent target term.\\<close>"], ["", "abbreviation divergentST\n    :: \"('procS, 'procT) Proc \\<Rightarrow> bool\" (\"_ \\<longmapsto>ST\\<omega>\" [70] 80)\n  where\n  \"P \\<longmapsto>ST\\<omega> \\<equiv> (\\<exists>S. S \\<in>S P \\<and> S \\<longmapsto>(Source)\\<omega>) \\<or> (\\<exists>T. T \\<in>T P \\<and> T \\<longmapsto>(Target)\\<omega>)\""], ["", "lemma STCal_divergent:\n  fixes S  :: \"'procS\"\n    and T  :: \"'procT\"\n  shows \"SourceTerm S \\<longmapsto>(STCal Source Target)\\<omega> = S \\<longmapsto>(Source)\\<omega>\"\n    and \"TargetTerm T \\<longmapsto>(STCal Source Target)\\<omega> = T \\<longmapsto>(Target)\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SourceTerm S \\<longmapsto>STCal Source Target\\<omega> =\n    S \\<longmapsto>Source\\<omega> &&&\n    TargetTerm T \\<longmapsto>STCal Source Target\\<omega> =\n    T \\<longmapsto>Target\\<omega>", "using STCal_steps"], ["proof (prove)\nusing this:\n  SourceTerm ?S \\<longmapsto>STCal Source Target* ?P' =\n  (\\<exists>S'. S' \\<in>S ?P' \\<and> ?S \\<longmapsto>Source* S')\n  TargetTerm ?T \\<longmapsto>STCal Source Target* ?P' =\n  (\\<exists>T'. T' \\<in>T ?P' \\<and> ?T \\<longmapsto>Target* T')\n\ngoal (1 subgoal):\n 1. SourceTerm S \\<longmapsto>STCal Source Target\\<omega> =\n    S \\<longmapsto>Source\\<omega> &&&\n    TargetTerm T \\<longmapsto>STCal Source Target\\<omega> =\n    T \\<longmapsto>Target\\<omega>", "by (auto simp add: STCal_def divergent_def)"], ["", "lemma divergentST_STCal_divergent:\n  fixes P :: \"('procS, 'procT) Proc\"\n  shows \"P \\<longmapsto>(STCal Source Target)\\<omega> = P \\<longmapsto>ST\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<longmapsto>STCal Source Target\\<omega> = P \\<longmapsto>ST\\<omega>", "proof (cases P)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S P \\<Longrightarrow>\n       P \\<longmapsto>STCal Source Target\\<omega> =\n       P \\<longmapsto>ST\\<omega>\n 2. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       P \\<longmapsto>STCal Source Target\\<omega> =\n       P \\<longmapsto>ST\\<omega>", "case (SourceTerm SP)"], ["proof (state)\nthis:\n  SP \\<in>S P\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S P \\<Longrightarrow>\n       P \\<longmapsto>STCal Source Target\\<omega> =\n       P \\<longmapsto>ST\\<omega>\n 2. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       P \\<longmapsto>STCal Source Target\\<omega> =\n       P \\<longmapsto>ST\\<omega>", "assume \"SP \\<in>S P\""], ["proof (state)\nthis:\n  SP \\<in>S P\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       x1 \\<in>S P \\<Longrightarrow>\n       P \\<longmapsto>STCal Source Target\\<omega> =\n       P \\<longmapsto>ST\\<omega>\n 2. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       P \\<longmapsto>STCal Source Target\\<omega> =\n       P \\<longmapsto>ST\\<omega>", "thus \"P \\<longmapsto>(STCal Source Target)\\<omega> = P \\<longmapsto>ST\\<omega>\""], ["proof (prove)\nusing this:\n  SP \\<in>S P\n\ngoal (1 subgoal):\n 1. P \\<longmapsto>STCal Source Target\\<omega> = P \\<longmapsto>ST\\<omega>", "using STCal_divergent(1)"], ["proof (prove)\nusing this:\n  SP \\<in>S P\n  SourceTerm ?S \\<longmapsto>STCal Source Target\\<omega> =\n  ?S \\<longmapsto>Source\\<omega>\n\ngoal (1 subgoal):\n 1. P \\<longmapsto>STCal Source Target\\<omega> = P \\<longmapsto>ST\\<omega>", "by simp"], ["proof (state)\nthis:\n  P \\<longmapsto>STCal Source Target\\<omega> = P \\<longmapsto>ST\\<omega>\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       P \\<longmapsto>STCal Source Target\\<omega> =\n       P \\<longmapsto>ST\\<omega>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       P \\<longmapsto>STCal Source Target\\<omega> =\n       P \\<longmapsto>ST\\<omega>", "case (TargetTerm TP)"], ["proof (state)\nthis:\n  TP \\<in>T P\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       P \\<longmapsto>STCal Source Target\\<omega> =\n       P \\<longmapsto>ST\\<omega>", "assume \"TP \\<in>T P\""], ["proof (state)\nthis:\n  TP \\<in>T P\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       x2 \\<in>T P \\<Longrightarrow>\n       P \\<longmapsto>STCal Source Target\\<omega> =\n       P \\<longmapsto>ST\\<omega>", "thus \"P \\<longmapsto>(STCal Source Target)\\<omega> = P \\<longmapsto>ST\\<omega>\""], ["proof (prove)\nusing this:\n  TP \\<in>T P\n\ngoal (1 subgoal):\n 1. P \\<longmapsto>STCal Source Target\\<omega> = P \\<longmapsto>ST\\<omega>", "using STCal_divergent(2)"], ["proof (prove)\nusing this:\n  TP \\<in>T P\n  TargetTerm ?T \\<longmapsto>STCal Source Target\\<omega> =\n  ?T \\<longmapsto>Target\\<omega>\n\ngoal (1 subgoal):\n 1. P \\<longmapsto>STCal Source Target\\<omega> = P \\<longmapsto>ST\\<omega>", "by simp"], ["proof (state)\nthis:\n  P \\<longmapsto>STCal Source Target\\<omega> = P \\<longmapsto>ST\\<omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Similar to relations we define what it means for an encoding to preserve, reflect, or\n        respect a predicate. An encoding preserves some predicate P if P(S) implies P(enc S) for\n        all source terms S.\\<close>"], ["", "abbreviation enc_preserves_pred :: \"(('procS, 'procT) Proc \\<Rightarrow> bool) \\<Rightarrow> bool\" where\n  \"enc_preserves_pred Pred \\<equiv> \\<forall>S. Pred (SourceTerm S) \\<longrightarrow> Pred (TargetTerm (\\<lbrakk>S\\<rbrakk>))\""], ["", "abbreviation enc_preserves_binary_pred\n    :: \"(('procS, 'procT) Proc \\<Rightarrow> 'b \\<Rightarrow> bool) \\<Rightarrow> bool\"\n  where\n  \"enc_preserves_binary_pred Pred \\<equiv> \\<forall>S x. Pred (SourceTerm S) x \\<longrightarrow> Pred (TargetTerm (\\<lbrakk>S\\<rbrakk>)) x\""], ["", "text \\<open>An encoding reflects some predicate P if P(S) implies P(enc S) for all source terms S.\\<close>"], ["", "abbreviation enc_reflects_pred :: \"(('procS, 'procT) Proc \\<Rightarrow> bool) \\<Rightarrow> bool\" where\n  \"enc_reflects_pred Pred \\<equiv> \\<forall>S. Pred (TargetTerm (\\<lbrakk>S\\<rbrakk>)) \\<longrightarrow> Pred (SourceTerm S)\""], ["", "abbreviation enc_reflects_binary_pred\n    :: \"(('procS, 'procT) Proc \\<Rightarrow> 'b \\<Rightarrow> bool) \\<Rightarrow> bool\"\n  where\n  \"enc_reflects_binary_pred Pred \\<equiv> \\<forall>S x. Pred (TargetTerm (\\<lbrakk>S\\<rbrakk>)) x \\<longrightarrow> Pred (SourceTerm S) x\""], ["", "text \\<open>An encoding respects a predicate if it preserves and reflects it.\\<close>"], ["", "abbreviation enc_respects_pred :: \"(('procS, 'procT) Proc \\<Rightarrow> bool) \\<Rightarrow> bool\" where\n  \"enc_respects_pred Pred \\<equiv> enc_preserves_pred Pred \\<and> enc_reflects_pred Pred\""], ["", "abbreviation enc_respects_binary_pred\n    :: \"(('procS, 'procT) Proc \\<Rightarrow> 'b \\<Rightarrow> bool) \\<Rightarrow> bool\"\n  where\n  \"enc_respects_binary_pred Pred \\<equiv>\n   enc_preserves_binary_pred Pred \\<and> enc_reflects_binary_pred Pred\""], ["", "end"], ["", "text \\<open>To compare source terms and target terms w.r.t. their barbs or observables we assume that\n        each languages defines its own predicate for the existence of barbs.\\<close>"], ["", "locale encoding_wrt_barbs =\n  encoding Source Target Enc\n  for Source :: \"'procS processCalculus\"\n  and Target :: \"'procT processCalculus\"\n  and Enc    :: \"'procS \\<Rightarrow> 'procT\" +\n  fixes SWB :: \"('procS, 'barbs) calculusWithBarbs\"\n    and TWB :: \"('procT, 'barbs) calculusWithBarbs\"\n  assumes calS: \"calculusWithBarbs.Calculus SWB = Source\"\n      and calT: \"calculusWithBarbs.Calculus TWB = Target\"\nbegin"], ["", "lemma STCalWB_STCal:\n  shows \"Calculus (STCalWB SWB TWB) = STCal Source Target\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Calculus (STCalWB SWB TWB) = STCal Source Target", "unfolding STCalWB_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Calculus\n     \\<lparr>Calculus = STCal (Calculus SWB) (Calculus TWB),\n        HasBarb =\n          \\<lambda>P a.\n             (\\<exists>SP. SP \\<in>S P \\<and> SP\\<down><SWB>a) \\<or>\n             (\\<exists>TP. TP \\<in>T P \\<and> TP\\<down><TWB>a)\\<rparr> =\n    STCal Source Target", "using calS calT"], ["proof (prove)\nusing this:\n  Calculus SWB = Source\n  Calculus TWB = Target\n\ngoal (1 subgoal):\n 1. Calculus\n     \\<lparr>Calculus = STCal (Calculus SWB) (Calculus TWB),\n        HasBarb =\n          \\<lambda>P a.\n             (\\<exists>SP. SP \\<in>S P \\<and> SP\\<down><SWB>a) \\<or>\n             (\\<exists>TP. TP \\<in>T P \\<and> TP\\<down><TWB>a)\\<rparr> =\n    STCal Source Target", "by auto"], ["", "text \\<open>We say a term P of Proc has some barbs a if either P is a source term that has barb a or P\n        is a target term that has the barb b. For simplicity we assume that the sets of barbs is\n        large enough to contain all barbs of the source terms, the target terms, and all barbs they\n        might have in common.\\<close>"], ["", "abbreviation hasBarbST\n    :: \"('procS, 'procT) Proc \\<Rightarrow> 'barbs \\<Rightarrow> bool\" (\"_\\<down>._\" [70, 70] 80)\n  where\n  \"P\\<down>.a \\<equiv> (\\<exists>S. S \\<in>S P \\<and> S\\<down><SWB>a) \\<or> (\\<exists>T. T \\<in>T P \\<and> T\\<down><TWB>a)\""], ["", "lemma STCalWB_hasBarbST:\n  fixes P :: \"('procS, 'procT) Proc\"\n    and a :: \"'barbs\"\n  shows \"P\\<down><STCalWB SWB TWB>a = P\\<down>.a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P\\<down><STCalWB SWB TWB>a =\n    ((\\<exists>S. S \\<in>S P \\<and> S\\<down><SWB>a) \\<or>\n     (\\<exists>T. T \\<in>T P \\<and> T\\<down><TWB>a))", "by (simp add: STCalWB_def)"], ["", "lemma preservation_of_barbs_in_barbed_encoding:\n  fixes Rel :: \"(('procS, 'procT) Proc \\<times> ('procS, 'procT) Proc) set\"\n    and P Q :: \"('procS, 'procT) Proc\"\n    and a   :: \"'barbs\"\n  assumes preservation: \"rel_preserves_barbs Rel (STCalWB SWB TWB)\"\n      and rel:          \"(P, Q) \\<in> Rel\"\n      and barb:         \"P\\<down>.a\"\n  shows \"Q\\<down>.a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>S. S \\<in>S Q \\<and> S\\<down><SWB>a) \\<or>\n    (\\<exists>T. T \\<in>T Q \\<and> T\\<down><TWB>a)", "using preservation rel barb"], ["proof (prove)\nusing this:\n  rel_preserves_binary_pred Rel (\\<lambda>a. hasBarb a (STCalWB SWB TWB))\n  (P, Q) \\<in> Rel\n  (\\<exists>S. S \\<in>S P \\<and> S\\<down><SWB>a) \\<or>\n  (\\<exists>T. T \\<in>T P \\<and> T\\<down><TWB>a)\n\ngoal (1 subgoal):\n 1. (\\<exists>S. S \\<in>S Q \\<and> S\\<down><SWB>a) \\<or>\n    (\\<exists>T. T \\<in>T Q \\<and> T\\<down><TWB>a)", "by (simp add: STCalWB_def)"], ["", "lemma reflection_of_barbs_in_barbed_encoding:\n  fixes Rel :: \"(('procS, 'procT) Proc \\<times> ('procS, 'procT) Proc) set\"\n    and P Q :: \"('procS, 'procT) Proc\"\n    and a   :: \"'barbs\"\n  assumes reflection: \"rel_reflects_barbs Rel (STCalWB SWB TWB)\"\n      and rel:        \"(P, Q) \\<in> Rel\"\n      and barb:       \"Q\\<down>.a\"\n  shows \"P\\<down>.a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>S. S \\<in>S P \\<and> S\\<down><SWB>a) \\<or>\n    (\\<exists>T. T \\<in>T P \\<and> T\\<down><TWB>a)", "using reflection rel barb"], ["proof (prove)\nusing this:\n  rel_reflects_binary_pred Rel (\\<lambda>b. hasBarb b (STCalWB SWB TWB))\n  (P, Q) \\<in> Rel\n  (\\<exists>S. S \\<in>S Q \\<and> S\\<down><SWB>a) \\<or>\n  (\\<exists>T. T \\<in>T Q \\<and> T\\<down><TWB>a)\n\ngoal (1 subgoal):\n 1. (\\<exists>S. S \\<in>S P \\<and> S\\<down><SWB>a) \\<or>\n    (\\<exists>T. T \\<in>T P \\<and> T\\<down><TWB>a)", "by (simp add: STCalWB_def)"], ["", "lemma respection_of_barbs_in_barbed_encoding:\n  fixes Rel :: \"(('procS, 'procT) Proc \\<times> ('procS, 'procT) Proc) set\"\n    and P Q :: \"('procS, 'procT) Proc\"\n    and a   :: \"'barbs\"\n  assumes respection: \"rel_respects_barbs Rel (STCalWB SWB TWB)\"\n      and rel:        \"(P, Q) \\<in> Rel\"\n  shows \"P\\<down>.a = Q\\<down>.a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<exists>S. S \\<in>S P \\<and> S\\<down><SWB>a) \\<or>\n     (\\<exists>T. T \\<in>T P \\<and> T\\<down><TWB>a)) =\n    ((\\<exists>S. S \\<in>S Q \\<and> S\\<down><SWB>a) \\<or>\n     (\\<exists>T. T \\<in>T Q \\<and> T\\<down><TWB>a))", "using preservation_of_barbs_in_barbed_encoding[where Rel=\"Rel\" and P=\"P\" and Q=\"Q\" and a=\"a\"]\n            reflection_of_barbs_in_barbed_encoding[where Rel=\"Rel\" and P=\"P\" and Q=\"Q\" and a=\"a\"]\n            respection rel"], ["proof (prove)\nusing this:\n  rel_preserves_binary_pred Rel\n   (\\<lambda>a. hasBarb a (STCalWB SWB TWB)) \\<and>\n  (P, Q) \\<in> Rel \\<and>\n  ((\\<exists>S. S \\<in>S P \\<and> S\\<down><SWB>a) \\<or>\n   (\\<exists>T. T \\<in>T P \\<and> T\\<down><TWB>a)) \\<Longrightarrow>\n  (\\<exists>S. S \\<in>S Q \\<and> S\\<down><SWB>a) \\<or>\n  (\\<exists>T. T \\<in>T Q \\<and> T\\<down><TWB>a)\n  rel_reflects_binary_pred Rel\n   (\\<lambda>b. hasBarb b (STCalWB SWB TWB)) \\<and>\n  (P, Q) \\<in> Rel \\<and>\n  ((\\<exists>S. S \\<in>S Q \\<and> S\\<down><SWB>a) \\<or>\n   (\\<exists>T. T \\<in>T Q \\<and> T\\<down><TWB>a)) \\<Longrightarrow>\n  (\\<exists>S. S \\<in>S P \\<and> S\\<down><SWB>a) \\<or>\n  (\\<exists>T. T \\<in>T P \\<and> T\\<down><TWB>a)\n  rel_respects_binary_pred Rel (\\<lambda>a. hasBarb a (STCalWB SWB TWB))\n  (P, Q) \\<in> Rel\n\ngoal (1 subgoal):\n 1. ((\\<exists>S. S \\<in>S P \\<and> S\\<down><SWB>a) \\<or>\n     (\\<exists>T. T \\<in>T P \\<and> T\\<down><TWB>a)) =\n    ((\\<exists>S. S \\<in>S Q \\<and> S\\<down><SWB>a) \\<or>\n     (\\<exists>T. T \\<in>T Q \\<and> T\\<down><TWB>a))", "by blast"], ["", "text \\<open>A term P of Proc reaches a barb a if either P is a source term that reaches a or P is a\n        target term that reaches a.\\<close>"], ["", "abbreviation reachesBarbST\n    :: \"('procS, 'procT) Proc \\<Rightarrow> 'barbs \\<Rightarrow> bool\" (\"_\\<Down>._\" [70, 70] 80)\n  where\n  \"P\\<Down>.a \\<equiv> (\\<exists>S. S \\<in>S P \\<and> S\\<Down><SWB>a) \\<or> (\\<exists>T. T \\<in>T P \\<and> T\\<Down><TWB>a)\""], ["", "lemma STCalWB_reachesBarbST:\n  fixes P :: \"('procS, 'procT) Proc\"\n    and a :: \"'barbs\"\n  shows \"P\\<Down><STCalWB SWB TWB>a = P\\<Down>.a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P\\<Down><STCalWB SWB TWB>a =\n    ((\\<exists>S. S \\<in>S P \\<and> S\\<Down><SWB>a) \\<or>\n     (\\<exists>T. T \\<in>T P \\<and> T\\<Down><TWB>a))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P\\<Down><STCalWB SWB TWB>a =\n    ((\\<exists>S. S \\<in>S P \\<and> S\\<Down><SWB>a) \\<or>\n     (\\<exists>T. T \\<in>T P \\<and> T\\<Down><TWB>a))", "have \"\\<forall>S. SourceTerm S\\<Down><STCalWB SWB TWB>a = SourceTerm S\\<Down>.a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>S.\n       SourceTerm S\\<Down><STCalWB SWB TWB>a =\n       ((\\<exists>Sa. Sa \\<in>S SourceTerm S \\<and> Sa\\<Down><SWB>a) \\<or>\n        (\\<exists>T. T \\<in>T SourceTerm S \\<and> T\\<Down><TWB>a))", "using STCal_steps(1)"], ["proof (prove)\nusing this:\n  SourceTerm ?S \\<longmapsto>STCal Source Target* ?P' =\n  (\\<exists>S'. S' \\<in>S ?P' \\<and> ?S \\<longmapsto>Source* S')\n\ngoal (1 subgoal):\n 1. \\<forall>S.\n       SourceTerm S\\<Down><STCalWB SWB TWB>a =\n       ((\\<exists>Sa. Sa \\<in>S SourceTerm S \\<and> Sa\\<Down><SWB>a) \\<or>\n        (\\<exists>T. T \\<in>T SourceTerm S \\<and> T\\<Down><TWB>a))", "by (auto simp add: STCalWB_def calS calT)"], ["proof (state)\nthis:\n  \\<forall>S.\n     SourceTerm S\\<Down><STCalWB SWB TWB>a =\n     ((\\<exists>Sa. Sa \\<in>S SourceTerm S \\<and> Sa\\<Down><SWB>a) \\<or>\n      (\\<exists>T. T \\<in>T SourceTerm S \\<and> T\\<Down><TWB>a))\n\ngoal (1 subgoal):\n 1. P\\<Down><STCalWB SWB TWB>a =\n    ((\\<exists>S. S \\<in>S P \\<and> S\\<Down><SWB>a) \\<or>\n     (\\<exists>T. T \\<in>T P \\<and> T\\<Down><TWB>a))", "moreover"], ["proof (state)\nthis:\n  \\<forall>S.\n     SourceTerm S\\<Down><STCalWB SWB TWB>a =\n     ((\\<exists>Sa. Sa \\<in>S SourceTerm S \\<and> Sa\\<Down><SWB>a) \\<or>\n      (\\<exists>T. T \\<in>T SourceTerm S \\<and> T\\<Down><TWB>a))\n\ngoal (1 subgoal):\n 1. P\\<Down><STCalWB SWB TWB>a =\n    ((\\<exists>S. S \\<in>S P \\<and> S\\<Down><SWB>a) \\<or>\n     (\\<exists>T. T \\<in>T P \\<and> T\\<Down><TWB>a))", "have \"\\<forall>T. TargetTerm T\\<Down><STCalWB SWB TWB>a = TargetTerm T\\<Down>.a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>T.\n       TargetTerm T\\<Down><STCalWB SWB TWB>a =\n       ((\\<exists>S. S \\<in>S TargetTerm T \\<and> S\\<Down><SWB>a) \\<or>\n        (\\<exists>Ta. Ta \\<in>T TargetTerm T \\<and> Ta\\<Down><TWB>a))", "using STCal_steps(2)"], ["proof (prove)\nusing this:\n  TargetTerm ?T \\<longmapsto>STCal Source Target* ?P' =\n  (\\<exists>T'. T' \\<in>T ?P' \\<and> ?T \\<longmapsto>Target* T')\n\ngoal (1 subgoal):\n 1. \\<forall>T.\n       TargetTerm T\\<Down><STCalWB SWB TWB>a =\n       ((\\<exists>S. S \\<in>S TargetTerm T \\<and> S\\<Down><SWB>a) \\<or>\n        (\\<exists>Ta. Ta \\<in>T TargetTerm T \\<and> Ta\\<Down><TWB>a))", "by (auto simp add: STCalWB_def calS calT)"], ["proof (state)\nthis:\n  \\<forall>T.\n     TargetTerm T\\<Down><STCalWB SWB TWB>a =\n     ((\\<exists>S. S \\<in>S TargetTerm T \\<and> S\\<Down><SWB>a) \\<or>\n      (\\<exists>Ta. Ta \\<in>T TargetTerm T \\<and> Ta\\<Down><TWB>a))\n\ngoal (1 subgoal):\n 1. P\\<Down><STCalWB SWB TWB>a =\n    ((\\<exists>S. S \\<in>S P \\<and> S\\<Down><SWB>a) \\<or>\n     (\\<exists>T. T \\<in>T P \\<and> T\\<Down><TWB>a))", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>S.\n     SourceTerm S\\<Down><STCalWB SWB TWB>a =\n     ((\\<exists>Sa. Sa \\<in>S SourceTerm S \\<and> Sa\\<Down><SWB>a) \\<or>\n      (\\<exists>T. T \\<in>T SourceTerm S \\<and> T\\<Down><TWB>a))\n  \\<forall>T.\n     TargetTerm T\\<Down><STCalWB SWB TWB>a =\n     ((\\<exists>S. S \\<in>S TargetTerm T \\<and> S\\<Down><SWB>a) \\<or>\n      (\\<exists>Ta. Ta \\<in>T TargetTerm T \\<and> Ta\\<Down><TWB>a))", "show \"P\\<Down><STCalWB SWB TWB>a = P\\<Down>.a\""], ["proof (prove)\nusing this:\n  \\<forall>S.\n     SourceTerm S\\<Down><STCalWB SWB TWB>a =\n     ((\\<exists>Sa. Sa \\<in>S SourceTerm S \\<and> Sa\\<Down><SWB>a) \\<or>\n      (\\<exists>T. T \\<in>T SourceTerm S \\<and> T\\<Down><TWB>a))\n  \\<forall>T.\n     TargetTerm T\\<Down><STCalWB SWB TWB>a =\n     ((\\<exists>S. S \\<in>S TargetTerm T \\<and> S\\<Down><SWB>a) \\<or>\n      (\\<exists>Ta. Ta \\<in>T TargetTerm T \\<and> Ta\\<Down><TWB>a))\n\ngoal (1 subgoal):\n 1. P\\<Down><STCalWB SWB TWB>a =\n    ((\\<exists>S. S \\<in>S P \\<and> S\\<Down><SWB>a) \\<or>\n     (\\<exists>T. T \\<in>T P \\<and> T\\<Down><TWB>a))", "by (cases P, simp+)"], ["proof (state)\nthis:\n  P\\<Down><STCalWB SWB TWB>a =\n  ((\\<exists>S. S \\<in>S P \\<and> S\\<Down><SWB>a) \\<or>\n   (\\<exists>T. T \\<in>T P \\<and> T\\<Down><TWB>a))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weak_preservation_of_barbs_in_barbed_encoding:\n  fixes Rel :: \"(('procS, 'procT) Proc \\<times> ('procS, 'procT) Proc) set\"\n    and P Q :: \"('procS, 'procT) Proc\"\n    and a   :: \"'barbs\"\n  assumes preservation: \"rel_weakly_preserves_barbs Rel (STCalWB SWB TWB)\"\n      and rel:          \"(P, Q) \\<in> Rel\"\n      and barb:         \"P\\<Down>.a\"\n  shows \"Q\\<Down>.a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>S. S \\<in>S Q \\<and> S\\<Down><SWB>a) \\<or>\n    (\\<exists>T. T \\<in>T Q \\<and> T\\<Down><TWB>a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<exists>S. S \\<in>S Q \\<and> S\\<Down><SWB>a) \\<or>\n    (\\<exists>T. T \\<in>T Q \\<and> T\\<Down><TWB>a)", "from barb"], ["proof (chain)\npicking this:\n  (\\<exists>S. S \\<in>S P \\<and> S\\<Down><SWB>a) \\<or>\n  (\\<exists>T. T \\<in>T P \\<and> T\\<Down><TWB>a)", "have \"P\\<Down><STCalWB SWB TWB>a\""], ["proof (prove)\nusing this:\n  (\\<exists>S. S \\<in>S P \\<and> S\\<Down><SWB>a) \\<or>\n  (\\<exists>T. T \\<in>T P \\<and> T\\<Down><TWB>a)\n\ngoal (1 subgoal):\n 1. P\\<Down><STCalWB SWB TWB>a", "by (simp add: STCalWB_reachesBarbST)"], ["proof (state)\nthis:\n  P\\<Down><STCalWB SWB TWB>a\n\ngoal (1 subgoal):\n 1. (\\<exists>S. S \\<in>S Q \\<and> S\\<Down><SWB>a) \\<or>\n    (\\<exists>T. T \\<in>T Q \\<and> T\\<Down><TWB>a)", "with preservation rel"], ["proof (chain)\npicking this:\n  rel_weakly_preserves_barbs Rel (STCalWB SWB TWB)\n  (P, Q) \\<in> Rel\n  P\\<Down><STCalWB SWB TWB>a", "have \"Q\\<Down><STCalWB SWB TWB>a\""], ["proof (prove)\nusing this:\n  rel_weakly_preserves_barbs Rel (STCalWB SWB TWB)\n  (P, Q) \\<in> Rel\n  P\\<Down><STCalWB SWB TWB>a\n\ngoal (1 subgoal):\n 1. Q\\<Down><STCalWB SWB TWB>a", "by blast"], ["proof (state)\nthis:\n  Q\\<Down><STCalWB SWB TWB>a\n\ngoal (1 subgoal):\n 1. (\\<exists>S. S \\<in>S Q \\<and> S\\<Down><SWB>a) \\<or>\n    (\\<exists>T. T \\<in>T Q \\<and> T\\<Down><TWB>a)", "thus \"Q\\<Down>.a\""], ["proof (prove)\nusing this:\n  Q\\<Down><STCalWB SWB TWB>a\n\ngoal (1 subgoal):\n 1. (\\<exists>S. S \\<in>S Q \\<and> S\\<Down><SWB>a) \\<or>\n    (\\<exists>T. T \\<in>T Q \\<and> T\\<Down><TWB>a)", "by (simp add: STCalWB_reachesBarbST)"], ["proof (state)\nthis:\n  (\\<exists>S. S \\<in>S Q \\<and> S\\<Down><SWB>a) \\<or>\n  (\\<exists>T. T \\<in>T Q \\<and> T\\<Down><TWB>a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weak_reflection_of_barbs_in_barbed_encoding:\n  fixes Rel :: \"(('procS, 'procT) Proc \\<times> ('procS, 'procT) Proc) set\"\n    and P Q :: \"('procS, 'procT) Proc\"\n    and a   :: \"'barbs\"\n  assumes reflection: \"rel_weakly_reflects_barbs Rel (STCalWB SWB TWB)\"\n      and rel:        \"(P, Q) \\<in> Rel\"\n      and barb:       \"Q\\<Down>.a\"\n  shows \"P\\<Down>.a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>S. S \\<in>S P \\<and> S\\<Down><SWB>a) \\<or>\n    (\\<exists>T. T \\<in>T P \\<and> T\\<Down><TWB>a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<exists>S. S \\<in>S P \\<and> S\\<Down><SWB>a) \\<or>\n    (\\<exists>T. T \\<in>T P \\<and> T\\<Down><TWB>a)", "from barb"], ["proof (chain)\npicking this:\n  (\\<exists>S. S \\<in>S Q \\<and> S\\<Down><SWB>a) \\<or>\n  (\\<exists>T. T \\<in>T Q \\<and> T\\<Down><TWB>a)", "have \"Q\\<Down><STCalWB SWB TWB>a\""], ["proof (prove)\nusing this:\n  (\\<exists>S. S \\<in>S Q \\<and> S\\<Down><SWB>a) \\<or>\n  (\\<exists>T. T \\<in>T Q \\<and> T\\<Down><TWB>a)\n\ngoal (1 subgoal):\n 1. Q\\<Down><STCalWB SWB TWB>a", "by (simp add: STCalWB_reachesBarbST)"], ["proof (state)\nthis:\n  Q\\<Down><STCalWB SWB TWB>a\n\ngoal (1 subgoal):\n 1. (\\<exists>S. S \\<in>S P \\<and> S\\<Down><SWB>a) \\<or>\n    (\\<exists>T. T \\<in>T P \\<and> T\\<Down><TWB>a)", "with reflection rel"], ["proof (chain)\npicking this:\n  rel_weakly_reflects_barbs Rel (STCalWB SWB TWB)\n  (P, Q) \\<in> Rel\n  Q\\<Down><STCalWB SWB TWB>a", "have \"P\\<Down><STCalWB SWB TWB>a\""], ["proof (prove)\nusing this:\n  rel_weakly_reflects_barbs Rel (STCalWB SWB TWB)\n  (P, Q) \\<in> Rel\n  Q\\<Down><STCalWB SWB TWB>a\n\ngoal (1 subgoal):\n 1. P\\<Down><STCalWB SWB TWB>a", "by blast"], ["proof (state)\nthis:\n  P\\<Down><STCalWB SWB TWB>a\n\ngoal (1 subgoal):\n 1. (\\<exists>S. S \\<in>S P \\<and> S\\<Down><SWB>a) \\<or>\n    (\\<exists>T. T \\<in>T P \\<and> T\\<Down><TWB>a)", "thus \"P\\<Down>.a\""], ["proof (prove)\nusing this:\n  P\\<Down><STCalWB SWB TWB>a\n\ngoal (1 subgoal):\n 1. (\\<exists>S. S \\<in>S P \\<and> S\\<Down><SWB>a) \\<or>\n    (\\<exists>T. T \\<in>T P \\<and> T\\<Down><TWB>a)", "by (simp add: STCalWB_reachesBarbST)"], ["proof (state)\nthis:\n  (\\<exists>S. S \\<in>S P \\<and> S\\<Down><SWB>a) \\<or>\n  (\\<exists>T. T \\<in>T P \\<and> T\\<Down><TWB>a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weak_respection_of_barbs_in_barbed_encoding:\n  fixes Rel :: \"(('procS, 'procT) Proc \\<times> ('procS, 'procT) Proc) set\"\n    and P Q :: \"('procS, 'procT) Proc\"\n    and a   :: \"'barbs\"\n  assumes respection: \"rel_weakly_respects_barbs Rel (STCalWB SWB TWB)\"\n      and rel:        \"(P, Q) \\<in> Rel\"\n  shows \"P\\<Down>.a = Q\\<Down>.a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<exists>S. S \\<in>S P \\<and> S\\<Down><SWB>a) \\<or>\n     (\\<exists>T. T \\<in>T P \\<and> T\\<Down><TWB>a)) =\n    ((\\<exists>S. S \\<in>S Q \\<and> S\\<Down><SWB>a) \\<or>\n     (\\<exists>T. T \\<in>T Q \\<and> T\\<Down><TWB>a))", "proof (rule iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<exists>S. S \\<in>S P \\<and> S\\<Down><SWB>a) \\<or>\n    (\\<exists>T. T \\<in>T P \\<and> T\\<Down><TWB>a) \\<Longrightarrow>\n    (\\<exists>S. S \\<in>S Q \\<and> S\\<Down><SWB>a) \\<or>\n    (\\<exists>T. T \\<in>T Q \\<and> T\\<Down><TWB>a)\n 2. (\\<exists>S. S \\<in>S Q \\<and> S\\<Down><SWB>a) \\<or>\n    (\\<exists>T. T \\<in>T Q \\<and> T\\<Down><TWB>a) \\<Longrightarrow>\n    (\\<exists>S. S \\<in>S P \\<and> S\\<Down><SWB>a) \\<or>\n    (\\<exists>T. T \\<in>T P \\<and> T\\<Down><TWB>a)", "assume \"P\\<Down>.a\""], ["proof (state)\nthis:\n  (\\<exists>S. S \\<in>S P \\<and> S\\<Down><SWB>a) \\<or>\n  (\\<exists>T. T \\<in>T P \\<and> T\\<Down><TWB>a)\n\ngoal (2 subgoals):\n 1. (\\<exists>S. S \\<in>S P \\<and> S\\<Down><SWB>a) \\<or>\n    (\\<exists>T. T \\<in>T P \\<and> T\\<Down><TWB>a) \\<Longrightarrow>\n    (\\<exists>S. S \\<in>S Q \\<and> S\\<Down><SWB>a) \\<or>\n    (\\<exists>T. T \\<in>T Q \\<and> T\\<Down><TWB>a)\n 2. (\\<exists>S. S \\<in>S Q \\<and> S\\<Down><SWB>a) \\<or>\n    (\\<exists>T. T \\<in>T Q \\<and> T\\<Down><TWB>a) \\<Longrightarrow>\n    (\\<exists>S. S \\<in>S P \\<and> S\\<Down><SWB>a) \\<or>\n    (\\<exists>T. T \\<in>T P \\<and> T\\<Down><TWB>a)", "with respection rel"], ["proof (chain)\npicking this:\n  rel_weakly_respects_barbs Rel (STCalWB SWB TWB)\n  (P, Q) \\<in> Rel\n  (\\<exists>S. S \\<in>S P \\<and> S\\<Down><SWB>a) \\<or>\n  (\\<exists>T. T \\<in>T P \\<and> T\\<Down><TWB>a)", "show \"Q\\<Down>.a\""], ["proof (prove)\nusing this:\n  rel_weakly_respects_barbs Rel (STCalWB SWB TWB)\n  (P, Q) \\<in> Rel\n  (\\<exists>S. S \\<in>S P \\<and> S\\<Down><SWB>a) \\<or>\n  (\\<exists>T. T \\<in>T P \\<and> T\\<Down><TWB>a)\n\ngoal (1 subgoal):\n 1. (\\<exists>S. S \\<in>S Q \\<and> S\\<Down><SWB>a) \\<or>\n    (\\<exists>T. T \\<in>T Q \\<and> T\\<Down><TWB>a)", "using weak_preservation_of_barbs_in_barbed_encoding[where Rel=\"Rel\"]"], ["proof (prove)\nusing this:\n  rel_weakly_respects_barbs Rel (STCalWB SWB TWB)\n  (P, Q) \\<in> Rel\n  (\\<exists>S. S \\<in>S P \\<and> S\\<Down><SWB>a) \\<or>\n  (\\<exists>T. T \\<in>T P \\<and> T\\<Down><TWB>a)\n  rel_weakly_preserves_barbs Rel (STCalWB SWB TWB) \\<and>\n  (?P, ?Q) \\<in> Rel \\<and>\n  ((\\<exists>S. S \\<in>S ?P \\<and> S\\<Down><SWB>?a) \\<or>\n   (\\<exists>T. T \\<in>T ?P \\<and> T\\<Down><TWB>?a)) \\<Longrightarrow>\n  (\\<exists>S. S \\<in>S ?Q \\<and> S\\<Down><SWB>?a) \\<or>\n  (\\<exists>T. T \\<in>T ?Q \\<and> T\\<Down><TWB>?a)\n\ngoal (1 subgoal):\n 1. (\\<exists>S. S \\<in>S Q \\<and> S\\<Down><SWB>a) \\<or>\n    (\\<exists>T. T \\<in>T Q \\<and> T\\<Down><TWB>a)", "by blast"], ["proof (state)\nthis:\n  (\\<exists>S. S \\<in>S Q \\<and> S\\<Down><SWB>a) \\<or>\n  (\\<exists>T. T \\<in>T Q \\<and> T\\<Down><TWB>a)\n\ngoal (1 subgoal):\n 1. (\\<exists>S. S \\<in>S Q \\<and> S\\<Down><SWB>a) \\<or>\n    (\\<exists>T. T \\<in>T Q \\<and> T\\<Down><TWB>a) \\<Longrightarrow>\n    (\\<exists>S. S \\<in>S P \\<and> S\\<Down><SWB>a) \\<or>\n    (\\<exists>T. T \\<in>T P \\<and> T\\<Down><TWB>a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<exists>S. S \\<in>S Q \\<and> S\\<Down><SWB>a) \\<or>\n    (\\<exists>T. T \\<in>T Q \\<and> T\\<Down><TWB>a) \\<Longrightarrow>\n    (\\<exists>S. S \\<in>S P \\<and> S\\<Down><SWB>a) \\<or>\n    (\\<exists>T. T \\<in>T P \\<and> T\\<Down><TWB>a)", "assume \"Q\\<Down>.a\""], ["proof (state)\nthis:\n  (\\<exists>S. S \\<in>S Q \\<and> S\\<Down><SWB>a) \\<or>\n  (\\<exists>T. T \\<in>T Q \\<and> T\\<Down><TWB>a)\n\ngoal (1 subgoal):\n 1. (\\<exists>S. S \\<in>S Q \\<and> S\\<Down><SWB>a) \\<or>\n    (\\<exists>T. T \\<in>T Q \\<and> T\\<Down><TWB>a) \\<Longrightarrow>\n    (\\<exists>S. S \\<in>S P \\<and> S\\<Down><SWB>a) \\<or>\n    (\\<exists>T. T \\<in>T P \\<and> T\\<Down><TWB>a)", "with respection rel"], ["proof (chain)\npicking this:\n  rel_weakly_respects_barbs Rel (STCalWB SWB TWB)\n  (P, Q) \\<in> Rel\n  (\\<exists>S. S \\<in>S Q \\<and> S\\<Down><SWB>a) \\<or>\n  (\\<exists>T. T \\<in>T Q \\<and> T\\<Down><TWB>a)", "show \"P\\<Down>.a\""], ["proof (prove)\nusing this:\n  rel_weakly_respects_barbs Rel (STCalWB SWB TWB)\n  (P, Q) \\<in> Rel\n  (\\<exists>S. S \\<in>S Q \\<and> S\\<Down><SWB>a) \\<or>\n  (\\<exists>T. T \\<in>T Q \\<and> T\\<Down><TWB>a)\n\ngoal (1 subgoal):\n 1. (\\<exists>S. S \\<in>S P \\<and> S\\<Down><SWB>a) \\<or>\n    (\\<exists>T. T \\<in>T P \\<and> T\\<Down><TWB>a)", "using weak_reflection_of_barbs_in_barbed_encoding[where Rel=\"Rel\"]"], ["proof (prove)\nusing this:\n  rel_weakly_respects_barbs Rel (STCalWB SWB TWB)\n  (P, Q) \\<in> Rel\n  (\\<exists>S. S \\<in>S Q \\<and> S\\<Down><SWB>a) \\<or>\n  (\\<exists>T. T \\<in>T Q \\<and> T\\<Down><TWB>a)\n  rel_weakly_reflects_barbs Rel (STCalWB SWB TWB) \\<and>\n  (?P, ?Q) \\<in> Rel \\<and>\n  ((\\<exists>S. S \\<in>S ?Q \\<and> S\\<Down><SWB>?a) \\<or>\n   (\\<exists>T. T \\<in>T ?Q \\<and> T\\<Down><TWB>?a)) \\<Longrightarrow>\n  (\\<exists>S. S \\<in>S ?P \\<and> S\\<Down><SWB>?a) \\<or>\n  (\\<exists>T. T \\<in>T ?P \\<and> T\\<Down><TWB>?a)\n\ngoal (1 subgoal):\n 1. (\\<exists>S. S \\<in>S P \\<and> S\\<Down><SWB>a) \\<or>\n    (\\<exists>T. T \\<in>T P \\<and> T\\<Down><TWB>a)", "by blast"], ["proof (state)\nthis:\n  (\\<exists>S. S \\<in>S P \\<and> S\\<Down><SWB>a) \\<or>\n  (\\<exists>T. T \\<in>T P \\<and> T\\<Down><TWB>a)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}