{"file_name": "/home/qj213/afp-2021-10-22/thys/Encodability_Process_Calculi/Relations.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Encodability_Process_Calculi", "problem_names": ["lemma symm_preorder_is_equivalence:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n  assumes \"preorder Rel\"\n      and \"sym Rel\"\n  shows \"equivalence Rel\"", "lemma elem_of_symcl:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n    and a b :: \"'a\"\n  assumes elem: \"(a, b) \\<in> Rel\"\n  shows \"(a, b) \\<in> symcl Rel\"\n    and \"(b, a) \\<in> symcl Rel\"", "lemma sym_symcl:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n  shows \"sym (symcl Rel)\"", "lemma refl_symm_closure_is_symm_refl_closure:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n  shows \"symcl (Rel\\<^sup>=) = (symcl Rel)\\<^sup>=\"", "lemma refl_symcl_of_refl_rel:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n    and A   :: \"'a set\"\n  assumes \"refl_on A Rel\"\n  shows \"refl_on A (symcl Rel)\"", "lemma refl_symm_trans_closure_is_symm_refl_trans_closure:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n  shows \"(symcl (Rel\\<^sup>=))\\<^sup>+ = (symcl Rel)\\<^sup>*\"", "lemma sym_reflcl_of_symm_rel:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n  assumes \"sym Rel\"\n  shows \"sym (Rel\\<^sup>=)\"", "lemma reflcl_of_refl_rel:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n  assumes \"refl Rel\"\n  shows \"Rel\\<^sup>= = Rel\"", "lemma symm_closure_of_symm_rel:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n  assumes \"sym Rel\"\n  shows \"symcl Rel = Rel\"", "lemma rtrancl_of_preorder:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n  assumes \"preorder Rel\"\n  shows \"Rel\\<^sup>* = Rel\"", "lemma refl_trans_closure_subset_of_refl_symm_trans_closure:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n  shows \"Rel\\<^sup>* \\<subseteq> (symcl (Rel\\<^sup>=))\\<^sup>+\"", "lemma symm_closure_of_preorder_is_trans:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n  assumes condA: \"\\<forall>a b c. (a, b) \\<in> Rel \\<and> (c, b) \\<in> Rel \\<and> (a, c) \\<notin> Rel\n                  \\<longrightarrow> (b, a) \\<in> Rel \\<or> (b, c) \\<in> Rel\"\n      and condB: \"\\<forall>a b c. (a, b) \\<in> Rel \\<and> (a, c) \\<in> Rel \\<and> (b, c) \\<notin> Rel\n                  \\<longrightarrow> (b, a) \\<in> Rel \\<or> (c, a) \\<in> Rel\"\n      and reflR: \"refl Rel\"\n      and tranR: \"trans Rel\"\n  shows \"trans (symcl Rel)\"", "lemma symm_relation_impl_preservation_equals_reflection:\n  fixes Rel  :: \"('a \\<times> 'a) set\"\n    and Pred :: \"'a \\<Rightarrow> bool\"\n  assumes symm: \"sym Rel\"\n  shows \"rel_preserves_pred Rel Pred = rel_reflects_pred Rel Pred\"\n    and \"rel_preserves_pred Rel Pred = rel_respects_pred Rel Pred\"\n    and \"rel_reflects_pred Rel Pred = rel_respects_pred Rel Pred\"", "lemma symm_relation_impl_preservation_equals_reflection_of_binary_predicates:\n  fixes Rel  :: \"('a \\<times> 'a) set\"\n    and Pred :: \"'a \\<Rightarrow> 'b \\<Rightarrow> bool\"\n  assumes symm: \"sym Rel\"\n  shows \"rel_preserves_binary_pred Rel Pred = rel_reflects_binary_pred Rel Pred\"\n    and \"rel_preserves_binary_pred Rel Pred = rel_respects_binary_pred Rel Pred\"\n    and \"rel_reflects_binary_pred Rel Pred = rel_respects_binary_pred Rel Pred\"", "lemma preservation_and_closures:\n  fixes Rel  :: \"('a \\<times> 'a) set\"\n    and Pred :: \"'a \\<Rightarrow> bool\"\n  assumes preservation: \"rel_preserves_pred Rel Pred\"\n  shows \"rel_preserves_pred (Rel\\<^sup>=) Pred\"\n    and \"rel_preserves_pred (Rel\\<^sup>+) Pred\"\n    and \"rel_preserves_pred (Rel\\<^sup>*) Pred\"", "lemma preservation_of_binary_predicates_and_closures:\n  fixes Rel  :: \"('a \\<times> 'a) set\"\n    and Pred :: \"'a \\<Rightarrow> 'b \\<Rightarrow> bool\"\n  assumes preservation: \"rel_preserves_binary_pred Rel Pred\"\n  shows \"rel_preserves_binary_pred (Rel\\<^sup>=) Pred\"\n    and \"rel_preserves_binary_pred (Rel\\<^sup>+) Pred\"\n    and \"rel_preserves_binary_pred (Rel\\<^sup>*) Pred\"", "lemma reflection_and_closures:\n  fixes Rel  :: \"('a \\<times> 'a) set\"\n    and Pred :: \"'a \\<Rightarrow> bool\"\n  assumes reflection: \"rel_reflects_pred Rel Pred\"\n  shows \"rel_reflects_pred (Rel\\<^sup>=) Pred\"\n    and \"rel_reflects_pred (Rel\\<^sup>+) Pred\"\n    and \"rel_reflects_pred (Rel\\<^sup>*) Pred\"", "lemma reflection_of_binary_predicates_and_closures:\n  fixes Rel  :: \"('a \\<times> 'a) set\"\n    and Pred :: \"'a \\<Rightarrow> 'b \\<Rightarrow> bool\"\n  assumes reflection: \"rel_reflects_binary_pred Rel Pred\"\n  shows \"rel_reflects_binary_pred (Rel\\<^sup>=) Pred\"\n    and \"rel_reflects_binary_pred (Rel\\<^sup>+) Pred\"\n    and \"rel_reflects_binary_pred (Rel\\<^sup>*) Pred\"", "lemma respection_and_closures:\n  fixes Rel  :: \"('a \\<times> 'a) set\"\n    and Pred :: \"'a \\<Rightarrow> bool\"\n  assumes respection: \"rel_respects_pred Rel Pred\"\n  shows \"rel_respects_pred (Rel\\<^sup>=) Pred\"\n    and \"rel_respects_pred (symcl Rel) Pred\"\n    and \"rel_respects_pred (Rel\\<^sup>+) Pred\"\n    and \"rel_respects_pred (symcl (Rel\\<^sup>=)) Pred\"\n    and \"rel_respects_pred (Rel\\<^sup>*) Pred\"\n    and \"rel_respects_pred ((symcl (Rel\\<^sup>=))\\<^sup>+) Pred\"", "lemma respection_of_binary_predicates_and_closures:\n  fixes Rel  :: \"('a \\<times> 'a) set\"\n    and Pred :: \"'a \\<Rightarrow> 'b \\<Rightarrow> bool\"\n  assumes respection: \"rel_respects_binary_pred Rel Pred\"\n  shows \"rel_respects_binary_pred (Rel\\<^sup>=) Pred\"\n    and \"rel_respects_binary_pred (symcl Rel) Pred\"\n    and \"rel_respects_binary_pred (Rel\\<^sup>+) Pred\"\n    and \"rel_respects_binary_pred (symcl (Rel\\<^sup>=)) Pred\"\n    and \"rel_respects_binary_pred (Rel\\<^sup>*) Pred\"\n    and \"rel_respects_binary_pred ((symcl (Rel\\<^sup>=))\\<^sup>+) Pred\""], "translations": [["", "lemma symm_preorder_is_equivalence:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n  assumes \"preorder Rel\"\n      and \"sym Rel\"\n  shows \"equivalence Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. equivalence Rel", "using assms"], ["proof (prove)\nusing this:\n  preorder Rel\n  sym Rel\n\ngoal (1 subgoal):\n 1. equivalence Rel", "unfolding preorder_on_def equiv_def"], ["proof (prove)\nusing this:\n  refl Rel \\<and> trans Rel\n  sym Rel\n\ngoal (1 subgoal):\n 1. refl Rel \\<and> sym Rel \\<and> trans Rel", "by simp"], ["", "text \\<open>The symmetric closure of a relation is the union of this relation and its inverse.\\<close>"], ["", "definition symcl :: \"('a \\<times> 'a) set \\<Rightarrow> ('a \\<times> 'a) set\" where\n  \"symcl Rel = Rel \\<union> Rel\\<inverse>\""], ["", "text \\<open>For all (a, b) in R, the symmetric closure of R contains (a, b) as well as (b, a).\\<close>"], ["", "lemma elem_of_symcl:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n    and a b :: \"'a\"\n  assumes elem: \"(a, b) \\<in> Rel\"\n  shows \"(a, b) \\<in> symcl Rel\"\n    and \"(b, a) \\<in> symcl Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a, b) \\<in> symcl Rel &&& (b, a) \\<in> symcl Rel", "by (auto simp add: elem symcl_def)"], ["", "text \\<open>The symmetric closure of a relation is symmetric.\\<close>"], ["", "lemma sym_symcl:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n  shows \"sym (symcl Rel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sym (symcl Rel)", "by (simp add: symcl_def sym_Un_converse)"], ["", "text \\<open>The reflexive and symmetric closure of a relation is equal to its symmetric and reflexive\n        closure.\\<close>"], ["", "lemma refl_symm_closure_is_symm_refl_closure:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n  shows \"symcl (Rel\\<^sup>=) = (symcl Rel)\\<^sup>=\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symcl (Rel\\<^sup>=) = (symcl Rel)\\<^sup>=", "by (auto simp add: symcl_def refl)"], ["", "text \\<open>The symmetric closure of a reflexive relation is reflexive.\\<close>"], ["", "lemma refl_symcl_of_refl_rel:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n    and A   :: \"'a set\"\n  assumes \"refl_on A Rel\"\n  shows \"refl_on A (symcl Rel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. refl_on A (symcl Rel)", "using assms"], ["proof (prove)\nusing this:\n  refl_on A Rel\n\ngoal (1 subgoal):\n 1. refl_on A (symcl Rel)", "by (auto simp add: refl_on_def' symcl_def)"], ["", "text \\<open>Accordingly, the reflexive, symmetric, and transitive closure of a relation is equal to its\n        symmetric, reflexive, and transitive closure.\\<close>"], ["", "lemma refl_symm_trans_closure_is_symm_refl_trans_closure:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n  shows \"(symcl (Rel\\<^sup>=))\\<^sup>+ = (symcl Rel)\\<^sup>*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (symcl (Rel\\<^sup>=))\\<^sup>+ = (symcl Rel)\\<^sup>*", "using refl_symm_closure_is_symm_refl_closure[where Rel=\"Rel\"]"], ["proof (prove)\nusing this:\n  symcl (Rel\\<^sup>=) = (symcl Rel)\\<^sup>=\n\ngoal (1 subgoal):\n 1. (symcl (Rel\\<^sup>=))\\<^sup>+ = (symcl Rel)\\<^sup>*", "by simp"], ["", "text \\<open>The reflexive closure of a symmetric relation is symmetric.\\<close>"], ["", "lemma sym_reflcl_of_symm_rel:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n  assumes \"sym Rel\"\n  shows \"sym (Rel\\<^sup>=)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sym (Rel\\<^sup>=)", "using assms"], ["proof (prove)\nusing this:\n  sym Rel\n\ngoal (1 subgoal):\n 1. sym (Rel\\<^sup>=)", "by (simp add: sym_Id sym_Un)"], ["", "text \\<open>The reflexive closure of a reflexive relation is the relation itself.\\<close>"], ["", "lemma reflcl_of_refl_rel:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n  assumes \"refl Rel\"\n  shows \"Rel\\<^sup>= = Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Rel\\<^sup>= = Rel", "using assms"], ["proof (prove)\nusing this:\n  refl Rel\n\ngoal (1 subgoal):\n 1. Rel\\<^sup>= = Rel", "unfolding refl_on_def"], ["proof (prove)\nusing this:\n  Rel \\<subseteq> UNIV \\<times> UNIV \\<and>\n  (\\<forall>x\\<in>UNIV. (x, x) \\<in> Rel)\n\ngoal (1 subgoal):\n 1. Rel\\<^sup>= = Rel", "by auto"], ["", "text \\<open>The symmetric closure of a symmetric relation is the relation itself.\\<close>"], ["", "lemma symm_closure_of_symm_rel:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n  assumes \"sym Rel\"\n  shows \"symcl Rel = Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symcl Rel = Rel", "using assms"], ["proof (prove)\nusing this:\n  sym Rel\n\ngoal (1 subgoal):\n 1. symcl Rel = Rel", "unfolding symcl_def sym_def"], ["proof (prove)\nusing this:\n  \\<forall>x y. (x, y) \\<in> Rel \\<longrightarrow> (y, x) \\<in> Rel\n\ngoal (1 subgoal):\n 1. Rel \\<union> Rel\\<inverse> = Rel", "by auto"], ["", "text \\<open>The reflexive and transitive closure of a preorder Rel is Rel.\\<close>"], ["", "lemma rtrancl_of_preorder:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n  assumes \"preorder Rel\"\n  shows \"Rel\\<^sup>* = Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Rel\\<^sup>* = Rel", "using assms reflcl_of_refl_rel[of Rel] trancl_id[of \"Rel\\<^sup>=\"] trancl_reflcl[of Rel]"], ["proof (prove)\nusing this:\n  preorder Rel\n  refl Rel \\<Longrightarrow> Rel\\<^sup>= = Rel\n  trans (Rel\\<^sup>=) \\<Longrightarrow> (Rel\\<^sup>=)\\<^sup>+ = Rel\\<^sup>=\n  (Rel\\<^sup>=)\\<^sup>+ = Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. Rel\\<^sup>* = Rel", "unfolding preorder_on_def"], ["proof (prove)\nusing this:\n  refl Rel \\<and> trans Rel\n  refl Rel \\<Longrightarrow> Rel\\<^sup>= = Rel\n  trans (Rel\\<^sup>=) \\<Longrightarrow> (Rel\\<^sup>=)\\<^sup>+ = Rel\\<^sup>=\n  (Rel\\<^sup>=)\\<^sup>+ = Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. Rel\\<^sup>* = Rel", "by auto"], ["", "text \\<open>The reflexive and transitive closure of a relation is a subset of its reflexive, symmetric,\n        and transtive closure.\\<close>"], ["", "lemma refl_trans_closure_subset_of_refl_symm_trans_closure:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n  shows \"Rel\\<^sup>* \\<subseteq> (symcl (Rel\\<^sup>=))\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Rel\\<^sup>* \\<subseteq> (symcl (Rel\\<^sup>=))\\<^sup>+", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (a, b) \\<in> Rel\\<^sup>* \\<Longrightarrow>\n       (a, b) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+", "fix a b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (a, b) \\<in> Rel\\<^sup>* \\<Longrightarrow>\n       (a, b) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+", "assume \"(a, b) \\<in> Rel\\<^sup>*\""], ["proof (state)\nthis:\n  (a, b) \\<in> Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (a, b) \\<in> Rel\\<^sup>* \\<Longrightarrow>\n       (a, b) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+", "hence \"(a, b) \\<in> (symcl Rel)\\<^sup>*\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> (symcl Rel)\\<^sup>*", "using in_rtrancl_UnI[of \"(a, b)\" \"Rel\" \"Rel\\<inverse>\"]"], ["proof (prove)\nusing this:\n  (a, b) \\<in> Rel\\<^sup>*\n  (a, b) \\<in> Rel\\<^sup>* \\<or>\n  (a, b) \\<in> (Rel\\<inverse>)\\<^sup>* \\<Longrightarrow>\n  (a, b) \\<in> (Rel \\<union> Rel\\<inverse>)\\<^sup>*\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> (symcl Rel)\\<^sup>*", "by (simp add: symcl_def)"], ["proof (state)\nthis:\n  (a, b) \\<in> (symcl Rel)\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (a, b) \\<in> Rel\\<^sup>* \\<Longrightarrow>\n       (a, b) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+", "thus \"(a, b) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> (symcl Rel)\\<^sup>*\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+", "using refl_symm_trans_closure_is_symm_refl_trans_closure[of Rel]"], ["proof (prove)\nusing this:\n  (a, b) \\<in> (symcl Rel)\\<^sup>*\n  (symcl (Rel\\<^sup>=))\\<^sup>+ = (symcl Rel)\\<^sup>*\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+", "by simp"], ["proof (state)\nthis:\n  (a, b) \\<in> (symcl (Rel\\<^sup>=))\\<^sup>+\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If a preorder Rel satisfies the following two conditions, then its symmetric closure is\n        transitive:\n        (1) If (a, b) and (c, b) in Rel but not (a, c) in Rel, then (b, a) in Rel or (b, c) in Rel.\n        (2) If (a, b) and (a, c) in Rel but not (b, c) in Rel, then (b, a) in Rel or (c, a) in Rel.\n\\<close>"], ["", "lemma symm_closure_of_preorder_is_trans:\n  fixes Rel :: \"('a \\<times> 'a) set\"\n  assumes condA: \"\\<forall>a b c. (a, b) \\<in> Rel \\<and> (c, b) \\<in> Rel \\<and> (a, c) \\<notin> Rel\n                  \\<longrightarrow> (b, a) \\<in> Rel \\<or> (b, c) \\<in> Rel\"\n      and condB: \"\\<forall>a b c. (a, b) \\<in> Rel \\<and> (a, c) \\<in> Rel \\<and> (b, c) \\<notin> Rel\n                  \\<longrightarrow> (b, a) \\<in> Rel \\<or> (c, a) \\<in> Rel\"\n      and reflR: \"refl Rel\"\n      and tranR: \"trans Rel\"\n  shows \"trans (symcl Rel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trans (symcl Rel)", "unfolding trans_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y z.\n       (x, y) \\<in> symcl Rel \\<longrightarrow>\n       (y, z) \\<in> symcl Rel \\<longrightarrow> (x, z) \\<in> symcl Rel", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (x, y) \\<in> symcl Rel \\<and>\n       (y, z) \\<in> symcl Rel \\<Longrightarrow>\n       (x, z) \\<in> symcl Rel", "fix a b c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (x, y) \\<in> symcl Rel \\<and>\n       (y, z) \\<in> symcl Rel \\<Longrightarrow>\n       (x, z) \\<in> symcl Rel", "have \"\\<lbrakk>(a, b) \\<in> Rel; (b, c) \\<in> Rel\\<rbrakk> \\<Longrightarrow> (a, c) \\<in> symcl Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a, b) \\<in> Rel \\<and> (b, c) \\<in> Rel \\<Longrightarrow>\n    (a, c) \\<in> symcl Rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (a, b) \\<in> Rel \\<and> (b, c) \\<in> Rel \\<Longrightarrow>\n    (a, c) \\<in> symcl Rel", "assume \"(a, b) \\<in> Rel\" and \"(b, c) \\<in> Rel\""], ["proof (state)\nthis:\n  (a, b) \\<in> Rel\n  (b, c) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> Rel \\<and> (b, c) \\<in> Rel \\<Longrightarrow>\n    (a, c) \\<in> symcl Rel", "with tranR"], ["proof (chain)\npicking this:\n  trans Rel\n  (a, b) \\<in> Rel\n  (b, c) \\<in> Rel", "have \"(a, c) \\<in> Rel\""], ["proof (prove)\nusing this:\n  trans Rel\n  (a, b) \\<in> Rel\n  (b, c) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (a, c) \\<in> Rel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  \\<forall>x y z.\n     (x, y) \\<in> Rel \\<longrightarrow>\n     (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel\n  (a, b) \\<in> Rel\n  (b, c) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (a, c) \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  (a, c) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> Rel \\<and> (b, c) \\<in> Rel \\<Longrightarrow>\n    (a, c) \\<in> symcl Rel", "thus \"(a, c) \\<in> symcl Rel\""], ["proof (prove)\nusing this:\n  (a, c) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (a, c) \\<in> symcl Rel", "by (simp add: symcl_def)"], ["proof (state)\nthis:\n  (a, c) \\<in> symcl Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (a, b) \\<in> Rel \\<and> (b, c) \\<in> Rel \\<Longrightarrow>\n  (a, c) \\<in> symcl Rel\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (x, y) \\<in> symcl Rel \\<and>\n       (y, z) \\<in> symcl Rel \\<Longrightarrow>\n       (x, z) \\<in> symcl Rel", "moreover"], ["proof (state)\nthis:\n  (a, b) \\<in> Rel \\<and> (b, c) \\<in> Rel \\<Longrightarrow>\n  (a, c) \\<in> symcl Rel\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (x, y) \\<in> symcl Rel \\<and>\n       (y, z) \\<in> symcl Rel \\<Longrightarrow>\n       (x, z) \\<in> symcl Rel", "have \"\\<lbrakk>(a, b) \\<in> Rel; (c, b) \\<in> Rel; (a, c) \\<notin> Rel\\<rbrakk> \\<Longrightarrow> (a, c) \\<in> symcl Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a, b) \\<in> Rel \\<and>\n    (c, b) \\<in> Rel \\<and> (a, c) \\<notin> Rel \\<Longrightarrow>\n    (a, c) \\<in> symcl Rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (a, b) \\<in> Rel \\<and>\n    (c, b) \\<in> Rel \\<and> (a, c) \\<notin> Rel \\<Longrightarrow>\n    (a, c) \\<in> symcl Rel", "assume A1: \"(a, b) \\<in> Rel\" and A2: \"(c, b) \\<in> Rel\" and \"(a, c) \\<notin> Rel\""], ["proof (state)\nthis:\n  (a, b) \\<in> Rel\n  (c, b) \\<in> Rel\n  (a, c) \\<notin> Rel\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> Rel \\<and>\n    (c, b) \\<in> Rel \\<and> (a, c) \\<notin> Rel \\<Longrightarrow>\n    (a, c) \\<in> symcl Rel", "with condA"], ["proof (chain)\npicking this:\n  \\<forall>a b c.\n     (a, b) \\<in> Rel \\<and>\n     (c, b) \\<in> Rel \\<and> (a, c) \\<notin> Rel \\<longrightarrow>\n     (b, a) \\<in> Rel \\<or> (b, c) \\<in> Rel\n  (a, b) \\<in> Rel\n  (c, b) \\<in> Rel\n  (a, c) \\<notin> Rel", "have \"(b, a) \\<in> Rel \\<or> (b, c) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<forall>a b c.\n     (a, b) \\<in> Rel \\<and>\n     (c, b) \\<in> Rel \\<and> (a, c) \\<notin> Rel \\<longrightarrow>\n     (b, a) \\<in> Rel \\<or> (b, c) \\<in> Rel\n  (a, b) \\<in> Rel\n  (c, b) \\<in> Rel\n  (a, c) \\<notin> Rel\n\ngoal (1 subgoal):\n 1. (b, a) \\<in> Rel \\<or> (b, c) \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  (b, a) \\<in> Rel \\<or> (b, c) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> Rel \\<and>\n    (c, b) \\<in> Rel \\<and> (a, c) \\<notin> Rel \\<Longrightarrow>\n    (a, c) \\<in> symcl Rel", "thus \"(a, c) \\<in> symcl Rel\""], ["proof (prove)\nusing this:\n  (b, a) \\<in> Rel \\<or> (b, c) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (a, c) \\<in> symcl Rel", "proof auto"], ["proof (state)\ngoal (2 subgoals):\n 1. (b, a) \\<in> Rel \\<Longrightarrow> (a, c) \\<in> symcl Rel\n 2. (b, c) \\<in> Rel \\<Longrightarrow> (a, c) \\<in> symcl Rel", "assume \"(b, a) \\<in> Rel\""], ["proof (state)\nthis:\n  (b, a) \\<in> Rel\n\ngoal (2 subgoals):\n 1. (b, a) \\<in> Rel \\<Longrightarrow> (a, c) \\<in> symcl Rel\n 2. (b, c) \\<in> Rel \\<Longrightarrow> (a, c) \\<in> symcl Rel", "with A2 tranR"], ["proof (chain)\npicking this:\n  (c, b) \\<in> Rel\n  trans Rel\n  (b, a) \\<in> Rel", "have \"(c, a) \\<in> Rel\""], ["proof (prove)\nusing this:\n  (c, b) \\<in> Rel\n  trans Rel\n  (b, a) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (c, a) \\<in> Rel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  (c, b) \\<in> Rel\n  \\<forall>x y z.\n     (x, y) \\<in> Rel \\<longrightarrow>\n     (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel\n  (b, a) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (c, a) \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  (c, a) \\<in> Rel\n\ngoal (2 subgoals):\n 1. (b, a) \\<in> Rel \\<Longrightarrow> (a, c) \\<in> symcl Rel\n 2. (b, c) \\<in> Rel \\<Longrightarrow> (a, c) \\<in> symcl Rel", "thus \"(a, c) \\<in> symcl Rel\""], ["proof (prove)\nusing this:\n  (c, a) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (a, c) \\<in> symcl Rel", "by (simp add: symcl_def)"], ["proof (state)\nthis:\n  (a, c) \\<in> symcl Rel\n\ngoal (1 subgoal):\n 1. (b, c) \\<in> Rel \\<Longrightarrow> (a, c) \\<in> symcl Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (b, c) \\<in> Rel \\<Longrightarrow> (a, c) \\<in> symcl Rel", "assume \"(b, c) \\<in> Rel\""], ["proof (state)\nthis:\n  (b, c) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (b, c) \\<in> Rel \\<Longrightarrow> (a, c) \\<in> symcl Rel", "with A1 tranR"], ["proof (chain)\npicking this:\n  (a, b) \\<in> Rel\n  trans Rel\n  (b, c) \\<in> Rel", "have \"(a, c) \\<in> Rel\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> Rel\n  trans Rel\n  (b, c) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (a, c) \\<in> Rel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  (a, b) \\<in> Rel\n  \\<forall>x y z.\n     (x, y) \\<in> Rel \\<longrightarrow>\n     (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel\n  (b, c) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (a, c) \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  (a, c) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (b, c) \\<in> Rel \\<Longrightarrow> (a, c) \\<in> symcl Rel", "thus \"(a, c) \\<in> symcl Rel\""], ["proof (prove)\nusing this:\n  (a, c) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (a, c) \\<in> symcl Rel", "by (simp add: symcl_def)"], ["proof (state)\nthis:\n  (a, c) \\<in> symcl Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (a, c) \\<in> symcl Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (a, b) \\<in> Rel \\<and>\n  (c, b) \\<in> Rel \\<and> (a, c) \\<notin> Rel \\<Longrightarrow>\n  (a, c) \\<in> symcl Rel\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (x, y) \\<in> symcl Rel \\<and>\n       (y, z) \\<in> symcl Rel \\<Longrightarrow>\n       (x, z) \\<in> symcl Rel", "moreover"], ["proof (state)\nthis:\n  (a, b) \\<in> Rel \\<and>\n  (c, b) \\<in> Rel \\<and> (a, c) \\<notin> Rel \\<Longrightarrow>\n  (a, c) \\<in> symcl Rel\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (x, y) \\<in> symcl Rel \\<and>\n       (y, z) \\<in> symcl Rel \\<Longrightarrow>\n       (x, z) \\<in> symcl Rel", "have \"\\<lbrakk>(b, a) \\<in> Rel; (b, c) \\<in> Rel; (a, c) \\<notin> Rel\\<rbrakk> \\<Longrightarrow> (a, c) \\<in> symcl Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b, a) \\<in> Rel \\<and>\n    (b, c) \\<in> Rel \\<and> (a, c) \\<notin> Rel \\<Longrightarrow>\n    (a, c) \\<in> symcl Rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (b, a) \\<in> Rel \\<and>\n    (b, c) \\<in> Rel \\<and> (a, c) \\<notin> Rel \\<Longrightarrow>\n    (a, c) \\<in> symcl Rel", "assume B1: \"(b, a) \\<in> Rel\" and B2: \"(b, c) \\<in> Rel\" and \"(a, c) \\<notin> Rel\""], ["proof (state)\nthis:\n  (b, a) \\<in> Rel\n  (b, c) \\<in> Rel\n  (a, c) \\<notin> Rel\n\ngoal (1 subgoal):\n 1. (b, a) \\<in> Rel \\<and>\n    (b, c) \\<in> Rel \\<and> (a, c) \\<notin> Rel \\<Longrightarrow>\n    (a, c) \\<in> symcl Rel", "with condB"], ["proof (chain)\npicking this:\n  \\<forall>a b c.\n     (a, b) \\<in> Rel \\<and>\n     (a, c) \\<in> Rel \\<and> (b, c) \\<notin> Rel \\<longrightarrow>\n     (b, a) \\<in> Rel \\<or> (c, a) \\<in> Rel\n  (b, a) \\<in> Rel\n  (b, c) \\<in> Rel\n  (a, c) \\<notin> Rel", "have \"(a, b) \\<in> Rel \\<or> (c, b) \\<in> Rel\""], ["proof (prove)\nusing this:\n  \\<forall>a b c.\n     (a, b) \\<in> Rel \\<and>\n     (a, c) \\<in> Rel \\<and> (b, c) \\<notin> Rel \\<longrightarrow>\n     (b, a) \\<in> Rel \\<or> (c, a) \\<in> Rel\n  (b, a) \\<in> Rel\n  (b, c) \\<in> Rel\n  (a, c) \\<notin> Rel\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> Rel \\<or> (c, b) \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  (a, b) \\<in> Rel \\<or> (c, b) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (b, a) \\<in> Rel \\<and>\n    (b, c) \\<in> Rel \\<and> (a, c) \\<notin> Rel \\<Longrightarrow>\n    (a, c) \\<in> symcl Rel", "thus \"(a, c) \\<in> symcl Rel\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> Rel \\<or> (c, b) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (a, c) \\<in> symcl Rel", "proof auto"], ["proof (state)\ngoal (2 subgoals):\n 1. (a, b) \\<in> Rel \\<Longrightarrow> (a, c) \\<in> symcl Rel\n 2. (c, b) \\<in> Rel \\<Longrightarrow> (a, c) \\<in> symcl Rel", "assume \"(a, b) \\<in> Rel\""], ["proof (state)\nthis:\n  (a, b) \\<in> Rel\n\ngoal (2 subgoals):\n 1. (a, b) \\<in> Rel \\<Longrightarrow> (a, c) \\<in> symcl Rel\n 2. (c, b) \\<in> Rel \\<Longrightarrow> (a, c) \\<in> symcl Rel", "with B2 tranR"], ["proof (chain)\npicking this:\n  (b, c) \\<in> Rel\n  trans Rel\n  (a, b) \\<in> Rel", "have \"(a, c) \\<in> Rel\""], ["proof (prove)\nusing this:\n  (b, c) \\<in> Rel\n  trans Rel\n  (a, b) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (a, c) \\<in> Rel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  (b, c) \\<in> Rel\n  \\<forall>x y z.\n     (x, y) \\<in> Rel \\<longrightarrow>\n     (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel\n  (a, b) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (a, c) \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  (a, c) \\<in> Rel\n\ngoal (2 subgoals):\n 1. (a, b) \\<in> Rel \\<Longrightarrow> (a, c) \\<in> symcl Rel\n 2. (c, b) \\<in> Rel \\<Longrightarrow> (a, c) \\<in> symcl Rel", "thus \"(a, c) \\<in> symcl Rel\""], ["proof (prove)\nusing this:\n  (a, c) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (a, c) \\<in> symcl Rel", "by (simp add: symcl_def)"], ["proof (state)\nthis:\n  (a, c) \\<in> symcl Rel\n\ngoal (1 subgoal):\n 1. (c, b) \\<in> Rel \\<Longrightarrow> (a, c) \\<in> symcl Rel", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (c, b) \\<in> Rel \\<Longrightarrow> (a, c) \\<in> symcl Rel", "assume \"(c, b) \\<in> Rel\""], ["proof (state)\nthis:\n  (c, b) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (c, b) \\<in> Rel \\<Longrightarrow> (a, c) \\<in> symcl Rel", "with B1 tranR"], ["proof (chain)\npicking this:\n  (b, a) \\<in> Rel\n  trans Rel\n  (c, b) \\<in> Rel", "have \"(c, a) \\<in> Rel\""], ["proof (prove)\nusing this:\n  (b, a) \\<in> Rel\n  trans Rel\n  (c, b) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (c, a) \\<in> Rel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  (b, a) \\<in> Rel\n  \\<forall>x y z.\n     (x, y) \\<in> Rel \\<longrightarrow>\n     (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel\n  (c, b) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (c, a) \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  (c, a) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (c, b) \\<in> Rel \\<Longrightarrow> (a, c) \\<in> symcl Rel", "thus \"(a, c) \\<in> symcl Rel\""], ["proof (prove)\nusing this:\n  (c, a) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (a, c) \\<in> symcl Rel", "by (simp add: symcl_def)"], ["proof (state)\nthis:\n  (a, c) \\<in> symcl Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (a, c) \\<in> symcl Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (b, a) \\<in> Rel \\<and>\n  (b, c) \\<in> Rel \\<and> (a, c) \\<notin> Rel \\<Longrightarrow>\n  (a, c) \\<in> symcl Rel\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (x, y) \\<in> symcl Rel \\<and>\n       (y, z) \\<in> symcl Rel \\<Longrightarrow>\n       (x, z) \\<in> symcl Rel", "moreover"], ["proof (state)\nthis:\n  (b, a) \\<in> Rel \\<and>\n  (b, c) \\<in> Rel \\<and> (a, c) \\<notin> Rel \\<Longrightarrow>\n  (a, c) \\<in> symcl Rel\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (x, y) \\<in> symcl Rel \\<and>\n       (y, z) \\<in> symcl Rel \\<Longrightarrow>\n       (x, z) \\<in> symcl Rel", "have \"\\<lbrakk>(b, a) \\<in> Rel; (c, b) \\<in> Rel\\<rbrakk> \\<Longrightarrow> (a, c) \\<in> symcl Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b, a) \\<in> Rel \\<and> (c, b) \\<in> Rel \\<Longrightarrow>\n    (a, c) \\<in> symcl Rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (b, a) \\<in> Rel \\<and> (c, b) \\<in> Rel \\<Longrightarrow>\n    (a, c) \\<in> symcl Rel", "assume \"(c, b) \\<in> Rel\" and \"(b, a) \\<in> Rel\""], ["proof (state)\nthis:\n  (c, b) \\<in> Rel\n  (b, a) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (b, a) \\<in> Rel \\<and> (c, b) \\<in> Rel \\<Longrightarrow>\n    (a, c) \\<in> symcl Rel", "with tranR"], ["proof (chain)\npicking this:\n  trans Rel\n  (c, b) \\<in> Rel\n  (b, a) \\<in> Rel", "have \"(c, a) \\<in> Rel\""], ["proof (prove)\nusing this:\n  trans Rel\n  (c, b) \\<in> Rel\n  (b, a) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (c, a) \\<in> Rel", "unfolding trans_def"], ["proof (prove)\nusing this:\n  \\<forall>x y z.\n     (x, y) \\<in> Rel \\<longrightarrow>\n     (y, z) \\<in> Rel \\<longrightarrow> (x, z) \\<in> Rel\n  (c, b) \\<in> Rel\n  (b, a) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (c, a) \\<in> Rel", "by blast"], ["proof (state)\nthis:\n  (c, a) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (b, a) \\<in> Rel \\<and> (c, b) \\<in> Rel \\<Longrightarrow>\n    (a, c) \\<in> symcl Rel", "thus \"(a, c) \\<in> symcl Rel\""], ["proof (prove)\nusing this:\n  (c, a) \\<in> Rel\n\ngoal (1 subgoal):\n 1. (a, c) \\<in> symcl Rel", "by (simp add: symcl_def)"], ["proof (state)\nthis:\n  (a, c) \\<in> symcl Rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (b, a) \\<in> Rel \\<and> (c, b) \\<in> Rel \\<Longrightarrow>\n  (a, c) \\<in> symcl Rel\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (x, y) \\<in> symcl Rel \\<and>\n       (y, z) \\<in> symcl Rel \\<Longrightarrow>\n       (x, z) \\<in> symcl Rel", "moreover"], ["proof (state)\nthis:\n  (b, a) \\<in> Rel \\<and> (c, b) \\<in> Rel \\<Longrightarrow>\n  (a, c) \\<in> symcl Rel\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (x, y) \\<in> symcl Rel \\<and>\n       (y, z) \\<in> symcl Rel \\<Longrightarrow>\n       (x, z) \\<in> symcl Rel", "assume \"(a, b) \\<in> symcl Rel\" and \"(b, c) \\<in> symcl Rel\""], ["proof (state)\nthis:\n  (a, b) \\<in> symcl Rel\n  (b, c) \\<in> symcl Rel\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (x, y) \\<in> symcl Rel \\<and>\n       (y, z) \\<in> symcl Rel \\<Longrightarrow>\n       (x, z) \\<in> symcl Rel", "ultimately"], ["proof (chain)\npicking this:\n  (a, b) \\<in> Rel \\<and> (b, c) \\<in> Rel \\<Longrightarrow>\n  (a, c) \\<in> symcl Rel\n  (a, b) \\<in> Rel \\<and>\n  (c, b) \\<in> Rel \\<and> (a, c) \\<notin> Rel \\<Longrightarrow>\n  (a, c) \\<in> symcl Rel\n  (b, a) \\<in> Rel \\<and>\n  (b, c) \\<in> Rel \\<and> (a, c) \\<notin> Rel \\<Longrightarrow>\n  (a, c) \\<in> symcl Rel\n  (b, a) \\<in> Rel \\<and> (c, b) \\<in> Rel \\<Longrightarrow>\n  (a, c) \\<in> symcl Rel\n  (a, b) \\<in> symcl Rel\n  (b, c) \\<in> symcl Rel", "show \"(a, c) \\<in> symcl Rel\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> Rel \\<and> (b, c) \\<in> Rel \\<Longrightarrow>\n  (a, c) \\<in> symcl Rel\n  (a, b) \\<in> Rel \\<and>\n  (c, b) \\<in> Rel \\<and> (a, c) \\<notin> Rel \\<Longrightarrow>\n  (a, c) \\<in> symcl Rel\n  (b, a) \\<in> Rel \\<and>\n  (b, c) \\<in> Rel \\<and> (a, c) \\<notin> Rel \\<Longrightarrow>\n  (a, c) \\<in> symcl Rel\n  (b, a) \\<in> Rel \\<and> (c, b) \\<in> Rel \\<Longrightarrow>\n  (a, c) \\<in> symcl Rel\n  (a, b) \\<in> symcl Rel\n  (b, c) \\<in> symcl Rel\n\ngoal (1 subgoal):\n 1. (a, c) \\<in> symcl Rel", "by (auto simp add: symcl_def)"], ["proof (state)\nthis:\n  (a, c) \\<in> symcl Rel\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Preservation, Reflection, and Respection of Predicates\\<close>"], ["", "text \\<open>A relation R preserves some predicate P if P(a) implies P(b) for all (a, b) in R.\\<close>"], ["", "abbreviation rel_preserves_pred :: \"('a \\<times> 'a) set \\<Rightarrow> ('a \\<Rightarrow> bool) \\<Rightarrow> bool\" where\n  \"rel_preserves_pred Rel Pred \\<equiv> \\<forall>a b. (a, b) \\<in> Rel \\<and> Pred a \\<longrightarrow> Pred b\""], ["", "abbreviation rel_preserves_binary_pred :: \"('a \\<times> 'a) set \\<Rightarrow> ('a \\<Rightarrow> 'b \\<Rightarrow> bool) \\<Rightarrow> bool\" where\n  \"rel_preserves_binary_pred Rel Pred \\<equiv> \\<forall>a b x. (a, b) \\<in> Rel \\<and> Pred a x \\<longrightarrow> Pred b x\""], ["", "text \\<open>A relation R reflects some predicate P if P(b) implies P(a) for all (a, b) in R.\\<close>"], ["", "abbreviation rel_reflects_pred :: \"('a \\<times> 'a) set \\<Rightarrow> ('a \\<Rightarrow> bool) \\<Rightarrow> bool\" where\n  \"rel_reflects_pred Rel Pred \\<equiv> \\<forall>a b. (a, b) \\<in> Rel \\<and> Pred b \\<longrightarrow> Pred a\""], ["", "abbreviation rel_reflects_binary_pred :: \"('a \\<times> 'a) set \\<Rightarrow> ('a \\<Rightarrow> 'b \\<Rightarrow> bool) \\<Rightarrow> bool\" where\n  \"rel_reflects_binary_pred Rel Pred \\<equiv> \\<forall>a b x. (a, b) \\<in> Rel \\<and> Pred b x \\<longrightarrow> Pred a x\""], ["", "text \\<open>A relation respects a predicate if it preserves and reflects it.\\<close>"], ["", "abbreviation rel_respects_pred :: \"('a \\<times> 'a) set \\<Rightarrow> ('a \\<Rightarrow> bool) \\<Rightarrow> bool\" where\n  \"rel_respects_pred Rel Pred \\<equiv> rel_preserves_pred Rel Pred \\<and> rel_reflects_pred Rel Pred\""], ["", "abbreviation rel_respects_binary_pred :: \"('a \\<times> 'a) set \\<Rightarrow> ('a \\<Rightarrow> 'b \\<Rightarrow> bool) \\<Rightarrow> bool\" where\n  \"rel_respects_binary_pred Rel Pred \\<equiv>\n   rel_preserves_binary_pred Rel Pred \\<and> rel_reflects_binary_pred Rel Pred\""], ["", "text \\<open>For symmetric relations preservation, reflection, and respection of predicates means the\n        same.\\<close>"], ["", "lemma symm_relation_impl_preservation_equals_reflection:\n  fixes Rel  :: \"('a \\<times> 'a) set\"\n    and Pred :: \"'a \\<Rightarrow> bool\"\n  assumes symm: \"sym Rel\"\n  shows \"rel_preserves_pred Rel Pred = rel_reflects_pred Rel Pred\"\n    and \"rel_preserves_pred Rel Pred = rel_respects_pred Rel Pred\"\n    and \"rel_reflects_pred Rel Pred = rel_respects_pred Rel Pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_preserves_pred Rel Pred = rel_reflects_pred Rel Pred &&&\n    rel_preserves_pred Rel Pred = rel_respects_pred Rel Pred &&&\n    rel_reflects_pred Rel Pred = rel_respects_pred Rel Pred", "using symm"], ["proof (prove)\nusing this:\n  sym Rel\n\ngoal (1 subgoal):\n 1. rel_preserves_pred Rel Pred = rel_reflects_pred Rel Pred &&&\n    rel_preserves_pred Rel Pred = rel_respects_pred Rel Pred &&&\n    rel_reflects_pred Rel Pred = rel_respects_pred Rel Pred", "unfolding sym_def"], ["proof (prove)\nusing this:\n  \\<forall>x y. (x, y) \\<in> Rel \\<longrightarrow> (y, x) \\<in> Rel\n\ngoal (1 subgoal):\n 1. rel_preserves_pred Rel Pred = rel_reflects_pred Rel Pred &&&\n    rel_preserves_pred Rel Pred = rel_respects_pred Rel Pred &&&\n    rel_reflects_pred Rel Pred = rel_respects_pred Rel Pred", "by blast+"], ["", "lemma symm_relation_impl_preservation_equals_reflection_of_binary_predicates:\n  fixes Rel  :: \"('a \\<times> 'a) set\"\n    and Pred :: \"'a \\<Rightarrow> 'b \\<Rightarrow> bool\"\n  assumes symm: \"sym Rel\"\n  shows \"rel_preserves_binary_pred Rel Pred = rel_reflects_binary_pred Rel Pred\"\n    and \"rel_preserves_binary_pred Rel Pred = rel_respects_binary_pred Rel Pred\"\n    and \"rel_reflects_binary_pred Rel Pred = rel_respects_binary_pred Rel Pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_preserves_binary_pred Rel Pred =\n    rel_reflects_binary_pred Rel Pred &&&\n    rel_preserves_binary_pred Rel Pred =\n    rel_respects_binary_pred Rel Pred &&&\n    rel_reflects_binary_pred Rel Pred = rel_respects_binary_pred Rel Pred", "using symm"], ["proof (prove)\nusing this:\n  sym Rel\n\ngoal (1 subgoal):\n 1. rel_preserves_binary_pred Rel Pred =\n    rel_reflects_binary_pred Rel Pred &&&\n    rel_preserves_binary_pred Rel Pred =\n    rel_respects_binary_pred Rel Pred &&&\n    rel_reflects_binary_pred Rel Pred = rel_respects_binary_pred Rel Pred", "unfolding sym_def"], ["proof (prove)\nusing this:\n  \\<forall>x y. (x, y) \\<in> Rel \\<longrightarrow> (y, x) \\<in> Rel\n\ngoal (1 subgoal):\n 1. rel_preserves_binary_pred Rel Pred =\n    rel_reflects_binary_pred Rel Pred &&&\n    rel_preserves_binary_pred Rel Pred =\n    rel_respects_binary_pred Rel Pred &&&\n    rel_reflects_binary_pred Rel Pred = rel_respects_binary_pred Rel Pred", "by blast+"], ["", "text \\<open>If a relation preserves a predicate then so does its reflexive or/and transitive closure.\n\\<close>"], ["", "lemma preservation_and_closures:\n  fixes Rel  :: \"('a \\<times> 'a) set\"\n    and Pred :: \"'a \\<Rightarrow> bool\"\n  assumes preservation: \"rel_preserves_pred Rel Pred\"\n  shows \"rel_preserves_pred (Rel\\<^sup>=) Pred\"\n    and \"rel_preserves_pred (Rel\\<^sup>+) Pred\"\n    and \"rel_preserves_pred (Rel\\<^sup>*) Pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_preserves_pred (Rel\\<^sup>=) Pred &&&\n    rel_preserves_pred (Rel\\<^sup>+) Pred &&&\n    rel_preserves_pred (Rel\\<^sup>*) Pred", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. rel_preserves_pred (Rel\\<^sup>=) Pred\n 2. rel_preserves_pred (Rel\\<^sup>+) Pred\n 3. rel_preserves_pred (Rel\\<^sup>*) Pred", "from preservation"], ["proof (chain)\npicking this:\n  rel_preserves_pred Rel Pred", "show A: \"rel_preserves_pred (Rel\\<^sup>=) Pred\""], ["proof (prove)\nusing this:\n  rel_preserves_pred Rel Pred\n\ngoal (1 subgoal):\n 1. rel_preserves_pred (Rel\\<^sup>=) Pred", "by (auto simp add: refl)"], ["proof (state)\nthis:\n  rel_preserves_pred (Rel\\<^sup>=) Pred\n\ngoal (2 subgoals):\n 1. rel_preserves_pred (Rel\\<^sup>+) Pred\n 2. rel_preserves_pred (Rel\\<^sup>*) Pred", "have B: \"\\<And>Rel. rel_preserves_pred Rel Pred \\<Longrightarrow> rel_preserves_pred (Rel\\<^sup>+) Pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       rel_preserves_pred Rel Pred \\<Longrightarrow>\n       rel_preserves_pred (Rel\\<^sup>+) Pred", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Rel a b.\n       rel_preserves_pred Rel Pred \\<and>\n       (a, b) \\<in> Rel\\<^sup>+ \\<and> Pred a \\<Longrightarrow>\n       Pred b", "fix Rel a b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Rel a b.\n       rel_preserves_pred Rel Pred \\<and>\n       (a, b) \\<in> Rel\\<^sup>+ \\<and> Pred a \\<Longrightarrow>\n       Pred b", "assume \"(a, b) \\<in> Rel\\<^sup>+\" and \"rel_preserves_pred Rel Pred\" and \"Pred a\""], ["proof (state)\nthis:\n  (a, b) \\<in> Rel\\<^sup>+\n  rel_preserves_pred Rel Pred\n  Pred a\n\ngoal (1 subgoal):\n 1. \\<And>Rel a b.\n       rel_preserves_pred Rel Pred \\<and>\n       (a, b) \\<in> Rel\\<^sup>+ \\<and> Pred a \\<Longrightarrow>\n       Pred b", "thus \"Pred b\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> Rel\\<^sup>+\n  rel_preserves_pred Rel Pred\n  Pred a\n\ngoal (1 subgoal):\n 1. Pred b", "by (induct, blast+)"], ["proof (state)\nthis:\n  Pred b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rel_preserves_pred ?Rel Pred \\<Longrightarrow>\n  rel_preserves_pred (?Rel\\<^sup>+) Pred\n\ngoal (2 subgoals):\n 1. rel_preserves_pred (Rel\\<^sup>+) Pred\n 2. rel_preserves_pred (Rel\\<^sup>*) Pred", "with preservation"], ["proof (chain)\npicking this:\n  rel_preserves_pred Rel Pred\n  rel_preserves_pred ?Rel Pred \\<Longrightarrow>\n  rel_preserves_pred (?Rel\\<^sup>+) Pred", "show \"rel_preserves_pred (Rel\\<^sup>+) Pred\""], ["proof (prove)\nusing this:\n  rel_preserves_pred Rel Pred\n  rel_preserves_pred ?Rel Pred \\<Longrightarrow>\n  rel_preserves_pred (?Rel\\<^sup>+) Pred\n\ngoal (1 subgoal):\n 1. rel_preserves_pred (Rel\\<^sup>+) Pred", "by blast"], ["proof (state)\nthis:\n  rel_preserves_pred (Rel\\<^sup>+) Pred\n\ngoal (1 subgoal):\n 1. rel_preserves_pred (Rel\\<^sup>*) Pred", "from preservation A B[where Rel=\"Rel\\<^sup>=\"]"], ["proof (chain)\npicking this:\n  rel_preserves_pred Rel Pred\n  rel_preserves_pred (Rel\\<^sup>=) Pred\n  rel_preserves_pred (Rel\\<^sup>=) Pred \\<Longrightarrow>\n  rel_preserves_pred ((Rel\\<^sup>=)\\<^sup>+) Pred", "show \"rel_preserves_pred (Rel\\<^sup>*) Pred\""], ["proof (prove)\nusing this:\n  rel_preserves_pred Rel Pred\n  rel_preserves_pred (Rel\\<^sup>=) Pred\n  rel_preserves_pred (Rel\\<^sup>=) Pred \\<Longrightarrow>\n  rel_preserves_pred ((Rel\\<^sup>=)\\<^sup>+) Pred\n\ngoal (1 subgoal):\n 1. rel_preserves_pred (Rel\\<^sup>*) Pred", "using trancl_reflcl[of Rel]"], ["proof (prove)\nusing this:\n  rel_preserves_pred Rel Pred\n  rel_preserves_pred (Rel\\<^sup>=) Pred\n  rel_preserves_pred (Rel\\<^sup>=) Pred \\<Longrightarrow>\n  rel_preserves_pred ((Rel\\<^sup>=)\\<^sup>+) Pred\n  (Rel\\<^sup>=)\\<^sup>+ = Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. rel_preserves_pred (Rel\\<^sup>*) Pred", "by blast"], ["proof (state)\nthis:\n  rel_preserves_pred (Rel\\<^sup>*) Pred\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma preservation_of_binary_predicates_and_closures:\n  fixes Rel  :: \"('a \\<times> 'a) set\"\n    and Pred :: \"'a \\<Rightarrow> 'b \\<Rightarrow> bool\"\n  assumes preservation: \"rel_preserves_binary_pred Rel Pred\"\n  shows \"rel_preserves_binary_pred (Rel\\<^sup>=) Pred\"\n    and \"rel_preserves_binary_pred (Rel\\<^sup>+) Pred\"\n    and \"rel_preserves_binary_pred (Rel\\<^sup>*) Pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_preserves_binary_pred (Rel\\<^sup>=) Pred &&&\n    rel_preserves_binary_pred (Rel\\<^sup>+) Pred &&&\n    rel_preserves_binary_pred (Rel\\<^sup>*) Pred", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. rel_preserves_binary_pred (Rel\\<^sup>=) Pred\n 2. rel_preserves_binary_pred (Rel\\<^sup>+) Pred\n 3. rel_preserves_binary_pred (Rel\\<^sup>*) Pred", "from preservation"], ["proof (chain)\npicking this:\n  rel_preserves_binary_pred Rel Pred", "show A: \"rel_preserves_binary_pred (Rel\\<^sup>=) Pred\""], ["proof (prove)\nusing this:\n  rel_preserves_binary_pred Rel Pred\n\ngoal (1 subgoal):\n 1. rel_preserves_binary_pred (Rel\\<^sup>=) Pred", "by (auto simp add: refl)"], ["proof (state)\nthis:\n  rel_preserves_binary_pred (Rel\\<^sup>=) Pred\n\ngoal (2 subgoals):\n 1. rel_preserves_binary_pred (Rel\\<^sup>+) Pred\n 2. rel_preserves_binary_pred (Rel\\<^sup>*) Pred", "have B: \"\\<And>Rel. rel_preserves_binary_pred Rel Pred\n           \\<Longrightarrow> rel_preserves_binary_pred (Rel\\<^sup>+) Pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       rel_preserves_binary_pred Rel Pred \\<Longrightarrow>\n       rel_preserves_binary_pred (Rel\\<^sup>+) Pred", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Rel a b x.\n       rel_preserves_binary_pred Rel Pred \\<and>\n       (a, b) \\<in> Rel\\<^sup>+ \\<and> Pred a x \\<Longrightarrow>\n       Pred b x", "fix Rel a b x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Rel a b x.\n       rel_preserves_binary_pred Rel Pred \\<and>\n       (a, b) \\<in> Rel\\<^sup>+ \\<and> Pred a x \\<Longrightarrow>\n       Pred b x", "assume \"(a, b) \\<in> Rel\\<^sup>+\" and \"rel_preserves_binary_pred Rel Pred\" and \"Pred a x\""], ["proof (state)\nthis:\n  (a, b) \\<in> Rel\\<^sup>+\n  rel_preserves_binary_pred Rel Pred\n  Pred a x\n\ngoal (1 subgoal):\n 1. \\<And>Rel a b x.\n       rel_preserves_binary_pred Rel Pred \\<and>\n       (a, b) \\<in> Rel\\<^sup>+ \\<and> Pred a x \\<Longrightarrow>\n       Pred b x", "thus \"Pred b x\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> Rel\\<^sup>+\n  rel_preserves_binary_pred Rel Pred\n  Pred a x\n\ngoal (1 subgoal):\n 1. Pred b x", "by (induct, blast+)"], ["proof (state)\nthis:\n  Pred b x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rel_preserves_binary_pred ?Rel Pred \\<Longrightarrow>\n  rel_preserves_binary_pred (?Rel\\<^sup>+) Pred\n\ngoal (2 subgoals):\n 1. rel_preserves_binary_pred (Rel\\<^sup>+) Pred\n 2. rel_preserves_binary_pred (Rel\\<^sup>*) Pred", "with preservation"], ["proof (chain)\npicking this:\n  rel_preserves_binary_pred Rel Pred\n  rel_preserves_binary_pred ?Rel Pred \\<Longrightarrow>\n  rel_preserves_binary_pred (?Rel\\<^sup>+) Pred", "show \"rel_preserves_binary_pred (Rel\\<^sup>+) Pred\""], ["proof (prove)\nusing this:\n  rel_preserves_binary_pred Rel Pred\n  rel_preserves_binary_pred ?Rel Pred \\<Longrightarrow>\n  rel_preserves_binary_pred (?Rel\\<^sup>+) Pred\n\ngoal (1 subgoal):\n 1. rel_preserves_binary_pred (Rel\\<^sup>+) Pred", "by blast"], ["proof (state)\nthis:\n  rel_preserves_binary_pred (Rel\\<^sup>+) Pred\n\ngoal (1 subgoal):\n 1. rel_preserves_binary_pred (Rel\\<^sup>*) Pred", "from preservation A B[where Rel=\"Rel\\<^sup>=\"]"], ["proof (chain)\npicking this:\n  rel_preserves_binary_pred Rel Pred\n  rel_preserves_binary_pred (Rel\\<^sup>=) Pred\n  rel_preserves_binary_pred (Rel\\<^sup>=) Pred \\<Longrightarrow>\n  rel_preserves_binary_pred ((Rel\\<^sup>=)\\<^sup>+) Pred", "show \"rel_preserves_binary_pred (Rel\\<^sup>*) Pred\""], ["proof (prove)\nusing this:\n  rel_preserves_binary_pred Rel Pred\n  rel_preserves_binary_pred (Rel\\<^sup>=) Pred\n  rel_preserves_binary_pred (Rel\\<^sup>=) Pred \\<Longrightarrow>\n  rel_preserves_binary_pred ((Rel\\<^sup>=)\\<^sup>+) Pred\n\ngoal (1 subgoal):\n 1. rel_preserves_binary_pred (Rel\\<^sup>*) Pred", "using trancl_reflcl[of Rel]"], ["proof (prove)\nusing this:\n  rel_preserves_binary_pred Rel Pred\n  rel_preserves_binary_pred (Rel\\<^sup>=) Pred\n  rel_preserves_binary_pred (Rel\\<^sup>=) Pred \\<Longrightarrow>\n  rel_preserves_binary_pred ((Rel\\<^sup>=)\\<^sup>+) Pred\n  (Rel\\<^sup>=)\\<^sup>+ = Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. rel_preserves_binary_pred (Rel\\<^sup>*) Pred", "by fast"], ["proof (state)\nthis:\n  rel_preserves_binary_pred (Rel\\<^sup>*) Pred\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If a relation reflects a predicate then so does its reflexive or/and transitive closure.\\<close>"], ["", "lemma reflection_and_closures:\n  fixes Rel  :: \"('a \\<times> 'a) set\"\n    and Pred :: \"'a \\<Rightarrow> bool\"\n  assumes reflection: \"rel_reflects_pred Rel Pred\"\n  shows \"rel_reflects_pred (Rel\\<^sup>=) Pred\"\n    and \"rel_reflects_pred (Rel\\<^sup>+) Pred\"\n    and \"rel_reflects_pred (Rel\\<^sup>*) Pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_reflects_pred (Rel\\<^sup>=) Pred &&&\n    rel_reflects_pred (Rel\\<^sup>+) Pred &&&\n    rel_reflects_pred (Rel\\<^sup>*) Pred", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. rel_reflects_pred (Rel\\<^sup>=) Pred\n 2. rel_reflects_pred (Rel\\<^sup>+) Pred\n 3. rel_reflects_pred (Rel\\<^sup>*) Pred", "from reflection"], ["proof (chain)\npicking this:\n  rel_reflects_pred Rel Pred", "show A: \"rel_reflects_pred (Rel\\<^sup>=) Pred\""], ["proof (prove)\nusing this:\n  rel_reflects_pred Rel Pred\n\ngoal (1 subgoal):\n 1. rel_reflects_pred (Rel\\<^sup>=) Pred", "by (auto simp add: refl)"], ["proof (state)\nthis:\n  rel_reflects_pred (Rel\\<^sup>=) Pred\n\ngoal (2 subgoals):\n 1. rel_reflects_pred (Rel\\<^sup>+) Pred\n 2. rel_reflects_pred (Rel\\<^sup>*) Pred", "have B: \"\\<And>Rel. rel_reflects_pred Rel Pred \\<Longrightarrow> rel_reflects_pred (Rel\\<^sup>+) Pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       rel_reflects_pred Rel Pred \\<Longrightarrow>\n       rel_reflects_pred (Rel\\<^sup>+) Pred", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Rel a b.\n       rel_reflects_pred Rel Pred \\<and>\n       (a, b) \\<in> Rel\\<^sup>+ \\<and> Pred b \\<Longrightarrow>\n       Pred a", "fix Rel a b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Rel a b.\n       rel_reflects_pred Rel Pred \\<and>\n       (a, b) \\<in> Rel\\<^sup>+ \\<and> Pred b \\<Longrightarrow>\n       Pred a", "assume \"(a, b) \\<in> Rel\\<^sup>+\" and \"rel_reflects_pred Rel Pred\" and \"Pred b\""], ["proof (state)\nthis:\n  (a, b) \\<in> Rel\\<^sup>+\n  rel_reflects_pred Rel Pred\n  Pred b\n\ngoal (1 subgoal):\n 1. \\<And>Rel a b.\n       rel_reflects_pred Rel Pred \\<and>\n       (a, b) \\<in> Rel\\<^sup>+ \\<and> Pred b \\<Longrightarrow>\n       Pred a", "thus \"Pred a\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> Rel\\<^sup>+\n  rel_reflects_pred Rel Pred\n  Pred b\n\ngoal (1 subgoal):\n 1. Pred a", "by (induct, blast+)"], ["proof (state)\nthis:\n  Pred a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rel_reflects_pred ?Rel Pred \\<Longrightarrow>\n  rel_reflects_pred (?Rel\\<^sup>+) Pred\n\ngoal (2 subgoals):\n 1. rel_reflects_pred (Rel\\<^sup>+) Pred\n 2. rel_reflects_pred (Rel\\<^sup>*) Pred", "with reflection"], ["proof (chain)\npicking this:\n  rel_reflects_pred Rel Pred\n  rel_reflects_pred ?Rel Pred \\<Longrightarrow>\n  rel_reflects_pred (?Rel\\<^sup>+) Pred", "show \"rel_reflects_pred (Rel\\<^sup>+) Pred\""], ["proof (prove)\nusing this:\n  rel_reflects_pred Rel Pred\n  rel_reflects_pred ?Rel Pred \\<Longrightarrow>\n  rel_reflects_pred (?Rel\\<^sup>+) Pred\n\ngoal (1 subgoal):\n 1. rel_reflects_pred (Rel\\<^sup>+) Pred", "by blast"], ["proof (state)\nthis:\n  rel_reflects_pred (Rel\\<^sup>+) Pred\n\ngoal (1 subgoal):\n 1. rel_reflects_pred (Rel\\<^sup>*) Pred", "from reflection A B[where Rel=\"Rel\\<^sup>=\"]"], ["proof (chain)\npicking this:\n  rel_reflects_pred Rel Pred\n  rel_reflects_pred (Rel\\<^sup>=) Pred\n  rel_reflects_pred (Rel\\<^sup>=) Pred \\<Longrightarrow>\n  rel_reflects_pred ((Rel\\<^sup>=)\\<^sup>+) Pred", "show \"rel_reflects_pred (Rel\\<^sup>*) Pred\""], ["proof (prove)\nusing this:\n  rel_reflects_pred Rel Pred\n  rel_reflects_pred (Rel\\<^sup>=) Pred\n  rel_reflects_pred (Rel\\<^sup>=) Pred \\<Longrightarrow>\n  rel_reflects_pred ((Rel\\<^sup>=)\\<^sup>+) Pred\n\ngoal (1 subgoal):\n 1. rel_reflects_pred (Rel\\<^sup>*) Pred", "using trancl_reflcl[of Rel]"], ["proof (prove)\nusing this:\n  rel_reflects_pred Rel Pred\n  rel_reflects_pred (Rel\\<^sup>=) Pred\n  rel_reflects_pred (Rel\\<^sup>=) Pred \\<Longrightarrow>\n  rel_reflects_pred ((Rel\\<^sup>=)\\<^sup>+) Pred\n  (Rel\\<^sup>=)\\<^sup>+ = Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. rel_reflects_pred (Rel\\<^sup>*) Pred", "by fast"], ["proof (state)\nthis:\n  rel_reflects_pred (Rel\\<^sup>*) Pred\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma reflection_of_binary_predicates_and_closures:\n  fixes Rel  :: \"('a \\<times> 'a) set\"\n    and Pred :: \"'a \\<Rightarrow> 'b \\<Rightarrow> bool\"\n  assumes reflection: \"rel_reflects_binary_pred Rel Pred\"\n  shows \"rel_reflects_binary_pred (Rel\\<^sup>=) Pred\"\n    and \"rel_reflects_binary_pred (Rel\\<^sup>+) Pred\"\n    and \"rel_reflects_binary_pred (Rel\\<^sup>*) Pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_reflects_binary_pred (Rel\\<^sup>=) Pred &&&\n    rel_reflects_binary_pred (Rel\\<^sup>+) Pred &&&\n    rel_reflects_binary_pred (Rel\\<^sup>*) Pred", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. rel_reflects_binary_pred (Rel\\<^sup>=) Pred\n 2. rel_reflects_binary_pred (Rel\\<^sup>+) Pred\n 3. rel_reflects_binary_pred (Rel\\<^sup>*) Pred", "from reflection"], ["proof (chain)\npicking this:\n  rel_reflects_binary_pred Rel Pred", "show A: \"rel_reflects_binary_pred (Rel\\<^sup>=) Pred\""], ["proof (prove)\nusing this:\n  rel_reflects_binary_pred Rel Pred\n\ngoal (1 subgoal):\n 1. rel_reflects_binary_pred (Rel\\<^sup>=) Pred", "by (auto simp add: refl)"], ["proof (state)\nthis:\n  rel_reflects_binary_pred (Rel\\<^sup>=) Pred\n\ngoal (2 subgoals):\n 1. rel_reflects_binary_pred (Rel\\<^sup>+) Pred\n 2. rel_reflects_binary_pred (Rel\\<^sup>*) Pred", "have B: \"\\<And>Rel. rel_reflects_binary_pred Rel Pred \\<Longrightarrow> rel_reflects_binary_pred (Rel\\<^sup>+) Pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       rel_reflects_binary_pred Rel Pred \\<Longrightarrow>\n       rel_reflects_binary_pred (Rel\\<^sup>+) Pred", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Rel a b x.\n       rel_reflects_binary_pred Rel Pred \\<and>\n       (a, b) \\<in> Rel\\<^sup>+ \\<and> Pred b x \\<Longrightarrow>\n       Pred a x", "fix Rel a b x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Rel a b x.\n       rel_reflects_binary_pred Rel Pred \\<and>\n       (a, b) \\<in> Rel\\<^sup>+ \\<and> Pred b x \\<Longrightarrow>\n       Pred a x", "assume \"(a, b) \\<in> Rel\\<^sup>+\" and \"rel_reflects_binary_pred Rel Pred\" and \"Pred b x\""], ["proof (state)\nthis:\n  (a, b) \\<in> Rel\\<^sup>+\n  rel_reflects_binary_pred Rel Pred\n  Pred b x\n\ngoal (1 subgoal):\n 1. \\<And>Rel a b x.\n       rel_reflects_binary_pred Rel Pred \\<and>\n       (a, b) \\<in> Rel\\<^sup>+ \\<and> Pred b x \\<Longrightarrow>\n       Pred a x", "thus \"Pred a x\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> Rel\\<^sup>+\n  rel_reflects_binary_pred Rel Pred\n  Pred b x\n\ngoal (1 subgoal):\n 1. Pred a x", "by (induct, blast+)"], ["proof (state)\nthis:\n  Pred a x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rel_reflects_binary_pred ?Rel Pred \\<Longrightarrow>\n  rel_reflects_binary_pred (?Rel\\<^sup>+) Pred\n\ngoal (2 subgoals):\n 1. rel_reflects_binary_pred (Rel\\<^sup>+) Pred\n 2. rel_reflects_binary_pred (Rel\\<^sup>*) Pred", "with reflection"], ["proof (chain)\npicking this:\n  rel_reflects_binary_pred Rel Pred\n  rel_reflects_binary_pred ?Rel Pred \\<Longrightarrow>\n  rel_reflects_binary_pred (?Rel\\<^sup>+) Pred", "show \"rel_reflects_binary_pred (Rel\\<^sup>+) Pred\""], ["proof (prove)\nusing this:\n  rel_reflects_binary_pred Rel Pred\n  rel_reflects_binary_pred ?Rel Pred \\<Longrightarrow>\n  rel_reflects_binary_pred (?Rel\\<^sup>+) Pred\n\ngoal (1 subgoal):\n 1. rel_reflects_binary_pred (Rel\\<^sup>+) Pred", "by blast"], ["proof (state)\nthis:\n  rel_reflects_binary_pred (Rel\\<^sup>+) Pred\n\ngoal (1 subgoal):\n 1. rel_reflects_binary_pred (Rel\\<^sup>*) Pred", "from reflection A B[where Rel=\"Rel\\<^sup>=\"]"], ["proof (chain)\npicking this:\n  rel_reflects_binary_pred Rel Pred\n  rel_reflects_binary_pred (Rel\\<^sup>=) Pred\n  rel_reflects_binary_pred (Rel\\<^sup>=) Pred \\<Longrightarrow>\n  rel_reflects_binary_pred ((Rel\\<^sup>=)\\<^sup>+) Pred", "show \"rel_reflects_binary_pred (Rel\\<^sup>*) Pred\""], ["proof (prove)\nusing this:\n  rel_reflects_binary_pred Rel Pred\n  rel_reflects_binary_pred (Rel\\<^sup>=) Pred\n  rel_reflects_binary_pred (Rel\\<^sup>=) Pred \\<Longrightarrow>\n  rel_reflects_binary_pred ((Rel\\<^sup>=)\\<^sup>+) Pred\n\ngoal (1 subgoal):\n 1. rel_reflects_binary_pred (Rel\\<^sup>*) Pred", "using trancl_reflcl[of Rel]"], ["proof (prove)\nusing this:\n  rel_reflects_binary_pred Rel Pred\n  rel_reflects_binary_pred (Rel\\<^sup>=) Pred\n  rel_reflects_binary_pred (Rel\\<^sup>=) Pred \\<Longrightarrow>\n  rel_reflects_binary_pred ((Rel\\<^sup>=)\\<^sup>+) Pred\n  (Rel\\<^sup>=)\\<^sup>+ = Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. rel_reflects_binary_pred (Rel\\<^sup>*) Pred", "by fast"], ["proof (state)\nthis:\n  rel_reflects_binary_pred (Rel\\<^sup>*) Pred\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If a relation respects a predicate then so does its reflexive, symmetric, or/and transitive\n        closure.\\<close>"], ["", "lemma respection_and_closures:\n  fixes Rel  :: \"('a \\<times> 'a) set\"\n    and Pred :: \"'a \\<Rightarrow> bool\"\n  assumes respection: \"rel_respects_pred Rel Pred\"\n  shows \"rel_respects_pred (Rel\\<^sup>=) Pred\"\n    and \"rel_respects_pred (symcl Rel) Pred\"\n    and \"rel_respects_pred (Rel\\<^sup>+) Pred\"\n    and \"rel_respects_pred (symcl (Rel\\<^sup>=)) Pred\"\n    and \"rel_respects_pred (Rel\\<^sup>*) Pred\"\n    and \"rel_respects_pred ((symcl (Rel\\<^sup>=))\\<^sup>+) Pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rel_respects_pred (Rel\\<^sup>=) Pred &&&\n     rel_respects_pred (symcl Rel) Pred &&&\n     rel_respects_pred (Rel\\<^sup>+) Pred) &&&\n    rel_respects_pred (symcl (Rel\\<^sup>=)) Pred &&&\n    rel_respects_pred (Rel\\<^sup>*) Pred &&&\n    rel_respects_pred ((symcl (Rel\\<^sup>=))\\<^sup>+) Pred", "proof -"], ["proof (state)\ngoal (6 subgoals):\n 1. rel_respects_pred (Rel\\<^sup>=) Pred\n 2. rel_respects_pred (symcl Rel) Pred\n 3. rel_respects_pred (Rel\\<^sup>+) Pred\n 4. rel_respects_pred (symcl (Rel\\<^sup>=)) Pred\n 5. rel_respects_pred (Rel\\<^sup>*) Pred\n 6. rel_respects_pred ((symcl (Rel\\<^sup>=))\\<^sup>+) Pred", "from respection"], ["proof (chain)\npicking this:\n  rel_respects_pred Rel Pred", "show A: \"rel_respects_pred (Rel\\<^sup>=) Pred\""], ["proof (prove)\nusing this:\n  rel_respects_pred Rel Pred\n\ngoal (1 subgoal):\n 1. rel_respects_pred (Rel\\<^sup>=) Pred", "using preservation_and_closures(1)[where Rel=\"Rel\" and Pred=\"Pred\"]\n            reflection_and_closures(1)[where Rel=\"Rel\" and Pred=\"Pred\"]"], ["proof (prove)\nusing this:\n  rel_respects_pred Rel Pred\n  rel_preserves_pred Rel Pred \\<Longrightarrow>\n  rel_preserves_pred (Rel\\<^sup>=) Pred\n  rel_reflects_pred Rel Pred \\<Longrightarrow>\n  rel_reflects_pred (Rel\\<^sup>=) Pred\n\ngoal (1 subgoal):\n 1. rel_respects_pred (Rel\\<^sup>=) Pred", "by blast"], ["proof (state)\nthis:\n  rel_respects_pred (Rel\\<^sup>=) Pred\n\ngoal (5 subgoals):\n 1. rel_respects_pred (symcl Rel) Pred\n 2. rel_respects_pred (Rel\\<^sup>+) Pred\n 3. rel_respects_pred (symcl (Rel\\<^sup>=)) Pred\n 4. rel_respects_pred (Rel\\<^sup>*) Pred\n 5. rel_respects_pred ((symcl (Rel\\<^sup>=))\\<^sup>+) Pred", "have B: \"\\<And>Rel. rel_respects_pred Rel Pred \\<Longrightarrow> rel_respects_pred (symcl Rel) Pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       rel_respects_pred Rel Pred \\<Longrightarrow>\n       rel_respects_pred (symcl Rel) Pred", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Rel.\n       rel_respects_pred Rel Pred \\<Longrightarrow>\n       rel_preserves_pred (symcl Rel) Pred\n 2. \\<And>Rel.\n       rel_respects_pred Rel Pred \\<Longrightarrow>\n       rel_reflects_pred (symcl Rel) Pred", "fix Rel"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Rel.\n       rel_respects_pred Rel Pred \\<Longrightarrow>\n       rel_preserves_pred (symcl Rel) Pred\n 2. \\<And>Rel.\n       rel_respects_pred Rel Pred \\<Longrightarrow>\n       rel_reflects_pred (symcl Rel) Pred", "assume B1: \"rel_respects_pred Rel Pred\""], ["proof (state)\nthis:\n  rel_respects_pred Rel Pred\n\ngoal (2 subgoals):\n 1. \\<And>Rel.\n       rel_respects_pred Rel Pred \\<Longrightarrow>\n       rel_preserves_pred (symcl Rel) Pred\n 2. \\<And>Rel.\n       rel_respects_pred Rel Pred \\<Longrightarrow>\n       rel_reflects_pred (symcl Rel) Pred", "show \"rel_preserves_pred (symcl Rel) Pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_preserves_pred (symcl Rel) Pred", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. (a, b) \\<in> symcl Rel \\<and> Pred a \\<Longrightarrow> Pred b", "fix a b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. (a, b) \\<in> symcl Rel \\<and> Pred a \\<Longrightarrow> Pred b", "assume \"(a, b) \\<in> symcl Rel\""], ["proof (state)\nthis:\n  (a, b) \\<in> symcl Rel\n\ngoal (1 subgoal):\n 1. \\<And>a b. (a, b) \\<in> symcl Rel \\<and> Pred a \\<Longrightarrow> Pred b", "hence \"(a, b) \\<in> Rel \\<or> (b, a) \\<in> Rel\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> symcl Rel\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> Rel \\<or> (b, a) \\<in> Rel", "by (simp add: symcl_def)"], ["proof (state)\nthis:\n  (a, b) \\<in> Rel \\<or> (b, a) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>a b. (a, b) \\<in> symcl Rel \\<and> Pred a \\<Longrightarrow> Pred b", "moreover"], ["proof (state)\nthis:\n  (a, b) \\<in> Rel \\<or> (b, a) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>a b. (a, b) \\<in> symcl Rel \\<and> Pred a \\<Longrightarrow> Pred b", "assume \"Pred a\""], ["proof (state)\nthis:\n  Pred a\n\ngoal (1 subgoal):\n 1. \\<And>a b. (a, b) \\<in> symcl Rel \\<and> Pred a \\<Longrightarrow> Pred b", "ultimately"], ["proof (chain)\npicking this:\n  (a, b) \\<in> Rel \\<or> (b, a) \\<in> Rel\n  Pred a", "show \"Pred b\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> Rel \\<or> (b, a) \\<in> Rel\n  Pred a\n\ngoal (1 subgoal):\n 1. Pred b", "using B1"], ["proof (prove)\nusing this:\n  (a, b) \\<in> Rel \\<or> (b, a) \\<in> Rel\n  Pred a\n  rel_respects_pred Rel Pred\n\ngoal (1 subgoal):\n 1. Pred b", "by blast"], ["proof (state)\nthis:\n  Pred b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rel_preserves_pred (symcl Rel) Pred\n\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       rel_respects_pred Rel Pred \\<Longrightarrow>\n       rel_reflects_pred (symcl Rel) Pred", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       rel_respects_pred Rel Pred \\<Longrightarrow>\n       rel_reflects_pred (symcl Rel) Pred", "fix Rel  :: \"('a \\<times> 'a) set\"\n    and Pred :: \"'a \\<Rightarrow> bool\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       rel_respects_pred Rel Pred \\<Longrightarrow>\n       rel_reflects_pred (symcl Rel) Pred", "assume B2: \"rel_respects_pred Rel Pred\""], ["proof (state)\nthis:\n  rel_respects_pred Rel Pred\n\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       rel_respects_pred Rel Pred \\<Longrightarrow>\n       rel_reflects_pred (symcl Rel) Pred", "show \"rel_reflects_pred (symcl Rel) Pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_reflects_pred (symcl Rel) Pred", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. (a, b) \\<in> symcl Rel \\<and> Pred b \\<Longrightarrow> Pred a", "fix a b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. (a, b) \\<in> symcl Rel \\<and> Pred b \\<Longrightarrow> Pred a", "assume \"(a, b) \\<in> symcl Rel\""], ["proof (state)\nthis:\n  (a, b) \\<in> symcl Rel\n\ngoal (1 subgoal):\n 1. \\<And>a b. (a, b) \\<in> symcl Rel \\<and> Pred b \\<Longrightarrow> Pred a", "hence \"(a, b) \\<in> Rel \\<or> (b, a) \\<in> Rel\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> symcl Rel\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> Rel \\<or> (b, a) \\<in> Rel", "by (simp add: symcl_def)"], ["proof (state)\nthis:\n  (a, b) \\<in> Rel \\<or> (b, a) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>a b. (a, b) \\<in> symcl Rel \\<and> Pred b \\<Longrightarrow> Pred a", "moreover"], ["proof (state)\nthis:\n  (a, b) \\<in> Rel \\<or> (b, a) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>a b. (a, b) \\<in> symcl Rel \\<and> Pred b \\<Longrightarrow> Pred a", "assume \"Pred b\""], ["proof (state)\nthis:\n  Pred b\n\ngoal (1 subgoal):\n 1. \\<And>a b. (a, b) \\<in> symcl Rel \\<and> Pred b \\<Longrightarrow> Pred a", "ultimately"], ["proof (chain)\npicking this:\n  (a, b) \\<in> Rel \\<or> (b, a) \\<in> Rel\n  Pred b", "show \"Pred a\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> Rel \\<or> (b, a) \\<in> Rel\n  Pred b\n\ngoal (1 subgoal):\n 1. Pred a", "using B2"], ["proof (prove)\nusing this:\n  (a, b) \\<in> Rel \\<or> (b, a) \\<in> Rel\n  Pred b\n  rel_respects_pred Rel Pred\n\ngoal (1 subgoal):\n 1. Pred a", "by blast"], ["proof (state)\nthis:\n  Pred a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rel_reflects_pred (symcl Rel) Pred\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rel_respects_pred ?Rel Pred \\<Longrightarrow>\n  rel_respects_pred (symcl ?Rel) Pred\n\ngoal (5 subgoals):\n 1. rel_respects_pred (symcl Rel) Pred\n 2. rel_respects_pred (Rel\\<^sup>+) Pred\n 3. rel_respects_pred (symcl (Rel\\<^sup>=)) Pred\n 4. rel_respects_pred (Rel\\<^sup>*) Pred\n 5. rel_respects_pred ((symcl (Rel\\<^sup>=))\\<^sup>+) Pred", "from respection B[where Rel=\"Rel\"]"], ["proof (chain)\npicking this:\n  rel_respects_pred Rel Pred\n  rel_respects_pred Rel Pred \\<Longrightarrow>\n  rel_respects_pred (symcl Rel) Pred", "show \"rel_respects_pred (symcl Rel) Pred\""], ["proof (prove)\nusing this:\n  rel_respects_pred Rel Pred\n  rel_respects_pred Rel Pred \\<Longrightarrow>\n  rel_respects_pred (symcl Rel) Pred\n\ngoal (1 subgoal):\n 1. rel_respects_pred (symcl Rel) Pred", "by blast"], ["proof (state)\nthis:\n  rel_respects_pred (symcl Rel) Pred\n\ngoal (4 subgoals):\n 1. rel_respects_pred (Rel\\<^sup>+) Pred\n 2. rel_respects_pred (symcl (Rel\\<^sup>=)) Pred\n 3. rel_respects_pred (Rel\\<^sup>*) Pred\n 4. rel_respects_pred ((symcl (Rel\\<^sup>=))\\<^sup>+) Pred", "have C: \"\\<And>Rel. rel_respects_pred Rel Pred \\<Longrightarrow> rel_respects_pred (Rel\\<^sup>+) Pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       rel_respects_pred Rel Pred \\<Longrightarrow>\n       rel_respects_pred (Rel\\<^sup>+) Pred", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       rel_respects_pred Rel Pred \\<Longrightarrow>\n       rel_respects_pred (Rel\\<^sup>+) Pred", "fix Rel"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       rel_respects_pred Rel Pred \\<Longrightarrow>\n       rel_respects_pred (Rel\\<^sup>+) Pred", "assume \"rel_respects_pred Rel Pred\""], ["proof (state)\nthis:\n  rel_respects_pred Rel Pred\n\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       rel_respects_pred Rel Pred \\<Longrightarrow>\n       rel_respects_pred (Rel\\<^sup>+) Pred", "thus \"rel_respects_pred (Rel\\<^sup>+) Pred\""], ["proof (prove)\nusing this:\n  rel_respects_pred Rel Pred\n\ngoal (1 subgoal):\n 1. rel_respects_pred (Rel\\<^sup>+) Pred", "using preservation_and_closures(2)[where Rel=\"Rel\" and Pred=\"Pred\"]\n              reflection_and_closures(2)[where Rel=\"Rel\" and Pred=\"Pred\"]"], ["proof (prove)\nusing this:\n  rel_respects_pred Rel Pred\n  rel_preserves_pred Rel Pred \\<Longrightarrow>\n  rel_preserves_pred (Rel\\<^sup>+) Pred\n  rel_reflects_pred Rel Pred \\<Longrightarrow>\n  rel_reflects_pred (Rel\\<^sup>+) Pred\n\ngoal (1 subgoal):\n 1. rel_respects_pred (Rel\\<^sup>+) Pred", "by blast"], ["proof (state)\nthis:\n  rel_respects_pred (Rel\\<^sup>+) Pred\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rel_respects_pred ?Rel Pred \\<Longrightarrow>\n  rel_respects_pred (?Rel\\<^sup>+) Pred\n\ngoal (4 subgoals):\n 1. rel_respects_pred (Rel\\<^sup>+) Pred\n 2. rel_respects_pred (symcl (Rel\\<^sup>=)) Pred\n 3. rel_respects_pred (Rel\\<^sup>*) Pred\n 4. rel_respects_pred ((symcl (Rel\\<^sup>=))\\<^sup>+) Pred", "from respection C[where Rel=\"Rel\"]"], ["proof (chain)\npicking this:\n  rel_respects_pred Rel Pred\n  rel_respects_pred Rel Pred \\<Longrightarrow>\n  rel_respects_pred (Rel\\<^sup>+) Pred", "show \"rel_respects_pred (Rel\\<^sup>+) Pred\""], ["proof (prove)\nusing this:\n  rel_respects_pred Rel Pred\n  rel_respects_pred Rel Pred \\<Longrightarrow>\n  rel_respects_pred (Rel\\<^sup>+) Pred\n\ngoal (1 subgoal):\n 1. rel_respects_pred (Rel\\<^sup>+) Pred", "by blast"], ["proof (state)\nthis:\n  rel_respects_pred (Rel\\<^sup>+) Pred\n\ngoal (3 subgoals):\n 1. rel_respects_pred (symcl (Rel\\<^sup>=)) Pred\n 2. rel_respects_pred (Rel\\<^sup>*) Pred\n 3. rel_respects_pred ((symcl (Rel\\<^sup>=))\\<^sup>+) Pred", "from A B[where Rel=\"Rel\\<^sup>=\"]"], ["proof (chain)\npicking this:\n  rel_respects_pred (Rel\\<^sup>=) Pred\n  rel_respects_pred (Rel\\<^sup>=) Pred \\<Longrightarrow>\n  rel_respects_pred (symcl (Rel\\<^sup>=)) Pred", "show \"rel_respects_pred (symcl (Rel\\<^sup>=)) Pred\""], ["proof (prove)\nusing this:\n  rel_respects_pred (Rel\\<^sup>=) Pred\n  rel_respects_pred (Rel\\<^sup>=) Pred \\<Longrightarrow>\n  rel_respects_pred (symcl (Rel\\<^sup>=)) Pred\n\ngoal (1 subgoal):\n 1. rel_respects_pred (symcl (Rel\\<^sup>=)) Pred", "by blast"], ["proof (state)\nthis:\n  rel_respects_pred (symcl (Rel\\<^sup>=)) Pred\n\ngoal (2 subgoals):\n 1. rel_respects_pred (Rel\\<^sup>*) Pred\n 2. rel_respects_pred ((symcl (Rel\\<^sup>=))\\<^sup>+) Pred", "from A C[where Rel=\"Rel\\<^sup>=\"]"], ["proof (chain)\npicking this:\n  rel_respects_pred (Rel\\<^sup>=) Pred\n  rel_respects_pred (Rel\\<^sup>=) Pred \\<Longrightarrow>\n  rel_respects_pred ((Rel\\<^sup>=)\\<^sup>+) Pred", "show \"rel_respects_pred (Rel\\<^sup>*) Pred\""], ["proof (prove)\nusing this:\n  rel_respects_pred (Rel\\<^sup>=) Pred\n  rel_respects_pred (Rel\\<^sup>=) Pred \\<Longrightarrow>\n  rel_respects_pred ((Rel\\<^sup>=)\\<^sup>+) Pred\n\ngoal (1 subgoal):\n 1. rel_respects_pred (Rel\\<^sup>*) Pred", "using trancl_reflcl[of Rel]"], ["proof (prove)\nusing this:\n  rel_respects_pred (Rel\\<^sup>=) Pred\n  rel_respects_pred (Rel\\<^sup>=) Pred \\<Longrightarrow>\n  rel_respects_pred ((Rel\\<^sup>=)\\<^sup>+) Pred\n  (Rel\\<^sup>=)\\<^sup>+ = Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. rel_respects_pred (Rel\\<^sup>*) Pred", "by fast"], ["proof (state)\nthis:\n  rel_respects_pred (Rel\\<^sup>*) Pred\n\ngoal (1 subgoal):\n 1. rel_respects_pred ((symcl (Rel\\<^sup>=))\\<^sup>+) Pred", "from A B[where Rel=\"Rel\\<^sup>=\"] C[where Rel=\"symcl (Rel\\<^sup>=)\"]"], ["proof (chain)\npicking this:\n  rel_respects_pred (Rel\\<^sup>=) Pred\n  rel_respects_pred (Rel\\<^sup>=) Pred \\<Longrightarrow>\n  rel_respects_pred (symcl (Rel\\<^sup>=)) Pred\n  rel_respects_pred (symcl (Rel\\<^sup>=)) Pred \\<Longrightarrow>\n  rel_respects_pred ((symcl (Rel\\<^sup>=))\\<^sup>+) Pred", "show \"rel_respects_pred ((symcl (Rel\\<^sup>=))\\<^sup>+) Pred\""], ["proof (prove)\nusing this:\n  rel_respects_pred (Rel\\<^sup>=) Pred\n  rel_respects_pred (Rel\\<^sup>=) Pred \\<Longrightarrow>\n  rel_respects_pred (symcl (Rel\\<^sup>=)) Pred\n  rel_respects_pred (symcl (Rel\\<^sup>=)) Pred \\<Longrightarrow>\n  rel_respects_pred ((symcl (Rel\\<^sup>=))\\<^sup>+) Pred\n\ngoal (1 subgoal):\n 1. rel_respects_pred ((symcl (Rel\\<^sup>=))\\<^sup>+) Pred", "by blast"], ["proof (state)\nthis:\n  rel_respects_pred ((symcl (Rel\\<^sup>=))\\<^sup>+) Pred\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma respection_of_binary_predicates_and_closures:\n  fixes Rel  :: \"('a \\<times> 'a) set\"\n    and Pred :: \"'a \\<Rightarrow> 'b \\<Rightarrow> bool\"\n  assumes respection: \"rel_respects_binary_pred Rel Pred\"\n  shows \"rel_respects_binary_pred (Rel\\<^sup>=) Pred\"\n    and \"rel_respects_binary_pred (symcl Rel) Pred\"\n    and \"rel_respects_binary_pred (Rel\\<^sup>+) Pred\"\n    and \"rel_respects_binary_pred (symcl (Rel\\<^sup>=)) Pred\"\n    and \"rel_respects_binary_pred (Rel\\<^sup>*) Pred\"\n    and \"rel_respects_binary_pred ((symcl (Rel\\<^sup>=))\\<^sup>+) Pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rel_respects_binary_pred (Rel\\<^sup>=) Pred &&&\n     rel_respects_binary_pred (symcl Rel) Pred &&&\n     rel_respects_binary_pred (Rel\\<^sup>+) Pred) &&&\n    rel_respects_binary_pred (symcl (Rel\\<^sup>=)) Pred &&&\n    rel_respects_binary_pred (Rel\\<^sup>*) Pred &&&\n    rel_respects_binary_pred ((symcl (Rel\\<^sup>=))\\<^sup>+) Pred", "proof -"], ["proof (state)\ngoal (6 subgoals):\n 1. rel_respects_binary_pred (Rel\\<^sup>=) Pred\n 2. rel_respects_binary_pred (symcl Rel) Pred\n 3. rel_respects_binary_pred (Rel\\<^sup>+) Pred\n 4. rel_respects_binary_pred (symcl (Rel\\<^sup>=)) Pred\n 5. rel_respects_binary_pred (Rel\\<^sup>*) Pred\n 6. rel_respects_binary_pred ((symcl (Rel\\<^sup>=))\\<^sup>+) Pred", "from respection"], ["proof (chain)\npicking this:\n  rel_respects_binary_pred Rel Pred", "show A: \"rel_respects_binary_pred (Rel\\<^sup>=) Pred\""], ["proof (prove)\nusing this:\n  rel_respects_binary_pred Rel Pred\n\ngoal (1 subgoal):\n 1. rel_respects_binary_pred (Rel\\<^sup>=) Pred", "using preservation_of_binary_predicates_and_closures(1)[where Rel=\"Rel\" and Pred=\"Pred\"]\n            reflection_of_binary_predicates_and_closures(1)[where Rel=\"Rel\" and Pred=\"Pred\"]"], ["proof (prove)\nusing this:\n  rel_respects_binary_pred Rel Pred\n  rel_preserves_binary_pred Rel Pred \\<Longrightarrow>\n  rel_preserves_binary_pred (Rel\\<^sup>=) Pred\n  rel_reflects_binary_pred Rel Pred \\<Longrightarrow>\n  rel_reflects_binary_pred (Rel\\<^sup>=) Pred\n\ngoal (1 subgoal):\n 1. rel_respects_binary_pred (Rel\\<^sup>=) Pred", "by blast"], ["proof (state)\nthis:\n  rel_respects_binary_pred (Rel\\<^sup>=) Pred\n\ngoal (5 subgoals):\n 1. rel_respects_binary_pred (symcl Rel) Pred\n 2. rel_respects_binary_pred (Rel\\<^sup>+) Pred\n 3. rel_respects_binary_pred (symcl (Rel\\<^sup>=)) Pred\n 4. rel_respects_binary_pred (Rel\\<^sup>*) Pred\n 5. rel_respects_binary_pred ((symcl (Rel\\<^sup>=))\\<^sup>+) Pred", "have B: \"\\<And>Rel. rel_respects_binary_pred Rel Pred \\<Longrightarrow> rel_respects_binary_pred (symcl Rel) Pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       rel_respects_binary_pred Rel Pred \\<Longrightarrow>\n       rel_respects_binary_pred (symcl Rel) Pred", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Rel.\n       rel_respects_binary_pred Rel Pred \\<Longrightarrow>\n       rel_preserves_binary_pred (symcl Rel) Pred\n 2. \\<And>Rel.\n       rel_respects_binary_pred Rel Pred \\<Longrightarrow>\n       rel_reflects_binary_pred (symcl Rel) Pred", "fix Rel"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Rel.\n       rel_respects_binary_pred Rel Pred \\<Longrightarrow>\n       rel_preserves_binary_pred (symcl Rel) Pred\n 2. \\<And>Rel.\n       rel_respects_binary_pred Rel Pred \\<Longrightarrow>\n       rel_reflects_binary_pred (symcl Rel) Pred", "assume B1: \"rel_respects_binary_pred Rel Pred\""], ["proof (state)\nthis:\n  rel_respects_binary_pred Rel Pred\n\ngoal (2 subgoals):\n 1. \\<And>Rel.\n       rel_respects_binary_pred Rel Pred \\<Longrightarrow>\n       rel_preserves_binary_pred (symcl Rel) Pred\n 2. \\<And>Rel.\n       rel_respects_binary_pred Rel Pred \\<Longrightarrow>\n       rel_reflects_binary_pred (symcl Rel) Pred", "show \"rel_preserves_binary_pred (symcl Rel) Pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_preserves_binary_pred (symcl Rel) Pred", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b x.\n       (a, b) \\<in> symcl Rel \\<and> Pred a x \\<Longrightarrow> Pred b x", "fix a b x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b x.\n       (a, b) \\<in> symcl Rel \\<and> Pred a x \\<Longrightarrow> Pred b x", "assume \"(a, b) \\<in> symcl Rel\""], ["proof (state)\nthis:\n  (a, b) \\<in> symcl Rel\n\ngoal (1 subgoal):\n 1. \\<And>a b x.\n       (a, b) \\<in> symcl Rel \\<and> Pred a x \\<Longrightarrow> Pred b x", "hence \"(a, b) \\<in> Rel \\<or> (b, a) \\<in> Rel\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> symcl Rel\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> Rel \\<or> (b, a) \\<in> Rel", "by (simp add: symcl_def)"], ["proof (state)\nthis:\n  (a, b) \\<in> Rel \\<or> (b, a) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>a b x.\n       (a, b) \\<in> symcl Rel \\<and> Pred a x \\<Longrightarrow> Pred b x", "moreover"], ["proof (state)\nthis:\n  (a, b) \\<in> Rel \\<or> (b, a) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>a b x.\n       (a, b) \\<in> symcl Rel \\<and> Pred a x \\<Longrightarrow> Pred b x", "assume \"Pred a x\""], ["proof (state)\nthis:\n  Pred a x\n\ngoal (1 subgoal):\n 1. \\<And>a b x.\n       (a, b) \\<in> symcl Rel \\<and> Pred a x \\<Longrightarrow> Pred b x", "ultimately"], ["proof (chain)\npicking this:\n  (a, b) \\<in> Rel \\<or> (b, a) \\<in> Rel\n  Pred a x", "show \"Pred b x\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> Rel \\<or> (b, a) \\<in> Rel\n  Pred a x\n\ngoal (1 subgoal):\n 1. Pred b x", "using B1"], ["proof (prove)\nusing this:\n  (a, b) \\<in> Rel \\<or> (b, a) \\<in> Rel\n  Pred a x\n  rel_respects_binary_pred Rel Pred\n\ngoal (1 subgoal):\n 1. Pred b x", "by blast"], ["proof (state)\nthis:\n  Pred b x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rel_preserves_binary_pred (symcl Rel) Pred\n\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       rel_respects_binary_pred Rel Pred \\<Longrightarrow>\n       rel_reflects_binary_pred (symcl Rel) Pred", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       rel_respects_binary_pred Rel Pred \\<Longrightarrow>\n       rel_reflects_binary_pred (symcl Rel) Pred", "fix Rel"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       rel_respects_binary_pred Rel Pred \\<Longrightarrow>\n       rel_reflects_binary_pred (symcl Rel) Pred", "assume B2: \"rel_respects_binary_pred Rel Pred\""], ["proof (state)\nthis:\n  rel_respects_binary_pred Rel Pred\n\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       rel_respects_binary_pred Rel Pred \\<Longrightarrow>\n       rel_reflects_binary_pred (symcl Rel) Pred", "show \"rel_reflects_binary_pred (symcl Rel) Pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_reflects_binary_pred (symcl Rel) Pred", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b x.\n       (a, b) \\<in> symcl Rel \\<and> Pred b x \\<Longrightarrow> Pred a x", "fix a b x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b x.\n       (a, b) \\<in> symcl Rel \\<and> Pred b x \\<Longrightarrow> Pred a x", "assume \"(a, b) \\<in> symcl Rel\""], ["proof (state)\nthis:\n  (a, b) \\<in> symcl Rel\n\ngoal (1 subgoal):\n 1. \\<And>a b x.\n       (a, b) \\<in> symcl Rel \\<and> Pred b x \\<Longrightarrow> Pred a x", "hence \"(a, b) \\<in> Rel \\<or> (b, a) \\<in> Rel\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> symcl Rel\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> Rel \\<or> (b, a) \\<in> Rel", "by (simp add: symcl_def)"], ["proof (state)\nthis:\n  (a, b) \\<in> Rel \\<or> (b, a) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>a b x.\n       (a, b) \\<in> symcl Rel \\<and> Pred b x \\<Longrightarrow> Pred a x", "moreover"], ["proof (state)\nthis:\n  (a, b) \\<in> Rel \\<or> (b, a) \\<in> Rel\n\ngoal (1 subgoal):\n 1. \\<And>a b x.\n       (a, b) \\<in> symcl Rel \\<and> Pred b x \\<Longrightarrow> Pred a x", "assume \"Pred b x\""], ["proof (state)\nthis:\n  Pred b x\n\ngoal (1 subgoal):\n 1. \\<And>a b x.\n       (a, b) \\<in> symcl Rel \\<and> Pred b x \\<Longrightarrow> Pred a x", "ultimately"], ["proof (chain)\npicking this:\n  (a, b) \\<in> Rel \\<or> (b, a) \\<in> Rel\n  Pred b x", "show \"Pred a x\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> Rel \\<or> (b, a) \\<in> Rel\n  Pred b x\n\ngoal (1 subgoal):\n 1. Pred a x", "using B2"], ["proof (prove)\nusing this:\n  (a, b) \\<in> Rel \\<or> (b, a) \\<in> Rel\n  Pred b x\n  rel_respects_binary_pred Rel Pred\n\ngoal (1 subgoal):\n 1. Pred a x", "by blast"], ["proof (state)\nthis:\n  Pred a x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rel_reflects_binary_pred (symcl Rel) Pred\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rel_respects_binary_pred ?Rel Pred \\<Longrightarrow>\n  rel_respects_binary_pred (symcl ?Rel) Pred\n\ngoal (5 subgoals):\n 1. rel_respects_binary_pred (symcl Rel) Pred\n 2. rel_respects_binary_pred (Rel\\<^sup>+) Pred\n 3. rel_respects_binary_pred (symcl (Rel\\<^sup>=)) Pred\n 4. rel_respects_binary_pred (Rel\\<^sup>*) Pred\n 5. rel_respects_binary_pred ((symcl (Rel\\<^sup>=))\\<^sup>+) Pred", "from respection B[where Rel=\"Rel\"]"], ["proof (chain)\npicking this:\n  rel_respects_binary_pred Rel Pred\n  rel_respects_binary_pred Rel Pred \\<Longrightarrow>\n  rel_respects_binary_pred (symcl Rel) Pred", "show \"rel_respects_binary_pred (symcl Rel) Pred\""], ["proof (prove)\nusing this:\n  rel_respects_binary_pred Rel Pred\n  rel_respects_binary_pred Rel Pred \\<Longrightarrow>\n  rel_respects_binary_pred (symcl Rel) Pred\n\ngoal (1 subgoal):\n 1. rel_respects_binary_pred (symcl Rel) Pred", "by blast"], ["proof (state)\nthis:\n  rel_respects_binary_pred (symcl Rel) Pred\n\ngoal (4 subgoals):\n 1. rel_respects_binary_pred (Rel\\<^sup>+) Pred\n 2. rel_respects_binary_pred (symcl (Rel\\<^sup>=)) Pred\n 3. rel_respects_binary_pred (Rel\\<^sup>*) Pred\n 4. rel_respects_binary_pred ((symcl (Rel\\<^sup>=))\\<^sup>+) Pred", "have C: \"\\<And>Rel. rel_respects_binary_pred Rel Pred \\<Longrightarrow> rel_respects_binary_pred (Rel\\<^sup>+) Pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       rel_respects_binary_pred Rel Pred \\<Longrightarrow>\n       rel_respects_binary_pred (Rel\\<^sup>+) Pred", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       rel_respects_binary_pred Rel Pred \\<Longrightarrow>\n       rel_respects_binary_pred (Rel\\<^sup>+) Pred", "fix Rel"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       rel_respects_binary_pred Rel Pred \\<Longrightarrow>\n       rel_respects_binary_pred (Rel\\<^sup>+) Pred", "assume \"rel_respects_binary_pred Rel Pred\""], ["proof (state)\nthis:\n  rel_respects_binary_pred Rel Pred\n\ngoal (1 subgoal):\n 1. \\<And>Rel.\n       rel_respects_binary_pred Rel Pred \\<Longrightarrow>\n       rel_respects_binary_pred (Rel\\<^sup>+) Pred", "thus \"rel_respects_binary_pred (Rel\\<^sup>+) Pred\""], ["proof (prove)\nusing this:\n  rel_respects_binary_pred Rel Pred\n\ngoal (1 subgoal):\n 1. rel_respects_binary_pred (Rel\\<^sup>+) Pred", "using preservation_of_binary_predicates_and_closures(2)[where Rel=\"Rel\" and Pred=\"Pred\"]\n              reflection_of_binary_predicates_and_closures(2)[where Rel=\"Rel\" and Pred=\"Pred\"]"], ["proof (prove)\nusing this:\n  rel_respects_binary_pred Rel Pred\n  rel_preserves_binary_pred Rel Pred \\<Longrightarrow>\n  rel_preserves_binary_pred (Rel\\<^sup>+) Pred\n  rel_reflects_binary_pred Rel Pred \\<Longrightarrow>\n  rel_reflects_binary_pred (Rel\\<^sup>+) Pred\n\ngoal (1 subgoal):\n 1. rel_respects_binary_pred (Rel\\<^sup>+) Pred", "by blast"], ["proof (state)\nthis:\n  rel_respects_binary_pred (Rel\\<^sup>+) Pred\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rel_respects_binary_pred ?Rel Pred \\<Longrightarrow>\n  rel_respects_binary_pred (?Rel\\<^sup>+) Pred\n\ngoal (4 subgoals):\n 1. rel_respects_binary_pred (Rel\\<^sup>+) Pred\n 2. rel_respects_binary_pred (symcl (Rel\\<^sup>=)) Pred\n 3. rel_respects_binary_pred (Rel\\<^sup>*) Pred\n 4. rel_respects_binary_pred ((symcl (Rel\\<^sup>=))\\<^sup>+) Pred", "from respection C[where Rel=\"Rel\"]"], ["proof (chain)\npicking this:\n  rel_respects_binary_pred Rel Pred\n  rel_respects_binary_pred Rel Pred \\<Longrightarrow>\n  rel_respects_binary_pred (Rel\\<^sup>+) Pred", "show \"rel_respects_binary_pred (Rel\\<^sup>+) Pred\""], ["proof (prove)\nusing this:\n  rel_respects_binary_pred Rel Pred\n  rel_respects_binary_pred Rel Pred \\<Longrightarrow>\n  rel_respects_binary_pred (Rel\\<^sup>+) Pred\n\ngoal (1 subgoal):\n 1. rel_respects_binary_pred (Rel\\<^sup>+) Pred", "by blast"], ["proof (state)\nthis:\n  rel_respects_binary_pred (Rel\\<^sup>+) Pred\n\ngoal (3 subgoals):\n 1. rel_respects_binary_pred (symcl (Rel\\<^sup>=)) Pred\n 2. rel_respects_binary_pred (Rel\\<^sup>*) Pred\n 3. rel_respects_binary_pred ((symcl (Rel\\<^sup>=))\\<^sup>+) Pred", "from A B[where Rel=\"Rel\\<^sup>=\"]"], ["proof (chain)\npicking this:\n  rel_respects_binary_pred (Rel\\<^sup>=) Pred\n  rel_respects_binary_pred (Rel\\<^sup>=) Pred \\<Longrightarrow>\n  rel_respects_binary_pred (symcl (Rel\\<^sup>=)) Pred", "show \"rel_respects_binary_pred (symcl (Rel\\<^sup>=)) Pred\""], ["proof (prove)\nusing this:\n  rel_respects_binary_pred (Rel\\<^sup>=) Pred\n  rel_respects_binary_pred (Rel\\<^sup>=) Pred \\<Longrightarrow>\n  rel_respects_binary_pred (symcl (Rel\\<^sup>=)) Pred\n\ngoal (1 subgoal):\n 1. rel_respects_binary_pred (symcl (Rel\\<^sup>=)) Pred", "by blast"], ["proof (state)\nthis:\n  rel_respects_binary_pred (symcl (Rel\\<^sup>=)) Pred\n\ngoal (2 subgoals):\n 1. rel_respects_binary_pred (Rel\\<^sup>*) Pred\n 2. rel_respects_binary_pred ((symcl (Rel\\<^sup>=))\\<^sup>+) Pred", "from A C[where Rel=\"Rel\\<^sup>=\"]"], ["proof (chain)\npicking this:\n  rel_respects_binary_pred (Rel\\<^sup>=) Pred\n  rel_respects_binary_pred (Rel\\<^sup>=) Pred \\<Longrightarrow>\n  rel_respects_binary_pred ((Rel\\<^sup>=)\\<^sup>+) Pred", "show \"rel_respects_binary_pred (Rel\\<^sup>*) Pred\""], ["proof (prove)\nusing this:\n  rel_respects_binary_pred (Rel\\<^sup>=) Pred\n  rel_respects_binary_pred (Rel\\<^sup>=) Pred \\<Longrightarrow>\n  rel_respects_binary_pred ((Rel\\<^sup>=)\\<^sup>+) Pred\n\ngoal (1 subgoal):\n 1. rel_respects_binary_pred (Rel\\<^sup>*) Pred", "using trancl_reflcl[of Rel]"], ["proof (prove)\nusing this:\n  rel_respects_binary_pred (Rel\\<^sup>=) Pred\n  rel_respects_binary_pred (Rel\\<^sup>=) Pred \\<Longrightarrow>\n  rel_respects_binary_pred ((Rel\\<^sup>=)\\<^sup>+) Pred\n  (Rel\\<^sup>=)\\<^sup>+ = Rel\\<^sup>*\n\ngoal (1 subgoal):\n 1. rel_respects_binary_pred (Rel\\<^sup>*) Pred", "by fast"], ["proof (state)\nthis:\n  rel_respects_binary_pred (Rel\\<^sup>*) Pred\n\ngoal (1 subgoal):\n 1. rel_respects_binary_pred ((symcl (Rel\\<^sup>=))\\<^sup>+) Pred", "from A B[where Rel=\"Rel\\<^sup>=\"] C[where Rel=\"symcl (Rel\\<^sup>=)\"]"], ["proof (chain)\npicking this:\n  rel_respects_binary_pred (Rel\\<^sup>=) Pred\n  rel_respects_binary_pred (Rel\\<^sup>=) Pred \\<Longrightarrow>\n  rel_respects_binary_pred (symcl (Rel\\<^sup>=)) Pred\n  rel_respects_binary_pred (symcl (Rel\\<^sup>=)) Pred \\<Longrightarrow>\n  rel_respects_binary_pred ((symcl (Rel\\<^sup>=))\\<^sup>+) Pred", "show \"rel_respects_binary_pred ((symcl (Rel\\<^sup>=))\\<^sup>+) Pred\""], ["proof (prove)\nusing this:\n  rel_respects_binary_pred (Rel\\<^sup>=) Pred\n  rel_respects_binary_pred (Rel\\<^sup>=) Pred \\<Longrightarrow>\n  rel_respects_binary_pred (symcl (Rel\\<^sup>=)) Pred\n  rel_respects_binary_pred (symcl (Rel\\<^sup>=)) Pred \\<Longrightarrow>\n  rel_respects_binary_pred ((symcl (Rel\\<^sup>=))\\<^sup>+) Pred\n\ngoal (1 subgoal):\n 1. rel_respects_binary_pred ((symcl (Rel\\<^sup>=))\\<^sup>+) Pred", "by blast"], ["proof (state)\nthis:\n  rel_respects_binary_pred ((symcl (Rel\\<^sup>=))\\<^sup>+) Pred\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}